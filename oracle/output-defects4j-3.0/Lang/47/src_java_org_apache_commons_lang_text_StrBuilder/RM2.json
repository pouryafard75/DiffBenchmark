{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "TypeDeclaration[1058-92006]:TypeDeclaration[1058-92148]"
    }, {
      "left" : "static final int CAPACITY = 32;",
      "right" : "static final int CAPACITY = 32;",
      "info" : "FieldDeclaration[2875-2966]:FieldDeclaration[2875-2966]"
    }, {
      "left" : "private static final long serialVersionUID = 7628716375283629643L;",
      "right" : "private static final long serialVersionUID = 7628716375283629643L;",
      "info" : "FieldDeclaration[2972-3138]:FieldDeclaration[2972-3138]"
    }, {
      "left" : "protected char[] buffer;",
      "right" : "protected char[] buffer;",
      "info" : "FieldDeclaration[3144-3202]:FieldDeclaration[3144-3202]"
    }, {
      "left" : "protected int size;",
      "right" : "protected int size;",
      "info" : "FieldDeclaration[3207-3265]:FieldDeclaration[3207-3265]"
    }, {
      "left" : "private String newLine;",
      "right" : "private String newLine;",
      "info" : "FieldDeclaration[3270-3318]:FieldDeclaration[3270-3318]"
    }, {
      "left" : "private String nullText;",
      "right" : "private String nullText;",
      "info" : "FieldDeclaration[3323-3373]:FieldDeclaration[3323-3373]"
    }, {
      "left" : "public StrBuilder()",
      "right" : "public StrBuilder()",
      "info" : "MethodDeclaration[3457-3605]:MethodDeclaration[3457-3605]"
    }, {
      "left" : "public StrBuilder(int initialCapacity)",
      "right" : "public StrBuilder(int initialCapacity)",
      "info" : "MethodDeclaration[3611-3998]:MethodDeclaration[3611-3998]"
    }, {
      "left" : "public StrBuilder(String str)",
      "right" : "public StrBuilder(String str)",
      "info" : "MethodDeclaration[4004-4434]:MethodDeclaration[4004-4434]"
    }, {
      "left" : "public String getNewLineText()",
      "right" : "public String getNewLineText()",
      "info" : "MethodDeclaration[4518-4729]:MethodDeclaration[4518-4729]"
    }, {
      "left" : "public StrBuilder setNewLineText(String newLine)",
      "right" : "public StrBuilder setNewLineText(String newLine)",
      "info" : "MethodDeclaration[4735-5041]:MethodDeclaration[4735-5041]"
    }, {
      "left" : "public String getNullText()",
      "right" : "public String getNullText()",
      "info" : "MethodDeclaration[5125-5315]:MethodDeclaration[5125-5315]"
    }, {
      "left" : "public StrBuilder setNullText(String nullText)",
      "right" : "public StrBuilder setNullText(String nullText)",
      "info" : "MethodDeclaration[5321-5706]:MethodDeclaration[5321-5706]"
    }, {
      "left" : "public int length()",
      "right" : "public int length()",
      "info" : "MethodDeclaration[5790-5933]:MethodDeclaration[5790-5933]"
    }, {
      "left" : "public StrBuilder setLength(int length)",
      "right" : "public StrBuilder setLength(int length)",
      "info" : "MethodDeclaration[5939-6755]:MethodDeclaration[5939-6755]"
    }, {
      "left" : "public int capacity()",
      "right" : "public int capacity()",
      "info" : "MethodDeclaration[6839-7018]:MethodDeclaration[6839-7018]"
    }, {
      "left" : "public StrBuilder ensureCapacity(int capacity)",
      "right" : "public StrBuilder ensureCapacity(int capacity)",
      "info" : "MethodDeclaration[7024-7467]:MethodDeclaration[7024-7467]"
    }, {
      "left" : "public StrBuilder minimizeCapacity()",
      "right" : "public StrBuilder minimizeCapacity()",
      "info" : "MethodDeclaration[7473-7846]:MethodDeclaration[7473-7846]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[7930-8190]:MethodDeclaration[7930-8190]"
    }, {
      "left" : "public boolean isEmpty()",
      "right" : "public boolean isEmpty()",
      "info" : "MethodDeclaration[8196-8558]:MethodDeclaration[8196-8558]"
    }, {
      "left" : "public StrBuilder clear()",
      "right" : "public StrBuilder clear()",
      "info" : "MethodDeclaration[8564-9093]:MethodDeclaration[8564-9093]"
    }, {
      "left" : "public char charAt(int index)",
      "right" : "public char charAt(int index)",
      "info" : "MethodDeclaration[9177-9665]:MethodDeclaration[9177-9665]"
    }, {
      "left" : "public StrBuilder setCharAt(int index, char ch)",
      "right" : "public StrBuilder setCharAt(int index, char ch)",
      "info" : "MethodDeclaration[9671-10201]:MethodDeclaration[9671-10201]"
    }, {
      "left" : "public StrBuilder deleteCharAt(int index)",
      "right" : "public StrBuilder deleteCharAt(int index)",
      "info" : "MethodDeclaration[10207-10713]:MethodDeclaration[10207-10713]"
    }, {
      "left" : "public char[] toCharArray()",
      "right" : "public char[] toCharArray()",
      "info" : "MethodDeclaration[10797-11196]:MethodDeclaration[10797-11196]"
    }, {
      "left" : "public char[] toCharArray(int startIndex, int endIndex)",
      "right" : "public char[] toCharArray(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[11202-12082]:MethodDeclaration[11202-12082]"
    }, {
      "left" : "public char[] getChars(char[] destination)",
      "right" : "public char[] getChars(char[] destination)",
      "info" : "MethodDeclaration[12088-12605]:MethodDeclaration[12088-12605]"
    }, {
      "left" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "right" : "public void getChars(int startIndex, int endIndex, char destination[], int destinationIndex)",
      "info" : "MethodDeclaration[12611-13653]:MethodDeclaration[12611-13653]"
    }, {
      "left" : "public StrBuilder appendNewLine()",
      "right" : "public StrBuilder appendNewLine()",
      "info" : "MethodDeclaration[13737-14246]:MethodDeclaration[13737-14246]"
    }, {
      "left" : "public StrBuilder appendNull()",
      "right" : "public StrBuilder appendNull()",
      "info" : "MethodDeclaration[14252-14533]:MethodDeclaration[14252-14533]"
    }, {
      "left" : "public StrBuilder append(Object obj)",
      "right" : "public StrBuilder append(Object obj)",
      "info" : "MethodDeclaration[14539-14908]:MethodDeclaration[14539-14908]"
    }, {
      "left" : "public StrBuilder append(String str)",
      "right" : "public StrBuilder append(String str)",
      "info" : "MethodDeclaration[14914-15478]:MethodDeclaration[14914-15478]"
    }, {
      "left" : "public StrBuilder append(String str, int startIndex, int length)",
      "right" : "public StrBuilder append(String str, int startIndex, int length)",
      "info" : "MethodDeclaration[15484-16504]:MethodDeclaration[15484-16504]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str)",
      "right" : "public StrBuilder append(StringBuffer str)",
      "info" : "MethodDeclaration[16510-17094]:MethodDeclaration[16510-17094]"
    }, {
      "left" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "right" : "public StrBuilder append(StringBuffer str, int startIndex, int length)",
      "info" : "MethodDeclaration[17100-18133]:MethodDeclaration[17100-18133]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str)",
      "right" : "public StrBuilder append(StrBuilder str)",
      "info" : "MethodDeclaration[18139-18745]:MethodDeclaration[18139-18745]"
    }, {
      "left" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "right" : "public StrBuilder append(StrBuilder str, int startIndex, int length)",
      "info" : "MethodDeclaration[18751-19783]:MethodDeclaration[18751-19783]"
    }, {
      "left" : "public StrBuilder append(char[] chars)",
      "right" : "public StrBuilder append(char[] chars)",
      "info" : "MethodDeclaration[19789-20377]:MethodDeclaration[19789-20377]"
    }, {
      "left" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "right" : "public StrBuilder append(char[] chars, int startIndex, int length)",
      "info" : "MethodDeclaration[20383-21416]:MethodDeclaration[20383-21416]"
    }, {
      "left" : "public StrBuilder append(boolean value)",
      "right" : "public StrBuilder append(boolean value)",
      "info" : "MethodDeclaration[21422-22078]:MethodDeclaration[21422-22078]"
    }, {
      "left" : "public StrBuilder append(char ch)",
      "right" : "public StrBuilder append(char ch)",
      "info" : "MethodDeclaration[22084-22388]:MethodDeclaration[22084-22388]"
    }, {
      "left" : "public StrBuilder append(int value)",
      "right" : "public StrBuilder append(int value)",
      "info" : "MethodDeclaration[22394-22672]:MethodDeclaration[22394-22672]"
    }, {
      "left" : "public StrBuilder append(long value)",
      "right" : "public StrBuilder append(long value)",
      "info" : "MethodDeclaration[22678-22957]:MethodDeclaration[22678-22957]"
    }, {
      "left" : "public StrBuilder append(float value)",
      "right" : "public StrBuilder append(float value)",
      "info" : "MethodDeclaration[22963-23244]:MethodDeclaration[22963-23244]"
    }, {
      "left" : "public StrBuilder append(double value)",
      "right" : "public StrBuilder append(double value)",
      "info" : "MethodDeclaration[23250-23533]:MethodDeclaration[23250-23533]"
    }, {
      "left" : "public StrBuilder appendln(Object obj)",
      "right" : "public StrBuilder appendln(Object obj)",
      "info" : "MethodDeclaration[23617-23955]:MethodDeclaration[23617-23955]"
    }, {
      "left" : "public StrBuilder appendln(String str)",
      "right" : "public StrBuilder appendln(String str)",
      "info" : "MethodDeclaration[23961-24298]:MethodDeclaration[23961-24298]"
    }, {
      "left" : "public StrBuilder appendln(String str, int startIndex, int length)",
      "right" : "public StrBuilder appendln(String str, int startIndex, int length)",
      "info" : "MethodDeclaration[24304-24823]:MethodDeclaration[24304-24823]"
    }, {
      "left" : "public StrBuilder appendln(StringBuffer str)",
      "right" : "public StrBuilder appendln(StringBuffer str)",
      "info" : "MethodDeclaration[24829-25186]:MethodDeclaration[24829-25186]"
    }, {
      "left" : "public StrBuilder appendln(StringBuffer str, int startIndex, int length)",
      "right" : "public StrBuilder appendln(StringBuffer str, int startIndex, int length)",
      "info" : "MethodDeclaration[25192-25724]:MethodDeclaration[25192-25724]"
    }, {
      "left" : "public StrBuilder appendln(StrBuilder str)",
      "right" : "public StrBuilder appendln(StrBuilder str)",
      "info" : "MethodDeclaration[25730-26093]:MethodDeclaration[25730-26093]"
    }, {
      "left" : "public StrBuilder appendln(StrBuilder str, int startIndex, int length)",
      "right" : "public StrBuilder appendln(StrBuilder str, int startIndex, int length)",
      "info" : "MethodDeclaration[26099-26630]:MethodDeclaration[26099-26630]"
    }, {
      "left" : "public StrBuilder appendln(char[] chars)",
      "right" : "public StrBuilder appendln(char[] chars)",
      "info" : "MethodDeclaration[26636-26986]:MethodDeclaration[26636-26986]"
    }, {
      "left" : "public StrBuilder appendln(char[] chars, int startIndex, int length)",
      "right" : "public StrBuilder appendln(char[] chars, int startIndex, int length)",
      "info" : "MethodDeclaration[26992-27516]:MethodDeclaration[26992-27516]"
    }, {
      "left" : "public StrBuilder appendln(boolean value)",
      "right" : "public StrBuilder appendln(boolean value)",
      "info" : "MethodDeclaration[27522-27816]:MethodDeclaration[27522-27816]"
    }, {
      "left" : "public StrBuilder appendln(char ch)",
      "right" : "public StrBuilder appendln(char ch)",
      "info" : "MethodDeclaration[27822-28101]:MethodDeclaration[27822-28101]"
    }, {
      "left" : "public StrBuilder appendln(int value)",
      "right" : "public StrBuilder appendln(int value)",
      "info" : "MethodDeclaration[28107-28428]:MethodDeclaration[28107-28428]"
    }, {
      "left" : "public StrBuilder appendln(long value)",
      "right" : "public StrBuilder appendln(long value)",
      "info" : "MethodDeclaration[28434-28756]:MethodDeclaration[28434-28756]"
    }, {
      "left" : "public StrBuilder appendln(float value)",
      "right" : "public StrBuilder appendln(float value)",
      "info" : "MethodDeclaration[28762-29086]:MethodDeclaration[28762-29086]"
    }, {
      "left" : "public StrBuilder appendln(double value)",
      "right" : "public StrBuilder appendln(double value)",
      "info" : "MethodDeclaration[29092-29418]:MethodDeclaration[29092-29418]"
    }, {
      "left" : "public StrBuilder appendAll(Object[] array)",
      "right" : "public StrBuilder appendAll(Object[] array)",
      "info" : "MethodDeclaration[29502-30045]:MethodDeclaration[29502-30045]"
    }, {
      "left" : "public StrBuilder appendAll(Collection coll)",
      "right" : "public StrBuilder appendAll(Collection coll)",
      "info" : "MethodDeclaration[30051-30632]:MethodDeclaration[30051-30632]"
    }, {
      "left" : "public StrBuilder appendAll(Iterator it)",
      "right" : "public StrBuilder appendAll(Iterator it)",
      "info" : "MethodDeclaration[30638-31144]:MethodDeclaration[30638-31144]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Object[] array, String separator)",
      "info" : "MethodDeclaration[31228-32018]:MethodDeclaration[31228-32018]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Collection coll, String separator)",
      "info" : "MethodDeclaration[32024-32880]:MethodDeclaration[32024-32880]"
    }, {
      "left" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "right" : "public StrBuilder appendWithSeparators(Iterator it, String separator)",
      "info" : "MethodDeclaration[32886-33667]:MethodDeclaration[32886-33667]"
    }, {
      "left" : "public StrBuilder appendSeparator(String separator)",
      "right" : "public StrBuilder appendSeparator(String separator)",
      "info" : "MethodDeclaration[33751-34642]:MethodDeclaration[33751-34642]"
    }, {
      "left" : "public StrBuilder appendSeparator(char separator)",
      "right" : "public StrBuilder appendSeparator(char separator)",
      "info" : "MethodDeclaration[34648-35434]:MethodDeclaration[34648-35434]"
    }, {
      "left" : "public StrBuilder appendSeparator(String separator, int loopIndex)",
      "right" : "public StrBuilder appendSeparator(String separator, int loopIndex)",
      "info" : "MethodDeclaration[35440-36396]:MethodDeclaration[35440-36396]"
    }, {
      "left" : "public StrBuilder appendSeparator(char separator, int loopIndex)",
      "right" : "public StrBuilder appendSeparator(char separator, int loopIndex)",
      "info" : "MethodDeclaration[36402-37253]:MethodDeclaration[36402-37253]"
    }, {
      "left" : "public StrBuilder appendPadding(int length, char padChar)",
      "right" : "public StrBuilder appendPadding(int length, char padChar)",
      "info" : "MethodDeclaration[37337-37865]:MethodDeclaration[37337-37865]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[37949-39153]:MethodDeclaration[37949-39224]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadLeft(int value, int width, char padChar)",
      "info" : "MethodDeclaration[39159-39792]:MethodDeclaration[39230-39863]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar)",
      "info" : "MethodDeclaration[39798-40988]:MethodDeclaration[39869-41130]"
    }, {
      "left" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "right" : "public StrBuilder appendFixedWidthPadRight(int value, int width, char padChar)",
      "info" : "MethodDeclaration[40994-41623]:MethodDeclaration[41136-41765]"
    }, {
      "left" : "public StrBuilder insert(int index, Object obj)",
      "right" : "public StrBuilder insert(int index, Object obj)",
      "info" : "MethodDeclaration[41707-42245]:MethodDeclaration[41849-42387]"
    }, {
      "left" : "public StrBuilder insert(int index, String str)",
      "right" : "public StrBuilder insert(int index, String str)",
      "info" : "MethodDeclaration[42251-43082]:MethodDeclaration[42393-43224]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[])",
      "right" : "public StrBuilder insert(int index, char chars[])",
      "info" : "MethodDeclaration[43088-43892]:MethodDeclaration[43230-44034]"
    }, {
      "left" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "right" : "public StrBuilder insert(int index, char chars[], int offset, int length)",
      "info" : "MethodDeclaration[43898-45193]:MethodDeclaration[44040-45335]"
    }, {
      "left" : "public StrBuilder insert(int index, boolean value)",
      "right" : "public StrBuilder insert(int index, boolean value)",
      "info" : "MethodDeclaration[45199-46214]:MethodDeclaration[45341-46356]"
    }, {
      "left" : "public StrBuilder insert(int index, char value)",
      "right" : "public StrBuilder insert(int index, char value)",
      "info" : "MethodDeclaration[46220-46750]:MethodDeclaration[46362-46892]"
    }, {
      "left" : "public StrBuilder insert(int index, int value)",
      "right" : "public StrBuilder insert(int index, int value)",
      "info" : "MethodDeclaration[46756-47132]:MethodDeclaration[46898-47274]"
    }, {
      "left" : "public StrBuilder insert(int index, long value)",
      "right" : "public StrBuilder insert(int index, long value)",
      "info" : "MethodDeclaration[47138-47515]:MethodDeclaration[47280-47657]"
    }, {
      "left" : "public StrBuilder insert(int index, float value)",
      "right" : "public StrBuilder insert(int index, float value)",
      "info" : "MethodDeclaration[47521-47899]:MethodDeclaration[47663-48041]"
    }, {
      "left" : "public StrBuilder insert(int index, double value)",
      "right" : "public StrBuilder insert(int index, double value)",
      "info" : "MethodDeclaration[47905-48284]:MethodDeclaration[48047-48426]"
    }, {
      "left" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "right" : "private void deleteImpl(int startIndex, int endIndex, int len)",
      "info" : "MethodDeclaration[48368-48856]:MethodDeclaration[48510-48998]"
    }, {
      "left" : "public StrBuilder delete(int startIndex, int endIndex)",
      "right" : "public StrBuilder delete(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[48862-49515]:MethodDeclaration[49004-49657]"
    }, {
      "left" : "public StrBuilder deleteAll(char ch)",
      "right" : "public StrBuilder deleteAll(char ch)",
      "info" : "MethodDeclaration[49599-50221]:MethodDeclaration[49741-50363]"
    }, {
      "left" : "public StrBuilder deleteFirst(char ch)",
      "right" : "public StrBuilder deleteFirst(char ch)",
      "info" : "MethodDeclaration[50227-50627]:MethodDeclaration[50369-50769]"
    }, {
      "left" : "public StrBuilder deleteAll(String str)",
      "right" : "public StrBuilder deleteAll(String str)",
      "info" : "MethodDeclaration[50711-51237]:MethodDeclaration[50853-51379]"
    }, {
      "left" : "public StrBuilder deleteFirst(String str)",
      "right" : "public StrBuilder deleteFirst(String str)",
      "info" : "MethodDeclaration[51243-51723]:MethodDeclaration[51385-51865]"
    }, {
      "left" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "right" : "public StrBuilder deleteAll(StrMatcher matcher)",
      "info" : "MethodDeclaration[51807-52334]:MethodDeclaration[51949-52476]"
    }, {
      "left" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "right" : "public StrBuilder deleteFirst(StrMatcher matcher)",
      "info" : "MethodDeclaration[52340-52866]:MethodDeclaration[52482-53008]"
    }, {
      "left" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "right" : "private void replaceImpl(int startIndex, int endIndex, int removeLen, String insertStr, int insertLen)",
      "info" : "MethodDeclaration[52950-53932]:MethodDeclaration[53092-54074]"
    }, {
      "left" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "right" : "public StrBuilder replace(int startIndex, int endIndex, String replaceStr)",
      "info" : "MethodDeclaration[53938-54813]:MethodDeclaration[54080-54955]"
    }, {
      "left" : "public StrBuilder replaceAll(char search, char replace)",
      "right" : "public StrBuilder replaceAll(char search, char replace)",
      "info" : "MethodDeclaration[54897-55431]:MethodDeclaration[55039-55573]"
    }, {
      "left" : "public StrBuilder replaceFirst(char search, char replace)",
      "right" : "public StrBuilder replaceFirst(char search, char replace)",
      "info" : "MethodDeclaration[55437-56014]:MethodDeclaration[55579-56156]"
    }, {
      "left" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceAll(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[56098-56930]:MethodDeclaration[56240-57072]"
    }, {
      "left" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(String searchStr, String replaceStr)",
      "info" : "MethodDeclaration[56936-57706]:MethodDeclaration[57078-57848]"
    }, {
      "left" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceAll(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[57790-58433]:MethodDeclaration[57932-58575]"
    }, {
      "left" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "right" : "public StrBuilder replaceFirst(StrMatcher matcher, String replaceStr)",
      "info" : "MethodDeclaration[58439-59072]:MethodDeclaration[58581-59214]"
    }, {
      "left" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "right" : "public StrBuilder replace(\n            StrMatcher matcher, String replaceStr,\n            int startIndex, int endIndex, int replaceCount)",
      "info" : "MethodDeclaration[59157-60283]:MethodDeclaration[59299-60425]"
    }, {
      "left" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "right" : "private StrBuilder replaceImpl(\n            StrMatcher matcher, String replaceStr,\n            int from, int to, int replaceCount)",
      "info" : "MethodDeclaration[60289-61810]:MethodDeclaration[60431-61952]"
    }, {
      "left" : "public StrBuilder reverse()",
      "right" : "public StrBuilder reverse()",
      "info" : "MethodDeclaration[61894-62437]:MethodDeclaration[62036-62579]"
    }, {
      "left" : "public StrBuilder trim()",
      "right" : "public StrBuilder trim()",
      "info" : "MethodDeclaration[62521-63168]:MethodDeclaration[62663-63310]"
    }, {
      "left" : "public boolean startsWith(String str)",
      "right" : "public boolean startsWith(String str)",
      "info" : "MethodDeclaration[63252-63972]:MethodDeclaration[63394-64114]"
    }, {
      "left" : "public boolean endsWith(String str)",
      "right" : "public boolean endsWith(String str)",
      "info" : "MethodDeclaration[63978-64730]:MethodDeclaration[64120-64872]"
    }, {
      "left" : "public String substring(int start)",
      "right" : "public String substring(int start)",
      "info" : "MethodDeclaration[64814-65139]:MethodDeclaration[64956-65281]"
    }, {
      "left" : "public String substring(int startIndex, int endIndex)",
      "right" : "public String substring(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[65145-65916]:MethodDeclaration[65287-66058]"
    }, {
      "left" : "public String leftString(int length)",
      "right" : "public String leftString(int length)",
      "info" : "MethodDeclaration[65922-66682]:MethodDeclaration[66064-66824]"
    }, {
      "left" : "public String rightString(int length)",
      "right" : "public String rightString(int length)",
      "info" : "MethodDeclaration[66688-67463]:MethodDeclaration[66830-67605]"
    }, {
      "left" : "public String midString(int index, int length)",
      "right" : "public String midString(int index, int length)",
      "info" : "MethodDeclaration[67469-68649]:MethodDeclaration[67611-68791]"
    }, {
      "left" : "public boolean contains(char ch)",
      "right" : "public boolean contains(char ch)",
      "info" : "MethodDeclaration[68733-69149]:MethodDeclaration[68875-69291]"
    }, {
      "left" : "public boolean contains(String str)",
      "right" : "public boolean contains(String str)",
      "info" : "MethodDeclaration[69155-69418]:MethodDeclaration[69297-69560]"
    }, {
      "left" : "public boolean contains(StrMatcher matcher)",
      "right" : "public boolean contains(StrMatcher matcher)",
      "info" : "MethodDeclaration[69424-69946]:MethodDeclaration[69566-70088]"
    }, {
      "left" : "public int indexOf(char ch)",
      "right" : "public int indexOf(char ch)",
      "info" : "MethodDeclaration[70030-70314]:MethodDeclaration[70172-70456]"
    }, {
      "left" : "public int indexOf(char ch, int startIndex)",
      "right" : "public int indexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[70320-70979]:MethodDeclaration[70462-71121]"
    }, {
      "left" : "public int indexOf(String str)",
      "right" : "public int indexOf(String str)",
      "info" : "MethodDeclaration[70985-71388]:MethodDeclaration[71127-71530]"
    }, {
      "left" : "public int indexOf(String str, int startIndex)",
      "right" : "public int indexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[71394-72657]:MethodDeclaration[71536-72799]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher)",
      "right" : "public int indexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[72663-73144]:MethodDeclaration[72805-73286]"
    }, {
      "left" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int indexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[73150-74105]:MethodDeclaration[73292-74247]"
    }, {
      "left" : "public int lastIndexOf(char ch)",
      "right" : "public int lastIndexOf(char ch)",
      "info" : "MethodDeclaration[74189-74486]:MethodDeclaration[74331-74628]"
    }, {
      "left" : "public int lastIndexOf(char ch, int startIndex)",
      "right" : "public int lastIndexOf(char ch, int startIndex)",
      "info" : "MethodDeclaration[74492-75124]:MethodDeclaration[74634-75266]"
    }, {
      "left" : "public int lastIndexOf(String str)",
      "right" : "public int lastIndexOf(String str)",
      "info" : "MethodDeclaration[75130-75546]:MethodDeclaration[75272-75688]"
    }, {
      "left" : "public int lastIndexOf(String str, int startIndex)",
      "right" : "public int lastIndexOf(String str, int startIndex)",
      "info" : "MethodDeclaration[75552-76820]:MethodDeclaration[75694-76962]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher)",
      "right" : "public int lastIndexOf(StrMatcher matcher)",
      "info" : "MethodDeclaration[76826-77316]:MethodDeclaration[76968-77458]"
    }, {
      "left" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "right" : "public int lastIndexOf(StrMatcher matcher, int startIndex)",
      "info" : "MethodDeclaration[77322-78296]:MethodDeclaration[77464-78438]"
    }, {
      "left" : "public StrTokenizer asTokenizer()",
      "right" : "public StrTokenizer asTokenizer()",
      "info" : "MethodDeclaration[78380-80104]:MethodDeclaration[78522-80246]"
    }, {
      "left" : "public Reader asReader()",
      "right" : "public Reader asReader()",
      "info" : "MethodDeclaration[80188-81104]:MethodDeclaration[80330-81246]"
    }, {
      "left" : "public Writer asWriter()",
      "right" : "public Writer asWriter()",
      "info" : "MethodDeclaration[81188-82195]:MethodDeclaration[81330-82337]"
    }, {
      "left" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "right" : "public boolean equalsIgnoreCase(StrBuilder other)",
      "info" : "MethodDeclaration[83537-84384]:MethodDeclaration[83679-84526]"
    }, {
      "left" : "public boolean equals(StrBuilder other)",
      "right" : "public boolean equals(StrBuilder other)",
      "info" : "MethodDeclaration[84390-85103]:MethodDeclaration[84532-85245]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[85109-85549]:MethodDeclaration[85251-85691]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[85555-85852]:MethodDeclaration[85697-85994]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[85936-86311]:MethodDeclaration[86078-86453]"
    }, {
      "left" : "public StringBuffer toStringBuffer()",
      "right" : "public StringBuffer toStringBuffer()",
      "info" : "MethodDeclaration[86317-86613]:MethodDeclaration[86459-86755]"
    }, {
      "left" : "protected int validateRange(int startIndex, int endIndex)",
      "right" : "protected int validateRange(int startIndex, int endIndex)",
      "info" : "MethodDeclaration[86697-87457]:MethodDeclaration[86839-87599]"
    }, {
      "left" : "protected void validateIndex(int index)",
      "right" : "protected void validateIndex(int index)",
      "info" : "MethodDeclaration[87463-87826]:MethodDeclaration[87605-87968]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "TypeDeclaration[87910-88736]:TypeDeclaration[88052-88878]"
    }, {
      "left" : "StrBuilderTokenizer()",
      "right" : "StrBuilderTokenizer()",
      "info" : "MethodDeclaration[88050-88133]:MethodDeclaration[88192-88275]"
    }, {
      "left" : "protected List tokenize(char[] chars, int offset, int count)",
      "right" : "protected List tokenize(char[] chars, int offset, int count)",
      "info" : "MethodDeclaration[88143-88463]:MethodDeclaration[88285-88605]"
    }, {
      "left" : "public String getContent()",
      "right" : "public String getContent()",
      "info" : "MethodDeclaration[88473-88730]:MethodDeclaration[88615-88872]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "TypeDeclaration[88820-90848]:TypeDeclaration[88962-90990]"
    }, {
      "left" : "private int pos;",
      "right" : "private int pos;",
      "info" : "FieldDeclaration[88947-89007]:FieldDeclaration[89089-89149]"
    }, {
      "left" : "private int mark;",
      "right" : "private int mark;",
      "info" : "FieldDeclaration[89016-89072]:FieldDeclaration[89158-89214]"
    }, {
      "left" : "StrBuilderReader()",
      "right" : "StrBuilderReader()",
      "info" : "MethodDeclaration[89082-89162]:MethodDeclaration[89224-89304]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[89172-89258]:MethodDeclaration[89314-89400]"
    }, {
      "left" : "public int read()",
      "right" : "public int read()",
      "info" : "MethodDeclaration[89268-89453]:MethodDeclaration[89410-89595]"
    }, {
      "left" : "public int read(char b[], int off, int len)",
      "right" : "public int read(char b[], int off, int len)",
      "info" : "MethodDeclaration[89463-90109]:MethodDeclaration[89605-90251]"
    }, {
      "left" : "public long skip(long n)",
      "right" : "public long skip(long n)",
      "info" : "MethodDeclaration[90119-90409]:MethodDeclaration[90261-90551]"
    }, {
      "left" : "public boolean ready()",
      "right" : "public boolean ready()",
      "info" : "MethodDeclaration[90419-90531]:MethodDeclaration[90561-90673]"
    }, {
      "left" : "public boolean markSupported()",
      "right" : "public boolean markSupported()",
      "info" : "MethodDeclaration[90541-90637]:MethodDeclaration[90683-90779]"
    }, {
      "left" : "public void mark(int readAheadLimit)",
      "right" : "public void mark(int readAheadLimit)",
      "info" : "MethodDeclaration[90647-90748]:MethodDeclaration[90789-90890]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[90758-90842]:MethodDeclaration[90900-90984]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "TypeDeclaration[90932-92003]:TypeDeclaration[91074-92145]"
    }, {
      "left" : "StrBuilderWriter()",
      "right" : "StrBuilderWriter()",
      "info" : "MethodDeclaration[91060-91140]:MethodDeclaration[91202-91282]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[91150-91236]:MethodDeclaration[91292-91378]"
    }, {
      "left" : "public void flush()",
      "right" : "public void flush()",
      "info" : "MethodDeclaration[91246-91332]:MethodDeclaration[91388-91474]"
    }, {
      "left" : "public void write(int c)",
      "right" : "public void write(int c)",
      "info" : "MethodDeclaration[91342-91453]:MethodDeclaration[91484-91595]"
    }, {
      "left" : "public void write(char[] cbuf)",
      "right" : "public void write(char[] cbuf)",
      "info" : "MethodDeclaration[91463-91576]:MethodDeclaration[91605-91718]"
    }, {
      "left" : "public void write(char[] cbuf, int off, int len)",
      "right" : "public void write(char[] cbuf, int off, int len)",
      "info" : "MethodDeclaration[91586-91727]:MethodDeclaration[91728-91869]"
    }, {
      "left" : "public void write(String str)",
      "right" : "public void write(String str)",
      "info" : "MethodDeclaration[91737-91848]:MethodDeclaration[91879-91990]"
    }, {
      "left" : "public void write(String str, int off, int len)",
      "right" : "public void write(String str, int off, int len)",
      "info" : "MethodDeclaration[91858-91997]:MethodDeclaration[92000-92139]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2823-2829]:Modifier[2823-2829]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2830-2835]:TYPE_DECLARATION_KIND[2830-2835]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[2836-2846]:SimpleName[2836-2846]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[2858-2867]:SimpleType[2858-2867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3554-3560]:Modifier[3554-3560]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[3561-3571]:SimpleName[3561-3571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3574-3605]:Block[3574-3605]"
    }, {
      "left" : "this(CAPACITY);",
      "right" : "this(CAPACITY);",
      "info" : "ConstructorInvocation[3584-3599]:ConstructorInvocation[3584-3599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3805-3811]:Modifier[3805-3811]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[3812-3822]:SimpleName[3812-3822]"
    }, {
      "left" : "int initialCapacity",
      "right" : "int initialCapacity",
      "info" : "SingleVariableDeclaration[3823-3842]:SingleVariableDeclaration[3823-3842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3844-3998]:Block[3844-3998]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[3854-3862]:SuperConstructorInvocation[3854-3862]"
    }, {
      "left" : "if (initialCapacity <= 0)",
      "right" : "if (initialCapacity <= 0)",
      "info" : "IfStatement[3871-3948]:IfStatement[3871-3948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3897-3948]:Block[3897-3948]"
    }, {
      "left" : "initialCapacity = CAPACITY;",
      "right" : "initialCapacity = CAPACITY;",
      "info" : "ExpressionStatement[3911-3938]:ExpressionStatement[3911-3938]"
    }, {
      "left" : "buffer = new char[initialCapacity];",
      "right" : "buffer = new char[initialCapacity];",
      "info" : "ExpressionStatement[3957-3992]:ExpressionStatement[3957-3992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4204-4210]:Modifier[4204-4210]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleName[4211-4221]:SimpleName[4211-4221]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[4222-4232]:SingleVariableDeclaration[4222-4232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4234-4434]:Block[4234-4434]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4244-4252]:SuperConstructorInvocation[4244-4252]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[4261-4428]:IfStatement[4261-4428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4278-4330]:Block[4278-4330]"
    }, {
      "left" : "buffer = new char[CAPACITY];",
      "right" : "buffer = new char[CAPACITY];",
      "info" : "ExpressionStatement[4292-4320]:ExpressionStatement[4292-4320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4336-4428]:Block[4336-4428]"
    }, {
      "left" : "buffer = new char[str.length() + CAPACITY];",
      "right" : "buffer = new char[str.length() + CAPACITY];",
      "info" : "ExpressionStatement[4350-4393]:ExpressionStatement[4350-4393]"
    }, {
      "left" : "append(str);",
      "right" : "append(str);",
      "info" : "ExpressionStatement[4406-4418]:ExpressionStatement[4406-4418]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4667-4673]:Modifier[4667-4673]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4674-4680]:SimpleType[4674-4680]"
    }, {
      "left" : "getNewLineText",
      "right" : "getNewLineText",
      "info" : "SimpleName[4681-4695]:SimpleName[4681-4695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4698-4729]:Block[4698-4729]"
    }, {
      "left" : "return newLine;",
      "right" : "return newLine;",
      "info" : "ReturnStatement[4708-4723]:ReturnStatement[4708-4723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4932-4938]:Modifier[4932-4938]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[4939-4949]:SimpleType[4939-4949]"
    }, {
      "left" : "setNewLineText",
      "right" : "setNewLineText",
      "info" : "SimpleName[4950-4964]:SimpleName[4950-4964]"
    }, {
      "left" : "String newLine",
      "right" : "String newLine",
      "info" : "SingleVariableDeclaration[4965-4979]:SingleVariableDeclaration[4965-4979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4981-5041]:Block[4981-5041]"
    }, {
      "left" : "this.newLine = newLine;",
      "right" : "this.newLine = newLine;",
      "info" : "ExpressionStatement[4991-5014]:ExpressionStatement[4991-5014]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5023-5035]:ReturnStatement[5023-5035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5255-5261]:Modifier[5255-5261]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5262-5268]:SimpleType[5262-5268]"
    }, {
      "left" : "getNullText",
      "right" : "getNullText",
      "info" : "SimpleName[5269-5280]:SimpleName[5269-5280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5283-5315]:Block[5283-5315]"
    }, {
      "left" : "return nullText;",
      "right" : "return nullText;",
      "info" : "ReturnStatement[5293-5309]:ReturnStatement[5293-5309]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5500-5506]:Modifier[5500-5506]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[5507-5517]:SimpleType[5507-5517]"
    }, {
      "left" : "setNullText",
      "right" : "setNullText",
      "info" : "SimpleName[5518-5529]:SimpleName[5518-5529]"
    }, {
      "left" : "String nullText",
      "right" : "String nullText",
      "info" : "SingleVariableDeclaration[5530-5545]:SingleVariableDeclaration[5530-5545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5547-5706]:Block[5547-5706]"
    }, {
      "left" : "if (nullText != null && nullText.length() == 0)",
      "right" : "if (nullText != null && nullText.length() == 0)",
      "info" : "IfStatement[5557-5645]:IfStatement[5557-5645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5605-5645]:Block[5605-5645]"
    }, {
      "left" : "nullText = null;",
      "right" : "nullText = null;",
      "info" : "ExpressionStatement[5619-5635]:ExpressionStatement[5619-5635]"
    }, {
      "left" : "this.nullText = nullText;",
      "right" : "this.nullText = nullText;",
      "info" : "ExpressionStatement[5654-5679]:ExpressionStatement[5654-5679]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5688-5700]:ReturnStatement[5688-5700]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5885-5891]:Modifier[5885-5891]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5892-5895]:PrimitiveType[5892-5895]"
    }, {
      "left" : "length",
      "right" : "length",
      "info" : "SimpleName[5896-5902]:SimpleName[5896-5902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5905-5933]:Block[5905-5933]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[5915-5927]:ReturnStatement[5915-5927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6259-6265]:Modifier[6259-6265]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[6266-6276]:SimpleType[6266-6276]"
    }, {
      "left" : "setLength",
      "right" : "setLength",
      "info" : "SimpleName[6277-6286]:SimpleName[6277-6286]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[6287-6297]:SingleVariableDeclaration[6287-6297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6299-6755]:Block[6299-6755]"
    }, {
      "left" : "if (length < 0)",
      "right" : "if (length < 0)",
      "info" : "IfStatement[6309-6399]:IfStatement[6309-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6325-6399]:Block[6325-6399]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(length);",
      "right" : "throw new StringIndexOutOfBoundsException(length);",
      "info" : "ThrowStatement[6339-6389]:ThrowStatement[6339-6389]"
    }, {
      "left" : "if (length < size)",
      "right" : "if (length < size)",
      "info" : "IfStatement[6408-6728]:IfStatement[6408-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6427-6465]:Block[6427-6465]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6441-6455]:ExpressionStatement[6441-6455]"
    }, {
      "left" : "if (length > size)",
      "right" : "if (length > size)",
      "info" : "IfStatement[6471-6728]:IfStatement[6471-6728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6490-6728]:Block[6490-6728]"
    }, {
      "left" : "ensureCapacity(length);",
      "right" : "ensureCapacity(length);",
      "info" : "ExpressionStatement[6504-6527]:ExpressionStatement[6504-6527]"
    }, {
      "left" : "int oldEnd = size;",
      "right" : "int oldEnd = size;",
      "info" : "VariableDeclarationStatement[6540-6558]:VariableDeclarationStatement[6540-6558]"
    }, {
      "left" : "int newEnd = length;",
      "right" : "int newEnd = length;",
      "info" : "VariableDeclarationStatement[6571-6591]:VariableDeclarationStatement[6571-6591]"
    }, {
      "left" : "size = length;",
      "right" : "size = length;",
      "info" : "ExpressionStatement[6604-6618]:ExpressionStatement[6604-6618]"
    }, {
      "left" : "for (int i = oldEnd; i < newEnd; i++)",
      "right" : "for (int i = oldEnd; i < newEnd; i++)",
      "info" : "ForStatement[6631-6718]:ForStatement[6631-6718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6669-6718]:Block[6669-6718]"
    }, {
      "left" : "buffer[i] = '\\0';",
      "right" : "buffer[i] = '\\0';",
      "info" : "ExpressionStatement[6687-6704]:ExpressionStatement[6687-6704]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6737-6749]:ReturnStatement[6737-6749]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6959-6965]:Modifier[6959-6965]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6966-6969]:PrimitiveType[6966-6969]"
    }, {
      "left" : "capacity",
      "right" : "capacity",
      "info" : "SimpleName[6970-6978]:SimpleName[6970-6978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6981-7018]:Block[6981-7018]"
    }, {
      "left" : "return buffer.length;",
      "right" : "return buffer.length;",
      "info" : "ReturnStatement[6991-7012]:ReturnStatement[6991-7012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7213-7219]:Modifier[7213-7219]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[7220-7230]:SimpleType[7220-7230]"
    }, {
      "left" : "ensureCapacity",
      "right" : "ensureCapacity",
      "info" : "SimpleName[7231-7245]:SimpleName[7231-7245]"
    }, {
      "left" : "int capacity",
      "right" : "int capacity",
      "info" : "SingleVariableDeclaration[7246-7258]:SingleVariableDeclaration[7246-7258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7260-7467]:Block[7260-7467]"
    }, {
      "left" : "if (capacity > buffer.length)",
      "right" : "if (capacity > buffer.length)",
      "info" : "IfStatement[7270-7440]:IfStatement[7270-7440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7300-7440]:Block[7300-7440]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7314-7334]:VariableDeclarationStatement[7314-7334]"
    }, {
      "left" : "buffer = new char[capacity];",
      "right" : "buffer = new char[capacity];",
      "info" : "ExpressionStatement[7347-7375]:ExpressionStatement[7347-7375]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7388-7430]:ExpressionStatement[7388-7430]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7449-7461]:ReturnStatement[7449-7461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7602-7608]:Modifier[7602-7608]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[7609-7619]:SimpleType[7609-7619]"
    }, {
      "left" : "minimizeCapacity",
      "right" : "minimizeCapacity",
      "info" : "SimpleName[7620-7636]:SimpleName[7620-7636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7639-7846]:Block[7639-7846]"
    }, {
      "left" : "if (buffer.length > length())",
      "right" : "if (buffer.length > length())",
      "info" : "IfStatement[7649-7819]:IfStatement[7649-7819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7679-7819]:Block[7679-7819]"
    }, {
      "left" : "char[] old = buffer;",
      "right" : "char[] old = buffer;",
      "info" : "VariableDeclarationStatement[7693-7713]:VariableDeclarationStatement[7693-7713]"
    }, {
      "left" : "buffer = new char[length()];",
      "right" : "buffer = new char[length()];",
      "info" : "ExpressionStatement[7726-7754]:ExpressionStatement[7726-7754]"
    }, {
      "left" : "System.arraycopy(old, 0, buffer, 0, size);",
      "right" : "System.arraycopy(old, 0, buffer, 0, size);",
      "info" : "ExpressionStatement[7767-7809]:ExpressionStatement[7767-7809]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[7828-7840]:ReturnStatement[7828-7840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8144-8150]:Modifier[8144-8150]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8151-8154]:PrimitiveType[8151-8154]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[8155-8159]:SimpleName[8155-8159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8162-8190]:Block[8162-8190]"
    }, {
      "left" : "return size;",
      "right" : "return size;",
      "info" : "ReturnStatement[8172-8184]:ReturnStatement[8172-8184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8500-8506]:Modifier[8500-8506]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8507-8514]:PrimitiveType[8507-8514]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[8515-8522]:SimpleName[8515-8522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8525-8558]:Block[8525-8558]"
    }, {
      "left" : "return size == 0;",
      "right" : "return size == 0;",
      "info" : "ReturnStatement[8535-8552]:ReturnStatement[8535-8552]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9021-9027]:Modifier[9021-9027]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[9028-9038]:SimpleType[9028-9038]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[9039-9044]:SimpleName[9039-9044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9047-9093]:Block[9047-9093]"
    }, {
      "left" : "size = 0;",
      "right" : "size = 0;",
      "info" : "ExpressionStatement[9057-9066]:ExpressionStatement[9057-9066]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9075-9087]:ReturnStatement[9075-9087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9480-9486]:Modifier[9480-9486]"
    }, {
      "left" : "char",
      "right" : "char",
      "info" : "PrimitiveType[9487-9491]:PrimitiveType[9487-9491]"
    }, {
      "left" : "charAt",
      "right" : "charAt",
      "info" : "SimpleName[9492-9498]:SimpleName[9492-9498]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[9499-9508]:SingleVariableDeclaration[9499-9508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9510-9665]:Block[9510-9665]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[9520-9629]:IfStatement[9520-9629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9556-9629]:Block[9556-9629]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[9570-9619]:ThrowStatement[9570-9619]"
    }, {
      "left" : "return buffer[index];",
      "right" : "return buffer[index];",
      "info" : "ReturnStatement[9638-9659]:ReturnStatement[9638-9659]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9979-9985]:Modifier[9979-9985]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[9986-9996]:SimpleType[9986-9996]"
    }, {
      "left" : "setCharAt",
      "right" : "setCharAt",
      "info" : "SimpleName[9997-10006]:SimpleName[9997-10006]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10007-10016]:SingleVariableDeclaration[10007-10016]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[10018-10025]:SingleVariableDeclaration[10018-10025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10027-10201]:Block[10027-10201]"
    }, {
      "left" : "if (index < 0 || index >= length())",
      "right" : "if (index < 0 || index >= length())",
      "info" : "IfStatement[10037-10146]:IfStatement[10037-10146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10073-10146]:Block[10073-10146]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10087-10136]:ThrowStatement[10087-10136]"
    }, {
      "left" : "buffer[index] = ch;",
      "right" : "buffer[index] = ch;",
      "info" : "ExpressionStatement[10155-10174]:ExpressionStatement[10155-10174]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10183-10195]:ReturnStatement[10183-10195]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10488-10494]:Modifier[10488-10494]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[10495-10505]:SimpleType[10495-10505]"
    }, {
      "left" : "deleteCharAt",
      "right" : "deleteCharAt",
      "info" : "SimpleName[10506-10518]:SimpleName[10506-10518]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[10519-10528]:SingleVariableDeclaration[10519-10528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10530-10713]:Block[10530-10713]"
    }, {
      "left" : "if (index < 0 || index >= size)",
      "right" : "if (index < 0 || index >= size)",
      "info" : "IfStatement[10540-10645]:IfStatement[10540-10645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10572-10645]:Block[10572-10645]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[10586-10635]:ThrowStatement[10586-10635]"
    }, {
      "left" : "deleteImpl(index, index + 1, 1);",
      "right" : "deleteImpl(index, index + 1, 1);",
      "info" : "ExpressionStatement[10654-10686]:ExpressionStatement[10654-10686]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[10695-10707]:ReturnStatement[10695-10707]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10964-10970]:Modifier[10964-10970]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[10971-10977]:ArrayType[10971-10977]"
    }, {
      "left" : "toCharArray",
      "right" : "toCharArray",
      "info" : "SimpleName[10978-10989]:SimpleName[10978-10989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10992-11196]:Block[10992-11196]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[11002-11076]:IfStatement[11002-11076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11017-11076]:Block[11017-11076]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11031-11066]:ReturnStatement[11031-11066]"
    }, {
      "left" : "char chars[] = new char[size];",
      "right" : "char chars[] = new char[size];",
      "info" : "VariableDeclarationStatement[11085-11115]:VariableDeclarationStatement[11085-11115]"
    }, {
      "left" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "right" : "System.arraycopy(buffer, 0, chars, 0, size);",
      "info" : "ExpressionStatement[11124-11168]:ExpressionStatement[11124-11168]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[11177-11190]:ReturnStatement[11177-11190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11719-11725]:Modifier[11719-11725]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[11726-11732]:ArrayType[11726-11732]"
    }, {
      "left" : "toCharArray",
      "right" : "toCharArray",
      "info" : "SimpleName[11733-11744]:SimpleName[11733-11744]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[11745-11759]:SingleVariableDeclaration[11745-11759]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[11761-11773]:SingleVariableDeclaration[11761-11773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11775-12082]:Block[11775-12082]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[11785-11832]:ExpressionStatement[11785-11832]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[11841-11873]:VariableDeclarationStatement[11841-11873]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[11882-11955]:IfStatement[11882-11955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11896-11955]:Block[11896-11955]"
    }, {
      "left" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_CHAR_ARRAY;",
      "info" : "ReturnStatement[11910-11945]:ReturnStatement[11910-11945]"
    }, {
      "left" : "char chars[] = new char[len];",
      "right" : "char chars[] = new char[len];",
      "info" : "VariableDeclarationStatement[11964-11993]:VariableDeclarationStatement[11964-11993]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "right" : "System.arraycopy(buffer, startIndex, chars, 0, len);",
      "info" : "ExpressionStatement[12002-12054]:ExpressionStatement[12002-12054]"
    }, {
      "left" : "return chars;",
      "right" : "return chars;",
      "info" : "ReturnStatement[12063-12076]:ReturnStatement[12063-12076]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12327-12333]:Modifier[12327-12333]"
    }, {
      "left" : "char[]",
      "right" : "char[]",
      "info" : "ArrayType[12334-12340]:ArrayType[12334-12340]"
    }, {
      "left" : "getChars",
      "right" : "getChars",
      "info" : "SimpleName[12341-12349]:SimpleName[12341-12349]"
    }, {
      "left" : "char[] destination",
      "right" : "char[] destination",
      "info" : "SingleVariableDeclaration[12350-12368]:SingleVariableDeclaration[12350-12368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12370-12605]:Block[12370-12605]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[12380-12399]:VariableDeclarationStatement[12380-12399]"
    }, {
      "left" : "if (destination == null || destination.length < len)",
      "right" : "if (destination == null || destination.length < len)",
      "info" : "IfStatement[12408-12513]:IfStatement[12408-12513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12461-12513]:Block[12461-12513]"
    }, {
      "left" : "destination = new char[len];",
      "right" : "destination = new char[len];",
      "info" : "ExpressionStatement[12475-12503]:ExpressionStatement[12475-12503]"
    }, {
      "left" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "right" : "System.arraycopy(buffer, 0, destination, 0, len);",
      "info" : "ExpressionStatement[12522-12571]:ExpressionStatement[12522-12571]"
    }, {
      "left" : "return destination;",
      "right" : "return destination;",
      "info" : "ReturnStatement[12580-12599]:ReturnStatement[12580-12599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13103-13109]:Modifier[13103-13109]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13110-13114]:PrimitiveType[13110-13114]"
    }, {
      "left" : "getChars",
      "right" : "getChars",
      "info" : "SimpleName[13115-13123]:SimpleName[13115-13123]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[13124-13138]:SingleVariableDeclaration[13124-13138]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[13140-13152]:SingleVariableDeclaration[13140-13152]"
    }, {
      "left" : "char destination[]",
      "right" : "char destination[]",
      "info" : "SingleVariableDeclaration[13154-13172]:SingleVariableDeclaration[13154-13172]"
    }, {
      "left" : "int destinationIndex",
      "right" : "int destinationIndex",
      "info" : "SingleVariableDeclaration[13174-13194]:SingleVariableDeclaration[13174-13194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13196-13653]:Block[13196-13653]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[13206-13304]:IfStatement[13206-13304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13226-13304]:Block[13226-13304]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[13240-13294]:ThrowStatement[13240-13294]"
    }, {
      "left" : "if (endIndex < 0 || endIndex > length())",
      "right" : "if (endIndex < 0 || endIndex > length())",
      "info" : "IfStatement[13313-13430]:IfStatement[13313-13430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13354-13430]:Block[13354-13430]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(endIndex);",
      "info" : "ThrowStatement[13368-13420]:ThrowStatement[13368-13420]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[13439-13547]:IfStatement[13439-13547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13466-13547]:Block[13466-13547]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[13480-13537]:ThrowStatement[13480-13537]"
    }, {
      "left" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "right" : "System.arraycopy(buffer, startIndex, destination, destinationIndex, endIndex - startIndex);",
      "info" : "ExpressionStatement[13556-13647]:ExpressionStatement[13556-13647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14058-14064]:Modifier[14058-14064]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14065-14075]:SimpleType[14065-14075]"
    }, {
      "left" : "appendNewLine",
      "right" : "appendNewLine",
      "info" : "SimpleName[14076-14089]:SimpleName[14076-14089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14092-14246]:Block[14092-14246]"
    }, {
      "left" : "if (newLine == null)",
      "right" : "if (newLine == null)",
      "info" : "IfStatement[14102-14208]:IfStatement[14102-14208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14124-14208]:Block[14124-14208]"
    }, {
      "left" : "append(SystemUtils.LINE_SEPARATOR);",
      "right" : "append(SystemUtils.LINE_SEPARATOR);",
      "info" : "ExpressionStatement[14138-14173]:ExpressionStatement[14138-14173]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14186-14198]:ReturnStatement[14186-14198]"
    }, {
      "left" : "return append(newLine);",
      "right" : "return append(newLine);",
      "info" : "ReturnStatement[14217-14240]:ReturnStatement[14217-14240]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14394-14400]:Modifier[14394-14400]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14401-14411]:SimpleType[14401-14411]"
    }, {
      "left" : "appendNull",
      "right" : "appendNull",
      "info" : "SimpleName[14412-14422]:SimpleName[14412-14422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14425-14533]:Block[14425-14533]"
    }, {
      "left" : "if (nullText == null)",
      "right" : "if (nullText == null)",
      "info" : "IfStatement[14435-14494]:IfStatement[14435-14494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14458-14494]:Block[14458-14494]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14472-14484]:ReturnStatement[14472-14484]"
    }, {
      "left" : "return append(nullText);",
      "right" : "return append(nullText);",
      "info" : "ReturnStatement[14503-14527]:ReturnStatement[14503-14527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14746-14752]:Modifier[14746-14752]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[14753-14763]:SimpleType[14753-14763]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[14764-14770]:SimpleName[14764-14770]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[14771-14781]:SingleVariableDeclaration[14771-14781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14783-14908]:Block[14783-14908]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[14793-14854]:IfStatement[14793-14854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14810-14854]:Block[14810-14854]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[14824-14844]:ReturnStatement[14824-14844]"
    }, {
      "left" : "return append(obj.toString());",
      "right" : "return append(obj.toString());",
      "info" : "ReturnStatement[14864-14894]:ReturnStatement[14864-14894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15120-15126]:Modifier[15120-15126]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[15127-15137]:SimpleType[15127-15137]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[15138-15144]:SimpleName[15138-15144]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15145-15155]:SingleVariableDeclaration[15145-15155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15157-15478]:Block[15157-15478]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15167-15228]:IfStatement[15167-15228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15184-15228]:Block[15184-15228]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15198-15218]:ReturnStatement[15198-15218]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[15237-15263]:VariableDeclarationStatement[15237-15263]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[15272-15451]:IfStatement[15272-15451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15288-15451]:Block[15288-15451]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[15302-15321]:VariableDeclarationStatement[15302-15321]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[15334-15363]:ExpressionStatement[15334-15363]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[15376-15413]:ExpressionStatement[15376-15413]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[15426-15441]:ExpressionStatement[15426-15441]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15460-15472]:ReturnStatement[15460-15472]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15824-15830]:Modifier[15824-15830]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[15831-15841]:SimpleType[15831-15841]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[15842-15848]:SimpleName[15842-15848]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15849-15859]:SingleVariableDeclaration[15849-15859]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[15861-15875]:SingleVariableDeclaration[15861-15875]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[15877-15887]:SingleVariableDeclaration[15877-15887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15889-16504]:Block[15889-16504]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[15899-15960]:IfStatement[15899-15960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15916-15960]:Block[15916-15960]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[15930-15950]:ReturnStatement[15930-15950]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[15969-16112]:IfStatement[15969-16112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16018-16112]:Block[16018-16112]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[16032-16102]:ThrowStatement[16032-16102]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[16121-16267]:IfStatement[16121-16267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16177-16267]:Block[16177-16267]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[16191-16257]:ThrowStatement[16191-16257]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[16276-16477]:IfStatement[16276-16477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16292-16477]:Block[16292-16477]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16306-16325]:VariableDeclarationStatement[16306-16325]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[16338-16367]:ExpressionStatement[16338-16367]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[16380-16439]:ExpressionStatement[16380-16439]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[16452-16467]:ExpressionStatement[16452-16467]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16486-16498]:ReturnStatement[16486-16498]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16730-16736]:Modifier[16730-16736]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[16737-16747]:SimpleType[16737-16747]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[16748-16754]:SimpleName[16748-16754]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[16755-16771]:SingleVariableDeclaration[16755-16771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16773-17094]:Block[16773-17094]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[16783-16844]:IfStatement[16783-16844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16800-16844]:Block[16800-16844]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[16814-16834]:ReturnStatement[16814-16834]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[16853-16879]:VariableDeclarationStatement[16853-16879]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[16888-17067]:IfStatement[16888-17067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16904-17067]:Block[16904-17067]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[16918-16937]:VariableDeclarationStatement[16918-16937]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[16950-16979]:ExpressionStatement[16950-16979]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, len);",
      "right" : "str.getChars(0, strLen, buffer, len);",
      "info" : "ExpressionStatement[16992-17029]:ExpressionStatement[16992-17029]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[17042-17057]:ExpressionStatement[17042-17057]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17076-17088]:ReturnStatement[17076-17088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17447-17453]:Modifier[17447-17453]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[17454-17464]:SimpleType[17454-17464]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[17465-17471]:SimpleName[17465-17471]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[17472-17488]:SingleVariableDeclaration[17472-17488]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[17490-17504]:SingleVariableDeclaration[17490-17504]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[17506-17516]:SingleVariableDeclaration[17506-17516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17518-18133]:Block[17518-18133]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[17528-17589]:IfStatement[17528-17589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17545-17589]:Block[17545-17589]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[17559-17579]:ReturnStatement[17559-17579]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[17598-17741]:IfStatement[17598-17741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17647-17741]:Block[17647-17741]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[17661-17731]:ThrowStatement[17661-17731]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[17750-17896]:IfStatement[17750-17896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17806-17896]:Block[17806-17896]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[17820-17886]:ThrowStatement[17820-17886]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[17905-18106]:IfStatement[17905-18106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17921-18106]:Block[17921-18106]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[17935-17954]:VariableDeclarationStatement[17935-17954]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[17967-17996]:ExpressionStatement[17967-17996]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[18009-18068]:ExpressionStatement[18009-18068]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[18081-18096]:ExpressionStatement[18081-18096]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18115-18127]:ReturnStatement[18115-18127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18367-18373]:Modifier[18367-18373]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[18374-18384]:SimpleType[18374-18384]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[18385-18391]:SimpleName[18385-18391]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[18392-18406]:SingleVariableDeclaration[18392-18406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18408-18745]:Block[18408-18745]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[18418-18479]:IfStatement[18418-18479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18435-18479]:Block[18435-18479]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[18449-18469]:ReturnStatement[18449-18469]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[18488-18514]:VariableDeclarationStatement[18488-18514]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[18523-18718]:IfStatement[18523-18718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18539-18718]:Block[18539-18718]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[18553-18572]:VariableDeclarationStatement[18553-18572]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[18585-18614]:ExpressionStatement[18585-18614]"
    }, {
      "left" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(str.buffer, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[18627-18680]:ExpressionStatement[18627-18680]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[18693-18708]:ExpressionStatement[18693-18708]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18727-18739]:ReturnStatement[18727-18739]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19099-19105]:Modifier[19099-19105]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[19106-19116]:SimpleType[19106-19116]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[19117-19123]:SimpleName[19117-19123]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[19124-19138]:SingleVariableDeclaration[19124-19138]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[19140-19154]:SingleVariableDeclaration[19140-19154]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[19156-19166]:SingleVariableDeclaration[19156-19166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19168-19783]:Block[19168-19783]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[19178-19239]:IfStatement[19178-19239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19195-19239]:Block[19195-19239]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[19209-19229]:ReturnStatement[19209-19229]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > str.length())",
      "right" : "if (startIndex < 0 || startIndex > str.length())",
      "info" : "IfStatement[19248-19391]:IfStatement[19248-19391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19297-19391]:Block[19297-19391]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"startIndex must be valid\");",
      "info" : "ThrowStatement[19311-19381]:ThrowStatement[19311-19381]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > str.length())",
      "right" : "if (length < 0 || (startIndex + length) > str.length())",
      "info" : "IfStatement[19400-19546]:IfStatement[19400-19546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19456-19546]:Block[19456-19546]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"length must be valid\");",
      "info" : "ThrowStatement[19470-19536]:ThrowStatement[19470-19536]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[19555-19756]:IfStatement[19555-19756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19571-19756]:Block[19571-19756]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[19585-19604]:VariableDeclarationStatement[19585-19604]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[19617-19646]:ExpressionStatement[19617-19646]"
    }, {
      "left" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "right" : "str.getChars(startIndex, startIndex + length, buffer, len);",
      "info" : "ExpressionStatement[19659-19718]:ExpressionStatement[19659-19718]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[19731-19746]:ExpressionStatement[19731-19746]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[19765-19777]:ReturnStatement[19765-19777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20004-20010]:Modifier[20004-20010]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[20011-20021]:SimpleType[20011-20021]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[20022-20028]:SimpleName[20022-20028]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[20029-20041]:SingleVariableDeclaration[20029-20041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20043-20377]:Block[20043-20377]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20053-20116]:IfStatement[20053-20116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20072-20116]:Block[20072-20116]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20086-20106]:ReturnStatement[20086-20106]"
    }, {
      "left" : "int strLen = chars.length;",
      "right" : "int strLen = chars.length;",
      "info" : "VariableDeclarationStatement[20125-20151]:VariableDeclarationStatement[20125-20151]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[20160-20350]:IfStatement[20160-20350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20176-20350]:Block[20176-20350]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[20190-20209]:VariableDeclarationStatement[20190-20209]"
    }, {
      "left" : "ensureCapacity(len + strLen);",
      "right" : "ensureCapacity(len + strLen);",
      "info" : "ExpressionStatement[20222-20251]:ExpressionStatement[20222-20251]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "right" : "System.arraycopy(chars, 0, buffer, len, strLen);",
      "info" : "ExpressionStatement[20264-20312]:ExpressionStatement[20264-20312]"
    }, {
      "left" : "size += strLen;",
      "right" : "size += strLen;",
      "info" : "ExpressionStatement[20325-20340]:ExpressionStatement[20325-20340]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20359-20371]:ReturnStatement[20359-20371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20724-20730]:Modifier[20724-20730]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[20731-20741]:SimpleType[20731-20741]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[20742-20748]:SimpleName[20742-20748]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[20749-20761]:SingleVariableDeclaration[20749-20761]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[20763-20777]:SingleVariableDeclaration[20763-20777]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[20779-20789]:SingleVariableDeclaration[20779-20789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20791-21416]:Block[20791-21416]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[20801-20864]:IfStatement[20801-20864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20820-20864]:Block[20820-20864]"
    }, {
      "left" : "return appendNull();",
      "right" : "return appendNull();",
      "info" : "ReturnStatement[20834-20854]:ReturnStatement[20834-20854]"
    }, {
      "left" : "if (startIndex < 0 || startIndex > chars.length)",
      "right" : "if (startIndex < 0 || startIndex > chars.length)",
      "info" : "IfStatement[20873-21021]:IfStatement[20873-21021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20922-21021]:Block[20922-21021]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid startIndex: \" + length);",
      "info" : "ThrowStatement[20936-21011]:ThrowStatement[20936-21011]"
    }, {
      "left" : "if (length < 0 || (startIndex + length) > chars.length)",
      "right" : "if (length < 0 || (startIndex + length) > chars.length)",
      "info" : "IfStatement[21030-21181]:IfStatement[21030-21181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21086-21181]:Block[21086-21181]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[21100-21171]:ThrowStatement[21100-21171]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[21190-21389]:IfStatement[21190-21389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21206-21389]:Block[21206-21389]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[21220-21239]:VariableDeclarationStatement[21220-21239]"
    }, {
      "left" : "ensureCapacity(len + length);",
      "right" : "ensureCapacity(len + length);",
      "info" : "ExpressionStatement[21252-21281]:ExpressionStatement[21252-21281]"
    }, {
      "left" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "right" : "System.arraycopy(chars, startIndex, buffer, len, length);",
      "info" : "ExpressionStatement[21294-21351]:ExpressionStatement[21294-21351]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[21364-21379]:ExpressionStatement[21364-21379]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[21398-21410]:ReturnStatement[21398-21410]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21580-21586]:Modifier[21580-21586]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[21587-21597]:SimpleType[21587-21597]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[21598-21604]:SimpleName[21598-21604]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[21605-21618]:SingleVariableDeclaration[21605-21618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21620-22078]:Block[21620-22078]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[21630-22051]:IfStatement[21630-22051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21641-21826]:Block[21641-21826]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[21655-21680]:ExpressionStatement[21655-21680]"
    }, {
      "left" : "buffer[size++] = 't';",
      "right" : "buffer[size++] = 't';",
      "info" : "ExpressionStatement[21693-21714]:ExpressionStatement[21693-21714]"
    }, {
      "left" : "buffer[size++] = 'r';",
      "right" : "buffer[size++] = 'r';",
      "info" : "ExpressionStatement[21727-21748]:ExpressionStatement[21727-21748]"
    }, {
      "left" : "buffer[size++] = 'u';",
      "right" : "buffer[size++] = 'u';",
      "info" : "ExpressionStatement[21761-21782]:ExpressionStatement[21761-21782]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[21795-21816]:ExpressionStatement[21795-21816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21832-22051]:Block[21832-22051]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[21846-21871]:ExpressionStatement[21846-21871]"
    }, {
      "left" : "buffer[size++] = 'f';",
      "right" : "buffer[size++] = 'f';",
      "info" : "ExpressionStatement[21884-21905]:ExpressionStatement[21884-21905]"
    }, {
      "left" : "buffer[size++] = 'a';",
      "right" : "buffer[size++] = 'a';",
      "info" : "ExpressionStatement[21918-21939]:ExpressionStatement[21918-21939]"
    }, {
      "left" : "buffer[size++] = 'l';",
      "right" : "buffer[size++] = 'l';",
      "info" : "ExpressionStatement[21952-21973]:ExpressionStatement[21952-21973]"
    }, {
      "left" : "buffer[size++] = 's';",
      "right" : "buffer[size++] = 's';",
      "info" : "ExpressionStatement[21986-22007]:ExpressionStatement[21986-22007]"
    }, {
      "left" : "buffer[size++] = 'e';",
      "right" : "buffer[size++] = 'e';",
      "info" : "ExpressionStatement[22020-22041]:ExpressionStatement[22020-22041]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22060-22072]:ReturnStatement[22060-22072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22236-22242]:Modifier[22236-22242]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22243-22253]:SimpleType[22243-22253]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22254-22260]:SimpleName[22254-22260]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[22261-22268]:SingleVariableDeclaration[22261-22268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22270-22388]:Block[22270-22388]"
    }, {
      "left" : "int len = length();",
      "right" : "int len = length();",
      "info" : "VariableDeclarationStatement[22280-22299]:VariableDeclarationStatement[22280-22299]"
    }, {
      "left" : "ensureCapacity(len + 1);",
      "right" : "ensureCapacity(len + 1);",
      "info" : "ExpressionStatement[22308-22332]:ExpressionStatement[22308-22332]"
    }, {
      "left" : "buffer[size++] = ch;",
      "right" : "buffer[size++] = ch;",
      "info" : "ExpressionStatement[22341-22361]:ExpressionStatement[22341-22361]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22370-22382]:ReturnStatement[22370-22382]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22583-22589]:Modifier[22583-22589]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22590-22600]:SimpleType[22590-22600]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22601-22607]:SimpleName[22601-22607]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[22608-22617]:SingleVariableDeclaration[22608-22617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22619-22672]:Block[22619-22672]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22629-22666]:ReturnStatement[22629-22666]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22867-22873]:Modifier[22867-22873]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[22874-22884]:SimpleType[22874-22884]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[22885-22891]:SimpleName[22885-22891]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[22892-22902]:SingleVariableDeclaration[22892-22902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22904-22957]:Block[22904-22957]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[22914-22951]:ReturnStatement[22914-22951]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23153-23159]:Modifier[23153-23159]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[23160-23170]:SimpleType[23160-23170]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[23171-23177]:SimpleName[23171-23177]"
    }, {
      "left" : "float value",
      "right" : "float value",
      "info" : "SingleVariableDeclaration[23178-23189]:SingleVariableDeclaration[23178-23189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23191-23244]:Block[23191-23244]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23201-23238]:ReturnStatement[23201-23238]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23441-23447]:Modifier[23441-23447]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[23448-23458]:SimpleType[23448-23458]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[23459-23465]:SimpleName[23459-23465]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[23466-23478]:SingleVariableDeclaration[23466-23478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23480-23533]:Block[23480-23533]"
    }, {
      "left" : "return append(String.valueOf(value));",
      "right" : "return append(String.valueOf(value));",
      "info" : "ReturnStatement[23490-23527]:ReturnStatement[23490-23527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23865-23871]:Modifier[23865-23871]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[23872-23882]:SimpleType[23872-23882]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[23883-23891]:SimpleName[23883-23891]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[23892-23902]:SingleVariableDeclaration[23892-23902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23904-23955]:Block[23904-23955]"
    }, {
      "left" : "return append(obj).appendNewLine();",
      "right" : "return append(obj).appendNewLine();",
      "info" : "ReturnStatement[23914-23949]:ReturnStatement[23914-23949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24208-24214]:Modifier[24208-24214]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[24215-24225]:SimpleType[24215-24225]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[24226-24234]:SimpleName[24226-24234]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[24235-24245]:SingleVariableDeclaration[24235-24245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24247-24298]:Block[24247-24298]"
    }, {
      "left" : "return append(str).appendNewLine();",
      "right" : "return append(str).appendNewLine();",
      "info" : "ReturnStatement[24257-24292]:ReturnStatement[24257-24292]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24685-24691]:Modifier[24685-24691]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[24692-24702]:SimpleType[24692-24702]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[24703-24711]:SimpleName[24703-24711]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[24712-24722]:SingleVariableDeclaration[24712-24722]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[24724-24738]:SingleVariableDeclaration[24724-24738]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[24740-24750]:SingleVariableDeclaration[24740-24750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24752-24823]:Block[24752-24823]"
    }, {
      "left" : "return append(str, startIndex, length).appendNewLine();",
      "right" : "return append(str, startIndex, length).appendNewLine();",
      "info" : "ReturnStatement[24762-24817]:ReturnStatement[24762-24817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25090-25096]:Modifier[25090-25096]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[25097-25107]:SimpleType[25097-25107]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[25108-25116]:SimpleName[25108-25116]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[25117-25133]:SingleVariableDeclaration[25117-25133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25135-25186]:Block[25135-25186]"
    }, {
      "left" : "return append(str).appendNewLine();",
      "right" : "return append(str).appendNewLine();",
      "info" : "ReturnStatement[25145-25180]:ReturnStatement[25145-25180]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25580-25586]:Modifier[25580-25586]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[25587-25597]:SimpleType[25587-25597]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[25598-25606]:SimpleName[25598-25606]"
    }, {
      "left" : "StringBuffer str",
      "right" : "StringBuffer str",
      "info" : "SingleVariableDeclaration[25607-25623]:SingleVariableDeclaration[25607-25623]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[25625-25639]:SingleVariableDeclaration[25625-25639]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[25641-25651]:SingleVariableDeclaration[25641-25651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25653-25724]:Block[25653-25724]"
    }, {
      "left" : "return append(str, startIndex, length).appendNewLine();",
      "right" : "return append(str, startIndex, length).appendNewLine();",
      "info" : "ReturnStatement[25663-25718]:ReturnStatement[25663-25718]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25999-26005]:Modifier[25999-26005]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[26006-26016]:SimpleType[26006-26016]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[26017-26025]:SimpleName[26017-26025]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[26026-26040]:SingleVariableDeclaration[26026-26040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26042-26093]:Block[26042-26093]"
    }, {
      "left" : "return append(str).appendNewLine();",
      "right" : "return append(str).appendNewLine();",
      "info" : "ReturnStatement[26052-26087]:ReturnStatement[26052-26087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26488-26494]:Modifier[26488-26494]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[26495-26505]:SimpleType[26495-26505]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[26506-26514]:SimpleName[26506-26514]"
    }, {
      "left" : "StrBuilder str",
      "right" : "StrBuilder str",
      "info" : "SingleVariableDeclaration[26515-26529]:SingleVariableDeclaration[26515-26529]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[26531-26545]:SingleVariableDeclaration[26531-26545]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[26547-26557]:SingleVariableDeclaration[26547-26557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26559-26630]:Block[26559-26630]"
    }, {
      "left" : "return append(str, startIndex, length).appendNewLine();",
      "right" : "return append(str, startIndex, length).appendNewLine();",
      "info" : "ReturnStatement[26569-26624]:ReturnStatement[26569-26624]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26892-26898]:Modifier[26892-26898]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[26899-26909]:SimpleType[26899-26909]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[26910-26918]:SimpleName[26910-26918]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[26919-26931]:SingleVariableDeclaration[26919-26931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26933-26986]:Block[26933-26986]"
    }, {
      "left" : "return append(chars).appendNewLine();",
      "right" : "return append(chars).appendNewLine();",
      "info" : "ReturnStatement[26943-26980]:ReturnStatement[26943-26980]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27374-27380]:Modifier[27374-27380]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[27381-27391]:SimpleType[27381-27391]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[27392-27400]:SimpleName[27392-27400]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[27401-27413]:SingleVariableDeclaration[27401-27413]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[27415-27429]:SingleVariableDeclaration[27415-27429]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[27431-27441]:SingleVariableDeclaration[27431-27441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27443-27516]:Block[27443-27516]"
    }, {
      "left" : "return append(chars, startIndex, length).appendNewLine();",
      "right" : "return append(chars, startIndex, length).appendNewLine();",
      "info" : "ReturnStatement[27453-27510]:ReturnStatement[27453-27510]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27721-27727]:Modifier[27721-27727]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[27728-27738]:SimpleType[27728-27738]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[27739-27747]:SimpleName[27739-27747]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[27748-27761]:SingleVariableDeclaration[27748-27761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27763-27816]:Block[27763-27816]"
    }, {
      "left" : "return append(value).appendNewLine();",
      "right" : "return append(value).appendNewLine();",
      "info" : "ReturnStatement[27773-27810]:ReturnStatement[27773-27810]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28015-28021]:Modifier[28015-28021]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[28022-28032]:SimpleType[28022-28032]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[28033-28041]:SimpleName[28033-28041]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[28042-28049]:SingleVariableDeclaration[28042-28049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28051-28101]:Block[28051-28101]"
    }, {
      "left" : "return append(ch).appendNewLine();",
      "right" : "return append(ch).appendNewLine();",
      "info" : "ReturnStatement[28061-28095]:ReturnStatement[28061-28095]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28337-28343]:Modifier[28337-28343]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[28344-28354]:SimpleType[28344-28354]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[28355-28363]:SimpleName[28355-28363]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[28364-28373]:SingleVariableDeclaration[28364-28373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28375-28428]:Block[28375-28428]"
    }, {
      "left" : "return append(value).appendNewLine();",
      "right" : "return append(value).appendNewLine();",
      "info" : "ReturnStatement[28385-28422]:ReturnStatement[28385-28422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28664-28670]:Modifier[28664-28670]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[28671-28681]:SimpleType[28671-28681]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[28682-28690]:SimpleName[28682-28690]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[28691-28701]:SingleVariableDeclaration[28691-28701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28703-28756]:Block[28703-28756]"
    }, {
      "left" : "return append(value).appendNewLine();",
      "right" : "return append(value).appendNewLine();",
      "info" : "ReturnStatement[28713-28750]:ReturnStatement[28713-28750]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28993-28999]:Modifier[28993-28999]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[29000-29010]:SimpleType[29000-29010]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[29011-29019]:SimpleName[29011-29019]"
    }, {
      "left" : "float value",
      "right" : "float value",
      "info" : "SingleVariableDeclaration[29020-29031]:SingleVariableDeclaration[29020-29031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29033-29086]:Block[29033-29086]"
    }, {
      "left" : "return append(value).appendNewLine();",
      "right" : "return append(value).appendNewLine();",
      "info" : "ReturnStatement[29043-29080]:ReturnStatement[29043-29080]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29324-29330]:Modifier[29324-29330]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[29331-29341]:SimpleType[29331-29341]"
    }, {
      "left" : "appendln",
      "right" : "appendln",
      "info" : "SimpleName[29342-29350]:SimpleName[29342-29350]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[29351-29363]:SingleVariableDeclaration[29351-29363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29365-29418]:Block[29365-29418]"
    }, {
      "left" : "return append(value).appendNewLine();",
      "right" : "return append(value).appendNewLine();",
      "info" : "ReturnStatement[29375-29412]:ReturnStatement[29375-29412]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29813-29819]:Modifier[29813-29819]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[29820-29830]:SimpleType[29820-29830]"
    }, {
      "left" : "appendAll",
      "right" : "appendAll",
      "info" : "SimpleName[29831-29840]:SimpleName[29831-29840]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[29841-29855]:SingleVariableDeclaration[29841-29855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29857-30045]:Block[29857-30045]"
    }, {
      "left" : "if (array != null && array.length > 0)",
      "right" : "if (array != null && array.length > 0)",
      "info" : "IfStatement[29867-30018]:IfStatement[29867-30018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29906-30018]:Block[29906-30018]"
    }, {
      "left" : "for (int i = 0; i < array.length; i++)",
      "right" : "for (int i = 0; i < array.length; i++)",
      "info" : "ForStatement[29920-30008]:ForStatement[29920-30008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29959-30008]:Block[29959-30008]"
    }, {
      "left" : "append(array[i]);",
      "right" : "append(array[i]);",
      "info" : "ExpressionStatement[29977-29994]:ExpressionStatement[29977-29994]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[30027-30039]:ReturnStatement[30027-30039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30375-30381]:Modifier[30375-30381]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[30382-30392]:SimpleType[30382-30392]"
    }, {
      "left" : "appendAll",
      "right" : "appendAll",
      "info" : "SimpleName[30393-30402]:SimpleName[30393-30402]"
    }, {
      "left" : "Collection coll",
      "right" : "Collection coll",
      "info" : "SingleVariableDeclaration[30403-30418]:SingleVariableDeclaration[30403-30418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30420-30632]:Block[30420-30632]"
    }, {
      "left" : "if (coll != null && coll.size() > 0)",
      "right" : "if (coll != null && coll.size() > 0)",
      "info" : "IfStatement[30430-30605]:IfStatement[30430-30605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30467-30605]:Block[30467-30605]"
    }, {
      "left" : "Iterator it = coll.iterator();",
      "right" : "Iterator it = coll.iterator();",
      "info" : "VariableDeclarationStatement[30481-30511]:VariableDeclarationStatement[30481-30511]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[30524-30595]:WhileStatement[30524-30595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30545-30595]:Block[30545-30595]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[30563-30581]:ExpressionStatement[30563-30581]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[30614-30626]:ReturnStatement[30614-30626]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30955-30961]:Modifier[30955-30961]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[30962-30972]:SimpleType[30962-30972]"
    }, {
      "left" : "appendAll",
      "right" : "appendAll",
      "info" : "SimpleName[30973-30982]:SimpleName[30973-30982]"
    }, {
      "left" : "Iterator it",
      "right" : "Iterator it",
      "info" : "SingleVariableDeclaration[30983-30994]:SingleVariableDeclaration[30983-30994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30996-31144]:Block[30996-31144]"
    }, {
      "left" : "if (it != null)",
      "right" : "if (it != null)",
      "info" : "IfStatement[31006-31117]:IfStatement[31006-31117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31022-31117]:Block[31022-31117]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[31036-31107]:WhileStatement[31036-31107]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31057-31107]:Block[31057-31107]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[31075-31093]:ExpressionStatement[31075-31093]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[31126-31138]:ReturnStatement[31126-31138]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31630-31636]:Modifier[31630-31636]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[31637-31647]:SimpleType[31637-31647]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[31648-31668]:SimpleName[31648-31668]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[31669-31683]:SingleVariableDeclaration[31669-31683]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[31685-31701]:SingleVariableDeclaration[31685-31701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31703-32018]:Block[31703-32018]"
    }, {
      "left" : "if (array != null && array.length > 0)",
      "right" : "if (array != null && array.length > 0)",
      "info" : "IfStatement[31713-31991]:IfStatement[31713-31991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31752-31991]:Block[31752-31991]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[31766-31815]:ExpressionStatement[31766-31815]"
    }, {
      "left" : "append(array[0]);",
      "right" : "append(array[0]);",
      "info" : "ExpressionStatement[31828-31845]:ExpressionStatement[31828-31845]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[31858-31981]:ForStatement[31858-31981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31897-31981]:Block[31897-31981]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[31915-31933]:ExpressionStatement[31915-31933]"
    }, {
      "left" : "append(array[i]);",
      "right" : "append(array[i]);",
      "info" : "ExpressionStatement[31950-31967]:ExpressionStatement[31950-31967]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[32000-32012]:ReturnStatement[32000-32012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32439-32445]:Modifier[32439-32445]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[32446-32456]:SimpleType[32446-32456]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[32457-32477]:SimpleName[32457-32477]"
    }, {
      "left" : "Collection coll",
      "right" : "Collection coll",
      "info" : "SingleVariableDeclaration[32478-32493]:SingleVariableDeclaration[32478-32493]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[32495-32511]:SingleVariableDeclaration[32495-32511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32513-32880]:Block[32513-32880]"
    }, {
      "left" : "if (coll != null && coll.size() > 0)",
      "right" : "if (coll != null && coll.size() > 0)",
      "info" : "IfStatement[32523-32853]:IfStatement[32523-32853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32560-32853]:Block[32560-32853]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[32574-32623]:ExpressionStatement[32574-32623]"
    }, {
      "left" : "Iterator it = coll.iterator();",
      "right" : "Iterator it = coll.iterator();",
      "info" : "VariableDeclarationStatement[32636-32666]:VariableDeclarationStatement[32636-32666]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[32679-32843]:WhileStatement[32679-32843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32700-32843]:Block[32700-32843]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[32718-32736]:ExpressionStatement[32718-32736]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[32753-32829]:IfStatement[32753-32829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32771-32829]:Block[32771-32829]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[32793-32811]:ExpressionStatement[32793-32811]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[32862-32874]:ReturnStatement[32862-32874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33294-33300]:Modifier[33294-33300]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[33301-33311]:SimpleType[33301-33311]"
    }, {
      "left" : "appendWithSeparators",
      "right" : "appendWithSeparators",
      "info" : "SimpleName[33312-33332]:SimpleName[33312-33332]"
    }, {
      "left" : "Iterator it",
      "right" : "Iterator it",
      "info" : "SingleVariableDeclaration[33333-33344]:SingleVariableDeclaration[33333-33344]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[33346-33362]:SingleVariableDeclaration[33346-33362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33364-33667]:Block[33364-33667]"
    }, {
      "left" : "if (it != null)",
      "right" : "if (it != null)",
      "info" : "IfStatement[33374-33640]:IfStatement[33374-33640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33390-33640]:Block[33390-33640]"
    }, {
      "left" : "separator = (separator == null ? \"\" : separator);",
      "right" : "separator = (separator == null ? \"\" : separator);",
      "info" : "ExpressionStatement[33404-33453]:ExpressionStatement[33404-33453]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[33466-33630]:WhileStatement[33466-33630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33487-33630]:Block[33487-33630]"
    }, {
      "left" : "append(it.next());",
      "right" : "append(it.next());",
      "info" : "ExpressionStatement[33505-33523]:ExpressionStatement[33505-33523]"
    }, {
      "left" : "if (it.hasNext())",
      "right" : "if (it.hasNext())",
      "info" : "IfStatement[33540-33616]:IfStatement[33540-33616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33558-33616]:Block[33558-33616]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[33580-33598]:ExpressionStatement[33580-33598]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[33649-33661]:ReturnStatement[33649-33661]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34474-34480]:Modifier[34474-34480]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[34481-34491]:SimpleType[34481-34491]"
    }, {
      "left" : "appendSeparator",
      "right" : "appendSeparator",
      "info" : "SimpleName[34492-34507]:SimpleName[34492-34507]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[34508-34524]:SingleVariableDeclaration[34508-34524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34526-34642]:Block[34526-34642]"
    }, {
      "left" : "if (separator != null && size() > 0)",
      "right" : "if (separator != null && size() > 0)",
      "info" : "IfStatement[34536-34615]:IfStatement[34536-34615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34573-34615]:Block[34573-34615]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[34587-34605]:ExpressionStatement[34587-34605]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[34624-34636]:ReturnStatement[34624-34636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35289-35295]:Modifier[35289-35295]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[35296-35306]:SimpleType[35296-35306]"
    }, {
      "left" : "appendSeparator",
      "right" : "appendSeparator",
      "info" : "SimpleName[35307-35322]:SimpleName[35307-35322]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[35323-35337]:SingleVariableDeclaration[35323-35337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35339-35434]:Block[35339-35434]"
    }, {
      "left" : "if (size() > 0)",
      "right" : "if (size() > 0)",
      "info" : "IfStatement[35349-35407]:IfStatement[35349-35407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35365-35407]:Block[35365-35407]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[35379-35397]:ExpressionStatement[35379-35397]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[35416-35428]:ReturnStatement[35416-35428]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36210-36216]:Modifier[36210-36216]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[36217-36227]:SimpleType[36217-36227]"
    }, {
      "left" : "appendSeparator",
      "right" : "appendSeparator",
      "info" : "SimpleName[36228-36243]:SimpleName[36228-36243]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[36244-36260]:SingleVariableDeclaration[36244-36260]"
    }, {
      "left" : "int loopIndex",
      "right" : "int loopIndex",
      "info" : "SingleVariableDeclaration[36262-36275]:SingleVariableDeclaration[36262-36275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36277-36396]:Block[36277-36396]"
    }, {
      "left" : "if (separator != null && loopIndex > 0)",
      "right" : "if (separator != null && loopIndex > 0)",
      "info" : "IfStatement[36287-36369]:IfStatement[36287-36369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36327-36369]:Block[36327-36369]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[36341-36359]:ExpressionStatement[36341-36359]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[36378-36390]:ReturnStatement[36378-36390]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37090-37096]:Modifier[37090-37096]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[37097-37107]:SimpleType[37097-37107]"
    }, {
      "left" : "appendSeparator",
      "right" : "appendSeparator",
      "info" : "SimpleName[37108-37123]:SimpleName[37108-37123]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[37124-37138]:SingleVariableDeclaration[37124-37138]"
    }, {
      "left" : "int loopIndex",
      "right" : "int loopIndex",
      "info" : "SingleVariableDeclaration[37140-37153]:SingleVariableDeclaration[37140-37153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37155-37253]:Block[37155-37253]"
    }, {
      "left" : "if (loopIndex > 0)",
      "right" : "if (loopIndex > 0)",
      "info" : "IfStatement[37165-37226]:IfStatement[37165-37226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37184-37226]:Block[37184-37226]"
    }, {
      "left" : "append(separator);",
      "right" : "append(separator);",
      "info" : "ExpressionStatement[37198-37216]:ExpressionStatement[37198-37216]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[37235-37247]:ReturnStatement[37235-37247]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37596-37602]:Modifier[37596-37602]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[37603-37613]:SimpleType[37603-37613]"
    }, {
      "left" : "appendPadding",
      "right" : "appendPadding",
      "info" : "SimpleName[37614-37627]:SimpleName[37614-37627]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[37628-37638]:SingleVariableDeclaration[37628-37638]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[37640-37652]:SingleVariableDeclaration[37640-37652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37654-37865]:Block[37654-37865]"
    }, {
      "left" : "if (length >= 0)",
      "right" : "if (length >= 0)",
      "info" : "IfStatement[37664-37838]:IfStatement[37664-37838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37681-37838]:Block[37681-37838]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[37695-37725]:ExpressionStatement[37695-37725]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[37738-37828]:ForStatement[37738-37828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37771-37828]:Block[37771-37828]"
    }, {
      "left" : "buffer[size++] = padChar;",
      "right" : "buffer[size++] = padChar;",
      "info" : "ExpressionStatement[37789-37814]:ExpressionStatement[37789-37814]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[37847-37859]:ReturnStatement[37847-37859]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38466-38472]:Modifier[38466-38472]"
    }, {
      "left" : "appendFixedWidthPadLeft",
      "right" : "appendFixedWidthPadLeft",
      "info" : "SimpleName[38484-38507]:SimpleName[38484-38507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38545-39153]:Block[38545-39224]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[38555-39126]:IfStatement[38555-39197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38570-39126]:Block[38570-39197]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[38584-38613]:ExpressionStatement[38584-38613]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[38626-38686]:VariableDeclarationStatement[38626-38686]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[38699-38725]:VariableDeclarationStatement[38770-38796]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[38738-39089]:IfStatement[38809-39160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38759-38842]:Block[38830-38913]"
    }, {
      "left" : "str.getChars(strLen - width, strLen, buffer, size);",
      "right" : "str.getChars(strLen - width, strLen, buffer, size);",
      "info" : "ExpressionStatement[38777-38828]:ExpressionStatement[38848-38899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38848-39089]:Block[38919-39160]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[38866-38894]:VariableDeclarationStatement[38937-38965]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[38911-39011]:ForStatement[38982-39082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38944-39011]:Block[39015-39082]"
    }, {
      "left" : "buffer[size + i] = padChar;",
      "right" : "buffer[size + i] = padChar;",
      "info" : "ExpressionStatement[38966-38993]:ExpressionStatement[39037-39064]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size + padLen);",
      "right" : "str.getChars(0, strLen, buffer, size + padLen);",
      "info" : "ExpressionStatement[39028-39075]:ExpressionStatement[39099-39146]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[39102-39116]:ExpressionStatement[39173-39187]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[39135-39147]:ReturnStatement[39206-39218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39628-39634]:Modifier[39699-39705]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[39635-39645]:SimpleType[39706-39716]"
    }, {
      "left" : "appendFixedWidthPadLeft",
      "right" : "appendFixedWidthPadLeft",
      "info" : "SimpleName[39646-39669]:SimpleName[39717-39740]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[39670-39679]:SingleVariableDeclaration[39741-39750]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[39681-39690]:SingleVariableDeclaration[39752-39761]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[39692-39704]:SingleVariableDeclaration[39763-39775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39706-39792]:Block[39777-39863]"
    }, {
      "left" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadLeft(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[39716-39786]:ReturnStatement[39787-39857]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40314-40320]:Modifier[40385-40391]"
    }, {
      "left" : "appendFixedWidthPadRight",
      "right" : "appendFixedWidthPadRight",
      "info" : "SimpleName[40332-40356]:SimpleName[40403-40427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40394-40988]:Block[40465-41130]"
    }, {
      "left" : "if (width > 0)",
      "right" : "if (width > 0)",
      "info" : "IfStatement[40404-40961]:IfStatement[40475-41103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40419-40961]:Block[40490-41103]"
    }, {
      "left" : "ensureCapacity(size + width);",
      "right" : "ensureCapacity(size + width);",
      "info" : "ExpressionStatement[40433-40462]:ExpressionStatement[40504-40533]"
    }, {
      "left" : "String str = (obj == null ? getNullText() : obj.toString());",
      "right" : "String str = (obj == null ? getNullText() : obj.toString());",
      "info" : "VariableDeclarationStatement[40475-40535]:VariableDeclarationStatement[40546-40606]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[40548-40574]:VariableDeclarationStatement[40690-40716]"
    }, {
      "left" : "if (strLen >= width)",
      "right" : "if (strLen >= width)",
      "info" : "IfStatement[40587-40924]:IfStatement[40729-41066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40608-40677]:Block[40750-40819]"
    }, {
      "left" : "str.getChars(0, width, buffer, size);",
      "right" : "str.getChars(0, width, buffer, size);",
      "info" : "ExpressionStatement[40626-40663]:ExpressionStatement[40768-40805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40683-40924]:Block[40825-41066]"
    }, {
      "left" : "int padLen = width - strLen;",
      "right" : "int padLen = width - strLen;",
      "info" : "VariableDeclarationStatement[40701-40729]:VariableDeclarationStatement[40843-40871]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, size);",
      "right" : "str.getChars(0, strLen, buffer, size);",
      "info" : "ExpressionStatement[40746-40784]:ExpressionStatement[40888-40926]"
    }, {
      "left" : "for (int i = 0; i < padLen; i++)",
      "right" : "for (int i = 0; i < padLen; i++)",
      "info" : "ForStatement[40801-40910]:ForStatement[40943-41052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40834-40910]:Block[40976-41052]"
    }, {
      "left" : "buffer[size + strLen + i] = padChar;",
      "right" : "buffer[size + strLen + i] = padChar;",
      "info" : "ExpressionStatement[40856-40892]:ExpressionStatement[40998-41034]"
    }, {
      "left" : "size += width;",
      "right" : "size += width;",
      "info" : "ExpressionStatement[40937-40951]:ExpressionStatement[41079-41093]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40970-40982]:ReturnStatement[41112-41124]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41457-41463]:Modifier[41599-41605]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[41464-41474]:SimpleType[41606-41616]"
    }, {
      "left" : "appendFixedWidthPadRight",
      "right" : "appendFixedWidthPadRight",
      "info" : "SimpleName[41475-41499]:SimpleName[41617-41641]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[41500-41509]:SingleVariableDeclaration[41642-41651]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[41511-41520]:SingleVariableDeclaration[41653-41662]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[41522-41534]:SingleVariableDeclaration[41664-41676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41536-41623]:Block[41678-41765]"
    }, {
      "left" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "right" : "return appendFixedWidthPadRight(String.valueOf(value), width, padChar);",
      "info" : "ReturnStatement[41546-41617]:ReturnStatement[41688-41759]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42063-42069]:Modifier[42205-42211]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[42070-42080]:SimpleType[42212-42222]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[42081-42087]:SimpleName[42223-42229]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[42088-42097]:SingleVariableDeclaration[42230-42239]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[42099-42109]:SingleVariableDeclaration[42241-42251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42111-42245]:Block[42253-42387]"
    }, {
      "left" : "if (obj == null)",
      "right" : "if (obj == null)",
      "info" : "IfStatement[42121-42193]:IfStatement[42263-42335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42138-42193]:Block[42280-42335]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[42152-42183]:ReturnStatement[42294-42325]"
    }, {
      "left" : "return insert(index, obj.toString());",
      "right" : "return insert(index, obj.toString());",
      "info" : "ReturnStatement[42202-42239]:ReturnStatement[42344-42381]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42579-42585]:Modifier[42721-42727]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[42586-42596]:SimpleType[42728-42738]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[42597-42603]:SimpleName[42739-42745]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[42604-42613]:SingleVariableDeclaration[42746-42755]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[42615-42625]:SingleVariableDeclaration[42757-42767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42627-43082]:Block[42769-43224]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[42637-42658]:ExpressionStatement[42779-42800]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[42667-42723]:IfStatement[42809-42865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42684-42723]:Block[42826-42865]"
    }, {
      "left" : "str = nullText;",
      "right" : "str = nullText;",
      "info" : "ExpressionStatement[42698-42713]:ExpressionStatement[42840-42855]"
    }, {
      "left" : "int strLen = (str == null ? 0 : str.length());",
      "right" : "int strLen = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[42732-42778]:VariableDeclarationStatement[42874-42920]"
    }, {
      "left" : "if (strLen > 0)",
      "right" : "if (strLen > 0)",
      "info" : "IfStatement[42787-43055]:IfStatement[42929-43197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42803-43055]:Block[42945-43197]"
    }, {
      "left" : "int newSize = size + strLen;",
      "right" : "int newSize = size + strLen;",
      "info" : "VariableDeclarationStatement[42817-42845]:VariableDeclarationStatement[42959-42987]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[42858-42882]:ExpressionStatement[43000-43024]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + strLen, size - index);",
      "info" : "ExpressionStatement[42895-42965]:ExpressionStatement[43037-43107]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[42978-42993]:ExpressionStatement[43120-43135]"
    }, {
      "left" : "str.getChars(0, strLen, buffer, index);",
      "right" : "str.getChars(0, strLen, buffer, index);",
      "info" : "ExpressionStatement[43006-43045]:ExpressionStatement[43148-43187]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43064-43076]:ReturnStatement[43206-43218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43431-43437]:Modifier[43573-43579]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[43438-43448]:SimpleType[43580-43590]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[43449-43455]:SimpleName[43591-43597]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[43456-43465]:SingleVariableDeclaration[43598-43607]"
    }, {
      "left" : "char chars[]",
      "right" : "char chars[]",
      "info" : "SingleVariableDeclaration[43467-43479]:SingleVariableDeclaration[43609-43621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43481-43892]:Block[43623-44034]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[43491-43512]:ExpressionStatement[43633-43654]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[43521-43595]:IfStatement[43663-43737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43540-43595]:Block[43682-43737]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[43554-43585]:ReturnStatement[43696-43727]"
    }, {
      "left" : "int len = chars.length;",
      "right" : "int len = chars.length;",
      "info" : "VariableDeclarationStatement[43604-43627]:VariableDeclarationStatement[43746-43769]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[43636-43865]:IfStatement[43778-44007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43649-43865]:Block[43791-44007]"
    }, {
      "left" : "ensureCapacity(size + len);",
      "right" : "ensureCapacity(size + len);",
      "info" : "ExpressionStatement[43663-43690]:ExpressionStatement[43805-43832]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + len, size - index);",
      "info" : "ExpressionStatement[43703-43770]:ExpressionStatement[43845-43912]"
    }, {
      "left" : "System.arraycopy(chars, 0, buffer, index, len);",
      "right" : "System.arraycopy(chars, 0, buffer, index, len);",
      "info" : "ExpressionStatement[43783-43830]:ExpressionStatement[43925-43972]"
    }, {
      "left" : "size += len;",
      "right" : "size += len;",
      "info" : "ExpressionStatement[43843-43855]:ExpressionStatement[43985-43997]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43874-43886]:ReturnStatement[44016-44028]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44421-44427]:Modifier[44563-44569]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[44428-44438]:SimpleType[44570-44580]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[44439-44445]:SimpleName[44581-44587]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[44446-44455]:SingleVariableDeclaration[44588-44597]"
    }, {
      "left" : "char chars[]",
      "right" : "char chars[]",
      "info" : "SingleVariableDeclaration[44457-44469]:SingleVariableDeclaration[44599-44611]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[44471-44481]:SingleVariableDeclaration[44613-44623]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[44483-44493]:SingleVariableDeclaration[44625-44635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44495-45193]:Block[44637-45335]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[44505-44526]:ExpressionStatement[44647-44668]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[44535-44609]:IfStatement[44677-44751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44554-44609]:Block[44696-44751]"
    }, {
      "left" : "return insert(index, nullText);",
      "right" : "return insert(index, nullText);",
      "info" : "ReturnStatement[44568-44599]:ReturnStatement[44710-44741]"
    }, {
      "left" : "if (offset < 0 || offset > chars.length)",
      "right" : "if (offset < 0 || offset > chars.length)",
      "info" : "IfStatement[44618-44754]:IfStatement[44760-44896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44659-44754]:Block[44801-44896]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid offset: \" + offset);",
      "info" : "ThrowStatement[44673-44744]:ThrowStatement[44815-44886]"
    }, {
      "left" : "if (length < 0 || offset + length > chars.length)",
      "right" : "if (length < 0 || offset + length > chars.length)",
      "info" : "IfStatement[44763-44908]:IfStatement[44905-45050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44813-44908]:Block[44955-45050]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "right" : "throw new StringIndexOutOfBoundsException(\"Invalid length: \" + length);",
      "info" : "ThrowStatement[44827-44898]:ThrowStatement[44969-45040]"
    }, {
      "left" : "if (length > 0)",
      "right" : "if (length > 0)",
      "info" : "IfStatement[44917-45166]:IfStatement[45059-45308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44933-45166]:Block[45075-45308]"
    }, {
      "left" : "ensureCapacity(size + length);",
      "right" : "ensureCapacity(size + length);",
      "info" : "ExpressionStatement[44947-44977]:ExpressionStatement[45089-45119]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + length, size - index);",
      "info" : "ExpressionStatement[44990-45060]:ExpressionStatement[45132-45202]"
    }, {
      "left" : "System.arraycopy(chars, offset, buffer, index, length);",
      "right" : "System.arraycopy(chars, offset, buffer, index, length);",
      "info" : "ExpressionStatement[45073-45128]:ExpressionStatement[45215-45270]"
    }, {
      "left" : "size += length;",
      "right" : "size += length;",
      "info" : "ExpressionStatement[45141-45156]:ExpressionStatement[45283-45298]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[45175-45187]:ReturnStatement[45317-45329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45468-45474]:Modifier[45610-45616]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[45475-45485]:SimpleType[45617-45627]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[45486-45492]:SimpleName[45628-45634]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[45493-45502]:SingleVariableDeclaration[45635-45644]"
    }, {
      "left" : "boolean value",
      "right" : "boolean value",
      "info" : "SingleVariableDeclaration[45504-45517]:SingleVariableDeclaration[45646-45659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45519-46214]:Block[45661-46356]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[45529-45550]:ExpressionStatement[45671-45692]"
    }, {
      "left" : "if (value)",
      "right" : "if (value)",
      "info" : "IfStatement[45559-46187]:IfStatement[45701-46329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45570-45858]:Block[45712-46000]"
    }, {
      "left" : "ensureCapacity(size + 4);",
      "right" : "ensureCapacity(size + 4);",
      "info" : "ExpressionStatement[45584-45609]:ExpressionStatement[45726-45751]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 4, size - index);",
      "info" : "ExpressionStatement[45622-45687]:ExpressionStatement[45764-45829]"
    }, {
      "left" : "buffer[index++] = 't';",
      "right" : "buffer[index++] = 't';",
      "info" : "ExpressionStatement[45700-45722]:ExpressionStatement[45842-45864]"
    }, {
      "left" : "buffer[index++] = 'r';",
      "right" : "buffer[index++] = 'r';",
      "info" : "ExpressionStatement[45735-45757]:ExpressionStatement[45877-45899]"
    }, {
      "left" : "buffer[index++] = 'u';",
      "right" : "buffer[index++] = 'u';",
      "info" : "ExpressionStatement[45770-45792]:ExpressionStatement[45912-45934]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[45805-45825]:ExpressionStatement[45947-45967]"
    }, {
      "left" : "size += 4;",
      "right" : "size += 4;",
      "info" : "ExpressionStatement[45838-45848]:ExpressionStatement[45980-45990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45864-46187]:Block[46006-46329]"
    }, {
      "left" : "ensureCapacity(size + 5);",
      "right" : "ensureCapacity(size + 5);",
      "info" : "ExpressionStatement[45878-45903]:ExpressionStatement[46020-46045]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 5, size - index);",
      "info" : "ExpressionStatement[45916-45981]:ExpressionStatement[46058-46123]"
    }, {
      "left" : "buffer[index++] = 'f';",
      "right" : "buffer[index++] = 'f';",
      "info" : "ExpressionStatement[45994-46016]:ExpressionStatement[46136-46158]"
    }, {
      "left" : "buffer[index++] = 'a';",
      "right" : "buffer[index++] = 'a';",
      "info" : "ExpressionStatement[46029-46051]:ExpressionStatement[46171-46193]"
    }, {
      "left" : "buffer[index++] = 'l';",
      "right" : "buffer[index++] = 'l';",
      "info" : "ExpressionStatement[46064-46086]:ExpressionStatement[46206-46228]"
    }, {
      "left" : "buffer[index++] = 's';",
      "right" : "buffer[index++] = 's';",
      "info" : "ExpressionStatement[46099-46121]:ExpressionStatement[46241-46263]"
    }, {
      "left" : "buffer[index] = 'e';",
      "right" : "buffer[index] = 'e';",
      "info" : "ExpressionStatement[46134-46154]:ExpressionStatement[46276-46296]"
    }, {
      "left" : "size += 5;",
      "right" : "size += 5;",
      "info" : "ExpressionStatement[46167-46177]:ExpressionStatement[46309-46319]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46196-46208]:ReturnStatement[46338-46350]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46489-46495]:Modifier[46631-46637]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[46496-46506]:SimpleType[46638-46648]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[46507-46513]:SimpleName[46649-46655]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[46514-46523]:SingleVariableDeclaration[46656-46665]"
    }, {
      "left" : "char value",
      "right" : "char value",
      "info" : "SingleVariableDeclaration[46525-46535]:SingleVariableDeclaration[46667-46677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46537-46750]:Block[46679-46892]"
    }, {
      "left" : "validateIndex(index);",
      "right" : "validateIndex(index);",
      "info" : "ExpressionStatement[46547-46568]:ExpressionStatement[46689-46710]"
    }, {
      "left" : "ensureCapacity(size + 1);",
      "right" : "ensureCapacity(size + 1);",
      "info" : "ExpressionStatement[46577-46602]:ExpressionStatement[46719-46744]"
    }, {
      "left" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "right" : "System.arraycopy(buffer, index, buffer, index + 1, size - index);",
      "info" : "ExpressionStatement[46611-46676]:ExpressionStatement[46753-46818]"
    }, {
      "left" : "buffer[index] = value;",
      "right" : "buffer[index] = value;",
      "info" : "ExpressionStatement[46685-46707]:ExpressionStatement[46827-46849]"
    }, {
      "left" : "size++;",
      "right" : "size++;",
      "info" : "ExpressionStatement[46716-46723]:ExpressionStatement[46858-46865]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46732-46744]:ReturnStatement[46874-46886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47025-47031]:Modifier[47167-47173]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[47032-47042]:SimpleType[47174-47184]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[47043-47049]:SimpleName[47185-47191]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[47050-47059]:SingleVariableDeclaration[47192-47201]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[47061-47070]:SingleVariableDeclaration[47203-47212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47072-47132]:Block[47214-47274]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[47082-47126]:ReturnStatement[47224-47268]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47407-47413]:Modifier[47549-47555]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[47414-47424]:SimpleType[47556-47566]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[47425-47431]:SimpleName[47567-47573]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[47432-47441]:SingleVariableDeclaration[47574-47583]"
    }, {
      "left" : "long value",
      "right" : "long value",
      "info" : "SingleVariableDeclaration[47443-47453]:SingleVariableDeclaration[47585-47595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47455-47515]:Block[47597-47657]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[47465-47509]:ReturnStatement[47607-47651]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47790-47796]:Modifier[47932-47938]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[47797-47807]:SimpleType[47939-47949]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[47808-47814]:SimpleName[47950-47956]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[47815-47824]:SingleVariableDeclaration[47957-47966]"
    }, {
      "left" : "float value",
      "right" : "float value",
      "info" : "SingleVariableDeclaration[47826-47837]:SingleVariableDeclaration[47968-47979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47839-47899]:Block[47981-48041]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[47849-47893]:ReturnStatement[47991-48035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48174-48180]:Modifier[48316-48322]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[48181-48191]:SimpleType[48323-48333]"
    }, {
      "left" : "insert",
      "right" : "insert",
      "info" : "SimpleName[48192-48198]:SimpleName[48334-48340]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[48199-48208]:SingleVariableDeclaration[48341-48350]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[48210-48222]:SingleVariableDeclaration[48352-48364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48224-48284]:Block[48366-48426]"
    }, {
      "left" : "return insert(index, String.valueOf(value));",
      "right" : "return insert(index, String.valueOf(value));",
      "info" : "ReturnStatement[48234-48278]:ReturnStatement[48376-48420]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[48684-48691]:Modifier[48826-48833]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48692-48696]:PrimitiveType[48834-48838]"
    }, {
      "left" : "deleteImpl",
      "right" : "deleteImpl",
      "info" : "SimpleName[48697-48707]:SimpleName[48839-48849]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[48708-48722]:SingleVariableDeclaration[48850-48864]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[48724-48736]:SingleVariableDeclaration[48866-48878]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[48738-48745]:SingleVariableDeclaration[48880-48887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48747-48856]:Block[48889-48998]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex, size - endIndex);",
      "info" : "ExpressionStatement[48757-48829]:ExpressionStatement[48899-48971]"
    }, {
      "left" : "size -= len;",
      "right" : "size -= len;",
      "info" : "ExpressionStatement[48838-48850]:ExpressionStatement[48980-48992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49251-49257]:Modifier[49393-49399]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[49258-49268]:SimpleType[49400-49410]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[49269-49275]:SimpleName[49411-49417]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[49276-49290]:SingleVariableDeclaration[49418-49432]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[49292-49304]:SingleVariableDeclaration[49434-49446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49306-49515]:Block[49448-49657]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[49316-49363]:ExpressionStatement[49458-49505]"
    }, {
      "left" : "int len = endIndex - startIndex;",
      "right" : "int len = endIndex - startIndex;",
      "info" : "VariableDeclarationStatement[49372-49404]:VariableDeclarationStatement[49514-49546]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[49413-49488]:IfStatement[49555-49630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49426-49488]:Block[49568-49630]"
    }, {
      "left" : "deleteImpl(startIndex, endIndex, len);",
      "right" : "deleteImpl(startIndex, endIndex, len);",
      "info" : "ExpressionStatement[49440-49478]:ExpressionStatement[49582-49620]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[49497-49509]:ReturnStatement[49639-49651]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49768-49774]:Modifier[49910-49916]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[49775-49785]:SimpleType[49917-49927]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[49786-49795]:SimpleName[49928-49937]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[49796-49803]:SingleVariableDeclaration[49938-49945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49805-50221]:Block[49947-50363]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[49815-50194]:ForStatement[49957-50336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49846-50194]:Block[49988-50336]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[49860-50184]:IfStatement[50002-50326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49881-50184]:Block[50023-50326]"
    }, {
      "left" : "int start = i;",
      "right" : "int start = i;",
      "info" : "VariableDeclarationStatement[49899-49913]:VariableDeclarationStatement[50041-50055]"
    }, {
      "left" : "while (++i < size)",
      "right" : "while (++i < size)",
      "info" : "WhileStatement[49930-50064]:WhileStatement[50072-50206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49949-50064]:Block[50091-50206]"
    }, {
      "left" : "if (buffer[i] != ch)",
      "right" : "if (buffer[i] != ch)",
      "info" : "IfStatement[49971-50046]:IfStatement[50113-50188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49992-50046]:Block[50134-50188]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[50018-50024]:BreakStatement[50160-50166]"
    }, {
      "left" : "int len = i - start;",
      "right" : "int len = i - start;",
      "info" : "VariableDeclarationStatement[50081-50101]:VariableDeclarationStatement[50223-50243]"
    }, {
      "left" : "deleteImpl(start, i, len);",
      "right" : "deleteImpl(start, i, len);",
      "info" : "ExpressionStatement[50118-50144]:ExpressionStatement[50260-50286]"
    }, {
      "left" : "i -= len;",
      "right" : "i -= len;",
      "info" : "ExpressionStatement[50161-50170]:ExpressionStatement[50303-50312]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50203-50215]:ReturnStatement[50345-50357]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50396-50402]:Modifier[50538-50544]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[50403-50413]:SimpleType[50545-50555]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[50414-50425]:SimpleName[50556-50567]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[50426-50433]:SingleVariableDeclaration[50568-50575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50435-50627]:Block[50577-50769]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[50445-50600]:ForStatement[50587-50742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50476-50600]:Block[50618-50742]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[50490-50590]:IfStatement[50632-50732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50511-50590]:Block[50653-50732]"
    }, {
      "left" : "deleteImpl(i, i + 1, 1);",
      "right" : "deleteImpl(i, i + 1, 1);",
      "info" : "ExpressionStatement[50529-50553]:ExpressionStatement[50671-50695]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[50570-50576]:BreakStatement[50712-50718]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50609-50621]:ReturnStatement[50751-50763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50898-50904]:Modifier[51040-51046]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[50905-50915]:SimpleType[51047-51057]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[50916-50925]:SimpleName[51058-51067]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[50926-50936]:SingleVariableDeclaration[51068-51078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50938-51237]:Block[51080-51379]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[50948-50991]:VariableDeclarationStatement[51090-51133]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[51000-51210]:IfStatement[51142-51352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51013-51210]:Block[51155-51352]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[51027-51055]:VariableDeclarationStatement[51169-51197]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[51068-51200]:WhileStatement[51210-51342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51087-51200]:Block[51229-51342]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[51105-51141]:ExpressionStatement[51247-51283]"
    }, {
      "left" : "index = indexOf(str, index);",
      "right" : "index = indexOf(str, index);",
      "info" : "ExpressionStatement[51158-51186]:ExpressionStatement[51300-51328]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51219-51231]:ReturnStatement[51361-51373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51430-51436]:Modifier[51572-51578]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[51437-51447]:SimpleType[51579-51589]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[51448-51459]:SimpleName[51590-51601]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[51460-51470]:SingleVariableDeclaration[51602-51612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51472-51723]:Block[51614-51865]"
    }, {
      "left" : "int len = (str == null ? 0 : str.length());",
      "right" : "int len = (str == null ? 0 : str.length());",
      "info" : "VariableDeclarationStatement[51482-51525]:VariableDeclarationStatement[51624-51667]"
    }, {
      "left" : "if (len > 0)",
      "right" : "if (len > 0)",
      "info" : "IfStatement[51534-51696]:IfStatement[51676-51838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51547-51696]:Block[51689-51838]"
    }, {
      "left" : "int index = indexOf(str, 0);",
      "right" : "int index = indexOf(str, 0);",
      "info" : "VariableDeclarationStatement[51561-51589]:VariableDeclarationStatement[51703-51731]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[51602-51686]:IfStatement[51744-51828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51618-51686]:Block[51760-51828]"
    }, {
      "left" : "deleteImpl(index, index + len, len);",
      "right" : "deleteImpl(index, index + len, len);",
      "info" : "ExpressionStatement[51636-51672]:ExpressionStatement[51778-51814]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[51705-51717]:ReturnStatement[51847-51859]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52227-52233]:Modifier[52369-52375]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[52234-52244]:SimpleType[52376-52386]"
    }, {
      "left" : "deleteAll",
      "right" : "deleteAll",
      "info" : "SimpleName[52245-52254]:SimpleName[52387-52396]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[52255-52273]:SingleVariableDeclaration[52397-52415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52275-52334]:Block[52417-52476]"
    }, {
      "left" : "return replace(matcher, null, 0, size, -1);",
      "right" : "return replace(matcher, null, 0, size, -1);",
      "info" : "ReturnStatement[52285-52328]:ReturnStatement[52427-52470]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52758-52764]:Modifier[52900-52906]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[52765-52775]:SimpleType[52907-52917]"
    }, {
      "left" : "deleteFirst",
      "right" : "deleteFirst",
      "info" : "SimpleName[52776-52787]:SimpleName[52918-52929]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[52788-52806]:SingleVariableDeclaration[52930-52948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52808-52866]:Block[52950-53008]"
    }, {
      "left" : "return replace(matcher, null, 0, size, 1);",
      "right" : "return replace(matcher, null, 0, size, 1);",
      "info" : "ReturnStatement[52818-52860]:ReturnStatement[52960-53002]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53455-53462]:Modifier[53597-53604]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53463-53467]:PrimitiveType[53605-53609]"
    }, {
      "left" : "replaceImpl",
      "right" : "replaceImpl",
      "info" : "SimpleName[53468-53479]:SimpleName[53610-53621]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[53480-53494]:SingleVariableDeclaration[53622-53636]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[53496-53508]:SingleVariableDeclaration[53638-53650]"
    }, {
      "left" : "int removeLen",
      "right" : "int removeLen",
      "info" : "SingleVariableDeclaration[53510-53523]:SingleVariableDeclaration[53652-53665]"
    }, {
      "left" : "String insertStr",
      "right" : "String insertStr",
      "info" : "SingleVariableDeclaration[53525-53541]:SingleVariableDeclaration[53667-53683]"
    }, {
      "left" : "int insertLen",
      "right" : "int insertLen",
      "info" : "SingleVariableDeclaration[53543-53556]:SingleVariableDeclaration[53685-53698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53558-53932]:Block[53700-54074]"
    }, {
      "left" : "int newSize = size - removeLen + insertLen;",
      "right" : "int newSize = size - removeLen + insertLen;",
      "info" : "VariableDeclarationStatement[53568-53611]:VariableDeclarationStatement[53710-53753]"
    }, {
      "left" : "if (insertLen != removeLen)",
      "right" : "if (insertLen != removeLen)",
      "info" : "IfStatement[53620-53821]:IfStatement[53762-53963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53648-53821]:Block[53790-53963]"
    }, {
      "left" : "ensureCapacity(newSize);",
      "right" : "ensureCapacity(newSize);",
      "info" : "ExpressionStatement[53662-53686]:ExpressionStatement[53804-53828]"
    }, {
      "left" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "right" : "System.arraycopy(buffer, endIndex, buffer, startIndex + insertLen, size - endIndex);",
      "info" : "ExpressionStatement[53699-53783]:ExpressionStatement[53841-53925]"
    }, {
      "left" : "size = newSize;",
      "right" : "size = newSize;",
      "info" : "ExpressionStatement[53796-53811]:ExpressionStatement[53938-53953]"
    }, {
      "left" : "if (insertLen > 0)",
      "right" : "if (insertLen > 0)",
      "info" : "IfStatement[53830-53926]:IfStatement[53972-54068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53849-53926]:Block[53991-54068]"
    }, {
      "left" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "right" : "insertStr.getChars(0, insertLen, buffer, startIndex);",
      "info" : "ExpressionStatement[53863-53916]:ExpressionStatement[54005-54058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54493-54499]:Modifier[54635-54641]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[54500-54510]:SimpleType[54642-54652]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[54511-54518]:SimpleName[54653-54660]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[54519-54533]:SingleVariableDeclaration[54661-54675]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[54535-54547]:SingleVariableDeclaration[54677-54689]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[54549-54566]:SingleVariableDeclaration[54691-54708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54568-54813]:Block[54710-54955]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[54578-54625]:ExpressionStatement[54720-54767]"
    }, {
      "left" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int insertLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[54634-54697]:VariableDeclarationStatement[54776-54839]"
    }, {
      "left" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "right" : "replaceImpl(startIndex, endIndex, endIndex - startIndex, replaceStr, insertLen);",
      "info" : "ExpressionStatement[54706-54786]:ExpressionStatement[54848-54928]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[54795-54807]:ReturnStatement[54937-54949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55143-55149]:Modifier[55285-55291]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[55150-55160]:SimpleType[55292-55302]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[55161-55171]:SimpleName[55303-55313]"
    }, {
      "left" : "char search",
      "right" : "char search",
      "info" : "SingleVariableDeclaration[55172-55183]:SingleVariableDeclaration[55314-55325]"
    }, {
      "left" : "char replace",
      "right" : "char replace",
      "info" : "SingleVariableDeclaration[55185-55197]:SingleVariableDeclaration[55327-55339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55199-55431]:Block[55341-55573]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[55209-55404]:IfStatement[55351-55546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55232-55404]:Block[55374-55546]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[55246-55394]:ForStatement[55388-55536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55277-55394]:Block[55419-55536]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[55295-55380]:IfStatement[55437-55522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55320-55380]:Block[55462-55522]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[55342-55362]:ExpressionStatement[55484-55504]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[55413-55425]:ReturnStatement[55555-55567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55697-55703]:Modifier[55839-55845]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[55704-55714]:SimpleType[55846-55856]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[55715-55727]:SimpleName[55857-55869]"
    }, {
      "left" : "char search",
      "right" : "char search",
      "info" : "SingleVariableDeclaration[55728-55739]:SingleVariableDeclaration[55870-55881]"
    }, {
      "left" : "char replace",
      "right" : "char replace",
      "info" : "SingleVariableDeclaration[55741-55753]:SingleVariableDeclaration[55883-55895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55755-56014]:Block[55897-56156]"
    }, {
      "left" : "if (search != replace)",
      "right" : "if (search != replace)",
      "info" : "IfStatement[55765-55987]:IfStatement[55907-56129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55788-55987]:Block[55930-56129]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[55802-55977]:ForStatement[55944-56119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55833-55977]:Block[55975-56119]"
    }, {
      "left" : "if (buffer[i] == search)",
      "right" : "if (buffer[i] == search)",
      "info" : "IfStatement[55851-55963]:IfStatement[55993-56105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55876-55963]:Block[56018-56105]"
    }, {
      "left" : "buffer[i] = replace;",
      "right" : "buffer[i] = replace;",
      "info" : "ExpressionStatement[55898-55918]:ExpressionStatement[56040-56060]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[55939-55945]:BreakStatement[56081-56087]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[55996-56008]:ReturnStatement[56138-56150]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56402-56408]:Modifier[56544-56550]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[56409-56419]:SimpleType[56551-56561]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[56420-56430]:SimpleName[56562-56572]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[56431-56447]:SingleVariableDeclaration[56573-56589]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[56449-56466]:SingleVariableDeclaration[56591-56608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56468-56930]:Block[56610-57072]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[56478-56539]:VariableDeclarationStatement[56620-56681]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[56548-56903]:IfStatement[56690-57045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56567-56903]:Block[56709-57045]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[56581-56645]:VariableDeclarationStatement[56723-56787]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[56658-56692]:VariableDeclarationStatement[56800-56834]"
    }, {
      "left" : "while (index >= 0)",
      "right" : "while (index >= 0)",
      "info" : "WhileStatement[56705-56893]:WhileStatement[56847-57035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56724-56893]:Block[56866-57035]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[56742-56815]:ExpressionStatement[56884-56957]"
    }, {
      "left" : "index = indexOf(searchStr, index + replaceLen);",
      "right" : "index = indexOf(searchStr, index + replaceLen);",
      "info" : "ExpressionStatement[56832-56879]:ExpressionStatement[56974-57021]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[56912-56924]:ReturnStatement[57054-57066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57239-57245]:Modifier[57381-57387]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[57246-57256]:SimpleType[57388-57398]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[57257-57269]:SimpleName[57399-57411]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[57270-57286]:SingleVariableDeclaration[57412-57428]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[57288-57305]:SingleVariableDeclaration[57430-57447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57307-57706]:Block[57449-57848]"
    }, {
      "left" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "right" : "int searchLen = (searchStr == null ? 0 : searchStr.length());",
      "info" : "VariableDeclarationStatement[57317-57378]:VariableDeclarationStatement[57459-57520]"
    }, {
      "left" : "if (searchLen > 0)",
      "right" : "if (searchLen > 0)",
      "info" : "IfStatement[57387-57679]:IfStatement[57529-57821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57406-57679]:Block[57548-57821]"
    }, {
      "left" : "int index = indexOf(searchStr, 0);",
      "right" : "int index = indexOf(searchStr, 0);",
      "info" : "VariableDeclarationStatement[57420-57454]:VariableDeclarationStatement[57562-57596]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[57467-57669]:IfStatement[57609-57811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57483-57669]:Block[57625-57811]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[57501-57565]:VariableDeclarationStatement[57643-57707]"
    }, {
      "left" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(index, index + searchLen, searchLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[57582-57655]:ExpressionStatement[57724-57797]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[57688-57700]:ReturnStatement[57830-57842]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58300-58306]:Modifier[58442-58448]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[58307-58317]:SimpleType[58449-58459]"
    }, {
      "left" : "replaceAll",
      "right" : "replaceAll",
      "info" : "SimpleName[58318-58328]:SimpleName[58460-58470]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[58329-58347]:SingleVariableDeclaration[58471-58489]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[58349-58366]:SingleVariableDeclaration[58491-58508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58368-58433]:Block[58510-58575]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, -1);",
      "right" : "return replace(matcher, replaceStr, 0, size, -1);",
      "info" : "ReturnStatement[58378-58427]:ReturnStatement[58520-58569]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58938-58944]:Modifier[59080-59086]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[58945-58955]:SimpleType[59087-59097]"
    }, {
      "left" : "replaceFirst",
      "right" : "replaceFirst",
      "info" : "SimpleName[58956-58968]:SimpleName[59098-59110]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[58969-58987]:SingleVariableDeclaration[59111-59129]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[58989-59006]:SingleVariableDeclaration[59131-59148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59008-59072]:Block[59150-59214]"
    }, {
      "left" : "return replace(matcher, replaceStr, 0, size, 1);",
      "right" : "return replace(matcher, replaceStr, 0, size, 1);",
      "info" : "ReturnStatement[59018-59066]:ReturnStatement[59160-59208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59997-60003]:Modifier[60139-60145]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[60004-60014]:SimpleType[60146-60156]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[60015-60022]:SimpleName[60157-60164]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[60036-60054]:SingleVariableDeclaration[60178-60196]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[60056-60073]:SingleVariableDeclaration[60198-60215]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[60087-60101]:SingleVariableDeclaration[60229-60243]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[60103-60115]:SingleVariableDeclaration[60245-60257]"
    }, {
      "left" : "int replaceCount",
      "right" : "int replaceCount",
      "info" : "SingleVariableDeclaration[60117-60133]:SingleVariableDeclaration[60259-60275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60135-60283]:Block[60277-60425]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[60145-60192]:ExpressionStatement[60287-60334]"
    }, {
      "left" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "right" : "return replaceImpl(matcher, replaceStr, startIndex, endIndex, replaceCount);",
      "info" : "ReturnStatement[60201-60277]:ReturnStatement[60343-60419]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[61021-61028]:Modifier[61163-61170]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[61029-61039]:SimpleType[61171-61181]"
    }, {
      "left" : "replaceImpl",
      "right" : "replaceImpl",
      "info" : "SimpleName[61040-61051]:SimpleName[61182-61193]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[61065-61083]:SingleVariableDeclaration[61207-61225]"
    }, {
      "left" : "String replaceStr",
      "right" : "String replaceStr",
      "info" : "SingleVariableDeclaration[61085-61102]:SingleVariableDeclaration[61227-61244]"
    }, {
      "left" : "int from",
      "right" : "int from",
      "info" : "SingleVariableDeclaration[61116-61124]:SingleVariableDeclaration[61258-61266]"
    }, {
      "left" : "int to",
      "right" : "int to",
      "info" : "SingleVariableDeclaration[61126-61132]:SingleVariableDeclaration[61268-61274]"
    }, {
      "left" : "int replaceCount",
      "right" : "int replaceCount",
      "info" : "SingleVariableDeclaration[61134-61150]:SingleVariableDeclaration[61276-61292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61152-61810]:Block[61294-61952]"
    }, {
      "left" : "if (matcher == null || size == 0)",
      "right" : "if (matcher == null || size == 0)",
      "info" : "IfStatement[61162-61232]:IfStatement[61304-61374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61196-61232]:Block[61338-61374]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[61210-61222]:ReturnStatement[61352-61364]"
    }, {
      "left" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "right" : "int replaceLen = (replaceStr == null ? 0 : replaceStr.length());",
      "info" : "VariableDeclarationStatement[61241-61305]:VariableDeclarationStatement[61383-61447]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[61314-61334]:VariableDeclarationStatement[61456-61476]"
    }, {
      "left" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "right" : "for (int i = from; i < to && replaceCount != 0; i++)",
      "info" : "ForStatement[61343-61783]:ForStatement[61485-61925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61396-61783]:Block[61538-61925]"
    }, {
      "left" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "right" : "int removeLen = matcher.isMatch(buf, i, from, to);",
      "info" : "VariableDeclarationStatement[61410-61460]:VariableDeclarationStatement[61552-61602]"
    }, {
      "left" : "if (removeLen > 0)",
      "right" : "if (removeLen > 0)",
      "info" : "IfStatement[61473-61773]:IfStatement[61615-61915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61492-61773]:Block[61634-61915]"
    }, {
      "left" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "right" : "replaceImpl(i, i + removeLen, removeLen, replaceStr, replaceLen);",
      "info" : "ExpressionStatement[61510-61575]:ExpressionStatement[61652-61717]"
    }, {
      "left" : "to = to - removeLen + replaceLen;",
      "right" : "to = to - removeLen + replaceLen;",
      "info" : "ExpressionStatement[61592-61625]:ExpressionStatement[61734-61767]"
    }, {
      "left" : "i = i + replaceLen - 1;",
      "right" : "i = i + replaceLen - 1;",
      "info" : "ExpressionStatement[61642-61665]:ExpressionStatement[61784-61807]"
    }, {
      "left" : "if (replaceCount > 0)",
      "right" : "if (replaceCount > 0)",
      "info" : "IfStatement[61682-61759]:IfStatement[61824-61901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61704-61759]:Block[61846-61901]"
    }, {
      "left" : "replaceCount--;",
      "right" : "replaceCount--;",
      "info" : "ExpressionStatement[61726-61741]:ExpressionStatement[61868-61883]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[61792-61804]:ReturnStatement[61934-61946]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62039-62045]:Modifier[62181-62187]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[62046-62056]:SimpleType[62188-62198]"
    }, {
      "left" : "reverse",
      "right" : "reverse",
      "info" : "SimpleName[62057-62064]:SimpleName[62199-62206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62067-62437]:Block[62209-62579]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[62077-62128]:IfStatement[62219-62270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62092-62128]:Block[62234-62270]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[62106-62118]:ReturnStatement[62248-62260]"
    }, {
      "left" : "int half = size / 2;",
      "right" : "int half = size / 2;",
      "info" : "VariableDeclarationStatement[62146-62166]:VariableDeclarationStatement[62288-62308]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[62175-62195]:VariableDeclarationStatement[62317-62337]"
    }, {
      "left" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "right" : "for (int leftIdx = 0, rightIdx = size - 1; leftIdx < half; leftIdx++,rightIdx--)",
      "info" : "ForStatement[62204-62410]:ForStatement[62346-62552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62285-62410]:Block[62427-62552]"
    }, {
      "left" : "char swap = buf[leftIdx];",
      "right" : "char swap = buf[leftIdx];",
      "info" : "VariableDeclarationStatement[62299-62324]:VariableDeclarationStatement[62441-62466]"
    }, {
      "left" : "buf[leftIdx] = buf[rightIdx];",
      "right" : "buf[leftIdx] = buf[rightIdx];",
      "info" : "ExpressionStatement[62337-62366]:ExpressionStatement[62479-62508]"
    }, {
      "left" : "buf[rightIdx] = swap;",
      "right" : "buf[rightIdx] = swap;",
      "info" : "ExpressionStatement[62379-62400]:ExpressionStatement[62521-62542]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[62419-62431]:ReturnStatement[62561-62573]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62697-62703]:Modifier[62839-62845]"
    }, {
      "left" : "StrBuilder",
      "right" : "StrBuilder",
      "info" : "SimpleType[62704-62714]:SimpleType[62846-62856]"
    }, {
      "left" : "trim",
      "right" : "trim",
      "info" : "SimpleName[62715-62719]:SimpleName[62857-62861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62722-63168]:Block[62864-63310]"
    }, {
      "left" : "if (size == 0)",
      "right" : "if (size == 0)",
      "info" : "IfStatement[62732-62783]:IfStatement[62874-62925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62747-62783]:Block[62889-62925]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[62761-62773]:ReturnStatement[62903-62915]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[62792-62807]:VariableDeclarationStatement[62934-62949]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[62816-62836]:VariableDeclarationStatement[62958-62978]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[62845-62857]:VariableDeclarationStatement[62987-62999]"
    }, {
      "left" : "while (pos < len && buf[pos] <= ' ')",
      "right" : "while (pos < len && buf[pos] <= ' ')",
      "info" : "WhileStatement[62866-62933]:WhileStatement[63008-63075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62903-62933]:Block[63045-63075]"
    }, {
      "left" : "pos++;",
      "right" : "pos++;",
      "info" : "ExpressionStatement[62917-62923]:ExpressionStatement[63059-63065]"
    }, {
      "left" : "while (pos < len && buf[len - 1] <= ' ')",
      "right" : "while (pos < len && buf[len - 1] <= ' ')",
      "info" : "WhileStatement[62942-63013]:WhileStatement[63084-63155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62983-63013]:Block[63125-63155]"
    }, {
      "left" : "len--;",
      "right" : "len--;",
      "info" : "ExpressionStatement[62997-63003]:ExpressionStatement[63139-63145]"
    }, {
      "left" : "if (len < size)",
      "right" : "if (len < size)",
      "info" : "IfStatement[63022-63080]:IfStatement[63164-63222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63038-63080]:Block[63180-63222]"
    }, {
      "left" : "delete(len, size);",
      "right" : "delete(len, size);",
      "info" : "ExpressionStatement[63052-63070]:ExpressionStatement[63194-63212]"
    }, {
      "left" : "if (pos > 0)",
      "right" : "if (pos > 0)",
      "info" : "IfStatement[63089-63141]:IfStatement[63231-63283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63102-63141]:Block[63244-63283]"
    }, {
      "left" : "delete(0, pos);",
      "right" : "delete(0, pos);",
      "info" : "ExpressionStatement[63116-63131]:ExpressionStatement[63258-63273]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[63150-63162]:ReturnStatement[63292-63304]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63550-63556]:Modifier[63692-63698]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63557-63564]:PrimitiveType[63699-63706]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[63565-63575]:SimpleName[63707-63717]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[63576-63586]:SingleVariableDeclaration[63718-63728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63588-63972]:Block[63730-64114]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[63598-63652]:IfStatement[63740-63794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63615-63652]:Block[63757-63794]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63629-63642]:ReturnStatement[63771-63784]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[63661-63684]:VariableDeclarationStatement[63803-63826]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[63693-63743]:IfStatement[63835-63885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63707-63743]:Block[63849-63885]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63721-63733]:ReturnStatement[63863-63875]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[63752-63805]:IfStatement[63894-63947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63768-63805]:Block[63910-63947]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63782-63795]:ReturnStatement[63924-63937]"
    }, {
      "left" : "for (int i = 0; i < len; i++)",
      "right" : "for (int i = 0; i < len; i++)",
      "info" : "ForStatement[63814-63945]:ForStatement[63956-64087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63844-63945]:Block[63986-64087]"
    }, {
      "left" : "if (buffer[i] != str.charAt(i))",
      "right" : "if (buffer[i] != str.charAt(i))",
      "info" : "IfStatement[63858-63935]:IfStatement[64000-64077]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63890-63935]:Block[64032-64077]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63908-63921]:ReturnStatement[64050-64063]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63954-63966]:ReturnStatement[64096-64108]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64272-64278]:Modifier[64414-64420]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64279-64286]:PrimitiveType[64421-64428]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[64287-64295]:SimpleName[64429-64437]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[64296-64306]:SingleVariableDeclaration[64438-64448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64308-64730]:Block[64450-64872]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[64318-64372]:IfStatement[64460-64514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64335-64372]:Block[64477-64514]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[64349-64362]:ReturnStatement[64491-64504]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[64381-64404]:VariableDeclarationStatement[64523-64546]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[64413-64463]:IfStatement[64555-64605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64427-64463]:Block[64569-64605]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[64441-64453]:ReturnStatement[64583-64595]"
    }, {
      "left" : "if (len > size)",
      "right" : "if (len > size)",
      "info" : "IfStatement[64472-64525]:IfStatement[64614-64667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64488-64525]:Block[64630-64667]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[64502-64515]:ReturnStatement[64644-64657]"
    }, {
      "left" : "int pos = size - len;",
      "right" : "int pos = size - len;",
      "info" : "VariableDeclarationStatement[64534-64555]:VariableDeclarationStatement[64676-64697]"
    }, {
      "left" : "for (int i = 0; i < len; i++,pos++)",
      "right" : "for (int i = 0; i < len; i++,pos++)",
      "info" : "ForStatement[64564-64703]:ForStatement[64706-64845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64600-64703]:Block[64742-64845]"
    }, {
      "left" : "if (buffer[pos] != str.charAt(i))",
      "right" : "if (buffer[pos] != str.charAt(i))",
      "info" : "IfStatement[64614-64693]:IfStatement[64756-64835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64648-64693]:Block[64790-64835]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[64666-64679]:ReturnStatement[64808-64821]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[64712-64724]:ReturnStatement[64854-64866]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65058-65064]:Modifier[65200-65206]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[65065-65071]:SimpleType[65207-65213]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[65072-65081]:SimpleName[65214-65223]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[65082-65091]:SingleVariableDeclaration[65224-65233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65093-65139]:Block[65235-65281]"
    }, {
      "left" : "return substring(start, size);",
      "right" : "return substring(start, size);",
      "info" : "ReturnStatement[65103-65133]:ReturnStatement[65245-65275]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65729-65735]:Modifier[65871-65877]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[65736-65742]:SimpleType[65878-65884]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[65743-65752]:SimpleName[65885-65894]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[65753-65767]:SingleVariableDeclaration[65895-65909]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[65769-65781]:SingleVariableDeclaration[65911-65923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65783-65916]:Block[65925-66058]"
    }, {
      "left" : "endIndex = validateRange(startIndex, endIndex);",
      "right" : "endIndex = validateRange(startIndex, endIndex);",
      "info" : "ExpressionStatement[65793-65840]:ExpressionStatement[65935-65982]"
    }, {
      "left" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "right" : "return new String(buffer, startIndex, endIndex - startIndex);",
      "info" : "ReturnStatement[65849-65910]:ReturnStatement[65991-66052]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66426-66432]:Modifier[66568-66574]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[66433-66439]:SimpleType[66575-66581]"
    }, {
      "left" : "leftString",
      "right" : "leftString",
      "info" : "SimpleName[66440-66450]:SimpleName[66582-66592]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[66451-66461]:SingleVariableDeclaration[66593-66603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66463-66682]:Block[66605-66824]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[66473-66676]:IfStatement[66615-66818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66490-66524]:Block[66632-66666]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[66504-66514]:ReturnStatement[66646-66656]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[66530-66676]:IfStatement[66672-66818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66550-66609]:Block[66692-66751]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[66564-66599]:ReturnStatement[66706-66741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66615-66676]:Block[66757-66818]"
    }, {
      "left" : "return new String(buffer, 0, length);",
      "right" : "return new String(buffer, 0, length);",
      "info" : "ReturnStatement[66629-66666]:ReturnStatement[66771-66808]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67194-67200]:Modifier[67336-67342]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[67201-67207]:SimpleType[67343-67349]"
    }, {
      "left" : "rightString",
      "right" : "rightString",
      "info" : "SimpleName[67208-67219]:SimpleName[67350-67361]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[67220-67230]:SingleVariableDeclaration[67362-67372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67232-67463]:Block[67374-67605]"
    }, {
      "left" : "if (length <= 0)",
      "right" : "if (length <= 0)",
      "info" : "IfStatement[67242-67457]:IfStatement[67384-67599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67259-67293]:Block[67401-67435]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[67273-67283]:ReturnStatement[67415-67425]"
    }, {
      "left" : "if (length >= size)",
      "right" : "if (length >= size)",
      "info" : "IfStatement[67299-67457]:IfStatement[67441-67599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67319-67378]:Block[67461-67520]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[67333-67368]:ReturnStatement[67475-67510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67384-67457]:Block[67526-67599]"
    }, {
      "left" : "return new String(buffer, size - length, length);",
      "right" : "return new String(buffer, size - length, length);",
      "info" : "ReturnStatement[67398-67447]:ReturnStatement[67540-67589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68281-68287]:Modifier[68423-68429]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[68288-68294]:SimpleType[68430-68436]"
    }, {
      "left" : "midString",
      "right" : "midString",
      "info" : "SimpleName[68295-68304]:SimpleName[68437-68446]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[68305-68314]:SingleVariableDeclaration[68447-68456]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[68316-68326]:SingleVariableDeclaration[68458-68468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68328-68649]:Block[68470-68791]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[68338-68387]:IfStatement[68480-68529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68353-68387]:Block[68495-68529]"
    }, {
      "left" : "index = 0;",
      "right" : "index = 0;",
      "info" : "ExpressionStatement[68367-68377]:ExpressionStatement[68509-68519]"
    }, {
      "left" : "if (length <= 0 || index >= size)",
      "right" : "if (length <= 0 || index >= size)",
      "info" : "IfStatement[68396-68464]:IfStatement[68538-68606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68430-68464]:Block[68572-68606]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[68444-68454]:ReturnStatement[68586-68596]"
    }, {
      "left" : "if (size <= index + length)",
      "right" : "if (size <= index + length)",
      "info" : "IfStatement[68473-68643]:IfStatement[68615-68785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68501-68572]:Block[68643-68714]"
    }, {
      "left" : "return new String(buffer, index, size - index);",
      "right" : "return new String(buffer, index, size - index);",
      "info" : "ReturnStatement[68515-68562]:ReturnStatement[68657-68704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68578-68643]:Block[68720-68785]"
    }, {
      "left" : "return new String(buffer, index, length);",
      "right" : "return new String(buffer, index, length);",
      "info" : "ReturnStatement[68592-68633]:ReturnStatement[68734-68775]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68919-68925]:Modifier[69061-69067]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[68926-68933]:PrimitiveType[69068-69075]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[68934-68942]:SimpleName[69076-69084]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[68943-68950]:SingleVariableDeclaration[69085-69092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68952-69149]:Block[69094-69291]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[68962-68986]:VariableDeclarationStatement[69104-69128]"
    }, {
      "left" : "for (int i = 0; i < this.size; i++)",
      "right" : "for (int i = 0; i < this.size; i++)",
      "info" : "ForStatement[68995-69121]:ForStatement[69137-69263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69031-69121]:Block[69173-69263]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[69045-69111]:IfStatement[69187-69253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69067-69111]:Block[69209-69253]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[69085-69097]:ReturnStatement[69227-69239]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[69130-69143]:ReturnStatement[69272-69285]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69338-69344]:Modifier[69480-69486]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[69345-69352]:PrimitiveType[69487-69494]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[69353-69361]:SimpleName[69495-69503]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[69362-69372]:SingleVariableDeclaration[69504-69514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69374-69418]:Block[69516-69560]"
    }, {
      "left" : "return indexOf(str, 0) >= 0;",
      "right" : "return indexOf(str, 0) >= 0;",
      "info" : "ReturnStatement[69384-69412]:ReturnStatement[69526-69554]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69854-69860]:Modifier[69996-70002]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[69861-69868]:PrimitiveType[70003-70010]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[69869-69877]:SimpleName[70011-70019]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[69878-69896]:SingleVariableDeclaration[70020-70038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69898-69946]:Block[70040-70088]"
    }, {
      "left" : "return indexOf(matcher, 0) >= 0;",
      "right" : "return indexOf(matcher, 0) >= 0;",
      "info" : "ReturnStatement[69908-69940]:ReturnStatement[70050-70082]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70248-70254]:Modifier[70390-70396]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[70255-70258]:PrimitiveType[70397-70400]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[70259-70266]:SimpleName[70401-70408]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[70267-70274]:SingleVariableDeclaration[70409-70416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70276-70314]:Block[70418-70456]"
    }, {
      "left" : "return indexOf(ch, 0);",
      "right" : "return indexOf(ch, 0);",
      "info" : "ReturnStatement[70286-70308]:ReturnStatement[70428-70450]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70617-70623]:Modifier[70759-70765]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[70624-70627]:PrimitiveType[70766-70769]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[70628-70635]:SimpleName[70770-70777]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[70636-70643]:SingleVariableDeclaration[70778-70785]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[70645-70659]:SingleVariableDeclaration[70787-70801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70661-70979]:Block[70803-71121]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[70671-70718]:ExpressionStatement[70813-70860]"
    }, {
      "left" : "if (startIndex >= size)",
      "right" : "if (startIndex >= size)",
      "info" : "IfStatement[70727-70785]:IfStatement[70869-70927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70751-70785]:Block[70893-70927]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[70765-70775]:ReturnStatement[70907-70917]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[70794-70818]:VariableDeclarationStatement[70936-70960]"
    }, {
      "left" : "for (int i = startIndex; i < size; i++)",
      "right" : "for (int i = startIndex; i < size; i++)",
      "info" : "ForStatement[70827-70954]:ForStatement[70969-71096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70867-70954]:Block[71009-71096]"
    }, {
      "left" : "if (thisBuf[i] == ch)",
      "right" : "if (thisBuf[i] == ch)",
      "info" : "IfStatement[70881-70944]:IfStatement[71023-71086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70903-70944]:Block[71045-71086]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[70921-70930]:ReturnStatement[71063-71072]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[70963-70973]:ReturnStatement[71105-71115]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71318-71324]:Modifier[71460-71466]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[71325-71328]:PrimitiveType[71467-71470]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[71329-71336]:SimpleName[71471-71478]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[71337-71347]:SingleVariableDeclaration[71479-71489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71349-71388]:Block[71491-71530]"
    }, {
      "left" : "return indexOf(str, 0);",
      "right" : "return indexOf(str, 0);",
      "info" : "ReturnStatement[71359-71382]:ReturnStatement[71501-71524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71853-71859]:Modifier[71995-72001]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[71860-71863]:PrimitiveType[72002-72005]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[71864-71871]:SimpleName[72006-72013]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[71872-71882]:SingleVariableDeclaration[72014-72024]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[71884-71898]:SingleVariableDeclaration[72026-72040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71900-72657]:Block[72042-72799]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[71910-71957]:ExpressionStatement[72052-72099]"
    }, {
      "left" : "if (str == null || startIndex >= size)",
      "right" : "if (str == null || startIndex >= size)",
      "info" : "IfStatement[71966-72039]:IfStatement[72108-72181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72005-72039]:Block[72147-72181]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[72019-72029]:ReturnStatement[72161-72171]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[72048-72074]:VariableDeclarationStatement[72190-72216]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[72083-72166]:IfStatement[72225-72308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72100-72166]:Block[72242-72308]"
    }, {
      "left" : "return indexOf(str.charAt(0), startIndex);",
      "right" : "return indexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[72114-72156]:ReturnStatement[72256-72298]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[72175-72234]:IfStatement[72317-72376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72192-72234]:Block[72334-72376]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[72206-72224]:ReturnStatement[72348-72366]"
    }, {
      "left" : "if (strLen > size)",
      "right" : "if (strLen > size)",
      "info" : "IfStatement[72243-72296]:IfStatement[72385-72438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72262-72296]:Block[72404-72438]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[72276-72286]:ReturnStatement[72418-72428]"
    }, {
      "left" : "char[] thisBuf = buffer;",
      "right" : "char[] thisBuf = buffer;",
      "info" : "VariableDeclarationStatement[72305-72329]:VariableDeclarationStatement[72447-72471]"
    }, {
      "left" : "int len = size - strLen + 1;",
      "right" : "int len = size - strLen + 1;",
      "info" : "VariableDeclarationStatement[72338-72366]:VariableDeclarationStatement[72480-72508]"
    }, {
      "left" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "right" : "outer:\n        for (int i = startIndex; i < len; i++) {\n            for (int j = 0; j < strLen; j++) {\n                if (str.charAt(j) != thisBuf[i + j]) {\n                    continue outer;\n                }\n            }\n            return i;\n        }",
      "info" : "LabeledStatement[72375-72632]:LabeledStatement[72517-72774]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[72390-72632]:ForStatement[72532-72774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72429-72632]:Block[72571-72774]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[72443-72600]:ForStatement[72585-72742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72476-72600]:Block[72618-72742]"
    }, {
      "left" : "if (str.charAt(j) != thisBuf[i + j])",
      "right" : "if (str.charAt(j) != thisBuf[i + j])",
      "info" : "IfStatement[72494-72586]:IfStatement[72636-72728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72531-72586]:Block[72673-72728]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[72553-72568]:ContinueStatement[72695-72710]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[72613-72622]:ReturnStatement[72755-72764]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[72641-72651]:ReturnStatement[72783-72793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73062-73068]:Modifier[73204-73210]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[73069-73072]:PrimitiveType[73211-73214]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[73073-73080]:SimpleName[73215-73222]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[73081-73099]:SingleVariableDeclaration[73223-73241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73101-73144]:Block[73243-73286]"
    }, {
      "left" : "return indexOf(matcher, 0);",
      "right" : "return indexOf(matcher, 0);",
      "info" : "ReturnStatement[73111-73138]:ReturnStatement[73253-73280]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73666-73672]:Modifier[73808-73814]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[73673-73676]:PrimitiveType[73815-73818]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[73677-73684]:SimpleName[73819-73826]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[73685-73703]:SingleVariableDeclaration[73827-73845]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[73705-73719]:SingleVariableDeclaration[73847-73861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73721-74105]:Block[73863-74247]"
    }, {
      "left" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "right" : "startIndex = (startIndex < 0 ? 0 : startIndex);",
      "info" : "ExpressionStatement[73731-73778]:ExpressionStatement[73873-73920]"
    }, {
      "left" : "if (matcher == null || startIndex >= size)",
      "right" : "if (matcher == null || startIndex >= size)",
      "info" : "IfStatement[73787-73864]:IfStatement[73929-74006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73830-73864]:Block[73972-74006]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[73844-73854]:ReturnStatement[73986-73996]"
    }, {
      "left" : "int len = size;",
      "right" : "int len = size;",
      "info" : "VariableDeclarationStatement[73873-73888]:VariableDeclarationStatement[74015-74030]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[73897-73917]:VariableDeclarationStatement[74039-74059]"
    }, {
      "left" : "for (int i = startIndex; i < len; i++)",
      "right" : "for (int i = startIndex; i < len; i++)",
      "info" : "ForStatement[73926-74080]:ForStatement[74068-74222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73965-74080]:Block[74107-74222]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "right" : "if (matcher.isMatch(buf, i, startIndex, len) > 0)",
      "info" : "IfStatement[73979-74070]:IfStatement[74121-74212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74029-74070]:Block[74171-74212]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[74047-74056]:ReturnStatement[74189-74198]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[74089-74099]:ReturnStatement[74231-74241]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74405-74411]:Modifier[74547-74553]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[74412-74415]:PrimitiveType[74554-74557]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[74416-74427]:SimpleName[74558-74569]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[74428-74435]:SingleVariableDeclaration[74570-74577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74437-74486]:Block[74579-74628]"
    }, {
      "left" : "return lastIndexOf(ch, size - 1);",
      "right" : "return lastIndexOf(ch, size - 1);",
      "info" : "ReturnStatement[74447-74480]:ReturnStatement[74589-74622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74787-74793]:Modifier[74929-74935]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[74794-74797]:PrimitiveType[74936-74939]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[74798-74809]:SimpleName[74940-74951]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[74810-74817]:SingleVariableDeclaration[74952-74959]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[74819-74833]:SingleVariableDeclaration[74961-74975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74835-75124]:Block[74977-75266]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[74845-74903]:ExpressionStatement[74987-75045]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[74912-74966]:IfStatement[75054-75108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74932-74966]:Block[75074-75108]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[74946-74956]:ReturnStatement[75088-75098]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[74975-75099]:ForStatement[75117-75241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75013-75099]:Block[75155-75241]"
    }, {
      "left" : "if (buffer[i] == ch)",
      "right" : "if (buffer[i] == ch)",
      "info" : "IfStatement[75027-75089]:IfStatement[75169-75231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75048-75089]:Block[75190-75231]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[75066-75075]:ReturnStatement[75208-75217]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[75108-75118]:ReturnStatement[75250-75260]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75461-75467]:Modifier[75603-75609]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[75468-75471]:PrimitiveType[75610-75613]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[75472-75483]:SimpleName[75614-75625]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[75484-75494]:SingleVariableDeclaration[75626-75636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75496-75546]:Block[75638-75688]"
    }, {
      "left" : "return lastIndexOf(str, size - 1);",
      "right" : "return lastIndexOf(str, size - 1);",
      "info" : "ReturnStatement[75506-75540]:ReturnStatement[75648-75682]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76009-76015]:Modifier[76151-76157]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[76016-76019]:PrimitiveType[76158-76161]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[76020-76031]:SimpleName[76162-76173]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[76032-76042]:SingleVariableDeclaration[76174-76184]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[76044-76058]:SingleVariableDeclaration[76186-76200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76060-76820]:Block[76202-76962]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[76070-76128]:ExpressionStatement[76212-76270]"
    }, {
      "left" : "if (str == null || startIndex < 0)",
      "right" : "if (str == null || startIndex < 0)",
      "info" : "IfStatement[76137-76206]:IfStatement[76279-76348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76172-76206]:Block[76314-76348]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[76186-76196]:ReturnStatement[76328-76338]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[76215-76241]:VariableDeclarationStatement[76357-76383]"
    }, {
      "left" : "if (strLen > 0 && strLen <= size)",
      "right" : "if (strLen > 0 && strLen <= size)",
      "info" : "IfStatement[76250-76795]:IfStatement[76392-76937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76284-76730]:Block[76426-76872]"
    }, {
      "left" : "if (strLen == 1)",
      "right" : "if (strLen == 1)",
      "info" : "IfStatement[76298-76393]:IfStatement[76440-76535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76315-76393]:Block[76457-76535]"
    }, {
      "left" : "return lastIndexOf(str.charAt(0), startIndex);",
      "right" : "return lastIndexOf(str.charAt(0), startIndex);",
      "info" : "ReturnStatement[76333-76379]:ReturnStatement[76475-76521]"
    }, {
      "left" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "right" : "outer:\n            for (int i = startIndex - strLen + 1; i >= 0; i--) {\n                for (int j = 0; j < strLen; j++) {\n                    if (str.charAt(j) != buffer[i + j]) {\n                        continue outer;\n                    }\n                }\n                return i;\n            }",
      "info" : "LabeledStatement[76407-76707]:LabeledStatement[76549-76849]"
    }, {
      "left" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "right" : "for (int i = startIndex - strLen + 1; i >= 0; i--)",
      "info" : "ForStatement[76426-76707]:ForStatement[76568-76849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76477-76707]:Block[76619-76849]"
    }, {
      "left" : "for (int j = 0; j < strLen; j++)",
      "right" : "for (int j = 0; j < strLen; j++)",
      "info" : "ForStatement[76495-76667]:ForStatement[76637-76809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76528-76667]:Block[76670-76809]"
    }, {
      "left" : "if (str.charAt(j) != buffer[i + j])",
      "right" : "if (str.charAt(j) != buffer[i + j])",
      "info" : "IfStatement[76550-76649]:IfStatement[76692-76791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76586-76649]:Block[76728-76791]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[76612-76627]:ContinueStatement[76754-76769]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[76684-76693]:ReturnStatement[76826-76835]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[76736-76795]:IfStatement[76878-76937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76753-76795]:Block[76895-76937]"
    }, {
      "left" : "return startIndex;",
      "right" : "return startIndex;",
      "info" : "ReturnStatement[76767-76785]:ReturnStatement[76909-76927]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[76804-76814]:ReturnStatement[76946-76956]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77223-77229]:Modifier[77365-77371]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[77230-77233]:PrimitiveType[77372-77375]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[77234-77245]:SimpleName[77376-77387]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[77246-77264]:SingleVariableDeclaration[77388-77406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77266-77316]:Block[77408-77458]"
    }, {
      "left" : "return lastIndexOf(matcher, size);",
      "right" : "return lastIndexOf(matcher, size);",
      "info" : "ReturnStatement[77276-77310]:ReturnStatement[77418-77452]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77836-77842]:Modifier[77978-77984]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[77843-77846]:PrimitiveType[77985-77988]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[77847-77858]:SimpleName[77989-78000]"
    }, {
      "left" : "StrMatcher matcher",
      "right" : "StrMatcher matcher",
      "info" : "SingleVariableDeclaration[77859-77877]:SingleVariableDeclaration[78001-78019]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[77879-77893]:SingleVariableDeclaration[78021-78035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77895-78296]:Block[78037-78438]"
    }, {
      "left" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "right" : "startIndex = (startIndex >= size ? size - 1 : startIndex);",
      "info" : "ExpressionStatement[77905-77963]:ExpressionStatement[78047-78105]"
    }, {
      "left" : "if (matcher == null || startIndex < 0)",
      "right" : "if (matcher == null || startIndex < 0)",
      "info" : "IfStatement[77972-78045]:IfStatement[78114-78187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78011-78045]:Block[78153-78187]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78025-78035]:ReturnStatement[78167-78177]"
    }, {
      "left" : "char[] buf = buffer;",
      "right" : "char[] buf = buffer;",
      "info" : "VariableDeclarationStatement[78054-78074]:VariableDeclarationStatement[78196-78216]"
    }, {
      "left" : "int endIndex = startIndex + 1;",
      "right" : "int endIndex = startIndex + 1;",
      "info" : "VariableDeclarationStatement[78083-78113]:VariableDeclarationStatement[78225-78255]"
    }, {
      "left" : "for (int i = startIndex; i >= 0; i--)",
      "right" : "for (int i = startIndex; i >= 0; i--)",
      "info" : "ForStatement[78122-78271]:ForStatement[78264-78413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78160-78271]:Block[78302-78413]"
    }, {
      "left" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "right" : "if (matcher.isMatch(buf, i, 0, endIndex) > 0)",
      "info" : "IfStatement[78174-78261]:IfStatement[78316-78403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78220-78261]:Block[78362-78403]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[78238-78247]:ReturnStatement[78380-78389]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[78280-78290]:ReturnStatement[78422-78432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80021-80027]:Modifier[80163-80169]"
    }, {
      "left" : "StrTokenizer",
      "right" : "StrTokenizer",
      "info" : "SimpleType[80028-80040]:SimpleType[80170-80182]"
    }, {
      "left" : "asTokenizer",
      "right" : "asTokenizer",
      "info" : "SimpleName[80041-80052]:SimpleName[80183-80194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80055-80104]:Block[80197-80246]"
    }, {
      "left" : "return new StrBuilderTokenizer();",
      "right" : "return new StrBuilderTokenizer();",
      "info" : "ReturnStatement[80065-80098]:ReturnStatement[80207-80240]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[81033-81039]:Modifier[81175-81181]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[81040-81046]:SimpleType[81182-81188]"
    }, {
      "left" : "asReader",
      "right" : "asReader",
      "info" : "SimpleName[81047-81055]:SimpleName[81189-81197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81058-81104]:Block[81200-81246]"
    }, {
      "left" : "return new StrBuilderReader();",
      "right" : "return new StrBuilderReader();",
      "info" : "ReturnStatement[81068-81098]:ReturnStatement[81210-81240]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82124-82130]:Modifier[82266-82272]"
    }, {
      "left" : "Writer",
      "right" : "Writer",
      "info" : "SimpleType[82131-82137]:SimpleType[82273-82279]"
    }, {
      "left" : "asWriter",
      "right" : "asWriter",
      "info" : "SimpleName[82138-82146]:SimpleName[82280-82288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82149-82195]:Block[82291-82337]"
    }, {
      "left" : "return new StrBuilderWriter();",
      "right" : "return new StrBuilderWriter();",
      "info" : "ReturnStatement[82159-82189]:ReturnStatement[82301-82331]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83834-83840]:Modifier[83976-83982]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[83841-83848]:PrimitiveType[83983-83990]"
    }, {
      "left" : "equalsIgnoreCase",
      "right" : "equalsIgnoreCase",
      "info" : "SimpleName[83849-83865]:SimpleName[83991-84007]"
    }, {
      "left" : "StrBuilder other",
      "right" : "StrBuilder other",
      "info" : "SingleVariableDeclaration[83866-83882]:SingleVariableDeclaration[84008-84024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83884-84384]:Block[84026-84526]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[83894-83949]:IfStatement[84036-84091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83913-83949]:Block[84055-84091]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[83927-83939]:ReturnStatement[84069-84081]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[83958-84024]:IfStatement[84100-84166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83987-84024]:Block[84129-84166]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[84001-84014]:ReturnStatement[84143-84156]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[84033-84062]:VariableDeclarationStatement[84175-84204]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[84071-84102]:VariableDeclarationStatement[84213-84244]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[84111-84357]:ForStatement[84253-84499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84147-84357]:Block[84289-84499]"
    }, {
      "left" : "char c1 = thisBuf[i];",
      "right" : "char c1 = thisBuf[i];",
      "info" : "VariableDeclarationStatement[84161-84182]:VariableDeclarationStatement[84303-84324]"
    }, {
      "left" : "char c2 = otherBuf[i];",
      "right" : "char c2 = otherBuf[i];",
      "info" : "VariableDeclarationStatement[84195-84217]:VariableDeclarationStatement[84337-84359]"
    }, {
      "left" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "right" : "if (c1 != c2 && Character.toUpperCase(c1) != Character.toUpperCase(c2))",
      "info" : "IfStatement[84230-84347]:IfStatement[84372-84489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84302-84347]:Block[84444-84489]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[84320-84333]:ReturnStatement[84462-84475]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[84366-84378]:ReturnStatement[84508-84520]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[84673-84679]:Modifier[84815-84821]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[84680-84687]:PrimitiveType[84822-84829]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[84688-84694]:SimpleName[84830-84836]"
    }, {
      "left" : "StrBuilder other",
      "right" : "StrBuilder other",
      "info" : "SingleVariableDeclaration[84695-84711]:SingleVariableDeclaration[84837-84853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84713-85103]:Block[84855-85245]"
    }, {
      "left" : "if (this == other)",
      "right" : "if (this == other)",
      "info" : "IfStatement[84723-84778]:IfStatement[84865-84920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84742-84778]:Block[84884-84920]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[84756-84768]:ReturnStatement[84898-84910]"
    }, {
      "left" : "if (this.size != other.size)",
      "right" : "if (this.size != other.size)",
      "info" : "IfStatement[84787-84853]:IfStatement[84929-84995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84816-84853]:Block[84958-84995]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[84830-84843]:ReturnStatement[84972-84985]"
    }, {
      "left" : "char thisBuf[] = this.buffer;",
      "right" : "char thisBuf[] = this.buffer;",
      "info" : "VariableDeclarationStatement[84862-84891]:VariableDeclarationStatement[85004-85033]"
    }, {
      "left" : "char otherBuf[] = other.buffer;",
      "right" : "char otherBuf[] = other.buffer;",
      "info" : "VariableDeclarationStatement[84900-84931]:VariableDeclarationStatement[85042-85073]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[84940-85076]:ForStatement[85082-85218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84976-85076]:Block[85118-85218]"
    }, {
      "left" : "if (thisBuf[i] != otherBuf[i])",
      "right" : "if (thisBuf[i] != otherBuf[i])",
      "info" : "IfStatement[84990-85066]:IfStatement[85132-85208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85021-85066]:Block[85163-85208]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[85039-85052]:ReturnStatement[85181-85194]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[85085-85097]:ReturnStatement[85227-85239]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[85390-85396]:Modifier[85532-85538]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[85397-85404]:PrimitiveType[85539-85546]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[85405-85411]:SimpleName[85547-85553]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[85412-85422]:SingleVariableDeclaration[85554-85564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85424-85549]:Block[85566-85691]"
    }, {
      "left" : "if (obj instanceof StrBuilder)",
      "right" : "if (obj instanceof StrBuilder)",
      "info" : "IfStatement[85434-85521]:IfStatement[85576-85663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85465-85521]:Block[85607-85663]"
    }, {
      "left" : "return equals((StrBuilder) obj);",
      "right" : "return equals((StrBuilder) obj);",
      "info" : "ReturnStatement[85479-85511]:ReturnStatement[85621-85653]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[85530-85543]:ReturnStatement[85672-85685]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[85656-85662]:Modifier[85798-85804]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[85663-85666]:PrimitiveType[85805-85808]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[85667-85675]:SimpleName[85809-85817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85678-85852]:Block[85820-85994]"
    }, {
      "left" : "char buf[] = buffer;",
      "right" : "char buf[] = buffer;",
      "info" : "VariableDeclarationStatement[85688-85708]:VariableDeclarationStatement[85830-85850]"
    }, {
      "left" : "int hash = 0;",
      "right" : "int hash = 0;",
      "info" : "VariableDeclarationStatement[85717-85730]:VariableDeclarationStatement[85859-85872]"
    }, {
      "left" : "for (int i = size - 1; i >= 0; i--)",
      "right" : "for (int i = size - 1; i >= 0; i--)",
      "info" : "ForStatement[85739-85825]:ForStatement[85881-85967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85775-85825]:Block[85917-85967]"
    }, {
      "left" : "hash = 31 * hash + buf[i];",
      "right" : "hash = 31 * hash + buf[i];",
      "info" : "ExpressionStatement[85789-85815]:ExpressionStatement[85931-85957]"
    }, {
      "left" : "return hash;",
      "right" : "return hash;",
      "info" : "ReturnStatement[85834-85846]:ReturnStatement[85976-85988]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86235-86241]:Modifier[86377-86383]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[86242-86248]:SimpleType[86384-86390]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[86249-86257]:SimpleName[86391-86399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86260-86311]:Block[86402-86453]"
    }, {
      "left" : "return new String(buffer, 0, size);",
      "right" : "return new String(buffer, 0, size);",
      "info" : "ReturnStatement[86270-86305]:ReturnStatement[86412-86447]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86506-86512]:Modifier[86648-86654]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[86513-86525]:SimpleType[86655-86667]"
    }, {
      "left" : "toStringBuffer",
      "right" : "toStringBuffer",
      "info" : "SimpleName[86526-86540]:SimpleName[86668-86682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86543-86613]:Block[86685-86755]"
    }, {
      "left" : "return new StringBuffer(size).append(buffer, 0, size);",
      "right" : "return new StringBuffer(size).append(buffer, 0, size);",
      "info" : "ReturnStatement[86553-86607]:ReturnStatement[86695-86749]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[87073-87082]:Modifier[87215-87224]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[87083-87086]:PrimitiveType[87225-87228]"
    }, {
      "left" : "validateRange",
      "right" : "validateRange",
      "info" : "SimpleName[87087-87100]:SimpleName[87229-87242]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[87101-87115]:SingleVariableDeclaration[87243-87257]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[87117-87129]:SingleVariableDeclaration[87259-87271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87131-87457]:Block[87273-87599]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[87141-87239]:IfStatement[87283-87381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87161-87239]:Block[87303-87381]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "right" : "throw new StringIndexOutOfBoundsException(startIndex);",
      "info" : "ThrowStatement[87175-87229]:ThrowStatement[87317-87371]"
    }, {
      "left" : "if (endIndex > size)",
      "right" : "if (endIndex > size)",
      "info" : "IfStatement[87248-87309]:IfStatement[87390-87451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87269-87309]:Block[87411-87451]"
    }, {
      "left" : "endIndex = size;",
      "right" : "endIndex = size;",
      "info" : "ExpressionStatement[87283-87299]:ExpressionStatement[87425-87441]"
    }, {
      "left" : "if (startIndex > endIndex)",
      "right" : "if (startIndex > endIndex)",
      "info" : "IfStatement[87318-87426]:IfStatement[87460-87568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87345-87426]:Block[87487-87568]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "right" : "throw new StringIndexOutOfBoundsException(\"end < start\");",
      "info" : "ThrowStatement[87359-87416]:ThrowStatement[87501-87558]"
    }, {
      "left" : "return endIndex;",
      "right" : "return endIndex;",
      "info" : "ReturnStatement[87435-87451]:ReturnStatement[87577-87593]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[87666-87675]:Modifier[87808-87817]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[87676-87680]:PrimitiveType[87818-87822]"
    }, {
      "left" : "validateIndex",
      "right" : "validateIndex",
      "info" : "SimpleName[87681-87694]:SimpleName[87823-87836]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[87695-87704]:SingleVariableDeclaration[87837-87846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87706-87826]:Block[87848-87968]"
    }, {
      "left" : "if (index < 0 || index > size)",
      "right" : "if (index < 0 || index > size)",
      "info" : "IfStatement[87716-87820]:IfStatement[87858-87962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87747-87820]:Block[87889-87962]"
    }, {
      "left" : "throw new StringIndexOutOfBoundsException(index);",
      "right" : "throw new StringIndexOutOfBoundsException(index);",
      "info" : "ThrowStatement[87761-87810]:ThrowStatement[87903-87952]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[87992-87997]:TYPE_DECLARATION_KIND[88134-88139]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "SimpleName[87998-88017]:SimpleName[88140-88159]"
    }, {
      "left" : "StrTokenizer",
      "right" : "StrTokenizer",
      "info" : "SimpleType[88026-88038]:SimpleType[88168-88180]"
    }, {
      "left" : "StrBuilderTokenizer",
      "right" : "StrBuilderTokenizer",
      "info" : "SimpleName[88079-88098]:SimpleName[88221-88240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88101-88133]:Block[88243-88275]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[88115-88123]:SuperConstructorInvocation[88257-88265]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[88172-88181]:Modifier[88314-88323]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[88182-88186]:SimpleType[88324-88328]"
    }, {
      "left" : "tokenize",
      "right" : "tokenize",
      "info" : "SimpleName[88187-88195]:SimpleName[88329-88337]"
    }, {
      "left" : "char[] chars",
      "right" : "char[] chars",
      "info" : "SingleVariableDeclaration[88196-88208]:SingleVariableDeclaration[88338-88350]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[88210-88220]:SingleVariableDeclaration[88352-88362]"
    }, {
      "left" : "int count",
      "right" : "int count",
      "info" : "SingleVariableDeclaration[88222-88231]:SingleVariableDeclaration[88364-88373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88233-88463]:Block[88375-88605]"
    }, {
      "left" : "if (chars == null)",
      "right" : "if (chars == null)",
      "info" : "IfStatement[88247-88453]:IfStatement[88389-88595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88266-88371]:Block[88408-88513]"
    }, {
      "left" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "right" : "return super.tokenize(StrBuilder.this.buffer, 0, StrBuilder.this.size());",
      "info" : "ReturnStatement[88284-88357]:ReturnStatement[88426-88499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88377-88453]:Block[88519-88595]"
    }, {
      "left" : "return super.tokenize(chars, offset, count);",
      "right" : "return super.tokenize(chars, offset, count);",
      "info" : "ReturnStatement[88395-88439]:ReturnStatement[88537-88581]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[88502-88508]:Modifier[88644-88650]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[88509-88515]:SimpleType[88651-88657]"
    }, {
      "left" : "getContent",
      "right" : "getContent",
      "info" : "SimpleName[88516-88526]:SimpleName[88658-88668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88529-88730]:Block[88671-88872]"
    }, {
      "left" : "String str = super.getContent();",
      "right" : "String str = super.getContent();",
      "info" : "VariableDeclarationStatement[88543-88575]:VariableDeclarationStatement[88685-88717]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[88588-88720]:IfStatement[88730-88862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88605-88671]:Block[88747-88813]"
    }, {
      "left" : "return StrBuilder.this.toString();",
      "right" : "return StrBuilder.this.toString();",
      "info" : "ReturnStatement[88623-88657]:ReturnStatement[88765-88799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88677-88720]:Block[88819-88862]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[88695-88706]:ReturnStatement[88837-88848]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[88899-88904]:TYPE_DECLARATION_KIND[89041-89046]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "SimpleName[88905-88921]:SimpleName[89047-89063]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[88930-88936]:SimpleType[89072-89078]"
    }, {
      "left" : "StrBuilderReader",
      "right" : "StrBuilderReader",
      "info" : "SimpleName[89111-89127]:SimpleName[89253-89269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89130-89162]:Block[89272-89304]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[89144-89152]:SuperConstructorInvocation[89286-89294]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89201-89207]:Modifier[89343-89349]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[89208-89212]:PrimitiveType[89350-89354]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[89213-89218]:SimpleName[89355-89360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89221-89258]:Block[89363-89400]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89297-89303]:Modifier[89439-89445]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[89304-89307]:PrimitiveType[89446-89449]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[89308-89312]:SimpleName[89450-89454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89315-89453]:Block[89457-89595]"
    }, {
      "left" : "if (ready() == false)",
      "right" : "if (ready() == false)",
      "info" : "IfStatement[89329-89393]:IfStatement[89471-89535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89351-89393]:Block[89493-89535]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[89369-89379]:ReturnStatement[89511-89521]"
    }, {
      "left" : "return StrBuilder.this.charAt(pos++);",
      "right" : "return StrBuilder.this.charAt(pos++);",
      "info" : "ReturnStatement[89406-89443]:ReturnStatement[89548-89585]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89492-89498]:Modifier[89634-89640]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[89499-89502]:PrimitiveType[89641-89644]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[89503-89507]:SimpleName[89645-89649]"
    }, {
      "left" : "char b[]",
      "right" : "char b[]",
      "info" : "SingleVariableDeclaration[89508-89516]:SingleVariableDeclaration[89650-89658]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[89518-89525]:SingleVariableDeclaration[89660-89667]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[89527-89534]:SingleVariableDeclaration[89669-89676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89536-90109]:Block[89678-90251]"
    }, {
      "left" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "right" : "if (off < 0 || len < 0 || off > b.length ||\n                    (off + len) > b.length || (off + len) < 0)",
      "info" : "IfStatement[89550-89727]:IfStatement[89692-89869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89657-89727]:Block[89799-89869]"
    }, {
      "left" : "throw new IndexOutOfBoundsException();",
      "right" : "throw new IndexOutOfBoundsException();",
      "info" : "ThrowStatement[89675-89713]:ThrowStatement[89817-89855]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[89740-89795]:IfStatement[89882-89937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89754-89795]:Block[89896-89937]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[89772-89781]:ReturnStatement[89914-89923]"
    }, {
      "left" : "if (pos >= StrBuilder.this.size())",
      "right" : "if (pos >= StrBuilder.this.size())",
      "info" : "IfStatement[89808-89885]:IfStatement[89950-90027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89843-89885]:Block[89985-90027]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[89861-89871]:ReturnStatement[90003-90013]"
    }, {
      "left" : "if (pos + len > size())",
      "right" : "if (pos + len > size())",
      "info" : "IfStatement[89898-89989]:IfStatement[90040-90131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89922-89989]:Block[90064-90131]"
    }, {
      "left" : "len = StrBuilder.this.size() - pos;",
      "right" : "len = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[89940-89975]:ExpressionStatement[90082-90117]"
    }, {
      "left" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "right" : "StrBuilder.this.getChars(pos, pos + len, b, off);",
      "info" : "ExpressionStatement[90002-90051]:ExpressionStatement[90144-90193]"
    }, {
      "left" : "pos += len;",
      "right" : "pos += len;",
      "info" : "ExpressionStatement[90064-90075]:ExpressionStatement[90206-90217]"
    }, {
      "left" : "return len;",
      "right" : "return len;",
      "info" : "ReturnStatement[90088-90099]:ReturnStatement[90230-90241]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90148-90154]:Modifier[90290-90296]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[90155-90159]:PrimitiveType[90297-90301]"
    }, {
      "left" : "skip",
      "right" : "skip",
      "info" : "SimpleName[90160-90164]:SimpleName[90302-90306]"
    }, {
      "left" : "long n",
      "right" : "long n",
      "info" : "SingleVariableDeclaration[90165-90171]:SingleVariableDeclaration[90307-90313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90173-90409]:Block[90315-90551]"
    }, {
      "left" : "if (pos + n > StrBuilder.this.size())",
      "right" : "if (pos + n > StrBuilder.this.size())",
      "info" : "IfStatement[90187-90290]:IfStatement[90329-90432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90225-90290]:Block[90367-90432]"
    }, {
      "left" : "n = StrBuilder.this.size() - pos;",
      "right" : "n = StrBuilder.this.size() - pos;",
      "info" : "ExpressionStatement[90243-90276]:ExpressionStatement[90385-90418]"
    }, {
      "left" : "if (n < 0)",
      "right" : "if (n < 0)",
      "info" : "IfStatement[90303-90355]:IfStatement[90445-90497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90314-90355]:Block[90456-90497]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[90332-90341]:ReturnStatement[90474-90483]"
    }, {
      "left" : "pos += n;",
      "right" : "pos += n;",
      "info" : "ExpressionStatement[90368-90377]:ExpressionStatement[90510-90519]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[90390-90399]:ReturnStatement[90532-90541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90448-90454]:Modifier[90590-90596]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[90455-90462]:PrimitiveType[90597-90604]"
    }, {
      "left" : "ready",
      "right" : "ready",
      "info" : "SimpleName[90463-90468]:SimpleName[90605-90610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90471-90531]:Block[90613-90673]"
    }, {
      "left" : "return pos < StrBuilder.this.size();",
      "right" : "return pos < StrBuilder.this.size();",
      "info" : "ReturnStatement[90485-90521]:ReturnStatement[90627-90663]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90570-90576]:Modifier[90712-90718]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[90577-90584]:PrimitiveType[90719-90726]"
    }, {
      "left" : "markSupported",
      "right" : "markSupported",
      "info" : "SimpleName[90585-90598]:SimpleName[90727-90740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90601-90637]:Block[90743-90779]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[90615-90627]:ReturnStatement[90757-90769]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90676-90682]:Modifier[90818-90824]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[90683-90687]:PrimitiveType[90825-90829]"
    }, {
      "left" : "mark",
      "right" : "mark",
      "info" : "SimpleName[90688-90692]:SimpleName[90830-90834]"
    }, {
      "left" : "int readAheadLimit",
      "right" : "int readAheadLimit",
      "info" : "SingleVariableDeclaration[90693-90711]:SingleVariableDeclaration[90835-90853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90713-90748]:Block[90855-90890]"
    }, {
      "left" : "mark = pos;",
      "right" : "mark = pos;",
      "info" : "ExpressionStatement[90727-90738]:ExpressionStatement[90869-90880]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90787-90793]:Modifier[90929-90935]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[90794-90798]:PrimitiveType[90936-90940]"
    }, {
      "left" : "reset",
      "right" : "reset",
      "info" : "SimpleName[90799-90804]:SimpleName[90941-90946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90807-90842]:Block[90949-90984]"
    }, {
      "left" : "pos = mark;",
      "right" : "pos = mark;",
      "info" : "ExpressionStatement[90821-90832]:ExpressionStatement[90963-90974]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[91011-91016]:TYPE_DECLARATION_KIND[91153-91158]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "SimpleName[91017-91033]:SimpleName[91159-91175]"
    }, {
      "left" : "Writer",
      "right" : "Writer",
      "info" : "SimpleType[91042-91048]:SimpleType[91184-91190]"
    }, {
      "left" : "StrBuilderWriter",
      "right" : "StrBuilderWriter",
      "info" : "SimpleName[91089-91105]:SimpleName[91231-91247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91108-91140]:Block[91250-91282]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[91122-91130]:SuperConstructorInvocation[91264-91272]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91179-91185]:Modifier[91321-91327]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91186-91190]:PrimitiveType[91328-91332]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[91191-91196]:SimpleName[91333-91338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91199-91236]:Block[91341-91378]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91275-91281]:Modifier[91417-91423]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91282-91286]:PrimitiveType[91424-91428]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[91287-91292]:SimpleName[91429-91434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91295-91332]:Block[91437-91474]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91371-91377]:Modifier[91513-91519]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91378-91382]:PrimitiveType[91520-91524]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[91383-91388]:SimpleName[91525-91530]"
    }, {
      "left" : "int c",
      "right" : "int c",
      "info" : "SingleVariableDeclaration[91389-91394]:SingleVariableDeclaration[91531-91536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91396-91453]:Block[91538-91595]"
    }, {
      "left" : "StrBuilder.this.append((char) c);",
      "right" : "StrBuilder.this.append((char) c);",
      "info" : "ExpressionStatement[91410-91443]:ExpressionStatement[91552-91585]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91492-91498]:Modifier[91634-91640]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91499-91503]:PrimitiveType[91641-91645]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[91504-91509]:SimpleName[91646-91651]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[91510-91521]:SingleVariableDeclaration[91652-91663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91523-91576]:Block[91665-91718]"
    }, {
      "left" : "StrBuilder.this.append(cbuf);",
      "right" : "StrBuilder.this.append(cbuf);",
      "info" : "ExpressionStatement[91537-91566]:ExpressionStatement[91679-91708]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91615-91621]:Modifier[91757-91763]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91622-91626]:PrimitiveType[91764-91768]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[91627-91632]:SimpleName[91769-91774]"
    }, {
      "left" : "char[] cbuf",
      "right" : "char[] cbuf",
      "info" : "SingleVariableDeclaration[91633-91644]:SingleVariableDeclaration[91775-91786]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[91646-91653]:SingleVariableDeclaration[91788-91795]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[91655-91662]:SingleVariableDeclaration[91797-91804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91664-91727]:Block[91806-91869]"
    }, {
      "left" : "StrBuilder.this.append(cbuf, off, len);",
      "right" : "StrBuilder.this.append(cbuf, off, len);",
      "info" : "ExpressionStatement[91678-91717]:ExpressionStatement[91820-91859]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91766-91772]:Modifier[91908-91914]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91773-91777]:PrimitiveType[91915-91919]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[91778-91783]:SimpleName[91920-91925]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[91784-91794]:SingleVariableDeclaration[91926-91936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91796-91848]:Block[91938-91990]"
    }, {
      "left" : "StrBuilder.this.append(str);",
      "right" : "StrBuilder.this.append(str);",
      "info" : "ExpressionStatement[91810-91838]:ExpressionStatement[91952-91980]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[91887-91893]:Modifier[92029-92035]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91894-91898]:PrimitiveType[92036-92040]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[91899-91904]:SimpleName[92041-92046]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[91905-91915]:SingleVariableDeclaration[92047-92057]"
    }, {
      "left" : "int off",
      "right" : "int off",
      "info" : "SingleVariableDeclaration[91917-91924]:SingleVariableDeclaration[92059-92066]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[91926-91933]:SingleVariableDeclaration[92068-92075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91935-91997]:Block[92077-92139]"
    }, {
      "left" : "StrBuilder.this.append(str, off, len);",
      "right" : "StrBuilder.this.append(str, off, len);",
      "info" : "ExpressionStatement[91949-91987]:ExpressionStatement[92091-92129]"
    } ]
  },
  "interFileMappings" : { }
}