{
  "matchedElements" : [ {
    "left" : "interface : IBagStateListener",
    "right" : "interface : IBagStateListener",
    "info" : "TypeDeclaration[676-1027]:TypeDeclaration[3078-3158]"
  }, {
    "left" : "interface : IConcurrentBagEntry",
    "right" : "interface : IConcurrentBagEntry",
    "info" : "TypeDeclaration[684-896]:TypeDeclaration[2876-3073]"
  }, {
    "left" : "STATE_NOT_IN_USE",
    "right" : "STATE_NOT_IN_USE",
    "info" : "FieldDeclaration[762-787]:FieldDeclaration[2924-2949]"
  }, {
    "left" : "STATE_IN_USE",
    "right" : "STATE_IN_USE",
    "info" : "FieldDeclaration[791-812]:FieldDeclaration[2956-2977]"
  }, {
    "left" : "STATE_REMOVED",
    "right" : "STATE_REMOVED",
    "info" : "FieldDeclaration[816-839]:FieldDeclaration[2984-3007]"
  }, {
    "left" : "STATE_RESERVED",
    "right" : "STATE_RESERVED",
    "info" : "FieldDeclaration[843-867]:FieldDeclaration[3014-3038]"
  }, {
    "left" : "public state() : ",
    "right" : "public state() : ",
    "info" : "MethodDeclaration[872-894]:MethodDeclaration[3046-3068]"
  }, {
    "left" : "public addBagItem() : ",
    "right" : "public addBagItem() : ",
    "info" : "MethodDeclaration[996-1025]:MethodDeclaration[3124-3153]"
  }, {
    "left" : "class : ConcurrentBag",
    "right" : "class : ConcurrentBag",
    "info" : "TypeDeclaration[1201-12221]:TypeDeclaration[1373-12679]"
  }, {
    "left" : "LOGGER",
    "right" : "LOGGER",
    "info" : "FieldDeclaration[2333-2415]:FieldDeclaration[2505-2587]"
  }, {
    "left" : "synchronizer",
    "right" : "synchronizer",
    "info" : "FieldDeclaration[2420-2474]:FieldDeclaration[2592-2646]"
  }, {
    "left" : "sharedList",
    "right" : "sharedList",
    "info" : "FieldDeclaration[2478-2527]:FieldDeclaration[2650-2699]"
  }, {
    "left" : "weakThreadLocals",
    "right" : "weakThreadLocals",
    "info" : "FieldDeclaration[2531-2570]:FieldDeclaration[2703-2742]"
  }, {
    "left" : "threadList",
    "right" : "threadList",
    "info" : "FieldDeclaration[2575-2618]:FieldDeclaration[2747-2790]"
  }, {
    "left" : "listener",
    "right" : "listener",
    "info" : "FieldDeclaration[2622-2663]:FieldDeclaration[2794-2835]"
  }, {
    "left" : "closed",
    "right" : "closed",
    "info" : "FieldDeclaration[2667-2699]:FieldDeclaration[2839-2871]"
  }, {
    "left" : "public ConcurrentBag(listener )",
    "right" : "public ConcurrentBag(listener )",
    "info" : "MethodDeclaration[2705-3444]:MethodDeclaration[3163-3902]"
  }, {
    "left" : "protected initialValue() : ",
    "right" : "protected initialValue() : ",
    "info" : "MethodDeclaration[3271-3419]:MethodDeclaration[3729-3877]"
  }, {
    "left" : "public borrow(timeout long, timeUnit ) : ",
    "right" : "public borrow(timeout long, timeUnit ) : ",
    "info" : "MethodDeclaration[3449-5590]:MethodDeclaration[3907-6048]"
  }, {
    "left" : "public requite(bagEntry ) : void",
    "right" : "public requite(bagEntry ) : void",
    "info" : "MethodDeclaration[5595-6493]:MethodDeclaration[6053-6951]"
  }, {
    "left" : "public add(bagEntry ) : void",
    "right" : "public add(bagEntry ) : void",
    "info" : "MethodDeclaration[6498-6919]:MethodDeclaration[6956-7377]"
  }, {
    "left" : "public remove(bagEntry ) : boolean",
    "right" : "public remove(bagEntry ) : boolean",
    "info" : "MethodDeclaration[6924-7924]:MethodDeclaration[7382-8382]"
  }, {
    "left" : "public close() : void",
    "right" : "public close() : void",
    "info" : "MethodDeclaration[7929-8043]:MethodDeclaration[8387-8501]"
  }, {
    "left" : "public values(state int) : ",
    "right" : "public values(state int) : ",
    "info" : "MethodDeclaration[8048-8746]:MethodDeclaration[8506-9204]"
  }, {
    "left" : "public values() : ",
    "right" : "public values() : ",
    "info" : "MethodDeclaration[8751-9222]:MethodDeclaration[9209-9680]"
  }, {
    "left" : "public reserve(bagEntry ) : boolean",
    "right" : "public reserve(bagEntry ) : boolean",
    "info" : "MethodDeclaration[9227-9959]:MethodDeclaration[9685-10417]"
  }, {
    "left" : "public unreserve(bagEntry ) : void",
    "right" : "public unreserve(bagEntry ) : void",
    "info" : "MethodDeclaration[9964-10436]:MethodDeclaration[10422-10894]"
  }, {
    "left" : "public getPendingQueue() : int",
    "right" : "public getPendingQueue() : int",
    "info" : "MethodDeclaration[10441-10712]:MethodDeclaration[10899-11170]"
  }, {
    "left" : "public getCount(state int) : int",
    "right" : "public getCount(state int) : int",
    "info" : "MethodDeclaration[10717-11177]:MethodDeclaration[11175-11635]"
  }, {
    "left" : "public size() : int",
    "right" : "public size() : int",
    "info" : "MethodDeclaration[11182-11355]:MethodDeclaration[11640-11813]"
  }, {
    "left" : "public dumpState() : void",
    "right" : "public dumpState() : void",
    "info" : "MethodDeclaration[11360-11482]:MethodDeclaration[11818-11940]"
  }, {
    "left" : "private useWeakThreadLocals() : boolean",
    "right" : "private useWeakThreadLocals() : boolean",
    "info" : "MethodDeclaration[11487-12219]:MethodDeclaration[11945-12677]"
  } ],
  "mappings" : [ {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2904-3444]:Block[3362-3902]"
  }, {
    "left" : "this.listener = listener;",
    "right" : "this.listener = listener;",
    "info" : "ExpressionStatement[2912-2937]:ExpressionStatement[3370-3395]"
  }, {
    "left" : "this.weakThreadLocals = useWeakThreadLocals();",
    "right" : "this.weakThreadLocals = useWeakThreadLocals();",
    "info" : "ExpressionStatement[2944-2990]:ExpressionStatement[3402-3448]"
  }, {
    "left" : "this.sharedList = new CopyOnWriteArrayList<>();",
    "right" : "this.sharedList = new CopyOnWriteArrayList<>();",
    "info" : "ExpressionStatement[2998-3045]:ExpressionStatement[3456-3503]"
  }, {
    "left" : "this.synchronizer = new QueuedSequenceSynchronizer();",
    "right" : "this.synchronizer = new QueuedSequenceSynchronizer();",
    "info" : "ExpressionStatement[3052-3105]:ExpressionStatement[3510-3563]"
  }, {
    "left" : "if (weakThreadLocals)",
    "right" : "if (weakThreadLocals)",
    "info" : "IfStatement[3112-3439]:IfStatement[3570-3897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3134-3192]:Block[3592-3650]"
  }, {
    "left" : "this.threadList = new ThreadLocal<>();",
    "right" : "this.threadList = new ThreadLocal<>();",
    "info" : "ExpressionStatement[3145-3183]:ExpressionStatement[3603-3641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3204-3439]:Block[3662-3897]"
  }, {
    "left" : "this.threadList = new ThreadLocal<List>() {\n            @Override\n            protected List initialValue()\n            {\n               return new FastList<>(IConcurrentBagEntry.class, 16);\n            }\n         };",
    "right" : "this.threadList = new ThreadLocal<List>() {\n            @Override\n            protected List initialValue()\n            {\n               return new FastList<>(IConcurrentBagEntry.class, 16);\n            }\n         };",
    "info" : "ExpressionStatement[3215-3431]:ExpressionStatement[3673-3889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3335-3419]:Block[3793-3877]"
  }, {
    "left" : "return new FastList<>(IConcurrentBagEntry.class, 16);",
    "right" : "return new FastList<>(IConcurrentBagEntry.class, 16);",
    "info" : "ReturnStatement[3352-3405]:ReturnStatement[3810-3863]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4017-5590]:Block[4475-6048]"
  }, {
    "left" : "if (!synchronizer.hasQueuedThreads())",
    "right" : "if (!synchronizer.hasQueuedThreads())",
    "info" : "IfStatement[4115-4665]:IfStatement[4573-5123]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4153-4665]:Block[4611-5123]"
  }, {
    "left" : "List<?> list = threadList.get();",
    "right" : "List<?> list = threadList.get();",
    "info" : "VariableDeclarationStatement[4164-4196]:VariableDeclarationStatement[4622-4654]"
  }, {
    "left" : "if (weakThreadLocals && list == null)",
    "right" : "if (weakThreadLocals && list == null)",
    "info" : "IfStatement[4206-4330]:IfStatement[4664-4788]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4244-4330]:Block[4702-4788]"
  }, {
    "left" : "list = new ArrayList<>(16);",
    "right" : "list = new ArrayList<>(16);",
    "info" : "ExpressionStatement[4258-4285]:ExpressionStatement[4716-4743]"
  }, {
    "left" : "threadList.set(list);",
    "right" : "threadList.set(list);",
    "info" : "ExpressionStatement[4298-4319]:ExpressionStatement[4756-4777]"
  }, {
    "left" : "for (int i = list.size() - 1; i >= 0; i--)",
    "right" : "for (int i = list.size() - 1; i >= 0; i--)",
    "info" : "ForStatement[4341-4657]:ForStatement[4799-5115]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4384-4657]:Block[4842-5115]"
  }, {
    "left" : "final T bagEntry = (T) (weakThreadLocals ? ((WeakReference) list.remove(i)).get() : list.remove(i));",
    "right" : "final T bagEntry = (T) (weakThreadLocals ? ((WeakReference) list.remove(i)).get() : list.remove(i));",
    "info" : "VariableDeclarationStatement[4398-4498]:VariableDeclarationStatement[4856-4956]"
  }, {
    "left" : "if (bagEntry != null && bagEntry.state().compareAndSet(STATE_NOT_IN_USE, STATE_IN_USE))",
    "right" : "if (bagEntry != null && bagEntry.state().compareAndSet(STATE_NOT_IN_USE, STATE_IN_USE))",
    "info" : "IfStatement[4511-4646]:IfStatement[4969-5104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4599-4646]:Block[5057-5104]"
  }, {
    "left" : "return bagEntry;",
    "right" : "return bagEntry;",
    "info" : "ReturnStatement[4616-4632]:ReturnStatement[5074-5090]"
  }, {
    "left" : "timeout = timeUnit.toNanos(timeout);",
    "right" : "timeout = timeUnit.toNanos(timeout);",
    "info" : "ExpressionStatement[4741-4777]:ExpressionStatement[5199-5235]"
  }, {
    "left" : "Future<Boolean> addItemFuture = null;",
    "right" : "Future<Boolean> addItemFuture = null;",
    "info" : "VariableDeclarationStatement[4784-4821]:VariableDeclarationStatement[5242-5279]"
  }, {
    "left" : "final long startScan = System.nanoTime();",
    "right" : "final long startScan = System.nanoTime();",
    "info" : "VariableDeclarationStatement[4828-4869]:VariableDeclarationStatement[5286-5327]"
  }, {
    "left" : "final long originTimeout = timeout;",
    "right" : "final long originTimeout = timeout;",
    "info" : "VariableDeclarationStatement[4876-4911]:VariableDeclarationStatement[5334-5369]"
  }, {
    "left" : "long startSeq;",
    "right" : "long startSeq;",
    "info" : "VariableDeclarationStatement[4918-4932]:VariableDeclarationStatement[5376-5390]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[4939-5565]:DoStatement[5397-6023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4942-5479]:Block[5400-5937]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[4953-5275]:DoStatement[5411-5733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4956-5224]:Block[5414-5682]"
  }, {
    "left" : "startSeq = synchronizer.currentSequence();",
    "right" : "startSeq = synchronizer.currentSequence();",
    "info" : "ExpressionStatement[4970-5012]:ExpressionStatement[5428-5470]"
  }, {
    "left" : "for (final T bagEntry : sharedList)",
    "right" : "for (final T bagEntry : sharedList)",
    "info" : "EnhancedForStatement[5025-5213]:EnhancedForStatement[5483-5671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5061-5213]:Block[5519-5671]"
  }, {
    "left" : "if (bagEntry.state().compareAndSet(STATE_NOT_IN_USE, STATE_IN_USE))",
    "right" : "if (bagEntry.state().compareAndSet(STATE_NOT_IN_USE, STATE_IN_USE))",
    "info" : "IfStatement[5078-5199]:IfStatement[5536-5657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5146-5199]:Block[5604-5657]"
  }, {
    "left" : "return bagEntry;",
    "right" : "return bagEntry;",
    "info" : "ReturnStatement[5166-5182]:ReturnStatement[5624-5640]"
  }, {
    "left" : "if (addItemFuture == null || addItemFuture.isDone())",
    "right" : "if (addItemFuture == null || addItemFuture.isDone())",
    "info" : "IfStatement[5286-5402]:IfStatement[5744-5860]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5339-5402]:Block[5797-5860]"
  }, {
    "left" : "addItemFuture = listener.addBagItem();",
    "right" : "addItemFuture = listener.addBagItem();",
    "info" : "ExpressionStatement[5353-5391]:ExpressionStatement[5811-5849]"
  }, {
    "left" : "timeout = originTimeout - (System.nanoTime() - startScan);",
    "right" : "timeout = originTimeout - (System.nanoTime() - startScan);",
    "info" : "ExpressionStatement[5413-5471]:ExpressionStatement[5871-5929]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[5573-5585]:ReturnStatement[6031-6043]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6046-6493]:Block[6504-6951]"
  }, {
    "left" : "if (bagEntry.state().compareAndSet(STATE_IN_USE, STATE_NOT_IN_USE))",
    "right" : "if (bagEntry.state().compareAndSet(STATE_IN_USE, STATE_NOT_IN_USE))",
    "info" : "IfStatement[6054-6488]:IfStatement[6512-6946]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6122-6367]:Block[6580-6825]"
  }, {
    "left" : "final List threadLocalList = threadList.get();",
    "right" : "final List threadLocalList = threadList.get();",
    "info" : "VariableDeclarationStatement[6133-6179]:VariableDeclarationStatement[6591-6637]"
  }, {
    "left" : "if (threadLocalList != null)",
    "right" : "if (threadLocalList != null)",
    "info" : "IfStatement[6189-6326]:IfStatement[6647-6784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6218-6326]:Block[6676-6784]"
  }, {
    "left" : "threadLocalList.add((weakThreadLocals ? new WeakReference<>(bagEntry) : bagEntry));",
    "right" : "threadLocalList.add((weakThreadLocals ? new WeakReference<>(bagEntry) : bagEntry));",
    "info" : "ExpressionStatement[6232-6315]:ExpressionStatement[6690-6773]"
  }, {
    "left" : "synchronizer.signal();",
    "right" : "synchronizer.signal();",
    "info" : "ExpressionStatement[6337-6359]:ExpressionStatement[6795-6817]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6379-6488]:Block[6837-6946]"
  }, {
    "left" : "LOGGER.warn(\"Attempt to remove an object from the bag that does not exist: {}\", bagEntry);",
    "right" : "LOGGER.warn(\"Attempt to remove an object from the bag that does not exist: {}\", bagEntry);",
    "info" : "ExpressionStatement[6390-6480]:ExpressionStatement[6848-6938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6661-6919]:Block[7119-7377]"
  }, {
    "left" : "if (closed)",
    "right" : "if (closed)",
    "info" : "IfStatement[6669-6852]:IfStatement[7127-7310]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6681-6852]:Block[7139-7310]"
  }, {
    "left" : "LOGGER.info(\"ConcurrentBag has been closed, ignoring add()\");",
    "right" : "LOGGER.info(\"ConcurrentBag has been closed, ignoring add()\");",
    "info" : "ExpressionStatement[6692-6753]:ExpressionStatement[7150-7211]"
  }, {
    "left" : "throw new IllegalStateException(\"ConcurrentBag has been closed, ignoring add()\");",
    "right" : "throw new IllegalStateException(\"ConcurrentBag has been closed, ignoring add()\");",
    "info" : "ThrowStatement[6763-6844]:ThrowStatement[7221-7302]"
  }, {
    "left" : "sharedList.add(bagEntry);",
    "right" : "sharedList.add(bagEntry);",
    "info" : "ExpressionStatement[6860-6885]:ExpressionStatement[7318-7343]"
  }, {
    "left" : "synchronizer.signal();",
    "right" : "synchronizer.signal();",
    "info" : "ExpressionStatement[6892-6914]:ExpressionStatement[7350-7372]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7399-7924]:Block[7857-8382]"
  }, {
    "left" : "if (!bagEntry.state().compareAndSet(STATE_IN_USE, STATE_REMOVED) && !bagEntry.state().compareAndSet(STATE_RESERVED, STATE_REMOVED) && !closed)",
    "right" : "if (!bagEntry.state().compareAndSet(STATE_IN_USE, STATE_REMOVED) && !bagEntry.state().compareAndSet(STATE_RESERVED, STATE_REMOVED) && !closed)",
    "info" : "IfStatement[7407-7696]:IfStatement[7865-8154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7550-7696]:Block[8008-8154]"
  }, {
    "left" : "LOGGER.warn(\"Attempt to remove an object from the bag that was not borrowed or reserved: {}\", bagEntry);",
    "right" : "LOGGER.warn(\"Attempt to remove an object from the bag that was not borrowed or reserved: {}\", bagEntry);",
    "info" : "ExpressionStatement[7561-7665]:ExpressionStatement[8019-8123]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7675-7688]:ReturnStatement[8133-8146]"
  }, {
    "left" : "final boolean removed = sharedList.remove(bagEntry);",
    "right" : "final boolean removed = sharedList.remove(bagEntry);",
    "info" : "VariableDeclarationStatement[7704-7756]:VariableDeclarationStatement[8162-8214]"
  }, {
    "left" : "if (!removed && !closed)",
    "right" : "if (!removed && !closed)",
    "info" : "IfStatement[7763-7897]:IfStatement[8221-8355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7788-7897]:Block[8246-8355]"
  }, {
    "left" : "LOGGER.warn(\"Attempt to remove an object from the bag that does not exist: {}\", bagEntry);",
    "right" : "LOGGER.warn(\"Attempt to remove an object from the bag that does not exist: {}\", bagEntry);",
    "info" : "ExpressionStatement[7799-7889]:ExpressionStatement[8257-8347]"
  }, {
    "left" : "return removed;",
    "right" : "return removed;",
    "info" : "ReturnStatement[7904-7919]:ReturnStatement[8362-8377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8016-8043]:Block[8474-8501]"
  }, {
    "left" : "closed = true;",
    "right" : "closed = true;",
    "info" : "ExpressionStatement[8024-8038]:ExpressionStatement[8482-8496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8506-8746]:Block[8964-9204]"
  }, {
    "left" : "final ArrayList<T> list = new ArrayList<>(sharedList.size());",
    "right" : "final ArrayList<T> list = new ArrayList<>(sharedList.size());",
    "info" : "VariableDeclarationStatement[8514-8575]:VariableDeclarationStatement[8972-9033]"
  }, {
    "left" : "for (final T reference : sharedList)",
    "right" : "for (final T reference : sharedList)",
    "info" : "EnhancedForStatement[8582-8721]:EnhancedForStatement[9040-9179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8619-8721]:Block[9077-9179]"
  }, {
    "left" : "if (reference.state().get() == state)",
    "right" : "if (reference.state().get() == state)",
    "info" : "IfStatement[8630-8713]:IfStatement[9088-9171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8668-8713]:Block[9126-9171]"
  }, {
    "left" : "list.add(reference);",
    "right" : "list.add(reference);",
    "info" : "ExpressionStatement[8682-8702]:ExpressionStatement[9140-9160]"
  }, {
    "left" : "return list;",
    "right" : "return list;",
    "info" : "ReturnStatement[8729-8741]:ReturnStatement[9187-9199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9173-9222]:Block[9631-9680]"
  }, {
    "left" : "return (List<T>) sharedList.clone();",
    "right" : "return (List<T>) sharedList.clone();",
    "info" : "ReturnStatement[9181-9217]:ReturnStatement[9639-9675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9874-9959]:Block[10332-10417]"
  }, {
    "left" : "return bagEntry.state().compareAndSet(STATE_NOT_IN_USE, STATE_RESERVED);",
    "right" : "return bagEntry.state().compareAndSet(STATE_NOT_IN_USE, STATE_RESERVED);",
    "info" : "ReturnStatement[9882-9954]:ReturnStatement[10340-10412]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10187-10436]:Block[10645-10894]"
  }, {
    "left" : "if (bagEntry.state().compareAndSet(STATE_RESERVED, STATE_NOT_IN_USE))",
    "right" : "if (bagEntry.state().compareAndSet(STATE_RESERVED, STATE_NOT_IN_USE))",
    "info" : "IfStatement[10195-10431]:IfStatement[10653-10889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10265-10306]:Block[10723-10764]"
  }, {
    "left" : "synchronizer.signal();",
    "right" : "synchronizer.signal();",
    "info" : "ExpressionStatement[10276-10298]:ExpressionStatement[10734-10756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10318-10431]:Block[10776-10889]"
  }, {
    "left" : "LOGGER.warn(\"Attempt to relinquish an object to the bag that was not reserved: {}\", bagEntry);",
    "right" : "LOGGER.warn(\"Attempt to relinquish an object to the bag that was not reserved: {}\", bagEntry);",
    "info" : "ExpressionStatement[10329-10423]:ExpressionStatement[10787-10881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10662-10712]:Block[11120-11170]"
  }, {
    "left" : "return synchronizer.getQueueLength();",
    "right" : "return synchronizer.getQueueLength();",
    "info" : "ReturnStatement[10670-10707]:ReturnStatement[11128-11165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10996-11177]:Block[11454-11635]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[11004-11018]:VariableDeclarationStatement[11462-11476]"
  }, {
    "left" : "for (final T reference : sharedList)",
    "right" : "for (final T reference : sharedList)",
    "info" : "EnhancedForStatement[11025-11152]:EnhancedForStatement[11483-11610]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11062-11152]:Block[11520-11610]"
  }, {
    "left" : "if (reference.state().get() == state)",
    "right" : "if (reference.state().get() == state)",
    "info" : "IfStatement[11073-11144]:IfStatement[11531-11602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11111-11144]:Block[11569-11602]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[11125-11133]:ExpressionStatement[11583-11591]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[11159-11172]:ReturnStatement[11617-11630]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11317-11355]:Block[11775-11813]"
  }, {
    "left" : "return sharedList.size();",
    "right" : "return sharedList.size();",
    "info" : "ReturnStatement[11325-11350]:ReturnStatement[11783-11808]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11387-11482]:Block[11845-11940]"
  }, {
    "left" : "for (T bagEntry : sharedList)",
    "right" : "for (T bagEntry : sharedList)",
    "info" : "EnhancedForStatement[11395-11477]:EnhancedForStatement[11853-11935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11425-11477]:Block[11883-11935]"
  }, {
    "left" : "LOGGER.info(bagEntry.toString());",
    "right" : "LOGGER.info(bagEntry.toString());",
    "info" : "ExpressionStatement[11436-11469]:ExpressionStatement[11894-11927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11811-12219]:Block[12269-12677]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11819-12214]:TryStatement[12277-12672]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11823-12147]:Block[12281-12605]"
  }, {
    "left" : "if (System.getProperty(\"com.zaxxer.hikari.useWeakReferences\") != null)",
    "right" : "if (System.getProperty(\"com.zaxxer.hikari.useWeakReferences\") != null)",
    "info" : "IfStatement[11834-12055]:IfStatement[12292-12513]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11905-12055]:Block[12363-12513]"
  }, {
    "left" : "return Boolean.getBoolean(\"com.zaxxer.hikari.useWeakReferences\");",
    "right" : "return Boolean.getBoolean(\"com.zaxxer.hikari.useWeakReferences\");",
    "info" : "ReturnStatement[11979-12044]:ReturnStatement[12437-12502]"
  }, {
    "left" : "return getClass().getClassLoader() != ClassLoader.getSystemClassLoader();",
    "right" : "return getClass().getClassLoader() != ClassLoader.getSystemClassLoader();",
    "info" : "ReturnStatement[12066-12139]:ReturnStatement[12524-12597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12183-12214]:Block[12641-12672]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12194-12206]:ReturnStatement[12652-12664]"
  } ]
}