{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "OptionGroup",
      "right" : "OptionGroup",
      "info" : "TypeDeclaration[971-4571]:TypeDeclaration[971-4571]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1163-1211]:FieldDeclaration[1163-1211]"
    }, {
      "left" : "private Map optionMap = new HashMap();",
      "right" : "private Map optionMap = new HashMap();",
      "info" : "FieldDeclaration[1221-1287]:FieldDeclaration[1221-1287]"
    }, {
      "left" : "private String selected;",
      "right" : "private String selected;",
      "info" : "FieldDeclaration[1293-1360]:FieldDeclaration[1293-1360]"
    }, {
      "left" : "private boolean required;",
      "right" : "private boolean required;",
      "info" : "FieldDeclaration[1366-1443]:FieldDeclaration[1366-1443]"
    }, {
      "left" : "public OptionGroup addOption(Option option)",
      "right" : "public OptionGroup addOption(Option option)",
      "info" : "MethodDeclaration[1449-1826]:MethodDeclaration[1449-1826]"
    }, {
      "left" : "public Collection getNames()",
      "right" : "public Collection getNames()",
      "info" : "MethodDeclaration[1832-2064]:MethodDeclaration[1832-2064]"
    }, {
      "left" : "public Collection getOptions()",
      "right" : "public Collection getOptions()",
      "info" : "MethodDeclaration[2070-2285]:MethodDeclaration[2070-2285]"
    }, {
      "left" : "public void setSelected(Option option) throws AlreadySelectedException",
      "right" : "public void setSelected(Option option) throws AlreadySelectedException",
      "info" : "MethodDeclaration[2291-3145]:MethodDeclaration[2291-3145]"
    }, {
      "left" : "public String getSelected()",
      "right" : "public String getSelected()",
      "info" : "MethodDeclaration[3151-3271]:MethodDeclaration[3151-3271]"
    }, {
      "left" : "public void setRequired(boolean required)",
      "right" : "public void setRequired(boolean required)",
      "info" : "MethodDeclaration[3277-3439]:MethodDeclaration[3277-3439]"
    }, {
      "left" : "public boolean isRequired()",
      "right" : "public boolean isRequired()",
      "info" : "MethodDeclaration[3445-3639]:MethodDeclaration[3445-3639]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[3645-4569]:MethodDeclaration[3645-4569]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1688-1826]:Block[1688-1826]"
    }, {
      "left" : "optionMap.put(option.getKey(), option);",
      "right" : "optionMap.put(option.getKey(), option);",
      "info" : "ExpressionStatement[1759-1798]:ExpressionStatement[1759-1798]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[1808-1820]:ReturnStatement[1808-1820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1972-2064]:Block[1972-2064]"
    }, {
      "left" : "return optionMap.keySet();",
      "right" : "return optionMap.keySet();",
      "info" : "ReturnStatement[2032-2058]:ReturnStatement[2032-2058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2191-2285]:Block[2191-2285]"
    }, {
      "left" : "return optionMap.values();",
      "right" : "return optionMap.values();",
      "info" : "ReturnStatement[2253-2279]:ReturnStatement[2253-2279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2609-3145]:Block[2609-3145]"
    }, {
      "left" : "if (option == null)",
      "right" : "if (option == null)",
      "info" : "IfStatement[2619-2759]:IfStatement[2619-2759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2647-2759]:Block[2647-2759]"
    }, {
      "left" : "selected = null;",
      "right" : "selected = null;",
      "info" : "ExpressionStatement[2713-2729]:ExpressionStatement[2713-2729]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[2742-2749]:ReturnStatement[2742-2749]"
    }, {
      "left" : "if (selected == null || selected.equals(option.getOpt()))",
      "right" : "if (selected == null || selected.equals(option.getKey()))",
      "info" : "IfStatement[2927-3139]:IfStatement[2927-3139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2993-3044]:Block[2993-3044]"
    }, {
      "left" : "selected = option.getOpt();",
      "right" : "selected = option.getKey();",
      "info" : "ExpressionStatement[3007-3034]:ExpressionStatement[3007-3034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3066-3139]:Block[3066-3139]"
    }, {
      "left" : "throw new AlreadySelectedException(this, option);",
      "right" : "throw new AlreadySelectedException(this, option);",
      "info" : "ThrowStatement[3080-3129]:ThrowStatement[3080-3129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3239-3271]:Block[3239-3271]"
    }, {
      "left" : "return selected;",
      "right" : "return selected;",
      "info" : "ReturnStatement[3249-3265]:ReturnStatement[3249-3265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3398-3439]:Block[3398-3439]"
    }, {
      "left" : "this.required = required;",
      "right" : "this.required = required;",
      "info" : "ExpressionStatement[3408-3433]:ExpressionStatement[3408-3433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3607-3639]:Block[3607-3639]"
    }, {
      "left" : "return required;",
      "right" : "return required;",
      "info" : "ReturnStatement[3617-3633]:ReturnStatement[3617-3633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3818-4569]:Block[3818-4569]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer();",
      "right" : "StringBuffer buff = new StringBuffer();",
      "info" : "VariableDeclarationStatement[3828-3867]:VariableDeclarationStatement[3828-3867]"
    }, {
      "left" : "Iterator iter = getOptions().iterator();",
      "right" : "Iterator iter = getOptions().iterator();",
      "info" : "VariableDeclarationStatement[3877-3917]:VariableDeclarationStatement[3877-3917]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[3927-3944]:ExpressionStatement[3927-3944]"
    }, {
      "left" : "while (iter.hasNext())",
      "right" : "while (iter.hasNext())",
      "info" : "WhileStatement[3954-4503]:WhileStatement[3954-4503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3985-4503]:Block[3985-4503]"
    }, {
      "left" : "Option option = (Option) iter.next();",
      "right" : "Option option = (Option) iter.next();",
      "info" : "VariableDeclarationStatement[3999-4036]:VariableDeclarationStatement[3999-4036]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[4050-4316]:IfStatement[4050-4316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4091-4186]:Block[4091-4186]"
    }, {
      "left" : "buff.append(\"-\");",
      "right" : "buff.append(\"-\");",
      "info" : "ExpressionStatement[4109-4126]:ExpressionStatement[4109-4126]"
    }, {
      "left" : "buff.append(option.getOpt());",
      "right" : "buff.append(option.getOpt());",
      "info" : "ExpressionStatement[4143-4172]:ExpressionStatement[4143-4172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4216-4316]:Block[4216-4316]"
    }, {
      "left" : "buff.append(\"--\");",
      "right" : "buff.append(\"--\");",
      "info" : "ExpressionStatement[4234-4252]:ExpressionStatement[4234-4252]"
    }, {
      "left" : "buff.append(option.getLongOpt());",
      "right" : "buff.append(option.getLongOpt());",
      "info" : "ExpressionStatement[4269-4302]:ExpressionStatement[4269-4302]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[4330-4347]:ExpressionStatement[4330-4347]"
    }, {
      "left" : "buff.append(option.getDescription());",
      "right" : "buff.append(option.getDescription());",
      "info" : "ExpressionStatement[4360-4397]:ExpressionStatement[4360-4397]"
    }, {
      "left" : "if (iter.hasNext())",
      "right" : "if (iter.hasNext())",
      "info" : "IfStatement[4411-4493]:IfStatement[4411-4493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4443-4493]:Block[4443-4493]"
    }, {
      "left" : "buff.append(\", \");",
      "right" : "buff.append(\", \");",
      "info" : "ExpressionStatement[4461-4479]:ExpressionStatement[4461-4479]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[4513-4530]:ExpressionStatement[4513-4530]"
    }, {
      "left" : "return buff.toString();",
      "right" : "return buff.toString();",
      "info" : "ReturnStatement[4540-4563]:ReturnStatement[4540-4563]"
    } ]
  },
  "interFileMappings" : { }
}