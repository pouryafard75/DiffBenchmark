{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "TypeDeclaration[714-40181]:TypeDeclaration[714-41521]"
    }, {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[1365-1412]:FieldDeclaration[1365-1412]"
    }, {
      "left" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "right" : "private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };",
      "info" : "FieldDeclaration[1418-1576]:FieldDeclaration[1418-1576]"
    }, {
      "left" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "right" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "info" : "FieldDeclaration[1582-1641]:FieldDeclaration[1582-1641]"
    }, {
      "left" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "right" : "public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(\n            new DeserializerFactoryConfig());",
      "info" : "FieldDeclaration[2212-2467]:FieldDeclaration[3076-3331]"
    }, {
      "left" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "right" : "public BeanDeserializerFactory(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[2473-2568]:MethodDeclaration[3337-3432]"
    }, {
      "left" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "right" : "public DeserializerFactory withConfig(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[2578-3811]:MethodDeclaration[3442-4675]"
    }, {
      "left" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4011-6434]:MethodDeclaration[4875-7347]"
    }, {
      "left" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> createBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription beanDesc,\n    \t\tClass<?> builderClass)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[6440-6965]:MethodDeclaration[7353-7878]"
    }, {
      "left" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> findStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[6975-7890]:MethodDeclaration[7888-8803]"
    }, {
      "left" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JavaType materializeAbstractType(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7900-8441]:MethodDeclaration[8813-9354]"
    }, {
      "left" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildBeanDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8735-11468]:MethodDeclaration[9648-12381]"
    }, {
      "left" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> buildBuilderBasedDeserializer(\n    \t\tDeserializationContext ctxt, JavaType valueType, BeanDescription builderDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[11478-14272]:MethodDeclaration[12391-15185]"
    }, {
      "left" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addObjectIdReader(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[14282-16132]:MethodDeclaration[15195-17045]"
    }, {
      "left" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<Object> buildThrowableDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[16142-19204]:MethodDeclaration[17055-20117]"
    }, {
      "left" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "right" : "protected BeanDeserializerBuilder constructBeanDeserializerBuilder(DeserializationContext ctxt,\n            BeanDescription beanDesc)",
      "info" : "MethodDeclaration[19446-19845]:MethodDeclaration[20359-20758]"
    }, {
      "left" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[19855-27236]:MethodDeclaration[20768-28149]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "right" : "protected List<BeanPropertyDefinition> filterBeanProps(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder,\n            List<BeanPropertyDefinition> propDefsIn,\n            Set<String> ignored)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[27246-29205]:MethodDeclaration[28159-30118]"
    }, {
      "left" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addReferenceProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[29211-31020]:MethodDeclaration[30124-31933]"
    }, {
      "left" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected void addInjectables(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanDeserializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[31026-31855]:MethodDeclaration[31939-32768]"
    }, {
      "left" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMember mutator)\n        throws JsonMappingException",
      "right" : "protected SettableAnyProperty constructAnySetter(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedMember mutator)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[31861-33990]:MethodDeclaration[32774-34903]"
    }, {
      "left" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSettableProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef,\n            JavaType propType0)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[33996-36478]:MethodDeclaration[34909-37391]"
    }, {
      "left" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructSetterlessProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, BeanPropertyDefinition propDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[36484-37514]:MethodDeclaration[37397-38427]"
    }, {
      "left" : "protected boolean isPotentialBeanType(Class<?> type)",
      "right" : "protected boolean isPotentialBeanType(Class<?> type)",
      "info" : "MethodDeclaration[37715-38893]:MethodDeclaration[38628-39806]"
    }, {
      "left" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "right" : "protected boolean isIgnorableType(DeserializationConfig config, BeanDescription beanDesc,\n            Class<?> type, Map<Class<?>,Boolean> ignoredTypes)",
      "info" : "MethodDeclaration[38899-40014]:MethodDeclaration[39812-40927]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1236-1242]:Modifier[1236-1242]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1243-1248]:TYPE_DECLARATION_KIND[1243-1248]"
    }, {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "SimpleName[1249-1272]:SimpleName[1249-1272]"
    }, {
      "left" : "BasicDeserializerFactory",
      "right" : "BasicDeserializerFactory",
      "info" : "SimpleType[1285-1309]:SimpleType[1285-1309]"
    }, {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[1325-1345]:SimpleType[1325-1345]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2473-2479]:Modifier[3337-3343]"
    }, {
      "left" : "BeanDeserializerFactory",
      "right" : "BeanDeserializerFactory",
      "info" : "SimpleName[2480-2503]:SimpleName[3344-3367]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[2504-2536]:SingleVariableDeclaration[3368-3400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2538-2568]:Block[3402-3432]"
    }, {
      "left" : "super(config);",
      "right" : "super(config);",
      "info" : "SuperConstructorInvocation[2548-2562]:SuperConstructorInvocation[3412-3426]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2749-2758]:MarkerAnnotation[3613-3622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2763-2769]:Modifier[3627-3633]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[2770-2789]:SimpleType[3634-3653]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[2790-2800]:SimpleName[3654-3664]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[2801-2833]:SingleVariableDeclaration[3665-3697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2839-3811]:Block[3703-4675]"
    }, {
      "left" : "if (_factoryConfig == config)",
      "right" : "if (_factoryConfig == config)",
      "info" : "IfStatement[2849-2915]:IfStatement[3713-3779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2879-2915]:Block[3743-3779]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2893-2905]:ReturnStatement[3757-3769]"
    }, {
      "left" : "if (getClass() != BeanDeserializerFactory.class)",
      "right" : "if (getClass() != BeanDeserializerFactory.class)",
      "info" : "IfStatement[3403-3753]:IfStatement[4267-4617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3452-3753]:Block[4316-4617]"
    }, {
      "left" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "right" : "throw new IllegalStateException(\"Subtype of BeanDeserializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalDeserializers': can not instantiate subtype with \"\n                    +\"additional deserializer definitions\");",
      "info" : "ThrowStatement[3466-3743]:ThrowStatement[4330-4607]"
    }, {
      "left" : "return new BeanDeserializerFactory(config);",
      "right" : "return new BeanDeserializerFactory(config);",
      "info" : "ReturnStatement[3762-3805]:ReturnStatement[4626-4669]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4179-4188]:MarkerAnnotation[5043-5052]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4193-4199]:Modifier[5057-5063]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[4200-4224]:ParameterizedType[5064-5088]"
    }, {
      "left" : "createBeanDeserializer",
      "right" : "createBeanDeserializer",
      "info" : "SimpleName[4225-4247]:SimpleName[5089-5111]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[4248-4275]:SingleVariableDeclaration[5112-5139]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[4289-4302]:SingleVariableDeclaration[5153-5166]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[4304-4328]:SingleVariableDeclaration[5168-5192]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[4345-4365]:SimpleType[5209-5229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4370-6434]:Block[5234-7347]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[4380-4434]:VariableDeclarationStatement[5244-5298]"
    }, {
      "left" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[4489-4575]:VariableDeclarationStatement[5353-5439]"
    }, {
      "left" : "if (custom != null)",
      "right" : "if (custom != null)",
      "info" : "IfStatement[4584-4642]:IfStatement[5448-5506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4604-4642]:Block[5468-5506]"
    }, {
      "left" : "return custom;",
      "right" : "return custom;",
      "info" : "ReturnStatement[4618-4632]:ReturnStatement[5482-5496]"
    }, {
      "left" : "if (type.isThrowable())",
      "right" : "if (type.isThrowable())",
      "info" : "IfStatement[4823-4927]:IfStatement[5687-5791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4847-4927]:Block[5711-5791]"
    }, {
      "left" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[4861-4917]:ReturnStatement[5725-5781]"
    }, {
      "left" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
      "right" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
      "info" : "IfStatement[5208-5796]:IfStatement[6072-6660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5276-5796]:Block[6140-6660]"
    }, {
      "left" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "right" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[5359-5429]:VariableDeclarationStatement[6223-6293]"
    }, {
      "left" : "if (concreteType != null)",
      "right" : "if (concreteType != null)",
      "info" : "IfStatement[5442-5786]:IfStatement[6306-6650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5468-5786]:Block[6332-6650]"
    }, {
      "left" : "beanDesc = config.introspect(concreteType);",
      "right" : "beanDesc = config.introspect(concreteType);",
      "info" : "ExpressionStatement[5653-5696]:ExpressionStatement[6517-6560]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
      "info" : "ReturnStatement[5713-5772]:ReturnStatement[6577-6636]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[5891-6032]:VariableDeclarationStatement[6755-6896]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[6041-6097]:IfStatement[6905-6961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6060-6097]:Block[6924-6961]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[6074-6087]:ReturnStatement[6938-6951]"
    }, {
      "left" : "if (!isPotentialBeanType(type.getRawClass()))",
      "right" : "if (!isPotentialBeanType(type.getRawClass()))",
      "info" : "IfStatement[6179-6261]:IfStatement[7043-7125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6225-6261]:Block[7089-7125]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6239-6251]:ReturnStatement[7103-7115]"
    }, {
      "left" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "right" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
      "info" : "ReturnStatement[6377-6428]:ReturnStatement[7290-7341]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6440-6449]:MarkerAnnotation[7353-7362]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6454-6460]:Modifier[7367-7373]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[6461-6485]:ParameterizedType[7374-7398]"
    }, {
      "left" : "createBuilderBasedDeserializer",
      "right" : "createBuilderBasedDeserializer",
      "info" : "SimpleName[6486-6516]:SimpleName[7399-7429]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[6524-6551]:SingleVariableDeclaration[7437-7464]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[6553-6571]:SingleVariableDeclaration[7466-7484]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[6573-6597]:SingleVariableDeclaration[7486-7510]"
    }, {
      "left" : "Class<?> builderClass",
      "right" : "Class<?> builderClass",
      "info" : "SingleVariableDeclaration[6605-6626]:SingleVariableDeclaration[7518-7539]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[6643-6663]:SimpleType[7556-7576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6668-6965]:Block[7581-7878]"
    }, {
      "left" : "JavaType builderType = ctxt.constructType(builderClass);",
      "right" : "JavaType builderType = ctxt.constructType(builderClass);",
      "info" : "VariableDeclarationStatement[6737-6793]:VariableDeclarationStatement[7650-7706]"
    }, {
      "left" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "right" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
      "info" : "VariableDeclarationStatement[6802-6883]:VariableDeclarationStatement[7715-7796]"
    }, {
      "left" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "right" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
      "info" : "ReturnStatement[6892-6959]:ReturnStatement[7805-7872]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7130-7139]:Modifier[8043-8052]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[7140-7159]:ParameterizedType[8053-8072]"
    }, {
      "left" : "findStdDeserializer",
      "right" : "findStdDeserializer",
      "info" : "SimpleName[7160-7179]:SimpleName[8073-8092]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7180-7207]:SingleVariableDeclaration[8093-8120]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[7221-7234]:SingleVariableDeclaration[8134-8147]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[7236-7260]:SingleVariableDeclaration[8149-8173]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7277-7297]:SimpleType[8190-8210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7302-7890]:Block[8215-8803]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "right" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[7416-7490]:VariableDeclarationStatement[8329-8403]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[7558-7862]:IfStatement[8471-8775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7577-7862]:Block[8490-8775]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[7591-7852]:IfStatement[8504-8765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7638-7852]:Block[8551-8765]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[7656-7838]:EnhancedForStatement[8569-8751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7732-7838]:Block[8645-8751]"
    }, {
      "left" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "right" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
      "info" : "ExpressionStatement[7754-7820]:ExpressionStatement[8667-8733]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[7871-7884]:ReturnStatement[8784-8797]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7900-7909]:Modifier[8813-8822]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[7910-7918]:SimpleType[8823-8831]"
    }, {
      "left" : "materializeAbstractType",
      "right" : "materializeAbstractType",
      "info" : "SimpleName[7919-7942]:SimpleName[8832-8855]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[7943-7970]:SingleVariableDeclaration[8856-8883]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[7984-7997]:SingleVariableDeclaration[8897-8910]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[7999-8023]:SingleVariableDeclaration[8912-8936]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8040-8060]:SimpleType[8953-8973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8065-8441]:Block[8978-9354]"
    }, {
      "left" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "right" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
      "info" : "EnhancedForStatement[8167-8414]:EnhancedForStatement[9080-9327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8237-8414]:Block[9150-9327]"
    }, {
      "left" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "right" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
      "info" : "VariableDeclarationStatement[8251-8321]:VariableDeclarationStatement[9164-9234]"
    }, {
      "left" : "if (concrete != null)",
      "right" : "if (concrete != null)",
      "info" : "IfStatement[8334-8404]:IfStatement[9247-9317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8356-8404]:Block[9269-9317]"
    }, {
      "left" : "return concrete;",
      "right" : "return concrete;",
      "info" : "ReturnStatement[8374-8390]:ReturnStatement[9287-9303]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8423-8435]:ReturnStatement[9336-9348]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[8985-9015]:SingleMemberAnnotation[9898-9928]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9020-9026]:Modifier[9933-9939]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[9027-9051]:ParameterizedType[9940-9964]"
    }, {
      "left" : "buildBeanDeserializer",
      "right" : "buildBeanDeserializer",
      "info" : "SimpleName[9052-9073]:SimpleName[9965-9986]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[9074-9101]:SingleVariableDeclaration[9987-10014]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[9115-9128]:SingleVariableDeclaration[10028-10041]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[9130-9154]:SingleVariableDeclaration[10043-10067]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[9171-9191]:SimpleType[10084-10104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9196-11468]:Block[10109-12381]"
    }, {
      "left" : "ValueInstantiator valueInstantiator;",
      "right" : "ValueInstantiator valueInstantiator;",
      "info" : "VariableDeclarationStatement[9263-9299]:VariableDeclarationStatement[10176-10212]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9619-9809]:TryStatement[10532-10722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9623-9705]:Block[10536-10618]"
    }, {
      "left" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "right" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[9637-9695]:ExpressionStatement[10550-10608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9741-9809]:Block[10654-10722]"
    }, {
      "left" : "return new ErrorThrowingDeserializer(error);",
      "right" : "return new ErrorThrowingDeserializer(error);",
      "info" : "ReturnStatement[9755-9799]:ReturnStatement[10668-10712]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[9818-9901]:VariableDeclarationStatement[10731-10814]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[9910-9958]:ExpressionStatement[10823-10871]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[10031-10069]:ExpressionStatement[10944-10982]"
    }, {
      "left" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "right" : "addObjectIdReader(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[10078-10121]:ExpressionStatement[10991-11034]"
    }, {
      "left" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "right" : "addReferenceProperties(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[10216-10264]:ExpressionStatement[11129-11177]"
    }, {
      "left" : "addInjectables(ctxt, beanDesc, builder);",
      "right" : "addInjectables(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[10273-10313]:ExpressionStatement[11186-11226]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[10331-10385]:VariableDeclarationStatement[11244-11298]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[10394-10628]:IfStatement[11307-11541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10441-10628]:Block[11354-11541]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[10455-10618]:EnhancedForStatement[11368-11531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10531-10618]:Block[11444-11531]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[10549-10604]:ExpressionStatement[11462-11517]"
    }, {
      "left" : "JsonDeserializer<?> deserializer;",
      "right" : "JsonDeserializer<?> deserializer;",
      "info" : "VariableDeclarationStatement[10637-10670]:VariableDeclarationStatement[11550-11583]"
    }, {
      "left" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "right" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
      "info" : "IfStatement[10856-11042]:IfStatement[11769-11955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10918-10981]:Block[11831-11894]"
    }, {
      "left" : "deserializer = builder.buildAbstract();",
      "right" : "deserializer = builder.buildAbstract();",
      "info" : "ExpressionStatement[10932-10971]:ExpressionStatement[11845-11884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10987-11042]:Block[11900-11955]"
    }, {
      "left" : "deserializer = builder.build();",
      "right" : "deserializer = builder.build();",
      "info" : "ExpressionStatement[11001-11032]:ExpressionStatement[11914-11945]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[11157-11406]:IfStatement[12070-12319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11204-11406]:Block[12117-12319]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[11218-11396]:EnhancedForStatement[12131-12309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11294-11396]:Block[12207-12309]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[11312-11382]:ExpressionStatement[12225-12295]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[11415-11462]:ReturnStatement[12328-12375]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[11762-11792]:SingleMemberAnnotation[12675-12705]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11797-11806]:Modifier[12710-12719]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[11807-11831]:ParameterizedType[12720-12744]"
    }, {
      "left" : "buildBuilderBasedDeserializer",
      "right" : "buildBuilderBasedDeserializer",
      "info" : "SimpleName[11832-11861]:SimpleName[12745-12774]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[11869-11896]:SingleVariableDeclaration[12782-12809]"
    }, {
      "left" : "JavaType valueType",
      "right" : "JavaType valueType",
      "info" : "SingleVariableDeclaration[11898-11916]:SingleVariableDeclaration[12811-12829]"
    }, {
      "left" : "BeanDescription builderDesc",
      "right" : "BeanDescription builderDesc",
      "info" : "SingleVariableDeclaration[11918-11945]:SingleVariableDeclaration[12831-12858]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[11962-11982]:SimpleType[12875-12895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11987-14272]:Block[12900-15185]"
    }, {
      "left" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "right" : "ValueInstantiator valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[12050-12129]:VariableDeclarationStatement[12963-13042]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[12138-12192]:VariableDeclarationStatement[13051-13105]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
      "info" : "VariableDeclarationStatement[12201-12287]:VariableDeclarationStatement[13114-13200]"
    }, {
      "left" : "builder.setValueInstantiator(valueInstantiator);",
      "right" : "builder.setValueInstantiator(valueInstantiator);",
      "info" : "ExpressionStatement[12296-12344]:ExpressionStatement[13209-13257]"
    }, {
      "left" : "addBeanProps(ctxt, builderDesc, builder);",
      "right" : "addBeanProps(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12424-12465]:ExpressionStatement[13337-13378]"
    }, {
      "left" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "right" : "addObjectIdReader(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12474-12520]:ExpressionStatement[13387-13433]"
    }, {
      "left" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "right" : "addReferenceProperties(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12623-12674]:ExpressionStatement[13536-13587]"
    }, {
      "left" : "addInjectables(ctxt, builderDesc, builder);",
      "right" : "addInjectables(ctxt, builderDesc, builder);",
      "info" : "ExpressionStatement[12683-12726]:ExpressionStatement[13596-13639]"
    }, {
      "left" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "right" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
      "info" : "VariableDeclarationStatement[12736-12810]:VariableDeclarationStatement[13649-13723]"
    }, {
      "left" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "right" : "final String buildMethodName = (builderConfig == null) ?\n                \"build\" : builderConfig.buildMethodName;",
      "info" : "VariableDeclarationStatement[12819-12932]:VariableDeclarationStatement[13732-13845]"
    }, {
      "left" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "right" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
      "info" : "VariableDeclarationStatement[12999-13075]:VariableDeclarationStatement[13912-13988]"
    }, {
      "left" : "if (buildMethod != null)",
      "right" : "if (buildMethod != null)",
      "info" : "IfStatement[13084-13380]:IfStatement[13997-14293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13109-13380]:Block[14022-14293]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[13181-13370]:IfStatement[14094-14283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13222-13370]:Block[14135-14283]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[13237-13356]:ExpressionStatement[14150-14269]"
    }, {
      "left" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "right" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
      "info" : "ExpressionStatement[13389-13440]:ExpressionStatement[14302-14353]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[13497-13734]:IfStatement[14410-14647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13544-13734]:Block[14457-14647]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[13558-13724]:EnhancedForStatement[14471-14637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13634-13724]:Block[14547-14637]"
    }, {
      "left" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, builderDesc, builder);",
      "info" : "ExpressionStatement[13652-13710]:ExpressionStatement[14565-14623]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "right" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
      "info" : "VariableDeclarationStatement[13743-13843]:VariableDeclarationStatement[14656-14756]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[13958-14210]:IfStatement[14871-15123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14005-14210]:Block[14918-15123]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[14019-14200]:EnhancedForStatement[14932-15113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14095-14200]:Block[15008-15113]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
      "info" : "ExpressionStatement[14113-14186]:ExpressionStatement[15026-15099]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[14219-14266]:ReturnStatement[15132-15179]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14282-14291]:Modifier[15195-15204]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14292-14296]:PrimitiveType[15205-15209]"
    }, {
      "left" : "addObjectIdReader",
      "right" : "addObjectIdReader",
      "info" : "SimpleName[14297-14314]:SimpleName[15210-15227]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[14315-14342]:SingleVariableDeclaration[15228-15255]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[14356-14380]:SingleVariableDeclaration[15269-15293]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[14382-14413]:SingleVariableDeclaration[15295-15326]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[14430-14450]:SimpleType[15343-15363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14455-16132]:Block[15368-17045]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "info" : "VariableDeclarationStatement[14465-14520]:VariableDeclarationStatement[15378-15433]"
    }, {
      "left" : "if (objectIdInfo == null)",
      "right" : "if (objectIdInfo == null)",
      "info" : "IfStatement[14529-14586]:IfStatement[15442-15499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14555-14586]:Block[15468-15499]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[14569-14576]:ReturnStatement[15482-15489]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[14595-14648]:VariableDeclarationStatement[15508-15561]"
    }, {
      "left" : "JavaType idType;",
      "right" : "JavaType idType;",
      "info" : "VariableDeclarationStatement[14657-14673]:VariableDeclarationStatement[15570-15586]"
    }, {
      "left" : "SettableBeanProperty idProp;",
      "right" : "SettableBeanProperty idProp;",
      "info" : "VariableDeclarationStatement[14682-14710]:VariableDeclarationStatement[15595-15623]"
    }, {
      "left" : "ObjectIdGenerator<?> gen;",
      "right" : "ObjectIdGenerator<?> gen;",
      "info" : "VariableDeclarationStatement[14719-14744]:VariableDeclarationStatement[15632-15657]"
    }, {
      "left" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "VariableDeclarationStatement[14754-14851]:VariableDeclarationStatement[15667-15764]"
    }, {
      "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "info" : "IfStatement[14932-15817]:IfStatement[15845-16730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14993-15528]:Block[15906-16441]"
    }, {
      "left" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "right" : "PropertyName propName = objectIdInfo.getPropertyName();",
      "info" : "VariableDeclarationStatement[15045-15100]:VariableDeclarationStatement[15958-16013]"
    }, {
      "left" : "idProp = builder.findProperty(propName);",
      "right" : "idProp = builder.findProperty(propName);",
      "info" : "ExpressionStatement[15113-15153]:ExpressionStatement[16026-16066]"
    }, {
      "left" : "if (idProp == null)",
      "right" : "if (idProp == null)",
      "info" : "IfStatement[15166-15400]:IfStatement[16079-16313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15186-15400]:Block[16099-16313]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": can not find property with name '\"+propName+\"'\");",
      "info" : "ThrowStatement[15204-15386]:ThrowStatement[16117-16299]"
    }, {
      "left" : "idType = idProp.getType();",
      "right" : "idType = idProp.getType();",
      "info" : "ExpressionStatement[15413-15439]:ExpressionStatement[16326-16352]"
    }, {
      "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
      "info" : "ExpressionStatement[15452-15518]:ExpressionStatement[16365-16431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15534-15817]:Block[16447-16730]"
    }, {
      "left" : "JavaType type = ctxt.constructType(implClass);",
      "right" : "JavaType type = ctxt.constructType(implClass);",
      "info" : "VariableDeclarationStatement[15548-15594]:VariableDeclarationStatement[16461-16507]"
    }, {
      "left" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "right" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "info" : "ExpressionStatement[15607-15691]:ExpressionStatement[16520-16604]"
    }, {
      "left" : "idProp = null;",
      "right" : "idProp = null;",
      "info" : "ExpressionStatement[15704-15718]:ExpressionStatement[16617-16631]"
    }, {
      "left" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "ExpressionStatement[15731-15807]:ExpressionStatement[16644-16720]"
    }, {
      "left" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "right" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
      "info" : "VariableDeclarationStatement[15912-15979]:VariableDeclarationStatement[16825-16892]"
    }, {
      "left" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "right" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
      "info" : "ExpressionStatement[15988-16126]:ExpressionStatement[16901-17039]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[16142-16172]:SingleMemberAnnotation[17055-17085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16177-16183]:Modifier[17090-17096]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[16184-16208]:ParameterizedType[17097-17121]"
    }, {
      "left" : "buildThrowableDeserializer",
      "right" : "buildThrowableDeserializer",
      "info" : "SimpleName[16209-16235]:SimpleName[17122-17148]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[16236-16263]:SingleVariableDeclaration[17149-17176]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[16277-16290]:SingleVariableDeclaration[17190-17203]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[16292-16316]:SingleVariableDeclaration[17205-17229]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[16333-16353]:SimpleType[17246-17266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16358-19204]:Block[17271-20117]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[16368-16422]:VariableDeclarationStatement[17281-17335]"
    }, {
      "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[16495-16578]:VariableDeclarationStatement[17408-17491]"
    }, {
      "left" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "right" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
      "info" : "ExpressionStatement[16587-16655]:ExpressionStatement[17500-17568]"
    }, {
      "left" : "addBeanProps(ctxt, beanDesc, builder);",
      "right" : "addBeanProps(ctxt, beanDesc, builder);",
      "info" : "ExpressionStatement[16665-16703]:ExpressionStatement[17578-17616]"
    }, {
      "left" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "right" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
      "info" : "VariableDeclarationStatement[16956-17029]:VariableDeclarationStatement[17869-17942]"
    }, {
      "left" : "if (am != null)",
      "right" : "if (am != null)",
      "info" : "IfStatement[17038-17717]:IfStatement[17951-18630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17054-17717]:Block[17967-18630]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
      "info" : "VariableDeclarationStatement[17092-17239]:VariableDeclarationStatement[18005-18152]"
    }, {
      "left" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "right" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
      "info" : "VariableDeclarationStatement[17252-17375]:VariableDeclarationStatement[18165-18288]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[17388-17707]:IfStatement[18301-18620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17406-17707]:Block[18319-18620]"
    }, {
      "left" : "builder.addOrReplaceProperty(prop, true);",
      "right" : "builder.addOrReplaceProperty(prop, true);",
      "info" : "ExpressionStatement[17652-17693]:ExpressionStatement[18565-18606]"
    }, {
      "left" : "builder.addIgnorable(\"localizedMessage\");",
      "right" : "builder.addIgnorable(\"localizedMessage\");",
      "info" : "ExpressionStatement[17781-17822]:ExpressionStatement[18694-18735]"
    }, {
      "left" : "builder.addIgnorable(\"suppressed\");",
      "right" : "builder.addIgnorable(\"suppressed\");",
      "info" : "ExpressionStatement[17904-17939]:ExpressionStatement[18817-18852]"
    }, {
      "left" : "builder.addIgnorable(\"message\");",
      "right" : "builder.addIgnorable(\"message\");",
      "info" : "ExpressionStatement[18074-18106]:ExpressionStatement[18987-19019]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[18174-18408]:IfStatement[19087-19321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18221-18408]:Block[19134-19321]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[18235-18398]:EnhancedForStatement[19148-19311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18311-18398]:Block[19224-19311]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[18329-18384]:ExpressionStatement[19242-19297]"
    }, {
      "left" : "JsonDeserializer<?> deserializer = builder.build();",
      "right" : "JsonDeserializer<?> deserializer = builder.build();",
      "info" : "VariableDeclarationStatement[18417-18468]:VariableDeclarationStatement[19330-19381]"
    }, {
      "left" : "if (deserializer instanceof BeanDeserializer)",
      "right" : "if (deserializer instanceof BeanDeserializer)",
      "info" : "IfStatement[18649-18793]:IfStatement[19562-19706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18695-18793]:Block[19608-19706]"
    }, {
      "left" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "right" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
      "info" : "ExpressionStatement[18709-18783]:ExpressionStatement[19622-19696]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[18893-19142]:IfStatement[19806-20055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18940-19142]:Block[19853-20055]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[18954-19132]:EnhancedForStatement[19867-20045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19030-19132]:Block[19943-20045]"
    }, {
      "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
      "info" : "ExpressionStatement[19048-19118]:ExpressionStatement[19961-20031]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deserializer;",
      "right" : "return (JsonDeserializer<Object>) deserializer;",
      "info" : "ReturnStatement[19151-19198]:ReturnStatement[20064-20111]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19632-19641]:Modifier[20545-20554]"
    }, {
      "left" : "BeanDeserializerBuilder",
      "right" : "BeanDeserializerBuilder",
      "info" : "SimpleType[19642-19665]:SimpleType[20555-20578]"
    }, {
      "left" : "constructBeanDeserializerBuilder",
      "right" : "constructBeanDeserializerBuilder",
      "info" : "SimpleName[19666-19698]:SimpleName[20579-20611]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[19699-19726]:SingleVariableDeclaration[20612-20639]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[19740-19764]:SingleVariableDeclaration[20653-20677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19766-19845]:Block[20679-20758]"
    }, {
      "left" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "right" : "return new BeanDeserializerBuilder(beanDesc, ctxt.getConfig());",
      "info" : "ReturnStatement[19776-19839]:ReturnStatement[20689-20752]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[20088-20097]:Modifier[21001-21010]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20098-20102]:PrimitiveType[21011-21015]"
    }, {
      "left" : "addBeanProps",
      "right" : "addBeanProps",
      "info" : "SimpleName[20103-20115]:SimpleName[21016-21028]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[20116-20143]:SingleVariableDeclaration[21029-21056]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[20157-20181]:SingleVariableDeclaration[21070-21094]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[20183-20214]:SingleVariableDeclaration[21096-21127]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[20231-20251]:SimpleType[21144-21164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20256-27236]:Block[21169-28149]"
    }, {
      "left" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "right" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
      "info" : "VariableDeclarationStatement[20266-20326]:VariableDeclarationStatement[21179-21239]"
    }, {
      "left" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
      "right" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
      "info" : "VariableDeclarationStatement[20335-20503]:VariableDeclarationStatement[21248-21416]"
    }, {
      "left" : "final boolean hasCreatorProps = (creatorProps != null);",
      "right" : "final boolean hasCreatorProps = (creatorProps != null);",
      "info" : "VariableDeclarationStatement[20512-20567]:VariableDeclarationStatement[21425-21480]"
    }, {
      "left" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
      "right" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[20850-21023]:VariableDeclarationStatement[21763-21936]"
    }, {
      "left" : "Set<String> ignored;",
      "right" : "Set<String> ignored;",
      "info" : "VariableDeclarationStatement[21032-21052]:VariableDeclarationStatement[21945-21965]"
    }, {
      "left" : "if (ignorals != null)",
      "right" : "if (ignorals != null)",
      "info" : "IfStatement[21062-21480]:IfStatement[21975-22393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21084-21417]:Block[21997-22330]"
    }, {
      "left" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
      "right" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
      "info" : "VariableDeclarationStatement[21098-21146]:VariableDeclarationStatement[22011-22059]"
    }, {
      "left" : "builder.setIgnoreUnknownProperties(ignoreAny);",
      "right" : "builder.setIgnoreUnknownProperties(ignoreAny);",
      "info" : "ExpressionStatement[21159-21205]:ExpressionStatement[22072-22118]"
    }, {
      "left" : "ignored = ignorals.getIgnored();",
      "right" : "ignored = ignorals.getIgnored();",
      "info" : "ExpressionStatement[21267-21299]:ExpressionStatement[22180-22212]"
    }, {
      "left" : "for (String propName : ignored)",
      "right" : "for (String propName : ignored)",
      "info" : "EnhancedForStatement[21312-21407]:EnhancedForStatement[22225-22320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21344-21407]:Block[22257-22320]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[21362-21393]:ExpressionStatement[22275-22306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21423-21480]:Block[22336-22393]"
    }, {
      "left" : "ignored = Collections.emptySet();",
      "right" : "ignored = Collections.emptySet();",
      "info" : "ExpressionStatement[21437-21470]:ExpressionStatement[22350-22383]"
    }, {
      "left" : "AnnotatedMethod anySetterMethod = beanDesc.findAnySetter();",
      "right" : "AnnotatedMethod anySetterMethod = beanDesc.findAnySetter();",
      "info" : "VariableDeclarationStatement[21543-21602]:VariableDeclarationStatement[22456-22515]"
    }, {
      "left" : "AnnotatedMember anySetterField = null;",
      "right" : "AnnotatedMember anySetterField = null;",
      "info" : "VariableDeclarationStatement[21611-21649]:VariableDeclarationStatement[22524-22562]"
    }, {
      "left" : "if (anySetterMethod != null)",
      "right" : "if (anySetterMethod != null)",
      "info" : "IfStatement[21658-22000]:IfStatement[22571-22913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21687-21785]:Block[22600-22698]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterMethod));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterMethod));",
      "info" : "ExpressionStatement[21701-21775]:ExpressionStatement[22614-22688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21799-22000]:Block[22712-22913]"
    }, {
      "left" : "anySetterField = beanDesc.findAnySetterField();",
      "right" : "anySetterField = beanDesc.findAnySetterField();",
      "info" : "ExpressionStatement[21810-21857]:ExpressionStatement[22723-22770]"
    }, {
      "left" : "if(anySetterField != null)",
      "right" : "if(anySetterField != null)",
      "info" : "IfStatement[21867-21990]:IfStatement[22780-22903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21894-21990]:Block[22807-22903]"
    }, {
      "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));",
      "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetterField));",
      "info" : "ExpressionStatement[21906-21979]:ExpressionStatement[22819-22892]"
    }, {
      "left" : "if (anySetterMethod == null && anySetterField == null)",
      "right" : "if (anySetterMethod == null && anySetterField == null)",
      "info" : "IfStatement[22162-22632]:IfStatement[23075-23545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22217-22632]:Block[23130-23545]"
    }, {
      "left" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "right" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
      "info" : "VariableDeclarationStatement[22231-22296]:VariableDeclarationStatement[23144-23209]"
    }, {
      "left" : "if (ignored2 != null)",
      "right" : "if (ignored2 != null)",
      "info" : "IfStatement[22309-22622]:IfStatement[23222-23535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22331-22622]:Block[23244-23535]"
    }, {
      "left" : "for (String propName : ignored2)",
      "right" : "for (String propName : ignored2)",
      "info" : "EnhancedForStatement[22349-22608]:EnhancedForStatement[23262-23521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22382-22608]:Block[23295-23521]"
    }, {
      "left" : "builder.addIgnorable(propName);",
      "right" : "builder.addIgnorable(propName);",
      "info" : "ExpressionStatement[22559-22590]:ExpressionStatement[23472-23503]"
    }, {
      "left" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
      "right" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
      "info" : "VariableDeclarationStatement[22641-22799]:VariableDeclarationStatement[23554-23712]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "right" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
      "info" : "VariableDeclarationStatement[22867-23000]:VariableDeclarationStatement[23780-23913]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[23071-23320]:IfStatement[23984-24233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23118-23320]:Block[24031-24233]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[23132-23310]:EnhancedForStatement[24045-24223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23208-23310]:Block[24121-24223]"
    }, {
      "left" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "right" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
      "info" : "ExpressionStatement[23226-23296]:ExpressionStatement[24139-24209]"
    }, {
      "left" : "for (BeanPropertyDefinition propDef : propDefs)",
      "right" : "for (BeanPropertyDefinition propDef : propDefs)",
      "info" : "EnhancedForStatement[23426-27230]:EnhancedForStatement[24339-28143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23474-27230]:Block[24387-28143]"
    }, {
      "left" : "SettableBeanProperty prop = null;",
      "right" : "SettableBeanProperty prop = null;",
      "info" : "VariableDeclarationStatement[23488-23521]:VariableDeclarationStatement[24401-24434]"
    }, {
      "left" : "if (propDef.hasSetter())",
      "right" : "if (propDef.hasSetter())",
      "info" : "IfStatement[23813-24887]:IfStatement[24726-25800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23838-24023]:Block[24751-24936]"
    }, {
      "left" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "right" : "JavaType propertyType = propDef.getSetter().getParameterType(0);",
      "info" : "VariableDeclarationStatement[23856-23920]:VariableDeclarationStatement[24769-24833]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[23937-24009]:ExpressionStatement[24850-24922]"
    }, {
      "left" : "if (propDef.hasField())",
      "right" : "if (propDef.hasField())",
      "info" : "IfStatement[24029-24887]:IfStatement[24942-25800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24053-24227]:Block[24966-25140]"
    }, {
      "left" : "JavaType propertyType = propDef.getField().getType();",
      "right" : "JavaType propertyType = propDef.getField().getType();",
      "info" : "VariableDeclarationStatement[24071-24124]:VariableDeclarationStatement[24984-25037]"
    }, {
      "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
      "info" : "ExpressionStatement[24141-24213]:ExpressionStatement[25054-25126]"
    }, {
      "left" : "if (useGettersAsSetters && propDef.hasGetter())",
      "right" : "if (useGettersAsSetters && propDef.hasGetter())",
      "info" : "IfStatement[24233-24887]:IfStatement[25146-25800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24281-24887]:Block[25194-25800]"
    }, {
      "left" : "AnnotatedMethod getter = propDef.getGetter();",
      "right" : "AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[24449-24494]:VariableDeclarationStatement[25362-25407]"
    }, {
      "left" : "Class<?> rawPropertyType = getter.getRawType();",
      "right" : "Class<?> rawPropertyType = getter.getRawType();",
      "info" : "VariableDeclarationStatement[24582-24629]:VariableDeclarationStatement[25495-25542]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "right" : "if (Collection.class.isAssignableFrom(rawPropertyType)\n                        || Map.class.isAssignableFrom(rawPropertyType))",
      "info" : "IfStatement[24646-24873]:IfStatement[25559-25786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24773-24873]:Block[25686-25786]"
    }, {
      "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
      "info" : "ExpressionStatement[24795-24855]:ExpressionStatement[25708-25768]"
    }, {
      "left" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
      "right" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
      "info" : "IfStatement[25048-26655]:IfStatement[25961-27568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25106-26655]:Block[26019-27568]"
    }, {
      "left" : "final String name = propDef.getName();",
      "right" : "final String name = propDef.getName();",
      "info" : "VariableDeclarationStatement[25489-25527]:VariableDeclarationStatement[26402-26440]"
    }, {
      "left" : "CreatorProperty cprop = null;",
      "right" : "CreatorProperty cprop = null;",
      "info" : "VariableDeclarationStatement[25544-25573]:VariableDeclarationStatement[26457-26486]"
    }, {
      "left" : "if (creatorProps != null)",
      "right" : "if (creatorProps != null)",
      "info" : "IfStatement[25590-25935]:IfStatement[26503-26848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25616-25935]:Block[26529-26848]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[25638-25917]:EnhancedForStatement[26551-26830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25683-25917]:Block[26596-26830]"
    }, {
      "left" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "right" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
      "info" : "IfStatement[25709-25895]:IfStatement[26622-26808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25775-25895]:Block[26688-26808]"
    }, {
      "left" : "cprop = (CreatorProperty) cp;",
      "right" : "cprop = (CreatorProperty) cp;",
      "info" : "ExpressionStatement[25805-25834]:ExpressionStatement[26718-26747]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[25863-25869]:BreakStatement[26776-26782]"
    }, {
      "left" : "if (cprop == null)",
      "right" : "if (cprop == null)",
      "info" : "IfStatement[25952-26429]:IfStatement[26865-27342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25971-26429]:Block[26884-27342]"
    }, {
      "left" : "List<String> n = new ArrayList<>();",
      "right" : "List<String> n = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[25993-26028]:VariableDeclarationStatement[26906-26941]"
    }, {
      "left" : "for (SettableBeanProperty cp : creatorProps)",
      "right" : "for (SettableBeanProperty cp : creatorProps)",
      "info" : "EnhancedForStatement[26049-26162]:EnhancedForStatement[26962-27075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26094-26162]:Block[27007-27075]"
    }, {
      "left" : "n.add(cp.getName());",
      "right" : "n.add(cp.getName());",
      "info" : "ExpressionStatement[26120-26140]:ExpressionStatement[27033-27053]"
    }, {
      "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
      "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
      "info" : "ExpressionStatement[26183-26381]:ExpressionStatement[27096-27294]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[26402-26411]:ContinueStatement[27315-27324]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[26446-26534]:IfStatement[27359-27447]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26464-26534]:Block[27377-27447]"
    }, {
      "left" : "cprop.setFallbackSetter(prop);",
      "right" : "cprop.setFallbackSetter(prop);",
      "info" : "ExpressionStatement[26486-26516]:ExpressionStatement[27399-27429]"
    }, {
      "left" : "prop = cprop;",
      "right" : "prop = cprop;",
      "info" : "ExpressionStatement[26551-26564]:ExpressionStatement[27464-27477]"
    }, {
      "left" : "builder.addCreatorProperty(cprop);",
      "right" : "builder.addCreatorProperty(cprop);",
      "info" : "ExpressionStatement[26581-26615]:ExpressionStatement[27494-27528]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[26632-26641]:ContinueStatement[27545-27554]"
    }, {
      "left" : "if (prop != null)",
      "right" : "if (prop != null)",
      "info" : "IfStatement[26669-27220]:IfStatement[27582-28133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26687-27220]:Block[27600-28133]"
    }, {
      "left" : "Class<?>[] views = propDef.findViews();",
      "right" : "Class<?>[] views = propDef.findViews();",
      "info" : "VariableDeclarationStatement[26705-26744]:VariableDeclarationStatement[27618-27657]"
    }, {
      "left" : "if (views == null)",
      "right" : "if (views == null)",
      "info" : "IfStatement[26761-27047]:IfStatement[27674-27960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26780-27047]:Block[27693-27960]"
    }, {
      "left" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "right" : "if (!ctxt.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "info" : "IfStatement[26905-27029]:IfStatement[27818-27942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26964-27029]:Block[27877-27942]"
    }, {
      "left" : "views = NO_VIEWS;",
      "right" : "views = NO_VIEWS;",
      "info" : "ExpressionStatement[26990-27007]:ExpressionStatement[27903-27920]"
    }, {
      "left" : "prop.setViews(views);",
      "right" : "prop.setViews(views);",
      "info" : "ExpressionStatement[27142-27163]:ExpressionStatement[28055-28076]"
    }, {
      "left" : "builder.addProperty(prop);",
      "right" : "builder.addProperty(prop);",
      "info" : "ExpressionStatement[27180-27206]:ExpressionStatement[28093-28119]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[27469-27478]:Modifier[28382-28391]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[27479-27507]:ParameterizedType[28392-28420]"
    }, {
      "left" : "filterBeanProps",
      "right" : "filterBeanProps",
      "info" : "SimpleName[27508-27523]:SimpleName[28421-28436]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[27524-27551]:SingleVariableDeclaration[28437-28464]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[27565-27589]:SingleVariableDeclaration[28478-28502]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[27591-27622]:SingleVariableDeclaration[28504-28535]"
    }, {
      "left" : "List<BeanPropertyDefinition> propDefsIn",
      "right" : "List<BeanPropertyDefinition> propDefsIn",
      "info" : "SingleVariableDeclaration[27636-27675]:SingleVariableDeclaration[28549-28588]"
    }, {
      "left" : "Set<String> ignored",
      "right" : "Set<String> ignored",
      "info" : "SingleVariableDeclaration[27689-27708]:SingleVariableDeclaration[28602-28621]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[27725-27745]:SimpleType[28638-28658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27750-29205]:Block[28663-30118]"
    }, {
      "left" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "right" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
      "info" : "VariableDeclarationStatement[27760-27890]:VariableDeclarationStatement[28673-28803]"
    }, {
      "left" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "right" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
      "info" : "VariableDeclarationStatement[27899-27972]:VariableDeclarationStatement[28812-28885]"
    }, {
      "left" : "for (BeanPropertyDefinition property : propDefsIn)",
      "right" : "for (BeanPropertyDefinition property : propDefsIn)",
      "info" : "EnhancedForStatement[28059-29176]:EnhancedForStatement[28972-30089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28110-29176]:Block[29023-30089]"
    }, {
      "left" : "String name = property.getName();",
      "right" : "String name = property.getName();",
      "info" : "VariableDeclarationStatement[28124-28157]:VariableDeclarationStatement[29037-29070]"
    }, {
      "left" : "if (ignored.contains(name))",
      "right" : "if (ignored.contains(name))",
      "info" : "IfStatement[28170-28310]:IfStatement[29083-29223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28198-28310]:Block[29111-29223]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[28287-28296]:ContinueStatement[29200-29209]"
    }, {
      "left" : "if (!property.hasConstructorParameter())",
      "right" : "if (!property.hasConstructorParameter())",
      "info" : "IfStatement[28323-29132]:IfStatement[29236-30045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28364-29132]:Block[29277-30045]"
    }, {
      "left" : "Class<?> rawPropertyType = null;",
      "right" : "Class<?> rawPropertyType = null;",
      "info" : "VariableDeclarationStatement[28415-28447]:VariableDeclarationStatement[29328-29360]"
    }, {
      "left" : "if (property.hasSetter())",
      "right" : "if (property.hasSetter())",
      "info" : "IfStatement[28464-28714]:IfStatement[29377-29627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28490-28592]:Block[29403-29505]"
    }, {
      "left" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "right" : "rawPropertyType = property.getSetter().getRawParameterType(0);",
      "info" : "ExpressionStatement[28512-28574]:ExpressionStatement[29425-29487]"
    }, {
      "left" : "if (property.hasField())",
      "right" : "if (property.hasField())",
      "info" : "IfStatement[28598-28714]:IfStatement[29511-29627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28623-28714]:Block[29536-29627]"
    }, {
      "left" : "rawPropertyType = property.getField().getRawType();",
      "right" : "rawPropertyType = property.getField().getRawType();",
      "info" : "ExpressionStatement[28645-28696]:ExpressionStatement[29558-29609]"
    }, {
      "left" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes))",
      "right" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), beanDesc, rawPropertyType, ignoredTypes))",
      "info" : "IfStatement[28796-29118]:IfStatement[29709-30031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28929-29118]:Block[29842-30031]"
    }, {
      "left" : "builder.addIgnorable(name);",
      "right" : "builder.addIgnorable(name);",
      "info" : "ExpressionStatement[29043-29070]:ExpressionStatement[29956-29983]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[29091-29100]:ContinueStatement[30004-30013]"
    }, {
      "left" : "result.add(property);",
      "right" : "result.add(property);",
      "info" : "ExpressionStatement[29145-29166]:ExpressionStatement[30058-30079]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[29185-29199]:ReturnStatement[30098-30112]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29384-29393]:Modifier[30297-30306]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29394-29398]:PrimitiveType[30307-30311]"
    }, {
      "left" : "addReferenceProperties",
      "right" : "addReferenceProperties",
      "info" : "SimpleName[29399-29421]:SimpleName[30312-30334]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[29422-29449]:SingleVariableDeclaration[30335-30362]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[29463-29487]:SingleVariableDeclaration[30376-30400]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[29489-29520]:SingleVariableDeclaration[30402-30433]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[29537-29557]:SimpleType[30450-30470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29562-31020]:Block[30475-31933]"
    }, {
      "left" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "right" : "Map<String,AnnotatedMember> refs = beanDesc.findBackReferenceProperties();",
      "info" : "VariableDeclarationStatement[29653-29727]:VariableDeclarationStatement[30566-30640]"
    }, {
      "left" : "if (refs != null)",
      "right" : "if (refs != null)",
      "info" : "IfStatement[29736-31014]:IfStatement[30649-31927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29754-31014]:Block[30667-31927]"
    }, {
      "left" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "right" : "for (Map.Entry<String, AnnotatedMember> en : refs.entrySet())",
      "info" : "EnhancedForStatement[29768-31004]:EnhancedForStatement[30681-31917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29830-31004]:Block[30743-31917]"
    }, {
      "left" : "String name = en.getKey();",
      "right" : "String name = en.getKey();",
      "info" : "VariableDeclarationStatement[29848-29874]:VariableDeclarationStatement[30761-30787]"
    }, {
      "left" : "AnnotatedMember m = en.getValue();",
      "right" : "AnnotatedMember m = en.getValue();",
      "info" : "VariableDeclarationStatement[29891-29925]:VariableDeclarationStatement[30804-30838]"
    }, {
      "left" : "JavaType type;",
      "right" : "JavaType type;",
      "info" : "VariableDeclarationStatement[29942-29956]:VariableDeclarationStatement[30855-30869]"
    }, {
      "left" : "if (m instanceof AnnotatedMethod)",
      "right" : "if (m instanceof AnnotatedMethod)",
      "info" : "IfStatement[29973-30681]:IfStatement[30886-31594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30007-30096]:Block[30920-31009]"
    }, {
      "left" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "right" : "type = ((AnnotatedMethod) m).getParameterType(0);",
      "info" : "ExpressionStatement[30029-30078]:ExpressionStatement[30942-30991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30102-30681]:Block[31015-31594]"
    }, {
      "left" : "type = m.getType();",
      "right" : "type = m.getType();",
      "info" : "ExpressionStatement[30124-30143]:ExpressionStatement[31037-31056]"
    }, {
      "left" : "if (m instanceof AnnotatedParameter)",
      "right" : "if (m instanceof AnnotatedParameter)",
      "info" : "IfStatement[30360-30663]:IfStatement[31273-31576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30397-30663]:Block[31310-31576]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Can not bind back references as Creator parameters: type %s (reference '%s', parameter index #%d)\",\nbeanDesc.getBeanClass().getName(), name, ((AnnotatedParameter) m).getIndex());",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Can not bind back references as Creator parameters: type %s (reference '%s', parameter index #%d)\",\nbeanDesc.getBeanClass().getName(), name, ((AnnotatedParameter) m).getIndex());",
      "info" : "ExpressionStatement[30423-30641]:ExpressionStatement[31336-31554]"
    }, {
      "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                        ctxt.getConfig(), m, PropertyName.construct(name));",
      "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(\n                        ctxt.getConfig(), m, PropertyName.construct(name));",
      "info" : "VariableDeclarationStatement[30698-30852]:VariableDeclarationStatement[31611-31765]"
    }, {
      "left" : "builder.addBackReferenceProperty(name, constructSettableProperty(ctxt,\n                        beanDesc, propDef, type));",
      "right" : "builder.addBackReferenceProperty(name, constructSettableProperty(ctxt,\n                        beanDesc, propDef, type));",
      "info" : "ExpressionStatement[30869-30990]:ExpressionStatement[31782-31903]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31236-31245]:Modifier[32149-32158]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31246-31250]:PrimitiveType[32159-32163]"
    }, {
      "left" : "addInjectables",
      "right" : "addInjectables",
      "info" : "SimpleName[31251-31265]:SimpleName[32164-32178]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[31266-31293]:SingleVariableDeclaration[32179-32206]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[31307-31331]:SingleVariableDeclaration[32220-32244]"
    }, {
      "left" : "BeanDeserializerBuilder builder",
      "right" : "BeanDeserializerBuilder builder",
      "info" : "SingleVariableDeclaration[31333-31364]:SingleVariableDeclaration[32246-32277]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[31381-31401]:SimpleType[32294-32314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31406-31855]:Block[32319-32768]"
    }, {
      "left" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "right" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
      "info" : "VariableDeclarationStatement[31416-31478]:VariableDeclarationStatement[32329-32391]"
    }, {
      "left" : "if (raw != null)",
      "right" : "if (raw != null)",
      "info" : "IfStatement[31487-31849]:IfStatement[32400-32762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31504-31849]:Block[32417-32762]"
    }, {
      "left" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "right" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
      "info" : "EnhancedForStatement[31518-31839]:EnhancedForStatement[32431-32752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31582-31839]:Block[32495-32752]"
    }, {
      "left" : "AnnotatedMember m = entry.getValue();",
      "right" : "AnnotatedMember m = entry.getValue();",
      "info" : "VariableDeclarationStatement[31600-31637]:VariableDeclarationStatement[32513-32550]"
    }, {
      "left" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "right" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
      "info" : "ExpressionStatement[31654-31825]:ExpressionStatement[32567-32738]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[32230-32260]:SingleMemberAnnotation[33143-33173]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32265-32274]:Modifier[33178-33187]"
    }, {
      "left" : "SettableAnyProperty",
      "right" : "SettableAnyProperty",
      "info" : "SimpleType[32275-32294]:SimpleType[33188-33207]"
    }, {
      "left" : "constructAnySetter",
      "right" : "constructAnySetter",
      "info" : "SimpleName[32295-32313]:SimpleName[33208-33226]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[32314-32341]:SingleVariableDeclaration[33227-33254]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[32355-32379]:SingleVariableDeclaration[33268-33292]"
    }, {
      "left" : "AnnotatedMember mutator",
      "right" : "AnnotatedMember mutator",
      "info" : "SingleVariableDeclaration[32381-32404]:SingleVariableDeclaration[33294-33317]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[32421-32441]:SimpleType[33334-33354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32446-33990]:Block[33359-34903]"
    }, {
      "left" : "JavaType type = null;",
      "right" : "JavaType type = null;",
      "info" : "VariableDeclarationStatement[32539-32560]:VariableDeclarationStatement[33452-33473]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[32569-32954]:IfStatement[33482-33867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32609-32756]:Block[33522-33669]"
    }, {
      "left" : "type = ((AnnotatedMethod) mutator).getParameterType(1);",
      "right" : "type = ((AnnotatedMethod) mutator).getParameterType(1);",
      "info" : "ExpressionStatement[32691-32746]:ExpressionStatement[33604-33659]"
    }, {
      "left" : "if (mutator instanceof AnnotatedField)",
      "right" : "if (mutator instanceof AnnotatedField)",
      "info" : "IfStatement[32762-32954]:IfStatement[33675-33867]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32801-32954]:Block[33714-33867]"
    }, {
      "left" : "type = ((AnnotatedField) mutator).getType().getContentType();",
      "right" : "type = ((AnnotatedField) mutator).getType().getContentType();",
      "info" : "ExpressionStatement[32883-32944]:ExpressionStatement[33796-33857]"
    }, {
      "left" : "type = resolveMemberAndTypeAnnotations(ctxt, mutator, type);",
      "right" : "type = resolveMemberAndTypeAnnotations(ctxt, mutator, type);",
      "info" : "ExpressionStatement[33086-33146]:ExpressionStatement[33999-34059]"
    }, {
      "left" : "BeanProperty.Std prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                type, null, beanDesc.getClassAnnotations(), mutator,\n                PropertyMetadata.STD_OPTIONAL);",
      "right" : "BeanProperty.Std prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                type, null, beanDesc.getClassAnnotations(), mutator,\n                PropertyMetadata.STD_OPTIONAL);",
      "info" : "VariableDeclarationStatement[33155-33359]:VariableDeclarationStatement[34068-34272]"
    }, {
      "left" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<Object> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[33438-33517]:VariableDeclarationStatement[34351-34430]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[33526-33600]:IfStatement[34439-34513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33545-33600]:Block[34458-34513]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[33559-33590]:ExpressionStatement[34472-34503]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[33609-33845]:IfStatement[34522-34758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33628-33845]:Block[34541-34758]"
    }, {
      "left" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[33745-33835]:ExpressionStatement[34658-34748]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[33854-33905]:VariableDeclarationStatement[34767-34818]"
    }, {
      "left" : "return new SettableAnyProperty(prop, mutator, type, deser, typeDeser);",
      "right" : "return new SettableAnyProperty(prop, mutator, type, deser, typeDeser);",
      "info" : "ReturnStatement[33914-33984]:ReturnStatement[34827-34897]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34257-34266]:Modifier[35170-35179]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[34267-34287]:SimpleType[35180-35200]"
    }, {
      "left" : "constructSettableProperty",
      "right" : "constructSettableProperty",
      "info" : "SimpleName[34288-34313]:SimpleName[35201-35226]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[34314-34341]:SingleVariableDeclaration[35227-35254]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[34355-34379]:SingleVariableDeclaration[35268-35292]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[34381-34411]:SingleVariableDeclaration[35294-35324]"
    }, {
      "left" : "JavaType propType0",
      "right" : "JavaType propType0",
      "info" : "SingleVariableDeclaration[34425-34443]:SingleVariableDeclaration[35338-35356]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[34460-34480]:SimpleType[35373-35393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34485-36478]:Block[35398-37391]"
    }, {
      "left" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "right" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
      "info" : "VariableDeclarationStatement[34557-34618]:VariableDeclarationStatement[35470-35531]"
    }, {
      "left" : "if (mutator == null)",
      "right" : "if (mutator == null)",
      "info" : "IfStatement[34836-34973]:IfStatement[35749-35886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34857-34973]:Block[35770-35886]"
    }, {
      "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
      "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
      "info" : "ExpressionStatement[34871-34963]:ExpressionStatement[35784-35876]"
    }, {
      "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
      "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
      "info" : "VariableDeclarationStatement[34982-35056]:VariableDeclarationStatement[35895-35969]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[35146-35197]:VariableDeclarationStatement[36059-36110]"
    }, {
      "left" : "SettableBeanProperty prop;",
      "right" : "SettableBeanProperty prop;",
      "info" : "VariableDeclarationStatement[35206-35232]:VariableDeclarationStatement[36119-36145]"
    }, {
      "left" : "if (mutator instanceof AnnotatedMethod)",
      "right" : "if (mutator instanceof AnnotatedMethod)",
      "info" : "IfStatement[35241-35691]:IfStatement[36154-36604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35281-35436]:Block[36194-36349]"
    }, {
      "left" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "right" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
      "info" : "ExpressionStatement[35295-35426]:ExpressionStatement[36208-36339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35442-35691]:Block[36355-36604]"
    }, {
      "left" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "right" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
      "info" : "ExpressionStatement[35552-35681]:ExpressionStatement[36465-36594]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
      "info" : "VariableDeclarationStatement[35700-35774]:VariableDeclarationStatement[36613-36687]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[35783-35857]:IfStatement[36696-36770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35802-35857]:Block[36715-36770]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[35816-35847]:ExpressionStatement[36729-36760]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[35866-36026]:IfStatement[36779-36939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35885-36026]:Block[36798-36939]"
    }, {
      "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[35899-35962]:ExpressionStatement[36812-36875]"
    }, {
      "left" : "prop = prop.withValueDeserializer(deser);",
      "right" : "prop = prop.withValueDeserializer(deser);",
      "info" : "ExpressionStatement[35975-36016]:ExpressionStatement[36888-36929]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
      "info" : "VariableDeclarationStatement[36097-36172]:VariableDeclarationStatement[37010-37085]"
    }, {
      "left" : "if (ref != null && ref.isManagedReference())",
      "right" : "if (ref != null && ref.isManagedReference())",
      "info" : "IfStatement[36181-36294]:IfStatement[37094-37207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36226-36294]:Block[37139-37207]"
    }, {
      "left" : "prop.setManagedReferenceName(ref.getName());",
      "right" : "prop.setManagedReferenceName(ref.getName());",
      "info" : "ExpressionStatement[36240-36284]:ExpressionStatement[37153-37197]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
      "info" : "VariableDeclarationStatement[36303-36358]:VariableDeclarationStatement[37216-37271]"
    }, {
      "left" : "if (objectIdInfo != null)",
      "right" : "if (objectIdInfo != null)",
      "info" : "IfStatement[36367-36451]:IfStatement[37280-37364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36392-36451]:Block[37305-37364]"
    }, {
      "left" : "prop.setObjectIdInfo(objectIdInfo);",
      "right" : "prop.setObjectIdInfo(objectIdInfo);",
      "info" : "ExpressionStatement[36406-36441]:ExpressionStatement[37319-37354]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[36460-36472]:ReturnStatement[37373-37385]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[36603-36612]:Modifier[37516-37525]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[36613-36633]:SimpleType[37526-37546]"
    }, {
      "left" : "constructSetterlessProperty",
      "right" : "constructSetterlessProperty",
      "info" : "SimpleName[36634-36661]:SimpleName[37547-37574]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[36662-36689]:SingleVariableDeclaration[37575-37602]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[36703-36727]:SingleVariableDeclaration[37616-37640]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[36729-36759]:SingleVariableDeclaration[37642-37672]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[36776-36796]:SimpleType[37689-37709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36801-37514]:Block[37714-38427]"
    }, {
      "left" : "final AnnotatedMethod getter = propDef.getGetter();",
      "right" : "final AnnotatedMethod getter = propDef.getGetter();",
      "info" : "VariableDeclarationStatement[36811-36862]:VariableDeclarationStatement[37724-37775]"
    }, {
      "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
      "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
      "info" : "VariableDeclarationStatement[36871-36951]:VariableDeclarationStatement[37784-37864]"
    }, {
      "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[36960-37011]:VariableDeclarationStatement[37873-37924]"
    }, {
      "left" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "right" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
      "info" : "VariableDeclarationStatement[37020-37153]:VariableDeclarationStatement[37933-38066]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
      "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
      "info" : "VariableDeclarationStatement[37162-37235]:VariableDeclarationStatement[38075-38148]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[37244-37318]:IfStatement[38157-38231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37263-37318]:Block[38176-38231]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[37277-37308]:ExpressionStatement[38190-38221]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[37327-37487]:IfStatement[38240-38400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37346-37487]:Block[38259-38400]"
    }, {
      "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[37360-37423]:ExpressionStatement[38273-38336]"
    }, {
      "left" : "prop = prop.withValueDeserializer(deser);",
      "right" : "prop = prop.withValueDeserializer(deser);",
      "info" : "ExpressionStatement[37436-37477]:ExpressionStatement[38349-38390]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[37496-37508]:ReturnStatement[38409-38421]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[38049-38058]:Modifier[38962-38971]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[38059-38066]:PrimitiveType[38972-38979]"
    }, {
      "left" : "isPotentialBeanType",
      "right" : "isPotentialBeanType",
      "info" : "SimpleName[38067-38086]:SimpleName[38980-38999]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[38087-38100]:SingleVariableDeclaration[39000-39013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38106-38893]:Block[39019-39806]"
    }, {
      "left" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "right" : "String typeStr = ClassUtil.canBeABeanType(type);",
      "info" : "VariableDeclarationStatement[38116-38164]:VariableDeclarationStatement[39029-39077]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[38173-38333]:IfStatement[39086-39246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38194-38333]:Block[39107-39246]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[38208-38323]:ThrowStatement[39121-39236]"
    }, {
      "left" : "if (ClassUtil.isProxyType(type))",
      "right" : "if (ClassUtil.isProxyType(type))",
      "info" : "IfStatement[38342-38498]:IfStatement[39255-39411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38375-38498]:Block[39288-39411]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Proxy class \"+type.getName()+\" as a Bean\");",
      "info" : "ThrowStatement[38389-38488]:ThrowStatement[39302-39401]"
    }, {
      "left" : "typeStr = ClassUtil.isLocalType(type, true);",
      "right" : "typeStr = ClassUtil.isLocalType(type, true);",
      "info" : "ExpressionStatement[38653-38697]:ExpressionStatement[39566-39610]"
    }, {
      "left" : "if (typeStr != null)",
      "right" : "if (typeStr != null)",
      "info" : "IfStatement[38706-38866]:IfStatement[39619-39779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38727-38866]:Block[39640-39779]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "right" : "throw new IllegalArgumentException(\"Can not deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
      "info" : "ThrowStatement[38741-38856]:ThrowStatement[39654-39769]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[38875-38887]:ReturnStatement[39788-39800]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[39059-39068]:Modifier[39972-39981]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39069-39076]:PrimitiveType[39982-39989]"
    }, {
      "left" : "isIgnorableType",
      "right" : "isIgnorableType",
      "info" : "SimpleName[39077-39092]:SimpleName[39990-40005]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[39093-39121]:SingleVariableDeclaration[40006-40034]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[39123-39147]:SingleVariableDeclaration[40036-40060]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[39161-39174]:SingleVariableDeclaration[40074-40087]"
    }, {
      "left" : "Map<Class<?>,Boolean> ignoredTypes",
      "right" : "Map<Class<?>,Boolean> ignoredTypes",
      "info" : "SingleVariableDeclaration[39176-39210]:SingleVariableDeclaration[40089-40123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39216-40014]:Block[40129-40927]"
    }, {
      "left" : "Boolean status = ignoredTypes.get(type);",
      "right" : "Boolean status = ignoredTypes.get(type);",
      "info" : "VariableDeclarationStatement[39226-39266]:VariableDeclarationStatement[40139-40179]"
    }, {
      "left" : "if (status != null)",
      "right" : "if (status != null)",
      "info" : "IfStatement[39275-39348]:IfStatement[40188-40261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39295-39348]:Block[40208-40261]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[39309-39338]:ReturnStatement[40222-40251]"
    }, {
      "left" : "ConfigOverride override = config.findConfigOverride(type);",
      "right" : "ConfigOverride override = config.findConfigOverride(type);",
      "info" : "VariableDeclarationStatement[39425-39483]:VariableDeclarationStatement[40338-40396]"
    }, {
      "left" : "if (override != null)",
      "right" : "if (override != null)",
      "info" : "IfStatement[39492-39575]:IfStatement[40405-40488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39514-39575]:Block[40427-40488]"
    }, {
      "left" : "status = override.getIsIgnoredType();",
      "right" : "status = override.getIsIgnoredType();",
      "info" : "ExpressionStatement[39528-39565]:ExpressionStatement[40441-40478]"
    }, {
      "left" : "if (status == null)",
      "right" : "if (status == null)",
      "info" : "IfStatement[39584-39930]:IfStatement[40497-40843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39604-39930]:Block[40517-40843]"
    }, {
      "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "info" : "VariableDeclarationStatement[39618-39681]:VariableDeclarationStatement[40531-40594]"
    }, {
      "left" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "right" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
      "info" : "ExpressionStatement[39694-39775]:ExpressionStatement[40607-40688]"
    }, {
      "left" : "if (status == null)",
      "right" : "if (status == null)",
      "info" : "IfStatement[39845-39920]:IfStatement[40758-40833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39865-39920]:Block[40778-40833]"
    }, {
      "left" : "status = Boolean.FALSE;",
      "right" : "status = Boolean.FALSE;",
      "info" : "ExpressionStatement[39883-39906]:ExpressionStatement[40796-40819]"
    }, {
      "left" : "ignoredTypes.put(type, status);",
      "right" : "ignoredTypes.put(type, status);",
      "info" : "ExpressionStatement[39939-39970]:ExpressionStatement[40852-40883]"
    }, {
      "left" : "return status.booleanValue();",
      "right" : "return status.booleanValue();",
      "info" : "ReturnStatement[39979-40008]:ReturnStatement[40892-40921]"
    } ]
  },
  "interFileMappings" : { }
}