{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "TypeDeclaration[327-25392]:TypeDeclaration[327-25468]"
    }, {
      "left" : "protected Map<TypeVariable, Type> contextualActualTypeParameters = new HashMap<TypeVariable, Type>();",
      "right" : "protected Map<TypeVariable, Type> contextualActualTypeParameters = new HashMap<TypeVariable, Type>();",
      "info" : "FieldDeclaration[2283-2471]:FieldDeclaration[2283-2471]"
    }, {
      "left" : "protected void registerTypeVariablesOn(Type classType)",
      "right" : "protected void registerTypeVariablesOn(Type classType)",
      "info" : "MethodDeclaration[2481-3693]:MethodDeclaration[2481-3693]"
    }, {
      "left" : "protected void registerTypeParametersOn(TypeVariable[] typeParameters)",
      "right" : "protected void registerTypeParametersOn(TypeVariable[] typeParameters)",
      "info" : "MethodDeclaration[3701-3896]:MethodDeclaration[3701-3896]"
    }, {
      "left" : "private void registerTypeVariableIfNotPresent(TypeVariable typeVariable)",
      "right" : "private void registerTypeVariableIfNotPresent(TypeVariable typeVariable)",
      "info" : "MethodDeclaration[3904-4375]:MethodDeclaration[3904-4375]"
    }, {
      "left" : "private BoundedType boundsOf(TypeVariable typeParameter)",
      "right" : "private BoundedType boundsOf(TypeVariable typeParameter)",
      "info" : "MethodDeclaration[4383-4894]:MethodDeclaration[4383-4894]"
    }, {
      "left" : "private BoundedType boundsOf(WildcardType wildCard)",
      "right" : "private BoundedType boundsOf(WildcardType wildCard)",
      "info" : "MethodDeclaration[4902-5858]:MethodDeclaration[4902-5858]"
    }, {
      "left" : "public abstract Class<?> rawType();",
      "right" : "public abstract Class<?> rawType();",
      "info" : "MethodDeclaration[5870-5973]:MethodDeclaration[5870-5973]"
    }, {
      "left" : "public List<Type> extraInterfaces()",
      "right" : "public List<Type> extraInterfaces()",
      "info" : "MethodDeclaration[5985-6181]:MethodDeclaration[5985-6181]"
    }, {
      "left" : "public Class<?>[] rawExtraInterfaces()",
      "right" : "public Class<?>[] rawExtraInterfaces()",
      "info" : "MethodDeclaration[6189-6396]:MethodDeclaration[6189-6396]"
    }, {
      "left" : "public boolean hasRawExtraInterfaces()",
      "right" : "public boolean hasRawExtraInterfaces()",
      "info" : "MethodDeclaration[6404-6645]:MethodDeclaration[6404-6645]"
    }, {
      "left" : "public Map<TypeVariable, Type> actualTypeArguments()",
      "right" : "public Map<TypeVariable, Type> actualTypeArguments()",
      "info" : "MethodDeclaration[6657-7522]:MethodDeclaration[6657-7522]"
    }, {
      "left" : "protected Type getActualTypeArgumentFor(TypeVariable typeParameter)",
      "right" : "protected Type getActualTypeArgumentFor(TypeVariable typeParameter)",
      "info" : "MethodDeclaration[7530-7885]:MethodDeclaration[7530-7885]"
    }, {
      "left" : "public GenericMetadataSupport resolveGenericReturnType(Method method)",
      "right" : "public GenericMetadataSupport resolveGenericReturnType(Method method)",
      "info" : "MethodDeclaration[7897-9227]:MethodDeclaration[7897-9227]"
    }, {
      "left" : "public static GenericMetadataSupport inferFrom(Type type)",
      "right" : "public static GenericMetadataSupport inferFrom(Type type)",
      "info" : "MethodDeclaration[9235-10339]:MethodDeclaration[9235-10339]"
    }, {
      "left" : "FromClassGenericMetadataSupport",
      "right" : "FromClassGenericMetadataSupport",
      "info" : "TypeDeclaration[10703-12430]:TypeDeclaration[10703-12430]"
    }, {
      "left" : "private final Class<?> clazz;",
      "right" : "private final Class<?> clazz;",
      "info" : "FieldDeclaration[11054-11083]:FieldDeclaration[11054-11083]"
    }, {
      "left" : "public FromClassGenericMetadataSupport(Class<?> clazz)",
      "right" : "public FromClassGenericMetadataSupport(Class<?> clazz)",
      "info" : "MethodDeclaration[11095-11532]:MethodDeclaration[11095-11532]"
    }, {
      "left" : "private Class superClassOf(Class currentExploredClass)",
      "right" : "private Class superClassOf(Class currentExploredClass)",
      "info" : "MethodDeclaration[11544-11950]:MethodDeclaration[11544-11950]"
    }, {
      "left" : "private void readActualTypeParametersOnDeclaringClass(Class<?> clazz)",
      "right" : "private void readActualTypeParametersOnDeclaringClass(Class<?> clazz)",
      "info" : "MethodDeclaration[11962-12327]:MethodDeclaration[11962-12327]"
    }, {
      "left" : "public Class<?> rawType()",
      "right" : "public Class<?> rawType()",
      "info" : "MethodDeclaration[12339-12423]:MethodDeclaration[12339-12423]"
    }, {
      "left" : "FromParameterizedTypeGenericMetadataSupport",
      "right" : "FromParameterizedTypeGenericMetadataSupport",
      "info" : "TypeDeclaration[12440-13824]:TypeDeclaration[12440-13824]"
    }, {
      "left" : "private final ParameterizedType parameterizedType;",
      "right" : "private final ParameterizedType parameterizedType;",
      "info" : "FieldDeclaration[13234-13284]:FieldDeclaration[13234-13284]"
    }, {
      "left" : "public FromParameterizedTypeGenericMetadataSupport(ParameterizedType parameterizedType)",
      "right" : "public FromParameterizedTypeGenericMetadataSupport(ParameterizedType parameterizedType)",
      "info" : "MethodDeclaration[13296-13494]:MethodDeclaration[13296-13494]"
    }, {
      "left" : "private void readActualTypeParameters()",
      "right" : "private void readActualTypeParameters()",
      "info" : "MethodDeclaration[13506-13685]:MethodDeclaration[13506-13685]"
    }, {
      "left" : "public Class<?> rawType()",
      "right" : "public Class<?> rawType()",
      "info" : "MethodDeclaration[13697-13817]:MethodDeclaration[13697-13817]"
    }, {
      "left" : "ParameterizedReturnType",
      "right" : "ParameterizedReturnType",
      "info" : "TypeDeclaration[13834-14949]:TypeDeclaration[13834-14949]"
    }, {
      "left" : "private final ParameterizedType parameterizedType;",
      "right" : "private final ParameterizedType parameterizedType;",
      "info" : "FieldDeclaration[14054-14104]:FieldDeclaration[14054-14104]"
    }, {
      "left" : "private final TypeVariable[] typeParameters;",
      "right" : "private final TypeVariable[] typeParameters;",
      "info" : "FieldDeclaration[14114-14158]:FieldDeclaration[14114-14158]"
    }, {
      "left" : "public ParameterizedReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, ParameterizedType parameterizedType)",
      "right" : "public ParameterizedReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, ParameterizedType parameterizedType)",
      "info" : "MethodDeclaration[14170-14581]:MethodDeclaration[14170-14581]"
    }, {
      "left" : "private void readTypeParameters()",
      "right" : "private void readTypeParameters()",
      "info" : "MethodDeclaration[14593-14694]:MethodDeclaration[14593-14694]"
    }, {
      "left" : "private void readTypeVariables()",
      "right" : "private void readTypeVariables()",
      "info" : "MethodDeclaration[14706-14808]:MethodDeclaration[14706-14808]"
    }, {
      "left" : "public Class<?> rawType()",
      "right" : "public Class<?> rawType()",
      "info" : "MethodDeclaration[14820-14940]:MethodDeclaration[14820-14940]"
    }, {
      "left" : "TypeVariableReturnType",
      "right" : "TypeVariableReturnType",
      "info" : "TypeDeclaration[14959-19702]:TypeDeclaration[14959-19778]"
    }, {
      "left" : "private final TypeVariable typeVariable;",
      "right" : "private final TypeVariable typeVariable;",
      "info" : "FieldDeclaration[15165-15205]:FieldDeclaration[15165-15205]"
    }, {
      "left" : "private final TypeVariable[] typeParameters;",
      "right" : "private final TypeVariable[] typeParameters;",
      "info" : "FieldDeclaration[15215-15259]:FieldDeclaration[15215-15259]"
    }, {
      "left" : "private Class<?> rawType;",
      "right" : "private Class<?> rawType;",
      "info" : "FieldDeclaration[15269-15294]:FieldDeclaration[15269-15294]"
    }, {
      "left" : "public TypeVariableReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, TypeVariable typeVariable)",
      "right" : "public TypeVariableReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, TypeVariable typeVariable)",
      "info" : "MethodDeclaration[15310-15700]:MethodDeclaration[15310-15700]"
    }, {
      "left" : "private void readTypeParameters()",
      "right" : "private void readTypeParameters()",
      "info" : "MethodDeclaration[15712-15813]:MethodDeclaration[15712-15813]"
    }, {
      "left" : "private void readTypeVariables()",
      "right" : "private void readTypeVariables()",
      "info" : "MethodDeclaration[15825-16069]:MethodDeclaration[15825-16145]"
    }, {
      "left" : "public Class<?> rawType()",
      "right" : "public Class<?> rawType()",
      "info" : "MethodDeclaration[16081-16277]:MethodDeclaration[16157-16353]"
    }, {
      "left" : "private Class<?> extractRawTypeOf(Type type)",
      "right" : "private Class<?> extractRawTypeOf(Type type)",
      "info" : "MethodDeclaration[16289-17208]:MethodDeclaration[16365-17284]"
    }, {
      "left" : "public List<Type> extraInterfaces()",
      "right" : "public List<Type> extraInterfaces()",
      "info" : "MethodDeclaration[17220-17849]:MethodDeclaration[17296-17925]"
    }, {
      "left" : "public Class<?>[] rawExtraInterfaces()",
      "right" : "public Class<?>[] rawExtraInterfaces()",
      "info" : "MethodDeclaration[17861-18722]:MethodDeclaration[17937-18798]"
    }, {
      "left" : "private Type extractActualBoundedTypeOf(Type type)",
      "right" : "private Type extractActualBoundedTypeOf(Type type)",
      "info" : "MethodDeclaration[18734-19695]:MethodDeclaration[18810-19771]"
    }, {
      "left" : "NotGenericReturnTypeSupport",
      "right" : "NotGenericReturnTypeSupport",
      "info" : "TypeDeclaration[19714-20203]:TypeDeclaration[19790-20279]"
    }, {
      "left" : "private final Class<?> returnType;",
      "right" : "private final Class<?> returnType;",
      "info" : "FieldDeclaration[19922-19956]:FieldDeclaration[19998-20032]"
    }, {
      "left" : "public NotGenericReturnTypeSupport(Type genericReturnType)",
      "right" : "public NotGenericReturnTypeSupport(Type genericReturnType)",
      "info" : "MethodDeclaration[19968-20095]:MethodDeclaration[20044-20171]"
    }, {
      "left" : "public Class<?> rawType()",
      "right" : "public Class<?> rawType()",
      "info" : "MethodDeclaration[20107-20196]:MethodDeclaration[20183-20272]"
    }, {
      "left" : "BoundedType",
      "right" : "BoundedType",
      "info" : "TypeDeclaration[20215-20810]:TypeDeclaration[20291-20886]"
    }, {
      "left" : "Type firstBound();",
      "right" : "Type firstBound();",
      "info" : "MethodDeclaration[20748-20766]:MethodDeclaration[20824-20842]"
    }, {
      "left" : "Type[] interfaceBounds();",
      "right" : "Type[] interfaceBounds();",
      "info" : "MethodDeclaration[20778-20803]:MethodDeclaration[20854-20879]"
    }, {
      "left" : "TypeVarBoundedType",
      "right" : "TypeVarBoundedType",
      "info" : "TypeDeclaration[20818-23564]:TypeDeclaration[20894-23640]"
    }, {
      "left" : "private final TypeVariable typeVariable;",
      "right" : "private final TypeVariable typeVariable;",
      "info" : "FieldDeclaration[21863-21903]:FieldDeclaration[21939-21979]"
    }, {
      "left" : "public TypeVarBoundedType(TypeVariable typeVariable)",
      "right" : "public TypeVarBoundedType(TypeVariable typeVariable)",
      "info" : "MethodDeclaration[21917-22029]:MethodDeclaration[21993-22105]"
    }, {
      "left" : "public Type firstBound()",
      "right" : "public Type firstBound()",
      "info" : "MethodDeclaration[22041-22273]:MethodDeclaration[22117-22349]"
    }, {
      "left" : "public Type[] interfaceBounds()",
      "right" : "public Type[] interfaceBounds()",
      "info" : "MethodDeclaration[22285-22893]:MethodDeclaration[22361-22969]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[22905-23165]:MethodDeclaration[22981-23241]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[23177-23275]:MethodDeclaration[23253-23351]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[23287-23464]:MethodDeclaration[23363-23540]"
    }, {
      "left" : "public TypeVariable typeVariable()",
      "right" : "public TypeVariable typeVariable()",
      "info" : "MethodDeclaration[23476-23557]:MethodDeclaration[23552-23633]"
    }, {
      "left" : "WildCardBoundedType",
      "right" : "WildCardBoundedType",
      "info" : "TypeDeclaration[23572-25387]:TypeDeclaration[23648-25463]"
    }, {
      "left" : "private final WildcardType wildcard;",
      "right" : "private final WildcardType wildcard;",
      "info" : "FieldDeclaration[24069-24105]:FieldDeclaration[24145-24181]"
    }, {
      "left" : "public WildCardBoundedType(WildcardType wildcard)",
      "right" : "public WildCardBoundedType(WildcardType wildcard)",
      "info" : "MethodDeclaration[24119-24220]:MethodDeclaration[24195-24296]"
    }, {
      "left" : "public Type firstBound()",
      "right" : "public Type firstBound()",
      "info" : "MethodDeclaration[24232-24582]:MethodDeclaration[24308-24658]"
    }, {
      "left" : "public Type[] interfaceBounds()",
      "right" : "public Type[] interfaceBounds()",
      "info" : "MethodDeclaration[24594-24776]:MethodDeclaration[24670-24852]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[24788-25044]:MethodDeclaration[24864-25120]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[25056-25150]:MethodDeclaration[25132-25226]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[25162-25295]:MethodDeclaration[25238-25371]"
    }, {
      "left" : "public WildcardType wildCard()",
      "right" : "public WildcardType wildCard()",
      "info" : "MethodDeclaration[25307-25380]:MethodDeclaration[25383-25456]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2154-2160]:Modifier[2154-2160]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2161-2169]:Modifier[2161-2169]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2170-2175]:TYPE_DECLARATION_KIND[2170-2175]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleName[2176-2198]:SimpleName[2176-2198]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2481-2490]:Modifier[2481-2490]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2491-2495]:PrimitiveType[2491-2495]"
    }, {
      "left" : "registerTypeVariablesOn",
      "right" : "registerTypeVariablesOn",
      "info" : "SimpleName[2496-2519]:SimpleName[2496-2519]"
    }, {
      "left" : "Type classType",
      "right" : "Type classType",
      "info" : "SingleVariableDeclaration[2520-2534]:SingleVariableDeclaration[2520-2534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2536-3693]:Block[2536-3693]"
    }, {
      "left" : "if (!(classType instanceof ParameterizedType))",
      "right" : "if (!(classType instanceof ParameterizedType))",
      "info" : "IfStatement[2547-2627]:IfStatement[2547-2627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2594-2627]:Block[2594-2627]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[2609-2616]:ReturnStatement[2609-2616]"
    }, {
      "left" : "ParameterizedType parameterizedType = (ParameterizedType) classType;",
      "right" : "ParameterizedType parameterizedType = (ParameterizedType) classType;",
      "info" : "VariableDeclarationStatement[2637-2705]:VariableDeclarationStatement[2637-2705]"
    }, {
      "left" : "TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();",
      "right" : "TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();",
      "info" : "VariableDeclarationStatement[2715-2811]:VariableDeclarationStatement[2715-2811]"
    }, {
      "left" : "Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();",
      "right" : "Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();",
      "info" : "VariableDeclarationStatement[2821-2893]:VariableDeclarationStatement[2821-2893]"
    }, {
      "left" : "for (int i = 0; i < actualTypeArguments.length; i++)",
      "right" : "for (int i = 0; i < actualTypeArguments.length; i++)",
      "info" : "ForStatement[2903-3686]:ForStatement[2903-3686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2956-3686]:Block[2956-3686]"
    }, {
      "left" : "TypeVariable typeParameter = typeParameters[i];",
      "right" : "TypeVariable typeParameter = typeParameters[i];",
      "info" : "VariableDeclarationStatement[2971-3018]:VariableDeclarationStatement[2971-3018]"
    }, {
      "left" : "Type actualTypeArgument = actualTypeArguments[i];",
      "right" : "Type actualTypeArgument = actualTypeArguments[i];",
      "info" : "VariableDeclarationStatement[3032-3081]:VariableDeclarationStatement[3032-3081]"
    }, {
      "left" : "if (actualTypeArgument instanceof WildcardType)",
      "right" : "if (actualTypeArgument instanceof WildcardType)",
      "info" : "IfStatement[3097-3425]:IfStatement[3097-3425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3145-3274]:Block[3145-3274]"
    }, {
      "left" : "contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));",
      "right" : "contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));",
      "info" : "ExpressionStatement[3164-3259]:ExpressionStatement[3164-3259]"
    }, {
      "left" : "if (typeParameter != actualTypeArgument)",
      "right" : "if (typeParameter != actualTypeArgument)",
      "info" : "IfStatement[3280-3425]:IfStatement[3280-3425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3321-3425]:Block[3321-3425]"
    }, {
      "left" : "contextualActualTypeParameters.put(typeParameter, actualTypeArgument);",
      "right" : "contextualActualTypeParameters.put(typeParameter, actualTypeArgument);",
      "info" : "ExpressionStatement[3340-3410]:ExpressionStatement[3340-3410]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3701-3710]:Modifier[3701-3710]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3711-3715]:PrimitiveType[3711-3715]"
    }, {
      "left" : "registerTypeParametersOn",
      "right" : "registerTypeParametersOn",
      "info" : "SimpleName[3716-3740]:SimpleName[3716-3740]"
    }, {
      "left" : "TypeVariable[] typeParameters",
      "right" : "TypeVariable[] typeParameters",
      "info" : "SingleVariableDeclaration[3741-3770]:SingleVariableDeclaration[3741-3770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3772-3896]:Block[3772-3896]"
    }, {
      "left" : "for (TypeVariable type : typeParameters)",
      "right" : "for (TypeVariable type : typeParameters)",
      "info" : "EnhancedForStatement[3783-3889]:EnhancedForStatement[3783-3889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3824-3889]:Block[3824-3889]"
    }, {
      "left" : "registerTypeVariableIfNotPresent(type);",
      "right" : "registerTypeVariableIfNotPresent(type);",
      "info" : "ExpressionStatement[3839-3878]:ExpressionStatement[3839-3878]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3904-3911]:Modifier[3904-3911]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3912-3916]:PrimitiveType[3912-3916]"
    }, {
      "left" : "registerTypeVariableIfNotPresent",
      "right" : "registerTypeVariableIfNotPresent",
      "info" : "SimpleName[3917-3949]:SimpleName[3917-3949]"
    }, {
      "left" : "TypeVariable typeVariable",
      "right" : "TypeVariable typeVariable",
      "info" : "SingleVariableDeclaration[3950-3975]:SingleVariableDeclaration[3950-3975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3977-4375]:Block[3977-4375]"
    }, {
      "left" : "if (!contextualActualTypeParameters.containsKey(typeVariable))",
      "right" : "if (!contextualActualTypeParameters.containsKey(typeVariable))",
      "info" : "IfStatement[3988-4368]:IfStatement[3988-4368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4051-4368]:Block[4051-4368]"
    }, {
      "left" : "contextualActualTypeParameters.put(typeVariable, boundsOf(typeVariable));",
      "right" : "contextualActualTypeParameters.put(typeVariable, boundsOf(typeVariable));",
      "info" : "ExpressionStatement[4066-4139]:ExpressionStatement[4066-4139]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4619-4626]:Modifier[4619-4626]"
    }, {
      "left" : "BoundedType",
      "right" : "BoundedType",
      "info" : "SimpleType[4627-4638]:SimpleType[4627-4638]"
    }, {
      "left" : "boundsOf",
      "right" : "boundsOf",
      "info" : "SimpleName[4639-4647]:SimpleName[4639-4647]"
    }, {
      "left" : "TypeVariable typeParameter",
      "right" : "TypeVariable typeParameter",
      "info" : "SingleVariableDeclaration[4648-4674]:SingleVariableDeclaration[4648-4674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4676-4894]:Block[4676-4894]"
    }, {
      "left" : "if (typeParameter.getBounds()[0] instanceof TypeVariable)",
      "right" : "if (typeParameter.getBounds()[0] instanceof TypeVariable)",
      "info" : "IfStatement[4687-4832]:IfStatement[4687-4832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4745-4832]:Block[4745-4832]"
    }, {
      "left" : "return boundsOf((TypeVariable) typeParameter.getBounds()[0]);",
      "right" : "return boundsOf((TypeVariable) typeParameter.getBounds()[0]);",
      "info" : "ReturnStatement[4760-4821]:ReturnStatement[4760-4821]"
    }, {
      "left" : "return new TypeVarBoundedType(typeParameter);",
      "right" : "return new TypeVarBoundedType(typeParameter);",
      "info" : "ReturnStatement[4842-4887]:ReturnStatement[4842-4887]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5124-5131]:Modifier[5124-5131]"
    }, {
      "left" : "BoundedType",
      "right" : "BoundedType",
      "info" : "SimpleType[5132-5143]:SimpleType[5132-5143]"
    }, {
      "left" : "boundsOf",
      "right" : "boundsOf",
      "info" : "SimpleName[5144-5152]:SimpleName[5144-5152]"
    }, {
      "left" : "WildcardType wildCard",
      "right" : "WildcardType wildCard",
      "info" : "SingleVariableDeclaration[5153-5174]:SingleVariableDeclaration[5153-5174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5176-5858]:Block[5176-5858]"
    }, {
      "left" : "WildCardBoundedType wildCardBoundedType = new WildCardBoundedType(wildCard);",
      "right" : "WildCardBoundedType wildCardBoundedType = new WildCardBoundedType(wildCard);",
      "info" : "VariableDeclarationStatement[5573-5649]:VariableDeclarationStatement[5573-5649]"
    }, {
      "left" : "if (wildCardBoundedType.firstBound() instanceof TypeVariable)",
      "right" : "if (wildCardBoundedType.firstBound() instanceof TypeVariable)",
      "info" : "IfStatement[5659-5812]:IfStatement[5659-5812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5721-5812]:Block[5721-5812]"
    }, {
      "left" : "return boundsOf((TypeVariable) wildCardBoundedType.firstBound());",
      "right" : "return boundsOf((TypeVariable) wildCardBoundedType.firstBound());",
      "info" : "ReturnStatement[5736-5801]:ReturnStatement[5736-5801]"
    }, {
      "left" : "return wildCardBoundedType;",
      "right" : "return wildCardBoundedType;",
      "info" : "ReturnStatement[5824-5851]:ReturnStatement[5824-5851]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5938-5944]:Modifier[5938-5944]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[5945-5953]:Modifier[5945-5953]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[5954-5962]:ParameterizedType[5954-5962]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[5963-5970]:SimpleName[5963-5970]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6096-6102]:Modifier[6096-6102]"
    }, {
      "left" : "List<Type>",
      "right" : "List<Type>",
      "info" : "ParameterizedType[6103-6113]:ParameterizedType[6103-6113]"
    }, {
      "left" : "extraInterfaces",
      "right" : "extraInterfaces",
      "info" : "SimpleName[6114-6129]:SimpleName[6114-6129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6132-6181]:Block[6132-6181]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[6143-6174]:ReturnStatement[6143-6174]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6319-6325]:Modifier[6319-6325]"
    }, {
      "left" : "Class<?>[]",
      "right" : "Class<?>[]",
      "info" : "ArrayType[6326-6336]:ArrayType[6326-6336]"
    }, {
      "left" : "rawExtraInterfaces",
      "right" : "rawExtraInterfaces",
      "info" : "SimpleName[6337-6355]:SimpleName[6337-6355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6358-6396]:Block[6358-6396]"
    }, {
      "left" : "return new Class[0];",
      "right" : "return new Class[0];",
      "info" : "ReturnStatement[6369-6389]:ReturnStatement[6369-6389]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6549-6555]:Modifier[6549-6555]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6556-6563]:PrimitiveType[6556-6563]"
    }, {
      "left" : "hasRawExtraInterfaces",
      "right" : "hasRawExtraInterfaces",
      "info" : "SimpleName[6564-6585]:SimpleName[6564-6585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6588-6645]:Block[6588-6645]"
    }, {
      "left" : "return rawExtraInterfaces().length > 0;",
      "right" : "return rawExtraInterfaces().length > 0;",
      "info" : "ReturnStatement[6599-6638]:ReturnStatement[6599-6638]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6818-6824]:Modifier[6818-6824]"
    }, {
      "left" : "Map<TypeVariable, Type>",
      "right" : "Map<TypeVariable, Type>",
      "info" : "ParameterizedType[6825-6848]:ParameterizedType[6825-6848]"
    }, {
      "left" : "actualTypeArguments",
      "right" : "actualTypeArguments",
      "info" : "SimpleName[6849-6868]:SimpleName[6849-6868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6871-7522]:Block[6871-7522]"
    }, {
      "left" : "TypeVariable[] typeParameters = rawType().getTypeParameters();",
      "right" : "TypeVariable[] typeParameters = rawType().getTypeParameters();",
      "info" : "VariableDeclarationStatement[6882-6944]:VariableDeclarationStatement[6882-6944]"
    }, {
      "left" : "LinkedHashMap<TypeVariable, Type> actualTypeArguments = new LinkedHashMap<TypeVariable, Type>();",
      "right" : "LinkedHashMap<TypeVariable, Type> actualTypeArguments = new LinkedHashMap<TypeVariable, Type>();",
      "info" : "VariableDeclarationStatement[6954-7050]:VariableDeclarationStatement[6954-7050]"
    }, {
      "left" : "for (TypeVariable typeParameter : typeParameters)",
      "right" : "for (TypeVariable typeParameter : typeParameters)",
      "info" : "EnhancedForStatement[7062-7476]:EnhancedForStatement[7062-7476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7112-7476]:Block[7112-7476]"
    }, {
      "left" : "Type actualType = getActualTypeArgumentFor(typeParameter);",
      "right" : "Type actualType = getActualTypeArgumentFor(typeParameter);",
      "info" : "VariableDeclarationStatement[7129-7187]:VariableDeclarationStatement[7129-7187]"
    }, {
      "left" : "actualTypeArguments.put(typeParameter, actualType);",
      "right" : "actualTypeArguments.put(typeParameter, actualType);",
      "info" : "ExpressionStatement[7203-7254]:ExpressionStatement[7203-7254]"
    }, {
      "left" : "return actualTypeArguments;",
      "right" : "return actualTypeArguments;",
      "info" : "ReturnStatement[7488-7515]:ReturnStatement[7488-7515]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7530-7539]:Modifier[7530-7539]"
    }, {
      "left" : "Type",
      "right" : "Type",
      "info" : "SimpleType[7540-7544]:SimpleType[7540-7544]"
    }, {
      "left" : "getActualTypeArgumentFor",
      "right" : "getActualTypeArgumentFor",
      "info" : "SimpleName[7545-7569]:SimpleName[7545-7569]"
    }, {
      "left" : "TypeVariable typeParameter",
      "right" : "TypeVariable typeParameter",
      "info" : "SingleVariableDeclaration[7570-7596]:SingleVariableDeclaration[7570-7596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7598-7885]:Block[7598-7885]"
    }, {
      "left" : "Type type = this.contextualActualTypeParameters.get(typeParameter);",
      "right" : "Type type = this.contextualActualTypeParameters.get(typeParameter);",
      "info" : "VariableDeclarationStatement[7609-7676]:VariableDeclarationStatement[7609-7676]"
    }, {
      "left" : "if (type instanceof TypeVariable)",
      "right" : "if (type instanceof TypeVariable)",
      "info" : "IfStatement[7686-7854]:IfStatement[7686-7854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7720-7854]:Block[7720-7854]"
    }, {
      "left" : "TypeVariable typeVariable = (TypeVariable) type;",
      "right" : "TypeVariable typeVariable = (TypeVariable) type;",
      "info" : "VariableDeclarationStatement[7735-7783]:VariableDeclarationStatement[7735-7783]"
    }, {
      "left" : "return getActualTypeArgumentFor(typeVariable);",
      "right" : "return getActualTypeArgumentFor(typeVariable);",
      "info" : "ReturnStatement[7797-7843]:ReturnStatement[7797-7843]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[7866-7878]:ReturnStatement[7866-7878]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8154-8160]:Modifier[8154-8160]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[8161-8183]:SimpleType[8161-8183]"
    }, {
      "left" : "resolveGenericReturnType",
      "right" : "resolveGenericReturnType",
      "info" : "SimpleName[8184-8208]:SimpleName[8184-8208]"
    }, {
      "left" : "Method method",
      "right" : "Method method",
      "info" : "SingleVariableDeclaration[8209-8222]:SingleVariableDeclaration[8209-8222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8224-9227]:Block[8224-9227]"
    }, {
      "left" : "Type genericReturnType = method.getGenericReturnType();",
      "right" : "Type genericReturnType = method.getGenericReturnType();",
      "info" : "VariableDeclarationStatement[8235-8290]:VariableDeclarationStatement[8235-8290]"
    }, {
      "left" : "if (genericReturnType instanceof Class)",
      "right" : "if (genericReturnType instanceof Class)",
      "info" : "IfStatement[8484-8608]:IfStatement[8484-8608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8524-8608]:Block[8524-8608]"
    }, {
      "left" : "return new NotGenericReturnTypeSupport(genericReturnType);",
      "right" : "return new NotGenericReturnTypeSupport(genericReturnType);",
      "info" : "ReturnStatement[8539-8597]:ReturnStatement[8539-8597]"
    }, {
      "left" : "if (genericReturnType instanceof ParameterizedType)",
      "right" : "if (genericReturnType instanceof ParameterizedType)",
      "info" : "IfStatement[8618-8816]:IfStatement[8618-8816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8670-8816]:Block[8670-8816]"
    }, {
      "left" : "return new ParameterizedReturnType(this, method.getTypeParameters(), (ParameterizedType) method.getGenericReturnType());",
      "right" : "return new ParameterizedReturnType(this, method.getTypeParameters(), (ParameterizedType) method.getGenericReturnType());",
      "info" : "ReturnStatement[8685-8805]:ReturnStatement[8685-8805]"
    }, {
      "left" : "if (genericReturnType instanceof TypeVariable)",
      "right" : "if (genericReturnType instanceof TypeVariable)",
      "info" : "IfStatement[8826-9001]:IfStatement[8826-9001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8873-9001]:Block[8873-9001]"
    }, {
      "left" : "return new TypeVariableReturnType(this, method.getTypeParameters(), (TypeVariable) genericReturnType);",
      "right" : "return new TypeVariableReturnType(this, method.getTypeParameters(), (TypeVariable) genericReturnType);",
      "info" : "ReturnStatement[8888-8990]:ReturnStatement[8888-8990]"
    }, {
      "left" : "throw new MockitoException(\"Ouch, it shouldn't happen, type '\" + genericReturnType.getClass().getCanonicalName() + \"' on method : '\" + method.toGenericString() + \"' is not supported : \" + genericReturnType);",
      "right" : "throw new MockitoException(\"Ouch, it shouldn't happen, type '\" + genericReturnType.getClass().getCanonicalName() + \"' on method : '\" + method.toGenericString() + \"' is not supported : \" + genericReturnType);",
      "info" : "ThrowStatement[9013-9220]:ThrowStatement[9013-9220]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9807-9813]:Modifier[9807-9813]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9814-9820]:Modifier[9814-9820]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[9821-9843]:SimpleType[9821-9843]"
    }, {
      "left" : "inferFrom",
      "right" : "inferFrom",
      "info" : "SimpleName[9844-9853]:SimpleName[9844-9853]"
    }, {
      "left" : "Type type",
      "right" : "Type type",
      "info" : "SingleVariableDeclaration[9854-9863]:SingleVariableDeclaration[9854-9863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9865-10339]:Block[9865-10339]"
    }, {
      "left" : "Checks.checkNotNull(type, \"type\");",
      "right" : "Checks.checkNotNull(type, \"type\");",
      "info" : "ExpressionStatement[9876-9910]:ExpressionStatement[9876-9910]"
    }, {
      "left" : "if (type instanceof Class)",
      "right" : "if (type instanceof Class)",
      "info" : "IfStatement[9920-10033]:IfStatement[9920-10033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9947-10033]:Block[9947-10033]"
    }, {
      "left" : "return new FromClassGenericMetadataSupport((Class<?>) type);",
      "right" : "return new FromClassGenericMetadataSupport((Class<?>) type);",
      "info" : "ReturnStatement[9962-10022]:ReturnStatement[9962-10022]"
    }, {
      "left" : "if (type instanceof ParameterizedType)",
      "right" : "if (type instanceof ParameterizedType)",
      "info" : "IfStatement[10043-10189]:IfStatement[10043-10189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10082-10189]:Block[10082-10189]"
    }, {
      "left" : "return new FromParameterizedTypeGenericMetadataSupport((ParameterizedType) type);",
      "right" : "return new FromParameterizedTypeGenericMetadataSupport((ParameterizedType) type);",
      "info" : "ReturnStatement[10097-10178]:ReturnStatement[10097-10178]"
    }, {
      "left" : "throw new MockitoException(\"Type meta-data for this Type (\" + type.getClass().getCanonicalName() + \") is not supported : \" + type);",
      "right" : "throw new MockitoException(\"Type meta-data for this Type (\" + type.getClass().getCanonicalName() + \") is not supported : \" + type);",
      "info" : "ThrowStatement[10201-10332]:ThrowStatement[10201-10332]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10959-10966]:Modifier[10959-10966]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10967-10973]:Modifier[10967-10973]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[10974-10979]:TYPE_DECLARATION_KIND[10974-10979]"
    }, {
      "left" : "FromClassGenericMetadataSupport",
      "right" : "FromClassGenericMetadataSupport",
      "info" : "SimpleName[10980-11011]:SimpleName[10980-11011]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[11020-11042]:SimpleType[11020-11042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11095-11101]:Modifier[11095-11101]"
    }, {
      "left" : "FromClassGenericMetadataSupport",
      "right" : "FromClassGenericMetadataSupport",
      "info" : "SimpleName[11102-11133]:SimpleName[11102-11133]"
    }, {
      "left" : "Class<?> clazz",
      "right" : "Class<?> clazz",
      "info" : "SingleVariableDeclaration[11134-11148]:SingleVariableDeclaration[11134-11148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11150-11532]:Block[11150-11532]"
    }, {
      "left" : "this.clazz = clazz;",
      "right" : "this.clazz = clazz;",
      "info" : "ExpressionStatement[11165-11184]:ExpressionStatement[11165-11184]"
    }, {
      "left" : "for (Class currentExploredClass = clazz;\r\n                 currentExploredClass != null && currentExploredClass != Object.class;\r\n                 currentExploredClass = superClassOf(currentExploredClass))",
      "right" : "for (Class currentExploredClass = clazz;\r\n                 currentExploredClass != null && currentExploredClass != Object.class;\r\n                 currentExploredClass = superClassOf(currentExploredClass))",
      "info" : "ForStatement[11200-11521]:ForStatement[11200-11521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11424-11521]:Block[11424-11521]"
    }, {
      "left" : "readActualTypeParametersOnDeclaringClass(currentExploredClass);",
      "right" : "readActualTypeParametersOnDeclaringClass(currentExploredClass);",
      "info" : "ExpressionStatement[11443-11506]:ExpressionStatement[11443-11506]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11544-11551]:Modifier[11544-11551]"
    }, {
      "left" : "Class",
      "right" : "Class",
      "info" : "SimpleType[11552-11557]:SimpleType[11552-11557]"
    }, {
      "left" : "superClassOf",
      "right" : "superClassOf",
      "info" : "SimpleName[11558-11570]:SimpleName[11558-11570]"
    }, {
      "left" : "Class currentExploredClass",
      "right" : "Class currentExploredClass",
      "info" : "SingleVariableDeclaration[11571-11597]:SingleVariableDeclaration[11571-11597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11599-11950]:Block[11599-11950]"
    }, {
      "left" : "Type genericSuperclass = currentExploredClass.getGenericSuperclass();",
      "right" : "Type genericSuperclass = currentExploredClass.getGenericSuperclass();",
      "info" : "VariableDeclarationStatement[11614-11683]:VariableDeclarationStatement[11614-11683]"
    }, {
      "left" : "if (genericSuperclass instanceof ParameterizedType)",
      "right" : "if (genericSuperclass instanceof ParameterizedType)",
      "info" : "IfStatement[11697-11892]:IfStatement[11697-11892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11749-11892]:Block[11749-11892]"
    }, {
      "left" : "Type rawType = ((ParameterizedType) genericSuperclass).getRawType();",
      "right" : "Type rawType = ((ParameterizedType) genericSuperclass).getRawType();",
      "info" : "VariableDeclarationStatement[11768-11836]:VariableDeclarationStatement[11768-11836]"
    }, {
      "left" : "return (Class) rawType;",
      "right" : "return (Class) rawType;",
      "info" : "ReturnStatement[11854-11877]:ReturnStatement[11854-11877]"
    }, {
      "left" : "return (Class) genericSuperclass;",
      "right" : "return (Class) genericSuperclass;",
      "info" : "ReturnStatement[11906-11939]:ReturnStatement[11906-11939]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11962-11969]:Modifier[11962-11969]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11970-11974]:PrimitiveType[11970-11974]"
    }, {
      "left" : "readActualTypeParametersOnDeclaringClass",
      "right" : "readActualTypeParametersOnDeclaringClass",
      "info" : "SimpleName[11975-12015]:SimpleName[11975-12015]"
    }, {
      "left" : "Class<?> clazz",
      "right" : "Class<?> clazz",
      "info" : "SingleVariableDeclaration[12016-12030]:SingleVariableDeclaration[12016-12030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12032-12327]:Block[12032-12327]"
    }, {
      "left" : "registerTypeParametersOn(clazz.getTypeParameters());",
      "right" : "registerTypeParametersOn(clazz.getTypeParameters());",
      "info" : "ExpressionStatement[12047-12099]:ExpressionStatement[12047-12099]"
    }, {
      "left" : "registerTypeVariablesOn(clazz.getGenericSuperclass());",
      "right" : "registerTypeVariablesOn(clazz.getGenericSuperclass());",
      "info" : "ExpressionStatement[12113-12167]:ExpressionStatement[12113-12167]"
    }, {
      "left" : "for (Type genericInterface : clazz.getGenericInterfaces())",
      "right" : "for (Type genericInterface : clazz.getGenericInterfaces())",
      "info" : "EnhancedForStatement[12181-12316]:EnhancedForStatement[12181-12316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12240-12316]:Block[12240-12316]"
    }, {
      "left" : "registerTypeVariablesOn(genericInterface);",
      "right" : "registerTypeVariablesOn(genericInterface);",
      "info" : "ExpressionStatement[12259-12301]:ExpressionStatement[12259-12301]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12339-12348]:MarkerAnnotation[12339-12348]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12358-12364]:Modifier[12358-12364]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[12365-12373]:ParameterizedType[12365-12373]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[12374-12381]:SimpleName[12374-12381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12384-12423]:Block[12384-12423]"
    }, {
      "left" : "return clazz;",
      "right" : "return clazz;",
      "info" : "ReturnStatement[12399-12412]:ReturnStatement[12399-12412]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13127-13134]:Modifier[13127-13134]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13135-13141]:Modifier[13135-13141]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[13142-13147]:TYPE_DECLARATION_KIND[13142-13147]"
    }, {
      "left" : "FromParameterizedTypeGenericMetadataSupport",
      "right" : "FromParameterizedTypeGenericMetadataSupport",
      "info" : "SimpleName[13148-13191]:SimpleName[13148-13191]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[13200-13222]:SimpleType[13200-13222]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13296-13302]:Modifier[13296-13302]"
    }, {
      "left" : "FromParameterizedTypeGenericMetadataSupport",
      "right" : "FromParameterizedTypeGenericMetadataSupport",
      "info" : "SimpleName[13303-13346]:SimpleName[13303-13346]"
    }, {
      "left" : "ParameterizedType parameterizedType",
      "right" : "ParameterizedType parameterizedType",
      "info" : "SingleVariableDeclaration[13347-13382]:SingleVariableDeclaration[13347-13382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13384-13494]:Block[13384-13494]"
    }, {
      "left" : "this.parameterizedType = parameterizedType;",
      "right" : "this.parameterizedType = parameterizedType;",
      "info" : "ExpressionStatement[13399-13442]:ExpressionStatement[13399-13442]"
    }, {
      "left" : "readActualTypeParameters();",
      "right" : "readActualTypeParameters();",
      "info" : "ExpressionStatement[13456-13483]:ExpressionStatement[13456-13483]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13506-13513]:Modifier[13506-13513]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13514-13518]:PrimitiveType[13514-13518]"
    }, {
      "left" : "readActualTypeParameters",
      "right" : "readActualTypeParameters",
      "info" : "SimpleName[13519-13543]:SimpleName[13519-13543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13546-13685]:Block[13546-13685]"
    }, {
      "left" : "registerTypeVariablesOn(parameterizedType.getRawType());",
      "right" : "registerTypeVariablesOn(parameterizedType.getRawType());",
      "info" : "ExpressionStatement[13561-13617]:ExpressionStatement[13561-13617]"
    }, {
      "left" : "registerTypeVariablesOn(parameterizedType);",
      "right" : "registerTypeVariablesOn(parameterizedType);",
      "info" : "ExpressionStatement[13631-13674]:ExpressionStatement[13631-13674]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13697-13706]:MarkerAnnotation[13697-13706]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13716-13722]:Modifier[13716-13722]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[13723-13731]:ParameterizedType[13723-13731]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[13732-13739]:SimpleName[13732-13739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13742-13817]:Block[13742-13817]"
    }, {
      "left" : "return (Class<?>) parameterizedType.getRawType();",
      "right" : "return (Class<?>) parameterizedType.getRawType();",
      "info" : "ReturnStatement[13757-13806]:ReturnStatement[13757-13806]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13967-13974]:Modifier[13967-13974]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13975-13981]:Modifier[13975-13981]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[13982-13987]:TYPE_DECLARATION_KIND[13982-13987]"
    }, {
      "left" : "ParameterizedReturnType",
      "right" : "ParameterizedReturnType",
      "info" : "SimpleName[13988-14011]:SimpleName[13988-14011]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[14020-14042]:SimpleType[14020-14042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14170-14176]:Modifier[14170-14176]"
    }, {
      "left" : "ParameterizedReturnType",
      "right" : "ParameterizedReturnType",
      "info" : "SimpleName[14177-14200]:SimpleName[14177-14200]"
    }, {
      "left" : "GenericMetadataSupport source",
      "right" : "GenericMetadataSupport source",
      "info" : "SingleVariableDeclaration[14201-14230]:SingleVariableDeclaration[14201-14230]"
    }, {
      "left" : "TypeVariable[] typeParameters",
      "right" : "TypeVariable[] typeParameters",
      "info" : "SingleVariableDeclaration[14232-14261]:SingleVariableDeclaration[14232-14261]"
    }, {
      "left" : "ParameterizedType parameterizedType",
      "right" : "ParameterizedType parameterizedType",
      "info" : "SingleVariableDeclaration[14263-14298]:SingleVariableDeclaration[14263-14298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14300-14581]:Block[14300-14581]"
    }, {
      "left" : "this.parameterizedType = parameterizedType;",
      "right" : "this.parameterizedType = parameterizedType;",
      "info" : "ExpressionStatement[14315-14358]:ExpressionStatement[14315-14358]"
    }, {
      "left" : "this.typeParameters = typeParameters;",
      "right" : "this.typeParameters = typeParameters;",
      "info" : "ExpressionStatement[14372-14409]:ExpressionStatement[14372-14409]"
    }, {
      "left" : "this.contextualActualTypeParameters = source.contextualActualTypeParameters;",
      "right" : "this.contextualActualTypeParameters = source.contextualActualTypeParameters;",
      "info" : "ExpressionStatement[14423-14499]:ExpressionStatement[14423-14499]"
    }, {
      "left" : "readTypeParameters();",
      "right" : "readTypeParameters();",
      "info" : "ExpressionStatement[14515-14536]:ExpressionStatement[14515-14536]"
    }, {
      "left" : "readTypeVariables();",
      "right" : "readTypeVariables();",
      "info" : "ExpressionStatement[14550-14570]:ExpressionStatement[14550-14570]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14593-14600]:Modifier[14593-14600]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14601-14605]:PrimitiveType[14601-14605]"
    }, {
      "left" : "readTypeParameters",
      "right" : "readTypeParameters",
      "info" : "SimpleName[14606-14624]:SimpleName[14606-14624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14627-14694]:Block[14627-14694]"
    }, {
      "left" : "registerTypeParametersOn(typeParameters);",
      "right" : "registerTypeParametersOn(typeParameters);",
      "info" : "ExpressionStatement[14642-14683]:ExpressionStatement[14642-14683]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14706-14713]:Modifier[14706-14713]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14714-14718]:PrimitiveType[14714-14718]"
    }, {
      "left" : "readTypeVariables",
      "right" : "readTypeVariables",
      "info" : "SimpleName[14719-14736]:SimpleName[14719-14736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14739-14808]:Block[14739-14808]"
    }, {
      "left" : "registerTypeVariablesOn(parameterizedType);",
      "right" : "registerTypeVariablesOn(parameterizedType);",
      "info" : "ExpressionStatement[14754-14797]:ExpressionStatement[14754-14797]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14820-14829]:MarkerAnnotation[14820-14829]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14839-14845]:Modifier[14839-14845]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[14846-14854]:ParameterizedType[14846-14854]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[14855-14862]:SimpleName[14855-14862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14865-14940]:Block[14865-14940]"
    }, {
      "left" : "return (Class<?>) parameterizedType.getRawType();",
      "right" : "return (Class<?>) parameterizedType.getRawType();",
      "info" : "ReturnStatement[14880-14929]:ReturnStatement[14880-14929]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15079-15086]:Modifier[15079-15086]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15087-15093]:Modifier[15087-15093]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[15094-15099]:TYPE_DECLARATION_KIND[15094-15099]"
    }, {
      "left" : "TypeVariableReturnType",
      "right" : "TypeVariableReturnType",
      "info" : "SimpleName[15100-15122]:SimpleName[15100-15122]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[15131-15153]:SimpleType[15131-15153]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15310-15316]:Modifier[15310-15316]"
    }, {
      "left" : "TypeVariableReturnType",
      "right" : "TypeVariableReturnType",
      "info" : "SimpleName[15317-15339]:SimpleName[15317-15339]"
    }, {
      "left" : "GenericMetadataSupport source",
      "right" : "GenericMetadataSupport source",
      "info" : "SingleVariableDeclaration[15340-15369]:SingleVariableDeclaration[15340-15369]"
    }, {
      "left" : "TypeVariable[] typeParameters",
      "right" : "TypeVariable[] typeParameters",
      "info" : "SingleVariableDeclaration[15371-15400]:SingleVariableDeclaration[15371-15400]"
    }, {
      "left" : "TypeVariable typeVariable",
      "right" : "TypeVariable typeVariable",
      "info" : "SingleVariableDeclaration[15402-15427]:SingleVariableDeclaration[15402-15427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15429-15700]:Block[15429-15700]"
    }, {
      "left" : "this.typeParameters = typeParameters;",
      "right" : "this.typeParameters = typeParameters;",
      "info" : "ExpressionStatement[15444-15481]:ExpressionStatement[15444-15481]"
    }, {
      "left" : "this.typeVariable = typeVariable;",
      "right" : "this.typeVariable = typeVariable;",
      "info" : "ExpressionStatement[15495-15528]:ExpressionStatement[15495-15528]"
    }, {
      "left" : "this.contextualActualTypeParameters = source.contextualActualTypeParameters;",
      "right" : "this.contextualActualTypeParameters = source.contextualActualTypeParameters;",
      "info" : "ExpressionStatement[15542-15618]:ExpressionStatement[15542-15618]"
    }, {
      "left" : "readTypeParameters();",
      "right" : "readTypeParameters();",
      "info" : "ExpressionStatement[15634-15655]:ExpressionStatement[15634-15655]"
    }, {
      "left" : "readTypeVariables();",
      "right" : "readTypeVariables();",
      "info" : "ExpressionStatement[15669-15689]:ExpressionStatement[15669-15689]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15712-15719]:Modifier[15712-15719]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15720-15724]:PrimitiveType[15720-15724]"
    }, {
      "left" : "readTypeParameters",
      "right" : "readTypeParameters",
      "info" : "SimpleName[15725-15743]:SimpleName[15725-15743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15746-15813]:Block[15746-15813]"
    }, {
      "left" : "registerTypeParametersOn(typeParameters);",
      "right" : "registerTypeParametersOn(typeParameters);",
      "info" : "ExpressionStatement[15761-15802]:ExpressionStatement[15761-15802]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15825-15832]:Modifier[15825-15832]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15833-15837]:PrimitiveType[15833-15837]"
    }, {
      "left" : "readTypeVariables",
      "right" : "readTypeVariables",
      "info" : "SimpleName[15838-15855]:SimpleName[15838-15855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15858-16069]:Block[15858-16145]"
    }, {
      "left" : "for (Type type : typeVariable.getBounds())",
      "right" : "for (Type type : typeVariable.getBounds())",
      "info" : "EnhancedForStatement[15873-15980]:EnhancedForStatement[15873-15980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15916-15980]:Block[15916-15980]"
    }, {
      "left" : "registerTypeVariablesOn(type);",
      "right" : "registerTypeVariablesOn(type);",
      "info" : "ExpressionStatement[15935-15965]:ExpressionStatement[15935-15965]"
    }, {
      "left" : "registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));",
      "right" : "registerTypeVariablesOn(getActualTypeArgumentFor(typeVariable));",
      "info" : "ExpressionStatement[15994-16058]:ExpressionStatement[16070-16134]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16081-16090]:MarkerAnnotation[16157-16166]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16100-16106]:Modifier[16176-16182]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[16107-16115]:ParameterizedType[16183-16191]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[16116-16123]:SimpleName[16192-16199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16126-16277]:Block[16202-16353]"
    }, {
      "left" : "if (rawType == null)",
      "right" : "if (rawType == null)",
      "info" : "IfStatement[16141-16237]:IfStatement[16217-16313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16162-16237]:Block[16238-16313]"
    }, {
      "left" : "rawType = extractRawTypeOf(typeVariable);",
      "right" : "rawType = extractRawTypeOf(typeVariable);",
      "info" : "ExpressionStatement[16181-16222]:ExpressionStatement[16257-16298]"
    }, {
      "left" : "return rawType;",
      "right" : "return rawType;",
      "info" : "ReturnStatement[16251-16266]:ReturnStatement[16327-16342]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16289-16296]:Modifier[16365-16372]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[16297-16305]:ParameterizedType[16373-16381]"
    }, {
      "left" : "extractRawTypeOf",
      "right" : "extractRawTypeOf",
      "info" : "SimpleName[16306-16322]:SimpleName[16382-16398]"
    }, {
      "left" : "Type type",
      "right" : "Type type",
      "info" : "SingleVariableDeclaration[16323-16332]:SingleVariableDeclaration[16399-16408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16334-17208]:Block[16410-17284]"
    }, {
      "left" : "if (type instanceof Class)",
      "right" : "if (type instanceof Class)",
      "info" : "IfStatement[16349-16433]:IfStatement[16425-16509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16376-16433]:Block[16452-16509]"
    }, {
      "left" : "return (Class<?>) type;",
      "right" : "return (Class<?>) type;",
      "info" : "ReturnStatement[16395-16418]:ReturnStatement[16471-16494]"
    }, {
      "left" : "if (type instanceof ParameterizedType)",
      "right" : "if (type instanceof ParameterizedType)",
      "info" : "IfStatement[16447-16578]:IfStatement[16523-16654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16486-16578]:Block[16562-16654]"
    }, {
      "left" : "return (Class<?>) ((ParameterizedType) type).getRawType();",
      "right" : "return (Class<?>) ((ParameterizedType) type).getRawType();",
      "info" : "ReturnStatement[16505-16563]:ReturnStatement[16581-16639]"
    }, {
      "left" : "if (type instanceof BoundedType)",
      "right" : "if (type instanceof BoundedType)",
      "info" : "IfStatement[16592-16718]:IfStatement[16668-16794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16625-16718]:Block[16701-16794]"
    }, {
      "left" : "return extractRawTypeOf(((BoundedType) type).firstBound());",
      "right" : "return extractRawTypeOf(((BoundedType) type).firstBound());",
      "info" : "ReturnStatement[16644-16703]:ReturnStatement[16720-16779]"
    }, {
      "left" : "if (type instanceof TypeVariable)",
      "right" : "if (type instanceof TypeVariable)",
      "info" : "IfStatement[16732-17103]:IfStatement[16808-17179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16766-17103]:Block[16842-17179]"
    }, {
      "left" : "return extractRawTypeOf(contextualActualTypeParameters.get(type));",
      "right" : "return extractRawTypeOf(contextualActualTypeParameters.get(type));",
      "info" : "ReturnStatement[17022-17088]:ReturnStatement[17098-17164]"
    }, {
      "left" : "throw new MockitoException(\"Raw extraction not supported for : '\" + type + \"'\");",
      "right" : "throw new MockitoException(\"Raw extraction not supported for : '\" + type + \"'\");",
      "info" : "ThrowStatement[17117-17197]:ThrowStatement[17193-17273]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17220-17229]:MarkerAnnotation[17296-17305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17239-17245]:Modifier[17315-17321]"
    }, {
      "left" : "List<Type>",
      "right" : "List<Type>",
      "info" : "ParameterizedType[17246-17256]:ParameterizedType[17322-17332]"
    }, {
      "left" : "extraInterfaces",
      "right" : "extraInterfaces",
      "info" : "SimpleName[17257-17272]:SimpleName[17333-17348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17275-17849]:Block[17351-17925]"
    }, {
      "left" : "Type type = extractActualBoundedTypeOf(typeVariable);",
      "right" : "Type type = extractActualBoundedTypeOf(typeVariable);",
      "info" : "VariableDeclarationStatement[17290-17343]:VariableDeclarationStatement[17366-17419]"
    }, {
      "left" : "if (type instanceof BoundedType)",
      "right" : "if (type instanceof BoundedType)",
      "info" : "IfStatement[17357-17485]:IfStatement[17433-17561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17390-17485]:Block[17466-17561]"
    }, {
      "left" : "return Arrays.asList(((BoundedType) type).interfaceBounds());",
      "right" : "return Arrays.asList(((BoundedType) type).interfaceBounds());",
      "info" : "ReturnStatement[17409-17470]:ReturnStatement[17485-17546]"
    }, {
      "left" : "if (type instanceof ParameterizedType)",
      "right" : "if (type instanceof ParameterizedType)",
      "info" : "IfStatement[17499-17611]:IfStatement[17575-17687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17538-17611]:Block[17614-17687]"
    }, {
      "left" : "return Collections.singletonList(type);",
      "right" : "return Collections.singletonList(type);",
      "info" : "ReturnStatement[17557-17596]:ReturnStatement[17633-17672]"
    }, {
      "left" : "if (type instanceof Class)",
      "right" : "if (type instanceof Class)",
      "info" : "IfStatement[17625-17717]:IfStatement[17701-17793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17652-17717]:Block[17728-17793]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[17671-17702]:ReturnStatement[17747-17778]"
    }, {
      "left" : "throw new MockitoException(\"Cannot extract extra-interfaces from '\" + typeVariable + \"' : '\" + type + \"'\");",
      "right" : "throw new MockitoException(\"Cannot extract extra-interfaces from '\" + typeVariable + \"' : '\" + type + \"'\");",
      "info" : "ThrowStatement[17731-17838]:ThrowStatement[17807-17914]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18043-18049]:Modifier[18119-18125]"
    }, {
      "left" : "Class<?>[]",
      "right" : "Class<?>[]",
      "info" : "ArrayType[18050-18060]:ArrayType[18126-18136]"
    }, {
      "left" : "rawExtraInterfaces",
      "right" : "rawExtraInterfaces",
      "info" : "SimpleName[18061-18079]:SimpleName[18137-18155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18082-18722]:Block[18158-18798]"
    }, {
      "left" : "List<Type> extraInterfaces = extraInterfaces();",
      "right" : "List<Type> extraInterfaces = extraInterfaces();",
      "info" : "VariableDeclarationStatement[18097-18144]:VariableDeclarationStatement[18173-18220]"
    }, {
      "left" : "List<Class<?>> rawExtraInterfaces = new ArrayList<Class<?>>();",
      "right" : "List<Class<?>> rawExtraInterfaces = new ArrayList<Class<?>>();",
      "info" : "VariableDeclarationStatement[18158-18220]:VariableDeclarationStatement[18234-18296]"
    }, {
      "left" : "for (Type extraInterface : extraInterfaces)",
      "right" : "for (Type extraInterface : extraInterfaces)",
      "info" : "EnhancedForStatement[18234-18625]:EnhancedForStatement[18310-18701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18278-18625]:Block[18354-18701]"
    }, {
      "left" : "Class<?> rawInterface = extractRawTypeOf(extraInterface);",
      "right" : "Class<?> rawInterface = extractRawTypeOf(extraInterface);",
      "info" : "VariableDeclarationStatement[18297-18354]:VariableDeclarationStatement[18373-18430]"
    }, {
      "left" : "if(!rawType().equals(rawInterface))",
      "right" : "if(!rawType().equals(rawInterface))",
      "info" : "IfStatement[18495-18610]:IfStatement[18571-18686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18531-18610]:Block[18607-18686]"
    }, {
      "left" : "rawExtraInterfaces.add(rawInterface);",
      "right" : "rawExtraInterfaces.add(rawInterface);",
      "info" : "ExpressionStatement[18554-18591]:ExpressionStatement[18630-18667]"
    }, {
      "left" : "return rawExtraInterfaces.toArray(new Class[rawExtraInterfaces.size()]);",
      "right" : "return rawExtraInterfaces.toArray(new Class[rawExtraInterfaces.size()]);",
      "info" : "ReturnStatement[18639-18711]:ReturnStatement[18715-18787]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18734-18741]:Modifier[18810-18817]"
    }, {
      "left" : "Type",
      "right" : "Type",
      "info" : "SimpleType[18742-18746]:SimpleType[18818-18822]"
    }, {
      "left" : "extractActualBoundedTypeOf",
      "right" : "extractActualBoundedTypeOf",
      "info" : "SimpleName[18747-18773]:SimpleName[18823-18849]"
    }, {
      "left" : "Type type",
      "right" : "Type type",
      "info" : "SingleVariableDeclaration[18774-18783]:SingleVariableDeclaration[18850-18859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18785-19695]:Block[18861-19771]"
    }, {
      "left" : "if (type instanceof TypeVariable)",
      "right" : "if (type instanceof TypeVariable)",
      "info" : "IfStatement[18800-19174]:IfStatement[18876-19250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18834-19174]:Block[18910-19250]"
    }, {
      "left" : "return extractActualBoundedTypeOf(contextualActualTypeParameters.get(type));",
      "right" : "return extractActualBoundedTypeOf(contextualActualTypeParameters.get(type));",
      "info" : "ReturnStatement[19083-19159]:ReturnStatement[19159-19235]"
    }, {
      "left" : "if (type instanceof BoundedType)",
      "right" : "if (type instanceof BoundedType)",
      "info" : "IfStatement[19188-19590]:IfStatement[19264-19666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19221-19590]:Block[19297-19666]"
    }, {
      "left" : "Type actualFirstBound = extractActualBoundedTypeOf(((BoundedType) type).firstBound());",
      "right" : "Type actualFirstBound = extractActualBoundedTypeOf(((BoundedType) type).firstBound());",
      "info" : "VariableDeclarationStatement[19240-19326]:VariableDeclarationStatement[19316-19402]"
    }, {
      "left" : "if (!(actualFirstBound instanceof BoundedType))",
      "right" : "if (!(actualFirstBound instanceof BoundedType))",
      "info" : "IfStatement[19344-19533]:IfStatement[19420-19609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19392-19533]:Block[19468-19609]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[19415-19427]:ReturnStatement[19491-19503]"
    }, {
      "left" : "return actualFirstBound;",
      "right" : "return actualFirstBound;",
      "info" : "ReturnStatement[19551-19575]:ReturnStatement[19627-19651]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[19604-19616]:ReturnStatement[19680-19692]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19831-19838]:Modifier[19907-19914]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19839-19845]:Modifier[19915-19921]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[19846-19851]:TYPE_DECLARATION_KIND[19922-19927]"
    }, {
      "left" : "NotGenericReturnTypeSupport",
      "right" : "NotGenericReturnTypeSupport",
      "info" : "SimpleName[19852-19879]:SimpleName[19928-19955]"
    }, {
      "left" : "GenericMetadataSupport",
      "right" : "GenericMetadataSupport",
      "info" : "SimpleType[19888-19910]:SimpleType[19964-19986]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19968-19974]:Modifier[20044-20050]"
    }, {
      "left" : "NotGenericReturnTypeSupport",
      "right" : "NotGenericReturnTypeSupport",
      "info" : "SimpleName[19975-20002]:SimpleName[20051-20078]"
    }, {
      "left" : "Type genericReturnType",
      "right" : "Type genericReturnType",
      "info" : "SingleVariableDeclaration[20003-20025]:SingleVariableDeclaration[20079-20101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20027-20095]:Block[20103-20171]"
    }, {
      "left" : "returnType = (Class<?>) genericReturnType;",
      "right" : "returnType = (Class<?>) genericReturnType;",
      "info" : "ExpressionStatement[20042-20084]:ExpressionStatement[20118-20160]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20107-20116]:MarkerAnnotation[20183-20192]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20126-20132]:Modifier[20202-20208]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[20133-20141]:ParameterizedType[20209-20217]"
    }, {
      "left" : "rawType",
      "right" : "rawType",
      "info" : "SimpleName[20142-20149]:SimpleName[20218-20225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20152-20196]:Block[20228-20272]"
    }, {
      "left" : "return returnType;",
      "right" : "return returnType;",
      "info" : "ReturnStatement[20167-20185]:ReturnStatement[20243-20261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20695-20701]:Modifier[20771-20777]"
    }, {
      "left" : "interface",
      "right" : "interface",
      "info" : "TYPE_DECLARATION_KIND[20702-20711]:TYPE_DECLARATION_KIND[20778-20787]"
    }, {
      "left" : "BoundedType",
      "right" : "BoundedType",
      "info" : "SimpleName[20712-20723]:SimpleName[20788-20799]"
    }, {
      "left" : "Type",
      "right" : "Type",
      "info" : "SimpleType[20732-20736]:SimpleType[20808-20812]"
    }, {
      "left" : "Type",
      "right" : "Type",
      "info" : "SimpleType[20748-20752]:SimpleType[20824-20828]"
    }, {
      "left" : "firstBound",
      "right" : "firstBound",
      "info" : "SimpleName[20753-20763]:SimpleName[20829-20839]"
    }, {
      "left" : "Type[]",
      "right" : "Type[]",
      "info" : "ArrayType[20778-20784]:ArrayType[20854-20860]"
    }, {
      "left" : "interfaceBounds",
      "right" : "interfaceBounds",
      "info" : "SimpleName[20785-20800]:SimpleName[20861-20876]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21790-21796]:Modifier[21866-21872]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21797-21803]:Modifier[21873-21879]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[21804-21809]:TYPE_DECLARATION_KIND[21880-21885]"
    }, {
      "left" : "TypeVarBoundedType",
      "right" : "TypeVarBoundedType",
      "info" : "SimpleName[21810-21828]:SimpleName[21886-21904]"
    }, {
      "left" : "BoundedType",
      "right" : "BoundedType",
      "info" : "SimpleType[21840-21851]:SimpleType[21916-21927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21917-21923]:Modifier[21993-21999]"
    }, {
      "left" : "TypeVarBoundedType",
      "right" : "TypeVarBoundedType",
      "info" : "SimpleName[21924-21942]:SimpleName[22000-22018]"
    }, {
      "left" : "TypeVariable typeVariable",
      "right" : "TypeVariable typeVariable",
      "info" : "SingleVariableDeclaration[21943-21968]:SingleVariableDeclaration[22019-22044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21970-22029]:Block[22046-22105]"
    }, {
      "left" : "this.typeVariable = typeVariable;",
      "right" : "this.typeVariable = typeVariable;",
      "info" : "ExpressionStatement[21985-22018]:ExpressionStatement[22061-22094]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22184-22190]:Modifier[22260-22266]"
    }, {
      "left" : "Type",
      "right" : "Type",
      "info" : "SimpleType[22191-22195]:SimpleType[22267-22271]"
    }, {
      "left" : "firstBound",
      "right" : "firstBound",
      "info" : "SimpleName[22196-22206]:SimpleName[22272-22282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22209-22273]:Block[22285-22349]"
    }, {
      "left" : "return typeVariable.getBounds()[0];",
      "right" : "return typeVariable.getBounds()[0];",
      "info" : "ReturnStatement[22224-22259]:ReturnStatement[22300-22335]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22610-22616]:Modifier[22686-22692]"
    }, {
      "left" : "Type[]",
      "right" : "Type[]",
      "info" : "ArrayType[22617-22623]:ArrayType[22693-22699]"
    }, {
      "left" : "interfaceBounds",
      "right" : "interfaceBounds",
      "info" : "SimpleName[22624-22639]:SimpleName[22700-22715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22642-22893]:Block[22718-22969]"
    }, {
      "left" : "Type[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];",
      "right" : "Type[] interfaceBounds = new Type[typeVariable.getBounds().length - 1];",
      "info" : "VariableDeclarationStatement[22657-22728]:VariableDeclarationStatement[22733-22804]"
    }, {
      "left" : "System.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);",
      "right" : "System.arraycopy(typeVariable.getBounds(), 1, interfaceBounds, 0, typeVariable.getBounds().length - 1);",
      "info" : "ExpressionStatement[22742-22845]:ExpressionStatement[22818-22921]"
    }, {
      "left" : "return interfaceBounds;",
      "right" : "return interfaceBounds;",
      "info" : "ReturnStatement[22859-22882]:ReturnStatement[22935-22958]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22905-22914]:MarkerAnnotation[22981-22990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22924-22930]:Modifier[23000-23006]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[22931-22938]:PrimitiveType[23007-23014]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[22939-22945]:SimpleName[23015-23021]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[22946-22954]:SingleVariableDeclaration[23022-23030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22956-23165]:Block[23032-23241]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[22971-22998]:IfStatement[23047-23074]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[22986-22998]:ReturnStatement[23062-23074]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[23012-23070]:IfStatement[23088-23146]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[23057-23070]:ReturnStatement[23133-23146]"
    }, {
      "left" : "return typeVariable.equals(((TypeVarBoundedType) o).typeVariable);",
      "right" : "return typeVariable.equals(((TypeVarBoundedType) o).typeVariable);",
      "info" : "ReturnStatement[23086-23152]:ReturnStatement[23162-23228]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23177-23186]:MarkerAnnotation[23253-23262]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23196-23202]:Modifier[23272-23278]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[23203-23206]:PrimitiveType[23279-23282]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[23207-23215]:SimpleName[23283-23291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23218-23275]:Block[23294-23351]"
    }, {
      "left" : "return typeVariable.hashCode();",
      "right" : "return typeVariable.hashCode();",
      "info" : "ReturnStatement[23233-23264]:ReturnStatement[23309-23340]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23287-23296]:MarkerAnnotation[23363-23372]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23306-23312]:Modifier[23382-23388]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23313-23319]:SimpleType[23389-23395]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[23320-23328]:SimpleName[23396-23404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23331-23464]:Block[23407-23540]"
    }, {
      "left" : "return \"{firstBound=\" + firstBound() + \", interfaceBounds=\" + Arrays.deepToString(interfaceBounds()) + '}';",
      "right" : "return \"{firstBound=\" + firstBound() + \", interfaceBounds=\" + Arrays.deepToString(interfaceBounds()) + '}';",
      "info" : "ReturnStatement[23346-23453]:ReturnStatement[23422-23529]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23476-23482]:Modifier[23552-23558]"
    }, {
      "left" : "TypeVariable",
      "right" : "TypeVariable",
      "info" : "SimpleType[23483-23495]:SimpleType[23559-23571]"
    }, {
      "left" : "typeVariable",
      "right" : "typeVariable",
      "info" : "SimpleName[23496-23508]:SimpleName[23572-23584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23511-23557]:Block[23587-23633]"
    }, {
      "left" : "return typeVariable;",
      "right" : "return typeVariable;",
      "info" : "ReturnStatement[23526-23546]:ReturnStatement[23602-23622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23995-24001]:Modifier[24071-24077]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24002-24008]:Modifier[24078-24084]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[24009-24014]:TYPE_DECLARATION_KIND[24085-24090]"
    }, {
      "left" : "WildCardBoundedType",
      "right" : "WildCardBoundedType",
      "info" : "SimpleName[24015-24034]:SimpleName[24091-24110]"
    }, {
      "left" : "BoundedType",
      "right" : "BoundedType",
      "info" : "SimpleType[24046-24057]:SimpleType[24122-24133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24119-24125]:Modifier[24195-24201]"
    }, {
      "left" : "WildCardBoundedType",
      "right" : "WildCardBoundedType",
      "info" : "SimpleName[24126-24145]:SimpleName[24202-24221]"
    }, {
      "left" : "WildcardType wildcard",
      "right" : "WildcardType wildcard",
      "info" : "SingleVariableDeclaration[24146-24167]:SingleVariableDeclaration[24222-24243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24169-24220]:Block[24245-24296]"
    }, {
      "left" : "this.wildcard = wildcard;",
      "right" : "this.wildcard = wildcard;",
      "info" : "ExpressionStatement[24184-24209]:ExpressionStatement[24260-24285]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24342-24348]:Modifier[24418-24424]"
    }, {
      "left" : "Type",
      "right" : "Type",
      "info" : "SimpleType[24349-24353]:SimpleType[24425-24429]"
    }, {
      "left" : "firstBound",
      "right" : "firstBound",
      "info" : "SimpleName[24354-24364]:SimpleName[24430-24440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24367-24582]:Block[24443-24658]"
    }, {
      "left" : "Type[] lowerBounds = wildcard.getLowerBounds();",
      "right" : "Type[] lowerBounds = wildcard.getLowerBounds();",
      "info" : "VariableDeclarationStatement[24382-24429]:VariableDeclarationStatement[24458-24505]"
    }, {
      "left" : "Type[] upperBounds = wildcard.getUpperBounds();",
      "right" : "Type[] upperBounds = wildcard.getUpperBounds();",
      "info" : "VariableDeclarationStatement[24443-24490]:VariableDeclarationStatement[24519-24566]"
    }, {
      "left" : "return lowerBounds.length != 0 ? lowerBounds[0] : upperBounds[0];",
      "right" : "return lowerBounds.length != 0 ? lowerBounds[0] : upperBounds[0];",
      "info" : "ReturnStatement[24506-24571]:ReturnStatement[24582-24647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24699-24705]:Modifier[24775-24781]"
    }, {
      "left" : "Type[]",
      "right" : "Type[]",
      "info" : "ArrayType[24706-24712]:ArrayType[24782-24788]"
    }, {
      "left" : "interfaceBounds",
      "right" : "interfaceBounds",
      "info" : "SimpleName[24713-24728]:SimpleName[24789-24804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24731-24776]:Block[24807-24852]"
    }, {
      "left" : "return new Type[0];",
      "right" : "return new Type[0];",
      "info" : "ReturnStatement[24746-24765]:ReturnStatement[24822-24841]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[24788-24797]:MarkerAnnotation[24864-24873]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24807-24813]:Modifier[24883-24889]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[24814-24821]:PrimitiveType[24890-24897]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[24822-24828]:SimpleName[24898-24904]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[24829-24837]:SingleVariableDeclaration[24905-24913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24839-25044]:Block[24915-25120]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[24854-24881]:IfStatement[24930-24957]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[24869-24881]:ReturnStatement[24945-24957]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[24895-24953]:IfStatement[24971-25029]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[24940-24953]:ReturnStatement[25016-25029]"
    }, {
      "left" : "return wildcard.equals(((TypeVarBoundedType) o).typeVariable);",
      "right" : "return wildcard.equals(((TypeVarBoundedType) o).typeVariable);",
      "info" : "ReturnStatement[24969-25031]:ReturnStatement[25045-25107]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25056-25065]:MarkerAnnotation[25132-25141]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25075-25081]:Modifier[25151-25157]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[25082-25085]:PrimitiveType[25158-25161]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[25086-25094]:SimpleName[25162-25170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25097-25150]:Block[25173-25226]"
    }, {
      "left" : "return wildcard.hashCode();",
      "right" : "return wildcard.hashCode();",
      "info" : "ReturnStatement[25112-25139]:ReturnStatement[25188-25215]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[25162-25171]:MarkerAnnotation[25238-25247]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25181-25187]:Modifier[25257-25263]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[25188-25194]:SimpleType[25264-25270]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[25195-25203]:SimpleName[25271-25279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25206-25295]:Block[25282-25371]"
    }, {
      "left" : "return \"{firstBound=\" + firstBound() + \", interfaceBounds=[]}\";",
      "right" : "return \"{firstBound=\" + firstBound() + \", interfaceBounds=[]}\";",
      "info" : "ReturnStatement[25221-25284]:ReturnStatement[25297-25360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25307-25313]:Modifier[25383-25389]"
    }, {
      "left" : "WildcardType",
      "right" : "WildcardType",
      "info" : "SimpleType[25314-25326]:SimpleType[25390-25402]"
    }, {
      "left" : "wildCard",
      "right" : "wildCard",
      "info" : "SimpleName[25327-25335]:SimpleName[25403-25411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25338-25380]:Block[25414-25456]"
    }, {
      "left" : "return wildcard;",
      "right" : "return wildcard;",
      "info" : "ReturnStatement[25353-25369]:ReturnStatement[25429-25445]"
    } ]
  },
  "interFileMappings" : { }
}