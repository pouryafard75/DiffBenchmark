{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ScriptManager",
      "right" : "ScriptManager",
      "info" : "TypeDeclaration[1168-5659]:TypeDeclaration[1168-6266]"
    }, {
      "left" : "static private final Logger logger = LoggerFactory.getLogger(ScriptManager.class);",
      "right" : "static private final Logger logger = LoggerFactory.getLogger(ScriptManager.class);",
      "info" : "FieldDeclaration[1444-1526]:FieldDeclaration[1444-1526]"
    }, {
      "left" : "public HashMap<String, Script> scripts = new HashMap<String, Script>();",
      "right" : "public HashMap<String, Script> scripts = new HashMap<String, Script>();",
      "info" : "FieldDeclaration[1529-1600]:FieldDeclaration[1529-1600]"
    }, {
      "left" : "public HashMap<Rule, Script> ruleMap = new HashMap<Rule, Script>();",
      "right" : "public HashMap<Rule, Script> ruleMap = new HashMap<Rule, Script>();",
      "info" : "FieldDeclaration[1602-1669]:FieldDeclaration[1602-1669]"
    }, {
      "left" : "private ItemRegistry itemRegistry;",
      "right" : "private ItemRegistry itemRegistry;",
      "info" : "FieldDeclaration[1672-1706]:FieldDeclaration[1672-1706]"
    }, {
      "left" : "private RuleTriggerManager triggerManager;",
      "right" : "private RuleTriggerManager triggerManager;",
      "info" : "FieldDeclaration[1709-1751]:FieldDeclaration[1709-1751]"
    }, {
      "left" : "private Thread scriptUpdateWatcher;",
      "right" : "private Thread scriptUpdateWatcher;",
      "info" : "FieldDeclaration[1754-1789]:FieldDeclaration[1754-1789]"
    }, {
      "left" : "private static ScriptManager instance;",
      "right" : "private static ScriptManager instance;",
      "info" : "FieldDeclaration[1792-1830]:FieldDeclaration[1792-1830]"
    }, {
      "left" : "public ScriptManager(RuleTriggerManager triggerManager, ItemRegistry itemRegistry)",
      "right" : "public ScriptManager(RuleTriggerManager triggerManager, ItemRegistry itemRegistry)",
      "info" : "MethodDeclaration[1833-2496]:MethodDeclaration[1833-2496]"
    }, {
      "left" : "public void loadScripts(File folder)",
      "right" : "public void loadScripts(File folder)",
      "info" : "MethodDeclaration[2499-2606]:MethodDeclaration[2499-2606]"
    }, {
      "left" : "private Script loadScript(File file)",
      "right" : "private Script loadScript(File file)",
      "info" : "MethodDeclaration[2609-3311]:MethodDeclaration[2609-3673]"
    }, {
      "left" : "public static ScriptManager getInstance()",
      "right" : "public static ScriptManager getInstance()",
      "info" : "MethodDeclaration[3314-3379]:MethodDeclaration[3676-3741]"
    }, {
      "left" : "public Collection<Rule> getAllRules()",
      "right" : "public Collection<Rule> getAllRules()",
      "info" : "MethodDeclaration[3382-3451]:MethodDeclaration[3744-3813]"
    }, {
      "left" : "public ItemRegistry getItemRegistry()",
      "right" : "public ItemRegistry getItemRegistry()",
      "info" : "MethodDeclaration[3454-3519]:MethodDeclaration[3816-3881]"
    }, {
      "left" : "public void setItemRegistry(ItemRegistry itemRegistry)",
      "right" : "public void setItemRegistry(ItemRegistry itemRegistry)",
      "info" : "MethodDeclaration[3522-3617]:MethodDeclaration[3884-3979]"
    }, {
      "left" : "public synchronized void executeRules(Rule[] rules, org.openhab.core.jsr223.internal.shared.Event event)",
      "right" : "public synchronized void executeRules(Rule[] rules, org.openhab.core.jsr223.internal.shared.Event event)",
      "info" : "MethodDeclaration[3620-3808]:MethodDeclaration[3982-4170]"
    }, {
      "left" : "public synchronized void executeRules(Iterable<Rule> rules, org.openhab.core.jsr223.internal.shared.Event event)",
      "right" : "public synchronized void executeRules(Iterable<Rule> rules, org.openhab.core.jsr223.internal.shared.Event event)",
      "info" : "MethodDeclaration[3811-4007]:MethodDeclaration[4173-4369]"
    }, {
      "left" : "private File getFolder(String foldername)",
      "right" : "private File getFolder(String foldername)",
      "info" : "MethodDeclaration[4010-4362]:MethodDeclaration[4372-4724]"
    }, {
      "left" : "public Script getScript(Rule rule)",
      "right" : "public Script getScript(Rule rule)",
      "info" : "MethodDeclaration[4365-4432]:MethodDeclaration[4727-4794]"
    }, {
      "left" : "public void scriptsChanged(List<File> addedScripts, List<File> removedScripts, List<File> modifiedScripts)",
      "right" : "public void scriptsChanged(List<File> addedScripts, List<File> removedScripts, List<File> modifiedScripts)",
      "info" : "MethodDeclaration[4435-4909]:MethodDeclaration[5042-5516]"
    }, {
      "left" : "private void runStartupRules(Script script)",
      "right" : "private void runStartupRules(Script script)",
      "info" : "MethodDeclaration[4912-5359]:MethodDeclaration[5519-5966]"
    }, {
      "left" : "private void removeScript(String scriptName)",
      "right" : "private void removeScript(String scriptName)",
      "info" : "MethodDeclaration[5362-5656]:MethodDeclaration[5969-6263]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1414-1420]:Modifier[1414-1420]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1421-1426]:TYPE_DECLARATION_KIND[1421-1426]"
    }, {
      "left" : "ScriptManager",
      "right" : "ScriptManager",
      "info" : "SimpleName[1427-1440]:SimpleName[1427-1440]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1833-1839]:Modifier[1833-1839]"
    }, {
      "left" : "ScriptManager",
      "right" : "ScriptManager",
      "info" : "SimpleName[1840-1853]:SimpleName[1840-1853]"
    }, {
      "left" : "RuleTriggerManager triggerManager",
      "right" : "RuleTriggerManager triggerManager",
      "info" : "SingleVariableDeclaration[1854-1887]:SingleVariableDeclaration[1854-1887]"
    }, {
      "left" : "ItemRegistry itemRegistry",
      "right" : "ItemRegistry itemRegistry",
      "info" : "SingleVariableDeclaration[1889-1914]:SingleVariableDeclaration[1889-1914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1916-2496]:Block[1916-2496]"
    }, {
      "left" : "this.triggerManager = triggerManager;",
      "right" : "this.triggerManager = triggerManager;",
      "info" : "ExpressionStatement[1920-1957]:ExpressionStatement[1920-1957]"
    }, {
      "left" : "instance = this;",
      "right" : "instance = this;",
      "info" : "ExpressionStatement[1960-1976]:ExpressionStatement[1960-1976]"
    }, {
      "left" : "logger.info(\"Available engines:\");",
      "right" : "logger.info(\"Available engines:\");",
      "info" : "ExpressionStatement[1979-2013]:ExpressionStatement[1979-2013]"
    }, {
      "left" : "for (ScriptEngineFactory f : new ScriptEngineManager().getEngineFactories())",
      "right" : "for (ScriptEngineFactory f : new ScriptEngineManager().getEngineFactories())",
      "info" : "EnhancedForStatement[2016-2133]:EnhancedForStatement[2016-2133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2093-2133]:Block[2093-2133]"
    }, {
      "left" : "logger.info(f.getEngineName());",
      "right" : "logger.info(f.getEngineName());",
      "info" : "ExpressionStatement[2098-2129]:ExpressionStatement[2098-2129]"
    }, {
      "left" : "this.setItemRegistry(itemRegistry);",
      "right" : "this.setItemRegistry(itemRegistry);",
      "info" : "ExpressionStatement[2137-2172]:ExpressionStatement[2137-2172]"
    }, {
      "left" : "File folder = getFolder(\"scripts\");",
      "right" : "File folder = getFolder(\"scripts\");",
      "info" : "VariableDeclarationStatement[2176-2211]:VariableDeclarationStatement[2176-2211]"
    }, {
      "left" : "if (folder.exists() && folder.isDirectory())",
      "right" : "if (folder.exists() && folder.isDirectory())",
      "info" : "IfStatement[2215-2493]:IfStatement[2215-2493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2260-2398]:Block[2260-2398]"
    }, {
      "left" : "loadScripts(folder);",
      "right" : "loadScripts(folder);",
      "info" : "ExpressionStatement[2265-2285]:ExpressionStatement[2265-2285]"
    }, {
      "left" : "scriptUpdateWatcher = new Thread(new ScriptUpdateWatcher(this, folder));",
      "right" : "scriptUpdateWatcher = new Thread(new ScriptUpdateWatcher(this, folder));",
      "info" : "ExpressionStatement[2290-2362]:ExpressionStatement[2290-2362]"
    }, {
      "left" : "scriptUpdateWatcher.start();",
      "right" : "scriptUpdateWatcher.start();",
      "info" : "ExpressionStatement[2366-2394]:ExpressionStatement[2366-2394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2404-2493]:Block[2404-2493]"
    }, {
      "left" : "logger.warn(\"Script directory: jsr_scripts missing, no scripts will be added!\");",
      "right" : "logger.warn(\"Script directory: jsr_scripts missing, no scripts will be added!\");",
      "info" : "ExpressionStatement[2409-2489]:ExpressionStatement[2409-2489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2499-2505]:Modifier[2499-2505]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2506-2510]:PrimitiveType[2506-2510]"
    }, {
      "left" : "loadScripts",
      "right" : "loadScripts",
      "info" : "SimpleName[2511-2522]:SimpleName[2511-2522]"
    }, {
      "left" : "File folder",
      "right" : "File folder",
      "info" : "SingleVariableDeclaration[2523-2534]:SingleVariableDeclaration[2523-2534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2536-2606]:Block[2536-2606]"
    }, {
      "left" : "for (File file : folder.listFiles())",
      "right" : "for (File file : folder.listFiles())",
      "info" : "EnhancedForStatement[2540-2603]:EnhancedForStatement[2540-2603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2577-2603]:Block[2577-2603]"
    }, {
      "left" : "loadScript(file);",
      "right" : "loadScript(file);",
      "info" : "ExpressionStatement[2582-2599]:ExpressionStatement[2582-2599]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2609-2616]:Modifier[2609-2616]"
    }, {
      "left" : "Script",
      "right" : "Script",
      "info" : "SimpleType[2617-2623]:SimpleType[2617-2623]"
    }, {
      "left" : "loadScript",
      "right" : "loadScript",
      "info" : "SimpleName[2624-2634]:SimpleName[2624-2634]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[2635-2644]:SingleVariableDeclaration[2635-2644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2646-3311]:Block[2646-3673]"
    }, {
      "left" : "Script script = null;",
      "right" : "Script script = null;",
      "info" : "VariableDeclarationStatement[2650-2671]:VariableDeclarationStatement[2650-2671]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[2674-3290]:TryStatement[2674-3652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2678-2958]:Block[2678-3320]"
    }, {
      "left" : "script = new Script(this, file);",
      "right" : "script = new Script(this, file);",
      "info" : "ExpressionStatement[2683-2715]:ExpressionStatement[2844-2876]"
    }, {
      "left" : "scripts.put(file.getName(), script);",
      "right" : "scripts.put(file.getName(), script);",
      "info" : "ExpressionStatement[2719-2755]:ExpressionStatement[3070-3106]"
    }, {
      "left" : "List<Rule> newRules = script.getRules();",
      "right" : "List<Rule> newRules = script.getRules();",
      "info" : "VariableDeclarationStatement[2759-2799]:VariableDeclarationStatement[3111-3151]"
    }, {
      "left" : "for (Rule rule : newRules)",
      "right" : "for (Rule rule : newRules)",
      "info" : "EnhancedForStatement[2803-2867]:EnhancedForStatement[3156-3222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2830-2867]:Block[3183-3222]"
    }, {
      "left" : "ruleMap.put(rule, script);",
      "right" : "ruleMap.put(rule, script);",
      "info" : "ExpressionStatement[2836-2862]:ExpressionStatement[3190-3216]"
    }, {
      "left" : "triggerManager.addRuleModel(newRules);",
      "right" : "triggerManager.addRuleModel(newRules);",
      "info" : "ExpressionStatement[2915-2953]:ExpressionStatement[3272-3310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2990-3068]:Block[3352-3430]"
    }, {
      "left" : "logger.error(\"Script file misses mandotary function: getRules()\", e);",
      "right" : "logger.error(\"Script file misses mandotary function: getRules()\", e);",
      "info" : "ExpressionStatement[2995-3064]:ExpressionStatement[3357-3426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3101-3151]:Block[3463-3513]"
    }, {
      "left" : "logger.error(\"script file not found\", e);",
      "right" : "logger.error(\"script file not found\", e);",
      "info" : "ExpressionStatement[3106-3147]:ExpressionStatement[3468-3509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3178-3223]:Block[3540-3585]"
    }, {
      "left" : "logger.error(\"script exception\", e);",
      "right" : "logger.error(\"script exception\", e);",
      "info" : "ExpressionStatement[3183-3219]:ExpressionStatement[3545-3581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3244-3290]:Block[3606-3652]"
    }, {
      "left" : "logger.error(\"unknown exception\", e);",
      "right" : "logger.error(\"unknown exception\", e);",
      "info" : "ExpressionStatement[3249-3286]:ExpressionStatement[3611-3648]"
    }, {
      "left" : "return script;",
      "right" : "return script;",
      "info" : "ReturnStatement[3294-3308]:ReturnStatement[3656-3670]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3314-3320]:Modifier[3676-3682]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3321-3327]:Modifier[3683-3689]"
    }, {
      "left" : "ScriptManager",
      "right" : "ScriptManager",
      "info" : "SimpleType[3328-3341]:SimpleType[3690-3703]"
    }, {
      "left" : "getInstance",
      "right" : "getInstance",
      "info" : "SimpleName[3342-3353]:SimpleName[3704-3715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3356-3379]:Block[3718-3741]"
    }, {
      "left" : "return instance;",
      "right" : "return instance;",
      "info" : "ReturnStatement[3360-3376]:ReturnStatement[3722-3738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3382-3388]:Modifier[3744-3750]"
    }, {
      "left" : "Collection<Rule>",
      "right" : "Collection<Rule>",
      "info" : "ParameterizedType[3389-3405]:ParameterizedType[3751-3767]"
    }, {
      "left" : "getAllRules",
      "right" : "getAllRules",
      "info" : "SimpleName[3406-3417]:SimpleName[3768-3779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3420-3451]:Block[3782-3813]"
    }, {
      "left" : "return ruleMap.keySet();",
      "right" : "return ruleMap.keySet();",
      "info" : "ReturnStatement[3424-3448]:ReturnStatement[3786-3810]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3454-3460]:Modifier[3816-3822]"
    }, {
      "left" : "ItemRegistry",
      "right" : "ItemRegistry",
      "info" : "SimpleType[3461-3473]:SimpleType[3823-3835]"
    }, {
      "left" : "getItemRegistry",
      "right" : "getItemRegistry",
      "info" : "SimpleName[3474-3489]:SimpleName[3836-3851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3492-3519]:Block[3854-3881]"
    }, {
      "left" : "return itemRegistry;",
      "right" : "return itemRegistry;",
      "info" : "ReturnStatement[3496-3516]:ReturnStatement[3858-3878]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3522-3528]:Modifier[3884-3890]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3529-3533]:PrimitiveType[3891-3895]"
    }, {
      "left" : "setItemRegistry",
      "right" : "setItemRegistry",
      "info" : "SimpleName[3534-3549]:SimpleName[3896-3911]"
    }, {
      "left" : "ItemRegistry itemRegistry",
      "right" : "ItemRegistry itemRegistry",
      "info" : "SingleVariableDeclaration[3550-3575]:SingleVariableDeclaration[3912-3937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3577-3617]:Block[3939-3979]"
    }, {
      "left" : "this.itemRegistry = itemRegistry;",
      "right" : "this.itemRegistry = itemRegistry;",
      "info" : "ExpressionStatement[3581-3614]:ExpressionStatement[3943-3976]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3620-3626]:Modifier[3982-3988]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[3627-3639]:Modifier[3989-4001]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3640-3644]:PrimitiveType[4002-4006]"
    }, {
      "left" : "executeRules",
      "right" : "executeRules",
      "info" : "SimpleName[3645-3657]:SimpleName[4007-4019]"
    }, {
      "left" : "Rule[] rules",
      "right" : "Rule[] rules",
      "info" : "SingleVariableDeclaration[3658-3670]:SingleVariableDeclaration[4020-4032]"
    }, {
      "left" : "org.openhab.core.jsr223.internal.shared.Event event",
      "right" : "org.openhab.core.jsr223.internal.shared.Event event",
      "info" : "SingleVariableDeclaration[3672-3723]:SingleVariableDeclaration[4034-4085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3725-3808]:Block[4087-4170]"
    }, {
      "left" : "for (Rule rule : rules)",
      "right" : "for (Rule rule : rules)",
      "info" : "EnhancedForStatement[3729-3805]:EnhancedForStatement[4091-4167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3753-3805]:Block[4115-4167]"
    }, {
      "left" : "ruleMap.get(rule).executeRule(rule, event);",
      "right" : "ruleMap.get(rule).executeRule(rule, event);",
      "info" : "ExpressionStatement[3758-3801]:ExpressionStatement[4120-4163]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3811-3817]:Modifier[4173-4179]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[3818-3830]:Modifier[4180-4192]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3831-3835]:PrimitiveType[4193-4197]"
    }, {
      "left" : "executeRules",
      "right" : "executeRules",
      "info" : "SimpleName[3836-3848]:SimpleName[4198-4210]"
    }, {
      "left" : "Iterable<Rule> rules",
      "right" : "Iterable<Rule> rules",
      "info" : "SingleVariableDeclaration[3849-3869]:SingleVariableDeclaration[4211-4231]"
    }, {
      "left" : "org.openhab.core.jsr223.internal.shared.Event event",
      "right" : "org.openhab.core.jsr223.internal.shared.Event event",
      "info" : "SingleVariableDeclaration[3871-3922]:SingleVariableDeclaration[4233-4284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3924-4007]:Block[4286-4369]"
    }, {
      "left" : "for (Rule rule : rules)",
      "right" : "for (Rule rule : rules)",
      "info" : "EnhancedForStatement[3928-4004]:EnhancedForStatement[4290-4366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3952-4004]:Block[4314-4366]"
    }, {
      "left" : "ruleMap.get(rule).executeRule(rule, event);",
      "right" : "ruleMap.get(rule).executeRule(rule, event);",
      "info" : "ExpressionStatement[3957-4000]:ExpressionStatement[4319-4362]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4207-4214]:Modifier[4569-4576]"
    }, {
      "left" : "File",
      "right" : "File",
      "info" : "SimpleType[4215-4219]:SimpleType[4577-4581]"
    }, {
      "left" : "getFolder",
      "right" : "getFolder",
      "info" : "SimpleName[4220-4229]:SimpleName[4582-4591]"
    }, {
      "left" : "String foldername",
      "right" : "String foldername",
      "info" : "SingleVariableDeclaration[4230-4247]:SingleVariableDeclaration[4592-4609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4249-4362]:Block[4611-4724]"
    }, {
      "left" : "File folder = new File(ConfigDispatcher.getConfigFolder() + File.separator + foldername);",
      "right" : "File folder = new File(ConfigDispatcher.getConfigFolder() + File.separator + foldername);",
      "info" : "VariableDeclarationStatement[4253-4342]:VariableDeclarationStatement[4615-4704]"
    }, {
      "left" : "return folder;",
      "right" : "return folder;",
      "info" : "ReturnStatement[4345-4359]:ReturnStatement[4707-4721]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4365-4371]:Modifier[4727-4733]"
    }, {
      "left" : "Script",
      "right" : "Script",
      "info" : "SimpleType[4372-4378]:SimpleType[4734-4740]"
    }, {
      "left" : "getScript",
      "right" : "getScript",
      "info" : "SimpleName[4379-4388]:SimpleName[4741-4750]"
    }, {
      "left" : "Rule rule",
      "right" : "Rule rule",
      "info" : "SingleVariableDeclaration[4389-4398]:SingleVariableDeclaration[4751-4760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4400-4432]:Block[4762-4794]"
    }, {
      "left" : "return ruleMap.get(rule);",
      "right" : "return ruleMap.get(rule);",
      "info" : "ReturnStatement[4404-4429]:ReturnStatement[4766-4791]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4435-4441]:Modifier[5042-5048]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4442-4446]:PrimitiveType[5049-5053]"
    }, {
      "left" : "scriptsChanged",
      "right" : "scriptsChanged",
      "info" : "SimpleName[4447-4461]:SimpleName[5054-5068]"
    }, {
      "left" : "List<File> addedScripts",
      "right" : "List<File> addedScripts",
      "info" : "SingleVariableDeclaration[4462-4485]:SingleVariableDeclaration[5069-5092]"
    }, {
      "left" : "List<File> removedScripts",
      "right" : "List<File> removedScripts",
      "info" : "SingleVariableDeclaration[4487-4512]:SingleVariableDeclaration[5094-5119]"
    }, {
      "left" : "List<File> modifiedScripts",
      "right" : "List<File> modifiedScripts",
      "info" : "SingleVariableDeclaration[4514-4540]:SingleVariableDeclaration[5121-5147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4542-4909]:Block[5149-5516]"
    }, {
      "left" : "for (File scriptFile : removedScripts)",
      "right" : "for (File scriptFile : removedScripts)",
      "info" : "EnhancedForStatement[4547-4630]:EnhancedForStatement[5154-5237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4586-4630]:Block[5193-5237]"
    }, {
      "left" : "removeScript(scriptFile.getName());",
      "right" : "removeScript(scriptFile.getName());",
      "info" : "ExpressionStatement[4591-4626]:ExpressionStatement[5198-5233]"
    }, {
      "left" : "for (File scriptFile : addedScripts)",
      "right" : "for (File scriptFile : addedScripts)",
      "info" : "EnhancedForStatement[4634-4747]:EnhancedForStatement[5241-5354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4671-4747]:Block[5278-5354]"
    }, {
      "left" : "Script script = loadScript(scriptFile);",
      "right" : "Script script = loadScript(scriptFile);",
      "info" : "VariableDeclarationStatement[4676-4715]:VariableDeclarationStatement[5283-5322]"
    }, {
      "left" : "runStartupRules(script);",
      "right" : "runStartupRules(script);",
      "info" : "ExpressionStatement[4719-4743]:ExpressionStatement[5326-5350]"
    }, {
      "left" : "for (File scriptFile : modifiedScripts)",
      "right" : "for (File scriptFile : modifiedScripts)",
      "info" : "EnhancedForStatement[4751-4906]:EnhancedForStatement[5358-5513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4791-4906]:Block[5398-5513]"
    }, {
      "left" : "removeScript(scriptFile.getName());",
      "right" : "removeScript(scriptFile.getName());",
      "info" : "ExpressionStatement[4796-4831]:ExpressionStatement[5403-5438]"
    }, {
      "left" : "Script script = loadScript(scriptFile);",
      "right" : "Script script = loadScript(scriptFile);",
      "info" : "VariableDeclarationStatement[4835-4874]:VariableDeclarationStatement[5442-5481]"
    }, {
      "left" : "runStartupRules(script);",
      "right" : "runStartupRules(script);",
      "info" : "ExpressionStatement[4878-4902]:ExpressionStatement[5485-5509]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4912-4919]:Modifier[5519-5526]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4920-4924]:PrimitiveType[5527-5531]"
    }, {
      "left" : "runStartupRules",
      "right" : "runStartupRules",
      "info" : "SimpleName[4925-4940]:SimpleName[5532-5547]"
    }, {
      "left" : "Script script",
      "right" : "Script script",
      "info" : "SingleVariableDeclaration[4941-4954]:SingleVariableDeclaration[5548-5561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4956-5359]:Block[5563-5966]"
    }, {
      "left" : "if (script != null)",
      "right" : "if (script != null)",
      "info" : "IfStatement[4960-5356]:IfStatement[5567-5963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4980-5356]:Block[5587-5963]"
    }, {
      "left" : "ArrayList<Rule> toTrigger = new ArrayList<Rule>();",
      "right" : "ArrayList<Rule> toTrigger = new ArrayList<Rule>();",
      "info" : "VariableDeclarationStatement[4985-5035]:VariableDeclarationStatement[5592-5642]"
    }, {
      "left" : "for (Rule rule : script.getRules())",
      "right" : "for (Rule rule : script.getRules())",
      "info" : "EnhancedForStatement[5039-5238]:EnhancedForStatement[5646-5845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5075-5238]:Block[5682-5845]"
    }, {
      "left" : "for (EventTrigger trigger : rule.getEventTrigger())",
      "right" : "for (EventTrigger trigger : rule.getEventTrigger())",
      "info" : "EnhancedForStatement[5081-5233]:EnhancedForStatement[5688-5840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5133-5233]:Block[5740-5840]"
    }, {
      "left" : "if (trigger instanceof StartupTrigger)",
      "right" : "if (trigger instanceof StartupTrigger)",
      "info" : "IfStatement[5140-5227]:IfStatement[5747-5834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5179-5227]:Block[5786-5834]"
    }, {
      "left" : "toTrigger.add(rule);",
      "right" : "toTrigger.add(rule);",
      "info" : "ExpressionStatement[5187-5207]:ExpressionStatement[5794-5814]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5214-5220]:BreakStatement[5821-5827]"
    }, {
      "left" : "if (toTrigger.size() > 0)",
      "right" : "if (toTrigger.size() > 0)",
      "info" : "IfStatement[5242-5352]:IfStatement[5849-5959]"
    }, {
      "left" : "executeRules(toTrigger, new Event(TriggerType.STARTUP, null, null, null, null));",
      "right" : "executeRules(toTrigger, new Event(TriggerType.STARTUP, null, null, null, null));",
      "info" : "ExpressionStatement[5272-5352]:ExpressionStatement[5879-5959]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5362-5369]:Modifier[5969-5976]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5370-5374]:PrimitiveType[5977-5981]"
    }, {
      "left" : "removeScript",
      "right" : "removeScript",
      "info" : "SimpleName[5375-5387]:SimpleName[5982-5994]"
    }, {
      "left" : "String scriptName",
      "right" : "String scriptName",
      "info" : "SingleVariableDeclaration[5388-5405]:SingleVariableDeclaration[5995-6012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5407-5656]:Block[6014-6263]"
    }, {
      "left" : "if(scripts.containsKey(scriptName))",
      "right" : "if(scripts.containsKey(scriptName))",
      "info" : "IfStatement[5411-5653]:IfStatement[6018-6260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5447-5653]:Block[6054-6260]"
    }, {
      "left" : "Script script = scripts.remove(scriptName);",
      "right" : "Script script = scripts.remove(scriptName);",
      "info" : "VariableDeclarationStatement[5452-5495]:VariableDeclarationStatement[6059-6102]"
    }, {
      "left" : "List<Rule> allRules = script.getRules();",
      "right" : "List<Rule> allRules = script.getRules();",
      "info" : "VariableDeclarationStatement[5500-5540]:VariableDeclarationStatement[6107-6147]"
    }, {
      "left" : "triggerManager.removeRuleModel(allRules);",
      "right" : "triggerManager.removeRuleModel(allRules);",
      "info" : "ExpressionStatement[5545-5586]:ExpressionStatement[6152-6193]"
    }, {
      "left" : "for (Rule rule : allRules)",
      "right" : "for (Rule rule : allRules)",
      "info" : "EnhancedForStatement[5590-5649]:EnhancedForStatement[6197-6256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5617-5649]:Block[6224-6256]"
    }, {
      "left" : "ruleMap.remove(rule);",
      "right" : "ruleMap.remove(rule);",
      "info" : "ExpressionStatement[5623-5644]:ExpressionStatement[6230-6251]"
    } ]
  },
  "interFileMappings" : { }
}