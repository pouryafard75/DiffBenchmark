{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final DateTimePrinter iPrinter;",
      "right" : "private final DateTimePrinter iPrinter;",
      "info" : "FieldDeclaration[3486-3586]:FieldDeclaration[3486-3586]"
    }, {
      "left" : "private final DateTimeParser iParser;",
      "right" : "private final DateTimeParser iParser;",
      "info" : "FieldDeclaration[3591-3688]:FieldDeclaration[3591-3688]"
    }, {
      "left" : "private final Locale iLocale;",
      "right" : "private final Locale iLocale;",
      "info" : "FieldDeclaration[3693-3777]:FieldDeclaration[3693-3777]"
    }, {
      "left" : "private final boolean iOffsetParsed;",
      "right" : "private final boolean iOffsetParsed;",
      "info" : "FieldDeclaration[3782-3859]:FieldDeclaration[3782-3859]"
    }, {
      "left" : "private final Chronology iChrono;",
      "right" : "private final Chronology iChrono;",
      "info" : "FieldDeclaration[3864-3946]:FieldDeclaration[3864-3946]"
    }, {
      "left" : "private final DateTimeZone iZone;",
      "right" : "private final DateTimeZone iZone;",
      "info" : "FieldDeclaration[3951-4027]:FieldDeclaration[3951-4027]"
    }, {
      "left" : "private final Integer iPivotYear;",
      "right" : "private final Integer iPivotYear;",
      "info" : "FieldDeclaration[4032-4126]:FieldDeclaration[4032-4126]"
    }, {
      "left" : "private final int iDefaultYear;",
      "right" : "private final int iDefaultYear;",
      "info" : "FieldDeclaration[4131-4226]:FieldDeclaration[4131-4226]"
    }, {
      "left" : "public DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser)",
      "right" : "public DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser)",
      "info" : "MethodDeclaration[4232-4804]:MethodDeclaration[4232-4804]"
    }, {
      "left" : "private DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser,\n            Locale locale, boolean offsetParsed,\n            Chronology chrono, DateTimeZone zone,\n            Integer pivotYear, int defaultYear)",
      "right" : "private DateTimeFormatter(\n            DateTimePrinter printer, DateTimeParser parser,\n            Locale locale, boolean offsetParsed,\n            Chronology chrono, DateTimeZone zone,\n            Integer pivotYear, int defaultYear)",
      "info" : "MethodDeclaration[4810-5338]:MethodDeclaration[4810-5338]"
    }, {
      "left" : "public boolean isPrinter()",
      "right" : "public boolean isPrinter()",
      "info" : "MethodDeclaration[5422-5602]:MethodDeclaration[5422-5602]"
    }, {
      "left" : "public DateTimePrinter getPrinter()",
      "right" : "public DateTimePrinter getPrinter()",
      "info" : "MethodDeclaration[5608-5849]:MethodDeclaration[5608-5849]"
    }, {
      "left" : "public boolean isParser()",
      "right" : "public boolean isParser()",
      "info" : "MethodDeclaration[5855-6031]:MethodDeclaration[5855-6031]"
    }, {
      "left" : "public DateTimeParser getParser()",
      "right" : "public DateTimeParser getParser()",
      "info" : "MethodDeclaration[6037-6271]:MethodDeclaration[6037-6271]"
    }, {
      "left" : "public DateTimeFormatter withLocale(Locale locale)",
      "right" : "public DateTimeFormatter withLocale(Locale locale)",
      "info" : "MethodDeclaration[6355-7079]:MethodDeclaration[6355-7079]"
    }, {
      "left" : "public Locale getLocale()",
      "right" : "public Locale getLocale()",
      "info" : "MethodDeclaration[7085-7332]:MethodDeclaration[7085-7332]"
    }, {
      "left" : "public DateTimeFormatter withOffsetParsed()",
      "right" : "public DateTimeFormatter withOffsetParsed()",
      "info" : "MethodDeclaration[7416-8295]:MethodDeclaration[7416-8295]"
    }, {
      "left" : "public boolean isOffsetParsed()",
      "right" : "public boolean isOffsetParsed()",
      "info" : "MethodDeclaration[8301-8564]:MethodDeclaration[8301-8564]"
    }, {
      "left" : "public DateTimeFormatter withChronology(Chronology chrono)",
      "right" : "public DateTimeFormatter withChronology(Chronology chrono)",
      "info" : "MethodDeclaration[8648-9611]:MethodDeclaration[8648-9611]"
    }, {
      "left" : "public Chronology getChronology()",
      "right" : "public Chronology getChronology()",
      "info" : "MethodDeclaration[9617-9808]:MethodDeclaration[9617-9808]"
    }, {
      "left" : "public Chronology getChronolgy()",
      "right" : "public Chronology getChronolgy()",
      "info" : "MethodDeclaration[9814-10080]:MethodDeclaration[9814-10080]"
    }, {
      "left" : "public DateTimeFormatter withZoneUTC()",
      "right" : "public DateTimeFormatter withZoneUTC()",
      "info" : "MethodDeclaration[10164-10843]:MethodDeclaration[10164-10843]"
    }, {
      "left" : "public DateTimeFormatter withZone(DateTimeZone zone)",
      "right" : "public DateTimeFormatter withZone(DateTimeZone zone)",
      "info" : "MethodDeclaration[10849-11773]:MethodDeclaration[10849-11773]"
    }, {
      "left" : "public DateTimeZone getZone()",
      "right" : "public DateTimeZone getZone()",
      "info" : "MethodDeclaration[11779-11952]:MethodDeclaration[11779-11952]"
    }, {
      "left" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
      "right" : "public DateTimeFormatter withPivotYear(Integer pivotYear)",
      "info" : "MethodDeclaration[12036-13756]:MethodDeclaration[12036-13756]"
    }, {
      "left" : "public DateTimeFormatter withPivotYear(int pivotYear)",
      "right" : "public DateTimeFormatter withPivotYear(int pivotYear)",
      "info" : "MethodDeclaration[13762-15244]:MethodDeclaration[13762-15244]"
    }, {
      "left" : "public Integer getPivotYear()",
      "right" : "public Integer getPivotYear()",
      "info" : "MethodDeclaration[15250-15455]:MethodDeclaration[15250-15455]"
    }, {
      "left" : "public DateTimeFormatter withDefaultYear(int defaultYear)",
      "right" : "public DateTimeFormatter withDefaultYear(int defaultYear)",
      "info" : "MethodDeclaration[15539-16463]:MethodDeclaration[15539-16463]"
    }, {
      "left" : "public int getDefaultYear()",
      "right" : "public int getDefaultYear()",
      "info" : "MethodDeclaration[16469-16690]:MethodDeclaration[16469-16690]"
    }, {
      "left" : "public void printTo(StringBuffer buf, ReadableInstant instant)",
      "right" : "public void printTo(StringBuffer buf, ReadableInstant instant)",
      "info" : "MethodDeclaration[16774-17235]:MethodDeclaration[16774-17235]"
    }, {
      "left" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
      "right" : "public void printTo(Writer out, ReadableInstant instant) throws IOException",
      "info" : "MethodDeclaration[17241-17715]:MethodDeclaration[17241-17715]"
    }, {
      "left" : "public void printTo(Appendable appendable, ReadableInstant instant) throws IOException",
      "right" : "public void printTo(Appendable appendable, ReadableInstant instant) throws IOException",
      "info" : "MethodDeclaration[17721-18100]:MethodDeclaration[17721-18100]"
    }, {
      "left" : "public void printTo(StringBuffer buf, long instant)",
      "right" : "public void printTo(StringBuffer buf, long instant)",
      "info" : "MethodDeclaration[18184-18546]:MethodDeclaration[18184-18546]"
    }, {
      "left" : "public void printTo(Writer out, long instant) throws IOException",
      "right" : "public void printTo(Writer out, long instant) throws IOException",
      "info" : "MethodDeclaration[18552-18927]:MethodDeclaration[18552-18927]"
    }, {
      "left" : "public void printTo(Appendable appendable, long instant) throws IOException",
      "right" : "public void printTo(Appendable appendable, long instant) throws IOException",
      "info" : "MethodDeclaration[18933-19350]:MethodDeclaration[18933-19350]"
    }, {
      "left" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
      "right" : "public void printTo(StringBuffer buf, ReadablePartial partial)",
      "info" : "MethodDeclaration[19434-19984]:MethodDeclaration[19434-19984]"
    }, {
      "left" : "public void printTo(Writer out, ReadablePartial partial) throws IOException",
      "right" : "public void printTo(Writer out, ReadablePartial partial) throws IOException",
      "info" : "MethodDeclaration[19990-20553]:MethodDeclaration[19990-20553]"
    }, {
      "left" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
      "right" : "public void printTo(Appendable appendable, ReadablePartial partial) throws IOException",
      "info" : "MethodDeclaration[20559-20980]:MethodDeclaration[20559-20980]"
    }, {
      "left" : "public String print(ReadableInstant instant)",
      "right" : "public String print(ReadableInstant instant)",
      "info" : "MethodDeclaration[21064-21596]:MethodDeclaration[21064-21596]"
    }, {
      "left" : "public String print(long instant)",
      "right" : "public String print(long instant)",
      "info" : "MethodDeclaration[21602-22124]:MethodDeclaration[21602-22124]"
    }, {
      "left" : "public String print(ReadablePartial partial)",
      "right" : "public String print(ReadablePartial partial)",
      "info" : "MethodDeclaration[22130-22582]:MethodDeclaration[22130-22582]"
    }, {
      "left" : "private void printTo(StringBuffer buf, long instant, Chronology chrono)",
      "right" : "private void printTo(StringBuffer buf, long instant, Chronology chrono)",
      "info" : "MethodDeclaration[22588-23386]:MethodDeclaration[22588-23386]"
    }, {
      "left" : "private void printTo(Writer buf, long instant, Chronology chrono) throws IOException",
      "right" : "private void printTo(Writer buf, long instant, Chronology chrono) throws IOException",
      "info" : "MethodDeclaration[23392-24203]:MethodDeclaration[23392-24203]"
    }, {
      "left" : "private DateTimePrinter requirePrinter()",
      "right" : "private DateTimePrinter requirePrinter()",
      "info" : "MethodDeclaration[24209-24588]:MethodDeclaration[24209-24588]"
    }, {
      "left" : "public long parseMillis(String text)",
      "right" : "public long parseMillis(String text)",
      "info" : "MethodDeclaration[27840-29021]:MethodDeclaration[27870-29051]"
    }, {
      "left" : "public LocalDate parseLocalDate(String text)",
      "right" : "public LocalDate parseLocalDate(String text)",
      "info" : "MethodDeclaration[29027-29808]:MethodDeclaration[29057-29838]"
    }, {
      "left" : "public LocalTime parseLocalTime(String text)",
      "right" : "public LocalTime parseLocalTime(String text)",
      "info" : "MethodDeclaration[29814-30595]:MethodDeclaration[29844-30625]"
    }, {
      "left" : "public LocalDateTime parseLocalDateTime(String text)",
      "right" : "public LocalDateTime parseLocalDateTime(String text)",
      "info" : "MethodDeclaration[30601-32476]:MethodDeclaration[30631-32506]"
    }, {
      "left" : "public DateTime parseDateTime(String text)",
      "right" : "public DateTime parseDateTime(String text)",
      "info" : "MethodDeclaration[32482-34581]:MethodDeclaration[32512-34611]"
    }, {
      "left" : "public MutableDateTime parseMutableDateTime(String text)",
      "right" : "public MutableDateTime parseMutableDateTime(String text)",
      "info" : "MethodDeclaration[34587-36715]:MethodDeclaration[34617-36745]"
    }, {
      "left" : "private DateTimeParser requireParser()",
      "right" : "private DateTimeParser requireParser()",
      "info" : "MethodDeclaration[36721-37090]:MethodDeclaration[36751-37120]"
    }, {
      "left" : "private Chronology selectChronology(Chronology chrono)",
      "right" : "private Chronology selectChronology(Chronology chrono)",
      "info" : "MethodDeclaration[37174-37623]:MethodDeclaration[37204-37653]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4569-4804]:Block[4569-4804]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4579-4587]:SuperConstructorInvocation[4579-4587]"
    }, {
      "left" : "iPrinter = printer;",
      "right" : "iPrinter = printer;",
      "info" : "ExpressionStatement[4596-4615]:ExpressionStatement[4596-4615]"
    }, {
      "left" : "iParser = parser;",
      "right" : "iParser = parser;",
      "info" : "ExpressionStatement[4624-4641]:ExpressionStatement[4624-4641]"
    }, {
      "left" : "iLocale = null;",
      "right" : "iLocale = null;",
      "info" : "ExpressionStatement[4650-4665]:ExpressionStatement[4650-4665]"
    }, {
      "left" : "iOffsetParsed = false;",
      "right" : "iOffsetParsed = false;",
      "info" : "ExpressionStatement[4674-4696]:ExpressionStatement[4674-4696]"
    }, {
      "left" : "iChrono = null;",
      "right" : "iChrono = null;",
      "info" : "ExpressionStatement[4705-4720]:ExpressionStatement[4705-4720]"
    }, {
      "left" : "iZone = null;",
      "right" : "iZone = null;",
      "info" : "ExpressionStatement[4729-4742]:ExpressionStatement[4729-4742]"
    }, {
      "left" : "iPivotYear = null;",
      "right" : "iPivotYear = null;",
      "info" : "ExpressionStatement[4751-4769]:ExpressionStatement[4751-4769]"
    }, {
      "left" : "iDefaultYear = 2000;",
      "right" : "iDefaultYear = 2000;",
      "info" : "ExpressionStatement[4778-4798]:ExpressionStatement[4778-4798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5080-5338]:Block[5080-5338]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[5090-5098]:SuperConstructorInvocation[5090-5098]"
    }, {
      "left" : "iPrinter = printer;",
      "right" : "iPrinter = printer;",
      "info" : "ExpressionStatement[5107-5126]:ExpressionStatement[5107-5126]"
    }, {
      "left" : "iParser = parser;",
      "right" : "iParser = parser;",
      "info" : "ExpressionStatement[5135-5152]:ExpressionStatement[5135-5152]"
    }, {
      "left" : "iLocale = locale;",
      "right" : "iLocale = locale;",
      "info" : "ExpressionStatement[5161-5178]:ExpressionStatement[5161-5178]"
    }, {
      "left" : "iOffsetParsed = offsetParsed;",
      "right" : "iOffsetParsed = offsetParsed;",
      "info" : "ExpressionStatement[5187-5216]:ExpressionStatement[5187-5216]"
    }, {
      "left" : "iChrono = chrono;",
      "right" : "iChrono = chrono;",
      "info" : "ExpressionStatement[5225-5242]:ExpressionStatement[5225-5242]"
    }, {
      "left" : "iZone = zone;",
      "right" : "iZone = zone;",
      "info" : "ExpressionStatement[5251-5264]:ExpressionStatement[5251-5264]"
    }, {
      "left" : "iPivotYear = pivotYear;",
      "right" : "iPivotYear = pivotYear;",
      "info" : "ExpressionStatement[5273-5296]:ExpressionStatement[5273-5296]"
    }, {
      "left" : "iDefaultYear = defaultYear;",
      "right" : "iDefaultYear = defaultYear;",
      "info" : "ExpressionStatement[5305-5332]:ExpressionStatement[5305-5332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5560-5602]:Block[5560-5602]"
    }, {
      "left" : "return (iPrinter != null);",
      "right" : "return (iPrinter != null);",
      "info" : "ReturnStatement[5570-5596]:ReturnStatement[5570-5596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5817-5849]:Block[5817-5849]"
    }, {
      "left" : "return iPrinter;",
      "right" : "return iPrinter;",
      "info" : "ReturnStatement[5827-5843]:ReturnStatement[5827-5843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5990-6031]:Block[5990-6031]"
    }, {
      "left" : "return (iParser != null);",
      "right" : "return (iParser != null);",
      "info" : "ReturnStatement[6000-6025]:ReturnStatement[6000-6025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6240-6271]:Block[6240-6271]"
    }, {
      "left" : "return iParser;",
      "right" : "return iParser;",
      "info" : "ReturnStatement[6250-6265]:ReturnStatement[6250-6265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6812-7079]:Block[6812-7079]"
    }, {
      "left" : "if (locale == getLocale() || (locale != null && locale.equals(getLocale())))",
      "right" : "if (locale == getLocale() || (locale != null && locale.equals(getLocale())))",
      "info" : "IfStatement[6822-6935]:IfStatement[6822-6935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6899-6935]:Block[6899-6935]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6913-6925]:ReturnStatement[6913-6925]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, locale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, locale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[6944-7073]:ReturnStatement[6944-7073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7301-7332]:Block[7301-7332]"
    }, {
      "left" : "return iLocale;",
      "right" : "return iLocale;",
      "info" : "ReturnStatement[7311-7326]:ReturnStatement[7311-7326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8087-8295]:Block[8087-8295]"
    }, {
      "left" : "if (iOffsetParsed == true)",
      "right" : "if (iOffsetParsed == true)",
      "info" : "IfStatement[8097-8160]:IfStatement[8097-8160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8124-8160]:Block[8124-8160]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8138-8150]:ReturnStatement[8138-8150]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                true, iChrono, null, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                true, iChrono, null, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[8169-8289]:ReturnStatement[8169-8289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8527-8564]:Block[8527-8564]"
    }, {
      "left" : "return iOffsetParsed;",
      "right" : "return iOffsetParsed;",
      "info" : "ReturnStatement[8537-8558]:ReturnStatement[8537-8558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9398-9611]:Block[9398-9611]"
    }, {
      "left" : "if (iChrono == chrono)",
      "right" : "if (iChrono == chrono)",
      "info" : "IfStatement[9408-9467]:IfStatement[9408-9467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9431-9467]:Block[9431-9467]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[9445-9457]:ReturnStatement[9445-9457]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, chrono, iZone, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, chrono, iZone, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[9476-9605]:ReturnStatement[9476-9605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9777-9808]:Block[9777-9808]"
    }, {
      "left" : "return iChrono;",
      "right" : "return iChrono;",
      "info" : "ReturnStatement[9787-9802]:ReturnStatement[9787-9802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10049-10080]:Block[10049-10080]"
    }, {
      "left" : "return iChrono;",
      "right" : "return iChrono;",
      "info" : "ReturnStatement[10059-10074]:ReturnStatement[10059-10074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10793-10843]:Block[10793-10843]"
    }, {
      "left" : "return withZone(DateTimeZone.UTC);",
      "right" : "return withZone(DateTimeZone.UTC);",
      "info" : "ReturnStatement[10803-10837]:ReturnStatement[10803-10837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11572-11773]:Block[11572-11773]"
    }, {
      "left" : "if (iZone == zone)",
      "right" : "if (iZone == zone)",
      "info" : "IfStatement[11582-11637]:IfStatement[11582-11637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11601-11637]:Block[11601-11637]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[11615-11627]:ReturnStatement[11615-11627]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                false, iChrono, zone, iPivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                false, iChrono, zone, iPivotYear, iDefaultYear);",
      "info" : "ReturnStatement[11646-11767]:ReturnStatement[11646-11767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11923-11952]:Block[11923-11952]"
    }, {
      "left" : "return iZone;",
      "right" : "return iZone;",
      "info" : "ReturnStatement[11933-11946]:ReturnStatement[11933-11946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13481-13756]:Block[13481-13756]"
    }, {
      "left" : "if (iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)))",
      "right" : "if (iPivotYear == pivotYear || (iPivotYear != null && iPivotYear.equals(pivotYear)))",
      "info" : "IfStatement[13491-13612]:IfStatement[13491-13612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13576-13612]:Block[13576-13612]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13590-13602]:ReturnStatement[13590-13602]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, pivotYear, iDefaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, pivotYear, iDefaultYear);",
      "info" : "ReturnStatement[13621-13750]:ReturnStatement[13621-13750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15179-15244]:Block[15179-15244]"
    }, {
      "left" : "return withPivotYear(Integer.valueOf(pivotYear));",
      "right" : "return withPivotYear(Integer.valueOf(pivotYear));",
      "info" : "ReturnStatement[15189-15238]:ReturnStatement[15189-15238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15423-15455]:Block[15423-15455]"
    }, {
      "left" : "return iPivotYear;",
      "right" : "return iPivotYear;",
      "info" : "ReturnStatement[15431-15449]:ReturnStatement[15431-15449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16318-16463]:Block[16318-16463]"
    }, {
      "left" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, defaultYear);",
      "right" : "return new DateTimeFormatter(iPrinter, iParser, iLocale,\n                iOffsetParsed, iChrono, iZone, iPivotYear, defaultYear);",
      "info" : "ReturnStatement[16328-16457]:ReturnStatement[16328-16457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16656-16690]:Block[16656-16690]"
    }, {
      "left" : "return iDefaultYear;",
      "right" : "return iDefaultYear;",
      "info" : "ReturnStatement[16664-16684]:ReturnStatement[16664-16684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17054-17235]:Block[17054-17235]"
    }, {
      "left" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "right" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "info" : "VariableDeclarationStatement[17064-17118]:VariableDeclarationStatement[17064-17118]"
    }, {
      "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "info" : "VariableDeclarationStatement[17127-17191]:VariableDeclarationStatement[17127-17191]"
    }, {
      "left" : "printTo(buf, millis, chrono);",
      "right" : "printTo(buf, millis, chrono);",
      "info" : "ExpressionStatement[17200-17229]:ExpressionStatement[17200-17229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17534-17715]:Block[17534-17715]"
    }, {
      "left" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "right" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "info" : "VariableDeclarationStatement[17544-17598]:VariableDeclarationStatement[17544-17598]"
    }, {
      "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "info" : "VariableDeclarationStatement[17607-17671]:VariableDeclarationStatement[17607-17671]"
    }, {
      "left" : "printTo(out, millis, chrono);",
      "right" : "printTo(out, millis, chrono);",
      "info" : "ExpressionStatement[17680-17709]:ExpressionStatement[17680-17709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18050-18100]:Block[18050-18100]"
    }, {
      "left" : "appendable.append(print(instant));",
      "right" : "appendable.append(print(instant));",
      "info" : "ExpressionStatement[18060-18094]:ExpressionStatement[18060-18094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18502-18546]:Block[18502-18546]"
    }, {
      "left" : "printTo(buf, instant, null);",
      "right" : "printTo(buf, instant, null);",
      "info" : "ExpressionStatement[18512-18540]:ExpressionStatement[18512-18540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18883-18927]:Block[18883-18927]"
    }, {
      "left" : "printTo(out, instant, null);",
      "right" : "printTo(out, instant, null);",
      "info" : "ExpressionStatement[18893-18921]:ExpressionStatement[18893-18921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19300-19350]:Block[19300-19350]"
    }, {
      "left" : "appendable.append(print(instant));",
      "right" : "appendable.append(print(instant));",
      "info" : "ExpressionStatement[19310-19344]:ExpressionStatement[19310-19344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19756-19984]:Block[19756-19984]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[19766-19809]:VariableDeclarationStatement[19766-19809]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[19818-19930]:IfStatement[19818-19930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19839-19930]:Block[19839-19930]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[19853-19920]:ThrowStatement[19853-19920]"
    }, {
      "left" : "printer.printTo(buf, partial, iLocale);",
      "right" : "printer.printTo(buf, partial, iLocale);",
      "info" : "ExpressionStatement[19939-19978]:ExpressionStatement[19939-19978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20325-20553]:Block[20325-20553]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[20335-20378]:VariableDeclarationStatement[20335-20378]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[20387-20499]:IfStatement[20387-20499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20408-20499]:Block[20408-20499]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[20422-20489]:ThrowStatement[20422-20489]"
    }, {
      "left" : "printer.printTo(out, partial, iLocale);",
      "right" : "printer.printTo(out, partial, iLocale);",
      "info" : "ExpressionStatement[20508-20547]:ExpressionStatement[20508-20547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20930-20980]:Block[20930-20980]"
    }, {
      "left" : "appendable.append(print(partial));",
      "right" : "appendable.append(print(partial));",
      "info" : "ExpressionStatement[20940-20974]:ExpressionStatement[20940-20974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21440-21596]:Block[21440-21596]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "right" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "info" : "VariableDeclarationStatement[21450-21528]:VariableDeclarationStatement[21450-21528]"
    }, {
      "left" : "printTo(buf, instant);",
      "right" : "printTo(buf, instant);",
      "info" : "ExpressionStatement[21537-21559]:ExpressionStatement[21537-21559]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[21568-21590]:ReturnStatement[21568-21590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21968-22124]:Block[21968-22124]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "right" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "info" : "VariableDeclarationStatement[21978-22056]:VariableDeclarationStatement[21978-22056]"
    }, {
      "left" : "printTo(buf, instant);",
      "right" : "printTo(buf, instant);",
      "info" : "ExpressionStatement[22065-22087]:ExpressionStatement[22065-22087]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[22096-22118]:ReturnStatement[22096-22118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22426-22582]:Block[22426-22582]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "right" : "StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());",
      "info" : "VariableDeclarationStatement[22436-22514]:VariableDeclarationStatement[22436-22514]"
    }, {
      "left" : "printTo(buf, partial);",
      "right" : "printTo(buf, partial);",
      "info" : "ExpressionStatement[22523-22545]:ExpressionStatement[22523-22545]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[22554-22576]:ReturnStatement[22554-22576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22660-23386]:Block[22660-23386]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[22670-22713]:VariableDeclarationStatement[22670-22713]"
    }, {
      "left" : "chrono = selectChronology(chrono);",
      "right" : "chrono = selectChronology(chrono);",
      "info" : "ExpressionStatement[22722-22756]:ExpressionStatement[22722-22756]"
    }, {
      "left" : "DateTimeZone zone = chrono.getZone();",
      "right" : "DateTimeZone zone = chrono.getZone();",
      "info" : "VariableDeclarationStatement[22916-22953]:VariableDeclarationStatement[22916-22953]"
    }, {
      "left" : "int offset = zone.getOffset(instant);",
      "right" : "int offset = zone.getOffset(instant);",
      "info" : "VariableDeclarationStatement[22962-22999]:VariableDeclarationStatement[22962-22999]"
    }, {
      "left" : "long adjustedInstant = instant + offset;",
      "right" : "long adjustedInstant = instant + offset;",
      "info" : "VariableDeclarationStatement[23008-23048]:VariableDeclarationStatement[23008-23048]"
    }, {
      "left" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "right" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "info" : "IfStatement[23057-23292]:IfStatement[23057-23292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23121-23292]:Block[23121-23292]"
    }, {
      "left" : "zone = DateTimeZone.UTC;",
      "right" : "zone = DateTimeZone.UTC;",
      "info" : "ExpressionStatement[23195-23219]:ExpressionStatement[23195-23219]"
    }, {
      "left" : "offset = 0;",
      "right" : "offset = 0;",
      "info" : "ExpressionStatement[23232-23243]:ExpressionStatement[23232-23243]"
    }, {
      "left" : "adjustedInstant = instant;",
      "right" : "adjustedInstant = instant;",
      "info" : "ExpressionStatement[23256-23282]:ExpressionStatement[23256-23282]"
    }, {
      "left" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "right" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "info" : "ExpressionStatement[23301-23380]:ExpressionStatement[23301-23380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23477-24203]:Block[23477-24203]"
    }, {
      "left" : "DateTimePrinter printer = requirePrinter();",
      "right" : "DateTimePrinter printer = requirePrinter();",
      "info" : "VariableDeclarationStatement[23487-23530]:VariableDeclarationStatement[23487-23530]"
    }, {
      "left" : "chrono = selectChronology(chrono);",
      "right" : "chrono = selectChronology(chrono);",
      "info" : "ExpressionStatement[23539-23573]:ExpressionStatement[23539-23573]"
    }, {
      "left" : "DateTimeZone zone = chrono.getZone();",
      "right" : "DateTimeZone zone = chrono.getZone();",
      "info" : "VariableDeclarationStatement[23733-23770]:VariableDeclarationStatement[23733-23770]"
    }, {
      "left" : "int offset = zone.getOffset(instant);",
      "right" : "int offset = zone.getOffset(instant);",
      "info" : "VariableDeclarationStatement[23779-23816]:VariableDeclarationStatement[23779-23816]"
    }, {
      "left" : "long adjustedInstant = instant + offset;",
      "right" : "long adjustedInstant = instant + offset;",
      "info" : "VariableDeclarationStatement[23825-23865]:VariableDeclarationStatement[23825-23865]"
    }, {
      "left" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "right" : "if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0)",
      "info" : "IfStatement[23874-24109]:IfStatement[23874-24109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23938-24109]:Block[23938-24109]"
    }, {
      "left" : "zone = DateTimeZone.UTC;",
      "right" : "zone = DateTimeZone.UTC;",
      "info" : "ExpressionStatement[24012-24036]:ExpressionStatement[24012-24036]"
    }, {
      "left" : "offset = 0;",
      "right" : "offset = 0;",
      "info" : "ExpressionStatement[24049-24060]:ExpressionStatement[24049-24060]"
    }, {
      "left" : "adjustedInstant = instant;",
      "right" : "adjustedInstant = instant;",
      "info" : "ExpressionStatement[24073-24099]:ExpressionStatement[24073-24099]"
    }, {
      "left" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "right" : "printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);",
      "info" : "ExpressionStatement[24118-24197]:ExpressionStatement[24118-24197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24393-24588]:Block[24393-24588]"
    }, {
      "left" : "DateTimePrinter printer = iPrinter;",
      "right" : "DateTimePrinter printer = iPrinter;",
      "info" : "VariableDeclarationStatement[24403-24438]:VariableDeclarationStatement[24403-24438]"
    }, {
      "left" : "if (printer == null)",
      "right" : "if (printer == null)",
      "info" : "IfStatement[24447-24558]:IfStatement[24447-24558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24468-24558]:Block[24468-24558]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Printing not supported\");",
      "right" : "throw new UnsupportedOperationException(\"Printing not supported\");",
      "info" : "ThrowStatement[24482-24548]:ThrowStatement[24482-24548]"
    }, {
      "left" : "return printer;",
      "right" : "return printer;",
      "info" : "ReturnStatement[24567-24582]:ReturnStatement[24567-24582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28447-29021]:Block[28477-29051]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[28457-28497]:VariableDeclarationStatement[28487-28527]"
    }, {
      "left" : "Chronology chrono = selectChronology(iChrono);",
      "right" : "Chronology chrono = selectChronology(iChrono);",
      "info" : "VariableDeclarationStatement[28515-28561]:VariableDeclarationStatement[28545-28591]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[28570-28671]:VariableDeclarationStatement[28600-28701]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[28680-28727]:VariableDeclarationStatement[28710-28757]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[28736-28925]:IfStatement[28766-28955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28753-28878]:Block[28783-28908]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[28767-28868]:IfStatement[28797-28898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28796-28868]:Block[28826-28898]"
    }, {
      "left" : "return bucket.computeMillis(true, text);",
      "right" : "return bucket.computeMillis(true, text);",
      "info" : "ReturnStatement[28814-28854]:ReturnStatement[28844-28884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28884-28925]:Block[28914-28955]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[28898-28915]:ExpressionStatement[28928-28945]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[28934-29015]:ThrowStatement[28964-29045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29746-29808]:Block[29776-29838]"
    }, {
      "left" : "return parseLocalDateTime(text).toLocalDate();",
      "right" : "return parseLocalDateTime(text).toLocalDate();",
      "info" : "ReturnStatement[29756-29802]:ReturnStatement[29786-29832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30533-30595]:Block[30563-30625]"
    }, {
      "left" : "return parseLocalDateTime(text).toLocalTime();",
      "right" : "return parseLocalDateTime(text).toLocalTime();",
      "info" : "ReturnStatement[30543-30589]:ReturnStatement[30573-30619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31341-32476]:Block[31371-32506]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[31351-31391]:VariableDeclarationStatement[31381-31421]"
    }, {
      "left" : "Chronology chrono = selectChronology(null).withUTC();",
      "right" : "Chronology chrono = selectChronology(null).withUTC();",
      "info" : "VariableDeclarationStatement[31409-31462]:VariableDeclarationStatement[31439-31492]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[31509-31610]:VariableDeclarationStatement[31539-31640]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[31619-31666]:VariableDeclarationStatement[31649-31696]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[31675-32380]:IfStatement[31705-32410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31692-32333]:Block[31722-32363]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[31706-32323]:IfStatement[31736-32353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31735-32323]:Block[31765-32353]"
    }, {
      "left" : "long millis = bucket.computeMillis(true, text);",
      "right" : "long millis = bucket.computeMillis(true, text);",
      "info" : "VariableDeclarationStatement[31753-31800]:VariableDeclarationStatement[31783-31830]"
    }, {
      "left" : "if (bucket.getOffsetInteger() != null)",
      "right" : "if (bucket.getOffsetInteger() != null)",
      "info" : "IfStatement[31817-32251]:IfStatement[31847-32281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31856-32132]:Block[31886-32162]"
    }, {
      "left" : "int parsedOffset = bucket.getOffsetInteger();",
      "right" : "int parsedOffset = bucket.getOffsetInteger();",
      "info" : "VariableDeclarationStatement[31921-31966]:VariableDeclarationStatement[31951-31996]"
    }, {
      "left" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "right" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "info" : "VariableDeclarationStatement[31987-32056]:VariableDeclarationStatement[32017-32086]"
    }, {
      "left" : "chrono = chrono.withZone(parsedZone);",
      "right" : "chrono = chrono.withZone(parsedZone);",
      "info" : "ExpressionStatement[32077-32114]:ExpressionStatement[32107-32144]"
    }, {
      "left" : "if (bucket.getZone() != null)",
      "right" : "if (bucket.getZone() != null)",
      "info" : "IfStatement[32138-32251]:IfStatement[32168-32281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32168-32251]:Block[32198-32281]"
    }, {
      "left" : "chrono = chrono.withZone(bucket.getZone());",
      "right" : "chrono = chrono.withZone(bucket.getZone());",
      "info" : "ExpressionStatement[32190-32233]:ExpressionStatement[32220-32263]"
    }, {
      "left" : "return new LocalDateTime(millis, chrono);",
      "right" : "return new LocalDateTime(millis, chrono);",
      "info" : "ReturnStatement[32268-32309]:ReturnStatement[32298-32339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32339-32380]:Block[32369-32410]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[32353-32370]:ExpressionStatement[32383-32400]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[32389-32470]:ThrowStatement[32419-32500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33391-34581]:Block[33421-34611]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[33401-33441]:VariableDeclarationStatement[33431-33471]"
    }, {
      "left" : "Chronology chrono = selectChronology(null);",
      "right" : "Chronology chrono = selectChronology(null);",
      "info" : "VariableDeclarationStatement[33459-33502]:VariableDeclarationStatement[33489-33532]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[33511-33612]:VariableDeclarationStatement[33541-33642]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[33621-33668]:VariableDeclarationStatement[33651-33698]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[33677-34485]:IfStatement[33707-34515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33694-34438]:Block[33724-34468]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[33708-34428]:IfStatement[33738-34458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33737-34428]:Block[33767-34458]"
    }, {
      "left" : "long millis = bucket.computeMillis(true, text);",
      "right" : "long millis = bucket.computeMillis(true, text);",
      "info" : "VariableDeclarationStatement[33755-33802]:VariableDeclarationStatement[33785-33832]"
    }, {
      "left" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "right" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "info" : "IfStatement[33819-34227]:IfStatement[33849-34257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33875-34108]:Block[33905-34138]"
    }, {
      "left" : "int parsedOffset = bucket.getOffsetInteger();",
      "right" : "int parsedOffset = bucket.getOffsetInteger();",
      "info" : "VariableDeclarationStatement[33897-33942]:VariableDeclarationStatement[33927-33972]"
    }, {
      "left" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "right" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "info" : "VariableDeclarationStatement[33963-34032]:VariableDeclarationStatement[33993-34062]"
    }, {
      "left" : "chrono = chrono.withZone(parsedZone);",
      "right" : "chrono = chrono.withZone(parsedZone);",
      "info" : "ExpressionStatement[34053-34090]:ExpressionStatement[34083-34120]"
    }, {
      "left" : "if (bucket.getZone() != null)",
      "right" : "if (bucket.getZone() != null)",
      "info" : "IfStatement[34114-34227]:IfStatement[34144-34257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34144-34227]:Block[34174-34257]"
    }, {
      "left" : "chrono = chrono.withZone(bucket.getZone());",
      "right" : "chrono = chrono.withZone(bucket.getZone());",
      "info" : "ExpressionStatement[34166-34209]:ExpressionStatement[34196-34239]"
    }, {
      "left" : "DateTime dt = new DateTime(millis, chrono);",
      "right" : "DateTime dt = new DateTime(millis, chrono);",
      "info" : "VariableDeclarationStatement[34244-34287]:VariableDeclarationStatement[34274-34317]"
    }, {
      "left" : "if (iZone != null)",
      "right" : "if (iZone != null)",
      "info" : "IfStatement[34304-34387]:IfStatement[34334-34417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34323-34387]:Block[34353-34417]"
    }, {
      "left" : "dt = dt.withZone(iZone);",
      "right" : "dt = dt.withZone(iZone);",
      "info" : "ExpressionStatement[34345-34369]:ExpressionStatement[34375-34399]"
    }, {
      "left" : "return dt;",
      "right" : "return dt;",
      "info" : "ReturnStatement[34404-34414]:ReturnStatement[34434-34444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34444-34485]:Block[34474-34515]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[34458-34475]:ExpressionStatement[34488-34505]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[34494-34575]:ThrowStatement[34524-34605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35517-36715]:Block[35547-36745]"
    }, {
      "left" : "DateTimeParser parser = requireParser();",
      "right" : "DateTimeParser parser = requireParser();",
      "info" : "VariableDeclarationStatement[35527-35567]:VariableDeclarationStatement[35557-35597]"
    }, {
      "left" : "Chronology chrono = selectChronology(null);",
      "right" : "Chronology chrono = selectChronology(null);",
      "info" : "VariableDeclarationStatement[35585-35628]:VariableDeclarationStatement[35615-35658]"
    }, {
      "left" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "right" : "DateTimeParserBucket bucket = new DateTimeParserBucket(0, chrono, iLocale, iPivotYear, iDefaultYear);",
      "info" : "VariableDeclarationStatement[35637-35738]:VariableDeclarationStatement[35667-35768]"
    }, {
      "left" : "int newPos = parser.parseInto(bucket, text, 0);",
      "right" : "int newPos = parser.parseInto(bucket, text, 0);",
      "info" : "VariableDeclarationStatement[35747-35794]:VariableDeclarationStatement[35777-35824]"
    }, {
      "left" : "if (newPos >= 0)",
      "right" : "if (newPos >= 0)",
      "info" : "IfStatement[35803-36619]:IfStatement[35833-36649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35820-36572]:Block[35850-36602]"
    }, {
      "left" : "if (newPos >= text.length())",
      "right" : "if (newPos >= text.length())",
      "info" : "IfStatement[35834-36562]:IfStatement[35864-36592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35863-36562]:Block[35893-36592]"
    }, {
      "left" : "long millis = bucket.computeMillis(true, text);",
      "right" : "long millis = bucket.computeMillis(true, text);",
      "info" : "VariableDeclarationStatement[35881-35928]:VariableDeclarationStatement[35911-35958]"
    }, {
      "left" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "right" : "if (iOffsetParsed && bucket.getOffsetInteger() != null)",
      "info" : "IfStatement[35945-36353]:IfStatement[35975-36383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36001-36234]:Block[36031-36264]"
    }, {
      "left" : "int parsedOffset = bucket.getOffsetInteger();",
      "right" : "int parsedOffset = bucket.getOffsetInteger();",
      "info" : "VariableDeclarationStatement[36023-36068]:VariableDeclarationStatement[36053-36098]"
    }, {
      "left" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "right" : "DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);",
      "info" : "VariableDeclarationStatement[36089-36158]:VariableDeclarationStatement[36119-36188]"
    }, {
      "left" : "chrono = chrono.withZone(parsedZone);",
      "right" : "chrono = chrono.withZone(parsedZone);",
      "info" : "ExpressionStatement[36179-36216]:ExpressionStatement[36209-36246]"
    }, {
      "left" : "if (bucket.getZone() != null)",
      "right" : "if (bucket.getZone() != null)",
      "info" : "IfStatement[36240-36353]:IfStatement[36270-36383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36270-36353]:Block[36300-36383]"
    }, {
      "left" : "chrono = chrono.withZone(bucket.getZone());",
      "right" : "chrono = chrono.withZone(bucket.getZone());",
      "info" : "ExpressionStatement[36292-36335]:ExpressionStatement[36322-36365]"
    }, {
      "left" : "MutableDateTime dt = new MutableDateTime(millis, chrono);",
      "right" : "MutableDateTime dt = new MutableDateTime(millis, chrono);",
      "info" : "VariableDeclarationStatement[36370-36427]:VariableDeclarationStatement[36400-36457]"
    }, {
      "left" : "if (iZone != null)",
      "right" : "if (iZone != null)",
      "info" : "IfStatement[36444-36521]:IfStatement[36474-36551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36463-36521]:Block[36493-36551]"
    }, {
      "left" : "dt.setZone(iZone);",
      "right" : "dt.setZone(iZone);",
      "info" : "ExpressionStatement[36485-36503]:ExpressionStatement[36515-36533]"
    }, {
      "left" : "return dt;",
      "right" : "return dt;",
      "info" : "ReturnStatement[36538-36548]:ReturnStatement[36568-36578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36578-36619]:Block[36608-36649]"
    }, {
      "left" : "newPos = ~newPos;",
      "right" : "newPos = ~newPos;",
      "info" : "ExpressionStatement[36592-36609]:ExpressionStatement[36622-36639]"
    }, {
      "left" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "right" : "throw new IllegalArgumentException(FormatUtils.createErrorMessage(text, newPos));",
      "info" : "ThrowStatement[36628-36709]:ThrowStatement[36658-36739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36901-37090]:Block[36931-37120]"
    }, {
      "left" : "DateTimeParser parser = iParser;",
      "right" : "DateTimeParser parser = iParser;",
      "info" : "VariableDeclarationStatement[36911-36943]:VariableDeclarationStatement[36941-36973]"
    }, {
      "left" : "if (parser == null)",
      "right" : "if (parser == null)",
      "info" : "IfStatement[36952-37061]:IfStatement[36982-37091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36972-37061]:Block[37002-37091]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"Parsing not supported\");",
      "right" : "throw new UnsupportedOperationException(\"Parsing not supported\");",
      "info" : "ThrowStatement[36986-37051]:ThrowStatement[37016-37081]"
    }, {
      "left" : "return parser;",
      "right" : "return parser;",
      "info" : "ReturnStatement[37070-37084]:ReturnStatement[37100-37114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37384-37623]:Block[37414-37653]"
    }, {
      "left" : "chrono = DateTimeUtils.getChronology(chrono);",
      "right" : "chrono = DateTimeUtils.getChronology(chrono);",
      "info" : "ExpressionStatement[37394-37439]:ExpressionStatement[37424-37469]"
    }, {
      "left" : "if (iChrono != null)",
      "right" : "if (iChrono != null)",
      "info" : "IfStatement[37448-37510]:IfStatement[37478-37540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37469-37510]:Block[37499-37540]"
    }, {
      "left" : "chrono = iChrono;",
      "right" : "chrono = iChrono;",
      "info" : "ExpressionStatement[37483-37500]:ExpressionStatement[37513-37530]"
    }, {
      "left" : "if (iZone != null)",
      "right" : "if (iZone != null)",
      "info" : "IfStatement[37519-37594]:IfStatement[37549-37624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37538-37594]:Block[37568-37624]"
    }, {
      "left" : "chrono = chrono.withZone(iZone);",
      "right" : "chrono = chrono.withZone(iZone);",
      "info" : "ExpressionStatement[37552-37584]:ExpressionStatement[37582-37614]"
    }, {
      "left" : "return chrono;",
      "right" : "return chrono;",
      "info" : "ReturnStatement[37603-37617]:ReturnStatement[37633-37647]"
    } ]
  },
  "interFileMappings" : { }
}