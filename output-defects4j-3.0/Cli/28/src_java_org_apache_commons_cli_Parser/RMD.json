{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "TypeDeclaration[1031-13033]:TypeDeclaration[1031-13036]"
    }, {
      "left" : "protected CommandLine cmd;",
      "right" : "protected CommandLine cmd;",
      "info" : "FieldDeclaration[1348-1406]:FieldDeclaration[1348-1406]"
    }, {
      "left" : "private Options options;",
      "right" : "private Options options;",
      "info" : "FieldDeclaration[1412-1463]:FieldDeclaration[1412-1463]"
    }, {
      "left" : "private List requiredOptions;",
      "right" : "private List requiredOptions;",
      "info" : "FieldDeclaration[1469-1542]:FieldDeclaration[1469-1542]"
    }, {
      "left" : "protected void setOptions(final Options options)",
      "right" : "protected void setOptions(final Options options)",
      "info" : "MethodDeclaration[1548-1716]:MethodDeclaration[1548-1716]"
    }, {
      "left" : "protected Options getOptions()",
      "right" : "protected Options getOptions()",
      "info" : "MethodDeclaration[1722-1788]:MethodDeclaration[1722-1788]"
    }, {
      "left" : "protected List getRequiredOptions()",
      "right" : "protected List getRequiredOptions()",
      "info" : "MethodDeclaration[1794-1873]:MethodDeclaration[1794-1873]"
    }, {
      "left" : "protected abstract String[] flatten(Options opts, String[] arguments, boolean stopAtNonOption) throws ParseException;",
      "right" : "protected abstract String[] flatten(Options opts, String[] arguments, boolean stopAtNonOption) throws ParseException;",
      "info" : "MethodDeclaration[1879-2444]:MethodDeclaration[1879-2444]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments) throws ParseException",
      "info" : "MethodDeclaration[2450-2946]:MethodDeclaration[2450-2946]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException",
      "info" : "MethodDeclaration[2952-3613]:MethodDeclaration[2952-3613]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments, boolean stopAtNonOption) throws ParseException",
      "info" : "MethodDeclaration[3619-4428]:MethodDeclaration[3619-4428]"
    }, {
      "left" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)\n            throws ParseException",
      "right" : "public CommandLine parse(Options options, String[] arguments, Properties properties, boolean stopAtNonOption)\n            throws ParseException",
      "info" : "MethodDeclaration[4434-7946]:MethodDeclaration[4434-7946]"
    }, {
      "left" : "protected void processProperties(Properties properties)",
      "right" : "protected void processProperties(Properties properties)",
      "info" : "MethodDeclaration[7952-9587]:MethodDeclaration[7952-9590]"
    }, {
      "left" : "protected void checkRequiredOptions() throws MissingOptionException",
      "right" : "protected void checkRequiredOptions() throws MissingOptionException",
      "info" : "MethodDeclaration[9593-10094]:MethodDeclaration[9596-10097]"
    }, {
      "left" : "public void processArgs(Option opt, ListIterator iter) throws ParseException",
      "right" : "public void processArgs(Option opt, ListIterator iter) throws ParseException",
      "info" : "MethodDeclaration[10100-11362]:MethodDeclaration[10103-11365]"
    }, {
      "left" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
      "right" : "protected void processOption(String arg, ListIterator iter) throws ParseException",
      "info" : "MethodDeclaration[11368-13031]:MethodDeclaration[11371-13034]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1284-1290]:Modifier[1284-1290]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1291-1299]:Modifier[1291-1299]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1300-1305]:TYPE_DECLARATION_KIND[1300-1305]"
    }, {
      "left" : "Parser",
      "right" : "Parser",
      "info" : "SimpleName[1306-1312]:SimpleName[1306-1312]"
    }, {
      "left" : "CommandLineParser",
      "right" : "CommandLineParser",
      "info" : "SimpleType[1324-1341]:SimpleType[1324-1341]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1548-1557]:Modifier[1548-1557]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1558-1562]:PrimitiveType[1558-1562]"
    }, {
      "left" : "setOptions",
      "right" : "setOptions",
      "info" : "SimpleName[1563-1573]:SimpleName[1563-1573]"
    }, {
      "left" : "final Options options",
      "right" : "final Options options",
      "info" : "SingleVariableDeclaration[1574-1595]:SingleVariableDeclaration[1574-1595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1601-1716]:Block[1601-1716]"
    }, {
      "left" : "this.options = options;",
      "right" : "this.options = options;",
      "info" : "ExpressionStatement[1611-1634]:ExpressionStatement[1611-1634]"
    }, {
      "left" : "this.requiredOptions = new ArrayList(options.getRequiredOptions());",
      "right" : "this.requiredOptions = new ArrayList(options.getRequiredOptions());",
      "info" : "ExpressionStatement[1643-1710]:ExpressionStatement[1643-1710]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1722-1731]:Modifier[1722-1731]"
    }, {
      "left" : "Options",
      "right" : "Options",
      "info" : "SimpleType[1732-1739]:SimpleType[1732-1739]"
    }, {
      "left" : "getOptions",
      "right" : "getOptions",
      "info" : "SimpleName[1740-1750]:SimpleName[1740-1750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1757-1788]:Block[1757-1788]"
    }, {
      "left" : "return options;",
      "right" : "return options;",
      "info" : "ReturnStatement[1767-1782]:ReturnStatement[1767-1782]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1794-1803]:Modifier[1794-1803]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[1804-1808]:SimpleType[1804-1808]"
    }, {
      "left" : "getRequiredOptions",
      "right" : "getRequiredOptions",
      "info" : "SimpleName[1809-1827]:SimpleName[1809-1827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1834-1873]:Block[1834-1873]"
    }, {
      "left" : "return requiredOptions;",
      "right" : "return requiredOptions;",
      "info" : "ReturnStatement[1844-1867]:ReturnStatement[1844-1867]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2327-2336]:Modifier[2327-2336]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2337-2345]:Modifier[2337-2345]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[2346-2354]:ArrayType[2346-2354]"
    }, {
      "left" : "flatten",
      "right" : "flatten",
      "info" : "SimpleName[2355-2362]:SimpleName[2355-2362]"
    }, {
      "left" : "Options opts",
      "right" : "Options opts",
      "info" : "SingleVariableDeclaration[2363-2375]:SingleVariableDeclaration[2363-2375]"
    }, {
      "left" : "String[] arguments",
      "right" : "String[] arguments",
      "info" : "SingleVariableDeclaration[2377-2395]:SingleVariableDeclaration[2377-2395]"
    }, {
      "left" : "boolean stopAtNonOption",
      "right" : "boolean stopAtNonOption",
      "info" : "SingleVariableDeclaration[2397-2420]:SingleVariableDeclaration[2397-2420]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[2429-2443]:SimpleType[2429-2443]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2796-2802]:Modifier[2796-2802]"
    }, {
      "left" : "CommandLine",
      "right" : "CommandLine",
      "info" : "SimpleType[2803-2814]:SimpleType[2803-2814]"
    }, {
      "left" : "parse",
      "right" : "parse",
      "info" : "SimpleName[2815-2820]:SimpleName[2815-2820]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[2821-2836]:SingleVariableDeclaration[2821-2836]"
    }, {
      "left" : "String[] arguments",
      "right" : "String[] arguments",
      "info" : "SingleVariableDeclaration[2838-2856]:SingleVariableDeclaration[2838-2856]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[2865-2879]:SimpleType[2865-2879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2884-2946]:Block[2884-2946]"
    }, {
      "left" : "return parse(options, arguments, null, false);",
      "right" : "return parse(options, arguments, null, false);",
      "info" : "ReturnStatement[2894-2940]:ReturnStatement[2894-2940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3434-3440]:Modifier[3434-3440]"
    }, {
      "left" : "CommandLine",
      "right" : "CommandLine",
      "info" : "SimpleType[3441-3452]:SimpleType[3441-3452]"
    }, {
      "left" : "parse",
      "right" : "parse",
      "info" : "SimpleName[3453-3458]:SimpleName[3453-3458]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[3459-3474]:SingleVariableDeclaration[3459-3474]"
    }, {
      "left" : "String[] arguments",
      "right" : "String[] arguments",
      "info" : "SingleVariableDeclaration[3476-3494]:SingleVariableDeclaration[3476-3494]"
    }, {
      "left" : "Properties properties",
      "right" : "Properties properties",
      "info" : "SingleVariableDeclaration[3496-3517]:SingleVariableDeclaration[3496-3517]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[3526-3540]:SimpleType[3526-3540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3545-3613]:Block[3545-3613]"
    }, {
      "left" : "return parse(options, arguments, properties, false);",
      "right" : "return parse(options, arguments, properties, false);",
      "info" : "ReturnStatement[3555-3607]:ReturnStatement[3555-3607]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4243-4249]:Modifier[4243-4249]"
    }, {
      "left" : "CommandLine",
      "right" : "CommandLine",
      "info" : "SimpleType[4250-4261]:SimpleType[4250-4261]"
    }, {
      "left" : "parse",
      "right" : "parse",
      "info" : "SimpleName[4262-4267]:SimpleName[4262-4267]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[4268-4283]:SingleVariableDeclaration[4268-4283]"
    }, {
      "left" : "String[] arguments",
      "right" : "String[] arguments",
      "info" : "SingleVariableDeclaration[4285-4303]:SingleVariableDeclaration[4285-4303]"
    }, {
      "left" : "boolean stopAtNonOption",
      "right" : "boolean stopAtNonOption",
      "info" : "SingleVariableDeclaration[4305-4328]:SingleVariableDeclaration[4305-4328]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[4337-4351]:SimpleType[4337-4351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4356-4428]:Block[4356-4428]"
    }, {
      "left" : "return parse(options, arguments, null, stopAtNonOption);",
      "right" : "return parse(options, arguments, null, stopAtNonOption);",
      "info" : "ReturnStatement[4366-4422]:ReturnStatement[4366-4422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5181-5187]:Modifier[5181-5187]"
    }, {
      "left" : "CommandLine",
      "right" : "CommandLine",
      "info" : "SimpleType[5188-5199]:SimpleType[5188-5199]"
    }, {
      "left" : "parse",
      "right" : "parse",
      "info" : "SimpleName[5200-5205]:SimpleName[5200-5205]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[5206-5221]:SingleVariableDeclaration[5206-5221]"
    }, {
      "left" : "String[] arguments",
      "right" : "String[] arguments",
      "info" : "SingleVariableDeclaration[5223-5241]:SingleVariableDeclaration[5223-5241]"
    }, {
      "left" : "Properties properties",
      "right" : "Properties properties",
      "info" : "SingleVariableDeclaration[5243-5264]:SingleVariableDeclaration[5243-5264]"
    }, {
      "left" : "boolean stopAtNonOption",
      "right" : "boolean stopAtNonOption",
      "info" : "SingleVariableDeclaration[5266-5289]:SingleVariableDeclaration[5266-5289]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[5310-5324]:SimpleType[5310-5324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5329-7946]:Block[5329-7946]"
    }, {
      "left" : "for (Iterator it = options.helpOptions().iterator(); it.hasNext())",
      "right" : "for (Iterator it = options.helpOptions().iterator(); it.hasNext())",
      "info" : "ForStatement[5419-5582]:ForStatement[5419-5582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5495-5582]:Block[5495-5582]"
    }, {
      "left" : "Option opt = (Option) it.next();",
      "right" : "Option opt = (Option) it.next();",
      "info" : "VariableDeclarationStatement[5509-5541]:VariableDeclarationStatement[5509-5541]"
    }, {
      "left" : "opt.clearValues();",
      "right" : "opt.clearValues();",
      "info" : "ExpressionStatement[5554-5572]:ExpressionStatement[5554-5572]"
    }, {
      "left" : "for (Iterator it = options.getOptionGroups().iterator(); it.hasNext())",
      "right" : "for (Iterator it = options.getOptionGroups().iterator(); it.hasNext())",
      "info" : "ForStatement[5642-5827]:ForStatement[5642-5827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5722-5827]:Block[5722-5827]"
    }, {
      "left" : "OptionGroup group = (OptionGroup) it.next();",
      "right" : "OptionGroup group = (OptionGroup) it.next();",
      "info" : "VariableDeclarationStatement[5736-5780]:VariableDeclarationStatement[5736-5780]"
    }, {
      "left" : "group.setSelected(null);",
      "right" : "group.setSelected(null);",
      "info" : "ExpressionStatement[5793-5817]:ExpressionStatement[5793-5817]"
    }, {
      "left" : "setOptions(options);",
      "right" : "setOptions(options);",
      "info" : "ExpressionStatement[5875-5895]:ExpressionStatement[5875-5895]"
    }, {
      "left" : "cmd = new CommandLine();",
      "right" : "cmd = new CommandLine();",
      "info" : "ExpressionStatement[5905-5929]:ExpressionStatement[5905-5929]"
    }, {
      "left" : "boolean eatTheRest = false;",
      "right" : "boolean eatTheRest = false;",
      "info" : "VariableDeclarationStatement[5939-5966]:VariableDeclarationStatement[5939-5966]"
    }, {
      "left" : "if (arguments == null)",
      "right" : "if (arguments == null)",
      "info" : "IfStatement[5976-6057]:IfStatement[5976-6057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6007-6057]:Block[6007-6057]"
    }, {
      "left" : "arguments = new String[0];",
      "right" : "arguments = new String[0];",
      "info" : "ExpressionStatement[6021-6047]:ExpressionStatement[6021-6047]"
    }, {
      "left" : "List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));",
      "right" : "List tokenList = Arrays.asList(flatten(getOptions(), arguments, stopAtNonOption));",
      "info" : "VariableDeclarationStatement[6067-6149]:VariableDeclarationStatement[6067-6149]"
    }, {
      "left" : "ListIterator iterator = tokenList.listIterator();",
      "right" : "ListIterator iterator = tokenList.listIterator();",
      "info" : "VariableDeclarationStatement[6159-6208]:VariableDeclarationStatement[6159-6208]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[6258-7847]:WhileStatement[6258-7847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6293-7847]:Block[6293-7847]"
    }, {
      "left" : "String t = (String) iterator.next();",
      "right" : "String t = (String) iterator.next();",
      "info" : "VariableDeclarationStatement[6307-6343]:VariableDeclarationStatement[6307-6343]"
    }, {
      "left" : "if (\"--\".equals(t))",
      "right" : "if (\"--\".equals(t))",
      "info" : "IfStatement[6401-7413]:IfStatement[6401-7413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6433-6483]:Block[6433-6483]"
    }, {
      "left" : "eatTheRest = true;",
      "right" : "eatTheRest = true;",
      "info" : "ExpressionStatement[6451-6469]:ExpressionStatement[6451-6469]"
    }, {
      "left" : "if (\"-\".equals(t))",
      "right" : "if (\"-\".equals(t))",
      "info" : "IfStatement[6544-7413]:IfStatement[6544-7413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6575-6794]:Block[6575-6794]"
    }, {
      "left" : "if (stopAtNonOption)",
      "right" : "if (stopAtNonOption)",
      "info" : "IfStatement[6593-6780]:IfStatement[6593-6780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6630-6688]:Block[6630-6688]"
    }, {
      "left" : "eatTheRest = true;",
      "right" : "eatTheRest = true;",
      "info" : "ExpressionStatement[6652-6670]:ExpressionStatement[6652-6670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6726-6780]:Block[6726-6780]"
    }, {
      "left" : "cmd.addArg(t);",
      "right" : "cmd.addArg(t);",
      "info" : "ExpressionStatement[6748-6762]:ExpressionStatement[6748-6762]"
    }, {
      "left" : "if (t.startsWith(\"-\"))",
      "right" : "if (t.startsWith(\"-\"))",
      "info" : "IfStatement[6851-7413]:IfStatement[6851-7413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6886-7183]:Block[6886-7183]"
    }, {
      "left" : "if (stopAtNonOption && !getOptions().hasOption(t))",
      "right" : "if (stopAtNonOption && !getOptions().hasOption(t))",
      "info" : "IfStatement[6904-7169]:IfStatement[6904-7169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6971-7064]:Block[6971-7064]"
    }, {
      "left" : "eatTheRest = true;",
      "right" : "eatTheRest = true;",
      "info" : "ExpressionStatement[6993-7011]:ExpressionStatement[6993-7011]"
    }, {
      "left" : "cmd.addArg(t);",
      "right" : "cmd.addArg(t);",
      "info" : "ExpressionStatement[7032-7046]:ExpressionStatement[7032-7046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7102-7169]:Block[7102-7169]"
    }, {
      "left" : "processOption(t, iterator);",
      "right" : "processOption(t, iterator);",
      "info" : "ExpressionStatement[7124-7151]:ExpressionStatement[7124-7151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7254-7413]:Block[7254-7413]"
    }, {
      "left" : "cmd.addArg(t);",
      "right" : "cmd.addArg(t);",
      "info" : "ExpressionStatement[7272-7286]:ExpressionStatement[7272-7286]"
    }, {
      "left" : "if (stopAtNonOption)",
      "right" : "if (stopAtNonOption)",
      "info" : "IfStatement[7304-7399]:IfStatement[7304-7399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7341-7399]:Block[7341-7399]"
    }, {
      "left" : "eatTheRest = true;",
      "right" : "eatTheRest = true;",
      "info" : "ExpressionStatement[7363-7381]:ExpressionStatement[7363-7381]"
    }, {
      "left" : "if (eatTheRest)",
      "right" : "if (eatTheRest)",
      "info" : "IfStatement[7467-7837]:IfStatement[7467-7837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7495-7837]:Block[7495-7837]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[7513-7823]:WhileStatement[7513-7823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7556-7823]:Block[7556-7823]"
    }, {
      "left" : "String str = (String) iterator.next();",
      "right" : "String str = (String) iterator.next();",
      "info" : "VariableDeclarationStatement[7578-7616]:VariableDeclarationStatement[7578-7616]"
    }, {
      "left" : "if (!\"--\".equals(str))",
      "right" : "if (!\"--\".equals(str))",
      "info" : "IfStatement[7698-7805]:IfStatement[7698-7805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7741-7805]:Block[7741-7805]"
    }, {
      "left" : "cmd.addArg(str);",
      "right" : "cmd.addArg(str);",
      "info" : "ExpressionStatement[7767-7783]:ExpressionStatement[7767-7783]"
    }, {
      "left" : "processProperties(properties);",
      "right" : "processProperties(properties);",
      "info" : "ExpressionStatement[7857-7887]:ExpressionStatement[7857-7887]"
    }, {
      "left" : "checkRequiredOptions();",
      "right" : "checkRequiredOptions();",
      "info" : "ExpressionStatement[7896-7919]:ExpressionStatement[7896-7919]"
    }, {
      "left" : "return cmd;",
      "right" : "return cmd;",
      "info" : "ReturnStatement[7929-7940]:ReturnStatement[7929-7940]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8117-8126]:Modifier[8117-8126]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8127-8131]:PrimitiveType[8127-8131]"
    }, {
      "left" : "processProperties",
      "right" : "processProperties",
      "info" : "SimpleName[8132-8149]:SimpleName[8132-8149]"
    }, {
      "left" : "Properties properties",
      "right" : "Properties properties",
      "info" : "SingleVariableDeclaration[8150-8171]:SingleVariableDeclaration[8150-8171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8177-9587]:Block[8177-9590]"
    }, {
      "left" : "if (properties == null)",
      "right" : "if (properties == null)",
      "info" : "IfStatement[8187-8250]:IfStatement[8187-8250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8219-8250]:Block[8219-8250]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[8233-8240]:ReturnStatement[8233-8240]"
    }, {
      "left" : "for (Enumeration e = properties.propertyNames(); e.hasMoreElements())",
      "right" : "for (Enumeration e = properties.propertyNames(); e.hasMoreElements())",
      "info" : "ForStatement[8260-9581]:ForStatement[8260-9584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8339-9581]:Block[8339-9584]"
    }, {
      "left" : "String option = e.nextElement().toString();",
      "right" : "String option = e.nextElement().toString();",
      "info" : "VariableDeclarationStatement[8353-8396]:VariableDeclarationStatement[8353-8396]"
    }, {
      "left" : "if (!cmd.hasOption(option))",
      "right" : "if (!cmd.hasOption(option))",
      "info" : "IfStatement[8410-9571]:IfStatement[8410-9574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8450-9571]:Block[8450-9574]"
    }, {
      "left" : "Option opt = getOptions().getOption(option);",
      "right" : "Option opt = getOptions().getOption(option);",
      "info" : "VariableDeclarationStatement[8468-8512]:VariableDeclarationStatement[8468-8512]"
    }, {
      "left" : "String value = properties.getProperty(option);",
      "right" : "String value = properties.getProperty(option);",
      "info" : "VariableDeclarationStatement[8592-8638]:VariableDeclarationStatement[8592-8638]"
    }, {
      "left" : "if (opt.hasArg())",
      "right" : "if (opt.hasArg())",
      "info" : "IfStatement[8656-9520]:IfStatement[8656-9523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8690-9159]:Block[8690-9159]"
    }, {
      "left" : "if (opt.getValues() == null || opt.getValues().length == 0)",
      "right" : "if (opt.getValues() == null || opt.getValues().length == 0)",
      "info" : "IfStatement[8712-9141]:IfStatement[8712-9141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8792-9141]:Block[8792-9141]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8818-9119]:TryStatement[8818-9119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8846-8935]:Block[8846-8935]"
    }, {
      "left" : "opt.addValueForProcessing(value);",
      "right" : "opt.addValueForProcessing(value);",
      "info" : "ExpressionStatement[8876-8909]:ExpressionStatement[8876-8909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9013-9119]:Block[9013-9119]"
    }, {
      "left" : "if (!(\"yes\".equalsIgnoreCase(value)\n                        || \"true\".equalsIgnoreCase(value)\n                        || \"1\".equalsIgnoreCase(value)))",
      "right" : "if (!(\"yes\".equalsIgnoreCase(value)\n                        || \"true\".equalsIgnoreCase(value)\n                        || \"1\".equalsIgnoreCase(value)))",
      "info" : "IfStatement[9181-9520]:IfStatement[9181-9523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9348-9520]:Block[9348-9523]"
    }, {
      "left" : "cmd.addOption(opt);",
      "right" : "cmd.addOption(opt);",
      "info" : "ExpressionStatement[9538-9557]:ExpressionStatement[9541-9560]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[9811-9820]:Modifier[9814-9823]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9821-9825]:PrimitiveType[9824-9828]"
    }, {
      "left" : "checkRequiredOptions",
      "right" : "checkRequiredOptions",
      "info" : "SimpleName[9826-9846]:SimpleName[9829-9849]"
    }, {
      "left" : "MissingOptionException",
      "right" : "MissingOptionException",
      "info" : "SimpleType[9856-9878]:SimpleType[9859-9881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9883-10094]:Block[9886-10097]"
    }, {
      "left" : "if (!getRequiredOptions().isEmpty())",
      "right" : "if (!getRequiredOptions().isEmpty())",
      "info" : "IfStatement[9964-10088]:IfStatement[9967-10091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10009-10088]:Block[10012-10091]"
    }, {
      "left" : "throw new MissingOptionException(getRequiredOptions());",
      "right" : "throw new MissingOptionException(getRequiredOptions());",
      "info" : "ThrowStatement[10023-10078]:ThrowStatement[10026-10081]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10515-10521]:Modifier[10518-10524]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10522-10526]:PrimitiveType[10525-10529]"
    }, {
      "left" : "processArgs",
      "right" : "processArgs",
      "info" : "SimpleName[10527-10538]:SimpleName[10530-10541]"
    }, {
      "left" : "Option opt",
      "right" : "Option opt",
      "info" : "SingleVariableDeclaration[10539-10549]:SingleVariableDeclaration[10542-10552]"
    }, {
      "left" : "ListIterator iter",
      "right" : "ListIterator iter",
      "info" : "SingleVariableDeclaration[10551-10568]:SingleVariableDeclaration[10554-10571]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[10577-10591]:SimpleType[10580-10594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10596-11362]:Block[10599-11365]"
    }, {
      "left" : "while (iter.hasNext())",
      "right" : "while (iter.hasNext())",
      "info" : "WhileStatement[10647-11220]:WhileStatement[10650-11223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10678-11220]:Block[10681-11223]"
    }, {
      "left" : "String str = (String) iter.next();",
      "right" : "String str = (String) iter.next();",
      "info" : "VariableDeclarationStatement[10692-10726]:VariableDeclarationStatement[10695-10729]"
    }, {
      "left" : "if (getOptions().hasOption(str) && str.startsWith(\"-\"))",
      "right" : "if (getOptions().hasOption(str) && str.startsWith(\"-\"))",
      "info" : "IfStatement[10788-10927]:IfStatement[10791-10930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10856-10927]:Block[10859-10930]"
    }, {
      "left" : "iter.previous();",
      "right" : "iter.previous();",
      "info" : "ExpressionStatement[10874-10890]:ExpressionStatement[10877-10893]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10907-10913]:BreakStatement[10910-10916]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10970-11210]:TryStatement[10973-11213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10986-11085]:Block[10989-11088]"
    }, {
      "left" : "opt.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(str));",
      "right" : "opt.addValueForProcessing(Util.stripLeadingAndTrailingQuotes(str));",
      "info" : "ExpressionStatement[11004-11071]:ExpressionStatement[11007-11074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11139-11210]:Block[11142-11213]"
    }, {
      "left" : "iter.previous();",
      "right" : "iter.previous();",
      "info" : "ExpressionStatement[11157-11173]:ExpressionStatement[11160-11176]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11190-11196]:BreakStatement[11193-11199]"
    }, {
      "left" : "if (opt.getValues() == null && !opt.hasOptionalArg())",
      "right" : "if (opt.getValues() == null && !opt.hasOptionalArg())",
      "info" : "IfStatement[11230-11356]:IfStatement[11233-11359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11292-11356]:Block[11295-11359]"
    }, {
      "left" : "throw new MissingArgumentException(opt);",
      "right" : "throw new MissingArgumentException(opt);",
      "info" : "ThrowStatement[11306-11346]:ThrowStatement[11309-11349]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11746-11755]:Modifier[11749-11758]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11756-11760]:PrimitiveType[11759-11763]"
    }, {
      "left" : "processOption",
      "right" : "processOption",
      "info" : "SimpleName[11761-11774]:SimpleName[11764-11777]"
    }, {
      "left" : "String arg",
      "right" : "String arg",
      "info" : "SingleVariableDeclaration[11775-11785]:SingleVariableDeclaration[11778-11788]"
    }, {
      "left" : "ListIterator iter",
      "right" : "ListIterator iter",
      "info" : "SingleVariableDeclaration[11787-11804]:SingleVariableDeclaration[11790-11807]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[11813-11827]:SimpleType[11816-11830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11832-13031]:Block[11835-13034]"
    }, {
      "left" : "boolean hasOption = getOptions().hasOption(arg);",
      "right" : "boolean hasOption = getOptions().hasOption(arg);",
      "info" : "VariableDeclarationStatement[11842-11890]:VariableDeclarationStatement[11845-11893]"
    }, {
      "left" : "if (!hasOption)",
      "right" : "if (!hasOption)",
      "info" : "IfStatement[11970-12092]:IfStatement[11973-12095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11994-12092]:Block[11997-12095]"
    }, {
      "left" : "throw new UnrecognizedOptionException(\"Unrecognized option: \" + arg, arg);",
      "right" : "throw new UnrecognizedOptionException(\"Unrecognized option: \" + arg, arg);",
      "info" : "ThrowStatement[12008-12082]:ThrowStatement[12011-12085]"
    }, {
      "left" : "Option opt = (Option) getOptions().getOption(arg).clone();",
      "right" : "Option opt = (Option) getOptions().getOption(arg).clone();",
      "info" : "VariableDeclarationStatement[12147-12205]:VariableDeclarationStatement[12150-12208]"
    }, {
      "left" : "if (opt.isRequired())",
      "right" : "if (opt.isRequired())",
      "info" : "IfStatement[12320-12416]:IfStatement[12323-12419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12350-12416]:Block[12353-12419]"
    }, {
      "left" : "getRequiredOptions().remove(opt.getKey());",
      "right" : "getRequiredOptions().remove(opt.getKey());",
      "info" : "ExpressionStatement[12364-12406]:ExpressionStatement[12367-12409]"
    }, {
      "left" : "if (getOptions().getOptionGroup(opt) != null)",
      "right" : "if (getOptions().getOptionGroup(opt) != null)",
      "info" : "IfStatement[12533-12818]:IfStatement[12536-12821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12587-12818]:Block[12590-12821]"
    }, {
      "left" : "OptionGroup group = getOptions().getOptionGroup(opt);",
      "right" : "OptionGroup group = getOptions().getOptionGroup(opt);",
      "info" : "VariableDeclarationStatement[12601-12654]:VariableDeclarationStatement[12604-12657]"
    }, {
      "left" : "if (group.isRequired())",
      "right" : "if (group.isRequired())",
      "info" : "IfStatement[12668-12771]:IfStatement[12671-12774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12704-12771]:Block[12707-12774]"
    }, {
      "left" : "getRequiredOptions().remove(group);",
      "right" : "getRequiredOptions().remove(group);",
      "info" : "ExpressionStatement[12722-12757]:ExpressionStatement[12725-12760]"
    }, {
      "left" : "group.setSelected(opt);",
      "right" : "group.setSelected(opt);",
      "info" : "ExpressionStatement[12785-12808]:ExpressionStatement[12788-12811]"
    }, {
      "left" : "if (opt.hasArg())",
      "right" : "if (opt.hasArg())",
      "info" : "IfStatement[12877-12950]:IfStatement[12880-12953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12903-12950]:Block[12906-12953]"
    }, {
      "left" : "processArgs(opt, iter);",
      "right" : "processArgs(opt, iter);",
      "info" : "ExpressionStatement[12917-12940]:ExpressionStatement[12920-12943]"
    }, {
      "left" : "cmd.addOption(opt);",
      "right" : "cmd.addOption(opt);",
      "info" : "ExpressionStatement[13006-13025]:ExpressionStatement[13009-13028]"
    } ]
  },
  "interFileMappings" : { }
}