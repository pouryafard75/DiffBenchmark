{
  "matchedElements" : [
 {
    "left" : "class : Variance",
    "right" : "class : Variance",
    "info" : "TypeDeclaration[1221-24986]:TypeDeclaration[1221-24990]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[3524-3634]:FieldDeclaration[3524-3634]"
  }, {
    "left" : "moment",
    "right" : "moment",
    "info" : "FieldDeclaration[3640-3747]:FieldDeclaration[3640-3747]"
  }, {
    "left" : "incMoment",
    "right" : "incMoment",
    "info" : "FieldDeclaration[3753-4107]:FieldDeclaration[3753-4107]"
  }, {
    "left" : "isBiasCorrected",
    "right" : "isBiasCorrected",
    "info" : "FieldDeclaration[4113-4359]:FieldDeclaration[4113-4359]"
  }, {
    "left" : "public Variance()",
    "right" : "public Variance()",
    "info" : "MethodDeclaration[4365-4538]:MethodDeclaration[4365-4538]"
  }, {
    "left" : "public Variance(m2 )",
    "right" : "public Variance(m2 )",
    "info" : "MethodDeclaration[4544-5087]:MethodDeclaration[4544-5087]"
  }, {
    "left" : "public Variance(isBiasCorrected boolean)",
    "right" : "public Variance(isBiasCorrected boolean)",
    "info" : "MethodDeclaration[5093-5507]:MethodDeclaration[5093-5507]"
  }, {
    "left" : "public Variance(isBiasCorrected boolean, m2 )",
    "right" : "public Variance(isBiasCorrected boolean, m2 )",
    "info" : "MethodDeclaration[5513-6024]:MethodDeclaration[5513-6024]"
  }, {
    "left" : "public Variance(original )",
    "right" : "public Variance(original )",
    "info" : "MethodDeclaration[6030-6283]:MethodDeclaration[6030-6283]"
  }, {
    "left" : "public increment(d double) : void",
    "right" : "public increment(d double) : void",
    "info" : "MethodDeclaration[6289-7036]:MethodDeclaration[6289-7036]"
  }, {
    "left" : "public getResult() : double",
    "right" : "public getResult() : double",
    "info" : "MethodDeclaration[7042-7485]:MethodDeclaration[7042-7485]"
  }, {
    "left" : "public getN() : long",
    "right" : "public getN() : long",
    "info" : "MethodDeclaration[7491-7584]:MethodDeclaration[7491-7584]"
  }, {
    "left" : "public clear() : void",
    "right" : "public clear() : void",
    "info" : "MethodDeclaration[7590-7731]:MethodDeclaration[7590-7731]"
  }, {
    "left" : "public evaluate(values ...) : double",
    "right" : "public evaluate(values ...) : double",
    "info" : "MethodDeclaration[7737-8605]:MethodDeclaration[7737-8605]"
  }, {
    "left" : "public evaluate(values , begin int, length int) : double",
    "right" : "public evaluate(values , begin int, length int) : double",
    "info" : "MethodDeclaration[8611-9966]:MethodDeclaration[8611-9966]"
  }, {
    "left" : "public evaluate(values , weights , begin int, length int) : double",
    "right" : "public evaluate(values , weights , begin int, length int) : double",
    "info" : "MethodDeclaration[9972-12703]:MethodDeclaration[9972-12703]"
  }, {
    "left" : "public evaluate(values , weights ...) : double",
    "right" : "public evaluate(values , weights ...) : double",
    "info" : "MethodDeclaration[12709-14691]:MethodDeclaration[12709-14691]"
  }, {
    "left" : "public evaluate(values , mean double, begin int, length int) : double",
    "right" : "public evaluate(values , mean double, begin int, length int) : double",
    "info" : "MethodDeclaration[14697-16804]:MethodDeclaration[14697-16804]"
  }, {
    "left" : "public evaluate(values , mean double) : double",
    "right" : "public evaluate(values , mean double) : double",
    "info" : "MethodDeclaration[16810-18105]:MethodDeclaration[16810-18105]"
  }, {
    "left" : "public evaluate(values , weights , mean double, begin int, length int) : double",
    "right" : "public evaluate(values , weights , mean double, begin int, length int) : double",
    "info" : "MethodDeclaration[18111-21607]:MethodDeclaration[18111-21611]"
  }, {
    "left" : "public evaluate(values , weights , mean double) : double",
    "right" : "public evaluate(values , weights , mean double) : double",
    "info" : "MethodDeclaration[21613-23863]:MethodDeclaration[21617-23867]"
  }, {
    "left" : "public isBiasCorrected() : boolean",
    "right" : "public isBiasCorrected() : boolean",
    "info" : "MethodDeclaration[23869-24001]:MethodDeclaration[23873-24005]"
  }, {
    "left" : "public setBiasCorrected(biasCorrected boolean) : void",
    "right" : "public setBiasCorrected(biasCorrected boolean) : void",
    "info" : "MethodDeclaration[24007-24184]:MethodDeclaration[24011-24188]"
  }, {
    "left" : "public copy() : ",
    "right" : "public copy() : ",
    "info" : "MethodDeclaration[24190-24364]:MethodDeclaration[24194-24368]"
  }, {
    "left" : "public copy(source , dest ) : void",
    "right" : "public copy(source , dest ) : void",
    "info" : "MethodDeclaration[24370-24984]:MethodDeclaration[24374-24988]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3406-3412]:Modifier[3406-3412]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3413-3418]:TYPE_DECLARATION_KIND[3413-3418]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4476-4482]:Modifier[4476-4482]"
  }, {
    "left" : "Variance",
    "right" : "Variance",
    "info" : "SimpleName[4483-4491]:SimpleName[4483-4491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4494-4538]:Block[4494-4538]"
  }, {
    "left" : "moment = new SecondMoment();",
    "right" : "moment = new SecondMoment();",
    "info" : "ExpressionStatement[4504-4532]:ExpressionStatement[4504-4532]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4988-4994]:Modifier[4988-4994]"
  }, {
    "left" : "Variance",
    "right" : "Variance",
    "info" : "SimpleName[4995-5003]:SimpleName[4995-5003]"
  }, {
    "left" : "final SecondMoment m2",
    "right" : "final SecondMoment m2",
    "info" : "SingleVariableDeclaration[5004-5025]:SingleVariableDeclaration[5004-5025]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5027-5087]:Block[5027-5087]"
  }, {
    "left" : "incMoment = false;",
    "right" : "incMoment = false;",
    "info" : "ExpressionStatement[5037-5055]:ExpressionStatement[5037-5055]"
  }, {
    "left" : "this.moment = m2;",
    "right" : "this.moment = m2;",
    "info" : "ExpressionStatement[5064-5081]:ExpressionStatement[5064-5081]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5374-5380]:Modifier[5374-5380]"
  }, {
    "left" : "Variance",
    "right" : "Variance",
    "info" : "SimpleName[5381-5389]:SimpleName[5381-5389]"
  }, {
    "left" : "boolean isBiasCorrected",
    "right" : "boolean isBiasCorrected",
    "info" : "SingleVariableDeclaration[5390-5413]:SingleVariableDeclaration[5390-5413]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5415-5507]:Block[5415-5507]"
  }, {
    "left" : "moment = new SecondMoment();",
    "right" : "moment = new SecondMoment();",
    "info" : "ExpressionStatement[5425-5453]:ExpressionStatement[5425-5453]"
  }, {
    "left" : "this.isBiasCorrected = isBiasCorrected;",
    "right" : "this.isBiasCorrected = isBiasCorrected;",
    "info" : "ExpressionStatement[5462-5501]:ExpressionStatement[5462-5501]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5858-5864]:Modifier[5858-5864]"
  }, {
    "left" : "Variance",
    "right" : "Variance",
    "info" : "SimpleName[5865-5873]:SimpleName[5865-5873]"
  }, {
    "left" : "boolean isBiasCorrected",
    "right" : "boolean isBiasCorrected",
    "info" : "SingleVariableDeclaration[5874-5897]:SingleVariableDeclaration[5874-5897]"
  }, {
    "left" : "SecondMoment m2",
    "right" : "SecondMoment m2",
    "info" : "SingleVariableDeclaration[5899-5914]:SingleVariableDeclaration[5899-5914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5916-6024]:Block[5916-6024]"
  }, {
    "left" : "incMoment = false;",
    "right" : "incMoment = false;",
    "info" : "ExpressionStatement[5926-5944]:ExpressionStatement[5926-5944]"
  }, {
    "left" : "this.moment = m2;",
    "right" : "this.moment = m2;",
    "info" : "ExpressionStatement[5953-5970]:ExpressionStatement[5953-5970]"
  }, {
    "left" : "this.isBiasCorrected = isBiasCorrected;",
    "right" : "this.isBiasCorrected = isBiasCorrected;",
    "info" : "ExpressionStatement[5979-6018]:ExpressionStatement[5979-6018]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6211-6217]:Modifier[6211-6217]"
  }, {
    "left" : "Variance",
    "right" : "Variance",
    "info" : "SimpleName[6218-6226]:SimpleName[6218-6226]"
  }, {
    "left" : "Variance original",
    "right" : "Variance original",
    "info" : "SingleVariableDeclaration[6227-6244]:SingleVariableDeclaration[6227-6244]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6246-6283]:Block[6246-6283]"
  }, {
    "left" : "copy(original, this);",
    "right" : "copy(original, this);",
    "info" : "ExpressionStatement[6256-6277]:ExpressionStatement[6256-6277]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6909-6918]:MarkerAnnotation[6909-6918]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6923-6929]:Modifier[6923-6929]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6930-6934]:PrimitiveType[6930-6934]"
  }, {
    "left" : "increment",
    "right" : "increment",
    "info" : "SimpleName[6935-6944]:SimpleName[6935-6944]"
  }, {
    "left" : "final double d",
    "right" : "final double d",
    "info" : "SingleVariableDeclaration[6945-6959]:SingleVariableDeclaration[6945-6959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6961-7036]:Block[6961-7036]"
  }, {
    "left" : "if (incMoment)",
    "right" : "if (incMoment)",
    "info" : "IfStatement[6971-7030]:IfStatement[6971-7030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6986-7030]:Block[6986-7030]"
  }, {
    "left" : "moment.increment(d);",
    "right" : "moment.increment(d);",
    "info" : "ExpressionStatement[7000-7020]:ExpressionStatement[7000-7020]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7079-7088]:MarkerAnnotation[7079-7088]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7093-7099]:Modifier[7093-7099]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[7100-7106]:PrimitiveType[7100-7106]"
  }, {
    "left" : "getResult",
    "right" : "getResult",
    "info" : "SimpleName[7107-7116]:SimpleName[7107-7116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7119-7485]:Block[7119-7485]"
  }, {
    "left" : "if (moment.n == 0)",
    "right" : "if (moment.n == 0)",
    "info" : "IfStatement[7133-7479]:IfStatement[7133-7479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7152-7202]:Block[7152-7202]"
  }, {
    "left" : "return Double.NaN;",
    "right" : "return Double.NaN;",
    "info" : "ReturnStatement[7170-7188]:ReturnStatement[7170-7188]"
  }, {
    "left" : "if (moment.n == 1)",
    "right" : "if (moment.n == 1)",
    "info" : "IfStatement[7208-7479]:IfStatement[7208-7479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7227-7269]:Block[7227-7269]"
  }, {
    "left" : "return 0d;",
    "right" : "return 0d;",
    "info" : "ReturnStatement[7245-7255]:ReturnStatement[7245-7255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7275-7479]:Block[7275-7479]"
  }, {
    "left" : "if (isBiasCorrected)",
    "right" : "if (isBiasCorrected)",
    "info" : "IfStatement[7293-7465]:IfStatement[7293-7465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7314-7389]:Block[7314-7389]"
  }, {
    "left" : "return moment.m2 / (moment.n - 1d);",
    "right" : "return moment.m2 / (moment.n - 1d);",
    "info" : "ReturnStatement[7336-7371]:ReturnStatement[7336-7371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7395-7465]:Block[7395-7465]"
  }, {
    "left" : "return moment.m2 / (moment.n);",
    "right" : "return moment.m2 / (moment.n);",
    "info" : "ReturnStatement[7417-7447]:ReturnStatement[7417-7447]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7528-7534]:Modifier[7528-7534]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[7535-7539]:PrimitiveType[7535-7539]"
  }, {
    "left" : "getN",
    "right" : "getN",
    "info" : "SimpleName[7540-7544]:SimpleName[7540-7544]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7547-7584]:Block[7547-7584]"
  }, {
    "left" : "return moment.getN();",
    "right" : "return moment.getN();",
    "info" : "ReturnStatement[7557-7578]:ReturnStatement[7557-7578]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7627-7636]:MarkerAnnotation[7627-7636]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7641-7647]:Modifier[7641-7647]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7648-7652]:PrimitiveType[7648-7652]"
  }, {
    "left" : "clear",
    "right" : "clear",
    "info" : "SimpleName[7653-7658]:SimpleName[7653-7658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7661-7731]:Block[7661-7731]"
  }, {
    "left" : "if (incMoment)",
    "right" : "if (incMoment)",
    "info" : "IfStatement[7671-7725]:IfStatement[7671-7725]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7686-7725]:Block[7686-7725]"
  }, {
    "left" : "moment.clear();",
    "right" : "moment.clear();",
    "info" : "ExpressionStatement[7700-7715]:ExpressionStatement[7700-7715]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8372-8381]:MarkerAnnotation[8372-8381]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8386-8392]:Modifier[8386-8392]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[8393-8399]:PrimitiveType[8393-8399]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[8400-8408]:SimpleName[8400-8408]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[8409-8430]:SingleVariableDeclaration[8409-8430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8432-8605]:Block[8432-8605]"
  }, {
    "left" : "if (values == null)",
    "right" : "if (values == null)",
    "info" : "IfStatement[8442-8548]:IfStatement[8442-8548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8462-8548]:Block[8462-8548]"
  }, {
    "left" : "throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);",
    "right" : "throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);",
    "info" : "ThrowStatement[8476-8538]:ThrowStatement[8476-8538]"
  }, {
    "left" : "return evaluate(values, 0, values.length);",
    "right" : "return evaluate(values, 0, values.length);",
    "info" : "ReturnStatement[8557-8599]:ReturnStatement[8557-8599]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[9463-9472]:MarkerAnnotation[9463-9472]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9477-9483]:Modifier[9477-9483]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[9484-9490]:PrimitiveType[9484-9490]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[9491-9499]:SimpleName[9491-9499]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[9500-9521]:SingleVariableDeclaration[9500-9521]"
  }, {
    "left" : "final int begin",
    "right" : "final int begin",
    "info" : "SingleVariableDeclaration[9523-9538]:SingleVariableDeclaration[9523-9538]"
  }, {
    "left" : "final int length",
    "right" : "final int length",
    "info" : "SingleVariableDeclaration[9540-9556]:SingleVariableDeclaration[9540-9556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9558-9966]:Block[9558-9966]"
  }, {
    "left" : "double var = Double.NaN;",
    "right" : "double var = Double.NaN;",
    "info" : "VariableDeclarationStatement[9569-9593]:VariableDeclarationStatement[9569-9593]"
  }, {
    "left" : "if (test(values, begin, length))",
    "right" : "if (test(values, begin, length))",
    "info" : "IfStatement[9603-9940]:IfStatement[9603-9940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9636-9940]:Block[9636-9940]"
  }, {
    "left" : "clear();",
    "right" : "clear();",
    "info" : "ExpressionStatement[9650-9658]:ExpressionStatement[9650-9658]"
  }, {
    "left" : "if (length == 1)",
    "right" : "if (length == 1)",
    "info" : "IfStatement[9671-9930]:IfStatement[9671-9930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9688-9730]:Block[9688-9730]"
  }, {
    "left" : "var = 0.0;",
    "right" : "var = 0.0;",
    "info" : "ExpressionStatement[9706-9716]:ExpressionStatement[9706-9716]"
  }, {
    "left" : "if (length > 1)",
    "right" : "if (length > 1)",
    "info" : "IfStatement[9736-9930]:IfStatement[9736-9930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9752-9930]:Block[9752-9930]"
  }, {
    "left" : "Mean mean = new Mean();",
    "right" : "Mean mean = new Mean();",
    "info" : "VariableDeclarationStatement[9770-9793]:VariableDeclarationStatement[9770-9793]"
  }, {
    "left" : "double m = mean.evaluate(values, begin, length);",
    "right" : "double m = mean.evaluate(values, begin, length);",
    "info" : "VariableDeclarationStatement[9810-9858]:VariableDeclarationStatement[9810-9858]"
  }, {
    "left" : "var = evaluate(values, m, begin, length);",
    "right" : "var = evaluate(values, m, begin, length);",
    "info" : "ExpressionStatement[9875-9916]:ExpressionStatement[9875-9916]"
  }, {
    "left" : "return var;",
    "right" : "return var;",
    "info" : "ReturnStatement[9949-9960]:ReturnStatement[9949-9960]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12137-12143]:Modifier[12137-12143]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[12144-12150]:PrimitiveType[12144-12150]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[12151-12159]:SimpleName[12151-12159]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[12160-12181]:SingleVariableDeclaration[12160-12181]"
  }, {
    "left" : "final double[] weights",
    "right" : "final double[] weights",
    "info" : "SingleVariableDeclaration[12183-12205]:SingleVariableDeclaration[12183-12205]"
  }, {
    "left" : "final int begin",
    "right" : "final int begin",
    "info" : "SingleVariableDeclaration[12234-12249]:SingleVariableDeclaration[12234-12249]"
  }, {
    "left" : "final int length",
    "right" : "final int length",
    "info" : "SingleVariableDeclaration[12251-12267]:SingleVariableDeclaration[12251-12267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12269-12703]:Block[12269-12703]"
  }, {
    "left" : "double var = Double.NaN;",
    "right" : "double var = Double.NaN;",
    "info" : "VariableDeclarationStatement[12280-12304]:VariableDeclarationStatement[12280-12304]"
  }, {
    "left" : "if (test(values, weights,begin, length))",
    "right" : "if (test(values, weights,begin, length))",
    "info" : "IfStatement[12314-12677]:IfStatement[12314-12677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12355-12677]:Block[12355-12677]"
  }, {
    "left" : "clear();",
    "right" : "clear();",
    "info" : "ExpressionStatement[12369-12377]:ExpressionStatement[12369-12377]"
  }, {
    "left" : "if (length == 1)",
    "right" : "if (length == 1)",
    "info" : "IfStatement[12390-12667]:IfStatement[12390-12667]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12407-12449]:Block[12407-12449]"
  }, {
    "left" : "var = 0.0;",
    "right" : "var = 0.0;",
    "info" : "ExpressionStatement[12425-12435]:ExpressionStatement[12425-12435]"
  }, {
    "left" : "if (length > 1)",
    "right" : "if (length > 1)",
    "info" : "IfStatement[12455-12667]:IfStatement[12455-12667]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12471-12667]:Block[12471-12667]"
  }, {
    "left" : "Mean mean = new Mean();",
    "right" : "Mean mean = new Mean();",
    "info" : "VariableDeclarationStatement[12489-12512]:VariableDeclarationStatement[12489-12512]"
  }, {
    "left" : "double m = mean.evaluate(values, weights, begin, length);",
    "right" : "double m = mean.evaluate(values, weights, begin, length);",
    "info" : "VariableDeclarationStatement[12529-12586]:VariableDeclarationStatement[12529-12586]"
  }, {
    "left" : "var = evaluate(values, weights, m, begin, length);",
    "right" : "var = evaluate(values, weights, m, begin, length);",
    "info" : "ExpressionStatement[12603-12653]:ExpressionStatement[12603-12653]"
  }, {
    "left" : "return var;",
    "right" : "return var;",
    "info" : "ReturnStatement[12686-12697]:ReturnStatement[12686-12697]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14554-14560]:Modifier[14554-14560]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[14561-14567]:PrimitiveType[14561-14567]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[14568-14576]:SimpleName[14568-14576]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[14577-14598]:SingleVariableDeclaration[14577-14598]"
  }, {
    "left" : "final double[] weights",
    "right" : "final double[] weights",
    "info" : "SingleVariableDeclaration[14600-14622]:SingleVariableDeclaration[14600-14622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14624-14691]:Block[14624-14691]"
  }, {
    "left" : "return evaluate(values, weights, 0, values.length);",
    "right" : "return evaluate(values, weights, 0, values.length);",
    "info" : "ReturnStatement[14634-14685]:ReturnStatement[14634-14685]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15900-15906]:Modifier[15900-15906]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[15907-15913]:PrimitiveType[15907-15913]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[15914-15922]:SimpleName[15914-15922]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[15923-15944]:SingleVariableDeclaration[15923-15944]"
  }, {
    "left" : "final double mean",
    "right" : "final double mean",
    "info" : "SingleVariableDeclaration[15946-15963]:SingleVariableDeclaration[15946-15963]"
  }, {
    "left" : "final int begin",
    "right" : "final int begin",
    "info" : "SingleVariableDeclaration[15977-15992]:SingleVariableDeclaration[15977-15992]"
  }, {
    "left" : "final int length",
    "right" : "final int length",
    "info" : "SingleVariableDeclaration[15994-16010]:SingleVariableDeclaration[15994-16010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16012-16804]:Block[16012-16804]"
  }, {
    "left" : "double var = Double.NaN;",
    "right" : "double var = Double.NaN;",
    "info" : "VariableDeclarationStatement[16023-16047]:VariableDeclarationStatement[16023-16047]"
  }, {
    "left" : "if (test(values, begin, length))",
    "right" : "if (test(values, begin, length))",
    "info" : "IfStatement[16057-16778]:IfStatement[16057-16778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16090-16778]:Block[16090-16778]"
  }, {
    "left" : "if (length == 1)",
    "right" : "if (length == 1)",
    "info" : "IfStatement[16104-16768]:IfStatement[16104-16768]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16121-16163]:Block[16121-16163]"
  }, {
    "left" : "var = 0.0;",
    "right" : "var = 0.0;",
    "info" : "ExpressionStatement[16139-16149]:ExpressionStatement[16139-16149]"
  }, {
    "left" : "if (length > 1)",
    "right" : "if (length > 1)",
    "info" : "IfStatement[16169-16768]:IfStatement[16169-16768]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16185-16768]:Block[16185-16768]"
  }, {
    "left" : "double accum = 0.0;",
    "right" : "double accum = 0.0;",
    "info" : "VariableDeclarationStatement[16203-16222]:VariableDeclarationStatement[16203-16222]"
  }, {
    "left" : "double dev = 0.0;",
    "right" : "double dev = 0.0;",
    "info" : "VariableDeclarationStatement[16239-16256]:VariableDeclarationStatement[16239-16256]"
  }, {
    "left" : "double accum2 = 0.0;",
    "right" : "double accum2 = 0.0;",
    "info" : "VariableDeclarationStatement[16273-16293]:VariableDeclarationStatement[16273-16293]"
  }, {
    "left" : "for (int i = begin; i < begin + length; i++)",
    "right" : "for (int i = begin; i < begin + length; i++)",
    "info" : "ForStatement[16310-16493]:ForStatement[16310-16493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16355-16493]:Block[16355-16493]"
  }, {
    "left" : "dev = values[i] - mean;",
    "right" : "dev = values[i] - mean;",
    "info" : "ExpressionStatement[16377-16400]:ExpressionStatement[16377-16400]"
  }, {
    "left" : "accum += dev * dev;",
    "right" : "accum += dev * dev;",
    "info" : "ExpressionStatement[16421-16440]:ExpressionStatement[16421-16440]"
  }, {
    "left" : "accum2 += dev;",
    "right" : "accum2 += dev;",
    "info" : "ExpressionStatement[16461-16475]:ExpressionStatement[16461-16475]"
  }, {
    "left" : "double len = length;",
    "right" : "double len = length;",
    "info" : "VariableDeclarationStatement[16510-16530]:VariableDeclarationStatement[16510-16530]"
  }, {
    "left" : "if (isBiasCorrected)",
    "right" : "if (isBiasCorrected)",
    "info" : "IfStatement[16547-16754]:IfStatement[16547-16754]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16568-16662]:Block[16568-16662]"
  }, {
    "left" : "var = (accum - (accum2 * accum2 / len)) / (len - 1.0);",
    "right" : "var = (accum - (accum2 * accum2 / len)) / (len - 1.0);",
    "info" : "ExpressionStatement[16590-16644]:ExpressionStatement[16590-16644]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16668-16754]:Block[16668-16754]"
  }, {
    "left" : "var = (accum - (accum2 * accum2 / len)) / len;",
    "right" : "var = (accum - (accum2 * accum2 / len)) / len;",
    "info" : "ExpressionStatement[16690-16736]:ExpressionStatement[16690-16736]"
  }, {
    "left" : "return var;",
    "right" : "return var;",
    "info" : "ReturnStatement[16787-16798]:ReturnStatement[16787-16798]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17976-17982]:Modifier[17976-17982]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[17983-17989]:PrimitiveType[17983-17989]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[17990-17998]:SimpleName[17990-17998]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[17999-18020]:SingleVariableDeclaration[17999-18020]"
  }, {
    "left" : "final double mean",
    "right" : "final double mean",
    "info" : "SingleVariableDeclaration[18022-18039]:SingleVariableDeclaration[18022-18039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18041-18105]:Block[18041-18105]"
  }, {
    "left" : "return evaluate(values, mean, 0, values.length);",
    "right" : "return evaluate(values, mean, 0, values.length);",
    "info" : "ReturnStatement[18051-18099]:ReturnStatement[18051-18099]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20496-20502]:Modifier[20496-20502]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[20503-20509]:PrimitiveType[20503-20509]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[20510-20518]:SimpleName[20510-20518]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[20519-20540]:SingleVariableDeclaration[20519-20540]"
  }, {
    "left" : "final double[] weights",
    "right" : "final double[] weights",
    "info" : "SingleVariableDeclaration[20542-20564]:SingleVariableDeclaration[20542-20564]"
  }, {
    "left" : "final double mean",
    "right" : "final double mean",
    "info" : "SingleVariableDeclaration[20593-20610]:SingleVariableDeclaration[20593-20610]"
  }, {
    "left" : "final int begin",
    "right" : "final int begin",
    "info" : "SingleVariableDeclaration[20612-20627]:SingleVariableDeclaration[20612-20627]"
  }, {
    "left" : "final int length",
    "right" : "final int length",
    "info" : "SingleVariableDeclaration[20629-20645]:SingleVariableDeclaration[20629-20645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20647-21607]:Block[20647-21611]"
  }, {
    "left" : "double var = Double.NaN;",
    "right" : "double var = Double.NaN;",
    "info" : "VariableDeclarationStatement[20658-20682]:VariableDeclarationStatement[20658-20682]"
  }, {
    "left" : "if (test(values, weights, begin, length))",
    "right" : "if (test(values, weights, begin, length))",
    "info" : "IfStatement[20692-21581]:IfStatement[20692-21585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20734-21581]:Block[20734-21585]"
  }, {
    "left" : "if (length == 1)",
    "right" : "if (length == 1)",
    "info" : "IfStatement[20748-21571]:IfStatement[20748-21575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20765-20807]:Block[20765-20807]"
  }, {
    "left" : "var = 0.0;",
    "right" : "var = 0.0;",
    "info" : "ExpressionStatement[20783-20793]:ExpressionStatement[20783-20793]"
  }, {
    "left" : "if (length > 1)",
    "right" : "if (length > 1)",
    "info" : "IfStatement[20813-21571]:IfStatement[20813-21575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20829-21571]:Block[20829-21575]"
  }, {
    "left" : "double accum = 0.0;",
    "right" : "double accum = 0.0;",
    "info" : "VariableDeclarationStatement[20847-20866]:VariableDeclarationStatement[20847-20866]"
  }, {
    "left" : "double dev = 0.0;",
    "right" : "double dev = 0.0;",
    "info" : "VariableDeclarationStatement[20883-20900]:VariableDeclarationStatement[20883-20900]"
  }, {
    "left" : "double accum2 = 0.0;",
    "right" : "double accum2 = 0.0;",
    "info" : "VariableDeclarationStatement[20917-20937]:VariableDeclarationStatement[20917-20937]"
  }, {
    "left" : "for (int i = begin; i < begin + length; i++)",
    "right" : "for (int i = begin; i < begin + length; i++)",
    "info" : "ForStatement[20954-21165]:ForStatement[20954-21165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20999-21165]:Block[20999-21165]"
  }, {
    "left" : "dev = values[i] - mean;",
    "right" : "dev = values[i] - mean;",
    "info" : "ExpressionStatement[21021-21044]:ExpressionStatement[21021-21044]"
  }, {
    "left" : "accum += weights[i] * (dev * dev);",
    "right" : "accum += weights[i] * (dev * dev);",
    "info" : "ExpressionStatement[21065-21099]:ExpressionStatement[21065-21099]"
  }, {
    "left" : "accum2 += weights[i] * dev;",
    "right" : "accum2 += weights[i] * dev;",
    "info" : "ExpressionStatement[21120-21147]:ExpressionStatement[21120-21147]"
  }, {
    "left" : "double sumWts = 0;",
    "right" : "double sumWts = 0;",
    "info" : "VariableDeclarationStatement[21183-21201]:VariableDeclarationStatement[21183-21201]"
  }, {
    "left" : "for (int i = 0; i < weights.length; i++)",
    "right" : "for (int i = begin; i < begin + length; i++)",
    "info" : "ForStatement[21218-21320]:ForStatement[21218-21324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21259-21320]:Block[21263-21324]"
  }, {
    "left" : "sumWts += weights[i];",
    "right" : "sumWts += weights[i];",
    "info" : "ExpressionStatement[21281-21302]:ExpressionStatement[21285-21306]"
  }, {
    "left" : "if (isBiasCorrected)",
    "right" : "if (isBiasCorrected)",
    "info" : "IfStatement[21338-21557]:IfStatement[21342-21561]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21359-21459]:Block[21363-21463]"
  }, {
    "left" : "var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0);",
    "right" : "var = (accum - (accum2 * accum2 / sumWts)) / (sumWts - 1.0);",
    "info" : "ExpressionStatement[21381-21441]:ExpressionStatement[21385-21445]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21465-21557]:Block[21469-21561]"
  }, {
    "left" : "var = (accum - (accum2 * accum2 / sumWts)) / sumWts;",
    "right" : "var = (accum - (accum2 * accum2 / sumWts)) / sumWts;",
    "info" : "ExpressionStatement[21487-21539]:ExpressionStatement[21491-21543]"
  }, {
    "left" : "return var;",
    "right" : "return var;",
    "info" : "ReturnStatement[21590-21601]:ReturnStatement[21594-21605]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23701-23707]:Modifier[23705-23711]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[23708-23714]:PrimitiveType[23712-23718]"
  }, {
    "left" : "evaluate",
    "right" : "evaluate",
    "info" : "SimpleName[23715-23723]:SimpleName[23719-23727]"
  }, {
    "left" : "final double[] values",
    "right" : "final double[] values",
    "info" : "SingleVariableDeclaration[23724-23745]:SingleVariableDeclaration[23728-23749]"
  }, {
    "left" : "final double[] weights",
    "right" : "final double[] weights",
    "info" : "SingleVariableDeclaration[23747-23769]:SingleVariableDeclaration[23751-23773]"
  }, {
    "left" : "final double mean",
    "right" : "final double mean",
    "info" : "SingleVariableDeclaration[23771-23788]:SingleVariableDeclaration[23775-23792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23790-23863]:Block[23794-23867]"
  }, {
    "left" : "return evaluate(values, weights, mean, 0, values.length);",
    "right" : "return evaluate(values, weights, mean, 0, values.length);",
    "info" : "ReturnStatement[23800-23857]:ReturnStatement[23804-23861]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23929-23935]:Modifier[23933-23939]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[23936-23943]:PrimitiveType[23940-23947]"
  }, {
    "left" : "isBiasCorrected",
    "right" : "isBiasCorrected",
    "info" : "SimpleName[23944-23959]:SimpleName[23948-23963]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23962-24001]:Block[23966-24005]"
  }, {
    "left" : "return isBiasCorrected;",
    "right" : "return isBiasCorrected;",
    "info" : "ReturnStatement[23972-23995]:ReturnStatement[23976-23999]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24079-24085]:Modifier[24083-24089]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24086-24090]:PrimitiveType[24090-24094]"
  }, {
    "left" : "setBiasCorrected",
    "right" : "setBiasCorrected",
    "info" : "SimpleName[24091-24107]:SimpleName[24095-24111]"
  }, {
    "left" : "boolean biasCorrected",
    "right" : "boolean biasCorrected",
    "info" : "SingleVariableDeclaration[24108-24129]:SingleVariableDeclaration[24112-24133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24131-24184]:Block[24135-24188]"
  }, {
    "left" : "this.isBiasCorrected = biasCorrected;",
    "right" : "this.isBiasCorrected = biasCorrected;",
    "info" : "ExpressionStatement[24141-24178]:ExpressionStatement[24145-24182]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[24227-24236]:MarkerAnnotation[24231-24240]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24241-24247]:Modifier[24245-24251]"
  }, {
    "left" : "Variance",
    "right" : "Variance",
    "info" : "SimpleType[24248-24256]:SimpleType[24252-24260]"
  }, {
    "left" : "copy",
    "right" : "copy",
    "info" : "SimpleName[24257-24261]:SimpleName[24261-24265]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24264-24364]:Block[24268-24368]"
  }, {
    "left" : "Variance result = new Variance();",
    "right" : "Variance result = new Variance();",
    "info" : "VariableDeclarationStatement[24274-24307]:VariableDeclarationStatement[24278-24311]"
  }, {
    "left" : "copy(this, result);",
    "right" : "copy(this, result);",
    "info" : "ExpressionStatement[24316-24335]:ExpressionStatement[24320-24339]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[24344-24358]:ReturnStatement[24348-24362]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24621-24627]:Modifier[24625-24631]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[24628-24634]:Modifier[24632-24638]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24635-24639]:PrimitiveType[24639-24643]"
  }, {
    "left" : "copy",
    "right" : "copy",
    "info" : "SimpleName[24640-24644]:SimpleName[24644-24648]"
  }, {
    "left" : "Variance source",
    "right" : "Variance source",
    "info" : "SingleVariableDeclaration[24645-24660]:SingleVariableDeclaration[24649-24664]"
  }, {
    "left" : "Variance dest",
    "right" : "Variance dest",
    "info" : "SingleVariableDeclaration[24662-24675]:SingleVariableDeclaration[24666-24679]"
  }, {
    "left" : "NullArgumentException",
    "right" : "NullArgumentException",
    "info" : "SimpleType[24692-24713]:SimpleType[24696-24717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24714-24984]:Block[24718-24988]"
  }, {
    "left" : "MathUtils.checkNotNull(source);",
    "right" : "MathUtils.checkNotNull(source);",
    "info" : "ExpressionStatement[24724-24755]:ExpressionStatement[24728-24759]"
  }, {
    "left" : "MathUtils.checkNotNull(dest);",
    "right" : "MathUtils.checkNotNull(dest);",
    "info" : "ExpressionStatement[24764-24793]:ExpressionStatement[24768-24797]"
  }, {
    "left" : "dest.setData(source.getDataRef());",
    "right" : "dest.setData(source.getDataRef());",
    "info" : "ExpressionStatement[24802-24836]:ExpressionStatement[24806-24840]"
  }, {
    "left" : "dest.moment = source.moment.copy();",
    "right" : "dest.moment = source.moment.copy();",
    "info" : "ExpressionStatement[24845-24880]:ExpressionStatement[24849-24884]"
  }, {
    "left" : "dest.isBiasCorrected = source.isBiasCorrected;",
    "right" : "dest.isBiasCorrected = source.isBiasCorrected;",
    "info" : "ExpressionStatement[24889-24935]:ExpressionStatement[24893-24939]"
  }, {
    "left" : "dest.incMoment = source.incMoment;",
    "right" : "dest.incMoment = source.incMoment;",
    "info" : "ExpressionStatement[24944-24978]:ExpressionStatement[24948-24982]"
  } ]
}