{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Option",
      "right" : "Option",
      "info" : "TypeDeclaration[918-18562]:TypeDeclaration[918-18577]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1591-1674]:FieldDeclaration[1591-1674]"
    }, {
      "left" : "public static final int UNINITIALIZED = -1;",
      "right" : "public static final int UNINITIALIZED = -1;",
      "info" : "FieldDeclaration[1680-1811]:FieldDeclaration[1680-1811]"
    }, {
      "left" : "public static final int UNLIMITED_VALUES = -2;",
      "right" : "public static final int UNLIMITED_VALUES = -2;",
      "info" : "FieldDeclaration[1817-1940]:FieldDeclaration[1817-1940]"
    }, {
      "left" : "private String opt;",
      "right" : "private String opt;",
      "info" : "FieldDeclaration[1946-1999]:FieldDeclaration[1946-1999]"
    }, {
      "left" : "private String longOpt;",
      "right" : "private String longOpt;",
      "info" : "FieldDeclaration[2005-2077]:FieldDeclaration[2005-2077]"
    }, {
      "left" : "private String argName;",
      "right" : "private String argName;",
      "info" : "FieldDeclaration[2083-2158]:FieldDeclaration[2083-2158]"
    }, {
      "left" : "private String description;",
      "right" : "private String description;",
      "info" : "FieldDeclaration[2164-2228]:FieldDeclaration[2164-2228]"
    }, {
      "left" : "private boolean required;",
      "right" : "private boolean required;",
      "info" : "FieldDeclaration[2234-2326]:FieldDeclaration[2234-2326]"
    }, {
      "left" : "private boolean optionalArg;",
      "right" : "private boolean optionalArg;",
      "info" : "FieldDeclaration[2332-2435]:FieldDeclaration[2332-2435]"
    }, {
      "left" : "private int numberOfArgs = UNINITIALIZED;",
      "right" : "private int numberOfArgs = UNINITIALIZED;",
      "info" : "FieldDeclaration[2441-2544]:FieldDeclaration[2441-2544]"
    }, {
      "left" : "private Class type;",
      "right" : "private Class type = String.class;",
      "info" : "FieldDeclaration[2550-2604]:FieldDeclaration[2550-2619]"
    }, {
      "left" : "private List values = new ArrayList();",
      "right" : "private List values = new ArrayList();",
      "info" : "FieldDeclaration[2610-2688]:FieldDeclaration[2625-2703]"
    }, {
      "left" : "private char valuesep;",
      "right" : "private char valuesep;",
      "info" : "FieldDeclaration[2694-2769]:FieldDeclaration[2709-2784]"
    }, {
      "left" : "public Option(String opt, String description) throws IllegalArgumentException",
      "right" : "public Option(String opt, String description) throws IllegalArgumentException",
      "info" : "MethodDeclaration[2775-3225]:MethodDeclaration[2790-3240]"
    }, {
      "left" : "public Option(String opt, boolean hasArg, String description) throws IllegalArgumentException",
      "right" : "public Option(String opt, boolean hasArg, String description) throws IllegalArgumentException",
      "info" : "MethodDeclaration[3231-3773]:MethodDeclaration[3246-3788]"
    }, {
      "left" : "public Option(String opt, String longOpt, boolean hasArg, String description)\n           throws IllegalArgumentException",
      "right" : "public Option(String opt, String longOpt, boolean hasArg, String description)\n           throws IllegalArgumentException",
      "info" : "MethodDeclaration[3779-4686]:MethodDeclaration[3794-4701]"
    }, {
      "left" : "public int getId()",
      "right" : "public int getId()",
      "info" : "MethodDeclaration[4692-4972]:MethodDeclaration[4707-4987]"
    }, {
      "left" : "String getKey()",
      "right" : "String getKey()",
      "info" : "MethodDeclaration[4978-5272]:MethodDeclaration[4993-5287]"
    }, {
      "left" : "public String getOpt()",
      "right" : "public String getOpt()",
      "info" : "MethodDeclaration[5278-5642]:MethodDeclaration[5293-5657]"
    }, {
      "left" : "public Object getType()",
      "right" : "public Object getType()",
      "info" : "MethodDeclaration[5648-5808]:MethodDeclaration[5663-5823]"
    }, {
      "left" : "public void setType(Class type)",
      "right" : "public void setType(Class type)",
      "info" : "MethodDeclaration[5814-5986]:MethodDeclaration[5829-6001]"
    }, {
      "left" : "public String getLongOpt()",
      "right" : "public String getLongOpt()",
      "info" : "MethodDeclaration[5992-6199]:MethodDeclaration[6007-6214]"
    }, {
      "left" : "public void setLongOpt(String longOpt)",
      "right" : "public void setLongOpt(String longOpt)",
      "info" : "MethodDeclaration[6205-6403]:MethodDeclaration[6220-6418]"
    }, {
      "left" : "public void setOptionalArg(boolean optionalArg)",
      "right" : "public void setOptionalArg(boolean optionalArg)",
      "info" : "MethodDeclaration[6409-6687]:MethodDeclaration[6424-6702]"
    }, {
      "left" : "public boolean hasOptionalArg()",
      "right" : "public boolean hasOptionalArg()",
      "info" : "MethodDeclaration[6693-6845]:MethodDeclaration[6708-6860]"
    }, {
      "left" : "public boolean hasLongOpt()",
      "right" : "public boolean hasLongOpt()",
      "info" : "MethodDeclaration[6851-7061]:MethodDeclaration[6866-7076]"
    }, {
      "left" : "public boolean hasArg()",
      "right" : "public boolean hasArg()",
      "info" : "MethodDeclaration[7067-7317]:MethodDeclaration[7082-7332]"
    }, {
      "left" : "public String getDescription()",
      "right" : "public String getDescription()",
      "info" : "MethodDeclaration[7323-7534]:MethodDeclaration[7338-7549]"
    }, {
      "left" : "public void setDescription(String description)",
      "right" : "public void setDescription(String description)",
      "info" : "MethodDeclaration[7540-7796]:MethodDeclaration[7555-7811]"
    }, {
      "left" : "public boolean isRequired()",
      "right" : "public boolean isRequired()",
      "info" : "MethodDeclaration[7802-8010]:MethodDeclaration[7817-8025]"
    }, {
      "left" : "public void setRequired(boolean required)",
      "right" : "public void setRequired(boolean required)",
      "info" : "MethodDeclaration[8016-8238]:MethodDeclaration[8031-8253]"
    }, {
      "left" : "public void setArgName(String argName)",
      "right" : "public void setArgName(String argName)",
      "info" : "MethodDeclaration[8244-8465]:MethodDeclaration[8259-8480]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[8471-8665]:MethodDeclaration[8486-8680]"
    }, {
      "left" : "public boolean hasArgName()",
      "right" : "public boolean hasArgName()",
      "info" : "MethodDeclaration[8671-8938]:MethodDeclaration[8686-8953]"
    }, {
      "left" : "public boolean hasArgs()",
      "right" : "public boolean hasArgs()",
      "info" : "MethodDeclaration[8944-9200]:MethodDeclaration[8959-9215]"
    }, {
      "left" : "public void setArgs(int num)",
      "right" : "public void setArgs(int num)",
      "info" : "MethodDeclaration[9206-9415]:MethodDeclaration[9221-9430]"
    }, {
      "left" : "public void setValueSeparator(char sep)",
      "right" : "public void setValueSeparator(char sep)",
      "info" : "MethodDeclaration[9421-9693]:MethodDeclaration[9436-9708]"
    }, {
      "left" : "public char getValueSeparator()",
      "right" : "public char getValueSeparator()",
      "info" : "MethodDeclaration[9699-9882]:MethodDeclaration[9714-9897]"
    }, {
      "left" : "public boolean hasValueSeparator()",
      "right" : "public boolean hasValueSeparator()",
      "info" : "MethodDeclaration[9888-10140]:MethodDeclaration[9903-10155]"
    }, {
      "left" : "public int getArgs()",
      "right" : "public int getArgs()",
      "info" : "MethodDeclaration[10146-10347]:MethodDeclaration[10161-10362]"
    }, {
      "left" : "void addValueForProcessing(String value)",
      "right" : "void addValueForProcessing(String value)",
      "info" : "MethodDeclaration[10353-10731]:MethodDeclaration[10368-10746]"
    }, {
      "left" : "private void processValue(String value)",
      "right" : "private void processValue(String value)",
      "info" : "MethodDeclaration[10737-12090]:MethodDeclaration[10752-12105]"
    }, {
      "left" : "private void add(String value)",
      "right" : "private void add(String value)",
      "info" : "MethodDeclaration[12096-12612]:MethodDeclaration[12111-12627]"
    }, {
      "left" : "public String getValue()",
      "right" : "public String getValue()",
      "info" : "MethodDeclaration[12618-12943]:MethodDeclaration[12633-12958]"
    }, {
      "left" : "public String getValue(int index) throws IndexOutOfBoundsException",
      "right" : "public String getValue(int index) throws IndexOutOfBoundsException",
      "info" : "MethodDeclaration[12949-13521]:MethodDeclaration[12964-13536]"
    }, {
      "left" : "public String getValue(String defaultValue)",
      "right" : "public String getValue(String defaultValue)",
      "info" : "MethodDeclaration[13527-14015]:MethodDeclaration[13542-14030]"
    }, {
      "left" : "public String[] getValues()",
      "right" : "public String[] getValues()",
      "info" : "MethodDeclaration[14021-14370]:MethodDeclaration[14036-14385]"
    }, {
      "left" : "public List getValuesList()",
      "right" : "public List getValuesList()",
      "info" : "MethodDeclaration[14376-14543]:MethodDeclaration[14391-14558]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[14549-15275]:MethodDeclaration[14564-15290]"
    }, {
      "left" : "private boolean hasNoValues()",
      "right" : "private boolean hasNoValues()",
      "info" : "MethodDeclaration[15281-15480]:MethodDeclaration[15296-15495]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[15486-16009]:MethodDeclaration[15501-16024]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[16015-16217]:MethodDeclaration[16030-16232]"
    }, {
      "left" : "public Object clone()",
      "right" : "public Object clone()",
      "info" : "MethodDeclaration[16223-16988]:MethodDeclaration[16238-17003]"
    }, {
      "left" : "void clearValues()",
      "right" : "void clearValues()",
      "info" : "MethodDeclaration[16994-17297]:MethodDeclaration[17009-17312]"
    }, {
      "left" : "public boolean addValue(String value)",
      "right" : "public boolean addValue(String value)",
      "info" : "MethodDeclaration[17303-17792]:MethodDeclaration[17318-17807]"
    }, {
      "left" : "boolean acceptsArg()",
      "right" : "boolean acceptsArg()",
      "info" : "MethodDeclaration[17798-18108]:MethodDeclaration[17813-18123]"
    }, {
      "left" : "boolean requiresArg()",
      "right" : "boolean requiresArg()",
      "info" : "MethodDeclaration[18114-18560]:MethodDeclaration[18129-18575]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3173-3225]:Block[3188-3240]"
    }, {
      "left" : "this(opt, null, false, description);",
      "right" : "this(opt, null, false, description);",
      "info" : "ConstructorInvocation[3183-3219]:ConstructorInvocation[3198-3234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3720-3773]:Block[3735-3788]"
    }, {
      "left" : "this(opt, null, hasArg, description);",
      "right" : "this(opt, null, hasArg, description);",
      "info" : "ConstructorInvocation[3730-3767]:ConstructorInvocation[3745-3782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4355-4686]:Block[4370-4701]"
    }, {
      "left" : "OptionValidator.validateOption(opt);",
      "right" : "OptionValidator.validateOption(opt);",
      "info" : "ExpressionStatement[4408-4444]:ExpressionStatement[4423-4459]"
    }, {
      "left" : "this.opt = opt;",
      "right" : "this.opt = opt;",
      "info" : "ExpressionStatement[4454-4469]:ExpressionStatement[4469-4484]"
    }, {
      "left" : "this.longOpt = longOpt;",
      "right" : "this.longOpt = longOpt;",
      "info" : "ExpressionStatement[4478-4501]:ExpressionStatement[4493-4516]"
    }, {
      "left" : "if (hasArg)",
      "right" : "if (hasArg)",
      "info" : "IfStatement[4573-4639]:IfStatement[4588-4654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4593-4639]:Block[4608-4654]"
    }, {
      "left" : "this.numberOfArgs = 1;",
      "right" : "this.numberOfArgs = 1;",
      "info" : "ExpressionStatement[4607-4629]:ExpressionStatement[4622-4644]"
    }, {
      "left" : "this.description = description;",
      "right" : "this.description = description;",
      "info" : "ExpressionStatement[4649-4680]:ExpressionStatement[4664-4695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4930-4972]:Block[4945-4987]"
    }, {
      "left" : "return getKey().charAt(0);",
      "right" : "return getKey().charAt(0);",
      "info" : "ReturnStatement[4940-4966]:ReturnStatement[4955-4981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5115-5272]:Block[5130-5287]"
    }, {
      "left" : "if (opt == null)",
      "right" : "if (opt == null)",
      "info" : "IfStatement[5181-5245]:IfStatement[5196-5260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5206-5245]:Block[5221-5260]"
    }, {
      "left" : "return longOpt;",
      "right" : "return longOpt;",
      "info" : "ReturnStatement[5220-5235]:ReturnStatement[5235-5250]"
    }, {
      "left" : "return opt;",
      "right" : "return opt;",
      "info" : "ReturnStatement[5255-5266]:ReturnStatement[5270-5281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5615-5642]:Block[5630-5657]"
    }, {
      "left" : "return opt;",
      "right" : "return opt;",
      "info" : "ReturnStatement[5625-5636]:ReturnStatement[5640-5651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5780-5808]:Block[5795-5823]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[5790-5802]:ReturnStatement[5805-5817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5953-5986]:Block[5968-6001]"
    }, {
      "left" : "this.type = type;",
      "right" : "this.type = type;",
      "info" : "ExpressionStatement[5963-5980]:ExpressionStatement[5978-5995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6168-6199]:Block[6183-6214]"
    }, {
      "left" : "return longOpt;",
      "right" : "return longOpt;",
      "info" : "ReturnStatement[6178-6193]:ReturnStatement[6193-6208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6364-6403]:Block[6379-6418]"
    }, {
      "left" : "this.longOpt = longOpt;",
      "right" : "this.longOpt = longOpt;",
      "info" : "ExpressionStatement[6374-6397]:ExpressionStatement[6389-6412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6640-6687]:Block[6655-6702]"
    }, {
      "left" : "this.optionalArg = optionalArg;",
      "right" : "this.optionalArg = optionalArg;",
      "info" : "ExpressionStatement[6650-6681]:ExpressionStatement[6665-6696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6810-6845]:Block[6825-6860]"
    }, {
      "left" : "return optionalArg;",
      "right" : "return optionalArg;",
      "info" : "ReturnStatement[6820-6839]:ReturnStatement[6835-6854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7022-7061]:Block[7037-7076]"
    }, {
      "left" : "return longOpt != null;",
      "right" : "return longOpt != null;",
      "info" : "ReturnStatement[7032-7055]:ReturnStatement[7047-7070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7241-7317]:Block[7256-7332]"
    }, {
      "left" : "return numberOfArgs > 0 || numberOfArgs == UNLIMITED_VALUES;",
      "right" : "return numberOfArgs > 0 || numberOfArgs == UNLIMITED_VALUES;",
      "info" : "ReturnStatement[7251-7311]:ReturnStatement[7266-7326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7499-7534]:Block[7514-7549]"
    }, {
      "left" : "return description;",
      "right" : "return description;",
      "info" : "ReturnStatement[7509-7528]:ReturnStatement[7524-7543]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7749-7796]:Block[7764-7811]"
    }, {
      "left" : "this.description = description;",
      "right" : "this.description = description;",
      "info" : "ExpressionStatement[7759-7790]:ExpressionStatement[7774-7805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7978-8010]:Block[7993-8025]"
    }, {
      "left" : "return required;",
      "right" : "return required;",
      "info" : "ReturnStatement[7988-8004]:ReturnStatement[8003-8019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8197-8238]:Block[8212-8253]"
    }, {
      "left" : "this.required = required;",
      "right" : "this.required = required;",
      "info" : "ExpressionStatement[8207-8232]:ExpressionStatement[8222-8247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8426-8465]:Block[8441-8480]"
    }, {
      "left" : "this.argName = argName;",
      "right" : "this.argName = argName;",
      "info" : "ExpressionStatement[8436-8459]:ExpressionStatement[8451-8474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8634-8665]:Block[8649-8680]"
    }, {
      "left" : "return argName;",
      "right" : "return argName;",
      "info" : "ReturnStatement[8644-8659]:ReturnStatement[8659-8674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8875-8938]:Block[8890-8953]"
    }, {
      "left" : "return argName != null && argName.length() > 0;",
      "right" : "return argName != null && argName.length() > 0;",
      "info" : "ReturnStatement[8885-8932]:ReturnStatement[8900-8947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9124-9200]:Block[9139-9215]"
    }, {
      "left" : "return numberOfArgs > 1 || numberOfArgs == UNLIMITED_VALUES;",
      "right" : "return numberOfArgs > 1 || numberOfArgs == UNLIMITED_VALUES;",
      "info" : "ReturnStatement[9134-9194]:ReturnStatement[9149-9209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9375-9415]:Block[9390-9430]"
    }, {
      "left" : "this.numberOfArgs = num;",
      "right" : "this.numberOfArgs = num;",
      "info" : "ExpressionStatement[9385-9409]:ExpressionStatement[9400-9424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9657-9693]:Block[9672-9708]"
    }, {
      "left" : "this.valuesep = sep;",
      "right" : "this.valuesep = sep;",
      "info" : "ExpressionStatement[9667-9687]:ExpressionStatement[9682-9702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9850-9882]:Block[9865-9897]"
    }, {
      "left" : "return valuesep;",
      "right" : "return valuesep;",
      "info" : "ReturnStatement[9860-9876]:ReturnStatement[9875-9891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10104-10140]:Block[10119-10155]"
    }, {
      "left" : "return valuesep > 0;",
      "right" : "return valuesep > 0;",
      "info" : "ReturnStatement[10114-10134]:ReturnStatement[10129-10149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10311-10347]:Block[10326-10362]"
    }, {
      "left" : "return numberOfArgs;",
      "right" : "return numberOfArgs;",
      "info" : "ReturnStatement[10321-10341]:ReturnStatement[10336-10356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10520-10731]:Block[10535-10746]"
    }, {
      "left" : "switch (numberOfArgs)\n        {\n            case UNINITIALIZED:\n                throw new RuntimeException(\"NO_ARGS_ALLOWED\");\n\n            default:\n                processValue(value);\n        }",
      "right" : "switch (numberOfArgs)\n        {\n            case UNINITIALIZED:\n                throw new RuntimeException(\"NO_ARGS_ALLOWED\");\n\n            default:\n                processValue(value);\n        }",
      "info" : "SwitchStatement[10530-10725]:SwitchStatement[10545-10740]"
    }, {
      "left" : "case UNINITIALIZED:",
      "right" : "case UNINITIALIZED:",
      "info" : "SwitchCase[10574-10593]:SwitchCase[10589-10608]"
    }, {
      "left" : "throw new RuntimeException(\"NO_ARGS_ALLOWED\");",
      "right" : "throw new RuntimeException(\"NO_ARGS_ALLOWED\");",
      "info" : "ThrowStatement[10610-10656]:ThrowStatement[10625-10671]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[10670-10678]:SwitchCase[10685-10693]"
    }, {
      "left" : "processValue(value);",
      "right" : "processValue(value);",
      "info" : "ExpressionStatement[10695-10715]:ExpressionStatement[10710-10730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11193-12090]:Block[11208-12105]"
    }, {
      "left" : "if (hasValueSeparator())",
      "right" : "if (hasValueSeparator())",
      "info" : "IfStatement[11252-11990]:IfStatement[11267-12005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11285-11990]:Block[11300-12005]"
    }, {
      "left" : "char sep = getValueSeparator();",
      "right" : "char sep = getValueSeparator();",
      "info" : "VariableDeclarationStatement[11342-11373]:VariableDeclarationStatement[11357-11388]"
    }, {
      "left" : "int index = value.indexOf(sep);",
      "right" : "int index = value.indexOf(sep);",
      "info" : "VariableDeclarationStatement[11442-11473]:VariableDeclarationStatement[11457-11488]"
    }, {
      "left" : "while (index != -1)",
      "right" : "while (index != -1)",
      "info" : "WhileStatement[11540-11980]:WhileStatement[11555-11995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11572-11980]:Block[11587-11995]"
    }, {
      "left" : "if (values.size() == (numberOfArgs - 1))",
      "right" : "if (values.size() == (numberOfArgs - 1))",
      "info" : "IfStatement[11633-11736]:IfStatement[11648-11751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11690-11736]:Block[11705-11751]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11712-11718]:BreakStatement[11727-11733]"
    }, {
      "left" : "add(value.substring(0, index));",
      "right" : "add(value.substring(0, index));",
      "info" : "ExpressionStatement[11779-11810]:ExpressionStatement[11794-11825]"
    }, {
      "left" : "value = value.substring(index + 1);",
      "right" : "value = value.substring(index + 1);",
      "info" : "ExpressionStatement[11853-11888]:ExpressionStatement[11868-11903]"
    }, {
      "left" : "index = value.indexOf(sep);",
      "right" : "index = value.indexOf(sep);",
      "info" : "ExpressionStatement[11939-11966]:ExpressionStatement[11954-11981]"
    }, {
      "left" : "add(value);",
      "right" : "add(value);",
      "info" : "ExpressionStatement[12073-12084]:ExpressionStatement[12088-12099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12435-12612]:Block[12450-12627]"
    }, {
      "left" : "if (!acceptsArg())",
      "right" : "if (!acceptsArg())",
      "info" : "IfStatement[12445-12555]:IfStatement[12460-12570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12472-12555]:Block[12487-12570]"
    }, {
      "left" : "throw new RuntimeException(\"Cannot add value, list full.\");",
      "right" : "throw new RuntimeException(\"Cannot add value, list full.\");",
      "info" : "ThrowStatement[12486-12545]:ThrowStatement[12501-12560]"
    }, {
      "left" : "values.add(value);",
      "right" : "values.add(value);",
      "info" : "ExpressionStatement[12588-12606]:ExpressionStatement[12603-12621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12874-12943]:Block[12889-12958]"
    }, {
      "left" : "return hasNoValues() ? null : (String) values.get(0);",
      "right" : "return hasNoValues() ? null : (String) values.get(0);",
      "info" : "ReturnStatement[12884-12937]:ReturnStatement[12899-12952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13448-13521]:Block[13463-13536]"
    }, {
      "left" : "return hasNoValues() ? null : (String) values.get(index);",
      "right" : "return hasNoValues() ? null : (String) values.get(index);",
      "info" : "ReturnStatement[13458-13515]:ReturnStatement[13473-13530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13917-14015]:Block[13932-14030]"
    }, {
      "left" : "String value = getValue();",
      "right" : "String value = getValue();",
      "info" : "VariableDeclarationStatement[13927-13953]:VariableDeclarationStatement[13942-13968]"
    }, {
      "left" : "return (value != null) ? value : defaultValue;",
      "right" : "return (value != null) ? value : defaultValue;",
      "info" : "ReturnStatement[13963-14009]:ReturnStatement[13978-14024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14271-14370]:Block[14286-14385]"
    }, {
      "left" : "return hasNoValues() ? null : (String[]) values.toArray(new String[values.size()]);",
      "right" : "return hasNoValues() ? null : (String[]) values.toArray(new String[values.size()]);",
      "info" : "ReturnStatement[14281-14364]:ReturnStatement[14296-14379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14513-14543]:Block[14528-14558]"
    }, {
      "left" : "return values;",
      "right" : "return values;",
      "info" : "ReturnStatement[14523-14537]:ReturnStatement[14538-14552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14692-15275]:Block[14707-15290]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer().append(\"[ option: \");",
      "right" : "StringBuffer buf = new StringBuffer().append(\"[ option: \");",
      "info" : "VariableDeclarationStatement[14702-14761]:VariableDeclarationStatement[14717-14776]"
    }, {
      "left" : "buf.append(opt);",
      "right" : "buf.append(opt);",
      "info" : "ExpressionStatement[14771-14787]:ExpressionStatement[14786-14802]"
    }, {
      "left" : "if (longOpt != null)",
      "right" : "if (longOpt != null)",
      "info" : "IfStatement[14797-14882]:IfStatement[14812-14897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14826-14882]:Block[14841-14897]"
    }, {
      "left" : "buf.append(\" \").append(longOpt);",
      "right" : "buf.append(\" \").append(longOpt);",
      "info" : "ExpressionStatement[14840-14872]:ExpressionStatement[14855-14887]"
    }, {
      "left" : "buf.append(\" \");",
      "right" : "buf.append(\" \");",
      "info" : "ExpressionStatement[14892-14908]:ExpressionStatement[14907-14923]"
    }, {
      "left" : "if (hasArgs())",
      "right" : "if (hasArgs())",
      "info" : "IfStatement[14918-15069]:IfStatement[14933-15084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14941-14988]:Block[14956-15003]"
    }, {
      "left" : "buf.append(\"[ARG...]\");",
      "right" : "buf.append(\"[ARG...]\");",
      "info" : "ExpressionStatement[14955-14978]:ExpressionStatement[14970-14993]"
    }, {
      "left" : "if (hasArg())",
      "right" : "if (hasArg())",
      "info" : "IfStatement[15002-15069]:IfStatement[15017-15084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15024-15069]:Block[15039-15084]"
    }, {
      "left" : "buf.append(\" [ARG]\");",
      "right" : "buf.append(\" [ARG]\");",
      "info" : "ExpressionStatement[15038-15059]:ExpressionStatement[15053-15074]"
    }, {
      "left" : "buf.append(\" :: \").append(description);",
      "right" : "buf.append(\" :: \").append(description);",
      "info" : "ExpressionStatement[15079-15118]:ExpressionStatement[15094-15133]"
    }, {
      "left" : "if (type != null)",
      "right" : "if (type != null)",
      "info" : "IfStatement[15128-15210]:IfStatement[15143-15225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15154-15210]:Block[15169-15225]"
    }, {
      "left" : "buf.append(\" :: \").append(type);",
      "right" : "buf.append(\" :: \").append(type);",
      "info" : "ExpressionStatement[15168-15200]:ExpressionStatement[15183-15215]"
    }, {
      "left" : "buf.append(\" ]\");",
      "right" : "buf.append(\" ]\");",
      "info" : "ExpressionStatement[15220-15237]:ExpressionStatement[15235-15252]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[15247-15269]:ReturnStatement[15262-15284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15440-15480]:Block[15455-15495]"
    }, {
      "left" : "return values.isEmpty();",
      "right" : "return values.isEmpty();",
      "info" : "ReturnStatement[15450-15474]:ReturnStatement[15465-15489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15522-16009]:Block[15537-16024]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[15532-15591]:IfStatement[15547-15606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15555-15591]:Block[15570-15606]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[15569-15581]:ReturnStatement[15584-15596]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[15600-15690]:IfStatement[15615-15705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15653-15690]:Block[15668-15705]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15667-15680]:ReturnStatement[15682-15695]"
    }, {
      "left" : "Option option = (Option) o;",
      "right" : "Option option = (Option) o;",
      "info" : "VariableDeclarationStatement[15700-15727]:VariableDeclarationStatement[15715-15742]"
    }, {
      "left" : "if (opt != null ? !opt.equals(option.opt) : option.opt != null)",
      "right" : "if (opt != null ? !opt.equals(option.opt) : option.opt != null)",
      "info" : "IfStatement[15738-15847]:IfStatement[15753-15862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15810-15847]:Block[15825-15862]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15824-15837]:ReturnStatement[15839-15852]"
    }, {
      "left" : "if (longOpt != null ? !longOpt.equals(option.longOpt) : option.longOpt != null)",
      "right" : "if (longOpt != null ? !longOpt.equals(option.longOpt) : option.longOpt != null)",
      "info" : "IfStatement[15856-15981]:IfStatement[15871-15996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15944-15981]:Block[15959-15996]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15958-15971]:ReturnStatement[15973-15986]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[15991-16003]:ReturnStatement[16006-16018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16041-16217]:Block[16056-16232]"
    }, {
      "left" : "int result;",
      "right" : "int result;",
      "info" : "VariableDeclarationStatement[16051-16062]:VariableDeclarationStatement[16066-16077]"
    }, {
      "left" : "result = opt != null ? opt.hashCode() : 0;",
      "right" : "result = opt != null ? opt.hashCode() : 0;",
      "info" : "ExpressionStatement[16071-16113]:ExpressionStatement[16086-16128]"
    }, {
      "left" : "result = 31 * result + (longOpt != null ? longOpt.hashCode() : 0);",
      "right" : "result = 31 * result + (longOpt != null ? longOpt.hashCode() : 0);",
      "info" : "ExpressionStatement[16122-16188]:ExpressionStatement[16137-16203]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[16197-16211]:ReturnStatement[16212-16226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16646-16988]:Block[16661-17003]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16656-16982]:TryStatement[16671-16997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16668-16809]:Block[16683-16824]"
    }, {
      "left" : "Option option = (Option) super.clone();",
      "right" : "Option option = (Option) super.clone();",
      "info" : "VariableDeclarationStatement[16682-16721]:VariableDeclarationStatement[16697-16736]"
    }, {
      "left" : "option.values = new ArrayList(values);",
      "right" : "option.values = new ArrayList(values);",
      "info" : "ExpressionStatement[16734-16772]:ExpressionStatement[16749-16787]"
    }, {
      "left" : "return option;",
      "right" : "return option;",
      "info" : "ReturnStatement[16785-16799]:ReturnStatement[16800-16814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16866-16982]:Block[16881-16997]"
    }, {
      "left" : "throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());",
      "right" : "throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());",
      "info" : "ThrowStatement[16880-16972]:ThrowStatement[16895-16987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17266-17297]:Block[17281-17312]"
    }, {
      "left" : "values.clear();",
      "right" : "values.clear();",
      "info" : "ExpressionStatement[17276-17291]:ExpressionStatement[17291-17306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17595-17792]:Block[17610-17807]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"The addValue method is not intended for client use. \"\n                + \"Subclasses should use the addValueForProcessing method instead. \");",
      "right" : "throw new UnsupportedOperationException(\"The addValue method is not intended for client use. \"\n                + \"Subclasses should use the addValueForProcessing method instead. \");",
      "info" : "ThrowStatement[17605-17786]:ThrowStatement[17620-17801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17986-18108]:Block[18001-18123]"
    }, {
      "left" : "return (hasArg() || hasArgs() || hasOptionalArg()) && (numberOfArgs <= 0 || values.size() < numberOfArgs);",
      "right" : "return (hasArg() || hasArgs() || hasOptionalArg()) && (numberOfArgs <= 0 || values.size() < numberOfArgs);",
      "info" : "ReturnStatement[17996-18102]:ReturnStatement[18011-18117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18312-18560]:Block[18327-18575]"
    }, {
      "left" : "if (optionalArg)",
      "right" : "if (optionalArg)",
      "info" : "IfStatement[18322-18384]:IfStatement[18337-18399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18347-18384]:Block[18362-18399]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18361-18374]:ReturnStatement[18376-18389]"
    }, {
      "left" : "if (numberOfArgs == UNLIMITED_VALUES)",
      "right" : "if (numberOfArgs == UNLIMITED_VALUES)",
      "info" : "IfStatement[18393-18554]:IfStatement[18408-18569]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18439-18488]:Block[18454-18503]"
    }, {
      "left" : "return values.size() < 1;",
      "right" : "return values.size() < 1;",
      "info" : "ReturnStatement[18453-18478]:ReturnStatement[18468-18493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18510-18554]:Block[18525-18569]"
    }, {
      "left" : "return acceptsArg();",
      "right" : "return acceptsArg();",
      "info" : "ReturnStatement[18524-18544]:ReturnStatement[18539-18559]"
    } ]
  },
  "interFileMappings" : { }
}