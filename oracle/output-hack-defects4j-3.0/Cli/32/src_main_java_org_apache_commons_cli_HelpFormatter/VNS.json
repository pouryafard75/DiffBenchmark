{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "HelpFormatter",
      "right" : "HelpFormatter",
      "info" : "TypeDeclaration[1057-31438]:TypeDeclaration[1057-31281]"
    }, {
      "left" : "public static final int DEFAULT_WIDTH = 74;",
      "right" : "public static final int DEFAULT_WIDTH = 74;",
      "info" : "FieldDeclaration[1362-1454]:FieldDeclaration[1362-1454]"
    }, {
      "left" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "right" : "public static final int DEFAULT_LEFT_PAD = 1;",
      "info" : "FieldDeclaration[1460-1557]:FieldDeclaration[1460-1557]"
    }, {
      "left" : "public static final int DEFAULT_DESC_PAD = 3;",
      "right" : "public static final int DEFAULT_DESC_PAD = 3;",
      "info" : "FieldDeclaration[1563-1714]:FieldDeclaration[1563-1714]"
    }, {
      "left" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "right" : "public static final String DEFAULT_SYNTAX_PREFIX = \"usage: \";",
      "info" : "FieldDeclaration[1720-1854]:FieldDeclaration[1720-1854]"
    }, {
      "left" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "right" : "public static final String DEFAULT_OPT_PREFIX = \"-\";",
      "info" : "FieldDeclaration[1860-1952]:FieldDeclaration[1860-1952]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "right" : "public static final String DEFAULT_LONG_OPT_PREFIX = \"--\";",
      "info" : "FieldDeclaration[1958-2058]:FieldDeclaration[1958-2058]"
    }, {
      "left" : "public static final String DEFAULT_LONG_OPT_SEPARATOR = \" \";",
      "right" : "public static final String DEFAULT_LONG_OPT_SEPARATOR = \" \";",
      "info" : "FieldDeclaration[2064-2199]:FieldDeclaration[2064-2199]"
    }, {
      "left" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "right" : "public static final String DEFAULT_ARG_NAME = \"arg\";",
      "info" : "FieldDeclaration[2205-2297]:FieldDeclaration[2205-2297]"
    }, {
      "left" : "public int defaultWidth = DEFAULT_WIDTH;",
      "right" : "public int defaultWidth = DEFAULT_WIDTH;",
      "info" : "FieldDeclaration[2385-2597]:FieldDeclaration[2385-2597]"
    }, {
      "left" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "right" : "public int defaultLeftPad = DEFAULT_LEFT_PAD;",
      "info" : "FieldDeclaration[2603-2839]:FieldDeclaration[2603-2839]"
    }, {
      "left" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "right" : "public int defaultDescPad = DEFAULT_DESC_PAD;",
      "info" : "FieldDeclaration[2845-3121]:FieldDeclaration[2845-3121]"
    }, {
      "left" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "right" : "public String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;",
      "info" : "FieldDeclaration[3127-3395]:FieldDeclaration[3127-3395]"
    }, {
      "left" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "right" : "public String defaultNewLine = System.getProperty(\"line.separator\");",
      "info" : "FieldDeclaration[3401-3633]:FieldDeclaration[3401-3633]"
    }, {
      "left" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "right" : "public String defaultOptPrefix = DEFAULT_OPT_PREFIX;",
      "info" : "FieldDeclaration[3639-3857]:FieldDeclaration[3639-3857]"
    }, {
      "left" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "right" : "public String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;",
      "info" : "FieldDeclaration[3863-4094]:FieldDeclaration[3863-4094]"
    }, {
      "left" : "private String longOptSeparator = DEFAULT_LONG_OPT_SEPARATOR;",
      "right" : "private String longOptSeparator = DEFAULT_LONG_OPT_SEPARATOR;",
      "info" : "FieldDeclaration[4100-4235]:FieldDeclaration[4100-4235]"
    }, {
      "left" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "right" : "public String defaultArgName = DEFAULT_ARG_NAME;",
      "info" : "FieldDeclaration[4241-4458]:FieldDeclaration[4241-4458]"
    }, {
      "left" : "protected Comparator optionComparator = new OptionComparator();",
      "right" : "protected Comparator optionComparator = new OptionComparator();",
      "info" : "FieldDeclaration[4464-4695]:FieldDeclaration[4464-4695]"
    }, {
      "left" : "public void setWidth(int width)",
      "right" : "public void setWidth(int width)",
      "info" : "MethodDeclaration[4705-4876]:MethodDeclaration[4705-4876]"
    }, {
      "left" : "public int getWidth()",
      "right" : "public int getWidth()",
      "info" : "MethodDeclaration[4882-5022]:MethodDeclaration[4882-5022]"
    }, {
      "left" : "public void setLeftPadding(int padding)",
      "right" : "public void setLeftPadding(int padding)",
      "info" : "MethodDeclaration[5028-5225]:MethodDeclaration[5028-5225]"
    }, {
      "left" : "public int getLeftPadding()",
      "right" : "public int getLeftPadding()",
      "info" : "MethodDeclaration[5231-5391]:MethodDeclaration[5231-5391]"
    }, {
      "left" : "public void setDescPadding(int padding)",
      "right" : "public void setDescPadding(int padding)",
      "info" : "MethodDeclaration[5397-5594]:MethodDeclaration[5397-5594]"
    }, {
      "left" : "public int getDescPadding()",
      "right" : "public int getDescPadding()",
      "info" : "MethodDeclaration[5600-5760]:MethodDeclaration[5600-5760]"
    }, {
      "left" : "public void setSyntaxPrefix(String prefix)",
      "right" : "public void setSyntaxPrefix(String prefix)",
      "info" : "MethodDeclaration[5766-5971]:MethodDeclaration[5766-5971]"
    }, {
      "left" : "public String getSyntaxPrefix()",
      "right" : "public String getSyntaxPrefix()",
      "info" : "MethodDeclaration[5977-6148]:MethodDeclaration[5977-6148]"
    }, {
      "left" : "public void setNewLine(String newline)",
      "right" : "public void setNewLine(String newline)",
      "info" : "MethodDeclaration[6154-6342]:MethodDeclaration[6154-6342]"
    }, {
      "left" : "public String getNewLine()",
      "right" : "public String getNewLine()",
      "info" : "MethodDeclaration[6348-6499]:MethodDeclaration[6348-6499]"
    }, {
      "left" : "public void setOptPrefix(String prefix)",
      "right" : "public void setOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6505-6698]:MethodDeclaration[6505-6698]"
    }, {
      "left" : "public String getOptPrefix()",
      "right" : "public String getOptPrefix()",
      "info" : "MethodDeclaration[6704-6863]:MethodDeclaration[6704-6863]"
    }, {
      "left" : "public void setLongOptPrefix(String prefix)",
      "right" : "public void setLongOptPrefix(String prefix)",
      "info" : "MethodDeclaration[6869-7078]:MethodDeclaration[6869-7078]"
    }, {
      "left" : "public String getLongOptPrefix()",
      "right" : "public String getLongOptPrefix()",
      "info" : "MethodDeclaration[7084-7259]:MethodDeclaration[7084-7259]"
    }, {
      "left" : "public void setLongOptSeparator(String longOptSeparator)",
      "right" : "public void setLongOptSeparator(String longOptSeparator)",
      "info" : "MethodDeclaration[7265-7670]:MethodDeclaration[7265-7670]"
    }, {
      "left" : "public String getLongOptSeparator()",
      "right" : "public String getLongOptSeparator()",
      "info" : "MethodDeclaration[7676-7903]:MethodDeclaration[7676-7903]"
    }, {
      "left" : "public void setArgName(String name)",
      "right" : "public void setArgName(String name)",
      "info" : "MethodDeclaration[7909-8088]:MethodDeclaration[7909-8088]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[8094-8245]:MethodDeclaration[8094-8245]"
    }, {
      "left" : "public Comparator getOptionComparator()",
      "right" : "public Comparator getOptionComparator()",
      "info" : "MethodDeclaration[8251-8523]:MethodDeclaration[8251-8523]"
    }, {
      "left" : "public void setOptionComparator(Comparator comparator)",
      "right" : "public void setOptionComparator(Comparator comparator)",
      "info" : "MethodDeclaration[8529-8990]:MethodDeclaration[8529-8990]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options)",
      "info" : "MethodDeclaration[8996-9423]:MethodDeclaration[8996-9423]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, Options options, boolean autoUsage)",
      "info" : "MethodDeclaration[9429-9971]:MethodDeclaration[9429-9971]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[9977-10561]:MethodDeclaration[9977-10561]"
    }, {
      "left" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(String cmdLineSyntax, String header, Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[10567-11280]:MethodDeclaration[10567-11280]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header, Options options, String footer)",
      "info" : "MethodDeclaration[11286-11963]:MethodDeclaration[11286-11963]"
    }, {
      "left" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "right" : "public void printHelp(int width, String cmdLineSyntax, String header,\n                          Options options, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[11969-12897]:MethodDeclaration[11969-12897]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax, \n                          String header, Options options, int leftPad, \n                          int descPad, String footer)",
      "info" : "MethodDeclaration[12903-13978]:MethodDeclaration[12903-13978]"
    }, {
      "left" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "right" : "public void printHelp(PrintWriter pw, int width, String cmdLineSyntax,\n                          String header, Options options, int leftPad,\n                          int descPad, String footer, boolean autoUsage)",
      "info" : "MethodDeclaration[13985-15744]:MethodDeclaration[13985-15744]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "right" : "public void printUsage(PrintWriter pw, int width, String app, Options options)",
      "info" : "MethodDeclaration[15750-17832]:MethodDeclaration[15750-17832]"
    }, {
      "left" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "right" : "private void appendOptionGroup(final StringBuffer buff, final OptionGroup group)",
      "info" : "MethodDeclaration[17838-18937]:MethodDeclaration[17838-18937]"
    }, {
      "left" : "private void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "right" : "private void appendOption(final StringBuffer buff, final Option option, final boolean required)",
      "info" : "MethodDeclaration[18943-20080]:MethodDeclaration[18943-20080]"
    }, {
      "left" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "right" : "public void printUsage(PrintWriter pw, int width, String cmdLineSyntax)",
      "info" : "MethodDeclaration[20090-20631]:MethodDeclaration[20090-20631]"
    }, {
      "left" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "right" : "public void printOptions(PrintWriter pw, int width, Options options, \n                             int leftPad, int descPad)",
      "info" : "MethodDeclaration[20637-21449]:MethodDeclaration[20637-21449]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, String text)",
      "info" : "MethodDeclaration[21455-21838]:MethodDeclaration[21455-21838]"
    }, {
      "left" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "right" : "public void printWrapped(PrintWriter pw, int width, int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[21844-22441]:MethodDeclaration[21844-22441]"
    }, {
      "left" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "right" : "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)",
      "info" : "MethodDeclaration[22529-25856]:MethodDeclaration[22529-25856]"
    }, {
      "left" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "right" : "protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)",
      "info" : "MethodDeclaration[25862-27459]:MethodDeclaration[25862-27459]"
    }, {
      "left" : "protected int findWrapPos(String text, int width, int startPos)",
      "right" : "protected int findWrapPos(String text, int width, int startPos)",
      "info" : "MethodDeclaration[27465-29358]:MethodDeclaration[27465-29201]"
    }, {
      "left" : "protected String createPadding(int len)",
      "right" : "protected String createPadding(int len)",
      "info" : "MethodDeclaration[29364-29729]:MethodDeclaration[29207-29572]"
    }, {
      "left" : "protected String rtrim(String s)",
      "right" : "protected String rtrim(String s)",
      "info" : "MethodDeclaration[29735-30263]:MethodDeclaration[29578-30106]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "TypeDeclaration[30509-31435]:TypeDeclaration[30352-31278]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[30697-31429]:MethodDeclaration[30540-31272]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1247-1253]:Modifier[1247-1253]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1254-1259]:TYPE_DECLARATION_KIND[1254-1259]"
    }, {
      "left" : "HelpFormatter",
      "right" : "HelpFormatter",
      "info" : "SimpleName[1260-1273]:SimpleName[1260-1273]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4798-4804]:Modifier[4798-4804]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4805-4809]:PrimitiveType[4805-4809]"
    }, {
      "left" : "setWidth",
      "right" : "setWidth",
      "info" : "SimpleName[4810-4818]:SimpleName[4810-4818]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[4819-4828]:SingleVariableDeclaration[4819-4828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4834-4876]:Block[4834-4876]"
    }, {
      "left" : "this.defaultWidth = width;",
      "right" : "this.defaultWidth = width;",
      "info" : "ExpressionStatement[4844-4870]:ExpressionStatement[4844-4870]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4960-4966]:Modifier[4960-4966]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[4967-4970]:PrimitiveType[4967-4970]"
    }, {
      "left" : "getWidth",
      "right" : "getWidth",
      "info" : "SimpleName[4971-4979]:SimpleName[4971-4979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4986-5022]:Block[4986-5022]"
    }, {
      "left" : "return defaultWidth;",
      "right" : "return defaultWidth;",
      "info" : "ReturnStatement[4996-5016]:ReturnStatement[4996-5016]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5135-5141]:Modifier[5135-5141]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5142-5146]:PrimitiveType[5142-5146]"
    }, {
      "left" : "setLeftPadding",
      "right" : "setLeftPadding",
      "info" : "SimpleName[5147-5161]:SimpleName[5147-5161]"
    }, {
      "left" : "int padding",
      "right" : "int padding",
      "info" : "SingleVariableDeclaration[5162-5173]:SingleVariableDeclaration[5162-5173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5179-5225]:Block[5179-5225]"
    }, {
      "left" : "this.defaultLeftPad = padding;",
      "right" : "this.defaultLeftPad = padding;",
      "info" : "ExpressionStatement[5189-5219]:ExpressionStatement[5189-5219]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5321-5327]:Modifier[5321-5327]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5328-5331]:PrimitiveType[5328-5331]"
    }, {
      "left" : "getLeftPadding",
      "right" : "getLeftPadding",
      "info" : "SimpleName[5332-5346]:SimpleName[5332-5346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5353-5391]:Block[5353-5391]"
    }, {
      "left" : "return defaultLeftPad;",
      "right" : "return defaultLeftPad;",
      "info" : "ReturnStatement[5363-5385]:ReturnStatement[5363-5385]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5504-5510]:Modifier[5504-5510]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5511-5515]:PrimitiveType[5511-5515]"
    }, {
      "left" : "setDescPadding",
      "right" : "setDescPadding",
      "info" : "SimpleName[5516-5530]:SimpleName[5516-5530]"
    }, {
      "left" : "int padding",
      "right" : "int padding",
      "info" : "SingleVariableDeclaration[5531-5542]:SingleVariableDeclaration[5531-5542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5548-5594]:Block[5548-5594]"
    }, {
      "left" : "this.defaultDescPad = padding;",
      "right" : "this.defaultDescPad = padding;",
      "info" : "ExpressionStatement[5558-5588]:ExpressionStatement[5558-5588]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5690-5696]:Modifier[5690-5696]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5697-5700]:PrimitiveType[5697-5700]"
    }, {
      "left" : "getDescPadding",
      "right" : "getDescPadding",
      "info" : "SimpleName[5701-5715]:SimpleName[5701-5715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5722-5760]:Block[5722-5760]"
    }, {
      "left" : "return defaultDescPad;",
      "right" : "return defaultDescPad;",
      "info" : "ReturnStatement[5732-5754]:ReturnStatement[5732-5754]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5874-5880]:Modifier[5874-5880]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5881-5885]:PrimitiveType[5881-5885]"
    }, {
      "left" : "setSyntaxPrefix",
      "right" : "setSyntaxPrefix",
      "info" : "SimpleName[5886-5901]:SimpleName[5886-5901]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[5902-5915]:SingleVariableDeclaration[5902-5915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5921-5971]:Block[5921-5971]"
    }, {
      "left" : "this.defaultSyntaxPrefix = prefix;",
      "right" : "this.defaultSyntaxPrefix = prefix;",
      "info" : "ExpressionStatement[5931-5965]:ExpressionStatement[5931-5965]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6069-6075]:Modifier[6069-6075]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6076-6082]:SimpleType[6076-6082]"
    }, {
      "left" : "getSyntaxPrefix",
      "right" : "getSyntaxPrefix",
      "info" : "SimpleName[6083-6098]:SimpleName[6083-6098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6105-6148]:Block[6105-6148]"
    }, {
      "left" : "return defaultSyntaxPrefix;",
      "right" : "return defaultSyntaxPrefix;",
      "info" : "ReturnStatement[6115-6142]:ReturnStatement[6115-6142]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6253-6259]:Modifier[6253-6259]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6260-6264]:PrimitiveType[6260-6264]"
    }, {
      "left" : "setNewLine",
      "right" : "setNewLine",
      "info" : "SimpleName[6265-6275]:SimpleName[6265-6275]"
    }, {
      "left" : "String newline",
      "right" : "String newline",
      "info" : "SingleVariableDeclaration[6276-6290]:SingleVariableDeclaration[6276-6290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6296-6342]:Block[6296-6342]"
    }, {
      "left" : "this.defaultNewLine = newline;",
      "right" : "this.defaultNewLine = newline;",
      "info" : "ExpressionStatement[6306-6336]:ExpressionStatement[6306-6336]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6430-6436]:Modifier[6430-6436]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6437-6443]:SimpleType[6437-6443]"
    }, {
      "left" : "getNewLine",
      "right" : "getNewLine",
      "info" : "SimpleName[6444-6454]:SimpleName[6444-6454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6461-6499]:Block[6461-6499]"
    }, {
      "left" : "return defaultNewLine;",
      "right" : "return defaultNewLine;",
      "info" : "ReturnStatement[6471-6493]:ReturnStatement[6471-6493]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6607-6613]:Modifier[6607-6613]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6614-6618]:PrimitiveType[6614-6618]"
    }, {
      "left" : "setOptPrefix",
      "right" : "setOptPrefix",
      "info" : "SimpleName[6619-6631]:SimpleName[6619-6631]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[6632-6645]:SingleVariableDeclaration[6632-6645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6651-6698]:Block[6651-6698]"
    }, {
      "left" : "this.defaultOptPrefix = prefix;",
      "right" : "this.defaultOptPrefix = prefix;",
      "info" : "ExpressionStatement[6661-6692]:ExpressionStatement[6661-6692]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6790-6796]:Modifier[6790-6796]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6797-6803]:SimpleType[6797-6803]"
    }, {
      "left" : "getOptPrefix",
      "right" : "getOptPrefix",
      "info" : "SimpleName[6804-6816]:SimpleName[6804-6816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6823-6863]:Block[6823-6863]"
    }, {
      "left" : "return defaultOptPrefix;",
      "right" : "return defaultOptPrefix;",
      "info" : "ReturnStatement[6833-6857]:ReturnStatement[6833-6857]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6979-6985]:Modifier[6979-6985]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6986-6990]:PrimitiveType[6986-6990]"
    }, {
      "left" : "setLongOptPrefix",
      "right" : "setLongOptPrefix",
      "info" : "SimpleName[6991-7007]:SimpleName[6991-7007]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[7008-7021]:SingleVariableDeclaration[7008-7021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7027-7078]:Block[7027-7078]"
    }, {
      "left" : "this.defaultLongOptPrefix = prefix;",
      "right" : "this.defaultLongOptPrefix = prefix;",
      "info" : "ExpressionStatement[7037-7072]:ExpressionStatement[7037-7072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7178-7184]:Modifier[7178-7184]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7185-7191]:SimpleType[7185-7191]"
    }, {
      "left" : "getLongOptPrefix",
      "right" : "getLongOptPrefix",
      "info" : "SimpleName[7192-7208]:SimpleName[7192-7208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7215-7259]:Block[7215-7259]"
    }, {
      "left" : "return defaultLongOptPrefix;",
      "right" : "return defaultLongOptPrefix;",
      "info" : "ReturnStatement[7225-7253]:ReturnStatement[7225-7253]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7552-7558]:Modifier[7552-7558]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7559-7563]:PrimitiveType[7559-7563]"
    }, {
      "left" : "setLongOptSeparator",
      "right" : "setLongOptSeparator",
      "info" : "SimpleName[7564-7583]:SimpleName[7564-7583]"
    }, {
      "left" : "String longOptSeparator",
      "right" : "String longOptSeparator",
      "info" : "SingleVariableDeclaration[7584-7607]:SingleVariableDeclaration[7584-7607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7613-7670]:Block[7613-7670]"
    }, {
      "left" : "this.longOptSeparator = longOptSeparator;",
      "right" : "this.longOptSeparator = longOptSeparator;",
      "info" : "ExpressionStatement[7623-7664]:ExpressionStatement[7623-7664]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7823-7829]:Modifier[7823-7829]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7830-7836]:SimpleType[7830-7836]"
    }, {
      "left" : "getLongOptSeparator",
      "right" : "getLongOptSeparator",
      "info" : "SimpleName[7837-7856]:SimpleName[7837-7856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7863-7903]:Block[7863-7903]"
    }, {
      "left" : "return longOptSeparator;",
      "right" : "return longOptSeparator;",
      "info" : "ReturnStatement[7873-7897]:ReturnStatement[7873-7897]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8005-8011]:Modifier[8005-8011]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8012-8016]:PrimitiveType[8012-8016]"
    }, {
      "left" : "setArgName",
      "right" : "setArgName",
      "info" : "SimpleName[8017-8027]:SimpleName[8017-8027]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[8028-8039]:SingleVariableDeclaration[8028-8039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8045-8088]:Block[8045-8088]"
    }, {
      "left" : "this.defaultArgName = name;",
      "right" : "this.defaultArgName = name;",
      "info" : "ExpressionStatement[8055-8082]:ExpressionStatement[8055-8082]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8176-8182]:Modifier[8176-8182]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8183-8189]:SimpleType[8183-8189]"
    }, {
      "left" : "getArgName",
      "right" : "getArgName",
      "info" : "SimpleName[8190-8200]:SimpleName[8190-8200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8207-8245]:Block[8207-8245]"
    }, {
      "left" : "return defaultArgName;",
      "right" : "return defaultArgName;",
      "info" : "ReturnStatement[8217-8239]:ReturnStatement[8217-8239]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8439-8445]:Modifier[8439-8445]"
    }, {
      "left" : "Comparator",
      "right" : "Comparator",
      "info" : "SimpleType[8446-8456]:SimpleType[8446-8456]"
    }, {
      "left" : "getOptionComparator",
      "right" : "getOptionComparator",
      "info" : "SimpleName[8457-8476]:SimpleName[8457-8476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8483-8523]:Block[8483-8523]"
    }, {
      "left" : "return optionComparator;",
      "right" : "return optionComparator;",
      "info" : "ReturnStatement[8493-8517]:ReturnStatement[8493-8517]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8731-8737]:Modifier[8731-8737]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8738-8742]:PrimitiveType[8738-8742]"
    }, {
      "left" : "setOptionComparator",
      "right" : "setOptionComparator",
      "info" : "SimpleName[8743-8762]:SimpleName[8743-8762]"
    }, {
      "left" : "Comparator comparator",
      "right" : "Comparator comparator",
      "info" : "SingleVariableDeclaration[8763-8784]:SingleVariableDeclaration[8763-8784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8790-8990]:Block[8790-8990]"
    }, {
      "left" : "if (comparator == null)",
      "right" : "if (comparator == null)",
      "info" : "IfStatement[8800-8984]:IfStatement[8800-8984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8832-8903]:Block[8832-8903]"
    }, {
      "left" : "this.optionComparator = new OptionComparator();",
      "right" : "this.optionComparator = new OptionComparator();",
      "info" : "ExpressionStatement[8846-8893]:ExpressionStatement[8846-8893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8925-8984]:Block[8925-8984]"
    }, {
      "left" : "this.optionComparator = comparator;",
      "right" : "this.optionComparator = comparator;",
      "info" : "ExpressionStatement[8939-8974]:ExpressionStatement[8939-8974]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9275-9281]:Modifier[9275-9281]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9282-9286]:PrimitiveType[9282-9286]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[9287-9296]:SimpleName[9287-9296]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[9297-9317]:SingleVariableDeclaration[9297-9317]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[9319-9334]:SingleVariableDeclaration[9319-9334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9340-9423]:Block[9340-9423]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, false);",
      "info" : "ExpressionStatement[9350-9417]:ExpressionStatement[9350-9417]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9800-9806]:Modifier[9800-9806]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9807-9811]:PrimitiveType[9807-9811]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[9812-9821]:SimpleName[9812-9821]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[9822-9842]:SingleVariableDeclaration[9822-9842]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[9844-9859]:SingleVariableDeclaration[9844-9859]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[9861-9878]:SingleVariableDeclaration[9861-9878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9884-9971]:Block[9884-9971]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, null, options, null, autoUsage);",
      "info" : "ExpressionStatement[9894-9965]:ExpressionStatement[9894-9965]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10393-10399]:Modifier[10393-10399]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10400-10404]:PrimitiveType[10400-10404]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[10405-10414]:SimpleName[10405-10414]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[10415-10435]:SingleVariableDeclaration[10415-10435]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[10437-10450]:SingleVariableDeclaration[10437-10450]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[10452-10467]:SingleVariableDeclaration[10452-10467]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[10469-10482]:SingleVariableDeclaration[10469-10482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10488-10561]:Block[10488-10561]"
    }, {
      "left" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[10498-10555]:ExpressionStatement[10498-10555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11075-11081]:Modifier[11075-11081]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11082-11086]:PrimitiveType[11082-11086]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[11087-11096]:SimpleName[11087-11096]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[11097-11117]:SingleVariableDeclaration[11097-11117]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[11119-11132]:SingleVariableDeclaration[11119-11132]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[11134-11149]:SingleVariableDeclaration[11134-11149]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[11151-11164]:SingleVariableDeclaration[11151-11164]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[11166-11183]:SingleVariableDeclaration[11166-11183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11189-11280]:Block[11189-11280]"
    }, {
      "left" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "right" : "printHelp(defaultWidth, cmdLineSyntax, header, options, footer, autoUsage);",
      "info" : "ExpressionStatement[11199-11274]:ExpressionStatement[11199-11274]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11777-11783]:Modifier[11777-11783]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11784-11788]:PrimitiveType[11784-11788]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[11789-11798]:SimpleName[11789-11798]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[11799-11808]:SingleVariableDeclaration[11799-11808]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[11810-11830]:SingleVariableDeclaration[11810-11830]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[11832-11845]:SingleVariableDeclaration[11832-11845]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[11847-11862]:SingleVariableDeclaration[11847-11862]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[11864-11877]:SingleVariableDeclaration[11864-11877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11883-11963]:Block[11883-11963]"
    }, {
      "left" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "right" : "printHelp(width, cmdLineSyntax, header, options, footer, false);",
      "info" : "ExpressionStatement[11893-11957]:ExpressionStatement[11893-11957]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12551-12557]:Modifier[12551-12557]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12558-12562]:PrimitiveType[12558-12562]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[12563-12572]:SimpleName[12563-12572]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[12573-12582]:SingleVariableDeclaration[12573-12582]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[12584-12604]:SingleVariableDeclaration[12584-12604]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[12606-12619]:SingleVariableDeclaration[12606-12619]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[12647-12662]:SingleVariableDeclaration[12647-12662]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[12664-12677]:SingleVariableDeclaration[12664-12677]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[12679-12696]:SingleVariableDeclaration[12679-12696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12702-12897]:Block[12702-12897]"
    }, {
      "left" : "PrintWriter pw = new PrintWriter(System.out);",
      "right" : "PrintWriter pw = new PrintWriter(System.out);",
      "info" : "VariableDeclarationStatement[12712-12757]:VariableDeclarationStatement[12712-12757]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, defaultLeftPad, defaultDescPad, footer, autoUsage);",
      "info" : "ExpressionStatement[12767-12871]:ExpressionStatement[12767-12871]"
    }, {
      "left" : "pw.flush();",
      "right" : "pw.flush();",
      "info" : "ExpressionStatement[12880-12891]:ExpressionStatement[12880-12891]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13674-13680]:Modifier[13674-13680]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13681-13685]:PrimitiveType[13681-13685]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[13686-13695]:SimpleName[13686-13695]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[13696-13710]:SingleVariableDeclaration[13696-13710]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[13712-13721]:SingleVariableDeclaration[13712-13721]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[13723-13743]:SingleVariableDeclaration[13723-13743]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[13772-13785]:SingleVariableDeclaration[13772-13785]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[13787-13802]:SingleVariableDeclaration[13787-13802]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[13804-13815]:SingleVariableDeclaration[13804-13815]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[13844-13855]:SingleVariableDeclaration[13844-13855]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[13857-13870]:SingleVariableDeclaration[13857-13870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13876-13978]:Block[13876-13978]"
    }, {
      "left" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "right" : "printHelp(pw, width, cmdLineSyntax, header, options, leftPad, descPad, footer, false);",
      "info" : "ExpressionStatement[13886-13972]:ExpressionStatement[13886-13972]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14847-14853]:Modifier[14847-14853]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14854-14858]:PrimitiveType[14854-14858]"
    }, {
      "left" : "printHelp",
      "right" : "printHelp",
      "info" : "SimpleName[14859-14868]:SimpleName[14859-14868]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[14869-14883]:SingleVariableDeclaration[14869-14883]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[14885-14894]:SingleVariableDeclaration[14885-14894]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[14896-14916]:SingleVariableDeclaration[14896-14916]"
    }, {
      "left" : "String header",
      "right" : "String header",
      "info" : "SingleVariableDeclaration[14944-14957]:SingleVariableDeclaration[14944-14957]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[14959-14974]:SingleVariableDeclaration[14959-14974]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[14976-14987]:SingleVariableDeclaration[14976-14987]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[15015-15026]:SingleVariableDeclaration[15015-15026]"
    }, {
      "left" : "String footer",
      "right" : "String footer",
      "info" : "SingleVariableDeclaration[15028-15041]:SingleVariableDeclaration[15028-15041]"
    }, {
      "left" : "boolean autoUsage",
      "right" : "boolean autoUsage",
      "info" : "SingleVariableDeclaration[15043-15060]:SingleVariableDeclaration[15043-15060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15066-15744]:Block[15066-15744]"
    }, {
      "left" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "right" : "if ((cmdLineSyntax == null) || (cmdLineSyntax.length() == 0))",
      "info" : "IfStatement[15076-15235]:IfStatement[15076-15235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15146-15235]:Block[15146-15235]"
    }, {
      "left" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "right" : "throw new IllegalArgumentException(\"cmdLineSyntax not provided\");",
      "info" : "ThrowStatement[15160-15225]:ThrowStatement[15160-15225]"
    }, {
      "left" : "if (autoUsage)",
      "right" : "if (autoUsage)",
      "info" : "IfStatement[15245-15421]:IfStatement[15245-15421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15268-15338]:Block[15268-15338]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax, options);",
      "right" : "printUsage(pw, width, cmdLineSyntax, options);",
      "info" : "ExpressionStatement[15282-15328]:ExpressionStatement[15282-15328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15360-15421]:Block[15360-15421]"
    }, {
      "left" : "printUsage(pw, width, cmdLineSyntax);",
      "right" : "printUsage(pw, width, cmdLineSyntax);",
      "info" : "ExpressionStatement[15374-15411]:ExpressionStatement[15374-15411]"
    }, {
      "left" : "if ((header != null) && (header.trim().length() > 0))",
      "right" : "if ((header != null) && (header.trim().length() > 0))",
      "info" : "IfStatement[15431-15549]:IfStatement[15431-15549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15493-15549]:Block[15493-15549]"
    }, {
      "left" : "printWrapped(pw, width, header);",
      "right" : "printWrapped(pw, width, header);",
      "info" : "ExpressionStatement[15507-15539]:ExpressionStatement[15507-15539]"
    }, {
      "left" : "printOptions(pw, width, options, leftPad, descPad);",
      "right" : "printOptions(pw, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[15559-15610]:ExpressionStatement[15559-15610]"
    }, {
      "left" : "if ((footer != null) && (footer.trim().length() > 0))",
      "right" : "if ((footer != null) && (footer.trim().length() > 0))",
      "info" : "IfStatement[15620-15738]:IfStatement[15620-15738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15682-15738]:Block[15682-15738]"
    }, {
      "left" : "printWrapped(pw, width, footer);",
      "right" : "printWrapped(pw, width, footer);",
      "info" : "ExpressionStatement[15696-15728]:ExpressionStatement[15696-15728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16052-16058]:Modifier[16052-16058]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16059-16063]:PrimitiveType[16059-16063]"
    }, {
      "left" : "printUsage",
      "right" : "printUsage",
      "info" : "SimpleName[16064-16074]:SimpleName[16064-16074]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[16075-16089]:SingleVariableDeclaration[16075-16089]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[16091-16100]:SingleVariableDeclaration[16091-16100]"
    }, {
      "left" : "String app",
      "right" : "String app",
      "info" : "SingleVariableDeclaration[16102-16112]:SingleVariableDeclaration[16102-16112]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[16114-16129]:SingleVariableDeclaration[16114-16129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16135-17832]:Block[16135-17832]"
    }, {
      "left" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "right" : "StringBuffer buff = new StringBuffer(defaultSyntaxPrefix).append(app).append(\" \");",
      "info" : "VariableDeclarationStatement[16185-16267]:VariableDeclarationStatement[16185-16267]"
    }, {
      "left" : "final Collection processedGroups = new ArrayList();",
      "right" : "final Collection processedGroups = new ArrayList();",
      "info" : "VariableDeclarationStatement[16330-16381]:VariableDeclarationStatement[16330-16381]"
    }, {
      "left" : "Option option;",
      "right" : "Option option;",
      "info" : "VariableDeclarationStatement[16416-16430]:VariableDeclarationStatement[16416-16430]"
    }, {
      "left" : "List optList = new ArrayList(options.getOptions());",
      "right" : "List optList = new ArrayList(options.getOptions());",
      "info" : "VariableDeclarationStatement[16440-16491]:VariableDeclarationStatement[16440-16491]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[16500-16549]:ExpressionStatement[16500-16549]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[16594-17711]:ForStatement[16594-17711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16654-17711]:Block[16654-17711]"
    }, {
      "left" : "option = (Option) i.next();",
      "right" : "option = (Option) i.next();",
      "info" : "ExpressionStatement[16703-16730]:ExpressionStatement[16703-16730]"
    }, {
      "left" : "OptionGroup group = options.getOptionGroup(option);",
      "right" : "OptionGroup group = options.getOptionGroup(option);",
      "info" : "VariableDeclarationStatement[16805-16856]:VariableDeclarationStatement[16805-16856]"
    }, {
      "left" : "if (group != null)",
      "right" : "if (group != null)",
      "info" : "IfStatement[16919-17609]:IfStatement[16919-17609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16950-17439]:Block[16950-17439]"
    }, {
      "left" : "if (!processedGroups.contains(group))",
      "right" : "if (!processedGroups.contains(group))",
      "info" : "IfStatement[17035-17313]:IfStatement[17035-17313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17089-17313]:Block[17089-17313]"
    }, {
      "left" : "processedGroups.add(group);",
      "right" : "processedGroups.add(group);",
      "info" : "ExpressionStatement[17170-17197]:ExpressionStatement[17170-17197]"
    }, {
      "left" : "appendOptionGroup(buff, group);",
      "right" : "appendOptionGroup(buff, group);",
      "info" : "ExpressionStatement[17264-17295]:ExpressionStatement[17264-17295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17529-17609]:Block[17529-17609]"
    }, {
      "left" : "appendOption(buff, option, option.isRequired());",
      "right" : "appendOption(buff, option, option.isRequired());",
      "info" : "ExpressionStatement[17547-17595]:ExpressionStatement[17547-17595]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[17623-17701]:IfStatement[17623-17701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17652-17701]:Block[17652-17701]"
    }, {
      "left" : "buff.append(\" \");",
      "right" : "buff.append(\" \");",
      "info" : "ExpressionStatement[17670-17687]:ExpressionStatement[17670-17687]"
    }, {
      "left" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "right" : "printWrapped(pw, width, buff.toString().indexOf(' ') + 1, buff.toString());",
      "info" : "ExpressionStatement[17751-17826]:ExpressionStatement[17751-17826]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18205-18212]:Modifier[18205-18212]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18213-18217]:PrimitiveType[18213-18217]"
    }, {
      "left" : "appendOptionGroup",
      "right" : "appendOptionGroup",
      "info" : "SimpleName[18218-18235]:SimpleName[18218-18235]"
    }, {
      "left" : "final StringBuffer buff",
      "right" : "final StringBuffer buff",
      "info" : "SingleVariableDeclaration[18236-18259]:SingleVariableDeclaration[18236-18259]"
    }, {
      "left" : "final OptionGroup group",
      "right" : "final OptionGroup group",
      "info" : "SingleVariableDeclaration[18261-18284]:SingleVariableDeclaration[18261-18284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18290-18937]:Block[18290-18937]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[18300-18374]:IfStatement[18300-18374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18333-18374]:Block[18333-18374]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[18347-18364]:ExpressionStatement[18347-18364]"
    }, {
      "left" : "List optList = new ArrayList(group.getOptions());",
      "right" : "List optList = new ArrayList(group.getOptions());",
      "info" : "VariableDeclarationStatement[18384-18433]:VariableDeclarationStatement[18384-18433]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[18442-18491]:ExpressionStatement[18442-18491]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[18546-18847]:ForStatement[18546-18847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18606-18847]:Block[18606-18847]"
    }, {
      "left" : "appendOption(buff, (Option) i.next(), true);",
      "right" : "appendOption(buff, (Option) i.next(), true);",
      "info" : "ExpressionStatement[18699-18743]:ExpressionStatement[18699-18743]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[18757-18837]:IfStatement[18757-18837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18786-18837]:Block[18786-18837]"
    }, {
      "left" : "buff.append(\" | \");",
      "right" : "buff.append(\" | \");",
      "info" : "ExpressionStatement[18804-18823]:ExpressionStatement[18804-18823]"
    }, {
      "left" : "if (!group.isRequired())",
      "right" : "if (!group.isRequired())",
      "info" : "IfStatement[18857-18931]:IfStatement[18857-18931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18890-18931]:Block[18890-18931]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[18904-18921]:ExpressionStatement[18904-18921]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19185-19192]:Modifier[19185-19192]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19193-19197]:PrimitiveType[19193-19197]"
    }, {
      "left" : "appendOption",
      "right" : "appendOption",
      "info" : "SimpleName[19198-19210]:SimpleName[19198-19210]"
    }, {
      "left" : "final StringBuffer buff",
      "right" : "final StringBuffer buff",
      "info" : "SingleVariableDeclaration[19211-19234]:SingleVariableDeclaration[19211-19234]"
    }, {
      "left" : "final Option option",
      "right" : "final Option option",
      "info" : "SingleVariableDeclaration[19236-19255]:SingleVariableDeclaration[19236-19255]"
    }, {
      "left" : "final boolean required",
      "right" : "final boolean required",
      "info" : "SingleVariableDeclaration[19257-19279]:SingleVariableDeclaration[19257-19279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19285-20080]:Block[19285-20080]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[19295-19359]:IfStatement[19295-19359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19318-19359]:Block[19318-19359]"
    }, {
      "left" : "buff.append(\"[\");",
      "right" : "buff.append(\"[\");",
      "info" : "ExpressionStatement[19332-19349]:ExpressionStatement[19332-19349]"
    }, {
      "left" : "if (option.getOpt() != null)",
      "right" : "if (option.getOpt() != null)",
      "info" : "IfStatement[19369-19563]:IfStatement[19369-19563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19406-19471]:Block[19406-19471]"
    }, {
      "left" : "buff.append(\"-\").append(option.getOpt());",
      "right" : "buff.append(\"-\").append(option.getOpt());",
      "info" : "ExpressionStatement[19420-19461]:ExpressionStatement[19420-19461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19493-19563]:Block[19493-19563]"
    }, {
      "left" : "buff.append(\"--\").append(option.getLongOpt());",
      "right" : "buff.append(\"--\").append(option.getLongOpt());",
      "info" : "ExpressionStatement[19507-19553]:ExpressionStatement[19507-19553]"
    }, {
      "left" : "if (option.hasArg() && (option.getArgName() == null || option.getArgName().length() != 0))",
      "right" : "if (option.hasArg() && (option.getArgName() == null || option.getArgName().length() != 0))",
      "info" : "IfStatement[19642-19942]:IfStatement[19642-19942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19741-19942]:Block[19741-19942]"
    }, {
      "left" : "buff.append(option.getOpt() == null ? longOptSeparator : \" \");",
      "right" : "buff.append(option.getOpt() == null ? longOptSeparator : \" \");",
      "info" : "ExpressionStatement[19755-19817]:ExpressionStatement[19755-19817]"
    }, {
      "left" : "buff.append(\"<\").append(option.getArgName() != null ? option.getArgName() : getArgName()).append(\">\");",
      "right" : "buff.append(\"<\").append(option.getArgName() != null ? option.getArgName() : getArgName()).append(\">\");",
      "info" : "ExpressionStatement[19830-19932]:ExpressionStatement[19830-19932]"
    }, {
      "left" : "if (!required)",
      "right" : "if (!required)",
      "info" : "IfStatement[20010-20074]:IfStatement[20010-20074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20033-20074]:Block[20033-20074]"
    }, {
      "left" : "buff.append(\"]\");",
      "right" : "buff.append(\"]\");",
      "info" : "ExpressionStatement[20047-20064]:ExpressionStatement[20047-20064]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20385-20391]:Modifier[20385-20391]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20392-20396]:PrimitiveType[20392-20396]"
    }, {
      "left" : "printUsage",
      "right" : "printUsage",
      "info" : "SimpleName[20397-20407]:SimpleName[20397-20407]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[20408-20422]:SingleVariableDeclaration[20408-20422]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[20424-20433]:SingleVariableDeclaration[20424-20433]"
    }, {
      "left" : "String cmdLineSyntax",
      "right" : "String cmdLineSyntax",
      "info" : "SingleVariableDeclaration[20435-20455]:SingleVariableDeclaration[20435-20455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20461-20631]:Block[20461-20631]"
    }, {
      "left" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "right" : "int argPos = cmdLineSyntax.indexOf(' ') + 1;",
      "info" : "VariableDeclarationStatement[20471-20515]:VariableDeclarationStatement[20471-20515]"
    }, {
      "left" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "right" : "printWrapped(pw, width, defaultSyntaxPrefix.length() + argPos, defaultSyntaxPrefix + cmdLineSyntax);",
      "info" : "ExpressionStatement[20525-20625]:ExpressionStatement[20525-20625]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21170-21176]:Modifier[21170-21176]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21177-21181]:PrimitiveType[21177-21181]"
    }, {
      "left" : "printOptions",
      "right" : "printOptions",
      "info" : "SimpleName[21182-21194]:SimpleName[21182-21194]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[21195-21209]:SingleVariableDeclaration[21195-21209]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[21211-21220]:SingleVariableDeclaration[21211-21220]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[21222-21237]:SingleVariableDeclaration[21222-21237]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[21269-21280]:SingleVariableDeclaration[21269-21280]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[21282-21293]:SingleVariableDeclaration[21282-21293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21299-21449]:Block[21299-21449]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer();",
      "right" : "StringBuffer sb = new StringBuffer();",
      "info" : "VariableDeclarationStatement[21309-21346]:VariableDeclarationStatement[21309-21346]"
    }, {
      "left" : "renderOptions(sb, width, options, leftPad, descPad);",
      "right" : "renderOptions(sb, width, options, leftPad, descPad);",
      "info" : "ExpressionStatement[21356-21408]:ExpressionStatement[21356-21408]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[21417-21443]:ExpressionStatement[21417-21443]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21720-21726]:Modifier[21720-21726]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21727-21731]:PrimitiveType[21727-21731]"
    }, {
      "left" : "printWrapped",
      "right" : "printWrapped",
      "info" : "SimpleName[21732-21744]:SimpleName[21732-21744]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[21745-21759]:SingleVariableDeclaration[21745-21759]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[21761-21770]:SingleVariableDeclaration[21761-21770]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[21772-21783]:SingleVariableDeclaration[21772-21783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21789-21838]:Block[21789-21838]"
    }, {
      "left" : "printWrapped(pw, width, 0, text);",
      "right" : "printWrapped(pw, width, 0, text);",
      "info" : "ExpressionStatement[21799-21832]:ExpressionStatement[21799-21832]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22188-22194]:Modifier[22188-22194]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22195-22199]:PrimitiveType[22195-22199]"
    }, {
      "left" : "printWrapped",
      "right" : "printWrapped",
      "info" : "SimpleName[22200-22212]:SimpleName[22200-22212]"
    }, {
      "left" : "PrintWriter pw",
      "right" : "PrintWriter pw",
      "info" : "SingleVariableDeclaration[22213-22227]:SingleVariableDeclaration[22213-22227]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[22229-22238]:SingleVariableDeclaration[22229-22238]"
    }, {
      "left" : "int nextLineTabStop",
      "right" : "int nextLineTabStop",
      "info" : "SingleVariableDeclaration[22240-22259]:SingleVariableDeclaration[22240-22259]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[22261-22272]:SingleVariableDeclaration[22261-22272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22278-22441]:Block[22278-22441]"
    }, {
      "left" : "StringBuffer sb = new StringBuffer(text.length());",
      "right" : "StringBuffer sb = new StringBuffer(text.length());",
      "info" : "VariableDeclarationStatement[22288-22338]:VariableDeclarationStatement[22288-22338]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, text);",
      "info" : "ExpressionStatement[22348-22400]:ExpressionStatement[22348-22400]"
    }, {
      "left" : "pw.println(sb.toString());",
      "right" : "pw.println(sb.toString());",
      "info" : "ExpressionStatement[22409-22435]:ExpressionStatement[22409-22435]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[23101-23110]:Modifier[23101-23110]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[23111-23123]:SimpleType[23111-23123]"
    }, {
      "left" : "renderOptions",
      "right" : "renderOptions",
      "info" : "SimpleName[23124-23137]:SimpleName[23124-23137]"
    }, {
      "left" : "StringBuffer sb",
      "right" : "StringBuffer sb",
      "info" : "SingleVariableDeclaration[23138-23153]:SingleVariableDeclaration[23138-23153]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[23155-23164]:SingleVariableDeclaration[23155-23164]"
    }, {
      "left" : "Options options",
      "right" : "Options options",
      "info" : "SingleVariableDeclaration[23166-23181]:SingleVariableDeclaration[23166-23181]"
    }, {
      "left" : "int leftPad",
      "right" : "int leftPad",
      "info" : "SingleVariableDeclaration[23183-23194]:SingleVariableDeclaration[23183-23194]"
    }, {
      "left" : "int descPad",
      "right" : "int descPad",
      "info" : "SingleVariableDeclaration[23196-23207]:SingleVariableDeclaration[23196-23207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23213-25856]:Block[23213-25856]"
    }, {
      "left" : "final String lpad = createPadding(leftPad);",
      "right" : "final String lpad = createPadding(leftPad);",
      "info" : "VariableDeclarationStatement[23223-23266]:VariableDeclarationStatement[23223-23266]"
    }, {
      "left" : "final String dpad = createPadding(descPad);",
      "right" : "final String dpad = createPadding(descPad);",
      "info" : "VariableDeclarationStatement[23275-23318]:VariableDeclarationStatement[23275-23318]"
    }, {
      "left" : "int max = 0;",
      "right" : "int max = 0;",
      "info" : "VariableDeclarationStatement[23561-23573]:VariableDeclarationStatement[23561-23573]"
    }, {
      "left" : "StringBuffer optBuf;",
      "right" : "StringBuffer optBuf;",
      "info" : "VariableDeclarationStatement[23582-23602]:VariableDeclarationStatement[23582-23602]"
    }, {
      "left" : "List prefixList = new ArrayList();",
      "right" : "List prefixList = new ArrayList();",
      "info" : "VariableDeclarationStatement[23611-23645]:VariableDeclarationStatement[23611-23645]"
    }, {
      "left" : "List optList = options.helpOptions();",
      "right" : "List optList = options.helpOptions();",
      "info" : "VariableDeclarationStatement[23655-23692]:VariableDeclarationStatement[23655-23692]"
    }, {
      "left" : "Collections.sort(optList, getOptionComparator());",
      "right" : "Collections.sort(optList, getOptionComparator());",
      "info" : "ExpressionStatement[23702-23751]:ExpressionStatement[23702-23751]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[23761-25076]:ForStatement[23761-25076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23821-25076]:Block[23821-25076]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[23835-23869]:VariableDeclarationStatement[23835-23869]"
    }, {
      "left" : "optBuf = new StringBuffer();",
      "right" : "optBuf = new StringBuffer();",
      "info" : "ExpressionStatement[23882-23910]:ExpressionStatement[23882-23910]"
    }, {
      "left" : "if (option.getOpt() == null)",
      "right" : "if (option.getOpt() == null)",
      "info" : "IfStatement[23936-24400]:IfStatement[23936-24400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23977-24094]:Block[23977-24094]"
    }, {
      "left" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(lpad).append(\"   \" + defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[23995-24080]:ExpressionStatement[23995-24080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24124-24400]:Block[24124-24400]"
    }, {
      "left" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "right" : "optBuf.append(lpad).append(defaultOptPrefix).append(option.getOpt());",
      "info" : "ExpressionStatement[24142-24211]:ExpressionStatement[24142-24211]"
    }, {
      "left" : "if (option.hasLongOpt())",
      "right" : "if (option.hasLongOpt())",
      "info" : "IfStatement[24229-24386]:IfStatement[24229-24386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24270-24386]:Block[24270-24386]"
    }, {
      "left" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "right" : "optBuf.append(',').append(defaultLongOptPrefix).append(option.getLongOpt());",
      "info" : "ExpressionStatement[24292-24368]:ExpressionStatement[24292-24368]"
    }, {
      "left" : "if (option.hasArg())",
      "right" : "if (option.hasArg())",
      "info" : "IfStatement[24414-24962]:IfStatement[24414-24962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24447-24962]:Block[24447-24962]"
    }, {
      "left" : "String argName = option.getArgName();",
      "right" : "String argName = option.getArgName();",
      "info" : "VariableDeclarationStatement[24465-24502]:VariableDeclarationStatement[24465-24502]"
    }, {
      "left" : "if (argName != null && argName.length() == 0)",
      "right" : "if (argName != null && argName.length() == 0)",
      "info" : "IfStatement[24519-24948]:IfStatement[24519-24948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24581-24697]:Block[24581-24697]"
    }, {
      "left" : "optBuf.append(' ');",
      "right" : "optBuf.append(' ');",
      "info" : "ExpressionStatement[24660-24679]:ExpressionStatement[24660-24679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24735-24948]:Block[24735-24948]"
    }, {
      "left" : "optBuf.append(option.hasLongOpt() ? longOptSeparator : \" \");",
      "right" : "optBuf.append(option.hasLongOpt() ? longOptSeparator : \" \");",
      "info" : "ExpressionStatement[24757-24817]:ExpressionStatement[24757-24817]"
    }, {
      "left" : "optBuf.append(\"<\").append(argName != null ? option.getArgName() : getArgName()).append(\">\");",
      "right" : "optBuf.append(\"<\").append(argName != null ? option.getArgName() : getArgName()).append(\">\");",
      "info" : "ExpressionStatement[24838-24930]:ExpressionStatement[24838-24930]"
    }, {
      "left" : "prefixList.add(optBuf);",
      "right" : "prefixList.add(optBuf);",
      "info" : "ExpressionStatement[24976-24999]:ExpressionStatement[24976-24999]"
    }, {
      "left" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "right" : "max = (optBuf.length() > max) ? optBuf.length() : max;",
      "info" : "ExpressionStatement[25012-25066]:ExpressionStatement[25012-25066]"
    }, {
      "left" : "int x = 0;",
      "right" : "int x = 0;",
      "info" : "VariableDeclarationStatement[25086-25096]:VariableDeclarationStatement[25086-25096]"
    }, {
      "left" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "right" : "for (Iterator i = optList.iterator(); i.hasNext())",
      "info" : "ForStatement[25106-25830]:ForStatement[25106-25830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25166-25830]:Block[25166-25830]"
    }, {
      "left" : "Option option = (Option) i.next();",
      "right" : "Option option = (Option) i.next();",
      "info" : "VariableDeclarationStatement[25180-25214]:VariableDeclarationStatement[25180-25214]"
    }, {
      "left" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "right" : "optBuf = new StringBuffer(prefixList.get(x++).toString());",
      "info" : "ExpressionStatement[25227-25285]:ExpressionStatement[25227-25285]"
    }, {
      "left" : "if (optBuf.length() < max)",
      "right" : "if (optBuf.length() < max)",
      "info" : "IfStatement[25299-25422]:IfStatement[25299-25422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25338-25422]:Block[25338-25422]"
    }, {
      "left" : "optBuf.append(createPadding(max - optBuf.length()));",
      "right" : "optBuf.append(createPadding(max - optBuf.length()));",
      "info" : "ExpressionStatement[25356-25408]:ExpressionStatement[25356-25408]"
    }, {
      "left" : "optBuf.append(dpad);",
      "right" : "optBuf.append(dpad);",
      "info" : "ExpressionStatement[25436-25456]:ExpressionStatement[25436-25456]"
    }, {
      "left" : "int nextLineTabStop = max + descPad;",
      "right" : "int nextLineTabStop = max + descPad;",
      "info" : "VariableDeclarationStatement[25470-25506]:VariableDeclarationStatement[25470-25506]"
    }, {
      "left" : "if (option.getDescription() != null)",
      "right" : "if (option.getDescription() != null)",
      "info" : "IfStatement[25520-25640]:IfStatement[25520-25640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25569-25640]:Block[25569-25640]"
    }, {
      "left" : "optBuf.append(option.getDescription());",
      "right" : "optBuf.append(option.getDescription());",
      "info" : "ExpressionStatement[25587-25626]:ExpressionStatement[25587-25626]"
    }, {
      "left" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "right" : "renderWrappedText(sb, width, nextLineTabStop, optBuf.toString());",
      "info" : "ExpressionStatement[25654-25719]:ExpressionStatement[25654-25719]"
    }, {
      "left" : "if (i.hasNext())",
      "right" : "if (i.hasNext())",
      "info" : "IfStatement[25733-25820]:IfStatement[25733-25820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25762-25820]:Block[25762-25820]"
    }, {
      "left" : "sb.append(defaultNewLine);",
      "right" : "sb.append(defaultNewLine);",
      "info" : "ExpressionStatement[25780-25806]:ExpressionStatement[25780-25806]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[25840-25850]:ReturnStatement[25840-25850]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[26306-26315]:Modifier[26306-26315]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[26316-26328]:SimpleType[26316-26328]"
    }, {
      "left" : "renderWrappedText",
      "right" : "renderWrappedText",
      "info" : "SimpleName[26329-26346]:SimpleName[26329-26346]"
    }, {
      "left" : "StringBuffer sb",
      "right" : "StringBuffer sb",
      "info" : "SingleVariableDeclaration[26347-26362]:SingleVariableDeclaration[26347-26362]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[26364-26373]:SingleVariableDeclaration[26364-26373]"
    }, {
      "left" : "int nextLineTabStop",
      "right" : "int nextLineTabStop",
      "info" : "SingleVariableDeclaration[26421-26440]:SingleVariableDeclaration[26421-26440]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[26442-26453]:SingleVariableDeclaration[26442-26453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26459-27459]:Block[26459-27459]"
    }, {
      "left" : "int pos = findWrapPos(text, width, 0);",
      "right" : "int pos = findWrapPos(text, width, 0);",
      "info" : "VariableDeclarationStatement[26469-26507]:VariableDeclarationStatement[26469-26507]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[26517-26611]:IfStatement[26517-26611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26540-26611]:Block[26540-26611]"
    }, {
      "left" : "sb.append(rtrim(text));",
      "right" : "sb.append(rtrim(text));",
      "info" : "ExpressionStatement[26554-26577]:ExpressionStatement[26554-26577]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[26591-26601]:ReturnStatement[26591-26601]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[26620-26684]:ExpressionStatement[26620-26684]"
    }, {
      "left" : "if (nextLineTabStop >= width)",
      "right" : "if (nextLineTabStop >= width)",
      "info" : "IfStatement[26694-26821]:IfStatement[26694-26821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26732-26821]:Block[26732-26821]"
    }, {
      "left" : "nextLineTabStop = 1;",
      "right" : "nextLineTabStop = 1;",
      "info" : "ExpressionStatement[26791-26811]:ExpressionStatement[26791-26811]"
    }, {
      "left" : "final String padding = createPadding(nextLineTabStop);",
      "right" : "final String padding = createPadding(nextLineTabStop);",
      "info" : "VariableDeclarationStatement[26915-26969]:VariableDeclarationStatement[26915-26969]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[26979-27453]:WhileStatement[26979-27453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27000-27453]:Block[27000-27453]"
    }, {
      "left" : "text = padding + text.substring(pos).trim();",
      "right" : "text = padding + text.substring(pos).trim();",
      "info" : "ExpressionStatement[27014-27058]:ExpressionStatement[27014-27058]"
    }, {
      "left" : "pos = findWrapPos(text, width, 0);",
      "right" : "pos = findWrapPos(text, width, 0);",
      "info" : "ExpressionStatement[27071-27105]:ExpressionStatement[27071-27105]"
    }, {
      "left" : "if (pos == -1)",
      "right" : "if (pos == -1)",
      "info" : "IfStatement[27119-27222]:IfStatement[27119-27222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27146-27222]:Block[27146-27222]"
    }, {
      "left" : "sb.append(text);",
      "right" : "sb.append(text);",
      "info" : "ExpressionStatement[27164-27180]:ExpressionStatement[27164-27180]"
    }, {
      "left" : "return sb;",
      "right" : "return sb;",
      "info" : "ReturnStatement[27198-27208]:ReturnStatement[27198-27208]"
    }, {
      "left" : "if ((text.length() > width) && (pos == nextLineTabStop - 1))",
      "right" : "if ((text.length() > width) && (pos == nextLineTabStop - 1))",
      "info" : "IfStatement[27248-27365]:IfStatement[27248-27365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27321-27365]:Block[27321-27365]"
    }, {
      "left" : "pos = width;",
      "right" : "pos = width;",
      "info" : "ExpressionStatement[27339-27351]:ExpressionStatement[27339-27351]"
    }, {
      "left" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "right" : "sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);",
      "info" : "ExpressionStatement[27379-27443]:ExpressionStatement[27379-27443]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[28176-28185]:Modifier[28176-28185]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[28186-28189]:PrimitiveType[28186-28189]"
    }, {
      "left" : "findWrapPos",
      "right" : "findWrapPos",
      "info" : "SimpleName[28190-28201]:SimpleName[28190-28201]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[28202-28213]:SingleVariableDeclaration[28202-28213]"
    }, {
      "left" : "int width",
      "right" : "int width",
      "info" : "SingleVariableDeclaration[28215-28224]:SingleVariableDeclaration[28215-28224]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[28226-28238]:SingleVariableDeclaration[28226-28238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28244-29358]:Block[28244-29201]"
    }, {
      "left" : "int pos;",
      "right" : "int pos;",
      "info" : "VariableDeclarationStatement[28254-28262]:VariableDeclarationStatement[28254-28262]"
    }, {
      "left" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "right" : "if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= width)\n                || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= width))",
      "info" : "IfStatement[28354-28642]:IfStatement[28354-28642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28508-28547]:Block[28508-28547]"
    }, {
      "left" : "return pos + 1;",
      "right" : "return pos + 1;",
      "info" : "ReturnStatement[28522-28537]:ReturnStatement[28522-28537]"
    }, {
      "left" : "if (startPos + width >= text.length())",
      "right" : "if (startPos + width >= text.length())",
      "info" : "IfStatement[28561-28642]:IfStatement[28561-28642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28608-28642]:Block[28608-28642]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[28622-28632]:ReturnStatement[28622-28632]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[28725-28748]:ExpressionStatement[28725-28748]"
    }, {
      "left" : "char c;",
      "right" : "char c;",
      "info" : "VariableDeclarationStatement[28758-28765]:VariableDeclarationStatement[28758-28765]"
    }, {
      "left" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "right" : "while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n                && (c != '\\n') && (c != '\\r'))",
      "info" : "WhileStatement[28775-28920]:WhileStatement[28775-28920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28890-28920]:Block[28890-28920]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[28904-28910]:ExpressionStatement[28904-28910]"
    }, {
      "left" : "if (pos > startPos)",
      "right" : "if (pos > startPos)",
      "info" : "IfStatement[28970-29033]:IfStatement[28970-29033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28998-29033]:Block[28998-29033]"
    }, {
      "left" : "return pos;",
      "right" : "return pos;",
      "info" : "ReturnStatement[29012-29023]:ReturnStatement[29012-29023]"
    }, {
      "left" : "pos = startPos + width;",
      "right" : "pos = startPos + width;",
      "info" : "ExpressionStatement[29115-29138]:ExpressionStatement[29115-29138]"
    }, {
      "left" : "return pos == text.length() ? -1 : pos;",
      "right" : "return pos == text.length() ? -1 : pos;",
      "info" : "ReturnStatement[29313-29352]:ReturnStatement[29156-29195]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29558-29567]:Modifier[29401-29410]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[29568-29574]:SimpleType[29411-29417]"
    }, {
      "left" : "createPadding",
      "right" : "createPadding",
      "info" : "SimpleName[29575-29588]:SimpleName[29418-29431]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[29589-29596]:SingleVariableDeclaration[29432-29439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29602-29729]:Block[29445-29572]"
    }, {
      "left" : "char[] padding = new char[len];",
      "right" : "char[] padding = new char[len];",
      "info" : "VariableDeclarationStatement[29612-29643]:VariableDeclarationStatement[29455-29486]"
    }, {
      "left" : "Arrays.fill(padding, ' ');",
      "right" : "Arrays.fill(padding, ' ');",
      "info" : "ExpressionStatement[29652-29678]:ExpressionStatement[29495-29521]"
    }, {
      "left" : "return new String(padding);",
      "right" : "return new String(padding);",
      "info" : "ReturnStatement[29696-29723]:ReturnStatement[29539-29566]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29952-29961]:Modifier[29795-29804]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[29962-29968]:SimpleType[29805-29811]"
    }, {
      "left" : "rtrim",
      "right" : "rtrim",
      "info" : "SimpleName[29969-29974]:SimpleName[29812-29817]"
    }, {
      "left" : "String s",
      "right" : "String s",
      "info" : "SingleVariableDeclaration[29975-29983]:SingleVariableDeclaration[29818-29826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29989-30263]:Block[29832-30106]"
    }, {
      "left" : "if ((s == null) || (s.length() == 0))",
      "right" : "if ((s == null) || (s.length() == 0))",
      "info" : "IfStatement[29999-30078]:IfStatement[29842-29921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30045-30078]:Block[29888-29921]"
    }, {
      "left" : "return s;",
      "right" : "return s;",
      "info" : "ReturnStatement[30059-30068]:ReturnStatement[29902-29911]"
    }, {
      "left" : "int pos = s.length();",
      "right" : "int pos = s.length();",
      "info" : "VariableDeclarationStatement[30088-30109]:VariableDeclarationStatement[29931-29952]"
    }, {
      "left" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "right" : "while ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))",
      "info" : "WhileStatement[30119-30220]:WhileStatement[29962-30063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30190-30220]:Block[30033-30063]"
    }, {
      "left" : "--pos;",
      "right" : "--pos;",
      "info" : "ExpressionStatement[30204-30210]:ExpressionStatement[30047-30053]"
    }, {
      "left" : "return s.substring(0, pos);",
      "right" : "return s.substring(0, pos);",
      "info" : "ReturnStatement[30230-30257]:ReturnStatement[30073-30100]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30622-30629]:Modifier[30465-30472]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30630-30636]:Modifier[30473-30479]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[30637-30642]:TYPE_DECLARATION_KIND[30480-30485]"
    }, {
      "left" : "OptionComparator",
      "right" : "OptionComparator",
      "info" : "SimpleName[30643-30659]:SimpleName[30486-30502]"
    }, {
      "left" : "Comparator",
      "right" : "Comparator",
      "info" : "SimpleType[30671-30681]:SimpleType[30514-30524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31221-31227]:Modifier[31064-31070]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[31228-31231]:PrimitiveType[31071-31074]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[31232-31239]:SimpleName[31075-31082]"
    }, {
      "left" : "Object o1",
      "right" : "Object o1",
      "info" : "SingleVariableDeclaration[31240-31249]:SingleVariableDeclaration[31083-31092]"
    }, {
      "left" : "Object o2",
      "right" : "Object o2",
      "info" : "SingleVariableDeclaration[31251-31260]:SingleVariableDeclaration[31094-31103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31270-31429]:Block[31113-31272]"
    }, {
      "left" : "Option opt1 = (Option) o1;",
      "right" : "Option opt1 = (Option) o1;",
      "info" : "VariableDeclarationStatement[31284-31310]:VariableDeclarationStatement[31127-31153]"
    }, {
      "left" : "Option opt2 = (Option) o2;",
      "right" : "Option opt2 = (Option) o2;",
      "info" : "VariableDeclarationStatement[31323-31349]:VariableDeclarationStatement[31166-31192]"
    }, {
      "left" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "right" : "return opt1.getKey().compareToIgnoreCase(opt2.getKey());",
      "info" : "ReturnStatement[31363-31419]:ReturnStatement[31206-31262]"
    } ]
  },
  "interFileMappings" : { }
}