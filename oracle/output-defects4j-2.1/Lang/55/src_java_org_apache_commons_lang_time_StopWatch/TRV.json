{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final int STATE_UNSTARTED = 0;",
      "right" : "private static final int STATE_UNSTARTED = 0;",
      "info" : "FieldDeclaration[2347-2392]:FieldDeclaration[2347-2392]"
    }, {
      "left" : "private static final int STATE_RUNNING   = 1;",
      "right" : "private static final int STATE_RUNNING   = 1;",
      "info" : "FieldDeclaration[2397-2442]:FieldDeclaration[2397-2442]"
    }, {
      "left" : "private static final int STATE_STOPPED   = 2;",
      "right" : "private static final int STATE_STOPPED   = 2;",
      "info" : "FieldDeclaration[2447-2492]:FieldDeclaration[2447-2492]"
    }, {
      "left" : "private static final int STATE_SUSPENDED = 3;",
      "right" : "private static final int STATE_SUSPENDED = 3;",
      "info" : "FieldDeclaration[2497-2542]:FieldDeclaration[2497-2542]"
    }, {
      "left" : "private static final int STATE_UNSPLIT = 10;",
      "right" : "private static final int STATE_UNSPLIT = 10;",
      "info" : "FieldDeclaration[2567-2611]:FieldDeclaration[2567-2611]"
    }, {
      "left" : "private static final int STATE_SPLIT   = 11;",
      "right" : "private static final int STATE_SPLIT   = 11;",
      "info" : "FieldDeclaration[2616-2660]:FieldDeclaration[2616-2660]"
    }, {
      "left" : "private int runningState = STATE_UNSTARTED;",
      "right" : "private int runningState = STATE_UNSTARTED;",
      "info" : "FieldDeclaration[2666-2778]:FieldDeclaration[2666-2778]"
    }, {
      "left" : "private int splitState   = STATE_UNSPLIT;",
      "right" : "private int splitState   = STATE_UNSPLIT;",
      "info" : "FieldDeclaration[2784-2898]:FieldDeclaration[2784-2898]"
    }, {
      "left" : "private long startTime = -1;",
      "right" : "private long startTime = -1;",
      "info" : "FieldDeclaration[2904-2971]:FieldDeclaration[2904-2971]"
    }, {
      "left" : "private long stopTime = -1;",
      "right" : "private long stopTime = -1;",
      "info" : "FieldDeclaration[2976-3041]:FieldDeclaration[2976-3041]"
    }, {
      "left" : "public StopWatch()",
      "right" : "public StopWatch()",
      "info" : "MethodDeclaration[3047-3133]:MethodDeclaration[3047-3133]"
    }, {
      "left" : "public void start()",
      "right" : "public void start()",
      "info" : "MethodDeclaration[3139-3798]:MethodDeclaration[3139-3798]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[4327-4658]:MethodDeclaration[4386-4717]"
    }, {
      "left" : "public void split()",
      "right" : "public void split()",
      "info" : "MethodDeclaration[4664-5260]:MethodDeclaration[4723-5319]"
    }, {
      "left" : "public void unsplit()",
      "right" : "public void unsplit()",
      "info" : "MethodDeclaration[5266-5773]:MethodDeclaration[5325-5832]"
    }, {
      "left" : "public void suspend()",
      "right" : "public void suspend()",
      "info" : "MethodDeclaration[5779-6376]:MethodDeclaration[5838-6435]"
    }, {
      "left" : "public void resume()",
      "right" : "public void resume()",
      "info" : "MethodDeclaration[6382-7012]:MethodDeclaration[6441-7071]"
    }, {
      "left" : "public long getTime()",
      "right" : "public long getTime()",
      "info" : "MethodDeclaration[7018-7753]:MethodDeclaration[7077-7812]"
    }, {
      "left" : "public long getSplitTime()",
      "right" : "public long getSplitTime()",
      "info" : "MethodDeclaration[7759-8287]:MethodDeclaration[7818-8346]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[8293-8658]:MethodDeclaration[8352-8717]"
    }, {
      "left" : "public String toSplitString()",
      "right" : "public String toSplitString()",
      "info" : "MethodDeclaration[8664-9069]:MethodDeclaration[8723-9128]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3109-3133]:Block[3109-3133]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[3119-3127]:SuperConstructorInvocation[3119-3127]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3384-3798]:Block[3384-3798]"
    }, {
      "left" : "if(this.runningState == STATE_STOPPED)",
      "right" : "if(this.runningState == STATE_STOPPED)",
      "info" : "IfStatement[3394-3541]:IfStatement[3394-3541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3433-3541]:Block[3433-3541]"
    }, {
      "left" : "throw new IllegalStateException(\"Stopwatch must be reset before being restarted. \");",
      "right" : "throw new IllegalStateException(\"Stopwatch must be reset before being restarted. \");",
      "info" : "ThrowStatement[3447-3531]:ThrowStatement[3447-3531]"
    }, {
      "left" : "if(this.runningState != STATE_UNSTARTED)",
      "right" : "if(this.runningState != STATE_UNSTARTED)",
      "info" : "IfStatement[3550-3678]:IfStatement[3550-3678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3591-3678]:Block[3591-3678]"
    }, {
      "left" : "throw new IllegalStateException(\"Stopwatch already started. \");",
      "right" : "throw new IllegalStateException(\"Stopwatch already started. \");",
      "info" : "ThrowStatement[3605-3668]:ThrowStatement[3605-3668]"
    }, {
      "left" : "stopTime = -1;",
      "right" : "stopTime = -1;",
      "info" : "ExpressionStatement[3687-3701]:ExpressionStatement[3687-3701]"
    }, {
      "left" : "startTime = System.currentTimeMillis();",
      "right" : "startTime = System.currentTimeMillis();",
      "info" : "ExpressionStatement[3710-3749]:ExpressionStatement[3710-3749]"
    }, {
      "left" : "this.runningState = STATE_RUNNING;",
      "right" : "this.runningState = STATE_RUNNING;",
      "info" : "ExpressionStatement[3758-3792]:ExpressionStatement[3758-3792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4516-4658]:Block[4575-4717]"
    }, {
      "left" : "this.runningState = STATE_UNSTARTED;",
      "right" : "this.runningState = STATE_UNSTARTED;",
      "info" : "ExpressionStatement[4526-4562]:ExpressionStatement[4585-4621]"
    }, {
      "left" : "this.splitState   = STATE_UNSPLIT;",
      "right" : "this.splitState   = STATE_UNSPLIT;",
      "info" : "ExpressionStatement[4571-4605]:ExpressionStatement[4630-4664]"
    }, {
      "left" : "startTime = -1;",
      "right" : "startTime = -1;",
      "info" : "ExpressionStatement[4614-4629]:ExpressionStatement[4673-4688]"
    }, {
      "left" : "stopTime = -1;",
      "right" : "stopTime = -1;",
      "info" : "ExpressionStatement[4638-4652]:ExpressionStatement[4697-4711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5033-5260]:Block[5092-5319]"
    }, {
      "left" : "if(this.runningState != STATE_RUNNING)",
      "right" : "if(this.runningState != STATE_RUNNING)",
      "info" : "IfStatement[5043-5168]:IfStatement[5102-5227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5082-5168]:Block[5141-5227]"
    }, {
      "left" : "throw new IllegalStateException(\"Stopwatch is not running. \");",
      "right" : "throw new IllegalStateException(\"Stopwatch is not running. \");",
      "info" : "ThrowStatement[5096-5158]:ThrowStatement[5155-5217]"
    }, {
      "left" : "stopTime = System.currentTimeMillis();",
      "right" : "stopTime = System.currentTimeMillis();",
      "info" : "ExpressionStatement[5177-5215]:ExpressionStatement[5236-5274]"
    }, {
      "left" : "this.splitState = STATE_SPLIT;",
      "right" : "this.splitState = STATE_SPLIT;",
      "info" : "ExpressionStatement[5224-5254]:ExpressionStatement[5283-5313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5568-5773]:Block[5627-5832]"
    }, {
      "left" : "if(this.splitState != STATE_SPLIT)",
      "right" : "if(this.splitState != STATE_SPLIT)",
      "info" : "IfStatement[5578-5703]:IfStatement[5637-5762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5613-5703]:Block[5672-5762]"
    }, {
      "left" : "throw new IllegalStateException(\"Stopwatch has not been split. \");",
      "right" : "throw new IllegalStateException(\"Stopwatch has not been split. \");",
      "info" : "ThrowStatement[5627-5693]:ThrowStatement[5686-5752]"
    }, {
      "left" : "stopTime = -1;",
      "right" : "stopTime = -1;",
      "info" : "ExpressionStatement[5712-5726]:ExpressionStatement[5771-5785]"
    }, {
      "left" : "this.splitState = STATE_UNSPLIT;",
      "right" : "this.splitState = STATE_UNSPLIT;",
      "info" : "ExpressionStatement[5735-5767]:ExpressionStatement[5794-5826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6131-6376]:Block[6190-6435]"
    }, {
      "left" : "if(this.runningState != STATE_RUNNING)",
      "right" : "if(this.runningState != STATE_RUNNING)",
      "info" : "IfStatement[6141-6278]:IfStatement[6200-6337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6180-6278]:Block[6239-6337]"
    }, {
      "left" : "throw new IllegalStateException(\"Stopwatch must be running to suspend. \");",
      "right" : "throw new IllegalStateException(\"Stopwatch must be running to suspend. \");",
      "info" : "ThrowStatement[6194-6268]:ThrowStatement[6253-6327]"
    }, {
      "left" : "stopTime = System.currentTimeMillis();",
      "right" : "stopTime = System.currentTimeMillis();",
      "info" : "ExpressionStatement[6287-6325]:ExpressionStatement[6346-6384]"
    }, {
      "left" : "this.runningState = STATE_SUSPENDED;",
      "right" : "this.runningState = STATE_SUSPENDED;",
      "info" : "ExpressionStatement[6334-6370]:ExpressionStatement[6393-6429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6728-7012]:Block[6787-7071]"
    }, {
      "left" : "if(this.runningState != STATE_SUSPENDED)",
      "right" : "if(this.runningState != STATE_SUSPENDED)",
      "info" : "IfStatement[6738-6878]:IfStatement[6797-6937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6779-6878]:Block[6838-6937]"
    }, {
      "left" : "throw new IllegalStateException(\"Stopwatch must be suspended to resume. \");",
      "right" : "throw new IllegalStateException(\"Stopwatch must be suspended to resume. \");",
      "info" : "ThrowStatement[6793-6868]:ThrowStatement[6852-6927]"
    }, {
      "left" : "startTime += (System.currentTimeMillis() - stopTime);",
      "right" : "startTime += (System.currentTimeMillis() - stopTime);",
      "info" : "ExpressionStatement[6887-6940]:ExpressionStatement[6946-6999]"
    }, {
      "left" : "stopTime = -1;",
      "right" : "stopTime = -1;",
      "info" : "ExpressionStatement[6949-6963]:ExpressionStatement[7008-7022]"
    }, {
      "left" : "this.runningState = STATE_RUNNING;",
      "right" : "this.runningState = STATE_RUNNING;",
      "info" : "ExpressionStatement[6972-7006]:ExpressionStatement[7031-7065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7305-7753]:Block[7364-7812]"
    }, {
      "left" : "if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED)",
      "right" : "if(this.runningState == STATE_STOPPED || this.runningState == STATE_SUSPENDED)",
      "info" : "IfStatement[7315-7672]:IfStatement[7374-7731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7394-7456]:Block[7453-7515]"
    }, {
      "left" : "return this.stopTime - this.startTime;",
      "right" : "return this.stopTime - this.startTime;",
      "info" : "ReturnStatement[7408-7446]:ReturnStatement[7467-7505]"
    }, {
      "left" : "if(this.runningState == STATE_UNSTARTED)",
      "right" : "if(this.runningState == STATE_UNSTARTED)",
      "info" : "IfStatement[7470-7672]:IfStatement[7529-7731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7511-7544]:Block[7570-7603]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[7525-7534]:ReturnStatement[7584-7593]"
    }, {
      "left" : "if(this.runningState == STATE_RUNNING)",
      "right" : "if(this.runningState == STATE_RUNNING)",
      "info" : "IfStatement[7558-7672]:IfStatement[7617-7731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7597-7672]:Block[7656-7731]"
    }, {
      "left" : "return System.currentTimeMillis() - this.startTime;",
      "right" : "return System.currentTimeMillis() - this.startTime;",
      "info" : "ReturnStatement[7611-7662]:ReturnStatement[7670-7721]"
    }, {
      "left" : "throw new RuntimeException(\"Illegal running state has occured. \");",
      "right" : "throw new RuntimeException(\"Illegal running state has occured. \");",
      "info" : "ThrowStatement[7681-7747]:ThrowStatement[7740-7806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8082-8287]:Block[8141-8346]"
    }, {
      "left" : "if(this.splitState != STATE_SPLIT)",
      "right" : "if(this.splitState != STATE_SPLIT)",
      "info" : "IfStatement[8092-8234]:IfStatement[8151-8293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8127-8234]:Block[8186-8293]"
    }, {
      "left" : "throw new IllegalStateException(\"Stopwatch must be split to get the split time. \");",
      "right" : "throw new IllegalStateException(\"Stopwatch must be split to get the split time. \");",
      "info" : "ThrowStatement[8141-8224]:ThrowStatement[8200-8283]"
    }, {
      "left" : "return this.stopTime - this.startTime;",
      "right" : "return this.stopTime - this.startTime;",
      "info" : "ReturnStatement[8243-8281]:ReturnStatement[8302-8340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8586-8658]:Block[8645-8717]"
    }, {
      "left" : "return DurationFormatUtils.formatDurationHMS(getTime());",
      "right" : "return DurationFormatUtils.formatDurationHMS(getTime());",
      "info" : "ReturnStatement[8596-8652]:ReturnStatement[8655-8711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8992-9069]:Block[9051-9128]"
    }, {
      "left" : "return DurationFormatUtils.formatDurationHMS(getSplitTime());",
      "right" : "return DurationFormatUtils.formatDurationHMS(getSplitTime());",
      "info" : "ReturnStatement[9002-9063]:ReturnStatement[9061-9122]"
    } ]
  },
  "interFileMappings" : { }
}