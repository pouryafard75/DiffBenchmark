{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -5032960206869675528L;",
      "right" : "private static final long serialVersionUID = -5032960206869675528L;",
      "info" : "FieldDeclaration[4755-4853]:FieldDeclaration[4755-4853]"
    }, {
      "left" : "protected static final String DEFAULT_DOMAIN_DESCRIPTION = \"Time\";",
      "right" : "protected static final String DEFAULT_DOMAIN_DESCRIPTION = \"Time\";",
      "info" : "FieldDeclaration[4861-4981]:FieldDeclaration[4861-4981]"
    }, {
      "left" : "protected static final String DEFAULT_RANGE_DESCRIPTION = \"Value\";",
      "right" : "protected static final String DEFAULT_RANGE_DESCRIPTION = \"Value\";",
      "info" : "FieldDeclaration[4989-5108]:FieldDeclaration[4989-5108]"
    }, {
      "left" : "private String domain;",
      "right" : "private String domain;",
      "info" : "FieldDeclaration[5116-5179]:FieldDeclaration[5116-5179]"
    }, {
      "left" : "private String range;",
      "right" : "private String range;",
      "info" : "FieldDeclaration[5187-5248]:FieldDeclaration[5187-5248]"
    }, {
      "left" : "protected Class timePeriodClass;",
      "right" : "protected Class timePeriodClass;",
      "info" : "FieldDeclaration[5256-5333]:FieldDeclaration[5256-5333]"
    }, {
      "left" : "protected List data;",
      "right" : "protected List data;",
      "info" : "FieldDeclaration[5341-5411]:FieldDeclaration[5341-5411]"
    }, {
      "left" : "private int maximumItemCount;",
      "right" : "private int maximumItemCount;",
      "info" : "FieldDeclaration[5419-5504]:FieldDeclaration[5419-5504]"
    }, {
      "left" : "private long maximumItemAge;",
      "right" : "private long maximumItemAge;",
      "info" : "FieldDeclaration[5512-5654]:FieldDeclaration[5512-5654]"
    }, {
      "left" : "public TimeSeries(Comparable name)",
      "right" : "public TimeSeries(Comparable name)",
      "info" : "MethodDeclaration[5662-6086]:MethodDeclaration[5662-6086]"
    }, {
      "left" : "public TimeSeries(Comparable name, Class timePeriodClass)",
      "right" : "public TimeSeries(Comparable name, Class timePeriodClass)",
      "info" : "MethodDeclaration[6094-6605]:MethodDeclaration[6094-6605]"
    }, {
      "left" : "public TimeSeries(Comparable name, String domain, String range,\r\n                      Class timePeriodClass)",
      "right" : "public TimeSeries(Comparable name, String domain, String range,\r\n                      Class timePeriodClass)",
      "info" : "MethodDeclaration[6613-7688]:MethodDeclaration[6613-7688]"
    }, {
      "left" : "public String getDomainDescription()",
      "right" : "public String getDomainDescription()",
      "info" : "MethodDeclaration[7696-7956]:MethodDeclaration[7696-7956]"
    }, {
      "left" : "public void setDomainDescription(String description)",
      "right" : "public void setDomainDescription(String description)",
      "info" : "MethodDeclaration[7964-8486]:MethodDeclaration[7964-8486]"
    }, {
      "left" : "public String getRangeDescription()",
      "right" : "public String getRangeDescription()",
      "info" : "MethodDeclaration[8494-8749]:MethodDeclaration[8494-8749]"
    }, {
      "left" : "public void setRangeDescription(String description)",
      "right" : "public void setRangeDescription(String description)",
      "info" : "MethodDeclaration[8757-9248]:MethodDeclaration[8757-9248]"
    }, {
      "left" : "public int getItemCount()",
      "right" : "public int getItemCount()",
      "info" : "MethodDeclaration[9256-9433]:MethodDeclaration[9256-9433]"
    }, {
      "left" : "public List getItems()",
      "right" : "public List getItems()",
      "info" : "MethodDeclaration[9441-9733]:MethodDeclaration[9441-9733]"
    }, {
      "left" : "public int getMaximumItemCount()",
      "right" : "public int getMaximumItemCount()",
      "info" : "MethodDeclaration[9741-10076]:MethodDeclaration[9741-10076]"
    }, {
      "left" : "public void setMaximumItemCount(int maximum)",
      "right" : "public void setMaximumItemCount(int maximum)",
      "info" : "MethodDeclaration[10084-10878]:MethodDeclaration[10084-10878]"
    }, {
      "left" : "public long getMaximumItemAge()",
      "right" : "public long getMaximumItemAge()",
      "info" : "MethodDeclaration[10886-11144]:MethodDeclaration[10886-11144]"
    }, {
      "left" : "public void setMaximumItemAge(long periods)",
      "right" : "public void setMaximumItemAge(long periods)",
      "info" : "MethodDeclaration[11152-11985]:MethodDeclaration[11152-11985]"
    }, {
      "left" : "public Class getTimePeriodClass()",
      "right" : "public Class getTimePeriodClass()",
      "info" : "MethodDeclaration[11993-12475]:MethodDeclaration[11993-12475]"
    }, {
      "left" : "public TimeSeriesDataItem getDataItem(int index)",
      "right" : "public TimeSeriesDataItem getDataItem(int index)",
      "info" : "MethodDeclaration[12483-12812]:MethodDeclaration[12483-12812]"
    }, {
      "left" : "public TimeSeriesDataItem getDataItem(RegularTimePeriod period)",
      "right" : "public TimeSeriesDataItem getDataItem(RegularTimePeriod period)",
      "info" : "MethodDeclaration[12820-13411]:MethodDeclaration[12820-13411]"
    }, {
      "left" : "public RegularTimePeriod getTimePeriod(int index)",
      "right" : "public RegularTimePeriod getTimePeriod(int index)",
      "info" : "MethodDeclaration[13419-13698]:MethodDeclaration[13419-13698]"
    }, {
      "left" : "public RegularTimePeriod getNextTimePeriod()",
      "right" : "public RegularTimePeriod getNextTimePeriod()",
      "info" : "MethodDeclaration[13706-14025]:MethodDeclaration[13706-14025]"
    }, {
      "left" : "public Collection getTimePeriods()",
      "right" : "public Collection getTimePeriods()",
      "info" : "MethodDeclaration[14033-14415]:MethodDeclaration[14033-14415]"
    }, {
      "left" : "public Collection getTimePeriodsUniqueToOtherSeries(TimeSeries series)",
      "right" : "public Collection getTimePeriodsUniqueToOtherSeries(TimeSeries series)",
      "info" : "MethodDeclaration[14423-15130]:MethodDeclaration[14423-15130]"
    }, {
      "left" : "public int getIndex(RegularTimePeriod period)",
      "right" : "public int getIndex(RegularTimePeriod period)",
      "info" : "MethodDeclaration[15138-15699]:MethodDeclaration[15138-15699]"
    }, {
      "left" : "public Number getValue(int index)",
      "right" : "public Number getValue(int index)",
      "info" : "MethodDeclaration[15707-15976]:MethodDeclaration[15707-15976]"
    }, {
      "left" : "public Number getValue(RegularTimePeriod period)",
      "right" : "public Number getValue(RegularTimePeriod period)",
      "info" : "MethodDeclaration[15984-16521]:MethodDeclaration[15984-16521]"
    }, {
      "left" : "public void add(TimeSeriesDataItem item)",
      "right" : "public void add(TimeSeriesDataItem item)",
      "info" : "MethodDeclaration[16529-16881]:MethodDeclaration[16529-16881]"
    }, {
      "left" : "public void add(TimeSeriesDataItem item, boolean notify)",
      "right" : "public void add(TimeSeriesDataItem item, boolean notify)",
      "info" : "MethodDeclaration[16889-19753]:MethodDeclaration[16889-19753]"
    }, {
      "left" : "public void add(RegularTimePeriod period, double value)",
      "right" : "public void add(RegularTimePeriod period, double value)",
      "info" : "MethodDeclaration[19761-20150]:MethodDeclaration[19761-20150]"
    }, {
      "left" : "public void add(RegularTimePeriod period, double value, boolean notify)",
      "right" : "public void add(RegularTimePeriod period, double value, boolean notify)",
      "info" : "MethodDeclaration[20158-20671]:MethodDeclaration[20158-20671]"
    }, {
      "left" : "public void add(RegularTimePeriod period, Number value)",
      "right" : "public void add(RegularTimePeriod period, Number value)",
      "info" : "MethodDeclaration[20679-21129]:MethodDeclaration[20679-21129]"
    }, {
      "left" : "public void add(RegularTimePeriod period, Number value, boolean notify)",
      "right" : "public void add(RegularTimePeriod period, Number value, boolean notify)",
      "info" : "MethodDeclaration[21137-21711]:MethodDeclaration[21137-21711]"
    }, {
      "left" : "public void update(RegularTimePeriod period, Number value)",
      "right" : "public void update(RegularTimePeriod period, Number value)",
      "info" : "MethodDeclaration[21719-22565]:MethodDeclaration[21719-22565]"
    }, {
      "left" : "public void update(int index, Number value)",
      "right" : "public void update(int index, Number value)",
      "info" : "MethodDeclaration[22573-22936]:MethodDeclaration[22573-22936]"
    }, {
      "left" : "public TimeSeries addAndOrUpdate(TimeSeries series)",
      "right" : "public TimeSeries addAndOrUpdate(TimeSeries series)",
      "info" : "MethodDeclaration[22944-23798]:MethodDeclaration[22944-23798]"
    }, {
      "left" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          double value)",
      "right" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          double value)",
      "info" : "MethodDeclaration[23806-24449]:MethodDeclaration[23806-24449]"
    }, {
      "left" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          Number value)",
      "right" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period,\r\n                                          Number value)",
      "info" : "MethodDeclaration[24457-26454]:MethodDeclaration[24457-26454]"
    }, {
      "left" : "public void removeAgedItems(boolean notify)",
      "right" : "public void removeAgedItems(boolean notify)",
      "info" : "MethodDeclaration[26462-27464]:MethodDeclaration[26462-27464]"
    }, {
      "left" : "public void removeAgedItems(long latest, boolean notify)",
      "right" : "public void removeAgedItems(long latest, boolean notify)",
      "info" : "MethodDeclaration[27472-29306]:MethodDeclaration[27472-29306]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[29314-29596]:MethodDeclaration[29314-29596]"
    }, {
      "left" : "public void delete(RegularTimePeriod period)",
      "right" : "public void delete(RegularTimePeriod period)",
      "info" : "MethodDeclaration[29604-30164]:MethodDeclaration[29604-30164]"
    }, {
      "left" : "public void delete(int start, int end)",
      "right" : "public void delete(int start, int end)",
      "info" : "MethodDeclaration[30172-30678]:MethodDeclaration[30172-30678]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[30686-31379]:MethodDeclaration[30686-31379]"
    }, {
      "left" : "public TimeSeries createCopy(int start, int end)\r\n        throws CloneNotSupportedException",
      "right" : "public TimeSeries createCopy(int start, int end)\r\n        throws CloneNotSupportedException",
      "info" : "MethodDeclaration[31387-32778]:MethodDeclaration[31387-32778]"
    }, {
      "left" : "public boolean equals(Object object)",
      "right" : "public boolean equals(Object object)",
      "info" : "MethodDeclaration[34750-36110]:MethodDeclaration[34780-36140]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[36118-37346]:MethodDeclaration[36148-37376]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5974-6086]:Block[5974-6086]"
    }, {
      "left" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,\r\n                Day.class);",
      "right" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,\r\n                Day.class);",
      "info" : "ConstructorInvocation[5985-6079]:ConstructorInvocation[5985-6079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6487-6605]:Block[6487-6605]"
    }, {
      "left" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,\r\n                timePeriodClass);",
      "right" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION,\r\n                timePeriodClass);",
      "info" : "ConstructorInvocation[6498-6598]:ConstructorInvocation[6498-6598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7402-7688]:Block[7402-7688]"
    }, {
      "left" : "super(name);",
      "right" : "super(name);",
      "info" : "SuperConstructorInvocation[7413-7425]:SuperConstructorInvocation[7413-7425]"
    }, {
      "left" : "this.domain = domain;",
      "right" : "this.domain = domain;",
      "info" : "ExpressionStatement[7435-7456]:ExpressionStatement[7435-7456]"
    }, {
      "left" : "this.range = range;",
      "right" : "this.range = range;",
      "info" : "ExpressionStatement[7466-7485]:ExpressionStatement[7466-7485]"
    }, {
      "left" : "this.timePeriodClass = timePeriodClass;",
      "right" : "this.timePeriodClass = timePeriodClass;",
      "info" : "ExpressionStatement[7495-7534]:ExpressionStatement[7495-7534]"
    }, {
      "left" : "this.data = new java.util.ArrayList();",
      "right" : "this.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[7544-7582]:ExpressionStatement[7544-7582]"
    }, {
      "left" : "this.maximumItemCount = Integer.MAX_VALUE;",
      "right" : "this.maximumItemCount = Integer.MAX_VALUE;",
      "info" : "ExpressionStatement[7592-7634]:ExpressionStatement[7592-7634]"
    }, {
      "left" : "this.maximumItemAge = Long.MAX_VALUE;",
      "right" : "this.maximumItemAge = Long.MAX_VALUE;",
      "info" : "ExpressionStatement[7644-7681]:ExpressionStatement[7644-7681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7919-7956]:Block[7919-7956]"
    }, {
      "left" : "return this.domain;",
      "right" : "return this.domain;",
      "info" : "ReturnStatement[7930-7949]:ReturnStatement[7930-7949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8350-8486]:Block[8350-8486]"
    }, {
      "left" : "String old = this.domain;",
      "right" : "String old = this.domain;",
      "info" : "VariableDeclarationStatement[8361-8386]:VariableDeclarationStatement[8361-8386]"
    }, {
      "left" : "this.domain = description;",
      "right" : "this.domain = description;",
      "info" : "ExpressionStatement[8396-8422]:ExpressionStatement[8396-8422]"
    }, {
      "left" : "firePropertyChange(\"Domain\", old, description);",
      "right" : "firePropertyChange(\"Domain\", old, description);",
      "info" : "ExpressionStatement[8432-8479]:ExpressionStatement[8432-8479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8713-8749]:Block[8713-8749]"
    }, {
      "left" : "return this.range;",
      "right" : "return this.range;",
      "info" : "ReturnStatement[8724-8742]:ReturnStatement[8724-8742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9115-9248]:Block[9115-9248]"
    }, {
      "left" : "String old = this.range;",
      "right" : "String old = this.range;",
      "info" : "VariableDeclarationStatement[9126-9150]:VariableDeclarationStatement[9126-9150]"
    }, {
      "left" : "this.range = description;",
      "right" : "this.range = description;",
      "info" : "ExpressionStatement[9160-9185]:ExpressionStatement[9160-9185]"
    }, {
      "left" : "firePropertyChange(\"Range\", old, description);",
      "right" : "firePropertyChange(\"Range\", old, description);",
      "info" : "ExpressionStatement[9195-9241]:ExpressionStatement[9195-9241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9391-9433]:Block[9391-9433]"
    }, {
      "left" : "return this.data.size();",
      "right" : "return this.data.size();",
      "info" : "ReturnStatement[9402-9426]:ReturnStatement[9402-9426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9668-9733]:Block[9668-9733]"
    }, {
      "left" : "return Collections.unmodifiableList(this.data);",
      "right" : "return Collections.unmodifiableList(this.data);",
      "info" : "ReturnStatement[9679-9726]:ReturnStatement[9679-9726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10029-10076]:Block[10029-10076]"
    }, {
      "left" : "return this.maximumItemCount;",
      "right" : "return this.maximumItemCount;",
      "info" : "ReturnStatement[10040-10069]:ReturnStatement[10040-10069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10581-10878]:Block[10581-10878]"
    }, {
      "left" : "if (maximum < 0)",
      "right" : "if (maximum < 0)",
      "info" : "IfStatement[10592-10702]:IfStatement[10592-10702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10609-10702]:Block[10609-10702]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Negative 'maximum' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Negative 'maximum' argument.\");",
      "info" : "ThrowStatement[10624-10691]:ThrowStatement[10624-10691]"
    }, {
      "left" : "this.maximumItemCount = maximum;",
      "right" : "this.maximumItemCount = maximum;",
      "info" : "ExpressionStatement[10712-10744]:ExpressionStatement[10712-10744]"
    }, {
      "left" : "int count = this.data.size();",
      "right" : "int count = this.data.size();",
      "info" : "VariableDeclarationStatement[10754-10783]:VariableDeclarationStatement[10754-10783]"
    }, {
      "left" : "if (count > maximum)",
      "right" : "if (count > maximum)",
      "info" : "IfStatement[10793-10871]:IfStatement[10793-10871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10814-10871]:Block[10814-10871]"
    }, {
      "left" : "delete(0, count - maximum - 1);",
      "right" : "delete(0, count - maximum - 1);",
      "info" : "ExpressionStatement[10829-10860]:ExpressionStatement[10829-10860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11099-11144]:Block[11099-11144]"
    }, {
      "left" : "return this.maximumItemAge;",
      "right" : "return this.maximumItemAge;",
      "info" : "ReturnStatement[11110-11137]:ReturnStatement[11110-11137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11740-11985]:Block[11740-11985]"
    }, {
      "left" : "if (periods < 0)",
      "right" : "if (periods < 0)",
      "info" : "IfStatement[11751-11861]:IfStatement[11751-11861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11768-11861]:Block[11768-11861]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Negative 'periods' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Negative 'periods' argument.\");",
      "info" : "ThrowStatement[11783-11850]:ThrowStatement[11783-11850]"
    }, {
      "left" : "this.maximumItemAge = periods;",
      "right" : "this.maximumItemAge = periods;",
      "info" : "ExpressionStatement[11871-11901]:ExpressionStatement[11871-11901]"
    }, {
      "left" : "removeAgedItems(true);",
      "right" : "removeAgedItems(true);",
      "info" : "ExpressionStatement[11911-11933]:ExpressionStatement[11911-11933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12429-12475]:Block[12429-12475]"
    }, {
      "left" : "return this.timePeriodClass;",
      "right" : "return this.timePeriodClass;",
      "info" : "ReturnStatement[12440-12468]:ReturnStatement[12440-12468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12745-12812]:Block[12745-12812]"
    }, {
      "left" : "return (TimeSeriesDataItem) this.data.get(index);",
      "right" : "return (TimeSeriesDataItem) this.data.get(index);",
      "info" : "ReturnStatement[12756-12805]:ReturnStatement[12756-12805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13210-13411]:Block[13210-13411]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[13221-13250]:VariableDeclarationStatement[13221-13250]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[13260-13404]:IfStatement[13260-13404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13276-13351]:Block[13276-13351]"
    }, {
      "left" : "return (TimeSeriesDataItem) this.data.get(index);",
      "right" : "return (TimeSeriesDataItem) this.data.get(index);",
      "info" : "ReturnStatement[13291-13340]:ReturnStatement[13291-13340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13366-13404]:Block[13366-13404]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13381-13393]:ReturnStatement[13381-13393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13642-13698]:Block[13642-13698]"
    }, {
      "left" : "return getDataItem(index).getPeriod();",
      "right" : "return getDataItem(index).getPeriod();",
      "info" : "ReturnStatement[13653-13691]:ReturnStatement[13653-13691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13919-14025]:Block[13919-14025]"
    }, {
      "left" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "right" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "info" : "VariableDeclarationStatement[13930-13989]:VariableDeclarationStatement[13930-13989]"
    }, {
      "left" : "return last.next();",
      "right" : "return last.next();",
      "info" : "ReturnStatement[13999-14018]:ReturnStatement[13999-14018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14221-14415]:Block[14221-14415]"
    }, {
      "left" : "Collection result = new java.util.ArrayList();",
      "right" : "Collection result = new java.util.ArrayList();",
      "info" : "VariableDeclarationStatement[14232-14278]:VariableDeclarationStatement[14232-14278]"
    }, {
      "left" : "for (int i = 0; i < getItemCount(); i++)",
      "right" : "for (int i = 0; i < getItemCount(); i++)",
      "info" : "ForStatement[14288-14384]:ForStatement[14288-14384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14329-14384]:Block[14329-14384]"
    }, {
      "left" : "result.add(getTimePeriod(i));",
      "right" : "result.add(getTimePeriod(i));",
      "info" : "ExpressionStatement[14344-14373]:ExpressionStatement[14344-14373]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[14394-14408]:ReturnStatement[14394-14408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14778-15130]:Block[14778-15130]"
    }, {
      "left" : "Collection result = new java.util.ArrayList();",
      "right" : "Collection result = new java.util.ArrayList();",
      "info" : "VariableDeclarationStatement[14791-14837]:VariableDeclarationStatement[14791-14837]"
    }, {
      "left" : "for (int i = 0; i < series.getItemCount(); i++)",
      "right" : "for (int i = 0; i < series.getItemCount(); i++)",
      "info" : "ForStatement[14847-15097]:ForStatement[14847-15097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14895-15097]:Block[14895-15097]"
    }, {
      "left" : "RegularTimePeriod period = series.getTimePeriod(i);",
      "right" : "RegularTimePeriod period = series.getTimePeriod(i);",
      "info" : "VariableDeclarationStatement[14910-14961]:VariableDeclarationStatement[14910-14961]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[14975-15004]:VariableDeclarationStatement[14975-15004]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[15018-15086]:IfStatement[15018-15086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15033-15086]:Block[15033-15086]"
    }, {
      "left" : "result.add(period);",
      "right" : "result.add(period);",
      "info" : "ExpressionStatement[15052-15071]:ExpressionStatement[15052-15071]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[15107-15121]:ReturnStatement[15107-15121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15410-15699]:Block[15410-15699]"
    }, {
      "left" : "if (period == null)",
      "right" : "if (period == null)",
      "info" : "IfStatement[15421-15529]:IfStatement[15421-15529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15441-15529]:Block[15441-15529]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "info" : "ThrowStatement[15456-15518]:ThrowStatement[15456-15518]"
    }, {
      "left" : "TimeSeriesDataItem dummy = new TimeSeriesDataItem(\r\n              period, Integer.MIN_VALUE);",
      "right" : "TimeSeriesDataItem dummy = new TimeSeriesDataItem(\r\n              period, Integer.MIN_VALUE);",
      "info" : "VariableDeclarationStatement[15539-15632]:VariableDeclarationStatement[15539-15632]"
    }, {
      "left" : "return Collections.binarySearch(this.data, dummy);",
      "right" : "return Collections.binarySearch(this.data, dummy);",
      "info" : "ReturnStatement[15642-15692]:ReturnStatement[15642-15692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15921-15976]:Block[15921-15976]"
    }, {
      "left" : "return getDataItem(index).getValue();",
      "right" : "return getDataItem(index).getValue();",
      "info" : "ReturnStatement[15932-15969]:ReturnStatement[15932-15969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16342-16521]:Block[16342-16521]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[16355-16384]:VariableDeclarationStatement[16355-16384]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[16394-16512]:IfStatement[16394-16512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16410-16459]:Block[16410-16459]"
    }, {
      "left" : "return getValue(index);",
      "right" : "return getValue(index);",
      "info" : "ReturnStatement[16425-16448]:ReturnStatement[16425-16448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16474-16512]:Block[16474-16512]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16489-16501]:ReturnStatement[16489-16501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16847-16881]:Block[16847-16881]"
    }, {
      "left" : "add(item, true);",
      "right" : "add(item, true);",
      "info" : "ExpressionStatement[16858-16874]:ExpressionStatement[16858-16874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17264-19753]:Block[17264-19753]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[17275-17379]:IfStatement[17275-17379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17293-17379]:Block[17293-17379]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'item' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'item' argument.\");",
      "info" : "ThrowStatement[17308-17368]:ThrowStatement[17308-17368]"
    }, {
      "left" : "if (!item.getPeriod().getClass().equals(this.timePeriodClass))",
      "right" : "if (!item.getPeriod().getClass().equals(this.timePeriodClass))",
      "info" : "IfStatement[17389-17901]:IfStatement[17389-17901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17452-17901]:Block[17452-17901]"
    }, {
      "left" : "StringBuffer b = new StringBuffer();",
      "right" : "StringBuffer b = new StringBuffer();",
      "info" : "VariableDeclarationStatement[17467-17503]:VariableDeclarationStatement[17467-17503]"
    }, {
      "left" : "b.append(\"You are trying to add data where the time period class \");",
      "right" : "b.append(\"You are trying to add data where the time period class \");",
      "info" : "ExpressionStatement[17517-17585]:ExpressionStatement[17517-17585]"
    }, {
      "left" : "b.append(\"is \");",
      "right" : "b.append(\"is \");",
      "info" : "ExpressionStatement[17599-17615]:ExpressionStatement[17599-17615]"
    }, {
      "left" : "b.append(item.getPeriod().getClass().getName());",
      "right" : "b.append(item.getPeriod().getClass().getName());",
      "info" : "ExpressionStatement[17629-17677]:ExpressionStatement[17629-17677]"
    }, {
      "left" : "b.append(\", but the TimeSeries is expecting an instance of \");",
      "right" : "b.append(\", but the TimeSeries is expecting an instance of \");",
      "info" : "ExpressionStatement[17691-17753]:ExpressionStatement[17691-17753]"
    }, {
      "left" : "b.append(this.timePeriodClass.getName());",
      "right" : "b.append(this.timePeriodClass.getName());",
      "info" : "ExpressionStatement[17767-17808]:ExpressionStatement[17767-17808]"
    }, {
      "left" : "b.append(\".\");",
      "right" : "b.append(\".\");",
      "info" : "ExpressionStatement[17822-17836]:ExpressionStatement[17822-17836]"
    }, {
      "left" : "throw new SeriesException(b.toString());",
      "right" : "throw new SeriesException(b.toString());",
      "info" : "ThrowStatement[17850-17890]:ThrowStatement[17850-17890]"
    }, {
      "left" : "boolean added = false;",
      "right" : "boolean added = false;",
      "info" : "VariableDeclarationStatement[17982-18004]:VariableDeclarationStatement[17982-18004]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[18014-18041]:VariableDeclarationStatement[18014-18041]"
    }, {
      "left" : "if (count == 0)",
      "right" : "if (count == 0)",
      "info" : "IfStatement[18051-19225]:IfStatement[18051-19225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18067-18140]:Block[18067-18140]"
    }, {
      "left" : "this.data.add(item);",
      "right" : "this.data.add(item);",
      "info" : "ExpressionStatement[18082-18102]:ExpressionStatement[18082-18102]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[18116-18129]:ExpressionStatement[18116-18129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18155-19225]:Block[18155-19225]"
    }, {
      "left" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "right" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "info" : "VariableDeclarationStatement[18170-18229]:VariableDeclarationStatement[18170-18229]"
    }, {
      "left" : "if (item.getPeriod().compareTo(last) > 0)",
      "right" : "if (item.getPeriod().compareTo(last) > 0)",
      "info" : "IfStatement[18243-19214]:IfStatement[18243-19214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18285-18370]:Block[18285-18370]"
    }, {
      "left" : "this.data.add(item);",
      "right" : "this.data.add(item);",
      "info" : "ExpressionStatement[18304-18324]:ExpressionStatement[18304-18324]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[18342-18355]:ExpressionStatement[18342-18355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18389-19214]:Block[18389-19214]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, item);",
      "right" : "int index = Collections.binarySearch(this.data, item);",
      "info" : "VariableDeclarationStatement[18408-18462]:VariableDeclarationStatement[18408-18462]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[18480-19199]:IfStatement[18480-19199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18495-18604]:Block[18495-18604]"
    }, {
      "left" : "this.data.add(-index - 1, item);",
      "right" : "this.data.add(-index - 1, item);",
      "info" : "ExpressionStatement[18518-18550]:ExpressionStatement[18518-18550]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[18572-18585]:ExpressionStatement[18572-18585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18627-19199]:Block[18627-19199]"
    }, {
      "left" : "StringBuffer b = new StringBuffer();",
      "right" : "StringBuffer b = new StringBuffer();",
      "info" : "VariableDeclarationStatement[18650-18686]:VariableDeclarationStatement[18650-18686]"
    }, {
      "left" : "b.append(\"You are attempting to add an observation for \");",
      "right" : "b.append(\"You are attempting to add an observation for \");",
      "info" : "ExpressionStatement[18708-18766]:ExpressionStatement[18708-18766]"
    }, {
      "left" : "b.append(\"the time period \");",
      "right" : "b.append(\"the time period \");",
      "info" : "ExpressionStatement[18788-18817]:ExpressionStatement[18788-18817]"
    }, {
      "left" : "b.append(item.getPeriod().toString());",
      "right" : "b.append(item.getPeriod().toString());",
      "info" : "ExpressionStatement[18839-18877]:ExpressionStatement[18839-18877]"
    }, {
      "left" : "b.append(\" but the series already contains an observation\");",
      "right" : "b.append(\" but the series already contains an observation\");",
      "info" : "ExpressionStatement[18899-18959]:ExpressionStatement[18899-18959]"
    }, {
      "left" : "b.append(\" for that time period. Duplicates are not \");",
      "right" : "b.append(\" for that time period. Duplicates are not \");",
      "info" : "ExpressionStatement[18981-19036]:ExpressionStatement[18981-19036]"
    }, {
      "left" : "b.append(\"permitted.  Try using the addOrUpdate() method.\");",
      "right" : "b.append(\"permitted.  Try using the addOrUpdate() method.\");",
      "info" : "ExpressionStatement[19058-19118]:ExpressionStatement[19058-19118]"
    }, {
      "left" : "throw new SeriesException(b.toString());",
      "right" : "throw new SeriesException(b.toString());",
      "info" : "ThrowStatement[19140-19180]:ThrowStatement[19140-19180]"
    }, {
      "left" : "if (added)",
      "right" : "if (added)",
      "info" : "IfStatement[19235-19744]:IfStatement[19235-19744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19246-19744]:Block[19246-19744]"
    }, {
      "left" : "if (getItemCount() > this.maximumItemCount)",
      "right" : "if (getItemCount() > this.maximumItemCount)",
      "info" : "IfStatement[19338-19436]:IfStatement[19338-19436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19382-19436]:Block[19382-19436]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[19401-19421]:ExpressionStatement[19401-19421]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[19452-19475]:ExpressionStatement[19452-19475]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[19667-19733]:IfStatement[19667-19733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19679-19733]:Block[19679-19733]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[19698-19718]:ExpressionStatement[19698-19718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20068-20150]:Block[20068-20150]"
    }, {
      "left" : "add(period, value, true);",
      "right" : "add(period, value, true);",
      "info" : "ExpressionStatement[20118-20143]:ExpressionStatement[20118-20143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20522-20671]:Block[20522-20671]"
    }, {
      "left" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[20572-20636]:VariableDeclarationStatement[20572-20636]"
    }, {
      "left" : "add(item, notify);",
      "right" : "add(item, notify);",
      "info" : "ExpressionStatement[20646-20664]:ExpressionStatement[20646-20664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21047-21129]:Block[21047-21129]"
    }, {
      "left" : "add(period, value, true);",
      "right" : "add(period, value, true);",
      "info" : "ExpressionStatement[21097-21122]:ExpressionStatement[21097-21122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21562-21711]:Block[21562-21711]"
    }, {
      "left" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[21612-21676]:VariableDeclarationStatement[21612-21676]"
    }, {
      "left" : "add(item, notify);",
      "right" : "add(item, notify);",
      "info" : "ExpressionStatement[21686-21704]:ExpressionStatement[21686-21704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22063-22565]:Block[22063-22565]"
    }, {
      "left" : "TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[22074-22138]:VariableDeclarationStatement[22074-22138]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, temp);",
      "right" : "int index = Collections.binarySearch(this.data, temp);",
      "info" : "VariableDeclarationStatement[22148-22202]:VariableDeclarationStatement[22148-22202]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[22212-22556]:IfStatement[22212-22556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22228-22391]:Block[22228-22391]"
    }, {
      "left" : "TimeSeriesDataItem pair = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem pair = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[22243-22311]:VariableDeclarationStatement[22243-22311]"
    }, {
      "left" : "pair.setValue(value);",
      "right" : "pair.setValue(value);",
      "info" : "ExpressionStatement[22325-22346]:ExpressionStatement[22325-22346]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[22360-22380]:ExpressionStatement[22360-22380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22406-22556]:Block[22406-22556]"
    }, {
      "left" : "throw new SeriesException(\r\n                \"TimeSeries.update(TimePeriod, Number):  period does not exist.\"\r\n            );",
      "right" : "throw new SeriesException(\r\n                \"TimeSeries.update(TimePeriod, Number):  period does not exist.\"\r\n            );",
      "info" : "ThrowStatement[22421-22545]:ThrowStatement[22421-22545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22812-22936]:Block[22812-22936]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(index);",
      "right" : "TimeSeriesDataItem item = getDataItem(index);",
      "info" : "VariableDeclarationStatement[22823-22868]:VariableDeclarationStatement[22823-22868]"
    }, {
      "left" : "item.setValue(value);",
      "right" : "item.setValue(value);",
      "info" : "ExpressionStatement[22878-22899]:ExpressionStatement[22878-22899]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[22909-22929]:ExpressionStatement[22909-22929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23288-23798]:Block[23288-23798]"
    }, {
      "left" : "TimeSeries overwritten = new TimeSeries(\"Overwritten values from: \"\r\n                + getKey(), series.getTimePeriodClass());",
      "right" : "TimeSeries overwritten = new TimeSeries(\"Overwritten values from: \"\r\n                + getKey(), series.getTimePeriodClass());",
      "info" : "VariableDeclarationStatement[23299-23425]:VariableDeclarationStatement[23299-23425]"
    }, {
      "left" : "for (int i = 0; i < series.getItemCount(); i++)",
      "right" : "for (int i = 0; i < series.getItemCount(); i++)",
      "info" : "ForStatement[23435-23762]:ForStatement[23435-23762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23483-23762]:Block[23483-23762]"
    }, {
      "left" : "TimeSeriesDataItem item = series.getDataItem(i);",
      "right" : "TimeSeriesDataItem item = series.getDataItem(i);",
      "info" : "VariableDeclarationStatement[23498-23546]:VariableDeclarationStatement[23498-23546]"
    }, {
      "left" : "TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(),\r\n                    item.getValue());",
      "right" : "TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(),\r\n                    item.getValue());",
      "info" : "VariableDeclarationStatement[23560-23657]:VariableDeclarationStatement[23560-23657]"
    }, {
      "left" : "if (oldItem != null)",
      "right" : "if (oldItem != null)",
      "info" : "IfStatement[23671-23751]:IfStatement[23671-23751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23692-23751]:Block[23692-23751]"
    }, {
      "left" : "overwritten.add(oldItem);",
      "right" : "overwritten.add(oldItem);",
      "info" : "ExpressionStatement[23711-23736]:ExpressionStatement[23711-23736]"
    }, {
      "left" : "return overwritten;",
      "right" : "return overwritten;",
      "info" : "ReturnStatement[23772-23791]:ReturnStatement[23772-23791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24385-24449]:Block[24385-24449]"
    }, {
      "left" : "return addOrUpdate(period, new Double(value));",
      "right" : "return addOrUpdate(period, new Double(value));",
      "info" : "ReturnStatement[24396-24442]:ReturnStatement[24396-24442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25066-26454]:Block[25066-26454]"
    }, {
      "left" : "if (period == null)",
      "right" : "if (period == null)",
      "info" : "IfStatement[25079-25187]:IfStatement[25079-25187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25099-25187]:Block[25099-25187]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "info" : "ThrowStatement[25114-25176]:ThrowStatement[25114-25176]"
    }, {
      "left" : "TimeSeriesDataItem overwritten = null;",
      "right" : "TimeSeriesDataItem overwritten = null;",
      "info" : "VariableDeclarationStatement[25197-25235]:VariableDeclarationStatement[25197-25235]"
    }, {
      "left" : "TimeSeriesDataItem key = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem key = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[25247-25310]:VariableDeclarationStatement[25247-25310]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, key);",
      "right" : "int index = Collections.binarySearch(this.data, key);",
      "info" : "VariableDeclarationStatement[25320-25373]:VariableDeclarationStatement[25320-25373]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[25383-26416]:IfStatement[25383-26416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25399-25868]:Block[25399-25868]"
    }, {
      "left" : "TimeSeriesDataItem existing\r\n                = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem existing\r\n                = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[25414-25503]:VariableDeclarationStatement[25414-25503]"
    }, {
      "left" : "overwritten = (TimeSeriesDataItem) existing.clone();",
      "right" : "overwritten = (TimeSeriesDataItem) existing.clone();",
      "info" : "ExpressionStatement[25517-25569]:ExpressionStatement[25517-25569]"
    }, {
      "left" : "existing.setValue(value);",
      "right" : "existing.setValue(value);",
      "info" : "ExpressionStatement[25583-25608]:ExpressionStatement[25583-25608]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[25622-25645]:ExpressionStatement[25622-25645]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[25837-25857]:ExpressionStatement[25837-25857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25883-26416]:Block[25883-26416]"
    }, {
      "left" : "this.data.add(-index - 1, new TimeSeriesDataItem(period, value));",
      "right" : "this.data.add(-index - 1, new TimeSeriesDataItem(period, value));",
      "info" : "ExpressionStatement[25898-25963]:ExpressionStatement[25898-25963]"
    }, {
      "left" : "if (getItemCount() > this.maximumItemCount)",
      "right" : "if (getItemCount() > this.maximumItemCount)",
      "info" : "IfStatement[26056-26154]:IfStatement[26056-26154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26100-26154]:Block[26100-26154]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[26119-26139]:ExpressionStatement[26119-26139]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[26170-26193]:ExpressionStatement[26170-26193]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[26385-26405]:ExpressionStatement[26385-26405]"
    }, {
      "left" : "return overwritten;",
      "right" : "return overwritten;",
      "info" : "ReturnStatement[26426-26445]:ReturnStatement[26426-26445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26904-27464]:Block[26904-27464]"
    }, {
      "left" : "if (getItemCount() > 1)",
      "right" : "if (getItemCount() > 1)",
      "info" : "IfStatement[27016-27457]:IfStatement[27016-27457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27040-27457]:Block[27040-27457]"
    }, {
      "left" : "long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();",
      "right" : "long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();",
      "info" : "VariableDeclarationStatement[27055-27120]:VariableDeclarationStatement[27055-27120]"
    }, {
      "left" : "boolean removed = false;",
      "right" : "boolean removed = false;",
      "info" : "VariableDeclarationStatement[27134-27158]:VariableDeclarationStatement[27134-27158]"
    }, {
      "left" : "while ((latest - getTimePeriod(0).getSerialIndex())\r\n                    > this.maximumItemAge)",
      "right" : "while ((latest - getTimePeriod(0).getSerialIndex())\r\n                    > this.maximumItemAge)",
      "info" : "WhileStatement[27172-27355]:WhileStatement[27172-27355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27268-27355]:Block[27268-27355]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[27287-27307]:ExpressionStatement[27287-27307]"
    }, {
      "left" : "removed = true;",
      "right" : "removed = true;",
      "info" : "ExpressionStatement[27325-27340]:ExpressionStatement[27325-27340]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[27369-27446]:IfStatement[27369-27446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27392-27446]:Block[27392-27446]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[27411-27431]:ExpressionStatement[27411-27431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28029-29306]:Block[28029-29306]"
    }, {
      "left" : "long index = Long.MAX_VALUE;",
      "right" : "long index = Long.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[28112-28140]:VariableDeclarationStatement[28112-28140]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28150-28885]:TryStatement[28150-28885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28154-28616]:Block[28154-28616]"
    }, {
      "left" : "Method m = RegularTimePeriod.class.getDeclaredMethod(\r\n                    \"createInstance\", new Class[] {Class.class, Date.class,\r\n                    TimeZone.class});",
      "right" : "Method m = RegularTimePeriod.class.getDeclaredMethod(\r\n                    \"createInstance\", new Class[] {Class.class, Date.class,\r\n                    TimeZone.class});",
      "info" : "VariableDeclarationStatement[28169-28338]:VariableDeclarationStatement[28169-28338]"
    }, {
      "left" : "RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\r\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\r\n                            new Date(latest), TimeZone.getDefault()});",
      "right" : "RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\r\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\r\n                            new Date(latest), TimeZone.getDefault()});",
      "info" : "VariableDeclarationStatement[28352-28559]:VariableDeclarationStatement[28352-28559]"
    }, {
      "left" : "index = newest.getSerialIndex();",
      "right" : "index = newest.getSerialIndex();",
      "info" : "ExpressionStatement[28573-28605]:ExpressionStatement[28573-28605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28658-28704]:Block[28658-28704]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[28673-28693]:ExpressionStatement[28673-28693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28747-28793]:Block[28747-28793]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[28762-28782]:ExpressionStatement[28762-28782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28839-28885]:Block[28839-28885]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[28854-28874]:ExpressionStatement[28854-28874]"
    }, {
      "left" : "boolean removed = false;",
      "right" : "boolean removed = false;",
      "info" : "VariableDeclarationStatement[28998-29022]:VariableDeclarationStatement[28998-29022]"
    }, {
      "left" : "while (getItemCount() > 0 && (index\r\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge)",
      "right" : "while (getItemCount() > 0 && (index\r\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge)",
      "info" : "WhileStatement[29032-29220]:WhileStatement[29032-29220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29145-29220]:Block[29145-29220]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[29160-29180]:ExpressionStatement[29160-29180]"
    }, {
      "left" : "removed = true;",
      "right" : "removed = true;",
      "info" : "ExpressionStatement[29194-29209]:ExpressionStatement[29194-29209]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[29230-29299]:IfStatement[29230-29299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29253-29299]:Block[29253-29299]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[29268-29288]:ExpressionStatement[29268-29288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29474-29596]:Block[29474-29596]"
    }, {
      "left" : "if (this.data.size() > 0)",
      "right" : "if (this.data.size() > 0)",
      "info" : "IfStatement[29485-29589]:IfStatement[29485-29589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29511-29589]:Block[29511-29589]"
    }, {
      "left" : "this.data.clear();",
      "right" : "this.data.clear();",
      "info" : "ExpressionStatement[29526-29544]:ExpressionStatement[29526-29544]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[29558-29578]:ExpressionStatement[29558-29578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30007-30164]:Block[30007-30164]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[30018-30047]:VariableDeclarationStatement[30018-30047]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[30057-30157]:IfStatement[30057-30157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30073-30157]:Block[30073-30157]"
    }, {
      "left" : "this.data.remove(index);",
      "right" : "this.data.remove(index);",
      "info" : "ExpressionStatement[30088-30112]:ExpressionStatement[30088-30112]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[30126-30146]:ExpressionStatement[30126-30146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30425-30678]:Block[30425-30678]"
    }, {
      "left" : "if (end < start)",
      "right" : "if (end < start)",
      "info" : "IfStatement[30436-30540]:IfStatement[30436-30540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30453-30540]:Block[30453-30540]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "info" : "ThrowStatement[30468-30529]:ThrowStatement[30468-30529]"
    }, {
      "left" : "for (int i = 0; i <= (end - start); i++)",
      "right" : "for (int i = 0; i <= (end - start); i++)",
      "info" : "ForStatement[30550-30641]:ForStatement[30550-30641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30591-30641]:Block[30591-30641]"
    }, {
      "left" : "this.data.remove(start);",
      "right" : "this.data.remove(start);",
      "info" : "ExpressionStatement[30606-30630]:ExpressionStatement[30606-30630]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[30651-30671]:ExpressionStatement[30651-30671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31225-31379]:Block[31225-31379]"
    }, {
      "left" : "TimeSeries clone = (TimeSeries) super.clone();",
      "right" : "TimeSeries clone = (TimeSeries) super.clone();",
      "info" : "VariableDeclarationStatement[31236-31282]:VariableDeclarationStatement[31236-31282]"
    }, {
      "left" : "clone.data = (List) ObjectUtilities.deepClone(this.data);",
      "right" : "clone.data = (List) ObjectUtilities.deepClone(this.data);",
      "info" : "ExpressionStatement[31292-31349]:ExpressionStatement[31292-31349]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[31359-31372]:ReturnStatement[31359-31372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31920-32778]:Block[31920-32778]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[31933-32033]:IfStatement[31933-32033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31948-32033]:Block[31948-32033]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start >= 0.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start >= 0.\");",
      "info" : "ThrowStatement[31963-32022]:ThrowStatement[31963-32022]"
    }, {
      "left" : "if (end < start)",
      "right" : "if (end < start)",
      "info" : "IfStatement[32043-32147]:IfStatement[32043-32147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32060-32147]:Block[32060-32147]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "info" : "ThrowStatement[32075-32136]:ThrowStatement[32075-32136]"
    }, {
      "left" : "TimeSeries copy = (TimeSeries) super.clone();",
      "right" : "TimeSeries copy = (TimeSeries) super.clone();",
      "info" : "VariableDeclarationStatement[32157-32202]:VariableDeclarationStatement[32157-32202]"
    }, {
      "left" : "copy.data = new java.util.ArrayList();",
      "right" : "copy.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[32214-32252]:ExpressionStatement[32214-32252]"
    }, {
      "left" : "if (this.data.size() > 0)",
      "right" : "if (this.data.size() > 0)",
      "info" : "IfStatement[32262-32749]:IfStatement[32262-32749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32288-32749]:Block[32288-32749]"
    }, {
      "left" : "for (int index = start; index <= end; index++)",
      "right" : "for (int index = start; index <= end; index++)",
      "info" : "ForStatement[32303-32738]:ForStatement[32303-32738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32350-32738]:Block[32350-32738]"
    }, {
      "left" : "TimeSeriesDataItem item\r\n                    = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem item\r\n                    = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[32369-32458]:VariableDeclarationStatement[32369-32458]"
    }, {
      "left" : "TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();",
      "right" : "TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();",
      "info" : "VariableDeclarationStatement[32476-32537]:VariableDeclarationStatement[32476-32537]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32555-32723]:TryStatement[32555-32723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32559-32617]:Block[32559-32617]"
    }, {
      "left" : "copy.add(clone);",
      "right" : "copy.add(clone);",
      "info" : "ExpressionStatement[32582-32598]:ExpressionStatement[32582-32598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32661-32723]:Block[32661-32723]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[32684-32704]:ExpressionStatement[32684-32704]"
    }, {
      "left" : "return copy;",
      "right" : "return copy;",
      "info" : "ReturnStatement[32759-32771]:ReturnStatement[32759-32771]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34993-36110]:Block[35023-36140]"
    }, {
      "left" : "if (object == this)",
      "right" : "if (object == this)",
      "info" : "IfStatement[35004-35062]:IfStatement[35034-35092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35024-35062]:Block[35054-35092]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35039-35051]:ReturnStatement[35069-35081]"
    }, {
      "left" : "if (!(object instanceof TimeSeries) || !super.equals(object))",
      "right" : "if (!(object instanceof TimeSeries) || !super.equals(object))",
      "info" : "IfStatement[35072-35173]:IfStatement[35102-35203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35134-35173]:Block[35164-35203]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35149-35162]:ReturnStatement[35179-35192]"
    }, {
      "left" : "TimeSeries s = (TimeSeries) object;",
      "right" : "TimeSeries s = (TimeSeries) object;",
      "info" : "VariableDeclarationStatement[35183-35218]:VariableDeclarationStatement[35213-35248]"
    }, {
      "left" : "if (!ObjectUtilities.equal(getDomainDescription(),\r\n                s.getDomainDescription()))",
      "right" : "if (!ObjectUtilities.equal(getDomainDescription(),\r\n                s.getDomainDescription()))",
      "info" : "IfStatement[35228-35362]:IfStatement[35258-35392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35323-35362]:Block[35353-35392]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35338-35351]:ReturnStatement[35368-35381]"
    }, {
      "left" : "if (!ObjectUtilities.equal(getRangeDescription(),\r\n                s.getRangeDescription()))",
      "right" : "if (!ObjectUtilities.equal(getRangeDescription(),\r\n                s.getRangeDescription()))",
      "info" : "IfStatement[35374-35506]:IfStatement[35404-35536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35467-35506]:Block[35497-35536]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35482-35495]:ReturnStatement[35512-35525]"
    }, {
      "left" : "if (!getClass().equals(s.getClass()))",
      "right" : "if (!getClass().equals(s.getClass()))",
      "info" : "IfStatement[35518-35595]:IfStatement[35548-35625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35556-35595]:Block[35586-35625]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35571-35584]:ReturnStatement[35601-35614]"
    }, {
      "left" : "if (getMaximumItemAge() != s.getMaximumItemAge())",
      "right" : "if (getMaximumItemAge() != s.getMaximumItemAge())",
      "info" : "IfStatement[35607-35696]:IfStatement[35637-35726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35657-35696]:Block[35687-35726]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35672-35685]:ReturnStatement[35702-35715]"
    }, {
      "left" : "if (getMaximumItemCount() != s.getMaximumItemCount())",
      "right" : "if (getMaximumItemCount() != s.getMaximumItemCount())",
      "info" : "IfStatement[35708-35801]:IfStatement[35738-35831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35762-35801]:Block[35792-35831]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35777-35790]:ReturnStatement[35807-35820]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[35813-35840]:VariableDeclarationStatement[35843-35870]"
    }, {
      "left" : "if (count != s.getItemCount())",
      "right" : "if (count != s.getItemCount())",
      "info" : "IfStatement[35850-35920]:IfStatement[35880-35950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35881-35920]:Block[35911-35950]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35896-35909]:ReturnStatement[35926-35939]"
    }, {
      "left" : "for (int i = 0; i < count; i++)",
      "right" : "for (int i = 0; i < count; i++)",
      "info" : "ForStatement[35930-36081]:ForStatement[35960-36111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35962-36081]:Block[35992-36111]"
    }, {
      "left" : "if (!getDataItem(i).equals(s.getDataItem(i)))",
      "right" : "if (!getDataItem(i).equals(s.getDataItem(i)))",
      "info" : "IfStatement[35977-36070]:IfStatement[36007-36100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36023-36070]:Block[36053-36100]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[36042-36055]:ReturnStatement[36072-36085]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[36091-36103]:ReturnStatement[36121-36133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36245-37346]:Block[36275-37376]"
    }, {
      "left" : "int result = super.hashCode();",
      "right" : "int result = super.hashCode();",
      "info" : "VariableDeclarationStatement[36256-36286]:VariableDeclarationStatement[36286-36316]"
    }, {
      "left" : "result = 29 * result + (this.domain != null ? this.domain.hashCode()\r\n                : 0);",
      "right" : "result = 29 * result + (this.domain != null ? this.domain.hashCode()\r\n                : 0);",
      "info" : "ExpressionStatement[36296-36387]:ExpressionStatement[36326-36417]"
    }, {
      "left" : "result = 29 * result + (this.range != null ? this.range.hashCode() : 0);",
      "right" : "result = 29 * result + (this.range != null ? this.range.hashCode() : 0);",
      "info" : "ExpressionStatement[36397-36469]:ExpressionStatement[36427-36499]"
    }, {
      "left" : "result = 29 * result + (this.timePeriodClass != null\r\n                ? this.timePeriodClass.hashCode() : 0);",
      "right" : "result = 29 * result + (this.timePeriodClass != null\r\n                ? this.timePeriodClass.hashCode() : 0);",
      "info" : "ExpressionStatement[36479-36588]:ExpressionStatement[36509-36618]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[36723-36750]:VariableDeclarationStatement[36753-36780]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[36760-36895]:IfStatement[36790-36925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36775-36895]:Block[36805-36925]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(0);",
      "right" : "TimeSeriesDataItem item = getDataItem(0);",
      "info" : "VariableDeclarationStatement[36790-36831]:VariableDeclarationStatement[36820-36861]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[36845-36884]:ExpressionStatement[36875-36914]"
    }, {
      "left" : "if (count > 1)",
      "right" : "if (count > 1)",
      "info" : "IfStatement[36905-37048]:IfStatement[36935-37078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36920-37048]:Block[36950-37078]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(count - 1);",
      "right" : "TimeSeriesDataItem item = getDataItem(count - 1);",
      "info" : "VariableDeclarationStatement[36935-36984]:VariableDeclarationStatement[36965-37014]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[36998-37037]:ExpressionStatement[37028-37067]"
    }, {
      "left" : "if (count > 2)",
      "right" : "if (count > 2)",
      "info" : "IfStatement[37058-37201]:IfStatement[37088-37231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37073-37201]:Block[37103-37231]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(count / 2);",
      "right" : "TimeSeriesDataItem item = getDataItem(count / 2);",
      "info" : "VariableDeclarationStatement[37088-37137]:VariableDeclarationStatement[37118-37167]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[37151-37190]:ExpressionStatement[37181-37220]"
    }, {
      "left" : "result = 29 * result + this.maximumItemCount;",
      "right" : "result = 29 * result + this.maximumItemCount;",
      "info" : "ExpressionStatement[37211-37256]:ExpressionStatement[37241-37286]"
    }, {
      "left" : "result = 29 * result + (int) this.maximumItemAge;",
      "right" : "result = 29 * result + (int) this.maximumItemAge;",
      "info" : "ExpressionStatement[37266-37315]:ExpressionStatement[37296-37345]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[37325-37339]:ReturnStatement[37355-37369]"
    } ]
  },
  "interFileMappings" : { }
}