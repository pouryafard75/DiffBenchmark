{
  "matchedElements" : [
 {
    "left" : "class : SoundexUtils",
    "right" : "class : SoundexUtils",
    "info" : "TypeDeclaration[948-4235]:TypeDeclaration[948-4259]"
  }, {
    "left" : "package clean(str ) : ",
    "right" : "package clean(str ) : ",
    "info" : "MethodDeclaration[1136-1875]:MethodDeclaration[1136-1899]"
  }, {
    "left" : "package difference(encoder , s1 , s2 ) : int",
    "right" : "package difference(encoder , s1 , s2 ) : int",
    "info" : "MethodDeclaration[1881-3089]:MethodDeclaration[1905-3113]"
  }, {
    "left" : "package differenceEncoded(es1 , es2 ) : int",
    "right" : "package differenceEncoded(es1 , es2 ) : int",
    "info" : "MethodDeclaration[3095-4232]:MethodDeclaration[3119-4256]"
  } ],
  "mappings" : [
 {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[1104-1109]:Modifier[1104-1109]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1110-1115]:TYPE_DECLARATION_KIND[1110-1115]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1338-1344]:Modifier[1338-1344]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[1345-1351]:SimpleType[1345-1351]"
  }, {
    "left" : "clean",
    "right" : "clean",
    "info" : "SimpleName[1352-1357]:SimpleName[1352-1357]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[1358-1368]:SingleVariableDeclaration[1358-1368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1370-1875]:Block[1370-1899]"
  }, {
    "left" : "if (str == null || str.length() == 0)",
    "right" : "if (str == null || str.length() == 0)",
    "info" : "IfStatement[1380-1453]:IfStatement[1380-1453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1418-1453]:Block[1418-1453]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[1432-1443]:ReturnStatement[1432-1443]"
  }, {
    "left" : "int len = str.length();",
    "right" : "int len = str.length();",
    "info" : "VariableDeclarationStatement[1462-1485]:VariableDeclarationStatement[1462-1485]"
  }, {
    "left" : "char[] chars = new char[len];",
    "right" : "char[] chars = new char[len];",
    "info" : "VariableDeclarationStatement[1494-1523]:VariableDeclarationStatement[1494-1523]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[1532-1546]:VariableDeclarationStatement[1532-1546]"
  }, {
    "left" : "for (int i = 0; i < len; i++)",
    "right" : "for (int i = 0; i < len; i++)",
    "info" : "ForStatement[1555-1711]:ForStatement[1555-1711]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1585-1711]:Block[1585-1711]"
  }, {
    "left" : "if (Character.isLetter(str.charAt(i)))",
    "right" : "if (Character.isLetter(str.charAt(i)))",
    "info" : "IfStatement[1599-1701]:IfStatement[1599-1701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1638-1701]:Block[1638-1701]"
  }, {
    "left" : "chars[count++] = str.charAt(i);",
    "right" : "chars[count++] = str.charAt(i);",
    "info" : "ExpressionStatement[1656-1687]:ExpressionStatement[1656-1687]"
  }, {
    "left" : "if (count == len)",
    "right" : "if (count == len)",
    "info" : "IfStatement[1720-1787]:IfStatement[1720-1811]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1738-1787]:Block[1738-1811]"
  }, {
    "left" : "return str.toUpperCase();",
    "right" : "return str.toUpperCase(java.util.Locale.ENGLISH);",
    "info" : "ReturnStatement[1752-1777]:ReturnStatement[1752-1801]"
  }, {
    "left" : "return new String(chars, 0, count).toUpperCase(java.util.Locale.ENGLISH);",
    "right" : "return new String(chars, 0, count).toUpperCase(java.util.Locale.ENGLISH);",
    "info" : "ReturnStatement[1796-1869]:ReturnStatement[1820-1893]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2917-2923]:Modifier[2941-2947]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[2924-2927]:PrimitiveType[2948-2951]"
  }, {
    "left" : "difference",
    "right" : "difference",
    "info" : "SimpleName[2928-2938]:SimpleName[2952-2962]"
  }, {
    "left" : "StringEncoder encoder",
    "right" : "StringEncoder encoder",
    "info" : "SingleVariableDeclaration[2939-2960]:SingleVariableDeclaration[2963-2984]"
  }, {
    "left" : "String s1",
    "right" : "String s1",
    "info" : "SingleVariableDeclaration[2962-2971]:SingleVariableDeclaration[2986-2995]"
  }, {
    "left" : "String s2",
    "right" : "String s2",
    "info" : "SingleVariableDeclaration[2973-2982]:SingleVariableDeclaration[2997-3006]"
  }, {
    "left" : "EncoderException",
    "right" : "EncoderException",
    "info" : "SimpleType[2991-3007]:SimpleType[3015-3031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3008-3089]:Block[3032-3113]"
  }, {
    "left" : "return differenceEncoded(encoder.encode(s1), encoder.encode(s2));",
    "right" : "return differenceEncoded(encoder.encode(s1), encoder.encode(s2));",
    "info" : "ReturnStatement[3018-3083]:ReturnStatement[3042-3107]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3840-3846]:Modifier[3864-3870]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3847-3850]:PrimitiveType[3871-3874]"
  }, {
    "left" : "differenceEncoded",
    "right" : "differenceEncoded",
    "info" : "SimpleName[3851-3868]:SimpleName[3875-3892]"
  }, {
    "left" : "String es1",
    "right" : "String es1",
    "info" : "SingleVariableDeclaration[3869-3879]:SingleVariableDeclaration[3893-3903]"
  }, {
    "left" : "String es2",
    "right" : "String es2",
    "info" : "SingleVariableDeclaration[3881-3891]:SingleVariableDeclaration[3905-3915]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3893-4232]:Block[3917-4256]"
  }, {
    "left" : "if (es1 == null || es2 == null)",
    "right" : "if (es1 == null || es2 == null)",
    "info" : "IfStatement[3904-3969]:IfStatement[3928-3993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3936-3969]:Block[3960-3993]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[3950-3959]:ReturnStatement[3974-3983]"
  }, {
    "left" : "int lengthToMatch = Math.min(es1.length(), es2.length());",
    "right" : "int lengthToMatch = Math.min(es1.length(), es2.length());",
    "info" : "VariableDeclarationStatement[3978-4035]:VariableDeclarationStatement[4002-4059]"
  }, {
    "left" : "int diff = 0;",
    "right" : "int diff = 0;",
    "info" : "VariableDeclarationStatement[4044-4057]:VariableDeclarationStatement[4068-4081]"
  }, {
    "left" : "for (int i = 0; i < lengthToMatch; i++)",
    "right" : "for (int i = 0; i < lengthToMatch; i++)",
    "info" : "ForStatement[4066-4205]:ForStatement[4090-4229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4106-4205]:Block[4130-4229]"
  }, {
    "left" : "if (es1.charAt(i) == es2.charAt(i))",
    "right" : "if (es1.charAt(i) == es2.charAt(i))",
    "info" : "IfStatement[4120-4195]:IfStatement[4144-4219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4156-4195]:Block[4180-4219]"
  }, {
    "left" : "diff++;",
    "right" : "diff++;",
    "info" : "ExpressionStatement[4174-4181]:ExpressionStatement[4198-4205]"
  }, {
    "left" : "return diff;",
    "right" : "return diff;",
    "info" : "ReturnStatement[4214-4226]:ReturnStatement[4238-4250]"
  } ]
}