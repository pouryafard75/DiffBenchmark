{
  "matchedElements" : [
 {
    "left" : "class : Invocation",
    "right" : "class : Invocation",
    "info" : "TypeDeclaration[617-6791]:TypeDeclaration[657-6969]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[951-1017]:FieldDeclaration[991-1057]"
  }, {
    "left" : "MAX_LINE_LENGTH",
    "right" : "MAX_LINE_LENGTH",
    "info" : "FieldDeclaration[1022-1068]:FieldDeclaration[1062-1108]"
  }, {
    "left" : "sequenceNumber",
    "right" : "sequenceNumber",
    "info" : "FieldDeclaration[1073-1106]:FieldDeclaration[1113-1146]"
  }, {
    "left" : "mock",
    "right" : "mock",
    "info" : "FieldDeclaration[1111-1137]:FieldDeclaration[1151-1177]"
  }, {
    "left" : "method",
    "right" : "method",
    "info" : "FieldDeclaration[1142-1177]:FieldDeclaration[1182-1217]"
  }, {
    "left" : "arguments",
    "right" : "arguments",
    "info" : "FieldDeclaration[1182-1215]:FieldDeclaration[1222-1255]"
  }, {
    "left" : "rawArguments",
    "right" : "rawArguments",
    "info" : "FieldDeclaration[1220-1256]:FieldDeclaration[1260-1296]"
  }, {
    "left" : "location",
    "right" : "location",
    "info" : "FieldDeclaration[1262-1294]:FieldDeclaration[1302-1334]"
  }, {
    "left" : "verified",
    "right" : "verified",
    "info" : "FieldDeclaration[1299-1324]:FieldDeclaration[1339-1364]"
  }, {
    "left" : "verifiedInOrder",
    "right" : "verifiedInOrder",
    "info" : "FieldDeclaration[1329-1361]:FieldDeclaration[1369-1401]"
  }, {
    "left" : "realMethod",
    "right" : "realMethod",
    "info" : "FieldDeclaration[1367-1395]:FieldDeclaration[1407-1435]"
  }, {
    "left" : "public Invocation(mock , mockitoMethod , args , sequenceNumber int, realMethod )",
    "right" : "public Invocation(mock , mockitoMethod , args , sequenceNumber int, realMethod )",
    "info" : "MethodDeclaration[1401-1820]:MethodDeclaration[1441-1860]"
  }, {
    "left" : "private expandVarArgs(isVarArgs boolean, args ...) : ",
    "right" : "private expandVarArgs(isVarArgs boolean, args ...) : ",
    "info" : "MethodDeclaration[1929-2820]:MethodDeclaration[1969-2860]"
  }, {
    "left" : "public getMock() : ",
    "right" : "public getMock() : ",
    "info" : "MethodDeclaration[2826-2878]:MethodDeclaration[2866-2918]"
  }, {
    "left" : "public getMethod() : ",
    "right" : "public getMethod() : ",
    "info" : "MethodDeclaration[2884-2947]:MethodDeclaration[2924-2987]"
  }, {
    "left" : "public getArguments() : ",
    "right" : "public getArguments() : ",
    "info" : "MethodDeclaration[2953-3017]:MethodDeclaration[2993-3057]"
  }, {
    "left" : "public isVerified() : boolean",
    "right" : "public isVerified() : boolean",
    "info" : "MethodDeclaration[3023-3083]:MethodDeclaration[3063-3123]"
  }, {
    "left" : "public getSequenceNumber() : ",
    "right" : "public getSequenceNumber() : ",
    "info" : "MethodDeclaration[3089-3162]:MethodDeclaration[3129-3202]"
  }, {
    "left" : "public isVerifiedInOrder() : boolean",
    "right" : "public isVerifiedInOrder() : boolean",
    "info" : "MethodDeclaration[3168-3242]:MethodDeclaration[3208-3282]"
  }, {
    "left" : "public equals(o ) : boolean",
    "right" : "public equals(o ) : boolean",
    "info" : "MethodDeclaration[3248-3555]:MethodDeclaration[3288-3595]"
  }, {
    "left" : "private equalArguments(arguments ...) : boolean",
    "right" : "private equalArguments(arguments ...) : boolean",
    "info" : "MethodDeclaration[3561-3676]:MethodDeclaration[3601-3716]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[3682-3780]:MethodDeclaration[3722-3820]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[3786-3887]:MethodDeclaration[3826-3927]"
  }, {
    "left" : "protected toString(matchers , printSettings ...) : ",
    "right" : "protected toString(matchers , printSettings ...) : ",
    "info" : "MethodDeclaration[3893-4442]:MethodDeclaration[3933-4482]"
  }, {
    "left" : "private qualifiedMethodName() : ",
    "right" : "private qualifiedMethodName() : ",
    "info" : "MethodDeclaration[4448-4566]:MethodDeclaration[4488-4606]"
  }, {
    "left" : "protected argumentsToMatchers() : ",
    "right" : "protected argumentsToMatchers() : ",
    "info" : "MethodDeclaration[4572-4967]:MethodDeclaration[4612-5007]"
  }, {
    "left" : "public isToString(invocation ) : boolean",
    "right" : "public isToString(invocation ) : boolean",
    "info" : "MethodDeclaration[4973-5117]:MethodDeclaration[5013-5157]"
  }, {
    "left" : "public isValidException(throwable ) : boolean",
    "right" : "public isValidException(throwable ) : boolean",
    "info" : "MethodDeclaration[5123-5495]:MethodDeclaration[5163-5535]"
  }, {
    "left" : "public isValidReturnType(clazz ) : boolean",
    "right" : "public isValidReturnType(clazz ) : boolean",
    "info" : "MethodDeclaration[5501-5780]:MethodDeclaration[5541-5820]"
  }, {
    "left" : "public isVoid() : boolean",
    "right" : "public isVoid() : boolean",
    "info" : "MethodDeclaration[5786-5874]:MethodDeclaration[5826-5914]"
  }, {
    "left" : "public printMethodReturnType() : ",
    "right" : "public printMethodReturnType() : ",
    "info" : "MethodDeclaration[5880-5980]:MethodDeclaration[5920-6020]"
  }, {
    "left" : "public getMethodName() : ",
    "right" : "public getMethodName() : ",
    "info" : "MethodDeclaration[5986-6056]:MethodDeclaration[6026-6096]"
  }, {
    "left" : "public returnsPrimitive() : boolean",
    "right" : "public returnsPrimitive() : boolean",
    "info" : "MethodDeclaration[6062-6156]:MethodDeclaration[6102-6196]"
  }, {
    "left" : "public getLocation() : ",
    "right" : "public getLocation() : ",
    "info" : "MethodDeclaration[6162-6224]:MethodDeclaration[6202-6264]"
  }, {
    "left" : "public getArgumentsCount() : int",
    "right" : "public getArgumentsCount() : int",
    "info" : "MethodDeclaration[6230-6301]:MethodDeclaration[6270-6341]"
  }, {
    "left" : "public getRawArguments() : ",
    "right" : "public getRawArguments() : ",
    "info" : "MethodDeclaration[6307-6382]:MethodDeclaration[6347-6422]"
  }, {
    "left" : "public callRealMethod() : ",
    "right" : "public callRealMethod() : ",
    "info" : "MethodDeclaration[6388-6497]:MethodDeclaration[6428-6675]"
  }, {
    "left" : "public toString(printSettings ...) : ",
    "right" : "public toString(printSettings ...) : ",
    "info" : "MethodDeclaration[6503-6625]:MethodDeclaration[6681-6803]"
  }, {
    "left" : "package markVerified() : void",
    "right" : "package markVerified() : void",
    "info" : "MethodDeclaration[6631-6688]:MethodDeclaration[6809-6866]"
  }, {
    "left" : "package markVerifiedInOrder() : void",
    "right" : "package markVerifiedInOrder() : void",
    "info" : "MethodDeclaration[6694-6789]:MethodDeclaration[6872-6967]"
  } ],
  "mappings" : [
 {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[812-842]:SingleMemberAnnotation[852-882]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[843-849]:Modifier[883-889]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[850-855]:TYPE_DECLARATION_KIND[890-895]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1401-1407]:Modifier[1441-1447]"
  }, {
    "left" : "Invocation",
    "right" : "Invocation",
    "info" : "SimpleName[1408-1418]:SimpleName[1448-1458]"
  }, {
    "left" : "Object mock",
    "right" : "Object mock",
    "info" : "SingleVariableDeclaration[1419-1430]:SingleVariableDeclaration[1459-1470]"
  }, {
    "left" : "MockitoMethod mockitoMethod",
    "right" : "MockitoMethod mockitoMethod",
    "info" : "SingleVariableDeclaration[1432-1459]:SingleVariableDeclaration[1472-1499]"
  }, {
    "left" : "Object[] args",
    "right" : "Object[] args",
    "info" : "SingleVariableDeclaration[1461-1474]:SingleVariableDeclaration[1501-1514]"
  }, {
    "left" : "int sequenceNumber",
    "right" : "int sequenceNumber",
    "info" : "SingleVariableDeclaration[1476-1494]:SingleVariableDeclaration[1516-1534]"
  }, {
    "left" : "RealMethod realMethod",
    "right" : "RealMethod realMethod",
    "info" : "SingleVariableDeclaration[1496-1517]:SingleVariableDeclaration[1536-1557]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1519-1820]:Block[1559-1860]"
  }, {
    "left" : "this.method = mockitoMethod;",
    "right" : "this.method = mockitoMethod;",
    "info" : "ExpressionStatement[1529-1557]:ExpressionStatement[1569-1597]"
  }, {
    "left" : "this.mock = mock;",
    "right" : "this.mock = mock;",
    "info" : "ExpressionStatement[1566-1583]:ExpressionStatement[1606-1623]"
  }, {
    "left" : "this.realMethod = realMethod;",
    "right" : "this.realMethod = realMethod;",
    "info" : "ExpressionStatement[1592-1621]:ExpressionStatement[1632-1661]"
  }, {
    "left" : "this.arguments = expandVarArgs(mockitoMethod.isVarArgs(), args);",
    "right" : "this.arguments = expandVarArgs(mockitoMethod.isVarArgs(), args);",
    "info" : "ExpressionStatement[1630-1694]:ExpressionStatement[1670-1734]"
  }, {
    "left" : "this.rawArguments = args;",
    "right" : "this.rawArguments = args;",
    "info" : "ExpressionStatement[1703-1728]:ExpressionStatement[1743-1768]"
  }, {
    "left" : "this.sequenceNumber = sequenceNumber;",
    "right" : "this.sequenceNumber = sequenceNumber;",
    "info" : "ExpressionStatement[1737-1774]:ExpressionStatement[1777-1814]"
  }, {
    "left" : "this.location = new Location();",
    "right" : "this.location = new Location();",
    "info" : "ExpressionStatement[1783-1814]:ExpressionStatement[1823-1854]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1929-1936]:Modifier[1969-1976]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1937-1943]:Modifier[1977-1983]"
  }, {
    "left" : "Object[]",
    "right" : "Object[]",
    "info" : "ArrayType[1944-1952]:ArrayType[1984-1992]"
  }, {
    "left" : "expandVarArgs",
    "right" : "expandVarArgs",
    "info" : "SimpleName[1953-1966]:SimpleName[1993-2006]"
  }, {
    "left" : "final boolean isVarArgs",
    "right" : "final boolean isVarArgs",
    "info" : "SingleVariableDeclaration[1967-1990]:SingleVariableDeclaration[2007-2030]"
  }, {
    "left" : "final Object[] args",
    "right" : "final Object[] args",
    "info" : "SingleVariableDeclaration[1992-2011]:SingleVariableDeclaration[2032-2051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2013-2820]:Block[2053-2860]"
  }, {
    "left" : "if (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())",
    "right" : "if (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray())",
    "info" : "IfStatement[2023-2186]:IfStatement[2063-2226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2119-2186]:Block[2159-2226]"
  }, {
    "left" : "return args == null ? new Object[0] : args;",
    "right" : "return args == null ? new Object[0] : args;",
    "info" : "ReturnStatement[2133-2176]:ReturnStatement[2173-2216]"
  }, {
    "left" : "final int nonVarArgsCount = args.length - 1;",
    "right" : "final int nonVarArgsCount = args.length - 1;",
    "info" : "VariableDeclarationStatement[2196-2240]:VariableDeclarationStatement[2236-2280]"
  }, {
    "left" : "Object[] varArgs;",
    "right" : "Object[] varArgs;",
    "info" : "VariableDeclarationStatement[2249-2266]:VariableDeclarationStatement[2289-2306]"
  }, {
    "left" : "if (args[nonVarArgsCount] == null)",
    "right" : "if (args[nonVarArgsCount] == null)",
    "info" : "IfStatement[2275-2528]:IfStatement[2315-2568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2310-2435]:Block[2350-2475]"
  }, {
    "left" : "varArgs = new Object[] { null };",
    "right" : "varArgs = new Object[] { null };",
    "info" : "ExpressionStatement[2393-2425]:ExpressionStatement[2433-2465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2441-2528]:Block[2481-2568]"
  }, {
    "left" : "varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);",
    "right" : "varArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);",
    "info" : "ExpressionStatement[2455-2518]:ExpressionStatement[2495-2558]"
  }, {
    "left" : "final int varArgsCount = varArgs.length;",
    "right" : "final int varArgsCount = varArgs.length;",
    "info" : "VariableDeclarationStatement[2537-2577]:VariableDeclarationStatement[2577-2617]"
  }, {
    "left" : "Object[] newArgs = new Object[nonVarArgsCount + varArgsCount];",
    "right" : "Object[] newArgs = new Object[nonVarArgsCount + varArgsCount];",
    "info" : "VariableDeclarationStatement[2586-2648]:VariableDeclarationStatement[2626-2688]"
  }, {
    "left" : "System.arraycopy(args, 0, newArgs, 0, nonVarArgsCount);",
    "right" : "System.arraycopy(args, 0, newArgs, 0, nonVarArgsCount);",
    "info" : "ExpressionStatement[2657-2712]:ExpressionStatement[2697-2752]"
  }, {
    "left" : "System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, varArgsCount);",
    "right" : "System.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, varArgsCount);",
    "info" : "ExpressionStatement[2721-2790]:ExpressionStatement[2761-2830]"
  }, {
    "left" : "return newArgs;",
    "right" : "return newArgs;",
    "info" : "ReturnStatement[2799-2814]:ReturnStatement[2839-2854]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2826-2832]:Modifier[2866-2872]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[2833-2839]:SimpleType[2873-2879]"
  }, {
    "left" : "getMock",
    "right" : "getMock",
    "info" : "SimpleName[2840-2847]:SimpleName[2880-2887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2850-2878]:Block[2890-2918]"
  }, {
    "left" : "return mock;",
    "right" : "return mock;",
    "info" : "ReturnStatement[2860-2872]:ReturnStatement[2900-2912]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2884-2890]:Modifier[2924-2930]"
  }, {
    "left" : "MockitoMethod",
    "right" : "MockitoMethod",
    "info" : "SimpleType[2891-2904]:SimpleType[2931-2944]"
  }, {
    "left" : "getMethod",
    "right" : "getMethod",
    "info" : "SimpleName[2905-2914]:SimpleName[2945-2954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2917-2947]:Block[2957-2987]"
  }, {
    "left" : "return method;",
    "right" : "return method;",
    "info" : "ReturnStatement[2927-2941]:ReturnStatement[2967-2981]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2953-2959]:Modifier[2993-2999]"
  }, {
    "left" : "Object[]",
    "right" : "Object[]",
    "info" : "ArrayType[2960-2968]:ArrayType[3000-3008]"
  }, {
    "left" : "getArguments",
    "right" : "getArguments",
    "info" : "SimpleName[2969-2981]:SimpleName[3009-3021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2984-3017]:Block[3024-3057]"
  }, {
    "left" : "return arguments;",
    "right" : "return arguments;",
    "info" : "ReturnStatement[2994-3011]:ReturnStatement[3034-3051]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3023-3029]:Modifier[3063-3069]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3030-3037]:PrimitiveType[3070-3077]"
  }, {
    "left" : "isVerified",
    "right" : "isVerified",
    "info" : "SimpleName[3038-3048]:SimpleName[3078-3088]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3051-3083]:Block[3091-3123]"
  }, {
    "left" : "return verified;",
    "right" : "return verified;",
    "info" : "ReturnStatement[3061-3077]:ReturnStatement[3101-3117]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3089-3095]:Modifier[3129-3135]"
  }, {
    "left" : "Integer",
    "right" : "Integer",
    "info" : "SimpleType[3096-3103]:SimpleType[3136-3143]"
  }, {
    "left" : "getSequenceNumber",
    "right" : "getSequenceNumber",
    "info" : "SimpleName[3104-3121]:SimpleName[3144-3161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3124-3162]:Block[3164-3202]"
  }, {
    "left" : "return sequenceNumber;",
    "right" : "return sequenceNumber;",
    "info" : "ReturnStatement[3134-3156]:ReturnStatement[3174-3196]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3168-3174]:Modifier[3208-3214]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3175-3182]:PrimitiveType[3215-3222]"
  }, {
    "left" : "isVerifiedInOrder",
    "right" : "isVerifiedInOrder",
    "info" : "SimpleName[3183-3200]:SimpleName[3223-3240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3203-3242]:Block[3243-3282]"
  }, {
    "left" : "return verifiedInOrder;",
    "right" : "return verifiedInOrder;",
    "info" : "ReturnStatement[3213-3236]:ReturnStatement[3253-3276]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3248-3254]:Modifier[3288-3294]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3255-3262]:PrimitiveType[3295-3302]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[3263-3269]:SimpleName[3303-3309]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[3270-3278]:SingleVariableDeclaration[3310-3318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3280-3555]:Block[3320-3595]"
  }, {
    "left" : "if (o == null || !o.getClass().equals(this.getClass()))",
    "right" : "if (o == null || !o.getClass().equals(this.getClass()))",
    "info" : "IfStatement[3290-3383]:IfStatement[3330-3423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3346-3383]:Block[3386-3423]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[3360-3373]:ReturnStatement[3400-3413]"
  }, {
    "left" : "Invocation other = (Invocation) o;",
    "right" : "Invocation other = (Invocation) o;",
    "info" : "VariableDeclarationStatement[3393-3427]:VariableDeclarationStatement[3433-3467]"
  }, {
    "left" : "return this.mock.equals(other.mock) && this.method.equals(other.method) && this.equalArguments(other.arguments);",
    "right" : "return this.mock.equals(other.mock) && this.method.equals(other.method) && this.equalArguments(other.arguments);",
    "info" : "ReturnStatement[3437-3549]:ReturnStatement[3477-3589]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[3561-3568]:Modifier[3601-3608]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[3569-3576]:PrimitiveType[3609-3616]"
  }, {
    "left" : "equalArguments",
    "right" : "equalArguments",
    "info" : "SimpleName[3577-3591]:SimpleName[3617-3631]"
  }, {
    "left" : "Object[] arguments",
    "right" : "Object[] arguments",
    "info" : "SingleVariableDeclaration[3592-3610]:SingleVariableDeclaration[3632-3650]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3612-3676]:Block[3652-3716]"
  }, {
    "left" : "return Arrays.equals(arguments, this.arguments);",
    "right" : "return Arrays.equals(arguments, this.arguments);",
    "info" : "ReturnStatement[3622-3670]:ReturnStatement[3662-3710]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3682-3688]:Modifier[3722-3728]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[3689-3692]:PrimitiveType[3729-3732]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[3693-3701]:SimpleName[3733-3741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3704-3780]:Block[3744-3820]"
  }, {
    "left" : "throw new RuntimeException(\"hashCode() is not implemented\");",
    "right" : "throw new RuntimeException(\"hashCode() is not implemented\");",
    "info" : "ThrowStatement[3714-3774]:ThrowStatement[3754-3814]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3786-3792]:Modifier[3826-3832]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3793-3799]:SimpleType[3833-3839]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[3800-3808]:SimpleName[3840-3848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3811-3887]:Block[3851-3927]"
  }, {
    "left" : "return toString(argumentsToMatchers(), new PrintSettings());",
    "right" : "return toString(argumentsToMatchers(), new PrintSettings());",
    "info" : "ReturnStatement[3821-3881]:ReturnStatement[3861-3921]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[3893-3902]:Modifier[3933-3942]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[3903-3909]:SimpleType[3943-3949]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[3910-3918]:SimpleName[3950-3958]"
  }, {
    "left" : "List<Matcher> matchers",
    "right" : "List<Matcher> matchers",
    "info" : "SingleVariableDeclaration[3919-3941]:SingleVariableDeclaration[3959-3981]"
  }, {
    "left" : "PrintSettings printSettings",
    "right" : "PrintSettings printSettings",
    "info" : "SingleVariableDeclaration[3943-3970]:SingleVariableDeclaration[3983-4010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3972-4442]:Block[4012-4482]"
  }, {
    "left" : "MatchersPrinter matchersPrinter = new MatchersPrinter();",
    "right" : "MatchersPrinter matchersPrinter = new MatchersPrinter();",
    "info" : "VariableDeclarationStatement[3982-4038]:VariableDeclarationStatement[4022-4078]"
  }, {
    "left" : "String method = qualifiedMethodName();",
    "right" : "String method = qualifiedMethodName();",
    "info" : "VariableDeclarationStatement[4047-4085]:VariableDeclarationStatement[4087-4125]"
  }, {
    "left" : "String invocation = method + matchersPrinter.getArgumentsLine(matchers, printSettings);",
    "right" : "String invocation = method + matchersPrinter.getArgumentsLine(matchers, printSettings);",
    "info" : "VariableDeclarationStatement[4094-4181]:VariableDeclarationStatement[4134-4221]"
  }, {
    "left" : "if (printSettings.isMultiline() || (!matchers.isEmpty() && invocation.length() > MAX_LINE_LENGTH))",
    "right" : "if (printSettings.isMultiline() || (!matchers.isEmpty() && invocation.length() > MAX_LINE_LENGTH))",
    "info" : "IfStatement[4190-4436]:IfStatement[4230-4476]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4289-4388]:Block[4329-4428]"
  }, {
    "left" : "return method + matchersPrinter.getArgumentsBlock(matchers, printSettings);",
    "right" : "return method + matchersPrinter.getArgumentsBlock(matchers, printSettings);",
    "info" : "ReturnStatement[4303-4378]:ReturnStatement[4343-4418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4394-4436]:Block[4434-4476]"
  }, {
    "left" : "return invocation;",
    "right" : "return invocation;",
    "info" : "ReturnStatement[4408-4426]:ReturnStatement[4448-4466]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[4448-4455]:Modifier[4488-4495]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[4456-4462]:SimpleType[4496-4502]"
  }, {
    "left" : "qualifiedMethodName",
    "right" : "qualifiedMethodName",
    "info" : "SimpleName[4463-4482]:SimpleName[4503-4522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4485-4566]:Block[4525-4606]"
  }, {
    "left" : "return new MockUtil().getMockName(mock) + \".\" + method.getName();",
    "right" : "return new MockUtil().getMockName(mock) + \".\" + method.getName();",
    "info" : "ReturnStatement[4495-4560]:ReturnStatement[4535-4600]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[4572-4581]:Modifier[4612-4621]"
  }, {
    "left" : "List<Matcher>",
    "right" : "List<Matcher>",
    "info" : "ParameterizedType[4582-4595]:ParameterizedType[4622-4635]"
  }, {
    "left" : "argumentsToMatchers",
    "right" : "argumentsToMatchers",
    "info" : "SimpleName[4596-4615]:SimpleName[4636-4655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4618-4967]:Block[4658-5007]"
  }, {
    "left" : "List<Matcher> matchers = new ArrayList<Matcher>(arguments.length);",
    "right" : "List<Matcher> matchers = new ArrayList<Matcher>(arguments.length);",
    "info" : "VariableDeclarationStatement[4628-4694]:VariableDeclarationStatement[4668-4734]"
  }, {
    "left" : "for (Object arg : arguments)",
    "right" : "for (Object arg : arguments)",
    "info" : "EnhancedForStatement[4703-4936]:EnhancedForStatement[4743-4976]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4732-4936]:Block[4772-4976]"
  }, {
    "left" : "if (arg != null && arg.getClass().isArray())",
    "right" : "if (arg != null && arg.getClass().isArray())",
    "info" : "IfStatement[4746-4926]:IfStatement[4786-4966]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4791-4858]:Block[4831-4898]"
  }, {
    "left" : "matchers.add(new ArrayEquals(arg));",
    "right" : "matchers.add(new ArrayEquals(arg));",
    "info" : "ExpressionStatement[4809-4844]:ExpressionStatement[4849-4884]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4864-4926]:Block[4904-4966]"
  }, {
    "left" : "matchers.add(new Equals(arg));",
    "right" : "matchers.add(new Equals(arg));",
    "info" : "ExpressionStatement[4882-4912]:ExpressionStatement[4922-4952]"
  }, {
    "left" : "return matchers;",
    "right" : "return matchers;",
    "info" : "ReturnStatement[4945-4961]:ReturnStatement[4985-5001]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4973-4979]:Modifier[5013-5019]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4980-4986]:Modifier[5020-5026]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[4987-4994]:PrimitiveType[5027-5034]"
  }, {
    "left" : "isToString",
    "right" : "isToString",
    "info" : "SimpleName[4995-5005]:SimpleName[5035-5045]"
  }, {
    "left" : "InvocationOnMock invocation",
    "right" : "InvocationOnMock invocation",
    "info" : "SingleVariableDeclaration[5006-5033]:SingleVariableDeclaration[5046-5073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5035-5117]:Block[5075-5157]"
  }, {
    "left" : "return new ObjectMethodsGuru().isToString(invocation.getMethod());",
    "right" : "return new ObjectMethodsGuru().isToString(invocation.getMethod());",
    "info" : "ReturnStatement[5045-5111]:ReturnStatement[5085-5151]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5123-5129]:Modifier[5163-5169]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5130-5137]:PrimitiveType[5170-5177]"
  }, {
    "left" : "isValidException",
    "right" : "isValidException",
    "info" : "SimpleName[5138-5154]:SimpleName[5178-5194]"
  }, {
    "left" : "Throwable throwable",
    "right" : "Throwable throwable",
    "info" : "SingleVariableDeclaration[5155-5174]:SingleVariableDeclaration[5195-5214]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5176-5495]:Block[5216-5535]"
  }, {
    "left" : "Class<?>[] exceptions = this.getMethod().getExceptionTypes();",
    "right" : "Class<?>[] exceptions = this.getMethod().getExceptionTypes();",
    "info" : "VariableDeclarationStatement[5186-5247]:VariableDeclarationStatement[5226-5287]"
  }, {
    "left" : "Class<?> throwableClass = throwable.getClass();",
    "right" : "Class<?> throwableClass = throwable.getClass();",
    "info" : "VariableDeclarationStatement[5256-5303]:VariableDeclarationStatement[5296-5343]"
  }, {
    "left" : "for (Class<?> exception : exceptions)",
    "right" : "for (Class<?> exception : exceptions)",
    "info" : "EnhancedForStatement[5312-5466]:EnhancedForStatement[5352-5506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5350-5466]:Block[5390-5506]"
  }, {
    "left" : "if (exception.isAssignableFrom(throwableClass))",
    "right" : "if (exception.isAssignableFrom(throwableClass))",
    "info" : "IfStatement[5364-5456]:IfStatement[5404-5496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5412-5456]:Block[5452-5496]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[5430-5442]:ReturnStatement[5470-5482]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[5476-5489]:ReturnStatement[5516-5529]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5501-5507]:Modifier[5541-5547]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5508-5515]:PrimitiveType[5548-5555]"
  }, {
    "left" : "isValidReturnType",
    "right" : "isValidReturnType",
    "info" : "SimpleName[5516-5533]:SimpleName[5556-5573]"
  }, {
    "left" : "Class clazz",
    "right" : "Class clazz",
    "info" : "SingleVariableDeclaration[5534-5545]:SingleVariableDeclaration[5574-5585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5547-5780]:Block[5587-5820]"
  }, {
    "left" : "if (method.getReturnType().isPrimitive())",
    "right" : "if (method.getReturnType().isPrimitive())",
    "info" : "IfStatement[5557-5774]:IfStatement[5597-5814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5599-5690]:Block[5639-5730]"
  }, {
    "left" : "return Primitives.primitiveTypeOf(clazz) == method.getReturnType();",
    "right" : "return Primitives.primitiveTypeOf(clazz) == method.getReturnType();",
    "info" : "ReturnStatement[5613-5680]:ReturnStatement[5653-5720]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5696-5774]:Block[5736-5814]"
  }, {
    "left" : "return method.getReturnType().isAssignableFrom(clazz);",
    "right" : "return method.getReturnType().isAssignableFrom(clazz);",
    "info" : "ReturnStatement[5710-5764]:ReturnStatement[5750-5804]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5786-5792]:Modifier[5826-5832]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5793-5800]:PrimitiveType[5833-5840]"
  }, {
    "left" : "isVoid",
    "right" : "isVoid",
    "info" : "SimpleName[5801-5807]:SimpleName[5841-5847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5810-5874]:Block[5850-5914]"
  }, {
    "left" : "return this.method.getReturnType() == Void.TYPE;",
    "right" : "return this.method.getReturnType() == Void.TYPE;",
    "info" : "ReturnStatement[5820-5868]:ReturnStatement[5860-5908]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5880-5886]:Modifier[5920-5926]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[5887-5893]:SimpleType[5927-5933]"
  }, {
    "left" : "printMethodReturnType",
    "right" : "printMethodReturnType",
    "info" : "SimpleName[5894-5915]:SimpleName[5934-5955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5918-5980]:Block[5958-6020]"
  }, {
    "left" : "return method.getReturnType().getSimpleName();",
    "right" : "return method.getReturnType().getSimpleName();",
    "info" : "ReturnStatement[5928-5974]:ReturnStatement[5968-6014]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5986-5992]:Modifier[6026-6032]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[5993-5999]:SimpleType[6033-6039]"
  }, {
    "left" : "getMethodName",
    "right" : "getMethodName",
    "info" : "SimpleName[6000-6013]:SimpleName[6040-6053]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6016-6056]:Block[6056-6096]"
  }, {
    "left" : "return method.getName();",
    "right" : "return method.getName();",
    "info" : "ReturnStatement[6026-6050]:ReturnStatement[6066-6090]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6062-6068]:Modifier[6102-6108]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6069-6076]:PrimitiveType[6109-6116]"
  }, {
    "left" : "returnsPrimitive",
    "right" : "returnsPrimitive",
    "info" : "SimpleName[6077-6093]:SimpleName[6117-6133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6096-6156]:Block[6136-6196]"
  }, {
    "left" : "return method.getReturnType().isPrimitive();",
    "right" : "return method.getReturnType().isPrimitive();",
    "info" : "ReturnStatement[6106-6150]:ReturnStatement[6146-6190]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6162-6168]:Modifier[6202-6208]"
  }, {
    "left" : "Location",
    "right" : "Location",
    "info" : "SimpleType[6169-6177]:SimpleType[6209-6217]"
  }, {
    "left" : "getLocation",
    "right" : "getLocation",
    "info" : "SimpleName[6178-6189]:SimpleName[6218-6229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6192-6224]:Block[6232-6264]"
  }, {
    "left" : "return location;",
    "right" : "return location;",
    "info" : "ReturnStatement[6202-6218]:ReturnStatement[6242-6258]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6230-6236]:Modifier[6270-6276]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[6237-6240]:PrimitiveType[6277-6280]"
  }, {
    "left" : "getArgumentsCount",
    "right" : "getArgumentsCount",
    "info" : "SimpleName[6241-6258]:SimpleName[6281-6298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6261-6301]:Block[6301-6341]"
  }, {
    "left" : "return arguments.length;",
    "right" : "return arguments.length;",
    "info" : "ReturnStatement[6271-6295]:ReturnStatement[6311-6335]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6307-6313]:Modifier[6347-6353]"
  }, {
    "left" : "Object[]",
    "right" : "Object[]",
    "info" : "ArrayType[6314-6322]:ArrayType[6354-6362]"
  }, {
    "left" : "getRawArguments",
    "right" : "getRawArguments",
    "info" : "SimpleName[6323-6338]:SimpleName[6363-6378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6341-6382]:Block[6381-6422]"
  }, {
    "left" : "return this.rawArguments;",
    "right" : "return this.rawArguments;",
    "info" : "ReturnStatement[6351-6376]:ReturnStatement[6391-6416]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6388-6394]:Modifier[6428-6434]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[6395-6401]:SimpleType[6435-6441]"
  }, {
    "left" : "callRealMethod",
    "right" : "callRealMethod",
    "info" : "SimpleName[6402-6416]:SimpleName[6442-6456]"
  }, {
    "left" : "Throwable",
    "right" : "Throwable",
    "info" : "SimpleType[6426-6435]:SimpleType[6466-6475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6436-6497]:Block[6476-6675]"
  }, {
    "left" : "return realMethod.invoke(mock, rawArguments);",
    "right" : "return realMethod.invoke(mock, rawArguments);",
    "info" : "ReturnStatement[6446-6491]:ReturnStatement[6624-6669]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6503-6509]:Modifier[6681-6687]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[6510-6516]:SimpleType[6688-6694]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[6517-6525]:SimpleName[6695-6703]"
  }, {
    "left" : "PrintSettings printSettings",
    "right" : "PrintSettings printSettings",
    "info" : "SingleVariableDeclaration[6526-6553]:SingleVariableDeclaration[6704-6731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6555-6625]:Block[6733-6803]"
  }, {
    "left" : "return toString(argumentsToMatchers(), printSettings);",
    "right" : "return toString(argumentsToMatchers(), printSettings);",
    "info" : "ReturnStatement[6565-6619]:ReturnStatement[6743-6797]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6631-6635]:PrimitiveType[6809-6813]"
  }, {
    "left" : "markVerified",
    "right" : "markVerified",
    "info" : "SimpleName[6636-6648]:SimpleName[6814-6826]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6651-6688]:Block[6829-6866]"
  }, {
    "left" : "this.verified = true;",
    "right" : "this.verified = true;",
    "info" : "ExpressionStatement[6661-6682]:ExpressionStatement[6839-6860]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6694-6698]:PrimitiveType[6872-6876]"
  }, {
    "left" : "markVerifiedInOrder",
    "right" : "markVerifiedInOrder",
    "info" : "SimpleName[6699-6718]:SimpleName[6877-6896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6721-6789]:Block[6899-6967]"
  }, {
    "left" : "markVerified();",
    "right" : "markVerified();",
    "info" : "ExpressionStatement[6731-6746]:ExpressionStatement[6909-6924]"
  }, {
    "left" : "this.verifiedInOrder = true;",
    "right" : "this.verifiedInOrder = true;",
    "info" : "ExpressionStatement[6755-6783]:ExpressionStatement[6933-6961]"
  } ]
}