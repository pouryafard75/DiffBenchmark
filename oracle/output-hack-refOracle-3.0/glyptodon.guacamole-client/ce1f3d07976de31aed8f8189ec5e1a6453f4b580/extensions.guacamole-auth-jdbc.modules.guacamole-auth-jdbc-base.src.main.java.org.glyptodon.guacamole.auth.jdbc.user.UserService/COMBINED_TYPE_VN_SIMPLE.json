{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "UserService",
      "right" : "UserService",
      "info" : "TypeDeclaration[2327-9059]:TypeDeclaration[2637-12891]"
    }, {
      "left" : "private static final ObjectPermission.Type[] IMPLICIT_USER_PERMISSIONS = {\n        ObjectPermission.Type.READ,\n        ObjectPermission.Type.UPDATE\n    };",
      "right" : "private static final ObjectPermission.Type[] IMPLICIT_USER_PERMISSIONS = {\n        ObjectPermission.Type.READ,\n        ObjectPermission.Type.UPDATE\n    };",
      "info" : "FieldDeclaration[2583-2848]:FieldDeclaration[3025-3290]"
    }, {
      "left" : "@Inject\n    private UserMapper userMapper;",
      "right" : "@Inject\n    private UserMapper userMapper;",
      "info" : "FieldDeclaration[2858-2951]:FieldDeclaration[4687-4780]"
    }, {
      "left" : "@Inject\n    private UserPermissionMapper userPermissionMapper;",
      "right" : "@Inject\n    private UserPermissionMapper userPermissionMapper;",
      "info" : "FieldDeclaration[2957-3084]:FieldDeclaration[4786-4913]"
    }, {
      "left" : "@Inject\n    private Provider<ModeledUser> userProvider;",
      "right" : "@Inject\n    private Provider<ModeledUser> userProvider;",
      "info" : "FieldDeclaration[3094-3201]:FieldDeclaration[4923-5030]"
    }, {
      "left" : "@Inject\n    private PasswordEncryptionService encryptionService;",
      "right" : "@Inject\n    private PasswordEncryptionService encryptionService;",
      "info" : "FieldDeclaration[3207-3325]:FieldDeclaration[5036-5154]"
    }, {
      "left" : "protected ModeledDirectoryObjectMapper<UserModel> getObjectMapper()",
      "right" : "protected ModeledDirectoryObjectMapper<UserModel> getObjectMapper()",
      "info" : "MethodDeclaration[3331-3447]:MethodDeclaration[5160-5276]"
    }, {
      "left" : "protected ObjectPermissionMapper getPermissionMapper()",
      "right" : "protected ObjectPermissionMapper getPermissionMapper()",
      "info" : "MethodDeclaration[3453-3566]:MethodDeclaration[5282-5395]"
    }, {
      "left" : "protected ModeledUser getObjectInstance(AuthenticatedUser currentUser,\n            UserModel model)",
      "right" : "protected ModeledUser getObjectInstance(AuthenticatedUser currentUser,\n            UserModel model)",
      "info" : "MethodDeclaration[3572-3800]:MethodDeclaration[5401-5629]"
    }, {
      "left" : "protected UserModel getModelInstance(AuthenticatedUser currentUser,\n            final User object)",
      "right" : "protected UserModel getModelInstance(AuthenticatedUser currentUser,\n            final User object)",
      "info" : "MethodDeclaration[3806-4302]:MethodDeclaration[5635-6131]"
    }, {
      "left" : "protected boolean hasCreatePermission(AuthenticatedUser user)\n            throws GuacamoleException",
      "right" : "protected boolean hasCreatePermission(AuthenticatedUser user)\n            throws GuacamoleException",
      "info" : "MethodDeclaration[4308-4662]:MethodDeclaration[6137-6491]"
    }, {
      "left" : "protected ObjectPermissionSet getPermissionSet(AuthenticatedUser user)\n            throws GuacamoleException",
      "right" : "protected ObjectPermissionSet getPermissionSet(AuthenticatedUser user)\n            throws GuacamoleException",
      "info" : "MethodDeclaration[4668-4899]:MethodDeclaration[6497-6728]"
    }, {
      "left" : "protected void beforeCreate(AuthenticatedUser user, UserModel model)\n            throws GuacamoleException",
      "right" : "protected void beforeCreate(AuthenticatedUser user, UserModel model)\n            throws GuacamoleException",
      "info" : "MethodDeclaration[4905-5586]:MethodDeclaration[6734-7415]"
    }, {
      "left" : "protected void beforeUpdate(AuthenticatedUser user,\n            UserModel model) throws GuacamoleException",
      "right" : "protected void beforeUpdate(AuthenticatedUser user,\n            UserModel model) throws GuacamoleException",
      "info" : "MethodDeclaration[5592-6406]:MethodDeclaration[7421-8235]"
    }, {
      "left" : "protected Collection<ObjectPermissionModel>\n        getImplicitPermissions(AuthenticatedUser user, UserModel model)",
      "right" : "protected Collection<ObjectPermissionModel>\n        getImplicitPermissions(AuthenticatedUser user, UserModel model)",
      "info" : "MethodDeclaration[6412-7393]:MethodDeclaration[8241-9222]"
    }, {
      "left" : "protected void beforeDelete(AuthenticatedUser user, String identifier) throws GuacamoleException",
      "right" : "protected void beforeDelete(AuthenticatedUser user, String identifier) throws GuacamoleException",
      "info" : "MethodDeclaration[7407-7783]:MethodDeclaration[9236-9612]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2479-2485]:Modifier[2789-2795]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2486-2491]:TYPE_DECLARATION_KIND[2796-2801]"
    }, {
      "left" : "UserService",
      "right" : "UserService",
      "info" : "SimpleName[2492-2503]:SimpleName[2802-2813]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3331-3340]:MarkerAnnotation[5160-5169]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3345-3354]:Modifier[5174-5183]"
    }, {
      "left" : "ModeledDirectoryObjectMapper<UserModel>",
      "right" : "ModeledDirectoryObjectMapper<UserModel>",
      "info" : "ParameterizedType[3355-3394]:ParameterizedType[5184-5223]"
    }, {
      "left" : "getObjectMapper",
      "right" : "getObjectMapper",
      "info" : "SimpleName[3395-3410]:SimpleName[5224-5239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3413-3447]:Block[5242-5276]"
    }, {
      "left" : "return userMapper;",
      "right" : "return userMapper;",
      "info" : "ReturnStatement[3423-3441]:ReturnStatement[5252-5270]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3453-3462]:MarkerAnnotation[5282-5291]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3467-3476]:Modifier[5296-5305]"
    }, {
      "left" : "ObjectPermissionMapper",
      "right" : "ObjectPermissionMapper",
      "info" : "SimpleType[3477-3499]:SimpleType[5306-5328]"
    }, {
      "left" : "getPermissionMapper",
      "right" : "getPermissionMapper",
      "info" : "SimpleName[3500-3519]:SimpleName[5329-5348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3522-3566]:Block[5351-5395]"
    }, {
      "left" : "return userPermissionMapper;",
      "right" : "return userPermissionMapper;",
      "info" : "ReturnStatement[3532-3560]:ReturnStatement[5361-5389]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3572-3581]:MarkerAnnotation[5401-5410]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3586-3595]:Modifier[5415-5424]"
    }, {
      "left" : "ModeledUser",
      "right" : "ModeledUser",
      "info" : "SimpleType[3596-3607]:SimpleType[5425-5436]"
    }, {
      "left" : "getObjectInstance",
      "right" : "getObjectInstance",
      "info" : "SimpleName[3608-3625]:SimpleName[5437-5454]"
    }, {
      "left" : "AuthenticatedUser currentUser",
      "right" : "AuthenticatedUser currentUser",
      "info" : "SingleVariableDeclaration[3626-3655]:SingleVariableDeclaration[5455-5484]"
    }, {
      "left" : "UserModel model",
      "right" : "UserModel model",
      "info" : "SingleVariableDeclaration[3669-3684]:SingleVariableDeclaration[5498-5513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3686-3800]:Block[5515-5629]"
    }, {
      "left" : "ModeledUser user = userProvider.get();",
      "right" : "ModeledUser user = userProvider.get();",
      "info" : "VariableDeclarationStatement[3696-3734]:VariableDeclarationStatement[5525-5563]"
    }, {
      "left" : "user.init(currentUser, model);",
      "right" : "user.init(currentUser, model);",
      "info" : "ExpressionStatement[3743-3773]:ExpressionStatement[5572-5602]"
    }, {
      "left" : "return user;",
      "right" : "return user;",
      "info" : "ReturnStatement[3782-3794]:ReturnStatement[5611-5623]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3806-3815]:MarkerAnnotation[5635-5644]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3820-3829]:Modifier[5649-5658]"
    }, {
      "left" : "UserModel",
      "right" : "UserModel",
      "info" : "SimpleType[3830-3839]:SimpleType[5659-5668]"
    }, {
      "left" : "getModelInstance",
      "right" : "getModelInstance",
      "info" : "SimpleName[3840-3856]:SimpleName[5669-5685]"
    }, {
      "left" : "AuthenticatedUser currentUser",
      "right" : "AuthenticatedUser currentUser",
      "info" : "SingleVariableDeclaration[3857-3886]:SingleVariableDeclaration[5686-5715]"
    }, {
      "left" : "final User object",
      "right" : "final User object",
      "info" : "SingleVariableDeclaration[3900-3917]:SingleVariableDeclaration[5729-5746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3919-4302]:Block[5748-6131]"
    }, {
      "left" : "UserModel model = new UserModel();",
      "right" : "UserModel model = new UserModel();",
      "info" : "VariableDeclarationStatement[3986-4020]:VariableDeclarationStatement[5815-5849]"
    }, {
      "left" : "ModeledUser user = getObjectInstance(currentUser, model);",
      "right" : "ModeledUser user = getObjectInstance(currentUser, model);",
      "info" : "VariableDeclarationStatement[4029-4086]:VariableDeclarationStatement[5858-5915]"
    }, {
      "left" : "user.setIdentifier(object.getIdentifier());",
      "right" : "user.setIdentifier(object.getIdentifier());",
      "info" : "ExpressionStatement[4173-4216]:ExpressionStatement[6002-6045]"
    }, {
      "left" : "user.setPassword(object.getPassword());",
      "right" : "user.setPassword(object.getPassword());",
      "info" : "ExpressionStatement[4225-4264]:ExpressionStatement[6054-6093]"
    }, {
      "left" : "return model;",
      "right" : "return model;",
      "info" : "ReturnStatement[4274-4287]:ReturnStatement[6103-6116]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4308-4317]:MarkerAnnotation[6137-6146]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4322-4331]:Modifier[6151-6160]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4332-4339]:PrimitiveType[6161-6168]"
    }, {
      "left" : "hasCreatePermission",
      "right" : "hasCreatePermission",
      "info" : "SimpleName[4340-4359]:SimpleName[6169-6188]"
    }, {
      "left" : "AuthenticatedUser user",
      "right" : "AuthenticatedUser user",
      "info" : "SingleVariableDeclaration[4360-4382]:SingleVariableDeclaration[6189-6211]"
    }, {
      "left" : "GuacamoleException",
      "right" : "GuacamoleException",
      "info" : "SimpleType[4403-4421]:SimpleType[6232-6250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4422-4662]:Block[6251-6491]"
    }, {
      "left" : "SystemPermissionSet permissionSet = user.getUser().getSystemPermissions();",
      "right" : "SystemPermissionSet permissionSet = user.getUser().getSystemPermissions();",
      "info" : "VariableDeclarationStatement[4502-4576]:VariableDeclarationStatement[6331-6405]"
    }, {
      "left" : "return permissionSet.hasPermission(SystemPermission.Type.CREATE_USER);",
      "right" : "return permissionSet.hasPermission(SystemPermission.Type.CREATE_USER);",
      "info" : "ReturnStatement[4585-4655]:ReturnStatement[6414-6484]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4668-4677]:MarkerAnnotation[6497-6506]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4682-4691]:Modifier[6511-6520]"
    }, {
      "left" : "ObjectPermissionSet",
      "right" : "ObjectPermissionSet",
      "info" : "SimpleType[4692-4711]:SimpleType[6521-6540]"
    }, {
      "left" : "getPermissionSet",
      "right" : "getPermissionSet",
      "info" : "SimpleName[4712-4728]:SimpleName[6541-6557]"
    }, {
      "left" : "AuthenticatedUser user",
      "right" : "AuthenticatedUser user",
      "info" : "SingleVariableDeclaration[4729-4751]:SingleVariableDeclaration[6558-6580]"
    }, {
      "left" : "GuacamoleException",
      "right" : "GuacamoleException",
      "info" : "SimpleType[4772-4790]:SimpleType[6601-6619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4791-4899]:Block[6620-6728]"
    }, {
      "left" : "return user.getUser().getUserPermissions();",
      "right" : "return user.getUser().getUserPermissions();",
      "info" : "ReturnStatement[4849-4892]:ReturnStatement[6678-6721]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4905-4914]:MarkerAnnotation[6734-6743]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4919-4928]:Modifier[6748-6757]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4929-4933]:PrimitiveType[6758-6762]"
    }, {
      "left" : "beforeCreate",
      "right" : "beforeCreate",
      "info" : "SimpleName[4934-4946]:SimpleName[6763-6775]"
    }, {
      "left" : "AuthenticatedUser user",
      "right" : "AuthenticatedUser user",
      "info" : "SingleVariableDeclaration[4947-4969]:SingleVariableDeclaration[6776-6798]"
    }, {
      "left" : "UserModel model",
      "right" : "UserModel model",
      "info" : "SingleVariableDeclaration[4971-4986]:SingleVariableDeclaration[6800-6815]"
    }, {
      "left" : "GuacamoleException",
      "right" : "GuacamoleException",
      "info" : "SimpleType[5007-5025]:SimpleType[6836-6854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5026-5586]:Block[6855-7415]"
    }, {
      "left" : "super.beforeCreate(user, model);",
      "right" : "super.beforeCreate(user, model);",
      "info" : "ExpressionStatement[5037-5069]:ExpressionStatement[6866-6898]"
    }, {
      "left" : "if (model.getIdentifier() == null || model.getIdentifier().trim().isEmpty())",
      "right" : "if (model.getIdentifier() == null || model.getIdentifier().trim().isEmpty())",
      "info" : "IfStatement[5125-5284]:IfStatement[6954-7113]"
    }, {
      "left" : "throw new GuacamoleClientException(\"The username must not be blank.\");",
      "right" : "throw new GuacamoleClientException(\"The username must not be blank.\");",
      "info" : "ThrowStatement[5214-5284]:ThrowStatement[7043-7113]"
    }, {
      "left" : "Collection<UserModel> existing = userMapper.select(Collections.singleton(model.getIdentifier()));",
      "right" : "Collection<UserModel> existing = userMapper.select(Collections.singleton(model.getIdentifier()));",
      "info" : "VariableDeclarationStatement[5343-5440]:VariableDeclarationStatement[7172-7269]"
    }, {
      "left" : "if (!existing.isEmpty())",
      "right" : "if (!existing.isEmpty())",
      "info" : "IfStatement[5449-5579]:IfStatement[7278-7408]"
    }, {
      "left" : "throw new GuacamoleClientException(\"User \\\"\" + model.getIdentifier() + \"\\\" already exists.\");",
      "right" : "throw new GuacamoleClientException(\"User \\\"\" + model.getIdentifier() + \"\\\" already exists.\");",
      "info" : "ThrowStatement[5486-5579]:ThrowStatement[7315-7408]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5592-5601]:MarkerAnnotation[7421-7430]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5606-5615]:Modifier[7435-7444]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5616-5620]:PrimitiveType[7445-7449]"
    }, {
      "left" : "beforeUpdate",
      "right" : "beforeUpdate",
      "info" : "SimpleName[5621-5633]:SimpleName[7450-7462]"
    }, {
      "left" : "AuthenticatedUser user",
      "right" : "AuthenticatedUser user",
      "info" : "SingleVariableDeclaration[5634-5656]:SingleVariableDeclaration[7463-7485]"
    }, {
      "left" : "UserModel model",
      "right" : "UserModel model",
      "info" : "SingleVariableDeclaration[5670-5685]:SingleVariableDeclaration[7499-7514]"
    }, {
      "left" : "GuacamoleException",
      "right" : "GuacamoleException",
      "info" : "SimpleType[5694-5712]:SimpleType[7523-7541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5713-6406]:Block[7542-8235]"
    }, {
      "left" : "super.beforeUpdate(user, model);",
      "right" : "super.beforeUpdate(user, model);",
      "info" : "ExpressionStatement[5724-5756]:ExpressionStatement[7553-7585]"
    }, {
      "left" : "if (model.getIdentifier() == null || model.getIdentifier().trim().isEmpty())",
      "right" : "if (model.getIdentifier() == null || model.getIdentifier().trim().isEmpty())",
      "info" : "IfStatement[5812-5971]:IfStatement[7641-7800]"
    }, {
      "left" : "throw new GuacamoleClientException(\"The username must not be blank.\");",
      "right" : "throw new GuacamoleClientException(\"The username must not be blank.\");",
      "info" : "ThrowStatement[5901-5971]:ThrowStatement[7730-7800]"
    }, {
      "left" : "UserModel existing = userMapper.selectOne(model.getIdentifier());",
      "right" : "UserModel existing = userMapper.selectOne(model.getIdentifier());",
      "info" : "VariableDeclarationStatement[6045-6110]:VariableDeclarationStatement[7874-7939]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[6119-6391]:IfStatement[7948-8220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6141-6391]:Block[7970-8220]"
    }, {
      "left" : "if (!existing.getObjectID().equals(model.getObjectID()))",
      "right" : "if (!existing.getObjectID().equals(model.getObjectID()))",
      "info" : "IfStatement[6202-6368]:IfStatement[8031-8197]"
    }, {
      "left" : "throw new GuacamoleClientException(\"User \\\"\" + model.getIdentifier() + \"\\\" already exists.\");",
      "right" : "throw new GuacamoleClientException(\"User \\\"\" + model.getIdentifier() + \"\\\" already exists.\");",
      "info" : "ThrowStatement[6275-6368]:ThrowStatement[8104-8197]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6412-6421]:MarkerAnnotation[8241-8250]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6426-6435]:Modifier[8255-8264]"
    }, {
      "left" : "Collection<ObjectPermissionModel>",
      "right" : "Collection<ObjectPermissionModel>",
      "info" : "ParameterizedType[6436-6469]:ParameterizedType[8265-8298]"
    }, {
      "left" : "getImplicitPermissions",
      "right" : "getImplicitPermissions",
      "info" : "SimpleName[6478-6500]:SimpleName[8307-8329]"
    }, {
      "left" : "AuthenticatedUser user",
      "right" : "AuthenticatedUser user",
      "info" : "SingleVariableDeclaration[6501-6523]:SingleVariableDeclaration[8330-8352]"
    }, {
      "left" : "UserModel model",
      "right" : "UserModel model",
      "info" : "SingleVariableDeclaration[6525-6540]:SingleVariableDeclaration[8354-8369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6542-7393]:Block[8371-9222]"
    }, {
      "left" : "Collection<ObjectPermissionModel> implicitPermissions = super.getImplicitPermissions(user, model);",
      "right" : "Collection<ObjectPermissionModel> implicitPermissions = super.getImplicitPermissions(user, model);",
      "info" : "VariableDeclarationStatement[6617-6715]:VariableDeclarationStatement[8446-8544]"
    }, {
      "left" : "for (ObjectPermission.Type permissionType : IMPLICIT_USER_PERMISSIONS)",
      "right" : "for (ObjectPermission.Type permissionType : IMPLICIT_USER_PERMISSIONS)",
      "info" : "EnhancedForStatement[6787-7342]:EnhancedForStatement[8616-9171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6858-7342]:Block[8687-9171]"
    }, {
      "left" : "ObjectPermissionModel permissionModel = new ObjectPermissionModel();",
      "right" : "ObjectPermissionModel permissionModel = new ObjectPermissionModel();",
      "info" : "VariableDeclarationStatement[6885-6953]:VariableDeclarationStatement[8714-8782]"
    }, {
      "left" : "permissionModel.setUserID(model.getObjectID());",
      "right" : "permissionModel.setUserID(model.getObjectID());",
      "info" : "ExpressionStatement[6966-7013]:ExpressionStatement[8795-8842]"
    }, {
      "left" : "permissionModel.setUsername(model.getIdentifier());",
      "right" : "permissionModel.setUsername(model.getIdentifier());",
      "info" : "ExpressionStatement[7026-7077]:ExpressionStatement[8855-8906]"
    }, {
      "left" : "permissionModel.setType(permissionType);",
      "right" : "permissionModel.setType(permissionType);",
      "info" : "ExpressionStatement[7090-7130]:ExpressionStatement[8919-8959]"
    }, {
      "left" : "permissionModel.setObjectIdentifier(model.getIdentifier());",
      "right" : "permissionModel.setObjectIdentifier(model.getIdentifier());",
      "info" : "ExpressionStatement[7143-7202]:ExpressionStatement[8972-9031]"
    }, {
      "left" : "implicitPermissions.add(permissionModel);",
      "right" : "implicitPermissions.add(permissionModel);",
      "info" : "ExpressionStatement[7278-7319]:ExpressionStatement[9107-9148]"
    }, {
      "left" : "return implicitPermissions;",
      "right" : "return implicitPermissions;",
      "info" : "ReturnStatement[7360-7387]:ReturnStatement[9189-9216]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7407-7416]:MarkerAnnotation[9236-9245]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7421-7430]:Modifier[9250-9259]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7431-7435]:PrimitiveType[9260-9264]"
    }, {
      "left" : "beforeDelete",
      "right" : "beforeDelete",
      "info" : "SimpleName[7436-7448]:SimpleName[9265-9277]"
    }, {
      "left" : "AuthenticatedUser user",
      "right" : "AuthenticatedUser user",
      "info" : "SingleVariableDeclaration[7449-7471]:SingleVariableDeclaration[9278-9300]"
    }, {
      "left" : "String identifier",
      "right" : "String identifier",
      "info" : "SingleVariableDeclaration[7473-7490]:SingleVariableDeclaration[9302-9319]"
    }, {
      "left" : "GuacamoleException",
      "right" : "GuacamoleException",
      "info" : "SimpleType[7499-7517]:SimpleType[9328-9346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7518-7783]:Block[9347-9612]"
    }, {
      "left" : "super.beforeDelete(user, identifier);",
      "right" : "super.beforeDelete(user, identifier);",
      "info" : "ExpressionStatement[7529-7566]:ExpressionStatement[9358-9395]"
    }, {
      "left" : "if (identifier.equals(user.getUser().getIdentifier()))",
      "right" : "if (identifier.equals(user.getUser().getIdentifier()))",
      "info" : "IfStatement[7627-7776]:IfStatement[9456-9605]"
    }, {
      "left" : "throw new GuacamoleUnsupportedException(\"Deleting your own user is not allowed.\");",
      "right" : "throw new GuacamoleUnsupportedException(\"Deleting your own user is not allowed.\");",
      "info" : "ThrowStatement[7694-7776]:ThrowStatement[9523-9605]"
    }, {
      "left" : "ModeledUser",
      "right" : "ModeledUser",
      "info" : "SimpleType[8122-8133]:SimpleType[10226-10237]"
    }, {
      "left" : "Credentials credentials",
      "right" : "Credentials credentials",
      "info" : "SingleVariableDeclaration[8147-8170]:SingleVariableDeclaration[10251-10274]"
    }, {
      "left" : "String username = credentials.getUsername();",
      "right" : "String username = credentials.getUsername();",
      "info" : "VariableDeclarationStatement[8220-8264]:VariableDeclarationStatement[10362-10406]"
    }, {
      "left" : "String password = credentials.getPassword();",
      "right" : "String password = credentials.getPassword();",
      "info" : "VariableDeclarationStatement[8273-8317]:VariableDeclarationStatement[10415-10459]"
    }, {
      "left" : "UserModel userModel = userMapper.selectOne(username);",
      "right" : "UserModel userModel = userMapper.selectOne(username);",
      "info" : "VariableDeclarationStatement[8395-8448]:VariableDeclarationStatement[10537-10590]"
    }, {
      "left" : "if (userModel == null)",
      "right" : "if (userModel == null)",
      "info" : "IfStatement[8457-8504]:IfStatement[10599-10646]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8492-8504]:ReturnStatement[10634-10646]"
    }, {
      "left" : "byte[] hash = encryptionService.createPasswordHash(password, userModel.getPasswordSalt());",
      "right" : "byte[] hash = encryptionService.createPasswordHash(password, userModel.getPasswordSalt());",
      "info" : "VariableDeclarationStatement[8577-8667]:VariableDeclarationStatement[10825-10915]"
    }, {
      "left" : "if (Arrays.equals(hash, userModel.getPasswordHash()))",
      "right" : "if (!Arrays.equals(hash, userModel.getPasswordHash()))",
      "info" : "IfStatement[8676-8976]:IfStatement[10924-11003]"
    }, {
      "left" : "Arrays.equals(hash, userModel.getPasswordHash())",
      "right" : "Arrays.equals(hash, userModel.getPasswordHash())",
      "info" : "MethodInvocation[8680-8728]:MethodInvocation[10929-10977]"
    }, {
      "left" : "ModeledUser user = getObjectInstance(null, userModel);",
      "right" : "ModeledUser user = getObjectInstance(null, userModel);",
      "info" : "VariableDeclarationStatement[8811-8865]:VariableDeclarationStatement[11082-11136]"
    }, {
      "left" : "user.setCurrentUser(new AuthenticatedUser(user, credentials));",
      "right" : "user.setCurrentUser(new AuthenticatedUser(user, credentials));",
      "info" : "ExpressionStatement[8878-8940]:ExpressionStatement[11145-11207]"
    }, {
      "left" : "return user;",
      "right" : "return user;",
      "info" : "ReturnStatement[8953-8965]:ReturnStatement[12869-12881]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9037-9049]:ReturnStatement[10991-11003]"
    } ]
  },
  "interFileMappings" : {
    "Moved from File: extensions/guacamole-auth-jdbc/modules/guacamole-auth-jdbc-base/src/main/java/org/glyptodon/guacamole/auth/jdbc/user/UserContextService.java" : {
      "matchedElements" : [
 {
        "left" : "private static final Logger logger = LoggerFactory.getLogger(UserService.class);",
        "right" : "private static final Logger logger = LoggerFactory.getLogger(UserService.class);",
        "info" : "FieldDeclaration[1992-2118]:FieldDeclaration[2893-3019]"
      }, {
        "left" : "private static final String NEW_PASSWORD_PARAMETER = \"new-password\";",
        "right" : "private static final String NEW_PASSWORD_PARAMETER = \"new-password\";",
        "info" : "FieldDeclaration[2364-2571]:FieldDeclaration[3296-3503]"
      }, {
        "left" : "private static final Field NEW_PASSWORD = new Field(NEW_PASSWORD_PARAMETER, \"New password\", Field.Type.PASSWORD);",
        "right" : "private static final Field NEW_PASSWORD = new Field(NEW_PASSWORD_PARAMETER, \"New password\", Field.Type.PASSWORD);",
        "info" : "FieldDeclaration[2577-2811]:FieldDeclaration[3509-3743]"
      }, {
        "left" : "private static final String CONFIRM_NEW_PASSWORD_PARAMETER = \"confirm-new-password\";",
        "right" : "private static final String CONFIRM_NEW_PASSWORD_PARAMETER = \"confirm-new-password\";",
        "info" : "FieldDeclaration[2817-3053]:FieldDeclaration[3749-3985]"
      }, {
        "left" : "private static final Field CONFIRM_NEW_PASSWORD = new Field(CONFIRM_NEW_PASSWORD_PARAMETER, \"Confirm new password\", Field.Type.PASSWORD);",
        "right" : "private static final Field CONFIRM_NEW_PASSWORD = new Field(CONFIRM_NEW_PASSWORD_PARAMETER, \"Confirm new password\", Field.Type.PASSWORD);",
        "info" : "FieldDeclaration[3059-3330]:FieldDeclaration[3991-4262]"
      }, {
        "left" : "private static final CredentialsInfo EXPIRED_PASSWORD = new CredentialsInfo(Arrays.asList(\n        CredentialsInfo.USERNAME,\n        CredentialsInfo.PASSWORD,\n        NEW_PASSWORD,\n        CONFIRM_NEW_PASSWORD\n    ));",
        "right" : "private static final CredentialsInfo EXPIRED_PASSWORD = new CredentialsInfo(Arrays.asList(\n        CredentialsInfo.USERNAME,\n        CredentialsInfo.PASSWORD,\n        NEW_PASSWORD,\n        CONFIRM_NEW_PASSWORD\n    ));",
        "info" : "FieldDeclaration[3336-3749]:FieldDeclaration[4268-4681]"
      }, {
        "left" : "public org.glyptodon.guacamole.net.auth.UserContext\n        getUserContext(Credentials credentials)\n                throws GuacamoleException",
        "right" : "public ModeledUser retrieveUser(Credentials credentials)\n            throws GuacamoleException",
        "info" : "MethodDeclaration[3755-6655]:MethodDeclaration[9618-12888]"
      } ],
      "mappings" : [
 {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[4689-6504]:Block[10314-12888]"
      }, {
        "left" : "if (user.getModel().isExpired())",
        "right" : "if (userModel.isExpired())",
        "info" : "IfStatement[4758-6283]:IfStatement[11267-12818]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[4791-6283]:Block[11294-12818]"
      }, {
        "left" : "HttpServletRequest request = credentials.getRequest();",
        "right" : "HttpServletRequest request = credentials.getRequest();",
        "info" : "VariableDeclarationStatement[4865-4919]:VariableDeclarationStatement[11360-11414]"
      }, {
        "left" : "String newPassword = request.getParameter(NEW_PASSWORD_PARAMETER);",
        "right" : "String newPassword = request.getParameter(NEW_PASSWORD_PARAMETER);",
        "info" : "VariableDeclarationStatement[4936-5002]:VariableDeclarationStatement[11427-11493]"
      }, {
        "left" : "String confirmNewPassword = request.getParameter(CONFIRM_NEW_PASSWORD_PARAMETER);",
        "right" : "String confirmNewPassword = request.getParameter(CONFIRM_NEW_PASSWORD_PARAMETER);",
        "info" : "VariableDeclarationStatement[5019-5100]:VariableDeclarationStatement[11506-11587]"
      }, {
        "left" : "if (newPassword == null || confirmNewPassword == null)",
        "right" : "if (newPassword == null || confirmNewPassword == null)",
        "info" : "IfStatement[5180-5482]:IfStatement[11659-11948]"
      }, {
        "left" : "{}",
        "right" : "{}",
        "info" : "Block[5235-5482]:Block[11714-11948]"
      }, {
        "left" : "logger.info(\"The password of user \\\"{}\\\" has expired and must be reset.\", user.getIdentifier());",
        "right" : "logger.info(\"The password of user \\\"{}\\\" has expired and must be reset.\", username);",
        "info" : "ExpressionStatement[5257-5353]:ExpressionStatement[11732-11816]"
      }, {
        "left" : "throw new GuacamoleInsufficientCredentialsException(\"Password expired\", EXPIRED_PASSWORD);",
        "right" : "throw new GuacamoleInsufficientCredentialsException(\"LOGIN.INFO_PASSWORD_EXPIRED\", EXPIRED_PASSWORD);",
        "info" : "ThrowStatement[5374-5464]:ThrowStatement[11833-11934]"
      }, {
        "left" : "if (newPassword.equals(credentials.getPassword()))",
        "right" : "if (newPassword.equals(credentials.getPassword()))",
        "info" : "IfStatement[5568-5703]:IfStatement[12026-12157]"
      }, {
        "left" : "throw new GuacamoleClientException(\"LOGIN.ERROR_PASSWORD_SAME\");",
        "right" : "throw new GuacamoleClientException(\"LOGIN.ERROR_PASSWORD_SAME\");",
        "info" : "ThrowStatement[5639-5703]:ThrowStatement[12093-12157]"
      }, {
        "left" : "if (newPassword.isEmpty())",
        "right" : "if (newPassword.isEmpty())",
        "info" : "IfStatement[5771-5883]:IfStatement[12217-12325]"
      }, {
        "left" : "throw new GuacamoleClientException(\"LOGIN.ERROR_PASSWORD_BLANK\");",
        "right" : "throw new GuacamoleClientException(\"LOGIN.ERROR_PASSWORD_BLANK\");",
        "info" : "ThrowStatement[5818-5883]:ThrowStatement[12260-12325]"
      }, {
        "left" : "if (!newPassword.equals(confirmNewPassword))",
        "right" : "if (!newPassword.equals(confirmNewPassword))",
        "info" : "IfStatement[5974-6107]:IfStatement[12408-12537]"
      }, {
        "left" : "throw new GuacamoleClientException(\"LOGIN.ERROR_PASSWORD_MISMATCH\");",
        "right" : "throw new GuacamoleClientException(\"LOGIN.ERROR_PASSWORD_MISMATCH\");",
        "info" : "ThrowStatement[6039-6107]:ThrowStatement[12469-12537]"
      }, {
        "left" : "logger.info(\"Resetting expired password of user \\\"{}\\\".\", user.getIdentifier());",
        "right" : "user.setPassword(newPassword);",
        "info" : "ExpressionStatement[6188-6268]:ExpressionStatement[12649-12679]"
      } ]
    }
  }
}