{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Equality",
      "right" : "Equality",
      "info" : "TypeDeclaration[287-1257]:TypeDeclaration[287-1309]"
    }, {
      "left" : "public static boolean areEqual(Object o1, Object o2)",
      "right" : "public static boolean areEqual(Object o1, Object o2)",
      "info" : "MethodDeclaration[318-624]:MethodDeclaration[318-676]"
    }, {
      "left" : "static boolean areArraysEqual(Object o1, Object o2)",
      "right" : "static boolean areArraysEqual(Object o1, Object o2)",
      "info" : "MethodDeclaration[632-788]:MethodDeclaration[684-840]"
    }, {
      "left" : "static boolean areArrayLengthsEqual(Object o1, Object o2)",
      "right" : "static boolean areArrayLengthsEqual(Object o1, Object o2)",
      "info" : "MethodDeclaration[796-922]:MethodDeclaration[848-974]"
    }, {
      "left" : "static boolean areArrayElementsEqual(Object o1, Object o2)",
      "right" : "static boolean areArrayElementsEqual(Object o1, Object o2)",
      "info" : "MethodDeclaration[930-1165]:MethodDeclaration[982-1217]"
    }, {
      "left" : "static boolean isArray(Object o)",
      "right" : "static boolean isArray(Object o)",
      "info" : "MethodDeclaration[1173-1254]:MethodDeclaration[1225-1306]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[287-293]:Modifier[287-293]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[294-299]:TYPE_DECLARATION_KIND[294-299]"
    }, {
      "left" : "Equality",
      "right" : "Equality",
      "info" : "SimpleName[300-308]:SimpleName[300-308]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[318-324]:Modifier[318-324]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[325-331]:Modifier[325-331]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[332-339]:PrimitiveType[332-339]"
    }, {
      "left" : "areEqual",
      "right" : "areEqual",
      "info" : "SimpleName[340-348]:SimpleName[340-348]"
    }, {
      "left" : "Object o1",
      "right" : "Object o1",
      "info" : "SingleVariableDeclaration[349-358]:SingleVariableDeclaration[349-358]"
    }, {
      "left" : "Object o2",
      "right" : "Object o2",
      "info" : "SingleVariableDeclaration[360-369]:SingleVariableDeclaration[360-369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[371-624]:Block[371-676]"
    }, {
      "left" : "if (o1 == null || o2 == null)",
      "right" : "if (o1 == null || o2 == null)",
      "info" : "IfStatement[382-617]:IfStatement[434-669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[412-470]:Block[464-522]"
    }, {
      "left" : "return o1 == null && o2 == null;",
      "right" : "return o1 == null && o2 == null;",
      "info" : "ReturnStatement[427-459]:ReturnStatement[479-511]"
    }, {
      "left" : "if (isArray(o1))",
      "right" : "if (isArray(o1))",
      "info" : "IfStatement[476-617]:IfStatement[528-669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[493-564]:Block[545-616]"
    }, {
      "left" : "return isArray(o2) && areArraysEqual(o1, o2);",
      "right" : "return isArray(o2) && areArraysEqual(o1, o2);",
      "info" : "ReturnStatement[508-553]:ReturnStatement[560-605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[570-617]:Block[622-669]"
    }, {
      "left" : "return o1.equals(o2);",
      "right" : "return o1.equals(o2);",
      "info" : "ReturnStatement[585-606]:ReturnStatement[637-658]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[632-638]:Modifier[684-690]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[639-646]:PrimitiveType[691-698]"
    }, {
      "left" : "areArraysEqual",
      "right" : "areArraysEqual",
      "info" : "SimpleName[647-661]:SimpleName[699-713]"
    }, {
      "left" : "Object o1",
      "right" : "Object o1",
      "info" : "SingleVariableDeclaration[662-671]:SingleVariableDeclaration[714-723]"
    }, {
      "left" : "Object o2",
      "right" : "Object o2",
      "info" : "SingleVariableDeclaration[673-682]:SingleVariableDeclaration[725-734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[684-788]:Block[736-840]"
    }, {
      "left" : "return areArrayLengthsEqual(o1, o2)\r\n                && areArrayElementsEqual(o1, o2);",
      "right" : "return areArrayLengthsEqual(o1, o2)\r\n                && areArrayElementsEqual(o1, o2);",
      "info" : "ReturnStatement[695-781]:ReturnStatement[747-833]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[796-802]:Modifier[848-854]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[803-810]:PrimitiveType[855-862]"
    }, {
      "left" : "areArrayLengthsEqual",
      "right" : "areArrayLengthsEqual",
      "info" : "SimpleName[811-831]:SimpleName[863-883]"
    }, {
      "left" : "Object o1",
      "right" : "Object o1",
      "info" : "SingleVariableDeclaration[832-841]:SingleVariableDeclaration[884-893]"
    }, {
      "left" : "Object o2",
      "right" : "Object o2",
      "info" : "SingleVariableDeclaration[843-852]:SingleVariableDeclaration[895-904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[854-922]:Block[906-974]"
    }, {
      "left" : "return Array.getLength(o1) == Array.getLength(o2);",
      "right" : "return Array.getLength(o1) == Array.getLength(o2);",
      "info" : "ReturnStatement[865-915]:ReturnStatement[917-967]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[930-936]:Modifier[982-988]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[937-944]:PrimitiveType[989-996]"
    }, {
      "left" : "areArrayElementsEqual",
      "right" : "areArrayElementsEqual",
      "info" : "SimpleName[945-966]:SimpleName[997-1018]"
    }, {
      "left" : "Object o1",
      "right" : "Object o1",
      "info" : "SingleVariableDeclaration[967-976]:SingleVariableDeclaration[1019-1028]"
    }, {
      "left" : "Object o2",
      "right" : "Object o2",
      "info" : "SingleVariableDeclaration[978-987]:SingleVariableDeclaration[1030-1039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[989-1165]:Block[1041-1217]"
    }, {
      "left" : "for (int i = 0; i < Array.getLength(o1); i++)",
      "right" : "for (int i = 0; i < Array.getLength(o1); i++)",
      "info" : "ForStatement[1000-1136]:ForStatement[1052-1188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1046-1136]:Block[1098-1188]"
    }, {
      "left" : "if (!areEqual(Array.get(o1, i), Array.get(o2, i)))",
      "right" : "if (!areEqual(Array.get(o1, i), Array.get(o2, i)))",
      "info" : "IfStatement[1061-1125]:IfStatement[1113-1177]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1112-1125]:ReturnStatement[1164-1177]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1146-1158]:ReturnStatement[1198-1210]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1173-1179]:Modifier[1225-1231]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1180-1187]:PrimitiveType[1232-1239]"
    }, {
      "left" : "isArray",
      "right" : "isArray",
      "info" : "SimpleName[1188-1195]:SimpleName[1240-1247]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[1196-1204]:SingleVariableDeclaration[1248-1256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1206-1254]:Block[1258-1306]"
    }, {
      "left" : "return o.getClass().isArray();",
      "right" : "return o.getClass().isArray();",
      "info" : "ReturnStatement[1217-1247]:ReturnStatement[1269-1299]"
    } ]
  },
  "interFileMappings" : { }
}