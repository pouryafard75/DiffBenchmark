{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SimpleRegression",
      "right" : "SimpleRegression",
      "info" : "TypeDeclaration[872-18429]:TypeDeclaration[872-18443]"
    }, {
      "left" : "private static final long serialVersionUID = -3004689053607543335L;",
      "right" : "private static final long serialVersionUID = -3004689053607543335L;",
      "info" : "FieldDeclaration[2274-2384]:FieldDeclaration[2274-2384]"
    }, {
      "left" : "private double sumX = 0d;",
      "right" : "private double sumX = 0d;",
      "info" : "FieldDeclaration[2390-2442]:FieldDeclaration[2390-2442]"
    }, {
      "left" : "private double sumXX = 0d;",
      "right" : "private double sumXX = 0d;",
      "info" : "FieldDeclaration[2448-2544]:FieldDeclaration[2448-2544]"
    }, {
      "left" : "private double sumY = 0d;",
      "right" : "private double sumY = 0d;",
      "info" : "FieldDeclaration[2550-2602]:FieldDeclaration[2550-2602]"
    }, {
      "left" : "private double sumYY = 0d;",
      "right" : "private double sumYY = 0d;",
      "info" : "FieldDeclaration[2608-2704]:FieldDeclaration[2608-2704]"
    }, {
      "left" : "private double sumXY = 0d;",
      "right" : "private double sumXY = 0d;",
      "info" : "FieldDeclaration[2710-2763]:FieldDeclaration[2710-2763]"
    }, {
      "left" : "private long n = 0;",
      "right" : "private long n = 0;",
      "info" : "FieldDeclaration[2769-2822]:FieldDeclaration[2769-2822]"
    }, {
      "left" : "private double xbar = 0;",
      "right" : "private double xbar = 0;",
      "info" : "FieldDeclaration[2828-2919]:FieldDeclaration[2828-2919]"
    }, {
      "left" : "private double ybar = 0;",
      "right" : "private double ybar = 0;",
      "info" : "FieldDeclaration[2925-3016]:FieldDeclaration[2925-3016]"
    }, {
      "left" : "public SimpleRegression()",
      "right" : "public SimpleRegression()",
      "info" : "MethodDeclaration[3104-3219]:MethodDeclaration[3104-3219]"
    }, {
      "left" : "public void addData(double x, double y)",
      "right" : "public void addData(double x, double y)",
      "info" : "MethodDeclaration[3229-4299]:MethodDeclaration[3229-4299]"
    }, {
      "left" : "public void addData(double[][] data)",
      "right" : "public void addData(double[][] data)",
      "info" : "MethodDeclaration[4305-5041]:MethodDeclaration[4305-5041]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[5047-5242]:MethodDeclaration[5047-5242]"
    }, {
      "left" : "public long getN()",
      "right" : "public long getN()",
      "info" : "MethodDeclaration[5248-5454]:MethodDeclaration[5248-5454]"
    }, {
      "left" : "public double predict(double x)",
      "right" : "public double predict(double x)",
      "info" : "MethodDeclaration[5460-6271]:MethodDeclaration[5460-6271]"
    }, {
      "left" : "public double getIntercept()",
      "right" : "public double getIntercept()",
      "info" : "MethodDeclaration[6277-7018]:MethodDeclaration[6277-7018]"
    }, {
      "left" : "public double getSlope()",
      "right" : "public double getSlope()",
      "info" : "MethodDeclaration[7024-7926]:MethodDeclaration[7024-7926]"
    }, {
      "left" : "public double getSumSquaredErrors()",
      "right" : "public double getSumSquaredErrors()",
      "info" : "MethodDeclaration[7932-9261]:MethodDeclaration[7932-9275]"
    }, {
      "left" : "public double getTotalSumSquares()",
      "right" : "public double getTotalSumSquares()",
      "info" : "MethodDeclaration[9267-9736]:MethodDeclaration[9281-9750]"
    }, {
      "left" : "public double getRegressionSumSquares()",
      "right" : "public double getRegressionSumSquares()",
      "info" : "MethodDeclaration[9742-10516]:MethodDeclaration[9756-10530]"
    }, {
      "left" : "public double getMeanSquareError()",
      "right" : "public double getMeanSquareError()",
      "info" : "MethodDeclaration[10522-11058]:MethodDeclaration[10536-11072]"
    }, {
      "left" : "public double getR()",
      "right" : "public double getR()",
      "info" : "MethodDeclaration[11064-11796]:MethodDeclaration[11078-11810]"
    }, {
      "left" : "public double getRSquare()",
      "right" : "public double getRSquare()",
      "info" : "MethodDeclaration[11802-12444]:MethodDeclaration[11816-12458]"
    }, {
      "left" : "public double getInterceptStdErr()",
      "right" : "public double getInterceptStdErr()",
      "info" : "MethodDeclaration[12450-13024]:MethodDeclaration[12464-13038]"
    }, {
      "left" : "public double getSlopeStdErr()",
      "right" : "public double getSlopeStdErr()",
      "info" : "MethodDeclaration[13030-13527]:MethodDeclaration[13044-13541]"
    }, {
      "left" : "public double getSlopeConfidenceInterval() throws MathException",
      "right" : "public double getSlopeConfidenceInterval() throws MathException",
      "info" : "MethodDeclaration[13533-14590]:MethodDeclaration[13547-14604]"
    }, {
      "left" : "public double getSlopeConfidenceInterval(double alpha)\n        throws MathException",
      "right" : "public double getSlopeConfidenceInterval(double alpha)\n        throws MathException",
      "info" : "MethodDeclaration[14596-16208]:MethodDeclaration[14610-16222]"
    }, {
      "left" : "public double getSignificance() throws MathException",
      "right" : "public double getSignificance() throws MathException",
      "info" : "MethodDeclaration[16214-17422]:MethodDeclaration[16228-17436]"
    }, {
      "left" : "private double getIntercept(double slope)",
      "right" : "private double getIntercept(double slope)",
      "info" : "MethodDeclaration[17508-17869]:MethodDeclaration[17522-17883]"
    }, {
      "left" : "private double getRegressionSumSquares(double slope)",
      "right" : "private double getRegressionSumSquares(double slope)",
      "info" : "MethodDeclaration[17875-18135]:MethodDeclaration[17889-18149]"
    }, {
      "left" : "private TDistribution getTDistribution()",
      "right" : "private TDistribution getTDistribution()",
      "info" : "MethodDeclaration[18141-18427]:MethodDeclaration[18155-18441]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2213-2219]:Modifier[2213-2219]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2220-2225]:TYPE_DECLARATION_KIND[2220-2225]"
    }, {
      "left" : "SimpleRegression",
      "right" : "SimpleRegression",
      "info" : "SimpleName[2226-2242]:SimpleName[2226-2242]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[2254-2266]:SimpleType[2254-2266]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3169-3175]:Modifier[3169-3175]"
    }, {
      "left" : "SimpleRegression",
      "right" : "SimpleRegression",
      "info" : "SimpleName[3176-3192]:SimpleName[3176-3192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3195-3219]:Block[3195-3219]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[3205-3213]:SuperConstructorInvocation[3205-3213]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3758-3764]:Modifier[3758-3764]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3765-3769]:PrimitiveType[3765-3769]"
    }, {
      "left" : "addData",
      "right" : "addData",
      "info" : "SimpleName[3770-3777]:SimpleName[3770-3777]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[3778-3786]:SingleVariableDeclaration[3778-3786]"
    }, {
      "left" : "double y",
      "right" : "double y",
      "info" : "SingleVariableDeclaration[3788-3796]:SingleVariableDeclaration[3788-3796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3798-4299]:Block[3798-4299]"
    }, {
      "left" : "if (n == 0)",
      "right" : "if (n == 0)",
      "info" : "IfStatement[3808-4242]:IfStatement[3808-4242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3820-3875]:Block[3820-3875]"
    }, {
      "left" : "xbar = x;",
      "right" : "xbar = x;",
      "info" : "ExpressionStatement[3834-3843]:ExpressionStatement[3834-3843]"
    }, {
      "left" : "ybar = y;",
      "right" : "ybar = y;",
      "info" : "ExpressionStatement[3856-3865]:ExpressionStatement[3856-3865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3881-4242]:Block[3881-4242]"
    }, {
      "left" : "double dx = x - xbar;",
      "right" : "double dx = x - xbar;",
      "info" : "VariableDeclarationStatement[3895-3916]:VariableDeclarationStatement[3895-3916]"
    }, {
      "left" : "double dy = y - ybar;",
      "right" : "double dy = y - ybar;",
      "info" : "VariableDeclarationStatement[3929-3950]:VariableDeclarationStatement[3929-3950]"
    }, {
      "left" : "sumXX += dx * dx * (double) n / (double) (n + 1.0);",
      "right" : "sumXX += dx * dx * (double) n / (double) (n + 1.0);",
      "info" : "ExpressionStatement[3963-4014]:ExpressionStatement[3963-4014]"
    }, {
      "left" : "sumYY += dy * dy * (double) n / (double) (n + 1.0);",
      "right" : "sumYY += dy * dy * (double) n / (double) (n + 1.0);",
      "info" : "ExpressionStatement[4027-4078]:ExpressionStatement[4027-4078]"
    }, {
      "left" : "sumXY += dx * dy * (double) n / (double) (n + 1.0);",
      "right" : "sumXY += dx * dy * (double) n / (double) (n + 1.0);",
      "info" : "ExpressionStatement[4091-4142]:ExpressionStatement[4091-4142]"
    }, {
      "left" : "xbar += dx / (double) (n + 1.0);",
      "right" : "xbar += dx / (double) (n + 1.0);",
      "info" : "ExpressionStatement[4155-4187]:ExpressionStatement[4155-4187]"
    }, {
      "left" : "ybar += dy / (double) (n + 1.0);",
      "right" : "ybar += dy / (double) (n + 1.0);",
      "info" : "ExpressionStatement[4200-4232]:ExpressionStatement[4200-4232]"
    }, {
      "left" : "sumX += x;",
      "right" : "sumX += x;",
      "info" : "ExpressionStatement[4251-4261]:ExpressionStatement[4251-4261]"
    }, {
      "left" : "sumY += y;",
      "right" : "sumY += y;",
      "info" : "ExpressionStatement[4270-4280]:ExpressionStatement[4270-4280]"
    }, {
      "left" : "n++;",
      "right" : "n++;",
      "info" : "ExpressionStatement[4289-4293]:ExpressionStatement[4289-4293]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4894-4900]:Modifier[4894-4900]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4901-4905]:PrimitiveType[4901-4905]"
    }, {
      "left" : "addData",
      "right" : "addData",
      "info" : "SimpleName[4906-4913]:SimpleName[4906-4913]"
    }, {
      "left" : "double[][] data",
      "right" : "double[][] data",
      "info" : "SingleVariableDeclaration[4914-4929]:SingleVariableDeclaration[4914-4929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4931-5041]:Block[4931-5041]"
    }, {
      "left" : "for (int i = 0; i < data.length; i++)",
      "right" : "for (int i = 0; i < data.length; i++)",
      "info" : "ForStatement[4941-5035]:ForStatement[4941-5035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4979-5035]:Block[4979-5035]"
    }, {
      "left" : "addData(data[i][0], data[i][1]);",
      "right" : "addData(data[i][0], data[i][1]);",
      "info" : "ExpressionStatement[4993-5025]:ExpressionStatement[4993-5025]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5102-5108]:Modifier[5102-5108]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5109-5113]:PrimitiveType[5109-5113]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[5114-5119]:SimpleName[5114-5119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5122-5242]:Block[5122-5242]"
    }, {
      "left" : "sumX = 0d;",
      "right" : "sumX = 0d;",
      "info" : "ExpressionStatement[5132-5142]:ExpressionStatement[5132-5142]"
    }, {
      "left" : "sumXX = 0d;",
      "right" : "sumXX = 0d;",
      "info" : "ExpressionStatement[5151-5162]:ExpressionStatement[5151-5162]"
    }, {
      "left" : "sumY = 0d;",
      "right" : "sumY = 0d;",
      "info" : "ExpressionStatement[5171-5181]:ExpressionStatement[5171-5181]"
    }, {
      "left" : "sumYY = 0d;",
      "right" : "sumYY = 0d;",
      "info" : "ExpressionStatement[5190-5201]:ExpressionStatement[5190-5201]"
    }, {
      "left" : "sumXY = 0d;",
      "right" : "sumXY = 0d;",
      "info" : "ExpressionStatement[5210-5221]:ExpressionStatement[5210-5221]"
    }, {
      "left" : "n = 0;",
      "right" : "n = 0;",
      "info" : "ExpressionStatement[5230-5236]:ExpressionStatement[5230-5236]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5410-5416]:Modifier[5410-5416]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[5417-5421]:PrimitiveType[5417-5421]"
    }, {
      "left" : "getN",
      "right" : "getN",
      "info" : "SimpleName[5422-5426]:SimpleName[5422-5426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5429-5454]:Block[5429-5454]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[5439-5448]:ReturnStatement[5439-5448]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6158-6164]:Modifier[6158-6164]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6165-6171]:PrimitiveType[6165-6171]"
    }, {
      "left" : "predict",
      "right" : "predict",
      "info" : "SimpleName[6172-6179]:SimpleName[6172-6179]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[6180-6188]:SingleVariableDeclaration[6180-6188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6190-6271]:Block[6190-6271]"
    }, {
      "left" : "double b1 = getSlope();",
      "right" : "double b1 = getSlope();",
      "info" : "VariableDeclarationStatement[6200-6223]:VariableDeclarationStatement[6200-6223]"
    }, {
      "left" : "return getIntercept(b1) + b1 * x;",
      "right" : "return getIntercept(b1) + b1 * x;",
      "info" : "ReturnStatement[6232-6265]:ReturnStatement[6232-6265]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6941-6947]:Modifier[6941-6947]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6948-6954]:PrimitiveType[6948-6954]"
    }, {
      "left" : "getIntercept",
      "right" : "getIntercept",
      "info" : "SimpleName[6955-6967]:SimpleName[6955-6967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6970-7018]:Block[6970-7018]"
    }, {
      "left" : "return getIntercept(getSlope());",
      "right" : "return getIntercept(getSlope());",
      "info" : "ReturnStatement[6980-7012]:ReturnStatement[6980-7012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7659-7665]:Modifier[7659-7665]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[7666-7672]:PrimitiveType[7666-7672]"
    }, {
      "left" : "getSlope",
      "right" : "getSlope",
      "info" : "SimpleName[7673-7681]:SimpleName[7673-7681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7684-7926]:Block[7684-7926]"
    }, {
      "left" : "if (n < 2)",
      "right" : "if (n < 2)",
      "info" : "IfStatement[7694-7766]:IfStatement[7694-7766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7705-7766]:Block[7705-7766]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[7719-7737]:ReturnStatement[7719-7737]"
    }, {
      "left" : "if (Math.abs(sumXX) < 10 * Double.MIN_VALUE)",
      "right" : "if (Math.abs(sumXX) < 10 * Double.MIN_VALUE)",
      "info" : "IfStatement[7775-7890]:IfStatement[7775-7890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7820-7890]:Block[7820-7890]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[7834-7852]:ReturnStatement[7834-7852]"
    }, {
      "left" : "return sumXY / sumXX;",
      "right" : "return sumXY / sumXX;",
      "info" : "ReturnStatement[7899-7920]:ReturnStatement[7899-7920]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9172-9178]:Modifier[9172-9178]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[9179-9185]:PrimitiveType[9179-9185]"
    }, {
      "left" : "getSumSquaredErrors",
      "right" : "getSumSquaredErrors",
      "info" : "SimpleName[9186-9205]:SimpleName[9186-9205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9208-9261]:Block[9208-9275]"
    }, {
      "left" : "return sumYY - sumXY * sumXY / sumXX;",
      "right" : "return Math.max(0d, sumYY - sumXY * sumXY / sumXX);",
      "info" : "ReturnStatement[9218-9255]:ReturnStatement[9218-9269]"
    }, {
      "left" : "sumYY - sumXY * sumXY / sumXX",
      "right" : "sumYY - sumXY * sumXY / sumXX",
      "info" : "InfixExpression[9225-9254]:InfixExpression[9238-9267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9610-9616]:Modifier[9624-9630]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[9617-9623]:PrimitiveType[9631-9637]"
    }, {
      "left" : "getTotalSumSquares",
      "right" : "getTotalSumSquares",
      "info" : "SimpleName[9624-9642]:SimpleName[9638-9656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9645-9736]:Block[9659-9750]"
    }, {
      "left" : "if (n < 2)",
      "right" : "if (n < 2)",
      "info" : "IfStatement[9655-9708]:IfStatement[9669-9722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9666-9708]:Block[9680-9722]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[9680-9698]:ReturnStatement[9694-9712]"
    }, {
      "left" : "return sumYY;",
      "right" : "return sumYY;",
      "info" : "ReturnStatement[9717-9730]:ReturnStatement[9731-9744]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10417-10423]:Modifier[10431-10437]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[10424-10430]:PrimitiveType[10438-10444]"
    }, {
      "left" : "getRegressionSumSquares",
      "right" : "getRegressionSumSquares",
      "info" : "SimpleName[10431-10454]:SimpleName[10445-10468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10457-10516]:Block[10471-10530]"
    }, {
      "left" : "return getRegressionSumSquares(getSlope());",
      "right" : "return getRegressionSumSquares(getSlope());",
      "info" : "ReturnStatement[10467-10510]:ReturnStatement[10481-10524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10897-10903]:Modifier[10911-10917]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[10904-10910]:PrimitiveType[10918-10924]"
    }, {
      "left" : "getMeanSquareError",
      "right" : "getMeanSquareError",
      "info" : "SimpleName[10911-10929]:SimpleName[10925-10943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10932-11058]:Block[10946-11072]"
    }, {
      "left" : "if (n < 3)",
      "right" : "if (n < 3)",
      "info" : "IfStatement[10942-10995]:IfStatement[10956-11009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10953-10995]:Block[10967-11009]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[10967-10985]:ReturnStatement[10981-10999]"
    }, {
      "left" : "return getSumSquaredErrors() / (double) (n - 2);",
      "right" : "return getSumSquaredErrors() / (double) (n - 2);",
      "info" : "ReturnStatement[11004-11052]:ReturnStatement[11018-11066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11602-11608]:Modifier[11616-11622]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[11609-11615]:PrimitiveType[11623-11629]"
    }, {
      "left" : "getR",
      "right" : "getR",
      "info" : "SimpleName[11616-11620]:SimpleName[11630-11634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11623-11796]:Block[11637-11810]"
    }, {
      "left" : "double b1 = getSlope();",
      "right" : "double b1 = getSlope();",
      "info" : "VariableDeclarationStatement[11633-11656]:VariableDeclarationStatement[11647-11670]"
    }, {
      "left" : "double result = Math.sqrt(getRSquare());",
      "right" : "double result = Math.sqrt(getRSquare());",
      "info" : "VariableDeclarationStatement[11665-11705]:VariableDeclarationStatement[11679-11719]"
    }, {
      "left" : "if (b1 < 0)",
      "right" : "if (b1 < 0)",
      "info" : "IfStatement[11714-11767]:IfStatement[11728-11781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11726-11767]:Block[11740-11781]"
    }, {
      "left" : "result = -result;",
      "right" : "result = -result;",
      "info" : "ExpressionStatement[11740-11757]:ExpressionStatement[11754-11771]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11776-11790]:ReturnStatement[11790-11804]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12312-12318]:Modifier[12326-12332]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[12319-12325]:PrimitiveType[12333-12339]"
    }, {
      "left" : "getRSquare",
      "right" : "getRSquare",
      "info" : "SimpleName[12326-12336]:SimpleName[12340-12350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12339-12444]:Block[12353-12458]"
    }, {
      "left" : "double ssto = getTotalSumSquares();",
      "right" : "double ssto = getTotalSumSquares();",
      "info" : "VariableDeclarationStatement[12349-12384]:VariableDeclarationStatement[12363-12398]"
    }, {
      "left" : "return (ssto - getSumSquaredErrors()) / ssto;",
      "right" : "return (ssto - getSumSquaredErrors()) / ssto;",
      "info" : "ReturnStatement[12393-12438]:ReturnStatement[12407-12452]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12875-12881]:Modifier[12889-12895]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[12882-12888]:PrimitiveType[12896-12902]"
    }, {
      "left" : "getInterceptStdErr",
      "right" : "getInterceptStdErr",
      "info" : "SimpleName[12889-12907]:SimpleName[12903-12921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12910-13024]:Block[12924-13038]"
    }, {
      "left" : "return Math.sqrt(\n            getMeanSquareError() * ((1d / (double) n) + (xbar * xbar) / sumXX));",
      "right" : "return Math.sqrt(\n            getMeanSquareError() * ((1d / (double) n) + (xbar * xbar) / sumXX));",
      "info" : "ReturnStatement[12920-13018]:ReturnStatement[12934-13032]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13433-13439]:Modifier[13447-13453]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[13440-13446]:PrimitiveType[13454-13460]"
    }, {
      "left" : "getSlopeStdErr",
      "right" : "getSlopeStdErr",
      "info" : "SimpleName[13447-13461]:SimpleName[13461-13475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13464-13527]:Block[13478-13541]"
    }, {
      "left" : "return Math.sqrt(getMeanSquareError() / sumXX);",
      "right" : "return Math.sqrt(getMeanSquareError() / sumXX);",
      "info" : "ReturnStatement[13474-13521]:ReturnStatement[13488-13535]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14469-14475]:Modifier[14483-14489]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[14476-14482]:PrimitiveType[14490-14496]"
    }, {
      "left" : "getSlopeConfidenceInterval",
      "right" : "getSlopeConfidenceInterval",
      "info" : "SimpleName[14483-14509]:SimpleName[14497-14523]"
    }, {
      "left" : "MathException",
      "right" : "MathException",
      "info" : "SimpleType[14519-14532]:SimpleType[14533-14546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14533-14590]:Block[14547-14604]"
    }, {
      "left" : "return getSlopeConfidenceInterval(0.05d);",
      "right" : "return getSlopeConfidenceInterval(0.05d);",
      "info" : "ReturnStatement[14543-14584]:ReturnStatement[14557-14598]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15905-15911]:Modifier[15919-15925]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[15912-15918]:PrimitiveType[15926-15932]"
    }, {
      "left" : "getSlopeConfidenceInterval",
      "right" : "getSlopeConfidenceInterval",
      "info" : "SimpleName[15919-15945]:SimpleName[15933-15959]"
    }, {
      "left" : "double alpha",
      "right" : "double alpha",
      "info" : "SingleVariableDeclaration[15946-15958]:SingleVariableDeclaration[15960-15972]"
    }, {
      "left" : "MathException",
      "right" : "MathException",
      "info" : "SimpleType[15975-15988]:SimpleType[15989-16002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15989-16208]:Block[16003-16222]"
    }, {
      "left" : "if (alpha >= 1 || alpha <= 0)",
      "right" : "if (alpha >= 1 || alpha <= 0)",
      "info" : "IfStatement[15999-16090]:IfStatement[16013-16104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16029-16090]:Block[16043-16104]"
    }, {
      "left" : "throw new IllegalArgumentException();",
      "right" : "throw new IllegalArgumentException();",
      "info" : "ThrowStatement[16043-16080]:ThrowStatement[16057-16094]"
    }, {
      "left" : "return getSlopeStdErr() *\n            getTDistribution().inverseCumulativeProbability(1d - alpha / 2d);",
      "right" : "return getSlopeStdErr() *\n            getTDistribution().inverseCumulativeProbability(1d - alpha / 2d);",
      "info" : "ReturnStatement[16099-16202]:ReturnStatement[16113-16216]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17231-17237]:Modifier[17245-17251]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[17238-17244]:PrimitiveType[17252-17258]"
    }, {
      "left" : "getSignificance",
      "right" : "getSignificance",
      "info" : "SimpleName[17245-17260]:SimpleName[17259-17274]"
    }, {
      "left" : "MathException",
      "right" : "MathException",
      "info" : "SimpleType[17270-17283]:SimpleType[17284-17297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17284-17422]:Block[17298-17436]"
    }, {
      "left" : "return 2d* (1.0 - getTDistribution().cumulativeProbability(\n                    Math.abs(getSlope()) / getSlopeStdErr()));",
      "right" : "return 2d* (1.0 - getTDistribution().cumulativeProbability(\n                    Math.abs(getSlope()) / getSlopeStdErr()));",
      "info" : "ReturnStatement[17294-17416]:ReturnStatement[17308-17430]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17767-17774]:Modifier[17781-17788]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[17775-17781]:PrimitiveType[17789-17795]"
    }, {
      "left" : "getIntercept",
      "right" : "getIntercept",
      "info" : "SimpleName[17782-17794]:SimpleName[17796-17808]"
    }, {
      "left" : "double slope",
      "right" : "double slope",
      "info" : "SingleVariableDeclaration[17795-17807]:SingleVariableDeclaration[17809-17821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17809-17869]:Block[17823-17883]"
    }, {
      "left" : "return (sumY - slope * sumX) / ((double) n);",
      "right" : "return (sumY - slope * sumX) / ((double) n);",
      "info" : "ReturnStatement[17819-17863]:ReturnStatement[17833-17877]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18037-18044]:Modifier[18051-18058]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[18045-18051]:PrimitiveType[18059-18065]"
    }, {
      "left" : "getRegressionSumSquares",
      "right" : "getRegressionSumSquares",
      "info" : "SimpleName[18052-18075]:SimpleName[18066-18089]"
    }, {
      "left" : "double slope",
      "right" : "double slope",
      "info" : "SingleVariableDeclaration[18076-18088]:SingleVariableDeclaration[18090-18102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18090-18135]:Block[18104-18149]"
    }, {
      "left" : "return slope * slope * sumXX;",
      "right" : "return slope * slope * sumXX;",
      "info" : "ReturnStatement[18100-18129]:ReturnStatement[18114-18143]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18302-18309]:Modifier[18316-18323]"
    }, {
      "left" : "TDistribution",
      "right" : "TDistribution",
      "info" : "SimpleType[18310-18323]:SimpleType[18324-18337]"
    }, {
      "left" : "getTDistribution",
      "right" : "getTDistribution",
      "info" : "SimpleName[18324-18340]:SimpleName[18338-18354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18343-18427]:Block[18357-18441]"
    }, {
      "left" : "return DistributionFactory.newInstance().createTDistribution(n - 2);",
      "right" : "return DistributionFactory.newInstance().createTDistribution(n - 2);",
      "info" : "ReturnStatement[18353-18421]:ReturnStatement[18367-18435]"
    } ]
  },
  "interFileMappings" : { }
}