{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[471-1552]:MethodDeclaration[471-1552]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[1585-2447]:MethodDeclaration[1585-2447]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[2457-2638]:MethodDeclaration[2457-2638]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[2671-3796]:MethodDeclaration[2671-3796]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[3825-6783]:MethodDeclaration[3825-6783]"
    }, {
      "left" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "info" : "MethodDeclaration[6793-6930]:MethodDeclaration[6793-6930]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[6967-8040]:MethodDeclaration[6967-8040]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[8050-8237]:MethodDeclaration[8050-8237]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[8269-10048]:MethodDeclaration[8269-10048]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[10058-10234]:MethodDeclaration[10058-10234]"
    }, {
      "left" : "boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean anyOtherEndTag(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[38456-39316]:MethodDeclaration[38537-39397]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[39406-40052]:MethodDeclaration[39487-40133]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[40082-43971]:MethodDeclaration[40163-44052]"
    }, {
      "left" : "boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[43981-44462]:MethodDeclaration[44062-44543]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[44496-46283]:MethodDeclaration[44577-46364]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[46315-47877]:MethodDeclaration[46396-47958]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[47913-49751]:MethodDeclaration[47994-49832]"
    }, {
      "left" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, TreeBuilder tb)",
      "info" : "MethodDeclaration[49761-50007]:MethodDeclaration[49842-50088]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[50041-52135]:MethodDeclaration[50122-52216]"
    }, {
      "left" : "private boolean exitTableBody(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean exitTableBody(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[52145-52584]:MethodDeclaration[52226-52665]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[52594-52706]:MethodDeclaration[52675-52787]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[52734-54806]:MethodDeclaration[52815-54887]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[54816-54928]:MethodDeclaration[54897-55009]"
    }, {
      "left" : "private boolean handleMissingTr(Token t, TreeBuilder tb)",
      "right" : "private boolean handleMissingTr(Token t, TreeBuilder tb)",
      "info" : "MethodDeclaration[54938-55174]:MethodDeclaration[55019-55255]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[55203-57145]:MethodDeclaration[55284-57226]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[57155-57266]:MethodDeclaration[57236-57347]"
    }, {
      "left" : "private void closeCell(HtmlTreeBuilder tb)",
      "right" : "private void closeCell(HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[57276-57500]:MethodDeclaration[57357-57581]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[57531-61547]:MethodDeclaration[57612-61628]"
    }, {
      "left" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "right" : "private boolean anythingElse(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[61557-61680]:MethodDeclaration[61638-61761]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[61718-62511]:MethodDeclaration[61799-62592]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[62543-63552]:MethodDeclaration[62624-63633]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[63585-65382]:MethodDeclaration[63666-65463]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[65418-66350]:MethodDeclaration[65499-66431]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[66387-66929]:MethodDeclaration[66468-67010]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[66970-67602]:MethodDeclaration[67051-67683]"
    }, {
      "left" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "right" : "boolean process(Token t, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[67639-67778]:MethodDeclaration[67720-67859]"
    }, {
      "left" : "private static String nullString = String.valueOf('\\u0000');",
      "right" : "private static String nullString = String.valueOf('\\u0000');",
      "info" : "FieldDeclaration[67791-67851]:FieldDeclaration[67872-67932]"
    }, {
      "left" : "abstract boolean process(Token t, HtmlTreeBuilder tb);",
      "right" : "abstract boolean process(Token t, HtmlTreeBuilder tb);",
      "info" : "MethodDeclaration[67857-67911]:MethodDeclaration[67938-67992]"
    }, {
      "left" : "private static boolean isWhitespace(Token t)",
      "right" : "private static boolean isWhitespace(Token t)",
      "info" : "MethodDeclaration[67917-68124]:MethodDeclaration[67998-68205]"
    }, {
      "left" : "private static boolean isWhitespace(String data)",
      "right" : "private static boolean isWhitespace(String data)",
      "info" : "MethodDeclaration[68130-68453]:MethodDeclaration[68211-68534]"
    }, {
      "left" : "private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "right" : "private static void handleRcData(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[68459-68690]:MethodDeclaration[68540-68771]"
    }, {
      "left" : "private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "right" : "private static void handleRawtext(Token.StartTag startTag, HtmlTreeBuilder tb)",
      "info" : "MethodDeclaration[68696-68929]:MethodDeclaration[68777-69010]"
    }, {
      "left" : "Constants",
      "right" : "Constants",
      "info" : "TypeDeclaration[69221-71504]:TypeDeclaration[69302-71585]"
    }, {
      "left" : "static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};",
      "right" : "static final String[] InBodyStartToHead = new String[]{\"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"};",
      "info" : "FieldDeclaration[69260-69413]:FieldDeclaration[69341-69494]"
    }, {
      "left" : "static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n            \"p\", \"section\", \"summary\", \"ul\"};",
      "right" : "static final String[] InBodyStartPClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"center\", \"details\", \"dir\", \"div\", \"dl\",\n            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"menu\", \"nav\", \"ol\",\n            \"p\", \"section\", \"summary\", \"ul\"};",
      "info" : "FieldDeclaration[69422-69709]:FieldDeclaration[69503-69790]"
    }, {
      "left" : "static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};",
      "right" : "static final String[] Headings = new String[]{\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"};",
      "info" : "FieldDeclaration[69718-69800]:FieldDeclaration[69799-69881]"
    }, {
      "left" : "static final String[] InBodyStartPreListing = new String[]{\"listing\", \"pre\"};",
      "right" : "static final String[] InBodyStartPreListing = new String[]{\"listing\", \"pre\"};",
      "info" : "FieldDeclaration[69809-69886]:FieldDeclaration[69890-69967]"
    }, {
      "left" : "static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};",
      "right" : "static final String[] InBodyStartLiBreakers = new String[]{\"address\", \"div\", \"p\"};",
      "info" : "FieldDeclaration[69895-69977]:FieldDeclaration[69976-70058]"
    }, {
      "left" : "static final String[] DdDt = new String[]{\"dd\", \"dt\"};",
      "right" : "static final String[] DdDt = new String[]{\"dd\", \"dt\"};",
      "info" : "FieldDeclaration[69986-70040]:FieldDeclaration[70067-70121]"
    }, {
      "left" : "static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "right" : "static final String[] Formatters = new String[]{\"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "info" : "FieldDeclaration[70049-70181]:FieldDeclaration[70130-70262]"
    }, {
      "left" : "static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};",
      "right" : "static final String[] InBodyStartApplets = new String[]{\"applet\", \"marquee\", \"object\"};",
      "info" : "FieldDeclaration[70190-70277]:FieldDeclaration[70271-70358]"
    }, {
      "left" : "static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};",
      "right" : "static final String[] InBodyStartEmptyFormatters = new String[]{\"area\", \"br\", \"embed\", \"img\", \"keygen\", \"wbr\"};",
      "info" : "FieldDeclaration[70286-70397]:FieldDeclaration[70367-70478]"
    }, {
      "left" : "static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};",
      "right" : "static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};",
      "info" : "FieldDeclaration[70406-70488]:FieldDeclaration[70487-70569]"
    }, {
      "left" : "static final String[] InBodyStartInputAttribs = new String[]{\"action\", \"name\", \"prompt\"};",
      "right" : "static final String[] InBodyStartInputAttribs = new String[]{\"action\", \"name\", \"prompt\"};",
      "info" : "FieldDeclaration[70497-70586]:FieldDeclaration[70578-70667]"
    }, {
      "left" : "static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};",
      "right" : "static final String[] InBodyStartOptions = new String[]{\"optgroup\", \"option\"};",
      "info" : "FieldDeclaration[70595-70673]:FieldDeclaration[70676-70754]"
    }, {
      "left" : "static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};",
      "right" : "static final String[] InBodyStartRuby = new String[]{\"rp\", \"rt\"};",
      "info" : "FieldDeclaration[70682-70747]:FieldDeclaration[70763-70828]"
    }, {
      "left" : "static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "right" : "static final String[] InBodyStartDrop = new String[]{\"caption\", \"col\", \"colgroup\", \"frame\", \"head\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[70756-70901]:FieldDeclaration[70837-70982]"
    }, {
      "left" : "static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n            \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};",
      "right" : "static final String[] InBodyEndClosers = new String[]{\"address\", \"article\", \"aside\", \"blockquote\", \"button\", \"center\", \"details\", \"dir\", \"div\",\n            \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"header\", \"hgroup\", \"listing\", \"menu\",\n            \"nav\", \"ol\", \"pre\", \"section\", \"summary\", \"ul\"};",
      "info" : "FieldDeclaration[70910-71217]:FieldDeclaration[70991-71298]"
    }, {
      "left" : "static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "right" : "static final String[] InBodyEndAdoptionFormatters = new String[]{\"a\", \"b\", \"big\", \"code\", \"em\", \"font\", \"i\", \"nobr\", \"s\", \"small\", \"strike\", \"strong\", \"tt\", \"u\"};",
      "info" : "FieldDeclaration[71226-71388]:FieldDeclaration[71307-71469]"
    }, {
      "left" : "static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "right" : "static final String[] InBodyEndTableFosters = new String[]{\"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"};",
      "info" : "FieldDeclaration[71397-71498]:FieldDeclaration[71478-71579]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[516-1552]:Block[516-1552]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[530-1517]:IfStatement[530-1517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[551-616]:Block[551-616]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[569-581]:ReturnStatement[569-581]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[622-1517]:IfStatement[622-1517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[641-698]:Block[641-698]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[659-684]:ExpressionStatement[659-684]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[704-1517]:IfStatement[704-1517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[723-1346]:Block[723-1346]"
    }, {
      "left" : "Token.Doctype d = t.asDoctype();",
      "right" : "Token.Doctype d = t.asDoctype();",
      "info" : "VariableDeclarationStatement[863-895]:VariableDeclarationStatement[863-895]"
    }, {
      "left" : "DocumentType doctype = new DocumentType(\n                    tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier());",
      "right" : "DocumentType doctype = new DocumentType(\n                    tb.settings.normalizeTag(d.getName()), d.getPublicIdentifier(), d.getSystemIdentifier());",
      "info" : "VariableDeclarationStatement[912-1062]:VariableDeclarationStatement[912-1062]"
    }, {
      "left" : "doctype.setPubSysKey(d.getPubSysKey());",
      "right" : "doctype.setPubSysKey(d.getPubSysKey());",
      "info" : "ExpressionStatement[1079-1118]:ExpressionStatement[1079-1118]"
    }, {
      "left" : "tb.getDocument().appendChild(doctype);",
      "right" : "tb.getDocument().appendChild(doctype);",
      "info" : "ExpressionStatement[1135-1173]:ExpressionStatement[1135-1173]"
    }, {
      "left" : "if (d.isForceQuirks())",
      "right" : "if (d.isForceQuirks())",
      "info" : "IfStatement[1190-1289]:IfStatement[1190-1289]"
    }, {
      "left" : "tb.getDocument().quirksMode(Document.QuirksMode.quirks);",
      "right" : "tb.getDocument().quirksMode(Document.QuirksMode.quirks);",
      "info" : "ExpressionStatement[1233-1289]:ExpressionStatement[1233-1289]"
    }, {
      "left" : "tb.transition(BeforeHtml);",
      "right" : "tb.transition(BeforeHtml);",
      "info" : "ExpressionStatement[1306-1332]:ExpressionStatement[1306-1332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1352-1517]:Block[1352-1517]"
    }, {
      "left" : "tb.transition(BeforeHtml);",
      "right" : "tb.transition(BeforeHtml);",
      "info" : "ExpressionStatement[1419-1445]:ExpressionStatement[1419-1445]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[1462-1483]:ReturnStatement[1462-1483]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1530-1542]:ReturnStatement[1530-1542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1630-2447]:Block[1630-2447]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[1644-2412]:IfStatement[1644-2412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1663-1740]:Block[1663-1740]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[1681-1696]:ExpressionStatement[1681-1696]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1713-1726]:ReturnStatement[1713-1726]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[1746-2412]:IfStatement[1746-2412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1765-1822]:Block[1765-1822]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[1783-1808]:ExpressionStatement[1783-1808]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[1828-2412]:IfStatement[1828-2412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1849-1914]:Block[1849-1914]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1867-1879]:ReturnStatement[1867-1879]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[1920-2412]:IfStatement[1920-2412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1986-2087]:Block[1986-2087]"
    }, {
      "left" : "tb.insert(t.asStartTag());",
      "right" : "tb.insert(t.asStartTag());",
      "info" : "ExpressionStatement[2004-2030]:ExpressionStatement[2004-2030]"
    }, {
      "left" : "tb.transition(BeforeHead);",
      "right" : "tb.transition(BeforeHead);",
      "info" : "ExpressionStatement[2047-2073]:ExpressionStatement[2047-2073]"
    }, {
      "left" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "right" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "info" : "IfStatement[2093-2412]:IfStatement[2093-2412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2187-2246]:Block[2187-2246]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[2205-2232]:ReturnStatement[2205-2232]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[2252-2412]:IfStatement[2252-2412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2270-2347]:Block[2270-2347]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[2288-2303]:ExpressionStatement[2288-2303]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2320-2333]:ReturnStatement[2320-2333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2353-2412]:Block[2353-2412]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[2371-2398]:ReturnStatement[2371-2398]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2425-2437]:ReturnStatement[2425-2437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2515-2638]:Block[2515-2638]"
    }, {
      "left" : "tb.insertStartTag(\"html\");",
      "right" : "tb.insertStartTag(\"html\");",
      "info" : "ExpressionStatement[2529-2555]:ExpressionStatement[2529-2555]"
    }, {
      "left" : "tb.transition(BeforeHead);",
      "right" : "tb.transition(BeforeHead);",
      "info" : "ExpressionStatement[2568-2594]:ExpressionStatement[2568-2594]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[2607-2628]:ReturnStatement[2607-2628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2716-3796]:Block[2716-3796]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[2730-3761]:IfStatement[2730-3761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2751-2795]:Block[2751-2795]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2769-2781]:ReturnStatement[2769-2781]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[2801-3761]:IfStatement[2801-3761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2820-2877]:Block[2820-2877]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[2838-2863]:ExpressionStatement[2838-2863]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[2883-3761]:IfStatement[2883-3761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2902-2979]:Block[2902-2979]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[2920-2935]:ExpressionStatement[2920-2935]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[2952-2965]:ReturnStatement[2952-2965]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[2985-3761]:IfStatement[2985-3761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3051-3135]:Block[3051-3135]"
    }, {
      "left" : "return InBody.process(t, tb);",
      "right" : "return InBody.process(t, tb);",
      "info" : "ReturnStatement[3069-3098]:ReturnStatement[3069-3098]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"head\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"head\"))",
      "info" : "IfStatement[3141-3761]:IfStatement[3141-3761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3207-3360]:Block[3207-3360]"
    }, {
      "left" : "Element head = tb.insert(t.asStartTag());",
      "right" : "Element head = tb.insert(t.asStartTag());",
      "info" : "VariableDeclarationStatement[3225-3266]:VariableDeclarationStatement[3225-3266]"
    }, {
      "left" : "tb.setHeadElement(head);",
      "right" : "tb.setHeadElement(head);",
      "info" : "ExpressionStatement[3283-3307]:ExpressionStatement[3283-3307]"
    }, {
      "left" : "tb.transition(InHead);",
      "right" : "tb.transition(InHead);",
      "info" : "ExpressionStatement[3324-3346]:ExpressionStatement[3324-3346]"
    }, {
      "left" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "right" : "if (t.isEndTag() && (StringUtil.in(t.asEndTag().normalName(), \"head\", \"body\", \"html\", \"br\")))",
      "info" : "IfStatement[3366-3761]:IfStatement[3366-3761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3460-3557]:Block[3460-3557]"
    }, {
      "left" : "tb.processStartTag(\"head\");",
      "right" : "tb.processStartTag(\"head\");",
      "info" : "ExpressionStatement[3478-3505]:ExpressionStatement[3478-3505]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[3522-3543]:ReturnStatement[3522-3543]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[3563-3761]:IfStatement[3563-3761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3581-3658]:Block[3581-3658]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[3599-3614]:ExpressionStatement[3599-3614]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3631-3644]:ReturnStatement[3631-3644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3664-3761]:Block[3664-3761]"
    }, {
      "left" : "tb.processStartTag(\"head\");",
      "right" : "tb.processStartTag(\"head\");",
      "info" : "ExpressionStatement[3682-3709]:ExpressionStatement[3682-3709]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[3726-3747]:ReturnStatement[3726-3747]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3774-3786]:ReturnStatement[3774-3786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3870-6783]:Block[3870-6783]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[3884-3993]:IfStatement[3884-3993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3905-3993]:Block[3905-3993]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[3923-3950]:ExpressionStatement[3923-3950]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3967-3979]:ReturnStatement[3967-3979]"
    }, {
      "left" : "switch (t.type) {\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    return false;\n                case StartTag:\n                    Token.StartTag start = t.asStartTag();\n                    String name = start.normalName();\n                    if (name.equals(\"html\")) {\n                        return InBody.process(t, tb);\n                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\")) {\n                        Element el = tb.insertEmpty(start);\n                        // jsoup special: update base the frist time it is seen\n                        if (name.equals(\"base\") && el.hasAttr(\"href\"))\n                            tb.maybeSetBaseUri(el);\n                    } else if (name.equals(\"meta\")) {\n                        Element meta = tb.insertEmpty(start);\n                        // todo: charset switches\n                    } else if (name.equals(\"title\")) {\n                        handleRcData(start, tb);\n                    } else if (StringUtil.in(name, \"noframes\", \"style\")) {\n                        handleRawtext(start, tb);\n                    } else if (name.equals(\"noscript\")) {\n                        // else if noscript && scripting flag = true: rawtext (jsoup doesn't run script, to handle as noscript)\n                        tb.insert(start);\n                        tb.transition(InHeadNoscript);\n                    } else if (name.equals(\"script\")) {\n                        // skips some script rules as won't execute them\n\n                        tb.tokeniser.transition(TokeniserState.ScriptData);\n                        tb.markInsertionMode();\n                        tb.transition(Text);\n                        tb.insert(start);\n                    } else if (name.equals(\"head\")) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag end = t.asEndTag();\n                    name = end.normalName();\n                    if (name.equals(\"head\")) {\n                        tb.pop();\n                        tb.transition(AfterHead);\n                    } else if (StringUtil.in(name, \"body\", \"html\", \"br\")) {\n                        return anythingElse(t, tb);\n                    } else {\n                        tb.error(this);\n                        return false;\n                    }\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "right" : "switch (t.type) {\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    return false;\n                case StartTag:\n                    Token.StartTag start = t.asStartTag();\n                    String name = start.normalName();\n                    if (name.equals(\"html\")) {\n                        return InBody.process(t, tb);\n                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\")) {\n                        Element el = tb.insertEmpty(start);\n                        // jsoup special: update base the frist time it is seen\n                        if (name.equals(\"base\") && el.hasAttr(\"href\"))\n                            tb.maybeSetBaseUri(el);\n                    } else if (name.equals(\"meta\")) {\n                        Element meta = tb.insertEmpty(start);\n                        // todo: charset switches\n                    } else if (name.equals(\"title\")) {\n                        handleRcData(start, tb);\n                    } else if (StringUtil.in(name, \"noframes\", \"style\")) {\n                        handleRawtext(start, tb);\n                    } else if (name.equals(\"noscript\")) {\n                        // else if noscript && scripting flag = true: rawtext (jsoup doesn't run script, to handle as noscript)\n                        tb.insert(start);\n                        tb.transition(InHeadNoscript);\n                    } else if (name.equals(\"script\")) {\n                        // skips some script rules as won't execute them\n\n                        tb.tokeniser.transition(TokeniserState.ScriptData);\n                        tb.markInsertionMode();\n                        tb.transition(Text);\n                        tb.insert(start);\n                    } else if (name.equals(\"head\")) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag end = t.asEndTag();\n                    name = end.normalName();\n                    if (name.equals(\"head\")) {\n                        tb.pop();\n                        tb.transition(AfterHead);\n                    } else if (StringUtil.in(name, \"body\", \"html\", \"br\")) {\n                        return anythingElse(t, tb);\n                    } else {\n                        tb.error(this);\n                        return false;\n                    }\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "info" : "SwitchStatement[4006-6748]:SwitchStatement[4006-6748]"
    }, {
      "left" : "case Comment:",
      "right" : "case Comment:",
      "info" : "SwitchCase[4040-4053]:SwitchCase[4040-4053]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[4074-4099]:ExpressionStatement[4074-4099]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[4120-4126]:BreakStatement[4120-4126]"
    }, {
      "left" : "case Doctype:",
      "right" : "case Doctype:",
      "info" : "SwitchCase[4143-4156]:SwitchCase[4143-4156]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[4177-4192]:ExpressionStatement[4177-4192]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4213-4226]:ReturnStatement[4213-4226]"
    }, {
      "left" : "case StartTag:",
      "right" : "case StartTag:",
      "info" : "SwitchCase[4243-4257]:SwitchCase[4243-4257]"
    }, {
      "left" : "Token.StartTag start = t.asStartTag();",
      "right" : "Token.StartTag start = t.asStartTag();",
      "info" : "VariableDeclarationStatement[4278-4316]:VariableDeclarationStatement[4278-4316]"
    }, {
      "left" : "String name = start.normalName();",
      "right" : "String name = start.normalName();",
      "info" : "VariableDeclarationStatement[4337-4370]:VariableDeclarationStatement[4337-4370]"
    }, {
      "left" : "if (name.equals(\"html\"))",
      "right" : "if (name.equals(\"html\"))",
      "info" : "IfStatement[4391-6092]:IfStatement[4391-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4416-4493]:Block[4416-4493]"
    }, {
      "left" : "return InBody.process(t, tb);",
      "right" : "return InBody.process(t, tb);",
      "info" : "ReturnStatement[4442-4471]:ReturnStatement[4442-4471]"
    }, {
      "left" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\"))",
      "right" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\"))",
      "info" : "IfStatement[4499-6092]:IfStatement[4499-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4574-4860]:Block[4574-4860]"
    }, {
      "left" : "Element el = tb.insertEmpty(start);",
      "right" : "Element el = tb.insertEmpty(start);",
      "info" : "VariableDeclarationStatement[4600-4635]:VariableDeclarationStatement[4600-4635]"
    }, {
      "left" : "if (name.equals(\"base\") && el.hasAttr(\"href\"))",
      "right" : "if (name.equals(\"base\") && el.hasAttr(\"href\"))",
      "info" : "IfStatement[4740-4838]:IfStatement[4740-4838]"
    }, {
      "left" : "tb.maybeSetBaseUri(el);",
      "right" : "tb.maybeSetBaseUri(el);",
      "info" : "ExpressionStatement[4815-4838]:ExpressionStatement[4815-4838]"
    }, {
      "left" : "if (name.equals(\"meta\"))",
      "right" : "if (name.equals(\"meta\"))",
      "info" : "IfStatement[4866-6092]:IfStatement[4866-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4891-5026]:Block[4891-5026]"
    }, {
      "left" : "Element meta = tb.insertEmpty(start);",
      "right" : "Element meta = tb.insertEmpty(start);",
      "info" : "VariableDeclarationStatement[4917-4954]:VariableDeclarationStatement[4917-4954]"
    }, {
      "left" : "if (name.equals(\"title\"))",
      "right" : "if (name.equals(\"title\"))",
      "info" : "IfStatement[5032-6092]:IfStatement[5032-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5058-5130]:Block[5058-5130]"
    }, {
      "left" : "handleRcData(start, tb);",
      "right" : "handleRcData(start, tb);",
      "info" : "ExpressionStatement[5084-5108]:ExpressionStatement[5084-5108]"
    }, {
      "left" : "if (StringUtil.in(name, \"noframes\", \"style\"))",
      "right" : "if (StringUtil.in(name, \"noframes\", \"style\"))",
      "info" : "IfStatement[5136-6092]:IfStatement[5136-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5182-5255]:Block[5182-5255]"
    }, {
      "left" : "handleRawtext(start, tb);",
      "right" : "handleRawtext(start, tb);",
      "info" : "ExpressionStatement[5208-5233]:ExpressionStatement[5208-5233]"
    }, {
      "left" : "if (name.equals(\"noscript\"))",
      "right" : "if (name.equals(\"noscript\"))",
      "info" : "IfStatement[5261-6092]:IfStatement[5261-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5290-5538]:Block[5290-5538]"
    }, {
      "left" : "tb.insert(start);",
      "right" : "tb.insert(start);",
      "info" : "ExpressionStatement[5444-5461]:ExpressionStatement[5444-5461]"
    }, {
      "left" : "tb.transition(InHeadNoscript);",
      "right" : "tb.transition(InHeadNoscript);",
      "info" : "ExpressionStatement[5486-5516]:ExpressionStatement[5486-5516]"
    }, {
      "left" : "if (name.equals(\"script\"))",
      "right" : "if (name.equals(\"script\"))",
      "info" : "IfStatement[5544-6092]:IfStatement[5544-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5571-5879]:Block[5571-5879]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.ScriptData);",
      "right" : "tb.tokeniser.transition(TokeniserState.ScriptData);",
      "info" : "ExpressionStatement[5671-5722]:ExpressionStatement[5671-5722]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[5747-5770]:ExpressionStatement[5747-5770]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[5795-5815]:ExpressionStatement[5795-5815]"
    }, {
      "left" : "tb.insert(start);",
      "right" : "tb.insert(start);",
      "info" : "ExpressionStatement[5840-5857]:ExpressionStatement[5840-5857]"
    }, {
      "left" : "if (name.equals(\"head\"))",
      "right" : "if (name.equals(\"head\"))",
      "info" : "IfStatement[5885-6092]:IfStatement[5885-6092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5910-6011]:Block[5910-6011]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[5936-5951]:ExpressionStatement[5936-5951]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5976-5989]:ReturnStatement[5976-5989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6017-6092]:Block[6017-6092]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[6043-6070]:ReturnStatement[6043-6070]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6113-6119]:BreakStatement[6113-6119]"
    }, {
      "left" : "case EndTag:",
      "right" : "case EndTag:",
      "info" : "SwitchCase[6136-6148]:SwitchCase[6136-6148]"
    }, {
      "left" : "Token.EndTag end = t.asEndTag();",
      "right" : "Token.EndTag end = t.asEndTag();",
      "info" : "VariableDeclarationStatement[6169-6201]:VariableDeclarationStatement[6169-6201]"
    }, {
      "left" : "name = end.normalName();",
      "right" : "name = end.normalName();",
      "info" : "ExpressionStatement[6222-6246]:ExpressionStatement[6222-6246]"
    }, {
      "left" : "if (name.equals(\"head\"))",
      "right" : "if (name.equals(\"head\"))",
      "info" : "IfStatement[6267-6634]:IfStatement[6267-6634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6292-6399]:Block[6292-6399]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[6318-6327]:ExpressionStatement[6318-6327]"
    }, {
      "left" : "tb.transition(AfterHead);",
      "right" : "tb.transition(AfterHead);",
      "info" : "ExpressionStatement[6352-6377]:ExpressionStatement[6352-6377]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"html\", \"br\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"html\", \"br\"))",
      "info" : "IfStatement[6405-6634]:IfStatement[6405-6634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6452-6527]:Block[6452-6527]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[6478-6505]:ReturnStatement[6478-6505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6533-6634]:Block[6533-6634]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[6559-6574]:ExpressionStatement[6559-6574]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6599-6612]:ReturnStatement[6599-6612]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6655-6661]:BreakStatement[6655-6661]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[6678-6686]:SwitchCase[6678-6686]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[6707-6734]:ReturnStatement[6707-6734]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6761-6773]:ReturnStatement[6761-6773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6847-6930]:Block[6847-6930]"
    }, {
      "left" : "tb.processEndTag(\"head\");",
      "right" : "tb.processEndTag(\"head\");",
      "info" : "ExpressionStatement[6861-6886]:ExpressionStatement[6861-6886]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[6899-6920]:ReturnStatement[6899-6920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7012-8040]:Block[7012-8040]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[7026-8005]:IfStatement[7026-8005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7045-7092]:Block[7045-7092]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[7063-7078]:ExpressionStatement[7063-7078]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[7098-8005]:IfStatement[7098-8005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7164-7225]:Block[7164-7225]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[7182-7211]:ReturnStatement[7182-7211]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"noscript\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"noscript\"))",
      "info" : "IfStatement[7231-8005]:IfStatement[7231-8005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7297-7377]:Block[7297-7377]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[7315-7324]:ExpressionStatement[7315-7324]"
    }, {
      "left" : "tb.transition(InHead);",
      "right" : "tb.transition(InHead);",
      "info" : "ExpressionStatement[7341-7363]:ExpressionStatement[7341-7363]"
    }, {
      "left" : "if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),\n                    \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"style\")))",
      "right" : "if (isWhitespace(t) || t.isComment() || (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),\n                    \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"style\")))",
      "info" : "IfStatement[7383-8005]:IfStatement[7383-8005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7567-7628]:Block[7567-7628]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[7585-7614]:ReturnStatement[7585-7614]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"br\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"br\"))",
      "info" : "IfStatement[7634-8005]:IfStatement[7634-8005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7694-7753]:Block[7694-7753]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[7712-7739]:ReturnStatement[7712-7739]"
    }, {
      "left" : "if ((t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"head\", \"noscript\")) || t.isEndTag())",
      "right" : "if ((t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"head\", \"noscript\")) || t.isEndTag())",
      "info" : "IfStatement[7759-8005]:IfStatement[7759-8005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7863-7940]:Block[7863-7940]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[7881-7896]:ExpressionStatement[7881-7896]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7913-7926]:ReturnStatement[7913-7926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7946-8005]:Block[7946-8005]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[7964-7991]:ReturnStatement[7964-7991]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8018-8030]:ReturnStatement[8018-8030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8108-8237]:Block[8108-8237]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[8122-8137]:ExpressionStatement[8122-8137]"
    }, {
      "left" : "tb.insert(new Token.Character().data(t.toString()));",
      "right" : "tb.insert(new Token.Character().data(t.toString()));",
      "info" : "ExpressionStatement[8150-8202]:ExpressionStatement[8150-8202]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8215-8227]:ReturnStatement[8215-8227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8314-10048]:Block[8314-10048]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[8328-10013]:IfStatement[8328-10013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8349-8408]:Block[8349-8408]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[8367-8394]:ExpressionStatement[8367-8394]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[8414-10013]:IfStatement[8414-10013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8433-8490]:Block[8433-8490]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[8451-8476]:ExpressionStatement[8451-8476]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[8496-10013]:IfStatement[8496-10013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8515-8562]:Block[8515-8562]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[8533-8548]:ExpressionStatement[8533-8548]"
    }, {
      "left" : "if (t.isStartTag())",
      "right" : "if (t.isStartTag())",
      "info" : "IfStatement[8568-10013]:IfStatement[8568-10013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8588-9682]:Block[8588-9682]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[8606-8647]:VariableDeclarationStatement[8606-8647]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[8664-8700]:VariableDeclarationStatement[8664-8700]"
    }, {
      "left" : "if (name.equals(\"html\"))",
      "right" : "if (name.equals(\"html\"))",
      "info" : "IfStatement[8717-9668]:IfStatement[8717-9668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8742-8811]:Block[8742-8811]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[8764-8793]:ReturnStatement[8764-8793]"
    }, {
      "left" : "if (name.equals(\"body\"))",
      "right" : "if (name.equals(\"body\"))",
      "info" : "IfStatement[8817-9668]:IfStatement[8817-9668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8842-8987]:Block[8842-8987]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[8864-8884]:ExpressionStatement[8864-8884]"
    }, {
      "left" : "tb.framesetOk(false);",
      "right" : "tb.framesetOk(false);",
      "info" : "ExpressionStatement[8905-8926]:ExpressionStatement[8905-8926]"
    }, {
      "left" : "tb.transition(InBody);",
      "right" : "tb.transition(InBody);",
      "info" : "ExpressionStatement[8947-8969]:ExpressionStatement[8947-8969]"
    }, {
      "left" : "if (name.equals(\"frameset\"))",
      "right" : "if (name.equals(\"frameset\"))",
      "info" : "IfStatement[8993-9668]:IfStatement[8993-9668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9022-9129]:Block[9022-9129]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[9044-9064]:ExpressionStatement[9044-9064]"
    }, {
      "left" : "tb.transition(InFrameset);",
      "right" : "tb.transition(InFrameset);",
      "info" : "ExpressionStatement[9085-9111]:ExpressionStatement[9085-9111]"
    }, {
      "left" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"))",
      "right" : "if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"link\", \"meta\", \"noframes\", \"script\", \"style\", \"title\"))",
      "info" : "IfStatement[9135-9668]:IfStatement[9135-9668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9247-9482]:Block[9247-9482]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[9269-9284]:ExpressionStatement[9269-9284]"
    }, {
      "left" : "Element head = tb.getHeadElement();",
      "right" : "Element head = tb.getHeadElement();",
      "info" : "VariableDeclarationStatement[9305-9340]:VariableDeclarationStatement[9305-9340]"
    }, {
      "left" : "tb.push(head);",
      "right" : "tb.push(head);",
      "info" : "ExpressionStatement[9361-9375]:ExpressionStatement[9361-9375]"
    }, {
      "left" : "tb.process(t, InHead);",
      "right" : "tb.process(t, InHead);",
      "info" : "ExpressionStatement[9396-9418]:ExpressionStatement[9396-9418]"
    }, {
      "left" : "tb.removeFromStack(head);",
      "right" : "tb.removeFromStack(head);",
      "info" : "ExpressionStatement[9439-9464]:ExpressionStatement[9439-9464]"
    }, {
      "left" : "if (name.equals(\"head\"))",
      "right" : "if (name.equals(\"head\"))",
      "info" : "IfStatement[9488-9668]:IfStatement[9488-9668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9513-9602]:Block[9513-9602]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[9535-9550]:ExpressionStatement[9535-9550]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9571-9584]:ReturnStatement[9571-9584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9608-9668]:Block[9608-9668]"
    }, {
      "left" : "anythingElse(t, tb);",
      "right" : "anythingElse(t, tb);",
      "info" : "ExpressionStatement[9630-9650]:ExpressionStatement[9630-9650]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[9688-10013]:IfStatement[9688-10013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9706-9955]:Block[9706-9955]"
    }, {
      "left" : "if (StringUtil.in(t.asEndTag().normalName(), \"body\", \"html\"))",
      "right" : "if (StringUtil.in(t.asEndTag().normalName(), \"body\", \"html\"))",
      "info" : "IfStatement[9724-9941]:IfStatement[9724-9941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9786-9846]:Block[9786-9846]"
    }, {
      "left" : "anythingElse(t, tb);",
      "right" : "anythingElse(t, tb);",
      "info" : "ExpressionStatement[9808-9828]:ExpressionStatement[9808-9828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9852-9941]:Block[9852-9941]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[9874-9889]:ExpressionStatement[9874-9889]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9910-9923]:ReturnStatement[9910-9923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9961-10013]:Block[9961-10013]"
    }, {
      "left" : "anythingElse(t, tb);",
      "right" : "anythingElse(t, tb);",
      "info" : "ExpressionStatement[9979-9999]:ExpressionStatement[9979-9999]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[10026-10038]:ReturnStatement[10026-10038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10116-10234]:Block[10116-10234]"
    }, {
      "left" : "tb.processStartTag(\"body\");",
      "right" : "tb.processStartTag(\"body\");",
      "info" : "ExpressionStatement[10130-10157]:ExpressionStatement[10130-10157]"
    }, {
      "left" : "tb.framesetOk(true);",
      "right" : "tb.framesetOk(true);",
      "info" : "ExpressionStatement[10170-10190]:ExpressionStatement[10170-10190]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[10203-10224]:ReturnStatement[10203-10224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38508-39316]:Block[38589-39397]"
    }, {
      "left" : "String name = tb.settings.normalizeTag(t.asEndTag().name());",
      "right" : "String name = tb.settings.normalizeTag(t.asEndTag().name());",
      "info" : "VariableDeclarationStatement[38522-38582]:VariableDeclarationStatement[38603-38663]"
    }, {
      "left" : "ArrayList<Element> stack = tb.getStack();",
      "right" : "ArrayList<Element> stack = tb.getStack();",
      "info" : "VariableDeclarationStatement[38639-38680]:VariableDeclarationStatement[38720-38761]"
    }, {
      "left" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
      "right" : "for (int pos = stack.size() -1; pos >= 0; pos--)",
      "info" : "ForStatement[38693-39281]:ForStatement[38774-39362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38742-39281]:Block[38823-39362]"
    }, {
      "left" : "Element node = stack.get(pos);",
      "right" : "Element node = stack.get(pos);",
      "info" : "VariableDeclarationStatement[38760-38790]:VariableDeclarationStatement[38841-38871]"
    }, {
      "left" : "if (node.nodeName().equals(name))",
      "right" : "if (node.nodeName().equals(name))",
      "info" : "IfStatement[38807-39267]:IfStatement[38888-39348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38841-39096]:Block[38922-39177]"
    }, {
      "left" : "tb.generateImpliedEndTags(name);",
      "right" : "tb.generateImpliedEndTags(name);",
      "info" : "ExpressionStatement[38863-38895]:ExpressionStatement[38944-38976]"
    }, {
      "left" : "if (!name.equals(tb.currentElement().nodeName()))",
      "right" : "if (!name.equals(tb.currentElement().nodeName()))",
      "info" : "IfStatement[38916-39005]:IfStatement[38997-39086]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[38990-39005]:ExpressionStatement[39071-39086]"
    }, {
      "left" : "tb.popStackToClose(name);",
      "right" : "tb.popStackToClose(name);",
      "info" : "ExpressionStatement[39026-39051]:ExpressionStatement[39107-39132]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39072-39078]:BreakStatement[39153-39159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39102-39267]:Block[39183-39348]"
    }, {
      "left" : "if (tb.isSpecial(node))",
      "right" : "if (tb.isSpecial(node))",
      "info" : "IfStatement[39124-39249]:IfStatement[39205-39330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39148-39249]:Block[39229-39330]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[39174-39189]:ExpressionStatement[39255-39270]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[39214-39227]:ReturnStatement[39295-39308]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[39294-39306]:ReturnStatement[39375-39387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39451-40052]:Block[39532-40133]"
    }, {
      "left" : "if (t.isCharacter())",
      "right" : "if (t.isCharacter())",
      "info" : "IfStatement[39465-40017]:IfStatement[39546-40098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39486-39545]:Block[39567-39626]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[39504-39531]:ExpressionStatement[39585-39612]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[39551-40017]:IfStatement[39632-40098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39566-39790]:Block[39647-39871]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[39584-39599]:ExpressionStatement[39665-39680]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[39678-39687]:ExpressionStatement[39759-39768]"
    }, {
      "left" : "tb.transition(tb.originalState());",
      "right" : "tb.transition(tb.originalState());",
      "info" : "ExpressionStatement[39704-39738]:ExpressionStatement[39785-39819]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[39755-39776]:ReturnStatement[39836-39857]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[39796-40017]:IfStatement[39877-40098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39814-40017]:Block[39895-40098]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[39943-39952]:ExpressionStatement[40024-40033]"
    }, {
      "left" : "tb.transition(tb.originalState());",
      "right" : "tb.transition(tb.originalState());",
      "info" : "ExpressionStatement[39969-40003]:ExpressionStatement[40050-40084]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40030-40042]:ReturnStatement[40111-40123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40127-43971]:Block[40208-44052]"
    }, {
      "left" : "if (t.isCharacter())",
      "right" : "if (t.isCharacter())",
      "info" : "IfStatement[40141-43921]:IfStatement[40222-44002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40162-40347]:Block[40243-40428]"
    }, {
      "left" : "tb.newPendingTableCharacters();",
      "right" : "tb.newPendingTableCharacters();",
      "info" : "ExpressionStatement[40180-40211]:ExpressionStatement[40261-40292]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[40228-40251]:ExpressionStatement[40309-40332]"
    }, {
      "left" : "tb.transition(InTableText);",
      "right" : "tb.transition(InTableText);",
      "info" : "ExpressionStatement[40268-40295]:ExpressionStatement[40349-40376]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[40312-40333]:ReturnStatement[40393-40414]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[40353-43921]:IfStatement[40434-44002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40372-40458]:Block[40453-40539]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[40390-40415]:ExpressionStatement[40471-40496]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40432-40444]:ReturnStatement[40513-40525]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[40464-43921]:IfStatement[40545-44002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40483-40560]:Block[40564-40641]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[40501-40516]:ExpressionStatement[40582-40597]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40533-40546]:ReturnStatement[40614-40627]"
    }, {
      "left" : "if (t.isStartTag())",
      "right" : "if (t.isStartTag())",
      "info" : "IfStatement[40566-43921]:IfStatement[40647-44002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40586-42894]:Block[40667-42975]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[40604-40645]:VariableDeclarationStatement[40685-40726]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[40662-40698]:VariableDeclarationStatement[40743-40779]"
    }, {
      "left" : "if (name.equals(\"caption\"))",
      "right" : "if (name.equals(\"caption\"))",
      "info" : "IfStatement[40715-42705]:IfStatement[40796-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40743-40959]:Block[40824-41040]"
    }, {
      "left" : "tb.clearStackToTableContext();",
      "right" : "tb.clearStackToTableContext();",
      "info" : "ExpressionStatement[40765-40795]:ExpressionStatement[40846-40876]"
    }, {
      "left" : "tb.insertMarkerToFormattingElements();",
      "right" : "tb.insertMarkerToFormattingElements();",
      "info" : "ExpressionStatement[40816-40854]:ExpressionStatement[40897-40935]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[40875-40895]:ExpressionStatement[40956-40976]"
    }, {
      "left" : "tb.transition(InCaption);",
      "right" : "tb.transition(InCaption);",
      "info" : "ExpressionStatement[40916-40941]:ExpressionStatement[40997-41022]"
    }, {
      "left" : "if (name.equals(\"colgroup\"))",
      "right" : "if (name.equals(\"colgroup\"))",
      "info" : "IfStatement[40965-42705]:IfStatement[41046-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40994-41155]:Block[41075-41236]"
    }, {
      "left" : "tb.clearStackToTableContext();",
      "right" : "tb.clearStackToTableContext();",
      "info" : "ExpressionStatement[41016-41046]:ExpressionStatement[41097-41127]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[41067-41087]:ExpressionStatement[41148-41168]"
    }, {
      "left" : "tb.transition(InColumnGroup);",
      "right" : "tb.transition(InColumnGroup);",
      "info" : "ExpressionStatement[41108-41137]:ExpressionStatement[41189-41218]"
    }, {
      "left" : "if (name.equals(\"col\"))",
      "right" : "if (name.equals(\"col\"))",
      "info" : "IfStatement[41161-42705]:IfStatement[41242-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41185-41298]:Block[41266-41379]"
    }, {
      "left" : "tb.processStartTag(\"colgroup\");",
      "right" : "tb.processStartTag(\"colgroup\");",
      "info" : "ExpressionStatement[41207-41238]:ExpressionStatement[41288-41319]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[41259-41280]:ReturnStatement[41340-41361]"
    }, {
      "left" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[41304-42705]:IfStatement[41385-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41356-41515]:Block[41437-41596]"
    }, {
      "left" : "tb.clearStackToTableContext();",
      "right" : "tb.clearStackToTableContext();",
      "info" : "ExpressionStatement[41378-41408]:ExpressionStatement[41459-41489]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[41429-41449]:ExpressionStatement[41510-41530]"
    }, {
      "left" : "tb.transition(InTableBody);",
      "right" : "tb.transition(InTableBody);",
      "info" : "ExpressionStatement[41470-41497]:ExpressionStatement[41551-41578]"
    }, {
      "left" : "if (StringUtil.in(name, \"td\", \"th\", \"tr\"))",
      "right" : "if (StringUtil.in(name, \"td\", \"th\", \"tr\"))",
      "info" : "IfStatement[41521-42705]:IfStatement[41602-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41564-41674]:Block[41645-41755]"
    }, {
      "left" : "tb.processStartTag(\"tbody\");",
      "right" : "tb.processStartTag(\"tbody\");",
      "info" : "ExpressionStatement[41586-41614]:ExpressionStatement[41667-41695]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[41635-41656]:ReturnStatement[41716-41737]"
    }, {
      "left" : "if (name.equals(\"table\"))",
      "right" : "if (name.equals(\"table\"))",
      "info" : "IfStatement[41680-42705]:IfStatement[41761-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41706-41940]:Block[41787-42021]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[41728-41743]:ExpressionStatement[41809-41824]"
    }, {
      "left" : "boolean processed = tb.processEndTag(\"table\");",
      "right" : "boolean processed = tb.processEndTag(\"table\");",
      "info" : "VariableDeclarationStatement[41764-41810]:VariableDeclarationStatement[41845-41891]"
    }, {
      "left" : "if (processed)",
      "right" : "if (processed)",
      "info" : "IfStatement[41831-41922]:IfStatement[41912-42003]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[41901-41922]:ReturnStatement[41982-42003]"
    }, {
      "left" : "if (StringUtil.in(name, \"style\", \"script\"))",
      "right" : "if (StringUtil.in(name, \"style\", \"script\"))",
      "info" : "IfStatement[41946-42705]:IfStatement[42027-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41990-42059]:Block[42071-42140]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[42012-42041]:ReturnStatement[42093-42122]"
    }, {
      "left" : "if (name.equals(\"input\"))",
      "right" : "if (name.equals(\"input\"))",
      "info" : "IfStatement[42065-42705]:IfStatement[42146-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42091-42350]:Block[42172-42431]"
    }, {
      "left" : "if (!startTag.attributes.get(\"type\").equalsIgnoreCase(\"hidden\"))",
      "right" : "if (!startTag.attributes.get(\"type\").equalsIgnoreCase(\"hidden\"))",
      "info" : "IfStatement[42113-42332]:IfStatement[42194-42413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42178-42253]:Block[42259-42334]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[42204-42231]:ReturnStatement[42285-42312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42259-42332]:Block[42340-42413]"
    }, {
      "left" : "tb.insertEmpty(startTag);",
      "right" : "tb.insertEmpty(startTag);",
      "info" : "ExpressionStatement[42285-42310]:ExpressionStatement[42366-42391]"
    }, {
      "left" : "if (name.equals(\"form\"))",
      "right" : "if (name.equals(\"form\"))",
      "info" : "IfStatement[42356-42705]:IfStatement[42437-42786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42381-42632]:Block[42462-42713]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[42403-42418]:ExpressionStatement[42484-42499]"
    }, {
      "left" : "if (tb.getFormElement() != null)",
      "right" : "if (tb.getFormElement() != null)",
      "info" : "IfStatement[42439-42614]:IfStatement[42520-42695]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[42496-42509]:ReturnStatement[42577-42590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42535-42614]:Block[42616-42695]"
    }, {
      "left" : "tb.insertForm(startTag, false);",
      "right" : "tb.insertForm(startTag, false);",
      "info" : "ExpressionStatement[42561-42592]:ExpressionStatement[42642-42673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42638-42705]:Block[42719-42786]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[42660-42687]:ReturnStatement[42741-42768]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[42722-42734]:ReturnStatement[42803-42815]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[42900-43921]:IfStatement[42981-44002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42918-43736]:Block[42999-43817]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[42936-42971]:VariableDeclarationStatement[43017-43052]"
    }, {
      "left" : "String name = endTag.normalName();",
      "right" : "String name = endTag.normalName();",
      "info" : "VariableDeclarationStatement[42988-43022]:VariableDeclarationStatement[43069-43103]"
    }, {
      "left" : "if (name.equals(\"table\"))",
      "right" : "if (name.equals(\"table\"))",
      "info" : "IfStatement[43040-43670]:IfStatement[43121-43751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43066-43362]:Block[43147-43443]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[43088-43299]:IfStatement[43169-43380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43116-43217]:Block[43197-43298]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[43142-43157]:ExpressionStatement[43223-43238]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43182-43195]:ReturnStatement[43263-43276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43223-43299]:Block[43304-43380]"
    }, {
      "left" : "tb.popStackToClose(\"table\");",
      "right" : "tb.popStackToClose(\"table\");",
      "info" : "ExpressionStatement[43249-43277]:ExpressionStatement[43330-43358]"
    }, {
      "left" : "tb.resetInsertionMode();",
      "right" : "tb.resetInsertionMode();",
      "info" : "ExpressionStatement[43320-43344]:ExpressionStatement[43401-43425]"
    }, {
      "left" : "if (StringUtil.in(name,\n                        \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"))",
      "right" : "if (StringUtil.in(name,\n                        \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"))",
      "info" : "IfStatement[43368-43670]:IfStatement[43449-43751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43508-43597]:Block[43589-43678]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[43530-43545]:ExpressionStatement[43611-43626]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[43566-43579]:ReturnStatement[43647-43660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43603-43670]:Block[43684-43751]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[43625-43652]:ReturnStatement[43706-43733]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[43687-43699]:ReturnStatement[43768-43780]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[43742-43921]:IfStatement[43823-44002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43757-43921]:Block[43838-44002]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "info" : "IfStatement[43775-43861]:IfStatement[43856-43942]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[43846-43861]:ExpressionStatement[43927-43942]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[43878-43890]:ReturnStatement[43959-43971]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[43934-43961]:ReturnStatement[44015-44042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44031-44462]:Block[44112-44543]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[44045-44060]:ExpressionStatement[44126-44141]"
    }, {
      "left" : "boolean processed;",
      "right" : "boolean processed;",
      "info" : "VariableDeclarationStatement[44073-44091]:VariableDeclarationStatement[44154-44172]"
    }, {
      "left" : "if (StringUtil.in(tb.currentElement().nodeName(), \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "right" : "if (StringUtil.in(tb.currentElement().nodeName(), \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "info" : "IfStatement[44104-44422]:IfStatement[44185-44503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44197-44350]:Block[44278-44431]"
    }, {
      "left" : "tb.setFosterInserts(true);",
      "right" : "tb.setFosterInserts(true);",
      "info" : "ExpressionStatement[44215-44241]:ExpressionStatement[44296-44322]"
    }, {
      "left" : "processed = tb.process(t, InBody);",
      "right" : "processed = tb.process(t, InBody);",
      "info" : "ExpressionStatement[44258-44292]:ExpressionStatement[44339-44373]"
    }, {
      "left" : "tb.setFosterInserts(false);",
      "right" : "tb.setFosterInserts(false);",
      "info" : "ExpressionStatement[44309-44336]:ExpressionStatement[44390-44417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44356-44422]:Block[44437-44503]"
    }, {
      "left" : "processed = tb.process(t, InBody);",
      "right" : "processed = tb.process(t, InBody);",
      "info" : "ExpressionStatement[44374-44408]:ExpressionStatement[44455-44489]"
    }, {
      "left" : "return processed;",
      "right" : "return processed;",
      "info" : "ReturnStatement[44435-44452]:ReturnStatement[44516-44533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44541-46283]:Block[44622-46364]"
    }, {
      "left" : "switch (t.type) {\n                case Character:\n                    Token.Character c = t.asCharacter();\n                    if (c.getData().equals(nullString)) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        tb.getPendingTableCharacters().add(c.getData());\n                    }\n                    break;\n                default:\n                    // todo - don't really like the way these table character data lists are built\n                    if (tb.getPendingTableCharacters().size() > 0) {\n                        for (String character : tb.getPendingTableCharacters()) {\n                            if (!isWhitespace(character)) {\n                                // InTable anything else section:\n                                tb.error(this);\n                                if (StringUtil.in(tb.currentElement().nodeName(), \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\")) {\n                                    tb.setFosterInserts(true);\n                                    tb.process(new Token.Character().data(character), InBody);\n                                    tb.setFosterInserts(false);\n                                } else {\n                                    tb.process(new Token.Character().data(character), InBody);\n                                }\n                            } else\n                                tb.insert(new Token.Character().data(character));\n                        }\n                        tb.newPendingTableCharacters();\n                    }\n                    tb.transition(tb.originalState());\n                    return tb.process(t);\n            }",
      "right" : "switch (t.type) {\n                case Character:\n                    Token.Character c = t.asCharacter();\n                    if (c.getData().equals(nullString)) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        tb.getPendingTableCharacters().add(c.getData());\n                    }\n                    break;\n                default:\n                    // todo - don't really like the way these table character data lists are built\n                    if (tb.getPendingTableCharacters().size() > 0) {\n                        for (String character : tb.getPendingTableCharacters()) {\n                            if (!isWhitespace(character)) {\n                                // InTable anything else section:\n                                tb.error(this);\n                                if (StringUtil.in(tb.currentElement().nodeName(), \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\")) {\n                                    tb.setFosterInserts(true);\n                                    tb.process(new Token.Character().data(character), InBody);\n                                    tb.setFosterInserts(false);\n                                } else {\n                                    tb.process(new Token.Character().data(character), InBody);\n                                }\n                            } else\n                                tb.insert(new Token.Character().data(character));\n                        }\n                        tb.newPendingTableCharacters();\n                    }\n                    tb.transition(tb.originalState());\n                    return tb.process(t);\n            }",
      "info" : "SwitchStatement[44555-46248]:SwitchStatement[44636-46329]"
    }, {
      "left" : "case Character:",
      "right" : "case Character:",
      "info" : "SwitchCase[44589-44604]:SwitchCase[44670-44685]"
    }, {
      "left" : "Token.Character c = t.asCharacter();",
      "right" : "Token.Character c = t.asCharacter();",
      "info" : "VariableDeclarationStatement[44625-44661]:VariableDeclarationStatement[44706-44742]"
    }, {
      "left" : "if (c.getData().equals(nullString))",
      "right" : "if (c.getData().equals(nullString))",
      "info" : "IfStatement[44682-44921]:IfStatement[44763-45002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44718-44819]:Block[44799-44900]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[44744-44759]:ExpressionStatement[44825-44840]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44784-44797]:ReturnStatement[44865-44878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44825-44921]:Block[44906-45002]"
    }, {
      "left" : "tb.getPendingTableCharacters().add(c.getData());",
      "right" : "tb.getPendingTableCharacters().add(c.getData());",
      "info" : "ExpressionStatement[44851-44899]:ExpressionStatement[44932-44980]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[44942-44948]:BreakStatement[45023-45029]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[44965-44973]:SwitchCase[45046-45054]"
    }, {
      "left" : "if (tb.getPendingTableCharacters().size() > 0)",
      "right" : "if (tb.getPendingTableCharacters().size() > 0)",
      "info" : "IfStatement[45093-46137]:IfStatement[45174-46218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45140-46137]:Block[45221-46218]"
    }, {
      "left" : "for (String character : tb.getPendingTableCharacters())",
      "right" : "for (String character : tb.getPendingTableCharacters())",
      "info" : "EnhancedForStatement[45166-46059]:EnhancedForStatement[45247-46140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45222-46059]:Block[45303-46140]"
    }, {
      "left" : "if (!isWhitespace(character))",
      "right" : "if (!isWhitespace(character))",
      "info" : "IfStatement[45252-46033]:IfStatement[45333-46114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45282-45946]:Block[45363-46027]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[45382-45397]:ExpressionStatement[45463-45478]"
    }, {
      "left" : "if (StringUtil.in(tb.currentElement().nodeName(), \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "right" : "if (StringUtil.in(tb.currentElement().nodeName(), \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "info" : "IfStatement[45430-45916]:IfStatement[45511-45997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45523-45780]:Block[45604-45861]"
    }, {
      "left" : "tb.setFosterInserts(true);",
      "right" : "tb.setFosterInserts(true);",
      "info" : "ExpressionStatement[45561-45587]:ExpressionStatement[45642-45668]"
    }, {
      "left" : "tb.process(new Token.Character().data(character), InBody);",
      "right" : "tb.process(new Token.Character().data(character), InBody);",
      "info" : "ExpressionStatement[45624-45682]:ExpressionStatement[45705-45763]"
    }, {
      "left" : "tb.setFosterInserts(false);",
      "right" : "tb.setFosterInserts(false);",
      "info" : "ExpressionStatement[45719-45746]:ExpressionStatement[45800-45827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45786-45916]:Block[45867-45997]"
    }, {
      "left" : "tb.process(new Token.Character().data(character), InBody);",
      "right" : "tb.process(new Token.Character().data(character), InBody);",
      "info" : "ExpressionStatement[45824-45882]:ExpressionStatement[45905-45963]"
    }, {
      "left" : "tb.insert(new Token.Character().data(character));",
      "right" : "tb.insert(new Token.Character().data(character));",
      "info" : "ExpressionStatement[45984-46033]:ExpressionStatement[46065-46114]"
    }, {
      "left" : "tb.newPendingTableCharacters();",
      "right" : "tb.newPendingTableCharacters();",
      "info" : "ExpressionStatement[46084-46115]:ExpressionStatement[46165-46196]"
    }, {
      "left" : "tb.transition(tb.originalState());",
      "right" : "tb.transition(tb.originalState());",
      "info" : "ExpressionStatement[46158-46192]:ExpressionStatement[46239-46273]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[46213-46234]:ReturnStatement[46294-46315]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46261-46273]:ReturnStatement[46342-46354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46360-47877]:Block[46441-47958]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"caption\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"caption\"))",
      "info" : "IfStatement[46374-47842]:IfStatement[46455-47923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46439-47037]:Block[46520-47118]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[46457-46492]:VariableDeclarationStatement[46538-46573]"
    }, {
      "left" : "String name = endTag.normalName();",
      "right" : "String name = endTag.normalName();",
      "info" : "VariableDeclarationStatement[46509-46543]:VariableDeclarationStatement[46590-46624]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[46560-47023]:IfStatement[46641-47104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46588-46677]:Block[46669-46758]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[46610-46625]:ExpressionStatement[46691-46706]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[46646-46659]:ReturnStatement[46727-46740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46683-47023]:Block[46764-47104]"
    }, {
      "left" : "tb.generateImpliedEndTags();",
      "right" : "tb.generateImpliedEndTags();",
      "info" : "ExpressionStatement[46705-46733]:ExpressionStatement[46786-46814]"
    }, {
      "left" : "if (!tb.currentElement().nodeName().equals(\"caption\"))",
      "right" : "if (!tb.currentElement().nodeName().equals(\"caption\"))",
      "info" : "IfStatement[46754-46848]:IfStatement[46835-46929]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[46833-46848]:ExpressionStatement[46914-46929]"
    }, {
      "left" : "tb.popStackToClose(\"caption\");",
      "right" : "tb.popStackToClose(\"caption\");",
      "info" : "ExpressionStatement[46869-46899]:ExpressionStatement[46950-46980]"
    }, {
      "left" : "tb.clearFormattingElementsToLastMarker();",
      "right" : "tb.clearFormattingElementsToLastMarker();",
      "info" : "ExpressionStatement[46920-46961]:ExpressionStatement[47001-47042]"
    }, {
      "left" : "tb.transition(InTable);",
      "right" : "tb.transition(InTable);",
      "info" : "ExpressionStatement[46982-47005]:ExpressionStatement[47063-47086]"
    }, {
      "left" : "if ((\n                    t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),\n                            \"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\") ||\n                            t.isEndTag() && t.asEndTag().normalName().equals(\"table\")))",
      "right" : "if ((\n                    t.isStartTag() && StringUtil.in(t.asStartTag().normalName(),\n                            \"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\") ||\n                            t.isEndTag() && t.asEndTag().normalName().equals(\"table\")))",
      "info" : "IfStatement[47043-47842]:IfStatement[47124-47923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47345-47530]:Block[47426-47611]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[47363-47378]:ExpressionStatement[47444-47459]"
    }, {
      "left" : "boolean processed = tb.processEndTag(\"caption\");",
      "right" : "boolean processed = tb.processEndTag(\"caption\");",
      "info" : "VariableDeclarationStatement[47395-47443]:VariableDeclarationStatement[47476-47524]"
    }, {
      "left" : "if (processed)",
      "right" : "if (processed)",
      "info" : "IfStatement[47460-47516]:IfStatement[47541-47597]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[47495-47516]:ReturnStatement[47576-47597]"
    }, {
      "left" : "if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(),\n                    \"body\", \"col\", \"colgroup\", \"html\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"))",
      "right" : "if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(),\n                    \"body\", \"col\", \"colgroup\", \"html\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"))",
      "info" : "IfStatement[47536-47842]:IfStatement[47617-47923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47698-47775]:Block[47779-47856]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[47716-47731]:ExpressionStatement[47797-47812]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[47748-47761]:ReturnStatement[47829-47842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47781-47842]:Block[47862-47923]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[47799-47828]:ReturnStatement[47880-47909]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[47855-47867]:ReturnStatement[47936-47948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47958-49751]:Block[48039-49832]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[47972-48081]:IfStatement[48053-48162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47993-48081]:Block[48074-48162]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[48011-48038]:ExpressionStatement[48092-48119]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[48055-48067]:ReturnStatement[48136-48148]"
    }, {
      "left" : "switch (t.type) {\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    break;\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    switch (startTag.normalName()) {\n                        case \"html\":\n                            return tb.process(t, InBody);\n                        case \"col\":\n                            tb.insertEmpty(startTag);\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    if (endTag.normalName.equals(\"colgroup\")) {\n                        if (tb.currentElement().nodeName().equals(\"html\")) { // frag case\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EOF:\n                    if (tb.currentElement().nodeName().equals(\"html\"))\n                        return true; // stop parsing; frag case\n                    else\n                        return anythingElse(t, tb);\n                default:\n                    return anythingElse(t, tb);\n            }",
      "right" : "switch (t.type) {\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    break;\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    switch (startTag.normalName()) {\n                        case \"html\":\n                            return tb.process(t, InBody);\n                        case \"col\":\n                            tb.insertEmpty(startTag);\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    if (endTag.normalName.equals(\"colgroup\")) {\n                        if (tb.currentElement().nodeName().equals(\"html\")) { // frag case\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EOF:\n                    if (tb.currentElement().nodeName().equals(\"html\"))\n                        return true; // stop parsing; frag case\n                    else\n                        return anythingElse(t, tb);\n                default:\n                    return anythingElse(t, tb);\n            }",
      "info" : "SwitchStatement[48094-49716]:SwitchStatement[48175-49797]"
    }, {
      "left" : "case Comment:",
      "right" : "case Comment:",
      "info" : "SwitchCase[48128-48141]:SwitchCase[48209-48222]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[48162-48187]:ExpressionStatement[48243-48268]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[48208-48214]:BreakStatement[48289-48295]"
    }, {
      "left" : "case Doctype:",
      "right" : "case Doctype:",
      "info" : "SwitchCase[48231-48244]:SwitchCase[48312-48325]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[48265-48280]:ExpressionStatement[48346-48361]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[48301-48307]:BreakStatement[48382-48388]"
    }, {
      "left" : "case StartTag:",
      "right" : "case StartTag:",
      "info" : "SwitchCase[48324-48338]:SwitchCase[48405-48419]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[48359-48400]:VariableDeclarationStatement[48440-48481]"
    }, {
      "left" : "switch (startTag.normalName()) {\n                        case \"html\":\n                            return tb.process(t, InBody);\n                        case \"col\":\n                            tb.insertEmpty(startTag);\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }",
      "right" : "switch (startTag.normalName()) {\n                        case \"html\":\n                            return tb.process(t, InBody);\n                        case \"col\":\n                            tb.insertEmpty(startTag);\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }",
      "info" : "SwitchStatement[48421-48784]:SwitchStatement[48502-48865]"
    }, {
      "left" : "case \"html\":",
      "right" : "case \"html\":",
      "info" : "SwitchCase[48478-48490]:SwitchCase[48559-48571]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[48519-48548]:ReturnStatement[48600-48629]"
    }, {
      "left" : "case \"col\":",
      "right" : "case \"col\":",
      "info" : "SwitchCase[48573-48584]:SwitchCase[48654-48665]"
    }, {
      "left" : "tb.insertEmpty(startTag);",
      "right" : "tb.insertEmpty(startTag);",
      "info" : "ExpressionStatement[48613-48638]:ExpressionStatement[48694-48719]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[48667-48673]:BreakStatement[48748-48754]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[48698-48706]:SwitchCase[48779-48787]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[48735-48762]:ReturnStatement[48816-48843]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[48805-48811]:BreakStatement[48886-48892]"
    }, {
      "left" : "case EndTag:",
      "right" : "case EndTag:",
      "info" : "SwitchCase[48828-48840]:SwitchCase[48909-48921]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[48861-48896]:VariableDeclarationStatement[48942-48977]"
    }, {
      "left" : "if (endTag.normalName.equals(\"colgroup\"))",
      "right" : "if (endTag.normalName.equals(\"colgroup\"))",
      "info" : "IfStatement[48917-49364]:IfStatement[48998-49445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48959-49307]:Block[49040-49388]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "info" : "IfStatement[48985-49285]:IfStatement[49066-49366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49036-49162]:Block[49117-49243]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[49079-49094]:ExpressionStatement[49160-49175]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[49123-49136]:ReturnStatement[49204-49217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49168-49285]:Block[49249-49366]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[49198-49207]:ExpressionStatement[49279-49288]"
    }, {
      "left" : "tb.transition(InTable);",
      "right" : "tb.transition(InTable);",
      "info" : "ExpressionStatement[49236-49259]:ExpressionStatement[49317-49340]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[49337-49364]:ReturnStatement[49418-49445]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[49385-49391]:BreakStatement[49466-49472]"
    }, {
      "left" : "case EOF:",
      "right" : "case EOF:",
      "info" : "SwitchCase[49408-49417]:SwitchCase[49489-49498]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "info" : "IfStatement[49438-49629]:IfStatement[49519-49710]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[49513-49525]:ReturnStatement[49594-49606]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[49602-49629]:ReturnStatement[49683-49710]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[49646-49654]:SwitchCase[49727-49735]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[49675-49702]:ReturnStatement[49756-49783]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[49729-49741]:ReturnStatement[49810-49822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49815-50007]:Block[49896-50088]"
    }, {
      "left" : "boolean processed = tb.processEndTag(\"colgroup\");",
      "right" : "boolean processed = tb.processEndTag(\"colgroup\");",
      "info" : "VariableDeclarationStatement[49829-49878]:VariableDeclarationStatement[49910-49959]"
    }, {
      "left" : "if (processed)",
      "right" : "if (processed)",
      "info" : "IfStatement[49891-49972]:IfStatement[49972-50053]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[49951-49972]:ReturnStatement[50032-50053]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[49985-49997]:ReturnStatement[50066-50078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50086-52135]:Block[50167-52216]"
    }, {
      "left" : "switch (t.type) {\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.normalName();\n                    if (name.equals(\"template\")) {\n                        tb.insert(startTag);\n                    } else if (name.equals(\"tr\")) {\n                        tb.clearStackToTableBodyContext();\n                        tb.insert(startTag);\n                        tb.transition(InRow);\n                    } else if (StringUtil.in(name, \"th\", \"td\")) {\n                        tb.error(this);\n                        tb.processStartTag(\"tr\");\n                        return tb.process(startTag);\n                    } else if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\")) {\n                        return exitTableBody(t, tb);\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    name = endTag.normalName();\n                    if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\")) {\n                        if (!tb.inTableScope(name)) {\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.clearStackToTableBodyContext();\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else if (name.equals(\"table\")) {\n                        return exitTableBody(t, tb);\n                    } else if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\")) {\n                        tb.error(this);\n                        return false;\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "right" : "switch (t.type) {\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.normalName();\n                    if (name.equals(\"template\")) {\n                        tb.insert(startTag);\n                    } else if (name.equals(\"tr\")) {\n                        tb.clearStackToTableBodyContext();\n                        tb.insert(startTag);\n                        tb.transition(InRow);\n                    } else if (StringUtil.in(name, \"th\", \"td\")) {\n                        tb.error(this);\n                        tb.processStartTag(\"tr\");\n                        return tb.process(startTag);\n                    } else if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\")) {\n                        return exitTableBody(t, tb);\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    name = endTag.normalName();\n                    if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\")) {\n                        if (!tb.inTableScope(name)) {\n                            tb.error(this);\n                            return false;\n                        } else {\n                            tb.clearStackToTableBodyContext();\n                            tb.pop();\n                            tb.transition(InTable);\n                        }\n                    } else if (name.equals(\"table\")) {\n                        return exitTableBody(t, tb);\n                    } else if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\")) {\n                        tb.error(this);\n                        return false;\n                    } else\n                        return anythingElse(t, tb);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "info" : "SwitchStatement[50100-52100]:SwitchStatement[50181-52181]"
    }, {
      "left" : "case StartTag:",
      "right" : "case StartTag:",
      "info" : "SwitchCase[50134-50148]:SwitchCase[50215-50229]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[50169-50210]:VariableDeclarationStatement[50250-50291]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[50231-50267]:VariableDeclarationStatement[50312-50348]"
    }, {
      "left" : "if (name.equals(\"template\"))",
      "right" : "if (name.equals(\"template\"))",
      "info" : "IfStatement[50288-51017]:IfStatement[50369-51098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50317-50385]:Block[50398-50466]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[50343-50363]:ExpressionStatement[50424-50444]"
    }, {
      "left" : "if (name.equals(\"tr\"))",
      "right" : "if (name.equals(\"tr\"))",
      "info" : "IfStatement[50391-51017]:IfStatement[50472-51098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50414-50587]:Block[50495-50668]"
    }, {
      "left" : "tb.clearStackToTableBodyContext();",
      "right" : "tb.clearStackToTableBodyContext();",
      "info" : "ExpressionStatement[50440-50474]:ExpressionStatement[50521-50555]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[50499-50519]:ExpressionStatement[50580-50600]"
    }, {
      "left" : "tb.transition(InRow);",
      "right" : "tb.transition(InRow);",
      "info" : "ExpressionStatement[50544-50565]:ExpressionStatement[50625-50646]"
    }, {
      "left" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "right" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "info" : "IfStatement[50593-51017]:IfStatement[50674-51098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50630-50796]:Block[50711-50877]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[50656-50671]:ExpressionStatement[50737-50752]"
    }, {
      "left" : "tb.processStartTag(\"tr\");",
      "right" : "tb.processStartTag(\"tr\");",
      "info" : "ExpressionStatement[50696-50721]:ExpressionStatement[50777-50802]"
    }, {
      "left" : "return tb.process(startTag);",
      "right" : "return tb.process(startTag);",
      "info" : "ReturnStatement[50746-50774]:ReturnStatement[50827-50855]"
    }, {
      "left" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[50802-51017]:IfStatement[50883-51098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50884-50960]:Block[50965-51041]"
    }, {
      "left" : "return exitTableBody(t, tb);",
      "right" : "return exitTableBody(t, tb);",
      "info" : "ReturnStatement[50910-50938]:ReturnStatement[50991-51019]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[50990-51017]:ReturnStatement[51071-51098]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[51038-51044]:BreakStatement[51119-51125]"
    }, {
      "left" : "case EndTag:",
      "right" : "case EndTag:",
      "info" : "SwitchCase[51061-51073]:SwitchCase[51142-51154]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[51094-51129]:VariableDeclarationStatement[51175-51210]"
    }, {
      "left" : "name = endTag.normalName();",
      "right" : "name = endTag.normalName();",
      "info" : "ExpressionStatement[51150-51177]:ExpressionStatement[51231-51258]"
    }, {
      "left" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[51198-51986]:IfStatement[51279-52067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51250-51625]:Block[51331-51706]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[51276-51603]:IfStatement[51357-51684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51304-51417]:Block[51385-51498]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[51334-51349]:ExpressionStatement[51415-51430]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51378-51391]:ReturnStatement[51459-51472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51423-51603]:Block[51504-51684]"
    }, {
      "left" : "tb.clearStackToTableBodyContext();",
      "right" : "tb.clearStackToTableBodyContext();",
      "info" : "ExpressionStatement[51453-51487]:ExpressionStatement[51534-51568]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[51516-51525]:ExpressionStatement[51597-51606]"
    }, {
      "left" : "tb.transition(InTable);",
      "right" : "tb.transition(InTable);",
      "info" : "ExpressionStatement[51554-51577]:ExpressionStatement[51635-51658]"
    }, {
      "left" : "if (name.equals(\"table\"))",
      "right" : "if (name.equals(\"table\"))",
      "info" : "IfStatement[51631-51986]:IfStatement[51712-52067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51657-51733]:Block[51738-51814]"
    }, {
      "left" : "return exitTableBody(t, tb);",
      "right" : "return exitTableBody(t, tb);",
      "info" : "ReturnStatement[51683-51711]:ReturnStatement[51764-51792]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\", \"tr\"))",
      "info" : "IfStatement[51739-51986]:IfStatement[51820-52067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51828-51929]:Block[51909-52010]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[51854-51869]:ExpressionStatement[51935-51950]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51894-51907]:ReturnStatement[51975-51988]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[51959-51986]:ReturnStatement[52040-52067]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[52007-52013]:BreakStatement[52088-52094]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[52030-52038]:SwitchCase[52111-52119]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[52059-52086]:ReturnStatement[52140-52167]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52113-52125]:ReturnStatement[52194-52206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52204-52584]:Block[52285-52665]"
    }, {
      "left" : "if (!(tb.inTableScope(\"tbody\") || tb.inTableScope(\"thead\") || tb.inScope(\"tfoot\")))",
      "right" : "if (!(tb.inTableScope(\"tbody\") || tb.inTableScope(\"thead\") || tb.inScope(\"tfoot\")))",
      "info" : "IfStatement[52218-52408]:IfStatement[52299-52489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52302-52408]:Block[52383-52489]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[52349-52364]:ExpressionStatement[52430-52445]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[52381-52394]:ReturnStatement[52462-52475]"
    }, {
      "left" : "tb.clearStackToTableBodyContext();",
      "right" : "tb.clearStackToTableBodyContext();",
      "info" : "ExpressionStatement[52421-52455]:ExpressionStatement[52502-52536]"
    }, {
      "left" : "tb.processEndTag(tb.currentElement().nodeName());",
      "right" : "tb.processEndTag(tb.currentElement().nodeName());",
      "info" : "ExpressionStatement[52468-52517]:ExpressionStatement[52549-52598]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[52553-52574]:ReturnStatement[52634-52655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52652-52706]:Block[52733-52787]"
    }, {
      "left" : "return tb.process(t, InTable);",
      "right" : "return tb.process(t, InTable);",
      "info" : "ReturnStatement[52666-52696]:ReturnStatement[52747-52777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52779-54806]:Block[52860-54887]"
    }, {
      "left" : "if (t.isStartTag())",
      "right" : "if (t.isStartTag())",
      "info" : "IfStatement[52793-54771]:IfStatement[52874-54852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52813-53542]:Block[52894-53623]"
    }, {
      "left" : "Token.StartTag startTag = t.asStartTag();",
      "right" : "Token.StartTag startTag = t.asStartTag();",
      "info" : "VariableDeclarationStatement[52831-52872]:VariableDeclarationStatement[52912-52953]"
    }, {
      "left" : "String name = startTag.normalName();",
      "right" : "String name = startTag.normalName();",
      "info" : "VariableDeclarationStatement[52889-52925]:VariableDeclarationStatement[52970-53006]"
    }, {
      "left" : "if (name.equals(\"template\"))",
      "right" : "if (name.equals(\"template\"))",
      "info" : "IfStatement[52943-53528]:IfStatement[53024-53609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52972-53032]:Block[53053-53113]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[52994-53014]:ExpressionStatement[53075-53095]"
    }, {
      "left" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "right" : "if (StringUtil.in(name, \"th\", \"td\"))",
      "info" : "IfStatement[53038-53528]:IfStatement[53119-53609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53075-53291]:Block[53156-53372]"
    }, {
      "left" : "tb.clearStackToTableRowContext();",
      "right" : "tb.clearStackToTableRowContext();",
      "info" : "ExpressionStatement[53097-53130]:ExpressionStatement[53178-53211]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[53151-53171]:ExpressionStatement[53232-53252]"
    }, {
      "left" : "tb.transition(InCell);",
      "right" : "tb.transition(InCell);",
      "info" : "ExpressionStatement[53192-53214]:ExpressionStatement[53273-53295]"
    }, {
      "left" : "tb.insertMarkerToFormattingElements();",
      "right" : "tb.insertMarkerToFormattingElements();",
      "info" : "ExpressionStatement[53235-53273]:ExpressionStatement[53316-53354]"
    }, {
      "left" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "right" : "if (StringUtil.in(name, \"caption\", \"col\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "info" : "IfStatement[53297-53528]:IfStatement[53378-53609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53385-53455]:Block[53466-53536]"
    }, {
      "left" : "return handleMissingTr(t, tb);",
      "right" : "return handleMissingTr(t, tb);",
      "info" : "ReturnStatement[53407-53437]:ReturnStatement[53488-53518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53461-53528]:Block[53542-53609]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[53483-53510]:ReturnStatement[53564-53591]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[53548-54771]:IfStatement[53629-54852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53566-54706]:Block[53647-54787]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[53584-53619]:VariableDeclarationStatement[53665-53700]"
    }, {
      "left" : "String name = endTag.normalName();",
      "right" : "String name = endTag.normalName();",
      "info" : "VariableDeclarationStatement[53636-53670]:VariableDeclarationStatement[53717-53751]"
    }, {
      "left" : "if (name.equals(\"tr\"))",
      "right" : "if (name.equals(\"tr\"))",
      "info" : "IfStatement[53688-54692]:IfStatement[53769-54773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53711-54026]:Block[53792-54107]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[53733-53870]:IfStatement[53814-53951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53761-53870]:Block[53842-53951]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[53787-53802]:ExpressionStatement[53868-53883]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53835-53848]:ReturnStatement[53916-53929]"
    }, {
      "left" : "tb.clearStackToTableRowContext();",
      "right" : "tb.clearStackToTableRowContext();",
      "info" : "ExpressionStatement[53891-53924]:ExpressionStatement[53972-54005]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[53945-53954]:ExpressionStatement[54026-54035]"
    }, {
      "left" : "tb.transition(InTableBody);",
      "right" : "tb.transition(InTableBody);",
      "info" : "ExpressionStatement[53981-54008]:ExpressionStatement[54062-54089]"
    }, {
      "left" : "if (name.equals(\"table\"))",
      "right" : "if (name.equals(\"table\"))",
      "info" : "IfStatement[54032-54692]:IfStatement[54113-54773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54058-54128]:Block[54139-54209]"
    }, {
      "left" : "return handleMissingTr(t, tb);",
      "right" : "return handleMissingTr(t, tb);",
      "info" : "ReturnStatement[54080-54110]:ReturnStatement[54161-54191]"
    }, {
      "left" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "right" : "if (StringUtil.in(name, \"tbody\", \"tfoot\", \"thead\"))",
      "info" : "IfStatement[54134-54692]:IfStatement[54215-54773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54186-54441]:Block[54267-54522]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[54208-54337]:IfStatement[54289-54418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54236-54337]:Block[54317-54418]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[54262-54277]:ExpressionStatement[54343-54358]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54302-54315]:ReturnStatement[54383-54396]"
    }, {
      "left" : "tb.processEndTag(\"tr\");",
      "right" : "tb.processEndTag(\"tr\");",
      "info" : "ExpressionStatement[54358-54381]:ExpressionStatement[54439-54462]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[54402-54423]:ReturnStatement[54483-54504]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\", \"td\", \"th\"))",
      "info" : "IfStatement[54447-54692]:IfStatement[54528-54773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54530-54619]:Block[54611-54700]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[54552-54567]:ExpressionStatement[54633-54648]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[54588-54601]:ReturnStatement[54669-54682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54625-54692]:Block[54706-54773]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[54647-54674]:ReturnStatement[54728-54755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54712-54771]:Block[54793-54852]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[54730-54757]:ReturnStatement[54811-54838]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[54784-54796]:ReturnStatement[54865-54877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54874-54928]:Block[54955-55009]"
    }, {
      "left" : "return tb.process(t, InTable);",
      "right" : "return tb.process(t, InTable);",
      "info" : "ReturnStatement[54888-54918]:ReturnStatement[54969-54999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54995-55174]:Block[55076-55255]"
    }, {
      "left" : "boolean processed = tb.processEndTag(\"tr\");",
      "right" : "boolean processed = tb.processEndTag(\"tr\");",
      "info" : "VariableDeclarationStatement[55009-55052]:VariableDeclarationStatement[55090-55133]"
    }, {
      "left" : "if (processed)",
      "right" : "if (processed)",
      "info" : "IfStatement[55065-55164]:IfStatement[55146-55245]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[55096-55117]:ReturnStatement[55177-55198]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[55151-55164]:ReturnStatement[55232-55245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55248-57145]:Block[55329-57226]"
    }, {
      "left" : "if (t.isEndTag())",
      "right" : "if (t.isEndTag())",
      "info" : "IfStatement[55262-57110]:IfStatement[55343-57191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55280-56605]:Block[55361-56686]"
    }, {
      "left" : "Token.EndTag endTag = t.asEndTag();",
      "right" : "Token.EndTag endTag = t.asEndTag();",
      "info" : "VariableDeclarationStatement[55298-55333]:VariableDeclarationStatement[55379-55414]"
    }, {
      "left" : "String name = endTag.normalName();",
      "right" : "String name = endTag.normalName();",
      "info" : "VariableDeclarationStatement[55350-55384]:VariableDeclarationStatement[55431-55465]"
    }, {
      "left" : "if (StringUtil.in(name, \"td\", \"th\"))",
      "right" : "if (StringUtil.in(name, \"td\", \"th\"))",
      "info" : "IfStatement[55402-56591]:IfStatement[55483-56672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55439-56033]:Block[55520-56114]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[55461-55706]:IfStatement[55542-55787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55489-55706]:Block[55570-55787]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[55515-55530]:ExpressionStatement[55596-55611]"
    }, {
      "left" : "tb.transition(InRow);",
      "right" : "tb.transition(InRow);",
      "info" : "ExpressionStatement[55555-55576]:ExpressionStatement[55636-55657]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[55671-55684]:ReturnStatement[55752-55765]"
    }, {
      "left" : "tb.generateImpliedEndTags();",
      "right" : "tb.generateImpliedEndTags();",
      "info" : "ExpressionStatement[55727-55755]:ExpressionStatement[55808-55836]"
    }, {
      "left" : "if (!tb.currentElement().nodeName().equals(name))",
      "right" : "if (!tb.currentElement().nodeName().equals(name))",
      "info" : "IfStatement[55776-55865]:IfStatement[55857-55946]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[55850-55865]:ExpressionStatement[55931-55946]"
    }, {
      "left" : "tb.popStackToClose(name);",
      "right" : "tb.popStackToClose(name);",
      "info" : "ExpressionStatement[55886-55911]:ExpressionStatement[55967-55992]"
    }, {
      "left" : "tb.clearFormattingElementsToLastMarker();",
      "right" : "tb.clearFormattingElementsToLastMarker();",
      "info" : "ExpressionStatement[55932-55973]:ExpressionStatement[56013-56054]"
    }, {
      "left" : "tb.transition(InRow);",
      "right" : "tb.transition(InRow);",
      "info" : "ExpressionStatement[55994-56015]:ExpressionStatement[56075-56096]"
    }, {
      "left" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\"))",
      "right" : "if (StringUtil.in(name, \"body\", \"caption\", \"col\", \"colgroup\", \"html\"))",
      "info" : "IfStatement[56039-56591]:IfStatement[56120-56672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56110-56199]:Block[56191-56280]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[56132-56147]:ExpressionStatement[56213-56228]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[56168-56181]:ReturnStatement[56249-56262]"
    }, {
      "left" : "if (StringUtil.in(name, \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "right" : "if (StringUtil.in(name, \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\"))",
      "info" : "IfStatement[56205-56591]:IfStatement[56286-56672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56272-56518]:Block[56353-56599]"
    }, {
      "left" : "if (!tb.inTableScope(name))",
      "right" : "if (!tb.inTableScope(name))",
      "info" : "IfStatement[56294-56423]:IfStatement[56375-56504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56322-56423]:Block[56403-56504]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[56348-56363]:ExpressionStatement[56429-56444]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[56388-56401]:ReturnStatement[56469-56482]"
    }, {
      "left" : "closeCell(tb);",
      "right" : "closeCell(tb);",
      "info" : "ExpressionStatement[56444-56458]:ExpressionStatement[56525-56539]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[56479-56500]:ReturnStatement[56560-56581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56524-56591]:Block[56605-56672]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[56546-56573]:ReturnStatement[56627-56654]"
    }, {
      "left" : "if (t.isStartTag() &&\n                    StringUtil.in(t.asStartTag().normalName(),\n                            \"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"))",
      "right" : "if (t.isStartTag() &&\n                    StringUtil.in(t.asStartTag().normalName(),\n                            \"caption\", \"col\", \"colgroup\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\"))",
      "info" : "IfStatement[56611-57110]:IfStatement[56692-57191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56800-57045]:Block[56881-57126]"
    }, {
      "left" : "if (!(tb.inTableScope(\"td\") || tb.inTableScope(\"th\")))",
      "right" : "if (!(tb.inTableScope(\"td\") || tb.inTableScope(\"th\")))",
      "info" : "IfStatement[56818-56962]:IfStatement[56899-57043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56873-56962]:Block[56954-57043]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[56895-56910]:ExpressionStatement[56976-56991]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[56931-56944]:ReturnStatement[57012-57025]"
    }, {
      "left" : "closeCell(tb);",
      "right" : "closeCell(tb);",
      "info" : "ExpressionStatement[56979-56993]:ExpressionStatement[57060-57074]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[57010-57031]:ReturnStatement[57091-57112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57051-57110]:Block[57132-57191]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[57069-57096]:ReturnStatement[57150-57177]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[57123-57135]:ReturnStatement[57204-57216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57213-57266]:Block[57294-57347]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[57227-57256]:ReturnStatement[57308-57337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57319-57500]:Block[57400-57581]"
    }, {
      "left" : "if (tb.inTableScope(\"td\"))",
      "right" : "if (tb.inTableScope(\"td\"))",
      "info" : "IfStatement[57333-57456]:IfStatement[57414-57537]"
    }, {
      "left" : "tb.processEndTag(\"td\");",
      "right" : "tb.processEndTag(\"td\");",
      "info" : "ExpressionStatement[57376-57399]:ExpressionStatement[57457-57480]"
    }, {
      "left" : "tb.processEndTag(\"th\");",
      "right" : "tb.processEndTag(\"th\");",
      "info" : "ExpressionStatement[57433-57456]:ExpressionStatement[57514-57537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57576-61547]:Block[57657-61628]"
    }, {
      "left" : "switch (t.type) {\n                case Character:\n                    Token.Character c = t.asCharacter();\n                    if (c.getData().equals(nullString)) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        tb.insert(c);\n                    }\n                    break;\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    return false;\n                case StartTag:\n                    Token.StartTag start = t.asStartTag();\n                    String name = start.normalName();\n                    if (name.equals(\"html\"))\n                        return tb.process(start, InBody);\n                    else if (name.equals(\"option\")) {\n                        if (tb.currentElement().nodeName().equals(\"option\"))\n                            tb.processEndTag(\"option\");\n                        tb.insert(start);\n                    } else if (name.equals(\"optgroup\")) {\n                        if (tb.currentElement().nodeName().equals(\"option\"))\n                            tb.processEndTag(\"option\");\n                        else if (tb.currentElement().nodeName().equals(\"optgroup\"))\n                            tb.processEndTag(\"optgroup\");\n                        tb.insert(start);\n                    } else if (name.equals(\"select\")) {\n                        tb.error(this);\n                        return tb.processEndTag(\"select\");\n                    } else if (StringUtil.in(name, \"input\", \"keygen\", \"textarea\")) {\n                        tb.error(this);\n                        if (!tb.inSelectScope(\"select\"))\n                            return false; // frag\n                        tb.processEndTag(\"select\");\n                        return tb.process(start);\n                    } else if (name.equals(\"script\")) {\n                        return tb.process(t, InHead);\n                    } else {\n                        return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag end = t.asEndTag();\n                    name = end.normalName();\n                    switch (name) {\n                        case \"optgroup\":\n                            if (tb.currentElement().nodeName().equals(\"option\") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(\"optgroup\"))\n                                tb.processEndTag(\"option\");\n                            if (tb.currentElement().nodeName().equals(\"optgroup\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"option\":\n                            if (tb.currentElement().nodeName().equals(\"option\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"select\":\n                            if (!tb.inSelectScope(name)) {\n                                tb.error(this);\n                                return false;\n                            } else {\n                                tb.popStackToClose(name);\n                                tb.resetInsertionMode();\n                            }\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }\n                    break;\n                case EOF:\n                    if (!tb.currentElement().nodeName().equals(\"html\"))\n                        tb.error(this);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "right" : "switch (t.type) {\n                case Character:\n                    Token.Character c = t.asCharacter();\n                    if (c.getData().equals(nullString)) {\n                        tb.error(this);\n                        return false;\n                    } else {\n                        tb.insert(c);\n                    }\n                    break;\n                case Comment:\n                    tb.insert(t.asComment());\n                    break;\n                case Doctype:\n                    tb.error(this);\n                    return false;\n                case StartTag:\n                    Token.StartTag start = t.asStartTag();\n                    String name = start.normalName();\n                    if (name.equals(\"html\"))\n                        return tb.process(start, InBody);\n                    else if (name.equals(\"option\")) {\n                        if (tb.currentElement().nodeName().equals(\"option\"))\n                            tb.processEndTag(\"option\");\n                        tb.insert(start);\n                    } else if (name.equals(\"optgroup\")) {\n                        if (tb.currentElement().nodeName().equals(\"option\"))\n                            tb.processEndTag(\"option\");\n                        else if (tb.currentElement().nodeName().equals(\"optgroup\"))\n                            tb.processEndTag(\"optgroup\");\n                        tb.insert(start);\n                    } else if (name.equals(\"select\")) {\n                        tb.error(this);\n                        return tb.processEndTag(\"select\");\n                    } else if (StringUtil.in(name, \"input\", \"keygen\", \"textarea\")) {\n                        tb.error(this);\n                        if (!tb.inSelectScope(\"select\"))\n                            return false; // frag\n                        tb.processEndTag(\"select\");\n                        return tb.process(start);\n                    } else if (name.equals(\"script\")) {\n                        return tb.process(t, InHead);\n                    } else {\n                        return anythingElse(t, tb);\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag end = t.asEndTag();\n                    name = end.normalName();\n                    switch (name) {\n                        case \"optgroup\":\n                            if (tb.currentElement().nodeName().equals(\"option\") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(\"optgroup\"))\n                                tb.processEndTag(\"option\");\n                            if (tb.currentElement().nodeName().equals(\"optgroup\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"option\":\n                            if (tb.currentElement().nodeName().equals(\"option\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"select\":\n                            if (!tb.inSelectScope(name)) {\n                                tb.error(this);\n                                return false;\n                            } else {\n                                tb.popStackToClose(name);\n                                tb.resetInsertionMode();\n                            }\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }\n                    break;\n                case EOF:\n                    if (!tb.currentElement().nodeName().equals(\"html\"))\n                        tb.error(this);\n                    break;\n                default:\n                    return anythingElse(t, tb);\n            }",
      "info" : "SwitchStatement[57590-61512]:SwitchStatement[57671-61593]"
    }, {
      "left" : "case Character:",
      "right" : "case Character:",
      "info" : "SwitchCase[57624-57639]:SwitchCase[57705-57720]"
    }, {
      "left" : "Token.Character c = t.asCharacter();",
      "right" : "Token.Character c = t.asCharacter();",
      "info" : "VariableDeclarationStatement[57660-57696]:VariableDeclarationStatement[57741-57777]"
    }, {
      "left" : "if (c.getData().equals(nullString))",
      "right" : "if (c.getData().equals(nullString))",
      "info" : "IfStatement[57717-57921]:IfStatement[57798-58002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57753-57854]:Block[57834-57935]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[57779-57794]:ExpressionStatement[57860-57875]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[57819-57832]:ReturnStatement[57900-57913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57860-57921]:Block[57941-58002]"
    }, {
      "left" : "tb.insert(c);",
      "right" : "tb.insert(c);",
      "info" : "ExpressionStatement[57886-57899]:ExpressionStatement[57967-57980]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[57942-57948]:BreakStatement[58023-58029]"
    }, {
      "left" : "case Comment:",
      "right" : "case Comment:",
      "info" : "SwitchCase[57965-57978]:SwitchCase[58046-58059]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[57999-58024]:ExpressionStatement[58080-58105]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[58045-58051]:BreakStatement[58126-58132]"
    }, {
      "left" : "case Doctype:",
      "right" : "case Doctype:",
      "info" : "SwitchCase[58068-58081]:SwitchCase[58149-58162]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[58102-58117]:ExpressionStatement[58183-58198]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[58138-58151]:ReturnStatement[58219-58232]"
    }, {
      "left" : "case StartTag:",
      "right" : "case StartTag:",
      "info" : "SwitchCase[58168-58182]:SwitchCase[58249-58263]"
    }, {
      "left" : "Token.StartTag start = t.asStartTag();",
      "right" : "Token.StartTag start = t.asStartTag();",
      "info" : "VariableDeclarationStatement[58203-58241]:VariableDeclarationStatement[58284-58322]"
    }, {
      "left" : "String name = start.normalName();",
      "right" : "String name = start.normalName();",
      "info" : "VariableDeclarationStatement[58262-58295]:VariableDeclarationStatement[58343-58376]"
    }, {
      "left" : "if (name.equals(\"html\"))",
      "right" : "if (name.equals(\"html\"))",
      "info" : "IfStatement[58316-59704]:IfStatement[58397-59785]"
    }, {
      "left" : "return tb.process(start, InBody);",
      "right" : "return tb.process(start, InBody);",
      "info" : "ReturnStatement[58365-58398]:ReturnStatement[58446-58479]"
    }, {
      "left" : "if (name.equals(\"option\"))",
      "right" : "if (name.equals(\"option\"))",
      "info" : "IfStatement[58424-59704]:IfStatement[58505-59785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58451-58649]:Block[58532-58730]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"option\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"option\"))",
      "info" : "IfStatement[58477-58585]:IfStatement[58558-58666]"
    }, {
      "left" : "tb.processEndTag(\"option\");",
      "right" : "tb.processEndTag(\"option\");",
      "info" : "ExpressionStatement[58558-58585]:ExpressionStatement[58639-58666]"
    }, {
      "left" : "tb.insert(start);",
      "right" : "tb.insert(start);",
      "info" : "ExpressionStatement[58610-58627]:ExpressionStatement[58691-58708]"
    }, {
      "left" : "if (name.equals(\"optgroup\"))",
      "right" : "if (name.equals(\"optgroup\"))",
      "info" : "IfStatement[58655-59704]:IfStatement[58736-59785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58684-59024]:Block[58765-59105]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"option\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"option\"))",
      "info" : "IfStatement[58710-58960]:IfStatement[58791-59041]"
    }, {
      "left" : "tb.processEndTag(\"option\");",
      "right" : "tb.processEndTag(\"option\");",
      "info" : "ExpressionStatement[58791-58818]:ExpressionStatement[58872-58899]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"optgroup\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"optgroup\"))",
      "info" : "IfStatement[58848-58960]:IfStatement[58929-59041]"
    }, {
      "left" : "tb.processEndTag(\"optgroup\");",
      "right" : "tb.processEndTag(\"optgroup\");",
      "info" : "ExpressionStatement[58931-58960]:ExpressionStatement[59012-59041]"
    }, {
      "left" : "tb.insert(start);",
      "right" : "tb.insert(start);",
      "info" : "ExpressionStatement[58985-59002]:ExpressionStatement[59066-59083]"
    }, {
      "left" : "if (name.equals(\"select\"))",
      "right" : "if (name.equals(\"select\"))",
      "info" : "IfStatement[59030-59704]:IfStatement[59111-59785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59057-59179]:Block[59138-59260]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[59083-59098]:ExpressionStatement[59164-59179]"
    }, {
      "left" : "return tb.processEndTag(\"select\");",
      "right" : "return tb.processEndTag(\"select\");",
      "info" : "ReturnStatement[59123-59157]:ReturnStatement[59204-59238]"
    }, {
      "left" : "if (StringUtil.in(name, \"input\", \"keygen\", \"textarea\"))",
      "right" : "if (StringUtil.in(name, \"input\", \"keygen\", \"textarea\"))",
      "info" : "IfStatement[59185-59704]:IfStatement[59266-59785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59241-59513]:Block[59322-59594]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[59267-59282]:ExpressionStatement[59348-59363]"
    }, {
      "left" : "if (!tb.inSelectScope(\"select\"))",
      "right" : "if (!tb.inSelectScope(\"select\"))",
      "info" : "IfStatement[59307-59381]:IfStatement[59388-59462]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[59368-59381]:ReturnStatement[59449-59462]"
    }, {
      "left" : "tb.processEndTag(\"select\");",
      "right" : "tb.processEndTag(\"select\");",
      "info" : "ExpressionStatement[59414-59441]:ExpressionStatement[59495-59522]"
    }, {
      "left" : "return tb.process(start);",
      "right" : "return tb.process(start);",
      "info" : "ReturnStatement[59466-59491]:ReturnStatement[59547-59572]"
    }, {
      "left" : "if (name.equals(\"script\"))",
      "right" : "if (name.equals(\"script\"))",
      "info" : "IfStatement[59519-59704]:IfStatement[59600-59785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59546-59623]:Block[59627-59704]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[59572-59601]:ReturnStatement[59653-59682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59629-59704]:Block[59710-59785]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[59655-59682]:ReturnStatement[59736-59763]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[59725-59731]:BreakStatement[59806-59812]"
    }, {
      "left" : "case EndTag:",
      "right" : "case EndTag:",
      "info" : "SwitchCase[59748-59760]:SwitchCase[59829-59841]"
    }, {
      "left" : "Token.EndTag end = t.asEndTag();",
      "right" : "Token.EndTag end = t.asEndTag();",
      "info" : "VariableDeclarationStatement[59781-59813]:VariableDeclarationStatement[59862-59894]"
    }, {
      "left" : "name = end.normalName();",
      "right" : "name = end.normalName();",
      "info" : "ExpressionStatement[59834-59858]:ExpressionStatement[59915-59939]"
    }, {
      "left" : "switch (name) {\n                        case \"optgroup\":\n                            if (tb.currentElement().nodeName().equals(\"option\") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(\"optgroup\"))\n                                tb.processEndTag(\"option\");\n                            if (tb.currentElement().nodeName().equals(\"optgroup\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"option\":\n                            if (tb.currentElement().nodeName().equals(\"option\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"select\":\n                            if (!tb.inSelectScope(name)) {\n                                tb.error(this);\n                                return false;\n                            } else {\n                                tb.popStackToClose(name);\n                                tb.resetInsertionMode();\n                            }\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }",
      "right" : "switch (name) {\n                        case \"optgroup\":\n                            if (tb.currentElement().nodeName().equals(\"option\") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(\"optgroup\"))\n                                tb.processEndTag(\"option\");\n                            if (tb.currentElement().nodeName().equals(\"optgroup\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"option\":\n                            if (tb.currentElement().nodeName().equals(\"option\"))\n                                tb.pop();\n                            else\n                                tb.error(this);\n                            break;\n                        case \"select\":\n                            if (!tb.inSelectScope(name)) {\n                                tb.error(this);\n                                return false;\n                            } else {\n                                tb.popStackToClose(name);\n                                tb.resetInsertionMode();\n                            }\n                            break;\n                        default:\n                            return anythingElse(t, tb);\n                    }",
      "info" : "SwitchStatement[59879-61233]:SwitchStatement[59960-61314]"
    }, {
      "left" : "case \"optgroup\":",
      "right" : "case \"optgroup\":",
      "info" : "SwitchCase[59919-59935]:SwitchCase[60000-60016]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"option\") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(\"optgroup\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"option\") && tb.aboveOnStack(tb.currentElement()) != null && tb.aboveOnStack(tb.currentElement()).nodeName().equals(\"optgroup\"))",
      "info" : "IfStatement[59964-60194]:IfStatement[60045-60275]"
    }, {
      "left" : "tb.processEndTag(\"option\");",
      "right" : "tb.processEndTag(\"option\");",
      "info" : "ExpressionStatement[60167-60194]:ExpressionStatement[60248-60275]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"optgroup\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"optgroup\"))",
      "info" : "IfStatement[60223-60400]:IfStatement[60304-60481]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[60310-60319]:ExpressionStatement[60391-60400]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[60385-60400]:ExpressionStatement[60466-60481]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[60429-60435]:BreakStatement[60510-60516]"
    }, {
      "left" : "case \"option\":",
      "right" : "case \"option\":",
      "info" : "SwitchCase[60460-60474]:SwitchCase[60541-60555]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"option\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"option\"))",
      "info" : "IfStatement[60503-60678]:IfStatement[60584-60759]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[60588-60597]:ExpressionStatement[60669-60678]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[60663-60678]:ExpressionStatement[60744-60759]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[60707-60713]:BreakStatement[60788-60794]"
    }, {
      "left" : "case \"select\":",
      "right" : "case \"select\":",
      "info" : "SwitchCase[60738-60752]:SwitchCase[60819-60833]"
    }, {
      "left" : "if (!tb.inSelectScope(name))",
      "right" : "if (!tb.inSelectScope(name))",
      "info" : "IfStatement[60781-61087]:IfStatement[60862-61168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60810-60935]:Block[60891-61016]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[60844-60859]:ExpressionStatement[60925-60940]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[60892-60905]:ReturnStatement[60973-60986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60941-61087]:Block[61022-61168]"
    }, {
      "left" : "tb.popStackToClose(name);",
      "right" : "tb.popStackToClose(name);",
      "info" : "ExpressionStatement[60975-61000]:ExpressionStatement[61056-61081]"
    }, {
      "left" : "tb.resetInsertionMode();",
      "right" : "tb.resetInsertionMode();",
      "info" : "ExpressionStatement[61033-61057]:ExpressionStatement[61114-61138]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[61116-61122]:BreakStatement[61197-61203]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[61147-61155]:SwitchCase[61228-61236]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[61184-61211]:ReturnStatement[61265-61292]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[61254-61260]:BreakStatement[61335-61341]"
    }, {
      "left" : "case EOF:",
      "right" : "case EOF:",
      "info" : "SwitchCase[61277-61286]:SwitchCase[61358-61367]"
    }, {
      "left" : "if (!tb.currentElement().nodeName().equals(\"html\"))",
      "right" : "if (!tb.currentElement().nodeName().equals(\"html\"))",
      "info" : "IfStatement[61307-61398]:IfStatement[61388-61479]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[61383-61398]:ExpressionStatement[61464-61479]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[61419-61425]:BreakStatement[61500-61506]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[61442-61450]:SwitchCase[61523-61531]"
    }, {
      "left" : "return anythingElse(t, tb);",
      "right" : "return anythingElse(t, tb);",
      "info" : "ReturnStatement[61471-61498]:ReturnStatement[61552-61579]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[61525-61537]:ReturnStatement[61606-61618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61615-61680]:Block[61696-61761]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[61629-61644]:ExpressionStatement[61710-61725]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[61657-61670]:ReturnStatement[61738-61751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61763-62511]:Block[61844-62592]"
    }, {
      "left" : "if (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "right" : "if (t.isStartTag() && StringUtil.in(t.asStartTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "info" : "IfStatement[61777-62501]:IfStatement[61858-62582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61908-62037]:Block[61989-62118]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[61926-61941]:ExpressionStatement[62007-62022]"
    }, {
      "left" : "tb.processEndTag(\"select\");",
      "right" : "tb.processEndTag(\"select\");",
      "info" : "ExpressionStatement[61958-61985]:ExpressionStatement[62039-62066]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[62002-62023]:ReturnStatement[62083-62104]"
    }, {
      "left" : "if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "right" : "if (t.isEndTag() && StringUtil.in(t.asEndTag().normalName(), \"caption\", \"table\", \"tbody\", \"tfoot\", \"thead\", \"tr\", \"td\", \"th\"))",
      "info" : "IfStatement[62043-62501]:IfStatement[62124-62582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62170-62432]:Block[62251-62513]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[62188-62203]:ExpressionStatement[62269-62284]"
    }, {
      "left" : "if (tb.inTableScope(t.asEndTag().normalName()))",
      "right" : "if (tb.inTableScope(t.asEndTag().normalName()))",
      "info" : "IfStatement[62220-62418]:IfStatement[62301-62499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62268-62379]:Block[62349-62460]"
    }, {
      "left" : "tb.processEndTag(\"select\");",
      "right" : "tb.processEndTag(\"select\");",
      "info" : "ExpressionStatement[62290-62317]:ExpressionStatement[62371-62398]"
    }, {
      "left" : "return (tb.process(t));",
      "right" : "return (tb.process(t));",
      "info" : "ReturnStatement[62338-62361]:ReturnStatement[62419-62442]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62405-62418]:ReturnStatement[62486-62499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62438-62501]:Block[62519-62582]"
    }, {
      "left" : "return tb.process(t, InSelect);",
      "right" : "return tb.process(t, InSelect);",
      "info" : "ReturnStatement[62456-62487]:ReturnStatement[62537-62568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62588-63552]:Block[62669-63633]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[62602-63517]:IfStatement[62683-63598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62623-62684]:Block[62704-62765]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[62641-62670]:ReturnStatement[62722-62751]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[62690-63517]:IfStatement[62771-63598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62709-62784]:Block[62790-62865]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[62727-62752]:ExpressionStatement[62808-62833]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[62790-63517]:IfStatement[62871-63598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62809-62886]:Block[62890-62967]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[62827-62842]:ExpressionStatement[62908-62923]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[62859-62872]:ReturnStatement[62940-62953]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[62892-63517]:IfStatement[62973-63598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62958-63019]:Block[63039-63100]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[62976-63005]:ReturnStatement[63057-63086]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[63025-63517]:IfStatement[63106-63598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63087-63312]:Block[63168-63393]"
    }, {
      "left" : "if (tb.isFragmentParsing())",
      "right" : "if (tb.isFragmentParsing())",
      "info" : "IfStatement[63105-63298]:IfStatement[63186-63379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63133-63222]:Block[63214-63303]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[63155-63170]:ExpressionStatement[63236-63251]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63191-63204]:ReturnStatement[63272-63285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63228-63298]:Block[63309-63379]"
    }, {
      "left" : "tb.transition(AfterAfterBody);",
      "right" : "tb.transition(AfterAfterBody);",
      "info" : "ExpressionStatement[63250-63280]:ExpressionStatement[63331-63361]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[63318-63517]:IfStatement[63399-63598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63333-63387]:Block[63414-63468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63393-63517]:Block[63474-63598]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[63411-63426]:ExpressionStatement[63492-63507]"
    }, {
      "left" : "tb.transition(InBody);",
      "right" : "tb.transition(InBody);",
      "info" : "ExpressionStatement[63443-63465]:ExpressionStatement[63524-63546]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[63482-63503]:ReturnStatement[63563-63584]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63530-63542]:ReturnStatement[63611-63623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63630-65382]:Block[63711-65463]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[63644-65347]:IfStatement[63725-65428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63665-63724]:Block[63746-63805]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[63683-63710]:ExpressionStatement[63764-63791]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[63730-65347]:IfStatement[63811-65428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63749-63806]:Block[63830-63887]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[63767-63792]:ExpressionStatement[63848-63873]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[63812-65347]:IfStatement[63893-65428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63831-63908]:Block[63912-63989]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[63849-63864]:ExpressionStatement[63930-63945]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63881-63894]:ReturnStatement[63962-63975]"
    }, {
      "left" : "if (t.isStartTag())",
      "right" : "if (t.isStartTag())",
      "info" : "IfStatement[63914-65347]:IfStatement[63995-65428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63934-64583]:Block[64015-64664]"
    }, {
      "left" : "Token.StartTag start = t.asStartTag();",
      "right" : "Token.StartTag start = t.asStartTag();",
      "info" : "VariableDeclarationStatement[63952-63990]:VariableDeclarationStatement[64033-64071]"
    }, {
      "left" : "switch (start.normalName()) {\n                    case \"html\":\n                        return tb.process(start, InBody);\n                    case \"frameset\":\n                        tb.insert(start);\n                        break;\n                    case \"frame\":\n                        tb.insertEmpty(start);\n                        break;\n                    case \"noframes\":\n                        return tb.process(start, InHead);\n                    default:\n                        tb.error(this);\n                        return false;\n                }",
      "right" : "switch (start.normalName()) {\n                    case \"html\":\n                        return tb.process(start, InBody);\n                    case \"frameset\":\n                        tb.insert(start);\n                        break;\n                    case \"frame\":\n                        tb.insertEmpty(start);\n                        break;\n                    case \"noframes\":\n                        return tb.process(start, InHead);\n                    default:\n                        tb.error(this);\n                        return false;\n                }",
      "info" : "SwitchStatement[64007-64569]:SwitchStatement[64088-64650]"
    }, {
      "left" : "case \"html\":",
      "right" : "case \"html\":",
      "info" : "SwitchCase[64057-64069]:SwitchCase[64138-64150]"
    }, {
      "left" : "return tb.process(start, InBody);",
      "right" : "return tb.process(start, InBody);",
      "info" : "ReturnStatement[64094-64127]:ReturnStatement[64175-64208]"
    }, {
      "left" : "case \"frameset\":",
      "right" : "case \"frameset\":",
      "info" : "SwitchCase[64148-64164]:SwitchCase[64229-64245]"
    }, {
      "left" : "tb.insert(start);",
      "right" : "tb.insert(start);",
      "info" : "ExpressionStatement[64189-64206]:ExpressionStatement[64270-64287]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[64231-64237]:BreakStatement[64312-64318]"
    }, {
      "left" : "case \"frame\":",
      "right" : "case \"frame\":",
      "info" : "SwitchCase[64258-64271]:SwitchCase[64339-64352]"
    }, {
      "left" : "tb.insertEmpty(start);",
      "right" : "tb.insertEmpty(start);",
      "info" : "ExpressionStatement[64296-64318]:ExpressionStatement[64377-64399]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[64343-64349]:BreakStatement[64424-64430]"
    }, {
      "left" : "case \"noframes\":",
      "right" : "case \"noframes\":",
      "info" : "SwitchCase[64370-64386]:SwitchCase[64451-64467]"
    }, {
      "left" : "return tb.process(start, InHead);",
      "right" : "return tb.process(start, InHead);",
      "info" : "ReturnStatement[64411-64444]:ReturnStatement[64492-64525]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[64465-64473]:SwitchCase[64546-64554]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[64498-64513]:ExpressionStatement[64579-64594]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[64538-64551]:ReturnStatement[64619-64632]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"frameset\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"frameset\"))",
      "info" : "IfStatement[64589-65347]:IfStatement[64670-65428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64655-65071]:Block[64736-65152]"
    }, {
      "left" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "right" : "if (tb.currentElement().nodeName().equals(\"html\"))",
      "info" : "IfStatement[64673-65057]:IfStatement[64754-65138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64724-64821]:Block[64805-64902]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[64754-64769]:ExpressionStatement[64835-64850]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[64790-64803]:ReturnStatement[64871-64884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64827-65057]:Block[64908-65138]"
    }, {
      "left" : "tb.pop();",
      "right" : "tb.pop();",
      "info" : "ExpressionStatement[64849-64858]:ExpressionStatement[64930-64939]"
    }, {
      "left" : "if (!tb.isFragmentParsing() && !tb.currentElement().nodeName().equals(\"frameset\"))",
      "right" : "if (!tb.isFragmentParsing() && !tb.currentElement().nodeName().equals(\"frameset\"))",
      "info" : "IfStatement[64879-65039]:IfStatement[64960-65120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64962-65039]:Block[65043-65120]"
    }, {
      "left" : "tb.transition(AfterFrameset);",
      "right" : "tb.transition(AfterFrameset);",
      "info" : "ExpressionStatement[64988-65017]:ExpressionStatement[65069-65098]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[65077-65347]:IfStatement[65158-65428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65092-65264]:Block[65173-65345]"
    }, {
      "left" : "if (!tb.currentElement().nodeName().equals(\"html\"))",
      "right" : "if (!tb.currentElement().nodeName().equals(\"html\"))",
      "info" : "IfStatement[65110-65250]:IfStatement[65191-65331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65162-65250]:Block[65243-65331]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[65184-65199]:ExpressionStatement[65265-65280]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[65220-65232]:ReturnStatement[65301-65313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65270-65347]:Block[65351-65428]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[65288-65303]:ExpressionStatement[65369-65384]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[65320-65333]:ReturnStatement[65401-65414]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[65360-65372]:ReturnStatement[65441-65453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65463-66350]:Block[65544-66431]"
    }, {
      "left" : "if (isWhitespace(t))",
      "right" : "if (isWhitespace(t))",
      "info" : "IfStatement[65477-66315]:IfStatement[65558-66396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65498-65557]:Block[65579-65638]"
    }, {
      "left" : "tb.insert(t.asCharacter());",
      "right" : "tb.insert(t.asCharacter());",
      "info" : "ExpressionStatement[65516-65543]:ExpressionStatement[65597-65624]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[65563-66315]:IfStatement[65644-66396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65582-65639]:Block[65663-65720]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[65600-65625]:ExpressionStatement[65681-65706]"
    }, {
      "left" : "if (t.isDoctype())",
      "right" : "if (t.isDoctype())",
      "info" : "IfStatement[65645-66315]:IfStatement[65726-66396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65664-65741]:Block[65745-65822]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[65682-65697]:ExpressionStatement[65763-65778]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[65714-65727]:ReturnStatement[65795-65808]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[65747-66315]:IfStatement[65828-66396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65813-65874]:Block[65894-65955]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[65831-65860]:ReturnStatement[65912-65941]"
    }, {
      "left" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "right" : "if (t.isEndTag() && t.asEndTag().normalName().equals(\"html\"))",
      "info" : "IfStatement[65880-66315]:IfStatement[65961-66396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65942-66008]:Block[66023-66089]"
    }, {
      "left" : "tb.transition(AfterAfterFrameset);",
      "right" : "tb.transition(AfterAfterFrameset);",
      "info" : "ExpressionStatement[65960-65994]:ExpressionStatement[66041-66075]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "info" : "IfStatement[66014-66315]:IfStatement[66095-66396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66084-66145]:Block[66165-66226]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[66102-66131]:ReturnStatement[66183-66212]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[66151-66315]:IfStatement[66232-66396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66166-66232]:Block[66247-66313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66238-66315]:Block[66319-66396]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[66256-66271]:ExpressionStatement[66337-66352]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[66288-66301]:ReturnStatement[66369-66382]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[66328-66340]:ReturnStatement[66409-66421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66432-66929]:Block[66513-67010]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[66446-66894]:IfStatement[66527-66975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66465-66522]:Block[66546-66603]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[66483-66508]:ExpressionStatement[66564-66589]"
    }, {
      "left" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "right" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "info" : "IfStatement[66528-66894]:IfStatement[66609-66975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66632-66693]:Block[66713-66774]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[66650-66679]:ReturnStatement[66731-66760]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[66699-66894]:IfStatement[66780-66975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66714-66764]:Block[66795-66845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66770-66894]:Block[66851-66975]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[66788-66803]:ExpressionStatement[66869-66884]"
    }, {
      "left" : "tb.transition(InBody);",
      "right" : "tb.transition(InBody);",
      "info" : "ExpressionStatement[66820-66842]:ExpressionStatement[66901-66923]"
    }, {
      "left" : "return tb.process(t);",
      "right" : "return tb.process(t);",
      "info" : "ReturnStatement[66859-66880]:ReturnStatement[66940-66961]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[66907-66919]:ReturnStatement[66988-67000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67015-67602]:Block[67096-67683]"
    }, {
      "left" : "if (t.isComment())",
      "right" : "if (t.isComment())",
      "info" : "IfStatement[67029-67567]:IfStatement[67110-67648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67048-67105]:Block[67129-67186]"
    }, {
      "left" : "tb.insert(t.asComment());",
      "right" : "tb.insert(t.asComment());",
      "info" : "ExpressionStatement[67066-67091]:ExpressionStatement[67147-67172]"
    }, {
      "left" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "right" : "if (t.isDoctype() || isWhitespace(t) || (t.isStartTag() && t.asStartTag().normalName().equals(\"html\")))",
      "info" : "IfStatement[67111-67567]:IfStatement[67192-67648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67215-67276]:Block[67296-67357]"
    }, {
      "left" : "return tb.process(t, InBody);",
      "right" : "return tb.process(t, InBody);",
      "info" : "ReturnStatement[67233-67262]:ReturnStatement[67314-67343]"
    }, {
      "left" : "if (t.isEOF())",
      "right" : "if (t.isEOF())",
      "info" : "IfStatement[67282-67567]:IfStatement[67363-67648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67297-67347]:Block[67378-67428]"
    }, {
      "left" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "right" : "if (t.isStartTag() && t.asStartTag().normalName().equals(\"noframes\"))",
      "info" : "IfStatement[67353-67567]:IfStatement[67434-67648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67423-67484]:Block[67504-67565]"
    }, {
      "left" : "return tb.process(t, InHead);",
      "right" : "return tb.process(t, InHead);",
      "info" : "ReturnStatement[67441-67470]:ReturnStatement[67522-67551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67490-67567]:Block[67571-67648]"
    }, {
      "left" : "tb.error(this);",
      "right" : "tb.error(this);",
      "info" : "ExpressionStatement[67508-67523]:ExpressionStatement[67589-67604]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[67540-67553]:ReturnStatement[67621-67634]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[67580-67592]:ReturnStatement[67661-67673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67684-67778]:Block[67765-67859]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[67698-67710]:ReturnStatement[67779-67791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67962-68124]:Block[68043-68205]"
    }, {
      "left" : "if (t.isCharacter())",
      "right" : "if (t.isCharacter())",
      "info" : "IfStatement[67972-68096]:IfStatement[68053-68177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67993-68096]:Block[68074-68177]"
    }, {
      "left" : "String data = t.asCharacter().getData();",
      "right" : "String data = t.asCharacter().getData();",
      "info" : "VariableDeclarationStatement[68007-68047]:VariableDeclarationStatement[68088-68128]"
    }, {
      "left" : "return isWhitespace(data);",
      "right" : "return isWhitespace(data);",
      "info" : "ReturnStatement[68060-68086]:ReturnStatement[68141-68167]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[68105-68118]:ReturnStatement[68186-68199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68179-68453]:Block[68260-68534]"
    }, {
      "left" : "for (int i = 0; i < data.length(); i++)",
      "right" : "for (int i = 0; i < data.length(); i++)",
      "info" : "ForStatement[68263-68426]:ForStatement[68344-68507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68303-68426]:Block[68384-68507]"
    }, {
      "left" : "char c = data.charAt(i);",
      "right" : "char c = data.charAt(i);",
      "info" : "VariableDeclarationStatement[68317-68341]:VariableDeclarationStatement[68398-68422]"
    }, {
      "left" : "if (!StringUtil.isWhitespace(c))",
      "right" : "if (!StringUtil.isWhitespace(c))",
      "info" : "IfStatement[68354-68416]:IfStatement[68435-68497]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[68403-68416]:ReturnStatement[68484-68497]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[68435-68447]:ReturnStatement[68516-68528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68537-68690]:Block[68618-68771]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.Rcdata);",
      "right" : "tb.tokeniser.transition(TokeniserState.Rcdata);",
      "info" : "ExpressionStatement[68547-68594]:ExpressionStatement[68628-68675]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[68603-68626]:ExpressionStatement[68684-68707]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[68635-68655]:ExpressionStatement[68716-68736]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[68664-68684]:ExpressionStatement[68745-68765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68775-68929]:Block[68856-69010]"
    }, {
      "left" : "tb.tokeniser.transition(TokeniserState.Rawtext);",
      "right" : "tb.tokeniser.transition(TokeniserState.Rawtext);",
      "info" : "ExpressionStatement[68785-68833]:ExpressionStatement[68866-68914]"
    }, {
      "left" : "tb.markInsertionMode();",
      "right" : "tb.markInsertionMode();",
      "info" : "ExpressionStatement[68842-68865]:ExpressionStatement[68923-68946]"
    }, {
      "left" : "tb.transition(Text);",
      "right" : "tb.transition(Text);",
      "info" : "ExpressionStatement[68874-68894]:ExpressionStatement[68955-68975]"
    }, {
      "left" : "tb.insert(startTag);",
      "right" : "tb.insert(startTag);",
      "info" : "ExpressionStatement[68903-68923]:ExpressionStatement[68984-69004]"
    } ]
  },
  "interFileMappings" : { }
}