{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Element",
      "right" : "Element",
      "info" : "TypeDeclaration[909-51349]:TypeDeclaration[909-51378]"
    }, {
      "left" : "private static final List<Node> EMPTY_NODES = Collections.emptyList();",
      "right" : "private static final List<Node> EMPTY_NODES = Collections.emptyList();",
      "info" : "FieldDeclaration[1221-1291]:FieldDeclaration[1221-1291]"
    }, {
      "left" : "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
      "right" : "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
      "info" : "FieldDeclaration[1296-1362]:FieldDeclaration[1296-1362]"
    }, {
      "left" : "private Tag tag;",
      "right" : "private Tag tag;",
      "info" : "FieldDeclaration[1367-1383]:FieldDeclaration[1367-1383]"
    }, {
      "left" : "private WeakReference<List<Element>> shadowChildrenRef;",
      "right" : "private WeakReference<List<Element>> shadowChildrenRef;",
      "info" : "FieldDeclaration[1388-1443]:FieldDeclaration[1388-1443]"
    }, {
      "left" : "List<Node> childNodes;",
      "right" : "List<Node> childNodes;",
      "info" : "FieldDeclaration[1504-1526]:FieldDeclaration[1504-1526]"
    }, {
      "left" : "private Attributes attributes;",
      "right" : "private Attributes attributes;",
      "info" : "FieldDeclaration[1531-1561]:FieldDeclaration[1531-1561]"
    }, {
      "left" : "private String baseUri;",
      "right" : "private String baseUri;",
      "info" : "FieldDeclaration[1566-1589]:FieldDeclaration[1566-1589]"
    }, {
      "left" : "public Element(String tag)",
      "right" : "public Element(String tag)",
      "info" : "MethodDeclaration[1595-1767]:MethodDeclaration[1595-1767]"
    }, {
      "left" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "right" : "public Element(Tag tag, String baseUri, Attributes attributes)",
      "info" : "MethodDeclaration[1773-2324]:MethodDeclaration[1773-2324]"
    }, {
      "left" : "public Element(Tag tag, String baseUri)",
      "right" : "public Element(Tag tag, String baseUri)",
      "info" : "MethodDeclaration[2334-2712]:MethodDeclaration[2334-2712]"
    }, {
      "left" : "protected List<Node> ensureChildNodes()",
      "right" : "protected List<Node> ensureChildNodes()",
      "info" : "MethodDeclaration[2718-2891]:MethodDeclaration[2718-2891]"
    }, {
      "left" : "protected boolean hasAttributes()",
      "right" : "protected boolean hasAttributes()",
      "info" : "MethodDeclaration[2897-2987]:MethodDeclaration[2897-2987]"
    }, {
      "left" : "public Attributes attributes()",
      "right" : "public Attributes attributes()",
      "info" : "MethodDeclaration[2993-3145]:MethodDeclaration[2993-3145]"
    }, {
      "left" : "public String baseUri()",
      "right" : "public String baseUri()",
      "info" : "MethodDeclaration[3151-3220]:MethodDeclaration[3151-3220]"
    }, {
      "left" : "protected void doSetBaseUri(String baseUri)",
      "right" : "protected void doSetBaseUri(String baseUri)",
      "info" : "MethodDeclaration[3226-3323]:MethodDeclaration[3226-3323]"
    }, {
      "left" : "public int childNodeSize()",
      "right" : "public int childNodeSize()",
      "info" : "MethodDeclaration[3329-3411]:MethodDeclaration[3329-3411]"
    }, {
      "left" : "public String nodeName()",
      "right" : "public String nodeName()",
      "info" : "MethodDeclaration[3417-3493]:MethodDeclaration[3417-3493]"
    }, {
      "left" : "public String tagName()",
      "right" : "public String tagName()",
      "info" : "MethodDeclaration[3499-3678]:MethodDeclaration[3499-3678]"
    }, {
      "left" : "public Element tagName(String tagName)",
      "right" : "public Element tagName(String tagName)",
      "info" : "MethodDeclaration[3684-4170]:MethodDeclaration[3684-4170]"
    }, {
      "left" : "public Tag tag()",
      "right" : "public Tag tag()",
      "info" : "MethodDeclaration[4176-4311]:MethodDeclaration[4176-4311]"
    }, {
      "left" : "public boolean isBlock()",
      "right" : "public boolean isBlock()",
      "info" : "MethodDeclaration[4321-4601]:MethodDeclaration[4321-4601]"
    }, {
      "left" : "public String id()",
      "right" : "public String id()",
      "info" : "MethodDeclaration[4607-4831]:MethodDeclaration[4607-4831]"
    }, {
      "left" : "public Element attr(String attributeKey, String attributeValue)",
      "right" : "public Element attr(String attributeKey, String attributeValue)",
      "info" : "MethodDeclaration[4837-5199]:MethodDeclaration[4837-5199]"
    }, {
      "left" : "public Element attr(String attributeKey, boolean attributeValue)",
      "right" : "public Element attr(String attributeKey, boolean attributeValue)",
      "info" : "MethodDeclaration[5209-5787]:MethodDeclaration[5209-5787]"
    }, {
      "left" : "public Map<String, String> dataset()",
      "right" : "public Map<String, String> dataset()",
      "info" : "MethodDeclaration[5793-6565]:MethodDeclaration[5793-6565]"
    }, {
      "left" : "public final Element parent()",
      "right" : "public final Element parent()",
      "info" : "MethodDeclaration[6571-6659]:MethodDeclaration[6571-6659]"
    }, {
      "left" : "public Elements parents()",
      "right" : "public Elements parents()",
      "info" : "MethodDeclaration[6665-6959]:MethodDeclaration[6665-6959]"
    }, {
      "left" : "private static void accumulateParents(Element el, Elements parents)",
      "right" : "private static void accumulateParents(Element el, Elements parents)",
      "info" : "MethodDeclaration[6965-7236]:MethodDeclaration[6965-7236]"
    }, {
      "left" : "public Element child(int index)",
      "right" : "public Element child(int index)",
      "info" : "MethodDeclaration[7242-7843]:MethodDeclaration[7242-7843]"
    }, {
      "left" : "public Elements children()",
      "right" : "public Elements children()",
      "info" : "MethodDeclaration[7849-8210]:MethodDeclaration[7849-8210]"
    }, {
      "left" : "private List<Element> childElementsList()",
      "right" : "private List<Element> childElementsList()",
      "info" : "MethodDeclaration[8216-9196]:MethodDeclaration[8216-9196]"
    }, {
      "left" : "void nodelistChanged()",
      "right" : "void nodelistChanged()",
      "info" : "MethodDeclaration[9202-9377]:MethodDeclaration[9202-9377]"
    }, {
      "left" : "public List<TextNode> textNodes()",
      "right" : "public List<TextNode> textNodes()",
      "info" : "MethodDeclaration[9383-10563]:MethodDeclaration[9383-10563]"
    }, {
      "left" : "public List<DataNode> dataNodes()",
      "right" : "public List<DataNode> dataNodes()",
      "info" : "MethodDeclaration[10569-11204]:MethodDeclaration[10569-11204]"
    }, {
      "left" : "public Elements select(String cssQuery)",
      "right" : "public Elements select(String cssQuery)",
      "info" : "MethodDeclaration[11210-12265]:MethodDeclaration[11210-12265]"
    }, {
      "left" : "public Element selectFirst(String cssQuery)",
      "right" : "public Element selectFirst(String cssQuery)",
      "info" : "MethodDeclaration[12271-12828]:MethodDeclaration[12271-12828]"
    }, {
      "left" : "public boolean is(String cssQuery)",
      "right" : "public boolean is(String cssQuery)",
      "info" : "MethodDeclaration[12834-13116]:MethodDeclaration[12834-13116]"
    }, {
      "left" : "public boolean is(Evaluator evaluator)",
      "right" : "public boolean is(Evaluator evaluator)",
      "info" : "MethodDeclaration[13122-13388]:MethodDeclaration[13122-13388]"
    }, {
      "left" : "public Element appendChild(Node child)",
      "right" : "public Element appendChild(Node child)",
      "info" : "MethodDeclaration[13398-13909]:MethodDeclaration[13398-13909]"
    }, {
      "left" : "public Element appendTo(Element parent)",
      "right" : "public Element appendTo(Element parent)",
      "info" : "MethodDeclaration[13915-14293]:MethodDeclaration[13915-14293]"
    }, {
      "left" : "public Element prependChild(Node child)",
      "right" : "public Element prependChild(Node child)",
      "info" : "MethodDeclaration[14299-14635]:MethodDeclaration[14299-14635]"
    }, {
      "left" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "right" : "public Element insertChildren(int index, Collection<? extends Node> children)",
      "info" : "MethodDeclaration[14642-15676]:MethodDeclaration[14642-15676]"
    }, {
      "left" : "public Element insertChildren(int index, Node... children)",
      "right" : "public Element insertChildren(int index, Node... children)",
      "info" : "MethodDeclaration[15682-16571]:MethodDeclaration[15682-16571]"
    }, {
      "left" : "public Element appendElement(String tagName)",
      "right" : "public Element appendElement(String tagName)",
      "info" : "MethodDeclaration[16581-17064]:MethodDeclaration[16581-17064]"
    }, {
      "left" : "public Element prependElement(String tagName)",
      "right" : "public Element prependElement(String tagName)",
      "info" : "MethodDeclaration[17074-17561]:MethodDeclaration[17074-17561]"
    }, {
      "left" : "public Element appendText(String text)",
      "right" : "public Element appendText(String text)",
      "info" : "MethodDeclaration[17571-17895]:MethodDeclaration[17571-17895]"
    }, {
      "left" : "public Element prependText(String text)",
      "right" : "public Element prependText(String text)",
      "info" : "MethodDeclaration[17905-18232]:MethodDeclaration[17905-18232]"
    }, {
      "left" : "public Element append(String html)",
      "right" : "public Element append(String html)",
      "info" : "MethodDeclaration[18242-18740]:MethodDeclaration[18242-18740]"
    }, {
      "left" : "public Element prepend(String html)",
      "right" : "public Element prepend(String html)",
      "info" : "MethodDeclaration[18750-19276]:MethodDeclaration[18750-19276]"
    }, {
      "left" : "public Element before(String html)",
      "right" : "public Element before(String html)",
      "info" : "MethodDeclaration[19282-19618]:MethodDeclaration[19282-19618]"
    }, {
      "left" : "public Element before(Node node)",
      "right" : "public Element before(Node node)",
      "info" : "MethodDeclaration[19624-19941]:MethodDeclaration[19624-19941]"
    }, {
      "left" : "public Element after(String html)",
      "right" : "public Element after(String html)",
      "info" : "MethodDeclaration[19947-20280]:MethodDeclaration[19947-20280]"
    }, {
      "left" : "public Element after(Node node)",
      "right" : "public Element after(Node node)",
      "info" : "MethodDeclaration[20286-20600]:MethodDeclaration[20286-20600]"
    }, {
      "left" : "public Element empty()",
      "right" : "public Element empty()",
      "info" : "MethodDeclaration[20606-20808]:MethodDeclaration[20606-20808]"
    }, {
      "left" : "public Element wrap(String html)",
      "right" : "public Element wrap(String html)",
      "info" : "MethodDeclaration[20814-21145]:MethodDeclaration[20814-21145]"
    }, {
      "left" : "public String cssSelector()",
      "right" : "public String cssSelector()",
      "info" : "MethodDeclaration[21151-22432]:MethodDeclaration[21151-22432]"
    }, {
      "left" : "public Elements siblingElements()",
      "right" : "public Elements siblingElements()",
      "info" : "MethodDeclaration[22438-23028]:MethodDeclaration[22438-23028]"
    }, {
      "left" : "public Element nextElementSibling()",
      "right" : "public Element nextElementSibling()",
      "info" : "MethodDeclaration[23034-23812]:MethodDeclaration[23034-23812]"
    }, {
      "left" : "public Element previousElementSibling()",
      "right" : "public Element previousElementSibling()",
      "info" : "MethodDeclaration[23818-24347]:MethodDeclaration[23818-24347]"
    }, {
      "left" : "public Element firstElementSibling()",
      "right" : "public Element firstElementSibling()",
      "info" : "MethodDeclaration[24353-24737]:MethodDeclaration[24353-24737]"
    }, {
      "left" : "public int elementSiblingIndex()",
      "right" : "public int elementSiblingIndex()",
      "info" : "MethodDeclaration[24747-25085]:MethodDeclaration[24747-25085]"
    }, {
      "left" : "public Element lastElementSibling()",
      "right" : "public Element lastElementSibling()",
      "info" : "MethodDeclaration[25091-25435]:MethodDeclaration[25091-25435]"
    }, {
      "left" : "private static <E extends Element> int indexInList(Element search, List<E> elements)",
      "right" : "private static <E extends Element> int indexInList(Element search, List<E> elements)",
      "info" : "MethodDeclaration[25441-25682]:MethodDeclaration[25441-25682]"
    }, {
      "left" : "public Elements getElementsByTag(String tagName)",
      "right" : "public Elements getElementsByTag(String tagName)",
      "info" : "MethodDeclaration[25713-26216]:MethodDeclaration[25713-26216]"
    }, {
      "left" : "public Element getElementById(String id)",
      "right" : "public Element getElementById(String id)",
      "info" : "MethodDeclaration[26222-27004]:MethodDeclaration[26222-27004]"
    }, {
      "left" : "public Elements getElementsByClass(String className)",
      "right" : "public Elements getElementsByClass(String className)",
      "info" : "MethodDeclaration[27010-27696]:MethodDeclaration[27010-27696]"
    }, {
      "left" : "public Elements getElementsByAttribute(String key)",
      "right" : "public Elements getElementsByAttribute(String key)",
      "info" : "MethodDeclaration[27702-28107]:MethodDeclaration[27702-28107]"
    }, {
      "left" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "right" : "public Elements getElementsByAttributeStarting(String keyPrefix)",
      "info" : "MethodDeclaration[28113-28684]:MethodDeclaration[28113-28684]"
    }, {
      "left" : "public Elements getElementsByAttributeValue(String key, String value)",
      "right" : "public Elements getElementsByAttributeValue(String key, String value)",
      "info" : "MethodDeclaration[28690-29127]:MethodDeclaration[28690-29127]"
    }, {
      "left" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "right" : "public Elements getElementsByAttributeValueNot(String key, String value)",
      "info" : "MethodDeclaration[29133-29585]:MethodDeclaration[29133-29585]"
    }, {
      "left" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "right" : "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix)",
      "info" : "MethodDeclaration[29591-30069]:MethodDeclaration[29591-30069]"
    }, {
      "left" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "right" : "public Elements getElementsByAttributeValueEnding(String key, String valueSuffix)",
      "info" : "MethodDeclaration[30075-30547]:MethodDeclaration[30075-30547]"
    }, {
      "left" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "right" : "public Elements getElementsByAttributeValueContaining(String key, String match)",
      "info" : "MethodDeclaration[30553-31018]:MethodDeclaration[30553-31018]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern)",
      "info" : "MethodDeclaration[31028-31533]:MethodDeclaration[31028-31533]"
    }, {
      "left" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "right" : "public Elements getElementsByAttributeValueMatching(String key, String regex)",
      "info" : "MethodDeclaration[31543-32389]:MethodDeclaration[31543-32389]"
    }, {
      "left" : "public Elements getElementsByIndexLessThan(int index)",
      "right" : "public Elements getElementsByIndexLessThan(int index)",
      "info" : "MethodDeclaration[32399-32700]:MethodDeclaration[32399-32700]"
    }, {
      "left" : "public Elements getElementsByIndexGreaterThan(int index)",
      "right" : "public Elements getElementsByIndexGreaterThan(int index)",
      "info" : "MethodDeclaration[32710-33023]:MethodDeclaration[32710-33023]"
    }, {
      "left" : "public Elements getElementsByIndexEquals(int index)",
      "right" : "public Elements getElementsByIndexEquals(int index)",
      "info" : "MethodDeclaration[33033-33328]:MethodDeclaration[33033-33328]"
    }, {
      "left" : "public Elements getElementsContainingText(String searchText)",
      "right" : "public Elements getElementsContainingText(String searchText)",
      "info" : "MethodDeclaration[33338-33825]:MethodDeclaration[33338-33825]"
    }, {
      "left" : "public Elements getElementsContainingOwnText(String searchText)",
      "right" : "public Elements getElementsContainingOwnText(String searchText)",
      "info" : "MethodDeclaration[33835-34346]:MethodDeclaration[33835-34346]"
    }, {
      "left" : "public Elements getElementsMatchingText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingText(Pattern pattern)",
      "info" : "MethodDeclaration[34356-34737]:MethodDeclaration[34356-34737]"
    }, {
      "left" : "public Elements getElementsMatchingText(String regex)",
      "right" : "public Elements getElementsMatchingText(String regex)",
      "info" : "MethodDeclaration[34747-35494]:MethodDeclaration[34747-35494]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "right" : "public Elements getElementsMatchingOwnText(Pattern pattern)",
      "info" : "MethodDeclaration[35504-35898]:MethodDeclaration[35504-35898]"
    }, {
      "left" : "public Elements getElementsMatchingOwnText(String regex)",
      "right" : "public Elements getElementsMatchingOwnText(String regex)",
      "info" : "MethodDeclaration[35908-36664]:MethodDeclaration[35908-36664]"
    }, {
      "left" : "public Elements getAllElements()",
      "right" : "public Elements getAllElements()",
      "info" : "MethodDeclaration[36674-36923]:MethodDeclaration[36674-36923]"
    }, {
      "left" : "public String text()",
      "right" : "public String text()",
      "info" : "MethodDeclaration[36929-38154]:MethodDeclaration[36929-38154]"
    }, {
      "left" : "public void head(Node node, int depth)",
      "right" : "public void head(Node node, int depth)",
      "info" : "MethodDeclaration[37441-38022]:MethodDeclaration[37441-38022]"
    }, {
      "left" : "public void tail(Node node, int depth)",
      "right" : "public void tail(Node node, int depth)",
      "info" : "MethodDeclaration[38036-38090]:MethodDeclaration[38036-38090]"
    }, {
      "left" : "public String ownText()",
      "right" : "public String ownText()",
      "info" : "MethodDeclaration[38160-38844]:MethodDeclaration[38160-38844]"
    }, {
      "left" : "private void ownText(StringBuilder accum)",
      "right" : "private void ownText(StringBuilder accum)",
      "info" : "MethodDeclaration[38850-39230]:MethodDeclaration[38850-39230]"
    }, {
      "left" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "right" : "private static void appendNormalisedText(StringBuilder accum, TextNode textNode)",
      "info" : "MethodDeclaration[39236-39572]:MethodDeclaration[39236-39572]"
    }, {
      "left" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "right" : "private static void appendWhitespaceIfBr(Element element, StringBuilder accum)",
      "info" : "MethodDeclaration[39578-39784]:MethodDeclaration[39578-39784]"
    }, {
      "left" : "static boolean preserveWhitespace(Node node)",
      "right" : "static boolean preserveWhitespace(Node node)",
      "info" : "MethodDeclaration[39790-40266]:MethodDeclaration[39790-40295]"
    }, {
      "left" : "public Element text(String text)",
      "right" : "public Element text(String text)",
      "info" : "MethodDeclaration[40272-40635]:MethodDeclaration[40301-40664]"
    }, {
      "left" : "public boolean hasText()",
      "right" : "public boolean hasText()",
      "info" : "MethodDeclaration[40641-41246]:MethodDeclaration[40670-41275]"
    }, {
      "left" : "public String data()",
      "right" : "public String data()",
      "info" : "MethodDeclaration[41252-42342]:MethodDeclaration[41281-42371]"
    }, {
      "left" : "public String className()",
      "right" : "public String className()",
      "info" : "MethodDeclaration[42351-42753]:MethodDeclaration[42380-42782]"
    }, {
      "left" : "public Set<String> classNames()",
      "right" : "public Set<String> classNames()",
      "info" : "MethodDeclaration[42759-43441]:MethodDeclaration[42788-43470]"
    }, {
      "left" : "public Element classNames(Set<String> classNames)",
      "right" : "public Element classNames(Set<String> classNames)",
      "info" : "MethodDeclaration[43447-43911]:MethodDeclaration[43476-43940]"
    }, {
      "left" : "// performance sensitive\n    public boolean hasClass(String className)",
      "right" : "// performance sensitive\n    public boolean hasClass(String className)",
      "info" : "MethodDeclaration[43917-45652]:MethodDeclaration[43946-45681]"
    }, {
      "left" : "public Element addClass(String className)",
      "right" : "public Element addClass(String className)",
      "info" : "MethodDeclaration[45658-46019]:MethodDeclaration[45687-46048]"
    }, {
      "left" : "public Element removeClass(String className)",
      "right" : "public Element removeClass(String className)",
      "info" : "MethodDeclaration[46025-46400]:MethodDeclaration[46054-46429]"
    }, {
      "left" : "public Element toggleClass(String className)",
      "right" : "public Element toggleClass(String className)",
      "info" : "MethodDeclaration[46406-46914]:MethodDeclaration[46435-46943]"
    }, {
      "left" : "public String val()",
      "right" : "public String val()",
      "info" : "MethodDeclaration[46924-47220]:MethodDeclaration[46953-47249]"
    }, {
      "left" : "public Element val(String value)",
      "right" : "public Element val(String value)",
      "info" : "MethodDeclaration[47230-47560]:MethodDeclaration[47259-47589]"
    }, {
      "left" : "void outerHtmlHead(final Appendable accum, int depth, final Document.OutputSettings out) throws IOException",
      "right" : "void outerHtmlHead(final Appendable accum, int depth, final Document.OutputSettings out) throws IOException",
      "info" : "MethodDeclaration[47566-48572]:MethodDeclaration[47595-48601]"
    }, {
      "left" : "void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException",
      "right" : "void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) throws IOException",
      "info" : "MethodDeclaration[48575-49090]:MethodDeclaration[48604-49119]"
    }, {
      "left" : "public String html()",
      "right" : "public String html()",
      "info" : "MethodDeclaration[49096-49582]:MethodDeclaration[49125-49611]"
    }, {
      "left" : "private void html(StringBuilder accum)",
      "right" : "private void html(StringBuilder accum)",
      "info" : "MethodDeclaration[49588-49706]:MethodDeclaration[49617-49735]"
    }, {
      "left" : "public <T extends Appendable> T html(T appendable)",
      "right" : "public <T extends Appendable> T html(T appendable)",
      "info" : "MethodDeclaration[49712-49926]:MethodDeclaration[49741-49955]"
    }, {
      "left" : "public Element html(String html)",
      "right" : "public Element html(String html)",
      "info" : "MethodDeclaration[49936-50237]:MethodDeclaration[49965-50266]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[50240-50300]:MethodDeclaration[50269-50329]"
    }, {
      "left" : "public Element clone()",
      "right" : "public Element clone()",
      "info" : "MethodDeclaration[50306-50390]:MethodDeclaration[50335-50419]"
    }, {
      "left" : "public Element shallowClone()",
      "right" : "public Element shallowClone()",
      "info" : "MethodDeclaration[50396-50573]:MethodDeclaration[50425-50602]"
    }, {
      "left" : "protected Element doClone(Node parent)",
      "right" : "protected Element doClone(Node parent)",
      "info" : "MethodDeclaration[50579-50998]:MethodDeclaration[50608-51027]"
    }, {
      "left" : "NodeList",
      "right" : "NodeList",
      "info" : "TypeDeclaration[51004-51347]:TypeDeclaration[51033-51376]"
    }, {
      "left" : "private final Element owner;",
      "right" : "private final Element owner;",
      "info" : "FieldDeclaration[51089-51117]:FieldDeclaration[51118-51146]"
    }, {
      "left" : "NodeList(Element owner, int initialCapacity)",
      "right" : "NodeList(Element owner, int initialCapacity)",
      "info" : "MethodDeclaration[51127-51251]:MethodDeclaration[51156-51280]"
    }, {
      "left" : "public void onContentsChanged()",
      "right" : "public void onContentsChanged()",
      "info" : "MethodDeclaration[51261-51341]:MethodDeclaration[51290-51370]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1181-1187]:Modifier[1181-1187]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1188-1193]:TYPE_DECLARATION_KIND[1188-1193]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[1194-1201]:SimpleName[1194-1201]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[1210-1214]:SimpleType[1210-1214]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1679-1685]:Modifier[1679-1685]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[1686-1693]:SimpleName[1686-1693]"
    }, {
      "left" : "String tag",
      "right" : "String tag",
      "info" : "SingleVariableDeclaration[1694-1704]:SingleVariableDeclaration[1694-1704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1706-1767]:Block[1706-1767]"
    }, {
      "left" : "this(Tag.valueOf(tag), \"\", new Attributes());",
      "right" : "this(Tag.valueOf(tag), \"\", new Attributes());",
      "info" : "ConstructorInvocation[1716-1761]:ConstructorInvocation[1716-1761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2060-2066]:Modifier[2060-2066]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[2067-2074]:SimpleName[2067-2074]"
    }, {
      "left" : "Tag tag",
      "right" : "Tag tag",
      "info" : "SingleVariableDeclaration[2075-2082]:SingleVariableDeclaration[2075-2082]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[2084-2098]:SingleVariableDeclaration[2084-2098]"
    }, {
      "left" : "Attributes attributes",
      "right" : "Attributes attributes",
      "info" : "SingleVariableDeclaration[2100-2121]:SingleVariableDeclaration[2100-2121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2123-2324]:Block[2123-2324]"
    }, {
      "left" : "Validate.notNull(tag);",
      "right" : "Validate.notNull(tag);",
      "info" : "ExpressionStatement[2133-2155]:ExpressionStatement[2133-2155]"
    }, {
      "left" : "Validate.notNull(baseUri);",
      "right" : "Validate.notNull(baseUri);",
      "info" : "ExpressionStatement[2164-2190]:ExpressionStatement[2164-2190]"
    }, {
      "left" : "childNodes = EMPTY_NODES;",
      "right" : "childNodes = EMPTY_NODES;",
      "info" : "ExpressionStatement[2199-2224]:ExpressionStatement[2199-2224]"
    }, {
      "left" : "this.baseUri = baseUri;",
      "right" : "this.baseUri = baseUri;",
      "info" : "ExpressionStatement[2233-2256]:ExpressionStatement[2233-2256]"
    }, {
      "left" : "this.attributes = attributes;",
      "right" : "this.attributes = attributes;",
      "info" : "ExpressionStatement[2265-2294]:ExpressionStatement[2265-2294]"
    }, {
      "left" : "this.tag = tag;",
      "right" : "this.tag = tag;",
      "info" : "ExpressionStatement[2303-2318]:ExpressionStatement[2303-2318]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2631-2637]:Modifier[2631-2637]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleName[2638-2645]:SimpleName[2638-2645]"
    }, {
      "left" : "Tag tag",
      "right" : "Tag tag",
      "info" : "SingleVariableDeclaration[2646-2653]:SingleVariableDeclaration[2646-2653]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[2655-2669]:SingleVariableDeclaration[2655-2669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2671-2712]:Block[2671-2712]"
    }, {
      "left" : "this(tag, baseUri, null);",
      "right" : "this(tag, baseUri, null);",
      "info" : "ConstructorInvocation[2681-2706]:ConstructorInvocation[2681-2706]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2718-2727]:Modifier[2718-2727]"
    }, {
      "left" : "List<Node>",
      "right" : "List<Node>",
      "info" : "ParameterizedType[2728-2738]:ParameterizedType[2728-2738]"
    }, {
      "left" : "ensureChildNodes",
      "right" : "ensureChildNodes",
      "info" : "SimpleName[2739-2755]:SimpleName[2739-2755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2758-2891]:Block[2758-2891]"
    }, {
      "left" : "if (childNodes == EMPTY_NODES)",
      "right" : "if (childNodes == EMPTY_NODES)",
      "info" : "IfStatement[2768-2858]:IfStatement[2768-2858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2799-2858]:Block[2799-2858]"
    }, {
      "left" : "childNodes = new NodeList(this, 4);",
      "right" : "childNodes = new NodeList(this, 4);",
      "info" : "ExpressionStatement[2813-2848]:ExpressionStatement[2813-2848]"
    }, {
      "left" : "return childNodes;",
      "right" : "return childNodes;",
      "info" : "ReturnStatement[2867-2885]:ReturnStatement[2867-2885]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2897-2906]:MarkerAnnotation[2897-2906]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2911-2920]:Modifier[2911-2920]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[2921-2928]:PrimitiveType[2921-2928]"
    }, {
      "left" : "hasAttributes",
      "right" : "hasAttributes",
      "info" : "SimpleName[2929-2942]:SimpleName[2929-2942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2945-2987]:Block[2945-2987]"
    }, {
      "left" : "return attributes != null;",
      "right" : "return attributes != null;",
      "info" : "ReturnStatement[2955-2981]:ReturnStatement[2955-2981]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2993-3002]:MarkerAnnotation[2993-3002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3007-3013]:Modifier[3007-3013]"
    }, {
      "left" : "Attributes",
      "right" : "Attributes",
      "info" : "SimpleType[3014-3024]:SimpleType[3014-3024]"
    }, {
      "left" : "attributes",
      "right" : "attributes",
      "info" : "SimpleName[3025-3035]:SimpleName[3025-3035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3038-3145]:Block[3038-3145]"
    }, {
      "left" : "if (!hasAttributes())",
      "right" : "if (!hasAttributes())",
      "info" : "IfStatement[3048-3112]:IfStatement[3048-3112]"
    }, {
      "left" : "attributes = new Attributes();",
      "right" : "attributes = new Attributes();",
      "info" : "ExpressionStatement[3082-3112]:ExpressionStatement[3082-3112]"
    }, {
      "left" : "return attributes;",
      "right" : "return attributes;",
      "info" : "ReturnStatement[3121-3139]:ReturnStatement[3121-3139]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3151-3160]:MarkerAnnotation[3151-3160]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3165-3171]:Modifier[3165-3171]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3172-3178]:SimpleType[3172-3178]"
    }, {
      "left" : "baseUri",
      "right" : "baseUri",
      "info" : "SimpleName[3179-3186]:SimpleName[3179-3186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3189-3220]:Block[3189-3220]"
    }, {
      "left" : "return baseUri;",
      "right" : "return baseUri;",
      "info" : "ReturnStatement[3199-3214]:ReturnStatement[3199-3214]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3226-3235]:MarkerAnnotation[3226-3235]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3240-3249]:Modifier[3240-3249]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3250-3254]:PrimitiveType[3250-3254]"
    }, {
      "left" : "doSetBaseUri",
      "right" : "doSetBaseUri",
      "info" : "SimpleName[3255-3267]:SimpleName[3255-3267]"
    }, {
      "left" : "String baseUri",
      "right" : "String baseUri",
      "info" : "SingleVariableDeclaration[3268-3282]:SingleVariableDeclaration[3268-3282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3284-3323]:Block[3284-3323]"
    }, {
      "left" : "this.baseUri = baseUri;",
      "right" : "this.baseUri = baseUri;",
      "info" : "ExpressionStatement[3294-3317]:ExpressionStatement[3294-3317]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3329-3338]:MarkerAnnotation[3329-3338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3343-3349]:Modifier[3343-3349]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3350-3353]:PrimitiveType[3350-3353]"
    }, {
      "left" : "childNodeSize",
      "right" : "childNodeSize",
      "info" : "SimpleName[3354-3367]:SimpleName[3354-3367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3370-3411]:Block[3370-3411]"
    }, {
      "left" : "return childNodes.size();",
      "right" : "return childNodes.size();",
      "info" : "ReturnStatement[3380-3405]:ReturnStatement[3380-3405]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3417-3426]:MarkerAnnotation[3417-3426]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3431-3437]:Modifier[3431-3437]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3438-3444]:SimpleType[3438-3444]"
    }, {
      "left" : "nodeName",
      "right" : "nodeName",
      "info" : "SimpleName[3445-3453]:SimpleName[3445-3453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3456-3493]:Block[3456-3493]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[3466-3487]:ReturnStatement[3466-3487]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3617-3623]:Modifier[3617-3623]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[3624-3630]:SimpleType[3624-3630]"
    }, {
      "left" : "tagName",
      "right" : "tagName",
      "info" : "SimpleName[3631-3638]:SimpleName[3631-3638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3641-3678]:Block[3641-3678]"
    }, {
      "left" : "return tag.getName();",
      "right" : "return tag.getName();",
      "info" : "ReturnStatement[3651-3672]:ReturnStatement[3651-3672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3937-3943]:Modifier[3937-3943]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[3944-3951]:SimpleType[3944-3951]"
    }, {
      "left" : "tagName",
      "right" : "tagName",
      "info" : "SimpleName[3952-3959]:SimpleName[3952-3959]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[3960-3974]:SingleVariableDeclaration[3960-3974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3976-4170]:Block[3976-4170]"
    }, {
      "left" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "right" : "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
      "info" : "ExpressionStatement[3986-4044]:ExpressionStatement[3986-4044]"
    }, {
      "left" : "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
      "right" : "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
      "info" : "ExpressionStatement[4053-4108]:ExpressionStatement[4053-4108]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[4152-4164]:ReturnStatement[4152-4164]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4267-4273]:Modifier[4267-4273]"
    }, {
      "left" : "Tag",
      "right" : "Tag",
      "info" : "SimpleType[4274-4277]:SimpleType[4274-4277]"
    }, {
      "left" : "tag",
      "right" : "tag",
      "info" : "SimpleName[4278-4281]:SimpleName[4278-4281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4284-4311]:Block[4284-4311]"
    }, {
      "left" : "return tag;",
      "right" : "return tag;",
      "info" : "ReturnStatement[4294-4305]:ReturnStatement[4294-4305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4539-4545]:Modifier[4539-4545]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4546-4553]:PrimitiveType[4546-4553]"
    }, {
      "left" : "isBlock",
      "right" : "isBlock",
      "info" : "SimpleName[4554-4561]:SimpleName[4554-4561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4564-4601]:Block[4564-4601]"
    }, {
      "left" : "return tag.isBlock();",
      "right" : "return tag.isBlock();",
      "info" : "ReturnStatement[4574-4595]:ReturnStatement[4574-4595]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4756-4762]:Modifier[4756-4762]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4763-4769]:SimpleType[4763-4769]"
    }, {
      "left" : "id",
      "right" : "id",
      "info" : "SimpleName[4770-4772]:SimpleName[4770-4772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4775-4831]:Block[4775-4831]"
    }, {
      "left" : "return attributes().getIgnoreCase(\"id\");",
      "right" : "return attributes().getIgnoreCase(\"id\");",
      "info" : "ReturnStatement[4785-4825]:ReturnStatement[4785-4825]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5057-5063]:Modifier[5057-5063]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[5064-5071]:SimpleType[5064-5071]"
    }, {
      "left" : "attr",
      "right" : "attr",
      "info" : "SimpleName[5072-5076]:SimpleName[5072-5076]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[5077-5096]:SingleVariableDeclaration[5077-5096]"
    }, {
      "left" : "String attributeValue",
      "right" : "String attributeValue",
      "info" : "SingleVariableDeclaration[5098-5119]:SingleVariableDeclaration[5098-5119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5121-5199]:Block[5121-5199]"
    }, {
      "left" : "super.attr(attributeKey, attributeValue);",
      "right" : "super.attr(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[5131-5172]:ExpressionStatement[5131-5172]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5181-5193]:ReturnStatement[5181-5193]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5638-5644]:Modifier[5638-5644]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[5645-5652]:SimpleType[5645-5652]"
    }, {
      "left" : "attr",
      "right" : "attr",
      "info" : "SimpleName[5653-5657]:SimpleName[5653-5657]"
    }, {
      "left" : "String attributeKey",
      "right" : "String attributeKey",
      "info" : "SingleVariableDeclaration[5658-5677]:SingleVariableDeclaration[5658-5677]"
    }, {
      "left" : "boolean attributeValue",
      "right" : "boolean attributeValue",
      "info" : "SingleVariableDeclaration[5679-5701]:SingleVariableDeclaration[5679-5701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5703-5787]:Block[5703-5787]"
    }, {
      "left" : "attributes().put(attributeKey, attributeValue);",
      "right" : "attributes().put(attributeKey, attributeValue);",
      "info" : "ExpressionStatement[5713-5760]:ExpressionStatement[5713-5760]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5769-5781]:ReturnStatement[5769-5781]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6482-6488]:Modifier[6482-6488]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[6489-6508]:ParameterizedType[6489-6508]"
    }, {
      "left" : "dataset",
      "right" : "dataset",
      "info" : "SimpleName[6509-6516]:SimpleName[6509-6516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6519-6565]:Block[6519-6565]"
    }, {
      "left" : "return attributes().dataset();",
      "right" : "return attributes().dataset();",
      "info" : "ReturnStatement[6529-6559]:ReturnStatement[6529-6559]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6571-6580]:MarkerAnnotation[6571-6580]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6585-6591]:Modifier[6585-6591]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6592-6597]:Modifier[6592-6597]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[6598-6605]:SimpleType[6598-6605]"
    }, {
      "left" : "parent",
      "right" : "parent",
      "info" : "SimpleName[6606-6612]:SimpleName[6606-6612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6615-6659]:Block[6615-6659]"
    }, {
      "left" : "return (Element) parentNode;",
      "right" : "return (Element) parentNode;",
      "info" : "ReturnStatement[6625-6653]:ReturnStatement[6625-6653]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6817-6823]:Modifier[6817-6823]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[6824-6832]:SimpleType[6824-6832]"
    }, {
      "left" : "parents",
      "right" : "parents",
      "info" : "SimpleName[6833-6840]:SimpleName[6833-6840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6843-6959]:Block[6843-6959]"
    }, {
      "left" : "Elements parents = new Elements();",
      "right" : "Elements parents = new Elements();",
      "info" : "VariableDeclarationStatement[6853-6887]:VariableDeclarationStatement[6853-6887]"
    }, {
      "left" : "accumulateParents(this, parents);",
      "right" : "accumulateParents(this, parents);",
      "info" : "ExpressionStatement[6896-6929]:ExpressionStatement[6896-6929]"
    }, {
      "left" : "return parents;",
      "right" : "return parents;",
      "info" : "ReturnStatement[6938-6953]:ReturnStatement[6938-6953]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6965-6972]:Modifier[6965-6972]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6973-6979]:Modifier[6973-6979]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6980-6984]:PrimitiveType[6980-6984]"
    }, {
      "left" : "accumulateParents",
      "right" : "accumulateParents",
      "info" : "SimpleName[6985-7002]:SimpleName[6985-7002]"
    }, {
      "left" : "Element el",
      "right" : "Element el",
      "info" : "SingleVariableDeclaration[7003-7013]:SingleVariableDeclaration[7003-7013]"
    }, {
      "left" : "Elements parents",
      "right" : "Elements parents",
      "info" : "SingleVariableDeclaration[7015-7031]:SingleVariableDeclaration[7015-7031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7033-7236]:Block[7033-7236]"
    }, {
      "left" : "Element parent = el.parent();",
      "right" : "Element parent = el.parent();",
      "info" : "VariableDeclarationStatement[7043-7072]:VariableDeclarationStatement[7043-7072]"
    }, {
      "left" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "right" : "if (parent != null && !parent.tagName().equals(\"#root\"))",
      "info" : "IfStatement[7081-7230]:IfStatement[7081-7230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7138-7230]:Block[7138-7230]"
    }, {
      "left" : "parents.add(parent);",
      "right" : "parents.add(parent);",
      "info" : "ExpressionStatement[7152-7172]:ExpressionStatement[7152-7172]"
    }, {
      "left" : "accumulateParents(parent, parents);",
      "right" : "accumulateParents(parent, parents);",
      "info" : "ExpressionStatement[7185-7220]:ExpressionStatement[7185-7220]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7757-7763]:Modifier[7757-7763]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[7764-7771]:SimpleType[7764-7771]"
    }, {
      "left" : "child",
      "right" : "child",
      "info" : "SimpleName[7772-7777]:SimpleName[7772-7777]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[7778-7787]:SingleVariableDeclaration[7778-7787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7789-7843]:Block[7789-7843]"
    }, {
      "left" : "return childElementsList().get(index);",
      "right" : "return childElementsList().get(index);",
      "info" : "ReturnStatement[7799-7837]:ReturnStatement[7799-7837]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8126-8132]:Modifier[8126-8132]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[8133-8141]:SimpleType[8133-8141]"
    }, {
      "left" : "children",
      "right" : "children",
      "info" : "SimpleName[8142-8150]:SimpleName[8142-8150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8153-8210]:Block[8153-8210]"
    }, {
      "left" : "return new Elements(childElementsList());",
      "right" : "return new Elements(childElementsList());",
      "info" : "ReturnStatement[8163-8204]:ReturnStatement[8163-8204]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8513-8520]:Modifier[8513-8520]"
    }, {
      "left" : "List<Element>",
      "right" : "List<Element>",
      "info" : "ParameterizedType[8521-8534]:ParameterizedType[8521-8534]"
    }, {
      "left" : "childElementsList",
      "right" : "childElementsList",
      "info" : "SimpleName[8535-8552]:SimpleName[8535-8552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8555-9196]:Block[8555-9196]"
    }, {
      "left" : "List<Element> children;",
      "right" : "List<Element> children;",
      "info" : "VariableDeclarationStatement[8565-8588]:VariableDeclarationStatement[8565-8588]"
    }, {
      "left" : "if (shadowChildrenRef == null || (children = shadowChildrenRef.get()) == null)",
      "right" : "if (shadowChildrenRef == null || (children = shadowChildrenRef.get()) == null)",
      "info" : "IfStatement[8597-9165]:IfStatement[8597-9165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8676-9165]:Block[8676-9165]"
    }, {
      "left" : "final int size = childNodes.size();",
      "right" : "final int size = childNodes.size();",
      "info" : "VariableDeclarationStatement[8690-8725]:VariableDeclarationStatement[8690-8725]"
    }, {
      "left" : "children = new ArrayList<>(size);",
      "right" : "children = new ArrayList<>(size);",
      "info" : "ExpressionStatement[8738-8771]:ExpressionStatement[8738-8771]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[8898-9092]:ForStatement[8898-9092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8929-9092]:Block[8929-9092]"
    }, {
      "left" : "final Node node = childNodes.get(i);",
      "right" : "final Node node = childNodes.get(i);",
      "info" : "VariableDeclarationStatement[8947-8983]:VariableDeclarationStatement[8947-8983]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[9000-9078]:IfStatement[9000-9078]"
    }, {
      "left" : "children.add((Element) node);",
      "right" : "children.add((Element) node);",
      "info" : "ExpressionStatement[9049-9078]:ExpressionStatement[9049-9078]"
    }, {
      "left" : "shadowChildrenRef = new WeakReference<>(children);",
      "right" : "shadowChildrenRef = new WeakReference<>(children);",
      "info" : "ExpressionStatement[9105-9155]:ExpressionStatement[9105-9155]"
    }, {
      "left" : "return children;",
      "right" : "return children;",
      "info" : "ReturnStatement[9174-9190]:ReturnStatement[9174-9190]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9266-9275]:MarkerAnnotation[9266-9275]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9280-9284]:PrimitiveType[9280-9284]"
    }, {
      "left" : "nodelistChanged",
      "right" : "nodelistChanged",
      "info" : "SimpleName[9285-9300]:SimpleName[9285-9300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9303-9377]:Block[9303-9377]"
    }, {
      "left" : "super.nodelistChanged();",
      "right" : "super.nodelistChanged();",
      "info" : "ExpressionStatement[9313-9337]:ExpressionStatement[9313-9337]"
    }, {
      "left" : "shadowChildrenRef = null;",
      "right" : "shadowChildrenRef = null;",
      "info" : "ExpressionStatement[9346-9371]:ExpressionStatement[9346-9371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10273-10279]:Modifier[10273-10279]"
    }, {
      "left" : "List<TextNode>",
      "right" : "List<TextNode>",
      "info" : "ParameterizedType[10280-10294]:ParameterizedType[10280-10294]"
    }, {
      "left" : "textNodes",
      "right" : "textNodes",
      "info" : "SimpleName[10295-10304]:SimpleName[10295-10304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10307-10563]:Block[10307-10563]"
    }, {
      "left" : "List<TextNode> textNodes = new ArrayList<>();",
      "right" : "List<TextNode> textNodes = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[10317-10362]:VariableDeclarationStatement[10317-10362]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[10371-10501]:EnhancedForStatement[10371-10501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10400-10501]:Block[10400-10501]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[10414-10491]:IfStatement[10414-10491]"
    }, {
      "left" : "textNodes.add((TextNode) node);",
      "right" : "textNodes.add((TextNode) node);",
      "info" : "ExpressionStatement[10460-10491]:ExpressionStatement[10460-10491]"
    }, {
      "left" : "return Collections.unmodifiableList(textNodes);",
      "right" : "return Collections.unmodifiableList(textNodes);",
      "info" : "ReturnStatement[10510-10557]:ReturnStatement[10510-10557]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10914-10920]:Modifier[10914-10920]"
    }, {
      "left" : "List<DataNode>",
      "right" : "List<DataNode>",
      "info" : "ParameterizedType[10921-10935]:ParameterizedType[10921-10935]"
    }, {
      "left" : "dataNodes",
      "right" : "dataNodes",
      "info" : "SimpleName[10936-10945]:SimpleName[10936-10945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10948-11204]:Block[10948-11204]"
    }, {
      "left" : "List<DataNode> dataNodes = new ArrayList<>();",
      "right" : "List<DataNode> dataNodes = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[10958-11003]:VariableDeclarationStatement[10958-11003]"
    }, {
      "left" : "for (Node node : childNodes)",
      "right" : "for (Node node : childNodes)",
      "info" : "EnhancedForStatement[11012-11142]:EnhancedForStatement[11012-11142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11041-11142]:Block[11041-11142]"
    }, {
      "left" : "if (node instanceof DataNode)",
      "right" : "if (node instanceof DataNode)",
      "info" : "IfStatement[11055-11132]:IfStatement[11055-11132]"
    }, {
      "left" : "dataNodes.add((DataNode) node);",
      "right" : "dataNodes.add((DataNode) node);",
      "info" : "ExpressionStatement[11101-11132]:ExpressionStatement[11101-11132]"
    }, {
      "left" : "return Collections.unmodifiableList(dataNodes);",
      "right" : "return Collections.unmodifiableList(dataNodes);",
      "info" : "ReturnStatement[11151-11198]:ReturnStatement[11151-11198]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12170-12176]:Modifier[12170-12176]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[12177-12185]:SimpleType[12177-12185]"
    }, {
      "left" : "select",
      "right" : "select",
      "info" : "SimpleName[12186-12192]:SimpleName[12186-12192]"
    }, {
      "left" : "String cssQuery",
      "right" : "String cssQuery",
      "info" : "SingleVariableDeclaration[12193-12208]:SingleVariableDeclaration[12193-12208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12210-12265]:Block[12210-12265]"
    }, {
      "left" : "return Selector.select(cssQuery, this);",
      "right" : "return Selector.select(cssQuery, this);",
      "info" : "ReturnStatement[12220-12259]:ReturnStatement[12220-12259]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12724-12730]:Modifier[12724-12730]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[12731-12738]:SimpleType[12731-12738]"
    }, {
      "left" : "selectFirst",
      "right" : "selectFirst",
      "info" : "SimpleName[12739-12750]:SimpleName[12739-12750]"
    }, {
      "left" : "String cssQuery",
      "right" : "String cssQuery",
      "info" : "SingleVariableDeclaration[12751-12766]:SingleVariableDeclaration[12751-12766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12768-12828]:Block[12768-12828]"
    }, {
      "left" : "return Selector.selectFirst(cssQuery, this);",
      "right" : "return Selector.selectFirst(cssQuery, this);",
      "info" : "ReturnStatement[12778-12822]:ReturnStatement[12778-12822]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13026-13032]:Modifier[13026-13032]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13033-13040]:PrimitiveType[13033-13040]"
    }, {
      "left" : "is",
      "right" : "is",
      "info" : "SimpleName[13041-13043]:SimpleName[13041-13043]"
    }, {
      "left" : "String cssQuery",
      "right" : "String cssQuery",
      "info" : "SingleVariableDeclaration[13044-13059]:SingleVariableDeclaration[13044-13059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13061-13116]:Block[13061-13116]"
    }, {
      "left" : "return is(QueryParser.parse(cssQuery));",
      "right" : "return is(QueryParser.parse(cssQuery));",
      "info" : "ReturnStatement[13071-13110]:ReturnStatement[13071-13110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13280-13286]:Modifier[13280-13286]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13287-13294]:PrimitiveType[13287-13294]"
    }, {
      "left" : "is",
      "right" : "is",
      "info" : "SimpleName[13295-13297]:SimpleName[13295-13297]"
    }, {
      "left" : "Evaluator evaluator",
      "right" : "Evaluator evaluator",
      "info" : "SingleVariableDeclaration[13298-13317]:SingleVariableDeclaration[13298-13317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13319-13388]:Block[13319-13388]"
    }, {
      "left" : "return evaluator.matches((Element)this.root(), this);",
      "right" : "return evaluator.matches((Element)this.root(), this);",
      "info" : "ReturnStatement[13329-13382]:ReturnStatement[13329-13382]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13580-13586]:Modifier[13580-13586]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[13587-13594]:SimpleType[13587-13594]"
    }, {
      "left" : "appendChild",
      "right" : "appendChild",
      "info" : "SimpleName[13595-13606]:SimpleName[13595-13606]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[13607-13617]:SingleVariableDeclaration[13607-13617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13619-13909]:Block[13619-13909]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[13629-13653]:ExpressionStatement[13629-13653]"
    }, {
      "left" : "reparentChild(child);",
      "right" : "reparentChild(child);",
      "info" : "ExpressionStatement[13748-13769]:ExpressionStatement[13748-13769]"
    }, {
      "left" : "ensureChildNodes();",
      "right" : "ensureChildNodes();",
      "info" : "ExpressionStatement[13778-13797]:ExpressionStatement[13778-13797]"
    }, {
      "left" : "childNodes.add(child);",
      "right" : "childNodes.add(child);",
      "info" : "ExpressionStatement[13806-13828]:ExpressionStatement[13806-13828]"
    }, {
      "left" : "child.setSiblingIndex(childNodes.size() - 1);",
      "right" : "child.setSiblingIndex(childNodes.size() - 1);",
      "info" : "ExpressionStatement[13837-13882]:ExpressionStatement[13837-13882]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[13891-13903]:ReturnStatement[13891-13903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14157-14163]:Modifier[14157-14163]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14164-14171]:SimpleType[14164-14171]"
    }, {
      "left" : "appendTo",
      "right" : "appendTo",
      "info" : "SimpleName[14172-14180]:SimpleName[14172-14180]"
    }, {
      "left" : "Element parent",
      "right" : "Element parent",
      "info" : "SingleVariableDeclaration[14181-14195]:SingleVariableDeclaration[14181-14195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14197-14293]:Block[14197-14293]"
    }, {
      "left" : "Validate.notNull(parent);",
      "right" : "Validate.notNull(parent);",
      "info" : "ExpressionStatement[14207-14232]:ExpressionStatement[14207-14232]"
    }, {
      "left" : "parent.appendChild(this);",
      "right" : "parent.appendChild(this);",
      "info" : "ExpressionStatement[14241-14266]:ExpressionStatement[14241-14266]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14275-14287]:ReturnStatement[14275-14287]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14494-14500]:Modifier[14494-14500]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[14501-14508]:SimpleType[14501-14508]"
    }, {
      "left" : "prependChild",
      "right" : "prependChild",
      "info" : "SimpleName[14509-14521]:SimpleName[14509-14521]"
    }, {
      "left" : "Node child",
      "right" : "Node child",
      "info" : "SingleVariableDeclaration[14522-14532]:SingleVariableDeclaration[14522-14532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14534-14635]:Block[14534-14635]"
    }, {
      "left" : "Validate.notNull(child);",
      "right" : "Validate.notNull(child);",
      "info" : "ExpressionStatement[14544-14568]:ExpressionStatement[14544-14568]"
    }, {
      "left" : "addChildren(0, child);",
      "right" : "addChildren(0, child);",
      "info" : "ExpressionStatement[14586-14608]:ExpressionStatement[14586-14608]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[14617-14629]:ReturnStatement[14617-14629]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15112-15118]:Modifier[15112-15118]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[15119-15126]:SimpleType[15119-15126]"
    }, {
      "left" : "insertChildren",
      "right" : "insertChildren",
      "info" : "SimpleName[15127-15141]:SimpleName[15127-15141]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[15142-15151]:SingleVariableDeclaration[15142-15151]"
    }, {
      "left" : "Collection<? extends Node> children",
      "right" : "Collection<? extends Node> children",
      "info" : "SingleVariableDeclaration[15153-15188]:SingleVariableDeclaration[15153-15188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15190-15676]:Block[15190-15676]"
    }, {
      "left" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "right" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "info" : "ExpressionStatement[15200-15283]:ExpressionStatement[15200-15283]"
    }, {
      "left" : "int currentSize = childNodeSize();",
      "right" : "int currentSize = childNodeSize();",
      "info" : "VariableDeclarationStatement[15292-15326]:VariableDeclarationStatement[15292-15326]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[15335-15374]:IfStatement[15335-15374]"
    }, {
      "left" : "index += currentSize +1;",
      "right" : "index += currentSize +1;",
      "info" : "ExpressionStatement[15350-15374]:ExpressionStatement[15350-15374]"
    }, {
      "left" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "right" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "info" : "ExpressionStatement[15398-15484]:ExpressionStatement[15398-15484]"
    }, {
      "left" : "ArrayList<Node> nodes = new ArrayList<>(children);",
      "right" : "ArrayList<Node> nodes = new ArrayList<>(children);",
      "info" : "VariableDeclarationStatement[15494-15544]:VariableDeclarationStatement[15494-15544]"
    }, {
      "left" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "right" : "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
      "info" : "VariableDeclarationStatement[15553-15610]:VariableDeclarationStatement[15553-15610]"
    }, {
      "left" : "addChildren(index, nodeArray);",
      "right" : "addChildren(index, nodeArray);",
      "info" : "ExpressionStatement[15619-15649]:ExpressionStatement[15619-15649]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15658-15670]:ReturnStatement[15658-15670]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16152-16158]:Modifier[16152-16158]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[16159-16166]:SimpleType[16159-16166]"
    }, {
      "left" : "insertChildren",
      "right" : "insertChildren",
      "info" : "SimpleName[16167-16181]:SimpleName[16167-16181]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[16182-16191]:SingleVariableDeclaration[16182-16191]"
    }, {
      "left" : "Node... children",
      "right" : "Node... children",
      "info" : "SingleVariableDeclaration[16193-16209]:SingleVariableDeclaration[16193-16209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16211-16571]:Block[16211-16571]"
    }, {
      "left" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "right" : "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
      "info" : "ExpressionStatement[16221-16304]:ExpressionStatement[16221-16304]"
    }, {
      "left" : "int currentSize = childNodeSize();",
      "right" : "int currentSize = childNodeSize();",
      "info" : "VariableDeclarationStatement[16313-16347]:VariableDeclarationStatement[16313-16347]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[16356-16395]:IfStatement[16356-16395]"
    }, {
      "left" : "index += currentSize +1;",
      "right" : "index += currentSize +1;",
      "info" : "ExpressionStatement[16371-16395]:ExpressionStatement[16371-16395]"
    }, {
      "left" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "right" : "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
      "info" : "ExpressionStatement[16419-16505]:ExpressionStatement[16419-16505]"
    }, {
      "left" : "addChildren(index, children);",
      "right" : "addChildren(index, children);",
      "info" : "ExpressionStatement[16515-16544]:ExpressionStatement[16515-16544]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[16553-16565]:ReturnStatement[16553-16565]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16892-16898]:Modifier[16892-16898]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[16899-16906]:SimpleType[16899-16906]"
    }, {
      "left" : "appendElement",
      "right" : "appendElement",
      "info" : "SimpleName[16907-16920]:SimpleName[16907-16920]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[16921-16935]:SingleVariableDeclaration[16921-16935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16937-17064]:Block[16937-17064]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[16947-17008]:VariableDeclarationStatement[16947-17008]"
    }, {
      "left" : "appendChild(child);",
      "right" : "appendChild(child);",
      "info" : "ExpressionStatement[17017-17036]:ExpressionStatement[17017-17036]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[17045-17058]:ReturnStatement[17045-17058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17387-17393]:Modifier[17387-17393]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[17394-17401]:SimpleType[17394-17401]"
    }, {
      "left" : "prependElement",
      "right" : "prependElement",
      "info" : "SimpleName[17402-17416]:SimpleName[17402-17416]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[17417-17431]:SingleVariableDeclaration[17417-17431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17433-17561]:Block[17433-17561]"
    }, {
      "left" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "right" : "Element child = new Element(Tag.valueOf(tagName), baseUri());",
      "info" : "VariableDeclarationStatement[17443-17504]:VariableDeclarationStatement[17443-17504]"
    }, {
      "left" : "prependChild(child);",
      "right" : "prependChild(child);",
      "info" : "ExpressionStatement[17513-17533]:ExpressionStatement[17513-17533]"
    }, {
      "left" : "return child;",
      "right" : "return child;",
      "info" : "ReturnStatement[17542-17555]:ReturnStatement[17542-17555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17725-17731]:Modifier[17725-17731]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[17732-17739]:SimpleType[17732-17739]"
    }, {
      "left" : "appendText",
      "right" : "appendText",
      "info" : "SimpleName[17740-17750]:SimpleName[17740-17750]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[17751-17762]:SingleVariableDeclaration[17751-17762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17764-17895]:Block[17764-17895]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[17774-17797]:ExpressionStatement[17774-17797]"
    }, {
      "left" : "TextNode node = new TextNode(text);",
      "right" : "TextNode node = new TextNode(text);",
      "info" : "VariableDeclarationStatement[17806-17841]:VariableDeclarationStatement[17806-17841]"
    }, {
      "left" : "appendChild(node);",
      "right" : "appendChild(node);",
      "info" : "ExpressionStatement[17850-17868]:ExpressionStatement[17850-17868]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[17877-17889]:ReturnStatement[17877-17889]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18060-18066]:Modifier[18060-18066]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[18067-18074]:SimpleType[18067-18074]"
    }, {
      "left" : "prependText",
      "right" : "prependText",
      "info" : "SimpleName[18075-18086]:SimpleName[18075-18086]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[18087-18098]:SingleVariableDeclaration[18087-18098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18100-18232]:Block[18100-18232]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[18110-18133]:ExpressionStatement[18110-18133]"
    }, {
      "left" : "TextNode node = new TextNode(text);",
      "right" : "TextNode node = new TextNode(text);",
      "info" : "VariableDeclarationStatement[18142-18177]:VariableDeclarationStatement[18142-18177]"
    }, {
      "left" : "prependChild(node);",
      "right" : "prependChild(node);",
      "info" : "ExpressionStatement[18186-18205]:ExpressionStatement[18186-18205]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18214-18226]:ReturnStatement[18214-18226]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18512-18518]:Modifier[18512-18518]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[18519-18526]:SimpleType[18519-18526]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[18527-18533]:SimpleName[18527-18533]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[18534-18545]:SingleVariableDeclaration[18534-18545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18547-18740]:Block[18547-18740]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[18557-18580]:ExpressionStatement[18557-18580]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[18590-18653]:VariableDeclarationStatement[18590-18653]"
    }, {
      "left" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[18662-18713]:ExpressionStatement[18662-18713]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18722-18734]:ReturnStatement[18722-18734]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19036-19042]:Modifier[19036-19042]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[19043-19050]:SimpleType[19043-19050]"
    }, {
      "left" : "prepend",
      "right" : "prepend",
      "info" : "SimpleName[19051-19058]:SimpleName[19051-19058]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[19059-19070]:SingleVariableDeclaration[19059-19070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19072-19276]:Block[19072-19276]"
    }, {
      "left" : "Validate.notNull(html);",
      "right" : "Validate.notNull(html);",
      "info" : "ExpressionStatement[19082-19105]:ExpressionStatement[19082-19105]"
    }, {
      "left" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "right" : "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
      "info" : "VariableDeclarationStatement[19123-19186]:VariableDeclarationStatement[19123-19186]"
    }, {
      "left" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "right" : "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
      "info" : "ExpressionStatement[19195-19249]:ExpressionStatement[19195-19249]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[19258-19270]:ReturnStatement[19258-19270]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19517-19526]:MarkerAnnotation[19517-19526]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19531-19537]:Modifier[19531-19537]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[19538-19545]:SimpleType[19538-19545]"
    }, {
      "left" : "before",
      "right" : "before",
      "info" : "SimpleName[19546-19552]:SimpleName[19546-19552]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[19553-19564]:SingleVariableDeclaration[19553-19564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19566-19618]:Block[19566-19618]"
    }, {
      "left" : "return (Element) super.before(html);",
      "right" : "return (Element) super.before(html);",
      "info" : "ReturnStatement[19576-19612]:ReturnStatement[19576-19612]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[19842-19851]:MarkerAnnotation[19842-19851]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19856-19862]:Modifier[19856-19862]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[19863-19870]:SimpleType[19863-19870]"
    }, {
      "left" : "before",
      "right" : "before",
      "info" : "SimpleName[19871-19877]:SimpleName[19871-19877]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[19878-19887]:SingleVariableDeclaration[19878-19887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19889-19941]:Block[19889-19941]"
    }, {
      "left" : "return (Element) super.before(node);",
      "right" : "return (Element) super.before(node);",
      "info" : "ReturnStatement[19899-19935]:ReturnStatement[19899-19935]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20181-20190]:MarkerAnnotation[20181-20190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20195-20201]:Modifier[20195-20201]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[20202-20209]:SimpleType[20202-20209]"
    }, {
      "left" : "after",
      "right" : "after",
      "info" : "SimpleName[20210-20215]:SimpleName[20210-20215]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[20216-20227]:SingleVariableDeclaration[20216-20227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20229-20280]:Block[20229-20280]"
    }, {
      "left" : "return (Element) super.after(html);",
      "right" : "return (Element) super.after(html);",
      "info" : "ReturnStatement[20239-20274]:ReturnStatement[20239-20274]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20503-20512]:MarkerAnnotation[20503-20512]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20517-20523]:Modifier[20517-20523]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[20524-20531]:SimpleType[20524-20531]"
    }, {
      "left" : "after",
      "right" : "after",
      "info" : "SimpleName[20532-20537]:SimpleName[20532-20537]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[20538-20547]:SingleVariableDeclaration[20538-20547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20549-20600]:Block[20549-20600]"
    }, {
      "left" : "return (Element) super.after(node);",
      "right" : "return (Element) super.after(node);",
      "info" : "ReturnStatement[20559-20594]:ReturnStatement[20559-20594]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20729-20735]:Modifier[20729-20735]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[20736-20743]:SimpleType[20736-20743]"
    }, {
      "left" : "empty",
      "right" : "empty",
      "info" : "SimpleName[20744-20749]:SimpleName[20744-20749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20752-20808]:Block[20752-20808]"
    }, {
      "left" : "childNodes.clear();",
      "right" : "childNodes.clear();",
      "info" : "ExpressionStatement[20762-20781]:ExpressionStatement[20762-20781]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20790-20802]:ReturnStatement[20790-20802]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21048-21057]:MarkerAnnotation[21048-21057]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21062-21068]:Modifier[21062-21068]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[21069-21076]:SimpleType[21069-21076]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[21077-21081]:SimpleName[21077-21081]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[21082-21093]:SingleVariableDeclaration[21082-21093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21095-21145]:Block[21095-21145]"
    }, {
      "left" : "return (Element) super.wrap(html);",
      "right" : "return (Element) super.wrap(html);",
      "info" : "ReturnStatement[21105-21139]:ReturnStatement[21105-21139]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21565-21571]:Modifier[21565-21571]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[21572-21578]:SimpleType[21572-21578]"
    }, {
      "left" : "cssSelector",
      "right" : "cssSelector",
      "info" : "SimpleName[21579-21590]:SimpleName[21579-21590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21593-22432]:Block[21593-22432]"
    }, {
      "left" : "if (id().length() > 0)",
      "right" : "if (id().length() > 0)",
      "info" : "IfStatement[21603-21656]:IfStatement[21603-21656]"
    }, {
      "left" : "return \"#\" + id();",
      "right" : "return \"#\" + id();",
      "info" : "ReturnStatement[21638-21656]:ReturnStatement[21638-21656]"
    }, {
      "left" : "String tagName = tagName().replace(':', '|');",
      "right" : "String tagName = tagName().replace(':', '|');",
      "info" : "VariableDeclarationStatement[21740-21785]:VariableDeclarationStatement[21740-21785]"
    }, {
      "left" : "StringBuilder selector = new StringBuilder(tagName);",
      "right" : "StringBuilder selector = new StringBuilder(tagName);",
      "info" : "VariableDeclarationStatement[21794-21846]:VariableDeclarationStatement[21794-21846]"
    }, {
      "left" : "String classes = StringUtil.join(classNames(), \".\");",
      "right" : "String classes = StringUtil.join(classNames(), \".\");",
      "info" : "VariableDeclarationStatement[21855-21907]:VariableDeclarationStatement[21855-21907]"
    }, {
      "left" : "if (classes.length() > 0)",
      "right" : "if (classes.length() > 0)",
      "info" : "IfStatement[21916-21991]:IfStatement[21916-21991]"
    }, {
      "left" : "selector.append('.').append(classes);",
      "right" : "selector.append('.').append(classes);",
      "info" : "ExpressionStatement[21954-21991]:ExpressionStatement[21954-21991]"
    }, {
      "left" : "if (parent() == null || parent() instanceof Document)",
      "right" : "if (parent() == null || parent() instanceof Document)",
      "info" : "IfStatement[22001-22161]:IfStatement[22001-22161]"
    }, {
      "left" : "return selector.toString();",
      "right" : "return selector.toString();",
      "info" : "ReturnStatement[22134-22161]:ReturnStatement[22134-22161]"
    }, {
      "left" : "selector.insert(0, \" > \");",
      "right" : "selector.insert(0, \" > \");",
      "info" : "ExpressionStatement[22171-22197]:ExpressionStatement[22171-22197]"
    }, {
      "left" : "if (parent().select(selector.toString()).size() > 1)",
      "right" : "if (parent().select(selector.toString()).size() > 1)",
      "info" : "IfStatement[22206-22364]:IfStatement[22206-22364]"
    }, {
      "left" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "right" : "selector.append(String.format(\n                \":nth-child(%d)\", elementSiblingIndex() + 1));",
      "info" : "ExpressionStatement[22271-22364]:ExpressionStatement[22271-22364]"
    }, {
      "left" : "return parent().cssSelector() + selector.toString();",
      "right" : "return parent().cssSelector() + selector.toString();",
      "info" : "ReturnStatement[22374-22426]:ReturnStatement[22374-22426]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22670-22676]:Modifier[22670-22676]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[22677-22685]:SimpleType[22677-22685]"
    }, {
      "left" : "siblingElements",
      "right" : "siblingElements",
      "info" : "SimpleName[22686-22701]:SimpleName[22686-22701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22704-23028]:Block[22704-23028]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[22714-22773]:IfStatement[22714-22773]"
    }, {
      "left" : "return new Elements(0);",
      "right" : "return new Elements(0);",
      "info" : "ReturnStatement[22750-22773]:ReturnStatement[22750-22773]"
    }, {
      "left" : "List<Element> elements = parent().childElementsList();",
      "right" : "List<Element> elements = parent().childElementsList();",
      "info" : "VariableDeclarationStatement[22783-22837]:VariableDeclarationStatement[22783-22837]"
    }, {
      "left" : "Elements siblings = new Elements(elements.size() - 1);",
      "right" : "Elements siblings = new Elements(elements.size() - 1);",
      "info" : "VariableDeclarationStatement[22846-22900]:VariableDeclarationStatement[22846-22900]"
    }, {
      "left" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "right" : "for (Element el: elements)\n            if (el != this)\n                siblings.add(el);",
      "info" : "EnhancedForStatement[22909-22997]:EnhancedForStatement[22909-22997]"
    }, {
      "left" : "if (el != this)",
      "right" : "if (el != this)",
      "info" : "IfStatement[22948-22997]:IfStatement[22948-22997]"
    }, {
      "left" : "siblings.add(el);",
      "right" : "siblings.add(el);",
      "info" : "ExpressionStatement[22980-22997]:ExpressionStatement[22980-22997]"
    }, {
      "left" : "return siblings;",
      "right" : "return siblings;",
      "info" : "ReturnStatement[23006-23022]:ReturnStatement[23006-23022]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23456-23462]:Modifier[23456-23462]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[23463-23470]:SimpleType[23463-23470]"
    }, {
      "left" : "nextElementSibling",
      "right" : "nextElementSibling",
      "info" : "SimpleName[23471-23489]:SimpleName[23471-23489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23492-23812]:Block[23492-23812]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[23502-23538]:IfStatement[23502-23538]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23526-23538]:ReturnStatement[23526-23538]"
    }, {
      "left" : "List<Element> siblings = parent().childElementsList();",
      "right" : "List<Element> siblings = parent().childElementsList();",
      "info" : "VariableDeclarationStatement[23547-23601]:VariableDeclarationStatement[23547-23601]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[23610-23654]:VariableDeclarationStatement[23610-23654]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[23663-23687]:ExpressionStatement[23663-23687]"
    }, {
      "left" : "if (siblings.size() > index+1)",
      "right" : "if (siblings.size() > index+1)",
      "info" : "IfStatement[23696-23806]:IfStatement[23696-23806]"
    }, {
      "left" : "return siblings.get(index+1);",
      "right" : "return siblings.get(index+1);",
      "info" : "ReturnStatement[23739-23768]:ReturnStatement[23739-23768]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23794-23806]:ReturnStatement[23794-23806]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24003-24009]:Modifier[24003-24009]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[24010-24017]:SimpleType[24010-24017]"
    }, {
      "left" : "previousElementSibling",
      "right" : "previousElementSibling",
      "info" : "SimpleName[24018-24040]:SimpleName[24018-24040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24043-24347]:Block[24043-24347]"
    }, {
      "left" : "if (parentNode == null)",
      "right" : "if (parentNode == null)",
      "info" : "IfStatement[24053-24089]:IfStatement[24053-24089]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24077-24089]:ReturnStatement[24077-24089]"
    }, {
      "left" : "List<Element> siblings = parent().childElementsList();",
      "right" : "List<Element> siblings = parent().childElementsList();",
      "info" : "VariableDeclarationStatement[24098-24152]:VariableDeclarationStatement[24098-24152]"
    }, {
      "left" : "Integer index = indexInList(this, siblings);",
      "right" : "Integer index = indexInList(this, siblings);",
      "info" : "VariableDeclarationStatement[24161-24205]:VariableDeclarationStatement[24161-24205]"
    }, {
      "left" : "Validate.notNull(index);",
      "right" : "Validate.notNull(index);",
      "info" : "ExpressionStatement[24214-24238]:ExpressionStatement[24214-24238]"
    }, {
      "left" : "if (index > 0)",
      "right" : "if (index > 0)",
      "info" : "IfStatement[24247-24341]:IfStatement[24247-24341]"
    }, {
      "left" : "return siblings.get(index-1);",
      "right" : "return siblings.get(index-1);",
      "info" : "ReturnStatement[24274-24303]:ReturnStatement[24274-24303]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24329-24341]:ReturnStatement[24329-24341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24516-24522]:Modifier[24516-24522]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[24523-24530]:SimpleType[24523-24530]"
    }, {
      "left" : "firstElementSibling",
      "right" : "firstElementSibling",
      "info" : "SimpleName[24531-24550]:SimpleName[24531-24550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24553-24737]:Block[24553-24737]"
    }, {
      "left" : "List<Element> siblings = parent().childElementsList();",
      "right" : "List<Element> siblings = parent().childElementsList();",
      "info" : "VariableDeclarationStatement[24616-24670]:VariableDeclarationStatement[24616-24670]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(0) : null;",
      "info" : "ReturnStatement[24679-24731]:ReturnStatement[24679-24731]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24943-24949]:Modifier[24943-24949]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[24950-24953]:PrimitiveType[24950-24953]"
    }, {
      "left" : "elementSiblingIndex",
      "right" : "elementSiblingIndex",
      "info" : "SimpleName[24954-24973]:SimpleName[24954-24973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24976-25085]:Block[24976-25085]"
    }, {
      "left" : "if (parent() == null)",
      "right" : "if (parent() == null)",
      "info" : "IfStatement[24985-25016]:IfStatement[24985-25016]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[25007-25016]:ReturnStatement[25007-25016]"
    }, {
      "left" : "return indexInList(this, parent().childElementsList());",
      "right" : "return indexInList(this, parent().childElementsList());",
      "info" : "ReturnStatement[25024-25079]:ReturnStatement[25024-25079]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25250-25256]:Modifier[25250-25256]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[25257-25264]:SimpleType[25257-25264]"
    }, {
      "left" : "lastElementSibling",
      "right" : "lastElementSibling",
      "info" : "SimpleName[25265-25283]:SimpleName[25265-25283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25286-25435]:Block[25286-25435]"
    }, {
      "left" : "List<Element> siblings = parent().childElementsList();",
      "right" : "List<Element> siblings = parent().childElementsList();",
      "info" : "VariableDeclarationStatement[25296-25350]:VariableDeclarationStatement[25296-25350]"
    }, {
      "left" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "right" : "return siblings.size() > 1 ? siblings.get(siblings.size() - 1) : null;",
      "info" : "ReturnStatement[25359-25429]:ReturnStatement[25359-25429]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25441-25448]:Modifier[25441-25448]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[25449-25455]:Modifier[25449-25455]"
    }, {
      "left" : "E extends Element",
      "right" : "E extends Element",
      "info" : "TypeParameter[25457-25474]:TypeParameter[25457-25474]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[25476-25479]:PrimitiveType[25476-25479]"
    }, {
      "left" : "indexInList",
      "right" : "indexInList",
      "info" : "SimpleName[25480-25491]:SimpleName[25480-25491]"
    }, {
      "left" : "Element search",
      "right" : "Element search",
      "info" : "SingleVariableDeclaration[25492-25506]:SingleVariableDeclaration[25492-25506]"
    }, {
      "left" : "List<E> elements",
      "right" : "List<E> elements",
      "info" : "SingleVariableDeclaration[25508-25524]:SingleVariableDeclaration[25508-25524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25526-25682]:Block[25526-25682]"
    }, {
      "left" : "for (int i = 0; i < elements.size(); i++)",
      "right" : "for (int i = 0; i < elements.size(); i++)",
      "info" : "ForStatement[25536-25658]:ForStatement[25536-25658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25578-25658]:Block[25578-25658]"
    }, {
      "left" : "if (elements.get(i) == search)",
      "right" : "if (elements.get(i) == search)",
      "info" : "IfStatement[25592-25648]:IfStatement[25592-25648]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[25639-25648]:ReturnStatement[25639-25648]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[25667-25676]:ReturnStatement[25667-25676]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26017-26023]:Modifier[26017-26023]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[26024-26032]:SimpleType[26024-26032]"
    }, {
      "left" : "getElementsByTag",
      "right" : "getElementsByTag",
      "info" : "SimpleName[26033-26049]:SimpleName[26033-26049]"
    }, {
      "left" : "String tagName",
      "right" : "String tagName",
      "info" : "SingleVariableDeclaration[26050-26064]:SingleVariableDeclaration[26050-26064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26066-26216]:Block[26066-26216]"
    }, {
      "left" : "Validate.notEmpty(tagName);",
      "right" : "Validate.notEmpty(tagName);",
      "info" : "ExpressionStatement[26076-26103]:ExpressionStatement[26076-26103]"
    }, {
      "left" : "tagName = normalize(tagName);",
      "right" : "tagName = normalize(tagName);",
      "info" : "ExpressionStatement[26112-26141]:ExpressionStatement[26112-26141]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "right" : "return Collector.collect(new Evaluator.Tag(tagName), this);",
      "info" : "ReturnStatement[26151-26210]:ReturnStatement[26151-26210]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26734-26740]:Modifier[26734-26740]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[26741-26748]:SimpleType[26741-26748]"
    }, {
      "left" : "getElementById",
      "right" : "getElementById",
      "info" : "SimpleName[26749-26763]:SimpleName[26749-26763]"
    }, {
      "left" : "String id",
      "right" : "String id",
      "info" : "SingleVariableDeclaration[26764-26773]:SingleVariableDeclaration[26764-26773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26775-27004]:Block[26775-27004]"
    }, {
      "left" : "Validate.notEmpty(id);",
      "right" : "Validate.notEmpty(id);",
      "info" : "ExpressionStatement[26785-26807]:ExpressionStatement[26785-26807]"
    }, {
      "left" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "right" : "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
      "info" : "VariableDeclarationStatement[26825-26891]:VariableDeclarationStatement[26825-26891]"
    }, {
      "left" : "if (elements.size() > 0)",
      "right" : "if (elements.size() > 0)",
      "info" : "IfStatement[26900-26998]:IfStatement[26900-26998]"
    }, {
      "left" : "return elements.get(0);",
      "right" : "return elements.get(0);",
      "info" : "ReturnStatement[26937-26960]:ReturnStatement[26937-26960]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[26986-26998]:ReturnStatement[26986-26998]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27525-27531]:Modifier[27525-27531]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[27532-27540]:SimpleType[27532-27540]"
    }, {
      "left" : "getElementsByClass",
      "right" : "getElementsByClass",
      "info" : "SimpleName[27541-27559]:SimpleName[27541-27559]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[27560-27576]:SingleVariableDeclaration[27560-27576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27578-27696]:Block[27578-27696]"
    }, {
      "left" : "Validate.notEmpty(className);",
      "right" : "Validate.notEmpty(className);",
      "info" : "ExpressionStatement[27588-27617]:ExpressionStatement[27588-27617]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Class(className), this);",
      "right" : "return Collector.collect(new Evaluator.Class(className), this);",
      "info" : "ReturnStatement[27627-27690]:ReturnStatement[27627-27690]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27920-27926]:Modifier[27920-27926]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[27927-27935]:SimpleType[27927-27935]"
    }, {
      "left" : "getElementsByAttribute",
      "right" : "getElementsByAttribute",
      "info" : "SimpleName[27936-27958]:SimpleName[27936-27958]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[27959-27969]:SingleVariableDeclaration[27959-27969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27971-28107]:Block[27971-28107]"
    }, {
      "left" : "Validate.notEmpty(key);",
      "right" : "Validate.notEmpty(key);",
      "info" : "ExpressionStatement[27981-28004]:ExpressionStatement[27981-28004]"
    }, {
      "left" : "key = key.trim();",
      "right" : "key = key.trim();",
      "info" : "ExpressionStatement[28013-28030]:ExpressionStatement[28013-28030]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "right" : "return Collector.collect(new Evaluator.Attribute(key), this);",
      "info" : "ReturnStatement[28040-28101]:ReturnStatement[28040-28101]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28451-28457]:Modifier[28451-28457]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[28458-28466]:SimpleType[28458-28466]"
    }, {
      "left" : "getElementsByAttributeStarting",
      "right" : "getElementsByAttributeStarting",
      "info" : "SimpleName[28467-28497]:SimpleName[28467-28497]"
    }, {
      "left" : "String keyPrefix",
      "right" : "String keyPrefix",
      "info" : "SingleVariableDeclaration[28498-28514]:SingleVariableDeclaration[28498-28514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28516-28684]:Block[28516-28684]"
    }, {
      "left" : "Validate.notEmpty(keyPrefix);",
      "right" : "Validate.notEmpty(keyPrefix);",
      "info" : "ExpressionStatement[28526-28555]:ExpressionStatement[28526-28555]"
    }, {
      "left" : "keyPrefix = keyPrefix.trim();",
      "right" : "keyPrefix = keyPrefix.trim();",
      "info" : "ExpressionStatement[28564-28593]:ExpressionStatement[28564-28593]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
      "info" : "ReturnStatement[28603-28678]:ReturnStatement[28603-28678]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28964-28970]:Modifier[28964-28970]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[28971-28979]:SimpleType[28971-28979]"
    }, {
      "left" : "getElementsByAttributeValue",
      "right" : "getElementsByAttributeValue",
      "info" : "SimpleName[28980-29007]:SimpleName[28980-29007]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[29008-29018]:SingleVariableDeclaration[29008-29018]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[29020-29032]:SingleVariableDeclaration[29020-29032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29034-29127]:Block[29034-29127]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
      "info" : "ReturnStatement[29044-29121]:ReturnStatement[29044-29121]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29416-29422]:Modifier[29416-29422]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[29423-29431]:SimpleType[29423-29431]"
    }, {
      "left" : "getElementsByAttributeValueNot",
      "right" : "getElementsByAttributeValueNot",
      "info" : "SimpleName[29432-29462]:SimpleName[29432-29462]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[29463-29473]:SingleVariableDeclaration[29463-29473]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[29475-29487]:SingleVariableDeclaration[29475-29487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29489-29585]:Block[29489-29585]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueNot(key, value), this);",
      "info" : "ReturnStatement[29499-29579]:ReturnStatement[29499-29579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29878-29884]:Modifier[29878-29884]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[29885-29893]:SimpleType[29885-29893]"
    }, {
      "left" : "getElementsByAttributeValueStarting",
      "right" : "getElementsByAttributeValueStarting",
      "info" : "SimpleName[29894-29929]:SimpleName[29894-29929]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[29930-29940]:SingleVariableDeclaration[29930-29940]"
    }, {
      "left" : "String valuePrefix",
      "right" : "String valuePrefix",
      "info" : "SingleVariableDeclaration[29942-29960]:SingleVariableDeclaration[29942-29960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29962-30069]:Block[29962-30069]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
      "info" : "ReturnStatement[29972-30063]:ReturnStatement[29972-30063]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30360-30366]:Modifier[30360-30366]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[30367-30375]:SimpleType[30367-30375]"
    }, {
      "left" : "getElementsByAttributeValueEnding",
      "right" : "getElementsByAttributeValueEnding",
      "info" : "SimpleName[30376-30409]:SimpleName[30376-30409]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[30410-30420]:SingleVariableDeclaration[30410-30420]"
    }, {
      "left" : "String valueSuffix",
      "right" : "String valueSuffix",
      "info" : "SingleVariableDeclaration[30422-30440]:SingleVariableDeclaration[30422-30440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30442-30547]:Block[30442-30547]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
      "info" : "ReturnStatement[30452-30541]:ReturnStatement[30452-30541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30835-30841]:Modifier[30835-30841]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[30842-30850]:SimpleType[30842-30850]"
    }, {
      "left" : "getElementsByAttributeValueContaining",
      "right" : "getElementsByAttributeValueContaining",
      "info" : "SimpleName[30851-30888]:SimpleName[30851-30888]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[30889-30899]:SingleVariableDeclaration[30889-30899]"
    }, {
      "left" : "String match",
      "right" : "String match",
      "info" : "SingleVariableDeclaration[30901-30913]:SingleVariableDeclaration[30901-30913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30915-31018]:Block[30915-31018]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
      "info" : "ReturnStatement[30925-31012]:ReturnStatement[30925-31012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31340-31346]:Modifier[31340-31346]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[31347-31355]:SimpleType[31347-31355]"
    }, {
      "left" : "getElementsByAttributeValueMatching",
      "right" : "getElementsByAttributeValueMatching",
      "info" : "SimpleName[31356-31391]:SimpleName[31356-31391]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[31392-31402]:SingleVariableDeclaration[31392-31402]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[31404-31419]:SingleVariableDeclaration[31404-31419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31421-31533]:Block[31421-31533]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "right" : "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
      "info" : "ReturnStatement[31431-31518]:ReturnStatement[31431-31518]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32013-32019]:Modifier[32013-32019]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[32020-32028]:SimpleType[32020-32028]"
    }, {
      "left" : "getElementsByAttributeValueMatching",
      "right" : "getElementsByAttributeValueMatching",
      "info" : "SimpleName[32029-32064]:SimpleName[32029-32064]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[32065-32075]:SingleVariableDeclaration[32065-32075]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[32077-32089]:SingleVariableDeclaration[32077-32089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32091-32389]:Block[32091-32389]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[32101-32117]:VariableDeclarationStatement[32101-32117]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32126-32317]:TryStatement[32126-32317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32130-32187]:Block[32130-32187]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[32144-32177]:ExpressionStatement[32144-32177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32221-32317]:Block[32221-32317]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[32235-32307]:ThrowStatement[32235-32307]"
    }, {
      "left" : "return getElementsByAttributeValueMatching(key, pattern);",
      "right" : "return getElementsByAttributeValueMatching(key, pattern);",
      "info" : "ReturnStatement[32326-32383]:ReturnStatement[32326-32383]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32563-32569]:Modifier[32563-32569]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[32570-32578]:SimpleType[32570-32578]"
    }, {
      "left" : "getElementsByIndexLessThan",
      "right" : "getElementsByIndexLessThan",
      "info" : "SimpleName[32579-32605]:SimpleName[32579-32605]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[32606-32615]:SingleVariableDeclaration[32606-32615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32617-32700]:Block[32617-32700]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexLessThan(index), this);",
      "info" : "ReturnStatement[32627-32694]:ReturnStatement[32627-32694]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32880-32886]:Modifier[32880-32886]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[32887-32895]:SimpleType[32887-32895]"
    }, {
      "left" : "getElementsByIndexGreaterThan",
      "right" : "getElementsByIndexGreaterThan",
      "info" : "SimpleName[32896-32925]:SimpleName[32896-32925]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[32926-32935]:SingleVariableDeclaration[32926-32935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32937-33023]:Block[32937-33023]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
      "info" : "ReturnStatement[32947-33017]:ReturnStatement[32947-33017]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33195-33201]:Modifier[33195-33201]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[33202-33210]:SimpleType[33202-33210]"
    }, {
      "left" : "getElementsByIndexEquals",
      "right" : "getElementsByIndexEquals",
      "info" : "SimpleName[33211-33235]:SimpleName[33211-33235]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[33236-33245]:SingleVariableDeclaration[33236-33245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33247-33328]:Block[33247-33328]"
    }, {
      "left" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "right" : "return Collector.collect(new Evaluator.IndexEquals(index), this);",
      "info" : "ReturnStatement[33257-33322]:ReturnStatement[33257-33322]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33677-33683]:Modifier[33677-33683]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[33684-33692]:SimpleType[33684-33692]"
    }, {
      "left" : "getElementsContainingText",
      "right" : "getElementsContainingText",
      "info" : "SimpleName[33693-33718]:SimpleName[33693-33718]"
    }, {
      "left" : "String searchText",
      "right" : "String searchText",
      "info" : "SingleVariableDeclaration[33719-33736]:SingleVariableDeclaration[33719-33736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33738-33825]:Block[33738-33825]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsText(searchText), this);",
      "info" : "ReturnStatement[33748-33819]:ReturnStatement[33748-33819]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34192-34198]:Modifier[34192-34198]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[34199-34207]:SimpleType[34199-34207]"
    }, {
      "left" : "getElementsContainingOwnText",
      "right" : "getElementsContainingOwnText",
      "info" : "SimpleName[34208-34236]:SimpleName[34208-34236]"
    }, {
      "left" : "String searchText",
      "right" : "String searchText",
      "info" : "SingleVariableDeclaration[34237-34254]:SingleVariableDeclaration[34237-34254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34256-34346]:Block[34256-34346]"
    }, {
      "left" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "right" : "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
      "info" : "ReturnStatement[34266-34340]:ReturnStatement[34266-34340]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34601-34607]:Modifier[34601-34607]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[34608-34616]:SimpleType[34608-34616]"
    }, {
      "left" : "getElementsMatchingText",
      "right" : "getElementsMatchingText",
      "info" : "SimpleName[34617-34640]:SimpleName[34617-34640]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[34641-34656]:SingleVariableDeclaration[34641-34656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34658-34737]:Block[34658-34737]"
    }, {
      "left" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.Matches(pattern), this);",
      "info" : "ReturnStatement[34668-34731]:ReturnStatement[34668-34731]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35159-35165]:Modifier[35159-35165]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[35166-35174]:SimpleType[35166-35174]"
    }, {
      "left" : "getElementsMatchingText",
      "right" : "getElementsMatchingText",
      "info" : "SimpleName[35175-35198]:SimpleName[35175-35198]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[35199-35211]:SingleVariableDeclaration[35199-35211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35213-35494]:Block[35213-35494]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[35223-35239]:VariableDeclarationStatement[35223-35239]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[35248-35439]:TryStatement[35248-35439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35252-35309]:Block[35252-35309]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[35266-35299]:ExpressionStatement[35266-35299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35343-35439]:Block[35343-35439]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[35357-35429]:ThrowStatement[35357-35429]"
    }, {
      "left" : "return getElementsMatchingText(pattern);",
      "right" : "return getElementsMatchingText(pattern);",
      "info" : "ReturnStatement[35448-35488]:ReturnStatement[35448-35488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35756-35762]:Modifier[35756-35762]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[35763-35771]:SimpleType[35763-35771]"
    }, {
      "left" : "getElementsMatchingOwnText",
      "right" : "getElementsMatchingOwnText",
      "info" : "SimpleName[35772-35798]:SimpleName[35772-35798]"
    }, {
      "left" : "Pattern pattern",
      "right" : "Pattern pattern",
      "info" : "SingleVariableDeclaration[35799-35814]:SingleVariableDeclaration[35799-35814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35816-35898]:Block[35816-35898]"
    }, {
      "left" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "right" : "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
      "info" : "ReturnStatement[35826-35892]:ReturnStatement[35826-35892]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36323-36329]:Modifier[36323-36329]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[36330-36338]:SimpleType[36330-36338]"
    }, {
      "left" : "getElementsMatchingOwnText",
      "right" : "getElementsMatchingOwnText",
      "info" : "SimpleName[36339-36365]:SimpleName[36339-36365]"
    }, {
      "left" : "String regex",
      "right" : "String regex",
      "info" : "SingleVariableDeclaration[36366-36378]:SingleVariableDeclaration[36366-36378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36380-36664]:Block[36380-36664]"
    }, {
      "left" : "Pattern pattern;",
      "right" : "Pattern pattern;",
      "info" : "VariableDeclarationStatement[36390-36406]:VariableDeclarationStatement[36390-36406]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[36415-36606]:TryStatement[36415-36606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36419-36476]:Block[36419-36476]"
    }, {
      "left" : "pattern = Pattern.compile(regex);",
      "right" : "pattern = Pattern.compile(regex);",
      "info" : "ExpressionStatement[36433-36466]:ExpressionStatement[36433-36466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36510-36606]:Block[36510-36606]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "right" : "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
      "info" : "ThrowStatement[36524-36596]:ThrowStatement[36524-36596]"
    }, {
      "left" : "return getElementsMatchingOwnText(pattern);",
      "right" : "return getElementsMatchingOwnText(pattern);",
      "info" : "ReturnStatement[36615-36658]:ReturnStatement[36615-36658]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36814-36820]:Modifier[36814-36820]"
    }, {
      "left" : "Elements",
      "right" : "Elements",
      "info" : "SimpleType[36821-36829]:SimpleType[36821-36829]"
    }, {
      "left" : "getAllElements",
      "right" : "getAllElements",
      "info" : "SimpleName[36830-36844]:SimpleName[36830-36844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36847-36923]:Block[36847-36923]"
    }, {
      "left" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "right" : "return Collector.collect(new Evaluator.AllElements(), this);",
      "info" : "ReturnStatement[36857-36917]:ReturnStatement[36857-36917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37298-37304]:Modifier[37298-37304]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[37305-37311]:SimpleType[37305-37311]"
    }, {
      "left" : "text",
      "right" : "text",
      "info" : "SimpleName[37312-37316]:SimpleName[37312-37316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37319-38154]:Block[37319-38154]"
    }, {
      "left" : "final StringBuilder accum = new StringBuilder();",
      "right" : "final StringBuilder accum = new StringBuilder();",
      "info" : "VariableDeclarationStatement[37329-37377]:VariableDeclarationStatement[37329-37377]"
    }, {
      "left" : "NodeTraversor.traverse(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(' ');\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }, this);",
      "right" : "NodeTraversor.traverse(new NodeVisitor() {\n            public void head(Node node, int depth) {\n                if (node instanceof TextNode) {\n                    TextNode textNode = (TextNode) node;\n                    appendNormalisedText(accum, textNode);\n                } else if (node instanceof Element) {\n                    Element element = (Element) node;\n                    if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))\n                        accum.append(' ');\n                }\n            }\n\n            public void tail(Node node, int depth) {\n            }\n        }, this);",
      "info" : "ExpressionStatement[37386-38108]:ExpressionStatement[37386-38108]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37441-37447]:Modifier[37441-37447]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37448-37452]:PrimitiveType[37448-37452]"
    }, {
      "left" : "head",
      "right" : "head",
      "info" : "SimpleName[37453-37457]:SimpleName[37453-37457]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[37458-37467]:SingleVariableDeclaration[37458-37467]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[37469-37478]:SingleVariableDeclaration[37469-37478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37480-38022]:Block[37480-38022]"
    }, {
      "left" : "if (node instanceof TextNode)",
      "right" : "if (node instanceof TextNode)",
      "info" : "IfStatement[37498-38008]:IfStatement[37498-38008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37528-37663]:Block[37528-37663]"
    }, {
      "left" : "TextNode textNode = (TextNode) node;",
      "right" : "TextNode textNode = (TextNode) node;",
      "info" : "VariableDeclarationStatement[37550-37586]:VariableDeclarationStatement[37550-37586]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[37607-37645]:ExpressionStatement[37607-37645]"
    }, {
      "left" : "if (node instanceof Element)",
      "right" : "if (node instanceof Element)",
      "info" : "IfStatement[37669-38008]:IfStatement[37669-38008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37698-38008]:Block[37698-38008]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[37720-37753]:VariableDeclarationStatement[37720-37753]"
    }, {
      "left" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (accum.length() > 0 &&\n                        (element.isBlock() || element.tag.getName().equals(\"br\")) &&\n                        !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[37774-37990]:IfStatement[37774-37990]"
    }, {
      "left" : "accum.append(' ');",
      "right" : "accum.append(' ');",
      "info" : "ExpressionStatement[37972-37990]:ExpressionStatement[37972-37990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38036-38042]:Modifier[38036-38042]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38043-38047]:PrimitiveType[38043-38047]"
    }, {
      "left" : "tail",
      "right" : "tail",
      "info" : "SimpleName[38048-38052]:SimpleName[38048-38052]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[38053-38062]:SingleVariableDeclaration[38053-38062]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[38064-38073]:SingleVariableDeclaration[38064-38073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38075-38090]:Block[38075-38090]"
    }, {
      "left" : "return accum.toString().trim();",
      "right" : "return accum.toString().trim();",
      "info" : "ReturnStatement[38117-38148]:ReturnStatement[38117-38148]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38707-38713]:Modifier[38707-38713]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[38714-38720]:SimpleType[38714-38720]"
    }, {
      "left" : "ownText",
      "right" : "ownText",
      "info" : "SimpleName[38721-38728]:SimpleName[38721-38728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38731-38844]:Block[38731-38844]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[38741-38780]:VariableDeclarationStatement[38741-38780]"
    }, {
      "left" : "ownText(sb);",
      "right" : "ownText(sb);",
      "info" : "ExpressionStatement[38789-38801]:ExpressionStatement[38789-38801]"
    }, {
      "left" : "return sb.toString().trim();",
      "right" : "return sb.toString().trim();",
      "info" : "ReturnStatement[38810-38838]:ReturnStatement[38810-38838]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38850-38857]:Modifier[38850-38857]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38858-38862]:PrimitiveType[38858-38862]"
    }, {
      "left" : "ownText",
      "right" : "ownText",
      "info" : "SimpleName[38863-38870]:SimpleName[38863-38870]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[38871-38890]:SingleVariableDeclaration[38871-38890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38892-39230]:Block[38892-39230]"
    }, {
      "left" : "for (Node child : childNodes)",
      "right" : "for (Node child : childNodes)",
      "info" : "EnhancedForStatement[38902-39224]:EnhancedForStatement[38902-39224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38932-39224]:Block[38932-39224]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[38946-39214]:IfStatement[38946-39214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38977-39101]:Block[38977-39101]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[38995-39032]:VariableDeclarationStatement[38995-39032]"
    }, {
      "left" : "appendNormalisedText(accum, textNode);",
      "right" : "appendNormalisedText(accum, textNode);",
      "info" : "ExpressionStatement[39049-39087]:ExpressionStatement[39049-39087]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[39107-39214]:IfStatement[39107-39214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39137-39214]:Block[39137-39214]"
    }, {
      "left" : "appendWhitespaceIfBr((Element) child, accum);",
      "right" : "appendWhitespaceIfBr((Element) child, accum);",
      "info" : "ExpressionStatement[39155-39200]:ExpressionStatement[39155-39200]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39236-39243]:Modifier[39236-39243]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39244-39250]:Modifier[39244-39250]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39251-39255]:PrimitiveType[39251-39255]"
    }, {
      "left" : "appendNormalisedText",
      "right" : "appendNormalisedText",
      "info" : "SimpleName[39256-39276]:SimpleName[39256-39276]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[39277-39296]:SingleVariableDeclaration[39277-39296]"
    }, {
      "left" : "TextNode textNode",
      "right" : "TextNode textNode",
      "info" : "SingleVariableDeclaration[39298-39315]:SingleVariableDeclaration[39298-39315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39317-39572]:Block[39317-39572]"
    }, {
      "left" : "String text = textNode.getWholeText();",
      "right" : "String text = textNode.getWholeText();",
      "info" : "VariableDeclarationStatement[39327-39365]:VariableDeclarationStatement[39327-39365]"
    }, {
      "left" : "if (preserveWhitespace(textNode.parentNode))",
      "right" : "if (preserveWhitespace(textNode.parentNode))",
      "info" : "IfStatement[39375-39566]:IfStatement[39375-39566]"
    }, {
      "left" : "accum.append(text);",
      "right" : "accum.append(text);",
      "info" : "ExpressionStatement[39432-39451]:ExpressionStatement[39432-39451]"
    }, {
      "left" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "right" : "StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));",
      "info" : "ExpressionStatement[39477-39566]:ExpressionStatement[39477-39566]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39578-39585]:Modifier[39578-39585]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39586-39592]:Modifier[39586-39592]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39593-39597]:PrimitiveType[39593-39597]"
    }, {
      "left" : "appendWhitespaceIfBr",
      "right" : "appendWhitespaceIfBr",
      "info" : "SimpleName[39598-39618]:SimpleName[39598-39618]"
    }, {
      "left" : "Element element",
      "right" : "Element element",
      "info" : "SingleVariableDeclaration[39619-39634]:SingleVariableDeclaration[39619-39634]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[39636-39655]:SingleVariableDeclaration[39636-39655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39657-39784]:Block[39657-39784]"
    }, {
      "left" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "right" : "if (element.tag.getName().equals(\"br\") && !TextNode.lastCharIsWhitespace(accum))",
      "info" : "IfStatement[39667-39778]:IfStatement[39667-39778]"
    }, {
      "left" : "accum.append(\" \");",
      "right" : "accum.append(\" \");",
      "info" : "ExpressionStatement[39760-39778]:ExpressionStatement[39760-39778]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39790-39796]:Modifier[39790-39796]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[39797-39804]:PrimitiveType[39797-39804]"
    }, {
      "left" : "preserveWhitespace",
      "right" : "preserveWhitespace",
      "info" : "SimpleName[39805-39823]:SimpleName[39805-39823]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[39824-39833]:SingleVariableDeclaration[39824-39833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39835-40266]:Block[39835-40295]"
    }, {
      "left" : "if (node != null && node instanceof Element)",
      "right" : "if (node != null && node instanceof Element)",
      "info" : "IfStatement[39950-40238]:IfStatement[39950-40267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39995-40238]:Block[39995-40267]"
    }, {
      "left" : "Element el = (Element) node;",
      "right" : "Element el = (Element) node;",
      "info" : "VariableDeclarationStatement[40009-40037]:VariableDeclarationStatement[40009-40037]"
    }, {
      "left" : "if (el.tag.preserveWhitespace())",
      "right" : "if (el.tag.preserveWhitespace())",
      "info" : "IfStatement[40054-40228]:IfStatement[40094-40159]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[40107-40119]:ReturnStatement[40147-40159]"
    }, {
      "left" : "el.parent()",
      "right" : "el.parent()",
      "info" : "MethodInvocation[40168-40179]:MethodInvocation[40181-40192]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[40247-40260]:ReturnStatement[40276-40289]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40444-40450]:Modifier[40473-40479]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[40451-40458]:SimpleType[40480-40487]"
    }, {
      "left" : "text",
      "right" : "text",
      "info" : "SimpleName[40459-40463]:SimpleName[40488-40492]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[40464-40475]:SingleVariableDeclaration[40493-40504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40477-40635]:Block[40506-40664]"
    }, {
      "left" : "Validate.notNull(text);",
      "right" : "Validate.notNull(text);",
      "info" : "ExpressionStatement[40487-40510]:ExpressionStatement[40516-40539]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[40520-40528]:ExpressionStatement[40549-40557]"
    }, {
      "left" : "TextNode textNode = new TextNode(text);",
      "right" : "TextNode textNode = new TextNode(text);",
      "info" : "VariableDeclarationStatement[40537-40576]:VariableDeclarationStatement[40566-40605]"
    }, {
      "left" : "appendChild(textNode);",
      "right" : "appendChild(textNode);",
      "info" : "ExpressionStatement[40585-40607]:ExpressionStatement[40614-40636]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[40617-40629]:ReturnStatement[40646-40658]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40792-40798]:Modifier[40821-40827]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[40799-40806]:PrimitiveType[40828-40835]"
    }, {
      "left" : "hasText",
      "right" : "hasText",
      "info" : "SimpleName[40807-40814]:SimpleName[40836-40843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40817-41246]:Block[40846-41275]"
    }, {
      "left" : "for (Node child: childNodes)",
      "right" : "for (Node child: childNodes)",
      "info" : "EnhancedForStatement[40827-41218]:EnhancedForStatement[40856-41247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40856-41218]:Block[40885-41247]"
    }, {
      "left" : "if (child instanceof TextNode)",
      "right" : "if (child instanceof TextNode)",
      "info" : "IfStatement[40870-41208]:IfStatement[40899-41237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40901-41044]:Block[40930-41073]"
    }, {
      "left" : "TextNode textNode = (TextNode) child;",
      "right" : "TextNode textNode = (TextNode) child;",
      "info" : "VariableDeclarationStatement[40919-40956]:VariableDeclarationStatement[40948-40985]"
    }, {
      "left" : "if (!textNode.isBlank())",
      "right" : "if (!textNode.isBlank())",
      "info" : "IfStatement[40973-41030]:IfStatement[41002-41059]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[41018-41030]:ReturnStatement[41047-41059]"
    }, {
      "left" : "if (child instanceof Element)",
      "right" : "if (child instanceof Element)",
      "info" : "IfStatement[41050-41208]:IfStatement[41079-41237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41080-41208]:Block[41109-41237]"
    }, {
      "left" : "Element el = (Element) child;",
      "right" : "Element el = (Element) child;",
      "info" : "VariableDeclarationStatement[41098-41127]:VariableDeclarationStatement[41127-41156]"
    }, {
      "left" : "if (el.hasText())",
      "right" : "if (el.hasText())",
      "info" : "IfStatement[41144-41194]:IfStatement[41173-41223]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[41182-41194]:ReturnStatement[41211-41223]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[41227-41240]:ReturnStatement[41256-41269]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41657-41663]:Modifier[41686-41692]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[41664-41670]:SimpleType[41693-41699]"
    }, {
      "left" : "data",
      "right" : "data",
      "info" : "SimpleName[41671-41675]:SimpleName[41700-41704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41678-42342]:Block[41707-42371]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[41688-41727]:VariableDeclarationStatement[41717-41756]"
    }, {
      "left" : "for (Node childNode : childNodes)",
      "right" : "for (Node childNode : childNodes)",
      "info" : "EnhancedForStatement[41737-42306]:EnhancedForStatement[41766-42335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41771-42306]:Block[41800-42335]"
    }, {
      "left" : "if (childNode instanceof DataNode)",
      "right" : "if (childNode instanceof DataNode)",
      "info" : "IfStatement[41785-42296]:IfStatement[41814-42325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41820-41937]:Block[41849-41966]"
    }, {
      "left" : "DataNode data = (DataNode) childNode;",
      "right" : "DataNode data = (DataNode) childNode;",
      "info" : "VariableDeclarationStatement[41838-41875]:VariableDeclarationStatement[41867-41904]"
    }, {
      "left" : "sb.append(data.getWholeData());",
      "right" : "sb.append(data.getWholeData());",
      "info" : "ExpressionStatement[41892-41923]:ExpressionStatement[41921-41952]"
    }, {
      "left" : "if (childNode instanceof Comment)",
      "right" : "if (childNode instanceof Comment)",
      "info" : "IfStatement[41943-42296]:IfStatement[41972-42325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41977-42093]:Block[42006-42122]"
    }, {
      "left" : "Comment comment = (Comment) childNode;",
      "right" : "Comment comment = (Comment) childNode;",
      "info" : "VariableDeclarationStatement[41995-42033]:VariableDeclarationStatement[42024-42062]"
    }, {
      "left" : "sb.append(comment.getData());",
      "right" : "sb.append(comment.getData());",
      "info" : "ExpressionStatement[42050-42079]:ExpressionStatement[42079-42108]"
    }, {
      "left" : "if (childNode instanceof Element)",
      "right" : "if (childNode instanceof Element)",
      "info" : "IfStatement[42099-42296]:IfStatement[42128-42325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42133-42296]:Block[42162-42325]"
    }, {
      "left" : "Element element = (Element) childNode;",
      "right" : "Element element = (Element) childNode;",
      "info" : "VariableDeclarationStatement[42151-42189]:VariableDeclarationStatement[42180-42218]"
    }, {
      "left" : "String elementData = element.data();",
      "right" : "String elementData = element.data();",
      "info" : "VariableDeclarationStatement[42206-42242]:VariableDeclarationStatement[42235-42271]"
    }, {
      "left" : "sb.append(elementData);",
      "right" : "sb.append(elementData);",
      "info" : "ExpressionStatement[42259-42282]:ExpressionStatement[42288-42311]"
    }, {
      "left" : "return sb.toString();",
      "right" : "return sb.toString();",
      "info" : "ReturnStatement[42315-42336]:ReturnStatement[42344-42365]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42683-42689]:Modifier[42712-42718]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[42690-42696]:SimpleType[42719-42725]"
    }, {
      "left" : "className",
      "right" : "className",
      "info" : "SimpleName[42697-42706]:SimpleName[42726-42735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42709-42753]:Block[42738-42782]"
    }, {
      "left" : "return attr(\"class\").trim();",
      "right" : "return attr(\"class\").trim();",
      "info" : "ReturnStatement[42719-42747]:ReturnStatement[42748-42776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43161-43167]:Modifier[43190-43196]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[43168-43179]:ParameterizedType[43197-43208]"
    }, {
      "left" : "classNames",
      "right" : "classNames",
      "info" : "SimpleName[43180-43190]:SimpleName[43209-43219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43193-43441]:Block[43222-43470]"
    }, {
      "left" : "String[] names = classSplit.split(className());",
      "right" : "String[] names = classSplit.split(className());",
      "info" : "VariableDeclarationStatement[43200-43247]:VariableDeclarationStatement[43229-43276]"
    }, {
      "left" : "Set<String> classNames = new LinkedHashSet<>(Arrays.asList(names));",
      "right" : "Set<String> classNames = new LinkedHashSet<>(Arrays.asList(names));",
      "info" : "VariableDeclarationStatement[43253-43320]:VariableDeclarationStatement[43282-43349]"
    }, {
      "left" : "classNames.remove(\"\");",
      "right" : "classNames.remove(\"\");",
      "info" : "ExpressionStatement[43326-43348]:ExpressionStatement[43355-43377]"
    }, {
      "left" : "return classNames;",
      "right" : "return classNames;",
      "info" : "ReturnStatement[43417-43435]:ReturnStatement[43446-43464]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43617-43623]:Modifier[43646-43652]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[43624-43631]:SimpleType[43653-43660]"
    }, {
      "left" : "classNames",
      "right" : "classNames",
      "info" : "SimpleName[43632-43642]:SimpleName[43661-43671]"
    }, {
      "left" : "Set<String> classNames",
      "right" : "Set<String> classNames",
      "info" : "SingleVariableDeclaration[43643-43665]:SingleVariableDeclaration[43672-43694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43667-43911]:Block[43696-43940]"
    }, {
      "left" : "Validate.notNull(classNames);",
      "right" : "Validate.notNull(classNames);",
      "info" : "ExpressionStatement[43677-43706]:ExpressionStatement[43706-43735]"
    }, {
      "left" : "if (classNames.isEmpty())",
      "right" : "if (classNames.isEmpty())",
      "info" : "IfStatement[43715-43884]:IfStatement[43744-43913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43741-43794]:Block[43770-43823]"
    }, {
      "left" : "attributes().remove(\"class\");",
      "right" : "attributes().remove(\"class\");",
      "info" : "ExpressionStatement[43755-43784]:ExpressionStatement[43784-43813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43800-43884]:Block[43829-43913]"
    }, {
      "left" : "attributes().put(\"class\", StringUtil.join(classNames, \" \"));",
      "right" : "attributes().put(\"class\", StringUtil.join(classNames, \" \"));",
      "info" : "ExpressionStatement[43814-43874]:ExpressionStatement[43843-43903]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[43893-43905]:ReturnStatement[43922-43934]"
    }, {
      "left" : "// performance sensitive",
      "right" : "// performance sensitive",
      "info" : "LineComment[44089-44113]:LineComment[44118-44142]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44118-44124]:Modifier[44147-44153]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[44125-44132]:PrimitiveType[44154-44161]"
    }, {
      "left" : "hasClass",
      "right" : "hasClass",
      "info" : "SimpleName[44133-44141]:SimpleName[44162-44170]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[44142-44158]:SingleVariableDeclaration[44171-44187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44160-45652]:Block[44189-45681]"
    }, {
      "left" : "final String classAttr = attributes().getIgnoreCase(\"class\");",
      "right" : "final String classAttr = attributes().getIgnoreCase(\"class\");",
      "info" : "VariableDeclarationStatement[44170-44231]:VariableDeclarationStatement[44199-44260]"
    }, {
      "left" : "final int len = classAttr.length();",
      "right" : "final int len = classAttr.length();",
      "info" : "VariableDeclarationStatement[44240-44275]:VariableDeclarationStatement[44269-44304]"
    }, {
      "left" : "final int wantLen = className.length();",
      "right" : "final int wantLen = className.length();",
      "info" : "VariableDeclarationStatement[44284-44323]:VariableDeclarationStatement[44313-44352]"
    }, {
      "left" : "if (len == 0 || len < wantLen)",
      "right" : "if (len == 0 || len < wantLen)",
      "info" : "IfStatement[44333-44401]:IfStatement[44362-44430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44364-44401]:Block[44393-44430]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[44378-44391]:ReturnStatement[44407-44420]"
    }, {
      "left" : "if (len == wantLen)",
      "right" : "if (len == wantLen)",
      "info" : "IfStatement[44500-44589]:IfStatement[44529-44618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44520-44589]:Block[44549-44618]"
    }, {
      "left" : "return className.equalsIgnoreCase(classAttr);",
      "right" : "return className.equalsIgnoreCase(classAttr);",
      "info" : "ReturnStatement[44534-44579]:ReturnStatement[44563-44608]"
    }, {
      "left" : "boolean inClass = false;",
      "right" : "boolean inClass = false;",
      "info" : "VariableDeclarationStatement[44703-44727]:VariableDeclarationStatement[44732-44756]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[44736-44750]:VariableDeclarationStatement[44765-44779]"
    }, {
      "left" : "for (int i = 0; i < len; i++)",
      "right" : "for (int i = 0; i < len; i++)",
      "info" : "ForStatement[44759-45451]:ForStatement[44788-45480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44789-45451]:Block[44818-45480]"
    }, {
      "left" : "if (Character.isWhitespace(classAttr.charAt(i)))",
      "right" : "if (Character.isWhitespace(classAttr.charAt(i)))",
      "info" : "IfStatement[44803-45441]:IfStatement[44832-45470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44852-45224]:Block[44881-45253]"
    }, {
      "left" : "if (inClass)",
      "right" : "if (inClass)",
      "info" : "IfStatement[44870-45210]:IfStatement[44899-45239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44883-45210]:Block[44912-45239]"
    }, {
      "left" : "if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen))",
      "right" : "if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen))",
      "info" : "IfStatement[45006-45155]:IfStatement[45035-45184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45095-45155]:Block[45124-45184]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[45121-45133]:ReturnStatement[45150-45162]"
    }, {
      "left" : "inClass = false;",
      "right" : "inClass = false;",
      "info" : "ExpressionStatement[45176-45192]:ExpressionStatement[45205-45221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45230-45441]:Block[45259-45470]"
    }, {
      "left" : "if (!inClass)",
      "right" : "if (!inClass)",
      "info" : "IfStatement[45248-45427]:IfStatement[45277-45456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45262-45427]:Block[45291-45456]"
    }, {
      "left" : "inClass = true;",
      "right" : "inClass = true;",
      "info" : "ExpressionStatement[45363-45378]:ExpressionStatement[45392-45407]"
    }, {
      "left" : "start = i;",
      "right" : "start = i;",
      "info" : "ExpressionStatement[45399-45409]:ExpressionStatement[45428-45438]"
    }, {
      "left" : "if (inClass && len - start == wantLen)",
      "right" : "if (inClass && len - start == wantLen)",
      "info" : "IfStatement[45493-45623]:IfStatement[45522-45652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45532-45623]:Block[45561-45652]"
    }, {
      "left" : "return classAttr.regionMatches(true, start, className, 0, wantLen);",
      "right" : "return classAttr.regionMatches(true, start, className, 0, wantLen);",
      "info" : "ReturnStatement[45546-45613]:ReturnStatement[45575-45642]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[45633-45646]:ReturnStatement[45662-45675]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45805-45811]:Modifier[45834-45840]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[45812-45819]:SimpleType[45841-45848]"
    }, {
      "left" : "addClass",
      "right" : "addClass",
      "info" : "SimpleName[45820-45828]:SimpleName[45849-45857]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[45829-45845]:SingleVariableDeclaration[45858-45874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45847-46019]:Block[45876-46048]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[45857-45885]:ExpressionStatement[45886-45914]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[45895-45930]:VariableDeclarationStatement[45924-45959]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[45939-45962]:ExpressionStatement[45968-45991]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[45971-45991]:ExpressionStatement[46000-46020]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46001-46013]:ReturnStatement[46030-46042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46180-46186]:Modifier[46209-46215]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[46187-46194]:SimpleType[46216-46223]"
    }, {
      "left" : "removeClass",
      "right" : "removeClass",
      "info" : "SimpleName[46195-46206]:SimpleName[46224-46235]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[46207-46223]:SingleVariableDeclaration[46236-46252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46225-46400]:Block[46254-46429]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[46235-46263]:ExpressionStatement[46264-46292]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[46273-46308]:VariableDeclarationStatement[46302-46337]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[46317-46343]:ExpressionStatement[46346-46372]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[46352-46372]:ExpressionStatement[46381-46401]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46382-46394]:ReturnStatement[46411-46423]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46600-46606]:Modifier[46629-46635]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[46607-46614]:SimpleType[46636-46643]"
    }, {
      "left" : "toggleClass",
      "right" : "toggleClass",
      "info" : "SimpleName[46615-46626]:SimpleName[46644-46655]"
    }, {
      "left" : "String className",
      "right" : "String className",
      "info" : "SingleVariableDeclaration[46627-46643]:SingleVariableDeclaration[46656-46672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46645-46914]:Block[46674-46943]"
    }, {
      "left" : "Validate.notNull(className);",
      "right" : "Validate.notNull(className);",
      "info" : "ExpressionStatement[46655-46683]:ExpressionStatement[46684-46712]"
    }, {
      "left" : "Set<String> classes = classNames();",
      "right" : "Set<String> classes = classNames();",
      "info" : "VariableDeclarationStatement[46693-46728]:VariableDeclarationStatement[46722-46757]"
    }, {
      "left" : "if (classes.contains(className))",
      "right" : "if (classes.contains(className))",
      "info" : "IfStatement[46737-46857]:IfStatement[46766-46886]"
    }, {
      "left" : "classes.remove(className);",
      "right" : "classes.remove(className);",
      "info" : "ExpressionStatement[46782-46808]:ExpressionStatement[46811-46837]"
    }, {
      "left" : "classes.add(className);",
      "right" : "classes.add(className);",
      "info" : "ExpressionStatement[46834-46857]:ExpressionStatement[46863-46886]"
    }, {
      "left" : "classNames(classes);",
      "right" : "classNames(classes);",
      "info" : "ExpressionStatement[46866-46886]:ExpressionStatement[46895-46915]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[46896-46908]:ReturnStatement[46925-46937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47077-47083]:Modifier[47106-47112]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[47084-47090]:SimpleType[47113-47119]"
    }, {
      "left" : "val",
      "right" : "val",
      "info" : "SimpleName[47091-47094]:SimpleName[47120-47123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47097-47220]:Block[47126-47249]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[47107-47214]:IfStatement[47136-47243]"
    }, {
      "left" : "return text();",
      "right" : "return text();",
      "info" : "ReturnStatement[47153-47167]:ReturnStatement[47182-47196]"
    }, {
      "left" : "return attr(\"value\");",
      "right" : "return attr(\"value\");",
      "info" : "ReturnStatement[47193-47214]:ReturnStatement[47222-47243]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47385-47391]:Modifier[47414-47420]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[47392-47399]:SimpleType[47421-47428]"
    }, {
      "left" : "val",
      "right" : "val",
      "info" : "SimpleName[47400-47403]:SimpleName[47429-47432]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[47404-47416]:SingleVariableDeclaration[47433-47445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47418-47560]:Block[47447-47589]"
    }, {
      "left" : "if (tagName().equals(\"textarea\"))",
      "right" : "if (tagName().equals(\"textarea\"))",
      "info" : "IfStatement[47428-47533]:IfStatement[47457-47562]"
    }, {
      "left" : "text(value);",
      "right" : "text(value);",
      "info" : "ExpressionStatement[47474-47486]:ExpressionStatement[47503-47515]"
    }, {
      "left" : "attr(\"value\", value);",
      "right" : "attr(\"value\", value);",
      "info" : "ExpressionStatement[47512-47533]:ExpressionStatement[47541-47562]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[47542-47554]:ReturnStatement[47571-47583]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47566-47570]:PrimitiveType[47595-47599]"
    }, {
      "left" : "outerHtmlHead",
      "right" : "outerHtmlHead",
      "info" : "SimpleName[47571-47584]:SimpleName[47600-47613]"
    }, {
      "left" : "final Appendable accum",
      "right" : "final Appendable accum",
      "info" : "SingleVariableDeclaration[47585-47607]:SingleVariableDeclaration[47614-47636]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[47609-47618]:SingleVariableDeclaration[47638-47647]"
    }, {
      "left" : "final Document.OutputSettings out",
      "right" : "final Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[47620-47653]:SingleVariableDeclaration[47649-47682]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[47662-47673]:SimpleType[47691-47702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47674-48572]:Block[47703-48601]"
    }, {
      "left" : "if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "right" : "if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()))",
      "info" : "IfStatement[47684-48049]:IfStatement[47713-48078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47805-48049]:Block[47834-48078]"
    }, {
      "left" : "if (accum instanceof StringBuilder)",
      "right" : "if (accum instanceof StringBuilder)",
      "info" : "IfStatement[47819-48039]:IfStatement[47848-48068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47855-47975]:Block[47884-48004]"
    }, {
      "left" : "if (((StringBuilder) accum).length() > 0)",
      "right" : "if (((StringBuilder) accum).length() > 0)",
      "info" : "IfStatement[47873-47961]:IfStatement[47902-47990]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[47935-47961]:ExpressionStatement[47964-47990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47981-48039]:Block[48010-48068]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[47999-48025]:ExpressionStatement[48028-48054]"
    }, {
      "left" : "accum.append('<').append(tagName());",
      "right" : "accum.append('<').append(tagName());",
      "info" : "ExpressionStatement[48058-48094]:ExpressionStatement[48087-48123]"
    }, {
      "left" : "if (attributes != null)",
      "right" : "if (attributes != null)",
      "info" : "IfStatement[48103-48155]:IfStatement[48132-48184]"
    }, {
      "left" : "attributes.html(accum, out);",
      "right" : "attributes.html(accum, out);",
      "info" : "ExpressionStatement[48127-48155]:ExpressionStatement[48156-48184]"
    }, {
      "left" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "right" : "if (childNodes.isEmpty() && tag.isSelfClosing())",
      "info" : "IfStatement[48254-48566]:IfStatement[48283-48595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48303-48522]:Block[48332-48551]"
    }, {
      "left" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "right" : "if (out.syntax() == Document.OutputSettings.Syntax.html && tag.isEmpty())",
      "info" : "IfStatement[48317-48479]:IfStatement[48346-48508]"
    }, {
      "left" : "accum.append('>');",
      "right" : "accum.append('>');",
      "info" : "ExpressionStatement[48407-48425]:ExpressionStatement[48436-48454]"
    }, {
      "left" : "accum.append(\" />\");",
      "right" : "accum.append(\" />\");",
      "info" : "ExpressionStatement[48459-48479]:ExpressionStatement[48488-48508]"
    }, {
      "left" : "accum.append('>');",
      "right" : "accum.append('>');",
      "info" : "ExpressionStatement[48548-48566]:ExpressionStatement[48577-48595]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48575-48579]:PrimitiveType[48604-48608]"
    }, {
      "left" : "outerHtmlTail",
      "right" : "outerHtmlTail",
      "info" : "SimpleName[48580-48593]:SimpleName[48609-48622]"
    }, {
      "left" : "Appendable accum",
      "right" : "Appendable accum",
      "info" : "SingleVariableDeclaration[48594-48610]:SingleVariableDeclaration[48623-48639]"
    }, {
      "left" : "int depth",
      "right" : "int depth",
      "info" : "SingleVariableDeclaration[48612-48621]:SingleVariableDeclaration[48641-48650]"
    }, {
      "left" : "Document.OutputSettings out",
      "right" : "Document.OutputSettings out",
      "info" : "SingleVariableDeclaration[48623-48650]:SingleVariableDeclaration[48652-48679]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[48659-48670]:SimpleType[48688-48699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48671-49090]:Block[48700-49119]"
    }, {
      "left" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "right" : "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
      "info" : "IfStatement[48681-49084]:IfStatement[48710-49113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48733-49084]:Block[48762-49113]"
    }, {
      "left" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "right" : "if (out.prettyPrint() && (!childNodes.isEmpty() && (\n                    tag.formatAsBlock() || (out.outline() && (childNodes.size()>1 || (childNodes.size()==1 && !(childNodes.get(0) instanceof TextNode))))\n            )))",
      "info" : "IfStatement[48747-49012]:IfStatement[48776-49041]"
    }, {
      "left" : "indent(accum, depth, out);",
      "right" : "indent(accum, depth, out);",
      "info" : "ExpressionStatement[48986-49012]:ExpressionStatement[49015-49041]"
    }, {
      "left" : "accum.append(\"</\").append(tagName()).append('>');",
      "right" : "accum.append(\"</\").append(tagName()).append('>');",
      "info" : "ExpressionStatement[49025-49074]:ExpressionStatement[49054-49103]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49380-49386]:Modifier[49409-49415]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[49387-49393]:SimpleType[49416-49422]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[49394-49398]:SimpleName[49423-49427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49401-49582]:Block[49430-49611]"
    }, {
      "left" : "StringBuilder accum = StringUtil.stringBuilder();",
      "right" : "StringBuilder accum = StringUtil.stringBuilder();",
      "info" : "VariableDeclarationStatement[49411-49460]:VariableDeclarationStatement[49440-49489]"
    }, {
      "left" : "html(accum);",
      "right" : "html(accum);",
      "info" : "ExpressionStatement[49469-49481]:ExpressionStatement[49498-49510]"
    }, {
      "left" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "right" : "return getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();",
      "info" : "ReturnStatement[49490-49576]:ReturnStatement[49519-49605]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[49588-49595]:Modifier[49617-49624]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[49596-49600]:PrimitiveType[49625-49629]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[49601-49605]:SimpleName[49630-49634]"
    }, {
      "left" : "StringBuilder accum",
      "right" : "StringBuilder accum",
      "info" : "SingleVariableDeclaration[49606-49625]:SingleVariableDeclaration[49635-49654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49627-49706]:Block[49656-49735]"
    }, {
      "left" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "right" : "for (Node node : childNodes)\n            node.outerHtml(accum);",
      "info" : "EnhancedForStatement[49637-49700]:EnhancedForStatement[49666-49729]"
    }, {
      "left" : "node.outerHtml(accum);",
      "right" : "node.outerHtml(accum);",
      "info" : "ExpressionStatement[49678-49700]:ExpressionStatement[49707-49729]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[49749-49758]:MarkerAnnotation[49778-49787]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49763-49769]:Modifier[49792-49798]"
    }, {
      "left" : "T extends Appendable",
      "right" : "T extends Appendable",
      "info" : "TypeParameter[49771-49791]:TypeParameter[49800-49820]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[49793-49794]:SimpleType[49822-49823]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[49795-49799]:SimpleName[49824-49828]"
    }, {
      "left" : "T appendable",
      "right" : "T appendable",
      "info" : "SingleVariableDeclaration[49800-49812]:SingleVariableDeclaration[49829-49841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49814-49926]:Block[49843-49955]"
    }, {
      "left" : "for (Node node : childNodes)\n            node.outerHtml(appendable);",
      "right" : "for (Node node : childNodes)\n            node.outerHtml(appendable);",
      "info" : "EnhancedForStatement[49824-49892]:EnhancedForStatement[49853-49921]"
    }, {
      "left" : "node.outerHtml(appendable);",
      "right" : "node.outerHtml(appendable);",
      "info" : "ExpressionStatement[49865-49892]:ExpressionStatement[49894-49921]"
    }, {
      "left" : "return appendable;",
      "right" : "return appendable;",
      "info" : "ReturnStatement[49902-49920]:ReturnStatement[49931-49949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50137-50143]:Modifier[50166-50172]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[50144-50151]:SimpleType[50173-50180]"
    }, {
      "left" : "html",
      "right" : "html",
      "info" : "SimpleName[50152-50156]:SimpleName[50181-50185]"
    }, {
      "left" : "String html",
      "right" : "String html",
      "info" : "SingleVariableDeclaration[50157-50168]:SingleVariableDeclaration[50186-50197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50170-50237]:Block[50199-50266]"
    }, {
      "left" : "empty();",
      "right" : "empty();",
      "info" : "ExpressionStatement[50180-50188]:ExpressionStatement[50209-50217]"
    }, {
      "left" : "append(html);",
      "right" : "append(html);",
      "info" : "ExpressionStatement[50197-50210]:ExpressionStatement[50226-50239]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50219-50231]:ReturnStatement[50248-50260]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50240-50246]:Modifier[50269-50275]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[50247-50253]:SimpleType[50276-50282]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[50254-50262]:SimpleName[50283-50291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50265-50300]:Block[50294-50329]"
    }, {
      "left" : "return outerHtml();",
      "right" : "return outerHtml();",
      "info" : "ReturnStatement[50275-50294]:ReturnStatement[50304-50323]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50306-50315]:MarkerAnnotation[50335-50344]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50320-50326]:Modifier[50349-50355]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[50327-50334]:SimpleType[50356-50363]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[50335-50340]:SimpleName[50364-50369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50343-50390]:Block[50372-50419]"
    }, {
      "left" : "return (Element) super.clone();",
      "right" : "return (Element) super.clone();",
      "info" : "ReturnStatement[50353-50384]:ReturnStatement[50382-50413]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50396-50405]:MarkerAnnotation[50425-50434]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50410-50416]:Modifier[50439-50445]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[50417-50424]:SimpleType[50446-50453]"
    }, {
      "left" : "shallowClone",
      "right" : "shallowClone",
      "info" : "SimpleName[50425-50437]:SimpleName[50454-50466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50440-50573]:Block[50469-50602]"
    }, {
      "left" : "return new Element(tag, baseUri, attributes);",
      "right" : "return new Element(tag, baseUri, attributes);",
      "info" : "ReturnStatement[50522-50567]:ReturnStatement[50551-50596]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[50579-50588]:MarkerAnnotation[50608-50617]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[50593-50602]:Modifier[50622-50631]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[50603-50610]:SimpleType[50632-50639]"
    }, {
      "left" : "doClone",
      "right" : "doClone",
      "info" : "SimpleName[50611-50618]:SimpleName[50640-50647]"
    }, {
      "left" : "Node parent",
      "right" : "Node parent",
      "info" : "SingleVariableDeclaration[50619-50630]:SingleVariableDeclaration[50648-50659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50632-50998]:Block[50661-51027]"
    }, {
      "left" : "Element clone = (Element) super.doClone(parent);",
      "right" : "Element clone = (Element) super.doClone(parent);",
      "info" : "VariableDeclarationStatement[50642-50690]:VariableDeclarationStatement[50671-50719]"
    }, {
      "left" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "right" : "clone.attributes = attributes != null ? attributes.clone() : null;",
      "info" : "ExpressionStatement[50699-50765]:ExpressionStatement[50728-50794]"
    }, {
      "left" : "clone.baseUri = baseUri;",
      "right" : "clone.baseUri = baseUri;",
      "info" : "ExpressionStatement[50774-50798]:ExpressionStatement[50803-50827]"
    }, {
      "left" : "clone.childNodes = new NodeList(clone, childNodes.size());",
      "right" : "clone.childNodes = new NodeList(clone, childNodes.size());",
      "info" : "ExpressionStatement[50807-50865]:ExpressionStatement[50836-50894]"
    }, {
      "left" : "clone.childNodes.addAll(childNodes);",
      "right" : "clone.childNodes.addAll(childNodes);",
      "info" : "ExpressionStatement[50874-50910]:ExpressionStatement[50903-50939]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[50979-50992]:ReturnStatement[51008-51021]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[51004-51011]:Modifier[51033-51040]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[51012-51018]:Modifier[51041-51047]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[51019-51024]:Modifier[51048-51053]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[51025-51030]:TYPE_DECLARATION_KIND[51054-51059]"
    }, {
      "left" : "NodeList",
      "right" : "NodeList",
      "info" : "SimpleName[51031-51039]:SimpleName[51060-51068]"
    }, {
      "left" : "NodeList",
      "right" : "NodeList",
      "info" : "SimpleName[51127-51135]:SimpleName[51156-51164]"
    }, {
      "left" : "Element owner",
      "right" : "Element owner",
      "info" : "SingleVariableDeclaration[51136-51149]:SingleVariableDeclaration[51165-51178]"
    }, {
      "left" : "int initialCapacity",
      "right" : "int initialCapacity",
      "info" : "SingleVariableDeclaration[51151-51170]:SingleVariableDeclaration[51180-51199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51172-51251]:Block[51201-51280]"
    }, {
      "left" : "super(initialCapacity);",
      "right" : "super(initialCapacity);",
      "info" : "SuperConstructorInvocation[51186-51209]:SuperConstructorInvocation[51215-51238]"
    }, {
      "left" : "this.owner = owner;",
      "right" : "this.owner = owner;",
      "info" : "ExpressionStatement[51222-51241]:ExpressionStatement[51251-51270]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51261-51267]:Modifier[51290-51296]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51268-51272]:PrimitiveType[51297-51301]"
    }, {
      "left" : "onContentsChanged",
      "right" : "onContentsChanged",
      "info" : "SimpleName[51273-51290]:SimpleName[51302-51319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51293-51341]:Block[51322-51370]"
    }, {
      "left" : "owner.nodelistChanged();",
      "right" : "owner.nodelistChanged();",
      "info" : "ExpressionStatement[51307-51331]:ExpressionStatement[51336-51360]"
    } ]
  },
  "interFileMappings" : { }
}