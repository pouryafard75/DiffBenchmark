{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "LRUEvictor",
      "right" : "LRUEvictor",
      "info" : "TypeDeclaration[1477-11183]:TypeDeclaration[1477-9788]"
    }, {
      "left" : "private static final Logger LOG = LoggerFactory.getLogger(Constants.LOGGER_TYPE);",
      "right" : "private static final Logger LOG = LoggerFactory.getLogger(Constants.LOGGER_TYPE);",
      "info" : "FieldDeclaration[1560-1641]:FieldDeclaration[1560-1641]"
    }, {
      "left" : "private static final int LINKED_HASH_MAP_INIT_CAPACITY = 200;",
      "right" : "private static final int LINKED_HASH_MAP_INIT_CAPACITY = 200;",
      "info" : "FieldDeclaration[1644-1705]:FieldDeclaration[1644-1705]"
    }, {
      "left" : "private static final float LINKED_HASH_MAP_INIT_LOAD_FACTOR = 0.75f;",
      "right" : "private static final float LINKED_HASH_MAP_INIT_LOAD_FACTOR = 0.75f;",
      "info" : "FieldDeclaration[1708-1776]:FieldDeclaration[1708-1776]"
    }, {
      "left" : "private static final boolean LINKED_HASH_MAP_ACCESS_ORDERED = true;",
      "right" : "private static final boolean LINKED_HASH_MAP_ACCESS_ORDERED = true;",
      "info" : "FieldDeclaration[1779-1846]:FieldDeclaration[1779-1846]"
    }, {
      "left" : "private static final boolean UNUSED_MAP_VALUE = true;",
      "right" : "private static final boolean UNUSED_MAP_VALUE = true;",
      "info" : "FieldDeclaration[1849-1902]:FieldDeclaration[1849-1902]"
    }, {
      "left" : "private BlockMetadataManagerView mManagerView;",
      "right" : "private BlockMetadataManagerView mManagerView;",
      "info" : "FieldDeclaration[1906-1952]:FieldDeclaration[1906-1952]"
    }, {
      "left" : "private Map<Long, Boolean> mLRUCache = Collections\n      .synchronizedMap(new LinkedHashMap<Long, Boolean>(LINKED_HASH_MAP_INIT_CAPACITY,\n          LINKED_HASH_MAP_INIT_LOAD_FACTOR, LINKED_HASH_MAP_ACCESS_ORDERED));",
      "right" : "private Map<Long, Boolean> mLRUCache = Collections\n      .synchronizedMap(new LinkedHashMap<Long, Boolean>(LINKED_HASH_MAP_INIT_CAPACITY,\n          LINKED_HASH_MAP_INIT_LOAD_FACTOR, LINKED_HASH_MAP_ACCESS_ORDERED));",
      "info" : "FieldDeclaration[1956-2475]:FieldDeclaration[1956-2475]"
    }, {
      "left" : "public LRUEvictor(BlockMetadataManagerView view)",
      "right" : "public LRUEvictor(BlockMetadataManagerView view)",
      "info" : "MethodDeclaration[2479-2969]:MethodDeclaration[2479-2969]"
    }, {
      "left" : "private StorageDirView selectDirWithRequestedSpace(long bytesToBeAvailable,\n      BlockStoreLocation location) throws IOException",
      "right" : "private StorageDirView selectDirWithRequestedSpace(long bytesToBeAvailable,\n      BlockStoreLocation location) throws IOException",
      "info" : "MethodDeclaration[2973-4133]:MethodDeclaration[2973-4133]"
    }, {
      "left" : "private StorageDirView cascadingEvict(long bytesToBeAvailable, BlockStoreLocation location,\n      EvictionPlan plan) throws IOException",
      "right" : "private StorageDirView cascadingEvict(long bytesToBeAvailable, BlockStoreLocation location,\n      EvictionPlan plan) throws IOException",
      "info" : "MethodDeclaration[4137-7986]:MethodDeclaration[4137-7908]"
    }, {
      "left" : "public EvictionPlan freeSpaceWithView(long bytesToBeAvailable, BlockStoreLocation location,\n      BlockMetadataManagerView view) throws IOException",
      "right" : "public EvictionPlan freeSpaceWithView(long bytesToBeAvailable, BlockStoreLocation location,\n      BlockMetadataManagerView view) throws IOException",
      "info" : "MethodDeclaration[7991-8233]:MethodDeclaration[7913-9201]"
    }, {
      "left" : "public void onAccessBlock(long userId, long blockId)",
      "right" : "public void onAccessBlock(long userId, long blockId)",
      "info" : "MethodDeclaration[10600-10716]:MethodDeclaration[9205-9321]"
    }, {
      "left" : "public void onCommitBlock(long userId, long blockId, BlockStoreLocation location)",
      "right" : "public void onCommitBlock(long userId, long blockId, BlockStoreLocation location)",
      "info" : "MethodDeclaration[10720-10955]:MethodDeclaration[9325-9560]"
    }, {
      "left" : "public void onRemoveBlockByClient(long userId, long blockId)",
      "right" : "public void onRemoveBlockByClient(long userId, long blockId)",
      "info" : "MethodDeclaration[10959-11068]:MethodDeclaration[9564-9673]"
    }, {
      "left" : "public void onRemoveBlockByWorker(long userId, long blockId)",
      "right" : "public void onRemoveBlockByWorker(long userId, long blockId)",
      "info" : "MethodDeclaration[11072-11181]:MethodDeclaration[9677-9786]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1477-1483]:Modifier[1477-1483]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1484-1489]:TYPE_DECLARATION_KIND[1484-1489]"
    }, {
      "left" : "LRUEvictor",
      "right" : "LRUEvictor",
      "info" : "SimpleName[1490-1500]:SimpleName[1490-1500]"
    }, {
      "left" : "BlockStoreEventListenerBase",
      "right" : "BlockStoreEventListenerBase",
      "info" : "SimpleType[1509-1536]:SimpleType[1509-1536]"
    }, {
      "left" : "Evictor",
      "right" : "Evictor",
      "info" : "SimpleType[1548-1555]:SimpleType[1548-1555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2479-2485]:Modifier[2479-2485]"
    }, {
      "left" : "LRUEvictor",
      "right" : "LRUEvictor",
      "info" : "SimpleName[2486-2496]:SimpleName[2486-2496]"
    }, {
      "left" : "BlockMetadataManagerView view",
      "right" : "BlockMetadataManagerView view",
      "info" : "SingleVariableDeclaration[2497-2526]:SingleVariableDeclaration[2497-2526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2528-2969]:Block[2528-2969]"
    }, {
      "left" : "mManagerView = Preconditions.checkNotNull(view);",
      "right" : "mManagerView = Preconditions.checkNotNull(view);",
      "info" : "ExpressionStatement[2534-2582]:ExpressionStatement[2534-2582]"
    }, {
      "left" : "for (StorageTierView tierView : mManagerView.getTierViews())",
      "right" : "for (StorageTierView tierView : mManagerView.getTierViews())",
      "info" : "EnhancedForStatement[2651-2965]:EnhancedForStatement[2651-2965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2712-2965]:Block[2712-2965]"
    }, {
      "left" : "for (StorageDirView dirView : tierView.getDirViews())",
      "right" : "for (StorageDirView dirView : tierView.getDirViews())",
      "info" : "EnhancedForStatement[2720-2959]:EnhancedForStatement[2720-2959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2774-2959]:Block[2774-2959]"
    }, {
      "left" : "for (BlockMeta blockMeta : dirView.getEvictableBlocks())",
      "right" : "for (BlockMeta blockMeta : dirView.getEvictableBlocks())",
      "info" : "EnhancedForStatement[2784-2951]:EnhancedForStatement[2784-2951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2841-2951]:Block[2841-2951]"
    }, {
      "left" : "mLRUCache.put(blockMeta.getBlockId(), UNUSED_MAP_VALUE);",
      "right" : "mLRUCache.put(blockMeta.getBlockId(), UNUSED_MAP_VALUE);",
      "info" : "ExpressionStatement[2885-2941]:ExpressionStatement[2885-2941]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3132-3139]:Modifier[3132-3139]"
    }, {
      "left" : "StorageDirView",
      "right" : "StorageDirView",
      "info" : "SimpleType[3140-3154]:SimpleType[3140-3154]"
    }, {
      "left" : "selectDirWithRequestedSpace",
      "right" : "selectDirWithRequestedSpace",
      "info" : "SimpleName[3155-3182]:SimpleName[3155-3182]"
    }, {
      "left" : "long bytesToBeAvailable",
      "right" : "long bytesToBeAvailable",
      "info" : "SingleVariableDeclaration[3183-3206]:SingleVariableDeclaration[3183-3206]"
    }, {
      "left" : "BlockStoreLocation location",
      "right" : "BlockStoreLocation location",
      "info" : "SingleVariableDeclaration[3214-3241]:SingleVariableDeclaration[3214-3241]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[3250-3261]:SimpleType[3250-3261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3262-4133]:Block[3262-4133]"
    }, {
      "left" : "if (location.equals(BlockStoreLocation.anyTier()))",
      "right" : "if (location.equals(BlockStoreLocation.anyTier()))",
      "info" : "IfStatement[3268-3603]:IfStatement[3268-3603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3319-3603]:Block[3319-3603]"
    }, {
      "left" : "for (StorageTierView tierView : mManagerView.getTierViews())",
      "right" : "for (StorageTierView tierView : mManagerView.getTierViews())",
      "info" : "EnhancedForStatement[3327-3578]:EnhancedForStatement[3327-3578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3388-3578]:Block[3388-3578]"
    }, {
      "left" : "for (StorageDirView dirView : tierView.getDirViews())",
      "right" : "for (StorageDirView dirView : tierView.getDirViews())",
      "info" : "EnhancedForStatement[3398-3570]:EnhancedForStatement[3398-3570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3452-3570]:Block[3452-3570]"
    }, {
      "left" : "if (dirView.getAvailableBytes() >= bytesToBeAvailable)",
      "right" : "if (dirView.getAvailableBytes() >= bytesToBeAvailable)",
      "info" : "IfStatement[3464-3560]:IfStatement[3464-3560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3519-3560]:Block[3519-3560]"
    }, {
      "left" : "return dirView;",
      "right" : "return dirView;",
      "info" : "ReturnStatement[3533-3548]:ReturnStatement[3533-3548]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3585-3597]:ReturnStatement[3585-3597]"
    }, {
      "left" : "int tierAlias = location.tierAlias();",
      "right" : "int tierAlias = location.tierAlias();",
      "info" : "VariableDeclarationStatement[3609-3646]:VariableDeclarationStatement[3609-3646]"
    }, {
      "left" : "StorageTierView tierView = mManagerView.getTierView(tierAlias);",
      "right" : "StorageTierView tierView = mManagerView.getTierView(tierAlias);",
      "info" : "VariableDeclarationStatement[3651-3714]:VariableDeclarationStatement[3651-3714]"
    }, {
      "left" : "if (location.equals(BlockStoreLocation.anyDirInTier(tierAlias)))",
      "right" : "if (location.equals(BlockStoreLocation.anyDirInTier(tierAlias)))",
      "info" : "IfStatement[3719-3981]:IfStatement[3719-3981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3784-3981]:Block[3784-3981]"
    }, {
      "left" : "for (StorageDirView dirView : tierView.getDirViews())",
      "right" : "for (StorageDirView dirView : tierView.getDirViews())",
      "info" : "EnhancedForStatement[3792-3956]:EnhancedForStatement[3792-3956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3846-3956]:Block[3846-3956]"
    }, {
      "left" : "if (dirView.getAvailableBytes() >= bytesToBeAvailable)",
      "right" : "if (dirView.getAvailableBytes() >= bytesToBeAvailable)",
      "info" : "IfStatement[3856-3948]:IfStatement[3856-3948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3911-3948]:Block[3911-3948]"
    }, {
      "left" : "return dirView;",
      "right" : "return dirView;",
      "info" : "ReturnStatement[3923-3938]:ReturnStatement[3923-3938]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3963-3975]:ReturnStatement[3963-3975]"
    }, {
      "left" : "StorageDirView dirView = tierView.getDirView(location.dir());",
      "right" : "StorageDirView dirView = tierView.getDirView(location.dir());",
      "info" : "VariableDeclarationStatement[3987-4048]:VariableDeclarationStatement[3987-4048]"
    }, {
      "left" : "return (dirView.getAvailableBytes() >= bytesToBeAvailable) ? dirView : null;",
      "right" : "return (dirView.getAvailableBytes() >= bytesToBeAvailable) ? dirView : null;",
      "info" : "ReturnStatement[4053-4129]:ReturnStatement[4053-4129]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[5141-5148]:Modifier[5063-5070]"
    }, {
      "left" : "cascadingEvict",
      "right" : "cascadingEvict",
      "info" : "SimpleName[5164-5178]:SimpleName[5086-5100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5277-7986]:Block[5199-7908]"
    }, {
      "left" : "StorageDirView candidateDirView = selectDirWithRequestedSpace(bytesToBeAvailable, location);",
      "right" : "StorageDirView candidateDirView = selectDirWithRequestedSpace(bytesToBeAvailable, location);",
      "info" : "VariableDeclarationStatement[5377-5469]:VariableDeclarationStatement[5299-5391]"
    }, {
      "left" : "if (candidateDirView != null)",
      "right" : "if (candidateDirView != null)",
      "info" : "IfStatement[5474-5542]:IfStatement[5396-5464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5504-5542]:Block[5426-5464]"
    }, {
      "left" : "return candidateDirView;",
      "right" : "return candidateDirView;",
      "info" : "ReturnStatement[5512-5536]:ReturnStatement[5434-5458]"
    }, {
      "left" : "EvictionDirCandidates dirCandidates = new EvictionDirCandidates();",
      "right" : "EvictionDirCandidates dirCandidates = new EvictionDirCandidates();",
      "info" : "VariableDeclarationStatement[5733-5799]:VariableDeclarationStatement[5655-5721]"
    }, {
      "left" : "Iterator<Map.Entry<Long, Boolean>> it = mLRUCache.entrySet().iterator();",
      "right" : "Iterator<Map.Entry<Long, Boolean>> it = mLRUCache.entrySet().iterator();",
      "info" : "VariableDeclarationStatement[5804-5876]:VariableDeclarationStatement[5726-5798]"
    }, {
      "left" : "while (it.hasNext() && dirCandidates.candidateSize() < bytesToBeAvailable)",
      "right" : "while (it.hasNext() && dirCandidates.candidateSize() < bytesToBeAvailable)",
      "info" : "WhileStatement[5881-6644]:WhileStatement[5803-6566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5956-6644]:Block[5878-6566]"
    }, {
      "left" : "long blockId = it.next().getKey();",
      "right" : "long blockId = it.next().getKey();",
      "info" : "VariableDeclarationStatement[5964-5998]:VariableDeclarationStatement[5886-5920]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6005-6638]:TryStatement[5927-6560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6009-6506]:Block[5931-6428]"
    }, {
      "left" : "BlockMeta block = mManagerView.getBlockMeta(blockId);",
      "right" : "BlockMeta block = mManagerView.getBlockMeta(blockId);",
      "info" : "VariableDeclarationStatement[6019-6072]:VariableDeclarationStatement[5941-5994]"
    }, {
      "left" : "if (null != block)",
      "right" : "if (null != block)",
      "info" : "IfStatement[6081-6498]:IfStatement[6003-6420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6100-6498]:Block[6022-6420]"
    }, {
      "left" : "if (block.getBlockLocation().belongTo(location))",
      "right" : "if (block.getBlockLocation().belongTo(location))",
      "info" : "IfStatement[6146-6488]:IfStatement[6068-6410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6195-6488]:Block[6117-6410]"
    }, {
      "left" : "int tierAlias = block.getParentDir().getParentTier().getTierAlias();",
      "right" : "int tierAlias = block.getParentDir().getParentTier().getTierAlias();",
      "info" : "VariableDeclarationStatement[6209-6277]:VariableDeclarationStatement[6131-6199]"
    }, {
      "left" : "int dirIndex = block.getParentDir().getDirIndex();",
      "right" : "int dirIndex = block.getParentDir().getDirIndex();",
      "info" : "VariableDeclarationStatement[6290-6340]:VariableDeclarationStatement[6212-6262]"
    }, {
      "left" : "dirCandidates.add(mManagerView.getTierView(tierAlias).getDirView(dirIndex),\n                blockId, block.getBlockSize());",
      "right" : "dirCandidates.add(mManagerView.getTierView(tierAlias).getDirView(dirIndex), blockId,\n                block.getBlockSize());",
      "info" : "ExpressionStatement[6353-6476]:ExpressionStatement[6275-6398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6531-6638]:Block[6453-6560]"
    }, {
      "left" : "LOG.warn(\"Remove block {} from LRU Cache because {}\", blockId, ioe);",
      "right" : "LOG.warn(\"Remove block {} from LRU Cache because {}\", blockId, ioe);",
      "info" : "ExpressionStatement[6541-6609]:ExpressionStatement[6463-6531]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[6618-6630]:ExpressionStatement[6540-6552]"
    }, {
      "left" : "if (dirCandidates.candidateSize() < bytesToBeAvailable)",
      "right" : "if (dirCandidates.candidateSize() < bytesToBeAvailable)",
      "info" : "IfStatement[6682-6764]:IfStatement[6604-6686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6738-6764]:Block[6660-6686]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6746-6758]:ReturnStatement[6668-6680]"
    }, {
      "left" : "candidateDirView = dirCandidates.candidateDir();",
      "right" : "candidateDirView = dirCandidates.candidateDir();",
      "info" : "ExpressionStatement[6927-6975]:ExpressionStatement[6849-6897]"
    }, {
      "left" : "List<Long> candidateBlocks = dirCandidates.candidateBlocks();",
      "right" : "List<Long> candidateBlocks = dirCandidates.candidateBlocks();",
      "info" : "VariableDeclarationStatement[6980-7041]:VariableDeclarationStatement[6902-6963]"
    }, {
      "left" : "List<StorageTierView> tierViewsBelow =\n        mManagerView.getTierViewsBelow(candidateDirView.getParentTierView().getTierViewAlias());",
      "right" : "List<StorageTierView> tierViewsBelow =\n        mManagerView.getTierViewsBelow(candidateDirView.getParentTierView().getTierViewAlias());",
      "info" : "VariableDeclarationStatement[7046-7181]:VariableDeclarationStatement[6968-7103]"
    }, {
      "left" : "StorageDirView candidateNextDir = null;",
      "right" : "StorageDirView candidateNextDir = null;",
      "info" : "VariableDeclarationStatement[7274-7313]:VariableDeclarationStatement[7196-7235]"
    }, {
      "left" : "for (StorageTierView tierView : tierViewsBelow)",
      "right" : "for (StorageTierView tierView : tierViewsBelow)",
      "info" : "EnhancedForStatement[7318-7598]:EnhancedForStatement[7240-7520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7366-7598]:Block[7288-7520]"
    }, {
      "left" : "candidateNextDir =\n          cascadingEvict(dirCandidates.candidateSize(),\n              BlockStoreLocation.anyDirInTier(tierView.getTierViewAlias()), plan);",
      "right" : "candidateNextDir =\n          cascadingEvict(dirCandidates.candidateSize(),\n              BlockStoreLocation.anyDirInTier(tierView.getTierViewAlias()), plan);",
      "info" : "ExpressionStatement[7374-7531]:ExpressionStatement[7296-7453]"
    }, {
      "left" : "if (candidateNextDir != null)",
      "right" : "if (candidateNextDir != null)",
      "info" : "IfStatement[7538-7592]:IfStatement[7460-7514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7568-7592]:Block[7490-7514]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7578-7584]:BreakStatement[7500-7506]"
    }, {
      "left" : "if (candidateNextDir == null)",
      "right" : "if (candidateNextDir == null)",
      "info" : "IfStatement[7603-7953]:IfStatement[7525-7875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7633-7740]:Block[7555-7662]"
    }, {
      "left" : "plan.toEvict().addAll(candidateBlocks);",
      "right" : "plan.toEvict().addAll(candidateBlocks);",
      "info" : "ExpressionStatement[7695-7734]:ExpressionStatement[7617-7656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7746-7953]:Block[7668-7875]"
    }, {
      "left" : "BlockStoreLocation dest = candidateNextDir.toBlockStoreLocation();",
      "right" : "BlockStoreLocation dest = candidateNextDir.toBlockStoreLocation();",
      "info" : "VariableDeclarationStatement[7754-7820]:VariableDeclarationStatement[7676-7742]"
    }, {
      "left" : "for (long block : candidateBlocks)",
      "right" : "for (long block : candidateBlocks)",
      "info" : "EnhancedForStatement[7827-7947]:EnhancedForStatement[7749-7869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7862-7947]:Block[7784-7869]"
    }, {
      "left" : "plan.toMove().add(new Pair<Long, BlockStoreLocation>(block, dest));",
      "right" : "plan.toMove().add(new Pair<Long, BlockStoreLocation>(block, dest));",
      "info" : "ExpressionStatement[7872-7939]:ExpressionStatement[7794-7861]"
    }, {
      "left" : "return candidateDirView;",
      "right" : "return candidateDirView;",
      "info" : "ReturnStatement[7958-7982]:ReturnStatement[7880-7904]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8003-8009]:Modifier[7925-7931]"
    }, {
      "left" : "freeSpaceWithView",
      "right" : "freeSpaceWithView",
      "info" : "SimpleName[8023-8040]:SimpleName[7945-7962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8151-8233]:Block[8073-9201]"
    }, {
      "left" : "mManagerView = view;",
      "right" : "mManagerView = view;",
      "info" : "ExpressionStatement[8157-8177]:ExpressionStatement[8079-8099]"
    }, {
      "left" : "List<Pair<Long, BlockStoreLocation>> toMove = new ArrayList<Pair<Long, BlockStoreLocation>>();",
      "right" : "List<Pair<Long, BlockStoreLocation>> toMove = new ArrayList<Pair<Long, BlockStoreLocation>>();",
      "info" : "VariableDeclarationStatement[9500-9594]:VariableDeclarationStatement[8105-8199]"
    }, {
      "left" : "List<Long> toEvict = new ArrayList<Long>();",
      "right" : "List<Long> toEvict = new ArrayList<Long>();",
      "info" : "VariableDeclarationStatement[9599-9642]:VariableDeclarationStatement[8204-8247]"
    }, {
      "left" : "EvictionPlan plan = new EvictionPlan(toMove, toEvict);",
      "right" : "EvictionPlan plan = new EvictionPlan(toMove, toEvict);",
      "info" : "VariableDeclarationStatement[9647-9701]:VariableDeclarationStatement[8252-8306]"
    }, {
      "left" : "StorageDirView candidateDir = cascadingEvict(bytesToBeAvailable, location, plan);",
      "right" : "StorageDirView candidateDir = cascadingEvict(bytesToBeAvailable, location, plan);",
      "info" : "VariableDeclarationStatement[9706-9787]:VariableDeclarationStatement[8311-8392]"
    }, {
      "left" : "if (candidateDir == null)",
      "right" : "if (candidateDir == null)",
      "info" : "IfStatement[9793-9845]:IfStatement[8398-8450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9819-9845]:Block[8424-8450]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9827-9839]:ReturnStatement[8432-8444]"
    }, {
      "left" : "if (plan.isEmpty())",
      "right" : "if (plan.isEmpty())",
      "info" : "IfStatement[9850-9896]:IfStatement[8455-8501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9870-9896]:Block[8475-8501]"
    }, {
      "left" : "return plan;",
      "right" : "return plan;",
      "info" : "ReturnStatement[9878-9890]:ReturnStatement[8483-8495]"
    }, {
      "left" : "Iterator<Pair<Long, BlockStoreLocation>> moveIt = plan.toMove().iterator();",
      "right" : "Iterator<Pair<Long, BlockStoreLocation>> moveIt = plan.toMove().iterator();",
      "info" : "VariableDeclarationStatement[9984-10059]:VariableDeclarationStatement[8589-8664]"
    }, {
      "left" : "while (moveIt.hasNext())",
      "right" : "while (moveIt.hasNext())",
      "info" : "WhileStatement[10064-10252]:WhileStatement[8669-8857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10089-10252]:Block[8694-8857]"
    }, {
      "left" : "long id = moveIt.next().getFirst();",
      "right" : "long id = moveIt.next().getFirst();",
      "info" : "VariableDeclarationStatement[10097-10132]:VariableDeclarationStatement[8702-8737]"
    }, {
      "left" : "if (null == mManagerView.getBlockMeta(id))",
      "right" : "if (null == mManagerView.getBlockMeta(id))",
      "info" : "IfStatement[10139-10246]:IfStatement[8744-8851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10182-10246]:Block[8787-8851]"
    }, {
      "left" : "mLRUCache.remove(id);",
      "right" : "mLRUCache.remove(id);",
      "info" : "ExpressionStatement[10192-10213]:ExpressionStatement[8797-8818]"
    }, {
      "left" : "moveIt.remove();",
      "right" : "moveIt.remove();",
      "info" : "ExpressionStatement[10222-10238]:ExpressionStatement[8827-8843]"
    }, {
      "left" : "Iterator<Long> evictIt = plan.toEvict().iterator();",
      "right" : "Iterator<Long> evictIt = plan.toEvict().iterator();",
      "info" : "VariableDeclarationStatement[10257-10308]:VariableDeclarationStatement[8862-8913]"
    }, {
      "left" : "while (evictIt.hasNext())",
      "right" : "while (evictIt.hasNext())",
      "info" : "WhileStatement[10313-10493]:WhileStatement[8918-9098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10339-10493]:Block[8944-9098]"
    }, {
      "left" : "long id = evictIt.next();",
      "right" : "long id = evictIt.next();",
      "info" : "VariableDeclarationStatement[10347-10372]:VariableDeclarationStatement[8952-8977]"
    }, {
      "left" : "if (null == mManagerView.getBlockMeta(id))",
      "right" : "if (null == mManagerView.getBlockMeta(id))",
      "info" : "IfStatement[10379-10487]:IfStatement[8984-9092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10422-10487]:Block[9027-9092]"
    }, {
      "left" : "mLRUCache.remove(id);",
      "right" : "mLRUCache.remove(id);",
      "info" : "ExpressionStatement[10432-10453]:ExpressionStatement[9037-9058]"
    }, {
      "left" : "evictIt.remove();",
      "right" : "evictIt.remove();",
      "info" : "ExpressionStatement[10462-10479]:ExpressionStatement[9067-9084]"
    }, {
      "left" : "return EvictorUtils.legalCascadingPlan(bytesToBeAvailable, plan, mManagerView) ? plan : null;",
      "right" : "return EvictorUtils.legalCascadingPlan(bytesToBeAvailable, plan, mManagerView) ? plan : null;",
      "info" : "ReturnStatement[10499-10592]:ReturnStatement[9104-9197]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10600-10609]:MarkerAnnotation[9205-9214]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10612-10618]:Modifier[9217-9223]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10619-10623]:PrimitiveType[9224-9228]"
    }, {
      "left" : "onAccessBlock",
      "right" : "onAccessBlock",
      "info" : "SimpleName[10624-10637]:SimpleName[9229-9242]"
    }, {
      "left" : "long userId",
      "right" : "long userId",
      "info" : "SingleVariableDeclaration[10638-10649]:SingleVariableDeclaration[9243-9254]"
    }, {
      "left" : "long blockId",
      "right" : "long blockId",
      "info" : "SingleVariableDeclaration[10651-10663]:SingleVariableDeclaration[9256-9268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10665-10716]:Block[9270-9321]"
    }, {
      "left" : "mLRUCache.put(blockId, UNUSED_MAP_VALUE);",
      "right" : "mLRUCache.put(blockId, UNUSED_MAP_VALUE);",
      "info" : "ExpressionStatement[10671-10712]:ExpressionStatement[9276-9317]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10720-10729]:MarkerAnnotation[9325-9334]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10732-10738]:Modifier[9337-9343]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10739-10743]:PrimitiveType[9344-9348]"
    }, {
      "left" : "onCommitBlock",
      "right" : "onCommitBlock",
      "info" : "SimpleName[10744-10757]:SimpleName[9349-9362]"
    }, {
      "left" : "long userId",
      "right" : "long userId",
      "info" : "SingleVariableDeclaration[10758-10769]:SingleVariableDeclaration[9363-9374]"
    }, {
      "left" : "long blockId",
      "right" : "long blockId",
      "info" : "SingleVariableDeclaration[10771-10783]:SingleVariableDeclaration[9376-9388]"
    }, {
      "left" : "BlockStoreLocation location",
      "right" : "BlockStoreLocation location",
      "info" : "SingleVariableDeclaration[10785-10812]:SingleVariableDeclaration[9390-9417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10814-10955]:Block[9419-9560]"
    }, {
      "left" : "mLRUCache.put(blockId, UNUSED_MAP_VALUE);",
      "right" : "mLRUCache.put(blockId, UNUSED_MAP_VALUE);",
      "info" : "ExpressionStatement[10910-10951]:ExpressionStatement[9515-9556]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10959-10968]:MarkerAnnotation[9564-9573]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10971-10977]:Modifier[9576-9582]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10978-10982]:PrimitiveType[9583-9587]"
    }, {
      "left" : "onRemoveBlockByClient",
      "right" : "onRemoveBlockByClient",
      "info" : "SimpleName[10983-11004]:SimpleName[9588-9609]"
    }, {
      "left" : "long userId",
      "right" : "long userId",
      "info" : "SingleVariableDeclaration[11005-11016]:SingleVariableDeclaration[9610-9621]"
    }, {
      "left" : "long blockId",
      "right" : "long blockId",
      "info" : "SingleVariableDeclaration[11018-11030]:SingleVariableDeclaration[9623-9635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11032-11068]:Block[9637-9673]"
    }, {
      "left" : "mLRUCache.remove(blockId);",
      "right" : "mLRUCache.remove(blockId);",
      "info" : "ExpressionStatement[11038-11064]:ExpressionStatement[9643-9669]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11072-11081]:MarkerAnnotation[9677-9686]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11084-11090]:Modifier[9689-9695]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11091-11095]:PrimitiveType[9696-9700]"
    }, {
      "left" : "onRemoveBlockByWorker",
      "right" : "onRemoveBlockByWorker",
      "info" : "SimpleName[11096-11117]:SimpleName[9701-9722]"
    }, {
      "left" : "long userId",
      "right" : "long userId",
      "info" : "SingleVariableDeclaration[11118-11129]:SingleVariableDeclaration[9723-9734]"
    }, {
      "left" : "long blockId",
      "right" : "long blockId",
      "info" : "SingleVariableDeclaration[11131-11143]:SingleVariableDeclaration[9736-9748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11145-11181]:Block[9750-9786]"
    }, {
      "left" : "mLRUCache.remove(blockId);",
      "right" : "mLRUCache.remove(blockId);",
      "info" : "ExpressionStatement[11151-11177]:ExpressionStatement[9756-9782]"
    } ]
  },
  "interFileMappings" : { }
}