{
  "matchedElements" : [
 {
    "left" : "class : BigFraction",
    "right" : "class : BigFraction",
    "info" : "TypeDeclaration[1457-38567]:TypeDeclaration[1457-38687]"
  }, {
    "left" : "TWO",
    "right" : "TWO",
    "info" : "FieldDeclaration[1719-1820]:FieldDeclaration[1719-1820]"
  }, {
    "left" : "ONE",
    "right" : "ONE",
    "info" : "FieldDeclaration[1826-1923]:FieldDeclaration[1826-1923]"
  }, {
    "left" : "ZERO",
    "right" : "ZERO",
    "info" : "FieldDeclaration[1929-2027]:FieldDeclaration[1929-2027]"
  }, {
    "left" : "MINUS_ONE",
    "right" : "MINUS_ONE",
    "info" : "FieldDeclaration[2033-2142]:FieldDeclaration[2033-2142]"
  }, {
    "left" : "FOUR_FIFTHS",
    "right" : "FOUR_FIFTHS",
    "info" : "FieldDeclaration[2148-2258]:FieldDeclaration[2148-2258]"
  }, {
    "left" : "ONE_FIFTH",
    "right" : "ONE_FIFTH",
    "info" : "FieldDeclaration[2264-2372]:FieldDeclaration[2264-2372]"
  }, {
    "left" : "ONE_HALF",
    "right" : "ONE_HALF",
    "info" : "FieldDeclaration[2378-2485]:FieldDeclaration[2378-2485]"
  }, {
    "left" : "ONE_QUARTER",
    "right" : "ONE_QUARTER",
    "info" : "FieldDeclaration[2491-2601]:FieldDeclaration[2491-2601]"
  }, {
    "left" : "ONE_THIRD",
    "right" : "ONE_THIRD",
    "info" : "FieldDeclaration[2607-2715]:FieldDeclaration[2607-2715]"
  }, {
    "left" : "THREE_FIFTHS",
    "right" : "THREE_FIFTHS",
    "info" : "FieldDeclaration[2721-2832]:FieldDeclaration[2721-2832]"
  }, {
    "left" : "THREE_QUARTERS",
    "right" : "THREE_QUARTERS",
    "info" : "FieldDeclaration[2838-2951]:FieldDeclaration[2838-2951]"
  }, {
    "left" : "TWO_FIFTHS",
    "right" : "TWO_FIFTHS",
    "info" : "FieldDeclaration[2957-3066]:FieldDeclaration[2957-3066]"
  }, {
    "left" : "TWO_QUARTERS",
    "right" : "TWO_QUARTERS",
    "info" : "FieldDeclaration[3072-3183]:FieldDeclaration[3072-3183]"
  }, {
    "left" : "TWO_THIRDS",
    "right" : "TWO_THIRDS",
    "info" : "FieldDeclaration[3189-3298]:FieldDeclaration[3189-3298]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[3304-3415]:FieldDeclaration[3304-3415]"
  }, {
    "left" : "ONE_HUNDRED",
    "right" : "ONE_HUNDRED",
    "info" : "FieldDeclaration[3421-3549]:FieldDeclaration[3421-3549]"
  }, {
    "left" : "numerator",
    "right" : "numerator",
    "info" : "FieldDeclaration[3555-3616]:FieldDeclaration[3555-3616]"
  }, {
    "left" : "denominator",
    "right" : "denominator",
    "info" : "FieldDeclaration[3622-3687]:FieldDeclaration[3622-3687]"
  }, {
    "left" : "public BigFraction(num )",
    "right" : "public BigFraction(num )",
    "info" : "MethodDeclaration[3693-3976]:MethodDeclaration[3693-3976]"
  }, {
    "left" : "public BigFraction(num , den )",
    "right" : "public BigFraction(num , den )",
    "info" : "MethodDeclaration[3982-5447]:MethodDeclaration[3982-5447]"
  }, {
    "left" : "public BigFraction(value double) : ",
    "right" : "public BigFraction(value double) : ",
    "info" : "MethodDeclaration[5453-7851]:MethodDeclaration[5453-7851]"
  }, {
    "left" : "public BigFraction(value double, epsilon double, maxIterations int) : ",
    "right" : "public BigFraction(value double, epsilon double, maxIterations int) : ",
    "info" : "MethodDeclaration[7857-8859]:MethodDeclaration[7857-8859]"
  }, {
    "left" : "private BigFraction(value double, epsilon double, maxDenominator int, maxIterations int) : ",
    "right" : "private BigFraction(value double, epsilon double, maxDenominator int, maxIterations int) : ",
    "info" : "MethodDeclaration[8865-12542]:MethodDeclaration[8865-12662]"
  }, {
    "left" : "public BigFraction(value double, maxDenominator int) : ",
    "right" : "public BigFraction(value double, maxDenominator int) : ",
    "info" : "MethodDeclaration[12548-13288]:MethodDeclaration[12668-13408]"
  }, {
    "left" : "public BigFraction(num int)",
    "right" : "public BigFraction(num int)",
    "info" : "MethodDeclaration[13294-13583]:MethodDeclaration[13414-13703]"
  }, {
    "left" : "public BigFraction(num int, den int)",
    "right" : "public BigFraction(num int, den int)",
    "info" : "MethodDeclaration[13589-14014]:MethodDeclaration[13709-14134]"
  }, {
    "left" : "public BigFraction(num long)",
    "right" : "public BigFraction(num long)",
    "info" : "MethodDeclaration[14020-14295]:MethodDeclaration[14140-14415]"
  }, {
    "left" : "public BigFraction(num long, den long)",
    "right" : "public BigFraction(num long, den long)",
    "info" : "MethodDeclaration[14301-14729]:MethodDeclaration[14421-14849]"
  }, {
    "left" : "public getReducedFraction(numerator int, denominator int) : ",
    "right" : "public getReducedFraction(numerator int, denominator int) : ",
    "info" : "MethodDeclaration[14735-15652]:MethodDeclaration[14855-15772]"
  }, {
    "left" : "public abs() : ",
    "right" : "public abs() : ",
    "info" : "MethodDeclaration[15658-15937]:MethodDeclaration[15778-16057]"
  }, {
    "left" : "public add(bg ) : ",
    "right" : "public add(bg ) : ",
    "info" : "MethodDeclaration[15943-16587]:MethodDeclaration[16063-16707]"
  }, {
    "left" : "public add(i int) : ",
    "right" : "public add(i int) : ",
    "info" : "MethodDeclaration[16593-16982]:MethodDeclaration[16713-17102]"
  }, {
    "left" : "public add(l long) : ",
    "right" : "public add(l long) : ",
    "info" : "MethodDeclaration[16988-17372]:MethodDeclaration[17108-17492]"
  }, {
    "left" : "public add(fraction ) : ",
    "right" : "public add(fraction ) : ",
    "info" : "MethodDeclaration[17378-18468]:MethodDeclaration[17498-18588]"
  }, {
    "left" : "public bigDecimalValue() : ",
    "right" : "public bigDecimalValue() : ",
    "info" : "MethodDeclaration[18474-18996]:MethodDeclaration[18594-19116]"
  }, {
    "left" : "public bigDecimalValue(roundingMode int) : ",
    "right" : "public bigDecimalValue(roundingMode int) : ",
    "info" : "MethodDeclaration[19002-19708]:MethodDeclaration[19122-19828]"
  }, {
    "left" : "public bigDecimalValue(scale int, roundingMode int) : ",
    "right" : "public bigDecimalValue(scale int, roundingMode int) : ",
    "info" : "MethodDeclaration[19714-20472]:MethodDeclaration[19834-20592]"
  }, {
    "left" : "public compareTo(object ) : int",
    "right" : "public compareTo(object ) : int",
    "info" : "MethodDeclaration[20478-21090]:MethodDeclaration[20598-21210]"
  }, {
    "left" : "public divide(bg ) : ",
    "right" : "public divide(bg ) : ",
    "info" : "MethodDeclaration[21096-21959]:MethodDeclaration[21216-22079]"
  }, {
    "left" : "public divide(i int) : ",
    "right" : "public divide(i int) : ",
    "info" : "MethodDeclaration[21965-22434]:MethodDeclaration[22085-22554]"
  }, {
    "left" : "public divide(l long) : ",
    "right" : "public divide(l long) : ",
    "info" : "MethodDeclaration[22440-22912]:MethodDeclaration[22560-23032]"
  }, {
    "left" : "public divide(fraction ) : ",
    "right" : "public divide(fraction ) : ",
    "info" : "MethodDeclaration[22918-23735]:MethodDeclaration[23038-23855]"
  }, {
    "left" : "public doubleValue() : double",
    "right" : "public doubleValue() : double",
    "info" : "MethodDeclaration[23741-24615]:MethodDeclaration[23861-24735]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[24621-25678]:MethodDeclaration[24741-25798]"
  }, {
    "left" : "public floatValue() : float",
    "right" : "public floatValue() : float",
    "info" : "MethodDeclaration[25684-26548]:MethodDeclaration[25804-26668]"
  }, {
    "left" : "public getDenominator() : ",
    "right" : "public getDenominator() : ",
    "info" : "MethodDeclaration[26554-26791]:MethodDeclaration[26674-26911]"
  }, {
    "left" : "public getDenominatorAsInt() : int",
    "right" : "public getDenominatorAsInt() : int",
    "info" : "MethodDeclaration[26797-27021]:MethodDeclaration[26917-27141]"
  }, {
    "left" : "public getDenominatorAsLong() : long",
    "right" : "public getDenominatorAsLong() : long",
    "info" : "MethodDeclaration[27027-27256]:MethodDeclaration[27147-27376]"
  }, {
    "left" : "public getNumerator() : ",
    "right" : "public getNumerator() : ",
    "info" : "MethodDeclaration[27262-27491]:MethodDeclaration[27382-27611]"
  }, {
    "left" : "public getNumeratorAsInt() : int",
    "right" : "public getNumeratorAsInt() : int",
    "info" : "MethodDeclaration[27497-27713]:MethodDeclaration[27617-27833]"
  }, {
    "left" : "public getNumeratorAsLong() : long",
    "right" : "public getNumeratorAsLong() : long",
    "info" : "MethodDeclaration[27719-27940]:MethodDeclaration[27839-28060]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[27946-28245]:MethodDeclaration[28066-28365]"
  }, {
    "left" : "public intValue() : int",
    "right" : "public intValue() : int",
    "info" : "MethodDeclaration[28251-28588]:MethodDeclaration[28371-28708]"
  }, {
    "left" : "public longValue() : long",
    "right" : "public longValue() : long",
    "info" : "MethodDeclaration[28594-28935]:MethodDeclaration[28714-29055]"
  }, {
    "left" : "public multiply(bg ) : ",
    "right" : "public multiply(bg ) : ",
    "info" : "MethodDeclaration[28941-29521]:MethodDeclaration[29061-29641]"
  }, {
    "left" : "public multiply(i int) : ",
    "right" : "public multiply(i int) : ",
    "info" : "MethodDeclaration[29527-29925]:MethodDeclaration[29647-30045]"
  }, {
    "left" : "public multiply(l long) : ",
    "right" : "public multiply(l long) : ",
    "info" : "MethodDeclaration[29931-30332]:MethodDeclaration[30051-30452]"
  }, {
    "left" : "public multiply(fraction ) : ",
    "right" : "public multiply(fraction ) : ",
    "info" : "MethodDeclaration[30338-31173]:MethodDeclaration[30458-31293]"
  }, {
    "left" : "public negate() : ",
    "right" : "public negate() : ",
    "info" : "MethodDeclaration[31179-31469]:MethodDeclaration[31299-31589]"
  }, {
    "left" : "public percentageValue() : double",
    "right" : "public percentageValue() : double",
    "info" : "MethodDeclaration[31475-31826]:MethodDeclaration[31595-31946]"
  }, {
    "left" : "public pow(exponent int) : ",
    "right" : "public pow(exponent int) : ",
    "info" : "MethodDeclaration[31832-32440]:MethodDeclaration[31952-32560]"
  }, {
    "left" : "public pow(exponent long) : ",
    "right" : "public pow(exponent long) : ",
    "info" : "MethodDeclaration[32446-33216]:MethodDeclaration[32566-33336]"
  }, {
    "left" : "public pow(exponent ) : ",
    "right" : "public pow(exponent ) : ",
    "info" : "MethodDeclaration[33222-34070]:MethodDeclaration[33342-34190]"
  }, {
    "left" : "public pow(exponent double) : double",
    "right" : "public pow(exponent double) : double",
    "info" : "MethodDeclaration[34076-34591]:MethodDeclaration[34196-34711]"
  }, {
    "left" : "public reciprocal() : ",
    "right" : "public reciprocal() : ",
    "info" : "MethodDeclaration[34597-34837]:MethodDeclaration[34717-34957]"
  }, {
    "left" : "public reduce() : ",
    "right" : "public reduce() : ",
    "info" : "MethodDeclaration[34843-35255]:MethodDeclaration[34963-35375]"
  }, {
    "left" : "public subtract(bg ) : ",
    "right" : "public subtract(bg ) : ",
    "info" : "MethodDeclaration[35261-35908]:MethodDeclaration[35381-36028]"
  }, {
    "left" : "public subtract(i int) : ",
    "right" : "public subtract(i int) : ",
    "info" : "MethodDeclaration[35914-36316]:MethodDeclaration[36034-36436]"
  }, {
    "left" : "public subtract(l long) : ",
    "right" : "public subtract(l long) : ",
    "info" : "MethodDeclaration[36322-36718]:MethodDeclaration[36442-36838]"
  }, {
    "left" : "public subtract(fraction ) : ",
    "right" : "public subtract(fraction ) : ",
    "info" : "MethodDeclaration[36724-37826]:MethodDeclaration[36844-37946]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[37832-38444]:MethodDeclaration[37952-38564]"
  }, {
    "left" : "public getField() : ",
    "right" : "public getField() : ",
    "info" : "MethodDeclaration[38450-38564]:MethodDeclaration[38570-38684]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3893-3899]:Modifier[3893-3899]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[3900-3911]:SimpleName[3900-3911]"
  }, {
    "left" : "final BigInteger num",
    "right" : "final BigInteger num",
    "info" : "SingleVariableDeclaration[3912-3932]:SingleVariableDeclaration[3912-3932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3934-3976]:Block[3934-3976]"
  }, {
    "left" : "this(num, BigInteger.ONE);",
    "right" : "this(num, BigInteger.ONE);",
    "info" : "ConstructorInvocation[3944-3970]:ConstructorInvocation[3944-3970]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4408-4414]:Modifier[4408-4414]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[4415-4426]:SimpleName[4415-4426]"
  }, {
    "left" : "BigInteger num",
    "right" : "BigInteger num",
    "info" : "SingleVariableDeclaration[4427-4441]:SingleVariableDeclaration[4427-4441]"
  }, {
    "left" : "BigInteger den",
    "right" : "BigInteger den",
    "info" : "SingleVariableDeclaration[4443-4457]:SingleVariableDeclaration[4443-4457]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4459-5447]:Block[4459-5447]"
  }, {
    "left" : "MathUtils.checkNotNull(num, LocalizedFormats.NUMERATOR);",
    "right" : "MathUtils.checkNotNull(num, LocalizedFormats.NUMERATOR);",
    "info" : "ExpressionStatement[4469-4525]:ExpressionStatement[4469-4525]"
  }, {
    "left" : "MathUtils.checkNotNull(den, LocalizedFormats.DENOMINATOR);",
    "right" : "MathUtils.checkNotNull(den, LocalizedFormats.DENOMINATOR);",
    "info" : "ExpressionStatement[4534-4592]:ExpressionStatement[4534-4592]"
  }, {
    "left" : "if (BigInteger.ZERO.equals(den))",
    "right" : "if (BigInteger.ZERO.equals(den))",
    "info" : "IfStatement[4601-4717]:IfStatement[4601-4717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4634-4717]:Block[4634-4717]"
  }, {
    "left" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
    "right" : "throw new ZeroException(LocalizedFormats.ZERO_DENOMINATOR);",
    "info" : "ThrowStatement[4648-4707]:ThrowStatement[4648-4707]"
  }, {
    "left" : "if (BigInteger.ZERO.equals(num))",
    "right" : "if (BigInteger.ZERO.equals(num))",
    "info" : "IfStatement[4726-5441]:IfStatement[4726-5441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4759-4855]:Block[4759-4855]"
  }, {
    "left" : "numerator   = BigInteger.ZERO;",
    "right" : "numerator   = BigInteger.ZERO;",
    "info" : "ExpressionStatement[4773-4803]:ExpressionStatement[4773-4803]"
  }, {
    "left" : "denominator = BigInteger.ONE;",
    "right" : "denominator = BigInteger.ONE;",
    "info" : "ExpressionStatement[4816-4845]:ExpressionStatement[4816-4845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4861-5441]:Block[4861-5441]"
  }, {
    "left" : "final BigInteger gcd = num.gcd(den);",
    "right" : "final BigInteger gcd = num.gcd(den);",
    "info" : "VariableDeclarationStatement[4955-4991]:VariableDeclarationStatement[4955-4991]"
  }, {
    "left" : "if (BigInteger.ONE.compareTo(gcd) < 0)",
    "right" : "if (BigInteger.ONE.compareTo(gcd) < 0)",
    "info" : "IfStatement[5004-5136]:IfStatement[5004-5136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5043-5136]:Block[5043-5136]"
  }, {
    "left" : "num = num.divide(gcd);",
    "right" : "num = num.divide(gcd);",
    "info" : "ExpressionStatement[5061-5083]:ExpressionStatement[5061-5083]"
  }, {
    "left" : "den = den.divide(gcd);",
    "right" : "den = den.divide(gcd);",
    "info" : "ExpressionStatement[5100-5122]:ExpressionStatement[5100-5122]"
  }, {
    "left" : "if (BigInteger.ZERO.compareTo(den) > 0)",
    "right" : "if (BigInteger.ZERO.compareTo(den) > 0)",
    "info" : "IfStatement[5188-5315]:IfStatement[5188-5315]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5228-5315]:Block[5228-5315]"
  }, {
    "left" : "num = num.negate();",
    "right" : "num = num.negate();",
    "info" : "ExpressionStatement[5246-5265]:ExpressionStatement[5246-5265]"
  }, {
    "left" : "den = den.negate();",
    "right" : "den = den.negate();",
    "info" : "ExpressionStatement[5282-5301]:ExpressionStatement[5282-5301]"
  }, {
    "left" : "numerator   = num;",
    "right" : "numerator   = num;",
    "info" : "ExpressionStatement[5381-5399]:ExpressionStatement[5381-5399]"
  }, {
    "left" : "denominator = den;",
    "right" : "denominator = den;",
    "info" : "ExpressionStatement[5412-5430]:ExpressionStatement[5412-5430]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6529-6535]:Modifier[6529-6535]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[6536-6547]:SimpleName[6536-6547]"
  }, {
    "left" : "final double value",
    "right" : "final double value",
    "info" : "SingleVariableDeclaration[6548-6566]:SingleVariableDeclaration[6548-6566]"
  }, {
    "left" : "MathIllegalArgumentException",
    "right" : "MathIllegalArgumentException",
    "info" : "SimpleType[6575-6603]:SimpleType[6575-6603]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6604-7851]:Block[6604-7851]"
  }, {
    "left" : "if (Double.isNaN(value))",
    "right" : "if (Double.isNaN(value))",
    "info" : "IfStatement[6614-6741]:IfStatement[6614-6741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6639-6741]:Block[6639-6741]"
  }, {
    "left" : "throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);",
    "right" : "throw new MathIllegalArgumentException(LocalizedFormats.NAN_VALUE_CONVERSION);",
    "info" : "ThrowStatement[6653-6731]:ThrowStatement[6653-6731]"
  }, {
    "left" : "if (Double.isInfinite(value))",
    "right" : "if (Double.isInfinite(value))",
    "info" : "IfStatement[6750-6887]:IfStatement[6750-6887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6780-6887]:Block[6780-6887]"
  }, {
    "left" : "throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);",
    "right" : "throw new MathIllegalArgumentException(LocalizedFormats.INFINITE_VALUE_CONVERSION);",
    "info" : "ThrowStatement[6794-6877]:ThrowStatement[6794-6877]"
  }, {
    "left" : "final long bits     = Double.doubleToLongBits(value);",
    "right" : "final long bits     = Double.doubleToLongBits(value);",
    "info" : "VariableDeclarationStatement[6950-7003]:VariableDeclarationStatement[6950-7003]"
  }, {
    "left" : "final long sign     = bits & 0x8000000000000000L;",
    "right" : "final long sign     = bits & 0x8000000000000000L;",
    "info" : "VariableDeclarationStatement[7012-7061]:VariableDeclarationStatement[7012-7061]"
  }, {
    "left" : "final long exponent = bits & 0x7ff0000000000000L;",
    "right" : "final long exponent = bits & 0x7ff0000000000000L;",
    "info" : "VariableDeclarationStatement[7070-7119]:VariableDeclarationStatement[7070-7119]"
  }, {
    "left" : "long m              = bits & 0x000fffffffffffffL;",
    "right" : "long m              = bits & 0x000fffffffffffffL;",
    "info" : "VariableDeclarationStatement[7128-7177]:VariableDeclarationStatement[7128-7177]"
  }, {
    "left" : "if (exponent != 0)",
    "right" : "if (exponent != 0)",
    "info" : "IfStatement[7186-7337]:IfStatement[7186-7337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7205-7337]:Block[7205-7337]"
  }, {
    "left" : "m |= 0x0010000000000000L;",
    "right" : "m |= 0x0010000000000000L;",
    "info" : "ExpressionStatement[7302-7327]:ExpressionStatement[7302-7327]"
  }, {
    "left" : "if (sign != 0)",
    "right" : "if (sign != 0)",
    "info" : "IfStatement[7346-7392]:IfStatement[7346-7392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7361-7392]:Block[7361-7392]"
  }, {
    "left" : "m = -m;",
    "right" : "m = -m;",
    "info" : "ExpressionStatement[7375-7382]:ExpressionStatement[7375-7382]"
  }, {
    "left" : "int k = ((int) (exponent >> 52)) - 1075;",
    "right" : "int k = ((int) (exponent >> 52)) - 1075;",
    "info" : "VariableDeclarationStatement[7401-7441]:VariableDeclarationStatement[7401-7441]"
  }, {
    "left" : "while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0))",
    "right" : "while (((m & 0x001ffffffffffffeL) != 0) && ((m & 0x1) == 0))",
    "info" : "WhileStatement[7450-7563]:WhileStatement[7450-7563]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7511-7563]:Block[7511-7563]"
  }, {
    "left" : "m = m >> 1;",
    "right" : "m = m >> 1;",
    "info" : "ExpressionStatement[7525-7536]:ExpressionStatement[7525-7536]"
  }, {
    "left" : "++k;",
    "right" : "++k;",
    "info" : "ExpressionStatement[7549-7553]:ExpressionStatement[7549-7553]"
  }, {
    "left" : "if (k < 0)",
    "right" : "if (k < 0)",
    "info" : "IfStatement[7573-7844]:IfStatement[7573-7844]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7584-7699]:Block[7584-7699]"
  }, {
    "left" : "numerator   = BigInteger.valueOf(m);",
    "right" : "numerator   = BigInteger.valueOf(m);",
    "info" : "ExpressionStatement[7598-7634]:ExpressionStatement[7598-7634]"
  }, {
    "left" : "denominator = BigInteger.ZERO.flipBit(-k);",
    "right" : "denominator = BigInteger.ZERO.flipBit(-k);",
    "info" : "ExpressionStatement[7647-7689]:ExpressionStatement[7647-7689]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7705-7844]:Block[7705-7844]"
  }, {
    "left" : "numerator   = BigInteger.valueOf(m).multiply(BigInteger.ZERO.flipBit(k));",
    "right" : "numerator   = BigInteger.valueOf(m).multiply(BigInteger.ZERO.flipBit(k));",
    "info" : "ExpressionStatement[7719-7792]:ExpressionStatement[7719-7792]"
  }, {
    "left" : "denominator = BigInteger.ONE;",
    "right" : "denominator = BigInteger.ONE;",
    "info" : "ExpressionStatement[7805-7834]:ExpressionStatement[7805-7834]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8636-8642]:Modifier[8636-8642]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[8643-8654]:SimpleName[8643-8654]"
  }, {
    "left" : "final double value",
    "right" : "final double value",
    "info" : "SingleVariableDeclaration[8655-8673]:SingleVariableDeclaration[8655-8673]"
  }, {
    "left" : "final double epsilon",
    "right" : "final double epsilon",
    "info" : "SingleVariableDeclaration[8675-8695]:SingleVariableDeclaration[8675-8695]"
  }, {
    "left" : "final int maxIterations",
    "right" : "final int maxIterations",
    "info" : "SingleVariableDeclaration[8720-8743]:SingleVariableDeclaration[8720-8743]"
  }, {
    "left" : "FractionConversionException",
    "right" : "FractionConversionException",
    "info" : "SimpleType[8760-8787]:SimpleType[8760-8787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8788-8859]:Block[8788-8859]"
  }, {
    "left" : "this(value, epsilon, Integer.MAX_VALUE, maxIterations);",
    "right" : "this(value, epsilon, Integer.MAX_VALUE, maxIterations);",
    "info" : "ConstructorInvocation[8798-8853]:ConstructorInvocation[8798-8853]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[10339-10346]:Modifier[10339-10346]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[10347-10358]:SimpleName[10347-10358]"
  }, {
    "left" : "final double value",
    "right" : "final double value",
    "info" : "SingleVariableDeclaration[10359-10377]:SingleVariableDeclaration[10359-10377]"
  }, {
    "left" : "final double epsilon",
    "right" : "final double epsilon",
    "info" : "SingleVariableDeclaration[10379-10399]:SingleVariableDeclaration[10379-10399]"
  }, {
    "left" : "final int maxDenominator",
    "right" : "final int maxDenominator",
    "info" : "SingleVariableDeclaration[10425-10449]:SingleVariableDeclaration[10425-10449]"
  }, {
    "left" : "int maxIterations",
    "right" : "int maxIterations",
    "info" : "SingleVariableDeclaration[10451-10468]:SingleVariableDeclaration[10451-10468]"
  }, {
    "left" : "FractionConversionException",
    "right" : "FractionConversionException",
    "info" : "SimpleType[10485-10512]:SimpleType[10485-10512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10513-12542]:Block[10513-12662]"
  }, {
    "left" : "long overflow = Integer.MAX_VALUE;",
    "right" : "long overflow = Integer.MAX_VALUE;",
    "info" : "VariableDeclarationStatement[10523-10557]:VariableDeclarationStatement[10523-10557]"
  }, {
    "left" : "double r0 = value;",
    "right" : "double r0 = value;",
    "info" : "VariableDeclarationStatement[10566-10584]:VariableDeclarationStatement[10566-10584]"
  }, {
    "left" : "long a0 = (long) FastMath.floor(r0);",
    "right" : "long a0 = (long) FastMath.floor(r0);",
    "info" : "VariableDeclarationStatement[10593-10629]:VariableDeclarationStatement[10593-10629]"
  }, {
    "left" : "if (a0 > overflow)",
    "right" : "if (a0 > overflow)",
    "info" : "IfStatement[10638-10734]:IfStatement[10638-10734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10657-10734]:Block[10657-10734]"
  }, {
    "left" : "throw new FractionConversionException(value, a0, 1l);",
    "right" : "throw new FractionConversionException(value, a0, 1l);",
    "info" : "ThrowStatement[10671-10724]:ThrowStatement[10671-10724]"
  }, {
    "left" : "if (FastMath.abs(a0 - value) < epsilon)",
    "right" : "if (FastMath.abs(a0 - value) < epsilon)",
    "info" : "IfStatement[10839-11000]:IfStatement[10839-11000]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10879-11000]:Block[10879-11000]"
  }, {
    "left" : "numerator = BigInteger.valueOf(a0);",
    "right" : "numerator = BigInteger.valueOf(a0);",
    "info" : "ExpressionStatement[10893-10928]:ExpressionStatement[10893-10928]"
  }, {
    "left" : "denominator = BigInteger.ONE;",
    "right" : "denominator = BigInteger.ONE;",
    "info" : "ExpressionStatement[10941-10970]:ExpressionStatement[10941-10970]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[10983-10990]:ReturnStatement[10983-10990]"
  }, {
    "left" : "long p0 = 1;",
    "right" : "long p0 = 1;",
    "info" : "VariableDeclarationStatement[11010-11022]:VariableDeclarationStatement[11010-11022]"
  }, {
    "left" : "long q0 = 0;",
    "right" : "long q0 = 0;",
    "info" : "VariableDeclarationStatement[11031-11043]:VariableDeclarationStatement[11031-11043]"
  }, {
    "left" : "long p1 = a0;",
    "right" : "long p1 = a0;",
    "info" : "VariableDeclarationStatement[11052-11065]:VariableDeclarationStatement[11052-11065]"
  }, {
    "left" : "long q1 = 1;",
    "right" : "long q1 = 1;",
    "info" : "VariableDeclarationStatement[11074-11086]:VariableDeclarationStatement[11074-11086]"
  }, {
    "left" : "long p2 = 0;",
    "right" : "long p2 = 0;",
    "info" : "VariableDeclarationStatement[11096-11108]:VariableDeclarationStatement[11096-11108]"
  }, {
    "left" : "long q2 = 1;",
    "right" : "long q2 = 1;",
    "info" : "VariableDeclarationStatement[11117-11129]:VariableDeclarationStatement[11117-11129]"
  }, {
    "left" : "int n = 0;",
    "right" : "int n = 0;",
    "info" : "VariableDeclarationStatement[11139-11149]:VariableDeclarationStatement[11139-11149]"
  }, {
    "left" : "boolean stop = false;",
    "right" : "boolean stop = false;",
    "info" : "VariableDeclarationStatement[11158-11179]:VariableDeclarationStatement[11158-11179]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[11188-12155]:DoStatement[11188-12275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11191-12140]:Block[11191-12260]"
  }, {
    "left" : "++n;",
    "right" : "++n;",
    "info" : "ExpressionStatement[11205-11209]:ExpressionStatement[11205-11209]"
  }, {
    "left" : "final double r1 = 1.0 / (r0 - a0);",
    "right" : "final double r1 = 1.0 / (r0 - a0);",
    "info" : "VariableDeclarationStatement[11222-11256]:VariableDeclarationStatement[11222-11256]"
  }, {
    "left" : "final long a1 = (long) FastMath.floor(r1);",
    "right" : "final long a1 = (long) FastMath.floor(r1);",
    "info" : "VariableDeclarationStatement[11269-11311]:VariableDeclarationStatement[11269-11311]"
  }, {
    "left" : "p2 = (a1 * p1) + p0;",
    "right" : "p2 = (a1 * p1) + p0;",
    "info" : "ExpressionStatement[11324-11344]:ExpressionStatement[11324-11344]"
  }, {
    "left" : "q2 = (a1 * q1) + q0;",
    "right" : "q2 = (a1 * q1) + q0;",
    "info" : "ExpressionStatement[11357-11377]:ExpressionStatement[11357-11377]"
  }, {
    "left" : "if ((p2 > overflow) || (q2 > overflow))",
    "right" : "if ((p2 > overflow) || (q2 > overflow))",
    "info" : "IfStatement[11390-11706]:IfStatement[11390-11826]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11430-11706]:Block[11430-11826]"
  }, {
    "left" : "throw new FractionConversionException(value, p2, q2);",
    "right" : "throw new FractionConversionException(value, p2, q2);",
    "info" : "ThrowStatement[11639-11692]:ThrowStatement[11759-11812]"
  }, {
    "left" : "final double convergent = (double) p2 / (double) q2;",
    "right" : "final double convergent = (double) p2 / (double) q2;",
    "info" : "VariableDeclarationStatement[11720-11772]:VariableDeclarationStatement[11840-11892]"
  }, {
    "left" : "if ((n < maxIterations) &&\n                (FastMath.abs(convergent - value) > epsilon) &&\n                (q2 < maxDenominator))",
    "right" : "if ((n < maxIterations) &&\n                (FastMath.abs(convergent - value) > epsilon) &&\n                (q2 < maxDenominator))",
    "info" : "IfStatement[11785-12130]:IfStatement[11905-12250]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11915-12080]:Block[12035-12200]"
  }, {
    "left" : "p0 = p1;",
    "right" : "p0 = p1;",
    "info" : "ExpressionStatement[11933-11941]:ExpressionStatement[12053-12061]"
  }, {
    "left" : "p1 = p2;",
    "right" : "p1 = p2;",
    "info" : "ExpressionStatement[11958-11966]:ExpressionStatement[12078-12086]"
  }, {
    "left" : "q0 = q1;",
    "right" : "q0 = q1;",
    "info" : "ExpressionStatement[11983-11991]:ExpressionStatement[12103-12111]"
  }, {
    "left" : "q1 = q2;",
    "right" : "q1 = q2;",
    "info" : "ExpressionStatement[12008-12016]:ExpressionStatement[12128-12136]"
  }, {
    "left" : "a0 = a1;",
    "right" : "a0 = a1;",
    "info" : "ExpressionStatement[12033-12041]:ExpressionStatement[12153-12161]"
  }, {
    "left" : "r0 = r1;",
    "right" : "r0 = r1;",
    "info" : "ExpressionStatement[12058-12066]:ExpressionStatement[12178-12186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12086-12130]:Block[12206-12250]"
  }, {
    "left" : "stop = true;",
    "right" : "stop = true;",
    "info" : "ExpressionStatement[12104-12116]:ExpressionStatement[12224-12236]"
  }, {
    "left" : "if (n >= maxIterations)",
    "right" : "if (n >= maxIterations)",
    "info" : "IfStatement[12165-12273]:IfStatement[12285-12393]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12189-12273]:Block[12309-12393]"
  }, {
    "left" : "throw new FractionConversionException(value, maxIterations);",
    "right" : "throw new FractionConversionException(value, maxIterations);",
    "info" : "ThrowStatement[12203-12263]:ThrowStatement[12323-12383]"
  }, {
    "left" : "if (q2 < maxDenominator)",
    "right" : "if (q2 < maxDenominator)",
    "info" : "IfStatement[12283-12536]:IfStatement[12403-12656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12308-12419]:Block[12428-12539]"
  }, {
    "left" : "numerator   = BigInteger.valueOf(p2);",
    "right" : "numerator   = BigInteger.valueOf(p2);",
    "info" : "ExpressionStatement[12322-12359]:ExpressionStatement[12442-12479]"
  }, {
    "left" : "denominator = BigInteger.valueOf(q2);",
    "right" : "denominator = BigInteger.valueOf(q2);",
    "info" : "ExpressionStatement[12372-12409]:ExpressionStatement[12492-12529]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12425-12536]:Block[12545-12656]"
  }, {
    "left" : "numerator   = BigInteger.valueOf(p1);",
    "right" : "numerator   = BigInteger.valueOf(p1);",
    "info" : "ExpressionStatement[12439-12476]:ExpressionStatement[12559-12596]"
  }, {
    "left" : "denominator = BigInteger.valueOf(q1);",
    "right" : "denominator = BigInteger.valueOf(q1);",
    "info" : "ExpressionStatement[12489-12526]:ExpressionStatement[12609-12646]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13128-13134]:Modifier[13248-13254]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[13135-13146]:SimpleName[13255-13266]"
  }, {
    "left" : "final double value",
    "right" : "final double value",
    "info" : "SingleVariableDeclaration[13147-13165]:SingleVariableDeclaration[13267-13285]"
  }, {
    "left" : "final int maxDenominator",
    "right" : "final int maxDenominator",
    "info" : "SingleVariableDeclaration[13167-13191]:SingleVariableDeclaration[13287-13311]"
  }, {
    "left" : "FractionConversionException",
    "right" : "FractionConversionException",
    "info" : "SimpleType[13208-13235]:SimpleType[13328-13355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13236-13288]:Block[13356-13408]"
  }, {
    "left" : "this(value, 0, maxDenominator, 100);",
    "right" : "this(value, 0, maxDenominator, 100);",
    "info" : "ConstructorInvocation[13246-13282]:ConstructorInvocation[13366-13402]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13487-13493]:Modifier[13607-13613]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[13494-13505]:SimpleName[13614-13625]"
  }, {
    "left" : "final int num",
    "right" : "final int num",
    "info" : "SingleVariableDeclaration[13506-13519]:SingleVariableDeclaration[13626-13639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13521-13583]:Block[13641-13703]"
  }, {
    "left" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
    "right" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
    "info" : "ConstructorInvocation[13531-13577]:ConstructorInvocation[13651-13697]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13894-13900]:Modifier[14014-14020]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[13901-13912]:SimpleName[14021-14032]"
  }, {
    "left" : "final int num",
    "right" : "final int num",
    "info" : "SingleVariableDeclaration[13913-13926]:SingleVariableDeclaration[14033-14046]"
  }, {
    "left" : "final int den",
    "right" : "final int den",
    "info" : "SingleVariableDeclaration[13928-13941]:SingleVariableDeclaration[14048-14061]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13943-14014]:Block[14063-14134]"
  }, {
    "left" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
    "right" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
    "info" : "ConstructorInvocation[13953-14008]:ConstructorInvocation[14073-14128]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14198-14204]:Modifier[14318-14324]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[14205-14216]:SimpleName[14325-14336]"
  }, {
    "left" : "final long num",
    "right" : "final long num",
    "info" : "SingleVariableDeclaration[14217-14231]:SingleVariableDeclaration[14337-14351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14233-14295]:Block[14353-14415]"
  }, {
    "left" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
    "right" : "this(BigInteger.valueOf(num), BigInteger.ONE);",
    "info" : "ConstructorInvocation[14243-14289]:ConstructorInvocation[14363-14409]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14607-14613]:Modifier[14727-14733]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleName[14614-14625]:SimpleName[14734-14745]"
  }, {
    "left" : "final long num",
    "right" : "final long num",
    "info" : "SingleVariableDeclaration[14626-14640]:SingleVariableDeclaration[14746-14760]"
  }, {
    "left" : "final long den",
    "right" : "final long den",
    "info" : "SingleVariableDeclaration[14642-14656]:SingleVariableDeclaration[14762-14776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14658-14729]:Block[14778-14849]"
  }, {
    "left" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
    "right" : "this(BigInteger.valueOf(num), BigInteger.valueOf(den));",
    "info" : "ConstructorInvocation[14668-14723]:ConstructorInvocation[14788-14843]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15366-15372]:Modifier[15486-15492]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15373-15379]:Modifier[15493-15499]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[15380-15391]:SimpleType[15500-15511]"
  }, {
    "left" : "getReducedFraction",
    "right" : "getReducedFraction",
    "info" : "SimpleName[15392-15410]:SimpleName[15512-15530]"
  }, {
    "left" : "final int numerator",
    "right" : "final int numerator",
    "info" : "SingleVariableDeclaration[15411-15430]:SingleVariableDeclaration[15531-15550]"
  }, {
    "left" : "final int denominator",
    "right" : "final int denominator",
    "info" : "SingleVariableDeclaration[15481-15502]:SingleVariableDeclaration[15601-15622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15504-15652]:Block[15624-15772]"
  }, {
    "left" : "if (numerator == 0)",
    "right" : "if (numerator == 0)",
    "info" : "IfStatement[15514-15589]:IfStatement[15634-15709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15534-15589]:Block[15654-15709]"
  }, {
    "left" : "return ZERO;",
    "right" : "return ZERO;",
    "info" : "ReturnStatement[15548-15560]:ReturnStatement[15668-15680]"
  }, {
    "left" : "return new BigFraction(numerator, denominator);",
    "right" : "return new BigFraction(numerator, denominator);",
    "info" : "ReturnStatement[15599-15646]:ReturnStatement[15719-15766]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15827-15833]:Modifier[15947-15953]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[15834-15845]:SimpleType[15954-15965]"
  }, {
    "left" : "abs",
    "right" : "abs",
    "info" : "SimpleName[15846-15849]:SimpleName[15966-15969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15852-15937]:Block[15972-16057]"
  }, {
    "left" : "return (BigInteger.ZERO.compareTo(numerator) <= 0) ? this : negate();",
    "right" : "return (BigInteger.ZERO.compareTo(numerator) <= 0) ? this : negate();",
    "info" : "ReturnStatement[15862-15931]:ReturnStatement[15982-16051]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16385-16391]:Modifier[16505-16511]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[16392-16403]:SimpleType[16512-16523]"
  }, {
    "left" : "add",
    "right" : "add",
    "info" : "SimpleName[16404-16407]:SimpleName[16524-16527]"
  }, {
    "left" : "final BigInteger bg",
    "right" : "final BigInteger bg",
    "info" : "SingleVariableDeclaration[16408-16427]:SingleVariableDeclaration[16528-16547]"
  }, {
    "left" : "NullArgumentException",
    "right" : "NullArgumentException",
    "info" : "SimpleType[16436-16457]:SimpleType[16556-16577]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16458-16587]:Block[16578-16707]"
  }, {
    "left" : "MathUtils.checkNotNull(bg);",
    "right" : "MathUtils.checkNotNull(bg);",
    "info" : "ExpressionStatement[16468-16495]:ExpressionStatement[16588-16615]"
  }, {
    "left" : "return new BigFraction(numerator.add(denominator.multiply(bg)), denominator);",
    "right" : "return new BigFraction(numerator.add(denominator.multiply(bg)), denominator);",
    "info" : "ReturnStatement[16504-16581]:ReturnStatement[16624-16701]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16896-16902]:Modifier[17016-17022]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[16903-16914]:SimpleType[17023-17034]"
  }, {
    "left" : "add",
    "right" : "add",
    "info" : "SimpleName[16915-16918]:SimpleName[17035-17038]"
  }, {
    "left" : "final int i",
    "right" : "final int i",
    "info" : "SingleVariableDeclaration[16919-16930]:SingleVariableDeclaration[17039-17050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16932-16982]:Block[17052-17102]"
  }, {
    "left" : "return add(BigInteger.valueOf(i));",
    "right" : "return add(BigInteger.valueOf(i));",
    "info" : "ReturnStatement[16942-16976]:ReturnStatement[17062-17096]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17285-17291]:Modifier[17405-17411]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[17292-17303]:SimpleType[17412-17423]"
  }, {
    "left" : "add",
    "right" : "add",
    "info" : "SimpleName[17304-17307]:SimpleName[17424-17427]"
  }, {
    "left" : "final long l",
    "right" : "final long l",
    "info" : "SingleVariableDeclaration[17308-17320]:SingleVariableDeclaration[17428-17440]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17322-17372]:Block[17442-17492]"
  }, {
    "left" : "return add(BigInteger.valueOf(l));",
    "right" : "return add(BigInteger.valueOf(l));",
    "info" : "ReturnStatement[17332-17366]:ReturnStatement[17452-17486]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17778-17784]:Modifier[17898-17904]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[17785-17796]:SimpleType[17905-17916]"
  }, {
    "left" : "add",
    "right" : "add",
    "info" : "SimpleName[17797-17800]:SimpleName[17917-17920]"
  }, {
    "left" : "final BigFraction fraction",
    "right" : "final BigFraction fraction",
    "info" : "SingleVariableDeclaration[17801-17827]:SingleVariableDeclaration[17921-17947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17829-18468]:Block[17949-18588]"
  }, {
    "left" : "if (fraction == null)",
    "right" : "if (fraction == null)",
    "info" : "IfStatement[17839-17944]:IfStatement[17959-18064]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17861-17944]:Block[17981-18064]"
  }, {
    "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "info" : "ThrowStatement[17875-17934]:ThrowStatement[17995-18054]"
  }, {
    "left" : "if (ZERO.equals(fraction))",
    "right" : "if (ZERO.equals(fraction))",
    "info" : "IfStatement[17953-18016]:IfStatement[18073-18136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17980-18016]:Block[18100-18136]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[17994-18006]:ReturnStatement[18114-18126]"
  }, {
    "left" : "BigInteger num = null;",
    "right" : "BigInteger num = null;",
    "info" : "VariableDeclarationStatement[18026-18048]:VariableDeclarationStatement[18146-18168]"
  }, {
    "left" : "BigInteger den = null;",
    "right" : "BigInteger den = null;",
    "info" : "VariableDeclarationStatement[18057-18079]:VariableDeclarationStatement[18177-18199]"
  }, {
    "left" : "if (denominator.equals(fraction.denominator))",
    "right" : "if (denominator.equals(fraction.denominator))",
    "info" : "IfStatement[18089-18419]:IfStatement[18209-18539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18135-18230]:Block[18255-18350]"
  }, {
    "left" : "num = numerator.add(fraction.numerator);",
    "right" : "num = numerator.add(fraction.numerator);",
    "info" : "ExpressionStatement[18149-18189]:ExpressionStatement[18269-18309]"
  }, {
    "left" : "den = denominator;",
    "right" : "den = denominator;",
    "info" : "ExpressionStatement[18202-18220]:ExpressionStatement[18322-18340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18236-18419]:Block[18356-18539]"
  }, {
    "left" : "num = (numerator.multiply(fraction.denominator)).add((fraction.numerator).multiply(denominator));",
    "right" : "num = (numerator.multiply(fraction.denominator)).add((fraction.numerator).multiply(denominator));",
    "info" : "ExpressionStatement[18250-18347]:ExpressionStatement[18370-18467]"
  }, {
    "left" : "den = denominator.multiply(fraction.denominator);",
    "right" : "den = denominator.multiply(fraction.denominator);",
    "info" : "ExpressionStatement[18360-18409]:ExpressionStatement[18480-18529]"
  }, {
    "left" : "return new BigFraction(num, den);",
    "right" : "return new BigFraction(num, den);",
    "info" : "ReturnStatement[18428-18461]:ReturnStatement[18548-18581]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18875-18881]:Modifier[18995-19001]"
  }, {
    "left" : "BigDecimal",
    "right" : "BigDecimal",
    "info" : "SimpleType[18882-18892]:SimpleType[19002-19012]"
  }, {
    "left" : "bigDecimalValue",
    "right" : "bigDecimalValue",
    "info" : "SimpleName[18893-18908]:SimpleName[19013-19028]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18911-18996]:Block[19031-19116]"
  }, {
    "left" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator));",
    "right" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator));",
    "info" : "ReturnStatement[18921-18990]:ReturnStatement[19041-19110]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19551-19557]:Modifier[19671-19677]"
  }, {
    "left" : "BigDecimal",
    "right" : "BigDecimal",
    "info" : "SimpleType[19558-19568]:SimpleType[19678-19688]"
  }, {
    "left" : "bigDecimalValue",
    "right" : "bigDecimalValue",
    "info" : "SimpleName[19569-19584]:SimpleName[19689-19704]"
  }, {
    "left" : "final int roundingMode",
    "right" : "final int roundingMode",
    "info" : "SingleVariableDeclaration[19585-19607]:SingleVariableDeclaration[19705-19727]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19609-19708]:Block[19729-19828]"
  }, {
    "left" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), roundingMode);",
    "right" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), roundingMode);",
    "info" : "ReturnStatement[19619-19702]:ReturnStatement[19739-19822]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20291-20297]:Modifier[20411-20417]"
  }, {
    "left" : "BigDecimal",
    "right" : "BigDecimal",
    "info" : "SimpleType[20298-20308]:SimpleType[20418-20428]"
  }, {
    "left" : "bigDecimalValue",
    "right" : "bigDecimalValue",
    "info" : "SimpleName[20309-20324]:SimpleName[20429-20444]"
  }, {
    "left" : "final int scale",
    "right" : "final int scale",
    "info" : "SingleVariableDeclaration[20325-20340]:SingleVariableDeclaration[20445-20460]"
  }, {
    "left" : "final int roundingMode",
    "right" : "final int roundingMode",
    "info" : "SingleVariableDeclaration[20342-20364]:SingleVariableDeclaration[20462-20484]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20366-20472]:Block[20486-20592]"
  }, {
    "left" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), scale, roundingMode);",
    "right" : "return new BigDecimal(numerator).divide(new BigDecimal(denominator), scale, roundingMode);",
    "info" : "ReturnStatement[20376-20466]:ReturnStatement[20496-20586]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20871-20877]:Modifier[20991-20997]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[20878-20881]:PrimitiveType[20998-21001]"
  }, {
    "left" : "compareTo",
    "right" : "compareTo",
    "info" : "SimpleName[20882-20891]:SimpleName[21002-21011]"
  }, {
    "left" : "final BigFraction object",
    "right" : "final BigFraction object",
    "info" : "SingleVariableDeclaration[20892-20916]:SingleVariableDeclaration[21012-21036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20918-21090]:Block[21038-21210]"
  }, {
    "left" : "BigInteger nOd = numerator.multiply(object.denominator);",
    "right" : "BigInteger nOd = numerator.multiply(object.denominator);",
    "info" : "VariableDeclarationStatement[20928-20984]:VariableDeclarationStatement[21048-21104]"
  }, {
    "left" : "BigInteger dOn = denominator.multiply(object.numerator);",
    "right" : "BigInteger dOn = denominator.multiply(object.numerator);",
    "info" : "VariableDeclarationStatement[20993-21049]:VariableDeclarationStatement[21113-21169]"
  }, {
    "left" : "return nOd.compareTo(dOn);",
    "right" : "return nOd.compareTo(dOn);",
    "info" : "ReturnStatement[21058-21084]:ReturnStatement[21178-21204]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21594-21600]:Modifier[21714-21720]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[21601-21612]:SimpleType[21721-21732]"
  }, {
    "left" : "divide",
    "right" : "divide",
    "info" : "SimpleName[21613-21619]:SimpleName[21733-21739]"
  }, {
    "left" : "final BigInteger bg",
    "right" : "final BigInteger bg",
    "info" : "SingleVariableDeclaration[21620-21639]:SingleVariableDeclaration[21740-21759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21641-21959]:Block[21761-22079]"
  }, {
    "left" : "if (bg == null)",
    "right" : "if (bg == null)",
    "info" : "IfStatement[21651-21750]:IfStatement[21771-21870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21667-21750]:Block[21787-21870]"
  }, {
    "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "info" : "ThrowStatement[21681-21740]:ThrowStatement[21801-21860]"
  }, {
    "left" : "if (BigInteger.ZERO.equals(bg))",
    "right" : "if (BigInteger.ZERO.equals(bg))",
    "info" : "IfStatement[21759-21884]:IfStatement[21879-22004]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21791-21884]:Block[21911-22004]"
  }, {
    "left" : "throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);",
    "right" : "throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);",
    "info" : "ThrowStatement[21805-21874]:ThrowStatement[21925-21994]"
  }, {
    "left" : "return new BigFraction(numerator, denominator.multiply(bg));",
    "right" : "return new BigFraction(numerator, denominator.multiply(bg));",
    "info" : "ReturnStatement[21893-21953]:ReturnStatement[22013-22073]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22342-22348]:Modifier[22462-22468]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[22349-22360]:SimpleType[22469-22480]"
  }, {
    "left" : "divide",
    "right" : "divide",
    "info" : "SimpleName[22361-22367]:SimpleName[22481-22487]"
  }, {
    "left" : "final int i",
    "right" : "final int i",
    "info" : "SingleVariableDeclaration[22368-22379]:SingleVariableDeclaration[22488-22499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22381-22434]:Block[22501-22554]"
  }, {
    "left" : "return divide(BigInteger.valueOf(i));",
    "right" : "return divide(BigInteger.valueOf(i));",
    "info" : "ReturnStatement[22391-22428]:ReturnStatement[22511-22548]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22819-22825]:Modifier[22939-22945]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[22826-22837]:SimpleType[22946-22957]"
  }, {
    "left" : "divide",
    "right" : "divide",
    "info" : "SimpleName[22838-22844]:SimpleName[22958-22964]"
  }, {
    "left" : "final long l",
    "right" : "final long l",
    "info" : "SingleVariableDeclaration[22845-22857]:SingleVariableDeclaration[22965-22977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22859-22912]:Block[22979-23032]"
  }, {
    "left" : "return divide(BigInteger.valueOf(l));",
    "right" : "return divide(BigInteger.valueOf(l));",
    "info" : "ReturnStatement[22869-22906]:ReturnStatement[22989-23026]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23361-23367]:Modifier[23481-23487]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[23368-23379]:SimpleType[23488-23499]"
  }, {
    "left" : "divide",
    "right" : "divide",
    "info" : "SimpleName[23380-23386]:SimpleName[23500-23506]"
  }, {
    "left" : "final BigFraction fraction",
    "right" : "final BigFraction fraction",
    "info" : "SingleVariableDeclaration[23387-23413]:SingleVariableDeclaration[23507-23533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23415-23735]:Block[23535-23855]"
  }, {
    "left" : "if (fraction == null)",
    "right" : "if (fraction == null)",
    "info" : "IfStatement[23425-23530]:IfStatement[23545-23650]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23447-23530]:Block[23567-23650]"
  }, {
    "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "info" : "ThrowStatement[23461-23520]:ThrowStatement[23581-23640]"
  }, {
    "left" : "if (BigInteger.ZERO.equals(fraction.numerator))",
    "right" : "if (BigInteger.ZERO.equals(fraction.numerator))",
    "info" : "IfStatement[23539-23680]:IfStatement[23659-23800]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23587-23680]:Block[23707-23800]"
  }, {
    "left" : "throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);",
    "right" : "throw new MathArithmeticException(LocalizedFormats.ZERO_DENOMINATOR);",
    "info" : "ThrowStatement[23601-23670]:ThrowStatement[23721-23790]"
  }, {
    "left" : "return multiply(fraction.reciprocal());",
    "right" : "return multiply(fraction.reciprocal());",
    "info" : "ReturnStatement[23690-23729]:ReturnStatement[23810-23849]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[24003-24012]:MarkerAnnotation[24123-24132]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24017-24023]:Modifier[24137-24143]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[24024-24030]:PrimitiveType[24144-24150]"
  }, {
    "left" : "doubleValue",
    "right" : "doubleValue",
    "info" : "SimpleName[24031-24042]:SimpleName[24151-24162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24045-24615]:Block[24165-24735]"
  }, {
    "left" : "double result = numerator.doubleValue() / denominator.doubleValue();",
    "right" : "double result = numerator.doubleValue() / denominator.doubleValue();",
    "info" : "VariableDeclarationStatement[24055-24123]:VariableDeclarationStatement[24175-24243]"
  }, {
    "left" : "if (Double.isNaN(result))",
    "right" : "if (Double.isNaN(result))",
    "info" : "IfStatement[24132-24586]:IfStatement[24252-24706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24158-24586]:Block[24278-24706]"
  }, {
    "left" : "int shift = Math.max(numerator.bitLength(),\n                                 denominator.bitLength()) - FastMath.getExponent(Double.MAX_VALUE);",
    "right" : "int shift = Math.max(numerator.bitLength(),\n                                 denominator.bitLength()) - FastMath.getExponent(Double.MAX_VALUE);",
    "info" : "VariableDeclarationStatement[24307-24450]:VariableDeclarationStatement[24427-24570]"
  }, {
    "left" : "result = numerator.shiftRight(shift).doubleValue() /\n                denominator.shiftRight(shift).doubleValue();",
    "right" : "result = numerator.shiftRight(shift).doubleValue() /\n                denominator.shiftRight(shift).doubleValue();",
    "info" : "ExpressionStatement[24463-24576]:ExpressionStatement[24583-24696]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[24595-24609]:ReturnStatement[24715-24729]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[25233-25242]:MarkerAnnotation[25353-25362]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25247-25253]:Modifier[25367-25373]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[25254-25261]:PrimitiveType[25374-25381]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[25262-25268]:SimpleName[25382-25388]"
  }, {
    "left" : "final Object other",
    "right" : "final Object other",
    "info" : "SingleVariableDeclaration[25269-25287]:SingleVariableDeclaration[25389-25407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25289-25678]:Block[25409-25798]"
  }, {
    "left" : "boolean ret = false;",
    "right" : "boolean ret = false;",
    "info" : "VariableDeclarationStatement[25299-25319]:VariableDeclarationStatement[25419-25439]"
  }, {
    "left" : "if (this == other)",
    "right" : "if (this == other)",
    "info" : "IfStatement[25329-25651]:IfStatement[25449-25771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25348-25383]:Block[25468-25503]"
  }, {
    "left" : "ret = true;",
    "right" : "ret = true;",
    "info" : "ExpressionStatement[25362-25373]:ExpressionStatement[25482-25493]"
  }, {
    "left" : "if (other instanceof BigFraction)",
    "right" : "if (other instanceof BigFraction)",
    "info" : "IfStatement[25389-25651]:IfStatement[25509-25771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25423-25651]:Block[25543-25771]"
  }, {
    "left" : "BigFraction rhs = ((BigFraction) other).reduce();",
    "right" : "BigFraction rhs = ((BigFraction) other).reduce();",
    "info" : "VariableDeclarationStatement[25437-25486]:VariableDeclarationStatement[25557-25606]"
  }, {
    "left" : "BigFraction thisOne = this.reduce();",
    "right" : "BigFraction thisOne = this.reduce();",
    "info" : "VariableDeclarationStatement[25499-25535]:VariableDeclarationStatement[25619-25655]"
  }, {
    "left" : "ret = thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator);",
    "right" : "ret = thisOne.numerator.equals(rhs.numerator) && thisOne.denominator.equals(rhs.denominator);",
    "info" : "ExpressionStatement[25548-25641]:ExpressionStatement[25668-25761]"
  }, {
    "left" : "return ret;",
    "right" : "return ret;",
    "info" : "ReturnStatement[25661-25672]:ReturnStatement[25781-25792]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[25944-25953]:MarkerAnnotation[26064-26073]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25958-25964]:Modifier[26078-26084]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[25965-25970]:PrimitiveType[26085-26090]"
  }, {
    "left" : "floatValue",
    "right" : "floatValue",
    "info" : "SimpleName[25971-25981]:SimpleName[26091-26101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25984-26548]:Block[26104-26668]"
  }, {
    "left" : "float result = numerator.floatValue() / denominator.floatValue();",
    "right" : "float result = numerator.floatValue() / denominator.floatValue();",
    "info" : "VariableDeclarationStatement[25994-26059]:VariableDeclarationStatement[26114-26179]"
  }, {
    "left" : "if (Double.isNaN(result))",
    "right" : "if (Double.isNaN(result))",
    "info" : "IfStatement[26068-26519]:IfStatement[26188-26639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26094-26519]:Block[26214-26639]"
  }, {
    "left" : "int shift = Math.max(numerator.bitLength(),\n                                 denominator.bitLength()) - FastMath.getExponent(Float.MAX_VALUE);",
    "right" : "int shift = Math.max(numerator.bitLength(),\n                                 denominator.bitLength()) - FastMath.getExponent(Float.MAX_VALUE);",
    "info" : "VariableDeclarationStatement[26243-26385]:VariableDeclarationStatement[26363-26505]"
  }, {
    "left" : "result = numerator.shiftRight(shift).floatValue() /\n                denominator.shiftRight(shift).floatValue();",
    "right" : "result = numerator.shiftRight(shift).floatValue() /\n                denominator.shiftRight(shift).floatValue();",
    "info" : "ExpressionStatement[26398-26509]:ExpressionStatement[26518-26629]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[26528-26542]:ReturnStatement[26648-26662]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26721-26727]:Modifier[26841-26847]"
  }, {
    "left" : "BigInteger",
    "right" : "BigInteger",
    "info" : "SimpleType[26728-26738]:SimpleType[26848-26858]"
  }, {
    "left" : "getDenominator",
    "right" : "getDenominator",
    "info" : "SimpleName[26739-26753]:SimpleName[26859-26873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26756-26791]:Block[26876-26911]"
  }, {
    "left" : "return denominator;",
    "right" : "return denominator;",
    "info" : "ReturnStatement[26766-26785]:ReturnStatement[26886-26905]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26942-26948]:Modifier[27062-27068]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[26949-26952]:PrimitiveType[27069-27072]"
  }, {
    "left" : "getDenominatorAsInt",
    "right" : "getDenominatorAsInt",
    "info" : "SimpleName[26953-26972]:SimpleName[27073-27092]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26975-27021]:Block[27095-27141]"
  }, {
    "left" : "return denominator.intValue();",
    "right" : "return denominator.intValue();",
    "info" : "ReturnStatement[26985-27015]:ReturnStatement[27105-27135]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27174-27180]:Modifier[27294-27300]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[27181-27185]:PrimitiveType[27301-27305]"
  }, {
    "left" : "getDenominatorAsLong",
    "right" : "getDenominatorAsLong",
    "info" : "SimpleName[27186-27206]:SimpleName[27306-27326]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27209-27256]:Block[27329-27376]"
  }, {
    "left" : "return denominator.longValue();",
    "right" : "return denominator.longValue();",
    "info" : "ReturnStatement[27219-27250]:ReturnStatement[27339-27370]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27425-27431]:Modifier[27545-27551]"
  }, {
    "left" : "BigInteger",
    "right" : "BigInteger",
    "info" : "SimpleType[27432-27442]:SimpleType[27552-27562]"
  }, {
    "left" : "getNumerator",
    "right" : "getNumerator",
    "info" : "SimpleName[27443-27455]:SimpleName[27563-27575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27458-27491]:Block[27578-27611]"
  }, {
    "left" : "return numerator;",
    "right" : "return numerator;",
    "info" : "ReturnStatement[27468-27485]:ReturnStatement[27588-27605]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27638-27644]:Modifier[27758-27764]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[27645-27648]:PrimitiveType[27765-27768]"
  }, {
    "left" : "getNumeratorAsInt",
    "right" : "getNumeratorAsInt",
    "info" : "SimpleName[27649-27666]:SimpleName[27769-27786]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27669-27713]:Block[27789-27833]"
  }, {
    "left" : "return numerator.intValue();",
    "right" : "return numerator.intValue();",
    "info" : "ReturnStatement[27679-27707]:ReturnStatement[27799-27827]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27862-27868]:Modifier[27982-27988]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[27869-27873]:PrimitiveType[27989-27993]"
  }, {
    "left" : "getNumeratorAsLong",
    "right" : "getNumeratorAsLong",
    "info" : "SimpleName[27874-27892]:SimpleName[27994-28012]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27895-27940]:Block[28015-28060]"
  }, {
    "left" : "return numerator.longValue();",
    "right" : "return numerator.longValue();",
    "info" : "ReturnStatement[27905-27934]:ReturnStatement[28025-28054]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[28123-28132]:MarkerAnnotation[28243-28252]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28137-28143]:Modifier[28257-28263]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[28144-28147]:PrimitiveType[28264-28267]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[28148-28156]:SimpleName[28268-28276]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28159-28245]:Block[28279-28365]"
  }, {
    "left" : "return 37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode();",
    "right" : "return 37 * (37 * 17 + numerator.hashCode()) + denominator.hashCode();",
    "info" : "ReturnStatement[28169-28239]:ReturnStatement[28289-28359]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[28488-28497]:MarkerAnnotation[28608-28617]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28502-28508]:Modifier[28622-28628]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[28509-28512]:PrimitiveType[28629-28632]"
  }, {
    "left" : "intValue",
    "right" : "intValue",
    "info" : "SimpleName[28513-28521]:SimpleName[28633-28641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28524-28588]:Block[28644-28708]"
  }, {
    "left" : "return numerator.divide(denominator).intValue();",
    "right" : "return numerator.divide(denominator).intValue();",
    "info" : "ReturnStatement[28534-28582]:ReturnStatement[28654-28702]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[28832-28841]:MarkerAnnotation[28952-28961]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28846-28852]:Modifier[28966-28972]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[28853-28857]:PrimitiveType[28973-28977]"
  }, {
    "left" : "longValue",
    "right" : "longValue",
    "info" : "SimpleName[28858-28867]:SimpleName[28978-28987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28870-28935]:Block[28990-29055]"
  }, {
    "left" : "return numerator.divide(denominator).longValue();",
    "right" : "return numerator.divide(denominator).longValue();",
    "info" : "ReturnStatement[28880-28929]:ReturnStatement[29000-29049]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29313-29319]:Modifier[29433-29439]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[29320-29331]:SimpleType[29440-29451]"
  }, {
    "left" : "multiply",
    "right" : "multiply",
    "info" : "SimpleName[29332-29340]:SimpleName[29452-29460]"
  }, {
    "left" : "final BigInteger bg",
    "right" : "final BigInteger bg",
    "info" : "SingleVariableDeclaration[29341-29360]:SingleVariableDeclaration[29461-29480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29362-29521]:Block[29482-29641]"
  }, {
    "left" : "if (bg == null)",
    "right" : "if (bg == null)",
    "info" : "IfStatement[29372-29446]:IfStatement[29492-29566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29388-29446]:Block[29508-29566]"
  }, {
    "left" : "throw new NullArgumentException();",
    "right" : "throw new NullArgumentException();",
    "info" : "ThrowStatement[29402-29436]:ThrowStatement[29522-29556]"
  }, {
    "left" : "return new BigFraction(bg.multiply(numerator), denominator);",
    "right" : "return new BigFraction(bg.multiply(numerator), denominator);",
    "info" : "ReturnStatement[29455-29515]:ReturnStatement[29575-29635]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29829-29835]:Modifier[29949-29955]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[29836-29847]:SimpleType[29956-29967]"
  }, {
    "left" : "multiply",
    "right" : "multiply",
    "info" : "SimpleName[29848-29856]:SimpleName[29968-29976]"
  }, {
    "left" : "final int i",
    "right" : "final int i",
    "info" : "SingleVariableDeclaration[29857-29868]:SingleVariableDeclaration[29977-29988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29870-29925]:Block[29990-30045]"
  }, {
    "left" : "return multiply(BigInteger.valueOf(i));",
    "right" : "return multiply(BigInteger.valueOf(i));",
    "info" : "ReturnStatement[29880-29919]:ReturnStatement[30000-30039]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30235-30241]:Modifier[30355-30361]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[30242-30253]:SimpleType[30362-30373]"
  }, {
    "left" : "multiply",
    "right" : "multiply",
    "info" : "SimpleName[30254-30262]:SimpleName[30374-30382]"
  }, {
    "left" : "final long l",
    "right" : "final long l",
    "info" : "SingleVariableDeclaration[30263-30275]:SingleVariableDeclaration[30383-30395]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30277-30332]:Block[30397-30452]"
  }, {
    "left" : "return multiply(BigInteger.valueOf(l));",
    "right" : "return multiply(BigInteger.valueOf(l));",
    "info" : "ReturnStatement[30287-30326]:ReturnStatement[30407-30446]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30707-30713]:Modifier[30827-30833]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[30714-30725]:SimpleType[30834-30845]"
  }, {
    "left" : "multiply",
    "right" : "multiply",
    "info" : "SimpleName[30726-30734]:SimpleName[30846-30854]"
  }, {
    "left" : "final BigFraction fraction",
    "right" : "final BigFraction fraction",
    "info" : "SingleVariableDeclaration[30735-30761]:SingleVariableDeclaration[30855-30881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30763-31173]:Block[30883-31293]"
  }, {
    "left" : "if (fraction == null)",
    "right" : "if (fraction == null)",
    "info" : "IfStatement[30773-30878]:IfStatement[30893-30998]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30795-30878]:Block[30915-30998]"
  }, {
    "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "info" : "ThrowStatement[30809-30868]:ThrowStatement[30929-30988]"
  }, {
    "left" : "if (numerator.equals(BigInteger.ZERO) ||\n            fraction.numerator.equals(BigInteger.ZERO))",
    "right" : "if (numerator.equals(BigInteger.ZERO) ||\n            fraction.numerator.equals(BigInteger.ZERO))",
    "info" : "IfStatement[30887-31020]:IfStatement[31007-31140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30984-31020]:Block[31104-31140]"
  }, {
    "left" : "return ZERO;",
    "right" : "return ZERO;",
    "info" : "ReturnStatement[30998-31010]:ReturnStatement[31118-31130]"
  }, {
    "left" : "return new BigFraction(numerator.multiply(fraction.numerator),\n                               denominator.multiply(fraction.denominator));",
    "right" : "return new BigFraction(numerator.multiply(fraction.numerator),\n                               denominator.multiply(fraction.denominator));",
    "info" : "ReturnStatement[31029-31167]:ReturnStatement[31149-31287]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31369-31375]:Modifier[31489-31495]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[31376-31387]:SimpleType[31496-31507]"
  }, {
    "left" : "negate",
    "right" : "negate",
    "info" : "SimpleName[31388-31394]:SimpleName[31508-31514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31397-31469]:Block[31517-31589]"
  }, {
    "left" : "return new BigFraction(numerator.negate(), denominator);",
    "right" : "return new BigFraction(numerator.negate(), denominator);",
    "info" : "ReturnStatement[31407-31463]:ReturnStatement[31527-31583]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31735-31741]:Modifier[31855-31861]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[31742-31748]:PrimitiveType[31862-31868]"
  }, {
    "left" : "percentageValue",
    "right" : "percentageValue",
    "info" : "SimpleName[31749-31764]:SimpleName[31869-31884]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31767-31826]:Block[31887-31946]"
  }, {
    "left" : "return multiply(ONE_HUNDRED).doubleValue();",
    "right" : "return multiply(ONE_HUNDRED).doubleValue();",
    "info" : "ReturnStatement[31777-31820]:ReturnStatement[31897-31940]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32178-32184]:Modifier[32298-32304]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[32185-32196]:SimpleType[32305-32316]"
  }, {
    "left" : "pow",
    "right" : "pow",
    "info" : "SimpleName[32197-32200]:SimpleName[32317-32320]"
  }, {
    "left" : "final int exponent",
    "right" : "final int exponent",
    "info" : "SingleVariableDeclaration[32201-32219]:SingleVariableDeclaration[32321-32339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32221-32440]:Block[32341-32560]"
  }, {
    "left" : "if (exponent < 0)",
    "right" : "if (exponent < 0)",
    "info" : "IfStatement[32231-32350]:IfStatement[32351-32470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32249-32350]:Block[32369-32470]"
  }, {
    "left" : "return new BigFraction(denominator.pow(-exponent), numerator.pow(-exponent));",
    "right" : "return new BigFraction(denominator.pow(-exponent), numerator.pow(-exponent));",
    "info" : "ReturnStatement[32263-32340]:ReturnStatement[32383-32460]"
  }, {
    "left" : "return new BigFraction(numerator.pow(exponent), denominator.pow(exponent));",
    "right" : "return new BigFraction(numerator.pow(exponent), denominator.pow(exponent));",
    "info" : "ReturnStatement[32359-32434]:ReturnStatement[32479-32554]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32815-32821]:Modifier[32935-32941]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[32822-32833]:SimpleType[32942-32953]"
  }, {
    "left" : "pow",
    "right" : "pow",
    "info" : "SimpleName[32834-32837]:SimpleName[32954-32957]"
  }, {
    "left" : "final long exponent",
    "right" : "final long exponent",
    "info" : "SingleVariableDeclaration[32838-32857]:SingleVariableDeclaration[32958-32977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32859-33216]:Block[32979-33336]"
  }, {
    "left" : "if (exponent < 0)",
    "right" : "if (exponent < 0)",
    "info" : "IfStatement[32869-33059]:IfStatement[32989-33179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32887-33059]:Block[33007-33179]"
  }, {
    "left" : "return new BigFraction(ArithmeticUtils.pow(denominator, -exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));",
    "right" : "return new BigFraction(ArithmeticUtils.pow(denominator, -exponent),\n                                   ArithmeticUtils.pow(numerator,   -exponent));",
    "info" : "ReturnStatement[32901-33049]:ReturnStatement[33021-33169]"
  }, {
    "left" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
    "right" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
    "info" : "ReturnStatement[33068-33210]:ReturnStatement[33188-33330]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33591-33597]:Modifier[33711-33717]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[33598-33609]:SimpleType[33718-33729]"
  }, {
    "left" : "pow",
    "right" : "pow",
    "info" : "SimpleName[33610-33613]:SimpleName[33730-33733]"
  }, {
    "left" : "final BigInteger exponent",
    "right" : "final BigInteger exponent",
    "info" : "SingleVariableDeclaration[33614-33639]:SingleVariableDeclaration[33734-33759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33641-34070]:Block[33761-34190]"
  }, {
    "left" : "if (exponent.compareTo(BigInteger.ZERO) < 0)",
    "right" : "if (exponent.compareTo(BigInteger.ZERO) < 0)",
    "info" : "IfStatement[33651-33913]:IfStatement[33771-34033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33696-33913]:Block[33816-34033]"
  }, {
    "left" : "final BigInteger eNeg = exponent.negate();",
    "right" : "final BigInteger eNeg = exponent.negate();",
    "info" : "VariableDeclarationStatement[33710-33752]:VariableDeclarationStatement[33830-33872]"
  }, {
    "left" : "return new BigFraction(ArithmeticUtils.pow(denominator, eNeg),\n                                   ArithmeticUtils.pow(numerator,   eNeg));",
    "right" : "return new BigFraction(ArithmeticUtils.pow(denominator, eNeg),\n                                   ArithmeticUtils.pow(numerator,   eNeg));",
    "info" : "ReturnStatement[33765-33903]:ReturnStatement[33885-34023]"
  }, {
    "left" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
    "right" : "return new BigFraction(ArithmeticUtils.pow(numerator,   exponent),\n                               ArithmeticUtils.pow(denominator, exponent));",
    "info" : "ReturnStatement[33922-34064]:ReturnStatement[34042-34184]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34410-34416]:Modifier[34530-34536]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[34417-34423]:PrimitiveType[34537-34543]"
  }, {
    "left" : "pow",
    "right" : "pow",
    "info" : "SimpleName[34424-34427]:SimpleName[34544-34547]"
  }, {
    "left" : "final double exponent",
    "right" : "final double exponent",
    "info" : "SingleVariableDeclaration[34428-34449]:SingleVariableDeclaration[34548-34569]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34451-34591]:Block[34571-34711]"
  }, {
    "left" : "return FastMath.pow(numerator.doubleValue(),   exponent) /\n               FastMath.pow(denominator.doubleValue(), exponent);",
    "right" : "return FastMath.pow(numerator.doubleValue(),   exponent) /\n               FastMath.pow(denominator.doubleValue(), exponent);",
    "info" : "ReturnStatement[34461-34585]:ReturnStatement[34581-34705]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34742-34748]:Modifier[34862-34868]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[34749-34760]:SimpleType[34869-34880]"
  }, {
    "left" : "reciprocal",
    "right" : "reciprocal",
    "info" : "SimpleName[34761-34771]:SimpleName[34881-34891]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34774-34837]:Block[34894-34957]"
  }, {
    "left" : "return new BigFraction(denominator, numerator);",
    "right" : "return new BigFraction(denominator, numerator);",
    "info" : "ReturnStatement[34784-34831]:ReturnStatement[34904-34951]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35081-35087]:Modifier[35201-35207]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[35088-35099]:SimpleType[35208-35219]"
  }, {
    "left" : "reduce",
    "right" : "reduce",
    "info" : "SimpleName[35100-35106]:SimpleName[35220-35226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35109-35255]:Block[35229-35375]"
  }, {
    "left" : "final BigInteger gcd = numerator.gcd(denominator);",
    "right" : "final BigInteger gcd = numerator.gcd(denominator);",
    "info" : "VariableDeclarationStatement[35119-35169]:VariableDeclarationStatement[35239-35289]"
  }, {
    "left" : "return new BigFraction(numerator.divide(gcd), denominator.divide(gcd));",
    "right" : "return new BigFraction(numerator.divide(gcd), denominator.divide(gcd));",
    "info" : "ReturnStatement[35178-35249]:ReturnStatement[35298-35369]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35678-35684]:Modifier[35798-35804]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[35685-35696]:SimpleType[35805-35816]"
  }, {
    "left" : "subtract",
    "right" : "subtract",
    "info" : "SimpleName[35697-35705]:SimpleName[35817-35825]"
  }, {
    "left" : "final BigInteger bg",
    "right" : "final BigInteger bg",
    "info" : "SingleVariableDeclaration[35706-35725]:SingleVariableDeclaration[35826-35845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35727-35908]:Block[35847-36028]"
  }, {
    "left" : "if (bg == null)",
    "right" : "if (bg == null)",
    "info" : "IfStatement[35737-35811]:IfStatement[35857-35931]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35753-35811]:Block[35873-35931]"
  }, {
    "left" : "throw new NullArgumentException();",
    "right" : "throw new NullArgumentException();",
    "info" : "ThrowStatement[35767-35801]:ThrowStatement[35887-35921]"
  }, {
    "left" : "return new BigFraction(numerator.subtract(denominator.multiply(bg)), denominator);",
    "right" : "return new BigFraction(numerator.subtract(denominator.multiply(bg)), denominator);",
    "info" : "ReturnStatement[35820-35902]:ReturnStatement[35940-36022]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36220-36226]:Modifier[36340-36346]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[36227-36238]:SimpleType[36347-36358]"
  }, {
    "left" : "subtract",
    "right" : "subtract",
    "info" : "SimpleName[36239-36247]:SimpleName[36359-36367]"
  }, {
    "left" : "final int i",
    "right" : "final int i",
    "info" : "SingleVariableDeclaration[36248-36259]:SingleVariableDeclaration[36368-36379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36261-36316]:Block[36381-36436]"
  }, {
    "left" : "return subtract(BigInteger.valueOf(i));",
    "right" : "return subtract(BigInteger.valueOf(i));",
    "info" : "ReturnStatement[36271-36310]:ReturnStatement[36391-36430]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36621-36627]:Modifier[36741-36747]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[36628-36639]:SimpleType[36748-36759]"
  }, {
    "left" : "subtract",
    "right" : "subtract",
    "info" : "SimpleName[36640-36648]:SimpleName[36760-36768]"
  }, {
    "left" : "final long l",
    "right" : "final long l",
    "info" : "SingleVariableDeclaration[36649-36661]:SingleVariableDeclaration[36769-36781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36663-36718]:Block[36783-36838]"
  }, {
    "left" : "return subtract(BigInteger.valueOf(l));",
    "right" : "return subtract(BigInteger.valueOf(l));",
    "info" : "ReturnStatement[36673-36712]:ReturnStatement[36793-36832]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37122-37128]:Modifier[37242-37248]"
  }, {
    "left" : "BigFraction",
    "right" : "BigFraction",
    "info" : "SimpleType[37129-37140]:SimpleType[37249-37260]"
  }, {
    "left" : "subtract",
    "right" : "subtract",
    "info" : "SimpleName[37141-37149]:SimpleName[37261-37269]"
  }, {
    "left" : "final BigFraction fraction",
    "right" : "final BigFraction fraction",
    "info" : "SingleVariableDeclaration[37150-37176]:SingleVariableDeclaration[37270-37296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37178-37826]:Block[37298-37946]"
  }, {
    "left" : "if (fraction == null)",
    "right" : "if (fraction == null)",
    "info" : "IfStatement[37188-37293]:IfStatement[37308-37413]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37210-37293]:Block[37330-37413]"
  }, {
    "left" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "right" : "throw new NullArgumentException(LocalizedFormats.FRACTION);",
    "info" : "ThrowStatement[37224-37283]:ThrowStatement[37344-37403]"
  }, {
    "left" : "if (ZERO.equals(fraction))",
    "right" : "if (ZERO.equals(fraction))",
    "info" : "IfStatement[37302-37365]:IfStatement[37422-37485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37329-37365]:Block[37449-37485]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[37343-37355]:ReturnStatement[37463-37475]"
  }, {
    "left" : "BigInteger num = null;",
    "right" : "BigInteger num = null;",
    "info" : "VariableDeclarationStatement[37375-37397]:VariableDeclarationStatement[37495-37517]"
  }, {
    "left" : "BigInteger den = null;",
    "right" : "BigInteger den = null;",
    "info" : "VariableDeclarationStatement[37406-37428]:VariableDeclarationStatement[37526-37548]"
  }, {
    "left" : "if (denominator.equals(fraction.denominator))",
    "right" : "if (denominator.equals(fraction.denominator))",
    "info" : "IfStatement[37437-37777]:IfStatement[37557-37897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37483-37583]:Block[37603-37703]"
  }, {
    "left" : "num = numerator.subtract(fraction.numerator);",
    "right" : "num = numerator.subtract(fraction.numerator);",
    "info" : "ExpressionStatement[37497-37542]:ExpressionStatement[37617-37662]"
  }, {
    "left" : "den = denominator;",
    "right" : "den = denominator;",
    "info" : "ExpressionStatement[37555-37573]:ExpressionStatement[37675-37693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37589-37777]:Block[37709-37897]"
  }, {
    "left" : "num = (numerator.multiply(fraction.denominator)).subtract((fraction.numerator).multiply(denominator));",
    "right" : "num = (numerator.multiply(fraction.denominator)).subtract((fraction.numerator).multiply(denominator));",
    "info" : "ExpressionStatement[37603-37705]:ExpressionStatement[37723-37825]"
  }, {
    "left" : "den = denominator.multiply(fraction.denominator);",
    "right" : "den = denominator.multiply(fraction.denominator);",
    "info" : "ExpressionStatement[37718-37767]:ExpressionStatement[37838-37887]"
  }, {
    "left" : "return new BigFraction(num, den);",
    "right" : "return new BigFraction(num, den);",
    "info" : "ReturnStatement[37786-37819]:ReturnStatement[37906-37939]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[38104-38113]:MarkerAnnotation[38224-38233]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38118-38124]:Modifier[38238-38244]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[38125-38131]:SimpleType[38245-38251]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[38132-38140]:SimpleName[38252-38260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38143-38444]:Block[38263-38564]"
  }, {
    "left" : "String str = null;",
    "right" : "String str = null;",
    "info" : "VariableDeclarationStatement[38153-38171]:VariableDeclarationStatement[38273-38291]"
  }, {
    "left" : "if (BigInteger.ONE.equals(denominator))",
    "right" : "if (BigInteger.ONE.equals(denominator))",
    "info" : "IfStatement[38180-38418]:IfStatement[38300-38538]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38220-38271]:Block[38340-38391]"
  }, {
    "left" : "str = numerator.toString();",
    "right" : "str = numerator.toString();",
    "info" : "ExpressionStatement[38234-38261]:ExpressionStatement[38354-38381]"
  }, {
    "left" : "if (BigInteger.ZERO.equals(numerator))",
    "right" : "if (BigInteger.ZERO.equals(numerator))",
    "info" : "IfStatement[38277-38418]:IfStatement[38397-38538]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38316-38350]:Block[38436-38470]"
  }, {
    "left" : "str = \"0\";",
    "right" : "str = \"0\";",
    "info" : "ExpressionStatement[38330-38340]:ExpressionStatement[38450-38460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38356-38418]:Block[38476-38538]"
  }, {
    "left" : "str = numerator + \" / \" + denominator;",
    "right" : "str = numerator + \" / \" + denominator;",
    "info" : "ExpressionStatement[38370-38408]:ExpressionStatement[38490-38528]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[38427-38438]:ReturnStatement[38547-38558]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38475-38481]:Modifier[38595-38601]"
  }, {
    "left" : "BigFractionField",
    "right" : "BigFractionField",
    "info" : "SimpleType[38482-38498]:SimpleType[38602-38618]"
  }, {
    "left" : "getField",
    "right" : "getField",
    "info" : "SimpleName[38499-38507]:SimpleName[38619-38627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38510-38564]:Block[38630-38684]"
  }, {
    "left" : "return BigFractionField.getInstance();",
    "right" : "return BigFractionField.getInstance();",
    "info" : "ReturnStatement[38520-38558]:ReturnStatement[38640-38678]"
  } ]
}