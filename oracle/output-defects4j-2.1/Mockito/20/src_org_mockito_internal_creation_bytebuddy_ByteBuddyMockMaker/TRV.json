{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final ClassInstantiator classInstantiator;",
      "right" : "private final ClassInstantiator classInstantiator;",
      "info" : "FieldDeclaration[591-641]:FieldDeclaration[591-641]"
    }, {
      "left" : "private final CachingMockBytecodeGenerator cachingMockBytecodeGenerator;",
      "right" : "private final CachingMockBytecodeGenerator cachingMockBytecodeGenerator;",
      "info" : "FieldDeclaration[646-718]:FieldDeclaration[646-718]"
    }, {
      "left" : "public ByteBuddyMockMaker()",
      "right" : "public ByteBuddyMockMaker()",
      "info" : "MethodDeclaration[724-893]:MethodDeclaration[724-893]"
    }, {
      "left" : "private <T> T ensureMockIsAssignableToMockedType(MockCreationSettings<T> settings, T mock)",
      "right" : "private <T> T ensureMockIsAssignableToMockedType(MockCreationSettings<T> settings, T mock)",
      "info" : "MethodDeclaration[2719-3114]:MethodDeclaration[2799-3194]"
    }, {
      "left" : "private static String describeClass(Class type)",
      "right" : "private static String describeClass(Class type)",
      "info" : "MethodDeclaration[3120-3308]:MethodDeclaration[3200-3388]"
    }, {
      "left" : "private static String describeClass(Object instance)",
      "right" : "private static String describeClass(Object instance)",
      "info" : "MethodDeclaration[3314-3453]:MethodDeclaration[3394-3533]"
    }, {
      "left" : "public MockHandler getHandler(Object mock)",
      "right" : "public MockHandler getHandler(Object mock)",
      "info" : "MethodDeclaration[3459-3710]:MethodDeclaration[3539-3790]"
    }, {
      "left" : "public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings)",
      "right" : "public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings)",
      "info" : "MethodDeclaration[3716-3984]:MethodDeclaration[3796-4064]"
    }, {
      "left" : "private static ClassInstantiator initializeClassInstantiator()",
      "right" : "private static ClassInstantiator initializeClassInstantiator()",
      "info" : "MethodDeclaration[3990-4938]:MethodDeclaration[4070-5018]"
    }, {
      "left" : "private static InternalMockHandler asInternalMockHandler(MockHandler handler)",
      "right" : "private static InternalMockHandler asInternalMockHandler(MockHandler handler)",
      "info" : "MethodDeclaration[4944-5394]:MethodDeclaration[5024-5474]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[752-893]:Block[752-893]"
    }, {
      "left" : "classInstantiator = initializeClassInstantiator();",
      "right" : "classInstantiator = initializeClassInstantiator();",
      "info" : "ExpressionStatement[762-812]:ExpressionStatement[762-812]"
    }, {
      "left" : "cachingMockBytecodeGenerator = new CachingMockBytecodeGenerator();",
      "right" : "cachingMockBytecodeGenerator = new CachingMockBytecodeGenerator();",
      "info" : "ExpressionStatement[821-887]:ExpressionStatement[821-887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2810-3114]:Block[2890-3194]"
    }, {
      "left" : "Class<T> typeToMock = settings.getTypeToMock();",
      "right" : "Class<T> typeToMock = settings.getTypeToMock();",
      "info" : "VariableDeclarationStatement[3023-3070]:VariableDeclarationStatement[3103-3150]"
    }, {
      "left" : "return typeToMock.cast(mock);",
      "right" : "return typeToMock.cast(mock);",
      "info" : "ReturnStatement[3079-3108]:ReturnStatement[3159-3188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3168-3308]:Block[3248-3388]"
    }, {
      "left" : "return type == null ? \"null\" : \"'\" + type.getCanonicalName() + \"', loaded by classloader : '\" + type.getClassLoader() + \"'\";",
      "right" : "return type == null ? \"null\" : \"'\" + type.getCanonicalName() + \"', loaded by classloader : '\" + type.getClassLoader() + \"'\";",
      "info" : "ReturnStatement[3178-3302]:ReturnStatement[3258-3382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3367-3453]:Block[3447-3533]"
    }, {
      "left" : "return instance == null ? \"null\" : describeClass(instance.getClass());",
      "right" : "return instance == null ? \"null\" : describeClass(instance.getClass());",
      "info" : "ReturnStatement[3377-3447]:ReturnStatement[3457-3527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3502-3710]:Block[3582-3790]"
    }, {
      "left" : "if (!(mock instanceof MockMethodInterceptor.MockAccess))",
      "right" : "if (!(mock instanceof MockMethodInterceptor.MockAccess))",
      "info" : "IfStatement[3512-3605]:IfStatement[3592-3685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3569-3605]:Block[3649-3685]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3583-3595]:ReturnStatement[3663-3675]"
    }, {
      "left" : "return ((MockMethodInterceptor.MockAccess) mock).getMockitoInterceptor().getMockHandler();",
      "right" : "return ((MockMethodInterceptor.MockAccess) mock).getMockitoInterceptor().getMockHandler();",
      "info" : "ReturnStatement[3614-3704]:ReturnStatement[3694-3784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3806-3984]:Block[3886-4064]"
    }, {
      "left" : "((MockMethodInterceptor.MockAccess) mock).setMockitoInterceptor(\n                new MockMethodInterceptor(asInternalMockHandler(newHandler), settings)\n        );",
      "right" : "((MockMethodInterceptor.MockAccess) mock).setMockitoInterceptor(\n                new MockMethodInterceptor(asInternalMockHandler(newHandler), settings)\n        );",
      "info" : "ExpressionStatement[3816-3978]:ExpressionStatement[3896-4058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4053-4938]:Block[4133-5018]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4063-4932]:TryStatement[4143-5012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4067-4464]:Block[4147-4544]"
    }, {
      "left" : "Class<?> objenesisClassLoader = Class.forName(\"org.mockito.internal.creation.bytebuddy.ClassInstantiator$UsingObjenesis\");",
      "right" : "Class<?> objenesisClassLoader = Class.forName(\"org.mockito.internal.creation.bytebuddy.ClassInstantiator$UsingObjenesis\");",
      "info" : "VariableDeclarationStatement[4081-4203]:VariableDeclarationStatement[4161-4283]"
    }, {
      "left" : "Constructor<?> usingClassCacheConstructor = objenesisClassLoader.getDeclaredConstructor(boolean.class);",
      "right" : "Constructor<?> usingClassCacheConstructor = objenesisClassLoader.getDeclaredConstructor(boolean.class);",
      "info" : "VariableDeclarationStatement[4216-4319]:VariableDeclarationStatement[4296-4399]"
    }, {
      "left" : "return ClassInstantiator.class.cast(usingClassCacheConstructor.newInstance(new GlobalConfiguration().enableClassCache()));",
      "right" : "return ClassInstantiator.class.cast(usingClassCacheConstructor.newInstance(new GlobalConfiguration().enableClassCache()));",
      "info" : "ReturnStatement[4332-4454]:ReturnStatement[4412-4534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4493-4932]:Block[4573-5012]"
    }, {
      "left" : "throw new IllegalStateException(join(\n                    \"Mockito could not create mock: Objenesis is missing on the classpath.\",\n                    \"Please add Objenesis on the classpath.\",\n                    \"\"\n            ), throwable);",
      "right" : "throw new IllegalStateException(join(\n                    \"Mockito could not create mock: Objenesis is missing on the classpath.\",\n                    \"Please add Objenesis on the classpath.\",\n                    \"\"\n            ), throwable);",
      "info" : "ThrowStatement[4680-4922]:ThrowStatement[4760-5002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5022-5394]:Block[5102-5474]"
    }, {
      "left" : "if (!(handler instanceof InternalMockHandler))",
      "right" : "if (!(handler instanceof InternalMockHandler))",
      "info" : "IfStatement[5032-5342]:IfStatement[5112-5422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5079-5342]:Block[5159-5422]"
    }, {
      "left" : "throw new MockitoException(join(\n                    \"At the moment you cannot provide own implementations of MockHandler.\",\n                    \"Please see the javadocs for the MockMaker interface.\",\n                    \"\"\n            ));",
      "right" : "throw new MockitoException(join(\n                    \"At the moment you cannot provide own implementations of MockHandler.\",\n                    \"Please see the javadocs for the MockMaker interface.\",\n                    \"\"\n            ));",
      "info" : "ThrowStatement[5093-5332]:ThrowStatement[5173-5412]"
    }, {
      "left" : "return (InternalMockHandler) handler;",
      "right" : "return (InternalMockHandler) handler;",
      "info" : "ReturnStatement[5351-5388]:ReturnStatement[5431-5468]"
    } ]
  },
  "interFileMappings" : { }
}