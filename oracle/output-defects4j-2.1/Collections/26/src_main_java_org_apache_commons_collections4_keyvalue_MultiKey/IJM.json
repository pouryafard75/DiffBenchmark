{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MultiKey",
      "right" : "MultiKey",
      "info" : "TypeDeclaration[909-8935]:TypeDeclaration[909-8937]"
    }, {
      "left" : "private static final long serialVersionUID = 4465448607415788805L;",
      "right" : "private static final long serialVersionUID = 4465448607415788805L;",
      "info" : "FieldDeclaration[1833-1932]:FieldDeclaration[1833-1932]"
    }, {
      "left" : "private final K[] keys;",
      "right" : "private final K[] keys;",
      "info" : "FieldDeclaration[1938-1992]:FieldDeclaration[1938-1992]"
    }, {
      "left" : "private transient int hashCode;",
      "right" : "private transient int hashCode;",
      "info" : "FieldDeclaration[1997-2059]:FieldDeclaration[1997-2059]"
    }, {
      "left" : "public MultiKey(final K key1, final K key2)",
      "right" : "public MultiKey(final K key1, final K key2)",
      "info" : "MethodDeclaration[2065-2465]:MethodDeclaration[2065-2465]"
    }, {
      "left" : "public MultiKey(final K key1, final K key2, final K key3)",
      "right" : "public MultiKey(final K key1, final K key2, final K key3)",
      "info" : "MethodDeclaration[2471-2925]:MethodDeclaration[2471-2925]"
    }, {
      "left" : "public MultiKey(final K key1, final K key2, final K key3, final K key4)",
      "right" : "public MultiKey(final K key1, final K key2, final K key3, final K key4)",
      "info" : "MethodDeclaration[2931-3439]:MethodDeclaration[2931-3439]"
    }, {
      "left" : "public MultiKey(final K key1, final K key2, final K key3, final K key4, final K key5)",
      "right" : "public MultiKey(final K key1, final K key2, final K key3, final K key4, final K key5)",
      "info" : "MethodDeclaration[3445-4007]:MethodDeclaration[3445-4007]"
    }, {
      "left" : "public MultiKey(final K[] keys)",
      "right" : "public MultiKey(final K[] keys)",
      "info" : "MethodDeclaration[4013-4483]:MethodDeclaration[4013-4483]"
    }, {
      "left" : "public MultiKey(final K[] keys, final boolean makeClone)",
      "right" : "public MultiKey(final K[] keys, final boolean makeClone)",
      "info" : "MethodDeclaration[4489-5864]:MethodDeclaration[4489-5864]"
    }, {
      "left" : "public K[] getKeys()",
      "right" : "public K[] getKeys()",
      "info" : "MethodDeclaration[5948-6206]:MethodDeclaration[5948-6206]"
    }, {
      "left" : "public K getKey(final int index)",
      "right" : "public K getKey(final int index)",
      "info" : "MethodDeclaration[6212-6605]:MethodDeclaration[6212-6605]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[6611-6791]:MethodDeclaration[6611-6791]"
    }, {
      "left" : "public boolean equals(final Object other)",
      "right" : "public boolean equals(final Object other)",
      "info" : "MethodDeclaration[6875-7478]:MethodDeclaration[6875-7478]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[7484-7957]:MethodDeclaration[7484-7957]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[7963-8168]:MethodDeclaration[7963-8168]"
    }, {
      "left" : "private void calculateHashCode(final Object[] keys)",
      "right" : "private void calculateHashCode(final Object[] keys)",
      "info" : "MethodDeclaration[8174-8569]:MethodDeclaration[8174-8569]"
    }, {
      "left" : "private Object readResolve()",
      "right" : "protected Object readResolve()",
      "info" : "MethodDeclaration[8575-8933]:MethodDeclaration[8575-8935]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2402-2465]:Block[2402-2465]"
    }, {
      "left" : "this((K[]) new Object[] { key1, key2 }, false);",
      "right" : "this((K[]) new Object[] { key1, key2 }, false);",
      "info" : "ConstructorInvocation[2412-2459]:ConstructorInvocation[2412-2459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2858-2925]:Block[2858-2925]"
    }, {
      "left" : "this((K[]) new Object[] {key1, key2, key3}, false);",
      "right" : "this((K[]) new Object[] {key1, key2, key3}, false);",
      "info" : "ConstructorInvocation[2868-2919]:ConstructorInvocation[2868-2919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3366-3439]:Block[3366-3439]"
    }, {
      "left" : "this((K[]) new Object[] {key1, key2, key3, key4}, false);",
      "right" : "this((K[]) new Object[] {key1, key2, key3, key4}, false);",
      "info" : "ConstructorInvocation[3376-3433]:ConstructorInvocation[3376-3433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3928-4007]:Block[3928-4007]"
    }, {
      "left" : "this((K[]) new Object[] {key1, key2, key3, key4, key5}, false);",
      "right" : "this((K[]) new Object[] {key1, key2, key3, key4, key5}, false);",
      "info" : "ConstructorInvocation[3938-4001]:ConstructorInvocation[3938-4001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4450-4483]:Block[4450-4483]"
    }, {
      "left" : "this(keys, true);",
      "right" : "this(keys, true);",
      "info" : "ConstructorInvocation[4460-4477]:ConstructorInvocation[4460-4477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5562-5864]:Block[5562-5864]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[5572-5580]:SuperConstructorInvocation[5572-5580]"
    }, {
      "left" : "if (keys == null)",
      "right" : "if (keys == null)",
      "info" : "IfStatement[5589-5704]:IfStatement[5589-5704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5607-5704]:Block[5607-5704]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The array of keys must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The array of keys must not be null\");",
      "info" : "ThrowStatement[5621-5694]:ThrowStatement[5621-5694]"
    }, {
      "left" : "if (makeClone)",
      "right" : "if (makeClone)",
      "info" : "IfStatement[5713-5824]:IfStatement[5713-5824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5728-5777]:Block[5728-5777]"
    }, {
      "left" : "this.keys = keys.clone();",
      "right" : "this.keys = keys.clone();",
      "info" : "ExpressionStatement[5742-5767]:ExpressionStatement[5742-5767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5783-5824]:Block[5783-5824]"
    }, {
      "left" : "this.keys = keys;",
      "right" : "this.keys = keys;",
      "info" : "ExpressionStatement[5797-5814]:ExpressionStatement[5797-5814]"
    }, {
      "left" : "calculateHashCode(keys);",
      "right" : "calculateHashCode(keys);",
      "info" : "ExpressionStatement[5834-5858]:ExpressionStatement[5834-5858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6170-6206]:Block[6170-6206]"
    }, {
      "left" : "return keys.clone();",
      "right" : "return keys.clone();",
      "info" : "ReturnStatement[6180-6200]:ReturnStatement[6180-6200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6570-6605]:Block[6570-6605]"
    }, {
      "left" : "return keys[index];",
      "right" : "return keys[index];",
      "info" : "ReturnStatement[6580-6599]:ReturnStatement[6580-6599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6756-6791]:Block[6756-6791]"
    }, {
      "left" : "return keys.length;",
      "right" : "return keys.length;",
      "info" : "ReturnStatement[6766-6785]:ReturnStatement[6766-6785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7213-7478]:Block[7213-7478]"
    }, {
      "left" : "if (other == this)",
      "right" : "if (other == this)",
      "info" : "IfStatement[7223-7278]:IfStatement[7223-7278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7242-7278]:Block[7242-7278]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[7256-7268]:ReturnStatement[7256-7268]"
    }, {
      "left" : "if (other instanceof MultiKey)",
      "right" : "if (other instanceof MultiKey)",
      "info" : "IfStatement[7287-7450]:IfStatement[7287-7450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7318-7450]:Block[7318-7450]"
    }, {
      "left" : "final MultiKey<?> otherMulti = (MultiKey<?>) other;",
      "right" : "final MultiKey<?> otherMulti = (MultiKey<?>) other;",
      "info" : "VariableDeclarationStatement[7332-7383]:VariableDeclarationStatement[7332-7383]"
    }, {
      "left" : "return Arrays.equals(keys, otherMulti.keys);",
      "right" : "return Arrays.equals(keys, otherMulti.keys);",
      "info" : "ReturnStatement[7396-7440]:ReturnStatement[7396-7440]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7459-7472]:ReturnStatement[7459-7472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7925-7957]:Block[7925-7957]"
    }, {
      "left" : "return hashCode;",
      "right" : "return hashCode;",
      "info" : "ReturnStatement[7935-7951]:ReturnStatement[7935-7951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8110-8168]:Block[8110-8168]"
    }, {
      "left" : "return \"MultiKey\" + Arrays.toString(keys);",
      "right" : "return \"MultiKey\" + Arrays.toString(keys);",
      "info" : "ReturnStatement[8120-8162]:ReturnStatement[8120-8162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8377-8569]:Block[8377-8569]"
    }, {
      "left" : "int total = 0;",
      "right" : "int total = 0;",
      "info" : "VariableDeclarationStatement[8387-8401]:VariableDeclarationStatement[8387-8401]"
    }, {
      "left" : "for (final Object key : keys)",
      "right" : "for (final Object key : keys)",
      "info" : "EnhancedForStatement[8410-8537]:EnhancedForStatement[8410-8537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8440-8537]:Block[8440-8537]"
    }, {
      "left" : "if (key != null)",
      "right" : "if (key != null)",
      "info" : "IfStatement[8454-8527]:IfStatement[8454-8527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8471-8527]:Block[8471-8527]"
    }, {
      "left" : "total ^= key.hashCode();",
      "right" : "total ^= key.hashCode();",
      "info" : "ExpressionStatement[8489-8513]:ExpressionStatement[8489-8513]"
    }, {
      "left" : "hashCode = total;",
      "right" : "hashCode = total;",
      "info" : "ExpressionStatement[8546-8563]:ExpressionStatement[8546-8563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8872-8933]:Block[8874-8935]"
    }, {
      "left" : "calculateHashCode(keys);",
      "right" : "calculateHashCode(keys);",
      "info" : "ExpressionStatement[8882-8906]:ExpressionStatement[8884-8908]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[8915-8927]:ReturnStatement[8917-8929]"
    } ]
  },
  "interFileMappings" : { }
}