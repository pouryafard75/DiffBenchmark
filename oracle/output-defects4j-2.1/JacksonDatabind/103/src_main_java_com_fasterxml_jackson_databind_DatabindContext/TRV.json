{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final static int MAX_ERROR_STR_LEN = 500;",
      "right" : "private final static int MAX_ERROR_STR_LEN = 500;",
      "info" : "FieldDeclaration[957-1221]:FieldDeclaration[957-1221]"
    }, {
      "left" : "public abstract MapperConfig<?> getConfig();",
      "right" : "public abstract MapperConfig<?> getConfig();",
      "info" : "MethodDeclaration[1400-1567]:MethodDeclaration[1400-1567]"
    }, {
      "left" : "public abstract AnnotationIntrospector getAnnotationIntrospector();",
      "right" : "public abstract AnnotationIntrospector getAnnotationIntrospector();",
      "info" : "MethodDeclaration[1573-1822]:MethodDeclaration[1573-1822]"
    }, {
      "left" : "public abstract boolean isEnabled(MapperFeature feature);",
      "right" : "public abstract boolean isEnabled(MapperFeature feature);",
      "info" : "MethodDeclaration[2018-2282]:MethodDeclaration[2018-2282]"
    }, {
      "left" : "public abstract boolean canOverrideAccessModifiers();",
      "right" : "public abstract boolean canOverrideAccessModifiers();",
      "info" : "MethodDeclaration[2288-2524]:MethodDeclaration[2288-2524]"
    }, {
      "left" : "public abstract Class<?> getActiveView();",
      "right" : "public abstract Class<?> getActiveView();",
      "info" : "MethodDeclaration[2530-2692]:MethodDeclaration[2530-2692]"
    }, {
      "left" : "public abstract Locale getLocale();",
      "right" : "public abstract Locale getLocale();",
      "info" : "MethodDeclaration[2698-2767]:MethodDeclaration[2698-2767]"
    }, {
      "left" : "public abstract TimeZone getTimeZone();",
      "right" : "public abstract TimeZone getTimeZone();",
      "info" : "MethodDeclaration[2773-2846]:MethodDeclaration[2773-2846]"
    }, {
      "left" : "public abstract JsonFormat.Value getDefaultPropertyFormat(Class<?> baseType);",
      "right" : "public abstract JsonFormat.Value getDefaultPropertyFormat(Class<?> baseType);",
      "info" : "MethodDeclaration[2852-2963]:MethodDeclaration[2852-2963]"
    }, {
      "left" : "public abstract Object getAttribute(Object key);",
      "right" : "public abstract Object getAttribute(Object key);",
      "info" : "MethodDeclaration[3146-3571]:MethodDeclaration[3146-3571]"
    }, {
      "left" : "public abstract DatabindContext setAttribute(Object key, Object value);",
      "right" : "public abstract DatabindContext setAttribute(Object key, Object value);",
      "info" : "MethodDeclaration[3577-4014]:MethodDeclaration[3577-4014]"
    }, {
      "left" : "public JavaType constructType(Type type)",
      "right" : "public JavaType constructType(Type type)",
      "info" : "MethodDeclaration[4201-4501]:MethodDeclaration[4201-4501]"
    }, {
      "left" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
      "right" : "public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass)",
      "info" : "MethodDeclaration[4507-4970]:MethodDeclaration[4507-4970]"
    }, {
      "left" : "protected abstract JsonMappingException invalidTypeIdException(JavaType baseType, String typeId,\n            String extraDesc);",
      "right" : "protected abstract JsonMappingException invalidTypeIdException(JavaType baseType, String typeId,\n            String extraDesc);",
      "info" : "MethodDeclaration[6682-7276]:MethodDeclaration[6697-7291]"
    }, {
      "left" : "public abstract TypeFactory getTypeFactory();",
      "right" : "public abstract TypeFactory getTypeFactory();",
      "info" : "MethodDeclaration[7282-7327]:MethodDeclaration[7297-7342]"
    }, {
      "left" : "public ObjectIdGenerator<?> objectIdGeneratorInstance(Annotated annotated,\n            ObjectIdInfo objectIdInfo)\n        throws JsonMappingException",
      "right" : "public ObjectIdGenerator<?> objectIdGeneratorInstance(Annotated annotated,\n            ObjectIdInfo objectIdInfo)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7511-8195]:MethodDeclaration[7526-8210]"
    }, {
      "left" : "public ObjectIdResolver objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)",
      "right" : "public ObjectIdResolver objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo)",
      "info" : "MethodDeclaration[8201-8798]:MethodDeclaration[8216-8813]"
    }, {
      "left" : "public Converter<Object,Object> converterInstance(Annotated annotated,\n            Object converterDef)\n        throws JsonMappingException",
      "right" : "public Converter<Object,Object> converterInstance(Annotated annotated,\n            Object converterDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8804-10615]:MethodDeclaration[8819-10630]"
    }, {
      "left" : "public abstract <T> T reportBadDefinition(JavaType type, String msg) throws JsonMappingException;",
      "right" : "public abstract <T> T reportBadDefinition(JavaType type, String msg) throws JsonMappingException;",
      "info" : "MethodDeclaration[10788-11176]:MethodDeclaration[10803-11191]"
    }, {
      "left" : "public <T> T reportBadDefinition(Class<?> type, String msg) throws JsonMappingException",
      "right" : "public <T> T reportBadDefinition(Class<?> type, String msg) throws JsonMappingException",
      "info" : "MethodDeclaration[11182-11373]:MethodDeclaration[11197-11388]"
    }, {
      "left" : "protected final String _format(String msg, Object... msgArgs)",
      "right" : "protected final String _format(String msg, Object... msgArgs)",
      "info" : "MethodDeclaration[11545-11760]:MethodDeclaration[11560-11775]"
    }, {
      "left" : "protected final String _truncate(String desc)",
      "right" : "protected final String _truncate(String desc)",
      "info" : "MethodDeclaration[11766-12114]:MethodDeclaration[11781-12129]"
    }, {
      "left" : "protected String _quotedString(String desc)",
      "right" : "protected String _quotedString(String desc)",
      "info" : "MethodDeclaration[12120-12408]:MethodDeclaration[12135-12423]"
    }, {
      "left" : "protected String _colonConcat(String msgBase, String extra)",
      "right" : "protected String _colonConcat(String msgBase, String extra)",
      "info" : "MethodDeclaration[12418-12625]:MethodDeclaration[12433-12640]"
    }, {
      "left" : "protected String _desc(String desc)",
      "right" : "protected String _desc(String desc)",
      "info" : "MethodDeclaration[12631-12886]:MethodDeclaration[12646-12901]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4378-4501]:Block[4378-4501]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[4388-4442]:IfStatement[4388-4442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4406-4442]:Block[4406-4442]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4420-4432]:ReturnStatement[4420-4432]"
    }, {
      "left" : "return getTypeFactory().constructType(type);",
      "right" : "return getTypeFactory().constructType(type);",
      "info" : "ReturnStatement[4451-4495]:ReturnStatement[4451-4495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4704-4970]:Block[4704-4970]"
    }, {
      "left" : "if (baseType.getRawClass() == subclass)",
      "right" : "if (baseType.getRawClass() == subclass)",
      "info" : "IfStatement[4811-4891]:IfStatement[4811-4891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4851-4891]:Block[4851-4891]"
    }, {
      "left" : "return baseType;",
      "right" : "return baseType;",
      "info" : "ReturnStatement[4865-4881]:ReturnStatement[4865-4881]"
    }, {
      "left" : "return getConfig().constructSpecializedType(baseType, subclass);",
      "right" : "return getConfig().constructSpecializedType(baseType, subclass);",
      "info" : "ReturnStatement[4900-4964]:ReturnStatement[4900-4964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7665-8195]:Block[7680-8210]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[7675-7728]:VariableDeclarationStatement[7690-7743]"
    }, {
      "left" : "final MapperConfig<?> config = getConfig();",
      "right" : "final MapperConfig<?> config = getConfig();",
      "info" : "VariableDeclarationStatement[7737-7780]:VariableDeclarationStatement[7752-7795]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[7789-7846]:VariableDeclarationStatement[7804-7861]"
    }, {
      "left" : "ObjectIdGenerator<?> gen = (hi == null) ? null : hi.objectIdGeneratorInstance(config, annotated, implClass);",
      "right" : "ObjectIdGenerator<?> gen = (hi == null) ? null : hi.objectIdGeneratorInstance(config, annotated, implClass);",
      "info" : "VariableDeclarationStatement[7855-7963]:VariableDeclarationStatement[7870-7978]"
    }, {
      "left" : "if (gen == null)",
      "right" : "if (gen == null)",
      "info" : "IfStatement[7972-8135]:IfStatement[7987-8150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7989-8135]:Block[8004-8150]"
    }, {
      "left" : "gen = (ObjectIdGenerator<?>) ClassUtil.createInstance(implClass,\n                    config.canOverrideAccessModifiers());",
      "right" : "gen = (ObjectIdGenerator<?>) ClassUtil.createInstance(implClass,\n                    config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[8003-8125]:ExpressionStatement[8018-8140]"
    }, {
      "left" : "return gen.forScope(objectIdInfo.getScope());",
      "right" : "return gen.forScope(objectIdInfo.getScope());",
      "info" : "ReturnStatement[8144-8189]:ReturnStatement[8159-8204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8302-8798]:Block[8317-8813]"
    }, {
      "left" : "Class<? extends ObjectIdResolver> implClass = objectIdInfo.getResolverType();",
      "right" : "Class<? extends ObjectIdResolver> implClass = objectIdInfo.getResolverType();",
      "info" : "VariableDeclarationStatement[8312-8389]:VariableDeclarationStatement[8327-8404]"
    }, {
      "left" : "final MapperConfig<?> config = getConfig();",
      "right" : "final MapperConfig<?> config = getConfig();",
      "info" : "VariableDeclarationStatement[8398-8441]:VariableDeclarationStatement[8413-8456]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[8450-8507]:VariableDeclarationStatement[8465-8522]"
    }, {
      "left" : "ObjectIdResolver resolver = (hi == null) ? null : hi.resolverIdGeneratorInstance(config, annotated, implClass);",
      "right" : "ObjectIdResolver resolver = (hi == null) ? null : hi.resolverIdGeneratorInstance(config, annotated, implClass);",
      "info" : "VariableDeclarationStatement[8516-8627]:VariableDeclarationStatement[8531-8642]"
    }, {
      "left" : "if (resolver == null)",
      "right" : "if (resolver == null)",
      "info" : "IfStatement[8636-8766]:IfStatement[8651-8781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8658-8766]:Block[8673-8781]"
    }, {
      "left" : "resolver = ClassUtil.createInstance(implClass, config.canOverrideAccessModifiers());",
      "right" : "resolver = ClassUtil.createInstance(implClass, config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[8672-8756]:ExpressionStatement[8687-8771]"
    }, {
      "left" : "return resolver;",
      "right" : "return resolver;",
      "info" : "ReturnStatement[8776-8792]:ReturnStatement[8791-8807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9191-10615]:Block[9206-10630]"
    }, {
      "left" : "if (converterDef == null)",
      "right" : "if (converterDef == null)",
      "info" : "IfStatement[9201-9263]:IfStatement[9216-9278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9227-9263]:Block[9242-9278]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9241-9253]:ReturnStatement[9256-9268]"
    }, {
      "left" : "if (converterDef instanceof Converter<?,?>)",
      "right" : "if (converterDef instanceof Converter<?,?>)",
      "info" : "IfStatement[9272-9387]:IfStatement[9287-9402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9316-9387]:Block[9331-9402]"
    }, {
      "left" : "return (Converter<Object,Object>) converterDef;",
      "right" : "return (Converter<Object,Object>) converterDef;",
      "info" : "ReturnStatement[9330-9377]:ReturnStatement[9345-9392]"
    }, {
      "left" : "if (!(converterDef instanceof Class))",
      "right" : "if (!(converterDef instanceof Class))",
      "info" : "IfStatement[9396-9666]:IfStatement[9411-9681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9434-9666]:Block[9449-9681]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "info" : "ThrowStatement[9448-9656]:ThrowStatement[9463-9671]"
    }, {
      "left" : "Class<?> converterClass = (Class<?>)converterDef;",
      "right" : "Class<?> converterClass = (Class<?>)converterDef;",
      "info" : "VariableDeclarationStatement[9675-9724]:VariableDeclarationStatement[9690-9739]"
    }, {
      "left" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "right" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "info" : "IfStatement[9801-9923]:IfStatement[9816-9938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9887-9923]:Block[9902-9938]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9901-9913]:ReturnStatement[9916-9928]"
    }, {
      "left" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "right" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "info" : "IfStatement[9932-10161]:IfStatement[9947-10176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9987-10161]:Block[10002-10176]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "info" : "ThrowStatement[10001-10151]:ThrowStatement[10016-10166]"
    }, {
      "left" : "final MapperConfig<?> config = getConfig();",
      "right" : "final MapperConfig<?> config = getConfig();",
      "info" : "VariableDeclarationStatement[10170-10213]:VariableDeclarationStatement[10185-10228]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[10222-10279]:VariableDeclarationStatement[10237-10294]"
    }, {
      "left" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(config, annotated, converterClass);",
      "right" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(config, annotated, converterClass);",
      "info" : "VariableDeclarationStatement[10288-10388]:VariableDeclarationStatement[10303-10403]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[10397-10561]:IfStatement[10412-10576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10415-10561]:Block[10430-10576]"
    }, {
      "left" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    config.canOverrideAccessModifiers());",
      "right" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[10429-10551]:ExpressionStatement[10444-10566]"
    }, {
      "left" : "return (Converter<Object,Object>) conv;",
      "right" : "return (Converter<Object,Object>) conv;",
      "info" : "ReturnStatement[10570-10609]:ReturnStatement[10585-10624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11304-11373]:Block[11319-11388]"
    }, {
      "left" : "return reportBadDefinition(constructType(type), msg);",
      "right" : "return reportBadDefinition(constructType(type), msg);",
      "info" : "ReturnStatement[11314-11367]:ReturnStatement[11329-11382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11641-11760]:Block[11656-11775]"
    }, {
      "left" : "if (msgArgs.length > 0)",
      "right" : "if (msgArgs.length > 0)",
      "info" : "IfStatement[11651-11734]:IfStatement[11666-11749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11675-11734]:Block[11690-11749]"
    }, {
      "left" : "return String.format(msg, msgArgs);",
      "right" : "return String.format(msg, msgArgs);",
      "info" : "ReturnStatement[11689-11724]:ReturnStatement[11704-11739]"
    }, {
      "left" : "return msg;",
      "right" : "return msg;",
      "info" : "ReturnStatement[11743-11754]:ReturnStatement[11758-11769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11846-12114]:Block[11861-12129]"
    }, {
      "left" : "if (desc == null)",
      "right" : "if (desc == null)",
      "info" : "IfStatement[11856-11908]:IfStatement[11871-11923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11874-11908]:Block[11889-11923]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[11888-11898]:ReturnStatement[11903-11913]"
    }, {
      "left" : "if (desc.length() <= MAX_ERROR_STR_LEN)",
      "right" : "if (desc.length() <= MAX_ERROR_STR_LEN)",
      "info" : "IfStatement[11917-11993]:IfStatement[11932-12008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11957-11993]:Block[11972-12008]"
    }, {
      "left" : "return desc;",
      "right" : "return desc;",
      "info" : "ReturnStatement[11971-11983]:ReturnStatement[11986-11998]"
    }, {
      "left" : "return desc.substring(0, MAX_ERROR_STR_LEN) + \"]...[\" + desc.substring(desc.length() - MAX_ERROR_STR_LEN);",
      "right" : "return desc.substring(0, MAX_ERROR_STR_LEN) + \"]...[\" + desc.substring(desc.length() - MAX_ERROR_STR_LEN);",
      "info" : "ReturnStatement[12002-12108]:ReturnStatement[12017-12123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12198-12408]:Block[12213-12423]"
    }, {
      "left" : "if (desc == null)",
      "right" : "if (desc == null)",
      "info" : "IfStatement[12208-12265]:IfStatement[12223-12280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12226-12265]:Block[12241-12280]"
    }, {
      "left" : "return \"[N/A]\";",
      "right" : "return \"[N/A]\";",
      "info" : "ReturnStatement[12240-12255]:ReturnStatement[12255-12270]"
    }, {
      "left" : "return String.format(\"\\\"%s\\\"\", _truncate(desc));",
      "right" : "return String.format(\"\\\"%s\\\"\", _truncate(desc));",
      "info" : "ReturnStatement[12354-12402]:ReturnStatement[12369-12417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12512-12625]:Block[12527-12640]"
    }, {
      "left" : "if (extra == null)",
      "right" : "if (extra == null)",
      "info" : "IfStatement[12522-12580]:IfStatement[12537-12595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12541-12580]:Block[12556-12595]"
    }, {
      "left" : "return msgBase;",
      "right" : "return msgBase;",
      "info" : "ReturnStatement[12555-12570]:ReturnStatement[12570-12585]"
    }, {
      "left" : "return msgBase + \": \" + extra;",
      "right" : "return msgBase + \": \" + extra;",
      "info" : "ReturnStatement[12589-12619]:ReturnStatement[12604-12634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12701-12886]:Block[12716-12901]"
    }, {
      "left" : "if (desc == null)",
      "right" : "if (desc == null)",
      "info" : "IfStatement[12711-12768]:IfStatement[12726-12783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12729-12768]:Block[12744-12783]"
    }, {
      "left" : "return \"[N/A]\";",
      "right" : "return \"[N/A]\";",
      "info" : "ReturnStatement[12743-12758]:ReturnStatement[12758-12773]"
    }, {
      "left" : "return _truncate(desc);",
      "right" : "return _truncate(desc);",
      "info" : "ReturnStatement[12857-12880]:ReturnStatement[12872-12895]"
    } ]
  },
  "interFileMappings" : { }
}