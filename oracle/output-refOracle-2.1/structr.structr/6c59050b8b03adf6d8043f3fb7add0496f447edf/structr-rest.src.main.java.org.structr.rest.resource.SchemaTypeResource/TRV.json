{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected Class entityClass = null;",
      "right" : "protected Class entityClass = null;",
      "info" : "FieldDeclaration[2427-2462]:FieldDeclaration[2401-2436]"
    }, {
      "left" : "protected String rawType = null;",
      "right" : "protected String rawType = null;",
      "info" : "FieldDeclaration[2464-2496]:FieldDeclaration[2438-2470]"
    }, {
      "left" : "protected HttpServletRequest request = null;",
      "right" : "protected HttpServletRequest request = null;",
      "info" : "FieldDeclaration[2498-2542]:FieldDeclaration[2472-2516]"
    }, {
      "left" : "protected TypeResource typeResource = null;",
      "right" : "protected TypeResource typeResource = null;",
      "info" : "FieldDeclaration[2544-2587]:FieldDeclaration[2518-2561]"
    }, {
      "left" : "private String propertyView = null;",
      "right" : "private String propertyView = null;",
      "info" : "FieldDeclaration[2589-2624]:FieldDeclaration[2563-2598]"
    }, {
      "left" : "public SchemaTypeResource(SecurityContext securityContext, TypeResource typeResource)",
      "right" : "public SchemaTypeResource(SecurityContext securityContext, TypeResource typeResource)",
      "info" : "MethodDeclaration[2700-2912]:MethodDeclaration[2674-2886]"
    }, {
      "left" : "public boolean checkAndConfigure(String part, SecurityContext securityContext, HttpServletRequest request) throws FrameworkException",
      "right" : "public boolean checkAndConfigure(String part, SecurityContext securityContext, HttpServletRequest request) throws FrameworkException",
      "info" : "MethodDeclaration[2915-3080]:MethodDeclaration[2889-3054]"
    }, {
      "left" : "public Result doGet(PropertyKey sortKey, boolean sortDescending, int pageSize, int page, String offsetId) throws FrameworkException",
      "right" : "public Result doGet(PropertyKey sortKey, boolean sortDescending, int pageSize, int page, String offsetId) throws FrameworkException",
      "info" : "MethodDeclaration[3083-6031]:MethodDeclaration[3057-6005]"
    }, {
      "left" : "public RestMethodResult doPost(Map<String, Object> propertySet) throws FrameworkException",
      "right" : "public RestMethodResult doPost(Map<String, Object> propertySet) throws FrameworkException",
      "info" : "MethodDeclaration[6034-6179]:MethodDeclaration[6008-6153]"
    }, {
      "left" : "public Resource tryCombineWith(Resource next) throws FrameworkException",
      "right" : "public Resource tryCombineWith(Resource next) throws FrameworkException",
      "info" : "MethodDeclaration[6182-6400]:MethodDeclaration[6156-6374]"
    }, {
      "left" : "public String getUriPart()",
      "right" : "public String getUriPart()",
      "info" : "MethodDeclaration[6476-6538]:MethodDeclaration[6450-6512]"
    }, {
      "left" : "public String getRawType()",
      "right" : "public String getRawType()",
      "info" : "MethodDeclaration[6541-6592]:MethodDeclaration[6515-6566]"
    }, {
      "left" : "public Class getEntityClass()",
      "right" : "public Class getEntityClass()",
      "info" : "MethodDeclaration[6595-6664]:MethodDeclaration[6569-6638]"
    }, {
      "left" : "public String getResourceSignature()",
      "right" : "public String getResourceSignature()",
      "info" : "MethodDeclaration[6667-6836]:MethodDeclaration[6641-6810]"
    }, {
      "left" : "public boolean isCollectionResource()",
      "right" : "public boolean isCollectionResource()",
      "info" : "MethodDeclaration[6839-6909]:MethodDeclaration[6813-6883]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2786-2912]:Block[2760-2886]"
    }, {
      "left" : "this.securityContext = securityContext;",
      "right" : "this.securityContext = securityContext;",
      "info" : "ExpressionStatement[2790-2829]:ExpressionStatement[2764-2803]"
    }, {
      "left" : "this.typeResource = typeResource;",
      "right" : "this.typeResource = typeResource;",
      "info" : "ExpressionStatement[2832-2865]:ExpressionStatement[2806-2839]"
    }, {
      "left" : "this.rawType = typeResource.getRawType();",
      "right" : "this.rawType = typeResource.getRawType();",
      "info" : "ExpressionStatement[2868-2909]:ExpressionStatement[2842-2883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3059-3080]:Block[3033-3054]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[3064-3076]:ReturnStatement[3038-3050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3226-6031]:Block[3200-6005]"
    }, {
      "left" : "List<GraphObjectMap> resultList = new LinkedList<>();",
      "right" : "List<GraphObjectMap> resultList = new LinkedList<>();",
      "info" : "VariableDeclarationStatement[3231-3284]:VariableDeclarationStatement[3205-3258]"
    }, {
      "left" : "Class type = typeResource.getEntityClass();",
      "right" : "Class type = typeResource.getEntityClass();",
      "info" : "VariableDeclarationStatement[3325-3368]:VariableDeclarationStatement[3299-3342]"
    }, {
      "left" : "if (type != null)",
      "right" : "if (type != null)",
      "info" : "IfStatement[3371-5960]:IfStatement[3345-5934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3389-5960]:Block[3363-5934]"
    }, {
      "left" : "SchemaNode schemaNode = null;",
      "right" : "SchemaNode schemaNode = null;",
      "info" : "VariableDeclarationStatement[3395-3424]:VariableDeclarationStatement[3369-3398]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3428-3741]:TryStatement[3402-3715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3432-3552]:Block[3406-3526]"
    }, {
      "left" : "schemaNode = StructrApp.getInstance().nodeQuery(SchemaNode.class).andName(type.getSimpleName()).getFirst();",
      "right" : "schemaNode = StructrApp.getInstance().nodeQuery(SchemaNode.class).andName(type.getSimpleName()).getFirst();",
      "info" : "ExpressionStatement[3439-3546]:ExpressionStatement[3413-3520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3583-3741]:Block[3557-3715]"
    }, {
      "left" : "Logger.getLogger(SchemaTypeResource.class.getName()).log(Level.SEVERE, \"Error looking up SchemaNode - cannot display labels for properties!\", ex);",
      "right" : "Logger.getLogger(SchemaTypeResource.class.getName()).log(Level.SEVERE, \"Error looking up SchemaNode - cannot display labels for properties!\", ex);",
      "info" : "ExpressionStatement[3590-3736]:ExpressionStatement[3564-3710]"
    }, {
      "left" : "if (propertyView != null)",
      "right" : "if (propertyView != null)",
      "info" : "IfStatement[3746-5955]:IfStatement[3720-5929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3772-4188]:Block[3746-4162]"
    }, {
      "left" : "for (final Map.Entry<String, Object> entry : getPropertiesForView(type, propertyView, schemaNode).entrySet())",
      "right" : "for (final Map.Entry<String, Object> entry : getPropertiesForView(type, propertyView, schemaNode).entrySet())",
      "info" : "EnhancedForStatement[3779-4182]:EnhancedForStatement[3753-4156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3889-4182]:Block[3863-4156]"
    }, {
      "left" : "final GraphObjectMap property = new GraphObjectMap();",
      "right" : "final GraphObjectMap property = new GraphObjectMap();",
      "info" : "VariableDeclarationStatement[3897-3950]:VariableDeclarationStatement[3871-3924]"
    }, {
      "left" : "for (final Map.Entry<String, Object> prop : ((Map<String, Object>) entry.getValue()).entrySet())",
      "right" : "for (final Map.Entry<String, Object> prop : ((Map<String, Object>) entry.getValue()).entrySet())",
      "info" : "EnhancedForStatement[3957-4144]:EnhancedForStatement[3931-4118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4054-4144]:Block[4028-4118]"
    }, {
      "left" : "property.setProperty(new GenericProperty(prop.getKey()), prop.getValue());",
      "right" : "property.setProperty(new GenericProperty(prop.getKey()), prop.getValue());",
      "info" : "ExpressionStatement[4063-4137]:ExpressionStatement[4037-4111]"
    }, {
      "left" : "resultList.add(property);",
      "right" : "resultList.add(property);",
      "info" : "ExpressionStatement[4151-4176]:ExpressionStatement[4125-4150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4194-5955]:Block[4168-5929]"
    }, {
      "left" : "final GraphObjectMap schema = new GraphObjectMap();",
      "right" : "final GraphObjectMap schema = new GraphObjectMap();",
      "info" : "VariableDeclarationStatement[4201-4252]:VariableDeclarationStatement[4175-4226]"
    }, {
      "left" : "resultList.add(schema);",
      "right" : "resultList.add(schema);",
      "info" : "ExpressionStatement[4258-4281]:ExpressionStatement[4232-4255]"
    }, {
      "left" : "String url = \"/\".concat(CaseHelper.toUnderscore(rawType, false));",
      "right" : "String url = \"/\".concat(CaseHelper.toUnderscore(rawType, false));",
      "info" : "VariableDeclarationStatement[4287-4352]:VariableDeclarationStatement[4261-4326]"
    }, {
      "left" : "schema.setProperty(new StringProperty(\"url\"), url);",
      "right" : "schema.setProperty(new StringProperty(\"url\"), url);",
      "info" : "ExpressionStatement[4358-4409]:ExpressionStatement[4332-4383]"
    }, {
      "left" : "schema.setProperty(new StringProperty(\"type\"), type.getSimpleName());",
      "right" : "schema.setProperty(new StringProperty(\"type\"), type.getSimpleName());",
      "info" : "ExpressionStatement[4414-4483]:ExpressionStatement[4388-4457]"
    }, {
      "left" : "schema.setProperty(new StringProperty(\"className\"), type.getName());",
      "right" : "schema.setProperty(new StringProperty(\"className\"), type.getName());",
      "info" : "ExpressionStatement[4488-4556]:ExpressionStatement[4462-4530]"
    }, {
      "left" : "schema.setProperty(new BooleanProperty(\"isRel\"), AbstractRelationship.class.isAssignableFrom(type));",
      "right" : "schema.setProperty(new BooleanProperty(\"isRel\"), AbstractRelationship.class.isAssignableFrom(type));",
      "info" : "ExpressionStatement[4561-4661]:ExpressionStatement[4535-4635]"
    }, {
      "left" : "schema.setProperty(new LongProperty(\"flags\"), SecurityContext.getResourceFlags(rawType));",
      "right" : "schema.setProperty(new LongProperty(\"flags\"), SecurityContext.getResourceFlags(rawType));",
      "info" : "ExpressionStatement[4666-4755]:ExpressionStatement[4640-4729]"
    }, {
      "left" : "if (schemaNode != null)",
      "right" : "if (schemaNode != null)",
      "info" : "IfStatement[4761-5566]:IfStatement[4735-5540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4785-5566]:Block[4759-5540]"
    }, {
      "left" : "final List<SchemaNodeLocalization> nodeLocalizations = schemaNode.localizations.getProperty(securityContext, schemaNode, false);",
      "right" : "final List<SchemaNodeLocalization> nodeLocalizations = schemaNode.localizations.getProperty(securityContext, schemaNode, false);",
      "info" : "VariableDeclarationStatement[4792-4920]:VariableDeclarationStatement[4766-4894]"
    }, {
      "left" : "final List<GraphObjectMap> localizationsMap = new ArrayList<>(nodeLocalizations.size());",
      "right" : "final List<GraphObjectMap> localizationsMap = new ArrayList<>(nodeLocalizations.size());",
      "info" : "VariableDeclarationStatement[4926-5014]:VariableDeclarationStatement[4900-4988]"
    }, {
      "left" : "for (final SchemaNodeLocalization loc : nodeLocalizations)",
      "right" : "for (final SchemaNodeLocalization loc : nodeLocalizations)",
      "info" : "EnhancedForStatement[5021-5478]:EnhancedForStatement[4995-5452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5080-5478]:Block[5054-5452]"
    }, {
      "left" : "final GraphObjectMap tmpMap = new GraphObjectMap();",
      "right" : "final GraphObjectMap tmpMap = new GraphObjectMap();",
      "info" : "VariableDeclarationStatement[5089-5140]:VariableDeclarationStatement[5063-5114]"
    }, {
      "left" : "tmpMap.setProperty(new UuidProperty(), loc.getProperty(SchemaNodeLocalization.id));",
      "right" : "tmpMap.setProperty(new UuidProperty(), loc.getProperty(SchemaNodeLocalization.id));",
      "info" : "ExpressionStatement[5147-5230]:ExpressionStatement[5121-5204]"
    }, {
      "left" : "tmpMap.setProperty(new StringProperty(\"locale\"), loc.getProperty(SchemaNodeLocalization.locale));",
      "right" : "tmpMap.setProperty(new StringProperty(\"locale\"), loc.getProperty(SchemaNodeLocalization.locale));",
      "info" : "ExpressionStatement[5237-5334]:ExpressionStatement[5211-5308]"
    }, {
      "left" : "tmpMap.setProperty(new StringProperty(\"name\"), loc.getProperty(SchemaNodeLocalization.name));",
      "right" : "tmpMap.setProperty(new StringProperty(\"name\"), loc.getProperty(SchemaNodeLocalization.name));",
      "info" : "ExpressionStatement[5341-5434]:ExpressionStatement[5315-5408]"
    }, {
      "left" : "localizationsMap.add(tmpMap);",
      "right" : "localizationsMap.add(tmpMap);",
      "info" : "ExpressionStatement[5441-5470]:ExpressionStatement[5415-5444]"
    }, {
      "left" : "schema.setProperty(new GenericProperty(\"localizations\"), localizationsMap);",
      "right" : "schema.setProperty(new GenericProperty(\"localizations\"), localizationsMap);",
      "info" : "ExpressionStatement[5485-5560]:ExpressionStatement[5459-5534]"
    }, {
      "left" : "Set<String> propertyViews = new LinkedHashSet<>(StructrApp.getConfiguration().getPropertyViews());",
      "right" : "Set<String> propertyViews = new LinkedHashSet<>(StructrApp.getConfiguration().getPropertyViews());",
      "info" : "VariableDeclarationStatement[5572-5670]:VariableDeclarationStatement[5546-5644]"
    }, {
      "left" : "Map<String, Map<String, Object>> views = new TreeMap();",
      "right" : "Map<String, Map<String, Object>> views = new TreeMap();",
      "info" : "VariableDeclarationStatement[5716-5771]:VariableDeclarationStatement[5690-5745]"
    }, {
      "left" : "schema.setProperty(new GenericProperty(\"views\"), views);",
      "right" : "schema.setProperty(new GenericProperty(\"views\"), views);",
      "info" : "ExpressionStatement[5776-5832]:ExpressionStatement[5750-5806]"
    }, {
      "left" : "for (String view : propertyViews)",
      "right" : "for (String view : propertyViews)",
      "info" : "EnhancedForStatement[5838-5949]:EnhancedForStatement[5812-5923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5872-5949]:Block[5846-5923]"
    }, {
      "left" : "views.put(view, getPropertiesForView(type, view, schemaNode));",
      "right" : "views.put(view, getPropertiesForView(type, view, schemaNode));",
      "info" : "ExpressionStatement[5880-5942]:ExpressionStatement[5854-5916]"
    }, {
      "left" : "return new Result(resultList, resultList.size(), false, false);",
      "right" : "return new Result(resultList, resultList.size(), false, false);",
      "info" : "ReturnStatement[5964-6027]:ReturnStatement[5938-6001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6135-6179]:Block[6109-6153]"
    }, {
      "left" : "throw new IllegalMethodException();",
      "right" : "throw new IllegalMethodException();",
      "info" : "ThrowStatement[6140-6175]:ThrowStatement[6114-6149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6265-6400]:Block[6239-6374]"
    }, {
      "left" : "if (next instanceof ViewFilterResource)",
      "right" : "if (next instanceof ViewFilterResource)",
      "info" : "IfStatement[6270-6381]:IfStatement[6244-6355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6310-6381]:Block[6284-6355]"
    }, {
      "left" : "propertyView = ((ViewFilterResource) next).getPropertyView();",
      "right" : "propertyView = ((ViewFilterResource) next).getPropertyView();",
      "info" : "ExpressionStatement[6316-6377]:ExpressionStatement[6290-6351]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[6385-6397]:ReturnStatement[6359-6371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6514-6538]:Block[6488-6512]"
    }, {
      "left" : "return rawType;",
      "right" : "return rawType;",
      "info" : "ReturnStatement[6519-6534]:ReturnStatement[6493-6508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6568-6592]:Block[6542-6566]"
    }, {
      "left" : "return rawType;",
      "right" : "return rawType;",
      "info" : "ReturnStatement[6573-6588]:ReturnStatement[6547-6562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6636-6664]:Block[6610-6638]"
    }, {
      "left" : "return entityClass;",
      "right" : "return entityClass;",
      "info" : "ReturnStatement[6641-6660]:ReturnStatement[6615-6634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6715-6836]:Block[6689-6810]"
    }, {
      "left" : "return SchemaResource.UriPart._schema.name().concat(\"/\").concat(SchemaHelper.normalizeEntityName(getUriPart()));",
      "right" : "return SchemaResource.UriPart._schema.name().concat(\"/\").concat(SchemaHelper.normalizeEntityName(getUriPart()));",
      "info" : "ReturnStatement[6720-6832]:ReturnStatement[6694-6806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6888-6909]:Block[6862-6883]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6893-6905]:ReturnStatement[6867-6879]"
    } ]
  },
  "interFileMappings" : { }
}