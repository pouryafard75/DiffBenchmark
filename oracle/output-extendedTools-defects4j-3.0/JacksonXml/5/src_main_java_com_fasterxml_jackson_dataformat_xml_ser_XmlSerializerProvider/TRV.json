{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1119-1167]:FieldDeclaration[1119-1167]"
    }, {
      "left" : "protected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");",
      "right" : "protected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");",
      "info" : "FieldDeclaration[1173-1413]:FieldDeclaration[1173-1413]"
    }, {
      "left" : "protected final XmlRootNameLookup _rootNameLookup;",
      "right" : "protected final XmlRootNameLookup _rootNameLookup;",
      "info" : "FieldDeclaration[1419-1469]:FieldDeclaration[1419-1469]"
    }, {
      "left" : "public XmlSerializerProvider(XmlRootNameLookup rootNames)",
      "right" : "public XmlSerializerProvider(XmlRootNameLookup rootNames)",
      "info" : "MethodDeclaration[1475-1598]:MethodDeclaration[1475-1598]"
    }, {
      "left" : "public XmlSerializerProvider(XmlSerializerProvider src,\n            SerializationConfig config, SerializerFactory f)",
      "right" : "public XmlSerializerProvider(XmlSerializerProvider src,\n            SerializationConfig config, SerializerFactory f)",
      "info" : "MethodDeclaration[1604-1811]:MethodDeclaration[1604-1811]"
    }, {
      "left" : "public DefaultSerializerProvider copy()",
      "right" : "public DefaultSerializerProvider copy()",
      "info" : "MethodDeclaration[2352-2461]:MethodDeclaration[2356-2465]"
    }, {
      "left" : "public DefaultSerializerProvider createInstance(SerializationConfig config,\n            SerializerFactory jsf)",
      "right" : "public DefaultSerializerProvider createInstance(SerializationConfig config,\n            SerializerFactory jsf)",
      "info" : "MethodDeclaration[2467-2660]:MethodDeclaration[2471-2664]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
      "info" : "MethodDeclaration[2666-3953]:MethodDeclaration[2670-3957]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> ser) throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> ser) throws IOException",
      "info" : "MethodDeclaration[3977-5283]:MethodDeclaration[3981-5287]"
    }, {
      "left" : "protected void _serializeXmlNull(JsonGenerator jgen) throws IOException",
      "right" : "protected void _serializeXmlNull(JsonGenerator jgen) throws IOException",
      "info" : "MethodDeclaration[5289-5787]:MethodDeclaration[5293-5791]"
    }, {
      "left" : "protected void _startRootArray(ToXmlGenerator xgen, QName rootName) throws IOException",
      "right" : "protected void _startRootArray(ToXmlGenerator xgen, QName rootName) throws IOException",
      "info" : "MethodDeclaration[5797-6040]:MethodDeclaration[5801-6044]"
    }, {
      "left" : "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException",
      "right" : "protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException",
      "info" : "MethodDeclaration[6050-7110]:MethodDeclaration[6054-7114]"
    }, {
      "left" : "protected QName _rootNameFromConfig()",
      "right" : "protected QName _rootNameFromConfig()",
      "info" : "MethodDeclaration[7116-7480]:MethodDeclaration[7120-7484]"
    }, {
      "left" : "protected ToXmlGenerator _asXmlGenerator(JsonGenerator gen)\n        throws JsonMappingException",
      "right" : "protected ToXmlGenerator _asXmlGenerator(JsonGenerator gen)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7486-8067]:MethodDeclaration[7490-8071]"
    }, {
      "left" : "protected IOException _wrapAsIOE(JsonGenerator g, Exception e)",
      "right" : "protected IOException _wrapAsIOE(JsonGenerator g, Exception e)",
      "info" : "MethodDeclaration[8077-8424]:MethodDeclaration[8081-8428]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1475-1481]:Modifier[1475-1481]"
    }, {
      "left" : "XmlSerializerProvider",
      "right" : "XmlSerializerProvider",
      "info" : "SimpleName[1482-1503]:SimpleName[1482-1503]"
    }, {
      "left" : "XmlRootNameLookup rootNames",
      "right" : "XmlRootNameLookup rootNames",
      "info" : "SingleVariableDeclaration[1504-1531]:SingleVariableDeclaration[1504-1531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1537-1598]:Block[1537-1598]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[1547-1555]:SuperConstructorInvocation[1547-1555]"
    }, {
      "left" : "_rootNameLookup = rootNames;",
      "right" : "_rootNameLookup = rootNames;",
      "info" : "ExpressionStatement[1564-1592]:ExpressionStatement[1564-1592]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1604-1610]:Modifier[1604-1610]"
    }, {
      "left" : "XmlSerializerProvider",
      "right" : "XmlSerializerProvider",
      "info" : "SimpleName[1611-1632]:SimpleName[1611-1632]"
    }, {
      "left" : "XmlSerializerProvider src",
      "right" : "XmlSerializerProvider src",
      "info" : "SingleVariableDeclaration[1633-1658]:SingleVariableDeclaration[1633-1658]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[1672-1698]:SingleVariableDeclaration[1672-1698]"
    }, {
      "left" : "SerializerFactory f",
      "right" : "SerializerFactory f",
      "info" : "SingleVariableDeclaration[1700-1719]:SingleVariableDeclaration[1700-1719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1725-1811]:Block[1725-1811]"
    }, {
      "left" : "super(src, config, f);",
      "right" : "super(src, config, f);",
      "info" : "SuperConstructorInvocation[1735-1757]:SuperConstructorInvocation[1735-1757]"
    }, {
      "left" : "_rootNameLookup  = src._rootNameLookup;",
      "right" : "_rootNameLookup  = src._rootNameLookup;",
      "info" : "ExpressionStatement[1766-1805]:ExpressionStatement[1766-1805]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2352-2361]:MarkerAnnotation[2356-2365]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2366-2372]:Modifier[2370-2376]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[2373-2398]:SimpleType[2377-2402]"
    }, {
      "left" : "copy",
      "right" : "copy",
      "info" : "SimpleName[2399-2403]:SimpleName[2403-2407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2406-2461]:Block[2410-2465]"
    }, {
      "left" : "return new XmlSerializerProvider(this);",
      "right" : "return new XmlSerializerProvider(this);",
      "info" : "ReturnStatement[2416-2455]:ReturnStatement[2420-2459]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2467-2476]:MarkerAnnotation[2471-2480]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2481-2487]:Modifier[2485-2491]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[2488-2513]:SimpleType[2492-2517]"
    }, {
      "left" : "createInstance",
      "right" : "createInstance",
      "info" : "SimpleName[2514-2528]:SimpleName[2518-2532]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[2529-2555]:SingleVariableDeclaration[2533-2559]"
    }, {
      "left" : "SerializerFactory jsf",
      "right" : "SerializerFactory jsf",
      "info" : "SingleVariableDeclaration[2569-2590]:SingleVariableDeclaration[2573-2594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2592-2660]:Block[2596-2664]"
    }, {
      "left" : "return new XmlSerializerProvider(this, config, jsf);",
      "right" : "return new XmlSerializerProvider(this, config, jsf);",
      "info" : "ReturnStatement[2602-2654]:ReturnStatement[2606-2658]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[2666-2695]:SingleMemberAnnotation[2670-2699]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2700-2709]:MarkerAnnotation[2704-2713]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2714-2720]:Modifier[2718-2724]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2721-2725]:PrimitiveType[2725-2729]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[2726-2740]:SimpleName[2730-2744]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[2741-2758]:SingleVariableDeclaration[2745-2762]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[2760-2772]:SingleVariableDeclaration[2764-2776]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2781-2792]:SimpleType[2785-2796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2797-3953]:Block[2801-3957]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[2807-2893]:IfStatement[2811-2897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2826-2893]:Block[2830-2897]"
    }, {
      "left" : "_serializeXmlNull(gen);",
      "right" : "_serializeXmlNull(gen);",
      "info" : "ExpressionStatement[2840-2863]:ExpressionStatement[2844-2867]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[2876-2883]:ReturnStatement[2880-2887]"
    }, {
      "left" : "final Class<?> cls = value.getClass();",
      "right" : "final Class<?> cls = value.getClass();",
      "info" : "VariableDeclarationStatement[2902-2940]:VariableDeclarationStatement[2906-2944]"
    }, {
      "left" : "final boolean asArray;",
      "right" : "final boolean asArray;",
      "info" : "VariableDeclarationStatement[2949-2971]:VariableDeclarationStatement[2953-2975]"
    }, {
      "left" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "right" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "info" : "VariableDeclarationStatement[2980-3029]:VariableDeclarationStatement[2984-3033]"
    }, {
      "left" : "if (xgen == null)",
      "right" : "if (xgen == null)",
      "info" : "IfStatement[3038-3502]:IfStatement[3042-3506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3056-3124]:Block[3060-3128]"
    }, {
      "left" : "asArray = false;",
      "right" : "asArray = false;",
      "info" : "ExpressionStatement[3098-3114]:ExpressionStatement[3102-3118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3130-3502]:Block[3134-3506]"
    }, {
      "left" : "QName rootName = _rootNameFromConfig();",
      "right" : "QName rootName = _rootNameFromConfig();",
      "info" : "VariableDeclarationStatement[3144-3183]:VariableDeclarationStatement[3148-3187]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[3196-3304]:IfStatement[3200-3308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3218-3304]:Block[3222-3308]"
    }, {
      "left" : "rootName = _rootNameLookup.findRootName(cls, _config);",
      "right" : "rootName = _rootNameLookup.findRootName(cls, _config);",
      "info" : "ExpressionStatement[3236-3290]:ExpressionStatement[3240-3294]"
    }, {
      "left" : "_initWithRootName(xgen, rootName);",
      "right" : "_initWithRootName(xgen, rootName);",
      "info" : "ExpressionStatement[3317-3351]:ExpressionStatement[3321-3355]"
    }, {
      "left" : "asArray = TypeUtil.isIndexedType(cls);",
      "right" : "asArray = TypeUtil.isIndexedType(cls);",
      "info" : "ExpressionStatement[3364-3402]:ExpressionStatement[3368-3406]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[3415-3492]:IfStatement[3419-3496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3428-3492]:Block[3432-3496]"
    }, {
      "left" : "_startRootArray(xgen, rootName);",
      "right" : "_startRootArray(xgen, rootName);",
      "info" : "ExpressionStatement[3446-3478]:ExpressionStatement[3450-3482]"
    }, {
      "left" : "final JsonSerializer<Object> ser = findTypedValueSerializer(cls, true, null);",
      "right" : "final JsonSerializer<Object> ser = findTypedValueSerializer(cls, true, null);",
      "info" : "VariableDeclarationStatement[3563-3640]:VariableDeclarationStatement[3567-3644]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3649-3834]:TryStatement[3653-3838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3653-3709]:Block[3657-3713]"
    }, {
      "left" : "ser.serialize(value, gen, this);",
      "right" : "ser.serialize(value, gen, this);",
      "info" : "ExpressionStatement[3667-3699]:ExpressionStatement[3671-3703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3730-3834]:Block[3734-3838]"
    }, {
      "left" : "throw _wrapAsIOE(gen, e);",
      "right" : "throw _wrapAsIOE(gen, e);",
      "info" : "ThrowStatement[3799-3824]:ThrowStatement[3803-3828]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[3889-3947]:IfStatement[3893-3951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3902-3947]:Block[3906-3951]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[3916-3937]:ExpressionStatement[3920-3941]"
    }, {
      "left" : "@SuppressWarnings(\"resource\")",
      "right" : "@SuppressWarnings(\"resource\")",
      "info" : "SingleMemberAnnotation[3977-4006]:SingleMemberAnnotation[3981-4010]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4011-4020]:MarkerAnnotation[4015-4024]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4025-4031]:Modifier[4029-4035]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4032-4036]:PrimitiveType[4036-4040]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[4037-4051]:SimpleName[4041-4055]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[4052-4069]:SingleVariableDeclaration[4056-4073]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[4071-4083]:SingleVariableDeclaration[4075-4087]"
    }, {
      "left" : "JavaType rootType",
      "right" : "JavaType rootType",
      "info" : "SingleVariableDeclaration[4085-4102]:SingleVariableDeclaration[4089-4106]"
    }, {
      "left" : "JsonSerializer<Object> ser",
      "right" : "JsonSerializer<Object> ser",
      "info" : "SingleVariableDeclaration[4116-4142]:SingleVariableDeclaration[4120-4146]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4151-4162]:SimpleType[4155-4166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4167-5283]:Block[4171-5287]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[4177-4263]:IfStatement[4181-4267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4196-4263]:Block[4200-4267]"
    }, {
      "left" : "_serializeXmlNull(gen);",
      "right" : "_serializeXmlNull(gen);",
      "info" : "ExpressionStatement[4210-4233]:ExpressionStatement[4214-4237]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4246-4253]:ReturnStatement[4250-4257]"
    }, {
      "left" : "final boolean asArray;",
      "right" : "final boolean asArray;",
      "info" : "VariableDeclarationStatement[4272-4294]:VariableDeclarationStatement[4276-4298]"
    }, {
      "left" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "right" : "final ToXmlGenerator xgen = _asXmlGenerator(gen);",
      "info" : "VariableDeclarationStatement[4303-4352]:VariableDeclarationStatement[4307-4356]"
    }, {
      "left" : "if (xgen == null)",
      "right" : "if (xgen == null)",
      "info" : "IfStatement[4361-4835]:IfStatement[4365-4839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4379-4447]:Block[4383-4451]"
    }, {
      "left" : "asArray = false;",
      "right" : "asArray = false;",
      "info" : "ExpressionStatement[4421-4437]:ExpressionStatement[4425-4441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4453-4835]:Block[4457-4839]"
    }, {
      "left" : "QName rootName = _rootNameFromConfig();",
      "right" : "QName rootName = _rootNameFromConfig();",
      "info" : "VariableDeclarationStatement[4467-4506]:VariableDeclarationStatement[4471-4510]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[4519-4632]:IfStatement[4523-4636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4541-4632]:Block[4545-4636]"
    }, {
      "left" : "rootName = _rootNameLookup.findRootName(rootType, _config);",
      "right" : "rootName = _rootNameLookup.findRootName(rootType, _config);",
      "info" : "ExpressionStatement[4559-4618]:ExpressionStatement[4563-4622]"
    }, {
      "left" : "_initWithRootName(xgen, rootName);",
      "right" : "_initWithRootName(xgen, rootName);",
      "info" : "ExpressionStatement[4645-4679]:ExpressionStatement[4649-4683]"
    }, {
      "left" : "asArray = TypeUtil.isIndexedType(rootType);",
      "right" : "asArray = TypeUtil.isIndexedType(rootType);",
      "info" : "ExpressionStatement[4692-4735]:ExpressionStatement[4696-4739]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[4748-4825]:IfStatement[4752-4829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4761-4825]:Block[4765-4829]"
    }, {
      "left" : "_startRootArray(xgen, rootName);",
      "right" : "_startRootArray(xgen, rootName);",
      "info" : "ExpressionStatement[4779-4811]:ExpressionStatement[4783-4815]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[4844-4938]:IfStatement[4848-4942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4861-4938]:Block[4865-4942]"
    }, {
      "left" : "ser = findTypedValueSerializer(rootType, true, null);",
      "right" : "ser = findTypedValueSerializer(rootType, true, null);",
      "info" : "ExpressionStatement[4875-4928]:ExpressionStatement[4879-4932]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4990-5165]:TryStatement[4994-5169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4994-5050]:Block[4998-5054]"
    }, {
      "left" : "ser.serialize(value, gen, this);",
      "right" : "ser.serialize(value, gen, this);",
      "info" : "ExpressionStatement[5008-5040]:ExpressionStatement[5012-5044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5071-5165]:Block[5075-5169]"
    }, {
      "left" : "throw _wrapAsIOE(gen, e);",
      "right" : "throw _wrapAsIOE(gen, e);",
      "info" : "ThrowStatement[5130-5155]:ThrowStatement[5134-5159]"
    }, {
      "left" : "if (asArray)",
      "right" : "if (asArray)",
      "info" : "IfStatement[5219-5277]:IfStatement[5223-5281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5232-5277]:Block[5236-5281]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[5246-5267]:ExpressionStatement[5250-5271]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5289-5298]:Modifier[5293-5302]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5299-5303]:PrimitiveType[5303-5307]"
    }, {
      "left" : "_serializeXmlNull",
      "right" : "_serializeXmlNull",
      "info" : "SimpleName[5304-5321]:SimpleName[5308-5325]"
    }, {
      "left" : "JsonGenerator jgen",
      "right" : "JsonGenerator jgen",
      "info" : "SingleVariableDeclaration[5322-5340]:SingleVariableDeclaration[5326-5344]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5349-5360]:SimpleType[5353-5364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5365-5787]:Block[5369-5791]"
    }, {
      "left" : "QName rootName = _rootNameFromConfig();",
      "right" : "QName rootName = _rootNameFromConfig();",
      "info" : "VariableDeclarationStatement[5495-5534]:VariableDeclarationStatement[5499-5538]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[5543-5619]:IfStatement[5547-5623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5565-5619]:Block[5569-5623]"
    }, {
      "left" : "rootName = ROOT_NAME_FOR_NULL;",
      "right" : "rootName = ROOT_NAME_FOR_NULL;",
      "info" : "ExpressionStatement[5579-5609]:ExpressionStatement[5583-5613]"
    }, {
      "left" : "if (jgen instanceof ToXmlGenerator)",
      "right" : "if (jgen instanceof ToXmlGenerator)",
      "info" : "IfStatement[5628-5739]:IfStatement[5632-5743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5664-5739]:Block[5668-5743]"
    }, {
      "left" : "_initWithRootName((ToXmlGenerator) jgen, rootName);",
      "right" : "_initWithRootName((ToXmlGenerator) jgen, rootName);",
      "info" : "ExpressionStatement[5678-5729]:ExpressionStatement[5682-5733]"
    }, {
      "left" : "super.serializeValue(jgen, null);",
      "right" : "super.serializeValue(jgen, null);",
      "info" : "ExpressionStatement[5748-5781]:ExpressionStatement[5752-5785]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5797-5806]:Modifier[5801-5810]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5807-5811]:PrimitiveType[5811-5815]"
    }, {
      "left" : "_startRootArray",
      "right" : "_startRootArray",
      "info" : "SimpleName[5812-5827]:SimpleName[5816-5831]"
    }, {
      "left" : "ToXmlGenerator xgen",
      "right" : "ToXmlGenerator xgen",
      "info" : "SingleVariableDeclaration[5828-5847]:SingleVariableDeclaration[5832-5851]"
    }, {
      "left" : "QName rootName",
      "right" : "QName rootName",
      "info" : "SingleVariableDeclaration[5849-5863]:SingleVariableDeclaration[5853-5867]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5872-5883]:SimpleType[5876-5887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5888-6040]:Block[5892-6044]"
    }, {
      "left" : "xgen.writeStartObject();",
      "right" : "xgen.writeStartObject();",
      "info" : "ExpressionStatement[5898-5922]:ExpressionStatement[5902-5926]"
    }, {
      "left" : "xgen.writeFieldName(\"item\");",
      "right" : "xgen.writeFieldName(\"item\");",
      "info" : "ExpressionStatement[6006-6034]:ExpressionStatement[6010-6038]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6050-6059]:Modifier[6054-6063]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6060-6064]:PrimitiveType[6064-6068]"
    }, {
      "left" : "_initWithRootName",
      "right" : "_initWithRootName",
      "info" : "SimpleName[6065-6082]:SimpleName[6069-6086]"
    }, {
      "left" : "ToXmlGenerator xgen",
      "right" : "ToXmlGenerator xgen",
      "info" : "SingleVariableDeclaration[6083-6102]:SingleVariableDeclaration[6087-6106]"
    }, {
      "left" : "QName rootName",
      "right" : "QName rootName",
      "info" : "SingleVariableDeclaration[6104-6118]:SingleVariableDeclaration[6108-6122]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[6127-6138]:SimpleType[6131-6142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6143-7110]:Block[6147-7114]"
    }, {
      "left" : "if (!xgen.setNextNameIfMissing(rootName))",
      "right" : "if (!xgen.setNextNameIfMissing(rootName))",
      "info" : "IfStatement[6353-6550]:IfStatement[6357-6554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6395-6550]:Block[6399-6554]"
    }, {
      "left" : "if (xgen.inRoot())",
      "right" : "if (xgen.inRoot())",
      "info" : "IfStatement[6462-6540]:IfStatement[6466-6544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6481-6540]:Block[6485-6544]"
    }, {
      "left" : "xgen.setNextName(rootName);",
      "right" : "xgen.setNextName(rootName);",
      "info" : "ExpressionStatement[6499-6526]:ExpressionStatement[6503-6530]"
    }, {
      "left" : "xgen.initGenerator();",
      "right" : "xgen.initGenerator();",
      "info" : "ExpressionStatement[6559-6580]:ExpressionStatement[6563-6584]"
    }, {
      "left" : "String ns = rootName.getNamespaceURI();",
      "right" : "String ns = rootName.getNamespaceURI();",
      "info" : "VariableDeclarationStatement[6589-6628]:VariableDeclarationStatement[6593-6632]"
    }, {
      "left" : "if (ns != null && ns.length() > 0)",
      "right" : "if (ns != null && ns.length() > 0)",
      "info" : "IfStatement[6857-7104]:IfStatement[6861-7108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6892-7104]:Block[6896-7108]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6906-7094]:TryStatement[6910-7098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6910-6987]:Block[6914-6991]"
    }, {
      "left" : "xgen.getStaxWriter().setDefaultNamespace(ns);",
      "right" : "xgen.getStaxWriter().setDefaultNamespace(ns);",
      "info" : "ExpressionStatement[6928-6973]:ExpressionStatement[6932-6977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7017-7094]:Block[7021-7098]"
    }, {
      "left" : "StaxUtil.throwAsGenerationException(e, xgen);",
      "right" : "StaxUtil.throwAsGenerationException(e, xgen);",
      "info" : "ExpressionStatement[7035-7080]:ExpressionStatement[7039-7084]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7116-7125]:Modifier[7120-7129]"
    }, {
      "left" : "QName",
      "right" : "QName",
      "info" : "SimpleType[7126-7131]:SimpleType[7130-7135]"
    }, {
      "left" : "_rootNameFromConfig",
      "right" : "_rootNameFromConfig",
      "info" : "SimpleName[7132-7151]:SimpleName[7136-7155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7158-7480]:Block[7162-7484]"
    }, {
      "left" : "PropertyName name = _config.getFullRootName();",
      "right" : "PropertyName name = _config.getFullRootName();",
      "info" : "VariableDeclarationStatement[7168-7214]:VariableDeclarationStatement[7172-7218]"
    }, {
      "left" : "if (name == null)",
      "right" : "if (name == null)",
      "info" : "IfStatement[7223-7277]:IfStatement[7227-7281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7241-7277]:Block[7245-7281]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7255-7267]:ReturnStatement[7259-7271]"
    }, {
      "left" : "String ns = name.getNamespace();",
      "right" : "String ns = name.getNamespace();",
      "info" : "VariableDeclarationStatement[7286-7318]:VariableDeclarationStatement[7290-7322]"
    }, {
      "left" : "if (ns == null || ns.isEmpty())",
      "right" : "if (ns == null || ns.isEmpty())",
      "info" : "IfStatement[7327-7422]:IfStatement[7331-7426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7359-7422]:Block[7363-7426]"
    }, {
      "left" : "return new QName(name.getSimpleName());",
      "right" : "return new QName(name.getSimpleName());",
      "info" : "ReturnStatement[7373-7412]:ReturnStatement[7377-7416]"
    }, {
      "left" : "return new QName(ns, name.getSimpleName());",
      "right" : "return new QName(ns, name.getSimpleName());",
      "info" : "ReturnStatement[7431-7474]:ReturnStatement[7435-7478]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7486-7495]:Modifier[7490-7499]"
    }, {
      "left" : "ToXmlGenerator",
      "right" : "ToXmlGenerator",
      "info" : "SimpleType[7496-7510]:SimpleType[7500-7514]"
    }, {
      "left" : "_asXmlGenerator",
      "right" : "_asXmlGenerator",
      "info" : "SimpleName[7511-7526]:SimpleName[7515-7530]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[7527-7544]:SingleVariableDeclaration[7531-7548]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7561-7581]:SimpleType[7565-7585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7586-8067]:Block[7590-8071]"
    }, {
      "left" : "if (!(gen instanceof ToXmlGenerator))",
      "right" : "if (!(gen instanceof ToXmlGenerator))",
      "info" : "IfStatement[7679-8024]:IfStatement[7683-8028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7717-8024]:Block[7721-8028]"
    }, {
      "left" : "if (!(gen instanceof TokenBuffer))",
      "right" : "if (!(gen instanceof TokenBuffer))",
      "info" : "IfStatement[7757-7989]:IfStatement[7761-7993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7792-7989]:Block[7796-7993]"
    }, {
      "left" : "throw JsonMappingException.from(gen,\n                        \"XmlMapper does not with generators of type other than ToXmlGenerator; got: \"+gen.getClass().getName());",
      "right" : "throw JsonMappingException.from(gen,\n                        \"XmlMapper does not with generators of type other than ToXmlGenerator; got: \"+gen.getClass().getName());",
      "info" : "ThrowStatement[7810-7975]:ThrowStatement[7814-7979]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8002-8014]:ReturnStatement[8006-8018]"
    }, {
      "left" : "return (ToXmlGenerator) gen;",
      "right" : "return (ToXmlGenerator) gen;",
      "info" : "ReturnStatement[8033-8061]:ReturnStatement[8037-8065]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8077-8086]:Modifier[8081-8090]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[8087-8098]:SimpleType[8091-8102]"
    }, {
      "left" : "_wrapAsIOE",
      "right" : "_wrapAsIOE",
      "info" : "SimpleName[8099-8109]:SimpleName[8103-8113]"
    }, {
      "left" : "JsonGenerator g",
      "right" : "JsonGenerator g",
      "info" : "SingleVariableDeclaration[8110-8125]:SingleVariableDeclaration[8114-8129]"
    }, {
      "left" : "Exception e",
      "right" : "Exception e",
      "info" : "SingleVariableDeclaration[8127-8138]:SingleVariableDeclaration[8131-8142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8140-8424]:Block[8144-8428]"
    }, {
      "left" : "if (e instanceof IOException)",
      "right" : "if (e instanceof IOException)",
      "info" : "IfStatement[8150-8227]:IfStatement[8154-8231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8180-8227]:Block[8184-8231]"
    }, {
      "left" : "return (IOException) e;",
      "right" : "return (IOException) e;",
      "info" : "ReturnStatement[8194-8217]:ReturnStatement[8198-8221]"
    }, {
      "left" : "String msg = e.getMessage();",
      "right" : "String msg = e.getMessage();",
      "info" : "VariableDeclarationStatement[8236-8264]:VariableDeclarationStatement[8240-8268]"
    }, {
      "left" : "if (msg == null)",
      "right" : "if (msg == null)",
      "info" : "IfStatement[8273-8366]:IfStatement[8277-8370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8290-8366]:Block[8294-8370]"
    }, {
      "left" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "right" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "info" : "ExpressionStatement[8304-8356]:ExpressionStatement[8308-8360]"
    }, {
      "left" : "return new JsonMappingException(g, msg, e);",
      "right" : "return new JsonMappingException(g, msg, e);",
      "info" : "ReturnStatement[8375-8418]:ReturnStatement[8379-8422]"
    } ]
  },
  "interFileMappings" : { }
}