{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MavenProject",
      "right" : "MavenProject",
      "info" : "TypeDeclaration[1955-40182]:TypeDeclaration[1955-40512]"
    }, {
      "left" : "private static final Key<MavenArtifactIndex> DEPENDENCIES_CACHE_KEY = Key.create(\"MavenProject.DEPENDENCIES_CACHE_KEY\");",
      "right" : "private static final Key<MavenArtifactIndex> DEPENDENCIES_CACHE_KEY = Key.create(\"MavenProject.DEPENDENCIES_CACHE_KEY\");",
      "info" : "FieldDeclaration[1986-2106]:FieldDeclaration[1986-2106]"
    }, {
      "left" : "private static final Key<List<String>> FILTERS_CACHE_KEY = Key.create(\"MavenProject.FILTERS_CACHE_KEY\");",
      "right" : "private static final Key<List<String>> FILTERS_CACHE_KEY = Key.create(\"MavenProject.FILTERS_CACHE_KEY\");",
      "info" : "FieldDeclaration[2109-2213]:FieldDeclaration[2109-2213]"
    }, {
      "left" : "@NotNull private final VirtualFile myFile;",
      "right" : "@NotNull private final VirtualFile myFile;",
      "info" : "FieldDeclaration[2217-2259]:FieldDeclaration[2217-2259]"
    }, {
      "left" : "@NotNull private volatile State myState = new State();",
      "right" : "@NotNull private volatile State myState = new State();",
      "info" : "FieldDeclaration[2262-2316]:FieldDeclaration[2262-2316]"
    }, {
      "left" : "private static Map<String, String> COMPILER_LEVEL_TABLE = ContainerUtil.<String,String>immutableMapBuilder()\n    .put(\"1.1\", \"1.1\")\n    .put(\"1.2\", \"1.2\")\n    .put(\"1.3\", \"1.3\")\n    .put(\"1.4\", \"1.4\")\n    .put(\"1.5\", \"1.5\")\n    .put(\"5\", \"1.5\")\n    .put(\"1.6\", \"1.6\")\n    .put(\"6\", \"1.6\")\n    .put(\"1.7\", \"1.7\")\n    .put(\"7\", \"1.7\")\n    .put(\"1.8\", \"1.8\")\n    .put(\"8\", \"1.8\")\n    .build();",
      "right" : "private static Map<String, String> COMPILER_LEVEL_TABLE = ContainerUtil.<String,String>immutableMapBuilder()\n    .put(\"1.1\", \"1.1\")\n    .put(\"1.2\", \"1.2\")\n    .put(\"1.3\", \"1.3\")\n    .put(\"1.4\", \"1.4\")\n    .put(\"1.5\", \"1.5\")\n    .put(\"5\", \"1.5\")\n    .put(\"1.6\", \"1.6\")\n    .put(\"6\", \"1.6\")\n    .put(\"1.7\", \"1.7\")\n    .put(\"7\", \"1.7\")\n    .put(\"1.8\", \"1.8\")\n    .put(\"8\", \"1.8\")\n    .build();",
      "info" : "FieldDeclaration[2320-2710]:FieldDeclaration[2320-2710]"
    }, {
      "left" : "enum : ProcMode",
      "right" : "enum : ProcMode",
      "info" : "EnumDeclaration[2714-2753]:EnumDeclaration[2714-2753]"
    }, {
      "left" : "public static MavenProject read(DataInputStream in) throws IOException",
      "right" : "public static MavenProject read(DataInputStream in) throws IOException",
      "info" : "MethodDeclaration[2757-3627]:MethodDeclaration[2757-3627]"
    }, {
      "left" : "public void write(@NotNull DataOutputStream out) throws IOException",
      "right" : "public void write(@NotNull DataOutputStream out) throws IOException",
      "info" : "MethodDeclaration[3631-4068]:MethodDeclaration[3631-4068]"
    }, {
      "left" : "public MavenProject(@NotNull VirtualFile file)",
      "right" : "public MavenProject(@NotNull VirtualFile file)",
      "info" : "MethodDeclaration[4072-4143]:MethodDeclaration[4072-4143]"
    }, {
      "left" : "private MavenProjectChanges set(@NotNull MavenProjectReaderResult readerResult,\n                                  @NotNull MavenGeneralSettings settings,\n                                  boolean updateLastReadStamp,\n                                  boolean resetArtifacts,\n                                  boolean resetProfiles)",
      "right" : "private MavenProjectChanges set(@NotNull MavenProjectReaderResult readerResult,\n                                  @NotNull MavenGeneralSettings settings,\n                                  boolean updateLastReadStamp,\n                                  boolean resetArtifacts,\n                                  boolean resetProfiles)",
      "info" : "MethodDeclaration[4147-6336]:MethodDeclaration[4147-6336]"
    }, {
      "left" : "private MavenProjectChanges setState(State newState)",
      "right" : "private MavenProjectChanges setState(State newState)",
      "info" : "MethodDeclaration[6340-6506]:MethodDeclaration[6340-6506]"
    }, {
      "left" : "private static void doSetResolvedAttributes(State state,\n                                              MavenProjectReaderResult readerResult,\n                                              boolean reset)",
      "right" : "private static void doSetResolvedAttributes(State state,\n                                              MavenProjectReaderResult readerResult,\n                                              boolean reset)",
      "info" : "MethodDeclaration[6510-8617]:MethodDeclaration[6510-8617]"
    }, {
      "left" : "private MavenProjectChanges setFolders(MavenProjectReaderResult readerResult)",
      "right" : "private MavenProjectChanges setFolders(MavenProjectReaderResult readerResult)",
      "info" : "MethodDeclaration[8621-8815]:MethodDeclaration[8621-8815]"
    }, {
      "left" : "private static void doSetFolders(State newState, MavenProjectReaderResult readerResult)",
      "right" : "private static void doSetFolders(State newState, MavenProjectReaderResult readerResult)",
      "info" : "MethodDeclaration[8819-9209]:MethodDeclaration[8819-9209]"
    }, {
      "left" : "private static Map<String, String> collectModulePathsAndNames(MavenModel mavenModel, String baseDir)",
      "right" : "private static Map<String, String> collectModulePathsAndNames(MavenModel mavenModel, String baseDir)",
      "info" : "MethodDeclaration[9213-9636]:MethodDeclaration[9213-9636]"
    }, {
      "left" : "private static Map<String, String> collectModulesRelativePathsAndNames(MavenModel mavenModel)",
      "right" : "private static Map<String, String> collectModulesRelativePathsAndNames(MavenModel mavenModel)",
      "info" : "MethodDeclaration[9640-10246]:MethodDeclaration[9640-10246]"
    }, {
      "left" : "private static Collection<String> collectProfilesIds(Collection<MavenProfile> profiles)",
      "right" : "private static Collection<String> collectProfilesIds(Collection<MavenProfile> profiles)",
      "info" : "MethodDeclaration[10250-10564]:MethodDeclaration[10250-10564]"
    }, {
      "left" : "public long getLastReadStamp()",
      "right" : "public long getLastReadStamp()",
      "info" : "MethodDeclaration[10568-10640]:MethodDeclaration[10568-10640]"
    }, {
      "left" : "public VirtualFile getFile()",
      "right" : "public VirtualFile getFile()",
      "info" : "MethodDeclaration[10644-10708]:MethodDeclaration[10644-10708]"
    }, {
      "left" : "public String getPath()",
      "right" : "public String getPath()",
      "info" : "MethodDeclaration[10712-10781]:MethodDeclaration[10712-10781]"
    }, {
      "left" : "public String getDirectory()",
      "right" : "public String getDirectory()",
      "info" : "MethodDeclaration[10785-10871]:MethodDeclaration[10785-10871]"
    }, {
      "left" : "public VirtualFile getDirectoryFile()",
      "right" : "public VirtualFile getDirectoryFile()",
      "info" : "MethodDeclaration[10875-10960]:MethodDeclaration[10875-10960]"
    }, {
      "left" : "public VirtualFile getProfilesXmlFile()",
      "right" : "public VirtualFile getProfilesXmlFile()",
      "info" : "MethodDeclaration[10964-11071]:MethodDeclaration[10964-11071]"
    }, {
      "left" : "public File getProfilesXmlIoFile()",
      "right" : "public File getProfilesXmlIoFile()",
      "info" : "MethodDeclaration[11075-11177]:MethodDeclaration[11075-11177]"
    }, {
      "left" : "public boolean hasReadingProblems()",
      "right" : "public boolean hasReadingProblems()",
      "info" : "MethodDeclaration[11181-11271]:MethodDeclaration[11181-11271]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[11275-11343]:MethodDeclaration[11275-11343]"
    }, {
      "left" : "public String getDisplayName()",
      "right" : "public String getDisplayName()",
      "info" : "MethodDeclaration[11347-11573]:MethodDeclaration[11347-11573]"
    }, {
      "left" : "public Map<String, String> getModelMap()",
      "right" : "public Map<String, String> getModelMap()",
      "info" : "MethodDeclaration[11577-11665]:MethodDeclaration[11577-11665]"
    }, {
      "left" : "public MavenId getMavenId()",
      "right" : "public MavenId getMavenId()",
      "info" : "MethodDeclaration[11669-11743]:MethodDeclaration[11669-11743]"
    }, {
      "left" : "public MavenId getParentId()",
      "right" : "public MavenId getParentId()",
      "info" : "MethodDeclaration[11747-11824]:MethodDeclaration[11747-11824]"
    }, {
      "left" : "public String getPackaging()",
      "right" : "public String getPackaging()",
      "info" : "MethodDeclaration[11828-11905]:MethodDeclaration[11828-11905]"
    }, {
      "left" : "public String getFinalName()",
      "right" : "public String getFinalName()",
      "info" : "MethodDeclaration[11909-11986]:MethodDeclaration[11909-11986]"
    }, {
      "left" : "public String getDefaultGoal()",
      "right" : "public String getDefaultGoal()",
      "info" : "MethodDeclaration[11990-12072]:MethodDeclaration[11990-12072]"
    }, {
      "left" : "public String getBuildDirectory()",
      "right" : "public String getBuildDirectory()",
      "info" : "MethodDeclaration[12076-12163]:MethodDeclaration[12076-12163]"
    }, {
      "left" : "public String getGeneratedSourcesDirectory(boolean testSources)",
      "right" : "public String getGeneratedSourcesDirectory(boolean testSources)",
      "info" : "MethodDeclaration[12167-12346]:MethodDeclaration[12167-12346]"
    }, {
      "left" : "public String getAnnotationProcessorDirectory(boolean testSources)",
      "right" : "public String getAnnotationProcessorDirectory(boolean testSources)",
      "info" : "MethodDeclaration[12350-13533]:MethodDeclaration[12350-13533]"
    }, {
      "left" : "public ProcMode getProcMode()",
      "right" : "public ProcMode getProcMode()",
      "info" : "MethodDeclaration[13537-14871]:MethodDeclaration[13537-14871]"
    }, {
      "left" : "public Map<String, String> getAnnotationProcessorOptions()",
      "right" : "public Map<String, String> getAnnotationProcessorOptions()",
      "info" : "MethodDeclaration[14875-15447]:MethodDeclaration[14875-15447]"
    }, {
      "left" : "private static Map<String, String> getAnnotationProcessorOptionsFromCompilerConfig(Element compilerConfig)",
      "right" : "private static Map<String, String> getAnnotationProcessorOptionsFromCompilerConfig(Element compilerConfig)",
      "info" : "MethodDeclaration[15451-16830]:MethodDeclaration[15451-16772]"
    }, {
      "left" : "private static Map<String, String> getAnnotationProcessorOptionsFromProcessorPlugin(MavenPlugin bscMavenPlugin)",
      "right" : "private static Map<String, String> getAnnotationProcessorOptionsFromProcessorPlugin(MavenPlugin bscMavenPlugin)",
      "info" : "MethodDeclaration[16834-17455]:MethodDeclaration[17164-17785]"
    }, {
      "left" : "public List<String> getDeclaredAnnotationProcessors()",
      "right" : "public List<String> getDeclaredAnnotationProcessors()",
      "info" : "MethodDeclaration[17459-18895]:MethodDeclaration[17789-19225]"
    }, {
      "left" : "public String getOutputDirectory()",
      "right" : "public String getOutputDirectory()",
      "info" : "MethodDeclaration[18899-18988]:MethodDeclaration[19229-19318]"
    }, {
      "left" : "public String getTestOutputDirectory()",
      "right" : "public String getTestOutputDirectory()",
      "info" : "MethodDeclaration[18992-19089]:MethodDeclaration[19322-19419]"
    }, {
      "left" : "public List<String> getSources()",
      "right" : "public List<String> getSources()",
      "info" : "MethodDeclaration[19093-19172]:MethodDeclaration[19423-19502]"
    }, {
      "left" : "public List<String> getTestSources()",
      "right" : "public List<String> getTestSources()",
      "info" : "MethodDeclaration[19176-19263]:MethodDeclaration[19506-19593]"
    }, {
      "left" : "public List<MavenResource> getResources()",
      "right" : "public List<MavenResource> getResources()",
      "info" : "MethodDeclaration[19267-19357]:MethodDeclaration[19597-19687]"
    }, {
      "left" : "public List<MavenResource> getTestResources()",
      "right" : "public List<MavenResource> getTestResources()",
      "info" : "MethodDeclaration[19361-19459]:MethodDeclaration[19691-19789]"
    }, {
      "left" : "public List<String> getFilters()",
      "right" : "public List<String> getFilters()",
      "info" : "MethodDeclaration[19463-19542]:MethodDeclaration[19793-19872]"
    }, {
      "left" : "public List<String> getFilterPropertiesFiles()",
      "right" : "public List<String> getFilterPropertiesFiles()",
      "info" : "MethodDeclaration[19546-20440]:MethodDeclaration[19876-20770]"
    }, {
      "left" : "public MavenProjectChanges read(@NotNull MavenGeneralSettings generalSettings,\n                                  @NotNull MavenExplicitProfiles profiles,\n                                  @NotNull MavenProjectReader reader,\n                                  @NotNull MavenProjectReaderProjectLocator locator)",
      "right" : "public MavenProjectChanges read(@NotNull MavenGeneralSettings generalSettings,\n                                  @NotNull MavenExplicitProfiles profiles,\n                                  @NotNull MavenProjectReader reader,\n                                  @NotNull MavenProjectReaderProjectLocator locator)",
      "info" : "MethodDeclaration[20444-20885]:MethodDeclaration[20774-21215]"
    }, {
      "left" : "public Pair<MavenProjectChanges, NativeMavenProjectHolder> resolve(@NotNull Project project,\n                                                                     @NotNull MavenGeneralSettings generalSettings,\n                                                                     @NotNull MavenEmbedderWrapper embedder,\n                                                                     @NotNull MavenProjectReader reader,\n                                                                     @NotNull MavenProjectReaderProjectLocator locator,\n                                                                     @NotNull ResolveContext context)\n    throws MavenProcessCanceledException",
      "right" : "public Pair<MavenProjectChanges, NativeMavenProjectHolder> resolve(@NotNull Project project,\n                                                                     @NotNull MavenGeneralSettings generalSettings,\n                                                                     @NotNull MavenEmbedderWrapper embedder,\n                                                                     @NotNull MavenProjectReader reader,\n                                                                     @NotNull MavenProjectReaderProjectLocator locator,\n                                                                     @NotNull ResolveContext context)\n    throws MavenProcessCanceledException",
      "info" : "MethodDeclaration[20889-22355]:MethodDeclaration[21219-22685]"
    }, {
      "left" : "public Pair<Boolean, MavenProjectChanges> resolveFolders(@NotNull MavenEmbedderWrapper embedder,\n                                                           @NotNull MavenImportingSettings importingSettings,\n                                                           @NotNull MavenConsole console) throws MavenProcessCanceledException",
      "right" : "public Pair<Boolean, MavenProjectChanges> resolveFolders(@NotNull MavenEmbedderWrapper embedder,\n                                                           @NotNull MavenImportingSettings importingSettings,\n                                                           @NotNull MavenConsole console) throws MavenProcessCanceledException",
      "info" : "MethodDeclaration[22359-23358]:MethodDeclaration[22689-23688]"
    }, {
      "left" : "public void resetCache()",
      "right" : "public void resetCache()",
      "info" : "MethodDeclaration[23362-23479]:MethodDeclaration[23692-23809]"
    }, {
      "left" : "public boolean isAggregator()",
      "right" : "public boolean isAggregator()",
      "info" : "MethodDeclaration[23483-23590]:MethodDeclaration[23813-23920]"
    }, {
      "left" : "public List<MavenProjectProblem> getProblems()",
      "right" : "public List<MavenProjectProblem> getProblems()",
      "info" : "MethodDeclaration[23594-23868]:MethodDeclaration[23924-24198]"
    }, {
      "left" : "private static List<MavenProjectProblem> collectProblems(VirtualFile file, State state)",
      "right" : "private static List<MavenProjectProblem> collectProblems(VirtualFile file, State state)",
      "info" : "MethodDeclaration[23872-24595]:MethodDeclaration[24202-24925]"
    }, {
      "left" : "private static void validateParent(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "right" : "private static void validateParent(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "info" : "MethodDeclaration[24599-24876]:MethodDeclaration[24929-25206]"
    }, {
      "left" : "private static void validateDependencies(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "right" : "private static void validateDependencies(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "info" : "MethodDeclaration[24880-25283]:MethodDeclaration[25210-25613]"
    }, {
      "left" : "private static void validateExtensions(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "right" : "private static void validateExtensions(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "info" : "MethodDeclaration[25287-25683]:MethodDeclaration[25617-26013]"
    }, {
      "left" : "private static void validatePlugins(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "right" : "private static void validatePlugins(VirtualFile file, State state, List<MavenProjectProblem> result)",
      "info" : "MethodDeclaration[25687-25978]:MethodDeclaration[26017-26308]"
    }, {
      "left" : "private static MavenProjectProblem createDependencyProblem(VirtualFile file, String description)",
      "right" : "private static MavenProjectProblem createDependencyProblem(VirtualFile file, String description)",
      "info" : "MethodDeclaration[25982-26193]:MethodDeclaration[26312-26523]"
    }, {
      "left" : "private static boolean isParentResolved(State state)",
      "right" : "private static boolean isParentResolved(State state)",
      "info" : "MethodDeclaration[26197-26325]:MethodDeclaration[26527-26655]"
    }, {
      "left" : "private static List<MavenArtifact> getUnresolvedDependencies(State state)",
      "right" : "private static List<MavenArtifact> getUnresolvedDependencies(State state)",
      "info" : "MethodDeclaration[26329-26799]:MethodDeclaration[26659-27129]"
    }, {
      "left" : "private static List<MavenArtifact> getUnresolvedExtensions(State state)",
      "right" : "private static List<MavenArtifact> getUnresolvedExtensions(State state)",
      "info" : "MethodDeclaration[26803-27577]:MethodDeclaration[27133-27907]"
    }, {
      "left" : "private static boolean pomFileExists(File localRepository, MavenArtifact artifact)",
      "right" : "private static boolean pomFileExists(File localRepository, MavenArtifact artifact)",
      "info" : "MethodDeclaration[27581-27762]:MethodDeclaration[27911-28092]"
    }, {
      "left" : "private static List<MavenPlugin> getUnresolvedPlugins(State state)",
      "right" : "private static List<MavenPlugin> getUnresolvedPlugins(State state)",
      "info" : "MethodDeclaration[27766-28299]:MethodDeclaration[28096-28629]"
    }, {
      "left" : "public List<VirtualFile> getExistingModuleFiles()",
      "right" : "public List<VirtualFile> getExistingModuleFiles()",
      "info" : "MethodDeclaration[28303-28683]:MethodDeclaration[28633-29013]"
    }, {
      "left" : "public Set<String> getModulePaths()",
      "right" : "public Set<String> getModulePaths()",
      "info" : "MethodDeclaration[28687-28786]:MethodDeclaration[29017-29116]"
    }, {
      "left" : "public Map<String, String> getModulesPathsAndNames()",
      "right" : "public Map<String, String> getModulesPathsAndNames()",
      "info" : "MethodDeclaration[28790-28902]:MethodDeclaration[29120-29232]"
    }, {
      "left" : "public Collection<String> getProfilesIds()",
      "right" : "public Collection<String> getProfilesIds()",
      "info" : "MethodDeclaration[28906-28999]:MethodDeclaration[29236-29329]"
    }, {
      "left" : "public MavenExplicitProfiles getActivatedProfilesIds()",
      "right" : "public MavenExplicitProfiles getActivatedProfilesIds()",
      "info" : "MethodDeclaration[29003-29117]:MethodDeclaration[29333-29447]"
    }, {
      "left" : "public List<MavenArtifact> getDependencies()",
      "right" : "public List<MavenArtifact> getDependencies()",
      "info" : "MethodDeclaration[29121-29217]:MethodDeclaration[29451-29547]"
    }, {
      "left" : "public List<MavenArtifactNode> getDependencyTree()",
      "right" : "public List<MavenArtifactNode> getDependencyTree()",
      "info" : "MethodDeclaration[29221-29325]:MethodDeclaration[29551-29655]"
    }, {
      "left" : "public Set<String> getSupportedPackagings()",
      "right" : "public Set<String> getSupportedPackagings()",
      "info" : "MethodDeclaration[29329-29775]:MethodDeclaration[29659-30105]"
    }, {
      "left" : "public Set<String> getDependencyTypesFromImporters(@NotNull SupportedRequestType type)",
      "right" : "public Set<String> getDependencyTypesFromImporters(@NotNull SupportedRequestType type)",
      "info" : "MethodDeclaration[29779-30053]:MethodDeclaration[30109-30383]"
    }, {
      "left" : "public Set<String> getSupportedDependencyScopes()",
      "right" : "public Set<String> getSupportedDependencyScopes()",
      "info" : "MethodDeclaration[30057-30702]:MethodDeclaration[30387-31032]"
    }, {
      "left" : "public void addDependency(@NotNull MavenArtifact dependency)",
      "right" : "public void addDependency(@NotNull MavenArtifact dependency)",
      "info" : "MethodDeclaration[30706-31005]:MethodDeclaration[31036-31335]"
    }, {
      "left" : "public List<MavenArtifact> findDependencies(@NotNull MavenProject depProject)",
      "right" : "public List<MavenArtifact> findDependencies(@NotNull MavenProject depProject)",
      "info" : "MethodDeclaration[31009-31157]:MethodDeclaration[31339-31487]"
    }, {
      "left" : "public List<MavenArtifact> findDependencies(@NotNull MavenId id)",
      "right" : "public List<MavenArtifact> findDependencies(@NotNull MavenId id)",
      "info" : "MethodDeclaration[31161-31290]:MethodDeclaration[31491-31620]"
    }, {
      "left" : "public List<MavenArtifact> findDependencies(@Nullable String groupId, @Nullable String artifactId)",
      "right" : "public List<MavenArtifact> findDependencies(@Nullable String groupId, @Nullable String artifactId)",
      "info" : "MethodDeclaration[31294-31485]:MethodDeclaration[31624-31815]"
    }, {
      "left" : "public boolean hasUnresolvedArtifacts()",
      "right" : "public boolean hasUnresolvedArtifacts()",
      "info" : "MethodDeclaration[31489-31712]:MethodDeclaration[31819-32042]"
    }, {
      "left" : "public boolean hasUnresolvedPlugins()",
      "right" : "public boolean hasUnresolvedPlugins()",
      "info" : "MethodDeclaration[31716-31812]:MethodDeclaration[32046-32142]"
    }, {
      "left" : "public List<MavenPlugin> getPlugins()",
      "right" : "public List<MavenPlugin> getPlugins()",
      "info" : "MethodDeclaration[31816-31900]:MethodDeclaration[32146-32230]"
    }, {
      "left" : "public List<MavenPlugin> getDeclaredPlugins()",
      "right" : "public List<MavenPlugin> getDeclaredPlugins()",
      "info" : "MethodDeclaration[31904-32006]:MethodDeclaration[32234-32336]"
    }, {
      "left" : "private static List<MavenPlugin> getDeclaredPlugins(State state)",
      "right" : "private static List<MavenPlugin> getDeclaredPlugins(State state)",
      "info" : "MethodDeclaration[32010-32272]:MethodDeclaration[32340-32602]"
    }, {
      "left" : "public boolean value(MavenPlugin mavenPlugin)",
      "right" : "public boolean value(MavenPlugin mavenPlugin)",
      "info" : "MethodDeclaration[32164-32260]:MethodDeclaration[32494-32590]"
    }, {
      "left" : "public Element getPluginConfiguration(@Nullable String groupId, @Nullable String artifactId)",
      "right" : "public Element getPluginConfiguration(@Nullable String groupId, @Nullable String artifactId)",
      "info" : "MethodDeclaration[32276-32452]:MethodDeclaration[32606-32782]"
    }, {
      "left" : "public Element getPluginGoalConfiguration(@Nullable String groupId, @Nullable String artifactId, @Nullable String goal)",
      "right" : "public Element getPluginGoalConfiguration(@Nullable String groupId, @Nullable String artifactId, @Nullable String goal)",
      "info" : "MethodDeclaration[32456-32671]:MethodDeclaration[32786-33001]"
    }, {
      "left" : "public Element getPluginGoalConfiguration(@Nullable MavenPlugin plugin, @Nullable String goal)",
      "right" : "public Element getPluginGoalConfiguration(@Nullable MavenPlugin plugin, @Nullable String goal)",
      "info" : "MethodDeclaration[32675-32920]:MethodDeclaration[33005-33250]"
    }, {
      "left" : "public Element getPluginExecutionConfiguration(@Nullable String groupId, @Nullable String artifactId, @NotNull String executionId)",
      "right" : "public Element getPluginExecutionConfiguration(@Nullable String groupId, @Nullable String artifactId, @NotNull String executionId)",
      "info" : "MethodDeclaration[32924-33213]:MethodDeclaration[33254-33543]"
    }, {
      "left" : "public MavenPlugin findPlugin(@Nullable String groupId, @Nullable String artifactId)",
      "right" : "public MavenPlugin findPlugin(@Nullable String groupId, @Nullable String artifactId)",
      "info" : "MethodDeclaration[33217-33370]:MethodDeclaration[33547-33700]"
    }, {
      "left" : "public MavenPlugin findPlugin(@Nullable String groupId, @Nullable String artifactId, final boolean explicitlyDeclaredOnly)",
      "right" : "public MavenPlugin findPlugin(@Nullable String groupId, @Nullable String artifactId, final boolean explicitlyDeclaredOnly)",
      "info" : "MethodDeclaration[33374-33746]:MethodDeclaration[33704-34076]"
    }, {
      "left" : "public String getEncoding()",
      "right" : "public String getEncoding()",
      "info" : "MethodDeclaration[33750-34165]:MethodDeclaration[34080-34495]"
    }, {
      "left" : "public String getSourceLevel()",
      "right" : "public String getSourceLevel()",
      "info" : "MethodDeclaration[34169-34256]:MethodDeclaration[34499-34586]"
    }, {
      "left" : "public String getTargetLevel()",
      "right" : "public String getTargetLevel()",
      "info" : "MethodDeclaration[34260-34347]:MethodDeclaration[34590-34677]"
    }, {
      "left" : "private String getCompilerLevel(String level)",
      "right" : "private String getCompilerLevel(String level)",
      "info" : "MethodDeclaration[34351-34651]:MethodDeclaration[34681-34981]"
    }, {
      "left" : "private Element getCompilerConfig()",
      "right" : "private Element getCompilerConfig()",
      "info" : "MethodDeclaration[34655-34796]:MethodDeclaration[34985-35126]"
    }, {
      "left" : "public static String normalizeCompilerLevel(@Nullable String level)",
      "right" : "public static String normalizeCompilerLevel(@Nullable String level)",
      "info" : "MethodDeclaration[34800-34929]:MethodDeclaration[35130-35259]"
    }, {
      "left" : "public Properties getProperties()",
      "right" : "public Properties getProperties()",
      "info" : "MethodDeclaration[34933-35016]:MethodDeclaration[35263-35346]"
    }, {
      "left" : "public File getLocalRepository()",
      "right" : "public File getLocalRepository()",
      "info" : "MethodDeclaration[35020-35107]:MethodDeclaration[35350-35437]"
    }, {
      "left" : "public List<MavenRemoteRepository> getRemoteRepositories()",
      "right" : "public List<MavenRemoteRepository> getRemoteRepositories()",
      "info" : "MethodDeclaration[35111-35227]:MethodDeclaration[35441-35557]"
    }, {
      "left" : "public List<MavenImporter> getSuitableImporters()",
      "right" : "public List<MavenImporter> getSuitableImporters()",
      "info" : "MethodDeclaration[35231-35350]:MethodDeclaration[35561-35680]"
    }, {
      "left" : "public ModuleType getModuleType()",
      "right" : "public ModuleType getModuleType()",
      "info" : "MethodDeclaration[35354-35658]:MethodDeclaration[35684-35988]"
    }, {
      "left" : "public Pair<String, String> getClassifierAndExtension(@NotNull MavenArtifact artifact, @NotNull MavenExtraArtifactType type)",
      "right" : "public Pair<String, String> getClassifierAndExtension(@NotNull MavenArtifact artifact, @NotNull MavenExtraArtifactType type)",
      "info" : "MethodDeclaration[35662-36084]:MethodDeclaration[35992-36414]"
    }, {
      "left" : "public MavenArtifactIndex getDependencyArtifactIndex()",
      "right" : "public MavenArtifactIndex getDependencyArtifactIndex()",
      "info" : "MethodDeclaration[36088-36377]:MethodDeclaration[36418-36707]"
    }, {
      "left" : "public <V> V getCachedValue(Key<V> key)",
      "right" : "public <V> V getCachedValue(Key<V> key)",
      "info" : "MethodDeclaration[36381-36507]:MethodDeclaration[36711-36837]"
    }, {
      "left" : "public <V> V putCachedValue(Key<V> key, @NotNull V value)",
      "right" : "public <V> V putCachedValue(Key<V> key, @NotNull V value)",
      "info" : "MethodDeclaration[36511-36773]:MethodDeclaration[36841-37103]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[36777-36855]:MethodDeclaration[37107-37185]"
    }, {
      "left" : "State",
      "right" : "State",
      "info" : "TypeDeclaration[36859-40180]:TypeDeclaration[37189-40510]"
    }, {
      "left" : "long myLastReadStamp = 0;",
      "right" : "long myLastReadStamp = 0;",
      "info" : "FieldDeclaration[36927-36952]:FieldDeclaration[37257-37282]"
    }, {
      "left" : "MavenId myMavenId;",
      "right" : "MavenId myMavenId;",
      "info" : "FieldDeclaration[36958-36976]:FieldDeclaration[37288-37306]"
    }, {
      "left" : "MavenId myParentId;",
      "right" : "MavenId myParentId;",
      "info" : "FieldDeclaration[36981-37000]:FieldDeclaration[37311-37330]"
    }, {
      "left" : "String myPackaging;",
      "right" : "String myPackaging;",
      "info" : "FieldDeclaration[37005-37024]:FieldDeclaration[37335-37354]"
    }, {
      "left" : "String myName;",
      "right" : "String myName;",
      "info" : "FieldDeclaration[37029-37043]:FieldDeclaration[37359-37373]"
    }, {
      "left" : "String myFinalName;",
      "right" : "String myFinalName;",
      "info" : "FieldDeclaration[37049-37068]:FieldDeclaration[37379-37398]"
    }, {
      "left" : "String myDefaultGoal;",
      "right" : "String myDefaultGoal;",
      "info" : "FieldDeclaration[37073-37094]:FieldDeclaration[37403-37424]"
    }, {
      "left" : "String myBuildDirectory;",
      "right" : "String myBuildDirectory;",
      "info" : "FieldDeclaration[37100-37124]:FieldDeclaration[37430-37454]"
    }, {
      "left" : "String myOutputDirectory;",
      "right" : "String myOutputDirectory;",
      "info" : "FieldDeclaration[37129-37154]:FieldDeclaration[37459-37484]"
    }, {
      "left" : "String myTestOutputDirectory;",
      "right" : "String myTestOutputDirectory;",
      "info" : "FieldDeclaration[37159-37188]:FieldDeclaration[37489-37518]"
    }, {
      "left" : "List<String> mySources;",
      "right" : "List<String> mySources;",
      "info" : "FieldDeclaration[37194-37217]:FieldDeclaration[37524-37547]"
    }, {
      "left" : "List<String> myTestSources;",
      "right" : "List<String> myTestSources;",
      "info" : "FieldDeclaration[37222-37249]:FieldDeclaration[37552-37579]"
    }, {
      "left" : "List<MavenResource> myResources;",
      "right" : "List<MavenResource> myResources;",
      "info" : "FieldDeclaration[37254-37286]:FieldDeclaration[37584-37616]"
    }, {
      "left" : "List<MavenResource> myTestResources;",
      "right" : "List<MavenResource> myTestResources;",
      "info" : "FieldDeclaration[37291-37327]:FieldDeclaration[37621-37657]"
    }, {
      "left" : "List<String> myFilters;",
      "right" : "List<String> myFilters;",
      "info" : "FieldDeclaration[37333-37356]:FieldDeclaration[37663-37686]"
    }, {
      "left" : "Properties myProperties;",
      "right" : "Properties myProperties;",
      "info" : "FieldDeclaration[37361-37385]:FieldDeclaration[37691-37715]"
    }, {
      "left" : "List<MavenPlugin> myPlugins;",
      "right" : "List<MavenPlugin> myPlugins;",
      "info" : "FieldDeclaration[37390-37418]:FieldDeclaration[37720-37748]"
    }, {
      "left" : "List<MavenArtifact> myExtensions;",
      "right" : "List<MavenArtifact> myExtensions;",
      "info" : "FieldDeclaration[37423-37456]:FieldDeclaration[37753-37786]"
    }, {
      "left" : "List<MavenArtifact> myDependencies;",
      "right" : "List<MavenArtifact> myDependencies;",
      "info" : "FieldDeclaration[37462-37497]:FieldDeclaration[37792-37827]"
    }, {
      "left" : "List<MavenArtifactNode> myDependencyTree;",
      "right" : "List<MavenArtifactNode> myDependencyTree;",
      "info" : "FieldDeclaration[37502-37543]:FieldDeclaration[37832-37873]"
    }, {
      "left" : "List<MavenRemoteRepository> myRemoteRepositories;",
      "right" : "List<MavenRemoteRepository> myRemoteRepositories;",
      "info" : "FieldDeclaration[37548-37597]:FieldDeclaration[37878-37927]"
    }, {
      "left" : "Map<String, String> myModulesPathsAndNames;",
      "right" : "Map<String, String> myModulesPathsAndNames;",
      "info" : "FieldDeclaration[37603-37646]:FieldDeclaration[37933-37976]"
    }, {
      "left" : "Map<String, String> myModelMap;",
      "right" : "Map<String, String> myModelMap;",
      "info" : "FieldDeclaration[37652-37683]:FieldDeclaration[37982-38013]"
    }, {
      "left" : "Collection<String> myProfilesIds;",
      "right" : "Collection<String> myProfilesIds;",
      "info" : "FieldDeclaration[37689-37722]:FieldDeclaration[38019-38052]"
    }, {
      "left" : "MavenExplicitProfiles myActivatedProfilesIds;",
      "right" : "MavenExplicitProfiles myActivatedProfilesIds;",
      "info" : "FieldDeclaration[37727-37772]:FieldDeclaration[38057-38102]"
    }, {
      "left" : "Collection<MavenProjectProblem> myReadingProblems;",
      "right" : "Collection<MavenProjectProblem> myReadingProblems;",
      "info" : "FieldDeclaration[37778-37828]:FieldDeclaration[38108-38158]"
    }, {
      "left" : "Set<MavenId> myUnresolvedArtifactIds;",
      "right" : "Set<MavenId> myUnresolvedArtifactIds;",
      "info" : "FieldDeclaration[37833-37870]:FieldDeclaration[38163-38200]"
    }, {
      "left" : "File myLocalRepository;",
      "right" : "File myLocalRepository;",
      "info" : "FieldDeclaration[37875-37898]:FieldDeclaration[38205-38228]"
    }, {
      "left" : "volatile List<MavenProjectProblem> myProblemsCache;",
      "right" : "volatile List<MavenProjectProblem> myProblemsCache;",
      "info" : "FieldDeclaration[37904-37955]:FieldDeclaration[38234-38285]"
    }, {
      "left" : "volatile List<MavenArtifact> myUnresolvedDependenciesCache;",
      "right" : "volatile List<MavenArtifact> myUnresolvedDependenciesCache;",
      "info" : "FieldDeclaration[37960-38019]:FieldDeclaration[38290-38349]"
    }, {
      "left" : "volatile List<MavenPlugin> myUnresolvedPluginsCache;",
      "right" : "volatile List<MavenPlugin> myUnresolvedPluginsCache;",
      "info" : "FieldDeclaration[38024-38076]:FieldDeclaration[38354-38406]"
    }, {
      "left" : "volatile List<MavenArtifact> myUnresolvedExtensionsCache;",
      "right" : "volatile List<MavenArtifact> myUnresolvedExtensionsCache;",
      "info" : "FieldDeclaration[38081-38138]:FieldDeclaration[38411-38468]"
    }, {
      "left" : "transient ConcurrentHashMap<Key, Object> myCache = new ConcurrentHashMap<Key, Object>();",
      "right" : "transient ConcurrentHashMap<Key, Object> myCache = new ConcurrentHashMap<Key, Object>();",
      "info" : "FieldDeclaration[38144-38232]:FieldDeclaration[38474-38562]"
    }, {
      "left" : "public State clone()",
      "right" : "public State clone()",
      "info" : "MethodDeclaration[38238-38545]:MethodDeclaration[38568-38875]"
    }, {
      "left" : "private void resetCache()",
      "right" : "private void resetCache()",
      "info" : "MethodDeclaration[38551-38763]:MethodDeclaration[38881-39093]"
    }, {
      "left" : "public MavenProjectChanges getChanges(State other)",
      "right" : "public MavenProjectChanges getChanges(State other)",
      "info" : "MethodDeclaration[38769-39990]:MethodDeclaration[39099-40320]"
    }, {
      "left" : "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[39996-40176]:MethodDeclaration[40326-40506]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1955-1961]:Modifier[1955-1961]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1962-1967]:TYPE_DECLARATION_KIND[1962-1967]"
    }, {
      "left" : "MavenProject",
      "right" : "MavenProject",
      "info" : "SimpleName[1968-1980]:SimpleName[1968-1980]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[2757-2766]:MarkerAnnotation[2757-2766]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2769-2775]:Modifier[2769-2775]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2776-2782]:Modifier[2776-2782]"
    }, {
      "left" : "MavenProject",
      "right" : "MavenProject",
      "info" : "SimpleType[2783-2795]:SimpleType[2783-2795]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[2796-2800]:SimpleName[2796-2800]"
    }, {
      "left" : "DataInputStream in",
      "right" : "DataInputStream in",
      "info" : "SingleVariableDeclaration[2801-2819]:SingleVariableDeclaration[2801-2819]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2828-2839]:SimpleType[2828-2839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2840-3627]:Block[2840-3627]"
    }, {
      "left" : "String path = in.readUTF();",
      "right" : "String path = in.readUTF();",
      "info" : "VariableDeclarationStatement[2846-2873]:VariableDeclarationStatement[2846-2873]"
    }, {
      "left" : "int length = in.readInt();",
      "right" : "int length = in.readInt();",
      "info" : "VariableDeclarationStatement[2878-2904]:VariableDeclarationStatement[2878-2904]"
    }, {
      "left" : "byte[] bytes = new byte[length];",
      "right" : "byte[] bytes = new byte[length];",
      "info" : "VariableDeclarationStatement[2909-2941]:VariableDeclarationStatement[2909-2941]"
    }, {
      "left" : "in.readFully(bytes);",
      "right" : "in.readFully(bytes);",
      "info" : "ExpressionStatement[2946-2966]:ExpressionStatement[2946-2966]"
    }, {
      "left" : "VirtualFile file = LocalFileSystem.getInstance().findFileByPath(path);",
      "right" : "VirtualFile file = LocalFileSystem.getInstance().findFileByPath(path);",
      "info" : "VariableDeclarationStatement[3019-3089]:VariableDeclarationStatement[3019-3089]"
    }, {
      "left" : "if (file == null)",
      "right" : "if (file == null)",
      "info" : "IfStatement[3094-3124]:IfStatement[3094-3124]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3112-3124]:ReturnStatement[3112-3124]"
    }, {
      "left" : "ByteArrayInputStream bs = new ByteArrayInputStream(bytes);",
      "right" : "ByteArrayInputStream bs = new ByteArrayInputStream(bytes);",
      "info" : "VariableDeclarationStatement[3130-3188]:VariableDeclarationStatement[3130-3188]"
    }, {
      "left" : "ObjectInputStream os = new ObjectInputStream(bs);",
      "right" : "ObjectInputStream os = new ObjectInputStream(bs);",
      "info" : "VariableDeclarationStatement[3193-3242]:VariableDeclarationStatement[3193-3242]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3247-3623]:TryStatement[3247-3623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3251-3567]:Block[3251-3567]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3259-3561]:TryStatement[3259-3561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3263-3398]:Block[3263-3398]"
    }, {
      "left" : "MavenProject result = new MavenProject(file);",
      "right" : "MavenProject result = new MavenProject(file);",
      "info" : "VariableDeclarationStatement[3273-3318]:VariableDeclarationStatement[3273-3318]"
    }, {
      "left" : "result.myState = (State)os.readObject();",
      "right" : "result.myState = (State)os.readObject();",
      "info" : "ExpressionStatement[3327-3367]:ExpressionStatement[3327-3367]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[3376-3390]:ReturnStatement[3376-3390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3438-3561]:Block[3438-3561]"
    }, {
      "left" : "IOException ioException = new IOException();",
      "right" : "IOException ioException = new IOException();",
      "info" : "VariableDeclarationStatement[3448-3492]:VariableDeclarationStatement[3448-3492]"
    }, {
      "left" : "ioException.initCause(e);",
      "right" : "ioException.initCause(e);",
      "info" : "ExpressionStatement[3501-3526]:ExpressionStatement[3501-3526]"
    }, {
      "left" : "throw ioException;",
      "right" : "throw ioException;",
      "info" : "ThrowStatement[3535-3553]:ThrowStatement[3535-3553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3580-3623]:Block[3580-3623]"
    }, {
      "left" : "os.close();",
      "right" : "os.close();",
      "info" : "ExpressionStatement[3588-3599]:ExpressionStatement[3588-3599]"
    }, {
      "left" : "bs.close();",
      "right" : "bs.close();",
      "info" : "ExpressionStatement[3606-3617]:ExpressionStatement[3606-3617]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3631-3637]:Modifier[3631-3637]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3638-3642]:PrimitiveType[3638-3642]"
    }, {
      "left" : "write",
      "right" : "write",
      "info" : "SimpleName[3643-3648]:SimpleName[3643-3648]"
    }, {
      "left" : "@NotNull DataOutputStream out",
      "right" : "@NotNull DataOutputStream out",
      "info" : "SingleVariableDeclaration[3649-3678]:SingleVariableDeclaration[3649-3678]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[3687-3698]:SimpleType[3687-3698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3699-4068]:Block[3699-4068]"
    }, {
      "left" : "out.writeUTF(getPath());",
      "right" : "out.writeUTF(getPath());",
      "info" : "ExpressionStatement[3705-3729]:ExpressionStatement[3705-3729]"
    }, {
      "left" : "BufferExposingByteArrayOutputStream bs = new BufferExposingByteArrayOutputStream();",
      "right" : "BufferExposingByteArrayOutputStream bs = new BufferExposingByteArrayOutputStream();",
      "info" : "VariableDeclarationStatement[3735-3818]:VariableDeclarationStatement[3735-3818]"
    }, {
      "left" : "ObjectOutputStream os = new ObjectOutputStream(bs);",
      "right" : "ObjectOutputStream os = new ObjectOutputStream(bs);",
      "info" : "VariableDeclarationStatement[3823-3874]:VariableDeclarationStatement[3823-3874]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3879-4064]:TryStatement[3879-4064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3883-4008]:Block[3883-4008]"
    }, {
      "left" : "os.writeObject(myState);",
      "right" : "os.writeObject(myState);",
      "info" : "ExpressionStatement[3891-3915]:ExpressionStatement[3891-3915]"
    }, {
      "left" : "out.writeInt(bs.size());",
      "right" : "out.writeInt(bs.size());",
      "info" : "ExpressionStatement[3923-3947]:ExpressionStatement[3923-3947]"
    }, {
      "left" : "out.write(bs.getInternalBuffer(), 0, bs.size());",
      "right" : "out.write(bs.getInternalBuffer(), 0, bs.size());",
      "info" : "ExpressionStatement[3954-4002]:ExpressionStatement[3954-4002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4021-4064]:Block[4021-4064]"
    }, {
      "left" : "os.close();",
      "right" : "os.close();",
      "info" : "ExpressionStatement[4029-4040]:ExpressionStatement[4029-4040]"
    }, {
      "left" : "bs.close();",
      "right" : "bs.close();",
      "info" : "ExpressionStatement[4047-4058]:ExpressionStatement[4047-4058]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4072-4078]:Modifier[4072-4078]"
    }, {
      "left" : "MavenProject",
      "right" : "MavenProject",
      "info" : "SimpleName[4079-4091]:SimpleName[4079-4091]"
    }, {
      "left" : "@NotNull VirtualFile file",
      "right" : "@NotNull VirtualFile file",
      "info" : "SingleVariableDeclaration[4092-4117]:SingleVariableDeclaration[4092-4117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4119-4143]:Block[4119-4143]"
    }, {
      "left" : "myFile = file;",
      "right" : "myFile = file;",
      "info" : "ExpressionStatement[4125-4139]:ExpressionStatement[4125-4139]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[4147-4155]:MarkerAnnotation[4147-4155]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4158-4165]:Modifier[4158-4165]"
    }, {
      "left" : "MavenProjectChanges",
      "right" : "MavenProjectChanges",
      "info" : "SimpleType[4166-4185]:SimpleType[4166-4185]"
    }, {
      "left" : "set",
      "right" : "set",
      "info" : "SimpleName[4186-4189]:SimpleName[4186-4189]"
    }, {
      "left" : "@NotNull MavenProjectReaderResult readerResult",
      "right" : "@NotNull MavenProjectReaderResult readerResult",
      "info" : "SingleVariableDeclaration[4190-4236]:SingleVariableDeclaration[4190-4236]"
    }, {
      "left" : "@NotNull MavenGeneralSettings settings",
      "right" : "@NotNull MavenGeneralSettings settings",
      "info" : "SingleVariableDeclaration[4272-4310]:SingleVariableDeclaration[4272-4310]"
    }, {
      "left" : "boolean updateLastReadStamp",
      "right" : "boolean updateLastReadStamp",
      "info" : "SingleVariableDeclaration[4346-4373]:SingleVariableDeclaration[4346-4373]"
    }, {
      "left" : "boolean resetArtifacts",
      "right" : "boolean resetArtifacts",
      "info" : "SingleVariableDeclaration[4409-4431]:SingleVariableDeclaration[4409-4431]"
    }, {
      "left" : "boolean resetProfiles",
      "right" : "boolean resetProfiles",
      "info" : "SingleVariableDeclaration[4467-4488]:SingleVariableDeclaration[4467-4488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4490-6336]:Block[4490-6336]"
    }, {
      "left" : "State newState = myState.clone();",
      "right" : "State newState = myState.clone();",
      "info" : "VariableDeclarationStatement[4496-4529]:VariableDeclarationStatement[4496-4529]"
    }, {
      "left" : "if (updateLastReadStamp)",
      "right" : "if (updateLastReadStamp)",
      "info" : "IfStatement[4535-4615]:IfStatement[4535-4615]"
    }, {
      "left" : "newState.myLastReadStamp = myState.myLastReadStamp + 1;",
      "right" : "newState.myLastReadStamp = myState.myLastReadStamp + 1;",
      "info" : "ExpressionStatement[4560-4615]:ExpressionStatement[4560-4615]"
    }, {
      "left" : "newState.myReadingProblems = readerResult.readingProblems;",
      "right" : "newState.myReadingProblems = readerResult.readingProblems;",
      "info" : "ExpressionStatement[4621-4679]:ExpressionStatement[4621-4679]"
    }, {
      "left" : "newState.myLocalRepository = settings.getEffectiveLocalRepository();",
      "right" : "newState.myLocalRepository = settings.getEffectiveLocalRepository();",
      "info" : "ExpressionStatement[4684-4752]:ExpressionStatement[4684-4752]"
    }, {
      "left" : "newState.myActivatedProfilesIds = readerResult.activatedProfiles;",
      "right" : "newState.myActivatedProfilesIds = readerResult.activatedProfiles;",
      "info" : "ExpressionStatement[4758-4823]:ExpressionStatement[4758-4823]"
    }, {
      "left" : "MavenModel model = readerResult.mavenModel;",
      "right" : "MavenModel model = readerResult.mavenModel;",
      "info" : "VariableDeclarationStatement[4829-4872]:VariableDeclarationStatement[4829-4872]"
    }, {
      "left" : "newState.myMavenId = model.getMavenId();",
      "right" : "newState.myMavenId = model.getMavenId();",
      "info" : "ExpressionStatement[4878-4918]:ExpressionStatement[4878-4918]"
    }, {
      "left" : "if (model.getParent() != null)",
      "right" : "if (model.getParent() != null)",
      "info" : "IfStatement[4923-5021]:IfStatement[4923-5021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4954-5021]:Block[4954-5021]"
    }, {
      "left" : "newState.myParentId = model.getParent().getMavenId();",
      "right" : "newState.myParentId = model.getParent().getMavenId();",
      "info" : "ExpressionStatement[4962-5015]:ExpressionStatement[4962-5015]"
    }, {
      "left" : "newState.myPackaging = model.getPackaging();",
      "right" : "newState.myPackaging = model.getPackaging();",
      "info" : "ExpressionStatement[5027-5071]:ExpressionStatement[5027-5071]"
    }, {
      "left" : "newState.myName = model.getName();",
      "right" : "newState.myName = model.getName();",
      "info" : "ExpressionStatement[5076-5110]:ExpressionStatement[5076-5110]"
    }, {
      "left" : "newState.myFinalName = model.getBuild().getFinalName();",
      "right" : "newState.myFinalName = model.getBuild().getFinalName();",
      "info" : "ExpressionStatement[5116-5171]:ExpressionStatement[5116-5171]"
    }, {
      "left" : "newState.myDefaultGoal = model.getBuild().getDefaultGoal();",
      "right" : "newState.myDefaultGoal = model.getBuild().getDefaultGoal();",
      "info" : "ExpressionStatement[5176-5235]:ExpressionStatement[5176-5235]"
    }, {
      "left" : "newState.myBuildDirectory = model.getBuild().getDirectory();",
      "right" : "newState.myBuildDirectory = model.getBuild().getDirectory();",
      "info" : "ExpressionStatement[5241-5301]:ExpressionStatement[5241-5301]"
    }, {
      "left" : "newState.myOutputDirectory = model.getBuild().getOutputDirectory();",
      "right" : "newState.myOutputDirectory = model.getBuild().getOutputDirectory();",
      "info" : "ExpressionStatement[5306-5373]:ExpressionStatement[5306-5373]"
    }, {
      "left" : "newState.myTestOutputDirectory = model.getBuild().getTestOutputDirectory();",
      "right" : "newState.myTestOutputDirectory = model.getBuild().getTestOutputDirectory();",
      "info" : "ExpressionStatement[5378-5453]:ExpressionStatement[5378-5453]"
    }, {
      "left" : "doSetFolders(newState, readerResult);",
      "right" : "doSetFolders(newState, readerResult);",
      "info" : "ExpressionStatement[5459-5496]:ExpressionStatement[5459-5496]"
    }, {
      "left" : "newState.myFilters = model.getBuild().getFilters();",
      "right" : "newState.myFilters = model.getBuild().getFilters();",
      "info" : "ExpressionStatement[5502-5553]:ExpressionStatement[5502-5553]"
    }, {
      "left" : "newState.myProperties = model.getProperties();",
      "right" : "newState.myProperties = model.getProperties();",
      "info" : "ExpressionStatement[5558-5604]:ExpressionStatement[5558-5604]"
    }, {
      "left" : "doSetResolvedAttributes(newState, readerResult, resetArtifacts);",
      "right" : "doSetResolvedAttributes(newState, readerResult, resetArtifacts);",
      "info" : "ExpressionStatement[5610-5674]:ExpressionStatement[5610-5674]"
    }, {
      "left" : "MavenModelPropertiesPatcher.patch(newState.myProperties, newState.myPlugins);",
      "right" : "MavenModelPropertiesPatcher.patch(newState.myProperties, newState.myPlugins);",
      "info" : "ExpressionStatement[5680-5757]:ExpressionStatement[5680-5757]"
    }, {
      "left" : "newState.myModulesPathsAndNames = collectModulePathsAndNames(model, getDirectory());",
      "right" : "newState.myModulesPathsAndNames = collectModulePathsAndNames(model, getDirectory());",
      "info" : "ExpressionStatement[5763-5847]:ExpressionStatement[5763-5847]"
    }, {
      "left" : "Collection<String> newProfiles = collectProfilesIds(model.getProfiles());",
      "right" : "Collection<String> newProfiles = collectProfilesIds(model.getProfiles());",
      "info" : "VariableDeclarationStatement[5852-5925]:VariableDeclarationStatement[5852-5925]"
    }, {
      "left" : "if (resetProfiles || newState.myProfilesIds == null)",
      "right" : "if (resetProfiles || newState.myProfilesIds == null)",
      "info" : "IfStatement[5930-6244]:IfStatement[5930-6244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5983-6034]:Block[5983-6034]"
    }, {
      "left" : "newState.myProfilesIds = newProfiles;",
      "right" : "newState.myProfilesIds = newProfiles;",
      "info" : "ExpressionStatement[5991-6028]:ExpressionStatement[5991-6028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6044-6244]:Block[6044-6244]"
    }, {
      "left" : "Set<String> mergedProfiles = new THashSet<String>(newState.myProfilesIds);",
      "right" : "Set<String> mergedProfiles = new THashSet<String>(newState.myProfilesIds);",
      "info" : "VariableDeclarationStatement[6052-6126]:VariableDeclarationStatement[6052-6126]"
    }, {
      "left" : "mergedProfiles.addAll(newProfiles);",
      "right" : "mergedProfiles.addAll(newProfiles);",
      "info" : "ExpressionStatement[6133-6168]:ExpressionStatement[6133-6168]"
    }, {
      "left" : "newState.myProfilesIds = new ArrayList<String>(mergedProfiles);",
      "right" : "newState.myProfilesIds = new ArrayList<String>(mergedProfiles);",
      "info" : "ExpressionStatement[6175-6238]:ExpressionStatement[6175-6238]"
    }, {
      "left" : "newState.myModelMap = readerResult.nativeModelMap;",
      "right" : "newState.myModelMap = readerResult.nativeModelMap;",
      "info" : "ExpressionStatement[6250-6300]:ExpressionStatement[6250-6300]"
    }, {
      "left" : "return setState(newState);",
      "right" : "return setState(newState);",
      "info" : "ReturnStatement[6306-6332]:ReturnStatement[6306-6332]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6340-6347]:Modifier[6340-6347]"
    }, {
      "left" : "MavenProjectChanges",
      "right" : "MavenProjectChanges",
      "info" : "SimpleType[6348-6367]:SimpleType[6348-6367]"
    }, {
      "left" : "setState",
      "right" : "setState",
      "info" : "SimpleName[6368-6376]:SimpleName[6368-6376]"
    }, {
      "left" : "State newState",
      "right" : "State newState",
      "info" : "SingleVariableDeclaration[6377-6391]:SingleVariableDeclaration[6377-6391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6393-6506]:Block[6393-6506]"
    }, {
      "left" : "MavenProjectChanges changes = myState.getChanges(newState);",
      "right" : "MavenProjectChanges changes = myState.getChanges(newState);",
      "info" : "VariableDeclarationStatement[6399-6458]:VariableDeclarationStatement[6399-6458]"
    }, {
      "left" : "myState = newState;",
      "right" : "myState = newState;",
      "info" : "ExpressionStatement[6463-6482]:ExpressionStatement[6463-6482]"
    }, {
      "left" : "return changes;",
      "right" : "return changes;",
      "info" : "ReturnStatement[6487-6502]:ReturnStatement[6487-6502]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[6510-6517]:Modifier[6510-6517]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6518-6524]:Modifier[6518-6524]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6525-6529]:PrimitiveType[6525-6529]"
    }, {
      "left" : "doSetResolvedAttributes",
      "right" : "doSetResolvedAttributes",
      "info" : "SimpleName[6530-6553]:SimpleName[6530-6553]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[6554-6565]:SingleVariableDeclaration[6554-6565]"
    }, {
      "left" : "MavenProjectReaderResult readerResult",
      "right" : "MavenProjectReaderResult readerResult",
      "info" : "SingleVariableDeclaration[6613-6650]:SingleVariableDeclaration[6613-6650]"
    }, {
      "left" : "boolean reset",
      "right" : "boolean reset",
      "info" : "SingleVariableDeclaration[6698-6711]:SingleVariableDeclaration[6698-6711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6713-8617]:Block[6713-8617]"
    }, {
      "left" : "MavenModel model = readerResult.mavenModel;",
      "right" : "MavenModel model = readerResult.mavenModel;",
      "info" : "VariableDeclarationStatement[6719-6762]:VariableDeclarationStatement[6719-6762]"
    }, {
      "left" : "Set<MavenId> newUnresolvedArtifacts = new THashSet<MavenId>();",
      "right" : "Set<MavenId> newUnresolvedArtifacts = new THashSet<MavenId>();",
      "info" : "VariableDeclarationStatement[6768-6830]:VariableDeclarationStatement[6768-6830]"
    }, {
      "left" : "LinkedHashSet<MavenRemoteRepository> newRepositories = new LinkedHashSet<MavenRemoteRepository>();",
      "right" : "LinkedHashSet<MavenRemoteRepository> newRepositories = new LinkedHashSet<MavenRemoteRepository>();",
      "info" : "VariableDeclarationStatement[6835-6933]:VariableDeclarationStatement[6835-6933]"
    }, {
      "left" : "LinkedHashSet<MavenArtifact> newDependencies = new LinkedHashSet<MavenArtifact>();",
      "right" : "LinkedHashSet<MavenArtifact> newDependencies = new LinkedHashSet<MavenArtifact>();",
      "info" : "VariableDeclarationStatement[6938-7020]:VariableDeclarationStatement[6938-7020]"
    }, {
      "left" : "LinkedHashSet<MavenArtifactNode> newDependencyTree = new LinkedHashSet<MavenArtifactNode>();",
      "right" : "LinkedHashSet<MavenArtifactNode> newDependencyTree = new LinkedHashSet<MavenArtifactNode>();",
      "info" : "VariableDeclarationStatement[7025-7117]:VariableDeclarationStatement[7025-7117]"
    }, {
      "left" : "LinkedHashSet<MavenPlugin> newPlugins = new LinkedHashSet<MavenPlugin>();",
      "right" : "LinkedHashSet<MavenPlugin> newPlugins = new LinkedHashSet<MavenPlugin>();",
      "info" : "VariableDeclarationStatement[7122-7195]:VariableDeclarationStatement[7122-7195]"
    }, {
      "left" : "LinkedHashSet<MavenArtifact> newExtensions = new LinkedHashSet<MavenArtifact>();",
      "right" : "LinkedHashSet<MavenArtifact> newExtensions = new LinkedHashSet<MavenArtifact>();",
      "info" : "VariableDeclarationStatement[7200-7280]:VariableDeclarationStatement[7200-7280]"
    }, {
      "left" : "if (!reset)",
      "right" : "if (!reset)",
      "info" : "IfStatement[7286-7843]:IfStatement[7286-7843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7298-7843]:Block[7298-7843]"
    }, {
      "left" : "if (state.myUnresolvedArtifactIds != null)",
      "right" : "if (state.myUnresolvedArtifactIds != null)",
      "info" : "IfStatement[7306-7410]:IfStatement[7306-7410]"
    }, {
      "left" : "newUnresolvedArtifacts.addAll(state.myUnresolvedArtifactIds);",
      "right" : "newUnresolvedArtifacts.addAll(state.myUnresolvedArtifactIds);",
      "info" : "ExpressionStatement[7349-7410]:ExpressionStatement[7349-7410]"
    }, {
      "left" : "if (state.myRemoteRepositories != null)",
      "right" : "if (state.myRemoteRepositories != null)",
      "info" : "IfStatement[7417-7508]:IfStatement[7417-7508]"
    }, {
      "left" : "newRepositories.addAll(state.myRemoteRepositories);",
      "right" : "newRepositories.addAll(state.myRemoteRepositories);",
      "info" : "ExpressionStatement[7457-7508]:ExpressionStatement[7457-7508]"
    }, {
      "left" : "if (state.myDependencies != null)",
      "right" : "if (state.myDependencies != null)",
      "info" : "IfStatement[7515-7594]:IfStatement[7515-7594]"
    }, {
      "left" : "newDependencies.addAll(state.myDependencies);",
      "right" : "newDependencies.addAll(state.myDependencies);",
      "info" : "ExpressionStatement[7549-7594]:ExpressionStatement[7549-7594]"
    }, {
      "left" : "if (state.myDependencyTree != null)",
      "right" : "if (state.myDependencyTree != null)",
      "info" : "IfStatement[7601-7686]:IfStatement[7601-7686]"
    }, {
      "left" : "newDependencyTree.addAll(state.myDependencyTree);",
      "right" : "newDependencyTree.addAll(state.myDependencyTree);",
      "info" : "ExpressionStatement[7637-7686]:ExpressionStatement[7637-7686]"
    }, {
      "left" : "if (state.myPlugins != null)",
      "right" : "if (state.myPlugins != null)",
      "info" : "IfStatement[7693-7757]:IfStatement[7693-7757]"
    }, {
      "left" : "newPlugins.addAll(state.myPlugins);",
      "right" : "newPlugins.addAll(state.myPlugins);",
      "info" : "ExpressionStatement[7722-7757]:ExpressionStatement[7722-7757]"
    }, {
      "left" : "if (state.myExtensions != null)",
      "right" : "if (state.myExtensions != null)",
      "info" : "IfStatement[7764-7837]:IfStatement[7764-7837]"
    }, {
      "left" : "newExtensions.addAll(state.myExtensions);",
      "right" : "newExtensions.addAll(state.myExtensions);",
      "info" : "ExpressionStatement[7796-7837]:ExpressionStatement[7796-7837]"
    }, {
      "left" : "newUnresolvedArtifacts.addAll(readerResult.unresolvedArtifactIds);",
      "right" : "newUnresolvedArtifacts.addAll(readerResult.unresolvedArtifactIds);",
      "info" : "ExpressionStatement[7849-7915]:ExpressionStatement[7849-7915]"
    }, {
      "left" : "newRepositories.addAll(model.getRemoteRepositories());",
      "right" : "newRepositories.addAll(model.getRemoteRepositories());",
      "info" : "ExpressionStatement[7920-7974]:ExpressionStatement[7920-7974]"
    }, {
      "left" : "newDependencyTree.addAll(model.getDependencyTree());",
      "right" : "newDependencyTree.addAll(model.getDependencyTree());",
      "info" : "ExpressionStatement[7979-8031]:ExpressionStatement[7979-8031]"
    }, {
      "left" : "newDependencies.addAll(model.getDependencies());",
      "right" : "newDependencies.addAll(model.getDependencies());",
      "info" : "ExpressionStatement[8036-8084]:ExpressionStatement[8036-8084]"
    }, {
      "left" : "newPlugins.addAll(model.getPlugins());",
      "right" : "newPlugins.addAll(model.getPlugins());",
      "info" : "ExpressionStatement[8089-8127]:ExpressionStatement[8089-8127]"
    }, {
      "left" : "newExtensions.addAll(model.getExtensions());",
      "right" : "newExtensions.addAll(model.getExtensions());",
      "info" : "ExpressionStatement[8132-8176]:ExpressionStatement[8132-8176]"
    }, {
      "left" : "state.myUnresolvedArtifactIds = newUnresolvedArtifacts;",
      "right" : "state.myUnresolvedArtifactIds = newUnresolvedArtifacts;",
      "info" : "ExpressionStatement[8182-8237]:ExpressionStatement[8182-8237]"
    }, {
      "left" : "state.myRemoteRepositories = new ArrayList<MavenRemoteRepository>(newRepositories);",
      "right" : "state.myRemoteRepositories = new ArrayList<MavenRemoteRepository>(newRepositories);",
      "info" : "ExpressionStatement[8242-8325]:ExpressionStatement[8242-8325]"
    }, {
      "left" : "state.myDependencies = new ArrayList<MavenArtifact>(newDependencies);",
      "right" : "state.myDependencies = new ArrayList<MavenArtifact>(newDependencies);",
      "info" : "ExpressionStatement[8330-8399]:ExpressionStatement[8330-8399]"
    }, {
      "left" : "state.myDependencyTree = new ArrayList<MavenArtifactNode>(newDependencyTree);",
      "right" : "state.myDependencyTree = new ArrayList<MavenArtifactNode>(newDependencyTree);",
      "info" : "ExpressionStatement[8404-8481]:ExpressionStatement[8404-8481]"
    }, {
      "left" : "state.myPlugins = new ArrayList<MavenPlugin>(newPlugins);",
      "right" : "state.myPlugins = new ArrayList<MavenPlugin>(newPlugins);",
      "info" : "ExpressionStatement[8486-8543]:ExpressionStatement[8486-8543]"
    }, {
      "left" : "state.myExtensions = new ArrayList<MavenArtifact>(newExtensions);",
      "right" : "state.myExtensions = new ArrayList<MavenArtifact>(newExtensions);",
      "info" : "ExpressionStatement[8548-8613]:ExpressionStatement[8548-8613]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8621-8628]:Modifier[8621-8628]"
    }, {
      "left" : "MavenProjectChanges",
      "right" : "MavenProjectChanges",
      "info" : "SimpleType[8629-8648]:SimpleType[8629-8648]"
    }, {
      "left" : "setFolders",
      "right" : "setFolders",
      "info" : "SimpleName[8649-8659]:SimpleName[8649-8659]"
    }, {
      "left" : "MavenProjectReaderResult readerResult",
      "right" : "MavenProjectReaderResult readerResult",
      "info" : "SingleVariableDeclaration[8660-8697]:SingleVariableDeclaration[8660-8697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8699-8815]:Block[8699-8815]"
    }, {
      "left" : "State newState = myState.clone();",
      "right" : "State newState = myState.clone();",
      "info" : "VariableDeclarationStatement[8705-8738]:VariableDeclarationStatement[8705-8738]"
    }, {
      "left" : "doSetFolders(newState, readerResult);",
      "right" : "doSetFolders(newState, readerResult);",
      "info" : "ExpressionStatement[8743-8780]:ExpressionStatement[8743-8780]"
    }, {
      "left" : "return setState(newState);",
      "right" : "return setState(newState);",
      "info" : "ReturnStatement[8785-8811]:ReturnStatement[8785-8811]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8819-8826]:Modifier[8819-8826]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8827-8833]:Modifier[8827-8833]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8834-8838]:PrimitiveType[8834-8838]"
    }, {
      "left" : "doSetFolders",
      "right" : "doSetFolders",
      "info" : "SimpleName[8839-8851]:SimpleName[8839-8851]"
    }, {
      "left" : "State newState",
      "right" : "State newState",
      "info" : "SingleVariableDeclaration[8852-8866]:SingleVariableDeclaration[8852-8866]"
    }, {
      "left" : "MavenProjectReaderResult readerResult",
      "right" : "MavenProjectReaderResult readerResult",
      "info" : "SingleVariableDeclaration[8868-8905]:SingleVariableDeclaration[8868-8905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8907-9209]:Block[8907-9209]"
    }, {
      "left" : "MavenModel model = readerResult.mavenModel;",
      "right" : "MavenModel model = readerResult.mavenModel;",
      "info" : "VariableDeclarationStatement[8913-8956]:VariableDeclarationStatement[8913-8956]"
    }, {
      "left" : "newState.mySources = model.getBuild().getSources();",
      "right" : "newState.mySources = model.getBuild().getSources();",
      "info" : "ExpressionStatement[8961-9012]:ExpressionStatement[8961-9012]"
    }, {
      "left" : "newState.myTestSources = model.getBuild().getTestSources();",
      "right" : "newState.myTestSources = model.getBuild().getTestSources();",
      "info" : "ExpressionStatement[9017-9076]:ExpressionStatement[9017-9076]"
    }, {
      "left" : "newState.myResources = model.getBuild().getResources();",
      "right" : "newState.myResources = model.getBuild().getResources();",
      "info" : "ExpressionStatement[9082-9137]:ExpressionStatement[9082-9137]"
    }, {
      "left" : "newState.myTestResources = model.getBuild().getTestResources();",
      "right" : "newState.myTestResources = model.getBuild().getTestResources();",
      "info" : "ExpressionStatement[9142-9205]:ExpressionStatement[9142-9205]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9213-9220]:Modifier[9213-9220]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9221-9227]:Modifier[9221-9227]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[9228-9247]:ParameterizedType[9228-9247]"
    }, {
      "left" : "collectModulePathsAndNames",
      "right" : "collectModulePathsAndNames",
      "info" : "SimpleName[9248-9274]:SimpleName[9248-9274]"
    }, {
      "left" : "MavenModel mavenModel",
      "right" : "MavenModel mavenModel",
      "info" : "SingleVariableDeclaration[9275-9296]:SingleVariableDeclaration[9275-9296]"
    }, {
      "left" : "String baseDir",
      "right" : "String baseDir",
      "info" : "SingleVariableDeclaration[9298-9312]:SingleVariableDeclaration[9298-9312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9314-9636]:Block[9314-9636]"
    }, {
      "left" : "String basePath = baseDir + \"/\";",
      "right" : "String basePath = baseDir + \"/\";",
      "info" : "VariableDeclarationStatement[9320-9352]:VariableDeclarationStatement[9320-9352]"
    }, {
      "left" : "Map<String, String> result = new LinkedHashMap<String, String>();",
      "right" : "Map<String, String> result = new LinkedHashMap<String, String>();",
      "info" : "VariableDeclarationStatement[9357-9422]:VariableDeclarationStatement[9357-9422]"
    }, {
      "left" : "for (Map.Entry<String, String> each : collectModulesRelativePathsAndNames(mavenModel).entrySet())",
      "right" : "for (Map.Entry<String, String> each : collectModulesRelativePathsAndNames(mavenModel).entrySet())",
      "info" : "EnhancedForStatement[9427-9613]:EnhancedForStatement[9427-9613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9525-9613]:Block[9525-9613]"
    }, {
      "left" : "result.put(new Path(basePath + each.getKey()).getPath(), each.getValue());",
      "right" : "result.put(new Path(basePath + each.getKey()).getPath(), each.getValue());",
      "info" : "ExpressionStatement[9533-9607]:ExpressionStatement[9533-9607]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[9618-9632]:ReturnStatement[9618-9632]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[9640-9647]:Modifier[9640-9647]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9648-9654]:Modifier[9648-9654]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[9655-9674]:ParameterizedType[9655-9674]"
    }, {
      "left" : "collectModulesRelativePathsAndNames",
      "right" : "collectModulesRelativePathsAndNames",
      "info" : "SimpleName[9675-9710]:SimpleName[9675-9710]"
    }, {
      "left" : "MavenModel mavenModel",
      "right" : "MavenModel mavenModel",
      "info" : "SingleVariableDeclaration[9711-9732]:SingleVariableDeclaration[9711-9732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9734-10246]:Block[9734-10246]"
    }, {
      "left" : "LinkedHashMap<String, String> result = new LinkedHashMap<String, String>();",
      "right" : "LinkedHashMap<String, String> result = new LinkedHashMap<String, String>();",
      "info" : "VariableDeclarationStatement[9740-9815]:VariableDeclarationStatement[9740-9815]"
    }, {
      "left" : "for (String name : mavenModel.getModules())",
      "right" : "for (String name : mavenModel.getModules())",
      "info" : "EnhancedForStatement[9820-10223]:EnhancedForStatement[9820-10223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9864-10223]:Block[9864-10223]"
    }, {
      "left" : "name = name.trim();",
      "right" : "name = name.trim();",
      "info" : "ExpressionStatement[9872-9891]:ExpressionStatement[9872-9891]"
    }, {
      "left" : "if (name.length() == 0)",
      "right" : "if (name.length() == 0)",
      "info" : "IfStatement[9899-9932]:IfStatement[9899-9932]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[9923-9932]:ContinueStatement[9923-9932]"
    }, {
      "left" : "String originalName = name;",
      "right" : "String originalName = name;",
      "info" : "VariableDeclarationStatement[9940-9967]:VariableDeclarationStatement[9940-9967]"
    }, {
      "left" : "name = FileUtil.toSystemIndependentName(name);",
      "right" : "name = FileUtil.toSystemIndependentName(name);",
      "info" : "ExpressionStatement[10050-10096]:ExpressionStatement[10050-10096]"
    }, {
      "left" : "if (!name.endsWith(\"/\"))",
      "right" : "if (!name.endsWith(\"/\"))",
      "info" : "IfStatement[10103-10140]:IfStatement[10103-10140]"
    }, {
      "left" : "name += \"/\";",
      "right" : "name += \"/\";",
      "info" : "ExpressionStatement[10128-10140]:ExpressionStatement[10128-10140]"
    }, {
      "left" : "name += MavenConstants.POM_XML;",
      "right" : "name += MavenConstants.POM_XML;",
      "info" : "ExpressionStatement[10147-10178]:ExpressionStatement[10147-10178]"
    }, {
      "left" : "result.put(name, originalName);",
      "right" : "result.put(name, originalName);",
      "info" : "ExpressionStatement[10186-10217]:ExpressionStatement[10186-10217]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[10228-10242]:ReturnStatement[10228-10242]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10250-10257]:Modifier[10250-10257]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10258-10264]:Modifier[10258-10264]"
    }, {
      "left" : "Collection<String>",
      "right" : "Collection<String>",
      "info" : "ParameterizedType[10265-10283]:ParameterizedType[10265-10283]"
    }, {
      "left" : "collectProfilesIds",
      "right" : "collectProfilesIds",
      "info" : "SimpleName[10284-10302]:SimpleName[10284-10302]"
    }, {
      "left" : "Collection<MavenProfile> profiles",
      "right" : "Collection<MavenProfile> profiles",
      "info" : "SingleVariableDeclaration[10303-10336]:SingleVariableDeclaration[10303-10336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10338-10564]:Block[10338-10564]"
    }, {
      "left" : "if (profiles == null)",
      "right" : "if (profiles == null)",
      "info" : "IfStatement[10344-10397]:IfStatement[10344-10397]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[10366-10397]:ReturnStatement[10366-10397]"
    }, {
      "left" : "Set<String> result = new THashSet<String>(profiles.size());",
      "right" : "Set<String> result = new THashSet<String>(profiles.size());",
      "info" : "VariableDeclarationStatement[10403-10462]:VariableDeclarationStatement[10403-10462]"
    }, {
      "left" : "for (MavenProfile each : profiles)",
      "right" : "for (MavenProfile each : profiles)",
      "info" : "EnhancedForStatement[10467-10541]:EnhancedForStatement[10467-10541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10502-10541]:Block[10502-10541]"
    }, {
      "left" : "result.add(each.getId());",
      "right" : "result.add(each.getId());",
      "info" : "ExpressionStatement[10510-10535]:ExpressionStatement[10510-10535]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[10546-10560]:ReturnStatement[10546-10560]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10568-10574]:Modifier[10568-10574]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[10575-10579]:PrimitiveType[10575-10579]"
    }, {
      "left" : "getLastReadStamp",
      "right" : "getLastReadStamp",
      "info" : "SimpleName[10580-10596]:SimpleName[10580-10596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10599-10640]:Block[10599-10640]"
    }, {
      "left" : "return myState.myLastReadStamp;",
      "right" : "return myState.myLastReadStamp;",
      "info" : "ReturnStatement[10605-10636]:ReturnStatement[10605-10636]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[10644-10652]:MarkerAnnotation[10644-10652]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10655-10661]:Modifier[10655-10661]"
    }, {
      "left" : "VirtualFile",
      "right" : "VirtualFile",
      "info" : "SimpleType[10662-10673]:SimpleType[10662-10673]"
    }, {
      "left" : "getFile",
      "right" : "getFile",
      "info" : "SimpleName[10674-10681]:SimpleName[10674-10681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10684-10708]:Block[10684-10708]"
    }, {
      "left" : "return myFile;",
      "right" : "return myFile;",
      "info" : "ReturnStatement[10690-10704]:ReturnStatement[10690-10704]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[10712-10720]:MarkerAnnotation[10712-10720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10723-10729]:Modifier[10723-10729]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10730-10736]:SimpleType[10730-10736]"
    }, {
      "left" : "getPath",
      "right" : "getPath",
      "info" : "SimpleName[10737-10744]:SimpleName[10737-10744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10747-10781]:Block[10747-10781]"
    }, {
      "left" : "return myFile.getPath();",
      "right" : "return myFile.getPath();",
      "info" : "ReturnStatement[10753-10777]:ReturnStatement[10753-10777]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[10785-10793]:MarkerAnnotation[10785-10793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10796-10802]:Modifier[10796-10802]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10803-10809]:SimpleType[10803-10809]"
    }, {
      "left" : "getDirectory",
      "right" : "getDirectory",
      "info" : "SimpleName[10810-10822]:SimpleName[10810-10822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10825-10871]:Block[10825-10871]"
    }, {
      "left" : "return myFile.getParent().getPath();",
      "right" : "return myFile.getParent().getPath();",
      "info" : "ReturnStatement[10831-10867]:ReturnStatement[10831-10867]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[10875-10883]:MarkerAnnotation[10875-10883]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10886-10892]:Modifier[10886-10892]"
    }, {
      "left" : "VirtualFile",
      "right" : "VirtualFile",
      "info" : "SimpleType[10893-10904]:SimpleType[10893-10904]"
    }, {
      "left" : "getDirectoryFile",
      "right" : "getDirectoryFile",
      "info" : "SimpleName[10905-10921]:SimpleName[10905-10921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10924-10960]:Block[10924-10960]"
    }, {
      "left" : "return myFile.getParent();",
      "right" : "return myFile.getParent();",
      "info" : "ReturnStatement[10930-10956]:ReturnStatement[10930-10956]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[10964-10973]:MarkerAnnotation[10964-10973]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10976-10982]:Modifier[10976-10982]"
    }, {
      "left" : "VirtualFile",
      "right" : "VirtualFile",
      "info" : "SimpleType[10983-10994]:SimpleType[10983-10994]"
    }, {
      "left" : "getProfilesXmlFile",
      "right" : "getProfilesXmlFile",
      "info" : "SimpleName[10995-11013]:SimpleName[10995-11013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11016-11071]:Block[11016-11071]"
    }, {
      "left" : "return MavenUtil.findProfilesXmlFile(myFile);",
      "right" : "return MavenUtil.findProfilesXmlFile(myFile);",
      "info" : "ReturnStatement[11022-11067]:ReturnStatement[11022-11067]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[11075-11083]:MarkerAnnotation[11075-11083]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11086-11092]:Modifier[11086-11092]"
    }, {
      "left" : "File",
      "right" : "File",
      "info" : "SimpleType[11093-11097]:SimpleType[11093-11097]"
    }, {
      "left" : "getProfilesXmlIoFile",
      "right" : "getProfilesXmlIoFile",
      "info" : "SimpleName[11098-11118]:SimpleName[11098-11118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11121-11177]:Block[11121-11177]"
    }, {
      "left" : "return MavenUtil.getProfilesXmlIoFile(myFile);",
      "right" : "return MavenUtil.getProfilesXmlIoFile(myFile);",
      "info" : "ReturnStatement[11127-11173]:ReturnStatement[11127-11173]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11181-11187]:Modifier[11181-11187]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11188-11195]:PrimitiveType[11188-11195]"
    }, {
      "left" : "hasReadingProblems",
      "right" : "hasReadingProblems",
      "info" : "SimpleName[11196-11214]:SimpleName[11196-11214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11217-11271]:Block[11217-11271]"
    }, {
      "left" : "return !myState.myReadingProblems.isEmpty();",
      "right" : "return !myState.myReadingProblems.isEmpty();",
      "info" : "ReturnStatement[11223-11267]:ReturnStatement[11223-11267]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[11275-11284]:MarkerAnnotation[11275-11284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11287-11293]:Modifier[11287-11293]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11294-11300]:SimpleType[11294-11300]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[11301-11308]:SimpleName[11301-11308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11311-11343]:Block[11311-11343]"
    }, {
      "left" : "return myState.myName;",
      "right" : "return myState.myName;",
      "info" : "ReturnStatement[11317-11339]:ReturnStatement[11317-11339]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[11347-11355]:MarkerAnnotation[11347-11355]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11358-11364]:Modifier[11358-11364]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11365-11371]:SimpleType[11365-11371]"
    }, {
      "left" : "getDisplayName",
      "right" : "getDisplayName",
      "info" : "SimpleName[11372-11386]:SimpleName[11372-11386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11389-11573]:Block[11389-11573]"
    }, {
      "left" : "State state = myState;",
      "right" : "State state = myState;",
      "info" : "VariableDeclarationStatement[11395-11417]:VariableDeclarationStatement[11395-11417]"
    }, {
      "left" : "if (StringUtil.isEmptyOrSpaces(state.myName))",
      "right" : "if (StringUtil.isEmptyOrSpaces(state.myName))",
      "info" : "IfStatement[11422-11544]:IfStatement[11422-11544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11468-11544]:Block[11468-11544]"
    }, {
      "left" : "return StringUtil.notNullize(state.myMavenId.getArtifactId());",
      "right" : "return StringUtil.notNullize(state.myMavenId.getArtifactId());",
      "info" : "ReturnStatement[11476-11538]:ReturnStatement[11476-11538]"
    }, {
      "left" : "return state.myName;",
      "right" : "return state.myName;",
      "info" : "ReturnStatement[11549-11569]:ReturnStatement[11549-11569]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[11577-11585]:MarkerAnnotation[11577-11585]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11588-11594]:Modifier[11588-11594]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[11595-11614]:ParameterizedType[11595-11614]"
    }, {
      "left" : "getModelMap",
      "right" : "getModelMap",
      "info" : "SimpleName[11615-11626]:SimpleName[11615-11626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11629-11665]:Block[11629-11665]"
    }, {
      "left" : "return myState.myModelMap;",
      "right" : "return myState.myModelMap;",
      "info" : "ReturnStatement[11635-11661]:ReturnStatement[11635-11661]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[11669-11677]:MarkerAnnotation[11669-11677]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11680-11686]:Modifier[11680-11686]"
    }, {
      "left" : "MavenId",
      "right" : "MavenId",
      "info" : "SimpleType[11687-11694]:SimpleType[11687-11694]"
    }, {
      "left" : "getMavenId",
      "right" : "getMavenId",
      "info" : "SimpleName[11695-11705]:SimpleName[11695-11705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11708-11743]:Block[11708-11743]"
    }, {
      "left" : "return myState.myMavenId;",
      "right" : "return myState.myMavenId;",
      "info" : "ReturnStatement[11714-11739]:ReturnStatement[11714-11739]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[11747-11756]:MarkerAnnotation[11747-11756]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11759-11765]:Modifier[11759-11765]"
    }, {
      "left" : "MavenId",
      "right" : "MavenId",
      "info" : "SimpleType[11766-11773]:SimpleType[11766-11773]"
    }, {
      "left" : "getParentId",
      "right" : "getParentId",
      "info" : "SimpleName[11774-11785]:SimpleName[11774-11785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11788-11824]:Block[11788-11824]"
    }, {
      "left" : "return myState.myParentId;",
      "right" : "return myState.myParentId;",
      "info" : "ReturnStatement[11794-11820]:ReturnStatement[11794-11820]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[11828-11836]:MarkerAnnotation[11828-11836]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11839-11845]:Modifier[11839-11845]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11846-11852]:SimpleType[11846-11852]"
    }, {
      "left" : "getPackaging",
      "right" : "getPackaging",
      "info" : "SimpleName[11853-11865]:SimpleName[11853-11865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11868-11905]:Block[11868-11905]"
    }, {
      "left" : "return myState.myPackaging;",
      "right" : "return myState.myPackaging;",
      "info" : "ReturnStatement[11874-11901]:ReturnStatement[11874-11901]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[11909-11917]:MarkerAnnotation[11909-11917]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11920-11926]:Modifier[11920-11926]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11927-11933]:SimpleType[11927-11933]"
    }, {
      "left" : "getFinalName",
      "right" : "getFinalName",
      "info" : "SimpleName[11934-11946]:SimpleName[11934-11946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11949-11986]:Block[11949-11986]"
    }, {
      "left" : "return myState.myFinalName;",
      "right" : "return myState.myFinalName;",
      "info" : "ReturnStatement[11955-11982]:ReturnStatement[11955-11982]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[11990-11999]:MarkerAnnotation[11990-11999]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12002-12008]:Modifier[12002-12008]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12009-12015]:SimpleType[12009-12015]"
    }, {
      "left" : "getDefaultGoal",
      "right" : "getDefaultGoal",
      "info" : "SimpleName[12016-12030]:SimpleName[12016-12030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12033-12072]:Block[12033-12072]"
    }, {
      "left" : "return myState.myDefaultGoal;",
      "right" : "return myState.myDefaultGoal;",
      "info" : "ReturnStatement[12039-12068]:ReturnStatement[12039-12068]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[12076-12084]:MarkerAnnotation[12076-12084]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12087-12093]:Modifier[12087-12093]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12094-12100]:SimpleType[12094-12100]"
    }, {
      "left" : "getBuildDirectory",
      "right" : "getBuildDirectory",
      "info" : "SimpleName[12101-12118]:SimpleName[12101-12118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12121-12163]:Block[12121-12163]"
    }, {
      "left" : "return myState.myBuildDirectory;",
      "right" : "return myState.myBuildDirectory;",
      "info" : "ReturnStatement[12127-12159]:ReturnStatement[12127-12159]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[12167-12175]:MarkerAnnotation[12167-12175]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12178-12184]:Modifier[12178-12184]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12185-12191]:SimpleType[12185-12191]"
    }, {
      "left" : "getGeneratedSourcesDirectory",
      "right" : "getGeneratedSourcesDirectory",
      "info" : "SimpleName[12192-12220]:SimpleName[12192-12220]"
    }, {
      "left" : "boolean testSources",
      "right" : "boolean testSources",
      "info" : "SingleVariableDeclaration[12221-12240]:SingleVariableDeclaration[12221-12240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12242-12346]:Block[12242-12346]"
    }, {
      "left" : "return getBuildDirectory() + (testSources ? \"/generated-test-sources\" : \"/generated-sources\");",
      "right" : "return getBuildDirectory() + (testSources ? \"/generated-test-sources\" : \"/generated-sources\");",
      "info" : "ReturnStatement[12248-12342]:ReturnStatement[12248-12342]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[12350-12358]:MarkerAnnotation[12350-12358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12361-12367]:Modifier[12361-12367]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12368-12374]:SimpleType[12368-12374]"
    }, {
      "left" : "getAnnotationProcessorDirectory",
      "right" : "getAnnotationProcessorDirectory",
      "info" : "SimpleName[12375-12406]:SimpleName[12375-12406]"
    }, {
      "left" : "boolean testSources",
      "right" : "boolean testSources",
      "info" : "SingleVariableDeclaration[12407-12426]:SingleVariableDeclaration[12407-12426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12428-13533]:Block[12428-13533]"
    }, {
      "left" : "if (getProcMode() == ProcMode.NONE)",
      "right" : "if (getProcMode() == ProcMode.NONE)",
      "info" : "IfStatement[12434-13256]:IfStatement[12434-13256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12470-13256]:Block[12470-13256]"
    }, {
      "left" : "MavenPlugin bscMavenPlugin = findPlugin(\"org.bsc.maven\", \"maven-processor-plugin\");",
      "right" : "MavenPlugin bscMavenPlugin = findPlugin(\"org.bsc.maven\", \"maven-processor-plugin\");",
      "info" : "VariableDeclarationStatement[12478-12561]:VariableDeclarationStatement[12478-12561]"
    }, {
      "left" : "Element cfg = getPluginGoalConfiguration(bscMavenPlugin, testSources ? \"process-test\" : \"process\");",
      "right" : "Element cfg = getPluginGoalConfiguration(bscMavenPlugin, testSources ? \"process-test\" : \"process\");",
      "info" : "VariableDeclarationStatement[12568-12667]:VariableDeclarationStatement[12568-12667]"
    }, {
      "left" : "if (bscMavenPlugin != null && cfg == null)",
      "right" : "if (bscMavenPlugin != null && cfg == null)",
      "info" : "IfStatement[12674-12789]:IfStatement[12674-12789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12717-12789]:Block[12717-12789]"
    }, {
      "left" : "return getBuildDirectory() + \"/generated-sources/apt\";",
      "right" : "return getBuildDirectory() + \"/generated-sources/apt\";",
      "info" : "ReturnStatement[12727-12781]:ReturnStatement[12727-12781]"
    }, {
      "left" : "if (cfg != null)",
      "right" : "if (cfg != null)",
      "info" : "IfStatement[12796-13250]:IfStatement[12796-13250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12813-13250]:Block[12813-13250]"
    }, {
      "left" : "String out = MavenJDOMUtil.findChildValueByPath(cfg, \"outputDirectory\");",
      "right" : "String out = MavenJDOMUtil.findChildValueByPath(cfg, \"outputDirectory\");",
      "info" : "VariableDeclarationStatement[12823-12895]:VariableDeclarationStatement[12823-12895]"
    }, {
      "left" : "if (out == null)",
      "right" : "if (out == null)",
      "info" : "IfStatement[12904-13123]:IfStatement[12904-13123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12921-13123]:Block[12921-13123]"
    }, {
      "left" : "out = MavenJDOMUtil.findChildValueByPath(cfg, \"defaultOutputDirectory\");",
      "right" : "out = MavenJDOMUtil.findChildValueByPath(cfg, \"defaultOutputDirectory\");",
      "info" : "ExpressionStatement[12933-13005]:ExpressionStatement[12933-13005]"
    }, {
      "left" : "if (out == null)",
      "right" : "if (out == null)",
      "info" : "IfStatement[13016-13113]:IfStatement[13016-13113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13033-13113]:Block[13033-13113]"
    }, {
      "left" : "return getBuildDirectory() + \"/generated-sources/apt\";",
      "right" : "return getBuildDirectory() + \"/generated-sources/apt\";",
      "info" : "ReturnStatement[13047-13101]:ReturnStatement[13047-13101]"
    }, {
      "left" : "if (!new File(out).isAbsolute())",
      "right" : "if (!new File(out).isAbsolute())",
      "info" : "IfStatement[13133-13221]:IfStatement[13133-13221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13166-13221]:Block[13166-13221]"
    }, {
      "left" : "out = getDirectory() + '/' + out;",
      "right" : "out = getDirectory() + '/' + out;",
      "info" : "ExpressionStatement[13178-13211]:ExpressionStatement[13178-13211]"
    }, {
      "left" : "return out;",
      "right" : "return out;",
      "info" : "ReturnStatement[13231-13242]:ReturnStatement[13231-13242]"
    }, {
      "left" : "String def = getGeneratedSourcesDirectory(testSources) + (testSources ? \"/test-annotations\" : \"/annotations\");",
      "right" : "String def = getGeneratedSourcesDirectory(testSources) + (testSources ? \"/test-annotations\" : \"/annotations\");",
      "info" : "VariableDeclarationStatement[13262-13372]:VariableDeclarationStatement[13262-13372]"
    }, {
      "left" : "return MavenJDOMUtil.findChildValueByPath(\n      getCompilerConfig(), testSources ? \"generatedTestSourcesDirectory\" : \"generatedSourcesDirectory\", def);",
      "right" : "return MavenJDOMUtil.findChildValueByPath(\n      getCompilerConfig(), testSources ? \"generatedTestSourcesDirectory\" : \"generatedSourcesDirectory\", def);",
      "info" : "ReturnStatement[13377-13529]:ReturnStatement[13377-13529]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[13537-13545]:MarkerAnnotation[13537-13545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13548-13554]:Modifier[13548-13554]"
    }, {
      "left" : "ProcMode",
      "right" : "ProcMode",
      "info" : "SimpleType[13555-13563]:SimpleType[13555-13563]"
    }, {
      "left" : "getProcMode",
      "right" : "getProcMode",
      "info" : "SimpleName[13564-13575]:SimpleName[13564-13575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13578-14871]:Block[13578-14871]"
    }, {
      "left" : "Element compilerConfiguration = getPluginExecutionConfiguration(\"org.apache.maven.plugins\", \"maven-compiler-plugin\", \"default-compile\");",
      "right" : "Element compilerConfiguration = getPluginExecutionConfiguration(\"org.apache.maven.plugins\", \"maven-compiler-plugin\", \"default-compile\");",
      "info" : "VariableDeclarationStatement[13584-13720]:VariableDeclarationStatement[13584-13720]"
    }, {
      "left" : "if (compilerConfiguration == null)",
      "right" : "if (compilerConfiguration == null)",
      "info" : "IfStatement[13725-13818]:IfStatement[13725-13818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13760-13818]:Block[13760-13818]"
    }, {
      "left" : "compilerConfiguration = getCompilerConfig();",
      "right" : "compilerConfiguration = getCompilerConfig();",
      "info" : "ExpressionStatement[13768-13812]:ExpressionStatement[13768-13812]"
    }, {
      "left" : "if (compilerConfiguration == null)",
      "right" : "if (compilerConfiguration == null)",
      "info" : "IfStatement[13824-13894]:IfStatement[13824-13894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13859-13894]:Block[13859-13894]"
    }, {
      "left" : "return ProcMode.BOTH;",
      "right" : "return ProcMode.BOTH;",
      "info" : "ReturnStatement[13867-13888]:ReturnStatement[13867-13888]"
    }, {
      "left" : "Element procElement = compilerConfiguration.getChild(\"proc\");",
      "right" : "Element procElement = compilerConfiguration.getChild(\"proc\");",
      "info" : "VariableDeclarationStatement[13900-13961]:VariableDeclarationStatement[13900-13961]"
    }, {
      "left" : "if (procElement != null)",
      "right" : "if (procElement != null)",
      "info" : "IfStatement[13966-14182]:IfStatement[13966-14182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13991-14182]:Block[13991-14182]"
    }, {
      "left" : "String procMode = procElement.getValue();",
      "right" : "String procMode = procElement.getValue();",
      "info" : "VariableDeclarationStatement[13999-14040]:VariableDeclarationStatement[13999-14040]"
    }, {
      "left" : "return (\"only\".equalsIgnoreCase(procMode)) ? ProcMode.ONLY : (\"none\".equalsIgnoreCase(procMode)) ? ProcMode.NONE : ProcMode.BOTH;",
      "right" : "return (\"only\".equalsIgnoreCase(procMode)) ? ProcMode.ONLY : (\"none\".equalsIgnoreCase(procMode)) ? ProcMode.NONE : ProcMode.BOTH;",
      "info" : "ReturnStatement[14047-14176]:ReturnStatement[14047-14176]"
    }, {
      "left" : "String compilerArgument = compilerConfiguration.getChildTextTrim(\"compilerArgument\");",
      "right" : "String compilerArgument = compilerConfiguration.getChildTextTrim(\"compilerArgument\");",
      "info" : "VariableDeclarationStatement[14188-14273]:VariableDeclarationStatement[14188-14273]"
    }, {
      "left" : "if (\"-proc:none\".equals(compilerArgument))",
      "right" : "if (\"-proc:none\".equals(compilerArgument))",
      "info" : "IfStatement[14278-14356]:IfStatement[14278-14356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14321-14356]:Block[14321-14356]"
    }, {
      "left" : "return ProcMode.NONE;",
      "right" : "return ProcMode.NONE;",
      "info" : "ReturnStatement[14329-14350]:ReturnStatement[14329-14350]"
    }, {
      "left" : "if (\"-proc:only\".equals(compilerArgument))",
      "right" : "if (\"-proc:only\".equals(compilerArgument))",
      "info" : "IfStatement[14361-14439]:IfStatement[14361-14439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14404-14439]:Block[14404-14439]"
    }, {
      "left" : "return ProcMode.ONLY;",
      "right" : "return ProcMode.ONLY;",
      "info" : "ReturnStatement[14412-14433]:ReturnStatement[14412-14433]"
    }, {
      "left" : "Element compilerArguments = compilerConfiguration.getChild(\"compilerArgs\");",
      "right" : "Element compilerArguments = compilerConfiguration.getChild(\"compilerArgs\");",
      "info" : "VariableDeclarationStatement[14445-14520]:VariableDeclarationStatement[14445-14520]"
    }, {
      "left" : "Element compilerArguments = compilerConfiguration.getChild(\"compilerArgs\");",
      "right" : "Element compilerArgs = compilerConfig.getChild(\"compilerArgs\");",
      "info" : "VariableDeclarationStatement[14445-14520]:VariableDeclarationStatement[16014-16077]"
    }, {
      "left" : "compilerArguments",
      "right" : "compilerArgs",
      "info" : "SimpleName[14453-14470]:SimpleName[16022-16034]"
    }, {
      "left" : "if (compilerArguments != null)",
      "right" : "if (compilerArguments != null)",
      "info" : "IfStatement[14525-14840]:IfStatement[14525-14840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14556-14840]:Block[14556-14840]"
    }, {
      "left" : "for (Element element : compilerArguments.getChildren())",
      "right" : "for (Element element : compilerArguments.getChildren())",
      "info" : "EnhancedForStatement[14564-14834]:EnhancedForStatement[14564-14834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14620-14834]:Block[14620-14834]"
    }, {
      "left" : "String arg = element.getValue();",
      "right" : "String arg = element.getValue();",
      "info" : "VariableDeclarationStatement[14630-14662]:VariableDeclarationStatement[14630-14662]"
    }, {
      "left" : "if (\"-proc:none\".equals(arg))",
      "right" : "if (\"-proc:none\".equals(arg))",
      "info" : "IfStatement[14671-14744]:IfStatement[14671-14744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14701-14744]:Block[14701-14744]"
    }, {
      "left" : "return ProcMode.NONE;",
      "right" : "return ProcMode.NONE;",
      "info" : "ReturnStatement[14713-14734]:ReturnStatement[14713-14734]"
    }, {
      "left" : "if (\"-proc:only\".equals(arg))",
      "right" : "if (\"-proc:only\".equals(arg))",
      "info" : "IfStatement[14753-14826]:IfStatement[14753-14826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14783-14826]:Block[14783-14826]"
    }, {
      "left" : "return ProcMode.ONLY;",
      "right" : "return ProcMode.ONLY;",
      "info" : "ReturnStatement[14795-14816]:ReturnStatement[14795-14816]"
    }, {
      "left" : "return ProcMode.BOTH;",
      "right" : "return ProcMode.BOTH;",
      "info" : "ReturnStatement[14846-14867]:ReturnStatement[14846-14867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14875-14881]:Modifier[14875-14881]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[14882-14901]:ParameterizedType[14882-14901]"
    }, {
      "left" : "getAnnotationProcessorOptions",
      "right" : "getAnnotationProcessorOptions",
      "info" : "SimpleName[14902-14931]:SimpleName[14902-14931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14934-15447]:Block[14934-15447]"
    }, {
      "left" : "Element compilerConfig = getCompilerConfig();",
      "right" : "Element compilerConfig = getCompilerConfig();",
      "info" : "VariableDeclarationStatement[14940-14985]:VariableDeclarationStatement[14940-14985]"
    }, {
      "left" : "if (compilerConfig == null)",
      "right" : "if (compilerConfig == null)",
      "info" : "IfStatement[14990-15062]:IfStatement[14990-15062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15018-15062]:Block[15018-15062]"
    }, {
      "left" : "return Collections.emptyMap();",
      "right" : "return Collections.emptyMap();",
      "info" : "ReturnStatement[15026-15056]:ReturnStatement[15026-15056]"
    }, {
      "left" : "if (getProcMode() != MavenProject.ProcMode.NONE)",
      "right" : "if (getProcMode() != MavenProject.ProcMode.NONE)",
      "info" : "IfStatement[15067-15201]:IfStatement[15067-15201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15116-15201]:Block[15116-15201]"
    }, {
      "left" : "return getAnnotationProcessorOptionsFromCompilerConfig(compilerConfig);",
      "right" : "return getAnnotationProcessorOptionsFromCompilerConfig(compilerConfig);",
      "info" : "ReturnStatement[15124-15195]:ReturnStatement[15124-15195]"
    }, {
      "left" : "MavenPlugin bscMavenPlugin = findPlugin(\"org.bsc.maven\", \"maven-processor-plugin\");",
      "right" : "MavenPlugin bscMavenPlugin = findPlugin(\"org.bsc.maven\", \"maven-processor-plugin\");",
      "info" : "VariableDeclarationStatement[15206-15289]:VariableDeclarationStatement[15206-15289]"
    }, {
      "left" : "if (bscMavenPlugin != null)",
      "right" : "if (bscMavenPlugin != null)",
      "info" : "IfStatement[15294-15408]:IfStatement[15294-15408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15322-15408]:Block[15322-15408]"
    }, {
      "left" : "return getAnnotationProcessorOptionsFromProcessorPlugin(bscMavenPlugin);",
      "right" : "return getAnnotationProcessorOptionsFromProcessorPlugin(bscMavenPlugin);",
      "info" : "ReturnStatement[15330-15402]:ReturnStatement[15330-15402]"
    }, {
      "left" : "return Collections.emptyMap();",
      "right" : "return Collections.emptyMap();",
      "info" : "ReturnStatement[15413-15443]:ReturnStatement[15413-15443]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15451-15458]:Modifier[15451-15458]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15459-15465]:Modifier[15459-15465]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[15466-15485]:ParameterizedType[15466-15485]"
    }, {
      "left" : "getAnnotationProcessorOptionsFromCompilerConfig",
      "right" : "getAnnotationProcessorOptionsFromCompilerConfig",
      "info" : "SimpleName[15486-15533]:SimpleName[15486-15533]"
    }, {
      "left" : "Element compilerConfig",
      "right" : "Element compilerConfig",
      "info" : "SingleVariableDeclaration[15534-15556]:SingleVariableDeclaration[15534-15556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15558-16830]:Block[15558-16772]"
    }, {
      "left" : "Map<String, String> res = null;",
      "right" : "Map<String, String> res = new LinkedHashMap<String, String>();",
      "info" : "VariableDeclarationStatement[15564-15595]:VariableDeclarationStatement[15564-15626]"
    }, {
      "left" : "String compilerArgument = compilerConfig.getChildText(\"compilerArgument\");",
      "right" : "String compilerArgument = compilerConfig.getChildText(\"compilerArgument\");",
      "info" : "VariableDeclarationStatement[15601-15675]:VariableDeclarationStatement[15632-15706]"
    }, {
      "left" : "if (!StringUtil.isEmptyOrSpaces(compilerArgument))",
      "right" : "if (!StringUtil.isEmptyOrSpaces(compilerArgument))",
      "info" : "IfStatement[15680-16231]:IfStatement[15711-16008]"
    }, {
      "left" : "StringUtil",
      "right" : "StringUtil",
      "info" : "METHOD_INVOCATION_RECEIVER[15685-15695]:METHOD_INVOCATION_RECEIVER[16176-16186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15731-16231]:Block[15762-16008]"
    }, {
      "left" : "ParametersList parametersList = new ParametersList();",
      "right" : "ParametersList parametersList = new ParametersList();",
      "info" : "VariableDeclarationStatement[15739-15792]:VariableDeclarationStatement[15770-15823]"
    }, {
      "left" : "parametersList.addParametersString(compilerArgument);",
      "right" : "parametersList.addParametersString(compilerArgument);",
      "info" : "ExpressionStatement[15799-15852]:ExpressionStatement[15830-15883]"
    }, {
      "left" : "for (String param : parametersList.getParameters())",
      "right" : "for (String param : parametersList.getParameters())",
      "info" : "EnhancedForStatement[15860-16225]:EnhancedForStatement[15891-16002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15912-16225]:Block[16877-17160]"
    }, {
      "left" : "if (param.startsWith(\"-A\"))",
      "right" : "if (compilerArg.startsWith(\"-A\"))",
      "info" : "IfStatement[15922-16217]:IfStatement[16953-17156]"
    }, {
      "left" : "param",
      "right" : "compilerArg",
      "info" : "SimpleName[15926-15931]:SimpleName[16957-16968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15950-16217]:Block[16987-17156]"
    }, {
      "left" : "int idx = param.indexOf('=', 3);",
      "right" : "int idx = compilerArg.indexOf('=', 3);",
      "info" : "VariableDeclarationStatement[15962-15994]:VariableDeclarationStatement[16995-17033]"
    }, {
      "left" : "param",
      "right" : "compilerArg",
      "info" : "SimpleName[15972-15977]:SimpleName[17005-17016]"
    }, {
      "left" : "if (idx >= 0)",
      "right" : "if (idx >= 0)",
      "info" : "IfStatement[16005-16207]:IfStatement[17040-17150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16019-16207]:Block[17054-17150]"
    }, {
      "left" : "res == null",
      "right" : "res == null",
      "info" : "InfixExpression[16037-16048]:InfixExpression[20585-20596]"
    }, {
      "left" : "new LinkedHashMap<String, String>()",
      "right" : "new LinkedHashMap<String, String>()",
      "info" : "ClassInstanceCreation[16072-16107]:ClassInstanceCreation[9779-9814]"
    }, {
      "left" : "res",
      "right" : "optionsMap",
      "info" : "SimpleName[16136-16139]:SimpleName[17064-17074]"
    }, {
      "left" : "res.put(param.substring(2, idx), param.substring(idx + 1));",
      "right" : "optionsMap.put(compilerArg.substring(2, idx), compilerArg.substring(idx + 1));",
      "info" : "ExpressionStatement[16136-16195]:ExpressionStatement[17064-17142]"
    }, {
      "left" : "param",
      "right" : "compilerArg",
      "info" : "SimpleName[16144-16149]:SimpleName[17079-17090]"
    }, {
      "left" : "param",
      "right" : "compilerArg",
      "info" : "SimpleName[16169-16174]:SimpleName[17110-17121]"
    }, {
      "left" : "Element compilerArguments = compilerConfig.getChild(\"compilerArguments\");",
      "right" : "Element compilerArguments = compilerConfig.getChild(\"compilerArguments\");",
      "info" : "VariableDeclarationStatement[16237-16310]:VariableDeclarationStatement[16330-16403]"
    }, {
      "left" : "compilerConfig",
      "right" : "compilerConfig",
      "info" : "METHOD_INVOCATION_RECEIVER[16265-16279]:METHOD_INVOCATION_RECEIVER[16037-16051]"
    }, {
      "left" : "if (compilerArguments != null)",
      "right" : "if (compilerArguments != null)",
      "info" : "IfStatement[16315-16756]:IfStatement[16408-16752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16346-16756]:Block[16439-16752]"
    }, {
      "left" : "for (Element e : compilerArguments.getChildren())",
      "right" : "for (Element e : compilerArguments.getChildren())",
      "info" : "EnhancedForStatement[16354-16750]:EnhancedForStatement[16447-16746]"
    }, {
      "left" : "Element e",
      "right" : "Element e",
      "info" : "SingleVariableDeclaration[16359-16368]:SingleVariableDeclaration[16121-16130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16403-16750]:Block[16496-16746]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[16413-16419]:SimpleType[16233-16239]"
    }, {
      "left" : "String name = e.getName();",
      "right" : "String name = e.getName();",
      "info" : "VariableDeclarationStatement[16413-16439]:VariableDeclarationStatement[16506-16532]"
    }, {
      "left" : "e.getName()",
      "right" : "e.getName()",
      "info" : "MethodInvocation[16427-16438]:MethodInvocation[16194-16205]"
    }, {
      "left" : "if (name.startsWith(\"-\"))",
      "right" : "if (name.startsWith(\"-\"))",
      "info" : "IfStatement[16448-16521]:IfStatement[16541-16614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16474-16521]:Block[16567-16614]"
    }, {
      "left" : "name = name.substring(1);",
      "right" : "name = name.substring(1);",
      "info" : "ExpressionStatement[16486-16511]:ExpressionStatement[16579-16604]"
    }, {
      "left" : "if (name.length() > 1 && name.charAt(0) == 'A')",
      "right" : "if (name.length() > 1 && name.charAt(0) == 'A')",
      "info" : "IfStatement[16531-16742]:IfStatement[16624-16738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16579-16742]:Block[16672-16738]"
    }, {
      "left" : "new LinkedHashMap<String, String>()",
      "right" : "new LinkedHashMap<String, String>()",
      "info" : "ClassInstanceCreation[16628-16663]:ClassInstanceCreation[15590-15625]"
    }, {
      "left" : "res.put(name.substring(1), e.getTextTrim());",
      "right" : "res.put(name.substring(1), e.getTextTrim());",
      "info" : "ExpressionStatement[16688-16732]:ExpressionStatement[16684-16728]"
    }, {
      "left" : "e.getTextTrim()",
      "right" : "e.getTextTrim()",
      "info" : "MethodInvocation[16715-16730]:MethodInvocation[16246-16261]"
    }, {
      "left" : "if (res == null)",
      "right" : "if (compilerConfig == null)",
      "info" : "IfStatement[16762-16809]:IfStatement[14990-15062]"
    }, {
      "left" : "res == null",
      "right" : "res == null",
      "info" : "InfixExpression[16766-16777]:InfixExpression[19991-20002]"
    }, {
      "left" : "return Collections.emptyMap();",
      "right" : "return Collections.emptyMap();",
      "info" : "ReturnStatement[16779-16809]:ReturnStatement[15026-15056]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[16815-16826]:ReturnStatement[16757-16768]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16834-16841]:Modifier[17164-17171]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16842-16848]:Modifier[17172-17178]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[16849-16868]:ParameterizedType[17179-17198]"
    }, {
      "left" : "getAnnotationProcessorOptionsFromProcessorPlugin",
      "right" : "getAnnotationProcessorOptionsFromProcessorPlugin",
      "info" : "SimpleName[16869-16917]:SimpleName[17199-17247]"
    }, {
      "left" : "MavenPlugin bscMavenPlugin",
      "right" : "MavenPlugin bscMavenPlugin",
      "info" : "SingleVariableDeclaration[16918-16944]:SingleVariableDeclaration[17248-17274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16946-17455]:Block[17276-17785]"
    }, {
      "left" : "Element cfg = bscMavenPlugin.getGoalConfiguration(\"process\");",
      "right" : "Element cfg = bscMavenPlugin.getGoalConfiguration(\"process\");",
      "info" : "VariableDeclarationStatement[16952-17013]:VariableDeclarationStatement[17282-17343]"
    }, {
      "left" : "if (cfg == null)",
      "right" : "if (cfg == null)",
      "info" : "IfStatement[17018-17096]:IfStatement[17348-17426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17035-17096]:Block[17365-17426]"
    }, {
      "left" : "cfg = bscMavenPlugin.getConfigurationElement();",
      "right" : "cfg = bscMavenPlugin.getConfigurationElement();",
      "info" : "ExpressionStatement[17043-17090]:ExpressionStatement[17373-17420]"
    }, {
      "left" : "LinkedHashMap<String, String> res = new LinkedHashMap<String, String>();",
      "right" : "LinkedHashMap<String, String> res = new LinkedHashMap<String, String>();",
      "info" : "VariableDeclarationStatement[17101-17173]:VariableDeclarationStatement[17431-17503]"
    }, {
      "left" : "if (cfg != null)",
      "right" : "if (cfg != null)",
      "info" : "IfStatement[17178-17435]:IfStatement[17508-17765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17195-17435]:Block[17525-17765]"
    }, {
      "left" : "final Element optionsElement = cfg.getChild(\"options\");",
      "right" : "final Element optionsElement = cfg.getChild(\"options\");",
      "info" : "VariableDeclarationStatement[17203-17258]:VariableDeclarationStatement[17533-17588]"
    }, {
      "left" : "if (optionsElement != null)",
      "right" : "if (optionsElement != null)",
      "info" : "IfStatement[17265-17429]:IfStatement[17595-17759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17293-17429]:Block[17623-17759]"
    }, {
      "left" : "for (Element option : optionsElement.getChildren())",
      "right" : "for (Element option : optionsElement.getChildren())",
      "info" : "EnhancedForStatement[17303-17421]:EnhancedForStatement[17633-17751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17355-17421]:Block[17685-17751]"
    }, {
      "left" : "res.put(option.getName(), option.getText());",
      "right" : "res.put(option.getName(), option.getText());",
      "info" : "ExpressionStatement[17367-17411]:ExpressionStatement[17697-17741]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[17440-17451]:ReturnStatement[17770-17781]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[17459-17468]:MarkerAnnotation[17789-17798]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17471-17477]:Modifier[17801-17807]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[17478-17490]:ParameterizedType[17808-17820]"
    }, {
      "left" : "getDeclaredAnnotationProcessors",
      "right" : "getDeclaredAnnotationProcessors",
      "info" : "SimpleName[17491-17522]:SimpleName[17821-17852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17525-18895]:Block[17855-19225]"
    }, {
      "left" : "Element compilerConfig = getCompilerConfig();",
      "right" : "Element compilerConfig = getCompilerConfig();",
      "info" : "VariableDeclarationStatement[17531-17576]:VariableDeclarationStatement[17861-17906]"
    }, {
      "left" : "if (compilerConfig == null)",
      "right" : "if (compilerConfig == null)",
      "info" : "IfStatement[17581-17635]:IfStatement[17911-17965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17609-17635]:Block[17939-17965]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17617-17629]:ReturnStatement[17947-17959]"
    }, {
      "left" : "List<String> result = new ArrayList<String>();",
      "right" : "List<String> result = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[17641-17687]:VariableDeclarationStatement[17971-18017]"
    }, {
      "left" : "if (getProcMode() != MavenProject.ProcMode.NONE)",
      "right" : "if (getProcMode() != MavenProject.ProcMode.NONE)",
      "info" : "IfStatement[17692-18871]:IfStatement[18022-19201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17741-18118]:Block[18071-18448]"
    }, {
      "left" : "Element processors = compilerConfig.getChild(\"annotationProcessors\");",
      "right" : "Element processors = compilerConfig.getChild(\"annotationProcessors\");",
      "info" : "VariableDeclarationStatement[17749-17818]:VariableDeclarationStatement[18079-18148]"
    }, {
      "left" : "if (processors != null)",
      "right" : "if (processors != null)",
      "info" : "IfStatement[17825-18112]:IfStatement[18155-18442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17849-18112]:Block[18179-18442]"
    }, {
      "left" : "for (Element element : processors.getChildren(\"annotationProcessor\"))",
      "right" : "for (Element element : processors.getChildren(\"annotationProcessor\"))",
      "info" : "EnhancedForStatement[17859-18104]:EnhancedForStatement[18189-18434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17929-18104]:Block[18259-18434]"
    }, {
      "left" : "String processorClassName = element.getTextTrim();",
      "right" : "String processorClassName = element.getTextTrim();",
      "info" : "VariableDeclarationStatement[17941-17991]:VariableDeclarationStatement[18271-18321]"
    }, {
      "left" : "if (!processorClassName.isEmpty())",
      "right" : "if (!processorClassName.isEmpty())",
      "info" : "IfStatement[18002-18094]:IfStatement[18332-18424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18037-18094]:Block[18367-18424]"
    }, {
      "left" : "result.add(processorClassName);",
      "right" : "result.add(processorClassName);",
      "info" : "ExpressionStatement[18051-18082]:ExpressionStatement[18381-18412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18128-18871]:Block[18458-19201]"
    }, {
      "left" : "MavenPlugin bscMavenPlugin = findPlugin(\"org.bsc.maven\", \"maven-processor-plugin\");",
      "right" : "MavenPlugin bscMavenPlugin = findPlugin(\"org.bsc.maven\", \"maven-processor-plugin\");",
      "info" : "VariableDeclarationStatement[18136-18219]:VariableDeclarationStatement[18466-18549]"
    }, {
      "left" : "if (bscMavenPlugin != null)",
      "right" : "if (bscMavenPlugin != null)",
      "info" : "IfStatement[18226-18865]:IfStatement[18556-19195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18254-18865]:Block[18584-19195]"
    }, {
      "left" : "Element bscCfg = bscMavenPlugin.getGoalConfiguration(\"process\");",
      "right" : "Element bscCfg = bscMavenPlugin.getGoalConfiguration(\"process\");",
      "info" : "VariableDeclarationStatement[18264-18328]:VariableDeclarationStatement[18594-18658]"
    }, {
      "left" : "if (bscCfg == null)",
      "right" : "if (bscCfg == null)",
      "info" : "IfStatement[18337-18429]:IfStatement[18667-18759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18357-18429]:Block[18687-18759]"
    }, {
      "left" : "bscCfg = bscMavenPlugin.getConfigurationElement();",
      "right" : "bscCfg = bscMavenPlugin.getConfigurationElement();",
      "info" : "ExpressionStatement[18369-18419]:ExpressionStatement[18699-18749]"
    }, {
      "left" : "if (bscCfg != null)",
      "right" : "if (bscCfg != null)",
      "info" : "IfStatement[18439-18857]:IfStatement[18769-19187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18459-18857]:Block[18789-19187]"
    }, {
      "left" : "Element bscProcessors = bscCfg.getChild(\"processors\");",
      "right" : "Element bscProcessors = bscCfg.getChild(\"processors\");",
      "info" : "VariableDeclarationStatement[18471-18525]:VariableDeclarationStatement[18801-18855]"
    }, {
      "left" : "if (bscProcessors != null)",
      "right" : "if (bscProcessors != null)",
      "info" : "IfStatement[18536-18847]:IfStatement[18866-19177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18563-18847]:Block[18893-19177]"
    }, {
      "left" : "for (Element element : bscProcessors.getChildren(\"processor\"))",
      "right" : "for (Element element : bscProcessors.getChildren(\"processor\"))",
      "info" : "EnhancedForStatement[18577-18835]:EnhancedForStatement[18907-19165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18640-18835]:Block[18970-19165]"
    }, {
      "left" : "String processorClassName = element.getTextTrim();",
      "right" : "String processorClassName = element.getTextTrim();",
      "info" : "VariableDeclarationStatement[18656-18706]:VariableDeclarationStatement[18986-19036]"
    }, {
      "left" : "if (!processorClassName.isEmpty())",
      "right" : "if (!processorClassName.isEmpty())",
      "info" : "IfStatement[18721-18821]:IfStatement[19051-19151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18756-18821]:Block[19086-19151]"
    }, {
      "left" : "result.add(processorClassName);",
      "right" : "result.add(processorClassName);",
      "info" : "ExpressionStatement[18774-18805]:ExpressionStatement[19104-19135]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[18877-18891]:ReturnStatement[19207-19221]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[18899-18907]:MarkerAnnotation[19229-19237]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18910-18916]:Modifier[19240-19246]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[18917-18923]:SimpleType[19247-19253]"
    }, {
      "left" : "getOutputDirectory",
      "right" : "getOutputDirectory",
      "info" : "SimpleName[18924-18942]:SimpleName[19254-19272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18945-18988]:Block[19275-19318]"
    }, {
      "left" : "return myState.myOutputDirectory;",
      "right" : "return myState.myOutputDirectory;",
      "info" : "ReturnStatement[18951-18984]:ReturnStatement[19281-19314]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[18992-19000]:MarkerAnnotation[19322-19330]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19003-19009]:Modifier[19333-19339]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[19010-19016]:SimpleType[19340-19346]"
    }, {
      "left" : "getTestOutputDirectory",
      "right" : "getTestOutputDirectory",
      "info" : "SimpleName[19017-19039]:SimpleName[19347-19369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19042-19089]:Block[19372-19419]"
    }, {
      "left" : "return myState.myTestOutputDirectory;",
      "right" : "return myState.myTestOutputDirectory;",
      "info" : "ReturnStatement[19048-19085]:ReturnStatement[19378-19415]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[19093-19101]:MarkerAnnotation[19423-19431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19104-19110]:Modifier[19434-19440]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[19111-19123]:ParameterizedType[19441-19453]"
    }, {
      "left" : "getSources",
      "right" : "getSources",
      "info" : "SimpleName[19124-19134]:SimpleName[19454-19464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19137-19172]:Block[19467-19502]"
    }, {
      "left" : "return myState.mySources;",
      "right" : "return myState.mySources;",
      "info" : "ReturnStatement[19143-19168]:ReturnStatement[19473-19498]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[19176-19184]:MarkerAnnotation[19506-19514]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19187-19193]:Modifier[19517-19523]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[19194-19206]:ParameterizedType[19524-19536]"
    }, {
      "left" : "getTestSources",
      "right" : "getTestSources",
      "info" : "SimpleName[19207-19221]:SimpleName[19537-19551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19224-19263]:Block[19554-19593]"
    }, {
      "left" : "return myState.myTestSources;",
      "right" : "return myState.myTestSources;",
      "info" : "ReturnStatement[19230-19259]:ReturnStatement[19560-19589]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[19267-19275]:MarkerAnnotation[19597-19605]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19278-19284]:Modifier[19608-19614]"
    }, {
      "left" : "List<MavenResource>",
      "right" : "List<MavenResource>",
      "info" : "ParameterizedType[19285-19304]:ParameterizedType[19615-19634]"
    }, {
      "left" : "getResources",
      "right" : "getResources",
      "info" : "SimpleName[19305-19317]:SimpleName[19635-19647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19320-19357]:Block[19650-19687]"
    }, {
      "left" : "return myState.myResources;",
      "right" : "return myState.myResources;",
      "info" : "ReturnStatement[19326-19353]:ReturnStatement[19656-19683]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[19361-19369]:MarkerAnnotation[19691-19699]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19372-19378]:Modifier[19702-19708]"
    }, {
      "left" : "List<MavenResource>",
      "right" : "List<MavenResource>",
      "info" : "ParameterizedType[19379-19398]:ParameterizedType[19709-19728]"
    }, {
      "left" : "getTestResources",
      "right" : "getTestResources",
      "info" : "SimpleName[19399-19415]:SimpleName[19729-19745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19418-19459]:Block[19748-19789]"
    }, {
      "left" : "return myState.myTestResources;",
      "right" : "return myState.myTestResources;",
      "info" : "ReturnStatement[19424-19455]:ReturnStatement[19754-19785]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[19463-19471]:MarkerAnnotation[19793-19801]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19474-19480]:Modifier[19804-19810]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[19481-19493]:ParameterizedType[19811-19823]"
    }, {
      "left" : "getFilters",
      "right" : "getFilters",
      "info" : "SimpleName[19494-19504]:SimpleName[19824-19834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19507-19542]:Block[19837-19872]"
    }, {
      "left" : "return myState.myFilters;",
      "right" : "return myState.myFilters;",
      "info" : "ReturnStatement[19513-19538]:ReturnStatement[19843-19868]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19546-19552]:Modifier[19876-19882]"
    }, {
      "left" : "List<String>",
      "right" : "List<String>",
      "info" : "ParameterizedType[19553-19565]:ParameterizedType[19883-19895]"
    }, {
      "left" : "getFilterPropertiesFiles",
      "right" : "getFilterPropertiesFiles",
      "info" : "SimpleName[19566-19590]:SimpleName[19896-19920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19593-20440]:Block[19923-20770]"
    }, {
      "left" : "List<String> res = getCachedValue(FILTERS_CACHE_KEY);",
      "right" : "List<String> res = getCachedValue(FILTERS_CACHE_KEY);",
      "info" : "VariableDeclarationStatement[19599-19652]:VariableDeclarationStatement[19929-19982]"
    }, {
      "left" : "if (res == null)",
      "right" : "if (res == null)",
      "info" : "IfStatement[19657-20419]:IfStatement[19987-20749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19674-20419]:Block[20004-20749]"
    }, {
      "left" : "Element propCfg = getPluginGoalConfiguration(\"org.codehaus.mojo\", \"properties-maven-plugin\", \"read-project-properties\");",
      "right" : "Element propCfg = getPluginGoalConfiguration(\"org.codehaus.mojo\", \"properties-maven-plugin\", \"read-project-properties\");",
      "info" : "VariableDeclarationStatement[19682-19802]:VariableDeclarationStatement[20012-20132]"
    }, {
      "left" : "if (propCfg != null)",
      "right" : "if (propCfg != null)",
      "info" : "IfStatement[19809-20243]:IfStatement[20139-20573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19830-20243]:Block[20160-20573]"
    }, {
      "left" : "Element files = propCfg.getChild(\"files\");",
      "right" : "Element files = propCfg.getChild(\"files\");",
      "info" : "VariableDeclarationStatement[19840-19882]:VariableDeclarationStatement[20170-20212]"
    }, {
      "left" : "if (files != null)",
      "right" : "if (files != null)",
      "info" : "IfStatement[19891-20235]:IfStatement[20221-20565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19910-20235]:Block[20240-20565]"
    }, {
      "left" : "res = new ArrayList<String>();",
      "right" : "res = new ArrayList<String>();",
      "info" : "ExpressionStatement[19922-19952]:ExpressionStatement[20252-20282]"
    }, {
      "left" : "for (Element file : files.getChildren(\"file\"))",
      "right" : "for (Element file : files.getChildren(\"file\"))",
      "info" : "EnhancedForStatement[19964-20225]:EnhancedForStatement[20294-20555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20011-20225]:Block[20341-20555]"
    }, {
      "left" : "File f = new File(file.getValue());",
      "right" : "File f = new File(file.getValue());",
      "info" : "VariableDeclarationStatement[20025-20060]:VariableDeclarationStatement[20355-20390]"
    }, {
      "left" : "if (!f.isAbsolute())",
      "right" : "if (!f.isAbsolute())",
      "info" : "IfStatement[20073-20170]:IfStatement[20403-20500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20094-20170]:Block[20424-20500]"
    }, {
      "left" : "f = new File(getDirectory(), file.getValue());",
      "right" : "f = new File(getDirectory(), file.getValue());",
      "info" : "ExpressionStatement[20110-20156]:ExpressionStatement[20440-20486]"
    }, {
      "left" : "res.add(f.getAbsolutePath());",
      "right" : "res.add(f.getAbsolutePath());",
      "info" : "ExpressionStatement[20184-20213]:ExpressionStatement[20514-20543]"
    }, {
      "left" : "if (res == null)",
      "right" : "if (res == null)",
      "info" : "IfStatement[20251-20360]:IfStatement[20581-20690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20268-20305]:Block[20598-20635]"
    }, {
      "left" : "res = getFilters();",
      "right" : "res = getFilters();",
      "info" : "ExpressionStatement[20278-20297]:ExpressionStatement[20608-20627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20317-20360]:Block[20647-20690]"
    }, {
      "left" : "res.addAll(getFilters());",
      "right" : "res.addAll(getFilters());",
      "info" : "ExpressionStatement[20327-20352]:ExpressionStatement[20657-20682]"
    }, {
      "left" : "res = putCachedValue(FILTERS_CACHE_KEY, res);",
      "right" : "res = putCachedValue(FILTERS_CACHE_KEY, res);",
      "info" : "ExpressionStatement[20368-20413]:ExpressionStatement[20698-20743]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[20425-20436]:ReturnStatement[20755-20766]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[20444-20452]:MarkerAnnotation[20774-20782]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20455-20461]:Modifier[20785-20791]"
    }, {
      "left" : "MavenProjectChanges",
      "right" : "MavenProjectChanges",
      "info" : "SimpleType[20462-20481]:SimpleType[20792-20811]"
    }, {
      "left" : "read",
      "right" : "read",
      "info" : "SimpleName[20482-20486]:SimpleName[20812-20816]"
    }, {
      "left" : "@NotNull MavenGeneralSettings generalSettings",
      "right" : "@NotNull MavenGeneralSettings generalSettings",
      "info" : "SingleVariableDeclaration[20487-20532]:SingleVariableDeclaration[20817-20862]"
    }, {
      "left" : "@NotNull MavenExplicitProfiles profiles",
      "right" : "@NotNull MavenExplicitProfiles profiles",
      "info" : "SingleVariableDeclaration[20568-20607]:SingleVariableDeclaration[20898-20937]"
    }, {
      "left" : "@NotNull MavenProjectReader reader",
      "right" : "@NotNull MavenProjectReader reader",
      "info" : "SingleVariableDeclaration[20643-20677]:SingleVariableDeclaration[20973-21007]"
    }, {
      "left" : "@NotNull MavenProjectReaderProjectLocator locator",
      "right" : "@NotNull MavenProjectReaderProjectLocator locator",
      "info" : "SingleVariableDeclaration[20713-20762]:SingleVariableDeclaration[21043-21092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20764-20885]:Block[21094-21215]"
    }, {
      "left" : "return set(reader.readProject(generalSettings, myFile, profiles, locator), generalSettings, true, false, true);",
      "right" : "return set(reader.readProject(generalSettings, myFile, profiles, locator), generalSettings, true, false, true);",
      "info" : "ReturnStatement[20770-20881]:ReturnStatement[21100-21211]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[20889-20897]:MarkerAnnotation[21219-21227]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20900-20906]:Modifier[21230-21236]"
    }, {
      "left" : "Pair<MavenProjectChanges, NativeMavenProjectHolder>",
      "right" : "Pair<MavenProjectChanges, NativeMavenProjectHolder>",
      "info" : "ParameterizedType[20907-20958]:ParameterizedType[21237-21288]"
    }, {
      "left" : "resolve",
      "right" : "resolve",
      "info" : "SimpleName[20959-20966]:SimpleName[21289-21296]"
    }, {
      "left" : "@NotNull Project project",
      "right" : "@NotNull Project project",
      "info" : "SingleVariableDeclaration[20967-20991]:SingleVariableDeclaration[21297-21321]"
    }, {
      "left" : "@NotNull MavenGeneralSettings generalSettings",
      "right" : "@NotNull MavenGeneralSettings generalSettings",
      "info" : "SingleVariableDeclaration[21062-21107]:SingleVariableDeclaration[21392-21437]"
    }, {
      "left" : "@NotNull MavenEmbedderWrapper embedder",
      "right" : "@NotNull MavenEmbedderWrapper embedder",
      "info" : "SingleVariableDeclaration[21178-21216]:SingleVariableDeclaration[21508-21546]"
    }, {
      "left" : "@NotNull MavenProjectReader reader",
      "right" : "@NotNull MavenProjectReader reader",
      "info" : "SingleVariableDeclaration[21287-21321]:SingleVariableDeclaration[21617-21651]"
    }, {
      "left" : "@NotNull MavenProjectReaderProjectLocator locator",
      "right" : "@NotNull MavenProjectReaderProjectLocator locator",
      "info" : "SingleVariableDeclaration[21392-21441]:SingleVariableDeclaration[21722-21771]"
    }, {
      "left" : "@NotNull ResolveContext context",
      "right" : "@NotNull ResolveContext context",
      "info" : "SingleVariableDeclaration[21512-21543]:SingleVariableDeclaration[21842-21873]"
    }, {
      "left" : "MavenProcessCanceledException",
      "right" : "MavenProcessCanceledException",
      "info" : "SimpleType[21556-21585]:SimpleType[21886-21915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21586-22355]:Block[21916-22685]"
    }, {
      "left" : "MavenProjectReaderResult result = reader.resolveProject(generalSettings,\n                                                            embedder,\n                                                            getFile(),\n                                                            getActivatedProfilesIds(),\n                                                            locator);",
      "right" : "MavenProjectReaderResult result = reader.resolveProject(generalSettings,\n                                                            embedder,\n                                                            getFile(),\n                                                            getActivatedProfilesIds(),\n                                                            locator);",
      "info" : "VariableDeclarationStatement[21592-21962]:VariableDeclarationStatement[21922-22292]"
    }, {
      "left" : "MavenProjectChanges changes = set(result, generalSettings, false, result.readingProblems.isEmpty(), false);",
      "right" : "MavenProjectChanges changes = set(result, generalSettings, false, result.readingProblems.isEmpty(), false);",
      "info" : "VariableDeclarationStatement[21967-22074]:VariableDeclarationStatement[22297-22404]"
    }, {
      "left" : "if (result.nativeMavenProject != null)",
      "right" : "if (result.nativeMavenProject != null)",
      "info" : "IfStatement[22080-22291]:IfStatement[22410-22621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22119-22291]:Block[22449-22621]"
    }, {
      "left" : "for (MavenImporter eachImporter : getSuitableImporters())",
      "right" : "for (MavenImporter eachImporter : getSuitableImporters())",
      "info" : "EnhancedForStatement[22127-22285]:EnhancedForStatement[22457-22615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22185-22285]:Block[22515-22615]"
    }, {
      "left" : "eachImporter.resolve(project, this, result.nativeMavenProject, embedder, context);",
      "right" : "eachImporter.resolve(project, this, result.nativeMavenProject, embedder, context);",
      "info" : "ExpressionStatement[22195-22277]:ExpressionStatement[22525-22607]"
    }, {
      "left" : "return Pair.create(changes, result.nativeMavenProject);",
      "right" : "return Pair.create(changes, result.nativeMavenProject);",
      "info" : "ReturnStatement[22296-22351]:ReturnStatement[22626-22681]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[22359-22367]:MarkerAnnotation[22689-22697]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22370-22376]:Modifier[22700-22706]"
    }, {
      "left" : "Pair<Boolean, MavenProjectChanges>",
      "right" : "Pair<Boolean, MavenProjectChanges>",
      "info" : "ParameterizedType[22377-22411]:ParameterizedType[22707-22741]"
    }, {
      "left" : "resolveFolders",
      "right" : "resolveFolders",
      "info" : "SimpleName[22412-22426]:SimpleName[22742-22756]"
    }, {
      "left" : "@NotNull MavenEmbedderWrapper embedder",
      "right" : "@NotNull MavenEmbedderWrapper embedder",
      "info" : "SingleVariableDeclaration[22427-22465]:SingleVariableDeclaration[22757-22795]"
    }, {
      "left" : "@NotNull MavenImportingSettings importingSettings",
      "right" : "@NotNull MavenImportingSettings importingSettings",
      "info" : "SingleVariableDeclaration[22526-22575]:SingleVariableDeclaration[22856-22905]"
    }, {
      "left" : "@NotNull MavenConsole console",
      "right" : "@NotNull MavenConsole console",
      "info" : "SingleVariableDeclaration[22636-22665]:SingleVariableDeclaration[22966-22995]"
    }, {
      "left" : "MavenProcessCanceledException",
      "right" : "MavenProcessCanceledException",
      "info" : "SimpleType[22674-22703]:SimpleType[23004-23033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22704-23358]:Block[23034-23688]"
    }, {
      "left" : "MavenProjectReaderResult result = MavenProjectReader.generateSources(embedder,\n                                                                         importingSettings,\n                                                                         getFile(),\n                                                                         getActivatedProfilesIds(),\n                                                                         console);",
      "right" : "MavenProjectReaderResult result = MavenProjectReader.generateSources(embedder,\n                                                                         importingSettings,\n                                                                         getFile(),\n                                                                         getActivatedProfilesIds(),\n                                                                         console);",
      "info" : "VariableDeclarationStatement[22710-23147]:VariableDeclarationStatement[23040-23477]"
    }, {
      "left" : "if (result == null || !result.readingProblems.isEmpty())",
      "right" : "if (result == null || !result.readingProblems.isEmpty())",
      "info" : "IfStatement[23152-23261]:IfStatement[23482-23591]"
    }, {
      "left" : "return Pair.create(false, MavenProjectChanges.NONE);",
      "right" : "return Pair.create(false, MavenProjectChanges.NONE);",
      "info" : "ReturnStatement[23209-23261]:ReturnStatement[23539-23591]"
    }, {
      "left" : "MavenProjectChanges changes = setFolders(result);",
      "right" : "MavenProjectChanges changes = setFolders(result);",
      "info" : "VariableDeclarationStatement[23266-23315]:VariableDeclarationStatement[23596-23645]"
    }, {
      "left" : "return Pair.create(true, changes);",
      "right" : "return Pair.create(true, changes);",
      "info" : "ReturnStatement[23320-23354]:ReturnStatement[23650-23684]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23362-23368]:Modifier[23692-23698]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23369-23373]:PrimitiveType[23699-23703]"
    }, {
      "left" : "resetCache",
      "right" : "resetCache",
      "info" : "SimpleName[23374-23384]:SimpleName[23704-23714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23387-23479]:Block[23717-23809]"
    }, {
      "left" : "synchronized (myState) {\n      myState.resetCache();\n    }",
      "right" : "synchronized (myState) {\n      myState.resetCache();\n    }",
      "info" : "SynchronizedStatement[23417-23475]:SynchronizedStatement[23747-23805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23440-23475]:Block[23770-23805]"
    }, {
      "left" : "myState.resetCache();",
      "right" : "myState.resetCache();",
      "info" : "ExpressionStatement[23448-23469]:ExpressionStatement[23778-23799]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23483-23489]:Modifier[23813-23819]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[23490-23497]:PrimitiveType[23820-23827]"
    }, {
      "left" : "isAggregator",
      "right" : "isAggregator",
      "info" : "SimpleName[23498-23510]:SimpleName[23828-23840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23513-23590]:Block[23843-23920]"
    }, {
      "left" : "return \"pom\".equals(getPackaging()) || !getModulePaths().isEmpty();",
      "right" : "return \"pom\".equals(getPackaging()) || !getModulePaths().isEmpty();",
      "info" : "ReturnStatement[23519-23586]:ReturnStatement[23849-23916]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[23594-23602]:MarkerAnnotation[23924-23932]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23605-23611]:Modifier[23935-23941]"
    }, {
      "left" : "List<MavenProjectProblem>",
      "right" : "List<MavenProjectProblem>",
      "info" : "ParameterizedType[23612-23637]:ParameterizedType[23942-23967]"
    }, {
      "left" : "getProblems",
      "right" : "getProblems",
      "info" : "SimpleName[23638-23649]:SimpleName[23968-23979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23652-23868]:Block[23982-24198]"
    }, {
      "left" : "State state = myState;",
      "right" : "State state = myState;",
      "info" : "VariableDeclarationStatement[23658-23680]:VariableDeclarationStatement[23988-24010]"
    }, {
      "left" : "synchronized (state) {\n      if (state.myProblemsCache == null) {\n        state.myProblemsCache = collectProblems(myFile, state);\n      }\n      return state.myProblemsCache;\n    }",
      "right" : "synchronized (state) {\n      if (state.myProblemsCache == null) {\n        state.myProblemsCache = collectProblems(myFile, state);\n      }\n      return state.myProblemsCache;\n    }",
      "info" : "SynchronizedStatement[23685-23864]:SynchronizedStatement[24015-24194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23706-23864]:Block[24036-24194]"
    }, {
      "left" : "if (state.myProblemsCache == null)",
      "right" : "if (state.myProblemsCache == null)",
      "info" : "IfStatement[23714-23822]:IfStatement[24044-24152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23749-23822]:Block[24079-24152]"
    }, {
      "left" : "state.myProblemsCache = collectProblems(myFile, state);",
      "right" : "state.myProblemsCache = collectProblems(myFile, state);",
      "info" : "ExpressionStatement[23759-23814]:ExpressionStatement[24089-24144]"
    }, {
      "left" : "return state.myProblemsCache;",
      "right" : "return state.myProblemsCache;",
      "info" : "ReturnStatement[23829-23858]:ReturnStatement[24159-24188]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23872-23879]:Modifier[24202-24209]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23880-23886]:Modifier[24210-24216]"
    }, {
      "left" : "List<MavenProjectProblem>",
      "right" : "List<MavenProjectProblem>",
      "info" : "ParameterizedType[23887-23912]:ParameterizedType[24217-24242]"
    }, {
      "left" : "collectProblems",
      "right" : "collectProblems",
      "info" : "SimpleName[23913-23928]:SimpleName[24243-24258]"
    }, {
      "left" : "VirtualFile file",
      "right" : "VirtualFile file",
      "info" : "SingleVariableDeclaration[23929-23945]:SingleVariableDeclaration[24259-24275]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[23947-23958]:SingleVariableDeclaration[24277-24288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23960-24595]:Block[24290-24925]"
    }, {
      "left" : "List<MavenProjectProblem> result = new ArrayList<MavenProjectProblem>();",
      "right" : "List<MavenProjectProblem> result = new ArrayList<MavenProjectProblem>();",
      "info" : "VariableDeclarationStatement[23966-24038]:VariableDeclarationStatement[24296-24368]"
    }, {
      "left" : "validateParent(file, state, result);",
      "right" : "validateParent(file, state, result);",
      "info" : "ExpressionStatement[24044-24080]:ExpressionStatement[24374-24410]"
    }, {
      "left" : "result.addAll(state.myReadingProblems);",
      "right" : "result.addAll(state.myReadingProblems);",
      "info" : "ExpressionStatement[24085-24124]:ExpressionStatement[24415-24454]"
    }, {
      "left" : "for (Map.Entry<String, String> each : state.myModulesPathsAndNames.entrySet())",
      "right" : "for (Map.Entry<String, String> each : state.myModulesPathsAndNames.entrySet())",
      "info" : "EnhancedForStatement[24130-24436]:EnhancedForStatement[24460-24766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24209-24436]:Block[24539-24766]"
    }, {
      "left" : "if (LocalFileSystem.getInstance().findFileByPath(each.getKey()) == null)",
      "right" : "if (LocalFileSystem.getInstance().findFileByPath(each.getKey()) == null)",
      "info" : "IfStatement[24217-24430]:IfStatement[24547-24760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24290-24430]:Block[24620-24760]"
    }, {
      "left" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.moduleNotFound\", each.getValue())));",
      "right" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.moduleNotFound\", each.getValue())));",
      "info" : "ExpressionStatement[24300-24422]:ExpressionStatement[24630-24752]"
    }, {
      "left" : "validateDependencies(file, state, result);",
      "right" : "validateDependencies(file, state, result);",
      "info" : "ExpressionStatement[24442-24484]:ExpressionStatement[24772-24814]"
    }, {
      "left" : "validateExtensions(file, state, result);",
      "right" : "validateExtensions(file, state, result);",
      "info" : "ExpressionStatement[24489-24529]:ExpressionStatement[24819-24859]"
    }, {
      "left" : "validatePlugins(file, state, result);",
      "right" : "validatePlugins(file, state, result);",
      "info" : "ExpressionStatement[24534-24571]:ExpressionStatement[24864-24901]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[24577-24591]:ReturnStatement[24907-24921]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24599-24606]:Modifier[24929-24936]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24607-24613]:Modifier[24937-24943]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24614-24618]:PrimitiveType[24944-24948]"
    }, {
      "left" : "validateParent",
      "right" : "validateParent",
      "info" : "SimpleName[24619-24633]:SimpleName[24949-24963]"
    }, {
      "left" : "VirtualFile file",
      "right" : "VirtualFile file",
      "info" : "SingleVariableDeclaration[24634-24650]:SingleVariableDeclaration[24964-24980]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[24652-24663]:SingleVariableDeclaration[24982-24993]"
    }, {
      "left" : "List<MavenProjectProblem> result",
      "right" : "List<MavenProjectProblem> result",
      "info" : "SingleVariableDeclaration[24665-24697]:SingleVariableDeclaration[24995-25027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24699-24876]:Block[25029-25206]"
    }, {
      "left" : "if (!isParentResolved(state))",
      "right" : "if (!isParentResolved(state))",
      "info" : "IfStatement[24705-24872]:IfStatement[25035-25202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24735-24872]:Block[25065-25202]"
    }, {
      "left" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.parentNotFound\", state.myParentId)));",
      "right" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.parentNotFound\", state.myParentId)));",
      "info" : "ExpressionStatement[24743-24866]:ExpressionStatement[25073-25196]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24880-24887]:Modifier[25210-25217]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24888-24894]:Modifier[25218-25224]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24895-24899]:PrimitiveType[25225-25229]"
    }, {
      "left" : "validateDependencies",
      "right" : "validateDependencies",
      "info" : "SimpleName[24900-24920]:SimpleName[25230-25250]"
    }, {
      "left" : "VirtualFile file",
      "right" : "VirtualFile file",
      "info" : "SingleVariableDeclaration[24921-24937]:SingleVariableDeclaration[25251-25267]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[24939-24950]:SingleVariableDeclaration[25269-25280]"
    }, {
      "left" : "List<MavenProjectProblem> result",
      "right" : "List<MavenProjectProblem> result",
      "info" : "SingleVariableDeclaration[24952-24984]:SingleVariableDeclaration[25282-25314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24986-25283]:Block[25316-25613]"
    }, {
      "left" : "for (MavenArtifact each : getUnresolvedDependencies(state))",
      "right" : "for (MavenArtifact each : getUnresolvedDependencies(state))",
      "info" : "EnhancedForStatement[24992-25279]:EnhancedForStatement[25322-25609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25052-25279]:Block[25382-25609]"
    }, {
      "left" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.unresolvedDependency\",\n                                                                     each.getDisplayStringWithType())));",
      "right" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.unresolvedDependency\",\n                                                                     each.getDisplayStringWithType())));",
      "info" : "ExpressionStatement[25060-25273]:ExpressionStatement[25390-25603]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25287-25294]:Modifier[25617-25624]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[25295-25301]:Modifier[25625-25631]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25302-25306]:PrimitiveType[25632-25636]"
    }, {
      "left" : "validateExtensions",
      "right" : "validateExtensions",
      "info" : "SimpleName[25307-25325]:SimpleName[25637-25655]"
    }, {
      "left" : "VirtualFile file",
      "right" : "VirtualFile file",
      "info" : "SingleVariableDeclaration[25326-25342]:SingleVariableDeclaration[25656-25672]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[25344-25355]:SingleVariableDeclaration[25674-25685]"
    }, {
      "left" : "List<MavenProjectProblem> result",
      "right" : "List<MavenProjectProblem> result",
      "info" : "SingleVariableDeclaration[25357-25389]:SingleVariableDeclaration[25687-25719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25391-25683]:Block[25721-26013]"
    }, {
      "left" : "for (MavenArtifact each : getUnresolvedExtensions(state))",
      "right" : "for (MavenArtifact each : getUnresolvedExtensions(state))",
      "info" : "EnhancedForStatement[25397-25679]:EnhancedForStatement[25727-26009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25455-25679]:Block[25785-26009]"
    }, {
      "left" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.unresolvedExtension\",\n                                                                     each.getDisplayStringSimple())));",
      "right" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.unresolvedExtension\",\n                                                                     each.getDisplayStringSimple())));",
      "info" : "ExpressionStatement[25463-25673]:ExpressionStatement[25793-26003]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25687-25694]:Modifier[26017-26024]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[25695-25701]:Modifier[26025-26031]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25702-25706]:PrimitiveType[26032-26036]"
    }, {
      "left" : "validatePlugins",
      "right" : "validatePlugins",
      "info" : "SimpleName[25707-25722]:SimpleName[26037-26052]"
    }, {
      "left" : "VirtualFile file",
      "right" : "VirtualFile file",
      "info" : "SingleVariableDeclaration[25723-25739]:SingleVariableDeclaration[26053-26069]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[25741-25752]:SingleVariableDeclaration[26071-26082]"
    }, {
      "left" : "List<MavenProjectProblem> result",
      "right" : "List<MavenProjectProblem> result",
      "info" : "SingleVariableDeclaration[25754-25786]:SingleVariableDeclaration[26084-26116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25788-25978]:Block[26118-26308]"
    }, {
      "left" : "for (MavenPlugin each : getUnresolvedPlugins(state))",
      "right" : "for (MavenPlugin each : getUnresolvedPlugins(state))",
      "info" : "EnhancedForStatement[25794-25974]:EnhancedForStatement[26124-26304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25847-25974]:Block[26177-26304]"
    }, {
      "left" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.unresolvedPlugin\", each)));",
      "right" : "result.add(createDependencyProblem(file, ProjectBundle.message(\"maven.project.problem.unresolvedPlugin\", each)));",
      "info" : "ExpressionStatement[25855-25968]:ExpressionStatement[26185-26298]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[25982-25989]:Modifier[26312-26319]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[25990-25996]:Modifier[26320-26326]"
    }, {
      "left" : "MavenProjectProblem",
      "right" : "MavenProjectProblem",
      "info" : "SimpleType[25997-26016]:SimpleType[26327-26346]"
    }, {
      "left" : "createDependencyProblem",
      "right" : "createDependencyProblem",
      "info" : "SimpleName[26017-26040]:SimpleName[26347-26370]"
    }, {
      "left" : "VirtualFile file",
      "right" : "VirtualFile file",
      "info" : "SingleVariableDeclaration[26041-26057]:SingleVariableDeclaration[26371-26387]"
    }, {
      "left" : "String description",
      "right" : "String compilerArg",
      "info" : "SingleVariableDeclaration[26059-26077]:SingleVariableDeclaration[16825-16843]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[26059-26077]:SingleVariableDeclaration[26389-26407]"
    }, {
      "left" : "description",
      "right" : "compilerArg",
      "info" : "SimpleName[26066-26077]:SimpleName[16832-16843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26079-26193]:Block[26409-26523]"
    }, {
      "left" : "return new MavenProjectProblem(file.getPath(), description, MavenProjectProblem.ProblemType.DEPENDENCY);",
      "right" : "return new MavenProjectProblem(file.getPath(), description, MavenProjectProblem.ProblemType.DEPENDENCY);",
      "info" : "ReturnStatement[26085-26189]:ReturnStatement[26415-26519]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26197-26204]:Modifier[26527-26534]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26205-26211]:Modifier[26535-26541]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[26212-26219]:PrimitiveType[26542-26549]"
    }, {
      "left" : "isParentResolved",
      "right" : "isParentResolved",
      "info" : "SimpleName[26220-26236]:SimpleName[26550-26566]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[26237-26248]:SingleVariableDeclaration[26567-26578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26250-26325]:Block[26580-26655]"
    }, {
      "left" : "return !state.myUnresolvedArtifactIds.contains(state.myParentId);",
      "right" : "return !state.myUnresolvedArtifactIds.contains(state.myParentId);",
      "info" : "ReturnStatement[26256-26321]:ReturnStatement[26586-26651]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26329-26336]:Modifier[26659-26666]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26337-26343]:Modifier[26667-26673]"
    }, {
      "left" : "List<MavenArtifact>",
      "right" : "List<MavenArtifact>",
      "info" : "ParameterizedType[26344-26363]:ParameterizedType[26674-26693]"
    }, {
      "left" : "getUnresolvedDependencies",
      "right" : "getUnresolvedDependencies",
      "info" : "SimpleName[26364-26389]:SimpleName[26694-26719]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[26390-26401]:SingleVariableDeclaration[26720-26731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26403-26799]:Block[26733-27129]"
    }, {
      "left" : "synchronized (state) {\n      if (state.myUnresolvedDependenciesCache == null) {\n        List<MavenArtifact> result = new ArrayList<MavenArtifact>();\n        for (MavenArtifact each : state.myDependencies) {\n          if (!each.isResolved()) result.add(each);\n        }\n        state.myUnresolvedDependenciesCache = result;\n      }\n      return state.myUnresolvedDependenciesCache;\n    }",
      "right" : "synchronized (state) {\n      if (state.myUnresolvedDependenciesCache == null) {\n        List<MavenArtifact> result = new ArrayList<MavenArtifact>();\n        for (MavenArtifact each : state.myDependencies) {\n          if (!each.isResolved()) result.add(each);\n        }\n        state.myUnresolvedDependenciesCache = result;\n      }\n      return state.myUnresolvedDependenciesCache;\n    }",
      "info" : "SynchronizedStatement[26409-26795]:SynchronizedStatement[26739-27125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26430-26795]:Block[26760-27125]"
    }, {
      "left" : "if (state.myUnresolvedDependenciesCache == null)",
      "right" : "if (state.myUnresolvedDependenciesCache == null)",
      "info" : "IfStatement[26438-26739]:IfStatement[26768-27069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26487-26739]:Block[26817-27069]"
    }, {
      "left" : "List<MavenArtifact> result = new ArrayList<MavenArtifact>();",
      "right" : "List<MavenArtifact> result = new ArrayList<MavenArtifact>();",
      "info" : "VariableDeclarationStatement[26497-26557]:VariableDeclarationStatement[26827-26887]"
    }, {
      "left" : "for (MavenArtifact each : state.myDependencies)",
      "right" : "for (MavenArtifact each : state.myDependencies)",
      "info" : "EnhancedForStatement[26566-26677]:EnhancedForStatement[26896-27007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26614-26677]:Block[26944-27007]"
    }, {
      "left" : "if (!each.isResolved())",
      "right" : "if (!each.isResolved())",
      "info" : "IfStatement[26626-26667]:IfStatement[26956-26997]"
    }, {
      "left" : "result.add(each);",
      "right" : "result.add(each);",
      "info" : "ExpressionStatement[26650-26667]:ExpressionStatement[26980-26997]"
    }, {
      "left" : "state.myUnresolvedDependenciesCache = result;",
      "right" : "state.myUnresolvedDependenciesCache = result;",
      "info" : "ExpressionStatement[26686-26731]:ExpressionStatement[27016-27061]"
    }, {
      "left" : "return state.myUnresolvedDependenciesCache;",
      "right" : "return state.myUnresolvedDependenciesCache;",
      "info" : "ReturnStatement[26746-26789]:ReturnStatement[27076-27119]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26803-26810]:Modifier[27133-27140]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[26811-26817]:Modifier[27141-27147]"
    }, {
      "left" : "List<MavenArtifact>",
      "right" : "List<MavenArtifact>",
      "info" : "ParameterizedType[26818-26837]:ParameterizedType[27148-27167]"
    }, {
      "left" : "getUnresolvedExtensions",
      "right" : "getUnresolvedExtensions",
      "info" : "SimpleName[26838-26861]:SimpleName[27168-27191]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[26862-26873]:SingleVariableDeclaration[27192-27203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26875-27577]:Block[27205-27907]"
    }, {
      "left" : "synchronized (state) {\n      if (state.myUnresolvedExtensionsCache == null) {\n        List<MavenArtifact> result = new ArrayList<MavenArtifact>();\n        for (MavenArtifact each : state.myExtensions) {\n          // Collect only extensions that were attempted to be resolved.\n          // It is because embedder does not even try to resolve extensions that\n          // are not necessary.\n          if (state.myUnresolvedArtifactIds.contains(each.getMavenId())\n              && !pomFileExists(state.myLocalRepository, each)) {\n            result.add(each);\n          }\n        }\n        state.myUnresolvedExtensionsCache = result;\n      }\n      return state.myUnresolvedExtensionsCache;\n    }",
      "right" : "synchronized (state) {\n      if (state.myUnresolvedExtensionsCache == null) {\n        List<MavenArtifact> result = new ArrayList<MavenArtifact>();\n        for (MavenArtifact each : state.myExtensions) {\n          // Collect only extensions that were attempted to be resolved.\n          // It is because embedder does not even try to resolve extensions that\n          // are not necessary.\n          if (state.myUnresolvedArtifactIds.contains(each.getMavenId())\n              && !pomFileExists(state.myLocalRepository, each)) {\n            result.add(each);\n          }\n        }\n        state.myUnresolvedExtensionsCache = result;\n      }\n      return state.myUnresolvedExtensionsCache;\n    }",
      "info" : "SynchronizedStatement[26881-27573]:SynchronizedStatement[27211-27903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26902-27573]:Block[27232-27903]"
    }, {
      "left" : "if (state.myUnresolvedExtensionsCache == null)",
      "right" : "if (state.myUnresolvedExtensionsCache == null)",
      "info" : "IfStatement[26910-27519]:IfStatement[27240-27849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26957-27519]:Block[27287-27849]"
    }, {
      "left" : "List<MavenArtifact> result = new ArrayList<MavenArtifact>();",
      "right" : "List<MavenArtifact> result = new ArrayList<MavenArtifact>();",
      "info" : "VariableDeclarationStatement[26967-27027]:VariableDeclarationStatement[27297-27357]"
    }, {
      "left" : "for (MavenArtifact each : state.myExtensions)",
      "right" : "for (MavenArtifact each : state.myExtensions)",
      "info" : "EnhancedForStatement[27036-27459]:EnhancedForStatement[27366-27789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27082-27459]:Block[27412-27789]"
    }, {
      "left" : "if (state.myUnresolvedArtifactIds.contains(each.getMavenId())\n              && !pomFileExists(state.myLocalRepository, each))",
      "right" : "if (state.myUnresolvedArtifactIds.contains(each.getMavenId())\n              && !pomFileExists(state.myLocalRepository, each))",
      "info" : "IfStatement[27280-27449]:IfStatement[27610-27779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27406-27449]:Block[27736-27779]"
    }, {
      "left" : "result.add(each);",
      "right" : "result.add(each);",
      "info" : "ExpressionStatement[27420-27437]:ExpressionStatement[27750-27767]"
    }, {
      "left" : "state.myUnresolvedExtensionsCache = result;",
      "right" : "state.myUnresolvedExtensionsCache = result;",
      "info" : "ExpressionStatement[27468-27511]:ExpressionStatement[27798-27841]"
    }, {
      "left" : "return state.myUnresolvedExtensionsCache;",
      "right" : "return state.myUnresolvedExtensionsCache;",
      "info" : "ReturnStatement[27526-27567]:ReturnStatement[27856-27897]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27581-27588]:Modifier[27911-27918]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27589-27595]:Modifier[27919-27925]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27596-27603]:PrimitiveType[27926-27933]"
    }, {
      "left" : "pomFileExists",
      "right" : "pomFileExists",
      "info" : "SimpleName[27604-27617]:SimpleName[27934-27947]"
    }, {
      "left" : "File localRepository",
      "right" : "File localRepository",
      "info" : "SingleVariableDeclaration[27618-27638]:SingleVariableDeclaration[27948-27968]"
    }, {
      "left" : "MavenArtifact artifact",
      "right" : "MavenArtifact artifact",
      "info" : "SingleVariableDeclaration[27640-27662]:SingleVariableDeclaration[27970-27992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27664-27762]:Block[27994-28092]"
    }, {
      "left" : "return MavenArtifactUtil.hasArtifactFile(localRepository, artifact.getMavenId(), \"pom\");",
      "right" : "return MavenArtifactUtil.hasArtifactFile(localRepository, artifact.getMavenId(), \"pom\");",
      "info" : "ReturnStatement[27670-27758]:ReturnStatement[28000-28088]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27766-27773]:Modifier[28096-28103]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27774-27780]:Modifier[28104-28110]"
    }, {
      "left" : "List<MavenPlugin>",
      "right" : "List<MavenPlugin>",
      "info" : "ParameterizedType[27781-27798]:ParameterizedType[28111-28128]"
    }, {
      "left" : "getUnresolvedPlugins",
      "right" : "getUnresolvedPlugins",
      "info" : "SimpleName[27799-27819]:SimpleName[28129-28149]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[27820-27831]:SingleVariableDeclaration[28150-28161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27833-28299]:Block[28163-28629]"
    }, {
      "left" : "synchronized (state) {\n      if (state.myUnresolvedPluginsCache == null) {\n        List<MavenPlugin> result = new ArrayList<MavenPlugin>();\n        for (MavenPlugin each : getDeclaredPlugins(state)) {\n          if (!MavenArtifactUtil.hasArtifactFile(state.myLocalRepository, each.getMavenId())) {\n            result.add(each);\n          }\n        }\n        state.myUnresolvedPluginsCache = result;\n      }\n      return state.myUnresolvedPluginsCache;\n    }",
      "right" : "synchronized (state) {\n      if (state.myUnresolvedPluginsCache == null) {\n        List<MavenPlugin> result = new ArrayList<MavenPlugin>();\n        for (MavenPlugin each : getDeclaredPlugins(state)) {\n          if (!MavenArtifactUtil.hasArtifactFile(state.myLocalRepository, each.getMavenId())) {\n            result.add(each);\n          }\n        }\n        state.myUnresolvedPluginsCache = result;\n      }\n      return state.myUnresolvedPluginsCache;\n    }",
      "info" : "SynchronizedStatement[27839-28295]:SynchronizedStatement[28169-28625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27860-28295]:Block[28190-28625]"
    }, {
      "left" : "if (state.myUnresolvedPluginsCache == null)",
      "right" : "if (state.myUnresolvedPluginsCache == null)",
      "info" : "IfStatement[27868-28244]:IfStatement[28198-28574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27912-28244]:Block[28242-28574]"
    }, {
      "left" : "List<MavenPlugin> result = new ArrayList<MavenPlugin>();",
      "right" : "List<MavenPlugin> result = new ArrayList<MavenPlugin>();",
      "info" : "VariableDeclarationStatement[27922-27978]:VariableDeclarationStatement[28252-28308]"
    }, {
      "left" : "for (MavenPlugin each : getDeclaredPlugins(state))",
      "right" : "for (MavenPlugin each : getDeclaredPlugins(state))",
      "info" : "EnhancedForStatement[27987-28187]:EnhancedForStatement[28317-28517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28038-28187]:Block[28368-28517]"
    }, {
      "left" : "if (!MavenArtifactUtil.hasArtifactFile(state.myLocalRepository, each.getMavenId()))",
      "right" : "if (!MavenArtifactUtil.hasArtifactFile(state.myLocalRepository, each.getMavenId()))",
      "info" : "IfStatement[28050-28177]:IfStatement[28380-28507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28134-28177]:Block[28464-28507]"
    }, {
      "left" : "result.add(each);",
      "right" : "result.add(each);",
      "info" : "ExpressionStatement[28148-28165]:ExpressionStatement[28478-28495]"
    }, {
      "left" : "state.myUnresolvedPluginsCache = result;",
      "right" : "state.myUnresolvedPluginsCache = result;",
      "info" : "ExpressionStatement[28196-28236]:ExpressionStatement[28526-28566]"
    }, {
      "left" : "return state.myUnresolvedPluginsCache;",
      "right" : "return state.myUnresolvedPluginsCache;",
      "info" : "ReturnStatement[28251-28289]:ReturnStatement[28581-28619]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[28303-28311]:MarkerAnnotation[28633-28641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28314-28320]:Modifier[28644-28650]"
    }, {
      "left" : "List<VirtualFile>",
      "right" : "List<VirtualFile>",
      "info" : "ParameterizedType[28321-28338]:ParameterizedType[28651-28668]"
    }, {
      "left" : "getExistingModuleFiles",
      "right" : "getExistingModuleFiles",
      "info" : "SimpleName[28339-28361]:SimpleName[28669-28691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28364-28683]:Block[28694-29013]"
    }, {
      "left" : "LocalFileSystem fs = LocalFileSystem.getInstance();",
      "right" : "LocalFileSystem fs = LocalFileSystem.getInstance();",
      "info" : "VariableDeclarationStatement[28370-28421]:VariableDeclarationStatement[28700-28751]"
    }, {
      "left" : "List<VirtualFile> result = new ArrayList<VirtualFile>();",
      "right" : "List<VirtualFile> result = new ArrayList<VirtualFile>();",
      "info" : "VariableDeclarationStatement[28427-28483]:VariableDeclarationStatement[28757-28813]"
    }, {
      "left" : "Set<String> pathsInStack = getModulePaths();",
      "right" : "Set<String> pathsInStack = getModulePaths();",
      "info" : "VariableDeclarationStatement[28488-28532]:VariableDeclarationStatement[28818-28862]"
    }, {
      "left" : "for (String each : pathsInStack)",
      "right" : "for (String each : pathsInStack)",
      "info" : "EnhancedForStatement[28537-28660]:EnhancedForStatement[28867-28990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28570-28660]:Block[28900-28990]"
    }, {
      "left" : "VirtualFile f = fs.findFileByPath(each);",
      "right" : "VirtualFile f = fs.findFileByPath(each);",
      "info" : "VariableDeclarationStatement[28578-28618]:VariableDeclarationStatement[28908-28948]"
    }, {
      "left" : "if (f != null)",
      "right" : "if (f != null)",
      "info" : "IfStatement[28625-28654]:IfStatement[28955-28984]"
    }, {
      "left" : "result.add(f);",
      "right" : "result.add(f);",
      "info" : "ExpressionStatement[28640-28654]:ExpressionStatement[28970-28984]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[28665-28679]:ReturnStatement[28995-29009]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[28687-28695]:MarkerAnnotation[29017-29025]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28698-28704]:Modifier[29028-29034]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[28705-28716]:ParameterizedType[29035-29046]"
    }, {
      "left" : "getModulePaths",
      "right" : "getModulePaths",
      "info" : "SimpleName[28717-28731]:SimpleName[29047-29061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28734-28786]:Block[29064-29116]"
    }, {
      "left" : "return getModulesPathsAndNames().keySet();",
      "right" : "return getModulesPathsAndNames().keySet();",
      "info" : "ReturnStatement[28740-28782]:ReturnStatement[29070-29112]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[28790-28798]:MarkerAnnotation[29120-29128]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28801-28807]:Modifier[29131-29137]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[28808-28827]:ParameterizedType[16845-16864]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[28808-28827]:ParameterizedType[29138-29157]"
    }, {
      "left" : "getModulesPathsAndNames",
      "right" : "getModulesPathsAndNames",
      "info" : "SimpleName[28828-28851]:SimpleName[29158-29181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28854-28902]:Block[29184-29232]"
    }, {
      "left" : "return myState.myModulesPathsAndNames;",
      "right" : "return myState.myModulesPathsAndNames;",
      "info" : "ReturnStatement[28860-28898]:ReturnStatement[29190-29228]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[28906-28914]:MarkerAnnotation[29236-29244]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28917-28923]:Modifier[29247-29253]"
    }, {
      "left" : "Collection<String>",
      "right" : "Collection<String>",
      "info" : "ParameterizedType[28924-28942]:ParameterizedType[29254-29272]"
    }, {
      "left" : "getProfilesIds",
      "right" : "getProfilesIds",
      "info" : "SimpleName[28943-28957]:SimpleName[29273-29287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28960-28999]:Block[29290-29329]"
    }, {
      "left" : "return myState.myProfilesIds;",
      "right" : "return myState.myProfilesIds;",
      "info" : "ReturnStatement[28966-28995]:ReturnStatement[29296-29325]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[29003-29011]:MarkerAnnotation[29333-29341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29014-29020]:Modifier[29344-29350]"
    }, {
      "left" : "MavenExplicitProfiles",
      "right" : "MavenExplicitProfiles",
      "info" : "SimpleType[29021-29042]:SimpleType[29351-29372]"
    }, {
      "left" : "getActivatedProfilesIds",
      "right" : "getActivatedProfilesIds",
      "info" : "SimpleName[29043-29066]:SimpleName[29373-29396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29069-29117]:Block[29399-29447]"
    }, {
      "left" : "return myState.myActivatedProfilesIds;",
      "right" : "return myState.myActivatedProfilesIds;",
      "info" : "ReturnStatement[29075-29113]:ReturnStatement[29405-29443]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[29121-29129]:MarkerAnnotation[29451-29459]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29132-29138]:Modifier[29462-29468]"
    }, {
      "left" : "List<MavenArtifact>",
      "right" : "List<MavenArtifact>",
      "info" : "ParameterizedType[29139-29158]:ParameterizedType[29469-29488]"
    }, {
      "left" : "getDependencies",
      "right" : "getDependencies",
      "info" : "SimpleName[29159-29174]:SimpleName[29489-29504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29177-29217]:Block[29507-29547]"
    }, {
      "left" : "return myState.myDependencies;",
      "right" : "return myState.myDependencies;",
      "info" : "ReturnStatement[29183-29213]:ReturnStatement[29513-29543]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[29221-29229]:MarkerAnnotation[29551-29559]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29232-29238]:Modifier[29562-29568]"
    }, {
      "left" : "List<MavenArtifactNode>",
      "right" : "List<MavenArtifactNode>",
      "info" : "ParameterizedType[29239-29262]:ParameterizedType[29569-29592]"
    }, {
      "left" : "getDependencyTree",
      "right" : "getDependencyTree",
      "info" : "SimpleName[29263-29280]:SimpleName[29593-29610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29283-29325]:Block[29613-29655]"
    }, {
      "left" : "return myState.myDependencyTree;",
      "right" : "return myState.myDependencyTree;",
      "info" : "ReturnStatement[29289-29321]:ReturnStatement[29619-29651]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[29329-29337]:MarkerAnnotation[29659-29667]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29340-29346]:Modifier[29670-29676]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[29347-29358]:ParameterizedType[29677-29688]"
    }, {
      "left" : "getSupportedPackagings",
      "right" : "getSupportedPackagings",
      "info" : "SimpleName[29359-29381]:SimpleName[29689-29711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29384-29775]:Block[29714-30105]"
    }, {
      "left" : "Set<String> result = ContainerUtil.newHashSet(MavenConstants.TYPE_POM,\n                                                  MavenConstants.TYPE_JAR,\n                                                  \"ejb\", \"ejb-client\", \"war\", \"ear\", \"bundle\", \"maven-plugin\");",
      "right" : "Set<String> result = ContainerUtil.newHashSet(MavenConstants.TYPE_POM,\n                                                  MavenConstants.TYPE_JAR,\n                                                  \"ejb\", \"ejb-client\", \"war\", \"ear\", \"bundle\", \"maven-plugin\");",
      "info" : "VariableDeclarationStatement[29390-29647]:VariableDeclarationStatement[29720-29977]"
    }, {
      "left" : "for (MavenImporter each : getSuitableImporters())",
      "right" : "for (MavenImporter each : getSuitableImporters())",
      "info" : "EnhancedForStatement[29652-29752]:EnhancedForStatement[29982-30082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29702-29752]:Block[30032-30082]"
    }, {
      "left" : "each.getSupportedPackagings(result);",
      "right" : "each.getSupportedPackagings(result);",
      "info" : "ExpressionStatement[29710-29746]:ExpressionStatement[30040-30076]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[29757-29771]:ReturnStatement[30087-30101]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29779-29785]:Modifier[30109-30115]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[29786-29797]:ParameterizedType[30116-30127]"
    }, {
      "left" : "getDependencyTypesFromImporters",
      "right" : "getDependencyTypesFromImporters",
      "info" : "SimpleName[29798-29829]:SimpleName[30128-30159]"
    }, {
      "left" : "@NotNull SupportedRequestType type",
      "right" : "@NotNull SupportedRequestType type",
      "info" : "SingleVariableDeclaration[29830-29864]:SingleVariableDeclaration[30160-30194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29866-30053]:Block[30196-30383]"
    }, {
      "left" : "THashSet<String> res = new THashSet<String>();",
      "right" : "THashSet<String> res = new THashSet<String>();",
      "info" : "VariableDeclarationStatement[29872-29918]:VariableDeclarationStatement[30202-30248]"
    }, {
      "left" : "for (MavenImporter each : getSuitableImporters())",
      "right" : "for (MavenImporter each : getSuitableImporters())",
      "info" : "EnhancedForStatement[29924-30032]:EnhancedForStatement[30254-30362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29974-30032]:Block[30304-30362]"
    }, {
      "left" : "each.getSupportedDependencyTypes(res, type);",
      "right" : "each.getSupportedDependencyTypes(res, type);",
      "info" : "ExpressionStatement[29982-30026]:ExpressionStatement[30312-30356]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[30038-30049]:ReturnStatement[30368-30379]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[30057-30065]:MarkerAnnotation[30387-30395]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30068-30074]:Modifier[30398-30404]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[30075-30086]:ParameterizedType[30405-30416]"
    }, {
      "left" : "getSupportedDependencyScopes",
      "right" : "getSupportedDependencyScopes",
      "info" : "SimpleName[30087-30115]:SimpleName[30417-30445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30118-30702]:Block[30448-31032]"
    }, {
      "left" : "Set<String> result = new THashSet<String>(Arrays.asList(MavenConstants.SCOPE_COMPILE,\n                                                            MavenConstants.SCOPE_PROVIDED,\n                                                            MavenConstants.SCOPE_RUNTIME,\n                                                            MavenConstants.SCOPE_TEST,\n                                                            MavenConstants.SCOPE_SYSTEM));",
      "right" : "Set<String> result = new THashSet<String>(Arrays.asList(MavenConstants.SCOPE_COMPILE,\n                                                            MavenConstants.SCOPE_PROVIDED,\n                                                            MavenConstants.SCOPE_RUNTIME,\n                                                            MavenConstants.SCOPE_TEST,\n                                                            MavenConstants.SCOPE_SYSTEM));",
      "info" : "VariableDeclarationStatement[30124-30568]:VariableDeclarationStatement[30454-30898]"
    }, {
      "left" : "for (MavenImporter each : getSuitableImporters())",
      "right" : "for (MavenImporter each : getSuitableImporters())",
      "info" : "EnhancedForStatement[30573-30679]:EnhancedForStatement[30903-31009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30623-30679]:Block[30953-31009]"
    }, {
      "left" : "each.getSupportedDependencyScopes(result);",
      "right" : "each.getSupportedDependencyScopes(result);",
      "info" : "ExpressionStatement[30631-30673]:ExpressionStatement[30961-31003]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[30684-30698]:ReturnStatement[31014-31028]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30706-30712]:Modifier[31036-31042]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30713-30717]:PrimitiveType[31043-31047]"
    }, {
      "left" : "addDependency",
      "right" : "addDependency",
      "info" : "SimpleName[30718-30731]:SimpleName[31048-31061]"
    }, {
      "left" : "@NotNull MavenArtifact dependency",
      "right" : "@NotNull MavenArtifact dependency",
      "info" : "SingleVariableDeclaration[30732-30765]:SingleVariableDeclaration[31062-31095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30767-31005]:Block[31097-31335]"
    }, {
      "left" : "State state = myState;",
      "right" : "State state = myState;",
      "info" : "VariableDeclarationStatement[30773-30795]:VariableDeclarationStatement[31103-31125]"
    }, {
      "left" : "List<MavenArtifact> dependenciesCopy = new ArrayList<MavenArtifact>(state.myDependencies);",
      "right" : "List<MavenArtifact> dependenciesCopy = new ArrayList<MavenArtifact>(state.myDependencies);",
      "info" : "VariableDeclarationStatement[30800-30890]:VariableDeclarationStatement[31130-31220]"
    }, {
      "left" : "dependenciesCopy.add(dependency);",
      "right" : "dependenciesCopy.add(dependency);",
      "info" : "ExpressionStatement[30895-30928]:ExpressionStatement[31225-31258]"
    }, {
      "left" : "state.myDependencies = dependenciesCopy;",
      "right" : "state.myDependencies = dependenciesCopy;",
      "info" : "ExpressionStatement[30933-30973]:ExpressionStatement[31263-31303]"
    }, {
      "left" : "state.myCache.clear();",
      "right" : "state.myCache.clear();",
      "info" : "ExpressionStatement[30979-31001]:ExpressionStatement[31309-31331]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[31009-31017]:MarkerAnnotation[31339-31347]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31020-31026]:Modifier[31350-31356]"
    }, {
      "left" : "List<MavenArtifact>",
      "right" : "List<MavenArtifact>",
      "info" : "ParameterizedType[31027-31046]:ParameterizedType[31357-31376]"
    }, {
      "left" : "findDependencies",
      "right" : "findDependencies",
      "info" : "SimpleName[31047-31063]:SimpleName[31377-31393]"
    }, {
      "left" : "@NotNull MavenProject depProject",
      "right" : "@NotNull MavenProject depProject",
      "info" : "SingleVariableDeclaration[31064-31096]:SingleVariableDeclaration[31394-31426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31098-31157]:Block[31428-31487]"
    }, {
      "left" : "return findDependencies(depProject.getMavenId());",
      "right" : "return findDependencies(depProject.getMavenId());",
      "info" : "ReturnStatement[31104-31153]:ReturnStatement[31434-31483]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31161-31167]:Modifier[31491-31497]"
    }, {
      "left" : "List<MavenArtifact>",
      "right" : "List<MavenArtifact>",
      "info" : "ParameterizedType[31168-31187]:ParameterizedType[31498-31517]"
    }, {
      "left" : "findDependencies",
      "right" : "findDependencies",
      "info" : "SimpleName[31188-31204]:SimpleName[31518-31534]"
    }, {
      "left" : "@NotNull MavenId id",
      "right" : "@NotNull MavenId id",
      "info" : "SingleVariableDeclaration[31205-31224]:SingleVariableDeclaration[31535-31554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31226-31290]:Block[31556-31620]"
    }, {
      "left" : "return getDependencyArtifactIndex().findArtifacts(id);",
      "right" : "return getDependencyArtifactIndex().findArtifacts(id);",
      "info" : "ReturnStatement[31232-31286]:ReturnStatement[31562-31616]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[31294-31302]:MarkerAnnotation[31624-31632]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31305-31311]:Modifier[31635-31641]"
    }, {
      "left" : "List<MavenArtifact>",
      "right" : "List<MavenArtifact>",
      "info" : "ParameterizedType[31312-31331]:ParameterizedType[31642-31661]"
    }, {
      "left" : "findDependencies",
      "right" : "findDependencies",
      "info" : "SimpleName[31332-31348]:SimpleName[31662-31678]"
    }, {
      "left" : "@Nullable String groupId",
      "right" : "@Nullable String groupId",
      "info" : "SingleVariableDeclaration[31349-31373]:SingleVariableDeclaration[31679-31703]"
    }, {
      "left" : "@Nullable String artifactId",
      "right" : "@Nullable String artifactId",
      "info" : "SingleVariableDeclaration[31375-31402]:SingleVariableDeclaration[31705-31732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31404-31485]:Block[31734-31815]"
    }, {
      "left" : "return getDependencyArtifactIndex().findArtifacts(groupId, artifactId);",
      "right" : "return getDependencyArtifactIndex().findArtifacts(groupId, artifactId);",
      "info" : "ReturnStatement[31410-31481]:ReturnStatement[31740-31811]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31489-31495]:Modifier[31819-31825]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[31496-31503]:PrimitiveType[31826-31833]"
    }, {
      "left" : "hasUnresolvedArtifacts",
      "right" : "hasUnresolvedArtifacts",
      "info" : "SimpleName[31504-31526]:SimpleName[31834-31856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31529-31712]:Block[31859-32042]"
    }, {
      "left" : "State state = myState;",
      "right" : "State state = myState;",
      "info" : "VariableDeclarationStatement[31535-31557]:VariableDeclarationStatement[31865-31887]"
    }, {
      "left" : "return !isParentResolved(state)\n           || !getUnresolvedDependencies(state).isEmpty()\n           || !getUnresolvedExtensions(state).isEmpty();",
      "right" : "return !isParentResolved(state)\n           || !getUnresolvedDependencies(state).isEmpty()\n           || !getUnresolvedExtensions(state).isEmpty();",
      "info" : "ReturnStatement[31562-31708]:ReturnStatement[31892-32038]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31716-31722]:Modifier[32046-32052]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[31723-31730]:PrimitiveType[32053-32060]"
    }, {
      "left" : "hasUnresolvedPlugins",
      "right" : "hasUnresolvedPlugins",
      "info" : "SimpleName[31731-31751]:SimpleName[32061-32081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31754-31812]:Block[32084-32142]"
    }, {
      "left" : "return !getUnresolvedPlugins(myState).isEmpty();",
      "right" : "return !getUnresolvedPlugins(myState).isEmpty();",
      "info" : "ReturnStatement[31760-31808]:ReturnStatement[32090-32138]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[31816-31824]:MarkerAnnotation[32146-32154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31827-31833]:Modifier[32157-32163]"
    }, {
      "left" : "List<MavenPlugin>",
      "right" : "List<MavenPlugin>",
      "info" : "ParameterizedType[31834-31851]:ParameterizedType[32164-32181]"
    }, {
      "left" : "getPlugins",
      "right" : "getPlugins",
      "info" : "SimpleName[31852-31862]:SimpleName[32182-32192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31865-31900]:Block[32195-32230]"
    }, {
      "left" : "return myState.myPlugins;",
      "right" : "return myState.myPlugins;",
      "info" : "ReturnStatement[31871-31896]:ReturnStatement[32201-32226]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[31904-31912]:MarkerAnnotation[32234-32242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31915-31921]:Modifier[32245-32251]"
    }, {
      "left" : "List<MavenPlugin>",
      "right" : "List<MavenPlugin>",
      "info" : "ParameterizedType[31922-31939]:ParameterizedType[32252-32269]"
    }, {
      "left" : "getDeclaredPlugins",
      "right" : "getDeclaredPlugins",
      "info" : "SimpleName[31940-31958]:SimpleName[32270-32288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31961-32006]:Block[32291-32336]"
    }, {
      "left" : "return getDeclaredPlugins(myState);",
      "right" : "return getDeclaredPlugins(myState);",
      "info" : "ReturnStatement[31967-32002]:ReturnStatement[32297-32332]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32010-32017]:Modifier[32340-32347]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32018-32024]:Modifier[32348-32354]"
    }, {
      "left" : "List<MavenPlugin>",
      "right" : "List<MavenPlugin>",
      "info" : "ParameterizedType[32025-32042]:ParameterizedType[32355-32372]"
    }, {
      "left" : "getDeclaredPlugins",
      "right" : "getDeclaredPlugins",
      "info" : "SimpleName[32043-32061]:SimpleName[32373-32391]"
    }, {
      "left" : "State state",
      "right" : "State state",
      "info" : "SingleVariableDeclaration[32062-32073]:SingleVariableDeclaration[32392-32403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32075-32272]:Block[32405-32602]"
    }, {
      "left" : "return ContainerUtil.findAll(state.myPlugins, new Condition<MavenPlugin>() {\n      public boolean value(MavenPlugin mavenPlugin) {\n        return !mavenPlugin.isDefault();\n      }\n    });",
      "right" : "return ContainerUtil.findAll(state.myPlugins, new Condition<MavenPlugin>() {\n      public boolean value(MavenPlugin mavenPlugin) {\n        return !mavenPlugin.isDefault();\n      }\n    });",
      "info" : "ReturnStatement[32081-32268]:ReturnStatement[32411-32598]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32164-32170]:Modifier[32494-32500]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32171-32178]:PrimitiveType[32501-32508]"
    }, {
      "left" : "value",
      "right" : "value",
      "info" : "SimpleName[32179-32184]:SimpleName[32509-32514]"
    }, {
      "left" : "MavenPlugin mavenPlugin",
      "right" : "MavenPlugin mavenPlugin",
      "info" : "SingleVariableDeclaration[32185-32208]:SingleVariableDeclaration[32515-32538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32210-32260]:Block[32540-32590]"
    }, {
      "left" : "return !mavenPlugin.isDefault();",
      "right" : "return !mavenPlugin.isDefault();",
      "info" : "ReturnStatement[32220-32252]:ReturnStatement[32550-32582]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[32276-32285]:MarkerAnnotation[32606-32615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32288-32294]:Modifier[32618-32624]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[32295-32302]:SimpleType[32625-32632]"
    }, {
      "left" : "getPluginConfiguration",
      "right" : "getPluginConfiguration",
      "info" : "SimpleName[32303-32325]:SimpleName[32633-32655]"
    }, {
      "left" : "@Nullable String groupId",
      "right" : "@Nullable String groupId",
      "info" : "SingleVariableDeclaration[32326-32350]:SingleVariableDeclaration[32656-32680]"
    }, {
      "left" : "@Nullable String artifactId",
      "right" : "@Nullable String artifactId",
      "info" : "SingleVariableDeclaration[32352-32379]:SingleVariableDeclaration[32682-32709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32381-32452]:Block[32711-32782]"
    }, {
      "left" : "return getPluginGoalConfiguration(groupId, artifactId, null);",
      "right" : "return getPluginGoalConfiguration(groupId, artifactId, null);",
      "info" : "ReturnStatement[32387-32448]:ReturnStatement[32717-32778]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[32456-32465]:MarkerAnnotation[32786-32795]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32468-32474]:Modifier[32798-32804]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[32475-32482]:SimpleType[32805-32812]"
    }, {
      "left" : "getPluginGoalConfiguration",
      "right" : "getPluginGoalConfiguration",
      "info" : "SimpleName[32483-32509]:SimpleName[32813-32839]"
    }, {
      "left" : "@Nullable String groupId",
      "right" : "@Nullable String groupId",
      "info" : "SingleVariableDeclaration[32510-32534]:SingleVariableDeclaration[32840-32864]"
    }, {
      "left" : "@Nullable String artifactId",
      "right" : "@Nullable String artifactId",
      "info" : "SingleVariableDeclaration[32536-32563]:SingleVariableDeclaration[32866-32893]"
    }, {
      "left" : "@Nullable String goal",
      "right" : "@Nullable String goal",
      "info" : "SingleVariableDeclaration[32565-32586]:SingleVariableDeclaration[32895-32916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32588-32671]:Block[32918-33001]"
    }, {
      "left" : "return getPluginGoalConfiguration(findPlugin(groupId, artifactId), goal);",
      "right" : "return getPluginGoalConfiguration(findPlugin(groupId, artifactId), goal);",
      "info" : "ReturnStatement[32594-32667]:ReturnStatement[32924-32997]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[32675-32684]:MarkerAnnotation[33005-33014]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32687-32693]:Modifier[33017-33023]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[32694-32701]:SimpleType[33024-33031]"
    }, {
      "left" : "getPluginGoalConfiguration",
      "right" : "getPluginGoalConfiguration",
      "info" : "SimpleName[32702-32728]:SimpleName[33032-33058]"
    }, {
      "left" : "@Nullable MavenPlugin plugin",
      "right" : "@Nullable MavenPlugin plugin",
      "info" : "SingleVariableDeclaration[32729-32757]:SingleVariableDeclaration[33059-33087]"
    }, {
      "left" : "@Nullable String goal",
      "right" : "@Nullable String goal",
      "info" : "SingleVariableDeclaration[32759-32780]:SingleVariableDeclaration[33089-33110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32782-32920]:Block[33112-33250]"
    }, {
      "left" : "if (plugin == null)",
      "right" : "if (plugin == null)",
      "info" : "IfStatement[32788-32820]:IfStatement[33118-33150]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[32808-32820]:ReturnStatement[33138-33150]"
    }, {
      "left" : "return goal == null ? plugin.getConfigurationElement() : plugin.getGoalConfiguration(goal);",
      "right" : "return goal == null ? plugin.getConfigurationElement() : plugin.getGoalConfiguration(goal);",
      "info" : "ReturnStatement[32825-32916]:ReturnStatement[33155-33246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32924-32930]:Modifier[33254-33260]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[32931-32938]:SimpleType[33261-33268]"
    }, {
      "left" : "getPluginExecutionConfiguration",
      "right" : "getPluginExecutionConfiguration",
      "info" : "SimpleName[32939-32970]:SimpleName[33269-33300]"
    }, {
      "left" : "@Nullable String groupId",
      "right" : "@Nullable String groupId",
      "info" : "SingleVariableDeclaration[32971-32995]:SingleVariableDeclaration[33301-33325]"
    }, {
      "left" : "@Nullable String artifactId",
      "right" : "@Nullable String artifactId",
      "info" : "SingleVariableDeclaration[32997-33024]:SingleVariableDeclaration[33327-33354]"
    }, {
      "left" : "@NotNull String executionId",
      "right" : "@NotNull String executionId",
      "info" : "SingleVariableDeclaration[33026-33053]:SingleVariableDeclaration[33356-33383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33055-33213]:Block[33385-33543]"
    }, {
      "left" : "MavenPlugin plugin = findPlugin(groupId, artifactId);",
      "right" : "MavenPlugin plugin = findPlugin(groupId, artifactId);",
      "info" : "VariableDeclarationStatement[33061-33114]:VariableDeclarationStatement[33391-33444]"
    }, {
      "left" : "if (plugin == null)",
      "right" : "if (plugin == null)",
      "info" : "IfStatement[33119-33151]:IfStatement[33449-33481]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[33139-33151]:ReturnStatement[33469-33481]"
    }, {
      "left" : "return plugin.getExecutionConfiguration(executionId);",
      "right" : "return plugin.getExecutionConfiguration(executionId);",
      "info" : "ReturnStatement[33156-33209]:ReturnStatement[33486-33539]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[33217-33226]:MarkerAnnotation[33547-33556]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33229-33235]:Modifier[33559-33565]"
    }, {
      "left" : "MavenPlugin",
      "right" : "MavenPlugin",
      "info" : "SimpleType[33236-33247]:SimpleType[33566-33577]"
    }, {
      "left" : "findPlugin",
      "right" : "findPlugin",
      "info" : "SimpleName[33248-33258]:SimpleName[33578-33588]"
    }, {
      "left" : "@Nullable String groupId",
      "right" : "@Nullable String groupId",
      "info" : "SingleVariableDeclaration[33259-33283]:SingleVariableDeclaration[33589-33613]"
    }, {
      "left" : "@Nullable String artifactId",
      "right" : "@Nullable String artifactId",
      "info" : "SingleVariableDeclaration[33285-33312]:SingleVariableDeclaration[33615-33642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33314-33370]:Block[33644-33700]"
    }, {
      "left" : "return findPlugin(groupId, artifactId, false);",
      "right" : "return findPlugin(groupId, artifactId, false);",
      "info" : "ReturnStatement[33320-33366]:ReturnStatement[33650-33696]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[33374-33383]:MarkerAnnotation[33704-33713]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33386-33392]:Modifier[33716-33722]"
    }, {
      "left" : "MavenPlugin",
      "right" : "MavenPlugin",
      "info" : "SimpleType[33393-33404]:SimpleType[33723-33734]"
    }, {
      "left" : "findPlugin",
      "right" : "findPlugin",
      "info" : "SimpleName[33405-33415]:SimpleName[33735-33745]"
    }, {
      "left" : "@Nullable String groupId",
      "right" : "@Nullable String groupId",
      "info" : "SingleVariableDeclaration[33416-33440]:SingleVariableDeclaration[33746-33770]"
    }, {
      "left" : "@Nullable String artifactId",
      "right" : "@Nullable String artifactId",
      "info" : "SingleVariableDeclaration[33442-33469]:SingleVariableDeclaration[33772-33799]"
    }, {
      "left" : "final boolean explicitlyDeclaredOnly",
      "right" : "final boolean explicitlyDeclaredOnly",
      "info" : "SingleVariableDeclaration[33471-33507]:SingleVariableDeclaration[33801-33837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33509-33746]:Block[33839-34076]"
    }, {
      "left" : "final List<MavenPlugin> plugins = explicitlyDeclaredOnly ? getDeclaredPlugins() : getPlugins();",
      "right" : "final List<MavenPlugin> plugins = explicitlyDeclaredOnly ? getDeclaredPlugins() : getPlugins();",
      "info" : "VariableDeclarationStatement[33515-33610]:VariableDeclarationStatement[33845-33940]"
    }, {
      "left" : "for (MavenPlugin each : plugins)",
      "right" : "for (MavenPlugin each : plugins)",
      "info" : "EnhancedForStatement[33615-33725]:EnhancedForStatement[33945-34055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33648-33725]:Block[33978-34055]"
    }, {
      "left" : "if (each.getMavenId().equals(groupId, artifactId))",
      "right" : "if (each.getMavenId().equals(groupId, artifactId))",
      "info" : "IfStatement[33656-33719]:IfStatement[33986-34049]"
    }, {
      "left" : "return each;",
      "right" : "return each;",
      "info" : "ReturnStatement[33707-33719]:ReturnStatement[34037-34049]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[33730-33742]:ReturnStatement[34060-34072]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[33750-33759]:MarkerAnnotation[34080-34089]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33762-33768]:Modifier[34092-34098]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[33769-33775]:SimpleType[34099-34105]"
    }, {
      "left" : "getEncoding",
      "right" : "getEncoding",
      "info" : "SimpleName[33776-33787]:SimpleName[34106-34117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33790-34165]:Block[34120-34495]"
    }, {
      "left" : "String encoding = myState.myProperties.getProperty(\"project.build.sourceEncoding\");",
      "right" : "String encoding = myState.myProperties.getProperty(\"project.build.sourceEncoding\");",
      "info" : "VariableDeclarationStatement[33796-33879]:VariableDeclarationStatement[34126-34209]"
    }, {
      "left" : "if (encoding != null)",
      "right" : "if (encoding != null)",
      "info" : "IfStatement[33884-33922]:IfStatement[34214-34252]"
    }, {
      "left" : "return encoding;",
      "right" : "return encoding;",
      "info" : "ReturnStatement[33906-33922]:ReturnStatement[34236-34252]"
    }, {
      "left" : "Element pluginConfiguration = getPluginConfiguration(\"org.apache.maven.plugins\", \"maven-resources-plugin\");",
      "right" : "Element pluginConfiguration = getPluginConfiguration(\"org.apache.maven.plugins\", \"maven-resources-plugin\");",
      "info" : "VariableDeclarationStatement[33928-34035]:VariableDeclarationStatement[34258-34365]"
    }, {
      "left" : "if (pluginConfiguration != null)",
      "right" : "if (pluginConfiguration != null)",
      "info" : "IfStatement[34040-34143]:IfStatement[34370-34473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34073-34143]:Block[34403-34473]"
    }, {
      "left" : "return pluginConfiguration.getChildTextTrim(\"encoding\");",
      "right" : "return pluginConfiguration.getChildTextTrim(\"encoding\");",
      "info" : "ReturnStatement[34081-34137]:ReturnStatement[34411-34467]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[34149-34161]:ReturnStatement[34479-34491]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[34169-34178]:MarkerAnnotation[34499-34508]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34181-34187]:Modifier[34511-34517]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[34188-34194]:SimpleType[34518-34524]"
    }, {
      "left" : "getSourceLevel",
      "right" : "getSourceLevel",
      "info" : "SimpleName[34195-34209]:SimpleName[34525-34539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34212-34256]:Block[34542-34586]"
    }, {
      "left" : "return getCompilerLevel(\"source\");",
      "right" : "return getCompilerLevel(\"source\");",
      "info" : "ReturnStatement[34218-34252]:ReturnStatement[34548-34582]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[34260-34269]:MarkerAnnotation[34590-34599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34272-34278]:Modifier[34602-34608]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[34279-34285]:SimpleType[34609-34615]"
    }, {
      "left" : "getTargetLevel",
      "right" : "getTargetLevel",
      "info" : "SimpleName[34286-34300]:SimpleName[34616-34630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34303-34347]:Block[34633-34677]"
    }, {
      "left" : "return getCompilerLevel(\"target\");",
      "right" : "return getCompilerLevel(\"target\");",
      "info" : "ReturnStatement[34309-34343]:ReturnStatement[34639-34673]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[34351-34360]:MarkerAnnotation[34681-34690]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34363-34370]:Modifier[34693-34700]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[34371-34377]:SimpleType[34701-34707]"
    }, {
      "left" : "getCompilerLevel",
      "right" : "getCompilerLevel",
      "info" : "SimpleName[34378-34394]:SimpleName[34708-34724]"
    }, {
      "left" : "String level",
      "right" : "String level",
      "info" : "SingleVariableDeclaration[34395-34407]:SingleVariableDeclaration[34725-34737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34409-34651]:Block[34739-34981]"
    }, {
      "left" : "String result = MavenJDOMUtil.findChildValueByPath(getCompilerConfig(), level);",
      "right" : "String result = MavenJDOMUtil.findChildValueByPath(getCompilerConfig(), level);",
      "info" : "VariableDeclarationStatement[34415-34494]:VariableDeclarationStatement[34745-34824]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[34500-34603]:IfStatement[34830-34933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34520-34603]:Block[34850-34933]"
    }, {
      "left" : "result = myState.myProperties.getProperty(\"maven.compiler.\" + level);",
      "right" : "result = myState.myProperties.getProperty(\"maven.compiler.\" + level);",
      "info" : "ExpressionStatement[34528-34597]:ExpressionStatement[34858-34927]"
    }, {
      "left" : "return normalizeCompilerLevel(result);",
      "right" : "return normalizeCompilerLevel(result);",
      "info" : "ReturnStatement[34609-34647]:ReturnStatement[34939-34977]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[34655-34664]:MarkerAnnotation[34985-34994]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34667-34674]:Modifier[34997-35004]"
    }, {
      "left" : "Element",
      "right" : "Element",
      "info" : "SimpleType[34675-34682]:SimpleType[35005-35012]"
    }, {
      "left" : "getCompilerConfig",
      "right" : "getCompilerConfig",
      "info" : "SimpleName[34683-34700]:SimpleName[35013-35030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34703-34796]:Block[35033-35126]"
    }, {
      "left" : "return getPluginConfiguration(\"org.apache.maven.plugins\", \"maven-compiler-plugin\");",
      "right" : "return getPluginConfiguration(\"org.apache.maven.plugins\", \"maven-compiler-plugin\");",
      "info" : "ReturnStatement[34709-34792]:ReturnStatement[35039-35122]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[34800-34809]:MarkerAnnotation[35130-35139]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34812-34818]:Modifier[35142-35148]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[34819-34825]:Modifier[35149-35155]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[34826-34832]:SimpleType[35156-35162]"
    }, {
      "left" : "normalizeCompilerLevel",
      "right" : "normalizeCompilerLevel",
      "info" : "SimpleName[34833-34855]:SimpleName[35163-35185]"
    }, {
      "left" : "@Nullable String level",
      "right" : "@Nullable String level",
      "info" : "SingleVariableDeclaration[34856-34878]:SingleVariableDeclaration[35186-35208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34880-34929]:Block[35210-35259]"
    }, {
      "left" : "return COMPILER_LEVEL_TABLE.get(level);",
      "right" : "return COMPILER_LEVEL_TABLE.get(level);",
      "info" : "ReturnStatement[34886-34925]:ReturnStatement[35216-35255]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[34933-34941]:MarkerAnnotation[35263-35271]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34944-34950]:Modifier[35274-35280]"
    }, {
      "left" : "Properties",
      "right" : "Properties",
      "info" : "SimpleType[34951-34961]:SimpleType[35281-35291]"
    }, {
      "left" : "getProperties",
      "right" : "getProperties",
      "info" : "SimpleName[34962-34975]:SimpleName[35292-35305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34978-35016]:Block[35308-35346]"
    }, {
      "left" : "return myState.myProperties;",
      "right" : "return myState.myProperties;",
      "info" : "ReturnStatement[34984-35012]:ReturnStatement[35314-35342]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[35020-35028]:MarkerAnnotation[35350-35358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35031-35037]:Modifier[35361-35367]"
    }, {
      "left" : "File",
      "right" : "File",
      "info" : "SimpleType[35038-35042]:SimpleType[35368-35372]"
    }, {
      "left" : "getLocalRepository",
      "right" : "getLocalRepository",
      "info" : "SimpleName[35043-35061]:SimpleName[35373-35391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35064-35107]:Block[35394-35437]"
    }, {
      "left" : "return myState.myLocalRepository;",
      "right" : "return myState.myLocalRepository;",
      "info" : "ReturnStatement[35070-35103]:ReturnStatement[35400-35433]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[35111-35119]:MarkerAnnotation[35441-35449]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35122-35128]:Modifier[35452-35458]"
    }, {
      "left" : "List<MavenRemoteRepository>",
      "right" : "List<MavenRemoteRepository>",
      "info" : "ParameterizedType[35129-35156]:ParameterizedType[35459-35486]"
    }, {
      "left" : "getRemoteRepositories",
      "right" : "getRemoteRepositories",
      "info" : "SimpleName[35157-35178]:SimpleName[35487-35508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35181-35227]:Block[35511-35557]"
    }, {
      "left" : "return myState.myRemoteRepositories;",
      "right" : "return myState.myRemoteRepositories;",
      "info" : "ReturnStatement[35187-35223]:ReturnStatement[35517-35553]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[35231-35239]:MarkerAnnotation[35561-35569]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35242-35248]:Modifier[35572-35578]"
    }, {
      "left" : "List<MavenImporter>",
      "right" : "List<MavenImporter>",
      "info" : "ParameterizedType[35249-35268]:ParameterizedType[35579-35598]"
    }, {
      "left" : "getSuitableImporters",
      "right" : "getSuitableImporters",
      "info" : "SimpleName[35269-35289]:SimpleName[35599-35619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35292-35350]:Block[35622-35680]"
    }, {
      "left" : "return MavenImporter.getSuitableImporters(this);",
      "right" : "return MavenImporter.getSuitableImporters(this);",
      "info" : "ReturnStatement[35298-35346]:ReturnStatement[35628-35676]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[35354-35362]:MarkerAnnotation[35684-35692]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35365-35371]:Modifier[35695-35701]"
    }, {
      "left" : "ModuleType",
      "right" : "ModuleType",
      "info" : "SimpleType[35372-35382]:SimpleType[35702-35712]"
    }, {
      "left" : "getModuleType",
      "right" : "getModuleType",
      "info" : "SimpleName[35383-35396]:SimpleName[35713-35726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35399-35658]:Block[35729-35988]"
    }, {
      "left" : "final List<MavenImporter> importers = getSuitableImporters();",
      "right" : "final List<MavenImporter> importers = getSuitableImporters();",
      "info" : "VariableDeclarationStatement[35405-35466]:VariableDeclarationStatement[35735-35796]"
    }, {
      "left" : "return importers.size() > 0 ? importers.get(0).getModuleType() : StdModuleTypes.JAVA;",
      "right" : "return importers.size() > 0 ? importers.get(0).getModuleType() : StdModuleTypes.JAVA;",
      "info" : "ReturnStatement[35569-35654]:ReturnStatement[35899-35984]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[35662-35670]:MarkerAnnotation[35992-36000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35673-35679]:Modifier[36003-36009]"
    }, {
      "left" : "Pair<String, String>",
      "right" : "Pair<String, String>",
      "info" : "ParameterizedType[35680-35700]:ParameterizedType[36010-36030]"
    }, {
      "left" : "getClassifierAndExtension",
      "right" : "getClassifierAndExtension",
      "info" : "SimpleName[35701-35726]:SimpleName[36031-36056]"
    }, {
      "left" : "@NotNull MavenArtifact artifact",
      "right" : "@NotNull MavenArtifact artifact",
      "info" : "SingleVariableDeclaration[35727-35758]:SingleVariableDeclaration[36057-36088]"
    }, {
      "left" : "@NotNull MavenExtraArtifactType type",
      "right" : "@NotNull MavenExtraArtifactType type",
      "info" : "SingleVariableDeclaration[35760-35796]:SingleVariableDeclaration[36090-36126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35798-36084]:Block[36128-36414]"
    }, {
      "left" : "for (MavenImporter each : getSuitableImporters())",
      "right" : "for (MavenImporter each : getSuitableImporters())",
      "info" : "EnhancedForStatement[35804-35999]:EnhancedForStatement[36134-36329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35854-35999]:Block[36184-36329]"
    }, {
      "left" : "Pair<String, String> result = each.getExtraArtifactClassifierAndExtension(artifact, type);",
      "right" : "Pair<String, String> result = each.getExtraArtifactClassifierAndExtension(artifact, type);",
      "info" : "VariableDeclarationStatement[35862-35952]:VariableDeclarationStatement[36192-36282]"
    }, {
      "left" : "if (result != null)",
      "right" : "if (result != null)",
      "info" : "IfStatement[35959-35993]:IfStatement[36289-36323]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[35979-35993]:ReturnStatement[36309-36323]"
    }, {
      "left" : "return Pair.create(type.getDefaultClassifier(), type.getDefaultExtension());",
      "right" : "return Pair.create(type.getDefaultClassifier(), type.getDefaultExtension());",
      "info" : "ReturnStatement[36004-36080]:ReturnStatement[36334-36410]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36088-36094]:Modifier[36418-36424]"
    }, {
      "left" : "MavenArtifactIndex",
      "right" : "MavenArtifactIndex",
      "info" : "SimpleType[36095-36113]:SimpleType[36425-36443]"
    }, {
      "left" : "getDependencyArtifactIndex",
      "right" : "getDependencyArtifactIndex",
      "info" : "SimpleName[36114-36140]:SimpleName[36444-36470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36143-36377]:Block[36473-36707]"
    }, {
      "left" : "MavenArtifactIndex res = getCachedValue(DEPENDENCIES_CACHE_KEY);",
      "right" : "MavenArtifactIndex res = getCachedValue(DEPENDENCIES_CACHE_KEY);",
      "info" : "VariableDeclarationStatement[36149-36213]:VariableDeclarationStatement[36479-36543]"
    }, {
      "left" : "if (res == null)",
      "right" : "if (res == null)",
      "info" : "IfStatement[36218-36356]:IfStatement[36548-36686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36235-36356]:Block[36565-36686]"
    }, {
      "left" : "res = MavenArtifactIndex.build(getDependencies());",
      "right" : "res = MavenArtifactIndex.build(getDependencies());",
      "info" : "ExpressionStatement[36243-36293]:ExpressionStatement[36573-36623]"
    }, {
      "left" : "res = putCachedValue(DEPENDENCIES_CACHE_KEY, res);",
      "right" : "res = putCachedValue(DEPENDENCIES_CACHE_KEY, res);",
      "info" : "ExpressionStatement[36300-36350]:ExpressionStatement[36630-36680]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[36362-36373]:ReturnStatement[36692-36703]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[36381-36390]:MarkerAnnotation[36711-36720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36393-36399]:Modifier[36723-36729]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[36401-36402]:TypeParameter[36731-36732]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[36404-36405]:SimpleType[36734-36735]"
    }, {
      "left" : "getCachedValue",
      "right" : "getCachedValue",
      "info" : "SimpleName[36406-36420]:SimpleName[36736-36750]"
    }, {
      "left" : "Key<V> key",
      "right" : "Key<V> key",
      "info" : "SingleVariableDeclaration[36421-36431]:SingleVariableDeclaration[36751-36761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36433-36507]:Block[36763-36837]"
    }, {
      "left" : "return (V)myState.myCache.get(key);",
      "right" : "return (V)myState.myCache.get(key);",
      "info" : "ReturnStatement[36468-36503]:ReturnStatement[36798-36833]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[36511-36519]:MarkerAnnotation[36841-36849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36522-36528]:Modifier[36852-36858]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[36530-36531]:TypeParameter[36860-36861]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[36533-36534]:SimpleType[36863-36864]"
    }, {
      "left" : "putCachedValue",
      "right" : "putCachedValue",
      "info" : "SimpleName[36535-36549]:SimpleName[36865-36879]"
    }, {
      "left" : "Key<V> key",
      "right" : "Key<V> key",
      "info" : "SingleVariableDeclaration[36550-36560]:SingleVariableDeclaration[36880-36890]"
    }, {
      "left" : "@NotNull V value",
      "right" : "@NotNull V value",
      "info" : "SingleVariableDeclaration[36562-36578]:SingleVariableDeclaration[36892-36908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36580-36773]:Block[36910-37103]"
    }, {
      "left" : "ConcurrentHashMap<Key, Object> map = myState.myCache;",
      "right" : "ConcurrentHashMap<Key, Object> map = myState.myCache;",
      "info" : "VariableDeclarationStatement[36586-36639]:VariableDeclarationStatement[36916-36969]"
    }, {
      "left" : "Object oldValue = map.putIfAbsent(key, value);",
      "right" : "Object oldValue = map.putIfAbsent(key, value);",
      "info" : "VariableDeclarationStatement[36644-36690]:VariableDeclarationStatement[36974-37020]"
    }, {
      "left" : "if (oldValue != null)",
      "right" : "if (oldValue != null)",
      "info" : "IfStatement[36695-36750]:IfStatement[37025-37080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36717-36750]:Block[37047-37080]"
    }, {
      "left" : "return (V)oldValue;",
      "right" : "return (V)oldValue;",
      "info" : "ReturnStatement[36725-36744]:ReturnStatement[37055-37074]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[36756-36769]:ReturnStatement[37086-37099]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36777-36786]:MarkerAnnotation[37107-37116]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36789-36795]:Modifier[37119-37125]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36796-36802]:SimpleType[37126-37132]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[36803-36811]:SimpleName[37133-37141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36814-36855]:Block[37144-37185]"
    }, {
      "left" : "return getMavenId().toString();",
      "right" : "return getMavenId().toString();",
      "info" : "ReturnStatement[36820-36851]:ReturnStatement[37150-37181]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[36859-36866]:Modifier[37189-37196]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36867-36873]:Modifier[37197-37203]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[36874-36879]:TYPE_DECLARATION_KIND[37204-37209]"
    }, {
      "left" : "State",
      "right" : "State",
      "info" : "SimpleName[36880-36885]:SimpleName[37210-37215]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[36897-36906]:SimpleType[37227-37236]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[36908-36920]:SimpleType[37238-37250]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[38238-38247]:MarkerAnnotation[38568-38577]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38252-38258]:Modifier[38582-38588]"
    }, {
      "left" : "State",
      "right" : "State",
      "info" : "SimpleType[38259-38264]:SimpleType[38589-38594]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[38265-38270]:SimpleName[38595-38600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38273-38545]:Block[38603-38875]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[38281-38539]:TryStatement[38611-38869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38285-38447]:Block[38615-38777]"
    }, {
      "left" : "State result = (State)super.clone();",
      "right" : "State result = (State)super.clone();",
      "info" : "VariableDeclarationStatement[38295-38331]:VariableDeclarationStatement[38625-38661]"
    }, {
      "left" : "myCache = new ConcurrentHashMap<Key, Object>();",
      "right" : "myCache = new ConcurrentHashMap<Key, Object>();",
      "info" : "ExpressionStatement[38340-38387]:ExpressionStatement[38670-38717]"
    }, {
      "left" : "result.resetCache();",
      "right" : "result.resetCache();",
      "info" : "ExpressionStatement[38396-38416]:ExpressionStatement[38726-38746]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[38425-38439]:ReturnStatement[38755-38769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38491-38539]:Block[38821-38869]"
    }, {
      "left" : "throw new RuntimeException(e);",
      "right" : "throw new RuntimeException(e);",
      "info" : "ThrowStatement[38501-38531]:ThrowStatement[38831-38861]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38551-38558]:Modifier[38881-38888]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38559-38563]:PrimitiveType[38889-38893]"
    }, {
      "left" : "resetCache",
      "right" : "resetCache",
      "info" : "SimpleName[38564-38574]:SimpleName[38894-38904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38577-38763]:Block[38907-39093]"
    }, {
      "left" : "myProblemsCache = null;",
      "right" : "myProblemsCache = null;",
      "info" : "ExpressionStatement[38585-38608]:ExpressionStatement[38915-38938]"
    }, {
      "left" : "myUnresolvedDependenciesCache = null;",
      "right" : "myUnresolvedDependenciesCache = null;",
      "info" : "ExpressionStatement[38615-38652]:ExpressionStatement[38945-38982]"
    }, {
      "left" : "myUnresolvedPluginsCache = null;",
      "right" : "myUnresolvedPluginsCache = null;",
      "info" : "ExpressionStatement[38659-38691]:ExpressionStatement[38989-39021]"
    }, {
      "left" : "myUnresolvedExtensionsCache = null;",
      "right" : "myUnresolvedExtensionsCache = null;",
      "info" : "ExpressionStatement[38698-38733]:ExpressionStatement[39028-39063]"
    }, {
      "left" : "myCache.clear();",
      "right" : "myCache.clear();",
      "info" : "ExpressionStatement[38741-38757]:ExpressionStatement[39071-39087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38769-38775]:Modifier[39099-39105]"
    }, {
      "left" : "MavenProjectChanges",
      "right" : "MavenProjectChanges",
      "info" : "SimpleType[38776-38795]:SimpleType[39106-39125]"
    }, {
      "left" : "getChanges",
      "right" : "getChanges",
      "info" : "SimpleName[38796-38806]:SimpleName[39126-39136]"
    }, {
      "left" : "State other",
      "right" : "State other",
      "info" : "SingleVariableDeclaration[38807-38818]:SingleVariableDeclaration[39137-39148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38820-39990]:Block[39150-40320]"
    }, {
      "left" : "if (myLastReadStamp == 0)",
      "right" : "if (myLastReadStamp == 0)",
      "info" : "IfStatement[38828-38885]:IfStatement[39158-39215]"
    }, {
      "left" : "return MavenProjectChanges.ALL;",
      "right" : "return MavenProjectChanges.ALL;",
      "info" : "ReturnStatement[38854-38885]:ReturnStatement[39184-39215]"
    }, {
      "left" : "MavenProjectChanges result = new MavenProjectChanges();",
      "right" : "MavenProjectChanges result = new MavenProjectChanges();",
      "info" : "VariableDeclarationStatement[38893-38948]:VariableDeclarationStatement[39223-39278]"
    }, {
      "left" : "result.packaging = !Comparing.equal(myPackaging, other.myPackaging);",
      "right" : "result.packaging = !Comparing.equal(myPackaging, other.myPackaging);",
      "info" : "ExpressionStatement[38956-39024]:ExpressionStatement[39286-39354]"
    }, {
      "left" : "result.output = !Comparing.equal(myFinalName, other.myFinalName)\n                      || !Comparing.equal(myBuildDirectory, other.myBuildDirectory)\n                      || !Comparing.equal(myOutputDirectory, other.myOutputDirectory)\n                      || !Comparing.equal(myTestOutputDirectory, other.myTestOutputDirectory);",
      "right" : "result.output = !Comparing.equal(myFinalName, other.myFinalName)\n                      || !Comparing.equal(myBuildDirectory, other.myBuildDirectory)\n                      || !Comparing.equal(myOutputDirectory, other.myOutputDirectory)\n                      || !Comparing.equal(myTestOutputDirectory, other.myTestOutputDirectory);",
      "info" : "ExpressionStatement[39032-39361]:ExpressionStatement[39362-39691]"
    }, {
      "left" : "result.sources = !Comparing.equal(mySources, other.mySources)\n                       || !Comparing.equal(myTestSources, other.myTestSources)\n                       || !Comparing.equal(myResources, other.myResources)\n                       || !Comparing.equal(myTestResources, other.myTestResources);",
      "right" : "result.sources = !Comparing.equal(mySources, other.mySources)\n                       || !Comparing.equal(myTestSources, other.myTestSources)\n                       || !Comparing.equal(myResources, other.myResources)\n                       || !Comparing.equal(myTestResources, other.myTestResources);",
      "info" : "ExpressionStatement[39369-39668]:ExpressionStatement[39699-39998]"
    }, {
      "left" : "boolean repositoryChanged = !Comparing.equal(myLocalRepository, other.myLocalRepository);",
      "right" : "boolean repositoryChanged = !Comparing.equal(myLocalRepository, other.myLocalRepository);",
      "info" : "VariableDeclarationStatement[39676-39765]:VariableDeclarationStatement[40006-40095]"
    }, {
      "left" : "result.dependencies = repositoryChanged || !Comparing.equal(myDependencies, other.myDependencies);",
      "right" : "result.dependencies = repositoryChanged || !Comparing.equal(myDependencies, other.myDependencies);",
      "info" : "ExpressionStatement[39773-39871]:ExpressionStatement[40103-40201]"
    }, {
      "left" : "result.plugins = repositoryChanged || !Comparing.equal(myPlugins, other.myPlugins);",
      "right" : "result.plugins = repositoryChanged || !Comparing.equal(myPlugins, other.myPlugins);",
      "info" : "ExpressionStatement[39879-39962]:ExpressionStatement[40209-40292]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[39970-39984]:ReturnStatement[40300-40314]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39996-40003]:Modifier[40326-40333]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40004-40008]:PrimitiveType[40334-40338]"
    }, {
      "left" : "readObject",
      "right" : "readObject",
      "info" : "SimpleName[40009-40019]:SimpleName[40339-40349]"
    }, {
      "left" : "ObjectInputStream in",
      "right" : "ObjectInputStream in",
      "info" : "SingleVariableDeclaration[40020-40040]:SingleVariableDeclaration[40350-40370]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[40049-40060]:SimpleType[40379-40390]"
    }, {
      "left" : "ClassNotFoundException",
      "right" : "ClassNotFoundException",
      "info" : "SimpleType[40062-40084]:SimpleType[40392-40414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40085-40176]:Block[40415-40506]"
    }, {
      "left" : "in.defaultReadObject();",
      "right" : "in.defaultReadObject();",
      "info" : "ExpressionStatement[40093-40116]:ExpressionStatement[40423-40446]"
    }, {
      "left" : "myCache = new ConcurrentHashMap<Key, Object>();",
      "right" : "myCache = new ConcurrentHashMap<Key, Object>();",
      "info" : "ExpressionStatement[40123-40170]:ExpressionStatement[40453-40500]"
    } ]
  },
  "interFileMappings" : { }
}