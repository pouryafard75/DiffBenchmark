{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "TypeDeclaration[1139-14088]:TypeDeclaration[1139-14190]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1471-1519]:FieldDeclaration[1471-1519]"
    }, {
      "left" : "Generator",
      "right" : "Generator",
      "info" : "TypeDeclaration[1523-1736]:TypeDeclaration[1523-1736]"
    }, {
      "left" : "public String getCode();",
      "right" : "public String getCode();",
      "info" : "MethodDeclaration[1708-1732]:MethodDeclaration[1708-1732]"
    }, {
      "left" : "private static final int SOURCE_EXCERPT_REGION_LENGTH = 5;",
      "right" : "private static final int SOURCE_EXCERPT_REGION_LENGTH = 5;",
      "info" : "FieldDeclaration[1740-1912]:FieldDeclaration[1740-1912]"
    }, {
      "left" : "private final String fileName;",
      "right" : "private final String fileName;",
      "info" : "FieldDeclaration[1916-1946]:FieldDeclaration[1916-1946]"
    }, {
      "left" : "private boolean isExternFile = false;",
      "right" : "private boolean isExternFile = false;",
      "info" : "FieldDeclaration[1949-1986]:FieldDeclaration[1949-1986]"
    }, {
      "left" : "private String originalPath = null;",
      "right" : "private String originalPath = null;",
      "info" : "FieldDeclaration[2346-2381]:FieldDeclaration[2346-2381]"
    }, {
      "left" : "private int[] lineOffsets = null;",
      "right" : "private int[] lineOffsets = null;",
      "info" : "FieldDeclaration[2414-2447]:FieldDeclaration[2414-2447]"
    }, {
      "left" : "private int lastOffset;",
      "right" : "private int lastOffset;",
      "info" : "FieldDeclaration[2650-2673]:FieldDeclaration[2650-2673]"
    }, {
      "left" : "private int lastLine;",
      "right" : "private int lastLine;",
      "info" : "FieldDeclaration[2676-2697]:FieldDeclaration[2676-2697]"
    }, {
      "left" : "private String code = null;",
      "right" : "private String code = null;",
      "info" : "FieldDeclaration[2701-2728]:FieldDeclaration[2701-2728]"
    }, {
      "left" : "public SourceFile(String fileName)",
      "right" : "public SourceFile(String fileName)",
      "info" : "MethodDeclaration[2732-3297]:MethodDeclaration[2732-3297]"
    }, {
      "left" : "public int getLineOffset(int lineno)",
      "right" : "public int getLineOffset(int lineno)",
      "info" : "MethodDeclaration[3301-3659]:MethodDeclaration[3301-3659]"
    }, {
      "left" : "int getNumLines()",
      "right" : "int getNumLines()",
      "info" : "MethodDeclaration[3663-3837]:MethodDeclaration[3663-3837]"
    }, {
      "left" : "private void findLineOffsets()",
      "right" : "private void findLineOffsets()",
      "info" : "MethodDeclaration[3841-4240]:MethodDeclaration[3841-4240]"
    }, {
      "left" : "public String getCode() throws IOException",
      "right" : "public String getCode() throws IOException",
      "info" : "MethodDeclaration[4347-4493]:MethodDeclaration[4347-4493]"
    }, {
      "left" : "public Reader getCodeReader() throws IOException",
      "right" : "public Reader getCodeReader() throws IOException",
      "info" : "MethodDeclaration[4497-4656]:MethodDeclaration[4497-4656]"
    }, {
      "left" : "String getCodeNoCache()",
      "right" : "String getCodeNoCache()",
      "info" : "MethodDeclaration[4660-4727]:MethodDeclaration[4660-4727]"
    }, {
      "left" : "private void setCode(String sourceCode)",
      "right" : "private void setCode(String sourceCode)",
      "info" : "MethodDeclaration[4731-4799]:MethodDeclaration[4731-4799]"
    }, {
      "left" : "public String getOriginalPath()",
      "right" : "public String getOriginalPath()",
      "info" : "MethodDeclaration[4803-4899]:MethodDeclaration[4803-4899]"
    }, {
      "left" : "public void setOriginalPath(String originalPath)",
      "right" : "public void setOriginalPath(String originalPath)",
      "info" : "MethodDeclaration[4903-4995]:MethodDeclaration[4903-4995]"
    }, {
      "left" : "public void clearCachedSource()",
      "right" : "public void clearCachedSource()",
      "info" : "MethodDeclaration[5275-5401]:MethodDeclaration[5275-5401]"
    }, {
      "left" : "boolean hasSourceInMemory()",
      "right" : "boolean hasSourceInMemory()",
      "info" : "MethodDeclaration[5405-5463]:MethodDeclaration[5405-5463]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[5467-5581]:MethodDeclaration[5467-5581]"
    }, {
      "left" : "public boolean isExtern()",
      "right" : "public boolean isExtern()",
      "info" : "MethodDeclaration[5585-5697]:MethodDeclaration[5585-5697]"
    }, {
      "left" : "void setIsExtern(boolean newVal)",
      "right" : "void setIsExtern(boolean newVal)",
      "info" : "MethodDeclaration[5701-5804]:MethodDeclaration[5701-5804]"
    }, {
      "left" : "public String getLine(int lineNumber)",
      "right" : "public String getLine(int lineNumber)",
      "info" : "MethodDeclaration[5808-7383]:MethodDeclaration[5808-7485]"
    }, {
      "left" : "public Region getRegion(int lineNumber)",
      "right" : "public Region getRegion(int lineNumber)",
      "info" : "MethodDeclaration[7387-8915]:MethodDeclaration[7489-9017]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[8919-8982]:MethodDeclaration[9021-9084]"
    }, {
      "left" : "public static SourceFile fromFile(String fileName, Charset c)",
      "right" : "public static SourceFile fromFile(String fileName, Charset c)",
      "info" : "MethodDeclaration[8986-9097]:MethodDeclaration[9088-9199]"
    }, {
      "left" : "public static SourceFile fromFile(String fileName)",
      "right" : "public static SourceFile fromFile(String fileName)",
      "info" : "MethodDeclaration[9101-9198]:MethodDeclaration[9203-9300]"
    }, {
      "left" : "public static SourceFile fromFile(File file, Charset c)",
      "right" : "public static SourceFile fromFile(File file, Charset c)",
      "info" : "MethodDeclaration[9202-9295]:MethodDeclaration[9304-9397]"
    }, {
      "left" : "public static SourceFile fromFile(File file)",
      "right" : "public static SourceFile fromFile(File file)",
      "info" : "MethodDeclaration[9299-9378]:MethodDeclaration[9401-9480]"
    }, {
      "left" : "public static SourceFile fromCode(String fileName, String code)",
      "right" : "public static SourceFile fromCode(String fileName, String code)",
      "info" : "MethodDeclaration[9382-9493]:MethodDeclaration[9484-9595]"
    }, {
      "left" : "public static SourceFile fromCode(String fileName,\n      String originalPath, String code)",
      "right" : "public static SourceFile fromCode(String fileName,\n      String originalPath, String code)",
      "info" : "MethodDeclaration[9497-9649]:MethodDeclaration[9599-9751]"
    }, {
      "left" : "public static SourceFile fromInputStream(String fileName, InputStream s)\n      throws IOException",
      "right" : "public static SourceFile fromInputStream(String fileName, InputStream s)\n      throws IOException",
      "info" : "MethodDeclaration[9653-9859]:MethodDeclaration[9755-9961]"
    }, {
      "left" : "public static SourceFile fromInputStream(String fileName,\n      String originalPath, InputStream s) throws IOException",
      "right" : "public static SourceFile fromInputStream(String fileName,\n      String originalPath, InputStream s) throws IOException",
      "info" : "MethodDeclaration[9863-10104]:MethodDeclaration[9965-10206]"
    }, {
      "left" : "public static SourceFile fromReader(String fileName, Reader r)\n      throws IOException",
      "right" : "public static SourceFile fromReader(String fileName, Reader r)\n      throws IOException",
      "info" : "MethodDeclaration[10108-10257]:MethodDeclaration[10210-10359]"
    }, {
      "left" : "public static SourceFile fromGenerator(String fileName,\n      Generator generator)",
      "right" : "public static SourceFile fromGenerator(String fileName,\n      Generator generator)",
      "info" : "MethodDeclaration[10261-10396]:MethodDeclaration[10363-10498]"
    }, {
      "left" : "Preloaded",
      "right" : "Preloaded",
      "info" : "TypeDeclaration[10504-10928]:TypeDeclaration[10606-11030]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[10618-10666]:FieldDeclaration[10720-10768]"
    }, {
      "left" : "Preloaded(String fileName, String code)",
      "right" : "Preloaded(String fileName, String code)",
      "info" : "MethodDeclaration[10672-10757]:MethodDeclaration[10774-10859]"
    }, {
      "left" : "Preloaded(String fileName, String originalPath, String code)",
      "right" : "Preloaded(String fileName, String originalPath, String code)",
      "info" : "MethodDeclaration[10763-10924]:MethodDeclaration[10865-11026]"
    }, {
      "left" : "Generated",
      "right" : "Generated",
      "info" : "TypeDeclaration[10932-11827]:TypeDeclaration[11034-11929]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[11090-11138]:FieldDeclaration[11192-11240]"
    }, {
      "left" : "private final Generator generator;",
      "right" : "private final Generator generator;",
      "info" : "FieldDeclaration[11143-11177]:FieldDeclaration[11245-11279]"
    }, {
      "left" : "Generated(String fileName, Generator generator)",
      "right" : "Generated(String fileName, Generator generator)",
      "info" : "MethodDeclaration[11236-11348]:MethodDeclaration[11338-11450]"
    }, {
      "left" : "public synchronized String getCode() throws IOException",
      "right" : "public synchronized String getCode() throws IOException",
      "info" : "MethodDeclaration[11354-11617]:MethodDeclaration[11456-11719]"
    }, {
      "left" : "public void clearCachedSource()",
      "right" : "public void clearCachedSource()",
      "info" : "MethodDeclaration[11743-11823]:MethodDeclaration[11845-11925]"
    }, {
      "left" : "OnDisk",
      "right" : "OnDisk",
      "info" : "TypeDeclaration[11831-14086]:TypeDeclaration[11933-14188]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[12053-12101]:FieldDeclaration[12155-12203]"
    }, {
      "left" : "private final File file;",
      "right" : "private final File file;",
      "info" : "FieldDeclaration[12106-12130]:FieldDeclaration[12208-12232]"
    }, {
      "left" : "protected String inputCharset = Charsets.UTF_8.name();",
      "right" : "protected String inputCharset = Charsets.UTF_8.name();",
      "info" : "FieldDeclaration[12320-12374]:FieldDeclaration[12422-12476]"
    }, {
      "left" : "OnDisk(File file, Charset c)",
      "right" : "OnDisk(File file, Charset c)",
      "info" : "MethodDeclaration[12380-12493]:MethodDeclaration[12482-12595]"
    }, {
      "left" : "OnDisk(File file)",
      "right" : "OnDisk(File file)",
      "info" : "MethodDeclaration[12527-12605]:MethodDeclaration[12629-12707]"
    }, {
      "left" : "public synchronized String getCode() throws IOException",
      "right" : "public synchronized String getCode() throws IOException",
      "info" : "MethodDeclaration[12611-12894]:MethodDeclaration[12713-12996]"
    }, {
      "left" : "public Reader getCodeReader() throws IOException",
      "right" : "public Reader getCodeReader() throws IOException",
      "info" : "MethodDeclaration[12900-13237]:MethodDeclaration[13002-13339]"
    }, {
      "left" : "public void clearCachedSource()",
      "right" : "public void clearCachedSource()",
      "info" : "MethodDeclaration[13343-13423]:MethodDeclaration[13445-13525]"
    }, {
      "left" : "public void setCharset(Charset c)",
      "right" : "public void setCharset(Charset c)",
      "info" : "MethodDeclaration[13429-13743]:MethodDeclaration[13531-13845]"
    }, {
      "left" : "public Charset getCharset()",
      "right" : "public Charset getCharset()",
      "info" : "MethodDeclaration[13749-14082]:MethodDeclaration[13851-14184]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1401-1407]:Modifier[1401-1407]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1408-1413]:TYPE_DECLARATION_KIND[1408-1413]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleName[1414-1424]:SimpleName[1414-1424]"
    }, {
      "left" : "StaticSourceFile",
      "right" : "StaticSourceFile",
      "info" : "SimpleType[1436-1452]:SimpleType[1436-1452]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[1454-1466]:SimpleType[1454-1466]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1675-1681]:Modifier[1675-1681]"
    }, {
      "left" : "interface",
      "right" : "interface",
      "info" : "TYPE_DECLARATION_KIND[1682-1691]:TYPE_DECLARATION_KIND[1682-1691]"
    }, {
      "left" : "Generator",
      "right" : "Generator",
      "info" : "SimpleName[1692-1701]:SimpleName[1692-1701]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1708-1714]:Modifier[1708-1714]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[1715-1721]:SimpleType[1715-1721]"
    }, {
      "left" : "getCode",
      "right" : "getCode",
      "info" : "SimpleName[1722-1729]:SimpleName[1722-1729]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3006-3012]:Modifier[3006-3012]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleName[3013-3023]:SimpleName[3013-3023]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[3024-3039]:SingleVariableDeclaration[3024-3039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3041-3297]:Block[3041-3297]"
    }, {
      "left" : "if (fileName == null || fileName.isEmpty())",
      "right" : "if (fileName == null || fileName.isEmpty())",
      "info" : "IfStatement[3047-3169]:IfStatement[3047-3169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3091-3169]:Block[3091-3169]"
    }, {
      "left" : "throw new IllegalArgumentException(\"a source must have a name\");",
      "right" : "throw new IllegalArgumentException(\"a source must have a name\");",
      "info" : "ThrowStatement[3099-3163]:ThrowStatement[3099-3163]"
    }, {
      "left" : "this.fileName = fileName;",
      "right" : "this.fileName = fileName;",
      "info" : "ExpressionStatement[3174-3199]:ExpressionStatement[3174-3199]"
    }, {
      "left" : "this.lastOffset = 0;",
      "right" : "this.lastOffset = 0;",
      "info" : "ExpressionStatement[3250-3270]:ExpressionStatement[3250-3270]"
    }, {
      "left" : "this.lastLine = 1;",
      "right" : "this.lastLine = 1;",
      "info" : "ExpressionStatement[3275-3293]:ExpressionStatement[3275-3293]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3301-3310]:MarkerAnnotation[3301-3310]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3313-3319]:Modifier[3313-3319]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3320-3323]:PrimitiveType[3320-3323]"
    }, {
      "left" : "getLineOffset",
      "right" : "getLineOffset",
      "info" : "SimpleName[3324-3337]:SimpleName[3324-3337]"
    }, {
      "left" : "int lineno",
      "right" : "int lineno",
      "info" : "SingleVariableDeclaration[3338-3348]:SingleVariableDeclaration[3338-3348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3350-3659]:Block[3350-3659]"
    }, {
      "left" : "if (lineOffsets == null)",
      "right" : "if (lineOffsets == null)",
      "info" : "IfStatement[3356-3413]:IfStatement[3356-3413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3381-3413]:Block[3381-3413]"
    }, {
      "left" : "findLineOffsets();",
      "right" : "findLineOffsets();",
      "info" : "ExpressionStatement[3389-3407]:ExpressionStatement[3389-3407]"
    }, {
      "left" : "if (lineno < 1 || lineno > lineOffsets.length)",
      "right" : "if (lineno < 1 || lineno > lineOffsets.length)",
      "info" : "IfStatement[3418-3619]:IfStatement[3418-3619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3465-3619]:Block[3465-3619]"
    }, {
      "left" : "throw new IllegalArgumentException(\n          \"Expected line number between 1 and \" + lineOffsets.length +\n          \"\\nActual: \" + lineno);",
      "right" : "throw new IllegalArgumentException(\n          \"Expected line number between 1 and \" + lineOffsets.length +\n          \"\\nActual: \" + lineno);",
      "info" : "ThrowStatement[3473-3613]:ThrowStatement[3473-3613]"
    }, {
      "left" : "return lineOffsets[lineno - 1];",
      "right" : "return lineOffsets[lineno - 1];",
      "info" : "ReturnStatement[3624-3655]:ReturnStatement[3624-3655]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3721-3724]:PrimitiveType[3721-3724]"
    }, {
      "left" : "getNumLines",
      "right" : "getNumLines",
      "info" : "SimpleName[3725-3736]:SimpleName[3725-3736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3739-3837]:Block[3739-3837]"
    }, {
      "left" : "if (lineOffsets == null)",
      "right" : "if (lineOffsets == null)",
      "info" : "IfStatement[3745-3802]:IfStatement[3745-3802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3770-3802]:Block[3770-3802]"
    }, {
      "left" : "findLineOffsets();",
      "right" : "findLineOffsets();",
      "info" : "ExpressionStatement[3778-3796]:ExpressionStatement[3778-3796]"
    }, {
      "left" : "return lineOffsets.length;",
      "right" : "return lineOffsets.length;",
      "info" : "ReturnStatement[3807-3833]:ReturnStatement[3807-3833]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3841-3848]:Modifier[3841-3848]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3849-3853]:PrimitiveType[3849-3853]"
    }, {
      "left" : "findLineOffsets",
      "right" : "findLineOffsets",
      "info" : "SimpleName[3854-3869]:SimpleName[3854-3869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3872-4240]:Block[3872-4240]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3878-4236]:TryStatement[3878-4236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3882-4148]:Block[3882-4148]"
    }, {
      "left" : "String[] sourceLines = getCode().split(\"\\n\");",
      "right" : "String[] sourceLines = getCode().split(\"\\n\");",
      "info" : "VariableDeclarationStatement[3890-3935]:VariableDeclarationStatement[3890-3935]"
    }, {
      "left" : "lineOffsets = new int[sourceLines.length];",
      "right" : "lineOffsets = new int[sourceLines.length];",
      "info" : "ExpressionStatement[3942-3984]:ExpressionStatement[3942-3984]"
    }, {
      "left" : "for (int ii = 1; ii < sourceLines.length; ++ii)",
      "right" : "for (int ii = 1; ii < sourceLines.length; ++ii)",
      "info" : "ForStatement[3991-4142]:ForStatement[3991-4142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4039-4142]:Block[4039-4142]"
    }, {
      "left" : "lineOffsets[ii] =\n            lineOffsets[ii - 1] + sourceLines[ii - 1].length() + 1;",
      "right" : "lineOffsets[ii] =\n            lineOffsets[ii - 1] + sourceLines[ii - 1].length() + 1;",
      "info" : "ExpressionStatement[4049-4134]:ExpressionStatement[4049-4134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4171-4236]:Block[4171-4236]"
    }, {
      "left" : "lineOffsets = new int[1];",
      "right" : "lineOffsets = new int[1];",
      "info" : "ExpressionStatement[4179-4204]:ExpressionStatement[4179-4204]"
    }, {
      "left" : "lineOffsets[0] = 0;",
      "right" : "lineOffsets[0] = 0;",
      "info" : "ExpressionStatement[4211-4230]:ExpressionStatement[4211-4230]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4428-4434]:Modifier[4428-4434]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4435-4441]:SimpleType[4435-4441]"
    }, {
      "left" : "getCode",
      "right" : "getCode",
      "info" : "SimpleName[4442-4449]:SimpleName[4442-4449]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4459-4470]:SimpleType[4459-4470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4471-4493]:Block[4471-4493]"
    }, {
      "left" : "return code;",
      "right" : "return code;",
      "info" : "ReturnStatement[4477-4489]:ReturnStatement[4477-4489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4562-4568]:Modifier[4562-4568]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[4569-4575]:SimpleType[4569-4575]"
    }, {
      "left" : "getCodeReader",
      "right" : "getCodeReader",
      "info" : "SimpleName[4576-4589]:SimpleName[4576-4589]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[4599-4610]:SimpleType[4599-4610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4611-4656]:Block[4611-4656]"
    }, {
      "left" : "return new StringReader(getCode());",
      "right" : "return new StringReader(getCode());",
      "info" : "ReturnStatement[4617-4652]:ReturnStatement[4617-4652]"
    }, {
      "left" : "@VisibleForTesting",
      "right" : "@VisibleForTesting",
      "info" : "MarkerAnnotation[4660-4678]:MarkerAnnotation[4660-4678]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4681-4687]:SimpleType[4681-4687]"
    }, {
      "left" : "getCodeNoCache",
      "right" : "getCodeNoCache",
      "info" : "SimpleName[4688-4702]:SimpleName[4688-4702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4705-4727]:Block[4705-4727]"
    }, {
      "left" : "return code;",
      "right" : "return code;",
      "info" : "ReturnStatement[4711-4723]:ReturnStatement[4711-4723]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4731-4738]:Modifier[4731-4738]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4739-4743]:PrimitiveType[4739-4743]"
    }, {
      "left" : "setCode",
      "right" : "setCode",
      "info" : "SimpleName[4744-4751]:SimpleName[4744-4751]"
    }, {
      "left" : "String sourceCode",
      "right" : "String sourceCode",
      "info" : "SingleVariableDeclaration[4752-4769]:SingleVariableDeclaration[4752-4769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4771-4799]:Block[4771-4799]"
    }, {
      "left" : "code = sourceCode;",
      "right" : "code = sourceCode;",
      "info" : "ExpressionStatement[4777-4795]:ExpressionStatement[4777-4795]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4803-4809]:Modifier[4803-4809]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[4810-4816]:SimpleType[4810-4816]"
    }, {
      "left" : "getOriginalPath",
      "right" : "getOriginalPath",
      "info" : "SimpleName[4817-4832]:SimpleName[4817-4832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4835-4899]:Block[4835-4899]"
    }, {
      "left" : "return originalPath != null ? originalPath : fileName;",
      "right" : "return originalPath != null ? originalPath : fileName;",
      "info" : "ReturnStatement[4841-4895]:ReturnStatement[4841-4895]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4903-4909]:Modifier[4903-4909]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4910-4914]:PrimitiveType[4910-4914]"
    }, {
      "left" : "setOriginalPath",
      "right" : "setOriginalPath",
      "info" : "SimpleName[4915-4930]:SimpleName[4915-4930]"
    }, {
      "left" : "String originalPath",
      "right" : "String originalPath",
      "info" : "SingleVariableDeclaration[4931-4950]:SingleVariableDeclaration[4931-4950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4952-4995]:Block[4952-4995]"
    }, {
      "left" : "this.originalPath = originalPath;",
      "right" : "this.originalPath = originalPath;",
      "info" : "ExpressionStatement[4958-4991]:ExpressionStatement[4958-4991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5275-5281]:Modifier[5275-5281]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5282-5286]:PrimitiveType[5282-5286]"
    }, {
      "left" : "clearCachedSource",
      "right" : "clearCachedSource",
      "info" : "SimpleName[5287-5304]:SimpleName[5287-5304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5307-5401]:Block[5307-5401]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5405-5412]:PrimitiveType[5405-5412]"
    }, {
      "left" : "hasSourceInMemory",
      "right" : "hasSourceInMemory",
      "info" : "SimpleName[5413-5430]:SimpleName[5413-5430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5433-5463]:Block[5433-5463]"
    }, {
      "left" : "return code != null;",
      "right" : "return code != null;",
      "info" : "ReturnStatement[5439-5459]:ReturnStatement[5439-5459]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5519-5528]:MarkerAnnotation[5519-5528]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5531-5537]:Modifier[5531-5537]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[5538-5544]:SimpleType[5538-5544]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[5545-5552]:SimpleName[5545-5552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5555-5581]:Block[5555-5581]"
    }, {
      "left" : "return fileName;",
      "right" : "return fileName;",
      "info" : "ReturnStatement[5561-5577]:ReturnStatement[5561-5577]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5629-5638]:MarkerAnnotation[5629-5638]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5641-5647]:Modifier[5641-5647]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5648-5655]:PrimitiveType[5648-5655]"
    }, {
      "left" : "isExtern",
      "right" : "isExtern",
      "info" : "SimpleName[5656-5664]:SimpleName[5656-5664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5667-5697]:Block[5667-5697]"
    }, {
      "left" : "return isExternFile;",
      "right" : "return isExternFile;",
      "info" : "ReturnStatement[5673-5693]:ReturnStatement[5673-5693]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5739-5743]:PrimitiveType[5739-5743]"
    }, {
      "left" : "setIsExtern",
      "right" : "setIsExtern",
      "info" : "SimpleName[5744-5755]:SimpleName[5744-5755]"
    }, {
      "left" : "boolean newVal",
      "right" : "boolean newVal",
      "info" : "SingleVariableDeclaration[5756-5770]:SingleVariableDeclaration[5756-5770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5772-5804]:Block[5772-5804]"
    }, {
      "left" : "isExternFile = newVal;",
      "right" : "isExternFile = newVal;",
      "info" : "ExpressionStatement[5778-5800]:ExpressionStatement[5778-5800]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6138-6144]:Modifier[6138-6144]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6145-6151]:SimpleType[6145-6151]"
    }, {
      "left" : "getLine",
      "right" : "getLine",
      "info" : "SimpleName[6152-6159]:SimpleName[6152-6159]"
    }, {
      "left" : "int lineNumber",
      "right" : "int lineNumber",
      "info" : "SingleVariableDeclaration[6160-6174]:SingleVariableDeclaration[6160-6174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6176-7383]:Block[6176-7485]"
    }, {
      "left" : "String js = \"\";",
      "right" : "String js = \"\";",
      "info" : "VariableDeclarationStatement[6182-6197]:VariableDeclarationStatement[6182-6197]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6202-6474]:TryStatement[6202-6474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6206-6425]:Block[6206-6425]"
    }, {
      "left" : "js = getCode();",
      "right" : "js = getCode();",
      "info" : "ExpressionStatement[6404-6419]:ExpressionStatement[6404-6419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6448-6474]:Block[6448-6474]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6456-6468]:ReturnStatement[6456-6468]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[6480-6492]:VariableDeclarationStatement[6480-6492]"
    }, {
      "left" : "int startLine = 1;",
      "right" : "int startLine = 1;",
      "info" : "VariableDeclarationStatement[6497-6515]:VariableDeclarationStatement[6497-6515]"
    }, {
      "left" : "if (lineNumber >= lastLine)",
      "right" : "if (lineNumber >= lastLine)",
      "info" : "IfStatement[6653-6740]:IfStatement[6653-6740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6681-6740]:Block[6681-6740]"
    }, {
      "left" : "pos = lastOffset;",
      "right" : "pos = lastOffset;",
      "info" : "ExpressionStatement[6689-6706]:ExpressionStatement[6689-6706]"
    }, {
      "left" : "startLine = lastLine;",
      "right" : "startLine = lastLine;",
      "info" : "ExpressionStatement[6713-6734]:ExpressionStatement[6713-6734]"
    }, {
      "left" : "for (int n = startLine; n < lineNumber; n++)",
      "right" : "for (int n = startLine; n < lineNumber; n++)",
      "info" : "ForStatement[6746-6922]:ForStatement[6746-6922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6791-6922]:Block[6791-6922]"
    }, {
      "left" : "int nextpos = js.indexOf('\\n', pos);",
      "right" : "int nextpos = js.indexOf('\\n', pos);",
      "info" : "VariableDeclarationStatement[6799-6835]:VariableDeclarationStatement[6799-6835]"
    }, {
      "left" : "if (nextpos == -1)",
      "right" : "if (nextpos == -1)",
      "info" : "IfStatement[6842-6891]:IfStatement[6842-6891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6861-6891]:Block[6861-6891]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6871-6883]:ReturnStatement[6871-6883]"
    }, {
      "left" : "pos = nextpos + 1;",
      "right" : "pos = nextpos + 1;",
      "info" : "ExpressionStatement[6898-6916]:ExpressionStatement[6898-6916]"
    }, {
      "left" : "lastOffset = pos;",
      "right" : "lastOffset = pos;",
      "info" : "ExpressionStatement[6983-7000]:ExpressionStatement[6983-7000]"
    }, {
      "left" : "lastLine = lineNumber;",
      "right" : "lastLine = lineNumber;",
      "info" : "ExpressionStatement[7005-7027]:ExpressionStatement[7005-7027]"
    }, {
      "left" : "if (js.indexOf('\\n', pos) == -1)",
      "right" : "if (js.indexOf('\\n', pos) == -1)",
      "info" : "IfStatement[7033-7379]:IfStatement[7033-7481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7066-7311]:Block[7066-7413]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7293-7305]:ReturnStatement[7325-7337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7317-7379]:Block[7419-7481]"
    }, {
      "left" : "return js.substring(pos, js.indexOf('\\n', pos));",
      "right" : "return js.substring(pos, js.indexOf('\\n', pos));",
      "info" : "ReturnStatement[7325-7373]:ReturnStatement[7427-7475]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7833-7839]:Modifier[7935-7941]"
    }, {
      "left" : "Region",
      "right" : "Region",
      "info" : "SimpleType[7840-7846]:SimpleType[7942-7948]"
    }, {
      "left" : "getRegion",
      "right" : "getRegion",
      "info" : "SimpleName[7847-7856]:SimpleName[7949-7958]"
    }, {
      "left" : "int lineNumber",
      "right" : "int lineNumber",
      "info" : "SingleVariableDeclaration[7857-7871]:SingleVariableDeclaration[7959-7973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7873-8915]:Block[7975-9017]"
    }, {
      "left" : "String js = \"\";",
      "right" : "String js = \"\";",
      "info" : "VariableDeclarationStatement[7879-7894]:VariableDeclarationStatement[7981-7996]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7899-7981]:TryStatement[8001-8083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7903-7932]:Block[8005-8034]"
    }, {
      "left" : "js = getCode();",
      "right" : "js = getCode();",
      "info" : "ExpressionStatement[7911-7926]:ExpressionStatement[8013-8028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7955-7981]:Block[8057-8083]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7963-7975]:ReturnStatement[8065-8077]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[7986-7998]:VariableDeclarationStatement[8088-8100]"
    }, {
      "left" : "int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);",
      "right" : "int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);",
      "info" : "VariableDeclarationStatement[8003-8096]:VariableDeclarationStatement[8105-8198]"
    }, {
      "left" : "for (int n = 1; n < startLine; n++)",
      "right" : "for (int n = 1; n < startLine; n++)",
      "info" : "ForStatement[8101-8262]:ForStatement[8203-8364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8137-8262]:Block[8239-8364]"
    }, {
      "left" : "int nextpos = js.indexOf('\\n', pos);",
      "right" : "int nextpos = js.indexOf('\\n', pos);",
      "info" : "VariableDeclarationStatement[8145-8181]:VariableDeclarationStatement[8247-8283]"
    }, {
      "left" : "if (nextpos == -1)",
      "right" : "if (nextpos == -1)",
      "info" : "IfStatement[8188-8231]:IfStatement[8290-8333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8207-8231]:Block[8309-8333]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8217-8223]:BreakStatement[8319-8325]"
    }, {
      "left" : "pos = nextpos + 1;",
      "right" : "pos = nextpos + 1;",
      "info" : "ExpressionStatement[8238-8256]:ExpressionStatement[8340-8358]"
    }, {
      "left" : "int end = pos;",
      "right" : "int end = pos;",
      "info" : "VariableDeclarationStatement[8267-8281]:VariableDeclarationStatement[8369-8383]"
    }, {
      "left" : "int endLine = startLine;",
      "right" : "int endLine = startLine;",
      "info" : "VariableDeclarationStatement[8286-8310]:VariableDeclarationStatement[8388-8412]"
    }, {
      "left" : "for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++)",
      "right" : "for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++)",
      "info" : "ForStatement[8315-8482]:ForStatement[8417-8584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8381-8482]:Block[8483-8584]"
    }, {
      "left" : "end = js.indexOf('\\n', end);",
      "right" : "end = js.indexOf('\\n', end);",
      "info" : "ExpressionStatement[8389-8417]:ExpressionStatement[8491-8519]"
    }, {
      "left" : "if (end == -1)",
      "right" : "if (end == -1)",
      "info" : "IfStatement[8424-8463]:IfStatement[8526-8565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8439-8463]:Block[8541-8565]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8449-8455]:BreakStatement[8551-8557]"
    }, {
      "left" : "end++;",
      "right" : "end++;",
      "info" : "ExpressionStatement[8470-8476]:ExpressionStatement[8572-8578]"
    }, {
      "left" : "if (lineNumber >= endLine)",
      "right" : "if (lineNumber >= endLine)",
      "info" : "IfStatement[8487-8540]:IfStatement[8589-8642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8514-8540]:Block[8616-8642]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8522-8534]:ReturnStatement[8624-8636]"
    }, {
      "left" : "if (end == -1)",
      "right" : "if (end == -1)",
      "info" : "IfStatement[8545-8911]:IfStatement[8647-9013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8560-8823]:Block[8662-8925]"
    }, {
      "left" : "int last = js.length() - 1;",
      "right" : "int last = js.length() - 1;",
      "info" : "VariableDeclarationStatement[8568-8595]:VariableDeclarationStatement[8670-8697]"
    }, {
      "left" : "if (js.charAt(last) == '\\n')",
      "right" : "if (js.charAt(last) == '\\n')",
      "info" : "IfStatement[8602-8817]:IfStatement[8704-8919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8631-8730]:Block[8733-8832]"
    }, {
      "left" : "return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));",
      "right" : "return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));",
      "info" : "ReturnStatement[8641-8722]:ReturnStatement[8743-8824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8736-8817]:Block[8838-8919]"
    }, {
      "left" : "return new SimpleRegion(startLine, endLine, js.substring(pos));",
      "right" : "return new SimpleRegion(startLine, endLine, js.substring(pos));",
      "info" : "ReturnStatement[8746-8809]:ReturnStatement[8848-8911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8829-8911]:Block[8931-9013]"
    }, {
      "left" : "return new SimpleRegion(startLine, endLine, js.substring(pos, end));",
      "right" : "return new SimpleRegion(startLine, endLine, js.substring(pos, end));",
      "info" : "ReturnStatement[8837-8905]:ReturnStatement[8939-9007]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8919-8928]:MarkerAnnotation[9021-9030]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8931-8937]:Modifier[9033-9039]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8938-8944]:SimpleType[9040-9046]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[8945-8953]:SimpleName[9047-9055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8956-8982]:Block[9058-9084]"
    }, {
      "left" : "return fileName;",
      "right" : "return fileName;",
      "info" : "ReturnStatement[8962-8978]:ReturnStatement[9064-9080]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8986-8992]:Modifier[9088-9094]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8993-8999]:Modifier[9095-9101]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9000-9010]:SimpleType[9102-9112]"
    }, {
      "left" : "fromFile",
      "right" : "fromFile",
      "info" : "SimpleName[9011-9019]:SimpleName[9113-9121]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[9020-9035]:SingleVariableDeclaration[9122-9137]"
    }, {
      "left" : "Charset c",
      "right" : "Charset c",
      "info" : "SingleVariableDeclaration[9037-9046]:SingleVariableDeclaration[9139-9148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9048-9097]:Block[9150-9199]"
    }, {
      "left" : "return fromFile(new File(fileName), c);",
      "right" : "return fromFile(new File(fileName), c);",
      "info" : "ReturnStatement[9054-9093]:ReturnStatement[9156-9195]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9101-9107]:Modifier[9203-9209]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9108-9114]:Modifier[9210-9216]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9115-9125]:SimpleType[9217-9227]"
    }, {
      "left" : "fromFile",
      "right" : "fromFile",
      "info" : "SimpleName[9126-9134]:SimpleName[9228-9236]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[9135-9150]:SingleVariableDeclaration[9237-9252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9152-9198]:Block[9254-9300]"
    }, {
      "left" : "return fromFile(new File(fileName));",
      "right" : "return fromFile(new File(fileName));",
      "info" : "ReturnStatement[9158-9194]:ReturnStatement[9260-9296]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9202-9208]:Modifier[9304-9310]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9209-9215]:Modifier[9311-9317]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9216-9226]:SimpleType[9318-9328]"
    }, {
      "left" : "fromFile",
      "right" : "fromFile",
      "info" : "SimpleName[9227-9235]:SimpleName[9329-9337]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[9236-9245]:SingleVariableDeclaration[9338-9347]"
    }, {
      "left" : "Charset c",
      "right" : "Charset c",
      "info" : "SingleVariableDeclaration[9247-9256]:SingleVariableDeclaration[9349-9358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9258-9295]:Block[9360-9397]"
    }, {
      "left" : "return new OnDisk(file, c);",
      "right" : "return new OnDisk(file, c);",
      "info" : "ReturnStatement[9264-9291]:ReturnStatement[9366-9393]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9299-9305]:Modifier[9401-9407]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9306-9312]:Modifier[9408-9414]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9313-9323]:SimpleType[9415-9425]"
    }, {
      "left" : "fromFile",
      "right" : "fromFile",
      "info" : "SimpleName[9324-9332]:SimpleName[9426-9434]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[9333-9342]:SingleVariableDeclaration[9435-9444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9344-9378]:Block[9446-9480]"
    }, {
      "left" : "return new OnDisk(file);",
      "right" : "return new OnDisk(file);",
      "info" : "ReturnStatement[9350-9374]:ReturnStatement[9452-9476]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9382-9388]:Modifier[9484-9490]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9389-9395]:Modifier[9491-9497]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9396-9406]:SimpleType[9498-9508]"
    }, {
      "left" : "fromCode",
      "right" : "fromCode",
      "info" : "SimpleName[9407-9415]:SimpleName[9509-9517]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[9416-9431]:SingleVariableDeclaration[9518-9533]"
    }, {
      "left" : "String code",
      "right" : "String code",
      "info" : "SingleVariableDeclaration[9433-9444]:SingleVariableDeclaration[9535-9546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9446-9493]:Block[9548-9595]"
    }, {
      "left" : "return new Preloaded(fileName, code);",
      "right" : "return new Preloaded(fileName, code);",
      "info" : "ReturnStatement[9452-9489]:ReturnStatement[9554-9591]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9497-9503]:Modifier[9599-9605]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9504-9510]:Modifier[9606-9612]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9511-9521]:SimpleType[9613-9623]"
    }, {
      "left" : "fromCode",
      "right" : "fromCode",
      "info" : "SimpleName[9522-9530]:SimpleName[9624-9632]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[9531-9546]:SingleVariableDeclaration[9633-9648]"
    }, {
      "left" : "String originalPath",
      "right" : "String originalPath",
      "info" : "SingleVariableDeclaration[9554-9573]:SingleVariableDeclaration[9656-9675]"
    }, {
      "left" : "String code",
      "right" : "String code",
      "info" : "SingleVariableDeclaration[9575-9586]:SingleVariableDeclaration[9677-9688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9588-9649]:Block[9690-9751]"
    }, {
      "left" : "return new Preloaded(fileName, originalPath, code);",
      "right" : "return new Preloaded(fileName, originalPath, code);",
      "info" : "ReturnStatement[9594-9645]:ReturnStatement[9696-9747]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9653-9659]:Modifier[9755-9761]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9660-9666]:Modifier[9762-9768]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9667-9677]:SimpleType[9769-9779]"
    }, {
      "left" : "fromInputStream",
      "right" : "fromInputStream",
      "info" : "SimpleName[9678-9693]:SimpleName[9780-9795]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[9694-9709]:SingleVariableDeclaration[9796-9811]"
    }, {
      "left" : "InputStream s",
      "right" : "InputStream s",
      "info" : "SingleVariableDeclaration[9711-9724]:SingleVariableDeclaration[9813-9826]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9739-9750]:SimpleType[9841-9852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9751-9859]:Block[9853-9961]"
    }, {
      "left" : "return fromCode(fileName,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "right" : "return fromCode(fileName,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "info" : "ReturnStatement[9757-9855]:ReturnStatement[9859-9957]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9863-9869]:Modifier[9965-9971]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9870-9876]:Modifier[9972-9978]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[9877-9887]:SimpleType[9979-9989]"
    }, {
      "left" : "fromInputStream",
      "right" : "fromInputStream",
      "info" : "SimpleName[9888-9903]:SimpleName[9990-10005]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[9904-9919]:SingleVariableDeclaration[10006-10021]"
    }, {
      "left" : "String originalPath",
      "right" : "String originalPath",
      "info" : "SingleVariableDeclaration[9927-9946]:SingleVariableDeclaration[10029-10048]"
    }, {
      "left" : "InputStream s",
      "right" : "InputStream s",
      "info" : "SingleVariableDeclaration[9948-9961]:SingleVariableDeclaration[10050-10063]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9970-9981]:SimpleType[10072-10083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9982-10104]:Block[10084-10206]"
    }, {
      "left" : "return fromCode(fileName, originalPath,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "right" : "return fromCode(fileName, originalPath,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "info" : "ReturnStatement[9988-10100]:ReturnStatement[10090-10202]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10108-10114]:Modifier[10210-10216]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10115-10121]:Modifier[10217-10223]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[10122-10132]:SimpleType[10224-10234]"
    }, {
      "left" : "fromReader",
      "right" : "fromReader",
      "info" : "SimpleName[10133-10143]:SimpleName[10235-10245]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[10144-10159]:SingleVariableDeclaration[10246-10261]"
    }, {
      "left" : "Reader r",
      "right" : "Reader r",
      "info" : "SingleVariableDeclaration[10161-10169]:SingleVariableDeclaration[10263-10271]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10184-10195]:SimpleType[10286-10297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10196-10257]:Block[10298-10359]"
    }, {
      "left" : "return fromCode(fileName, CharStreams.toString(r));",
      "right" : "return fromCode(fileName, CharStreams.toString(r));",
      "info" : "ReturnStatement[10202-10253]:ReturnStatement[10304-10355]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10261-10267]:Modifier[10363-10369]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10268-10274]:Modifier[10370-10376]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[10275-10285]:SimpleType[10377-10387]"
    }, {
      "left" : "fromGenerator",
      "right" : "fromGenerator",
      "info" : "SimpleName[10286-10299]:SimpleName[10388-10401]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[10300-10315]:SingleVariableDeclaration[10402-10417]"
    }, {
      "left" : "Generator generator",
      "right" : "Generator generator",
      "info" : "SingleVariableDeclaration[10323-10342]:SingleVariableDeclaration[10425-10444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10344-10396]:Block[10446-10498]"
    }, {
      "left" : "return new Generated(fileName, generator);",
      "right" : "return new Generated(fileName, generator);",
      "info" : "ReturnStatement[10350-10392]:ReturnStatement[10452-10494]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10570-10576]:Modifier[10672-10678]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[10577-10582]:TYPE_DECLARATION_KIND[10679-10684]"
    }, {
      "left" : "Preloaded",
      "right" : "Preloaded",
      "info" : "SimpleName[10583-10592]:SimpleName[10685-10694]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[10601-10611]:SimpleType[10703-10713]"
    }, {
      "left" : "Preloaded",
      "right" : "Preloaded",
      "info" : "SimpleName[10672-10681]:SimpleName[10774-10783]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[10682-10697]:SingleVariableDeclaration[10784-10799]"
    }, {
      "left" : "String code",
      "right" : "String code",
      "info" : "SingleVariableDeclaration[10699-10710]:SingleVariableDeclaration[10801-10812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10712-10757]:Block[10814-10859]"
    }, {
      "left" : "this(fileName, fileName, code);",
      "right" : "this(fileName, fileName, code);",
      "info" : "ConstructorInvocation[10720-10751]:ConstructorInvocation[10822-10853]"
    }, {
      "left" : "Preloaded",
      "right" : "Preloaded",
      "info" : "SimpleName[10763-10772]:SimpleName[10865-10874]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[10773-10788]:SingleVariableDeclaration[10875-10890]"
    }, {
      "left" : "String originalPath",
      "right" : "String originalPath",
      "info" : "SingleVariableDeclaration[10790-10809]:SingleVariableDeclaration[10892-10911]"
    }, {
      "left" : "String code",
      "right" : "String code",
      "info" : "SingleVariableDeclaration[10811-10822]:SingleVariableDeclaration[10913-10924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10824-10924]:Block[10926-11026]"
    }, {
      "left" : "super(fileName);",
      "right" : "super(fileName);",
      "info" : "SuperConstructorInvocation[10832-10848]:SuperConstructorInvocation[10934-10950]"
    }, {
      "left" : "super.setOriginalPath(originalPath);",
      "right" : "super.setOriginalPath(originalPath);",
      "info" : "ExpressionStatement[10855-10891]:ExpressionStatement[10957-10993]"
    }, {
      "left" : "super.setCode(code);",
      "right" : "super.setCode(code);",
      "info" : "ExpressionStatement[10898-10918]:ExpressionStatement[11000-11020]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11042-11048]:Modifier[11144-11150]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[11049-11054]:TYPE_DECLARATION_KIND[11151-11156]"
    }, {
      "left" : "Generated",
      "right" : "Generated",
      "info" : "SimpleName[11055-11064]:SimpleName[11157-11166]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[11073-11083]:SimpleType[11175-11185]"
    }, {
      "left" : "Generated",
      "right" : "Generated",
      "info" : "SimpleName[11236-11245]:SimpleName[11338-11347]"
    }, {
      "left" : "String fileName",
      "right" : "String fileName",
      "info" : "SingleVariableDeclaration[11246-11261]:SingleVariableDeclaration[11348-11363]"
    }, {
      "left" : "Generator generator",
      "right" : "Generator generator",
      "info" : "SingleVariableDeclaration[11263-11282]:SingleVariableDeclaration[11365-11384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11284-11348]:Block[11386-11450]"
    }, {
      "left" : "super(fileName);",
      "right" : "super(fileName);",
      "info" : "SuperConstructorInvocation[11292-11308]:SuperConstructorInvocation[11394-11410]"
    }, {
      "left" : "this.generator = generator;",
      "right" : "this.generator = generator;",
      "info" : "ExpressionStatement[11315-11342]:ExpressionStatement[11417-11444]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11354-11363]:MarkerAnnotation[11456-11465]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11368-11374]:Modifier[11470-11476]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[11375-11387]:Modifier[11477-11489]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11388-11394]:SimpleType[11490-11496]"
    }, {
      "left" : "getCode",
      "right" : "getCode",
      "info" : "SimpleName[11395-11402]:SimpleName[11497-11504]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[11412-11423]:SimpleType[11514-11525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11424-11617]:Block[11526-11719]"
    }, {
      "left" : "String cachedCode = super.getCode();",
      "right" : "String cachedCode = super.getCode();",
      "info" : "VariableDeclarationStatement[11432-11468]:VariableDeclarationStatement[11534-11570]"
    }, {
      "left" : "if (cachedCode == null)",
      "right" : "if (cachedCode == null)",
      "info" : "IfStatement[11476-11586]:IfStatement[11578-11688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11500-11586]:Block[11602-11688]"
    }, {
      "left" : "cachedCode = generator.getCode();",
      "right" : "cachedCode = generator.getCode();",
      "info" : "ExpressionStatement[11510-11543]:ExpressionStatement[11612-11645]"
    }, {
      "left" : "super.setCode(cachedCode);",
      "right" : "super.setCode(cachedCode);",
      "info" : "ExpressionStatement[11552-11578]:ExpressionStatement[11654-11680]"
    }, {
      "left" : "return cachedCode;",
      "right" : "return cachedCode;",
      "info" : "ReturnStatement[11593-11611]:ReturnStatement[11695-11713]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11743-11752]:MarkerAnnotation[11845-11854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11757-11763]:Modifier[11859-11865]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11764-11768]:PrimitiveType[11866-11870]"
    }, {
      "left" : "clearCachedSource",
      "right" : "clearCachedSource",
      "info" : "SimpleName[11769-11786]:SimpleName[11871-11888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11789-11823]:Block[11891-11925]"
    }, {
      "left" : "super.setCode(null);",
      "right" : "super.setCode(null);",
      "info" : "ExpressionStatement[11797-11817]:ExpressionStatement[11899-11919]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12008-12014]:Modifier[12110-12116]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[12015-12020]:TYPE_DECLARATION_KIND[12117-12122]"
    }, {
      "left" : "OnDisk",
      "right" : "OnDisk",
      "info" : "SimpleName[12021-12027]:SimpleName[12123-12129]"
    }, {
      "left" : "SourceFile",
      "right" : "SourceFile",
      "info" : "SimpleType[12036-12046]:SimpleType[12138-12148]"
    }, {
      "left" : "OnDisk",
      "right" : "OnDisk",
      "info" : "SimpleName[12380-12386]:SimpleName[12482-12488]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[12387-12396]:SingleVariableDeclaration[12489-12498]"
    }, {
      "left" : "Charset c",
      "right" : "Charset c",
      "info" : "SingleVariableDeclaration[12398-12407]:SingleVariableDeclaration[12500-12509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12409-12493]:Block[12511-12595]"
    }, {
      "left" : "this(file);",
      "right" : "this(file);",
      "info" : "ConstructorInvocation[12417-12428]:ConstructorInvocation[12519-12530]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[12435-12487]:IfStatement[12537-12589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12450-12487]:Block[12552-12589]"
    }, {
      "left" : "this.setCharset(c);",
      "right" : "this.setCharset(c);",
      "info" : "ExpressionStatement[12460-12479]:ExpressionStatement[12562-12581]"
    }, {
      "left" : "OnDisk",
      "right" : "OnDisk",
      "info" : "SimpleName[12527-12533]:SimpleName[12629-12635]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[12534-12543]:SingleVariableDeclaration[12636-12645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12545-12605]:Block[12647-12707]"
    }, {
      "left" : "super(file.getPath());",
      "right" : "super(file.getPath());",
      "info" : "SuperConstructorInvocation[12553-12575]:SuperConstructorInvocation[12655-12677]"
    }, {
      "left" : "this.file = file;",
      "right" : "this.file = file;",
      "info" : "ExpressionStatement[12582-12599]:ExpressionStatement[12684-12701]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12611-12620]:MarkerAnnotation[12713-12722]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12625-12631]:Modifier[12727-12733]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[12632-12644]:Modifier[12734-12746]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12645-12651]:SimpleType[12747-12753]"
    }, {
      "left" : "getCode",
      "right" : "getCode",
      "info" : "SimpleName[12652-12659]:SimpleName[12754-12761]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12669-12680]:SimpleType[12771-12782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12681-12894]:Block[12783-12996]"
    }, {
      "left" : "String cachedCode = super.getCode();",
      "right" : "String cachedCode = super.getCode();",
      "info" : "VariableDeclarationStatement[12689-12725]:VariableDeclarationStatement[12791-12827]"
    }, {
      "left" : "if (cachedCode == null)",
      "right" : "if (cachedCode == null)",
      "info" : "IfStatement[12733-12863]:IfStatement[12835-12965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12757-12863]:Block[12859-12965]"
    }, {
      "left" : "cachedCode = Files.toString(file, this.getCharset());",
      "right" : "cachedCode = Files.toString(file, this.getCharset());",
      "info" : "ExpressionStatement[12767-12820]:ExpressionStatement[12869-12922]"
    }, {
      "left" : "super.setCode(cachedCode);",
      "right" : "super.setCode(cachedCode);",
      "info" : "ExpressionStatement[12829-12855]:ExpressionStatement[12931-12957]"
    }, {
      "left" : "return cachedCode;",
      "right" : "return cachedCode;",
      "info" : "ReturnStatement[12870-12888]:ReturnStatement[12972-12990]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12971-12980]:MarkerAnnotation[13073-13082]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12985-12991]:Modifier[13087-13093]"
    }, {
      "left" : "Reader",
      "right" : "Reader",
      "info" : "SimpleType[12992-12998]:SimpleType[13094-13100]"
    }, {
      "left" : "getCodeReader",
      "right" : "getCodeReader",
      "info" : "SimpleName[12999-13012]:SimpleName[13101-13114]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13022-13033]:SimpleType[13124-13135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13034-13237]:Block[13136-13339]"
    }, {
      "left" : "if (hasSourceInMemory())",
      "right" : "if (hasSourceInMemory())",
      "info" : "IfStatement[13042-13231]:IfStatement[13144-13333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13067-13114]:Block[13169-13216]"
    }, {
      "left" : "return super.getCodeReader();",
      "right" : "return super.getCodeReader();",
      "info" : "ReturnStatement[13077-13106]:ReturnStatement[13179-13208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13120-13231]:Block[13222-13333]"
    }, {
      "left" : "return new FileReader(file);",
      "right" : "return new FileReader(file);",
      "info" : "ReturnStatement[13195-13223]:ReturnStatement[13297-13325]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13343-13352]:MarkerAnnotation[13445-13454]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13357-13363]:Modifier[13459-13465]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13364-13368]:PrimitiveType[13466-13470]"
    }, {
      "left" : "clearCachedSource",
      "right" : "clearCachedSource",
      "info" : "SimpleName[13369-13386]:SimpleName[13471-13488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13389-13423]:Block[13491-13525]"
    }, {
      "left" : "super.setCode(null);",
      "right" : "super.setCode(null);",
      "info" : "ExpressionStatement[13397-13417]:ExpressionStatement[13499-13519]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13671-13677]:Modifier[13773-13779]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13678-13682]:PrimitiveType[13780-13784]"
    }, {
      "left" : "setCharset",
      "right" : "setCharset",
      "info" : "SimpleName[13683-13693]:SimpleName[13785-13795]"
    }, {
      "left" : "Charset c",
      "right" : "Charset c",
      "info" : "SingleVariableDeclaration[13694-13703]:SingleVariableDeclaration[13796-13805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13705-13743]:Block[13807-13845]"
    }, {
      "left" : "inputCharset = c.name();",
      "right" : "inputCharset = c.name();",
      "info" : "ExpressionStatement[13713-13737]:ExpressionStatement[13815-13839]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14003-14009]:Modifier[14105-14111]"
    }, {
      "left" : "Charset",
      "right" : "Charset",
      "info" : "SimpleType[14010-14017]:SimpleType[14112-14119]"
    }, {
      "left" : "getCharset",
      "right" : "getCharset",
      "info" : "SimpleName[14018-14028]:SimpleName[14120-14130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14031-14082]:Block[14133-14184]"
    }, {
      "left" : "return Charset.forName(inputCharset);",
      "right" : "return Charset.forName(inputCharset);",
      "info" : "ReturnStatement[14039-14076]:ReturnStatement[14141-14178]"
    } ]
  },
  "interFileMappings" : { }
}