{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "TypeDeclaration[874-23212]:TypeDeclaration[874-23242]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1472-1520]:FieldDeclaration[1472-1520]"
    }, {
      "left" : "protected transient Map<Object, WritableObjectId> _seenObjectIds;",
      "right" : "protected transient Map<Object, WritableObjectId> _seenObjectIds;",
      "info" : "FieldDeclaration[1712-1898]:FieldDeclaration[1712-1898]"
    }, {
      "left" : "protected transient ArrayList<ObjectIdGenerator<?>> _objectIdGenerators;",
      "right" : "protected transient ArrayList<ObjectIdGenerator<?>> _objectIdGenerators;",
      "info" : "FieldDeclaration[1908-1980]:FieldDeclaration[1908-1980]"
    }, {
      "left" : "protected transient JsonGenerator _generator;",
      "right" : "protected transient JsonGenerator _generator;",
      "info" : "FieldDeclaration[1986-2164]:FieldDeclaration[1986-2164]"
    }, {
      "left" : "protected DefaultSerializerProvider()",
      "right" : "protected DefaultSerializerProvider()",
      "info" : "MethodDeclaration[2332-2382]:MethodDeclaration[2332-2382]"
    }, {
      "left" : "protected DefaultSerializerProvider(SerializerProvider src,\n            SerializationConfig config,SerializerFactory f)",
      "right" : "protected DefaultSerializerProvider(SerializerProvider src,\n            SerializationConfig config,SerializerFactory f)",
      "info" : "MethodDeclaration[2388-2546]:MethodDeclaration[2388-2546]"
    }, {
      "left" : "protected DefaultSerializerProvider(DefaultSerializerProvider src)",
      "right" : "protected DefaultSerializerProvider(DefaultSerializerProvider src)",
      "info" : "MethodDeclaration[2552-2646]:MethodDeclaration[2552-2646]"
    }, {
      "left" : "public abstract DefaultSerializerProvider createInstance(SerializationConfig config,\n            SerializerFactory jsf);",
      "right" : "public abstract DefaultSerializerProvider createInstance(SerializationConfig config,\n            SerializerFactory jsf);",
      "info" : "MethodDeclaration[2652-2966]:MethodDeclaration[2652-2966]"
    }, {
      "left" : "public DefaultSerializerProvider copy()",
      "right" : "public DefaultSerializerProvider copy()",
      "info" : "MethodDeclaration[2972-3387]:MethodDeclaration[2972-3387]"
    }, {
      "left" : "public JsonSerializer<Object> serializerInstance(Annotated annotated, Object serDef)\n            throws JsonMappingException",
      "right" : "public JsonSerializer<Object> serializerInstance(Annotated annotated, Object serDef)\n            throws JsonMappingException",
      "info" : "MethodDeclaration[3587-5388]:MethodDeclaration[3587-5388]"
    }, {
      "left" : "public Object includeFilterInstance(BeanPropertyDefinition forProperty,\n            Class<?> filterClass)",
      "right" : "public Object includeFilterInstance(BeanPropertyDefinition forProperty,\n            Class<?> filterClass)",
      "info" : "MethodDeclaration[5394-5950]:MethodDeclaration[5394-5950]"
    }, {
      "left" : "public boolean includeFilterSuppressNulls(Object filter) throws JsonMappingException",
      "right" : "public boolean includeFilterSuppressNulls(Object filter) throws JsonMappingException",
      "info" : "MethodDeclaration[5956-6686]:MethodDeclaration[5956-6701]"
    }, {
      "left" : "public WritableObjectId findObjectId(Object forPojo, ObjectIdGenerator<?> generatorType)",
      "right" : "public WritableObjectId findObjectId(Object forPojo, ObjectIdGenerator<?> generatorType)",
      "info" : "MethodDeclaration[6866-8095]:MethodDeclaration[6881-8110]"
    }, {
      "left" : "protected Map<Object,WritableObjectId> _createObjectIdMap()",
      "right" : "protected Map<Object,WritableObjectId> _createObjectIdMap()",
      "info" : "MethodDeclaration[8101-8700]:MethodDeclaration[8116-8715]"
    }, {
      "left" : "public boolean hasSerializerFor(Class<?> cls, AtomicReference<Throwable> cause)",
      "right" : "public boolean hasSerializerFor(Class<?> cls, AtomicReference<Throwable> cause)",
      "info" : "MethodDeclaration[8887-10058]:MethodDeclaration[8902-10073]"
    }, {
      "left" : "public JsonGenerator getGenerator()",
      "right" : "public JsonGenerator getGenerator()",
      "info" : "MethodDeclaration[10064-10368]:MethodDeclaration[10079-10383]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value) throws IOException",
      "info" : "MethodDeclaration[10586-11744]:MethodDeclaration[10601-11759]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType) throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType) throws IOException",
      "info" : "MethodDeclaration[11750-13287]:MethodDeclaration[11765-13302]"
    }, {
      "left" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> ser) throws IOException",
      "right" : "public void serializeValue(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> ser) throws IOException",
      "info" : "MethodDeclaration[13293-15026]:MethodDeclaration[13308-15041]"
    }, {
      "left" : "public void serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> valueSer, TypeSerializer typeSer)\n        throws IOException",
      "right" : "public void serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType,\n            JsonSerializer<Object> valueSer, TypeSerializer typeSer)\n        throws IOException",
      "info" : "MethodDeclaration[15032-17229]:MethodDeclaration[15047-17244]"
    }, {
      "left" : "private final void _serialize(JsonGenerator gen, Object value,\n            JsonSerializer<Object> ser, PropertyName rootName)\n        throws IOException",
      "right" : "private final void _serialize(JsonGenerator gen, Object value,\n            JsonSerializer<Object> ser, PropertyName rootName)\n        throws IOException",
      "info" : "MethodDeclaration[17235-17675]:MethodDeclaration[17250-17690]"
    }, {
      "left" : "private final void _serialize(JsonGenerator gen, Object value,\n            JsonSerializer<Object> ser)\n        throws IOException",
      "right" : "private final void _serialize(JsonGenerator gen, Object value,\n            JsonSerializer<Object> ser)\n        throws IOException",
      "info" : "MethodDeclaration[17681-17961]:MethodDeclaration[17696-17976]"
    }, {
      "left" : "protected void _serializeNull(JsonGenerator gen) throws IOException",
      "right" : "protected void _serializeNull(JsonGenerator gen) throws IOException",
      "info" : "MethodDeclaration[17967-18361]:MethodDeclaration[17982-18376]"
    }, {
      "left" : "private IOException _wrapAsIOE(JsonGenerator g, Exception e)",
      "right" : "private IOException _wrapAsIOE(JsonGenerator g, Exception e)",
      "info" : "MethodDeclaration[18367-18712]:MethodDeclaration[18382-18742]"
    }, {
      "left" : "public int cachedSerializersCount()",
      "right" : "public int cachedSerializersCount()",
      "info" : "MethodDeclaration[18891-19507]:MethodDeclaration[18921-19537]"
    }, {
      "left" : "public void flushCachedSerializers()",
      "right" : "public void flushCachedSerializers()",
      "info" : "MethodDeclaration[19513-19907]:MethodDeclaration[19543-19937]"
    }, {
      "left" : "public void acceptJsonFormatVisitor(JavaType javaType, JsonFormatVisitorWrapper visitor)\n        throws JsonMappingException",
      "right" : "public void acceptJsonFormatVisitor(JavaType javaType, JsonFormatVisitorWrapper visitor)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[20107-20941]:MethodDeclaration[20137-20971]"
    }, {
      "left" : "// since 2.6\n    public com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(Class<?> type)\n        throws JsonMappingException",
      "right" : "// since 2.6\n    public com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(Class<?> type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[20947-22164]:MethodDeclaration[20977-22194]"
    }, {
      "left" : "Impl",
      "right" : "Impl",
      "info" : "TypeDeclaration[22345-23210]:TypeDeclaration[22375-23240]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[22524-22572]:FieldDeclaration[22554-22602]"
    }, {
      "left" : "public Impl()",
      "right" : "public Impl()",
      "info" : "MethodDeclaration[22582-22608]:MethodDeclaration[22612-22638]"
    }, {
      "left" : "public Impl(Impl src)",
      "right" : "public Impl(Impl src)",
      "info" : "MethodDeclaration[22617-22654]:MethodDeclaration[22647-22684]"
    }, {
      "left" : "protected Impl(SerializerProvider src, SerializationConfig config,\n                SerializerFactory f)",
      "right" : "protected Impl(SerializerProvider src, SerializationConfig config,\n                SerializerFactory f)",
      "info" : "MethodDeclaration[22664-22814]:MethodDeclaration[22694-22844]"
    }, {
      "left" : "public DefaultSerializerProvider copy()",
      "right" : "public DefaultSerializerProvider copy()",
      "info" : "MethodDeclaration[22824-23031]:MethodDeclaration[22854-23061]"
    }, {
      "left" : "public Impl createInstance(SerializationConfig config, SerializerFactory jsf)",
      "right" : "public Impl createInstance(SerializationConfig config, SerializerFactory jsf)",
      "info" : "MethodDeclaration[23049-23204]:MethodDeclaration[23079-23234]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1302-1308]:Modifier[1302-1308]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1309-1317]:Modifier[1309-1317]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1318-1323]:TYPE_DECLARATION_KIND[1318-1323]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleName[1324-1349]:SimpleName[1324-1349]"
    }, {
      "left" : "SerializerProvider",
      "right" : "SerializerProvider",
      "info" : "SimpleType[1362-1380]:SimpleType[1362-1380]"
    }, {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[1396-1416]:SimpleType[1396-1416]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2332-2341]:Modifier[2332-2341]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleName[2342-2367]:SimpleName[2342-2367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2370-2382]:Block[2370-2382]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[2372-2380]:SuperConstructorInvocation[2372-2380]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2388-2397]:Modifier[2388-2397]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleName[2398-2423]:SimpleName[2398-2423]"
    }, {
      "left" : "SerializerProvider src",
      "right" : "SerializerProvider src",
      "info" : "SingleVariableDeclaration[2424-2446]:SingleVariableDeclaration[2424-2446]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[2460-2486]:SingleVariableDeclaration[2460-2486]"
    }, {
      "left" : "SerializerFactory f",
      "right" : "SerializerFactory f",
      "info" : "SingleVariableDeclaration[2487-2506]:SingleVariableDeclaration[2487-2506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2508-2546]:Block[2508-2546]"
    }, {
      "left" : "super(src, config, f);",
      "right" : "super(src, config, f);",
      "info" : "SuperConstructorInvocation[2518-2540]:SuperConstructorInvocation[2518-2540]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2552-2561]:Modifier[2552-2561]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleName[2562-2587]:SimpleName[2562-2587]"
    }, {
      "left" : "DefaultSerializerProvider src",
      "right" : "DefaultSerializerProvider src",
      "info" : "SingleVariableDeclaration[2588-2617]:SingleVariableDeclaration[2588-2617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2619-2646]:Block[2619-2646]"
    }, {
      "left" : "super(src);",
      "right" : "super(src);",
      "info" : "SuperConstructorInvocation[2629-2640]:SuperConstructorInvocation[2629-2640]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2846-2852]:Modifier[2846-2852]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2853-2861]:Modifier[2853-2861]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[2862-2887]:SimpleType[2862-2887]"
    }, {
      "left" : "createInstance",
      "right" : "createInstance",
      "info" : "SimpleName[2888-2902]:SimpleName[2888-2902]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[2903-2929]:SingleVariableDeclaration[2903-2929]"
    }, {
      "left" : "SerializerFactory jsf",
      "right" : "SerializerFactory jsf",
      "info" : "SingleVariableDeclaration[2943-2964]:SingleVariableDeclaration[2943-2964]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3238-3244]:Modifier[3238-3244]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[3245-3270]:SimpleType[3245-3270]"
    }, {
      "left" : "copy",
      "right" : "copy",
      "info" : "SimpleName[3271-3275]:SimpleName[3271-3275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3278-3387]:Block[3278-3387]"
    }, {
      "left" : "throw new IllegalStateException(\"DefaultSerializerProvider sub-class not overriding copy()\");",
      "right" : "throw new IllegalStateException(\"DefaultSerializerProvider sub-class not overriding copy()\");",
      "info" : "ThrowStatement[3288-3381]:ThrowStatement[3288-3381]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3587-3596]:MarkerAnnotation[3587-3596]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3601-3607]:Modifier[3601-3607]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[3608-3630]:ParameterizedType[3608-3630]"
    }, {
      "left" : "serializerInstance",
      "right" : "serializerInstance",
      "info" : "SimpleName[3631-3649]:SimpleName[3631-3649]"
    }, {
      "left" : "Annotated annotated",
      "right" : "Annotated annotated",
      "info" : "SingleVariableDeclaration[3650-3669]:SingleVariableDeclaration[3650-3669]"
    }, {
      "left" : "Object serDef",
      "right" : "Object serDef",
      "info" : "SingleVariableDeclaration[3671-3684]:SingleVariableDeclaration[3671-3684]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[3705-3725]:SimpleType[3705-3725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3730-5388]:Block[3730-5388]"
    }, {
      "left" : "if (serDef == null)",
      "right" : "if (serDef == null)",
      "info" : "IfStatement[3740-3796]:IfStatement[3740-3796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3760-3796]:Block[3760-3796]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[3774-3786]:ReturnStatement[3774-3786]"
    }, {
      "left" : "JsonSerializer<?> ser;",
      "right" : "JsonSerializer<?> ser;",
      "info" : "VariableDeclarationStatement[3805-3827]:VariableDeclarationStatement[3805-3827]"
    }, {
      "left" : "if (serDef instanceof JsonSerializer)",
      "right" : "if (serDef instanceof JsonSerializer)",
      "info" : "IfStatement[3845-5318]:IfStatement[3845-5318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3883-3940]:Block[3883-3940]"
    }, {
      "left" : "ser = (JsonSerializer<?>) serDef;",
      "right" : "ser = (JsonSerializer<?>) serDef;",
      "info" : "ExpressionStatement[3897-3930]:ExpressionStatement[3897-3930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3946-5318]:Block[3946-5318]"
    }, {
      "left" : "if (!(serDef instanceof Class))",
      "right" : "if (!(serDef instanceof Class))",
      "info" : "IfStatement[4102-4416]:IfStatement[4102-4416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4134-4416]:Block[4134-4416]"
    }, {
      "left" : "reportBadDefinition(annotated.getType(),\n                        \"AnnotationIntrospector returned serializer definition of type \"\n                        +serDef.getClass().getName()+\"; expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "right" : "reportBadDefinition(annotated.getType(),\n                        \"AnnotationIntrospector returned serializer definition of type \"\n                        +serDef.getClass().getName()+\"; expected type JsonSerializer or Class<JsonSerializer> instead\");",
      "info" : "ExpressionStatement[4152-4402]:ExpressionStatement[4152-4402]"
    }, {
      "left" : "Class<?> serClass = (Class<?>)serDef;",
      "right" : "Class<?> serClass = (Class<?>)serDef;",
      "info" : "VariableDeclarationStatement[4429-4466]:VariableDeclarationStatement[4429-4466]"
    }, {
      "left" : "if (serClass == JsonSerializer.None.class || ClassUtil.isBogusClass(serClass))",
      "right" : "if (serClass == JsonSerializer.None.class || ClassUtil.isBogusClass(serClass))",
      "info" : "IfStatement[4551-4674]:IfStatement[4551-4674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4630-4674]:Block[4630-4674]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[4648-4660]:ReturnStatement[4648-4660]"
    }, {
      "left" : "if (!JsonSerializer.class.isAssignableFrom(serClass))",
      "right" : "if (!JsonSerializer.class.isAssignableFrom(serClass))",
      "info" : "IfStatement[4687-4959]:IfStatement[4687-4959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4741-4959]:Block[4741-4959]"
    }, {
      "left" : "reportBadDefinition(annotated.getType(),\n                        \"AnnotationIntrospector returned Class \"\n                        +serClass.getName()+\"; expected Class<JsonSerializer>\");",
      "right" : "reportBadDefinition(annotated.getType(),\n                        \"AnnotationIntrospector returned Class \"\n                        +serClass.getName()+\"; expected Class<JsonSerializer>\");",
      "info" : "ExpressionStatement[4759-4945]:ExpressionStatement[4759-4945]"
    }, {
      "left" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[4972-5030]:VariableDeclarationStatement[4972-5030]"
    }, {
      "left" : "ser = (hi == null) ? null : hi.serializerInstance(_config, annotated, serClass);",
      "right" : "ser = (hi == null) ? null : hi.serializerInstance(_config, annotated, serClass);",
      "info" : "ExpressionStatement[5043-5123]:ExpressionStatement[5043-5123]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[5136-5308]:IfStatement[5136-5308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5153-5308]:Block[5153-5308]"
    }, {
      "left" : "ser = (JsonSerializer<?>) ClassUtil.createInstance(serClass,\n                        _config.canOverrideAccessModifiers());",
      "right" : "ser = (JsonSerializer<?>) ClassUtil.createInstance(serClass,\n                        _config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[5171-5294]:ExpressionStatement[5171-5294]"
    }, {
      "left" : "return (JsonSerializer<Object>) _handleResolvable(ser);",
      "right" : "return (JsonSerializer<Object>) _handleResolvable(ser);",
      "info" : "ReturnStatement[5327-5382]:ReturnStatement[5327-5382]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5394-5403]:MarkerAnnotation[5394-5403]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5408-5414]:Modifier[5408-5414]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[5415-5421]:SimpleType[5415-5421]"
    }, {
      "left" : "includeFilterInstance",
      "right" : "includeFilterInstance",
      "info" : "SimpleName[5422-5443]:SimpleName[5422-5443]"
    }, {
      "left" : "BeanPropertyDefinition forProperty",
      "right" : "BeanPropertyDefinition forProperty",
      "info" : "SingleVariableDeclaration[5444-5478]:SingleVariableDeclaration[5444-5478]"
    }, {
      "left" : "Class<?> filterClass",
      "right" : "Class<?> filterClass",
      "info" : "SingleVariableDeclaration[5492-5512]:SingleVariableDeclaration[5492-5512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5518-5950]:Block[5518-5950]"
    }, {
      "left" : "if (filterClass == null)",
      "right" : "if (filterClass == null)",
      "info" : "IfStatement[5528-5589]:IfStatement[5528-5589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5553-5589]:Block[5553-5589]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5567-5579]:ReturnStatement[5567-5579]"
    }, {
      "left" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[5598-5656]:VariableDeclarationStatement[5598-5656]"
    }, {
      "left" : "Object filter = (hi == null) ? null : hi.includeFilterInstance(_config, forProperty, filterClass);",
      "right" : "Object filter = (hi == null) ? null : hi.includeFilterInstance(_config, forProperty, filterClass);",
      "info" : "VariableDeclarationStatement[5665-5763]:VariableDeclarationStatement[5665-5763]"
    }, {
      "left" : "if (filter == null)",
      "right" : "if (filter == null)",
      "info" : "IfStatement[5772-5921]:IfStatement[5772-5921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5792-5921]:Block[5792-5921]"
    }, {
      "left" : "filter = ClassUtil.createInstance(filterClass,\n                    _config.canOverrideAccessModifiers());",
      "right" : "filter = ClassUtil.createInstance(filterClass,\n                    _config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[5806-5911]:ExpressionStatement[5806-5911]"
    }, {
      "left" : "return filter;",
      "right" : "return filter;",
      "info" : "ReturnStatement[5930-5944]:ReturnStatement[5930-5944]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5956-5965]:MarkerAnnotation[5956-5965]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5970-5976]:Modifier[5970-5976]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5977-5984]:PrimitiveType[5977-5984]"
    }, {
      "left" : "includeFilterSuppressNulls",
      "right" : "includeFilterSuppressNulls",
      "info" : "SimpleName[5985-6011]:SimpleName[5985-6011]"
    }, {
      "left" : "Object filter",
      "right" : "Object filter",
      "info" : "SingleVariableDeclaration[6012-6025]:SingleVariableDeclaration[6012-6025]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[6034-6054]:SimpleType[6034-6054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6059-6686]:Block[6059-6701]"
    }, {
      "left" : "if (filter == null)",
      "right" : "if (filter == null)",
      "info" : "IfStatement[6069-6125]:IfStatement[6069-6125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6089-6125]:Block[6089-6125]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6103-6115]:ReturnStatement[6103-6115]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6286-6680]:TryStatement[6286-6695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6290-6341]:Block[6290-6341]"
    }, {
      "left" : "return filter.equals(null);",
      "right" : "return filter.equals(null);",
      "info" : "ReturnStatement[6304-6331]:ReturnStatement[6304-6331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6362-6680]:Block[6362-6695]"
    }, {
      "left" : "String msg = String.format(\n\"Problem determining whether filter of type '%s' should filter out `null` values: (%s) %s\",\nfilter.getClass().getName(), t.getClass().getName(), t.getMessage());",
      "right" : "String msg = String.format(\n\"Problem determining whether filter of type '%s' should filter out `null` values: (%s) %s\",\nfilter.getClass().getName(), t.getClass().getName(), ClassUtil.exceptionMessage(t));",
      "info" : "VariableDeclarationStatement[6376-6565]:VariableDeclarationStatement[6376-6580]"
    }, {
      "left" : "t",
      "right" : "t",
      "info" : "SimpleName[6549-6550]:SimpleName[6576-6577]"
    }, {
      "left" : "getMessage",
      "right" : "exceptionMessage",
      "info" : "SimpleName[6551-6561]:SimpleName[6559-6575]"
    }, {
      "left" : "reportBadDefinition(filter.getClass(), msg, t);",
      "right" : "reportBadDefinition(filter.getClass(), msg, t);",
      "info" : "ExpressionStatement[6578-6625]:ExpressionStatement[6593-6640]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6638-6651]:ReturnStatement[6653-6666]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6866-6875]:MarkerAnnotation[6881-6890]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6880-6886]:Modifier[6895-6901]"
    }, {
      "left" : "WritableObjectId",
      "right" : "WritableObjectId",
      "info" : "SimpleType[6887-6903]:SimpleType[6902-6918]"
    }, {
      "left" : "findObjectId",
      "right" : "findObjectId",
      "info" : "SimpleName[6904-6916]:SimpleName[6919-6931]"
    }, {
      "left" : "Object forPojo",
      "right" : "Object forPojo",
      "info" : "SingleVariableDeclaration[6917-6931]:SingleVariableDeclaration[6932-6946]"
    }, {
      "left" : "ObjectIdGenerator<?> generatorType",
      "right" : "ObjectIdGenerator<?> generatorType",
      "info" : "SingleVariableDeclaration[6933-6967]:SingleVariableDeclaration[6948-6982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6973-8095]:Block[6988-8110]"
    }, {
      "left" : "if (_seenObjectIds == null)",
      "right" : "if (_seenObjectIds == null)",
      "info" : "IfStatement[6983-7227]:IfStatement[6998-7242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7011-7073]:Block[7026-7088]"
    }, {
      "left" : "_seenObjectIds = _createObjectIdMap();",
      "right" : "_seenObjectIds = _createObjectIdMap();",
      "info" : "ExpressionStatement[7025-7063]:ExpressionStatement[7040-7078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7079-7227]:Block[7094-7242]"
    }, {
      "left" : "WritableObjectId oid = _seenObjectIds.get(forPojo);",
      "right" : "WritableObjectId oid = _seenObjectIds.get(forPojo);",
      "info" : "VariableDeclarationStatement[7093-7144]:VariableDeclarationStatement[7108-7159]"
    }, {
      "left" : "if (oid != null)",
      "right" : "if (oid != null)",
      "info" : "IfStatement[7157-7217]:IfStatement[7172-7232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7174-7217]:Block[7189-7232]"
    }, {
      "left" : "return oid;",
      "right" : "return oid;",
      "info" : "ReturnStatement[7192-7203]:ReturnStatement[7207-7218]"
    }, {
      "left" : "ObjectIdGenerator<?> generator = null;",
      "right" : "ObjectIdGenerator<?> generator = null;",
      "info" : "VariableDeclarationStatement[7319-7357]:VariableDeclarationStatement[7334-7372]"
    }, {
      "left" : "if (_objectIdGenerators == null)",
      "right" : "if (_objectIdGenerators == null)",
      "info" : "IfStatement[7375-7807]:IfStatement[7390-7822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7408-7493]:Block[7423-7508]"
    }, {
      "left" : "_objectIdGenerators = new ArrayList<ObjectIdGenerator<?>>(8);",
      "right" : "_objectIdGenerators = new ArrayList<ObjectIdGenerator<?>>(8);",
      "info" : "ExpressionStatement[7422-7483]:ExpressionStatement[7437-7498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7499-7807]:Block[7514-7822]"
    }, {
      "left" : "for (int i = 0, len = _objectIdGenerators.size(); i < len; ++i)",
      "right" : "for (int i = 0, len = _objectIdGenerators.size(); i < len; ++i)",
      "info" : "ForStatement[7513-7797]:ForStatement[7528-7812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7577-7797]:Block[7592-7812]"
    }, {
      "left" : "ObjectIdGenerator<?> gen = _objectIdGenerators.get(i);",
      "right" : "ObjectIdGenerator<?> gen = _objectIdGenerators.get(i);",
      "info" : "VariableDeclarationStatement[7595-7649]:VariableDeclarationStatement[7610-7664]"
    }, {
      "left" : "if (gen.canUseFor(generatorType))",
      "right" : "if (gen.canUseFor(generatorType))",
      "info" : "IfStatement[7666-7783]:IfStatement[7681-7798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7700-7783]:Block[7715-7798]"
    }, {
      "left" : "generator = gen;",
      "right" : "generator = gen;",
      "info" : "ExpressionStatement[7722-7738]:ExpressionStatement[7737-7753]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7759-7765]:BreakStatement[7774-7780]"
    }, {
      "left" : "if (generator == null)",
      "right" : "if (generator == null)",
      "info" : "IfStatement[7816-7963]:IfStatement[7831-7978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7839-7963]:Block[7854-7978]"
    }, {
      "left" : "generator = generatorType.newForSerialization(this);",
      "right" : "generator = generatorType.newForSerialization(this);",
      "info" : "ExpressionStatement[7853-7905]:ExpressionStatement[7868-7920]"
    }, {
      "left" : "_objectIdGenerators.add(generator);",
      "right" : "_objectIdGenerators.add(generator);",
      "info" : "ExpressionStatement[7918-7953]:ExpressionStatement[7933-7968]"
    }, {
      "left" : "WritableObjectId oid = new WritableObjectId(generator);",
      "right" : "WritableObjectId oid = new WritableObjectId(generator);",
      "info" : "VariableDeclarationStatement[7972-8027]:VariableDeclarationStatement[7987-8042]"
    }, {
      "left" : "_seenObjectIds.put(forPojo, oid);",
      "right" : "_seenObjectIds.put(forPojo, oid);",
      "info" : "ExpressionStatement[8036-8069]:ExpressionStatement[8051-8084]"
    }, {
      "left" : "return oid;",
      "right" : "return oid;",
      "info" : "ReturnStatement[8078-8089]:ReturnStatement[8093-8104]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8303-8312]:Modifier[8318-8327]"
    }, {
      "left" : "Map<Object,WritableObjectId>",
      "right" : "Map<Object,WritableObjectId>",
      "info" : "ParameterizedType[8313-8341]:ParameterizedType[8328-8356]"
    }, {
      "left" : "_createObjectIdMap",
      "right" : "_createObjectIdMap",
      "info" : "SimpleName[8342-8360]:SimpleName[8357-8375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8367-8700]:Block[8382-8715]"
    }, {
      "left" : "if (isEnabled(SerializationFeature.USE_EQUALITY_FOR_OBJECT_ID))",
      "right" : "if (isEnabled(SerializationFeature.USE_EQUALITY_FOR_OBJECT_ID))",
      "info" : "IfStatement[8497-8631]:IfStatement[8512-8646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8561-8631]:Block[8576-8646]"
    }, {
      "left" : "return new HashMap<Object,WritableObjectId>();",
      "right" : "return new HashMap<Object,WritableObjectId>();",
      "info" : "ReturnStatement[8575-8621]:ReturnStatement[8590-8636]"
    }, {
      "left" : "return new IdentityHashMap<Object,WritableObjectId>();",
      "right" : "return new IdentityHashMap<Object,WritableObjectId>();",
      "info" : "ReturnStatement[8640-8694]:ReturnStatement[8655-8709]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9174-9180]:Modifier[9189-9195]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9181-9188]:PrimitiveType[9196-9203]"
    }, {
      "left" : "hasSerializerFor",
      "right" : "hasSerializerFor",
      "info" : "SimpleName[9189-9205]:SimpleName[9204-9220]"
    }, {
      "left" : "Class<?> cls",
      "right" : "Class<?> cls",
      "info" : "SingleVariableDeclaration[9206-9218]:SingleVariableDeclaration[9221-9233]"
    }, {
      "left" : "AtomicReference<Throwable> cause",
      "right" : "AtomicReference<Throwable> cause",
      "info" : "SingleVariableDeclaration[9220-9252]:SingleVariableDeclaration[9235-9267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9258-10058]:Block[9273-10073]"
    }, {
      "left" : "if (cls == Object.class)",
      "right" : "if (cls == Object.class)",
      "info" : "IfStatement[9454-9613]:IfStatement[9469-9628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9479-9613]:Block[9494-9628]"
    }, {
      "left" : "if (!_config.isEnabled(SerializationFeature.FAIL_ON_EMPTY_BEANS))",
      "right" : "if (!_config.isEnabled(SerializationFeature.FAIL_ON_EMPTY_BEANS))",
      "info" : "IfStatement[9493-9603]:IfStatement[9508-9618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9559-9603]:Block[9574-9618]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9577-9589]:ReturnStatement[9592-9604]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9631-10030]:TryStatement[9646-10045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9635-9753]:Block[9650-9768]"
    }, {
      "left" : "JsonSerializer<?> ser = _findExplicitUntypedSerializer(cls);",
      "right" : "JsonSerializer<?> ser = _findExplicitUntypedSerializer(cls);",
      "info" : "VariableDeclarationStatement[9649-9709]:VariableDeclarationStatement[9664-9724]"
    }, {
      "left" : "return (ser != null);",
      "right" : "return (ser != null);",
      "info" : "ReturnStatement[9722-9743]:ReturnStatement[9737-9758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9785-9873]:Block[9800-9888]"
    }, {
      "left" : "if (cause != null)",
      "right" : "if (cause != null)",
      "info" : "IfStatement[9799-9863]:IfStatement[9814-9878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9818-9863]:Block[9833-9878]"
    }, {
      "left" : "cause.set(e);",
      "right" : "cause.set(e);",
      "info" : "ExpressionStatement[9836-9849]:ExpressionStatement[9851-9864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9901-10030]:Block[9916-10045]"
    }, {
      "left" : "if (cause == null)",
      "right" : "if (cause == null)",
      "info" : "IfStatement[9915-9994]:IfStatement[9930-10009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9934-9994]:Block[9949-10009]"
    }, {
      "left" : "throw e;",
      "right" : "throw e;",
      "info" : "ThrowStatement[9972-9980]:ThrowStatement[9987-9995]"
    }, {
      "left" : "cause.set(e);",
      "right" : "cause.set(e);",
      "info" : "ExpressionStatement[10007-10020]:ExpressionStatement[10022-10035]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[10039-10052]:ReturnStatement[10054-10067]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10284-10293]:MarkerAnnotation[10299-10308]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10298-10304]:Modifier[10313-10319]"
    }, {
      "left" : "JsonGenerator",
      "right" : "JsonGenerator",
      "info" : "SimpleType[10305-10318]:SimpleType[10320-10333]"
    }, {
      "left" : "getGenerator",
      "right" : "getGenerator",
      "info" : "SimpleName[10319-10331]:SimpleName[10334-10346]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10334-10368]:Block[10349-10383]"
    }, {
      "left" : "return _generator;",
      "right" : "return _generator;",
      "info" : "ReturnStatement[10344-10362]:ReturnStatement[10359-10377]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10841-10847]:Modifier[10856-10862]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10848-10852]:PrimitiveType[10863-10867]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[10853-10867]:SimpleName[10868-10882]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[10868-10885]:SingleVariableDeclaration[10883-10900]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[10887-10899]:SingleVariableDeclaration[10902-10914]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10908-10919]:SimpleType[10923-10934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10924-11744]:Block[10939-11759]"
    }, {
      "left" : "_generator = gen;",
      "right" : "_generator = gen;",
      "info" : "ExpressionStatement[10934-10951]:ExpressionStatement[10949-10966]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[10960-11043]:IfStatement[10975-11058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10979-11043]:Block[10994-11058]"
    }, {
      "left" : "_serializeNull(gen);",
      "right" : "_serializeNull(gen);",
      "info" : "ExpressionStatement[10993-11013]:ExpressionStatement[11008-11028]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11026-11033]:ReturnStatement[11041-11048]"
    }, {
      "left" : "final Class<?> cls = value.getClass();",
      "right" : "final Class<?> cls = value.getClass();",
      "info" : "VariableDeclarationStatement[11052-11090]:VariableDeclarationStatement[11067-11105]"
    }, {
      "left" : "final JsonSerializer<Object> ser = findTypedValueSerializer(cls, true, null);",
      "right" : "final JsonSerializer<Object> ser = findTypedValueSerializer(cls, true, null);",
      "info" : "VariableDeclarationStatement[11197-11274]:VariableDeclarationStatement[11212-11289]"
    }, {
      "left" : "PropertyName rootName = _config.getFullRootName();",
      "right" : "PropertyName rootName = _config.getFullRootName();",
      "info" : "VariableDeclarationStatement[11283-11333]:VariableDeclarationStatement[11298-11348]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[11342-11701]:IfStatement[11357-11716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11364-11588]:Block[11379-11603]"
    }, {
      "left" : "if (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE))",
      "right" : "if (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE))",
      "info" : "IfStatement[11406-11578]:IfStatement[11421-11593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11467-11578]:Block[11482-11593]"
    }, {
      "left" : "_serialize(gen, value, ser, _config.findRootName(cls));",
      "right" : "_serialize(gen, value, ser, _config.findRootName(cls));",
      "info" : "ExpressionStatement[11485-11540]:ExpressionStatement[11500-11555]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11557-11564]:ReturnStatement[11572-11579]"
    }, {
      "left" : "if (!rootName.isEmpty())",
      "right" : "if (!rootName.isEmpty())",
      "info" : "IfStatement[11594-11701]:IfStatement[11609-11716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11619-11701]:Block[11634-11716]"
    }, {
      "left" : "_serialize(gen, value, ser, rootName);",
      "right" : "_serialize(gen, value, ser, rootName);",
      "info" : "ExpressionStatement[11633-11671]:ExpressionStatement[11648-11686]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[11684-11691]:ReturnStatement[11699-11706]"
    }, {
      "left" : "_serialize(gen, value, ser);",
      "right" : "_serialize(gen, value, ser);",
      "info" : "ExpressionStatement[11710-11738]:ExpressionStatement[11725-11753]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12256-12262]:Modifier[12271-12277]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12263-12267]:PrimitiveType[12278-12282]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[12268-12282]:SimpleName[12283-12297]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[12283-12300]:SingleVariableDeclaration[12298-12315]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[12302-12314]:SingleVariableDeclaration[12317-12329]"
    }, {
      "left" : "JavaType rootType",
      "right" : "JavaType rootType",
      "info" : "SingleVariableDeclaration[12316-12333]:SingleVariableDeclaration[12331-12348]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[12342-12353]:SimpleType[12357-12368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12358-13287]:Block[12373-13302]"
    }, {
      "left" : "_generator = gen;",
      "right" : "_generator = gen;",
      "info" : "ExpressionStatement[12368-12385]:ExpressionStatement[12383-12400]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[12394-12477]:IfStatement[12409-12492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12413-12477]:Block[12428-12492]"
    }, {
      "left" : "_serializeNull(gen);",
      "right" : "_serializeNull(gen);",
      "info" : "ExpressionStatement[12427-12447]:ExpressionStatement[12442-12462]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[12460-12467]:ReturnStatement[12475-12482]"
    }, {
      "left" : "if (!rootType.getRawClass().isAssignableFrom(value.getClass()))",
      "right" : "if (!rootType.getRawClass().isAssignableFrom(value.getClass()))",
      "info" : "IfStatement[12545-12678]:IfStatement[12560-12693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12609-12678]:Block[12624-12693]"
    }, {
      "left" : "_reportIncompatibleRootType(value, rootType);",
      "right" : "_reportIncompatibleRootType(value, rootType);",
      "info" : "ExpressionStatement[12623-12668]:ExpressionStatement[12638-12683]"
    }, {
      "left" : "JsonSerializer<Object> ser = findTypedValueSerializer(rootType, true, null);",
      "right" : "JsonSerializer<Object> ser = findTypedValueSerializer(rootType, true, null);",
      "info" : "VariableDeclarationStatement[12736-12812]:VariableDeclarationStatement[12751-12827]"
    }, {
      "left" : "PropertyName rootName = _config.getFullRootName();",
      "right" : "PropertyName rootName = _config.getFullRootName();",
      "info" : "VariableDeclarationStatement[12821-12871]:VariableDeclarationStatement[12836-12886]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[12880-13244]:IfStatement[12895-13259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12902-13131]:Block[12917-13146]"
    }, {
      "left" : "if (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE))",
      "right" : "if (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE))",
      "info" : "IfStatement[12944-13121]:IfStatement[12959-13136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13005-13121]:Block[13020-13136]"
    }, {
      "left" : "_serialize(gen, value, ser, _config.findRootName(rootType));",
      "right" : "_serialize(gen, value, ser, _config.findRootName(rootType));",
      "info" : "ExpressionStatement[13023-13083]:ExpressionStatement[13038-13098]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[13100-13107]:ReturnStatement[13115-13122]"
    }, {
      "left" : "if (!rootName.isEmpty())",
      "right" : "if (!rootName.isEmpty())",
      "info" : "IfStatement[13137-13244]:IfStatement[13152-13259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13162-13244]:Block[13177-13259]"
    }, {
      "left" : "_serialize(gen, value, ser, rootName);",
      "right" : "_serialize(gen, value, ser, rootName);",
      "info" : "ExpressionStatement[13176-13214]:ExpressionStatement[13191-13229]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[13227-13234]:ReturnStatement[13242-13249]"
    }, {
      "left" : "_serialize(gen, value, ser);",
      "right" : "_serialize(gen, value, ser);",
      "info" : "ExpressionStatement[13253-13281]:ExpressionStatement[13268-13296]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13768-13774]:Modifier[13783-13789]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13775-13779]:PrimitiveType[13790-13794]"
    }, {
      "left" : "serializeValue",
      "right" : "serializeValue",
      "info" : "SimpleName[13780-13794]:SimpleName[13795-13809]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[13795-13812]:SingleVariableDeclaration[13810-13827]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[13814-13826]:SingleVariableDeclaration[13829-13841]"
    }, {
      "left" : "JavaType rootType",
      "right" : "JavaType rootType",
      "info" : "SingleVariableDeclaration[13828-13845]:SingleVariableDeclaration[13843-13860]"
    }, {
      "left" : "JsonSerializer<Object> ser",
      "right" : "JsonSerializer<Object> ser",
      "info" : "SingleVariableDeclaration[13859-13885]:SingleVariableDeclaration[13874-13900]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[13894-13905]:SimpleType[13909-13920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13910-15026]:Block[13925-15041]"
    }, {
      "left" : "_generator = gen;",
      "right" : "_generator = gen;",
      "info" : "ExpressionStatement[13920-13937]:ExpressionStatement[13935-13952]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[13946-14029]:IfStatement[13961-14044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13965-14029]:Block[13980-14044]"
    }, {
      "left" : "_serializeNull(gen);",
      "right" : "_serializeNull(gen);",
      "info" : "ExpressionStatement[13979-13999]:ExpressionStatement[13994-14014]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[14012-14019]:ReturnStatement[14027-14034]"
    }, {
      "left" : "if ((rootType != null) && !rootType.getRawClass().isAssignableFrom(value.getClass()))",
      "right" : "if ((rootType != null) && !rootType.getRawClass().isAssignableFrom(value.getClass()))",
      "info" : "IfStatement[14097-14252]:IfStatement[14112-14267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14183-14252]:Block[14198-14267]"
    }, {
      "left" : "_reportIncompatibleRootType(value, rootType);",
      "right" : "_reportIncompatibleRootType(value, rootType);",
      "info" : "ExpressionStatement[14197-14242]:ExpressionStatement[14212-14257]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[14310-14404]:IfStatement[14325-14419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14327-14404]:Block[14342-14419]"
    }, {
      "left" : "ser = findTypedValueSerializer(rootType, true, null);",
      "right" : "ser = findTypedValueSerializer(rootType, true, null);",
      "info" : "ExpressionStatement[14341-14394]:ExpressionStatement[14356-14409]"
    }, {
      "left" : "PropertyName rootName = _config.getFullRootName();",
      "right" : "PropertyName rootName = _config.getFullRootName();",
      "info" : "VariableDeclarationStatement[14413-14463]:VariableDeclarationStatement[14428-14478]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[14472-14983]:IfStatement[14487-14998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14494-14870]:Block[14509-14885]"
    }, {
      "left" : "if (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE))",
      "right" : "if (_config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE))",
      "info" : "IfStatement[14536-14860]:IfStatement[14551-14875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14597-14860]:Block[14612-14875]"
    }, {
      "left" : "rootName = (rootType == null)\n                        ? _config.findRootName(value.getClass())\n                        : _config.findRootName(rootType);",
      "right" : "rootName = (rootType == null)\n                        ? _config.findRootName(value.getClass())\n                        : _config.findRootName(rootType);",
      "info" : "ExpressionStatement[14615-14767]:ExpressionStatement[14630-14782]"
    }, {
      "left" : "_serialize(gen, value, ser, rootName);",
      "right" : "_serialize(gen, value, ser, rootName);",
      "info" : "ExpressionStatement[14784-14822]:ExpressionStatement[14799-14837]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[14839-14846]:ReturnStatement[14854-14861]"
    }, {
      "left" : "if (!rootName.isEmpty())",
      "right" : "if (!rootName.isEmpty())",
      "info" : "IfStatement[14876-14983]:IfStatement[14891-14998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14901-14983]:Block[14916-14998]"
    }, {
      "left" : "_serialize(gen, value, ser, rootName);",
      "right" : "_serialize(gen, value, ser, rootName);",
      "info" : "ExpressionStatement[14915-14953]:ExpressionStatement[14930-14968]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[14966-14973]:ReturnStatement[14981-14988]"
    }, {
      "left" : "_serialize(gen, value, ser);",
      "right" : "_serialize(gen, value, ser);",
      "info" : "ExpressionStatement[14992-15020]:ExpressionStatement[15007-15035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15235-15241]:Modifier[15250-15256]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15242-15246]:PrimitiveType[15257-15261]"
    }, {
      "left" : "serializePolymorphic",
      "right" : "serializePolymorphic",
      "info" : "SimpleName[15247-15267]:SimpleName[15262-15282]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[15268-15285]:SingleVariableDeclaration[15283-15300]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[15287-15299]:SingleVariableDeclaration[15302-15314]"
    }, {
      "left" : "JavaType rootType",
      "right" : "JavaType rootType",
      "info" : "SingleVariableDeclaration[15301-15318]:SingleVariableDeclaration[15316-15333]"
    }, {
      "left" : "JsonSerializer<Object> valueSer",
      "right" : "JsonSerializer<Object> valueSer",
      "info" : "SingleVariableDeclaration[15332-15363]:SingleVariableDeclaration[15347-15378]"
    }, {
      "left" : "TypeSerializer typeSer",
      "right" : "TypeSerializer typeSer",
      "info" : "SingleVariableDeclaration[15365-15387]:SingleVariableDeclaration[15380-15402]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[15404-15415]:SimpleType[15419-15430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15420-17229]:Block[15435-17244]"
    }, {
      "left" : "_generator = gen;",
      "right" : "_generator = gen;",
      "info" : "ExpressionStatement[15430-15447]:ExpressionStatement[15445-15462]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[15456-15539]:IfStatement[15471-15554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15475-15539]:Block[15490-15554]"
    }, {
      "left" : "_serializeNull(gen);",
      "right" : "_serializeNull(gen);",
      "info" : "ExpressionStatement[15489-15509]:ExpressionStatement[15504-15524]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[15522-15529]:ReturnStatement[15537-15544]"
    }, {
      "left" : "if ((rootType != null) && !rootType.getRawClass().isAssignableFrom(value.getClass()))",
      "right" : "if ((rootType != null) && !rootType.getRawClass().isAssignableFrom(value.getClass()))",
      "info" : "IfStatement[15607-15762]:IfStatement[15622-15777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15693-15762]:Block[15708-15777]"
    }, {
      "left" : "_reportIncompatibleRootType(value, rootType);",
      "right" : "_reportIncompatibleRootType(value, rootType);",
      "info" : "ExpressionStatement[15707-15752]:ExpressionStatement[15722-15767]"
    }, {
      "left" : "if (valueSer == null)",
      "right" : "if (valueSer == null)",
      "info" : "IfStatement[16082-16354]:IfStatement[16097-16369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16104-16354]:Block[16119-16369]"
    }, {
      "left" : "if ((rootType != null) && rootType.isContainerType())",
      "right" : "if ((rootType != null) && rootType.isContainerType())",
      "info" : "IfStatement[16118-16344]:IfStatement[16133-16359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16172-16251]:Block[16187-16266]"
    }, {
      "left" : "valueSer = findValueSerializer(rootType, null);",
      "right" : "valueSer = findValueSerializer(rootType, null);",
      "info" : "ExpressionStatement[16190-16237]:ExpressionStatement[16205-16252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16257-16344]:Block[16272-16359]"
    }, {
      "left" : "valueSer = findValueSerializer(value.getClass(), null);",
      "right" : "valueSer = findValueSerializer(value.getClass(), null);",
      "info" : "ExpressionStatement[16275-16330]:ExpressionStatement[16290-16345]"
    }, {
      "left" : "final boolean wrap;",
      "right" : "final boolean wrap;",
      "info" : "VariableDeclarationStatement[16364-16383]:VariableDeclarationStatement[16379-16398]"
    }, {
      "left" : "PropertyName rootName = _config.getFullRootName();",
      "right" : "PropertyName rootName = _config.getFullRootName();",
      "info" : "VariableDeclarationStatement[16392-16442]:VariableDeclarationStatement[16407-16457]"
    }, {
      "left" : "if (rootName == null)",
      "right" : "if (rootName == null)",
      "info" : "IfStatement[16451-16986]:IfStatement[16466-17001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16473-16783]:Block[16488-16798]"
    }, {
      "left" : "wrap = _config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE);",
      "right" : "wrap = _config.isEnabled(SerializationFeature.WRAP_ROOT_VALUE);",
      "info" : "ExpressionStatement[16487-16550]:ExpressionStatement[16502-16565]"
    }, {
      "left" : "if (wrap)",
      "right" : "if (wrap)",
      "info" : "IfStatement[16563-16773]:IfStatement[16578-16788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16573-16773]:Block[16588-16788]"
    }, {
      "left" : "gen.writeStartObject();",
      "right" : "gen.writeStartObject();",
      "info" : "ExpressionStatement[16591-16614]:ExpressionStatement[16606-16629]"
    }, {
      "left" : "PropertyName pname = _config.findRootName(value.getClass());",
      "right" : "PropertyName pname = _config.findRootName(value.getClass());",
      "info" : "VariableDeclarationStatement[16631-16691]:VariableDeclarationStatement[16646-16706]"
    }, {
      "left" : "gen.writeFieldName(pname.simpleAsEncoded(_config));",
      "right" : "gen.writeFieldName(pname.simpleAsEncoded(_config));",
      "info" : "ExpressionStatement[16708-16759]:ExpressionStatement[16723-16774]"
    }, {
      "left" : "if (rootName.isEmpty())",
      "right" : "if (rootName.isEmpty())",
      "info" : "IfStatement[16789-16986]:IfStatement[16804-17001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16813-16850]:Block[16828-16865]"
    }, {
      "left" : "wrap = false;",
      "right" : "wrap = false;",
      "info" : "ExpressionStatement[16827-16840]:ExpressionStatement[16842-16855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16856-16986]:Block[16871-17001]"
    }, {
      "left" : "wrap = true;",
      "right" : "wrap = true;",
      "info" : "ExpressionStatement[16870-16882]:ExpressionStatement[16885-16897]"
    }, {
      "left" : "gen.writeStartObject();",
      "right" : "gen.writeStartObject();",
      "info" : "ExpressionStatement[16895-16918]:ExpressionStatement[16910-16933]"
    }, {
      "left" : "gen.writeFieldName(rootName.getSimpleName());",
      "right" : "gen.writeFieldName(rootName.getSimpleName());",
      "info" : "ExpressionStatement[16931-16976]:ExpressionStatement[16946-16991]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16995-17223]:TryStatement[17010-17238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16999-17153]:Block[17014-17168]"
    }, {
      "left" : "valueSer.serializeWithType(value, gen, this, typeSer);",
      "right" : "valueSer.serializeWithType(value, gen, this, typeSer);",
      "info" : "ExpressionStatement[17013-17067]:ExpressionStatement[17028-17082]"
    }, {
      "left" : "if (wrap)",
      "right" : "if (wrap)",
      "info" : "IfStatement[17080-17143]:IfStatement[17095-17158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17090-17143]:Block[17105-17158]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[17108-17129]:ExpressionStatement[17123-17144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17174-17223]:Block[17189-17238]"
    }, {
      "left" : "throw _wrapAsIOE(gen, e);",
      "right" : "throw _wrapAsIOE(gen, e);",
      "info" : "ThrowStatement[17188-17213]:ThrowStatement[17203-17228]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17235-17242]:Modifier[17250-17257]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17243-17248]:Modifier[17258-17263]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17249-17253]:PrimitiveType[17264-17268]"
    }, {
      "left" : "_serialize",
      "right" : "_serialize",
      "info" : "SimpleName[17254-17264]:SimpleName[17269-17279]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[17265-17282]:SingleVariableDeclaration[17280-17297]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[17284-17296]:SingleVariableDeclaration[17299-17311]"
    }, {
      "left" : "JsonSerializer<Object> ser",
      "right" : "JsonSerializer<Object> ser",
      "info" : "SingleVariableDeclaration[17310-17336]:SingleVariableDeclaration[17325-17351]"
    }, {
      "left" : "PropertyName rootName",
      "right" : "PropertyName rootName",
      "info" : "SingleVariableDeclaration[17338-17359]:SingleVariableDeclaration[17353-17374]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17376-17387]:SimpleType[17391-17402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17392-17675]:Block[17407-17690]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17402-17669]:TryStatement[17417-17684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17406-17599]:Block[17421-17614]"
    }, {
      "left" : "gen.writeStartObject();",
      "right" : "gen.writeStartObject();",
      "info" : "ExpressionStatement[17420-17443]:ExpressionStatement[17435-17458]"
    }, {
      "left" : "gen.writeFieldName(rootName.simpleAsEncoded(_config));",
      "right" : "gen.writeFieldName(rootName.simpleAsEncoded(_config));",
      "info" : "ExpressionStatement[17456-17510]:ExpressionStatement[17471-17525]"
    }, {
      "left" : "ser.serialize(value, gen, this);",
      "right" : "ser.serialize(value, gen, this);",
      "info" : "ExpressionStatement[17523-17555]:ExpressionStatement[17538-17570]"
    }, {
      "left" : "gen.writeEndObject();",
      "right" : "gen.writeEndObject();",
      "info" : "ExpressionStatement[17568-17589]:ExpressionStatement[17583-17604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17620-17669]:Block[17635-17684]"
    }, {
      "left" : "throw _wrapAsIOE(gen, e);",
      "right" : "throw _wrapAsIOE(gen, e);",
      "info" : "ThrowStatement[17634-17659]:ThrowStatement[17649-17674]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17681-17688]:Modifier[17696-17703]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[17689-17694]:Modifier[17704-17709]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17695-17699]:PrimitiveType[17710-17714]"
    }, {
      "left" : "_serialize",
      "right" : "_serialize",
      "info" : "SimpleName[17700-17710]:SimpleName[17715-17725]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[17711-17728]:SingleVariableDeclaration[17726-17743]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[17730-17742]:SingleVariableDeclaration[17745-17757]"
    }, {
      "left" : "JsonSerializer<Object> ser",
      "right" : "JsonSerializer<Object> ser",
      "info" : "SingleVariableDeclaration[17756-17782]:SingleVariableDeclaration[17771-17797]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[17799-17810]:SimpleType[17814-17825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17815-17961]:Block[17830-17976]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17825-17955]:TryStatement[17840-17970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17829-17885]:Block[17844-17900]"
    }, {
      "left" : "ser.serialize(value, gen, this);",
      "right" : "ser.serialize(value, gen, this);",
      "info" : "ExpressionStatement[17843-17875]:ExpressionStatement[17858-17890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17906-17955]:Block[17921-17970]"
    }, {
      "left" : "throw _wrapAsIOE(gen, e);",
      "right" : "throw _wrapAsIOE(gen, e);",
      "info" : "ThrowStatement[17920-17945]:ThrowStatement[17935-17960]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18074-18083]:Modifier[18089-18098]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18084-18088]:PrimitiveType[18099-18103]"
    }, {
      "left" : "_serializeNull",
      "right" : "_serializeNull",
      "info" : "SimpleName[18089-18103]:SimpleName[18104-18118]"
    }, {
      "left" : "JsonGenerator gen",
      "right" : "JsonGenerator gen",
      "info" : "SingleVariableDeclaration[18104-18121]:SingleVariableDeclaration[18119-18136]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18130-18141]:SimpleType[18145-18156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18146-18361]:Block[18161-18376]"
    }, {
      "left" : "JsonSerializer<Object> ser = getDefaultNullValueSerializer();",
      "right" : "JsonSerializer<Object> ser = getDefaultNullValueSerializer();",
      "info" : "VariableDeclarationStatement[18156-18217]:VariableDeclarationStatement[18171-18232]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18226-18355]:TryStatement[18241-18370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18230-18285]:Block[18245-18300]"
    }, {
      "left" : "ser.serialize(null, gen, this);",
      "right" : "ser.serialize(null, gen, this);",
      "info" : "ExpressionStatement[18244-18275]:ExpressionStatement[18259-18290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18306-18355]:Block[18321-18370]"
    }, {
      "left" : "throw _wrapAsIOE(gen, e);",
      "right" : "throw _wrapAsIOE(gen, e);",
      "info" : "ThrowStatement[18320-18345]:ThrowStatement[18335-18360]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18367-18374]:Modifier[18382-18389]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[18375-18386]:SimpleType[18390-18401]"
    }, {
      "left" : "_wrapAsIOE",
      "right" : "_wrapAsIOE",
      "info" : "SimpleName[18387-18397]:SimpleName[18402-18412]"
    }, {
      "left" : "JsonGenerator g",
      "right" : "JsonGenerator g",
      "info" : "SingleVariableDeclaration[18398-18413]:SingleVariableDeclaration[18413-18428]"
    }, {
      "left" : "Exception e",
      "right" : "Exception e",
      "info" : "SingleVariableDeclaration[18415-18426]:SingleVariableDeclaration[18430-18441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18428-18712]:Block[18443-18742]"
    }, {
      "left" : "if (e instanceof IOException)",
      "right" : "if (e instanceof IOException)",
      "info" : "IfStatement[18438-18515]:IfStatement[18453-18530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18468-18515]:Block[18483-18530]"
    }, {
      "left" : "return (IOException) e;",
      "right" : "return (IOException) e;",
      "info" : "ReturnStatement[18482-18505]:ReturnStatement[18497-18520]"
    }, {
      "left" : "String msg = e.getMessage();",
      "right" : "String msg = ClassUtil.exceptionMessage(e);",
      "info" : "VariableDeclarationStatement[18524-18552]:VariableDeclarationStatement[18539-18582]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[18537-18538]:SimpleName[18579-18580]"
    }, {
      "left" : "getMessage",
      "right" : "exceptionMessage",
      "info" : "SimpleName[18539-18549]:SimpleName[18562-18578]"
    }, {
      "left" : "if (msg == null)",
      "right" : "if (msg == null)",
      "info" : "IfStatement[18561-18654]:IfStatement[18591-18684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18578-18654]:Block[18608-18684]"
    }, {
      "left" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "right" : "msg = \"[no message for \"+e.getClass().getName()+\"]\";",
      "info" : "ExpressionStatement[18592-18644]:ExpressionStatement[18622-18674]"
    }, {
      "left" : "return new JsonMappingException(g, msg, e);",
      "right" : "return new JsonMappingException(g, msg, e);",
      "info" : "ReturnStatement[18663-18706]:ReturnStatement[18693-18736]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19424-19430]:Modifier[19454-19460]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[19431-19434]:PrimitiveType[19461-19464]"
    }, {
      "left" : "cachedSerializersCount",
      "right" : "cachedSerializersCount",
      "info" : "SimpleName[19435-19457]:SimpleName[19465-19487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19460-19507]:Block[19490-19537]"
    }, {
      "left" : "return _serializerCache.size();",
      "right" : "return _serializerCache.size();",
      "info" : "ReturnStatement[19470-19501]:ReturnStatement[19500-19531]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19829-19835]:Modifier[19859-19865]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19836-19840]:PrimitiveType[19866-19870]"
    }, {
      "left" : "flushCachedSerializers",
      "right" : "flushCachedSerializers",
      "info" : "SimpleName[19841-19863]:SimpleName[19871-19893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19866-19907]:Block[19896-19937]"
    }, {
      "left" : "_serializerCache.flush();",
      "right" : "_serializerCache.flush();",
      "info" : "ExpressionStatement[19876-19901]:ExpressionStatement[19906-19931]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20394-20400]:Modifier[20424-20430]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20401-20405]:PrimitiveType[20431-20435]"
    }, {
      "left" : "acceptJsonFormatVisitor",
      "right" : "acceptJsonFormatVisitor",
      "info" : "SimpleName[20406-20429]:SimpleName[20436-20459]"
    }, {
      "left" : "JavaType javaType",
      "right" : "JavaType javaType",
      "info" : "SingleVariableDeclaration[20430-20447]:SingleVariableDeclaration[20460-20477]"
    }, {
      "left" : "JsonFormatVisitorWrapper visitor",
      "right" : "JsonFormatVisitorWrapper visitor",
      "info" : "SingleVariableDeclaration[20449-20481]:SingleVariableDeclaration[20479-20511]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[20498-20518]:SimpleType[20528-20548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20523-20941]:Block[20553-20971]"
    }, {
      "left" : "if (javaType == null)",
      "right" : "if (javaType == null)",
      "info" : "IfStatement[20533-20642]:IfStatement[20563-20672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20555-20642]:Block[20585-20672]"
    }, {
      "left" : "throw new IllegalArgumentException(\"A class must be provided\");",
      "right" : "throw new IllegalArgumentException(\"A class must be provided\");",
      "info" : "ThrowStatement[20569-20632]:ThrowStatement[20599-20662]"
    }, {
      "left" : "visitor.setProvider(this);",
      "right" : "visitor.setProvider(this);",
      "info" : "ExpressionStatement[20821-20847]:ExpressionStatement[20851-20877]"
    }, {
      "left" : "findValueSerializer(javaType, null).acceptJsonFormatVisitor(visitor, javaType);",
      "right" : "findValueSerializer(javaType, null).acceptJsonFormatVisitor(visitor, javaType);",
      "info" : "ExpressionStatement[20856-20935]:ExpressionStatement[20886-20965]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[21229-21240]:MarkerAnnotation[21259-21270]"
    }, {
      "left" : "// since 2.6",
      "right" : "// since 2.6",
      "info" : "LineComment[21241-21253]:LineComment[21271-21283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21258-21264]:Modifier[21288-21294]"
    }, {
      "left" : "com.fasterxml.jackson.databind.jsonschema.JsonSchema",
      "right" : "com.fasterxml.jackson.databind.jsonschema.JsonSchema",
      "info" : "SimpleType[21265-21317]:SimpleType[21295-21347]"
    }, {
      "left" : "generateJsonSchema",
      "right" : "generateJsonSchema",
      "info" : "SimpleName[21318-21336]:SimpleName[21348-21366]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[21337-21350]:SingleVariableDeclaration[21367-21380]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[21367-21387]:SimpleType[21397-21417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21392-22164]:Block[21422-22194]"
    }, {
      "left" : "JsonSerializer<Object> ser = findValueSerializer(type, null);",
      "right" : "JsonSerializer<Object> ser = findValueSerializer(type, null);",
      "info" : "VariableDeclarationStatement[21572-21633]:VariableDeclarationStatement[21602-21663]"
    }, {
      "left" : "JsonNode schemaNode = (ser instanceof SchemaAware) ?\n                ((SchemaAware) ser).getSchema(this, null) : com.fasterxml.jackson.databind.jsonschema.JsonSchema.getDefaultSchemaNode();",
      "right" : "JsonNode schemaNode = (ser instanceof SchemaAware) ?\n                ((SchemaAware) ser).getSchema(this, null) : com.fasterxml.jackson.databind.jsonschema.JsonSchema.getDefaultSchemaNode();",
      "info" : "VariableDeclarationStatement[21642-21831]:VariableDeclarationStatement[21672-21861]"
    }, {
      "left" : "if (!(schemaNode instanceof ObjectNode))",
      "right" : "if (!(schemaNode instanceof ObjectNode))",
      "info" : "IfStatement[21840-22060]:IfStatement[21870-22090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21881-22060]:Block[21911-22090]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Class \" + type.getName()\n                    +\" would not be serialized as a JSON object and therefore has no schema\");",
      "right" : "throw new IllegalArgumentException(\"Class \" + type.getName()\n                    +\" would not be serialized as a JSON object and therefore has no schema\");",
      "info" : "ThrowStatement[21895-22050]:ThrowStatement[21925-22080]"
    }, {
      "left" : "return new com.fasterxml.jackson.databind.jsonschema.JsonSchema((ObjectNode) schemaNode);",
      "right" : "return new com.fasterxml.jackson.databind.jsonschema.JsonSchema((ObjectNode) schemaNode);",
      "info" : "ReturnStatement[22069-22158]:ReturnStatement[22099-22188]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22449-22455]:Modifier[22479-22485]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[22456-22461]:Modifier[22486-22491]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22462-22468]:Modifier[22492-22498]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[22469-22474]:TYPE_DECLARATION_KIND[22499-22504]"
    }, {
      "left" : "Impl",
      "right" : "Impl",
      "info" : "SimpleName[22475-22479]:SimpleName[22505-22509]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[22488-22513]:SimpleType[22518-22543]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22582-22588]:Modifier[22612-22618]"
    }, {
      "left" : "Impl",
      "right" : "Impl",
      "info" : "SimpleName[22589-22593]:SimpleName[22619-22623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22596-22608]:Block[22626-22638]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[22598-22606]:SuperConstructorInvocation[22628-22636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22617-22623]:Modifier[22647-22653]"
    }, {
      "left" : "Impl",
      "right" : "Impl",
      "info" : "SimpleName[22624-22628]:SimpleName[22654-22658]"
    }, {
      "left" : "Impl src",
      "right" : "Impl src",
      "info" : "SingleVariableDeclaration[22629-22637]:SingleVariableDeclaration[22659-22667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22639-22654]:Block[22669-22684]"
    }, {
      "left" : "super(src);",
      "right" : "super(src);",
      "info" : "SuperConstructorInvocation[22641-22652]:SuperConstructorInvocation[22671-22682]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[22664-22673]:Modifier[22694-22703]"
    }, {
      "left" : "Impl",
      "right" : "Impl",
      "info" : "SimpleName[22674-22678]:SimpleName[22704-22708]"
    }, {
      "left" : "SerializerProvider src",
      "right" : "SerializerProvider src",
      "info" : "SingleVariableDeclaration[22679-22701]:SingleVariableDeclaration[22709-22731]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[22703-22729]:SingleVariableDeclaration[22733-22759]"
    }, {
      "left" : "SerializerFactory f",
      "right" : "SerializerFactory f",
      "info" : "SingleVariableDeclaration[22747-22766]:SingleVariableDeclaration[22777-22796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22768-22814]:Block[22798-22844]"
    }, {
      "left" : "super(src, config, f);",
      "right" : "super(src, config, f);",
      "info" : "SuperConstructorInvocation[22782-22804]:SuperConstructorInvocation[22812-22834]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22824-22833]:MarkerAnnotation[22854-22863]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22842-22848]:Modifier[22872-22878]"
    }, {
      "left" : "DefaultSerializerProvider",
      "right" : "DefaultSerializerProvider",
      "info" : "SimpleType[22849-22874]:SimpleType[22879-22904]"
    }, {
      "left" : "copy",
      "right" : "copy",
      "info" : "SimpleName[22875-22879]:SimpleName[22905-22909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22890-23031]:Block[22920-23061]"
    }, {
      "left" : "if (getClass() != Impl.class)",
      "right" : "if (getClass() != Impl.class)",
      "info" : "IfStatement[22904-22986]:IfStatement[22934-23016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22934-22986]:Block[22964-23016]"
    }, {
      "left" : "return super.copy();",
      "right" : "return super.copy();",
      "info" : "ReturnStatement[22952-22972]:ReturnStatement[22982-23002]"
    }, {
      "left" : "return new Impl(this);",
      "right" : "return new Impl(this);",
      "info" : "ReturnStatement[22999-23021]:ReturnStatement[23029-23051]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[23049-23058]:MarkerAnnotation[23079-23088]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23067-23073]:Modifier[23097-23103]"
    }, {
      "left" : "Impl",
      "right" : "Impl",
      "info" : "SimpleType[23074-23078]:SimpleType[23104-23108]"
    }, {
      "left" : "createInstance",
      "right" : "createInstance",
      "info" : "SimpleName[23079-23093]:SimpleName[23109-23123]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[23094-23120]:SingleVariableDeclaration[23124-23150]"
    }, {
      "left" : "SerializerFactory jsf",
      "right" : "SerializerFactory jsf",
      "info" : "SingleVariableDeclaration[23122-23143]:SingleVariableDeclaration[23152-23173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23145-23204]:Block[23175-23234]"
    }, {
      "left" : "return new Impl(this, config, jsf);",
      "right" : "return new Impl(this, config, jsf);",
      "info" : "ReturnStatement[23159-23194]:ReturnStatement[23189-23224]"
    } ]
  },
  "interFileMappings" : { }
}