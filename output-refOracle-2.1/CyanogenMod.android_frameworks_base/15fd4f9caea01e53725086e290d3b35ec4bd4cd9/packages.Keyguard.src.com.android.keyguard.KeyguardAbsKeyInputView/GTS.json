{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "KeyguardAbsKeyInputView",
      "right" : "KeyguardAbsKeyInputView",
      "info" : "TypeDeclaration[1110-7578]:TypeDeclaration[1110-7659]"
    }, {
      "left" : "protected KeyguardSecurityCallback mCallback;",
      "right" : "protected KeyguardSecurityCallback mCallback;",
      "info" : "FieldDeclaration[1282-1327]:FieldDeclaration[1282-1327]"
    }, {
      "left" : "protected LockPatternUtils mLockPatternUtils;",
      "right" : "protected LockPatternUtils mLockPatternUtils;",
      "info" : "FieldDeclaration[1332-1377]:FieldDeclaration[1332-1377]"
    }, {
      "left" : "protected SecurityMessageDisplay mSecurityMessageDisplay;",
      "right" : "protected SecurityMessageDisplay mSecurityMessageDisplay;",
      "info" : "FieldDeclaration[1382-1439]:FieldDeclaration[1382-1439]"
    }, {
      "left" : "protected View mEcaView;",
      "right" : "protected View mEcaView;",
      "info" : "FieldDeclaration[1444-1468]:FieldDeclaration[1444-1468]"
    }, {
      "left" : "private Drawable mBouncerFrame;",
      "right" : "private Drawable mBouncerFrame;",
      "info" : "FieldDeclaration[1473-1504]:FieldDeclaration[1473-1504]"
    }, {
      "left" : "protected boolean mEnableHaptics;",
      "right" : "protected boolean mEnableHaptics;",
      "info" : "FieldDeclaration[1509-1542]:FieldDeclaration[1509-1542]"
    }, {
      "left" : "protected int mMaxCountdownTimes = 0;",
      "right" : "protected int mMaxCountdownTimes = 0;",
      "info" : "FieldDeclaration[1547-1584]:FieldDeclaration[1547-1584]"
    }, {
      "left" : "protected static final int MINIMUM_PASSWORD_LENGTH_BEFORE_REPORT = 3;",
      "right" : "protected static final int MINIMUM_PASSWORD_LENGTH_BEFORE_REPORT = 3;",
      "info" : "FieldDeclaration[1749-1818]:FieldDeclaration[1749-1818]"
    }, {
      "left" : "public KeyguardAbsKeyInputView(Context context)",
      "right" : "public KeyguardAbsKeyInputView(Context context)",
      "info" : "MethodDeclaration[1824-1908]:MethodDeclaration[1824-1908]"
    }, {
      "left" : "public KeyguardAbsKeyInputView(Context context, AttributeSet attrs)",
      "right" : "public KeyguardAbsKeyInputView(Context context, AttributeSet attrs)",
      "info" : "MethodDeclaration[1914-2020]:MethodDeclaration[1914-2020]"
    }, {
      "left" : "public void setKeyguardCallback(KeyguardSecurityCallback callback)",
      "right" : "public void setKeyguardCallback(KeyguardSecurityCallback callback)",
      "info" : "MethodDeclaration[2026-2130]:MethodDeclaration[2026-2130]"
    }, {
      "left" : "public void setLockPatternUtils(LockPatternUtils utils)",
      "right" : "public void setLockPatternUtils(LockPatternUtils utils)",
      "info" : "MethodDeclaration[2136-2305]:MethodDeclaration[2136-2305]"
    }, {
      "left" : "public void reset()",
      "right" : "protected void reset(boolean animateTransition)",
      "info" : "MethodDeclaration[2311-2676]:MethodDeclaration[2366-2757]"
    }, {
      "left" : "protected boolean shouldLockout(long deadline)",
      "right" : "protected boolean shouldLockout(long deadline)",
      "info" : "MethodDeclaration[2732-2816]:MethodDeclaration[2813-2897]"
    }, {
      "left" : "protected abstract int getPasswordTextViewId();",
      "right" : "protected abstract int getPasswordTextViewId();",
      "info" : "MethodDeclaration[2822-2869]:MethodDeclaration[2903-2950]"
    }, {
      "left" : "protected abstract void resetState();",
      "right" : "protected abstract void resetState();",
      "info" : "MethodDeclaration[2874-2911]:MethodDeclaration[2955-2992]"
    }, {
      "left" : "protected void onFinishInflate()",
      "right" : "protected void onFinishInflate()",
      "info" : "MethodDeclaration[2917-3362]:MethodDeclaration[2998-3443]"
    }, {
      "left" : "protected int getWrongPasswordStringId()",
      "right" : "protected int getWrongPasswordStringId()",
      "info" : "MethodDeclaration[3568-3659]:MethodDeclaration[3649-3740]"
    }, {
      "left" : "protected void verifyPasswordAndUnlock()",
      "right" : "protected void verifyPasswordAndUnlock()",
      "info" : "MethodDeclaration[3665-4705]:MethodDeclaration[3746-4786]"
    }, {
      "left" : "protected abstract void resetPasswordText(boolean animate);",
      "right" : "protected abstract void resetPasswordText(boolean animate);",
      "info" : "MethodDeclaration[4711-4770]:MethodDeclaration[4792-4851]"
    }, {
      "left" : "protected abstract String getPasswordText();",
      "right" : "protected abstract String getPasswordText();",
      "info" : "MethodDeclaration[4775-4819]:MethodDeclaration[4856-4900]"
    }, {
      "left" : "protected abstract void setPasswordEntryEnabled(boolean enabled);",
      "right" : "protected abstract void setPasswordEntryEnabled(boolean enabled);",
      "info" : "MethodDeclaration[4824-4889]:MethodDeclaration[4905-4970]"
    }, {
      "left" : "protected void handleAttemptLockout(long elapsedRealtimeDeadline)",
      "right" : "protected void handleAttemptLockout(long elapsedRealtimeDeadline)",
      "info" : "MethodDeclaration[4975-5734]:MethodDeclaration[5056-5815]"
    }, {
      "left" : "public void onTick(long millisUntilFinished)",
      "right" : "public void onTick(long millisUntilFinished)",
      "info" : "MethodDeclaration[5236-5542]:MethodDeclaration[5317-5623]"
    }, {
      "left" : "public void onFinish()",
      "right" : "public void onFinish()",
      "info" : "MethodDeclaration[5556-5709]:MethodDeclaration[5637-5790]"
    }, {
      "left" : "protected void showWrongPassword()",
      "right" : "protected void showWrongPassword()",
      "info" : "MethodDeclaration[5740-6137]:MethodDeclaration[5821-6218]"
    }, {
      "left" : "protected int getRemainingCount()",
      "right" : "protected int getRemainingCount()",
      "info" : "MethodDeclaration[6143-6307]:MethodDeclaration[6224-6388]"
    }, {
      "left" : "public boolean onKeyDown(int keyCode, KeyEvent event)",
      "right" : "public boolean onKeyDown(int keyCode, KeyEvent event)",
      "info" : "MethodDeclaration[6313-6444]:MethodDeclaration[6394-6525]"
    }, {
      "left" : "public boolean needsInput()",
      "right" : "public boolean needsInput()",
      "info" : "MethodDeclaration[6450-6521]:MethodDeclaration[6531-6602]"
    }, {
      "left" : "public void onPause()",
      "right" : "public void onPause()",
      "info" : "MethodDeclaration[6527-6571]:MethodDeclaration[6608-6652]"
    }, {
      "left" : "public void onResume(int reason)",
      "right" : "public void onResume(int reason)",
      "info" : "MethodDeclaration[6577-6648]:MethodDeclaration[6658-6729]"
    }, {
      "left" : "public KeyguardSecurityCallback getCallback()",
      "right" : "public KeyguardSecurityCallback getCallback()",
      "info" : "MethodDeclaration[6654-6747]:MethodDeclaration[6735-6828]"
    }, {
      "left" : "public void doHapticKeyClick()",
      "right" : "public void doHapticKeyClick()",
      "info" : "MethodDeclaration[6790-7083]:MethodDeclaration[6871-7164]"
    }, {
      "left" : "public void showBouncer(int duration)",
      "right" : "public void showBouncer(int duration)",
      "info" : "MethodDeclaration[7089-7273]:MethodDeclaration[7170-7354]"
    }, {
      "left" : "public void hideBouncer(int duration)",
      "right" : "public void hideBouncer(int duration)",
      "info" : "MethodDeclaration[7279-7463]:MethodDeclaration[7360-7544]"
    }, {
      "left" : "public boolean startDisappearAnimation(Runnable finishRunnable)",
      "right" : "public boolean startDisappearAnimation(Runnable finishRunnable)",
      "info" : "MethodDeclaration[7469-7576]:MethodDeclaration[7550-7657]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1872-1908]:Block[1872-1908]"
    }, {
      "left" : "this(context, null);",
      "right" : "this(context, null);",
      "info" : "ConstructorInvocation[1882-1902]:ConstructorInvocation[1882-1902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1982-2020]:Block[1982-2020]"
    }, {
      "left" : "super(context, attrs);",
      "right" : "super(context, attrs);",
      "info" : "SuperConstructorInvocation[1992-2014]:SuperConstructorInvocation[1992-2014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2093-2130]:Block[2093-2130]"
    }, {
      "left" : "mCallback = callback;",
      "right" : "mCallback = callback;",
      "info" : "ExpressionStatement[2103-2124]:ExpressionStatement[2103-2124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2192-2305]:Block[2192-2305]"
    }, {
      "left" : "mLockPatternUtils = utils;",
      "right" : "mLockPatternUtils = utils;",
      "info" : "ExpressionStatement[2202-2228]:ExpressionStatement[2202-2228]"
    }, {
      "left" : "mEnableHaptics = mLockPatternUtils.isTactileFeedbackEnabled();",
      "right" : "mEnableHaptics = mLockPatternUtils.isTactileFeedbackEnabled();",
      "info" : "ExpressionStatement[2237-2299]:ExpressionStatement[2237-2299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2331-2676]:Block[2414-2757]"
    }, {
      "left" : "resetPasswordText(false /* animate */);",
      "right" : "reset(false);",
      "info" : "ExpressionStatement[2364-2403]:ExpressionStatement[2341-2354]"
    }, {
      "left" : "long deadline = mLockPatternUtils.getLockoutAttemptDeadline();",
      "right" : "long deadline = mLockPatternUtils.getLockoutAttemptDeadline();",
      "info" : "VariableDeclarationStatement[2472-2534]:VariableDeclarationStatement[2553-2615]"
    }, {
      "left" : "if (shouldLockout(deadline))",
      "right" : "if (shouldLockout(deadline))",
      "info" : "IfStatement[2543-2670]:IfStatement[2624-2751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2572-2627]:Block[2653-2708]"
    }, {
      "left" : "handleAttemptLockout(deadline);",
      "right" : "handleAttemptLockout(deadline);",
      "info" : "ExpressionStatement[2586-2617]:ExpressionStatement[2667-2698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2633-2670]:Block[2714-2751]"
    }, {
      "left" : "resetState();",
      "right" : "resetState();",
      "info" : "ExpressionStatement[2647-2660]:ExpressionStatement[2728-2741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2779-2816]:Block[2860-2897]"
    }, {
      "left" : "return deadline != 0;",
      "right" : "return deadline != 0;",
      "info" : "ReturnStatement[2789-2810]:ReturnStatement[2870-2891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2964-3362]:Block[3045-3443]"
    }, {
      "left" : "mLockPatternUtils = new LockPatternUtils(mContext);",
      "right" : "mLockPatternUtils = new LockPatternUtils(mContext);",
      "info" : "ExpressionStatement[2974-3025]:ExpressionStatement[3055-3106]"
    }, {
      "left" : "mSecurityMessageDisplay = new KeyguardMessageArea.Helper(this);",
      "right" : "mSecurityMessageDisplay = new KeyguardMessageArea.Helper(this);",
      "info" : "ExpressionStatement[3034-3097]:ExpressionStatement[3115-3178]"
    }, {
      "left" : "mEcaView = findViewById(R.id.keyguard_selector_fade_container);",
      "right" : "mEcaView = findViewById(R.id.keyguard_selector_fade_container);",
      "info" : "ExpressionStatement[3106-3169]:ExpressionStatement[3187-3250]"
    }, {
      "left" : "View bouncerFrameView = findViewById(R.id.keyguard_bouncer_frame);",
      "right" : "View bouncerFrameView = findViewById(R.id.keyguard_bouncer_frame);",
      "info" : "VariableDeclarationStatement[3178-3244]:VariableDeclarationStatement[3259-3325]"
    }, {
      "left" : "if (bouncerFrameView != null)",
      "right" : "if (bouncerFrameView != null)",
      "info" : "IfStatement[3253-3356]:IfStatement[3334-3437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3283-3356]:Block[3364-3437]"
    }, {
      "left" : "mBouncerFrame = bouncerFrameView.getBackground();",
      "right" : "mBouncerFrame = bouncerFrameView.getBackground();",
      "info" : "ExpressionStatement[3297-3346]:ExpressionStatement[3378-3427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3609-3659]:Block[3690-3740]"
    }, {
      "left" : "return R.string.kg_wrong_password;",
      "right" : "return R.string.kg_wrong_password;",
      "info" : "ReturnStatement[3619-3653]:ReturnStatement[3700-3734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3706-4705]:Block[3787-4786]"
    }, {
      "left" : "String entry = getPasswordText();",
      "right" : "String entry = getPasswordText();",
      "info" : "VariableDeclarationStatement[3716-3749]:VariableDeclarationStatement[3797-3830]"
    }, {
      "left" : "if (mLockPatternUtils.checkPassword(entry))",
      "right" : "if (mLockPatternUtils.checkPassword(entry))",
      "info" : "IfStatement[3758-4652]:IfStatement[3839-4733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3802-3899]:Block[3883-3980]"
    }, {
      "left" : "mCallback.reportUnlockAttempt(true);",
      "right" : "mCallback.reportUnlockAttempt(true);",
      "info" : "ExpressionStatement[3816-3852]:ExpressionStatement[3897-3933]"
    }, {
      "left" : "mCallback.dismiss(true);",
      "right" : "mCallback.dismiss(true);",
      "info" : "ExpressionStatement[3865-3889]:ExpressionStatement[3946-3970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3905-4652]:Block[3986-4733]"
    }, {
      "left" : "if (entry.length() > MINIMUM_PASSWORD_LENGTH_BEFORE_REPORT)",
      "right" : "if (entry.length() > MINIMUM_PASSWORD_LENGTH_BEFORE_REPORT)",
      "info" : "IfStatement[3919-4609]:IfStatement[4000-4690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3980-4609]:Block[4061-4690]"
    }, {
      "left" : "mCallback.reportUnlockAttempt(false);",
      "right" : "mCallback.reportUnlockAttempt(false);",
      "info" : "ExpressionStatement[4161-4198]:ExpressionStatement[4242-4279]"
    }, {
      "left" : "int attempts = KeyguardUpdateMonitor.getInstance(mContext).getFailedUnlockAttempts();",
      "right" : "int attempts = KeyguardUpdateMonitor.getInstance(mContext).getFailedUnlockAttempts();",
      "info" : "VariableDeclarationStatement[4215-4300]:VariableDeclarationStatement[4296-4381]"
    }, {
      "left" : "if (!(mMaxCountdownTimes > 0) && 0 ==\n                        (attempts % LockPatternUtils.FAILED_ATTEMPTS_BEFORE_TIMEOUT))",
      "right" : "if (!(mMaxCountdownTimes > 0) && 0 ==\n                        (attempts % LockPatternUtils.FAILED_ATTEMPTS_BEFORE_TIMEOUT))",
      "info" : "IfStatement[4317-4595]:IfStatement[4398-4676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4441-4595]:Block[4522-4676]"
    }, {
      "left" : "long deadline = mLockPatternUtils.setLockoutAttemptDeadline();",
      "right" : "long deadline = mLockPatternUtils.setLockoutAttemptDeadline();",
      "info" : "VariableDeclarationStatement[4463-4525]:VariableDeclarationStatement[4544-4606]"
    }, {
      "left" : "handleAttemptLockout(deadline);",
      "right" : "handleAttemptLockout(deadline);",
      "info" : "ExpressionStatement[4546-4577]:ExpressionStatement[4627-4658]"
    }, {
      "left" : "showWrongPassword();",
      "right" : "showWrongPassword();",
      "info" : "ExpressionStatement[4622-4642]:ExpressionStatement[4703-4723]"
    }, {
      "left" : "resetPasswordText(true /* animate */);",
      "right" : "resetPasswordText(true /* animate */);",
      "info" : "ExpressionStatement[4661-4699]:ExpressionStatement[4742-4780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5041-5734]:Block[5122-5815]"
    }, {
      "left" : "setPasswordEntryEnabled(false);",
      "right" : "setPasswordEntryEnabled(false);",
      "info" : "ExpressionStatement[5051-5082]:ExpressionStatement[5132-5163]"
    }, {
      "left" : "long elapsedRealtime = SystemClock.elapsedRealtime();",
      "right" : "long elapsedRealtime = SystemClock.elapsedRealtime();",
      "info" : "VariableDeclarationStatement[5091-5144]:VariableDeclarationStatement[5172-5225]"
    }, {
      "left" : "new CountDownTimer(elapsedRealtimeDeadline - elapsedRealtime, 1000) {\n\n            @Override\n            public void onTick(long millisUntilFinished) {\n                int secondsRemaining = (int) (millisUntilFinished / 1000);\n                mSecurityMessageDisplay.setMessage(\n                        R.string.kg_too_many_failed_attempts_countdown, true, secondsRemaining);\n            }\n\n            @Override\n            public void onFinish() {\n                mSecurityMessageDisplay.setMessage(\"\", false);\n                resetState();\n            }\n        }.start();",
      "right" : "new CountDownTimer(elapsedRealtimeDeadline - elapsedRealtime, 1000) {\n\n            @Override\n            public void onTick(long millisUntilFinished) {\n                int secondsRemaining = (int) (millisUntilFinished / 1000);\n                mSecurityMessageDisplay.setMessage(\n                        R.string.kg_too_many_failed_attempts_countdown, true, secondsRemaining);\n            }\n\n            @Override\n            public void onFinish() {\n                mSecurityMessageDisplay.setMessage(\"\", false);\n                resetState();\n            }\n        }.start();",
      "info" : "ExpressionStatement[5153-5728]:ExpressionStatement[5234-5809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5303-5542]:Block[5384-5623]"
    }, {
      "left" : "int secondsRemaining = (int) (millisUntilFinished / 1000);",
      "right" : "int secondsRemaining = (int) (millisUntilFinished / 1000);",
      "info" : "VariableDeclarationStatement[5321-5379]:VariableDeclarationStatement[5402-5460]"
    }, {
      "left" : "mSecurityMessageDisplay.setMessage(\n                        R.string.kg_too_many_failed_attempts_countdown, true, secondsRemaining);",
      "right" : "mSecurityMessageDisplay.setMessage(\n                        R.string.kg_too_many_failed_attempts_countdown, true, secondsRemaining);",
      "info" : "ExpressionStatement[5396-5528]:ExpressionStatement[5477-5609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5601-5709]:Block[5682-5790]"
    }, {
      "left" : "mSecurityMessageDisplay.setMessage(\"\", false);",
      "right" : "mSecurityMessageDisplay.setMessage(\"\", false);",
      "info" : "ExpressionStatement[5619-5665]:ExpressionStatement[5700-5746]"
    }, {
      "left" : "resetState();",
      "right" : "resetState();",
      "info" : "ExpressionStatement[5682-5695]:ExpressionStatement[5763-5776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5775-6137]:Block[5856-6218]"
    }, {
      "left" : "String msg = getContext().getString(getWrongPasswordStringId());",
      "right" : "String msg = getContext().getString(getWrongPasswordStringId());",
      "info" : "VariableDeclarationStatement[5785-5849]:VariableDeclarationStatement[5866-5930]"
    }, {
      "left" : "if (mMaxCountdownTimes > 0)",
      "right" : "if (mMaxCountdownTimes > 0)",
      "info" : "IfStatement[5858-6076]:IfStatement[5939-6157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5886-6076]:Block[5967-6157]"
    }, {
      "left" : "int remaining = getRemainingCount();",
      "right" : "int remaining = getRemainingCount();",
      "info" : "VariableDeclarationStatement[5900-5936]:VariableDeclarationStatement[5981-6017]"
    }, {
      "left" : "msg += \" - \" + getContext().getResources().getString(\n                    R.string.kg_remaining_attempts, remaining);",
      "right" : "msg += \" - \" + getContext().getResources().getString(\n                    R.string.kg_remaining_attempts, remaining);",
      "info" : "ExpressionStatement[5949-6066]:ExpressionStatement[6030-6147]"
    }, {
      "left" : "mSecurityMessageDisplay.setMessage(msg, true);",
      "right" : "mSecurityMessageDisplay.setMessage(msg, true);",
      "info" : "ExpressionStatement[6085-6131]:ExpressionStatement[6166-6212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6177-6307]:Block[6258-6388]"
    }, {
      "left" : "return mMaxCountdownTimes\n                - KeyguardUpdateMonitor.getInstance(mContext).getFailedUnlockAttempts();",
      "right" : "return mMaxCountdownTimes\n                - KeyguardUpdateMonitor.getInstance(mContext).getFailedUnlockAttempts();",
      "info" : "ReturnStatement[6187-6301]:ReturnStatement[6268-6382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6381-6444]:Block[6462-6525]"
    }, {
      "left" : "mCallback.userActivity();",
      "right" : "mCallback.userActivity();",
      "info" : "ExpressionStatement[6391-6416]:ExpressionStatement[6472-6497]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6425-6438]:ReturnStatement[6506-6519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6492-6521]:Block[6573-6602]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6502-6515]:ReturnStatement[6583-6596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6563-6571]:Block[6644-6652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6624-6648]:Block[6705-6729]"
    }, {
      "left" : "reset();",
      "right" : "reset();",
      "info" : "ExpressionStatement[6634-6642]:ExpressionStatement[6715-6723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6714-6747]:Block[6795-6828]"
    }, {
      "left" : "return mCallback;",
      "right" : "return mCallback;",
      "info" : "ReturnStatement[6724-6741]:ReturnStatement[6805-6822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6821-7083]:Block[6902-7164]"
    }, {
      "left" : "if (mEnableHaptics)",
      "right" : "if (mEnableHaptics)",
      "info" : "IfStatement[6831-7077]:IfStatement[6912-7158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6851-7077]:Block[6932-7158]"
    }, {
      "left" : "performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY,\n                    HapticFeedbackConstants.FLAG_IGNORE_VIEW_SETTING\n                    | HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING);",
      "right" : "performHapticFeedback(HapticFeedbackConstants.VIRTUAL_KEY,\n                    HapticFeedbackConstants.FLAG_IGNORE_VIEW_SETTING\n                    | HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING);",
      "info" : "ExpressionStatement[6865-7067]:ExpressionStatement[6946-7148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7141-7273]:Block[7222-7354]"
    }, {
      "left" : "KeyguardSecurityViewHelper.\n                showBouncer(mSecurityMessageDisplay, mEcaView, mBouncerFrame, duration);",
      "right" : "KeyguardSecurityViewHelper.\n                showBouncer(mSecurityMessageDisplay, mEcaView, mBouncerFrame, duration);",
      "info" : "ExpressionStatement[7151-7267]:ExpressionStatement[7232-7348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7331-7463]:Block[7412-7544]"
    }, {
      "left" : "KeyguardSecurityViewHelper.\n                hideBouncer(mSecurityMessageDisplay, mEcaView, mBouncerFrame, duration);",
      "right" : "KeyguardSecurityViewHelper.\n                hideBouncer(mSecurityMessageDisplay, mEcaView, mBouncerFrame, duration);",
      "info" : "ExpressionStatement[7341-7457]:ExpressionStatement[7422-7538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7547-7576]:Block[7628-7657]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[7557-7570]:ReturnStatement[7638-7651]"
    } ]
  },
  "interFileMappings" : { }
}