{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1471-1519]:FieldDeclaration[1471-1519]"
    }, {
      "left" : "Generator",
      "right" : "Generator",
      "info" : "TypeDeclaration[1523-1736]:TypeDeclaration[1523-1736]"
    }, {
      "left" : "public String getCode();",
      "right" : "public String getCode();",
      "info" : "MethodDeclaration[1708-1732]:MethodDeclaration[1708-1732]"
    }, {
      "left" : "private static final int SOURCE_EXCERPT_REGION_LENGTH = 5;",
      "right" : "private static final int SOURCE_EXCERPT_REGION_LENGTH = 5;",
      "info" : "FieldDeclaration[1740-1912]:FieldDeclaration[1740-1912]"
    }, {
      "left" : "private final String fileName;",
      "right" : "private final String fileName;",
      "info" : "FieldDeclaration[1916-1946]:FieldDeclaration[1916-1946]"
    }, {
      "left" : "private boolean isExternFile = false;",
      "right" : "private boolean isExternFile = false;",
      "info" : "FieldDeclaration[1949-1986]:FieldDeclaration[1949-1986]"
    }, {
      "left" : "private String originalPath = null;",
      "right" : "private String originalPath = null;",
      "info" : "FieldDeclaration[2346-2381]:FieldDeclaration[2346-2381]"
    }, {
      "left" : "private int[] lineOffsets = null;",
      "right" : "private int[] lineOffsets = null;",
      "info" : "FieldDeclaration[2414-2447]:FieldDeclaration[2414-2447]"
    }, {
      "left" : "private int lastOffset;",
      "right" : "private int lastOffset;",
      "info" : "FieldDeclaration[2650-2673]:FieldDeclaration[2650-2673]"
    }, {
      "left" : "private int lastLine;",
      "right" : "private int lastLine;",
      "info" : "FieldDeclaration[2676-2697]:FieldDeclaration[2676-2697]"
    }, {
      "left" : "private String code = null;",
      "right" : "private String code = null;",
      "info" : "FieldDeclaration[2701-2728]:FieldDeclaration[2701-2728]"
    }, {
      "left" : "public SourceFile(String fileName)",
      "right" : "public SourceFile(String fileName)",
      "info" : "MethodDeclaration[2732-3297]:MethodDeclaration[2732-3297]"
    }, {
      "left" : "public int getLineOffset(int lineno)",
      "right" : "public int getLineOffset(int lineno)",
      "info" : "MethodDeclaration[3301-3659]:MethodDeclaration[3301-3659]"
    }, {
      "left" : "int getNumLines()",
      "right" : "int getNumLines()",
      "info" : "MethodDeclaration[3663-3837]:MethodDeclaration[3663-3837]"
    }, {
      "left" : "private void findLineOffsets()",
      "right" : "private void findLineOffsets()",
      "info" : "MethodDeclaration[3841-4240]:MethodDeclaration[3841-4240]"
    }, {
      "left" : "public String getCode() throws IOException",
      "right" : "public String getCode() throws IOException",
      "info" : "MethodDeclaration[4347-4493]:MethodDeclaration[4347-4493]"
    }, {
      "left" : "public Reader getCodeReader() throws IOException",
      "right" : "public Reader getCodeReader() throws IOException",
      "info" : "MethodDeclaration[4497-4656]:MethodDeclaration[4497-4656]"
    }, {
      "left" : "String getCodeNoCache()",
      "right" : "String getCodeNoCache()",
      "info" : "MethodDeclaration[4660-4727]:MethodDeclaration[4660-4727]"
    }, {
      "left" : "private void setCode(String sourceCode)",
      "right" : "private void setCode(String sourceCode)",
      "info" : "MethodDeclaration[4731-4799]:MethodDeclaration[4731-4799]"
    }, {
      "left" : "public String getOriginalPath()",
      "right" : "public String getOriginalPath()",
      "info" : "MethodDeclaration[4803-4899]:MethodDeclaration[4803-4899]"
    }, {
      "left" : "public void setOriginalPath(String originalPath)",
      "right" : "public void setOriginalPath(String originalPath)",
      "info" : "MethodDeclaration[4903-4995]:MethodDeclaration[4903-4995]"
    }, {
      "left" : "public void clearCachedSource()",
      "right" : "public void clearCachedSource()",
      "info" : "MethodDeclaration[5275-5401]:MethodDeclaration[5275-5401]"
    }, {
      "left" : "boolean hasSourceInMemory()",
      "right" : "boolean hasSourceInMemory()",
      "info" : "MethodDeclaration[5405-5463]:MethodDeclaration[5405-5463]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[5467-5581]:MethodDeclaration[5467-5581]"
    }, {
      "left" : "public boolean isExtern()",
      "right" : "public boolean isExtern()",
      "info" : "MethodDeclaration[5585-5697]:MethodDeclaration[5585-5697]"
    }, {
      "left" : "void setIsExtern(boolean newVal)",
      "right" : "void setIsExtern(boolean newVal)",
      "info" : "MethodDeclaration[5701-5804]:MethodDeclaration[5701-5804]"
    }, {
      "left" : "public Region getRegion(int lineNumber)",
      "right" : "public Region getRegion(int lineNumber)",
      "info" : "MethodDeclaration[7387-8915]:MethodDeclaration[7489-9017]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[8919-8982]:MethodDeclaration[9021-9084]"
    }, {
      "left" : "public static SourceFile fromFile(String fileName, Charset c)",
      "right" : "public static SourceFile fromFile(String fileName, Charset c)",
      "info" : "MethodDeclaration[8986-9097]:MethodDeclaration[9088-9199]"
    }, {
      "left" : "public static SourceFile fromFile(String fileName)",
      "right" : "public static SourceFile fromFile(String fileName)",
      "info" : "MethodDeclaration[9101-9198]:MethodDeclaration[9203-9300]"
    }, {
      "left" : "public static SourceFile fromFile(File file, Charset c)",
      "right" : "public static SourceFile fromFile(File file, Charset c)",
      "info" : "MethodDeclaration[9202-9295]:MethodDeclaration[9304-9397]"
    }, {
      "left" : "public static SourceFile fromFile(File file)",
      "right" : "public static SourceFile fromFile(File file)",
      "info" : "MethodDeclaration[9299-9378]:MethodDeclaration[9401-9480]"
    }, {
      "left" : "public static SourceFile fromCode(String fileName, String code)",
      "right" : "public static SourceFile fromCode(String fileName, String code)",
      "info" : "MethodDeclaration[9382-9493]:MethodDeclaration[9484-9595]"
    }, {
      "left" : "public static SourceFile fromCode(String fileName,\n      String originalPath, String code)",
      "right" : "public static SourceFile fromCode(String fileName,\n      String originalPath, String code)",
      "info" : "MethodDeclaration[9497-9649]:MethodDeclaration[9599-9751]"
    }, {
      "left" : "public static SourceFile fromInputStream(String fileName, InputStream s)\n      throws IOException",
      "right" : "public static SourceFile fromInputStream(String fileName, InputStream s)\n      throws IOException",
      "info" : "MethodDeclaration[9653-9859]:MethodDeclaration[9755-9961]"
    }, {
      "left" : "public static SourceFile fromInputStream(String fileName,\n      String originalPath, InputStream s) throws IOException",
      "right" : "public static SourceFile fromInputStream(String fileName,\n      String originalPath, InputStream s) throws IOException",
      "info" : "MethodDeclaration[9863-10104]:MethodDeclaration[9965-10206]"
    }, {
      "left" : "public static SourceFile fromReader(String fileName, Reader r)\n      throws IOException",
      "right" : "public static SourceFile fromReader(String fileName, Reader r)\n      throws IOException",
      "info" : "MethodDeclaration[10108-10257]:MethodDeclaration[10210-10359]"
    }, {
      "left" : "public static SourceFile fromGenerator(String fileName,\n      Generator generator)",
      "right" : "public static SourceFile fromGenerator(String fileName,\n      Generator generator)",
      "info" : "MethodDeclaration[10261-10396]:MethodDeclaration[10363-10498]"
    }, {
      "left" : "Preloaded",
      "right" : "Preloaded",
      "info" : "TypeDeclaration[10504-10928]:TypeDeclaration[10606-11030]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[10618-10666]:FieldDeclaration[10720-10768]"
    }, {
      "left" : "Preloaded(String fileName, String code)",
      "right" : "Preloaded(String fileName, String code)",
      "info" : "MethodDeclaration[10672-10757]:MethodDeclaration[10774-10859]"
    }, {
      "left" : "Preloaded(String fileName, String originalPath, String code)",
      "right" : "Preloaded(String fileName, String originalPath, String code)",
      "info" : "MethodDeclaration[10763-10924]:MethodDeclaration[10865-11026]"
    }, {
      "left" : "Generated",
      "right" : "Generated",
      "info" : "TypeDeclaration[10932-11827]:TypeDeclaration[11034-11929]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[11090-11138]:FieldDeclaration[11192-11240]"
    }, {
      "left" : "private final Generator generator;",
      "right" : "private final Generator generator;",
      "info" : "FieldDeclaration[11143-11177]:FieldDeclaration[11245-11279]"
    }, {
      "left" : "Generated(String fileName, Generator generator)",
      "right" : "Generated(String fileName, Generator generator)",
      "info" : "MethodDeclaration[11236-11348]:MethodDeclaration[11338-11450]"
    }, {
      "left" : "public synchronized String getCode() throws IOException",
      "right" : "public synchronized String getCode() throws IOException",
      "info" : "MethodDeclaration[11354-11617]:MethodDeclaration[11456-11719]"
    }, {
      "left" : "public void clearCachedSource()",
      "right" : "public void clearCachedSource()",
      "info" : "MethodDeclaration[11743-11823]:MethodDeclaration[11845-11925]"
    }, {
      "left" : "OnDisk",
      "right" : "OnDisk",
      "info" : "TypeDeclaration[11831-14086]:TypeDeclaration[11933-14188]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[12053-12101]:FieldDeclaration[12155-12203]"
    }, {
      "left" : "private final File file;",
      "right" : "private final File file;",
      "info" : "FieldDeclaration[12106-12130]:FieldDeclaration[12208-12232]"
    }, {
      "left" : "protected String inputCharset = Charsets.UTF_8.name();",
      "right" : "protected String inputCharset = Charsets.UTF_8.name();",
      "info" : "FieldDeclaration[12320-12374]:FieldDeclaration[12422-12476]"
    }, {
      "left" : "OnDisk(File file, Charset c)",
      "right" : "OnDisk(File file, Charset c)",
      "info" : "MethodDeclaration[12380-12493]:MethodDeclaration[12482-12595]"
    }, {
      "left" : "OnDisk(File file)",
      "right" : "OnDisk(File file)",
      "info" : "MethodDeclaration[12527-12605]:MethodDeclaration[12629-12707]"
    }, {
      "left" : "public synchronized String getCode() throws IOException",
      "right" : "public synchronized String getCode() throws IOException",
      "info" : "MethodDeclaration[12611-12894]:MethodDeclaration[12713-12996]"
    }, {
      "left" : "public Reader getCodeReader() throws IOException",
      "right" : "public Reader getCodeReader() throws IOException",
      "info" : "MethodDeclaration[12900-13237]:MethodDeclaration[13002-13339]"
    }, {
      "left" : "public void clearCachedSource()",
      "right" : "public void clearCachedSource()",
      "info" : "MethodDeclaration[13343-13423]:MethodDeclaration[13445-13525]"
    }, {
      "left" : "public void setCharset(Charset c)",
      "right" : "public void setCharset(Charset c)",
      "info" : "MethodDeclaration[13429-13743]:MethodDeclaration[13531-13845]"
    }, {
      "left" : "public Charset getCharset()",
      "right" : "public Charset getCharset()",
      "info" : "MethodDeclaration[13749-14082]:MethodDeclaration[13851-14184]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3041-3297]:Block[3041-3297]"
    }, {
      "left" : "if (fileName == null || fileName.isEmpty())",
      "right" : "if (fileName == null || fileName.isEmpty())",
      "info" : "IfStatement[3047-3169]:IfStatement[3047-3169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3091-3169]:Block[3091-3169]"
    }, {
      "left" : "throw new IllegalArgumentException(\"a source must have a name\");",
      "right" : "throw new IllegalArgumentException(\"a source must have a name\");",
      "info" : "ThrowStatement[3099-3163]:ThrowStatement[3099-3163]"
    }, {
      "left" : "this.fileName = fileName;",
      "right" : "this.fileName = fileName;",
      "info" : "ExpressionStatement[3174-3199]:ExpressionStatement[3174-3199]"
    }, {
      "left" : "this.lastOffset = 0;",
      "right" : "this.lastOffset = 0;",
      "info" : "ExpressionStatement[3250-3270]:ExpressionStatement[3250-3270]"
    }, {
      "left" : "this.lastLine = 1;",
      "right" : "this.lastLine = 1;",
      "info" : "ExpressionStatement[3275-3293]:ExpressionStatement[3275-3293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3350-3659]:Block[3350-3659]"
    }, {
      "left" : "if (lineOffsets == null)",
      "right" : "if (lineOffsets == null)",
      "info" : "IfStatement[3356-3413]:IfStatement[3356-3413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3381-3413]:Block[3381-3413]"
    }, {
      "left" : "findLineOffsets();",
      "right" : "findLineOffsets();",
      "info" : "ExpressionStatement[3389-3407]:ExpressionStatement[3389-3407]"
    }, {
      "left" : "if (lineno < 1 || lineno > lineOffsets.length)",
      "right" : "if (lineno < 1 || lineno > lineOffsets.length)",
      "info" : "IfStatement[3418-3619]:IfStatement[3418-3619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3465-3619]:Block[3465-3619]"
    }, {
      "left" : "throw new IllegalArgumentException(\n          \"Expected line number between 1 and \" + lineOffsets.length +\n          \"\\nActual: \" + lineno);",
      "right" : "throw new IllegalArgumentException(\n          \"Expected line number between 1 and \" + lineOffsets.length +\n          \"\\nActual: \" + lineno);",
      "info" : "ThrowStatement[3473-3613]:ThrowStatement[3473-3613]"
    }, {
      "left" : "return lineOffsets[lineno - 1];",
      "right" : "return lineOffsets[lineno - 1];",
      "info" : "ReturnStatement[3624-3655]:ReturnStatement[3624-3655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3739-3837]:Block[3739-3837]"
    }, {
      "left" : "if (lineOffsets == null)",
      "right" : "if (lineOffsets == null)",
      "info" : "IfStatement[3745-3802]:IfStatement[3745-3802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3770-3802]:Block[3770-3802]"
    }, {
      "left" : "findLineOffsets();",
      "right" : "findLineOffsets();",
      "info" : "ExpressionStatement[3778-3796]:ExpressionStatement[3778-3796]"
    }, {
      "left" : "return lineOffsets.length;",
      "right" : "return lineOffsets.length;",
      "info" : "ReturnStatement[3807-3833]:ReturnStatement[3807-3833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3872-4240]:Block[3872-4240]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3878-4236]:TryStatement[3878-4236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3882-4148]:Block[3882-4148]"
    }, {
      "left" : "String[] sourceLines = getCode().split(\"\\n\");",
      "right" : "String[] sourceLines = getCode().split(\"\\n\");",
      "info" : "VariableDeclarationStatement[3890-3935]:VariableDeclarationStatement[3890-3935]"
    }, {
      "left" : "lineOffsets = new int[sourceLines.length];",
      "right" : "lineOffsets = new int[sourceLines.length];",
      "info" : "ExpressionStatement[3942-3984]:ExpressionStatement[3942-3984]"
    }, {
      "left" : "for (int ii = 1; ii < sourceLines.length; ++ii)",
      "right" : "for (int ii = 1; ii < sourceLines.length; ++ii)",
      "info" : "ForStatement[3991-4142]:ForStatement[3991-4142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4039-4142]:Block[4039-4142]"
    }, {
      "left" : "lineOffsets[ii] =\n            lineOffsets[ii - 1] + sourceLines[ii - 1].length() + 1;",
      "right" : "lineOffsets[ii] =\n            lineOffsets[ii - 1] + sourceLines[ii - 1].length() + 1;",
      "info" : "ExpressionStatement[4049-4134]:ExpressionStatement[4049-4134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4171-4236]:Block[4171-4236]"
    }, {
      "left" : "lineOffsets = new int[1];",
      "right" : "lineOffsets = new int[1];",
      "info" : "ExpressionStatement[4179-4204]:ExpressionStatement[4179-4204]"
    }, {
      "left" : "lineOffsets[0] = 0;",
      "right" : "lineOffsets[0] = 0;",
      "info" : "ExpressionStatement[4211-4230]:ExpressionStatement[4211-4230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4471-4493]:Block[4471-4493]"
    }, {
      "left" : "return code;",
      "right" : "return code;",
      "info" : "ReturnStatement[4477-4489]:ReturnStatement[4477-4489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4611-4656]:Block[4611-4656]"
    }, {
      "left" : "return new StringReader(getCode());",
      "right" : "return new StringReader(getCode());",
      "info" : "ReturnStatement[4617-4652]:ReturnStatement[4617-4652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4705-4727]:Block[4705-4727]"
    }, {
      "left" : "return code;",
      "right" : "return code;",
      "info" : "ReturnStatement[4711-4723]:ReturnStatement[4711-4723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4771-4799]:Block[4771-4799]"
    }, {
      "left" : "code = sourceCode;",
      "right" : "code = sourceCode;",
      "info" : "ExpressionStatement[4777-4795]:ExpressionStatement[4777-4795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4835-4899]:Block[4835-4899]"
    }, {
      "left" : "return originalPath != null ? originalPath : fileName;",
      "right" : "return originalPath != null ? originalPath : fileName;",
      "info" : "ReturnStatement[4841-4895]:ReturnStatement[4841-4895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4952-4995]:Block[4952-4995]"
    }, {
      "left" : "this.originalPath = originalPath;",
      "right" : "this.originalPath = originalPath;",
      "info" : "ExpressionStatement[4958-4991]:ExpressionStatement[4958-4991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5307-5401]:Block[5307-5401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5433-5463]:Block[5433-5463]"
    }, {
      "left" : "return code != null;",
      "right" : "return code != null;",
      "info" : "ReturnStatement[5439-5459]:ReturnStatement[5439-5459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5555-5581]:Block[5555-5581]"
    }, {
      "left" : "return fileName;",
      "right" : "return fileName;",
      "info" : "ReturnStatement[5561-5577]:ReturnStatement[5561-5577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5667-5697]:Block[5667-5697]"
    }, {
      "left" : "return isExternFile;",
      "right" : "return isExternFile;",
      "info" : "ReturnStatement[5673-5693]:ReturnStatement[5673-5693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5772-5804]:Block[5772-5804]"
    }, {
      "left" : "isExternFile = newVal;",
      "right" : "isExternFile = newVal;",
      "info" : "ExpressionStatement[5778-5800]:ExpressionStatement[5778-5800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7873-8915]:Block[7975-9017]"
    }, {
      "left" : "String js = \"\";",
      "right" : "String js = \"\";",
      "info" : "VariableDeclarationStatement[7879-7894]:VariableDeclarationStatement[7981-7996]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7899-7981]:TryStatement[8001-8083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7903-7932]:Block[8005-8034]"
    }, {
      "left" : "js = getCode();",
      "right" : "js = getCode();",
      "info" : "ExpressionStatement[7911-7926]:ExpressionStatement[8013-8028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7955-7981]:Block[8057-8083]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7963-7975]:ReturnStatement[8065-8077]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[7986-7998]:VariableDeclarationStatement[8088-8100]"
    }, {
      "left" : "int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);",
      "right" : "int startLine = Math.max(1,\n        lineNumber - (SOURCE_EXCERPT_REGION_LENGTH + 1) / 2 + 1);",
      "info" : "VariableDeclarationStatement[8003-8096]:VariableDeclarationStatement[8105-8198]"
    }, {
      "left" : "for (int n = 1; n < startLine; n++)",
      "right" : "for (int n = 1; n < startLine; n++)",
      "info" : "ForStatement[8101-8262]:ForStatement[8203-8364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8137-8262]:Block[8239-8364]"
    }, {
      "left" : "int nextpos = js.indexOf('\\n', pos);",
      "right" : "int nextpos = js.indexOf('\\n', pos);",
      "info" : "VariableDeclarationStatement[8145-8181]:VariableDeclarationStatement[8247-8283]"
    }, {
      "left" : "if (nextpos == -1)",
      "right" : "if (nextpos == -1)",
      "info" : "IfStatement[8188-8231]:IfStatement[8290-8333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8207-8231]:Block[8309-8333]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8217-8223]:BreakStatement[8319-8325]"
    }, {
      "left" : "pos = nextpos + 1;",
      "right" : "pos = nextpos + 1;",
      "info" : "ExpressionStatement[8238-8256]:ExpressionStatement[8340-8358]"
    }, {
      "left" : "int end = pos;",
      "right" : "int end = pos;",
      "info" : "VariableDeclarationStatement[8267-8281]:VariableDeclarationStatement[8369-8383]"
    }, {
      "left" : "int endLine = startLine;",
      "right" : "int endLine = startLine;",
      "info" : "VariableDeclarationStatement[8286-8310]:VariableDeclarationStatement[8388-8412]"
    }, {
      "left" : "for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++)",
      "right" : "for (int n = 0; n < SOURCE_EXCERPT_REGION_LENGTH; n++, endLine++)",
      "info" : "ForStatement[8315-8482]:ForStatement[8417-8584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8381-8482]:Block[8483-8584]"
    }, {
      "left" : "end = js.indexOf('\\n', end);",
      "right" : "end = js.indexOf('\\n', end);",
      "info" : "ExpressionStatement[8389-8417]:ExpressionStatement[8491-8519]"
    }, {
      "left" : "if (end == -1)",
      "right" : "if (end == -1)",
      "info" : "IfStatement[8424-8463]:IfStatement[8526-8565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8439-8463]:Block[8541-8565]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8449-8455]:BreakStatement[8551-8557]"
    }, {
      "left" : "end++;",
      "right" : "end++;",
      "info" : "ExpressionStatement[8470-8476]:ExpressionStatement[8572-8578]"
    }, {
      "left" : "if (lineNumber >= endLine)",
      "right" : "if (lineNumber >= endLine)",
      "info" : "IfStatement[8487-8540]:IfStatement[8589-8642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8514-8540]:Block[8616-8642]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8522-8534]:ReturnStatement[8624-8636]"
    }, {
      "left" : "if (end == -1)",
      "right" : "if (end == -1)",
      "info" : "IfStatement[8545-8911]:IfStatement[8647-9013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8560-8823]:Block[8662-8925]"
    }, {
      "left" : "int last = js.length() - 1;",
      "right" : "int last = js.length() - 1;",
      "info" : "VariableDeclarationStatement[8568-8595]:VariableDeclarationStatement[8670-8697]"
    }, {
      "left" : "if (js.charAt(last) == '\\n')",
      "right" : "if (js.charAt(last) == '\\n')",
      "info" : "IfStatement[8602-8817]:IfStatement[8704-8919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8631-8730]:Block[8733-8832]"
    }, {
      "left" : "return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));",
      "right" : "return\n            new SimpleRegion(startLine, endLine, js.substring(pos, last));",
      "info" : "ReturnStatement[8641-8722]:ReturnStatement[8743-8824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8736-8817]:Block[8838-8919]"
    }, {
      "left" : "return new SimpleRegion(startLine, endLine, js.substring(pos));",
      "right" : "return new SimpleRegion(startLine, endLine, js.substring(pos));",
      "info" : "ReturnStatement[8746-8809]:ReturnStatement[8848-8911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8829-8911]:Block[8931-9013]"
    }, {
      "left" : "return new SimpleRegion(startLine, endLine, js.substring(pos, end));",
      "right" : "return new SimpleRegion(startLine, endLine, js.substring(pos, end));",
      "info" : "ReturnStatement[8837-8905]:ReturnStatement[8939-9007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8956-8982]:Block[9058-9084]"
    }, {
      "left" : "return fileName;",
      "right" : "return fileName;",
      "info" : "ReturnStatement[8962-8978]:ReturnStatement[9064-9080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9048-9097]:Block[9150-9199]"
    }, {
      "left" : "return fromFile(new File(fileName), c);",
      "right" : "return fromFile(new File(fileName), c);",
      "info" : "ReturnStatement[9054-9093]:ReturnStatement[9156-9195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9152-9198]:Block[9254-9300]"
    }, {
      "left" : "return fromFile(new File(fileName));",
      "right" : "return fromFile(new File(fileName));",
      "info" : "ReturnStatement[9158-9194]:ReturnStatement[9260-9296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9258-9295]:Block[9360-9397]"
    }, {
      "left" : "return new OnDisk(file, c);",
      "right" : "return new OnDisk(file, c);",
      "info" : "ReturnStatement[9264-9291]:ReturnStatement[9366-9393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9344-9378]:Block[9446-9480]"
    }, {
      "left" : "return new OnDisk(file);",
      "right" : "return new OnDisk(file);",
      "info" : "ReturnStatement[9350-9374]:ReturnStatement[9452-9476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9446-9493]:Block[9548-9595]"
    }, {
      "left" : "return new Preloaded(fileName, code);",
      "right" : "return new Preloaded(fileName, code);",
      "info" : "ReturnStatement[9452-9489]:ReturnStatement[9554-9591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9588-9649]:Block[9690-9751]"
    }, {
      "left" : "return new Preloaded(fileName, originalPath, code);",
      "right" : "return new Preloaded(fileName, originalPath, code);",
      "info" : "ReturnStatement[9594-9645]:ReturnStatement[9696-9747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9751-9859]:Block[9853-9961]"
    }, {
      "left" : "return fromCode(fileName,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "right" : "return fromCode(fileName,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "info" : "ReturnStatement[9757-9855]:ReturnStatement[9859-9957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9982-10104]:Block[10084-10206]"
    }, {
      "left" : "return fromCode(fileName, originalPath,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "right" : "return fromCode(fileName, originalPath,\n        CharStreams.toString(new InputStreamReader(s, Charsets.UTF_8)));",
      "info" : "ReturnStatement[9988-10100]:ReturnStatement[10090-10202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10196-10257]:Block[10298-10359]"
    }, {
      "left" : "return fromCode(fileName, CharStreams.toString(r));",
      "right" : "return fromCode(fileName, CharStreams.toString(r));",
      "info" : "ReturnStatement[10202-10253]:ReturnStatement[10304-10355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10344-10396]:Block[10446-10498]"
    }, {
      "left" : "return new Generated(fileName, generator);",
      "right" : "return new Generated(fileName, generator);",
      "info" : "ReturnStatement[10350-10392]:ReturnStatement[10452-10494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10712-10757]:Block[10814-10859]"
    }, {
      "left" : "this(fileName, fileName, code);",
      "right" : "this(fileName, fileName, code);",
      "info" : "ConstructorInvocation[10720-10751]:ConstructorInvocation[10822-10853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10824-10924]:Block[10926-11026]"
    }, {
      "left" : "super(fileName);",
      "right" : "super(fileName);",
      "info" : "SuperConstructorInvocation[10832-10848]:SuperConstructorInvocation[10934-10950]"
    }, {
      "left" : "super.setOriginalPath(originalPath);",
      "right" : "super.setOriginalPath(originalPath);",
      "info" : "ExpressionStatement[10855-10891]:ExpressionStatement[10957-10993]"
    }, {
      "left" : "super.setCode(code);",
      "right" : "super.setCode(code);",
      "info" : "ExpressionStatement[10898-10918]:ExpressionStatement[11000-11020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11284-11348]:Block[11386-11450]"
    }, {
      "left" : "super(fileName);",
      "right" : "super(fileName);",
      "info" : "SuperConstructorInvocation[11292-11308]:SuperConstructorInvocation[11394-11410]"
    }, {
      "left" : "this.generator = generator;",
      "right" : "this.generator = generator;",
      "info" : "ExpressionStatement[11315-11342]:ExpressionStatement[11417-11444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11424-11617]:Block[11526-11719]"
    }, {
      "left" : "String cachedCode = super.getCode();",
      "right" : "String cachedCode = super.getCode();",
      "info" : "VariableDeclarationStatement[11432-11468]:VariableDeclarationStatement[11534-11570]"
    }, {
      "left" : "if (cachedCode == null)",
      "right" : "if (cachedCode == null)",
      "info" : "IfStatement[11476-11586]:IfStatement[11578-11688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11500-11586]:Block[11602-11688]"
    }, {
      "left" : "cachedCode = generator.getCode();",
      "right" : "cachedCode = generator.getCode();",
      "info" : "ExpressionStatement[11510-11543]:ExpressionStatement[11612-11645]"
    }, {
      "left" : "super.setCode(cachedCode);",
      "right" : "super.setCode(cachedCode);",
      "info" : "ExpressionStatement[11552-11578]:ExpressionStatement[11654-11680]"
    }, {
      "left" : "return cachedCode;",
      "right" : "return cachedCode;",
      "info" : "ReturnStatement[11593-11611]:ReturnStatement[11695-11713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11789-11823]:Block[11891-11925]"
    }, {
      "left" : "super.setCode(null);",
      "right" : "super.setCode(null);",
      "info" : "ExpressionStatement[11797-11817]:ExpressionStatement[11899-11919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12409-12493]:Block[12511-12595]"
    }, {
      "left" : "this(file);",
      "right" : "this(file);",
      "info" : "ConstructorInvocation[12417-12428]:ConstructorInvocation[12519-12530]"
    }, {
      "left" : "if (c != null)",
      "right" : "if (c != null)",
      "info" : "IfStatement[12435-12487]:IfStatement[12537-12589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12450-12487]:Block[12552-12589]"
    }, {
      "left" : "this.setCharset(c);",
      "right" : "this.setCharset(c);",
      "info" : "ExpressionStatement[12460-12479]:ExpressionStatement[12562-12581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12545-12605]:Block[12647-12707]"
    }, {
      "left" : "super(file.getPath());",
      "right" : "super(file.getPath());",
      "info" : "SuperConstructorInvocation[12553-12575]:SuperConstructorInvocation[12655-12677]"
    }, {
      "left" : "this.file = file;",
      "right" : "this.file = file;",
      "info" : "ExpressionStatement[12582-12599]:ExpressionStatement[12684-12701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12681-12894]:Block[12783-12996]"
    }, {
      "left" : "String cachedCode = super.getCode();",
      "right" : "String cachedCode = super.getCode();",
      "info" : "VariableDeclarationStatement[12689-12725]:VariableDeclarationStatement[12791-12827]"
    }, {
      "left" : "if (cachedCode == null)",
      "right" : "if (cachedCode == null)",
      "info" : "IfStatement[12733-12863]:IfStatement[12835-12965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12757-12863]:Block[12859-12965]"
    }, {
      "left" : "cachedCode = Files.toString(file, this.getCharset());",
      "right" : "cachedCode = Files.toString(file, this.getCharset());",
      "info" : "ExpressionStatement[12767-12820]:ExpressionStatement[12869-12922]"
    }, {
      "left" : "super.setCode(cachedCode);",
      "right" : "super.setCode(cachedCode);",
      "info" : "ExpressionStatement[12829-12855]:ExpressionStatement[12931-12957]"
    }, {
      "left" : "return cachedCode;",
      "right" : "return cachedCode;",
      "info" : "ReturnStatement[12870-12888]:ReturnStatement[12972-12990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13034-13237]:Block[13136-13339]"
    }, {
      "left" : "if (hasSourceInMemory())",
      "right" : "if (hasSourceInMemory())",
      "info" : "IfStatement[13042-13231]:IfStatement[13144-13333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13067-13114]:Block[13169-13216]"
    }, {
      "left" : "return super.getCodeReader();",
      "right" : "return super.getCodeReader();",
      "info" : "ReturnStatement[13077-13106]:ReturnStatement[13179-13208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13120-13231]:Block[13222-13333]"
    }, {
      "left" : "return new FileReader(file);",
      "right" : "return new FileReader(file);",
      "info" : "ReturnStatement[13195-13223]:ReturnStatement[13297-13325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13389-13423]:Block[13491-13525]"
    }, {
      "left" : "super.setCode(null);",
      "right" : "super.setCode(null);",
      "info" : "ExpressionStatement[13397-13417]:ExpressionStatement[13499-13519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13705-13743]:Block[13807-13845]"
    }, {
      "left" : "inputCharset = c.name();",
      "right" : "inputCharset = c.name();",
      "info" : "ExpressionStatement[13713-13737]:ExpressionStatement[13815-13839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14031-14082]:Block[14133-14184]"
    }, {
      "left" : "return Charset.forName(inputCharset);",
      "right" : "return Charset.forName(inputCharset);",
      "info" : "ReturnStatement[14039-14076]:ReturnStatement[14141-14178]"
    } ]
  },
  "interFileMappings" : { }
}