{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ContinuedFraction",
      "right" : "ContinuedFraction",
      "info" : "TypeDeclaration[1042-7378]:TypeDeclaration[1042-6313]"
    }, {
      "left" : "private static final double DEFAULT_EPSILON = 10e-9;",
      "right" : "private static final double DEFAULT_EPSILON = 10e-9;",
      "info" : "FieldDeclaration[1420-1516]:FieldDeclaration[1420-1516]"
    }, {
      "left" : "protected ContinuedFraction()",
      "right" : "protected ContinuedFraction()",
      "info" : "MethodDeclaration[1522-1620]:MethodDeclaration[1522-1620]"
    }, {
      "left" : "protected abstract double getA(int n, double x);",
      "right" : "protected abstract double getA(int n, double x);",
      "info" : "MethodDeclaration[1626-1971]:MethodDeclaration[1626-1971]"
    }, {
      "left" : "protected abstract double getB(int n, double x);",
      "right" : "protected abstract double getB(int n, double x);",
      "info" : "MethodDeclaration[1977-2322]:MethodDeclaration[1977-2322]"
    }, {
      "left" : "public double evaluate(double x)",
      "right" : "public double evaluate(double x)",
      "info" : "MethodDeclaration[2328-2681]:MethodDeclaration[2328-2681]"
    }, {
      "left" : "public double evaluate(double x, double epsilon)",
      "right" : "public double evaluate(double x, double epsilon)",
      "info" : "MethodDeclaration[2687-3093]:MethodDeclaration[2687-3093]"
    }, {
      "left" : "public double evaluate(double x, int maxIterations)",
      "right" : "public double evaluate(double x, int maxIterations)",
      "info" : "MethodDeclaration[3099-3525]:MethodDeclaration[3099-3525]"
    }, {
      "left" : "public double evaluate(double x, double epsilon, int maxIterations)",
      "right" : "public double evaluate(double x, double epsilon, int maxIterations)",
      "info" : "MethodDeclaration[3531-7375]:MethodDeclaration[3531-6310]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1374-1380]:Modifier[1374-1380]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1381-1389]:Modifier[1381-1389]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1390-1395]:TYPE_DECLARATION_KIND[1390-1395]"
    }, {
      "left" : "ContinuedFraction",
      "right" : "ContinuedFraction",
      "info" : "SimpleName[1396-1413]:SimpleName[1396-1413]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1566-1575]:Modifier[1566-1575]"
    }, {
      "left" : "ContinuedFraction",
      "right" : "ContinuedFraction",
      "info" : "SimpleName[1576-1593]:SimpleName[1576-1593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1596-1620]:Block[1596-1620]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[1606-1614]:SuperConstructorInvocation[1606-1614]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1923-1932]:Modifier[1923-1932]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1933-1941]:Modifier[1933-1941]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1942-1948]:PrimitiveType[1942-1948]"
    }, {
      "left" : "getA",
      "right" : "getA",
      "info" : "SimpleName[1949-1953]:SimpleName[1949-1953]"
    }, {
      "left" : "int n",
      "right" : "int n",
      "info" : "SingleVariableDeclaration[1954-1959]:SingleVariableDeclaration[1954-1959]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[1961-1969]:SingleVariableDeclaration[1961-1969]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2274-2283]:Modifier[2274-2283]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2284-2292]:Modifier[2284-2292]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[2293-2299]:PrimitiveType[2293-2299]"
    }, {
      "left" : "getB",
      "right" : "getB",
      "info" : "SimpleName[2300-2304]:SimpleName[2300-2304]"
    }, {
      "left" : "int n",
      "right" : "int n",
      "info" : "SingleVariableDeclaration[2305-2310]:SingleVariableDeclaration[2305-2310]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[2312-2320]:SingleVariableDeclaration[2312-2320]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2577-2583]:Modifier[2577-2583]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[2584-2590]:PrimitiveType[2584-2590]"
    }, {
      "left" : "evaluate",
      "right" : "evaluate",
      "info" : "SimpleName[2591-2599]:SimpleName[2591-2599]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[2600-2608]:SingleVariableDeclaration[2600-2608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2610-2681]:Block[2610-2681]"
    }, {
      "left" : "return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",
      "right" : "return evaluate(x, DEFAULT_EPSILON, Integer.MAX_VALUE);",
      "info" : "ReturnStatement[2620-2675]:ReturnStatement[2620-2675]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2981-2987]:Modifier[2981-2987]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[2988-2994]:PrimitiveType[2988-2994]"
    }, {
      "left" : "evaluate",
      "right" : "evaluate",
      "info" : "SimpleName[2995-3003]:SimpleName[2995-3003]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[3004-3012]:SingleVariableDeclaration[3004-3012]"
    }, {
      "left" : "double epsilon",
      "right" : "double epsilon",
      "info" : "SingleVariableDeclaration[3014-3028]:SingleVariableDeclaration[3014-3028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3030-3093]:Block[3030-3093]"
    }, {
      "left" : "return evaluate(x, epsilon, Integer.MAX_VALUE);",
      "right" : "return evaluate(x, epsilon, Integer.MAX_VALUE);",
      "info" : "ReturnStatement[3040-3087]:ReturnStatement[3040-3087]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3406-3412]:Modifier[3406-3412]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[3413-3419]:PrimitiveType[3413-3419]"
    }, {
      "left" : "evaluate",
      "right" : "evaluate",
      "info" : "SimpleName[3420-3428]:SimpleName[3420-3428]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[3429-3437]:SingleVariableDeclaration[3429-3437]"
    }, {
      "left" : "int maxIterations",
      "right" : "int maxIterations",
      "info" : "SingleVariableDeclaration[3439-3456]:SingleVariableDeclaration[3439-3456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3458-3525]:Block[3458-3525]"
    }, {
      "left" : "return evaluate(x, DEFAULT_EPSILON, maxIterations);",
      "right" : "return evaluate(x, DEFAULT_EPSILON, maxIterations);",
      "info" : "ReturnStatement[3468-3519]:ReturnStatement[3468-3519]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4575-4581]:Modifier[4575-4581]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[4582-4588]:PrimitiveType[4582-4588]"
    }, {
      "left" : "evaluate",
      "right" : "evaluate",
      "info" : "SimpleName[4589-4597]:SimpleName[4589-4597]"
    }, {
      "left" : "double x",
      "right" : "double x",
      "info" : "SingleVariableDeclaration[4598-4606]:SingleVariableDeclaration[4598-4606]"
    }, {
      "left" : "double epsilon",
      "right" : "double epsilon",
      "info" : "SingleVariableDeclaration[4608-4622]:SingleVariableDeclaration[4608-4622]"
    }, {
      "left" : "int maxIterations",
      "right" : "int maxIterations",
      "info" : "SingleVariableDeclaration[4624-4641]:SingleVariableDeclaration[4624-4641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4643-7375]:Block[4643-6310]"
    }, {
      "left" : "final double small = 1e-50;",
      "right" : "final double small = 1e-50;",
      "info" : "VariableDeclarationStatement[4653-4680]:VariableDeclarationStatement[4653-4680]"
    }, {
      "left" : "double hPrev = getA(0, x);",
      "right" : "double hPrev = getA(0, x);",
      "info" : "VariableDeclarationStatement[4689-4715]:VariableDeclarationStatement[4689-4715]"
    }, {
      "left" : "if (Precision.equals(hPrev, 0.0, small))",
      "right" : "if (Precision.equals(hPrev, 0.0, small))",
      "info" : "IfStatement[4795-4874]:IfStatement[4795-4874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4836-4874]:Block[4836-4874]"
    }, {
      "left" : "hPrev = small;",
      "right" : "hPrev = small;",
      "info" : "ExpressionStatement[4850-4864]:ExpressionStatement[4850-4864]"
    }, {
      "left" : "int n = 1;",
      "right" : "int n = 1;",
      "info" : "VariableDeclarationStatement[4884-4894]:VariableDeclarationStatement[4884-4894]"
    }, {
      "left" : "double dPrev = 0.0;",
      "right" : "double dPrev = 0.0;",
      "info" : "VariableDeclarationStatement[4903-4922]:VariableDeclarationStatement[4903-4922]"
    }, {
      "left" : "double cPrev = hPrev;",
      "right" : "double cPrev = hPrev;",
      "info" : "VariableDeclarationStatement[4981-5002]:VariableDeclarationStatement[4931-4952]"
    }, {
      "left" : "double hN = hPrev;",
      "right" : "double hN = hPrev;",
      "info" : "VariableDeclarationStatement[5011-5029]:VariableDeclarationStatement[4961-4979]"
    }, {
      "left" : "while (n < maxIterations)",
      "right" : "while (n < maxIterations)",
      "info" : "WhileStatement[5039-7137]:WhileStatement[4989-6072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5065-7137]:Block[5015-6072]"
    }, {
      "left" : "final double a = getA(n, x);",
      "right" : "final double a = getA(n, x);",
      "info" : "VariableDeclarationStatement[5079-5107]:VariableDeclarationStatement[5029-5057]"
    }, {
      "left" : "final double b = getB(n, x);",
      "right" : "final double b = getB(n, x);",
      "info" : "VariableDeclarationStatement[5120-5148]:VariableDeclarationStatement[5070-5098]"
    }, {
      "left" : "b * dPrev",
      "right" : "b * dPrev",
      "info" : "InfixExpression[5227-5236]:InfixExpression[5128-5137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5855-6036]:Block[5189-5232]"
    }, {
      "left" : "cN",
      "right" : "dN",
      "info" : "SimpleName[5881-5883]:SimpleName[5207-5209]"
    }, {
      "left" : "cN = hPrev / lastScaleFactor + (b / scaleFactor * p0);",
      "right" : "dN = small;",
      "info" : "ExpressionStatement[5881-5935]:ExpressionStatement[5207-5218]"
    }, {
      "left" : "q2",
      "right" : "cN",
      "info" : "SimpleName[5960-5962]:SimpleName[5340-5342]"
    }, {
      "left" : "q2 = q1 / lastScaleFactor + (b / scaleFactor * dPrev);",
      "right" : "cN = small;",
      "info" : "ExpressionStatement[5960-6014]:ExpressionStatement[5340-5351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6054-6235]:Block[5189-5232]"
    }, {
      "left" : "cN",
      "right" : "dN",
      "info" : "SimpleName[6080-6082]:SimpleName[5207-5209]"
    }, {
      "left" : "cN = (a / scaleFactor * hPrev) + p0 / lastScaleFactor;",
      "right" : "dN = small;",
      "info" : "ExpressionStatement[6080-6134]:ExpressionStatement[5207-5218]"
    }, {
      "left" : "q2",
      "right" : "cN",
      "info" : "SimpleName[6159-6161]:SimpleName[5340-5342]"
    }, {
      "left" : "q2 = (a / scaleFactor * q1) + dPrev / lastScaleFactor;",
      "right" : "cN = small;",
      "info" : "ExpressionStatement[6159-6213]:ExpressionStatement[5340-5351]"
    }, {
      "left" : "if (Double.isInfinite(hN))",
      "right" : "if (Double.isInfinite(hN))",
      "info" : "IfStatement[6496-6693]:IfStatement[5481-5678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6523-6693]:Block[5508-5678]"
    }, {
      "left" : "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,\n                                               x);",
      "right" : "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,\n                                               x);",
      "info" : "ThrowStatement[6541-6679]:ThrowStatement[5526-5664]"
    }, {
      "left" : "if (Double.isNaN(hN))",
      "right" : "if (Double.isNaN(hN))",
      "info" : "IfStatement[6706-6893]:IfStatement[5691-5878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6728-6893]:Block[5713-5878]"
    }, {
      "left" : "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n                                               x);",
      "right" : "throw new ConvergenceException(LocalizedFormats.CONTINUED_FRACTION_NAN_DIVERGENCE,\n                                               x);",
      "info" : "ThrowStatement[6746-6879]:ThrowStatement[5731-5864]"
    }, {
      "left" : "if (FastMath.abs(deltaN - 1.0) < epsilon)",
      "right" : "if (FastMath.abs(deltaN - 1.0) < epsilon)",
      "info" : "IfStatement[6907-6987]:IfStatement[5892-5972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6949-6987]:Block[5934-5972]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[6967-6973]:BreakStatement[5952-5958]"
    }, {
      "left" : "dPrev = q1;",
      "right" : "dPrev = dN;",
      "info" : "ExpressionStatement[7001-7012]:ExpressionStatement[5986-5997]"
    }, {
      "left" : "q1",
      "right" : "dN",
      "info" : "SimpleName[7009-7011]:SimpleName[5994-5996]"
    }, {
      "left" : "n++;",
      "right" : "n++;",
      "info" : "ExpressionStatement[7123-7127]:ExpressionStatement[6058-6062]"
    }, {
      "left" : "if (n >= maxIterations)",
      "right" : "if (n >= maxIterations)",
      "info" : "IfStatement[7147-7349]:IfStatement[6082-6284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7171-7349]:Block[6106-6284]"
    }, {
      "left" : "throw new MaxCountExceededException(LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION,\n                                                maxIterations, x);",
      "right" : "throw new MaxCountExceededException(LocalizedFormats.NON_CONVERGENT_CONTINUED_FRACTION,\n                                                maxIterations, x);",
      "info" : "ThrowStatement[7185-7339]:ThrowStatement[6120-6274]"
    }, {
      "left" : "return hN;",
      "right" : "return hN;",
      "info" : "ReturnStatement[7359-7369]:ReturnStatement[6294-6304]"
    } ]
  },
  "interFileMappings" : { }
}