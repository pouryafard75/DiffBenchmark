{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[287-335]:FieldDeclaration[287-335]"
    }, {
      "left" : "private final static String[] NO_STRINGS = new String[0];",
      "right" : "private final static String[] NO_STRINGS = new String[0];",
      "info" : "FieldDeclaration[341-398]:FieldDeclaration[341-398]"
    }, {
      "left" : "private final static JavaType[] NO_TYPES = new JavaType[0];",
      "right" : "private final static JavaType[] NO_TYPES = new JavaType[0];",
      "info" : "FieldDeclaration[404-463]:FieldDeclaration[404-463]"
    }, {
      "left" : "private final static TypeBindings EMPTY = new TypeBindings(NO_STRINGS, NO_TYPES, null);",
      "right" : "private final static TypeBindings EMPTY = new TypeBindings(NO_STRINGS, NO_TYPES, null);",
      "info" : "FieldDeclaration[469-556]:FieldDeclaration[469-556]"
    }, {
      "left" : "private final String[] _names;",
      "right" : "private final String[] _names;",
      "info" : "FieldDeclaration[667-757]:FieldDeclaration[667-757]"
    }, {
      "left" : "private final JavaType[] _types;",
      "right" : "private final JavaType[] _types;",
      "info" : "FieldDeclaration[763-839]:FieldDeclaration[763-839]"
    }, {
      "left" : "private final String[] _unboundVariables;",
      "right" : "private final String[] _unboundVariables;",
      "info" : "FieldDeclaration[845-982]:FieldDeclaration[845-982]"
    }, {
      "left" : "private final int _hashCode;",
      "right" : "private final int _hashCode;",
      "info" : "FieldDeclaration[992-1020]:FieldDeclaration[992-1020]"
    }, {
      "left" : "private TypeBindings(String[] names, JavaType[] types, String[] uvars)",
      "right" : "private TypeBindings(String[] names, JavaType[] types, String[] uvars)",
      "info" : "MethodDeclaration[1222-1771]:MethodDeclaration[1222-1771]"
    }, {
      "left" : "public static TypeBindings emptyBindings()",
      "right" : "public static TypeBindings emptyBindings()",
      "info" : "MethodDeclaration[1777-1849]:MethodDeclaration[1777-1849]"
    }, {
      "left" : "protected Object readResolve()",
      "right" : "protected Object readResolve()",
      "info" : "MethodDeclaration[1939-2090]:MethodDeclaration[1939-2090]"
    }, {
      "left" : "public static TypeBindings create(Class<?> erasedType, List<JavaType> typeList)",
      "right" : "public static TypeBindings create(Class<?> erasedType, List<JavaType> typeList)",
      "info" : "MethodDeclaration[2096-2495]:MethodDeclaration[2096-2495]"
    }, {
      "left" : "public static TypeBindings create(Class<?> erasedType, JavaType[] types)",
      "right" : "public static TypeBindings create(Class<?> erasedType, JavaType[] types)",
      "info" : "MethodDeclaration[2501-3619]:MethodDeclaration[2501-3619]"
    }, {
      "left" : "public static TypeBindings create(Class<?> erasedType, JavaType typeArg1)",
      "right" : "public static TypeBindings create(Class<?> erasedType, JavaType typeArg1)",
      "info" : "MethodDeclaration[3625-4251]:MethodDeclaration[3625-4251]"
    }, {
      "left" : "public static TypeBindings create(Class<?> erasedType, JavaType typeArg1, JavaType typeArg2)",
      "right" : "public static TypeBindings create(Class<?> erasedType, JavaType typeArg1, JavaType typeArg2)",
      "info" : "MethodDeclaration[4257-4932]:MethodDeclaration[4257-4932]"
    }, {
      "left" : "public static TypeBindings createIfNeeded(Class<?> erasedType, JavaType typeArg1)",
      "right" : "public static TypeBindings createIfNeeded(Class<?> erasedType, JavaType typeArg1)",
      "info" : "MethodDeclaration[4942-5764]:MethodDeclaration[4942-5764]"
    }, {
      "left" : "public static TypeBindings createIfNeeded(Class<?> erasedType, JavaType[] types)",
      "right" : "public static TypeBindings createIfNeeded(Class<?> erasedType, JavaType[] types)",
      "info" : "MethodDeclaration[5774-6872]:MethodDeclaration[5774-6872]"
    }, {
      "left" : "public TypeBindings withUnboundVariable(String name)",
      "right" : "public TypeBindings withUnboundVariable(String name)",
      "info" : "MethodDeclaration[6882-7468]:MethodDeclaration[6882-7468]"
    }, {
      "left" : "public JavaType findBoundType(String name)",
      "right" : "public JavaType findBoundType(String name)",
      "info" : "MethodDeclaration[7659-8817]:MethodDeclaration[7659-8817]"
    }, {
      "left" : "public boolean isEmpty()",
      "right" : "public boolean isEmpty()",
      "info" : "MethodDeclaration[8823-8892]:MethodDeclaration[8823-8892]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[8902-9018]:MethodDeclaration[8902-9018]"
    }, {
      "left" : "public String getBoundName(int index)",
      "right" : "public String getBoundName(int index)",
      "info" : "MethodDeclaration[9024-9189]:MethodDeclaration[9024-9189]"
    }, {
      "left" : "public JavaType getBoundType(int index)",
      "right" : "public JavaType getBoundType(int index)",
      "info" : "MethodDeclaration[9195-9362]:MethodDeclaration[9195-9362]"
    }, {
      "left" : "public List<JavaType> getTypeParameters()",
      "right" : "public List<JavaType> getTypeParameters()",
      "info" : "MethodDeclaration[9368-9624]:MethodDeclaration[9368-9624]"
    }, {
      "left" : "public boolean hasUnbound(String name)",
      "right" : "public boolean hasUnbound(String name)",
      "info" : "MethodDeclaration[9630-9970]:MethodDeclaration[9630-9970]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[11000-11053]:MethodDeclaration[11104-11157]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[11059-11579]:MethodDeclaration[11163-11683]"
    }, {
      "left" : "protected JavaType[] typeParameterArray()",
      "right" : "protected JavaType[] typeParameterArray()",
      "info" : "MethodDeclaration[11787-11859]:MethodDeclaration[11891-11963]"
    }, {
      "left" : "TypeParamStash",
      "right" : "TypeParamStash",
      "info" : "TypeDeclaration[12324-14613]:TypeDeclaration[12428-14717]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_ABSTRACT_LIST = AbstractList.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_ABSTRACT_LIST = AbstractList.class.getTypeParameters();",
      "info" : "FieldDeclaration[12709-12808]:FieldDeclaration[12813-12912]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_COLLECTION = Collection.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_COLLECTION = Collection.class.getTypeParameters();",
      "info" : "FieldDeclaration[12817-12911]:FieldDeclaration[12921-13015]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_ITERABLE = Iterable.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_ITERABLE = Iterable.class.getTypeParameters();",
      "info" : "FieldDeclaration[12920-13010]:FieldDeclaration[13024-13114]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_LIST = List.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_LIST = List.class.getTypeParameters();",
      "info" : "FieldDeclaration[13019-13101]:FieldDeclaration[13123-13205]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_ARRAY_LIST = ArrayList.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_ARRAY_LIST = ArrayList.class.getTypeParameters();",
      "info" : "FieldDeclaration[13110-13203]:FieldDeclaration[13214-13307]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_MAP = Map.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_MAP = Map.class.getTypeParameters();",
      "info" : "FieldDeclaration[13213-13293]:FieldDeclaration[13317-13397]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_HASH_MAP = HashMap.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_HASH_MAP = HashMap.class.getTypeParameters();",
      "info" : "FieldDeclaration[13302-13391]:FieldDeclaration[13406-13495]"
    }, {
      "left" : "private final static TypeVariable<?>[] VARS_LINKED_HASH_MAP = LinkedHashMap.class.getTypeParameters();",
      "right" : "private final static TypeVariable<?>[] VARS_LINKED_HASH_MAP = LinkedHashMap.class.getTypeParameters();",
      "info" : "FieldDeclaration[13400-13502]:FieldDeclaration[13504-13606]"
    }, {
      "left" : "public static TypeVariable<?>[] paramsFor1(Class<?> erasedType)",
      "right" : "public static TypeVariable<?>[] paramsFor1(Class<?> erasedType)",
      "info" : "MethodDeclaration[13512-14154]:MethodDeclaration[13616-14258]"
    }, {
      "left" : "public static TypeVariable<?>[] paramsFor2(Class<?> erasedType)",
      "right" : "public static TypeVariable<?>[] paramsFor2(Class<?> erasedType)",
      "info" : "MethodDeclaration[14168-14603]:MethodDeclaration[14272-14707]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1297-1771]:Block[1297-1771]"
    }, {
      "left" : "_names = (names == null) ? NO_STRINGS : names;",
      "right" : "_names = (names == null) ? NO_STRINGS : names;",
      "info" : "ExpressionStatement[1307-1353]:ExpressionStatement[1307-1353]"
    }, {
      "left" : "_types = (types == null) ? NO_TYPES : types;",
      "right" : "_types = (types == null) ? NO_TYPES : types;",
      "info" : "ExpressionStatement[1362-1406]:ExpressionStatement[1362-1406]"
    }, {
      "left" : "if (_names.length != _types.length)",
      "right" : "if (_names.length != _types.length)",
      "info" : "IfStatement[1415-1578]:IfStatement[1415-1578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1451-1578]:Block[1451-1578]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Mismatching names (\"+_names.length+\"), types (\"+_types.length+\")\");",
      "right" : "throw new IllegalArgumentException(\"Mismatching names (\"+_names.length+\"), types (\"+_types.length+\")\");",
      "info" : "ThrowStatement[1465-1568]:ThrowStatement[1465-1568]"
    }, {
      "left" : "int h = 1;",
      "right" : "int h = 1;",
      "info" : "VariableDeclarationStatement[1587-1597]:VariableDeclarationStatement[1587-1597]"
    }, {
      "left" : "for (int i = 0, len = _types.length; i < len; ++i)",
      "right" : "for (int i = 0, len = _types.length; i < len; ++i)",
      "info" : "ForStatement[1606-1707]:ForStatement[1606-1707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1657-1707]:Block[1657-1707]"
    }, {
      "left" : "h += _types[i].hashCode();",
      "right" : "h += _types[i].hashCode();",
      "info" : "ExpressionStatement[1671-1697]:ExpressionStatement[1671-1697]"
    }, {
      "left" : "_unboundVariables = uvars;",
      "right" : "_unboundVariables = uvars;",
      "info" : "ExpressionStatement[1716-1742]:ExpressionStatement[1716-1742]"
    }, {
      "left" : "_hashCode = h;",
      "right" : "_hashCode = h;",
      "info" : "ExpressionStatement[1751-1765]:ExpressionStatement[1751-1765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1820-1849]:Block[1820-1849]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[1830-1843]:ReturnStatement[1830-1843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1970-2090]:Block[1970-2090]"
    }, {
      "left" : "if ((_names == null) || (_names.length == 0))",
      "right" : "if ((_names == null) || (_names.length == 0))",
      "info" : "IfStatement[1980-2063]:IfStatement[1980-2063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2026-2063]:Block[2026-2063]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[2040-2053]:ReturnStatement[2040-2053]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[2072-2084]:ReturnStatement[2072-2084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2300-2495]:Block[2300-2495]"
    }, {
      "left" : "JavaType[] types = (typeList == null || typeList.isEmpty()) ?\n                NO_TYPES : typeList.toArray(new JavaType[typeList.size()]);",
      "right" : "JavaType[] types = (typeList == null || typeList.isEmpty()) ?\n                NO_TYPES : typeList.toArray(new JavaType[typeList.size()]);",
      "info" : "VariableDeclarationStatement[2310-2447]:VariableDeclarationStatement[2310-2447]"
    }, {
      "left" : "return create(erasedType, types);",
      "right" : "return create(erasedType, types);",
      "info" : "ReturnStatement[2456-2489]:ReturnStatement[2456-2489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2578-3619]:Block[2578-3619]"
    }, {
      "left" : "if (types == null)",
      "right" : "if (types == null)",
      "info" : "IfStatement[2588-2827]:IfStatement[2588-2827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2607-2648]:Block[2607-2648]"
    }, {
      "left" : "types = NO_TYPES;",
      "right" : "types = NO_TYPES;",
      "info" : "ExpressionStatement[2621-2638]:ExpressionStatement[2621-2638]"
    }, {
      "left" : "switch (types.length) {\n        case 1:\n            return create(erasedType, types[0]);\n        case 2:\n            return create(erasedType, types[0], types[1]);\n        }",
      "right" : "switch (types.length) {\n        case 1:\n            return create(erasedType, types[0]);\n        case 2:\n            return create(erasedType, types[0], types[1]);\n        }",
      "info" : "SwitchStatement[2654-2827]:SwitchStatement[2654-2827]"
    }, {
      "left" : "case 1:",
      "right" : "case 1:",
      "info" : "SwitchCase[2686-2693]:SwitchCase[2686-2693]"
    }, {
      "left" : "return create(erasedType, types[0]);",
      "right" : "return create(erasedType, types[0]);",
      "info" : "ReturnStatement[2706-2742]:ReturnStatement[2706-2742]"
    }, {
      "left" : "case 2:",
      "right" : "case 2:",
      "info" : "SwitchCase[2751-2758]:SwitchCase[2751-2758]"
    }, {
      "left" : "return create(erasedType, types[0], types[1]);",
      "right" : "return create(erasedType, types[0], types[1]);",
      "info" : "ReturnStatement[2771-2817]:ReturnStatement[2771-2817]"
    }, {
      "left" : "TypeVariable<?>[] vars = erasedType.getTypeParameters();",
      "right" : "TypeVariable<?>[] vars = erasedType.getTypeParameters();",
      "info" : "VariableDeclarationStatement[2836-2892]:VariableDeclarationStatement[2836-2892]"
    }, {
      "left" : "String[] names;",
      "right" : "String[] names;",
      "info" : "VariableDeclarationStatement[2901-2916]:VariableDeclarationStatement[2901-2916]"
    }, {
      "left" : "if (vars == null || vars.length == 0)",
      "right" : "if (vars == null || vars.length == 0)",
      "info" : "IfStatement[2925-3199]:IfStatement[2925-3199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2963-3006]:Block[2963-3006]"
    }, {
      "left" : "names = NO_STRINGS;",
      "right" : "names = NO_STRINGS;",
      "info" : "ExpressionStatement[2977-2996]:ExpressionStatement[2977-2996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3012-3199]:Block[3012-3199]"
    }, {
      "left" : "int len = vars.length;",
      "right" : "int len = vars.length;",
      "info" : "VariableDeclarationStatement[3026-3048]:VariableDeclarationStatement[3026-3048]"
    }, {
      "left" : "names = new String[len];",
      "right" : "names = new String[len];",
      "info" : "ExpressionStatement[3061-3085]:ExpressionStatement[3061-3085]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[3098-3189]:ForStatement[3098-3189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3128-3189]:Block[3128-3189]"
    }, {
      "left" : "names[i] = vars[i].getName();",
      "right" : "names[i] = vars[i].getName();",
      "info" : "ExpressionStatement[3146-3175]:ExpressionStatement[3146-3175]"
    }, {
      "left" : "if (names.length != types.length)",
      "right" : "if (names.length != types.length)",
      "info" : "IfStatement[3259-3560]:IfStatement[3259-3560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3293-3560]:Block[3293-3560]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                   +\" with \"+types.length+\" type parameter\"\n                   +((types.length == 1) ? \"\" : \"s\")+\": class expects \"+names.length);",
      "right" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                   +\" with \"+types.length+\" type parameter\"\n                   +((types.length == 1) ? \"\" : \"s\")+\": class expects \"+names.length);",
      "info" : "ThrowStatement[3307-3550]:ThrowStatement[3307-3550]"
    }, {
      "left" : "return new TypeBindings(names, types, null);",
      "right" : "return new TypeBindings(names, types, null);",
      "info" : "ReturnStatement[3569-3613]:ReturnStatement[3569-3613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3703-4251]:Block[3703-4251]"
    }, {
      "left" : "TypeVariable<?>[] vars = TypeParamStash.paramsFor1(erasedType);",
      "right" : "TypeVariable<?>[] vars = TypeParamStash.paramsFor1(erasedType);",
      "info" : "VariableDeclarationStatement[3790-3853]:VariableDeclarationStatement[3790-3853]"
    }, {
      "left" : "int varLen = (vars == null) ? 0 : vars.length;",
      "right" : "int varLen = (vars == null) ? 0 : vars.length;",
      "info" : "VariableDeclarationStatement[3862-3908]:VariableDeclarationStatement[3862-3908]"
    }, {
      "left" : "if (varLen != 1)",
      "right" : "if (varLen != 1)",
      "info" : "IfStatement[3917-4125]:IfStatement[3917-4125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3934-4125]:Block[3934-4125]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                    +\" with 1 type parameter: class expects \"+varLen);",
      "right" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                    +\" with 1 type parameter: class expects \"+varLen);",
      "info" : "ThrowStatement[3948-4115]:ThrowStatement[3948-4115]"
    }, {
      "left" : "return new TypeBindings(new String[] { vars[0].getName() },\n                new JavaType[] { typeArg1 }, null);",
      "right" : "return new TypeBindings(new String[] { vars[0].getName() },\n                new JavaType[] { typeArg1 }, null);",
      "info" : "ReturnStatement[4134-4245]:ReturnStatement[4134-4245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4354-4932]:Block[4354-4932]"
    }, {
      "left" : "TypeVariable<?>[] vars = TypeParamStash.paramsFor2(erasedType);",
      "right" : "TypeVariable<?>[] vars = TypeParamStash.paramsFor2(erasedType);",
      "info" : "VariableDeclarationStatement[4441-4504]:VariableDeclarationStatement[4441-4504]"
    }, {
      "left" : "int varLen = (vars == null) ? 0 : vars.length;",
      "right" : "int varLen = (vars == null) ? 0 : vars.length;",
      "info" : "VariableDeclarationStatement[4513-4559]:VariableDeclarationStatement[4513-4559]"
    }, {
      "left" : "if (varLen != 2)",
      "right" : "if (varLen != 2)",
      "info" : "IfStatement[4568-4777]:IfStatement[4568-4777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4585-4777]:Block[4585-4777]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                    +\" with 2 type parameters: class expects \"+varLen);",
      "right" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                    +\" with 2 type parameters: class expects \"+varLen);",
      "info" : "ThrowStatement[4599-4767]:ThrowStatement[4599-4767]"
    }, {
      "left" : "return new TypeBindings(new String[] { vars[0].getName(), vars[1].getName() },\n                new JavaType[] { typeArg1, typeArg2 }, null);",
      "right" : "return new TypeBindings(new String[] { vars[0].getName(), vars[1].getName() },\n                new JavaType[] { typeArg1, typeArg2 }, null);",
      "info" : "ReturnStatement[4786-4926]:ReturnStatement[4786-4926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5237-5764]:Block[5237-5764]"
    }, {
      "left" : "TypeVariable<?>[] vars = erasedType.getTypeParameters();",
      "right" : "TypeVariable<?>[] vars = erasedType.getTypeParameters();",
      "info" : "VariableDeclarationStatement[5247-5303]:VariableDeclarationStatement[5247-5303]"
    }, {
      "left" : "int varLen = (vars == null) ? 0 : vars.length;",
      "right" : "int varLen = (vars == null) ? 0 : vars.length;",
      "info" : "VariableDeclarationStatement[5312-5358]:VariableDeclarationStatement[5312-5358]"
    }, {
      "left" : "if (varLen == 0)",
      "right" : "if (varLen == 0)",
      "info" : "IfStatement[5367-5421]:IfStatement[5367-5421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5384-5421]:Block[5384-5421]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[5398-5411]:ReturnStatement[5398-5411]"
    }, {
      "left" : "if (varLen != 1)",
      "right" : "if (varLen != 1)",
      "info" : "IfStatement[5430-5638]:IfStatement[5430-5638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5447-5638]:Block[5447-5638]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                    +\" with 1 type parameter: class expects \"+varLen);",
      "right" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                    +\" with 1 type parameter: class expects \"+varLen);",
      "info" : "ThrowStatement[5461-5628]:ThrowStatement[5461-5628]"
    }, {
      "left" : "return new TypeBindings(new String[] { vars[0].getName() },\n                new JavaType[] { typeArg1 }, null);",
      "right" : "return new TypeBindings(new String[] { vars[0].getName() },\n                new JavaType[] { typeArg1 }, null);",
      "info" : "ReturnStatement[5647-5758]:ReturnStatement[5647-5758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6068-6872]:Block[6068-6872]"
    }, {
      "left" : "TypeVariable<?>[] vars = erasedType.getTypeParameters();",
      "right" : "TypeVariable<?>[] vars = erasedType.getTypeParameters();",
      "info" : "VariableDeclarationStatement[6078-6134]:VariableDeclarationStatement[6078-6134]"
    }, {
      "left" : "if (vars == null || vars.length == 0)",
      "right" : "if (vars == null || vars.length == 0)",
      "info" : "IfStatement[6143-6218]:IfStatement[6143-6218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6181-6218]:Block[6181-6218]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[6195-6208]:ReturnStatement[6195-6208]"
    }, {
      "left" : "if (types == null)",
      "right" : "if (types == null)",
      "info" : "IfStatement[6227-6287]:IfStatement[6227-6287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6246-6287]:Block[6246-6287]"
    }, {
      "left" : "types = NO_TYPES;",
      "right" : "types = NO_TYPES;",
      "info" : "ExpressionStatement[6260-6277]:ExpressionStatement[6260-6277]"
    }, {
      "left" : "int len = vars.length;",
      "right" : "int len = vars.length;",
      "info" : "VariableDeclarationStatement[6296-6318]:VariableDeclarationStatement[6296-6318]"
    }, {
      "left" : "String[] names = new String[len];",
      "right" : "String[] names = new String[len];",
      "info" : "VariableDeclarationStatement[6327-6360]:VariableDeclarationStatement[6327-6360]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[6369-6452]:ForStatement[6369-6452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6399-6452]:Block[6399-6452]"
    }, {
      "left" : "names[i] = vars[i].getName();",
      "right" : "names[i] = vars[i].getName();",
      "info" : "ExpressionStatement[6413-6442]:ExpressionStatement[6413-6442]"
    }, {
      "left" : "if (names.length != types.length)",
      "right" : "if (names.length != types.length)",
      "info" : "IfStatement[6512-6813]:IfStatement[6512-6813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6546-6813]:Block[6546-6813]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                   +\" with \"+types.length+\" type parameter\"\n                   +((types.length == 1) ? \"\" : \"s\")+\": class expects \"+names.length);",
      "right" : "throw new IllegalArgumentException(\"Can not create TypeBindings for class \"+erasedType.getName()\n                   +\" with \"+types.length+\" type parameter\"\n                   +((types.length == 1) ? \"\" : \"s\")+\": class expects \"+names.length);",
      "info" : "ThrowStatement[6560-6803]:ThrowStatement[6560-6803]"
    }, {
      "left" : "return new TypeBindings(names, types, null);",
      "right" : "return new TypeBindings(names, types, null);",
      "info" : "ReturnStatement[6822-6866]:ReturnStatement[6822-6866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7188-7468]:Block[7188-7468]"
    }, {
      "left" : "int len = (_unboundVariables == null) ? 0 : _unboundVariables.length;",
      "right" : "int len = (_unboundVariables == null) ? 0 : _unboundVariables.length;",
      "info" : "VariableDeclarationStatement[7198-7267]:VariableDeclarationStatement[7198-7267]"
    }, {
      "left" : "String[] names =  (len == 0)\n                ? new String[1] : Arrays.copyOf(_unboundVariables, len+1);",
      "right" : "String[] names =  (len == 0)\n                ? new String[1] : Arrays.copyOf(_unboundVariables, len+1);",
      "info" : "VariableDeclarationStatement[7276-7379]:VariableDeclarationStatement[7276-7379]"
    }, {
      "left" : "names[len] = name;",
      "right" : "names[len] = name;",
      "info" : "ExpressionStatement[7388-7406]:ExpressionStatement[7388-7406]"
    }, {
      "left" : "return new TypeBindings(_names, _types, names);",
      "right" : "return new TypeBindings(_names, _types, names);",
      "info" : "ReturnStatement[7415-7462]:ReturnStatement[7415-7462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7820-8817]:Block[7820-8817]"
    }, {
      "left" : "for (int i = 0, len = _names.length; i < len; ++i)",
      "right" : "for (int i = 0, len = _names.length; i < len; ++i)",
      "info" : "ForStatement[7830-8790]:ForStatement[7830-8790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7881-8790]:Block[7881-8790]"
    }, {
      "left" : "if (name.equals(_names[i]))",
      "right" : "if (name.equals(_names[i]))",
      "info" : "IfStatement[7895-8780]:IfStatement[7895-8780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7923-8780]:Block[7923-8780]"
    }, {
      "left" : "JavaType t = _types[i];",
      "right" : "JavaType t = _types[i];",
      "info" : "VariableDeclarationStatement[7941-7964]:VariableDeclarationStatement[7941-7964]"
    }, {
      "left" : "if (t instanceof ResolvedRecursiveType)",
      "right" : "if (t instanceof ResolvedRecursiveType)",
      "info" : "IfStatement[7981-8740]:IfStatement[7981-8740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8021-8740]:Block[8021-8740]"
    }, {
      "left" : "ResolvedRecursiveType rrt = (ResolvedRecursiveType) t;",
      "right" : "ResolvedRecursiveType rrt = (ResolvedRecursiveType) t;",
      "info" : "VariableDeclarationStatement[8043-8097]:VariableDeclarationStatement[8043-8097]"
    }, {
      "left" : "JavaType t2 = rrt.getSelfReferencedType();",
      "right" : "JavaType t2 = rrt.getSelfReferencedType();",
      "info" : "VariableDeclarationStatement[8118-8160]:VariableDeclarationStatement[8118-8160]"
    }, {
      "left" : "if (t2 != null)",
      "right" : "if (t2 != null)",
      "info" : "IfStatement[8181-8722]:IfStatement[8181-8722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8197-8252]:Block[8197-8252]"
    }, {
      "left" : "t = t2;",
      "right" : "t = t2;",
      "info" : "ExpressionStatement[8223-8230]:ExpressionStatement[8223-8230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8258-8722]:Block[8258-8722]"
    }, {
      "left" : "return t;",
      "right" : "return t;",
      "info" : "ReturnStatement[8757-8766]:ReturnStatement[8757-8766]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8799-8811]:ReturnStatement[8799-8811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8848-8892]:Block[8848-8892]"
    }, {
      "left" : "return (_types.length == 0);",
      "right" : "return (_types.length == 0);",
      "info" : "ReturnStatement[8858-8886]:ReturnStatement[8858-8886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8980-9018]:Block[8980-9018]"
    }, {
      "left" : "return _types.length;",
      "right" : "return _types.length;",
      "info" : "ReturnStatement[8991-9012]:ReturnStatement[8991-9012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9066-9189]:Block[9066-9189]"
    }, {
      "left" : "if (index < 0 || index >= _names.length)",
      "right" : "if (index < 0 || index >= _names.length)",
      "info" : "IfStatement[9076-9153]:IfStatement[9076-9153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9117-9153]:Block[9117-9153]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9131-9143]:ReturnStatement[9131-9143]"
    }, {
      "left" : "return _names[index];",
      "right" : "return _names[index];",
      "info" : "ReturnStatement[9162-9183]:ReturnStatement[9162-9183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9239-9362]:Block[9239-9362]"
    }, {
      "left" : "if (index < 0 || index >= _types.length)",
      "right" : "if (index < 0 || index >= _types.length)",
      "info" : "IfStatement[9249-9326]:IfStatement[9249-9326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9290-9326]:Block[9290-9326]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9304-9316]:ReturnStatement[9304-9316]"
    }, {
      "left" : "return _types[index];",
      "right" : "return _types[index];",
      "info" : "ReturnStatement[9335-9356]:ReturnStatement[9335-9356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9491-9624]:Block[9491-9624]"
    }, {
      "left" : "if (_types.length == 0)",
      "right" : "if (_types.length == 0)",
      "info" : "IfStatement[9501-9580]:IfStatement[9501-9580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9525-9580]:Block[9525-9580]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[9539-9570]:ReturnStatement[9539-9570]"
    }, {
      "left" : "return Arrays.asList(_types);",
      "right" : "return Arrays.asList(_types);",
      "info" : "ReturnStatement[9589-9618]:ReturnStatement[9589-9618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9703-9970]:Block[9703-9970]"
    }, {
      "left" : "if (_unboundVariables != null)",
      "right" : "if (_unboundVariables != null)",
      "info" : "IfStatement[9713-9942]:IfStatement[9713-9942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9744-9942]:Block[9744-9942]"
    }, {
      "left" : "for (int i = _unboundVariables.length; --i >= 0)",
      "right" : "for (int i = _unboundVariables.length; --i >= 0)",
      "info" : "ForStatement[9758-9932]:ForStatement[9758-9932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9809-9932]:Block[9809-9932]"
    }, {
      "left" : "if (name.equals(_unboundVariables[i]))",
      "right" : "if (name.equals(_unboundVariables[i]))",
      "info" : "IfStatement[9827-9918]:IfStatement[9827-9918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9866-9918]:Block[9866-9918]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9888-9900]:ReturnStatement[9888-9900]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9951-9964]:ReturnStatement[9951-9964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11032-11053]:Block[11136-11157]"
    }, {
      "left" : "return _hashCode;",
      "right" : "return _hashCode;",
      "info" : "ReturnStatement[11034-11051]:ReturnStatement[11138-11155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11105-11579]:Block[11209-11683]"
    }, {
      "left" : "if (o == this)",
      "right" : "if (o == this)",
      "info" : "IfStatement[11115-11142]:IfStatement[11219-11246]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11130-11142]:ReturnStatement[11234-11246]"
    }, {
      "left" : "if (o == null || o.getClass() != getClass())",
      "right" : "if (o == null || o.getClass() != getClass())",
      "info" : "IfStatement[11151-11209]:IfStatement[11255-11313]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11196-11209]:ReturnStatement[11300-11313]"
    }, {
      "left" : "TypeBindings other = (TypeBindings) o;",
      "right" : "TypeBindings other = (TypeBindings) o;",
      "info" : "VariableDeclarationStatement[11218-11256]:VariableDeclarationStatement[11322-11360]"
    }, {
      "left" : "int len = _types.length;",
      "right" : "int len = _types.length;",
      "info" : "VariableDeclarationStatement[11265-11289]:VariableDeclarationStatement[11369-11393]"
    }, {
      "left" : "if (len != other.size())",
      "right" : "if (len != other.size())",
      "info" : "IfStatement[11298-11360]:IfStatement[11402-11464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11323-11360]:Block[11427-11464]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11337-11350]:ReturnStatement[11441-11454]"
    }, {
      "left" : "JavaType[] otherTypes = other._types;",
      "right" : "JavaType[] otherTypes = other._types;",
      "info" : "VariableDeclarationStatement[11369-11406]:VariableDeclarationStatement[11473-11510]"
    }, {
      "left" : "for (int i = 0; i < len; ++i)",
      "right" : "for (int i = 0; i < len; ++i)",
      "info" : "ForStatement[11415-11552]:ForStatement[11519-11656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11445-11552]:Block[11549-11656]"
    }, {
      "left" : "if (!otherTypes[i].equals(_types[i]))",
      "right" : "if (!otherTypes[i].equals(_types[i]))",
      "info" : "IfStatement[11459-11542]:IfStatement[11563-11646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11497-11542]:Block[11601-11646]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11515-11528]:ReturnStatement[11619-11632]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11561-11573]:ReturnStatement[11665-11677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11829-11859]:Block[11933-11963]"
    }, {
      "left" : "return _types;",
      "right" : "return _types;",
      "info" : "ReturnStatement[11839-11853]:ReturnStatement[11943-11957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13584-14154]:Block[13688-14258]"
    }, {
      "left" : "if (erasedType == Collection.class)",
      "right" : "if (erasedType == Collection.class)",
      "info" : "IfStatement[13598-13689]:IfStatement[13702-13793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13634-13689]:Block[13738-13793]"
    }, {
      "left" : "return VARS_COLLECTION;",
      "right" : "return VARS_COLLECTION;",
      "info" : "ReturnStatement[13652-13675]:ReturnStatement[13756-13779]"
    }, {
      "left" : "if (erasedType == List.class)",
      "right" : "if (erasedType == List.class)",
      "info" : "IfStatement[13702-13781]:IfStatement[13806-13885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13732-13781]:Block[13836-13885]"
    }, {
      "left" : "return VARS_LIST;",
      "right" : "return VARS_LIST;",
      "info" : "ReturnStatement[13750-13767]:ReturnStatement[13854-13871]"
    }, {
      "left" : "if (erasedType == ArrayList.class)",
      "right" : "if (erasedType == ArrayList.class)",
      "info" : "IfStatement[13794-13884]:IfStatement[13898-13988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13829-13884]:Block[13933-13988]"
    }, {
      "left" : "return VARS_ARRAY_LIST;",
      "right" : "return VARS_ARRAY_LIST;",
      "info" : "ReturnStatement[13847-13870]:ReturnStatement[13951-13974]"
    }, {
      "left" : "if (erasedType == AbstractList.class)",
      "right" : "if (erasedType == AbstractList.class)",
      "info" : "IfStatement[13897-13993]:IfStatement[14001-14097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13935-13993]:Block[14039-14097]"
    }, {
      "left" : "return VARS_ABSTRACT_LIST;",
      "right" : "return VARS_ABSTRACT_LIST;",
      "info" : "ReturnStatement[13953-13979]:ReturnStatement[14057-14083]"
    }, {
      "left" : "if (erasedType == Iterable.class)",
      "right" : "if (erasedType == Iterable.class)",
      "info" : "IfStatement[14006-14093]:IfStatement[14110-14197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14040-14093]:Block[14144-14197]"
    }, {
      "left" : "return VARS_ITERABLE;",
      "right" : "return VARS_ITERABLE;",
      "info" : "ReturnStatement[14058-14079]:ReturnStatement[14162-14183]"
    }, {
      "left" : "return erasedType.getTypeParameters();",
      "right" : "return erasedType.getTypeParameters();",
      "info" : "ReturnStatement[14106-14144]:ReturnStatement[14210-14248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14240-14603]:Block[14344-14707]"
    }, {
      "left" : "if (erasedType == Map.class)",
      "right" : "if (erasedType == Map.class)",
      "info" : "IfStatement[14254-14331]:IfStatement[14358-14435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14283-14331]:Block[14387-14435]"
    }, {
      "left" : "return VARS_MAP;",
      "right" : "return VARS_MAP;",
      "info" : "ReturnStatement[14301-14317]:ReturnStatement[14405-14421]"
    }, {
      "left" : "if (erasedType == HashMap.class)",
      "right" : "if (erasedType == HashMap.class)",
      "info" : "IfStatement[14344-14430]:IfStatement[14448-14534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14377-14430]:Block[14481-14534]"
    }, {
      "left" : "return VARS_HASH_MAP;",
      "right" : "return VARS_HASH_MAP;",
      "info" : "ReturnStatement[14395-14416]:ReturnStatement[14499-14520]"
    }, {
      "left" : "if (erasedType == LinkedHashMap.class)",
      "right" : "if (erasedType == LinkedHashMap.class)",
      "info" : "IfStatement[14443-14542]:IfStatement[14547-14646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14482-14542]:Block[14586-14646]"
    }, {
      "left" : "return VARS_LINKED_HASH_MAP;",
      "right" : "return VARS_LINKED_HASH_MAP;",
      "info" : "ReturnStatement[14500-14528]:ReturnStatement[14604-14632]"
    }, {
      "left" : "return erasedType.getTypeParameters();",
      "right" : "return erasedType.getTypeParameters();",
      "info" : "ReturnStatement[14555-14593]:ReturnStatement[14659-14697]"
    } ]
  },
  "interFileMappings" : { }
}