{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "PearsonsCorrelation",
      "right" : "PearsonsCorrelation",
      "info" : "TypeDeclaration[1246-11235]:TypeDeclaration[1246-11230]"
    }, {
      "left" : "private final RealMatrix correlationMatrix;",
      "right" : "private final RealMatrix correlationMatrix;",
      "info" : "FieldDeclaration[1968-2041]:FieldDeclaration[1968-2041]"
    }, {
      "left" : "private final int nObs;",
      "right" : "private final int nObs;",
      "info" : "FieldDeclaration[2047-2104]:FieldDeclaration[2047-2104]"
    }, {
      "left" : "public PearsonsCorrelation()",
      "right" : "public PearsonsCorrelation()",
      "info" : "MethodDeclaration[2110-2289]:MethodDeclaration[2110-2289]"
    }, {
      "left" : "public PearsonsCorrelation(double[][] data)",
      "right" : "public PearsonsCorrelation(double[][] data)",
      "info" : "MethodDeclaration[2295-2743]:MethodDeclaration[2295-2743]"
    }, {
      "left" : "public PearsonsCorrelation(RealMatrix matrix)",
      "right" : "public PearsonsCorrelation(RealMatrix matrix)",
      "info" : "MethodDeclaration[2749-3155]:MethodDeclaration[2749-3155]"
    }, {
      "left" : "public PearsonsCorrelation(Covariance covariance)",
      "right" : "public PearsonsCorrelation(Covariance covariance)",
      "info" : "MethodDeclaration[3161-3889]:MethodDeclaration[3161-3889]"
    }, {
      "left" : "public PearsonsCorrelation(RealMatrix covarianceMatrix, int numberOfObservations)",
      "right" : "public PearsonsCorrelation(RealMatrix covarianceMatrix, int numberOfObservations)",
      "info" : "MethodDeclaration[3895-4426]:MethodDeclaration[3895-4426]"
    }, {
      "left" : "public RealMatrix getCorrelationMatrix()",
      "right" : "public RealMatrix getCorrelationMatrix()",
      "info" : "MethodDeclaration[4432-4609]:MethodDeclaration[4432-4609]"
    }, {
      "left" : "public RealMatrix getCorrelationStandardErrors()",
      "right" : "public RealMatrix getCorrelationStandardErrors()",
      "info" : "MethodDeclaration[4615-5707]:MethodDeclaration[4615-5707]"
    }, {
      "left" : "public RealMatrix getCorrelationPValues() throws MathException",
      "right" : "public RealMatrix getCorrelationPValues() throws MathException",
      "info" : "MethodDeclaration[5713-7175]:MethodDeclaration[5713-7170]"
    }, {
      "left" : "public RealMatrix computeCorrelationMatrix(RealMatrix matrix)",
      "right" : "public RealMatrix computeCorrelationMatrix(RealMatrix matrix)",
      "info" : "MethodDeclaration[7182-7934]:MethodDeclaration[7177-7929]"
    }, {
      "left" : "public RealMatrix computeCorrelationMatrix(double[][] data)",
      "right" : "public RealMatrix computeCorrelationMatrix(double[][] data)",
      "info" : "MethodDeclaration[7940-8380]:MethodDeclaration[7935-8375]"
    }, {
      "left" : "public double correlation(final double[] xArray, final double[] yArray) throws IllegalArgumentException",
      "right" : "public double correlation(final double[] xArray, final double[] yArray) throws IllegalArgumentException",
      "info" : "MethodDeclaration[8386-9558]:MethodDeclaration[8381-9553]"
    }, {
      "left" : "public RealMatrix covarianceToCorrelation(RealMatrix covarianceMatrix)",
      "right" : "public RealMatrix covarianceToCorrelation(RealMatrix covarianceMatrix)",
      "info" : "MethodDeclaration[9564-10656]:MethodDeclaration[9559-10651]"
    }, {
      "left" : "private void checkSufficientData(final RealMatrix matrix)",
      "right" : "private void checkSufficientData(final RealMatrix matrix)",
      "info" : "MethodDeclaration[10662-11233]:MethodDeclaration[10657-11228]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1928-1934]:Modifier[1928-1934]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1935-1940]:TYPE_DECLARATION_KIND[1935-1940]"
    }, {
      "left" : "PearsonsCorrelation",
      "right" : "PearsonsCorrelation",
      "info" : "SimpleName[1941-1960]:SimpleName[1941-1960]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2184-2190]:Modifier[2184-2190]"
    }, {
      "left" : "PearsonsCorrelation",
      "right" : "PearsonsCorrelation",
      "info" : "SimpleName[2191-2210]:SimpleName[2191-2210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2213-2289]:Block[2213-2289]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[2223-2231]:SuperConstructorInvocation[2223-2231]"
    }, {
      "left" : "correlationMatrix = null;",
      "right" : "correlationMatrix = null;",
      "info" : "ExpressionStatement[2240-2265]:ExpressionStatement[2240-2265]"
    }, {
      "left" : "nObs = 0;",
      "right" : "nObs = 0;",
      "info" : "ExpressionStatement[2274-2283]:ExpressionStatement[2274-2283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2651-2657]:Modifier[2651-2657]"
    }, {
      "left" : "PearsonsCorrelation",
      "right" : "PearsonsCorrelation",
      "info" : "SimpleName[2658-2677]:SimpleName[2658-2677]"
    }, {
      "left" : "double[][] data",
      "right" : "double[][] data",
      "info" : "SingleVariableDeclaration[2678-2693]:SingleVariableDeclaration[2678-2693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2695-2743]:Block[2695-2743]"
    }, {
      "left" : "this(new BlockRealMatrix(data));",
      "right" : "this(new BlockRealMatrix(data));",
      "info" : "ConstructorInvocation[2705-2737]:ConstructorInvocation[2705-2737]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2962-2968]:Modifier[2962-2968]"
    }, {
      "left" : "PearsonsCorrelation",
      "right" : "PearsonsCorrelation",
      "info" : "SimpleName[2969-2988]:SimpleName[2969-2988]"
    }, {
      "left" : "RealMatrix matrix",
      "right" : "RealMatrix matrix",
      "info" : "SingleVariableDeclaration[2989-3006]:SingleVariableDeclaration[2989-3006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3008-3155]:Block[3008-3155]"
    }, {
      "left" : "checkSufficientData(matrix);",
      "right" : "checkSufficientData(matrix);",
      "info" : "ExpressionStatement[3018-3046]:ExpressionStatement[3018-3046]"
    }, {
      "left" : "nObs = matrix.getRowDimension();",
      "right" : "nObs = matrix.getRowDimension();",
      "info" : "ExpressionStatement[3055-3087]:ExpressionStatement[3055-3087]"
    }, {
      "left" : "correlationMatrix = computeCorrelationMatrix(matrix);",
      "right" : "correlationMatrix = computeCorrelationMatrix(matrix);",
      "info" : "ExpressionStatement[3096-3149]:ExpressionStatement[3096-3149]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3505-3511]:Modifier[3505-3511]"
    }, {
      "left" : "PearsonsCorrelation",
      "right" : "PearsonsCorrelation",
      "info" : "SimpleName[3512-3531]:SimpleName[3512-3531]"
    }, {
      "left" : "Covariance covariance",
      "right" : "Covariance covariance",
      "info" : "SingleVariableDeclaration[3532-3553]:SingleVariableDeclaration[3532-3553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3555-3889]:Block[3555-3889]"
    }, {
      "left" : "RealMatrix covarianceMatrix = covariance.getCovarianceMatrix();",
      "right" : "RealMatrix covarianceMatrix = covariance.getCovarianceMatrix();",
      "info" : "VariableDeclarationStatement[3565-3628]:VariableDeclarationStatement[3565-3628]"
    }, {
      "left" : "if (covarianceMatrix == null)",
      "right" : "if (covarianceMatrix == null)",
      "info" : "IfStatement[3637-3778]:IfStatement[3637-3778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3667-3778]:Block[3667-3778]"
    }, {
      "left" : "throw MathRuntimeException.createIllegalArgumentException(\"covariance matrix is null\");",
      "right" : "throw MathRuntimeException.createIllegalArgumentException(\"covariance matrix is null\");",
      "info" : "ThrowStatement[3681-3768]:ThrowStatement[3681-3768]"
    }, {
      "left" : "nObs = covariance.getN();",
      "right" : "nObs = covariance.getN();",
      "info" : "ExpressionStatement[3787-3812]:ExpressionStatement[3787-3812]"
    }, {
      "left" : "correlationMatrix = covarianceToCorrelation(covarianceMatrix);",
      "right" : "correlationMatrix = covarianceToCorrelation(covarianceMatrix);",
      "info" : "ExpressionStatement[3821-3883]:ExpressionStatement[3821-3883]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4228-4234]:Modifier[4228-4234]"
    }, {
      "left" : "PearsonsCorrelation",
      "right" : "PearsonsCorrelation",
      "info" : "SimpleName[4235-4254]:SimpleName[4235-4254]"
    }, {
      "left" : "RealMatrix covarianceMatrix",
      "right" : "RealMatrix covarianceMatrix",
      "info" : "SingleVariableDeclaration[4255-4282]:SingleVariableDeclaration[4255-4282]"
    }, {
      "left" : "int numberOfObservations",
      "right" : "int numberOfObservations",
      "info" : "SingleVariableDeclaration[4284-4308]:SingleVariableDeclaration[4284-4308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4310-4426]:Block[4310-4426]"
    }, {
      "left" : "nObs = numberOfObservations;",
      "right" : "nObs = numberOfObservations;",
      "info" : "ExpressionStatement[4320-4348]:ExpressionStatement[4320-4348]"
    }, {
      "left" : "correlationMatrix = covarianceToCorrelation(covarianceMatrix);",
      "right" : "correlationMatrix = covarianceToCorrelation(covarianceMatrix);",
      "info" : "ExpressionStatement[4357-4419]:ExpressionStatement[4357-4419]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4527-4533]:Modifier[4527-4533]"
    }, {
      "left" : "RealMatrix",
      "right" : "RealMatrix",
      "info" : "SimpleType[4534-4544]:SimpleType[4534-4544]"
    }, {
      "left" : "getCorrelationMatrix",
      "right" : "getCorrelationMatrix",
      "info" : "SimpleName[4545-4565]:SimpleName[4545-4565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4568-4609]:Block[4568-4609]"
    }, {
      "left" : "return correlationMatrix;",
      "right" : "return correlationMatrix;",
      "info" : "ReturnStatement[4578-4603]:ReturnStatement[4578-4603]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5262-5268]:Modifier[5262-5268]"
    }, {
      "left" : "RealMatrix",
      "right" : "RealMatrix",
      "info" : "SimpleType[5269-5279]:SimpleType[5269-5279]"
    }, {
      "left" : "getCorrelationStandardErrors",
      "right" : "getCorrelationStandardErrors",
      "info" : "SimpleName[5280-5308]:SimpleName[5280-5308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5311-5707]:Block[5311-5707]"
    }, {
      "left" : "int nVars = correlationMatrix.getColumnDimension();",
      "right" : "int nVars = correlationMatrix.getColumnDimension();",
      "info" : "VariableDeclarationStatement[5321-5372]:VariableDeclarationStatement[5321-5372]"
    }, {
      "left" : "double[][] out = new double[nVars][nVars];",
      "right" : "double[][] out = new double[nVars][nVars];",
      "info" : "VariableDeclarationStatement[5381-5423]:VariableDeclarationStatement[5381-5423]"
    }, {
      "left" : "for (int i = 0; i < nVars; i++)",
      "right" : "for (int i = 0; i < nVars; i++)",
      "info" : "ForStatement[5432-5660]:ForStatement[5432-5660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5464-5660]:Block[5464-5660]"
    }, {
      "left" : "for (int j = 0; j < nVars; j++)",
      "right" : "for (int j = 0; j < nVars; j++)",
      "info" : "ForStatement[5478-5650]:ForStatement[5478-5650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5510-5650]:Block[5510-5650]"
    }, {
      "left" : "double r = correlationMatrix.getEntry(i, j);",
      "right" : "double r = correlationMatrix.getEntry(i, j);",
      "info" : "VariableDeclarationStatement[5528-5572]:VariableDeclarationStatement[5528-5572]"
    }, {
      "left" : "out[i][j] = Math.sqrt((1 - r * r) /(nObs - 2));",
      "right" : "out[i][j] = Math.sqrt((1 - r * r) /(nObs - 2));",
      "info" : "ExpressionStatement[5589-5636]:ExpressionStatement[5589-5636]"
    }, {
      "left" : "return new BlockRealMatrix(out);",
      "right" : "return new BlockRealMatrix(out);",
      "info" : "ReturnStatement[5669-5701]:ReturnStatement[5669-5701]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6434-6440]:Modifier[6434-6440]"
    }, {
      "left" : "RealMatrix",
      "right" : "RealMatrix",
      "info" : "SimpleType[6441-6451]:SimpleType[6441-6451]"
    }, {
      "left" : "getCorrelationPValues",
      "right" : "getCorrelationPValues",
      "info" : "SimpleName[6452-6473]:SimpleName[6452-6473]"
    }, {
      "left" : "MathException",
      "right" : "MathException",
      "info" : "SimpleType[6483-6496]:SimpleType[6483-6496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6497-7175]:Block[6497-7170]"
    }, {
      "left" : "TDistribution tDistribution = new TDistributionImpl(nObs - 2);",
      "right" : "TDistribution tDistribution = new TDistributionImpl(nObs - 2);",
      "info" : "VariableDeclarationStatement[6507-6569]:VariableDeclarationStatement[6507-6569]"
    }, {
      "left" : "int nVars = correlationMatrix.getColumnDimension();",
      "right" : "int nVars = correlationMatrix.getColumnDimension();",
      "info" : "VariableDeclarationStatement[6578-6629]:VariableDeclarationStatement[6578-6629]"
    }, {
      "left" : "double[][] out = new double[nVars][nVars];",
      "right" : "double[][] out = new double[nVars][nVars];",
      "info" : "VariableDeclarationStatement[6638-6680]:VariableDeclarationStatement[6638-6680]"
    }, {
      "left" : "for (int i = 0; i < nVars; i++)",
      "right" : "for (int i = 0; i < nVars; i++)",
      "info" : "ForStatement[6689-7128]:ForStatement[6689-7123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6721-7128]:Block[6721-7123]"
    }, {
      "left" : "for (int j = 0; j < nVars; j++)",
      "right" : "for (int j = 0; j < nVars; j++)",
      "info" : "ForStatement[6735-7118]:ForStatement[6735-7113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6767-7118]:Block[6767-7113]"
    }, {
      "left" : "if (i == j)",
      "right" : "if (i == j)",
      "info" : "IfStatement[6785-7104]:IfStatement[6785-7099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6797-6852]:Block[6797-6852]"
    }, {
      "left" : "out[i][j] = 0d;",
      "right" : "out[i][j] = 0d;",
      "info" : "ExpressionStatement[6819-6834]:ExpressionStatement[6819-6834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6858-7104]:Block[6858-7099]"
    }, {
      "left" : "double r = correlationMatrix.getEntry(i, j);",
      "right" : "double r = correlationMatrix.getEntry(i, j);",
      "info" : "VariableDeclarationStatement[6880-6924]:VariableDeclarationStatement[6880-6924]"
    }, {
      "left" : "double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));",
      "right" : "double t = Math.abs(r * Math.sqrt((nObs - 2)/(1 - r * r)));",
      "info" : "VariableDeclarationStatement[6945-7004]:VariableDeclarationStatement[6945-7004]"
    }, {
      "left" : "return new BlockRealMatrix(out);",
      "right" : "return new BlockRealMatrix(out);",
      "info" : "ReturnStatement[7137-7169]:ReturnStatement[7132-7164]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7399-7405]:Modifier[7394-7400]"
    }, {
      "left" : "RealMatrix",
      "right" : "RealMatrix",
      "info" : "SimpleType[7406-7416]:SimpleType[7401-7411]"
    }, {
      "left" : "computeCorrelationMatrix",
      "right" : "computeCorrelationMatrix",
      "info" : "SimpleName[7417-7441]:SimpleName[7412-7436]"
    }, {
      "left" : "RealMatrix matrix",
      "right" : "RealMatrix matrix",
      "info" : "SingleVariableDeclaration[7442-7459]:SingleVariableDeclaration[7437-7454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7461-7934]:Block[7456-7929]"
    }, {
      "left" : "int nVars = matrix.getColumnDimension();",
      "right" : "int nVars = matrix.getColumnDimension();",
      "info" : "VariableDeclarationStatement[7471-7511]:VariableDeclarationStatement[7466-7506]"
    }, {
      "left" : "RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);",
      "right" : "RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);",
      "info" : "VariableDeclarationStatement[7520-7577]:VariableDeclarationStatement[7515-7572]"
    }, {
      "left" : "for (int i = 0; i < nVars; i++)",
      "right" : "for (int i = 0; i < nVars; i++)",
      "info" : "ForStatement[7586-7902]:ForStatement[7581-7897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7618-7902]:Block[7613-7897]"
    }, {
      "left" : "for (int j = 0; j < i; j++)",
      "right" : "for (int j = 0; j < i; j++)",
      "info" : "ForStatement[7632-7850]:ForStatement[7627-7845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7660-7850]:Block[7655-7845]"
    }, {
      "left" : "double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));",
      "right" : "double corr = correlation(matrix.getColumn(i), matrix.getColumn(j));",
      "info" : "VariableDeclarationStatement[7676-7744]:VariableDeclarationStatement[7671-7739]"
    }, {
      "left" : "outMatrix.setEntry(i, j, corr);",
      "right" : "outMatrix.setEntry(i, j, corr);",
      "info" : "ExpressionStatement[7759-7790]:ExpressionStatement[7754-7785]"
    }, {
      "left" : "outMatrix.setEntry(j, i, corr);",
      "right" : "outMatrix.setEntry(j, i, corr);",
      "info" : "ExpressionStatement[7805-7836]:ExpressionStatement[7800-7831]"
    }, {
      "left" : "outMatrix.setEntry(i, i, 1d);",
      "right" : "outMatrix.setEntry(i, i, 1d);",
      "info" : "ExpressionStatement[7863-7892]:ExpressionStatement[7858-7887]"
    }, {
      "left" : "return outMatrix;",
      "right" : "return outMatrix;",
      "info" : "ReturnStatement[7911-7928]:ReturnStatement[7906-7923]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8246-8252]:Modifier[8241-8247]"
    }, {
      "left" : "RealMatrix",
      "right" : "RealMatrix",
      "info" : "SimpleType[8253-8263]:SimpleType[8248-8258]"
    }, {
      "left" : "computeCorrelationMatrix",
      "right" : "computeCorrelationMatrix",
      "info" : "SimpleName[8264-8288]:SimpleName[8259-8283]"
    }, {
      "left" : "double[][] data",
      "right" : "double[][] data",
      "info" : "SingleVariableDeclaration[8289-8304]:SingleVariableDeclaration[8284-8299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8306-8380]:Block[8301-8375]"
    }, {
      "left" : "return computeCorrelationMatrix(new BlockRealMatrix(data));",
      "right" : "return computeCorrelationMatrix(new BlockRealMatrix(data));",
      "info" : "ReturnStatement[8315-8374]:ReturnStatement[8310-8369]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8909-8915]:Modifier[8904-8910]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[8916-8922]:PrimitiveType[8911-8917]"
    }, {
      "left" : "correlation",
      "right" : "correlation",
      "info" : "SimpleName[8923-8934]:SimpleName[8918-8929]"
    }, {
      "left" : "final double[] xArray",
      "right" : "final double[] xArray",
      "info" : "SingleVariableDeclaration[8935-8956]:SingleVariableDeclaration[8930-8951]"
    }, {
      "left" : "final double[] yArray",
      "right" : "final double[] yArray",
      "info" : "SingleVariableDeclaration[8958-8979]:SingleVariableDeclaration[8953-8974]"
    }, {
      "left" : "IllegalArgumentException",
      "right" : "IllegalArgumentException",
      "info" : "SimpleType[8988-9012]:SimpleType[8983-9007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9013-9558]:Block[9008-9553]"
    }, {
      "left" : "SimpleRegression regression = new SimpleRegression();",
      "right" : "SimpleRegression regression = new SimpleRegression();",
      "info" : "VariableDeclarationStatement[9023-9076]:VariableDeclarationStatement[9018-9071]"
    }, {
      "left" : "if(xArray.length == yArray.length && xArray.length > 1)",
      "right" : "if(xArray.length == yArray.length && xArray.length > 1)",
      "info" : "IfStatement[9085-9552]:IfStatement[9080-9547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9141-9311]:Block[9136-9306]"
    }, {
      "left" : "for(int i=0; i<xArray.length; i++)",
      "right" : "for(int i=0; i<xArray.length; i++)",
      "info" : "ForStatement[9155-9263]:ForStatement[9150-9258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9190-9263]:Block[9185-9258]"
    }, {
      "left" : "regression.addData(xArray[i], yArray[i]);",
      "right" : "regression.addData(xArray[i], yArray[i]);",
      "info" : "ExpressionStatement[9208-9249]:ExpressionStatement[9203-9244]"
    }, {
      "left" : "return regression.getR();",
      "right" : "return regression.getR();",
      "info" : "ReturnStatement[9276-9301]:ReturnStatement[9271-9296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9325-9552]:Block[9320-9547]"
    }, {
      "left" : "throw MathRuntimeException.createIllegalArgumentException(\n                    \"invalid array dimensions. xArray has size {0}; yArray has {1} elements\",\n                    xArray.length, yArray.length);",
      "right" : "throw MathRuntimeException.createIllegalArgumentException(\n                    \"invalid array dimensions. xArray has size {0}; yArray has {1} elements\",\n                    xArray.length, yArray.length);",
      "info" : "ThrowStatement[9339-9542]:ThrowStatement[9334-9537]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9966-9972]:Modifier[9961-9967]"
    }, {
      "left" : "RealMatrix",
      "right" : "RealMatrix",
      "info" : "SimpleType[9973-9983]:SimpleType[9968-9978]"
    }, {
      "left" : "covarianceToCorrelation",
      "right" : "covarianceToCorrelation",
      "info" : "SimpleName[9984-10007]:SimpleName[9979-10002]"
    }, {
      "left" : "RealMatrix covarianceMatrix",
      "right" : "RealMatrix covarianceMatrix",
      "info" : "SingleVariableDeclaration[10008-10035]:SingleVariableDeclaration[10003-10030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10037-10656]:Block[10032-10651]"
    }, {
      "left" : "int nVars = covarianceMatrix.getColumnDimension();",
      "right" : "int nVars = covarianceMatrix.getColumnDimension();",
      "info" : "VariableDeclarationStatement[10047-10097]:VariableDeclarationStatement[10042-10092]"
    }, {
      "left" : "RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);",
      "right" : "RealMatrix outMatrix = new BlockRealMatrix(nVars, nVars);",
      "info" : "VariableDeclarationStatement[10106-10163]:VariableDeclarationStatement[10101-10158]"
    }, {
      "left" : "for (int i = 0; i < nVars; i++)",
      "right" : "for (int i = 0; i < nVars; i++)",
      "info" : "ForStatement[10172-10624]:ForStatement[10167-10619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10204-10624]:Block[10199-10619]"
    }, {
      "left" : "double sigma = Math.sqrt(covarianceMatrix.getEntry(i, i));",
      "right" : "double sigma = Math.sqrt(covarianceMatrix.getEntry(i, i));",
      "info" : "VariableDeclarationStatement[10218-10276]:VariableDeclarationStatement[10213-10271]"
    }, {
      "left" : "outMatrix.setEntry(i, i, 1d);",
      "right" : "outMatrix.setEntry(i, i, 1d);",
      "info" : "ExpressionStatement[10289-10318]:ExpressionStatement[10284-10313]"
    }, {
      "left" : "for (int j = 0; j < i; j++)",
      "right" : "for (int j = 0; j < i; j++)",
      "info" : "ForStatement[10331-10614]:ForStatement[10326-10609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10359-10614]:Block[10354-10609]"
    }, {
      "left" : "double entry = covarianceMatrix.getEntry(i, j) /\n                       (sigma * Math.sqrt(covarianceMatrix.getEntry(j, j)));",
      "right" : "double entry = covarianceMatrix.getEntry(i, j) /\n                       (sigma * Math.sqrt(covarianceMatrix.getEntry(j, j)));",
      "info" : "VariableDeclarationStatement[10377-10502]:VariableDeclarationStatement[10372-10497]"
    }, {
      "left" : "outMatrix.setEntry(i, j, entry);",
      "right" : "outMatrix.setEntry(i, j, entry);",
      "info" : "ExpressionStatement[10519-10551]:ExpressionStatement[10514-10546]"
    }, {
      "left" : "outMatrix.setEntry(j, i, entry);",
      "right" : "outMatrix.setEntry(j, i, entry);",
      "info" : "ExpressionStatement[10568-10600]:ExpressionStatement[10563-10595]"
    }, {
      "left" : "return outMatrix;",
      "right" : "return outMatrix;",
      "info" : "ReturnStatement[10633-10650]:ReturnStatement[10628-10645]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10846-10853]:Modifier[10841-10848]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10854-10858]:PrimitiveType[10849-10853]"
    }, {
      "left" : "checkSufficientData",
      "right" : "checkSufficientData",
      "info" : "SimpleName[10859-10878]:SimpleName[10854-10873]"
    }, {
      "left" : "final RealMatrix matrix",
      "right" : "final RealMatrix matrix",
      "info" : "SingleVariableDeclaration[10879-10902]:SingleVariableDeclaration[10874-10897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10904-11233]:Block[10899-11228]"
    }, {
      "left" : "int nRows = matrix.getRowDimension();",
      "right" : "int nRows = matrix.getRowDimension();",
      "info" : "VariableDeclarationStatement[10914-10951]:VariableDeclarationStatement[10909-10946]"
    }, {
      "left" : "int nCols = matrix.getColumnDimension();",
      "right" : "int nCols = matrix.getColumnDimension();",
      "info" : "VariableDeclarationStatement[10960-11000]:VariableDeclarationStatement[10955-10995]"
    }, {
      "left" : "if (nRows < 2 || nCols < 2)",
      "right" : "if (nRows < 2 || nCols < 2)",
      "info" : "IfStatement[11009-11227]:IfStatement[11004-11222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11037-11227]:Block[11032-11222]"
    }, {
      "left" : "throw MathRuntimeException.createIllegalArgumentException(\n                    \"insufficient data: only {0} rows and {1} columns.\",\n                    nRows, nCols);",
      "right" : "throw MathRuntimeException.createIllegalArgumentException(\n                    \"insufficient data: only {0} rows and {1} columns.\",\n                    nRows, nCols);",
      "info" : "ThrowStatement[11051-11217]:ThrowStatement[11046-11212]"
    } ]
  },
  "interFileMappings" : { }
}