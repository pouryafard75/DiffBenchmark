{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "TypeDeclaration[751-25776]:TypeDeclaration[751-25791]"
    }, {
      "left" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "right" : "private final static Class<?>[] NO_VIEWS = new Class<?>[0];",
      "info" : "FieldDeclaration[1149-1208]:FieldDeclaration[1149-1208]"
    }, {
      "left" : "final protected POJOPropertiesCollector _propCollector;",
      "right" : "final protected POJOPropertiesCollector _propCollector;",
      "info" : "FieldDeclaration[1387-1644]:FieldDeclaration[1387-1644]"
    }, {
      "left" : "final protected MapperConfig<?> _config;",
      "right" : "final protected MapperConfig<?> _config;",
      "info" : "FieldDeclaration[1654-1694]:FieldDeclaration[1654-1694]"
    }, {
      "left" : "final protected AnnotationIntrospector _annotationIntrospector;",
      "right" : "final protected AnnotationIntrospector _annotationIntrospector;",
      "info" : "FieldDeclaration[1700-1763]:FieldDeclaration[1700-1763]"
    }, {
      "left" : "final protected AnnotatedClass _classInfo;",
      "right" : "final protected AnnotatedClass _classInfo;",
      "info" : "FieldDeclaration[1954-2071]:FieldDeclaration[1954-2071]"
    }, {
      "left" : "protected Class<?>[] _defaultViews;",
      "right" : "protected Class<?>[] _defaultViews;",
      "info" : "FieldDeclaration[2077-2146]:FieldDeclaration[2077-2146]"
    }, {
      "left" : "protected boolean _defaultViewsResolved;",
      "right" : "protected boolean _defaultViewsResolved;",
      "info" : "FieldDeclaration[2152-2226]:FieldDeclaration[2152-2226]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> _properties;",
      "right" : "protected List<BeanPropertyDefinition> _properties;",
      "info" : "FieldDeclaration[2402-2534]:FieldDeclaration[2402-2534]"
    }, {
      "left" : "protected ObjectIdInfo _objectIdInfo;",
      "right" : "protected ObjectIdInfo _objectIdInfo;",
      "info" : "FieldDeclaration[2540-2640]:FieldDeclaration[2540-2640]"
    }, {
      "left" : "protected BasicBeanDescription(POJOPropertiesCollector coll,\n            JavaType type, AnnotatedClass classDef)",
      "right" : "protected BasicBeanDescription(POJOPropertiesCollector coll,\n            JavaType type, AnnotatedClass classDef)",
      "info" : "MethodDeclaration[2808-3293]:MethodDeclaration[2808-3293]"
    }, {
      "left" : "protected BasicBeanDescription(MapperConfig<?> config,\n            JavaType type, AnnotatedClass classDef, List<BeanPropertyDefinition> props)",
      "right" : "protected BasicBeanDescription(MapperConfig<?> config,\n            JavaType type, AnnotatedClass classDef, List<BeanPropertyDefinition> props)",
      "info" : "MethodDeclaration[3299-3958]:MethodDeclaration[3299-3958]"
    }, {
      "left" : "protected BasicBeanDescription(POJOPropertiesCollector coll)",
      "right" : "protected BasicBeanDescription(POJOPropertiesCollector coll)",
      "info" : "MethodDeclaration[3968-4144]:MethodDeclaration[3968-4144]"
    }, {
      "left" : "public static BasicBeanDescription forDeserialization(POJOPropertiesCollector coll)",
      "right" : "public static BasicBeanDescription forDeserialization(POJOPropertiesCollector coll)",
      "info" : "MethodDeclaration[4150-4404]:MethodDeclaration[4150-4404]"
    }, {
      "left" : "public static BasicBeanDescription forSerialization(POJOPropertiesCollector coll)",
      "right" : "public static BasicBeanDescription forSerialization(POJOPropertiesCollector coll)",
      "info" : "MethodDeclaration[4410-4660]:MethodDeclaration[4410-4660]"
    }, {
      "left" : "public static BasicBeanDescription forOtherUse(MapperConfig<?> config,\n            JavaType type, AnnotatedClass ac)",
      "right" : "public static BasicBeanDescription forOtherUse(MapperConfig<?> config,\n            JavaType type, AnnotatedClass ac)",
      "info" : "MethodDeclaration[4666-5132]:MethodDeclaration[4666-5132]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> _properties()",
      "right" : "protected List<BeanPropertyDefinition> _properties()",
      "info" : "MethodDeclaration[5138-5329]:MethodDeclaration[5138-5329]"
    }, {
      "left" : "public boolean removeProperty(String propName)",
      "right" : "public boolean removeProperty(String propName)",
      "info" : "MethodDeclaration[5539-6114]:MethodDeclaration[5539-6114]"
    }, {
      "left" : "public boolean addProperty(BeanPropertyDefinition def)",
      "right" : "public boolean addProperty(BeanPropertyDefinition def)",
      "info" : "MethodDeclaration[6120-6375]:MethodDeclaration[6120-6375]"
    }, {
      "left" : "public boolean hasProperty(PropertyName name)",
      "right" : "public boolean hasProperty(PropertyName name)",
      "info" : "MethodDeclaration[6385-6515]:MethodDeclaration[6385-6515]"
    }, {
      "left" : "public BeanPropertyDefinition findProperty(PropertyName name)",
      "right" : "public BeanPropertyDefinition findProperty(PropertyName name)",
      "info" : "MethodDeclaration[6525-6804]:MethodDeclaration[6525-6804]"
    }, {
      "left" : "public AnnotatedClass getClassInfo()",
      "right" : "public AnnotatedClass getClassInfo()",
      "info" : "MethodDeclaration[7003-7076]:MethodDeclaration[7003-7076]"
    }, {
      "left" : "public ObjectIdInfo getObjectIdInfo()",
      "right" : "public ObjectIdInfo getObjectIdInfo()",
      "info" : "MethodDeclaration[7082-7160]:MethodDeclaration[7082-7160]"
    }, {
      "left" : "public List<BeanPropertyDefinition> findProperties()",
      "right" : "public List<BeanPropertyDefinition> findProperties()",
      "info" : "MethodDeclaration[7166-7270]:MethodDeclaration[7166-7270]"
    }, {
      "left" : "// since 2.9\n    public AnnotatedMethod findJsonValueMethod()",
      "right" : "// since 2.9\n    public AnnotatedMethod findJsonValueMethod()",
      "info" : "MethodDeclaration[7276-7473]:MethodDeclaration[7276-7473]"
    }, {
      "left" : "// since 2.9\n    public AnnotatedMember findJsonValueAccessor()",
      "right" : "// since 2.9\n    public AnnotatedMember findJsonValueAccessor()",
      "info" : "MethodDeclaration[7479-7664]:MethodDeclaration[7479-7664]"
    }, {
      "left" : "public Set<String> getIgnoredPropertyNames()",
      "right" : "public Set<String> getIgnoredPropertyNames()",
      "info" : "MethodDeclaration[7671-7955]:MethodDeclaration[7671-7955]"
    }, {
      "left" : "public boolean hasKnownClassAnnotations()",
      "right" : "public boolean hasKnownClassAnnotations()",
      "info" : "MethodDeclaration[7961-8068]:MethodDeclaration[7961-8068]"
    }, {
      "left" : "public Annotations getClassAnnotations()",
      "right" : "public Annotations getClassAnnotations()",
      "info" : "MethodDeclaration[8074-8180]:MethodDeclaration[8074-8180]"
    }, {
      "left" : "// since 2.7\n    public TypeBindings bindingsForBeanType()",
      "right" : "// since 2.7\n    public TypeBindings bindingsForBeanType()",
      "info" : "MethodDeclaration[8186-8314]:MethodDeclaration[8186-8314]"
    }, {
      "left" : "// since 2.8\n    public JavaType resolveType(java.lang.reflect.Type jdkType)",
      "right" : "// since 2.8\n    public JavaType resolveType(java.lang.reflect.Type jdkType)",
      "info" : "MethodDeclaration[8320-8581]:MethodDeclaration[8320-8581]"
    }, {
      "left" : "public AnnotatedConstructor findDefaultConstructor()",
      "right" : "public AnnotatedConstructor findDefaultConstructor()",
      "info" : "MethodDeclaration[8587-8712]:MethodDeclaration[8587-8712]"
    }, {
      "left" : "public AnnotatedMember findAnySetterAccessor() throws IllegalArgumentException",
      "right" : "public AnnotatedMember findAnySetterAccessor() throws IllegalArgumentException",
      "info" : "MethodDeclaration[8718-10370]:MethodDeclaration[8718-10370]"
    }, {
      "left" : "public Map<Object, AnnotatedMember> findInjectables()",
      "right" : "public Map<Object, AnnotatedMember> findInjectables()",
      "info" : "MethodDeclaration[10376-10590]:MethodDeclaration[10376-10590]"
    }, {
      "left" : "public List<AnnotatedConstructor> getConstructors()",
      "right" : "public List<AnnotatedConstructor> getConstructors()",
      "info" : "MethodDeclaration[10596-10714]:MethodDeclaration[10596-10714]"
    }, {
      "left" : "public Object instantiateBean(boolean fixAccess)",
      "right" : "public Object instantiateBean(boolean fixAccess)",
      "info" : "MethodDeclaration[10720-11570]:MethodDeclaration[10720-11585]"
    }, {
      "left" : "public AnnotatedMethod findMethod(String name, Class<?>[] paramTypes)",
      "right" : "public AnnotatedMethod findMethod(String name, Class<?>[] paramTypes)",
      "info" : "MethodDeclaration[11754-11901]:MethodDeclaration[11769-11916]"
    }, {
      "left" : "public JsonFormat.Value findExpectedFormat(JsonFormat.Value defValue)",
      "right" : "public JsonFormat.Value findExpectedFormat(JsonFormat.Value defValue)",
      "info" : "MethodDeclaration[12101-13013]:MethodDeclaration[12116-13028]"
    }, {
      "left" : "// since 2.9\n    public Class<?>[] findDefaultViews()",
      "right" : "// since 2.9\n    public Class<?>[] findDefaultViews()",
      "info" : "MethodDeclaration[13019-13660]:MethodDeclaration[13034-13675]"
    }, {
      "left" : "public Converter<Object,Object> findSerializationConverter()",
      "right" : "public Converter<Object,Object> findSerializationConverter()",
      "info" : "MethodDeclaration[13849-14114]:MethodDeclaration[13864-14129]"
    }, {
      "left" : "public JsonInclude.Value findPropertyInclusion(JsonInclude.Value defValue)",
      "right" : "public JsonInclude.Value findPropertyInclusion(JsonInclude.Value defValue)",
      "info" : "MethodDeclaration[14120-14782]:MethodDeclaration[14135-14797]"
    }, {
      "left" : "public AnnotatedMember findAnyGetter() throws IllegalArgumentException",
      "right" : "public AnnotatedMember findAnyGetter() throws IllegalArgumentException",
      "info" : "MethodDeclaration[14788-15775]:MethodDeclaration[14803-15790]"
    }, {
      "left" : "public List<BeanPropertyDefinition> findBackReferences()",
      "right" : "public List<BeanPropertyDefinition> findBackReferences()",
      "info" : "MethodDeclaration[15781-16725]:MethodDeclaration[15796-16740]"
    }, {
      "left" : "public Map<String,AnnotatedMember> findBackReferenceProperties()",
      "right" : "public Map<String,AnnotatedMember> findBackReferenceProperties()",
      "info" : "MethodDeclaration[16731-17187]:MethodDeclaration[16746-17202]"
    }, {
      "left" : "public List<AnnotatedMethod> getFactoryMethods()",
      "right" : "public List<AnnotatedMethod> getFactoryMethods()",
      "info" : "MethodDeclaration[17389-18102]:MethodDeclaration[17404-18117]"
    }, {
      "left" : "public Constructor<?> findSingleArgConstructor(Class<?>... argTypes)",
      "right" : "public Constructor<?> findSingleArgConstructor(Class<?>... argTypes)",
      "info" : "MethodDeclaration[18108-18829]:MethodDeclaration[18123-18844]"
    }, {
      "left" : "public Method findFactoryMethod(Class<?>... expArgTypes)",
      "right" : "public Method findFactoryMethod(Class<?>... expArgTypes)",
      "info" : "MethodDeclaration[18835-19659]:MethodDeclaration[18850-19674]"
    }, {
      "left" : "protected boolean isFactoryMethod(AnnotatedMethod am)",
      "right" : "protected boolean isFactoryMethod(AnnotatedMethod am)",
      "info" : "MethodDeclaration[19665-21088]:MethodDeclaration[19680-21103]"
    }, {
      "left" : "// since 2.8, not used at least since 2.7\n    protected PropertyName _findCreatorPropertyName(AnnotatedParameter param)",
      "right" : "// since 2.8, not used at least since 2.7\n    protected PropertyName _findCreatorPropertyName(AnnotatedParameter param)",
      "info" : "MethodDeclaration[21094-21643]:MethodDeclaration[21109-21658]"
    }, {
      "left" : "public Class<?> findPOJOBuilder()",
      "right" : "public Class<?> findPOJOBuilder()",
      "info" : "MethodDeclaration[21841-22014]:MethodDeclaration[21856-22029]"
    }, {
      "left" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig()",
      "right" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig()",
      "info" : "MethodDeclaration[22020-22231]:MethodDeclaration[22035-22246]"
    }, {
      "left" : "public Converter<Object,Object> findDeserializationConverter()",
      "right" : "public Converter<Object,Object> findDeserializationConverter()",
      "info" : "MethodDeclaration[22237-22506]:MethodDeclaration[22252-22521]"
    }, {
      "left" : "public String findClassDescription()",
      "right" : "public String findClassDescription()",
      "info" : "MethodDeclaration[22512-22702]:MethodDeclaration[22527-22717]"
    }, {
      "left" : "public LinkedHashMap<String,AnnotatedField> _findPropertyFields(\n            Collection<String> ignoredProperties, boolean forSerialization)",
      "right" : "public LinkedHashMap<String,AnnotatedField> _findPropertyFields(\n            Collection<String> ignoredProperties, boolean forSerialization)",
      "info" : "MethodDeclaration[22898-24103]:MethodDeclaration[22913-24118]"
    }, {
      "left" : "protected Converter<Object,Object> _createConverter(Object converterDef)",
      "right" : "protected Converter<Object,Object> _createConverter(Object converterDef)",
      "info" : "MethodDeclaration[24286-25774]:MethodDeclaration[24301-25789]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1068-1074]:Modifier[1068-1074]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1075-1080]:TYPE_DECLARATION_KIND[1075-1080]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleName[1081-1101]:SimpleName[1081-1101]"
    }, {
      "left" : "BeanDescription",
      "right" : "BeanDescription",
      "info" : "SimpleType[1110-1125]:SimpleType[1110-1125]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2808-2817]:Modifier[2808-2817]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleName[2818-2838]:SimpleName[2818-2838]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[2839-2867]:SingleVariableDeclaration[2839-2867]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[2881-2894]:SingleVariableDeclaration[2881-2894]"
    }, {
      "left" : "AnnotatedClass classDef",
      "right" : "AnnotatedClass classDef",
      "info" : "SingleVariableDeclaration[2896-2919]:SingleVariableDeclaration[2896-2919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2925-3293]:Block[2925-3293]"
    }, {
      "left" : "super(type);",
      "right" : "super(type);",
      "info" : "SuperConstructorInvocation[2935-2947]:SuperConstructorInvocation[2935-2947]"
    }, {
      "left" : "_propCollector = coll;",
      "right" : "_propCollector = coll;",
      "info" : "ExpressionStatement[2956-2978]:ExpressionStatement[2956-2978]"
    }, {
      "left" : "_config = coll.getConfig();",
      "right" : "_config = coll.getConfig();",
      "info" : "ExpressionStatement[2987-3014]:ExpressionStatement[2987-3014]"
    }, {
      "left" : "if (_config == null)",
      "right" : "if (_config == null)",
      "info" : "IfStatement[3088-3256]:IfStatement[3088-3256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3109-3164]:Block[3109-3164]"
    }, {
      "left" : "_annotationIntrospector = null;",
      "right" : "_annotationIntrospector = null;",
      "info" : "ExpressionStatement[3123-3154]:ExpressionStatement[3123-3154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3170-3256]:Block[3170-3256]"
    }, {
      "left" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "right" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "info" : "ExpressionStatement[3184-3246]:ExpressionStatement[3184-3246]"
    }, {
      "left" : "_classInfo = classDef;",
      "right" : "_classInfo = classDef;",
      "info" : "ExpressionStatement[3265-3287]:ExpressionStatement[3265-3287]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3424-3433]:Modifier[3424-3433]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleName[3434-3454]:SimpleName[3434-3454]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[3455-3477]:SingleVariableDeclaration[3455-3477]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[3491-3504]:SingleVariableDeclaration[3491-3504]"
    }, {
      "left" : "AnnotatedClass classDef",
      "right" : "AnnotatedClass classDef",
      "info" : "SingleVariableDeclaration[3506-3529]:SingleVariableDeclaration[3506-3529]"
    }, {
      "left" : "List<BeanPropertyDefinition> props",
      "right" : "List<BeanPropertyDefinition> props",
      "info" : "SingleVariableDeclaration[3531-3565]:SingleVariableDeclaration[3531-3565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3571-3958]:Block[3571-3958]"
    }, {
      "left" : "super(type);",
      "right" : "super(type);",
      "info" : "SuperConstructorInvocation[3581-3593]:SuperConstructorInvocation[3581-3593]"
    }, {
      "left" : "_propCollector = null;",
      "right" : "_propCollector = null;",
      "info" : "ExpressionStatement[3602-3624]:ExpressionStatement[3602-3624]"
    }, {
      "left" : "_config = config;",
      "right" : "_config = config;",
      "info" : "ExpressionStatement[3633-3650]:ExpressionStatement[3633-3650]"
    }, {
      "left" : "if (_config == null)",
      "right" : "if (_config == null)",
      "info" : "IfStatement[3724-3892]:IfStatement[3724-3892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3745-3800]:Block[3745-3800]"
    }, {
      "left" : "_annotationIntrospector = null;",
      "right" : "_annotationIntrospector = null;",
      "info" : "ExpressionStatement[3759-3790]:ExpressionStatement[3759-3790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3806-3892]:Block[3806-3892]"
    }, {
      "left" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "right" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "info" : "ExpressionStatement[3820-3882]:ExpressionStatement[3820-3882]"
    }, {
      "left" : "_classInfo = classDef;",
      "right" : "_classInfo = classDef;",
      "info" : "ExpressionStatement[3901-3923]:ExpressionStatement[3901-3923]"
    }, {
      "left" : "_properties = props;",
      "right" : "_properties = props;",
      "info" : "ExpressionStatement[3932-3952]:ExpressionStatement[3932-3952]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3968-3977]:Modifier[3968-3977]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleName[3978-3998]:SimpleName[3978-3998]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[3999-4027]:SingleVariableDeclaration[3999-4027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4033-4144]:Block[4033-4144]"
    }, {
      "left" : "this(coll, coll.getType(), coll.getClassDef());",
      "right" : "this(coll, coll.getType(), coll.getClassDef());",
      "info" : "ConstructorInvocation[4043-4090]:ConstructorInvocation[4043-4090]"
    }, {
      "left" : "_objectIdInfo = coll.getObjectIdInfo();",
      "right" : "_objectIdInfo = coll.getObjectIdInfo();",
      "info" : "ExpressionStatement[4099-4138]:ExpressionStatement[4099-4138]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4266-4272]:Modifier[4266-4272]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4273-4279]:Modifier[4273-4279]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleType[4280-4300]:SimpleType[4280-4300]"
    }, {
      "left" : "forDeserialization",
      "right" : "forDeserialization",
      "info" : "SimpleName[4301-4319]:SimpleName[4301-4319]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[4320-4348]:SingleVariableDeclaration[4320-4348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4350-4404]:Block[4350-4404]"
    }, {
      "left" : "return new BasicBeanDescription(coll);",
      "right" : "return new BasicBeanDescription(coll);",
      "info" : "ReturnStatement[4360-4398]:ReturnStatement[4360-4398]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4524-4530]:Modifier[4524-4530]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4531-4537]:Modifier[4531-4537]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleType[4538-4558]:SimpleType[4538-4558]"
    }, {
      "left" : "forSerialization",
      "right" : "forSerialization",
      "info" : "SimpleName[4559-4575]:SimpleName[4559-4575]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[4576-4604]:SingleVariableDeclaration[4576-4604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4606-4660]:Block[4606-4660]"
    }, {
      "left" : "return new BasicBeanDescription(coll);",
      "right" : "return new BasicBeanDescription(coll);",
      "info" : "ReturnStatement[4616-4654]:ReturnStatement[4616-4654]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4880-4886]:Modifier[4880-4886]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4887-4893]:Modifier[4887-4893]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleType[4894-4914]:SimpleType[4894-4914]"
    }, {
      "left" : "forOtherUse",
      "right" : "forOtherUse",
      "info" : "SimpleName[4915-4926]:SimpleName[4915-4926]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[4927-4949]:SingleVariableDeclaration[4927-4949]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[4963-4976]:SingleVariableDeclaration[4963-4976]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[4978-4995]:SingleVariableDeclaration[4978-4995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5001-5132]:Block[5001-5132]"
    }, {
      "left" : "return new BasicBeanDescription(config, type,\n                ac, Collections.<BeanPropertyDefinition>emptyList());",
      "right" : "return new BasicBeanDescription(config, type,\n                ac, Collections.<BeanPropertyDefinition>emptyList());",
      "info" : "ReturnStatement[5011-5126]:ReturnStatement[5011-5126]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5138-5147]:Modifier[5138-5147]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[5148-5176]:ParameterizedType[5148-5176]"
    }, {
      "left" : "_properties",
      "right" : "_properties",
      "info" : "SimpleName[5177-5188]:SimpleName[5177-5188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5191-5329]:Block[5191-5329]"
    }, {
      "left" : "if (_properties == null)",
      "right" : "if (_properties == null)",
      "info" : "IfStatement[5201-5295]:IfStatement[5201-5295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5226-5295]:Block[5226-5295]"
    }, {
      "left" : "_properties = _propCollector.getProperties();",
      "right" : "_properties = _propCollector.getProperties();",
      "info" : "ExpressionStatement[5240-5285]:ExpressionStatement[5240-5285]"
    }, {
      "left" : "return _properties;",
      "right" : "return _properties;",
      "info" : "ReturnStatement[5304-5323]:ReturnStatement[5304-5323]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5745-5751]:Modifier[5745-5751]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5752-5759]:PrimitiveType[5752-5759]"
    }, {
      "left" : "removeProperty",
      "right" : "removeProperty",
      "info" : "SimpleName[5760-5774]:SimpleName[5760-5774]"
    }, {
      "left" : "String propName",
      "right" : "String propName",
      "info" : "SingleVariableDeclaration[5775-5790]:SingleVariableDeclaration[5775-5790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5796-6114]:Block[5796-6114]"
    }, {
      "left" : "Iterator<BeanPropertyDefinition> it = _properties().iterator();",
      "right" : "Iterator<BeanPropertyDefinition> it = _properties().iterator();",
      "info" : "VariableDeclarationStatement[5806-5869]:VariableDeclarationStatement[5806-5869]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[5878-6086]:WhileStatement[5878-6086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5899-6086]:Block[5899-6086]"
    }, {
      "left" : "BeanPropertyDefinition prop = it.next();",
      "right" : "BeanPropertyDefinition prop = it.next();",
      "info" : "VariableDeclarationStatement[5913-5953]:VariableDeclarationStatement[5913-5953]"
    }, {
      "left" : "if (prop.getName().equals(propName))",
      "right" : "if (prop.getName().equals(propName))",
      "info" : "IfStatement[5966-6076]:IfStatement[5966-6076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6003-6076]:Block[6003-6076]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[6021-6033]:ExpressionStatement[6021-6033]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6050-6062]:ReturnStatement[6050-6062]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6095-6108]:ReturnStatement[6095-6108]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6120-6126]:Modifier[6120-6126]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6127-6134]:PrimitiveType[6127-6134]"
    }, {
      "left" : "addProperty",
      "right" : "addProperty",
      "info" : "SimpleName[6135-6146]:SimpleName[6135-6146]"
    }, {
      "left" : "BeanPropertyDefinition def",
      "right" : "BeanPropertyDefinition def",
      "info" : "SingleVariableDeclaration[6147-6173]:SingleVariableDeclaration[6147-6173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6179-6375]:Block[6179-6375]"
    }, {
      "left" : "if (hasProperty(def.getFullName()))",
      "right" : "if (hasProperty(def.getFullName()))",
      "info" : "IfStatement[6243-6316]:IfStatement[6243-6316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6279-6316]:Block[6279-6316]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6293-6306]:ReturnStatement[6293-6306]"
    }, {
      "left" : "_properties().add(def);",
      "right" : "_properties().add(def);",
      "info" : "ExpressionStatement[6325-6348]:ExpressionStatement[6325-6348]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[6357-6369]:ReturnStatement[6357-6369]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6419-6425]:Modifier[6419-6425]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6426-6433]:PrimitiveType[6426-6433]"
    }, {
      "left" : "hasProperty",
      "right" : "hasProperty",
      "info" : "SimpleName[6434-6445]:SimpleName[6434-6445]"
    }, {
      "left" : "PropertyName name",
      "right" : "PropertyName name",
      "info" : "SingleVariableDeclaration[6446-6463]:SingleVariableDeclaration[6446-6463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6465-6515]:Block[6465-6515]"
    }, {
      "left" : "return findProperty(name) != null;",
      "right" : "return findProperty(name) != null;",
      "info" : "ReturnStatement[6475-6509]:ReturnStatement[6475-6509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6559-6565]:Modifier[6559-6565]"
    }, {
      "left" : "BeanPropertyDefinition",
      "right" : "BeanPropertyDefinition",
      "info" : "SimpleType[6566-6588]:SimpleType[6566-6588]"
    }, {
      "left" : "findProperty",
      "right" : "findProperty",
      "info" : "SimpleName[6589-6601]:SimpleName[6589-6601]"
    }, {
      "left" : "PropertyName name",
      "right" : "PropertyName name",
      "info" : "SingleVariableDeclaration[6602-6619]:SingleVariableDeclaration[6602-6619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6625-6804]:Block[6625-6804]"
    }, {
      "left" : "for (BeanPropertyDefinition prop : _properties())",
      "right" : "for (BeanPropertyDefinition prop : _properties())",
      "info" : "EnhancedForStatement[6635-6777]:EnhancedForStatement[6635-6777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6685-6777]:Block[6685-6777]"
    }, {
      "left" : "if (prop.hasName(name))",
      "right" : "if (prop.hasName(name))",
      "info" : "IfStatement[6699-6767]:IfStatement[6699-6767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6723-6767]:Block[6723-6767]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[6741-6753]:ReturnStatement[6741-6753]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6786-6798]:ReturnStatement[6786-6798]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7003-7012]:MarkerAnnotation[7003-7012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7017-7023]:Modifier[7017-7023]"
    }, {
      "left" : "AnnotatedClass",
      "right" : "AnnotatedClass",
      "info" : "SimpleType[7024-7038]:SimpleType[7024-7038]"
    }, {
      "left" : "getClassInfo",
      "right" : "getClassInfo",
      "info" : "SimpleName[7039-7051]:SimpleName[7039-7051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7054-7076]:Block[7054-7076]"
    }, {
      "left" : "return _classInfo;",
      "right" : "return _classInfo;",
      "info" : "ReturnStatement[7056-7074]:ReturnStatement[7056-7074]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7082-7091]:MarkerAnnotation[7082-7091]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7096-7102]:Modifier[7096-7102]"
    }, {
      "left" : "ObjectIdInfo",
      "right" : "ObjectIdInfo",
      "info" : "SimpleType[7103-7115]:SimpleType[7103-7115]"
    }, {
      "left" : "getObjectIdInfo",
      "right" : "getObjectIdInfo",
      "info" : "SimpleName[7116-7131]:SimpleName[7116-7131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7134-7160]:Block[7134-7160]"
    }, {
      "left" : "return  _objectIdInfo;",
      "right" : "return  _objectIdInfo;",
      "info" : "ReturnStatement[7136-7158]:ReturnStatement[7136-7158]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7166-7175]:MarkerAnnotation[7166-7175]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7180-7186]:Modifier[7180-7186]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[7187-7215]:ParameterizedType[7187-7215]"
    }, {
      "left" : "findProperties",
      "right" : "findProperties",
      "info" : "SimpleName[7216-7230]:SimpleName[7216-7230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7233-7270]:Block[7233-7270]"
    }, {
      "left" : "return _properties();",
      "right" : "return _properties();",
      "info" : "ReturnStatement[7243-7264]:ReturnStatement[7243-7264]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7276-7285]:MarkerAnnotation[7276-7285]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[7290-7301]:MarkerAnnotation[7290-7301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7319-7325]:Modifier[7319-7325]"
    }, {
      "left" : "AnnotatedMethod",
      "right" : "AnnotatedMethod",
      "info" : "SimpleType[7326-7341]:SimpleType[7326-7341]"
    }, {
      "left" : "findJsonValueMethod",
      "right" : "findJsonValueMethod",
      "info" : "SimpleName[7342-7361]:SimpleName[7342-7361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7364-7473]:Block[7364-7473]"
    }, {
      "left" : "return (_propCollector == null) ? null\n                : _propCollector.getJsonValueMethod();",
      "right" : "return (_propCollector == null) ? null\n                : _propCollector.getJsonValueMethod();",
      "info" : "ReturnStatement[7374-7467]:ReturnStatement[7374-7467]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7479-7488]:MarkerAnnotation[7479-7488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7506-7512]:Modifier[7506-7512]"
    }, {
      "left" : "AnnotatedMember",
      "right" : "AnnotatedMember",
      "info" : "SimpleType[7513-7528]:SimpleType[7513-7528]"
    }, {
      "left" : "findJsonValueAccessor",
      "right" : "findJsonValueAccessor",
      "info" : "SimpleName[7529-7550]:SimpleName[7529-7550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7553-7664]:Block[7553-7664]"
    }, {
      "left" : "return (_propCollector == null) ? null\n                : _propCollector.getJsonValueAccessor();",
      "right" : "return (_propCollector == null) ? null\n                : _propCollector.getJsonValueAccessor();",
      "info" : "ReturnStatement[7563-7658]:ReturnStatement[7563-7658]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7671-7680]:MarkerAnnotation[7671-7680]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7685-7691]:Modifier[7685-7691]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[7692-7703]:ParameterizedType[7692-7703]"
    }, {
      "left" : "getIgnoredPropertyNames",
      "right" : "getIgnoredPropertyNames",
      "info" : "SimpleName[7704-7727]:SimpleName[7704-7727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7730-7955]:Block[7730-7955]"
    }, {
      "left" : "Set<String> ign = (_propCollector == null) ? null\n                : _propCollector.getIgnoredPropertyNames();",
      "right" : "Set<String> ign = (_propCollector == null) ? null\n                : _propCollector.getIgnoredPropertyNames();",
      "info" : "VariableDeclarationStatement[7740-7849]:VariableDeclarationStatement[7740-7849]"
    }, {
      "left" : "if (ign == null)",
      "right" : "if (ign == null)",
      "info" : "IfStatement[7858-7929]:IfStatement[7858-7929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7875-7929]:Block[7875-7929]"
    }, {
      "left" : "return Collections.emptySet();",
      "right" : "return Collections.emptySet();",
      "info" : "ReturnStatement[7889-7919]:ReturnStatement[7889-7919]"
    }, {
      "left" : "return ign;",
      "right" : "return ign;",
      "info" : "ReturnStatement[7938-7949]:ReturnStatement[7938-7949]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7961-7970]:MarkerAnnotation[7961-7970]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7975-7981]:Modifier[7975-7981]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7982-7989]:PrimitiveType[7982-7989]"
    }, {
      "left" : "hasKnownClassAnnotations",
      "right" : "hasKnownClassAnnotations",
      "info" : "SimpleName[7990-8014]:SimpleName[7990-8014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8017-8068]:Block[8017-8068]"
    }, {
      "left" : "return _classInfo.hasAnnotations();",
      "right" : "return _classInfo.hasAnnotations();",
      "info" : "ReturnStatement[8027-8062]:ReturnStatement[8027-8062]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8074-8083]:MarkerAnnotation[8074-8083]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8088-8094]:Modifier[8088-8094]"
    }, {
      "left" : "Annotations",
      "right" : "Annotations",
      "info" : "SimpleType[8095-8106]:SimpleType[8095-8106]"
    }, {
      "left" : "getClassAnnotations",
      "right" : "getClassAnnotations",
      "info" : "SimpleName[8107-8126]:SimpleName[8107-8126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8129-8180]:Block[8129-8180]"
    }, {
      "left" : "return _classInfo.getAnnotations();",
      "right" : "return _classInfo.getAnnotations();",
      "info" : "ReturnStatement[8139-8174]:ReturnStatement[8139-8174]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8186-8195]:MarkerAnnotation[8186-8195]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[8200-8211]:MarkerAnnotation[8200-8211]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8229-8235]:Modifier[8229-8235]"
    }, {
      "left" : "TypeBindings",
      "right" : "TypeBindings",
      "info" : "SimpleType[8236-8248]:SimpleType[8236-8248]"
    }, {
      "left" : "bindingsForBeanType",
      "right" : "bindingsForBeanType",
      "info" : "SimpleName[8249-8268]:SimpleName[8249-8268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8271-8314]:Block[8271-8314]"
    }, {
      "left" : "return _type.getBindings();",
      "right" : "return _type.getBindings();",
      "info" : "ReturnStatement[8281-8308]:ReturnStatement[8281-8308]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8320-8329]:MarkerAnnotation[8320-8329]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[8334-8345]:MarkerAnnotation[8334-8345]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8363-8369]:Modifier[8363-8369]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[8370-8378]:SimpleType[8370-8378]"
    }, {
      "left" : "resolveType",
      "right" : "resolveType",
      "info" : "SimpleName[8379-8390]:SimpleName[8379-8390]"
    }, {
      "left" : "java.lang.reflect.Type jdkType",
      "right" : "java.lang.reflect.Type jdkType",
      "info" : "SingleVariableDeclaration[8391-8421]:SingleVariableDeclaration[8391-8421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8423-8581]:Block[8423-8581]"
    }, {
      "left" : "if (jdkType == null)",
      "right" : "if (jdkType == null)",
      "info" : "IfStatement[8433-8490]:IfStatement[8433-8490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8454-8490]:Block[8454-8490]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8468-8480]:ReturnStatement[8468-8480]"
    }, {
      "left" : "return _config.getTypeFactory().constructType(jdkType, _type.getBindings());",
      "right" : "return _config.getTypeFactory().constructType(jdkType, _type.getBindings());",
      "info" : "ReturnStatement[8499-8575]:ReturnStatement[8499-8575]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8587-8596]:MarkerAnnotation[8587-8596]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8601-8607]:Modifier[8601-8607]"
    }, {
      "left" : "AnnotatedConstructor",
      "right" : "AnnotatedConstructor",
      "info" : "SimpleType[8608-8628]:SimpleType[8608-8628]"
    }, {
      "left" : "findDefaultConstructor",
      "right" : "findDefaultConstructor",
      "info" : "SimpleName[8629-8651]:SimpleName[8629-8651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8654-8712]:Block[8654-8712]"
    }, {
      "left" : "return _classInfo.getDefaultConstructor();",
      "right" : "return _classInfo.getDefaultConstructor();",
      "info" : "ReturnStatement[8664-8706]:ReturnStatement[8664-8706]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8718-8727]:MarkerAnnotation[8718-8727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8732-8738]:Modifier[8732-8738]"
    }, {
      "left" : "AnnotatedMember",
      "right" : "AnnotatedMember",
      "info" : "SimpleType[8739-8754]:SimpleType[8739-8754]"
    }, {
      "left" : "findAnySetterAccessor",
      "right" : "findAnySetterAccessor",
      "info" : "SimpleName[8755-8776]:SimpleName[8755-8776]"
    }, {
      "left" : "IllegalArgumentException",
      "right" : "IllegalArgumentException",
      "info" : "SimpleType[8786-8810]:SimpleType[8786-8810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8815-10370]:Block[8815-10370]"
    }, {
      "left" : "if (_propCollector != null)",
      "right" : "if (_propCollector != null)",
      "info" : "IfStatement[8825-10343]:IfStatement[8825-10343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8853-10343]:Block[8853-10343]"
    }, {
      "left" : "AnnotatedMethod anyMethod = _propCollector.getAnySetterMethod();",
      "right" : "AnnotatedMethod anyMethod = _propCollector.getAnySetterMethod();",
      "info" : "VariableDeclarationStatement[8867-8931]:VariableDeclarationStatement[8867-8931]"
    }, {
      "left" : "if (anyMethod != null)",
      "right" : "if (anyMethod != null)",
      "info" : "IfStatement[8944-9722]:IfStatement[8944-9722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8967-9722]:Block[8967-9722]"
    }, {
      "left" : "Class<?> type = anyMethod.getRawParameterType(0);",
      "right" : "Class<?> type = anyMethod.getRawParameterType(0);",
      "info" : "VariableDeclarationStatement[9321-9370]:VariableDeclarationStatement[9321-9370]"
    }, {
      "left" : "if ((type != String.class) && (type != Object.class))",
      "right" : "if ((type != String.class) && (type != Object.class))",
      "info" : "IfStatement[9387-9674]:IfStatement[9387-9674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9441-9674]:Block[9441-9674]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\n\"Invalid 'any-setter' annotation on method '%s()': first argument not of type String or Object, but %s\",\nanyMethod.getName(), type.getName()));",
      "right" : "throw new IllegalArgumentException(String.format(\n\"Invalid 'any-setter' annotation on method '%s()': first argument not of type String or Object, but %s\",\nanyMethod.getName(), type.getName()));",
      "info" : "ThrowStatement[9463-9656]:ThrowStatement[9463-9656]"
    }, {
      "left" : "return anyMethod;",
      "right" : "return anyMethod;",
      "info" : "ReturnStatement[9691-9708]:ReturnStatement[9691-9708]"
    }, {
      "left" : "AnnotatedMember anyField = _propCollector.getAnySetterField();",
      "right" : "AnnotatedMember anyField = _propCollector.getAnySetterField();",
      "info" : "VariableDeclarationStatement[9735-9797]:VariableDeclarationStatement[9735-9797]"
    }, {
      "left" : "if (anyField != null)",
      "right" : "if (anyField != null)",
      "info" : "IfStatement[9810-10333]:IfStatement[9810-10333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9832-10333]:Block[9832-10333]"
    }, {
      "left" : "Class<?> type = anyField.getRawType();",
      "right" : "Class<?> type = anyField.getRawType();",
      "info" : "VariableDeclarationStatement[9993-10031]:VariableDeclarationStatement[9993-10031]"
    }, {
      "left" : "if (!Map.class.isAssignableFrom(type))",
      "right" : "if (!Map.class.isAssignableFrom(type))",
      "info" : "IfStatement[10048-10286]:IfStatement[10048-10286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10087-10286]:Block[10087-10286]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\n\"Invalid 'any-setter' annotation on field '%s': type is not instance of java.util.Map\",\nanyField.getName()));",
      "right" : "throw new IllegalArgumentException(String.format(\n\"Invalid 'any-setter' annotation on field '%s': type is not instance of java.util.Map\",\nanyField.getName()));",
      "info" : "ThrowStatement[10109-10268]:ThrowStatement[10109-10268]"
    }, {
      "left" : "return anyField;",
      "right" : "return anyField;",
      "info" : "ReturnStatement[10303-10319]:ReturnStatement[10303-10319]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10352-10364]:ReturnStatement[10352-10364]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10376-10385]:MarkerAnnotation[10376-10385]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10390-10396]:Modifier[10390-10396]"
    }, {
      "left" : "Map<Object, AnnotatedMember>",
      "right" : "Map<Object, AnnotatedMember>",
      "info" : "ParameterizedType[10397-10425]:ParameterizedType[10397-10425]"
    }, {
      "left" : "findInjectables",
      "right" : "findInjectables",
      "info" : "SimpleName[10426-10441]:SimpleName[10426-10441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10444-10590]:Block[10444-10590]"
    }, {
      "left" : "if (_propCollector != null)",
      "right" : "if (_propCollector != null)",
      "info" : "IfStatement[10454-10545]:IfStatement[10454-10545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10482-10545]:Block[10482-10545]"
    }, {
      "left" : "return _propCollector.getInjectables();",
      "right" : "return _propCollector.getInjectables();",
      "info" : "ReturnStatement[10496-10535]:ReturnStatement[10496-10535]"
    }, {
      "left" : "return Collections.emptyMap();",
      "right" : "return Collections.emptyMap();",
      "info" : "ReturnStatement[10554-10584]:ReturnStatement[10554-10584]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10596-10605]:MarkerAnnotation[10596-10605]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10610-10616]:Modifier[10610-10616]"
    }, {
      "left" : "List<AnnotatedConstructor>",
      "right" : "List<AnnotatedConstructor>",
      "info" : "ParameterizedType[10617-10643]:ParameterizedType[10617-10643]"
    }, {
      "left" : "getConstructors",
      "right" : "getConstructors",
      "info" : "SimpleName[10644-10659]:SimpleName[10644-10659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10662-10714]:Block[10662-10714]"
    }, {
      "left" : "return _classInfo.getConstructors();",
      "right" : "return _classInfo.getConstructors();",
      "info" : "ReturnStatement[10672-10708]:ReturnStatement[10672-10708]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10734-10740]:Modifier[10734-10740]"
    }, {
      "left" : "instantiateBean",
      "right" : "instantiateBean",
      "info" : "SimpleName[10748-10763]:SimpleName[10748-10763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10783-11570]:Block[10783-11585]"
    }, {
      "left" : "AnnotatedConstructor ac = _classInfo.getDefaultConstructor();",
      "right" : "AnnotatedConstructor ac = _classInfo.getDefaultConstructor();",
      "info" : "VariableDeclarationStatement[10793-10854]:VariableDeclarationStatement[10793-10854]"
    }, {
      "left" : "if (ac == null)",
      "right" : "if (ac == null)",
      "info" : "IfStatement[10863-10915]:IfStatement[10863-10915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10879-10915]:Block[10879-10915]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10893-10905]:ReturnStatement[10893-10905]"
    }, {
      "left" : "if (fixAccess)",
      "right" : "if (fixAccess)",
      "info" : "IfStatement[10924-11043]:IfStatement[10924-11043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10939-11043]:Block[10939-11043]"
    }, {
      "left" : "ac.fixAccess(_config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ac.fixAccess(_config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[10953-11033]:ExpressionStatement[10953-11033]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[11052-11564]:TryStatement[11052-11579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11056-11119]:Block[11056-11119]"
    }, {
      "left" : "return ac.getAnnotated().newInstance();",
      "right" : "return ac.getAnnotated().newInstance();",
      "info" : "ReturnStatement[11070-11109]:ReturnStatement[11070-11109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11140-11564]:Block[11140-11579]"
    }, {
      "left" : "Throwable t = e;",
      "right" : "Throwable t = e;",
      "info" : "VariableDeclarationStatement[11154-11170]:VariableDeclarationStatement[11154-11170]"
    }, {
      "left" : "while (t.getCause() != null)",
      "right" : "while (t.getCause() != null)",
      "info" : "WhileStatement[11183-11261]:WhileStatement[11183-11261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11212-11261]:Block[11212-11261]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[11230-11247]:ExpressionStatement[11230-11247]"
    }, {
      "left" : "ClassUtil.throwIfError(t);",
      "right" : "ClassUtil.throwIfError(t);",
      "info" : "ExpressionStatement[11274-11300]:ExpressionStatement[11274-11300]"
    }, {
      "left" : "ClassUtil.throwIfRTE(t);",
      "right" : "ClassUtil.throwIfRTE(t);",
      "info" : "ExpressionStatement[11313-11337]:ExpressionStatement[11313-11337]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to instantiate bean of type \"\n                    +_classInfo.getAnnotated().getName()+\": (\"+t.getClass().getName()+\") \"\n                    +t.getMessage(), t);",
      "right" : "throw new IllegalArgumentException(\"Failed to instantiate bean of type \"\n                    +_classInfo.getAnnotated().getName()+\": (\"+t.getClass().getName()+\") \"\n                    +ClassUtil.exceptionMessage(t), t);",
      "info" : "ThrowStatement[11350-11554]:ThrowStatement[11350-11569]"
    }, {
      "left" : "t",
      "right" : "t",
      "info" : "SimpleName[11535-11536]:SimpleName[11562-11563]"
    }, {
      "left" : "getMessage",
      "right" : "exceptionMessage",
      "info" : "SimpleName[11537-11547]:SimpleName[11545-11561]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11754-11763]:MarkerAnnotation[11769-11778]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11768-11774]:Modifier[11783-11789]"
    }, {
      "left" : "AnnotatedMethod",
      "right" : "AnnotatedMethod",
      "info" : "SimpleType[11775-11790]:SimpleType[11790-11805]"
    }, {
      "left" : "findMethod",
      "right" : "findMethod",
      "info" : "SimpleName[11791-11801]:SimpleName[11806-11816]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[11802-11813]:SingleVariableDeclaration[11817-11828]"
    }, {
      "left" : "Class<?>[] paramTypes",
      "right" : "Class<?>[] paramTypes",
      "info" : "SingleVariableDeclaration[11815-11836]:SingleVariableDeclaration[11830-11851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11838-11901]:Block[11853-11916]"
    }, {
      "left" : "return _classInfo.findMethod(name, paramTypes);",
      "right" : "return _classInfo.findMethod(name, paramTypes);",
      "info" : "ReturnStatement[11848-11895]:ReturnStatement[11863-11910]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12101-12110]:MarkerAnnotation[12116-12125]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12115-12121]:Modifier[12130-12136]"
    }, {
      "left" : "JsonFormat.Value",
      "right" : "JsonFormat.Value",
      "info" : "SimpleType[12122-12138]:SimpleType[12137-12153]"
    }, {
      "left" : "findExpectedFormat",
      "right" : "findExpectedFormat",
      "info" : "SimpleName[12139-12157]:SimpleName[12154-12172]"
    }, {
      "left" : "JsonFormat.Value defValue",
      "right" : "JsonFormat.Value defValue",
      "info" : "SingleVariableDeclaration[12158-12183]:SingleVariableDeclaration[12173-12198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12189-13013]:Block[12204-13028]"
    }, {
      "left" : "if (_annotationIntrospector != null)",
      "right" : "if (_annotationIntrospector != null)",
      "info" : "IfStatement[12357-12704]:IfStatement[12372-12719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12394-12704]:Block[12409-12719]"
    }, {
      "left" : "JsonFormat.Value v = _annotationIntrospector.findFormat(_classInfo);",
      "right" : "JsonFormat.Value v = _annotationIntrospector.findFormat(_classInfo);",
      "info" : "VariableDeclarationStatement[12408-12476]:VariableDeclarationStatement[12423-12491]"
    }, {
      "left" : "if (v != null)",
      "right" : "if (v != null)",
      "info" : "IfStatement[12489-12694]:IfStatement[12504-12709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12504-12694]:Block[12519-12709]"
    }, {
      "left" : "if (defValue == null)",
      "right" : "if (defValue == null)",
      "info" : "IfStatement[12522-12680]:IfStatement[12537-12695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12544-12597]:Block[12559-12612]"
    }, {
      "left" : "defValue = v;",
      "right" : "defValue = v;",
      "info" : "ExpressionStatement[12566-12579]:ExpressionStatement[12581-12594]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12603-12680]:Block[12618-12695]"
    }, {
      "left" : "defValue = defValue.withOverrides(v);",
      "right" : "defValue = defValue.withOverrides(v);",
      "info" : "ExpressionStatement[12625-12662]:ExpressionStatement[12640-12677]"
    }, {
      "left" : "JsonFormat.Value v = _config.getDefaultPropertyFormat(_classInfo.getRawType());",
      "right" : "JsonFormat.Value v = _config.getDefaultPropertyFormat(_classInfo.getRawType());",
      "info" : "VariableDeclarationStatement[12713-12792]:VariableDeclarationStatement[12728-12807]"
    }, {
      "left" : "if (v != null)",
      "right" : "if (v != null)",
      "info" : "IfStatement[12801-12982]:IfStatement[12816-12997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12816-12982]:Block[12831-12997]"
    }, {
      "left" : "if (defValue == null)",
      "right" : "if (defValue == null)",
      "info" : "IfStatement[12830-12972]:IfStatement[12845-12987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12852-12897]:Block[12867-12912]"
    }, {
      "left" : "defValue = v;",
      "right" : "defValue = v;",
      "info" : "ExpressionStatement[12870-12883]:ExpressionStatement[12885-12898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12903-12972]:Block[12918-12987]"
    }, {
      "left" : "defValue = defValue.withOverrides(v);",
      "right" : "defValue = defValue.withOverrides(v);",
      "info" : "ExpressionStatement[12921-12958]:ExpressionStatement[12936-12973]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[12991-13007]:ReturnStatement[13006-13022]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13019-13028]:MarkerAnnotation[13034-13043]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13046-13052]:Modifier[13061-13067]"
    }, {
      "left" : "Class<?>[]",
      "right" : "Class<?>[]",
      "info" : "ArrayType[13053-13063]:ArrayType[13068-13078]"
    }, {
      "left" : "findDefaultViews",
      "right" : "findDefaultViews",
      "info" : "SimpleName[13064-13080]:SimpleName[13079-13095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13087-13660]:Block[13102-13675]"
    }, {
      "left" : "if (!_defaultViewsResolved)",
      "right" : "if (!_defaultViewsResolved)",
      "info" : "IfStatement[13097-13624]:IfStatement[13112-13639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13125-13624]:Block[13140-13639]"
    }, {
      "left" : "_defaultViewsResolved = true;",
      "right" : "_defaultViewsResolved = true;",
      "info" : "ExpressionStatement[13139-13168]:ExpressionStatement[13154-13183]"
    }, {
      "left" : "Class<?>[] def = (_annotationIntrospector == null) ? null\n                    : _annotationIntrospector.findViews(_classInfo);",
      "right" : "Class<?>[] def = (_annotationIntrospector == null) ? null\n                    : _annotationIntrospector.findViews(_classInfo);",
      "info" : "VariableDeclarationStatement[13181-13307]:VariableDeclarationStatement[13196-13322]"
    }, {
      "left" : "if (def == null)",
      "right" : "if (def == null)",
      "info" : "IfStatement[13415-13581]:IfStatement[13430-13596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13432-13581]:Block[13447-13596]"
    }, {
      "left" : "if (!_config.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "right" : "if (!_config.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION))",
      "info" : "IfStatement[13450-13567]:IfStatement[13465-13582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13512-13567]:Block[13527-13582]"
    }, {
      "left" : "def = NO_VIEWS;",
      "right" : "def = NO_VIEWS;",
      "info" : "ExpressionStatement[13534-13549]:ExpressionStatement[13549-13564]"
    }, {
      "left" : "_defaultViews = def;",
      "right" : "_defaultViews = def;",
      "info" : "ExpressionStatement[13594-13614]:ExpressionStatement[13609-13629]"
    }, {
      "left" : "return _defaultViews;",
      "right" : "return _defaultViews;",
      "info" : "ReturnStatement[13633-13654]:ReturnStatement[13648-13669]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13849-13858]:MarkerAnnotation[13864-13873]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13863-13869]:Modifier[13878-13884]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[13870-13894]:ParameterizedType[13885-13909]"
    }, {
      "left" : "findSerializationConverter",
      "right" : "findSerializationConverter",
      "info" : "SimpleName[13895-13921]:SimpleName[13910-13936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13928-14114]:Block[13943-14129]"
    }, {
      "left" : "if (_annotationIntrospector == null)",
      "right" : "if (_annotationIntrospector == null)",
      "info" : "IfStatement[13938-14011]:IfStatement[13953-14026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13975-14011]:Block[13990-14026]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13989-14001]:ReturnStatement[14004-14016]"
    }, {
      "left" : "return _createConverter(_annotationIntrospector.findSerializationConverter(_classInfo));",
      "right" : "return _createConverter(_annotationIntrospector.findSerializationConverter(_classInfo));",
      "info" : "ReturnStatement[14020-14108]:ReturnStatement[14035-14123]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14381-14390]:MarkerAnnotation[14396-14405]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14395-14401]:Modifier[14410-14416]"
    }, {
      "left" : "JsonInclude.Value",
      "right" : "JsonInclude.Value",
      "info" : "SimpleType[14402-14419]:SimpleType[14417-14434]"
    }, {
      "left" : "findPropertyInclusion",
      "right" : "findPropertyInclusion",
      "info" : "SimpleName[14420-14441]:SimpleName[14435-14456]"
    }, {
      "left" : "JsonInclude.Value defValue",
      "right" : "JsonInclude.Value defValue",
      "info" : "SingleVariableDeclaration[14442-14468]:SingleVariableDeclaration[14457-14483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14470-14782]:Block[14485-14797]"
    }, {
      "left" : "if (_annotationIntrospector != null)",
      "right" : "if (_annotationIntrospector != null)",
      "info" : "IfStatement[14480-14751]:IfStatement[14495-14766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14517-14751]:Block[14532-14766]"
    }, {
      "left" : "JsonInclude.Value incl = _annotationIntrospector.findPropertyInclusion(_classInfo);",
      "right" : "JsonInclude.Value incl = _annotationIntrospector.findPropertyInclusion(_classInfo);",
      "info" : "VariableDeclarationStatement[14531-14614]:VariableDeclarationStatement[14546-14629]"
    }, {
      "left" : "if (incl != null)",
      "right" : "if (incl != null)",
      "info" : "IfStatement[14627-14741]:IfStatement[14642-14756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14645-14741]:Block[14660-14756]"
    }, {
      "left" : "return (defValue == null) ? incl : defValue.withOverrides(incl);",
      "right" : "return (defValue == null) ? incl : defValue.withOverrides(incl);",
      "info" : "ReturnStatement[14663-14727]:ReturnStatement[14678-14742]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[14760-14776]:ReturnStatement[14775-14791]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15054-15063]:MarkerAnnotation[15069-15078]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15068-15074]:Modifier[15083-15089]"
    }, {
      "left" : "AnnotatedMember",
      "right" : "AnnotatedMember",
      "info" : "SimpleType[15075-15090]:SimpleType[15090-15105]"
    }, {
      "left" : "findAnyGetter",
      "right" : "findAnyGetter",
      "info" : "SimpleName[15091-15104]:SimpleName[15106-15119]"
    }, {
      "left" : "IllegalArgumentException",
      "right" : "IllegalArgumentException",
      "info" : "SimpleType[15114-15138]:SimpleType[15129-15153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15143-15775]:Block[15158-15790]"
    }, {
      "left" : "AnnotatedMember anyGetter = (_propCollector == null) ? null\n                : _propCollector.getAnyGetter();",
      "right" : "AnnotatedMember anyGetter = (_propCollector == null) ? null\n                : _propCollector.getAnyGetter();",
      "info" : "VariableDeclarationStatement[15153-15261]:VariableDeclarationStatement[15168-15276]"
    }, {
      "left" : "if (anyGetter != null)",
      "right" : "if (anyGetter != null)",
      "info" : "IfStatement[15270-15743]:IfStatement[15285-15758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15293-15743]:Block[15308-15758]"
    }, {
      "left" : "Class<?> type = anyGetter.getRawType();",
      "right" : "Class<?> type = anyGetter.getRawType();",
      "info" : "VariableDeclarationStatement[15458-15497]:VariableDeclarationStatement[15473-15512]"
    }, {
      "left" : "if (!Map.class.isAssignableFrom(type))",
      "right" : "if (!Map.class.isAssignableFrom(type))",
      "info" : "IfStatement[15510-15733]:IfStatement[15525-15748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15549-15733]:Block[15564-15748]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid 'any-getter' annotation on method \"+anyGetter.getName()+\"(): return type is not instance of java.util.Map\");",
      "right" : "throw new IllegalArgumentException(\"Invalid 'any-getter' annotation on method \"+anyGetter.getName()+\"(): return type is not instance of java.util.Map\");",
      "info" : "ThrowStatement[15567-15719]:ThrowStatement[15582-15734]"
    }, {
      "left" : "return anyGetter;",
      "right" : "return anyGetter;",
      "info" : "ReturnStatement[15752-15769]:ReturnStatement[15767-15784]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15781-15790]:MarkerAnnotation[15796-15805]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15795-15801]:Modifier[15810-15816]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[15802-15830]:ParameterizedType[15817-15845]"
    }, {
      "left" : "findBackReferences",
      "right" : "findBackReferences",
      "info" : "SimpleName[15831-15849]:SimpleName[15846-15864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15856-16725]:Block[15871-16740]"
    }, {
      "left" : "List<BeanPropertyDefinition> result = null;",
      "right" : "List<BeanPropertyDefinition> result = null;",
      "info" : "VariableDeclarationStatement[15866-15909]:VariableDeclarationStatement[15881-15924]"
    }, {
      "left" : "HashSet<String> names = null;",
      "right" : "HashSet<String> names = null;",
      "info" : "VariableDeclarationStatement[15918-15947]:VariableDeclarationStatement[15933-15962]"
    }, {
      "left" : "for (BeanPropertyDefinition property : _properties())",
      "right" : "for (BeanPropertyDefinition property : _properties())",
      "info" : "EnhancedForStatement[15956-16696]:EnhancedForStatement[15971-16711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16010-16696]:Block[16025-16711]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty refDef = property.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty refDef = property.findReferenceType();",
      "info" : "VariableDeclarationStatement[16024-16103]:VariableDeclarationStatement[16039-16118]"
    }, {
      "left" : "if ((refDef == null) || !refDef.isBackReference())",
      "right" : "if ((refDef == null) || !refDef.isBackReference())",
      "info" : "IfStatement[16116-16208]:IfStatement[16131-16223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16167-16208]:Block[16182-16223]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[16185-16194]:ContinueStatement[16200-16209]"
    }, {
      "left" : "final String refName = refDef.getName();",
      "right" : "final String refName = refDef.getName();",
      "info" : "VariableDeclarationStatement[16221-16261]:VariableDeclarationStatement[16236-16276]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[16274-16652]:IfStatement[16289-16667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16294-16452]:Block[16309-16467]"
    }, {
      "left" : "result = new ArrayList<BeanPropertyDefinition>();",
      "right" : "result = new ArrayList<BeanPropertyDefinition>();",
      "info" : "ExpressionStatement[16312-16361]:ExpressionStatement[16327-16376]"
    }, {
      "left" : "names = new HashSet<>();",
      "right" : "names = new HashSet<>();",
      "info" : "ExpressionStatement[16378-16402]:ExpressionStatement[16393-16417]"
    }, {
      "left" : "names.add(refName);",
      "right" : "names.add(refName);",
      "info" : "ExpressionStatement[16419-16438]:ExpressionStatement[16434-16453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16458-16652]:Block[16473-16667]"
    }, {
      "left" : "if (!names.add(refName))",
      "right" : "if (!names.add(refName))",
      "info" : "IfStatement[16476-16638]:IfStatement[16491-16653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16501-16638]:Block[16516-16653]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Multiple back-reference properties with name '\"+refName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Multiple back-reference properties with name '\"+refName+\"'\");",
      "info" : "ThrowStatement[16523-16620]:ThrowStatement[16538-16635]"
    }, {
      "left" : "result.add(property);",
      "right" : "result.add(property);",
      "info" : "ExpressionStatement[16665-16686]:ExpressionStatement[16680-16701]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[16705-16719]:ReturnStatement[16720-16734]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[16731-16742]:MarkerAnnotation[16746-16757]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16760-16769]:MarkerAnnotation[16775-16784]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16774-16780]:Modifier[16789-16795]"
    }, {
      "left" : "Map<String,AnnotatedMember>",
      "right" : "Map<String,AnnotatedMember>",
      "info" : "ParameterizedType[16781-16808]:ParameterizedType[16796-16823]"
    }, {
      "left" : "findBackReferenceProperties",
      "right" : "findBackReferenceProperties",
      "info" : "SimpleName[16809-16836]:SimpleName[16824-16851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16843-17187]:Block[16858-17202]"
    }, {
      "left" : "List<BeanPropertyDefinition> props = findBackReferences();",
      "right" : "List<BeanPropertyDefinition> props = findBackReferences();",
      "info" : "VariableDeclarationStatement[16853-16911]:VariableDeclarationStatement[16868-16926]"
    }, {
      "left" : "if (props == null)",
      "right" : "if (props == null)",
      "info" : "IfStatement[16920-16975]:IfStatement[16935-16990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16939-16975]:Block[16954-16990]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16953-16965]:ReturnStatement[16968-16980]"
    }, {
      "left" : "Map<String,AnnotatedMember> result = new HashMap<>();",
      "right" : "Map<String,AnnotatedMember> result = new HashMap<>();",
      "info" : "VariableDeclarationStatement[16984-17037]:VariableDeclarationStatement[16999-17052]"
    }, {
      "left" : "for (BeanPropertyDefinition prop : props)",
      "right" : "for (BeanPropertyDefinition prop : props)",
      "info" : "EnhancedForStatement[17046-17158]:EnhancedForStatement[17061-17173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17088-17158]:Block[17103-17173]"
    }, {
      "left" : "result.put(prop.getName(), prop.getMutator());",
      "right" : "result.put(prop.getName(), prop.getMutator());",
      "info" : "ExpressionStatement[17102-17148]:ExpressionStatement[17117-17163]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[17167-17181]:ReturnStatement[17182-17196]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17389-17398]:MarkerAnnotation[17404-17413]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17403-17409]:Modifier[17418-17424]"
    }, {
      "left" : "List<AnnotatedMethod>",
      "right" : "List<AnnotatedMethod>",
      "info" : "ParameterizedType[17410-17431]:ParameterizedType[17425-17446]"
    }, {
      "left" : "getFactoryMethods",
      "right" : "getFactoryMethods",
      "info" : "SimpleName[17432-17449]:SimpleName[17447-17464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17456-18102]:Block[17471-18117]"
    }, {
      "left" : "List<AnnotatedMethod> candidates = _classInfo.getFactoryMethods();",
      "right" : "List<AnnotatedMethod> candidates = _classInfo.getFactoryMethods();",
      "info" : "VariableDeclarationStatement[17539-17605]:VariableDeclarationStatement[17554-17620]"
    }, {
      "left" : "if (candidates.isEmpty())",
      "right" : "if (candidates.isEmpty())",
      "info" : "IfStatement[17614-17682]:IfStatement[17629-17697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17640-17682]:Block[17655-17697]"
    }, {
      "left" : "return candidates;",
      "right" : "return candidates;",
      "info" : "ReturnStatement[17654-17672]:ReturnStatement[17669-17687]"
    }, {
      "left" : "List<AnnotatedMethod> result = null;",
      "right" : "List<AnnotatedMethod> result = null;",
      "info" : "VariableDeclarationStatement[17691-17727]:VariableDeclarationStatement[17706-17742]"
    }, {
      "left" : "for (AnnotatedMethod am : candidates)",
      "right" : "for (AnnotatedMethod am : candidates)",
      "info" : "EnhancedForStatement[17736-17989]:EnhancedForStatement[17751-18004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17774-17989]:Block[17789-18004]"
    }, {
      "left" : "if (isFactoryMethod(am))",
      "right" : "if (isFactoryMethod(am))",
      "info" : "IfStatement[17788-17979]:IfStatement[17803-17994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17813-17979]:Block[17828-17994]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[17831-17933]:IfStatement[17846-17948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17851-17933]:Block[17866-17948]"
    }, {
      "left" : "result = new ArrayList<AnnotatedMethod>();",
      "right" : "result = new ArrayList<AnnotatedMethod>();",
      "info" : "ExpressionStatement[17873-17915]:ExpressionStatement[17888-17930]"
    }, {
      "left" : "result.add(am);",
      "right" : "result.add(am);",
      "info" : "ExpressionStatement[17950-17965]:ExpressionStatement[17965-17980]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[17998-18073]:IfStatement[18013-18088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18018-18073]:Block[18033-18088]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[18032-18063]:ReturnStatement[18047-18078]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[18082-18096]:ReturnStatement[18097-18111]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18108-18117]:MarkerAnnotation[18123-18132]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18122-18128]:Modifier[18137-18143]"
    }, {
      "left" : "Constructor<?>",
      "right" : "Constructor<?>",
      "info" : "ParameterizedType[18129-18143]:ParameterizedType[18144-18158]"
    }, {
      "left" : "findSingleArgConstructor",
      "right" : "findSingleArgConstructor",
      "info" : "SimpleName[18144-18168]:SimpleName[18159-18183]"
    }, {
      "left" : "Class<?>... argTypes",
      "right" : "Class<?>... argTypes",
      "info" : "SingleVariableDeclaration[18169-18189]:SingleVariableDeclaration[18184-18204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18195-18829]:Block[18210-18844]"
    }, {
      "left" : "for (AnnotatedConstructor ac : _classInfo.getConstructors())",
      "right" : "for (AnnotatedConstructor ac : _classInfo.getConstructors())",
      "info" : "EnhancedForStatement[18205-18802]:EnhancedForStatement[18220-18817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18266-18802]:Block[18281-18817]"
    }, {
      "left" : "if (ac.getParameterCount() == 1)",
      "right" : "if (ac.getParameterCount() == 1)",
      "info" : "IfStatement[18498-18792]:IfStatement[18513-18807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18531-18792]:Block[18546-18807]"
    }, {
      "left" : "Class<?> actArg = ac.getRawParameterType(0);",
      "right" : "Class<?> actArg = ac.getRawParameterType(0);",
      "info" : "VariableDeclarationStatement[18549-18593]:VariableDeclarationStatement[18564-18608]"
    }, {
      "left" : "for (Class<?> expArg : argTypes)",
      "right" : "for (Class<?> expArg : argTypes)",
      "info" : "EnhancedForStatement[18610-18778]:EnhancedForStatement[18625-18793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18643-18778]:Block[18658-18793]"
    }, {
      "left" : "if (expArg == actArg)",
      "right" : "if (expArg == actArg)",
      "info" : "IfStatement[18665-18760]:IfStatement[18680-18775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18687-18760]:Block[18702-18775]"
    }, {
      "left" : "return ac.getAnnotated();",
      "right" : "return ac.getAnnotated();",
      "info" : "ReturnStatement[18713-18738]:ReturnStatement[18728-18753]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[18811-18823]:ReturnStatement[18826-18838]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18835-18844]:MarkerAnnotation[18850-18859]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18849-18855]:Modifier[18864-18870]"
    }, {
      "left" : "Method",
      "right" : "Method",
      "info" : "SimpleType[18856-18862]:SimpleType[18871-18877]"
    }, {
      "left" : "findFactoryMethod",
      "right" : "findFactoryMethod",
      "info" : "SimpleName[18863-18880]:SimpleName[18878-18895]"
    }, {
      "left" : "Class<?>... expArgTypes",
      "right" : "Class<?>... expArgTypes",
      "info" : "SingleVariableDeclaration[18881-18904]:SingleVariableDeclaration[18896-18919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18910-19659]:Block[18925-19674]"
    }, {
      "left" : "for (AnnotatedMethod am : _classInfo.getFactoryMethods())",
      "right" : "for (AnnotatedMethod am : _classInfo.getFactoryMethods())",
      "info" : "EnhancedForStatement[18969-19632]:EnhancedForStatement[18984-19647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19027-19632]:Block[19042-19647]"
    }, {
      "left" : "if (isFactoryMethod(am) && am.getParameterCount() == 1)",
      "right" : "if (isFactoryMethod(am) && am.getParameterCount() == 1)",
      "info" : "IfStatement[19125-19622]:IfStatement[19140-19637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19181-19622]:Block[19196-19637]"
    }, {
      "left" : "Class<?> actualArgType = am.getRawParameterType(0);",
      "right" : "Class<?> actualArgType = am.getRawParameterType(0);",
      "info" : "VariableDeclarationStatement[19273-19324]:VariableDeclarationStatement[19288-19339]"
    }, {
      "left" : "for (Class<?> expArgType : expArgTypes)",
      "right" : "for (Class<?> expArgType : expArgTypes)",
      "info" : "EnhancedForStatement[19341-19608]:EnhancedForStatement[19356-19623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19381-19608]:Block[19396-19623]"
    }, {
      "left" : "if (actualArgType.isAssignableFrom(expArgType))",
      "right" : "if (actualArgType.isAssignableFrom(expArgType))",
      "info" : "IfStatement[19469-19590]:IfStatement[19484-19605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19517-19590]:Block[19532-19605]"
    }, {
      "left" : "return am.getAnnotated();",
      "right" : "return am.getAnnotated();",
      "info" : "ReturnStatement[19543-19568]:ReturnStatement[19558-19583]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19641-19653]:ReturnStatement[19656-19668]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19665-19674]:Modifier[19680-19689]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[19675-19682]:PrimitiveType[19690-19697]"
    }, {
      "left" : "isFactoryMethod",
      "right" : "isFactoryMethod",
      "info" : "SimpleName[19683-19698]:SimpleName[19698-19713]"
    }, {
      "left" : "AnnotatedMethod am",
      "right" : "AnnotatedMethod am",
      "info" : "SingleVariableDeclaration[19699-19717]:SingleVariableDeclaration[19714-19732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19723-21088]:Block[19738-21103]"
    }, {
      "left" : "Class<?> rt = am.getRawReturnType();",
      "right" : "Class<?> rt = am.getRawReturnType();",
      "info" : "VariableDeclarationStatement[19888-19924]:VariableDeclarationStatement[19903-19939]"
    }, {
      "left" : "if (!getBeanClass().isAssignableFrom(rt))",
      "right" : "if (!getBeanClass().isAssignableFrom(rt))",
      "info" : "IfStatement[19933-20012]:IfStatement[19948-20027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19975-20012]:Block[19990-20027]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[19989-20002]:ReturnStatement[20004-20017]"
    }, {
      "left" : "JsonCreator.Mode mode = _annotationIntrospector.findCreatorAnnotation(_config, am);",
      "right" : "JsonCreator.Mode mode = _annotationIntrospector.findCreatorAnnotation(_config, am);",
      "info" : "VariableDeclarationStatement[20212-20295]:VariableDeclarationStatement[20227-20310]"
    }, {
      "left" : "if ((mode != null) && (mode != JsonCreator.Mode.DISABLED))",
      "right" : "if ((mode != null) && (mode != JsonCreator.Mode.DISABLED))",
      "info" : "IfStatement[20304-20399]:IfStatement[20319-20414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20363-20399]:Block[20378-20414]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[20377-20389]:ReturnStatement[20392-20404]"
    }, {
      "left" : "final String name = am.getName();",
      "right" : "final String name = am.getName();",
      "info" : "VariableDeclarationStatement[20408-20441]:VariableDeclarationStatement[20423-20456]"
    }, {
      "left" : "if (\"valueOf\".equals(name))",
      "right" : "if (\"valueOf\".equals(name))",
      "info" : "IfStatement[20537-20666]:IfStatement[20552-20681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20565-20666]:Block[20580-20681]"
    }, {
      "left" : "if (am.getParameterCount() == 1)",
      "right" : "if (am.getParameterCount() == 1)",
      "info" : "IfStatement[20579-20656]:IfStatement[20594-20671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20612-20656]:Block[20627-20671]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[20630-20642]:ReturnStatement[20645-20657]"
    }, {
      "left" : "if (\"fromString\".equals(name))",
      "right" : "if (\"fromString\".equals(name))",
      "info" : "IfStatement[20761-21060]:IfStatement[20776-21075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20792-21060]:Block[20807-21075]"
    }, {
      "left" : "if (am.getParameterCount() == 1)",
      "right" : "if (am.getParameterCount() == 1)",
      "info" : "IfStatement[20806-21050]:IfStatement[20821-21065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20839-21050]:Block[20854-21065]"
    }, {
      "left" : "Class<?> cls = am.getRawParameterType(0);",
      "right" : "Class<?> cls = am.getRawParameterType(0);",
      "info" : "VariableDeclarationStatement[20857-20898]:VariableDeclarationStatement[20872-20913]"
    }, {
      "left" : "if (cls == String.class || CharSequence.class.isAssignableFrom(cls))",
      "right" : "if (cls == String.class || CharSequence.class.isAssignableFrom(cls))",
      "info" : "IfStatement[20915-21036]:IfStatement[20930-21051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20984-21036]:Block[20999-21051]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[21006-21018]:ReturnStatement[21021-21033]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[21069-21082]:ReturnStatement[21084-21097]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[21139-21150]:MarkerAnnotation[21154-21165]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21197-21206]:Modifier[21212-21221]"
    }, {
      "left" : "PropertyName",
      "right" : "PropertyName",
      "info" : "SimpleType[21207-21219]:SimpleType[21222-21234]"
    }, {
      "left" : "_findCreatorPropertyName",
      "right" : "_findCreatorPropertyName",
      "info" : "SimpleName[21220-21244]:SimpleName[21235-21259]"
    }, {
      "left" : "AnnotatedParameter param",
      "right" : "AnnotatedParameter param",
      "info" : "SingleVariableDeclaration[21245-21269]:SingleVariableDeclaration[21260-21284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21275-21643]:Block[21290-21658]"
    }, {
      "left" : "PropertyName name = _annotationIntrospector.findNameForDeserialization(param);",
      "right" : "PropertyName name = _annotationIntrospector.findNameForDeserialization(param);",
      "info" : "VariableDeclarationStatement[21285-21363]:VariableDeclarationStatement[21300-21378]"
    }, {
      "left" : "if (name == null || name.isEmpty())",
      "right" : "if (name == null || name.isEmpty())",
      "info" : "IfStatement[21372-21616]:IfStatement[21387-21631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21408-21616]:Block[21423-21631]"
    }, {
      "left" : "String str = _annotationIntrospector.findImplicitPropertyName(param);",
      "right" : "String str = _annotationIntrospector.findImplicitPropertyName(param);",
      "info" : "VariableDeclarationStatement[21422-21491]:VariableDeclarationStatement[21437-21506]"
    }, {
      "left" : "if (str != null && !str.isEmpty())",
      "right" : "if (str != null && !str.isEmpty())",
      "info" : "IfStatement[21504-21606]:IfStatement[21519-21621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21539-21606]:Block[21554-21621]"
    }, {
      "left" : "name = PropertyName.construct(str);",
      "right" : "name = PropertyName.construct(str);",
      "info" : "ExpressionStatement[21557-21592]:ExpressionStatement[21572-21607]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[21625-21637]:ReturnStatement[21640-21652]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[21841-21850]:MarkerAnnotation[21856-21865]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21855-21861]:Modifier[21870-21876]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[21862-21870]:ParameterizedType[21877-21885]"
    }, {
      "left" : "findPOJOBuilder",
      "right" : "findPOJOBuilder",
      "info" : "SimpleName[21871-21886]:SimpleName[21886-21901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21889-22014]:Block[21904-22029]"
    }, {
      "left" : "return (_annotationIntrospector == null) ?\n    \t\t\tnull : _annotationIntrospector.findPOJOBuilder(_classInfo);",
      "right" : "return (_annotationIntrospector == null) ?\n    \t\t\tnull : _annotationIntrospector.findPOJOBuilder(_classInfo);",
      "info" : "ReturnStatement[21899-22008]:ReturnStatement[21914-22023]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22020-22029]:MarkerAnnotation[22035-22044]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22034-22040]:Modifier[22049-22055]"
    }, {
      "left" : "JsonPOJOBuilder.Value",
      "right" : "JsonPOJOBuilder.Value",
      "info" : "SimpleType[22041-22062]:SimpleType[22056-22077]"
    }, {
      "left" : "findPOJOBuilderConfig",
      "right" : "findPOJOBuilderConfig",
      "info" : "SimpleName[22063-22084]:SimpleName[22078-22099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22091-22231]:Block[22106-22246]"
    }, {
      "left" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findPOJOBuilderConfig(_classInfo);",
      "right" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findPOJOBuilderConfig(_classInfo);",
      "info" : "ReturnStatement[22101-22225]:ReturnStatement[22116-22240]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22237-22246]:MarkerAnnotation[22252-22261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22251-22257]:Modifier[22266-22272]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[22258-22282]:ParameterizedType[22273-22297]"
    }, {
      "left" : "findDeserializationConverter",
      "right" : "findDeserializationConverter",
      "info" : "SimpleName[22283-22311]:SimpleName[22298-22326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22318-22506]:Block[22333-22521]"
    }, {
      "left" : "if (_annotationIntrospector == null)",
      "right" : "if (_annotationIntrospector == null)",
      "info" : "IfStatement[22328-22401]:IfStatement[22343-22416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22365-22401]:Block[22380-22416]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22379-22391]:ReturnStatement[22394-22406]"
    }, {
      "left" : "return _createConverter(_annotationIntrospector.findDeserializationConverter(_classInfo));",
      "right" : "return _createConverter(_annotationIntrospector.findDeserializationConverter(_classInfo));",
      "info" : "ReturnStatement[22410-22500]:ReturnStatement[22425-22515]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22512-22521]:MarkerAnnotation[22527-22536]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22526-22532]:Modifier[22541-22547]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[22533-22539]:SimpleType[22548-22554]"
    }, {
      "left" : "findClassDescription",
      "right" : "findClassDescription",
      "info" : "SimpleName[22540-22560]:SimpleName[22555-22575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22563-22702]:Block[22578-22717]"
    }, {
      "left" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findClassDescription(_classInfo);",
      "right" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findClassDescription(_classInfo);",
      "info" : "ReturnStatement[22573-22696]:ReturnStatement[22588-22711]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[23372-23383]:MarkerAnnotation[23387-23398]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23388-23394]:Modifier[23403-23409]"
    }, {
      "left" : "LinkedHashMap<String,AnnotatedField>",
      "right" : "LinkedHashMap<String,AnnotatedField>",
      "info" : "ParameterizedType[23395-23431]:ParameterizedType[23410-23446]"
    }, {
      "left" : "_findPropertyFields",
      "right" : "_findPropertyFields",
      "info" : "SimpleName[23432-23451]:SimpleName[23447-23466]"
    }, {
      "left" : "Collection<String> ignoredProperties",
      "right" : "Collection<String> ignoredProperties",
      "info" : "SingleVariableDeclaration[23465-23501]:SingleVariableDeclaration[23480-23516]"
    }, {
      "left" : "boolean forSerialization",
      "right" : "boolean forSerialization",
      "info" : "SingleVariableDeclaration[23503-23527]:SingleVariableDeclaration[23518-23542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23533-24103]:Block[23548-24118]"
    }, {
      "left" : "LinkedHashMap<String,AnnotatedField> results = new LinkedHashMap<String,AnnotatedField>();",
      "right" : "LinkedHashMap<String,AnnotatedField> results = new LinkedHashMap<String,AnnotatedField>();",
      "info" : "VariableDeclarationStatement[23543-23633]:VariableDeclarationStatement[23558-23648]"
    }, {
      "left" : "for (BeanPropertyDefinition property : _properties())",
      "right" : "for (BeanPropertyDefinition property : _properties())",
      "info" : "EnhancedForStatement[23642-24073]:EnhancedForStatement[23657-24088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23696-24073]:Block[23711-24088]"
    }, {
      "left" : "AnnotatedField f = property.getField();",
      "right" : "AnnotatedField f = property.getField();",
      "info" : "VariableDeclarationStatement[23710-23749]:VariableDeclarationStatement[23725-23764]"
    }, {
      "left" : "if (f != null)",
      "right" : "if (f != null)",
      "info" : "IfStatement[23762-24063]:IfStatement[23777-24078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23777-24063]:Block[23792-24078]"
    }, {
      "left" : "String name = property.getName();",
      "right" : "String name = property.getName();",
      "info" : "VariableDeclarationStatement[23795-23828]:VariableDeclarationStatement[23810-23843]"
    }, {
      "left" : "if (ignoredProperties != null)",
      "right" : "if (ignoredProperties != null)",
      "info" : "IfStatement[23845-24011]:IfStatement[23860-24026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23876-24011]:Block[23891-24026]"
    }, {
      "left" : "if (ignoredProperties.contains(name))",
      "right" : "if (ignoredProperties.contains(name))",
      "info" : "IfStatement[23898-23993]:IfStatement[23913-24008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23936-23993]:Block[23951-24008]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[23962-23971]:ContinueStatement[23977-23986]"
    }, {
      "left" : "results.put(name, f);",
      "right" : "results.put(name, f);",
      "info" : "ExpressionStatement[24028-24049]:ExpressionStatement[24043-24064]"
    }, {
      "left" : "return results;",
      "right" : "return results;",
      "info" : "ReturnStatement[24082-24097]:ReturnStatement[24097-24112]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[24286-24316]:SingleMemberAnnotation[24301-24331]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24321-24330]:Modifier[24336-24345]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[24331-24355]:ParameterizedType[24346-24370]"
    }, {
      "left" : "_createConverter",
      "right" : "_createConverter",
      "info" : "SimpleName[24356-24372]:SimpleName[24371-24387]"
    }, {
      "left" : "Object converterDef",
      "right" : "Object converterDef",
      "info" : "SingleVariableDeclaration[24373-24392]:SingleVariableDeclaration[24388-24407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24398-25774]:Block[24413-25789]"
    }, {
      "left" : "if (converterDef == null)",
      "right" : "if (converterDef == null)",
      "info" : "IfStatement[24408-24470]:IfStatement[24423-24485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24434-24470]:Block[24449-24485]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24448-24460]:ReturnStatement[24463-24475]"
    }, {
      "left" : "if (converterDef instanceof Converter<?,?>)",
      "right" : "if (converterDef instanceof Converter<?,?>)",
      "info" : "IfStatement[24479-24594]:IfStatement[24494-24609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24523-24594]:Block[24538-24609]"
    }, {
      "left" : "return (Converter<Object,Object>) converterDef;",
      "right" : "return (Converter<Object,Object>) converterDef;",
      "info" : "ReturnStatement[24537-24584]:ReturnStatement[24552-24599]"
    }, {
      "left" : "if (!(converterDef instanceof Class))",
      "right" : "if (!(converterDef instanceof Class))",
      "info" : "IfStatement[24603-24873]:IfStatement[24618-24888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24641-24873]:Block[24656-24888]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "info" : "ThrowStatement[24655-24863]:ThrowStatement[24670-24878]"
    }, {
      "left" : "Class<?> converterClass = (Class<?>)converterDef;",
      "right" : "Class<?> converterClass = (Class<?>)converterDef;",
      "info" : "VariableDeclarationStatement[24882-24931]:VariableDeclarationStatement[24897-24946]"
    }, {
      "left" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "right" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "info" : "IfStatement[25008-25130]:IfStatement[25023-25145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25094-25130]:Block[25109-25145]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[25108-25120]:ReturnStatement[25123-25135]"
    }, {
      "left" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "right" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "info" : "IfStatement[25139-25368]:IfStatement[25154-25383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25194-25368]:Block[25209-25383]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "info" : "ThrowStatement[25208-25358]:ThrowStatement[25223-25373]"
    }, {
      "left" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[25377-25435]:VariableDeclarationStatement[25392-25450]"
    }, {
      "left" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(_config, _classInfo, converterClass);",
      "right" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(_config, _classInfo, converterClass);",
      "info" : "VariableDeclarationStatement[25444-25546]:VariableDeclarationStatement[25459-25561]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[25555-25720]:IfStatement[25570-25735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25573-25720]:Block[25588-25735]"
    }, {
      "left" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    _config.canOverrideAccessModifiers());",
      "right" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    _config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[25587-25710]:ExpressionStatement[25602-25725]"
    }, {
      "left" : "return (Converter<Object,Object>) conv;",
      "right" : "return (Converter<Object,Object>) conv;",
      "info" : "ReturnStatement[25729-25768]:ReturnStatement[25744-25783]"
    } ]
  },
  "interFileMappings" : { }
}