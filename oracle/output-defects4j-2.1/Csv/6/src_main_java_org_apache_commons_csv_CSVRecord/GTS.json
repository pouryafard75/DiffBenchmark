{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CSVRecord",
      "right" : "CSVRecord",
      "info" : "TypeDeclaration[1018-6781]:TypeDeclaration[1018-6834]"
    }, {
      "left" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "right" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "info" : "FieldDeclaration[1164-1229]:FieldDeclaration[1164-1229]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1235-1283]:FieldDeclaration[1235-1283]"
    }, {
      "left" : "private final String comment;",
      "right" : "private final String comment;",
      "info" : "FieldDeclaration[1289-1363]:FieldDeclaration[1289-1363]"
    }, {
      "left" : "private final Map<String, Integer> mapping;",
      "right" : "private final Map<String, Integer> mapping;",
      "info" : "FieldDeclaration[1369-1457]:FieldDeclaration[1369-1457]"
    }, {
      "left" : "private final long recordNumber;",
      "right" : "private final long recordNumber;",
      "info" : "FieldDeclaration[1463-1525]:FieldDeclaration[1463-1525]"
    }, {
      "left" : "private final String[] values;",
      "right" : "private final String[] values;",
      "info" : "FieldDeclaration[1531-1597]:FieldDeclaration[1531-1597]"
    }, {
      "left" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "right" : "CSVRecord(final String[] values, final Map<String, Integer> mapping,\n            final String comment, final long recordNumber)",
      "info" : "MethodDeclaration[1603-1912]:MethodDeclaration[1603-1912]"
    }, {
      "left" : "public String get(final Enum<?> e)",
      "right" : "public String get(final Enum<?> e)",
      "info" : "MethodDeclaration[1918-2150]:MethodDeclaration[1918-2150]"
    }, {
      "left" : "public String get(final int i)",
      "right" : "public String get(final int i)",
      "info" : "MethodDeclaration[2156-2380]:MethodDeclaration[2156-2380]"
    }, {
      "left" : "public String get(final String name)",
      "right" : "public String get(final String name)",
      "info" : "MethodDeclaration[2386-3711]:MethodDeclaration[2386-3711]"
    }, {
      "left" : "public String getComment()",
      "right" : "public String getComment()",
      "info" : "MethodDeclaration[3717-3961]:MethodDeclaration[3717-3961]"
    }, {
      "left" : "public long getRecordNumber()",
      "right" : "public long getRecordNumber()",
      "info" : "MethodDeclaration[3967-4163]:MethodDeclaration[3967-4163]"
    }, {
      "left" : "public boolean isConsistent()",
      "right" : "public boolean isConsistent()",
      "info" : "MethodDeclaration[4169-4591]:MethodDeclaration[4169-4591]"
    }, {
      "left" : "public boolean isMapped(final String name)",
      "right" : "public boolean isMapped(final String name)",
      "info" : "MethodDeclaration[4597-4958]:MethodDeclaration[4597-4958]"
    }, {
      "left" : "public boolean isSet(final String name)",
      "right" : "public boolean isSet(final String name)",
      "info" : "MethodDeclaration[4964-5320]:MethodDeclaration[4964-5320]"
    }, {
      "left" : "public Iterator<String> iterator()",
      "right" : "public Iterator<String> iterator()",
      "info" : "MethodDeclaration[5326-5545]:MethodDeclaration[5326-5545]"
    }, {
      "left" : "<M extends Map<String, String>> M putIn(final M map)",
      "right" : "<M extends Map<String, String>> M putIn(final M map)",
      "info" : "MethodDeclaration[5551-5974]:MethodDeclaration[5551-6027]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[5980-6147]:MethodDeclaration[6033-6200]"
    }, {
      "left" : "private List<String> toList()",
      "right" : "private List<String> toList()",
      "info" : "MethodDeclaration[6153-6352]:MethodDeclaration[6206-6405]"
    }, {
      "left" : "public Map<String, String> toMap()",
      "right" : "public Map<String, String> toMap()",
      "info" : "MethodDeclaration[6358-6631]:MethodDeclaration[6411-6684]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[6637-6723]:MethodDeclaration[6690-6776]"
    }, {
      "left" : "String[] values()",
      "right" : "String[] values()",
      "info" : "MethodDeclaration[6729-6777]:MethodDeclaration[6782-6830]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1731-1912]:Block[1731-1912]"
    }, {
      "left" : "this.recordNumber = recordNumber;",
      "right" : "this.recordNumber = recordNumber;",
      "info" : "ExpressionStatement[1741-1774]:ExpressionStatement[1741-1774]"
    }, {
      "left" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "right" : "this.values = values != null ? values : EMPTY_STRING_ARRAY;",
      "info" : "ExpressionStatement[1783-1842]:ExpressionStatement[1783-1842]"
    }, {
      "left" : "this.mapping = mapping;",
      "right" : "this.mapping = mapping;",
      "info" : "ExpressionStatement[1851-1874]:ExpressionStatement[1851-1874]"
    }, {
      "left" : "this.comment = comment;",
      "right" : "this.comment = comment;",
      "info" : "ExpressionStatement[1883-1906]:ExpressionStatement[1883-1906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2109-2150]:Block[2109-2150]"
    }, {
      "left" : "return get(e.toString());",
      "right" : "return get(e.toString());",
      "info" : "ReturnStatement[2119-2144]:ReturnStatement[2119-2144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2347-2380]:Block[2347-2380]"
    }, {
      "left" : "return values[i];",
      "right" : "return values[i];",
      "info" : "ReturnStatement[2357-2374]:ReturnStatement[2357-2374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2932-3711]:Block[2932-3711]"
    }, {
      "left" : "if (mapping == null)",
      "right" : "if (mapping == null)",
      "info" : "IfStatement[2942-3120]:IfStatement[2942-3120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2963-3120]:Block[2963-3120]"
    }, {
      "left" : "throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");",
      "right" : "throw new IllegalStateException(\n                    \"No header mapping was specified, the record values can't be accessed by name\");",
      "info" : "ThrowStatement[2977-3110]:ThrowStatement[2977-3110]"
    }, {
      "left" : "final Integer index = mapping.get(name);",
      "right" : "final Integer index = mapping.get(name);",
      "info" : "VariableDeclarationStatement[3129-3169]:VariableDeclarationStatement[3129-3169]"
    }, {
      "left" : "if (index == null)",
      "right" : "if (index == null)",
      "info" : "IfStatement[3178-3363]:IfStatement[3178-3363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3197-3363]:Block[3197-3363]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\"Mapping for %s not found, expected one of %s\", name,\n                    mapping.keySet()));",
      "right" : "throw new IllegalArgumentException(String.format(\"Mapping for %s not found, expected one of %s\", name,\n                    mapping.keySet()));",
      "info" : "ThrowStatement[3211-3353]:ThrowStatement[3211-3353]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3372-3705]:TryStatement[3372-3705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3376-3432]:Block[3376-3432]"
    }, {
      "left" : "return values[index.intValue()];",
      "right" : "return values[index.intValue()];",
      "info" : "ReturnStatement[3390-3422]:ReturnStatement[3390-3422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3480-3705]:Block[3480-3705]"
    }, {
      "left" : "throw new IllegalArgumentException(String.format(\n                    \"Index for header '%s' is %d but CSVRecord only has %d values!\", name, index,\n                    Integer.valueOf(values.length)));",
      "right" : "throw new IllegalArgumentException(String.format(\n                    \"Index for header '%s' is %d but CSVRecord only has %d values!\", name, index,\n                    Integer.valueOf(values.length)));",
      "info" : "ThrowStatement[3494-3695]:ThrowStatement[3494-3695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3930-3961]:Block[3930-3961]"
    }, {
      "left" : "return comment;",
      "right" : "return comment;",
      "info" : "ReturnStatement[3940-3955]:ReturnStatement[3940-3955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4127-4163]:Block[4127-4163]"
    }, {
      "left" : "return recordNumber;",
      "right" : "return recordNumber;",
      "info" : "ReturnStatement[4137-4157]:ReturnStatement[4137-4157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4511-4591]:Block[4511-4591]"
    }, {
      "left" : "return mapping == null ? true : mapping.size() == values.length;",
      "right" : "return mapping == null ? true : mapping.size() == values.length;",
      "info" : "ReturnStatement[4521-4585]:ReturnStatement[4521-4585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4883-4958]:Block[4883-4958]"
    }, {
      "left" : "return mapping != null ? mapping.containsKey(name) : false;",
      "right" : "return mapping != null ? mapping.containsKey(name) : false;",
      "info" : "ReturnStatement[4893-4952]:ReturnStatement[4893-4952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5234-5320]:Block[5234-5320]"
    }, {
      "left" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "right" : "return isMapped(name) && mapping.get(name).intValue() < values.length;",
      "info" : "ReturnStatement[5244-5314]:ReturnStatement[5244-5314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5502-5545]:Block[5502-5545]"
    }, {
      "left" : "return toList().iterator();",
      "right" : "return toList().iterator();",
      "info" : "ReturnStatement[5512-5539]:ReturnStatement[5512-5539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5754-5974]:Block[5754-6027]"
    }, {
      "left" : "for (final Entry<String, Integer> entry : mapping.entrySet())",
      "right" : "for (final Entry<String, Integer> entry : mapping.entrySet())",
      "info" : "EnhancedForStatement[5764-5948]:EnhancedForStatement[5764-6001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5826-5948]:Block[5826-6001]"
    }, {
      "left" : "final int col = entry.getValue().intValue();",
      "right" : "final int col = entry.getValue().intValue();",
      "info" : "VariableDeclarationStatement[5840-5884]:VariableDeclarationStatement[5840-5884]"
    }, {
      "left" : "map.put(entry.getKey(), values[col]);",
      "right" : "map.put(entry.getKey(), values[col]);",
      "info" : "ExpressionStatement[5901-5938]:ExpressionStatement[5940-5977]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[5957-5968]:ReturnStatement[6010-6021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6110-6147]:Block[6163-6200]"
    }, {
      "left" : "return values.length;",
      "right" : "return values.length;",
      "info" : "ReturnStatement[6120-6141]:ReturnStatement[6173-6194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6307-6352]:Block[6360-6405]"
    }, {
      "left" : "return Arrays.asList(values);",
      "right" : "return Arrays.asList(values);",
      "info" : "ReturnStatement[6317-6346]:ReturnStatement[6370-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6558-6631]:Block[6611-6684]"
    }, {
      "left" : "return putIn(new HashMap<String, String>(values.length));",
      "right" : "return putIn(new HashMap<String, String>(values.length));",
      "info" : "ReturnStatement[6568-6625]:ReturnStatement[6621-6678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6676-6723]:Block[6729-6776]"
    }, {
      "left" : "return Arrays.toString(values);",
      "right" : "return Arrays.toString(values);",
      "info" : "ReturnStatement[6686-6717]:ReturnStatement[6739-6770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6747-6777]:Block[6800-6830]"
    }, {
      "left" : "return values;",
      "right" : "return values;",
      "info" : "ReturnStatement[6757-6771]:ReturnStatement[6810-6824]"
    } ]
  },
  "interFileMappings" : { }
}