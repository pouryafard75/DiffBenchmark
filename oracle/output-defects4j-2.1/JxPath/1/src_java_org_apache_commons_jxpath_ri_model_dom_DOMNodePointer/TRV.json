{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -8751046933894857319L;",
      "right" : "private static final long serialVersionUID = -8751046933894857319L;",
      "info" : "FieldDeclaration[2139-2206]:FieldDeclaration[2139-2206]"
    }, {
      "left" : "private Node node;",
      "right" : "private Node node;",
      "info" : "FieldDeclaration[2216-2234]:FieldDeclaration[2216-2234]"
    }, {
      "left" : "private Map namespaces;",
      "right" : "private Map namespaces;",
      "info" : "FieldDeclaration[2239-2262]:FieldDeclaration[2239-2262]"
    }, {
      "left" : "private String defaultNamespace;",
      "right" : "private String defaultNamespace;",
      "info" : "FieldDeclaration[2267-2299]:FieldDeclaration[2267-2299]"
    }, {
      "left" : "private String id;",
      "right" : "private String id;",
      "info" : "FieldDeclaration[2304-2322]:FieldDeclaration[2304-2322]"
    }, {
      "left" : "public static final String XML_NAMESPACE_URI = \n            \"http://www.w3.org/XML/1998/namespace\";",
      "right" : "public static final String XML_NAMESPACE_URI = \n            \"http://www.w3.org/XML/1998/namespace\";",
      "info" : "FieldDeclaration[2328-2427]:FieldDeclaration[2328-2427]"
    }, {
      "left" : "public static final String XMLNS_NAMESPACE_URI = \n            \"http://www.w3.org/2000/xmlns/\";",
      "right" : "public static final String XMLNS_NAMESPACE_URI = \n            \"http://www.w3.org/2000/xmlns/\";",
      "info" : "FieldDeclaration[2432-2526]:FieldDeclaration[2432-2526]"
    }, {
      "left" : "public DOMNodePointer(Node node, Locale locale)",
      "right" : "public DOMNodePointer(Node node, Locale locale)",
      "info" : "MethodDeclaration[2532-2642]:MethodDeclaration[2532-2642]"
    }, {
      "left" : "public DOMNodePointer(Node node, Locale locale, String id)",
      "right" : "public DOMNodePointer(Node node, Locale locale, String id)",
      "info" : "MethodDeclaration[2648-2791]:MethodDeclaration[2648-2791]"
    }, {
      "left" : "public DOMNodePointer(NodePointer parent, Node node)",
      "right" : "public DOMNodePointer(NodePointer parent, Node node)",
      "info" : "MethodDeclaration[2797-2906]:MethodDeclaration[2797-2906]"
    }, {
      "left" : "public boolean testNode(NodeTest test)",
      "right" : "public boolean testNode(NodeTest test)",
      "info" : "MethodDeclaration[2916-2999]:MethodDeclaration[2916-2999]"
    }, {
      "left" : "private static boolean equalStrings(String s1, String s2)",
      "right" : "private static boolean equalStrings(String s1, String s2)",
      "info" : "MethodDeclaration[5052-5431]:MethodDeclaration[5114-5493]"
    }, {
      "left" : "public QName getName()",
      "right" : "public QName getName()",
      "info" : "MethodDeclaration[5437-5876]:MethodDeclaration[5499-5938]"
    }, {
      "left" : "public String getNamespaceURI()",
      "right" : "public String getNamespaceURI()",
      "info" : "MethodDeclaration[5882-5959]:MethodDeclaration[5944-6021]"
    }, {
      "left" : "public NodeIterator childIterator(\n        NodeTest test,\n        boolean reverse,\n        NodePointer startWith)",
      "right" : "public NodeIterator childIterator(\n        NodeTest test,\n        boolean reverse,\n        NodePointer startWith)",
      "info" : "MethodDeclaration[5965-6159]:MethodDeclaration[6027-6221]"
    }, {
      "left" : "public NodeIterator attributeIterator(QName name)",
      "right" : "public NodeIterator attributeIterator(QName name)",
      "info" : "MethodDeclaration[6165-6275]:MethodDeclaration[6227-6337]"
    }, {
      "left" : "public NodePointer namespacePointer(String prefix)",
      "right" : "public NodePointer namespacePointer(String prefix)",
      "info" : "MethodDeclaration[6281-6390]:MethodDeclaration[6343-6452]"
    }, {
      "left" : "public NodeIterator namespaceIterator()",
      "right" : "public NodeIterator namespaceIterator()",
      "info" : "MethodDeclaration[6396-6490]:MethodDeclaration[6458-6552]"
    }, {
      "left" : "public String getNamespaceURI(String prefix)",
      "right" : "public String getNamespaceURI(String prefix)",
      "info" : "MethodDeclaration[6496-8041]:MethodDeclaration[6558-8103]"
    }, {
      "left" : "public String getDefaultNamespaceURI()",
      "right" : "public String getDefaultNamespaceURI()",
      "info" : "MethodDeclaration[8047-8937]:MethodDeclaration[8109-8999]"
    }, {
      "left" : "public Object getBaseValue()",
      "right" : "public Object getBaseValue()",
      "info" : "MethodDeclaration[8943-9000]:MethodDeclaration[9005-9062]"
    }, {
      "left" : "public Object getImmediateNode()",
      "right" : "public Object getImmediateNode()",
      "info" : "MethodDeclaration[9006-9067]:MethodDeclaration[9068-9129]"
    }, {
      "left" : "public boolean isActual()",
      "right" : "public boolean isActual()",
      "info" : "MethodDeclaration[9073-9127]:MethodDeclaration[9135-9189]"
    }, {
      "left" : "public boolean isCollection()",
      "right" : "public boolean isCollection()",
      "info" : "MethodDeclaration[9133-9192]:MethodDeclaration[9195-9254]"
    }, {
      "left" : "public int getLength()",
      "right" : "public int getLength()",
      "info" : "MethodDeclaration[9198-9246]:MethodDeclaration[9260-9308]"
    }, {
      "left" : "public boolean isLeaf()",
      "right" : "public boolean isLeaf()",
      "info" : "MethodDeclaration[9252-9321]:MethodDeclaration[9314-9383]"
    }, {
      "left" : "public boolean isLanguage(String lang)",
      "right" : "public boolean isLanguage(String lang)",
      "info" : "MethodDeclaration[9327-9786]:MethodDeclaration[9389-9848]"
    }, {
      "left" : "protected String getLanguage()",
      "right" : "protected String getLanguage()",
      "info" : "MethodDeclaration[9792-10223]:MethodDeclaration[9854-10285]"
    }, {
      "left" : "public void setValue(Object value)",
      "right" : "public void setValue(Object value)",
      "info" : "MethodDeclaration[10229-12184]:MethodDeclaration[10291-12246]"
    }, {
      "left" : "public NodePointer createChild(\n        JXPathContext context,\n        QName name,\n        int index)",
      "right" : "public NodePointer createChild(\n        JXPathContext context,\n        QName name,\n        int index)",
      "info" : "MethodDeclaration[12194-13291]:MethodDeclaration[12256-13353]"
    }, {
      "left" : "public NodePointer createChild(JXPathContext context, \n                QName name, int index, Object value)",
      "right" : "public NodePointer createChild(JXPathContext context, \n                QName name, int index, Object value)",
      "info" : "MethodDeclaration[13297-13526]:MethodDeclaration[13359-13588]"
    }, {
      "left" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "right" : "public NodePointer createAttribute(JXPathContext context, QName name)",
      "info" : "MethodDeclaration[13532-14367]:MethodDeclaration[13594-14429]"
    }, {
      "left" : "public void remove()",
      "right" : "public void remove()",
      "info" : "MethodDeclaration[14373-14589]:MethodDeclaration[14435-14651]"
    }, {
      "left" : "public String asPath()",
      "right" : "public String asPath()",
      "info" : "MethodDeclaration[14595-17358]:MethodDeclaration[14657-17420]"
    }, {
      "left" : "private String escape(String string)",
      "right" : "private String escape(String string)",
      "info" : "MethodDeclaration[17364-17967]:MethodDeclaration[17426-18029]"
    }, {
      "left" : "private int getRelativePositionByName()",
      "right" : "private int getRelativePositionByName()",
      "info" : "MethodDeclaration[17973-18402]:MethodDeclaration[18035-18464]"
    }, {
      "left" : "private int getRelativePositionOfElement()",
      "right" : "private int getRelativePositionOfElement()",
      "info" : "MethodDeclaration[18412-18724]:MethodDeclaration[18474-18786]"
    }, {
      "left" : "private int getRelativePositionOfTextNode()",
      "right" : "private int getRelativePositionOfTextNode()",
      "info" : "MethodDeclaration[18730-19102]:MethodDeclaration[18792-19164]"
    }, {
      "left" : "private int getRelativePositionOfPI(String target)",
      "right" : "private int getRelativePositionOfPI(String target)",
      "info" : "MethodDeclaration[19108-19517]:MethodDeclaration[19170-19579]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[19523-19598]:MethodDeclaration[19585-19660]"
    }, {
      "left" : "public boolean equals(Object object)",
      "right" : "public boolean equals(Object object)",
      "info" : "MethodDeclaration[19604-19893]:MethodDeclaration[19666-19955]"
    }, {
      "left" : "public static String getPrefix(Node node)",
      "right" : "public static String getPrefix(Node node)",
      "info" : "MethodDeclaration[19899-20247]:MethodDeclaration[19961-20309]"
    }, {
      "left" : "public static String getLocalName(Node node)",
      "right" : "public static String getLocalName(Node node)",
      "info" : "MethodDeclaration[20253-20617]:MethodDeclaration[20315-20679]"
    }, {
      "left" : "public static String getNamespaceURI(Node node)",
      "right" : "public static String getNamespaceURI(Node node)",
      "info" : "MethodDeclaration[20627-21518]:MethodDeclaration[20689-21580]"
    }, {
      "left" : "public Object getValue()",
      "right" : "public Object getValue()",
      "info" : "MethodDeclaration[21524-21590]:MethodDeclaration[21586-21652]"
    }, {
      "left" : "private String stringValue(Node node)",
      "right" : "private String stringValue(Node node)",
      "info" : "MethodDeclaration[21596-22774]:MethodDeclaration[21658-22836]"
    }, {
      "left" : "public Pointer getPointerByID(JXPathContext context, String id)",
      "right" : "public Pointer getPointerByID(JXPathContext context, String id)",
      "info" : "MethodDeclaration[22780-23341]:MethodDeclaration[22842-23403]"
    }, {
      "left" : "private AbstractFactory getAbstractFactory(JXPathContext context)",
      "right" : "private AbstractFactory getAbstractFactory(JXPathContext context)",
      "info" : "MethodDeclaration[23347-23719]:MethodDeclaration[23409-23781]"
    }, {
      "left" : "public int compareChildNodePointers(\n            NodePointer pointer1, NodePointer pointer2)",
      "right" : "public int compareChildNodePointers(\n            NodePointer pointer1, NodePointer pointer2)",
      "info" : "MethodDeclaration[23725-25105]:MethodDeclaration[23787-25167]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2580-2642]:Block[2580-2642]"
    }, {
      "left" : "super(null, locale);",
      "right" : "super(null, locale);",
      "info" : "SuperConstructorInvocation[2590-2610]:SuperConstructorInvocation[2590-2610]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[2619-2636]:ExpressionStatement[2619-2636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2707-2791]:Block[2707-2791]"
    }, {
      "left" : "super(null, locale);",
      "right" : "super(null, locale);",
      "info" : "SuperConstructorInvocation[2717-2737]:SuperConstructorInvocation[2717-2737]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[2746-2763]:ExpressionStatement[2746-2763]"
    }, {
      "left" : "this.id = id;",
      "right" : "this.id = id;",
      "info" : "ExpressionStatement[2772-2785]:ExpressionStatement[2772-2785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2850-2906]:Block[2850-2906]"
    }, {
      "left" : "super(parent);",
      "right" : "super(parent);",
      "info" : "SuperConstructorInvocation[2860-2874]:SuperConstructorInvocation[2860-2874]"
    }, {
      "left" : "this.node = node;",
      "right" : "this.node = node;",
      "info" : "ExpressionStatement[2883-2900]:ExpressionStatement[2883-2900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2955-2999]:Block[2955-2999]"
    }, {
      "left" : "return testNode(node, test);",
      "right" : "return testNode(node, test);",
      "info" : "ReturnStatement[2965-2993]:ReturnStatement[2965-2993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5110-5431]:Block[5172-5493]"
    }, {
      "left" : "if (s1 == null)",
      "right" : "if (s1 == null)",
      "info" : "IfStatement[5120-5205]:IfStatement[5182-5267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5136-5205]:Block[5198-5267]"
    }, {
      "left" : "return s2 == null || s2.trim().length() == 0;",
      "right" : "return s2 == null || s2.trim().length() == 0;",
      "info" : "ReturnStatement[5150-5195]:ReturnStatement[5212-5257]"
    }, {
      "left" : "if (s2 == null)",
      "right" : "if (s2 == null)",
      "info" : "IfStatement[5223-5308]:IfStatement[5285-5370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5239-5308]:Block[5301-5370]"
    }, {
      "left" : "return s1 == null || s1.trim().length() == 0;",
      "right" : "return s1 == null || s1.trim().length() == 0;",
      "info" : "ReturnStatement[5253-5298]:ReturnStatement[5315-5360]"
    }, {
      "left" : "if (s1 != null && !s1.trim().equals(s2.trim()))",
      "right" : "if (s1 != null && !s1.trim().equals(s2.trim()))",
      "info" : "IfStatement[5318-5403]:IfStatement[5380-5465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5366-5403]:Block[5428-5465]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5380-5393]:ReturnStatement[5442-5455]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5413-5425]:ReturnStatement[5475-5487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5460-5876]:Block[5522-5938]"
    }, {
      "left" : "String ln = null;",
      "right" : "String ln = null;",
      "info" : "VariableDeclarationStatement[5470-5487]:VariableDeclarationStatement[5532-5549]"
    }, {
      "left" : "String ns = null;",
      "right" : "String ns = null;",
      "info" : "VariableDeclarationStatement[5496-5513]:VariableDeclarationStatement[5558-5575]"
    }, {
      "left" : "int type = node.getNodeType();",
      "right" : "int type = node.getNodeType();",
      "info" : "VariableDeclarationStatement[5522-5552]:VariableDeclarationStatement[5584-5614]"
    }, {
      "left" : "if (type == Node.ELEMENT_NODE)",
      "right" : "if (type == Node.ELEMENT_NODE)",
      "info" : "IfStatement[5561-5836]:IfStatement[5623-5898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5592-5704]:Block[5654-5766]"
    }, {
      "left" : "ns = DOMNodePointer.getPrefix(node);",
      "right" : "ns = DOMNodePointer.getPrefix(node);",
      "info" : "ExpressionStatement[5606-5642]:ExpressionStatement[5668-5704]"
    }, {
      "left" : "ln = DOMNodePointer.getLocalName(node);",
      "right" : "ln = DOMNodePointer.getLocalName(node);",
      "info" : "ExpressionStatement[5655-5694]:ExpressionStatement[5717-5756]"
    }, {
      "left" : "if (type == Node.PROCESSING_INSTRUCTION_NODE)",
      "right" : "if (type == Node.PROCESSING_INSTRUCTION_NODE)",
      "info" : "IfStatement[5718-5836]:IfStatement[5780-5898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5764-5836]:Block[5826-5898]"
    }, {
      "left" : "ln = ((ProcessingInstruction) node).getTarget();",
      "right" : "ln = ((ProcessingInstruction) node).getTarget();",
      "info" : "ExpressionStatement[5778-5826]:ExpressionStatement[5840-5888]"
    }, {
      "left" : "return new QName(ns, ln);",
      "right" : "return new QName(ns, ln);",
      "info" : "ReturnStatement[5845-5870]:ReturnStatement[5907-5932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5914-5959]:Block[5976-6021]"
    }, {
      "left" : "return getNamespaceURI(node);",
      "right" : "return getNamespaceURI(node);",
      "info" : "ReturnStatement[5924-5953]:ReturnStatement[5986-6015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6084-6159]:Block[6146-6221]"
    }, {
      "left" : "return new DOMNodeIterator(this, test, reverse, startWith);",
      "right" : "return new DOMNodeIterator(this, test, reverse, startWith);",
      "info" : "ReturnStatement[6094-6153]:ReturnStatement[6156-6215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6215-6275]:Block[6277-6337]"
    }, {
      "left" : "return new DOMAttributeIterator(this, name);",
      "right" : "return new DOMAttributeIterator(this, name);",
      "info" : "ReturnStatement[6225-6269]:ReturnStatement[6287-6331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6332-6390]:Block[6394-6452]"
    }, {
      "left" : "return new NamespacePointer(this, prefix);",
      "right" : "return new NamespacePointer(this, prefix);",
      "info" : "ReturnStatement[6342-6384]:ReturnStatement[6404-6446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6436-6490]:Block[6498-6552]"
    }, {
      "left" : "return new DOMNamespaceIterator(this);",
      "right" : "return new DOMNamespaceIterator(this);",
      "info" : "ReturnStatement[6446-6484]:ReturnStatement[6508-6546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6541-8041]:Block[6603-8103]"
    }, {
      "left" : "if (prefix == null || prefix.equals(\"\"))",
      "right" : "if (prefix == null || prefix.equals(\"\"))",
      "info" : "IfStatement[6551-6648]:IfStatement[6613-6710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6592-6648]:Block[6654-6710]"
    }, {
      "left" : "return getDefaultNamespaceURI();",
      "right" : "return getDefaultNamespaceURI();",
      "info" : "ReturnStatement[6606-6638]:ReturnStatement[6668-6700]"
    }, {
      "left" : "if (prefix.equals(\"xml\"))",
      "right" : "if (prefix.equals(\"xml\"))",
      "info" : "IfStatement[6658-6733]:IfStatement[6720-6795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6684-6733]:Block[6746-6795]"
    }, {
      "left" : "return XML_NAMESPACE_URI;",
      "right" : "return XML_NAMESPACE_URI;",
      "info" : "ReturnStatement[6698-6723]:ReturnStatement[6760-6785]"
    }, {
      "left" : "if (prefix.equals(\"xmlns\"))",
      "right" : "if (prefix.equals(\"xmlns\"))",
      "info" : "IfStatement[6743-6822]:IfStatement[6805-6884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6771-6822]:Block[6833-6884]"
    }, {
      "left" : "return XMLNS_NAMESPACE_URI;",
      "right" : "return XMLNS_NAMESPACE_URI;",
      "info" : "ReturnStatement[6785-6812]:ReturnStatement[6847-6874]"
    }, {
      "left" : "String namespace = null;",
      "right" : "String namespace = null;",
      "info" : "VariableDeclarationStatement[6832-6856]:VariableDeclarationStatement[6894-6918]"
    }, {
      "left" : "if (namespaces == null)",
      "right" : "if (namespaces == null)",
      "info" : "IfStatement[6865-7022]:IfStatement[6927-7084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6889-6940]:Block[6951-7002]"
    }, {
      "left" : "namespaces = new HashMap();",
      "right" : "namespaces = new HashMap();",
      "info" : "ExpressionStatement[6903-6930]:ExpressionStatement[6965-6992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6954-7022]:Block[7016-7084]"
    }, {
      "left" : "namespace = (String) namespaces.get(prefix);",
      "right" : "namespace = (String) namespaces.get(prefix);",
      "info" : "ExpressionStatement[6968-7012]:ExpressionStatement[7030-7074]"
    }, {
      "left" : "if (namespace == null)",
      "right" : "if (namespace == null)",
      "info" : "IfStatement[7032-7800]:IfStatement[7094-7862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7055-7800]:Block[7117-7862]"
    }, {
      "left" : "String qname = \"xmlns:\" + prefix;",
      "right" : "String qname = \"xmlns:\" + prefix;",
      "info" : "VariableDeclarationStatement[7069-7102]:VariableDeclarationStatement[7131-7164]"
    }, {
      "left" : "Node aNode = node;",
      "right" : "Node aNode = node;",
      "info" : "VariableDeclarationStatement[7115-7133]:VariableDeclarationStatement[7177-7195]"
    }, {
      "left" : "if (aNode instanceof Document)",
      "right" : "if (aNode instanceof Document)",
      "info" : "IfStatement[7146-7256]:IfStatement[7208-7318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7177-7256]:Block[7239-7318]"
    }, {
      "left" : "aNode = ((Document)aNode).getDocumentElement();",
      "right" : "aNode = ((Document)aNode).getDocumentElement();",
      "info" : "ExpressionStatement[7195-7242]:ExpressionStatement[7257-7304]"
    }, {
      "left" : "while (aNode != null)",
      "right" : "while (aNode != null)",
      "info" : "WhileStatement[7269-7656]:WhileStatement[7331-7718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7291-7656]:Block[7353-7718]"
    }, {
      "left" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[7309-7595]:IfStatement[7371-7657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7355-7595]:Block[7417-7657]"
    }, {
      "left" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "right" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "info" : "VariableDeclarationStatement[7377-7431]:VariableDeclarationStatement[7439-7493]"
    }, {
      "left" : "if (attr != null)",
      "right" : "if (attr != null)",
      "info" : "IfStatement[7452-7577]:IfStatement[7514-7639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7470-7577]:Block[7532-7639]"
    }, {
      "left" : "namespace = attr.getValue();",
      "right" : "namespace = attr.getValue();",
      "info" : "ExpressionStatement[7496-7524]:ExpressionStatement[7558-7586]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[7549-7555]:BreakStatement[7611-7617]"
    }, {
      "left" : "aNode = aNode.getParentNode();",
      "right" : "aNode = aNode.getParentNode();",
      "info" : "ExpressionStatement[7612-7642]:ExpressionStatement[7674-7704]"
    }, {
      "left" : "if (namespace == null || namespace.equals(\"\"))",
      "right" : "if (namespace == null || namespace.equals(\"\"))",
      "info" : "IfStatement[7669-7790]:IfStatement[7731-7852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7716-7790]:Block[7778-7852]"
    }, {
      "left" : "namespace = NodePointer.UNKNOWN_NAMESPACE;",
      "right" : "namespace = NodePointer.UNKNOWN_NAMESPACE;",
      "info" : "ExpressionStatement[7734-7776]:ExpressionStatement[7796-7838]"
    }, {
      "left" : "namespaces.put(prefix, namespace);",
      "right" : "namespaces.put(prefix, namespace);",
      "info" : "ExpressionStatement[7810-7844]:ExpressionStatement[7872-7906]"
    }, {
      "left" : "if (namespace == UNKNOWN_NAMESPACE)",
      "right" : "if (namespace == UNKNOWN_NAMESPACE)",
      "info" : "IfStatement[7853-7925]:IfStatement[7915-7987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7889-7925]:Block[7951-7987]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7903-7915]:ReturnStatement[7965-7977]"
    }, {
      "left" : "return namespace;",
      "right" : "return namespace;",
      "info" : "ReturnStatement[8018-8035]:ReturnStatement[8080-8097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8086-8937]:Block[8148-8999]"
    }, {
      "left" : "if (defaultNamespace == null)",
      "right" : "if (defaultNamespace == null)",
      "info" : "IfStatement[8096-8701]:IfStatement[8158-8763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8126-8701]:Block[8188-8763]"
    }, {
      "left" : "Node aNode = node;",
      "right" : "Node aNode = node;",
      "info" : "VariableDeclarationStatement[8140-8158]:VariableDeclarationStatement[8202-8220]"
    }, {
      "left" : "if (aNode instanceof Document)",
      "right" : "if (aNode instanceof Document)",
      "info" : "IfStatement[8171-8282]:IfStatement[8233-8344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8202-8282]:Block[8264-8344]"
    }, {
      "left" : "aNode = ((Document) aNode).getDocumentElement();",
      "right" : "aNode = ((Document) aNode).getDocumentElement();",
      "info" : "ExpressionStatement[8220-8268]:ExpressionStatement[8282-8330]"
    }, {
      "left" : "while (aNode != null)",
      "right" : "while (aNode != null)",
      "info" : "WhileStatement[8295-8691]:WhileStatement[8357-8753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8317-8691]:Block[8379-8753]"
    }, {
      "left" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[8335-8630]:IfStatement[8397-8692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8381-8630]:Block[8443-8692]"
    }, {
      "left" : "Attr attr = ((Element) aNode).getAttributeNode(\"xmlns\");",
      "right" : "Attr attr = ((Element) aNode).getAttributeNode(\"xmlns\");",
      "info" : "VariableDeclarationStatement[8403-8459]:VariableDeclarationStatement[8465-8521]"
    }, {
      "left" : "if (attr != null)",
      "right" : "if (attr != null)",
      "info" : "IfStatement[8480-8612]:IfStatement[8542-8674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8498-8612]:Block[8560-8674]"
    }, {
      "left" : "defaultNamespace = attr.getValue();",
      "right" : "defaultNamespace = attr.getValue();",
      "info" : "ExpressionStatement[8524-8559]:ExpressionStatement[8586-8621]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[8584-8590]:BreakStatement[8646-8652]"
    }, {
      "left" : "aNode = aNode.getParentNode();",
      "right" : "aNode = aNode.getParentNode();",
      "info" : "ExpressionStatement[8647-8677]:ExpressionStatement[8709-8739]"
    }, {
      "left" : "if (defaultNamespace == null)",
      "right" : "if (defaultNamespace == null)",
      "info" : "IfStatement[8710-8786]:IfStatement[8772-8848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8740-8786]:Block[8802-8848]"
    }, {
      "left" : "defaultNamespace = \"\";",
      "right" : "defaultNamespace = \"\";",
      "info" : "ExpressionStatement[8754-8776]:ExpressionStatement[8816-8838]"
    }, {
      "left" : "return defaultNamespace.equals(\"\") ? null : defaultNamespace;",
      "right" : "return defaultNamespace.equals(\"\") ? null : defaultNamespace;",
      "info" : "ReturnStatement[8870-8931]:ReturnStatement[8932-8993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8972-9000]:Block[9034-9062]"
    }, {
      "left" : "return node;",
      "right" : "return node;",
      "info" : "ReturnStatement[8982-8994]:ReturnStatement[9044-9056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9039-9067]:Block[9101-9129]"
    }, {
      "left" : "return node;",
      "right" : "return node;",
      "info" : "ReturnStatement[9049-9061]:ReturnStatement[9111-9123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9099-9127]:Block[9161-9189]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[9109-9121]:ReturnStatement[9171-9183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9163-9192]:Block[9225-9254]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[9173-9186]:ReturnStatement[9235-9248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9221-9246]:Block[9283-9308]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[9231-9240]:ReturnStatement[9293-9302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9276-9321]:Block[9338-9383]"
    }, {
      "left" : "return !node.hasChildNodes();",
      "right" : "return !node.hasChildNodes();",
      "info" : "ReturnStatement[9286-9315]:ReturnStatement[9348-9377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9586-9786]:Block[9648-9848]"
    }, {
      "left" : "String current = getLanguage();",
      "right" : "String current = getLanguage();",
      "info" : "VariableDeclarationStatement[9596-9627]:VariableDeclarationStatement[9658-9689]"
    }, {
      "left" : "if (current == null)",
      "right" : "if (current == null)",
      "info" : "IfStatement[9636-9711]:IfStatement[9698-9773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9657-9711]:Block[9719-9773]"
    }, {
      "left" : "return super.isLanguage(lang);",
      "right" : "return super.isLanguage(lang);",
      "info" : "ReturnStatement[9671-9701]:ReturnStatement[9733-9763]"
    }, {
      "left" : "return current.toUpperCase().startsWith(lang.toUpperCase());",
      "right" : "return current.toUpperCase().startsWith(lang.toUpperCase());",
      "info" : "ReturnStatement[9720-9780]:ReturnStatement[9782-9842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9823-10223]:Block[9885-10285]"
    }, {
      "left" : "Node n = node;",
      "right" : "Node n = node;",
      "info" : "VariableDeclarationStatement[9833-9847]:VariableDeclarationStatement[9895-9909]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[9856-10196]:WhileStatement[9918-10258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9874-10196]:Block[9936-10258]"
    }, {
      "left" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[9888-10151]:IfStatement[9950-10213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9930-10151]:Block[9992-10213]"
    }, {
      "left" : "Element e = (Element) n;",
      "right" : "Element e = (Element) n;",
      "info" : "VariableDeclarationStatement[9948-9972]:VariableDeclarationStatement[10010-10034]"
    }, {
      "left" : "String attr = e.getAttribute(\"xml:lang\");",
      "right" : "String attr = e.getAttribute(\"xml:lang\");",
      "info" : "VariableDeclarationStatement[9989-10030]:VariableDeclarationStatement[10051-10092]"
    }, {
      "left" : "if (attr != null && !attr.equals(\"\"))",
      "right" : "if (attr != null && !attr.equals(\"\"))",
      "info" : "IfStatement[10047-10137]:IfStatement[10109-10199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10085-10137]:Block[10147-10199]"
    }, {
      "left" : "return attr;",
      "right" : "return attr;",
      "info" : "ReturnStatement[10107-10119]:ReturnStatement[10169-10181]"
    }, {
      "left" : "n = n.getParentNode();",
      "right" : "n = n.getParentNode();",
      "info" : "ExpressionStatement[10164-10186]:ExpressionStatement[10226-10248]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10205-10217]:ReturnStatement[10267-10279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10554-12184]:Block[10616-12246]"
    }, {
      "left" : "if (node.getNodeType() == Node.TEXT_NODE\n            || node.getNodeType() == Node.CDATA_SECTION_NODE)",
      "right" : "if (node.getNodeType() == Node.TEXT_NODE\n            || node.getNodeType() == Node.CDATA_SECTION_NODE)",
      "info" : "IfStatement[10564-12178]:IfStatement[10626-12240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10667-10957]:Block[10729-11019]"
    }, {
      "left" : "String string = (String) TypeUtils.convert(value, String.class);",
      "right" : "String string = (String) TypeUtils.convert(value, String.class);",
      "info" : "VariableDeclarationStatement[10681-10745]:VariableDeclarationStatement[10743-10807]"
    }, {
      "left" : "if (string != null && !string.equals(\"\"))",
      "right" : "if (string != null && !string.equals(\"\"))",
      "info" : "IfStatement[10758-10947]:IfStatement[10820-11009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10800-10858]:Block[10862-10920]"
    }, {
      "left" : "node.setNodeValue(string);",
      "right" : "node.setNodeValue(string);",
      "info" : "ExpressionStatement[10818-10844]:ExpressionStatement[10880-10906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10876-10947]:Block[10938-11009]"
    }, {
      "left" : "node.getParentNode().removeChild(node);",
      "right" : "node.getParentNode().removeChild(node);",
      "info" : "ExpressionStatement[10894-10933]:ExpressionStatement[10956-10995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10971-12178]:Block[11033-12240]"
    }, {
      "left" : "NodeList children = node.getChildNodes();",
      "right" : "NodeList children = node.getChildNodes();",
      "info" : "VariableDeclarationStatement[10985-11026]:VariableDeclarationStatement[11047-11088]"
    }, {
      "left" : "int count = children.getLength();",
      "right" : "int count = children.getLength();",
      "info" : "VariableDeclarationStatement[11039-11072]:VariableDeclarationStatement[11101-11134]"
    }, {
      "left" : "for (int i = count; --i >= 0)",
      "right" : "for (int i = count; --i >= 0)",
      "info" : "ForStatement[11085-11219]:ForStatement[11147-11281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11116-11219]:Block[11178-11281]"
    }, {
      "left" : "Node child = children.item(i);",
      "right" : "Node child = children.item(i);",
      "info" : "VariableDeclarationStatement[11134-11164]:VariableDeclarationStatement[11196-11226]"
    }, {
      "left" : "node.removeChild(child);",
      "right" : "node.removeChild(child);",
      "info" : "ExpressionStatement[11181-11205]:ExpressionStatement[11243-11267]"
    }, {
      "left" : "if (value instanceof Node)",
      "right" : "if (value instanceof Node)",
      "info" : "IfStatement[11233-12168]:IfStatement[11295-12230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11260-11820]:Block[11322-11882]"
    }, {
      "left" : "Node valueNode = (Node) value;",
      "right" : "Node valueNode = (Node) value;",
      "info" : "VariableDeclarationStatement[11278-11308]:VariableDeclarationStatement[11340-11370]"
    }, {
      "left" : "if (valueNode instanceof Element\n                    || valueNode instanceof Document)",
      "right" : "if (valueNode instanceof Element\n                    || valueNode instanceof Document)",
      "info" : "IfStatement[11325-11806]:IfStatement[11387-11868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11412-11700]:Block[11474-11762]"
    }, {
      "left" : "children = valueNode.getChildNodes();",
      "right" : "children = valueNode.getChildNodes();",
      "info" : "ExpressionStatement[11434-11471]:ExpressionStatement[11496-11533]"
    }, {
      "left" : "for (int i = 0; i < children.getLength(); i++)",
      "right" : "for (int i = 0; i < children.getLength(); i++)",
      "info" : "ForStatement[11492-11682]:ForStatement[11554-11744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11539-11682]:Block[11601-11744]"
    }, {
      "left" : "Node child = children.item(i);",
      "right" : "Node child = children.item(i);",
      "info" : "VariableDeclarationStatement[11565-11595]:VariableDeclarationStatement[11627-11657]"
    }, {
      "left" : "node.appendChild(child.cloneNode(true));",
      "right" : "node.appendChild(child.cloneNode(true));",
      "info" : "ExpressionStatement[11620-11660]:ExpressionStatement[11682-11722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11722-11806]:Block[11784-11868]"
    }, {
      "left" : "node.appendChild(valueNode.cloneNode(true));",
      "right" : "node.appendChild(valueNode.cloneNode(true));",
      "info" : "ExpressionStatement[11744-11788]:ExpressionStatement[11806-11850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11838-12168]:Block[11900-12230]"
    }, {
      "left" : "String string = (String) TypeUtils.convert(value, String.class);",
      "right" : "String string = (String) TypeUtils.convert(value, String.class);",
      "info" : "VariableDeclarationStatement[11856-11920]:VariableDeclarationStatement[11918-11982]"
    }, {
      "left" : "if (string != null && !string.equals(\"\"))",
      "right" : "if (string != null && !string.equals(\"\"))",
      "info" : "IfStatement[11937-12154]:IfStatement[11999-12216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11979-12154]:Block[12041-12216]"
    }, {
      "left" : "Node textNode =\n                        node.getOwnerDocument().createTextNode(string);",
      "right" : "Node textNode =\n                        node.getOwnerDocument().createTextNode(string);",
      "info" : "VariableDeclarationStatement[12001-12088]:VariableDeclarationStatement[12063-12150]"
    }, {
      "left" : "node.appendChild(textNode);",
      "right" : "node.appendChild(textNode);",
      "info" : "ExpressionStatement[12109-12136]:ExpressionStatement[12171-12198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12301-13291]:Block[12363-13353]"
    }, {
      "left" : "if (index == WHOLE_COLLECTION)",
      "right" : "if (index == WHOLE_COLLECTION)",
      "info" : "IfStatement[12311-12376]:IfStatement[12373-12438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12342-12376]:Block[12404-12438]"
    }, {
      "left" : "index = 0;",
      "right" : "index = 0;",
      "info" : "ExpressionStatement[12356-12366]:ExpressionStatement[12418-12428]"
    }, {
      "left" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
      "right" : "boolean success =\n            getAbstractFactory(context).createObject(\n                context,\n                this,\n                node,\n                name.toString(),\n                index);",
      "info" : "VariableDeclarationStatement[12385-12582]:VariableDeclarationStatement[12447-12644]"
    }, {
      "left" : "if (success)",
      "right" : "if (success)",
      "info" : "IfStatement[12591-13092]:IfStatement[12653-13154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12604-13092]:Block[12666-13154]"
    }, {
      "left" : "NodeTest nodeTest;",
      "right" : "NodeTest nodeTest;",
      "info" : "VariableDeclarationStatement[12618-12636]:VariableDeclarationStatement[12680-12698]"
    }, {
      "left" : "String prefix = name.getPrefix();",
      "right" : "String prefix = name.getPrefix();",
      "info" : "VariableDeclarationStatement[12649-12682]:VariableDeclarationStatement[12711-12744]"
    }, {
      "left" : "String namespaceURI = prefix != null \n                ? context.getNamespaceURI(prefix) \n                : context.getDefaultNamespaceURI();",
      "right" : "String namespaceURI = prefix != null \n                ? context.getNamespaceURI(prefix) \n                : context.getDefaultNamespaceURI();",
      "info" : "VariableDeclarationStatement[12695-12835]:VariableDeclarationStatement[12757-12897]"
    }, {
      "left" : "nodeTest = new NodeNameTest(name, namespaceURI);",
      "right" : "nodeTest = new NodeNameTest(name, namespaceURI);",
      "info" : "ExpressionStatement[12848-12896]:ExpressionStatement[12910-12958]"
    }, {
      "left" : "NodeIterator it = childIterator(nodeTest, false, null);",
      "right" : "NodeIterator it = childIterator(nodeTest, false, null);",
      "info" : "VariableDeclarationStatement[12910-12965]:VariableDeclarationStatement[12972-13027]"
    }, {
      "left" : "if (it != null && it.setPosition(index + 1))",
      "right" : "if (it != null && it.setPosition(index + 1))",
      "info" : "IfStatement[12978-13082]:IfStatement[13040-13144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13023-13082]:Block[13085-13144]"
    }, {
      "left" : "return it.getNodePointer();",
      "right" : "return it.getNodePointer();",
      "info" : "ReturnStatement[13041-13068]:ReturnStatement[13103-13130]"
    }, {
      "left" : "throw new JXPathAbstractFactoryException(\n                \"Factory could not create a child node for path: \" + asPath()\n                        + \"/\" + name + \"[\" + (index + 1) + \"]\");",
      "right" : "throw new JXPathAbstractFactoryException(\n                \"Factory could not create a child node for path: \" + asPath()\n                        + \"/\" + name + \"[\" + (index + 1) + \"]\");",
      "info" : "ThrowStatement[13101-13285]:ThrowStatement[13163-13347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13409-13526]:Block[13471-13588]"
    }, {
      "left" : "NodePointer ptr = createChild(context, name, index);",
      "right" : "NodePointer ptr = createChild(context, name, index);",
      "info" : "VariableDeclarationStatement[13419-13471]:VariableDeclarationStatement[13481-13533]"
    }, {
      "left" : "ptr.setValue(value);",
      "right" : "ptr.setValue(value);",
      "info" : "ExpressionStatement[13480-13500]:ExpressionStatement[13542-13562]"
    }, {
      "left" : "return ptr;",
      "right" : "return ptr;",
      "info" : "ReturnStatement[13509-13520]:ReturnStatement[13571-13582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13602-14367]:Block[13664-14429]"
    }, {
      "left" : "if (!(node instanceof Element))",
      "right" : "if (!(node instanceof Element))",
      "info" : "IfStatement[13612-13712]:IfStatement[13674-13774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13644-13712]:Block[13706-13774]"
    }, {
      "left" : "return super.createAttribute(context, name);",
      "right" : "return super.createAttribute(context, name);",
      "info" : "ReturnStatement[13658-13702]:ReturnStatement[13720-13764]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[13721-13754]:VariableDeclarationStatement[13783-13816]"
    }, {
      "left" : "String prefix = name.getPrefix();",
      "right" : "String prefix = name.getPrefix();",
      "info" : "VariableDeclarationStatement[13763-13796]:VariableDeclarationStatement[13825-13858]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[13805-14247]:IfStatement[13867-14309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13825-14093]:Block[13887-14155]"
    }, {
      "left" : "String ns = getNamespaceURI(prefix);",
      "right" : "String ns = getNamespaceURI(prefix);",
      "info" : "VariableDeclarationStatement[13839-13875]:VariableDeclarationStatement[13901-13937]"
    }, {
      "left" : "if (ns == null)",
      "right" : "if (ns == null)",
      "info" : "IfStatement[13888-14022]:IfStatement[13950-14084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13904-14022]:Block[13966-14084]"
    }, {
      "left" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
      "right" : "throw new JXPathException(\n                    \"Unknown namespace prefix: \" + prefix);",
      "info" : "ThrowStatement[13922-14008]:ThrowStatement[13984-14070]"
    }, {
      "left" : "element.setAttributeNS(ns, name.toString(), \"\");",
      "right" : "element.setAttributeNS(ns, name.toString(), \"\");",
      "info" : "ExpressionStatement[14035-14083]:ExpressionStatement[14097-14145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14107-14247]:Block[14169-14309]"
    }, {
      "left" : "if (!element.hasAttribute(name.getName()))",
      "right" : "if (!element.hasAttribute(name.getName()))",
      "info" : "IfStatement[14121-14237]:IfStatement[14183-14299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14164-14237]:Block[14226-14299]"
    }, {
      "left" : "element.setAttribute(name.getName(), \"\");",
      "right" : "element.setAttribute(name.getName(), \"\");",
      "info" : "ExpressionStatement[14182-14223]:ExpressionStatement[14244-14285]"
    }, {
      "left" : "NodeIterator it = attributeIterator(name);",
      "right" : "NodeIterator it = attributeIterator(name);",
      "info" : "VariableDeclarationStatement[14256-14298]:VariableDeclarationStatement[14318-14360]"
    }, {
      "left" : "it.setPosition(1);",
      "right" : "it.setPosition(1);",
      "info" : "ExpressionStatement[14307-14325]:ExpressionStatement[14369-14387]"
    }, {
      "left" : "return it.getNodePointer();",
      "right" : "return it.getNodePointer();",
      "info" : "ReturnStatement[14334-14361]:ReturnStatement[14396-14423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14394-14589]:Block[14456-14651]"
    }, {
      "left" : "Node parent = node.getParentNode();",
      "right" : "Node parent = node.getParentNode();",
      "info" : "VariableDeclarationStatement[14404-14439]:VariableDeclarationStatement[14466-14501]"
    }, {
      "left" : "if (parent == null)",
      "right" : "if (parent == null)",
      "info" : "IfStatement[14448-14549]:IfStatement[14510-14611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14468-14549]:Block[14530-14611]"
    }, {
      "left" : "throw new JXPathException(\"Cannot remove root DOM node\");",
      "right" : "throw new JXPathException(\"Cannot remove root DOM node\");",
      "info" : "ThrowStatement[14482-14539]:ThrowStatement[14544-14601]"
    }, {
      "left" : "parent.removeChild(node);",
      "right" : "parent.removeChild(node);",
      "info" : "ExpressionStatement[14558-14583]:ExpressionStatement[14620-14645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14618-17358]:Block[14680-17420]"
    }, {
      "left" : "if (id != null)",
      "right" : "if (id != null)",
      "info" : "IfStatement[14628-14702]:IfStatement[14690-14764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14644-14702]:Block[14706-14764]"
    }, {
      "left" : "return \"id('\" + escape(id) + \"')\";",
      "right" : "return \"id('\" + escape(id) + \"')\";",
      "info" : "ReturnStatement[14658-14692]:ReturnStatement[14720-14754]"
    }, {
      "left" : "StringBuffer buffer = new StringBuffer();",
      "right" : "StringBuffer buffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[14712-14753]:VariableDeclarationStatement[14774-14815]"
    }, {
      "left" : "if (parent != null)",
      "right" : "if (parent != null)",
      "info" : "IfStatement[14762-14837]:IfStatement[14824-14899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14782-14837]:Block[14844-14899]"
    }, {
      "left" : "buffer.append(parent.asPath());",
      "right" : "buffer.append(parent.asPath());",
      "info" : "ExpressionStatement[14796-14827]:ExpressionStatement[14858-14889]"
    }, {
      "left" : "switch (node.getNodeType()) {\n            case Node.ELEMENT_NODE :\n                // If the parent pointer is not a DOMNodePointer, it is\n                // the parent's responsibility to produce the node test part\n                // of the path\n                if (parent instanceof DOMNodePointer) {\n                    if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/') {\n                        buffer.append('/');\n                    }\n                    String ln = DOMNodePointer.getLocalName(node);\n                    String nsURI = getNamespaceURI();\n                    if (equalStrings(nsURI, \n                            getNamespaceResolver().getDefaultNamespaceURI())) {\n                        buffer.append(ln);\n                        buffer.append('[');\n                        buffer.append(getRelativePositionByName()).append(']');\n                    }\n                    else {\n                        String prefix = getNamespaceResolver().getPrefix(nsURI);\n                        if (prefix != null) {\n                            buffer.append(prefix);\n                            buffer.append(':');\n                            buffer.append(ln);\n                            buffer.append('[');\n                            buffer.append(getRelativePositionByName());\n                            buffer.append(']');\n                        }\n                        else {\n                            buffer.append(\"node()\");\n                            buffer.append('[');\n                            buffer.append(getRelativePositionOfElement());\n                            buffer.append(']');\n                        }\n                    }\n                }\n            break;\n            case Node.TEXT_NODE :\n            case Node.CDATA_SECTION_NODE :\n                buffer.append(\"/text()\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfTextNode()).append(']');\n                break;\n            case Node.PROCESSING_INSTRUCTION_NODE :\n                String target = ((ProcessingInstruction) node).getTarget();\n                buffer.append(\"/processing-instruction(\\'\");\n                buffer.append(target).append(\"')\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfPI(target)).append(']');\n                break;\n            case Node.DOCUMENT_NODE :\n                // That'll be empty\n        }",
      "right" : "switch (node.getNodeType()) {\n            case Node.ELEMENT_NODE :\n                // If the parent pointer is not a DOMNodePointer, it is\n                // the parent's responsibility to produce the node test part\n                // of the path\n                if (parent instanceof DOMNodePointer) {\n                    if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/') {\n                        buffer.append('/');\n                    }\n                    String ln = DOMNodePointer.getLocalName(node);\n                    String nsURI = getNamespaceURI();\n                    if (equalStrings(nsURI, \n                            getNamespaceResolver().getDefaultNamespaceURI())) {\n                        buffer.append(ln);\n                        buffer.append('[');\n                        buffer.append(getRelativePositionByName()).append(']');\n                    }\n                    else {\n                        String prefix = getNamespaceResolver().getPrefix(nsURI);\n                        if (prefix != null) {\n                            buffer.append(prefix);\n                            buffer.append(':');\n                            buffer.append(ln);\n                            buffer.append('[');\n                            buffer.append(getRelativePositionByName());\n                            buffer.append(']');\n                        }\n                        else {\n                            buffer.append(\"node()\");\n                            buffer.append('[');\n                            buffer.append(getRelativePositionOfElement());\n                            buffer.append(']');\n                        }\n                    }\n                }\n            break;\n            case Node.TEXT_NODE :\n            case Node.CDATA_SECTION_NODE :\n                buffer.append(\"/text()\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfTextNode()).append(']');\n                break;\n            case Node.PROCESSING_INSTRUCTION_NODE :\n                String target = ((ProcessingInstruction) node).getTarget();\n                buffer.append(\"/processing-instruction(\\'\");\n                buffer.append(target).append(\"')\");\n                buffer.append('[');\n                buffer.append(getRelativePositionOfPI(target)).append(']');\n                break;\n            case Node.DOCUMENT_NODE :\n                // That'll be empty\n        }",
      "info" : "SwitchStatement[14846-17318]:SwitchStatement[14908-17380]"
    }, {
      "left" : "case Node.ELEMENT_NODE :",
      "right" : "case Node.ELEMENT_NODE :",
      "info" : "SwitchCase[14888-14912]:SwitchCase[14950-14974]"
    }, {
      "left" : "if (parent instanceof DOMNodePointer)",
      "right" : "if (parent instanceof DOMNodePointer)",
      "info" : "IfStatement[15109-16585]:IfStatement[15171-16647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15147-16585]:Block[15209-16647]"
    }, {
      "left" : "if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/')",
      "right" : "if (buffer.length() == 0\n                            || buffer.charAt(buffer.length() - 1) != '/')",
      "info" : "IfStatement[15169-15335]:IfStatement[15231-15397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15268-15335]:Block[15330-15397]"
    }, {
      "left" : "buffer.append('/');",
      "right" : "buffer.append('/');",
      "info" : "ExpressionStatement[15294-15313]:ExpressionStatement[15356-15375]"
    }, {
      "left" : "String ln = DOMNodePointer.getLocalName(node);",
      "right" : "String ln = DOMNodePointer.getLocalName(node);",
      "info" : "VariableDeclarationStatement[15356-15402]:VariableDeclarationStatement[15418-15464]"
    }, {
      "left" : "String nsURI = getNamespaceURI();",
      "right" : "String nsURI = getNamespaceURI();",
      "info" : "VariableDeclarationStatement[15423-15456]:VariableDeclarationStatement[15485-15518]"
    }, {
      "left" : "if (equalStrings(nsURI, \n                            getNamespaceResolver().getDefaultNamespaceURI()))",
      "right" : "if (equalStrings(nsURI, \n                            getNamespaceResolver().getDefaultNamespaceURI()))",
      "info" : "IfStatement[15477-16567]:IfStatement[15539-16629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15580-15770]:Block[15642-15832]"
    }, {
      "left" : "buffer.append(ln);",
      "right" : "buffer.append(ln);",
      "info" : "ExpressionStatement[15606-15624]:ExpressionStatement[15668-15686]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[15649-15668]:ExpressionStatement[15711-15730]"
    }, {
      "left" : "buffer.append(getRelativePositionByName()).append(']');",
      "right" : "buffer.append(getRelativePositionByName()).append(']');",
      "info" : "ExpressionStatement[15693-15748]:ExpressionStatement[15755-15810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15796-16567]:Block[15858-16629]"
    }, {
      "left" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
      "right" : "String prefix = getNamespaceResolver().getPrefix(nsURI);",
      "info" : "VariableDeclarationStatement[15822-15878]:VariableDeclarationStatement[15884-15940]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[15903-16545]:IfStatement[15965-16607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15923-16264]:Block[15985-16326]"
    }, {
      "left" : "buffer.append(prefix);",
      "right" : "buffer.append(prefix);",
      "info" : "ExpressionStatement[15953-15975]:ExpressionStatement[16015-16037]"
    }, {
      "left" : "buffer.append(':');",
      "right" : "buffer.append(':');",
      "info" : "ExpressionStatement[16004-16023]:ExpressionStatement[16066-16085]"
    }, {
      "left" : "buffer.append(ln);",
      "right" : "buffer.append(ln);",
      "info" : "ExpressionStatement[16052-16070]:ExpressionStatement[16114-16132]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[16099-16118]:ExpressionStatement[16161-16180]"
    }, {
      "left" : "buffer.append(getRelativePositionByName());",
      "right" : "buffer.append(getRelativePositionByName());",
      "info" : "ExpressionStatement[16147-16190]:ExpressionStatement[16209-16252]"
    }, {
      "left" : "buffer.append(']');",
      "right" : "buffer.append(']');",
      "info" : "ExpressionStatement[16219-16238]:ExpressionStatement[16281-16300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16294-16545]:Block[16356-16607]"
    }, {
      "left" : "buffer.append(\"node()\");",
      "right" : "buffer.append(\"node()\");",
      "info" : "ExpressionStatement[16324-16348]:ExpressionStatement[16386-16410]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[16377-16396]:ExpressionStatement[16439-16458]"
    }, {
      "left" : "buffer.append(getRelativePositionOfElement());",
      "right" : "buffer.append(getRelativePositionOfElement());",
      "info" : "ExpressionStatement[16425-16471]:ExpressionStatement[16487-16533]"
    }, {
      "left" : "buffer.append(']');",
      "right" : "buffer.append(']');",
      "info" : "ExpressionStatement[16500-16519]:ExpressionStatement[16562-16581]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16598-16604]:BreakStatement[16660-16666]"
    }, {
      "left" : "case Node.TEXT_NODE :",
      "right" : "case Node.TEXT_NODE :",
      "info" : "SwitchCase[16617-16638]:SwitchCase[16679-16700]"
    }, {
      "left" : "case Node.CDATA_SECTION_NODE :",
      "right" : "case Node.CDATA_SECTION_NODE :",
      "info" : "SwitchCase[16651-16681]:SwitchCase[16713-16743]"
    }, {
      "left" : "buffer.append(\"/text()\");",
      "right" : "buffer.append(\"/text()\");",
      "info" : "ExpressionStatement[16698-16723]:ExpressionStatement[16760-16785]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[16740-16759]:ExpressionStatement[16802-16821]"
    }, {
      "left" : "buffer.append(getRelativePositionOfTextNode()).append(']');",
      "right" : "buffer.append(getRelativePositionOfTextNode()).append(']');",
      "info" : "ExpressionStatement[16776-16835]:ExpressionStatement[16838-16897]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[16852-16858]:BreakStatement[16914-16920]"
    }, {
      "left" : "case Node.PROCESSING_INSTRUCTION_NODE :",
      "right" : "case Node.PROCESSING_INSTRUCTION_NODE :",
      "info" : "SwitchCase[16871-16910]:SwitchCase[16933-16972]"
    }, {
      "left" : "String target = ((ProcessingInstruction) node).getTarget();",
      "right" : "String target = ((ProcessingInstruction) node).getTarget();",
      "info" : "VariableDeclarationStatement[16927-16986]:VariableDeclarationStatement[16989-17048]"
    }, {
      "left" : "buffer.append(\"/processing-instruction(\\'\");",
      "right" : "buffer.append(\"/processing-instruction(\\'\");",
      "info" : "ExpressionStatement[17003-17047]:ExpressionStatement[17065-17109]"
    }, {
      "left" : "buffer.append(target).append(\"')\");",
      "right" : "buffer.append(target).append(\"')\");",
      "info" : "ExpressionStatement[17064-17099]:ExpressionStatement[17126-17161]"
    }, {
      "left" : "buffer.append('[');",
      "right" : "buffer.append('[');",
      "info" : "ExpressionStatement[17116-17135]:ExpressionStatement[17178-17197]"
    }, {
      "left" : "buffer.append(getRelativePositionOfPI(target)).append(']');",
      "right" : "buffer.append(getRelativePositionOfPI(target)).append(']');",
      "info" : "ExpressionStatement[17152-17211]:ExpressionStatement[17214-17273]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17228-17234]:BreakStatement[17290-17296]"
    }, {
      "left" : "case Node.DOCUMENT_NODE :",
      "right" : "case Node.DOCUMENT_NODE :",
      "info" : "SwitchCase[17247-17272]:SwitchCase[17309-17334]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[17327-17352]:ReturnStatement[17389-17414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17401-17967]:Block[17463-18029]"
    }, {
      "left" : "int index = string.indexOf('\\'');",
      "right" : "int index = string.indexOf('\\'');",
      "info" : "VariableDeclarationStatement[17411-17444]:VariableDeclarationStatement[17473-17506]"
    }, {
      "left" : "while (index != -1)",
      "right" : "while (index != -1)",
      "info" : "WhileStatement[17453-17672]:WhileStatement[17515-17734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17473-17672]:Block[17535-17734]"
    }, {
      "left" : "string =\n                string.substring(0, index)\n                    + \"&apos;\"\n                    + string.substring(index + 1);",
      "right" : "string =\n                string.substring(0, index)\n                    + \"&apos;\"\n                    + string.substring(index + 1);",
      "info" : "ExpressionStatement[17487-17620]:ExpressionStatement[17549-17682]"
    }, {
      "left" : "index = string.indexOf('\\'');",
      "right" : "index = string.indexOf('\\'');",
      "info" : "ExpressionStatement[17633-17662]:ExpressionStatement[17695-17724]"
    }, {
      "left" : "index = string.indexOf('\\\"');",
      "right" : "index = string.indexOf('\\\"');",
      "info" : "ExpressionStatement[17681-17710]:ExpressionStatement[17743-17772]"
    }, {
      "left" : "while (index != -1)",
      "right" : "while (index != -1)",
      "info" : "WhileStatement[17719-17938]:WhileStatement[17781-18000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17739-17938]:Block[17801-18000]"
    }, {
      "left" : "string =\n                string.substring(0, index)\n                    + \"&quot;\"\n                    + string.substring(index + 1);",
      "right" : "string =\n                string.substring(0, index)\n                    + \"&quot;\"\n                    + string.substring(index + 1);",
      "info" : "ExpressionStatement[17753-17886]:ExpressionStatement[17815-17948]"
    }, {
      "left" : "index = string.indexOf('\\\"');",
      "right" : "index = string.indexOf('\\\"');",
      "info" : "ExpressionStatement[17899-17928]:ExpressionStatement[17961-17990]"
    }, {
      "left" : "return string;",
      "right" : "return string;",
      "info" : "ReturnStatement[17947-17961]:ReturnStatement[18009-18023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18013-18402]:Block[18075-18464]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[18023-18037]:VariableDeclarationStatement[18085-18099]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[18046-18081]:VariableDeclarationStatement[18108-18143]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[18090-18374]:WhileStatement[18152-18436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18108-18374]:Block[18170-18436]"
    }, {
      "left" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[18122-18324]:IfStatement[18184-18386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18164-18324]:Block[18226-18386]"
    }, {
      "left" : "String nm = n.getNodeName();",
      "right" : "String nm = n.getNodeName();",
      "info" : "VariableDeclarationStatement[18182-18210]:VariableDeclarationStatement[18244-18272]"
    }, {
      "left" : "if (nm.equals(node.getNodeName()))",
      "right" : "if (nm.equals(node.getNodeName()))",
      "info" : "IfStatement[18227-18310]:IfStatement[18289-18372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18262-18310]:Block[18324-18372]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[18284-18292]:ExpressionStatement[18346-18354]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[18337-18364]:ExpressionStatement[18399-18426]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[18383-18396]:ReturnStatement[18445-18458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18455-18724]:Block[18517-18786]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[18465-18479]:VariableDeclarationStatement[18527-18541]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[18488-18523]:VariableDeclarationStatement[18550-18585]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[18532-18696]:WhileStatement[18594-18758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18550-18696]:Block[18612-18758]"
    }, {
      "left" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (n.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[18564-18646]:IfStatement[18626-18708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18606-18646]:Block[18668-18708]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[18624-18632]:ExpressionStatement[18686-18694]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[18659-18686]:ExpressionStatement[18721-18748]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[18705-18718]:ReturnStatement[18767-18780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18774-19102]:Block[18836-19164]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[18784-18798]:VariableDeclarationStatement[18846-18860]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[18807-18842]:VariableDeclarationStatement[18869-18904]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[18851-19074]:WhileStatement[18913-19136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18869-19074]:Block[18931-19136]"
    }, {
      "left" : "if (n.getNodeType() == Node.TEXT_NODE\n                || n.getNodeType() == Node.CDATA_SECTION_NODE)",
      "right" : "if (n.getNodeType() == Node.TEXT_NODE\n                || n.getNodeType() == Node.CDATA_SECTION_NODE)",
      "info" : "IfStatement[18883-19024]:IfStatement[18945-19086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18984-19024]:Block[19046-19086]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[19002-19010]:ExpressionStatement[19064-19072]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[19037-19064]:ExpressionStatement[19099-19126]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[19083-19096]:ReturnStatement[19145-19158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19159-19517]:Block[19221-19579]"
    }, {
      "left" : "int count = 1;",
      "right" : "int count = 1;",
      "info" : "VariableDeclarationStatement[19169-19183]:VariableDeclarationStatement[19231-19245]"
    }, {
      "left" : "Node n = node.getPreviousSibling();",
      "right" : "Node n = node.getPreviousSibling();",
      "info" : "VariableDeclarationStatement[19192-19227]:VariableDeclarationStatement[19254-19289]"
    }, {
      "left" : "while (n != null)",
      "right" : "while (n != null)",
      "info" : "WhileStatement[19236-19489]:WhileStatement[19298-19551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19254-19489]:Block[19316-19551]"
    }, {
      "left" : "if (n.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE\n                && ((ProcessingInstruction) n).getTarget().equals(target))",
      "right" : "if (n.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE\n                && ((ProcessingInstruction) n).getTarget().equals(target))",
      "info" : "IfStatement[19268-19439]:IfStatement[19330-19501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19399-19439]:Block[19461-19501]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[19417-19425]:ExpressionStatement[19479-19487]"
    }, {
      "left" : "n = n.getPreviousSibling();",
      "right" : "n = n.getPreviousSibling();",
      "info" : "ExpressionStatement[19452-19479]:ExpressionStatement[19514-19541]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[19498-19511]:ReturnStatement[19560-19573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19545-19598]:Block[19607-19660]"
    }, {
      "left" : "return System.identityHashCode(node);",
      "right" : "return System.identityHashCode(node);",
      "info" : "ReturnStatement[19555-19592]:ReturnStatement[19617-19654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19641-19893]:Block[19703-19955]"
    }, {
      "left" : "if (object == this)",
      "right" : "if (object == this)",
      "info" : "IfStatement[19651-19707]:IfStatement[19713-19769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19671-19707]:Block[19733-19769]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[19685-19697]:ReturnStatement[19747-19759]"
    }, {
      "left" : "if (!(object instanceof DOMNodePointer))",
      "right" : "if (!(object instanceof DOMNodePointer))",
      "info" : "IfStatement[19717-19795]:IfStatement[19779-19857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19758-19795]:Block[19820-19857]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[19772-19785]:ReturnStatement[19834-19847]"
    }, {
      "left" : "DOMNodePointer other = (DOMNodePointer) object;",
      "right" : "DOMNodePointer other = (DOMNodePointer) object;",
      "info" : "VariableDeclarationStatement[19805-19852]:VariableDeclarationStatement[19867-19914]"
    }, {
      "left" : "return node == other.node;",
      "right" : "return node == other.node;",
      "info" : "ReturnStatement[19861-19887]:ReturnStatement[19923-19949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19941-20247]:Block[20003-20309]"
    }, {
      "left" : "String prefix = node.getPrefix();",
      "right" : "String prefix = node.getPrefix();",
      "info" : "VariableDeclarationStatement[19951-19984]:VariableDeclarationStatement[20013-20046]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[19993-20051]:IfStatement[20055-20113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20013-20051]:Block[20075-20113]"
    }, {
      "left" : "return prefix;",
      "right" : "return prefix;",
      "info" : "ReturnStatement[20027-20041]:ReturnStatement[20089-20103]"
    }, {
      "left" : "String name = node.getNodeName();",
      "right" : "String name = node.getNodeName();",
      "info" : "VariableDeclarationStatement[20061-20094]:VariableDeclarationStatement[20123-20156]"
    }, {
      "left" : "int index = name.lastIndexOf(':');",
      "right" : "int index = name.lastIndexOf(':');",
      "info" : "VariableDeclarationStatement[20103-20137]:VariableDeclarationStatement[20165-20199]"
    }, {
      "left" : "if (index == -1)",
      "right" : "if (index == -1)",
      "info" : "IfStatement[20146-20199]:IfStatement[20208-20261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20163-20199]:Block[20225-20261]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20177-20189]:ReturnStatement[20239-20251]"
    }, {
      "left" : "return name.substring(0, index);",
      "right" : "return name.substring(0, index);",
      "info" : "ReturnStatement[20209-20241]:ReturnStatement[20271-20303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20298-20617]:Block[20360-20679]"
    }, {
      "left" : "String localName = node.getLocalName();",
      "right" : "String localName = node.getLocalName();",
      "info" : "VariableDeclarationStatement[20308-20347]:VariableDeclarationStatement[20370-20409]"
    }, {
      "left" : "if (localName != null)",
      "right" : "if (localName != null)",
      "info" : "IfStatement[20356-20420]:IfStatement[20418-20482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20379-20420]:Block[20441-20482]"
    }, {
      "left" : "return localName;",
      "right" : "return localName;",
      "info" : "ReturnStatement[20393-20410]:ReturnStatement[20455-20472]"
    }, {
      "left" : "String name = node.getNodeName();",
      "right" : "String name = node.getNodeName();",
      "info" : "VariableDeclarationStatement[20430-20463]:VariableDeclarationStatement[20492-20525]"
    }, {
      "left" : "int index = name.lastIndexOf(':');",
      "right" : "int index = name.lastIndexOf(':');",
      "info" : "VariableDeclarationStatement[20472-20506]:VariableDeclarationStatement[20534-20568]"
    }, {
      "left" : "if (index == -1)",
      "right" : "if (index == -1)",
      "info" : "IfStatement[20515-20568]:IfStatement[20577-20630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20532-20568]:Block[20594-20630]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[20546-20558]:ReturnStatement[20608-20620]"
    }, {
      "left" : "return name.substring(index + 1);",
      "right" : "return name.substring(index + 1);",
      "info" : "ReturnStatement[20578-20611]:ReturnStatement[20640-20673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20675-21518]:Block[20737-21580]"
    }, {
      "left" : "if (node instanceof Document)",
      "right" : "if (node instanceof Document)",
      "info" : "IfStatement[20685-20785]:IfStatement[20747-20847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20715-20785]:Block[20777-20847]"
    }, {
      "left" : "node = ((Document) node).getDocumentElement();",
      "right" : "node = ((Document) node).getDocumentElement();",
      "info" : "ExpressionStatement[20729-20775]:ExpressionStatement[20791-20837]"
    }, {
      "left" : "Element element = (Element) node;",
      "right" : "Element element = (Element) node;",
      "info" : "VariableDeclarationStatement[20795-20828]:VariableDeclarationStatement[20857-20890]"
    }, {
      "left" : "String uri = element.getNamespaceURI();",
      "right" : "String uri = element.getNamespaceURI();",
      "info" : "VariableDeclarationStatement[20838-20877]:VariableDeclarationStatement[20900-20939]"
    }, {
      "left" : "if (uri != null)",
      "right" : "if (uri != null)",
      "info" : "IfStatement[20886-20938]:IfStatement[20948-21000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20903-20938]:Block[20965-21000]"
    }, {
      "left" : "return uri;",
      "right" : "return uri;",
      "info" : "ReturnStatement[20917-20928]:ReturnStatement[20979-20990]"
    }, {
      "left" : "String qname;",
      "right" : "String qname;",
      "info" : "VariableDeclarationStatement[20948-20961]:VariableDeclarationStatement[21010-21023]"
    }, {
      "left" : "String prefix = getPrefix(node);",
      "right" : "String prefix = getPrefix(node);",
      "info" : "VariableDeclarationStatement[20970-21002]:VariableDeclarationStatement[21032-21064]"
    }, {
      "left" : "if (prefix == null)",
      "right" : "if (prefix == null)",
      "info" : "IfStatement[21011-21135]:IfStatement[21073-21197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21031-21071]:Block[21093-21133]"
    }, {
      "left" : "qname = \"xmlns\";",
      "right" : "qname = \"xmlns\";",
      "info" : "ExpressionStatement[21045-21061]:ExpressionStatement[21107-21123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21085-21135]:Block[21147-21197]"
    }, {
      "left" : "qname = \"xmlns:\" + prefix;",
      "right" : "qname = \"xmlns:\" + prefix;",
      "info" : "ExpressionStatement[21099-21125]:ExpressionStatement[21161-21187]"
    }, {
      "left" : "Node aNode = node;",
      "right" : "Node aNode = node;",
      "info" : "VariableDeclarationStatement[21145-21163]:VariableDeclarationStatement[21207-21225]"
    }, {
      "left" : "while (aNode != null)",
      "right" : "while (aNode != null)",
      "info" : "WhileStatement[21172-21491]:WhileStatement[21234-21553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21194-21491]:Block[21256-21553]"
    }, {
      "left" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "right" : "if (aNode.getNodeType() == Node.ELEMENT_NODE)",
      "info" : "IfStatement[21208-21438]:IfStatement[21270-21500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21254-21438]:Block[21316-21500]"
    }, {
      "left" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "right" : "Attr attr = ((Element) aNode).getAttributeNode(qname);",
      "info" : "VariableDeclarationStatement[21272-21326]:VariableDeclarationStatement[21334-21388]"
    }, {
      "left" : "if (attr != null)",
      "right" : "if (attr != null)",
      "info" : "IfStatement[21343-21424]:IfStatement[21405-21486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21361-21424]:Block[21423-21486]"
    }, {
      "left" : "return attr.getValue();",
      "right" : "return attr.getValue();",
      "info" : "ReturnStatement[21383-21406]:ReturnStatement[21445-21468]"
    }, {
      "left" : "aNode = aNode.getParentNode();",
      "right" : "aNode = aNode.getParentNode();",
      "info" : "ExpressionStatement[21451-21481]:ExpressionStatement[21513-21543]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[21500-21512]:ReturnStatement[21562-21574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21549-21590]:Block[21611-21652]"
    }, {
      "left" : "return stringValue(node);",
      "right" : "return stringValue(node);",
      "info" : "ReturnStatement[21559-21584]:ReturnStatement[21621-21646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21634-22774]:Block[21696-22836]"
    }, {
      "left" : "int nodeType = node.getNodeType();",
      "right" : "int nodeType = node.getNodeType();",
      "info" : "VariableDeclarationStatement[21644-21678]:VariableDeclarationStatement[21706-21740]"
    }, {
      "left" : "if (nodeType == Node.COMMENT_NODE)",
      "right" : "if (nodeType == Node.COMMENT_NODE)",
      "info" : "IfStatement[21687-22768]:IfStatement[21749-22830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21722-21839]:Block[21784-21901]"
    }, {
      "left" : "String text = ((Comment) node).getData();",
      "right" : "String text = ((Comment) node).getData();",
      "info" : "VariableDeclarationStatement[21736-21777]:VariableDeclarationStatement[21798-21839]"
    }, {
      "left" : "return text == null ? \"\" : text.trim();",
      "right" : "return text == null ? \"\" : text.trim();",
      "info" : "ReturnStatement[21790-21829]:ReturnStatement[21852-21891]"
    }, {
      "left" : "if (\n            nodeType == Node.TEXT_NODE\n                || nodeType == Node.CDATA_SECTION_NODE)",
      "right" : "if (\n            nodeType == Node.TEXT_NODE\n                || nodeType == Node.CDATA_SECTION_NODE)",
      "info" : "IfStatement[21853-22768]:IfStatement[21915-22830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21953-22063]:Block[22015-22125]"
    }, {
      "left" : "String text = node.getNodeValue();",
      "right" : "String text = node.getNodeValue();",
      "info" : "VariableDeclarationStatement[21967-22001]:VariableDeclarationStatement[22029-22063]"
    }, {
      "left" : "return text == null ? \"\" : text.trim();",
      "right" : "return text == null ? \"\" : text.trim();",
      "info" : "ReturnStatement[22014-22053]:ReturnStatement[22076-22115]"
    }, {
      "left" : "if (nodeType == Node.PROCESSING_INSTRUCTION_NODE)",
      "right" : "if (nodeType == Node.PROCESSING_INSTRUCTION_NODE)",
      "info" : "IfStatement[22077-22768]:IfStatement[22139-22830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22127-22258]:Block[22189-22320]"
    }, {
      "left" : "String text = ((ProcessingInstruction) node).getData();",
      "right" : "String text = ((ProcessingInstruction) node).getData();",
      "info" : "VariableDeclarationStatement[22141-22196]:VariableDeclarationStatement[22203-22258]"
    }, {
      "left" : "return text == null ? \"\" : text.trim();",
      "right" : "return text == null ? \"\" : text.trim();",
      "info" : "ReturnStatement[22209-22248]:ReturnStatement[22271-22310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22272-22768]:Block[22334-22830]"
    }, {
      "left" : "NodeList list = node.getChildNodes();",
      "right" : "NodeList list = node.getChildNodes();",
      "info" : "VariableDeclarationStatement[22286-22323]:VariableDeclarationStatement[22348-22385]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer(16);",
      "right" : "StringBuffer buf = new StringBuffer(16);",
      "info" : "VariableDeclarationStatement[22336-22376]:VariableDeclarationStatement[22398-22438]"
    }, {
      "left" : "for (int i = 0; i < list.getLength(); i++)",
      "right" : "for (int i = 0; i < list.getLength(); i++)",
      "info" : "ForStatement[22389-22716]:ForStatement[22451-22778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22432-22716]:Block[22494-22778]"
    }, {
      "left" : "Node child = list.item(i);",
      "right" : "Node child = list.item(i);",
      "info" : "VariableDeclarationStatement[22450-22476]:VariableDeclarationStatement[22512-22538]"
    }, {
      "left" : "if (child.getNodeType() == Node.TEXT_NODE)",
      "right" : "if (child.getNodeType() == Node.TEXT_NODE)",
      "info" : "IfStatement[22493-22702]:IfStatement[22555-22764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22536-22609]:Block[22598-22671]"
    }, {
      "left" : "buf.append(child.getNodeValue());",
      "right" : "buf.append(child.getNodeValue());",
      "info" : "ExpressionStatement[22558-22591]:ExpressionStatement[22620-22653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22631-22702]:Block[22693-22764]"
    }, {
      "left" : "buf.append(stringValue(child));",
      "right" : "buf.append(stringValue(child));",
      "info" : "ExpressionStatement[22653-22684]:ExpressionStatement[22715-22746]"
    }, {
      "left" : "return buf.toString().trim();",
      "right" : "return buf.toString().trim();",
      "info" : "ReturnStatement[22729-22758]:ReturnStatement[22791-22820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22889-23341]:Block[22951-23403]"
    }, {
      "left" : "Document document;",
      "right" : "Document document;",
      "info" : "VariableDeclarationStatement[22899-22917]:VariableDeclarationStatement[22961-22979]"
    }, {
      "left" : "if (node.getNodeType() == Node.DOCUMENT_NODE)",
      "right" : "if (node.getNodeType() == Node.DOCUMENT_NODE)",
      "info" : "IfStatement[22926-23096]:IfStatement[22988-23158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22972-23023]:Block[23034-23085]"
    }, {
      "left" : "document = (Document) node;",
      "right" : "document = (Document) node;",
      "info" : "ExpressionStatement[22986-23013]:ExpressionStatement[23048-23075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23037-23096]:Block[23099-23158]"
    }, {
      "left" : "document = node.getOwnerDocument();",
      "right" : "document = node.getOwnerDocument();",
      "info" : "ExpressionStatement[23051-23086]:ExpressionStatement[23113-23148]"
    }, {
      "left" : "Element element = document.getElementById(id);",
      "right" : "Element element = document.getElementById(id);",
      "info" : "VariableDeclarationStatement[23105-23151]:VariableDeclarationStatement[23167-23213]"
    }, {
      "left" : "if (element != null)",
      "right" : "if (element != null)",
      "info" : "IfStatement[23160-23335]:IfStatement[23222-23397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23181-23257]:Block[23243-23319]"
    }, {
      "left" : "return new DOMNodePointer(element, getLocale(), id);",
      "right" : "return new DOMNodePointer(element, getLocale(), id);",
      "info" : "ReturnStatement[23195-23247]:ReturnStatement[23257-23309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23271-23335]:Block[23333-23397]"
    }, {
      "left" : "return new NullPointer(getLocale(), id);",
      "right" : "return new NullPointer(getLocale(), id);",
      "info" : "ReturnStatement[23285-23325]:ReturnStatement[23347-23387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23413-23719]:Block[23475-23781]"
    }, {
      "left" : "AbstractFactory factory = context.getFactory();",
      "right" : "AbstractFactory factory = context.getFactory();",
      "info" : "VariableDeclarationStatement[23423-23470]:VariableDeclarationStatement[23485-23532]"
    }, {
      "left" : "if (factory == null)",
      "right" : "if (factory == null)",
      "info" : "IfStatement[23479-23689]:IfStatement[23541-23751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23500-23689]:Block[23562-23751]"
    }, {
      "left" : "throw new JXPathException(\n                \"Factory is not set on the JXPathContext - \"\n                    + \"cannot create path: \"\n                    + asPath());",
      "right" : "throw new JXPathException(\n                \"Factory is not set on the JXPathContext - \"\n                    + \"cannot create path: \"\n                    + asPath());",
      "info" : "ThrowStatement[23514-23679]:ThrowStatement[23576-23741]"
    }, {
      "left" : "return factory;",
      "right" : "return factory;",
      "info" : "ReturnStatement[23698-23713]:ReturnStatement[23760-23775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23822-25105]:Block[23884-25167]"
    }, {
      "left" : "Node node1 = (Node) pointer1.getBaseValue();",
      "right" : "Node node1 = (Node) pointer1.getBaseValue();",
      "info" : "VariableDeclarationStatement[23832-23876]:VariableDeclarationStatement[23894-23938]"
    }, {
      "left" : "Node node2 = (Node) pointer2.getBaseValue();",
      "right" : "Node node2 = (Node) pointer2.getBaseValue();",
      "info" : "VariableDeclarationStatement[23885-23929]:VariableDeclarationStatement[23947-23991]"
    }, {
      "left" : "if (node1 == node2)",
      "right" : "if (node1 == node2)",
      "info" : "IfStatement[23938-23991]:IfStatement[24000-24053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23958-23991]:Block[24020-24053]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[23972-23981]:ReturnStatement[24034-24043]"
    }, {
      "left" : "int t1 = node1.getNodeType();",
      "right" : "int t1 = node1.getNodeType();",
      "info" : "VariableDeclarationStatement[24001-24030]:VariableDeclarationStatement[24063-24092]"
    }, {
      "left" : "int t2 = node2.getNodeType();",
      "right" : "int t2 = node2.getNodeType();",
      "info" : "VariableDeclarationStatement[24039-24068]:VariableDeclarationStatement[24101-24130]"
    }, {
      "left" : "if (t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE)",
      "right" : "if (t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE)",
      "info" : "IfStatement[24077-24784]:IfStatement[24139-24846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24137-24171]:Block[24199-24233]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[24151-24161]:ReturnStatement[24213-24223]"
    }, {
      "left" : "if (t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "right" : "if (t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "info" : "IfStatement[24185-24784]:IfStatement[24247-24846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24245-24278]:Block[24307-24340]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[24259-24268]:ReturnStatement[24321-24330]"
    }, {
      "left" : "if (t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "right" : "if (t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE)",
      "info" : "IfStatement[24292-24784]:IfStatement[24354-24846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24352-24784]:Block[24414-24846]"
    }, {
      "left" : "NamedNodeMap map = ((Node) getNode()).getAttributes();",
      "right" : "NamedNodeMap map = ((Node) getNode()).getAttributes();",
      "info" : "VariableDeclarationStatement[24366-24420]:VariableDeclarationStatement[24428-24482]"
    }, {
      "left" : "int length = map.getLength();",
      "right" : "int length = map.getLength();",
      "info" : "VariableDeclarationStatement[24433-24462]:VariableDeclarationStatement[24495-24524]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[24475-24731]:ForStatement[24537-24793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24508-24731]:Block[24570-24793]"
    }, {
      "left" : "Node n = map.item(i);",
      "right" : "Node n = map.item(i);",
      "info" : "VariableDeclarationStatement[24526-24547]:VariableDeclarationStatement[24588-24609]"
    }, {
      "left" : "if (n == node1)",
      "right" : "if (n == node1)",
      "info" : "IfStatement[24564-24717]:IfStatement[24626-24779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24580-24630]:Block[24642-24692]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[24602-24612]:ReturnStatement[24664-24674]"
    }, {
      "left" : "if (n == node2)",
      "right" : "if (n == node2)",
      "info" : "IfStatement[24652-24717]:IfStatement[24714-24779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24668-24717]:Block[24730-24779]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[24690-24699]:ReturnStatement[24752-24761]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[24744-24753]:ReturnStatement[24806-24815]"
    }, {
      "left" : "Node current = node.getFirstChild();",
      "right" : "Node current = node.getFirstChild();",
      "info" : "VariableDeclarationStatement[24794-24830]:VariableDeclarationStatement[24856-24892]"
    }, {
      "left" : "while (current != null)",
      "right" : "while (current != null)",
      "info" : "WhileStatement[24839-25080]:WhileStatement[24901-25142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24863-25080]:Block[24925-25142]"
    }, {
      "left" : "if (current == node1)",
      "right" : "if (current == node1)",
      "info" : "IfStatement[24877-25022]:IfStatement[24939-25084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24899-24941]:Block[24961-25003]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[24917-24927]:ReturnStatement[24979-24989]"
    }, {
      "left" : "if (current == node2)",
      "right" : "if (current == node2)",
      "info" : "IfStatement[24959-25022]:IfStatement[25021-25084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24981-25022]:Block[25043-25084]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[24999-25008]:ReturnStatement[25061-25070]"
    }, {
      "left" : "current = current.getNextSibling();",
      "right" : "current = current.getNextSibling();",
      "info" : "ExpressionStatement[25035-25070]:ExpressionStatement[25097-25132]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[25090-25099]:ReturnStatement[25152-25161]"
    } ]
  },
  "interFileMappings" : { }
}