{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "MessagingController",
      "right" : "MessagingController",
      "info" : "TypeDeclaration[3841-241268]:TypeDeclaration[3841-242240]"
    }, {
      "left" : "public static final long INVALID_MESSAGE_ID = -1;",
      "right" : "public static final long INVALID_MESSAGE_ID = -1;",
      "info" : "FieldDeclaration[4678-4727]:FieldDeclaration[4678-4727]"
    }, {
      "left" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "right" : "private static final String[] EMPTY_STRING_ARRAY = new String[0];",
      "info" : "FieldDeclaration[4733-4858]:FieldDeclaration[4733-4858]"
    }, {
      "left" : "private static final String PENDING_COMMAND_MOVE_OR_COPY = \"com.fsck.k9.MessagingController.moveOrCopy\";",
      "right" : "private static final String PENDING_COMMAND_MOVE_OR_COPY = \"com.fsck.k9.MessagingController.moveOrCopy\";",
      "info" : "FieldDeclaration[4864-5791]:FieldDeclaration[4864-5791]"
    }, {
      "left" : "private static final String PENDING_COMMAND_MOVE_OR_COPY_BULK = \"com.fsck.k9.MessagingController.moveOrCopyBulk\";",
      "right" : "private static final String PENDING_COMMAND_MOVE_OR_COPY_BULK = \"com.fsck.k9.MessagingController.moveOrCopyBulk\";",
      "info" : "FieldDeclaration[5796-5909]:FieldDeclaration[5796-5909]"
    }, {
      "left" : "private static final String PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW = \"com.fsck.k9.MessagingController.moveOrCopyBulkNew\";",
      "right" : "private static final String PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW = \"com.fsck.k9.MessagingController.moveOrCopyBulkNew\";",
      "info" : "FieldDeclaration[5914-6034]:FieldDeclaration[5914-6034]"
    }, {
      "left" : "private static final String PENDING_COMMAND_EMPTY_TRASH = \"com.fsck.k9.MessagingController.emptyTrash\";",
      "right" : "private static final String PENDING_COMMAND_EMPTY_TRASH = \"com.fsck.k9.MessagingController.emptyTrash\";",
      "info" : "FieldDeclaration[6039-6142]:FieldDeclaration[6039-6142]"
    }, {
      "left" : "private static final String PENDING_COMMAND_SET_FLAG_BULK = \"com.fsck.k9.MessagingController.setFlagBulk\";",
      "right" : "private static final String PENDING_COMMAND_SET_FLAG_BULK = \"com.fsck.k9.MessagingController.setFlagBulk\";",
      "info" : "FieldDeclaration[6147-6253]:FieldDeclaration[6147-6253]"
    }, {
      "left" : "private static final String PENDING_COMMAND_SET_FLAG = \"com.fsck.k9.MessagingController.setFlag\";",
      "right" : "private static final String PENDING_COMMAND_SET_FLAG = \"com.fsck.k9.MessagingController.setFlag\";",
      "info" : "FieldDeclaration[6258-6355]:FieldDeclaration[6258-6355]"
    }, {
      "left" : "private static final String PENDING_COMMAND_APPEND = \"com.fsck.k9.MessagingController.append\";",
      "right" : "private static final String PENDING_COMMAND_APPEND = \"com.fsck.k9.MessagingController.append\";",
      "info" : "FieldDeclaration[6360-6454]:FieldDeclaration[6360-6454]"
    }, {
      "left" : "private static final String PENDING_COMMAND_MARK_ALL_AS_READ = \"com.fsck.k9.MessagingController.markAllAsRead\";",
      "right" : "private static final String PENDING_COMMAND_MARK_ALL_AS_READ = \"com.fsck.k9.MessagingController.markAllAsRead\";",
      "info" : "FieldDeclaration[6459-6570]:FieldDeclaration[6459-6570]"
    }, {
      "left" : "private static final String PENDING_COMMAND_EXPUNGE = \"com.fsck.k9.MessagingController.expunge\";",
      "right" : "private static final String PENDING_COMMAND_EXPUNGE = \"com.fsck.k9.MessagingController.expunge\";",
      "info" : "FieldDeclaration[6575-6671]:FieldDeclaration[6575-6671]"
    }, {
      "left" : "UidReverseComparator",
      "right" : "UidReverseComparator",
      "info" : "TypeDeclaration[6677-7372]:TypeDeclaration[6677-7372]"
    }, {
      "left" : "public int compare(Message o1, Message o2)",
      "right" : "public int compare(Message o1, Message o2)",
      "info" : "MethodDeclaration[6759-7366]:MethodDeclaration[6759-7366]"
    }, {
      "left" : "private static final int UNSYNC_CHUNK_SIZE = 5;",
      "right" : "private static final int UNSYNC_CHUNK_SIZE = 5;",
      "info" : "FieldDeclaration[7378-7501]:FieldDeclaration[7378-7501]"
    }, {
      "left" : "private static MessagingController inst = null;",
      "right" : "private static MessagingController inst = null;",
      "info" : "FieldDeclaration[7507-7554]:FieldDeclaration[7507-7554]"
    }, {
      "left" : "private BlockingQueue<Command> mCommands = new PriorityBlockingQueue<Command>();",
      "right" : "private BlockingQueue<Command> mCommands = new PriorityBlockingQueue<Command>();",
      "info" : "FieldDeclaration[7559-7639]:FieldDeclaration[7559-7639]"
    }, {
      "left" : "private Thread mThread;",
      "right" : "private Thread mThread;",
      "info" : "FieldDeclaration[7645-7668]:FieldDeclaration[7645-7668]"
    }, {
      "left" : "private Set<MessagingListener> mListeners = new CopyOnWriteArraySet<MessagingListener>();",
      "right" : "private Set<MessagingListener> mListeners = new CopyOnWriteArraySet<MessagingListener>();",
      "info" : "FieldDeclaration[7673-7762]:FieldDeclaration[7673-7762]"
    }, {
      "left" : "private final ConcurrentHashMap<String, AtomicInteger> sendCount = new ConcurrentHashMap<String, AtomicInteger>();",
      "right" : "private final ConcurrentHashMap<String, AtomicInteger> sendCount = new ConcurrentHashMap<String, AtomicInteger>();",
      "info" : "FieldDeclaration[7768-7882]:FieldDeclaration[7768-7882]"
    }, {
      "left" : "ConcurrentHashMap<Account, Pusher> pushers = new ConcurrentHashMap<Account, Pusher>();",
      "right" : "ConcurrentHashMap<Account, Pusher> pushers = new ConcurrentHashMap<Account, Pusher>();",
      "info" : "FieldDeclaration[7888-7974]:FieldDeclaration[7888-7974]"
    }, {
      "left" : "private final ExecutorService threadPool = Executors.newCachedThreadPool();",
      "right" : "private final ExecutorService threadPool = Executors.newCachedThreadPool();",
      "info" : "FieldDeclaration[7980-8055]:FieldDeclaration[7980-8055]"
    }, {
      "left" : "private MessagingListener checkMailListener = null;",
      "right" : "private MessagingListener checkMailListener = null;",
      "info" : "FieldDeclaration[8061-8112]:FieldDeclaration[8061-8112]"
    }, {
      "left" : "private MemorizingListener memorizingListener = new MemorizingListener();",
      "right" : "private MemorizingListener memorizingListener = new MemorizingListener();",
      "info" : "FieldDeclaration[8118-8191]:FieldDeclaration[8118-8191]"
    }, {
      "left" : "private boolean mBusy;",
      "right" : "private boolean mBusy;",
      "info" : "FieldDeclaration[8197-8219]:FieldDeclaration[8197-8219]"
    }, {
      "left" : "private Context context;",
      "right" : "private Context context;",
      "info" : "FieldDeclaration[8225-8249]:FieldDeclaration[8225-8249]"
    }, {
      "left" : "NotificationData",
      "right" : "NotificationData",
      "info" : "TypeDeclaration[8255-12531]:TypeDeclaration[8255-12531]"
    }, {
      "left" : "int unreadBeforeNotification;",
      "right" : "int unreadBeforeNotification;",
      "info" : "FieldDeclaration[8489-8596]:FieldDeclaration[8489-8596]"
    }, {
      "left" : "LinkedList<LocalMessage> messages;",
      "right" : "LinkedList<LocalMessage> messages;",
      "info" : "FieldDeclaration[8605-9022]:FieldDeclaration[8605-9022]"
    }, {
      "left" : "LinkedList<MessageReference> droppedMessages;",
      "right" : "LinkedList<MessageReference> droppedMessages;",
      "info" : "FieldDeclaration[9031-9300]:FieldDeclaration[9031-9300]"
    }, {
      "left" : "private final static int MAX_MESSAGES = 5;",
      "right" : "private final static int MAX_MESSAGES = 5;",
      "info" : "FieldDeclaration[9310-9657]:FieldDeclaration[9310-9657]"
    }, {
      "left" : "public NotificationData(int unread)",
      "right" : "public NotificationData(int unread)",
      "info" : "MethodDeclaration[9667-10042]:MethodDeclaration[9667-10042]"
    }, {
      "left" : "public void addMessage(LocalMessage m)",
      "right" : "public void addMessage(LocalMessage m)",
      "info" : "MethodDeclaration[10052-10636]:MethodDeclaration[10052-10636]"
    }, {
      "left" : "public boolean removeMatchingMessage(Context context, MessageReference ref)",
      "right" : "public boolean removeMatchingMessage(Context context, MessageReference ref)",
      "info" : "MethodDeclaration[10646-11851]:MethodDeclaration[10646-11851]"
    }, {
      "left" : "public void supplyAllMessageRefs(List<MessageReference> refs)",
      "right" : "public void supplyAllMessageRefs(List<MessageReference> refs)",
      "info" : "MethodDeclaration[11861-12228]:MethodDeclaration[11861-12228]"
    }, {
      "left" : "public int getNewMessageCount()",
      "right" : "public int getNewMessageCount()",
      "info" : "MethodDeclaration[12238-12525]:MethodDeclaration[12238-12525]"
    }, {
      "left" : "private final ConcurrentMap<Integer, NotificationData> notificationData = new ConcurrentHashMap<Integer, NotificationData>();",
      "right" : "private final ConcurrentMap<Integer, NotificationData> notificationData = new ConcurrentHashMap<Integer, NotificationData>();",
      "info" : "FieldDeclaration[12566-12691]:FieldDeclaration[12566-12691]"
    }, {
      "left" : "private static final Set<Flag> SYNC_FLAGS = EnumSet.of(Flag.SEEN, Flag.FLAGGED, Flag.ANSWERED, Flag.FORWARDED);",
      "right" : "private static final Set<Flag> SYNC_FLAGS = EnumSet.of(Flag.SEEN, Flag.FLAGGED, Flag.ANSWERED, Flag.FORWARDED);",
      "info" : "FieldDeclaration[12697-12808]:FieldDeclaration[12697-12808]"
    }, {
      "left" : "private void suppressMessages(Account account, List<LocalMessage> messages)",
      "right" : "private void suppressMessages(Account account, List<LocalMessage> messages)",
      "info" : "MethodDeclaration[12814-13027]:MethodDeclaration[12814-13027]"
    }, {
      "left" : "private void unsuppressMessages(Account account, List<? extends Message> messages)",
      "right" : "private void unsuppressMessages(Account account, List<? extends Message> messages)",
      "info" : "MethodDeclaration[13033-13255]:MethodDeclaration[13033-13255]"
    }, {
      "left" : "private boolean isMessageSuppressed(LocalMessage message)",
      "right" : "private boolean isMessageSuppressed(LocalMessage message)",
      "info" : "MethodDeclaration[13261-13592]:MethodDeclaration[13261-13592]"
    }, {
      "left" : "private void setFlagInCache(final Account account, final List<Long> messageIds,\n            final Flag flag, final boolean newState)",
      "right" : "private void setFlagInCache(final Account account, final List<Long> messageIds,\n            final Flag flag, final boolean newState)",
      "info" : "MethodDeclaration[13598-14025]:MethodDeclaration[13598-14025]"
    }, {
      "left" : "private void removeFlagFromCache(final Account account, final List<Long> messageIds,\n            final Flag flag)",
      "right" : "private void removeFlagFromCache(final Account account, final List<Long> messageIds,\n            final Flag flag)",
      "info" : "MethodDeclaration[14031-14374]:MethodDeclaration[14031-14374]"
    }, {
      "left" : "private void setFlagForThreadsInCache(final Account account, final List<Long> threadRootIds,\n            final Flag flag, final boolean newState)",
      "right" : "private void setFlagForThreadsInCache(final Account account, final List<Long> threadRootIds,\n            final Flag flag, final boolean newState)",
      "info" : "MethodDeclaration[14380-14822]:MethodDeclaration[14380-14822]"
    }, {
      "left" : "private void removeFlagForThreadsFromCache(final Account account, final List<Long> messageIds,\n            final Flag flag)",
      "right" : "private void removeFlagForThreadsFromCache(final Account account, final List<Long> messageIds,\n            final Flag flag)",
      "info" : "MethodDeclaration[14828-15180]:MethodDeclaration[14828-15180]"
    }, {
      "left" : "private MessagingController(Context context)",
      "right" : "private MessagingController(Context context)",
      "info" : "MethodDeclaration[15187-15477]:MethodDeclaration[15187-15477]"
    }, {
      "left" : "public synchronized static MessagingController getInstance(Context context)",
      "right" : "public synchronized static MessagingController getInstance(Context context)",
      "info" : "MethodDeclaration[15483-15702]:MethodDeclaration[15483-15702]"
    }, {
      "left" : "public boolean isBusy()",
      "right" : "public boolean isBusy()",
      "info" : "MethodDeclaration[15708-15761]:MethodDeclaration[15708-15761]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[15767-17877]:MethodDeclaration[15767-17877]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[16611-17221]:MethodDeclaration[16611-17221]"
    }, {
      "left" : "private void put(String description, MessagingListener listener, Runnable runnable)",
      "right" : "private void put(String description, MessagingListener listener, Runnable runnable)",
      "info" : "MethodDeclaration[17883-18044]:MethodDeclaration[17883-18044]"
    }, {
      "left" : "private void putBackground(String description, MessagingListener listener, Runnable runnable)",
      "right" : "private void putBackground(String description, MessagingListener listener, Runnable runnable)",
      "info" : "MethodDeclaration[18050-18222]:MethodDeclaration[18050-18222]"
    }, {
      "left" : "private void putCommand(BlockingQueue<Command> queue, String description, MessagingListener listener, Runnable runnable, boolean isForeground)",
      "right" : "private void putCommand(BlockingQueue<Command> queue, String description, MessagingListener listener, Runnable runnable, boolean isForeground)",
      "info" : "MethodDeclaration[18228-19040]:MethodDeclaration[18228-19040]"
    }, {
      "left" : "public void addListener(MessagingListener listener)",
      "right" : "public void addListener(MessagingListener listener)",
      "info" : "MethodDeclaration[19047-19175]:MethodDeclaration[19047-19175]"
    }, {
      "left" : "public void refreshListener(MessagingListener listener)",
      "right" : "public void refreshListener(MessagingListener listener)",
      "info" : "MethodDeclaration[19181-19371]:MethodDeclaration[19181-19371]"
    }, {
      "left" : "public void removeListener(MessagingListener listener)",
      "right" : "public void removeListener(MessagingListener listener)",
      "info" : "MethodDeclaration[19377-19476]:MethodDeclaration[19377-19476]"
    }, {
      "left" : "public Set<MessagingListener> getListeners()",
      "right" : "public Set<MessagingListener> getListeners()",
      "info" : "MethodDeclaration[19482-19561]:MethodDeclaration[19482-19561]"
    }, {
      "left" : "public Set<MessagingListener> getListeners(MessagingListener listener)",
      "right" : "public Set<MessagingListener> getListeners(MessagingListener listener)",
      "info" : "MethodDeclaration[19568-19867]:MethodDeclaration[19568-19867]"
    }, {
      "left" : "public void listFolders(final Account account, final boolean refreshRemote, final MessagingListener listener)",
      "right" : "public void listFolders(final Account account, final boolean refreshRemote, final MessagingListener listener)",
      "info" : "MethodDeclaration[19874-20731]:MethodDeclaration[19874-20731]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[20584-20713]:MethodDeclaration[20584-20713]"
    }, {
      "left" : "public void listFoldersSynchronous(final Account account, final boolean refreshRemote, final MessagingListener listener)",
      "right" : "public void listFoldersSynchronous(final Account account, final boolean refreshRemote, final MessagingListener listener)",
      "info" : "MethodDeclaration[20737-22741]:MethodDeclaration[20737-22741]"
    }, {
      "left" : "private void doRefreshRemote(final Account account, final MessagingListener listener)",
      "right" : "private void doRefreshRemote(final Account account, final MessagingListener listener)",
      "info" : "MethodDeclaration[22747-26100]:MethodDeclaration[22747-26100]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[22905-26082]:MethodDeclaration[22905-26082]"
    }, {
      "left" : "public void searchLocalMessages(final LocalSearch search, final MessagingListener listener)",
      "right" : "public void searchLocalMessages(final LocalSearch search, final MessagingListener listener)",
      "info" : "MethodDeclaration[26106-26521]:MethodDeclaration[26106-26521]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[26382-26503]:MethodDeclaration[26382-26503]"
    }, {
      "left" : "public void searchLocalMessagesSynchronous(final LocalSearch search, final MessagingListener listener)",
      "right" : "public void searchLocalMessagesSynchronous(final LocalSearch search, final MessagingListener listener)",
      "info" : "MethodDeclaration[26527-29192]:MethodDeclaration[26527-29192]"
    }, {
      "left" : "public void messageStarted(String message, int number, int ofTotal)",
      "right" : "public void messageStarted(String message, int number, int ofTotal)",
      "info" : "MethodDeclaration[27371-27467]:MethodDeclaration[27371-27467]"
    }, {
      "left" : "public void messagesFinished(int number)",
      "right" : "public void messagesFinished(int number)",
      "info" : "MethodDeclaration[27484-27553]:MethodDeclaration[27484-27553]"
    }, {
      "left" : "public void messageFinished(LocalMessage message, int number, int ofTotal)",
      "right" : "public void messageFinished(LocalMessage message, int number, int ofTotal)",
      "info" : "MethodDeclaration[27570-28250]:MethodDeclaration[27570-28250]"
    }, {
      "left" : "public Future<?> searchRemoteMessages(final String acctUuid, final String folderName, final String query,\n            final Set<Flag> requiredFlags, final Set<Flag> forbiddenFlags, final MessagingListener listener)",
      "right" : "public Future<?> searchRemoteMessages(final String acctUuid, final String folderName, final String query,\n            final Set<Flag> requiredFlags, final Set<Flag> forbiddenFlags, final MessagingListener listener)",
      "info" : "MethodDeclaration[29200-29976]:MethodDeclaration[29200-29976]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[29784-29958]:MethodDeclaration[29784-29958]"
    }, {
      "left" : "public void searchRemoteMessagesSynchronous(final String acctUuid, final String folderName, final String query,\n            final Set<Flag> requiredFlags, final Set<Flag> forbiddenFlags, final MessagingListener listener)",
      "right" : "public void searchRemoteMessagesSynchronous(final String acctUuid, final String folderName, final String query,\n            final Set<Flag> requiredFlags, final Set<Flag> forbiddenFlags, final MessagingListener listener)",
      "info" : "MethodDeclaration[29981-32777]:MethodDeclaration[29981-32777]"
    }, {
      "left" : "public void loadSearchResults(final Account account, final String folderName, final List<Message> messages, final MessagingListener listener)",
      "right" : "public void loadSearchResults(final Account account, final String folderName, final List<Message> messages, final MessagingListener listener)",
      "info" : "MethodDeclaration[32783-34283]:MethodDeclaration[32783-34283]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[32983-34265]:MethodDeclaration[32983-34265]"
    }, {
      "left" : "public void loadSearchResultsSynchronous(List<Message> messages, LocalFolder localFolder, Folder remoteFolder, MessagingListener listener) throws MessagingException",
      "right" : "public void loadSearchResultsSynchronous(List<Message> messages, LocalFolder localFolder, Folder remoteFolder, MessagingListener listener) throws MessagingException",
      "info" : "MethodDeclaration[34289-35518]:MethodDeclaration[34289-35518]"
    }, {
      "left" : "public void loadMoreMessages(Account account, String folder, MessagingListener listener)",
      "right" : "public void loadMoreMessages(Account account, String folder, MessagingListener listener)",
      "info" : "MethodDeclaration[35525-36186]:MethodDeclaration[35525-36186]"
    }, {
      "left" : "public void resetVisibleLimits(Collection<Account> accounts)",
      "right" : "public void resetVisibleLimits(Collection<Account> accounts)",
      "info" : "MethodDeclaration[36192-36355]:MethodDeclaration[36192-36355]"
    }, {
      "left" : "public void synchronizeMailbox(final Account account, final String folder, final MessagingListener listener, final Folder providedRemoteFolder)",
      "right" : "public void synchronizeMailbox(final Account account, final String folder, final MessagingListener listener, final Folder providedRemoteFolder)",
      "info" : "MethodDeclaration[36361-36946]:MethodDeclaration[36361-36946]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[36777-36928]:MethodDeclaration[36777-36928]"
    }, {
      "left" : "private void synchronizeMailboxSynchronous(final Account account, final String folder, final MessagingListener listener, Folder providedRemoteFolder)",
      "right" : "private void synchronizeMailboxSynchronous(final Account account, final String folder, final MessagingListener listener, Folder providedRemoteFolder)",
      "info" : "MethodDeclaration[36952-48405]:MethodDeclaration[36952-48405]"
    }, {
      "left" : "private void closeFolder(Folder f)",
      "right" : "private void closeFolder(Folder f)",
      "info" : "MethodDeclaration[48412-48512]:MethodDeclaration[48412-48512]"
    }, {
      "left" : "private boolean verifyOrCreateRemoteSpecialFolder(final Account account, final String folder, final Folder remoteFolder, final MessagingListener listener) throws MessagingException",
      "right" : "private boolean verifyOrCreateRemoteSpecialFolder(final Account account, final String folder, final Folder remoteFolder, final MessagingListener listener) throws MessagingException",
      "info" : "MethodDeclaration[48895-49767]:MethodDeclaration[48895-49767]"
    }, {
      "left" : "private int downloadMessages(final Account account, final Folder remoteFolder,\n                                 final LocalFolder localFolder, List<Message> inputMessages,\n                                 boolean flagSyncOnly) throws MessagingException",
      "right" : "private int downloadMessages(final Account account, final Folder remoteFolder,\n                                 final LocalFolder localFolder, List<Message> inputMessages,\n                                 boolean flagSyncOnly) throws MessagingException",
      "info" : "MethodDeclaration[49773-57050]:MethodDeclaration[49773-57050]"
    }, {
      "left" : "public void messageRemoved(Message message)",
      "right" : "public void messageRemoved(Message message)",
      "info" : "MethodDeclaration[55839-56081]:MethodDeclaration[55839-56081]"
    }, {
      "left" : "private void evaluateMessageForDownload(final Message message, final String folder,\n                                            final LocalFolder localFolder,\n                                            final Folder remoteFolder,\n                                            final Account account,\n                                            final List<Message> unsyncedMessages,\n                                            final List<Message> syncFlagMessages,\n                                            boolean flagSyncOnly) throws MessagingException",
      "right" : "private void evaluateMessageForDownload(final Message message, final String folder,\n                                            final LocalFolder localFolder,\n                                            final Folder remoteFolder,\n                                            final Account account,\n                                            final List<Message> unsyncedMessages,\n                                            final List<Message> syncFlagMessages,\n                                            boolean flagSyncOnly) throws MessagingException",
      "info" : "MethodDeclaration[57055-60056]:MethodDeclaration[57055-60056]"
    }, {
      "left" : "private <T extends Message> void fetchUnsyncedMessages(final Account account, final Folder<T> remoteFolder,\n                                       List<T> unsyncedMessages,\n                                       final List<Message> smallMessages,\n                                       final List<Message> largeMessages,\n                                       final AtomicInteger progress,\n                                       final int todo,\n                                       FetchProfile fp) throws MessagingException",
      "right" : "private <T extends Message> void fetchUnsyncedMessages(final Account account, final Folder<T> remoteFolder,\n                                       List<T> unsyncedMessages,\n                                       final List<Message> smallMessages,\n                                       final List<Message> largeMessages,\n                                       final AtomicInteger progress,\n                                       final int todo,\n                                       FetchProfile fp) throws MessagingException",
      "info" : "MethodDeclaration[60062-62763]:MethodDeclaration[60062-62763]"
    }, {
      "left" : "public void messageFinished(T message, int number, int ofTotal)",
      "right" : "public void messageFinished(T message, int number, int ofTotal)",
      "info" : "MethodDeclaration[60817-62439]:MethodDeclaration[60817-62439]"
    }, {
      "left" : "public void messageStarted(String uid, int number, int ofTotal)",
      "right" : "public void messageStarted(String uid, int number, int ofTotal)",
      "info" : "MethodDeclaration[62453-62541]:MethodDeclaration[62453-62541]"
    }, {
      "left" : "public void messagesFinished(int total)",
      "right" : "public void messagesFinished(int total)",
      "info" : "MethodDeclaration[62555-62744]:MethodDeclaration[62555-62744]"
    }, {
      "left" : "private boolean shouldImportMessage(final Account account, final String folder, final Message message, final AtomicInteger progress, final Date earliestDate)",
      "right" : "private boolean shouldImportMessage(final Account account, final String folder, final Message message, final AtomicInteger progress, final Date earliestDate)",
      "info" : "MethodDeclaration[62769-63262]:MethodDeclaration[62769-63262]"
    }, {
      "left" : "private <T extends Message> void downloadSmallMessages(final Account account, final Folder<T> remoteFolder,\n                                       final LocalFolder localFolder,\n                                       List<T> smallMessages,\n                                       final AtomicInteger progress,\n                                       final int unreadBeforeStart,\n                                       final AtomicInteger newMessages,\n                                       final int todo,\n                                       FetchProfile fp) throws MessagingException",
      "right" : "private <T extends Message> void downloadSmallMessages(final Account account, final Folder<T> remoteFolder,\n                                       final LocalFolder localFolder,\n                                       List<T> smallMessages,\n                                       final AtomicInteger progress,\n                                       final int unreadBeforeStart,\n                                       final AtomicInteger newMessages,\n                                       final int todo,\n                                       FetchProfile fp) throws MessagingException",
      "info" : "MethodDeclaration[63268-66766]:MethodDeclaration[63268-66766]"
    }, {
      "left" : "public void messageFinished(final T message, int number, int ofTotal)",
      "right" : "public void messageFinished(final T message, int number, int ofTotal)",
      "info" : "MethodDeclaration[64187-66455]:MethodDeclaration[64187-66455]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[64701-64836]:MethodDeclaration[64701-64836]"
    }, {
      "left" : "public void messageStarted(String uid, int number, int ofTotal)",
      "right" : "public void messageStarted(String uid, int number, int ofTotal)",
      "info" : "MethodDeclaration[66469-66557]:MethodDeclaration[66469-66557]"
    }, {
      "left" : "public void messagesFinished(int total)",
      "right" : "public void messagesFinished(int total)",
      "info" : "MethodDeclaration[66571-66635]:MethodDeclaration[66571-66635]"
    }, {
      "left" : "private <T extends Message> void downloadLargeMessages(final Account account, final Folder<T> remoteFolder,\n                                       final LocalFolder localFolder,\n                                       List<T> largeMessages,\n                                       final AtomicInteger progress,\n                                       final int unreadBeforeStart,\n                                       final AtomicInteger newMessages,\n                                       final int todo,\n                                       FetchProfile fp) throws MessagingException",
      "right" : "private <T extends Message> void downloadLargeMessages(final Account account, final Folder<T> remoteFolder,\n                                       final LocalFolder localFolder,\n                                       List<T> largeMessages,\n                                       final AtomicInteger progress,\n                                       final int unreadBeforeStart,\n                                       final AtomicInteger newMessages,\n                                       final int todo,\n                                       FetchProfile fp) throws MessagingException",
      "info" : "MethodDeclaration[66774-72808]:MethodDeclaration[66774-72808]"
    }, {
      "left" : "private void refreshLocalMessageFlags(final Account account, final Folder remoteFolder,\n                                          final LocalFolder localFolder,\n                                          List<Message> syncFlagMessages,\n                                          final AtomicInteger progress,\n                                          final int todo\n                                         ) throws MessagingException",
      "right" : "private void refreshLocalMessageFlags(final Account account, final Folder remoteFolder,\n                                          final LocalFolder localFolder,\n                                          List<Message> syncFlagMessages,\n                                          final AtomicInteger progress,\n                                          final int todo\n                                         ) throws MessagingException",
      "info" : "MethodDeclaration[72814-75935]:MethodDeclaration[72814-75935]"
    }, {
      "left" : "private boolean syncFlags(LocalMessage localMessage, Message remoteMessage) throws MessagingException",
      "right" : "private boolean syncFlags(LocalMessage localMessage, Message remoteMessage) throws MessagingException",
      "info" : "MethodDeclaration[75941-76772]:MethodDeclaration[75941-76772]"
    }, {
      "left" : "private String getRootCauseMessage(Throwable t)",
      "right" : "private String getRootCauseMessage(Throwable t)",
      "info" : "MethodDeclaration[76777-77578]:MethodDeclaration[76777-77578]"
    }, {
      "left" : "private void queuePendingCommand(Account account, PendingCommand command)",
      "right" : "private void queuePendingCommand(Account account, PendingCommand command)",
      "info" : "MethodDeclaration[77584-77961]:MethodDeclaration[77584-77961]"
    }, {
      "left" : "private void processPendingCommands(final Account account)",
      "right" : "private void processPendingCommands(final Account account)",
      "info" : "MethodDeclaration[77967-78896]:MethodDeclaration[77967-78896]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[78111-78878]:MethodDeclaration[78111-78878]"
    }, {
      "left" : "private void processPendingCommandsSynchronous(Account account) throws MessagingException",
      "right" : "private void processPendingCommandsSynchronous(Account account) throws MessagingException",
      "info" : "MethodDeclaration[78902-83157]:MethodDeclaration[78902-83157]"
    }, {
      "left" : "private void processPendingAppend(PendingCommand command, Account account)\n    throws MessagingException",
      "right" : "private void processPendingAppend(PendingCommand command, Account account)\n    throws MessagingException",
      "info" : "MethodDeclaration[83163-89467]:MethodDeclaration[83163-89467]"
    }, {
      "left" : "private void queueMoveOrCopy(Account account, String srcFolder, String destFolder, boolean isCopy, String uids[])",
      "right" : "private void queueMoveOrCopy(Account account, String srcFolder, String destFolder, boolean isCopy, String uids[])",
      "info" : "MethodDeclaration[89472-90207]:MethodDeclaration[89472-90207]"
    }, {
      "left" : "private void queueMoveOrCopy(Account account, String srcFolder, String destFolder, boolean isCopy, String uids[], Map<String, String> uidMap)",
      "right" : "private void queueMoveOrCopy(Account account, String srcFolder, String destFolder, boolean isCopy, String uids[], Map<String, String> uidMap)",
      "info" : "MethodDeclaration[90213-91378]:MethodDeclaration[90213-91378]"
    }, {
      "left" : "private void processPendingMoveOrCopyOld2(PendingCommand command, Account account)\n            throws MessagingException",
      "right" : "private void processPendingMoveOrCopyOld2(PendingCommand command, Account account)\n            throws MessagingException",
      "info" : "MethodDeclaration[91384-92638]:MethodDeclaration[91384-92638]"
    }, {
      "left" : "private void processPendingMoveOrCopy(PendingCommand command, Account account)\n    throws MessagingException",
      "right" : "private void processPendingMoveOrCopy(PendingCommand command, Account account)\n    throws MessagingException",
      "info" : "MethodDeclaration[92644-98157]:MethodDeclaration[92644-98157]"
    }, {
      "left" : "private void queueSetFlag(final Account account, final String folderName, final String newState, final String flag, final String[] uids)",
      "right" : "private void queueSetFlag(final Account account, final String folderName, final String newState, final String flag, final String[] uids)",
      "info" : "MethodDeclaration[98163-99052]:MethodDeclaration[98163-99052]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[98422-99034]:MethodDeclaration[98422-99034]"
    }, {
      "left" : "private void processPendingSetFlag(PendingCommand command, Account account)\n    throws MessagingException",
      "right" : "private void processPendingSetFlag(PendingCommand command, Account account)\n    throws MessagingException",
      "info" : "MethodDeclaration[99057-100570]:MethodDeclaration[99057-100570]"
    }, {
      "left" : "private void processPendingSetFlagOld(PendingCommand command, Account account)\n    throws MessagingException",
      "right" : "private void processPendingSetFlagOld(PendingCommand command, Account account)\n    throws MessagingException",
      "info" : "MethodDeclaration[100704-102022]:MethodDeclaration[100704-102022]"
    }, {
      "left" : "private void queueExpunge(final Account account, final String folderName)",
      "right" : "private void queueExpunge(final Account account, final String folderName)",
      "info" : "MethodDeclaration[102027-102626]:MethodDeclaration[102027-102626]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[102223-102608]:MethodDeclaration[102223-102608]"
    }, {
      "left" : "private void processPendingExpunge(PendingCommand command, Account account)\n    throws MessagingException",
      "right" : "private void processPendingExpunge(PendingCommand command, Account account)\n    throws MessagingException",
      "info" : "MethodDeclaration[102631-103567]:MethodDeclaration[102631-103567]"
    }, {
      "left" : "private void processPendingMoveOrCopyOld(PendingCommand command, Account account)\n    throws MessagingException",
      "right" : "private void processPendingMoveOrCopyOld(PendingCommand command, Account account)\n    throws MessagingException",
      "info" : "MethodDeclaration[103702-106340]:MethodDeclaration[103702-106340]"
    }, {
      "left" : "private void processPendingMarkAllAsRead(PendingCommand command, Account account) throws MessagingException",
      "right" : "private void processPendingMarkAllAsRead(PendingCommand command, Account account) throws MessagingException",
      "info" : "MethodDeclaration[106346-108232]:MethodDeclaration[106346-108232]"
    }, {
      "left" : "void notifyUserIfCertificateProblem(Context context, Exception e,\n            Account account, boolean incoming)",
      "right" : "void notifyUserIfCertificateProblem(Context context, Exception e,\n            Account account, boolean incoming)",
      "info" : "MethodDeclaration[108238-110296]:MethodDeclaration[108238-110296]"
    }, {
      "left" : "public void clearCertificateErrorNotifications(Context context,\n            final Account account, CheckDirection direction)",
      "right" : "public void clearCertificateErrorNotifications(Context context,\n            final Account account, CheckDirection direction)",
      "info" : "MethodDeclaration[110302-110859]:MethodDeclaration[110302-110859]"
    }, {
      "left" : "static long uidfill = 0;",
      "right" : "static long uidfill = 0;",
      "info" : "FieldDeclaration[110866-110890]:FieldDeclaration[110866-110890]"
    }, {
      "left" : "static AtomicBoolean loopCatch = new AtomicBoolean();",
      "right" : "static AtomicBoolean loopCatch = new AtomicBoolean();",
      "info" : "FieldDeclaration[110895-110948]:FieldDeclaration[110895-110948]"
    }, {
      "left" : "public void addErrorMessage(Account account, String subject, Throwable t)",
      "right" : "public void addErrorMessage(Account account, String subject, Throwable t)",
      "info" : "MethodDeclaration[110953-112140]:MethodDeclaration[110953-112140]"
    }, {
      "left" : "public void addErrorMessage(Account account, String subject, String body)",
      "right" : "public void addErrorMessage(Account account, String subject, String body)",
      "info" : "MethodDeclaration[112146-113496]:MethodDeclaration[112146-113496]"
    }, {
      "left" : "public void markAllMessagesRead(final Account account, final String folder)",
      "right" : "public void markAllMessagesRead(final Account account, final String folder)",
      "info" : "MethodDeclaration[113504-114068]:MethodDeclaration[113504-114068]"
    }, {
      "left" : "public void setFlag(final Account account, final List<Long> messageIds, final Flag flag,\n            final boolean newState)",
      "right" : "public void setFlag(final Account account, final List<Long> messageIds, final Flag flag,\n            final boolean newState)",
      "info" : "MethodDeclaration[114074-114473]:MethodDeclaration[114074-114473]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[114320-114455]:MethodDeclaration[114320-114455]"
    }, {
      "left" : "public void setFlagForThreads(final Account account, final List<Long> threadRootIds,\n            final Flag flag, final boolean newState)",
      "right" : "public void setFlagForThreads(final Account account, final List<Long> threadRootIds,\n            final Flag flag, final boolean newState)",
      "info" : "MethodDeclaration[114479-114906]:MethodDeclaration[114479-114906]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[114751-114888]:MethodDeclaration[114751-114888]"
    }, {
      "left" : "private void setFlagSynchronous(final Account account, final List<Long> ids,\n            final Flag flag, final boolean newState, final boolean threadedList)",
      "right" : "private void setFlagSynchronous(final Account account, final List<Long> ids,\n            final Flag flag, final boolean newState, final boolean threadedList)",
      "info" : "MethodDeclaration[114912-117465]:MethodDeclaration[114912-117465]"
    }, {
      "left" : "public void setFlag(Account account, String folderName, List<? extends Message> messages, Flag flag,\n            boolean newState)",
      "right" : "public void setFlag(Account account, String folderName, List<? extends Message> messages, Flag flag,\n            boolean newState)",
      "info" : "MethodDeclaration[117471-120263]:MethodDeclaration[117471-120263]"
    }, {
      "left" : "public void setFlag(Account account, String folderName, String uid, Flag flag,\n            boolean newState)",
      "right" : "public void setFlag(Account account, String folderName, String uid, Flag flag,\n            boolean newState)",
      "info" : "MethodDeclaration[120269-121518]:MethodDeclaration[120269-121518]"
    }, {
      "left" : "public void clearAllPending(final Account account)",
      "right" : "public void clearAllPending(final Account account)",
      "info" : "MethodDeclaration[121524-121936]:MethodDeclaration[121524-121936]"
    }, {
      "left" : "public void loadMessageForViewRemote(final Account account, final String folder,\n                                         final String uid, final MessagingListener listener)",
      "right" : "public void loadMessageForViewRemote(final Account account, final String folder,\n                                         final String uid, final MessagingListener listener)",
      "info" : "MethodDeclaration[121942-122369]:MethodDeclaration[121942-122369]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[122197-122351]:MethodDeclaration[122197-122351]"
    }, {
      "left" : "public boolean loadMessageForViewRemoteSynchronous(final Account account, final String folder,\n            final String uid, final MessagingListener listener, final boolean force,\n            final boolean loadPartialFromSearch)",
      "right" : "public boolean loadMessageForViewRemoteSynchronous(final Account account, final String folder,\n            final String uid, final MessagingListener listener, final boolean force,\n            final boolean loadPartialFromSearch)",
      "info" : "MethodDeclaration[122375-127194]:MethodDeclaration[122375-127194]"
    }, {
      "left" : "public void loadMessageForView(final Account account, final String folder, final String uid,\n                                   final MessagingListener listener)",
      "right" : "public void loadMessageForView(final Account account, final String folder, final String uid,\n                                   final MessagingListener listener)",
      "info" : "MethodDeclaration[127200-129964]:MethodDeclaration[127200-129964]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[127554-129946]:MethodDeclaration[127554-129946]"
    }, {
      "left" : "public LocalMessage loadMessage(Account account, String folderName, String uid) throws MessagingException",
      "right" : "public LocalMessage loadMessage(Account account, String folderName, String uid) throws MessagingException",
      "info" : "MethodDeclaration[129970-130755]:MethodDeclaration[129970-130755]"
    }, {
      "left" : "private void markMessageAsReadOnView(Account account, LocalMessage message)\n            throws MessagingException",
      "right" : "private void markMessageAsReadOnView(Account account, LocalMessage message)\n            throws MessagingException",
      "info" : "MethodDeclaration[130761-131167]:MethodDeclaration[130761-131167]"
    }, {
      "left" : "public void loadAttachment(final Account account, final LocalMessage message, final Part part,\n            final MessagingListener listener)",
      "right" : "public void loadAttachment(final Account account, final LocalMessage message, final Part part,\n            final MessagingListener listener)",
      "info" : "MethodDeclaration[131173-132998]:MethodDeclaration[131173-132998]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[131386-132980]:MethodDeclaration[131386-132980]"
    }, {
      "left" : "public void sendMessage(final Account account,\n                            final Message message,\n                            MessagingListener listener)",
      "right" : "public void sendMessage(final Account account,\n                            final Message message,\n                            MessagingListener listener)",
      "info" : "MethodDeclaration[133004-134135]:MethodDeclaration[133004-134135]"
    }, {
      "left" : "public void sendPendingMessages(MessagingListener listener)",
      "right" : "public void sendPendingMessages(MessagingListener listener)",
      "info" : "MethodDeclaration[134142-134405]:MethodDeclaration[134142-134405]"
    }, {
      "left" : "public void sendPendingMessages(final Account account,\n                                    MessagingListener listener)",
      "right" : "public void sendPendingMessages(final Account account,\n                                    MessagingListener listener)",
      "info" : "MethodDeclaration[134412-135275]:MethodDeclaration[134412-135275]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[134746-135257]:MethodDeclaration[134746-135257]"
    }, {
      "left" : "private void cancelNotification(int id)",
      "right" : "private void cancelNotification(int id)",
      "info" : "MethodDeclaration[135281-135487]:MethodDeclaration[135281-135487]"
    }, {
      "left" : "private void notifyWhileSendingDone(Account account)",
      "right" : "private void notifyWhileSendingDone(Account account)",
      "info" : "MethodDeclaration[135493-135695]:MethodDeclaration[135493-135695]"
    }, {
      "left" : "private void notifyWhileSending(Account account)",
      "right" : "private void notifyWhileSending(Account account)",
      "info" : "MethodDeclaration[135701-137455]:MethodDeclaration[135701-137455]"
    }, {
      "left" : "private void notifySendTempFailed(Account account, Exception lastFailure)",
      "right" : "private void notifySendTempFailed(Account account, Exception lastFailure)",
      "info" : "MethodDeclaration[137461-137621]:MethodDeclaration[137461-137621]"
    }, {
      "left" : "private void notifySendPermFailed(Account account, Exception lastFailure)",
      "right" : "private void notifySendPermFailed(Account account, Exception lastFailure)",
      "info" : "MethodDeclaration[137627-137787]:MethodDeclaration[137627-137787]"
    }, {
      "left" : "private void notifySendFailed(Account account, Exception lastFailure, String openFolder)",
      "right" : "private void notifySendFailed(Account account, Exception lastFailure, String openFolder)",
      "info" : "MethodDeclaration[137793-139460]:MethodDeclaration[137793-139460]"
    }, {
      "left" : "private void notifyFetchingMail(final Account account, final Folder folder)",
      "right" : "private void notifyFetchingMail(final Account account, final Folder folder)",
      "info" : "MethodDeclaration[139466-141341]:MethodDeclaration[139466-141341]"
    }, {
      "left" : "private void notifyFetchingMailCancel(final Account account)",
      "right" : "private void notifyFetchingMailCancel(final Account account)",
      "info" : "MethodDeclaration[141347-141557]:MethodDeclaration[141347-141557]"
    }, {
      "left" : "public boolean messagesPendingSend(final Account account)",
      "right" : "public boolean messagesPendingSend(final Account account)",
      "info" : "MethodDeclaration[141563-142238]:MethodDeclaration[141563-142238]"
    }, {
      "left" : "public void sendPendingMessagesSynchronous(final Account account)",
      "right" : "public void sendPendingMessagesSynchronous(final Account account)",
      "info" : "MethodDeclaration[142244-150088]:MethodDeclaration[142244-149744]"
    }, {
      "left" : "public void getAccountStats(final Context context, final Account account,\n            final MessagingListener listener)",
      "right" : "public void getAccountStats(final Context context, final Account account,\n            final MessagingListener listener)",
      "info" : "MethodDeclaration[150094-150713]:MethodDeclaration[151066-151685]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[150273-150695]:MethodDeclaration[151245-151667]"
    }, {
      "left" : "public void getSearchAccountStats(final SearchAccount searchAccount,\n            final MessagingListener listener)",
      "right" : "public void getSearchAccountStats(final SearchAccount searchAccount,\n            final MessagingListener listener)",
      "info" : "MethodDeclaration[150719-151041]:MethodDeclaration[151691-152013]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[150893-151023]:MethodDeclaration[151865-151995]"
    }, {
      "left" : "public AccountStats getSearchAccountStatsSynchronous(final SearchAccount searchAccount,\n            final MessagingListener listener)",
      "right" : "public AccountStats getSearchAccountStatsSynchronous(final SearchAccount searchAccount,\n            final MessagingListener listener)",
      "info" : "MethodDeclaration[151047-153509]:MethodDeclaration[152019-154481]"
    }, {
      "left" : "public void getFolderUnreadMessageCount(final Account account, final String folderName,\n                                            final MessagingListener l)",
      "right" : "public void getFolderUnreadMessageCount(final Account account, final String folderName,\n                                            final MessagingListener l)",
      "info" : "MethodDeclaration[153515-154405]:MethodDeclaration[154487-155377]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[153739-154288]:MethodDeclaration[154711-155260]"
    }, {
      "left" : "public boolean isMoveCapable(Message message)",
      "right" : "public boolean isMoveCapable(Message message)",
      "info" : "MethodDeclaration[154413-154532]:MethodDeclaration[155385-155504]"
    }, {
      "left" : "public boolean isCopyCapable(Message message)",
      "right" : "public boolean isCopyCapable(Message message)",
      "info" : "MethodDeclaration[154537-154629]:MethodDeclaration[155509-155601]"
    }, {
      "left" : "public boolean isMoveCapable(final Account account)",
      "right" : "public boolean isMoveCapable(final Account account)",
      "info" : "MethodDeclaration[154635-155062]:MethodDeclaration[155607-156034]"
    }, {
      "left" : "public boolean isCopyCapable(final Account account)",
      "right" : "public boolean isCopyCapable(final Account account)",
      "info" : "MethodDeclaration[155067-155493]:MethodDeclaration[156039-156465]"
    }, {
      "left" : "public void moveMessages(final Account account, final String srcFolder,\n            final List<LocalMessage> messages, final String destFolder,\n            final MessagingListener listener)",
      "right" : "public void moveMessages(final Account account, final String srcFolder,\n            final List<LocalMessage> messages, final String destFolder,\n            final MessagingListener listener)",
      "info" : "MethodDeclaration[155498-156012]:MethodDeclaration[156470-156984]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[155810-155994]:MethodDeclaration[156782-156966]"
    }, {
      "left" : "public void moveMessagesInThread(final Account account, final String srcFolder,\n            final List<LocalMessage> messages, final String destFolder)",
      "right" : "public void moveMessagesInThread(final Account account, final String srcFolder,\n            final List<LocalMessage> messages, final String destFolder)",
      "info" : "MethodDeclaration[156018-156787]:MethodDeclaration[156990-157759]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[156300-156769]:MethodDeclaration[157272-157741]"
    }, {
      "left" : "public void moveMessage(final Account account, final String srcFolder, final LocalMessage message,\n            final String destFolder, final MessagingListener listener)",
      "right" : "public void moveMessage(final Account account, final String srcFolder, final LocalMessage message,\n            final String destFolder, final MessagingListener listener)",
      "info" : "MethodDeclaration[156793-157071]:MethodDeclaration[157765-158043]"
    }, {
      "left" : "public void copyMessages(final Account account, final String srcFolder,\n            final List<? extends Message> messages, final String destFolder,\n            final MessagingListener listener)",
      "right" : "public void copyMessages(final Account account, final String srcFolder,\n            final List<? extends Message> messages, final String destFolder,\n            final MessagingListener listener)",
      "info" : "MethodDeclaration[157077-157549]:MethodDeclaration[158049-158521]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[157348-157531]:MethodDeclaration[158320-158503]"
    }, {
      "left" : "public void copyMessagesInThread(final Account account, final String srcFolder,\n            final List<? extends Message> messages, final String destFolder)",
      "right" : "public void copyMessagesInThread(final Account account, final String srcFolder,\n            final List<? extends Message> messages, final String destFolder)",
      "info" : "MethodDeclaration[157555-158283]:MethodDeclaration[158527-159255]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[157796-158265]:MethodDeclaration[158768-159237]"
    }, {
      "left" : "public void copyMessage(final Account account, final String srcFolder, final Message message,\n            final String destFolder, final MessagingListener listener)",
      "right" : "public void copyMessage(final Account account, final String srcFolder, final Message message,\n            final String destFolder, final MessagingListener listener)",
      "info" : "MethodDeclaration[158289-158562]:MethodDeclaration[159261-159534]"
    }, {
      "left" : "private void moveOrCopyMessageSynchronous(final Account account, final String srcFolder,\n            final List<? extends Message> inMessages, final String destFolder, final boolean isCopy,\n            MessagingListener listener)",
      "right" : "private void moveOrCopyMessageSynchronous(final Account account, final String srcFolder,\n            final List<? extends Message> inMessages, final String destFolder, final boolean isCopy,\n            MessagingListener listener)",
      "info" : "MethodDeclaration[158568-163275]:MethodDeclaration[159540-164247]"
    }, {
      "left" : "public void expunge(final Account account, final String folder, final MessagingListener listener)",
      "right" : "public void expunge(final Account account, final String folder, final MessagingListener listener)",
      "info" : "MethodDeclaration[163281-163569]:MethodDeclaration[164253-164541]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[163449-163551]:MethodDeclaration[164421-164523]"
    }, {
      "left" : "public void deleteDraft(final Account account, long id)",
      "right" : "public void deleteDraft(final Account account, long id)",
      "info" : "MethodDeclaration[163575-164349]:MethodDeclaration[164547-165321]"
    }, {
      "left" : "public void deleteThreads(final List<LocalMessage> messages)",
      "right" : "public void deleteThreads(final List<LocalMessage> messages)",
      "info" : "MethodDeclaration[164355-164987]:MethodDeclaration[165327-165959]"
    }, {
      "left" : "public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages)",
      "right" : "public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages)",
      "info" : "MethodDeclaration[164484-164969]:MethodDeclaration[165456-165941]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[164770-164935]:MethodDeclaration[165742-165907]"
    }, {
      "left" : "public void deleteThreadsSynchronous(Account account, String folderName,\n            List<Message> messages)",
      "right" : "public void deleteThreadsSynchronous(Account account, String folderName,\n            List<Message> messages)",
      "info" : "MethodDeclaration[164993-165451]:MethodDeclaration[165965-166423]"
    }, {
      "left" : "public List<Message> collectMessagesInThreads(Account account, List<? extends Message> messages)\n            throws MessagingException",
      "right" : "public List<Message> collectMessagesInThreads(Account account, List<? extends Message> messages)\n            throws MessagingException",
      "info" : "MethodDeclaration[165457-166167]:MethodDeclaration[166429-167139]"
    }, {
      "left" : "public void deleteMessages(final List<LocalMessage> messages, final MessagingListener listener)",
      "right" : "public void deleteMessages(final List<LocalMessage> messages, final MessagingListener listener)",
      "info" : "MethodDeclaration[166173-166885]:MethodDeclaration[167145-167857]"
    }, {
      "left" : "public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages)",
      "right" : "public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages)",
      "info" : "MethodDeclaration[166337-166865]:MethodDeclaration[167309-167837]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[166623-166831]:MethodDeclaration[167595-167803]"
    }, {
      "left" : "private void deleteMessagesSynchronous(final Account account, final String folder, final List<? extends Message> messages,\n                                           MessagingListener listener)",
      "right" : "private void deleteMessagesSynchronous(final Account account, final String folder, final List<? extends Message> messages,\n                                           MessagingListener listener)",
      "info" : "MethodDeclaration[166891-171277]:MethodDeclaration[167863-172249]"
    }, {
      "left" : "private String[] getUidsFromMessages(List <? extends Message> messages)",
      "right" : "private String[] getUidsFromMessages(List <? extends Message> messages)",
      "info" : "MethodDeclaration[171283-171546]:MethodDeclaration[172255-172518]"
    }, {
      "left" : "private void processPendingEmptyTrash(PendingCommand command, Account account) throws MessagingException",
      "right" : "private void processPendingEmptyTrash(PendingCommand command, Account account) throws MessagingException",
      "info" : "MethodDeclaration[171552-172482]:MethodDeclaration[172524-173454]"
    }, {
      "left" : "public void emptyTrash(final Account account, MessagingListener listener)",
      "right" : "public void emptyTrash(final Account account, MessagingListener listener)",
      "info" : "MethodDeclaration[172488-174430]:MethodDeclaration[173460-175402]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[172639-174412]:MethodDeclaration[173611-175384]"
    }, {
      "left" : "private boolean isTrashLocalOnly(Account account) throws MessagingException",
      "right" : "private boolean isTrashLocalOnly(Account account) throws MessagingException",
      "info" : "MethodDeclaration[174436-175157]:MethodDeclaration[175408-176129]"
    }, {
      "left" : "public void sendAlternate(final Context context, Account account, Message message)",
      "right" : "public void sendAlternate(final Context context, Account account, Message message)",
      "info" : "MethodDeclaration[175163-178063]:MethodDeclaration[176135-179035]"
    }, {
      "left" : "public void loadMessageForViewBodyAvailable(Account account, String folder, String uid,\n            Message message)",
      "right" : "public void loadMessageForViewBodyAvailable(Account account, String folder, String uid,\n            Message message)",
      "info" : "MethodDeclaration[175590-178044]:MethodDeclaration[176562-179016]"
    }, {
      "left" : "public void checkMail(final Context context, final Account account,\n                          final boolean ignoreLastCheckedTime,\n                          final boolean useManualWakeLock,\n                          final MessagingListener listener)",
      "right" : "public void checkMail(final Context context, final Account account,\n                          final boolean ignoreLastCheckedTime,\n                          final boolean useManualWakeLock,\n                          final MessagingListener listener)",
      "info" : "MethodDeclaration[178069-180711]:MethodDeclaration[179041-181683]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[179140-180693]:MethodDeclaration[180112-181665]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[180164-180629]:MethodDeclaration[181136-181601]"
    }, {
      "left" : "private void checkMailForAccount(final Context context, final Account account,\n                                     final boolean ignoreLastCheckedTime,\n                                     final Preferences prefs,\n                                     final MessagingListener listener)",
      "right" : "private void checkMailForAccount(final Context context, final Account account,\n                                     final boolean ignoreLastCheckedTime,\n                                     final Preferences prefs,\n                                     final MessagingListener listener)",
      "info" : "MethodDeclaration[180719-184370]:MethodDeclaration[181691-185342]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[183607-184310]:MethodDeclaration[184579-185282]"
    }, {
      "left" : "private void synchronizeFolder(\n        final Account account,\n        final Folder folder,\n        final boolean ignoreLastCheckedTime,\n        final long accountInterval,\n        final MessagingListener listener)",
      "right" : "private void synchronizeFolder(\n        final Account account,\n        final Folder folder,\n        final boolean ignoreLastCheckedTime,\n        final long accountInterval,\n        final MessagingListener listener)",
      "info" : "MethodDeclaration[184377-186928]:MethodDeclaration[185349-187900]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[185267-186886]:MethodDeclaration[186239-187858]"
    }, {
      "left" : "public void compact(final Account account, final MessagingListener ml)",
      "right" : "public void compact(final Account account, final MessagingListener ml)",
      "info" : "MethodDeclaration[186936-187985]:MethodDeclaration[187908-188957]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[187103-187967]:MethodDeclaration[188075-188939]"
    }, {
      "left" : "public void clear(final Account account, final MessagingListener ml)",
      "right" : "public void clear(final Account account, final MessagingListener ml)",
      "info" : "MethodDeclaration[187991-189376]:MethodDeclaration[188963-190348]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[188154-189358]:MethodDeclaration[189126-190330]"
    }, {
      "left" : "public void recreate(final Account account, final MessagingListener ml)",
      "right" : "public void recreate(final Account account, final MessagingListener ml)",
      "info" : "MethodDeclaration[189382-190785]:MethodDeclaration[190354-191757]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[189551-190767]:MethodDeclaration[190523-191739]"
    }, {
      "left" : "private boolean shouldNotifyForMessage(Account account, LocalFolder localFolder, Message message)",
      "right" : "private boolean shouldNotifyForMessage(Account account, LocalFolder localFolder, Message message)",
      "info" : "MethodDeclaration[190792-193858]:MethodDeclaration[191764-194830]"
    }, {
      "left" : "private NotificationData getNotificationData(Account account, Integer previousUnreadMessageCount)",
      "right" : "private NotificationData getNotificationData(Account account, Integer previousUnreadMessageCount)",
      "info" : "MethodDeclaration[193864-194989]:MethodDeclaration[194836-195961]"
    }, {
      "left" : "private CharSequence getMessageSender(Context context, Account account, Message message)",
      "right" : "private CharSequence getMessageSender(Context context, Account account, Message message)",
      "info" : "MethodDeclaration[194995-196218]:MethodDeclaration[195967-197190]"
    }, {
      "left" : "private CharSequence getMessageSubject(Context context, Message message)",
      "right" : "private CharSequence getMessageSubject(Context context, Message message)",
      "info" : "MethodDeclaration[196224-196496]:MethodDeclaration[197196-197468]"
    }, {
      "left" : "private static TextAppearanceSpan sEmphasizedSpan;",
      "right" : "private static TextAppearanceSpan sEmphasizedSpan;",
      "info" : "FieldDeclaration[196502-196552]:FieldDeclaration[197474-197524]"
    }, {
      "left" : "private TextAppearanceSpan getEmphasizedSpan(Context context)",
      "right" : "private TextAppearanceSpan getEmphasizedSpan(Context context)",
      "info" : "MethodDeclaration[196557-196848]:MethodDeclaration[197529-197820]"
    }, {
      "left" : "private CharSequence getMessagePreview(Context context, Message message)",
      "right" : "private CharSequence getMessagePreview(Context context, Message message)",
      "info" : "MethodDeclaration[196854-197478]:MethodDeclaration[197826-198450]"
    }, {
      "left" : "private CharSequence buildMessageSummary(Context context, CharSequence sender, CharSequence subject)",
      "right" : "private CharSequence buildMessageSummary(Context context, CharSequence sender, CharSequence subject)",
      "info" : "MethodDeclaration[197484-197928]:MethodDeclaration[198456-198900]"
    }, {
      "left" : "public static final boolean platformSupportsExtendedNotifications()",
      "right" : "public static final boolean platformSupportsExtendedNotifications()",
      "info" : "MethodDeclaration[197934-198149]:MethodDeclaration[198906-199121]"
    }, {
      "left" : "public static boolean platformSupportsLockScreenNotifications()",
      "right" : "public static boolean platformSupportsLockScreenNotifications()",
      "info" : "MethodDeclaration[198155-198296]:MethodDeclaration[199127-199268]"
    }, {
      "left" : "private LocalMessage findNewestMessageForNotificationLocked(Context context, NotificationData data)",
      "right" : "private LocalMessage findNewestMessageForNotificationLocked(Context context, NotificationData data)",
      "info" : "MethodDeclaration[198302-198667]:MethodDeclaration[199274-199639]"
    }, {
      "left" : "private void notifyAccount(Context context, Account account,\n            LocalMessage message, int previousUnreadMessageCount)",
      "right" : "private void notifyAccount(Context context, Account account,\n            LocalMessage message, int previousUnreadMessageCount)",
      "info" : "MethodDeclaration[198673-199092]:MethodDeclaration[199645-200064]"
    }, {
      "left" : "private static final int NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION = 5;",
      "right" : "private static final int NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION = 5;",
      "info" : "FieldDeclaration[199173-199242]:FieldDeclaration[200145-200214]"
    }, {
      "left" : "private void notifyAccountWithDataLocked(Context context, Account account,\n            LocalMessage message, NotificationData data)",
      "right" : "private void notifyAccountWithDataLocked(Context context, Account account,\n            LocalMessage message, NotificationData data)",
      "info" : "MethodDeclaration[199248-210241]:MethodDeclaration[200220-211213]"
    }, {
      "left" : "private TaskStackBuilder buildAccountsBackStack(Context context)",
      "right" : "private TaskStackBuilder buildAccountsBackStack(Context context)",
      "info" : "MethodDeclaration[210247-210577]:MethodDeclaration[211219-211549]"
    }, {
      "left" : "private TaskStackBuilder buildFolderListBackStack(Context context, Account account)",
      "right" : "private TaskStackBuilder buildFolderListBackStack(Context context, Account account)",
      "info" : "MethodDeclaration[210583-210854]:MethodDeclaration[211555-211826]"
    }, {
      "left" : "private TaskStackBuilder buildUnreadBackStack(Context context, final Account account)",
      "right" : "private TaskStackBuilder buildUnreadBackStack(Context context, final Account account)",
      "info" : "MethodDeclaration[210860-211216]:MethodDeclaration[211832-212188]"
    }, {
      "left" : "private TaskStackBuilder buildMessageListBackStack(Context context, Account account, String folder)",
      "right" : "private TaskStackBuilder buildMessageListBackStack(Context context, Account account, String folder)",
      "info" : "MethodDeclaration[211222-211848]:MethodDeclaration[212194-212820]"
    }, {
      "left" : "private TaskStackBuilder buildMessageViewBackStack(Context context, MessageReference message)",
      "right" : "private TaskStackBuilder buildMessageViewBackStack(Context context, MessageReference message)",
      "info" : "MethodDeclaration[211854-212267]:MethodDeclaration[212826-213239]"
    }, {
      "left" : "private boolean skipFolderListInBackStack(Context context, Account account, String folder)",
      "right" : "private boolean skipFolderListInBackStack(Context context, Account account, String folder)",
      "info" : "MethodDeclaration[212273-212454]:MethodDeclaration[213245-213426]"
    }, {
      "left" : "private boolean skipAccountsInBackStack(Context context)",
      "right" : "private boolean skipAccountsInBackStack(Context context)",
      "info" : "MethodDeclaration[212460-212602]:MethodDeclaration[213432-213574]"
    }, {
      "left" : "private void configureNotification(NotificationCompat.Builder builder, String ringtone,\n            long[] vibrationPattern, Integer ledColor, int ledSpeed, boolean ringAndVibrate)",
      "right" : "private void configureNotification(NotificationCompat.Builder builder, String ringtone,\n            long[] vibrationPattern, Integer ledColor, int ledSpeed, boolean ringAndVibrate)",
      "info" : "MethodDeclaration[212608-214544]:MethodDeclaration[213580-215516]"
    }, {
      "left" : "private void configureLockScreenNotification(NotificationCompat.Builder builder,\n                                                 Context context,\n                                                 Account account,\n                                                 int newMessages,\n                                                 int unreadCount,\n                                                 CharSequence accountDescription,\n                                                 CharSequence formattedSender,\n                                                 List<? extends Message> messages)",
      "right" : "private void configureLockScreenNotification(NotificationCompat.Builder builder,\n                                                 Context context,\n                                                 Account account,\n                                                 int newMessages,\n                                                 int unreadCount,\n                                                 CharSequence accountDescription,\n                                                 CharSequence formattedSender,\n                                                 List<? extends Message> messages)",
      "info" : "MethodDeclaration[214550-218120]:MethodDeclaration[215522-219092]"
    }, {
      "left" : "public void notifyAccountCancel(Context context, Account account)",
      "right" : "public void notifyAccountCancel(Context context, Account account)",
      "info" : "MethodDeclaration[218126-218557]:MethodDeclaration[219098-219529]"
    }, {
      "left" : "public void deleteAccount(Context context, Account account)",
      "right" : "public void deleteAccount(Context context, Account account)",
      "info" : "MethodDeclaration[218563-218728]:MethodDeclaration[219535-219700]"
    }, {
      "left" : "public Message saveDraft(final Account account, final Message message, long existingDraftId)",
      "right" : "public Message saveDraft(final Account account, final Message message, long existingDraftId)",
      "info" : "MethodDeclaration[218734-220382]:MethodDeclaration[219706-221354]"
    }, {
      "left" : "public long getId(Message message)",
      "right" : "public long getId(Message message)",
      "info" : "MethodDeclaration[220388-220721]:MethodDeclaration[221360-221693]"
    }, {
      "left" : "public boolean modeMismatch(Account.FolderMode aMode, Folder.FolderClass fMode)",
      "right" : "public boolean modeMismatch(Account.FolderMode aMode, Folder.FolderClass fMode)",
      "info" : "MethodDeclaration[220727-221393]:MethodDeclaration[221699-222365]"
    }, {
      "left" : "static AtomicInteger sequencing = new AtomicInteger(0);",
      "right" : "static AtomicInteger sequencing = new AtomicInteger(0);",
      "info" : "FieldDeclaration[221399-221454]:FieldDeclaration[222371-222426]"
    }, {
      "left" : "Command",
      "right" : "Command",
      "info" : "TypeDeclaration[221459-222049]:TypeDeclaration[222431-223021]"
    }, {
      "left" : "public Runnable runnable;",
      "right" : "public Runnable runnable;",
      "info" : "FieldDeclaration[221521-221546]:FieldDeclaration[222493-222518]"
    }, {
      "left" : "public MessagingListener listener;",
      "right" : "public MessagingListener listener;",
      "info" : "FieldDeclaration[221556-221590]:FieldDeclaration[222528-222562]"
    }, {
      "left" : "public String description;",
      "right" : "public String description;",
      "info" : "FieldDeclaration[221600-221626]:FieldDeclaration[222572-222598]"
    }, {
      "left" : "boolean isForeground;",
      "right" : "boolean isForeground;",
      "info" : "FieldDeclaration[221636-221657]:FieldDeclaration[222608-222629]"
    }, {
      "left" : "int sequence = sequencing.getAndIncrement();",
      "right" : "int sequence = sequencing.getAndIncrement();",
      "info" : "FieldDeclaration[221667-221711]:FieldDeclaration[222639-222683]"
    }, {
      "left" : "public int compareTo(Command other)",
      "right" : "public int compareTo(Command other)",
      "info" : "MethodDeclaration[221721-222043]:MethodDeclaration[222693-223015]"
    }, {
      "left" : "public MessagingListener getCheckMailListener()",
      "right" : "public MessagingListener getCheckMailListener()",
      "info" : "MethodDeclaration[222055-222144]:MethodDeclaration[223027-223116]"
    }, {
      "left" : "public void setCheckMailListener(MessagingListener checkMailListener)",
      "right" : "public void setCheckMailListener(MessagingListener checkMailListener)",
      "info" : "MethodDeclaration[222150-222492]:MethodDeclaration[223122-223464]"
    }, {
      "left" : "public Collection<Pusher> getPushers()",
      "right" : "public Collection<Pusher> getPushers()",
      "info" : "MethodDeclaration[222498-222577]:MethodDeclaration[223470-223549]"
    }, {
      "left" : "public boolean setupPushing(final Account account)",
      "right" : "public boolean setupPushing(final Account account)",
      "info" : "MethodDeclaration[222583-226768]:MethodDeclaration[223555-227740]"
    }, {
      "left" : "public void stopAllPushing()",
      "right" : "public void stopAllPushing()",
      "info" : "MethodDeclaration[226774-227087]:MethodDeclaration[227746-228059]"
    }, {
      "left" : "public void messagesArrived(final Account account, final Folder remoteFolder, final List<Message> messages, final boolean flagSyncOnly)",
      "right" : "public void messagesArrived(final Account account, final Folder remoteFolder, final List<Message> messages, final boolean flagSyncOnly)",
      "info" : "MethodDeclaration[227093-230128]:MethodDeclaration[228065-231100]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[227641-229843]:MethodDeclaration[228613-230815]"
    }, {
      "left" : "public void systemStatusChanged()",
      "right" : "public void systemStatusChanged()",
      "info" : "MethodDeclaration[230134-230275]:MethodDeclaration[231106-231247]"
    }, {
      "left" : "enum : MemorizingState",
      "right" : "enum : MemorizingState",
      "info" : "EnumDeclaration[230281-230331]:EnumDeclaration[231253-231303]"
    }, {
      "left" : "Memory",
      "right" : "Memory",
      "info" : "TypeDeclaration[230337-231054]:TypeDeclaration[231309-232026]"
    }, {
      "left" : "Account account;",
      "right" : "Account account;",
      "info" : "FieldDeclaration[230367-230383]:FieldDeclaration[231339-231355]"
    }, {
      "left" : "String folderName;",
      "right" : "String folderName;",
      "info" : "FieldDeclaration[230392-230410]:FieldDeclaration[231364-231382]"
    }, {
      "left" : "MemorizingState syncingState = null;",
      "right" : "MemorizingState syncingState = null;",
      "info" : "FieldDeclaration[230419-230455]:FieldDeclaration[231391-231427]"
    }, {
      "left" : "MemorizingState sendingState = null;",
      "right" : "MemorizingState sendingState = null;",
      "info" : "FieldDeclaration[230464-230500]:FieldDeclaration[231436-231472]"
    }, {
      "left" : "MemorizingState pushingState = null;",
      "right" : "MemorizingState pushingState = null;",
      "info" : "FieldDeclaration[230509-230545]:FieldDeclaration[231481-231517]"
    }, {
      "left" : "MemorizingState processingState = null;",
      "right" : "MemorizingState processingState = null;",
      "info" : "FieldDeclaration[230554-230593]:FieldDeclaration[231526-231565]"
    }, {
      "left" : "String failureMessage = null;",
      "right" : "String failureMessage = null;",
      "info" : "FieldDeclaration[230602-230631]:FieldDeclaration[231574-231603]"
    }, {
      "left" : "int syncingTotalMessagesInMailbox;",
      "right" : "int syncingTotalMessagesInMailbox;",
      "info" : "FieldDeclaration[230641-230675]:FieldDeclaration[231613-231647]"
    }, {
      "left" : "int syncingNumNewMessages;",
      "right" : "int syncingNumNewMessages;",
      "info" : "FieldDeclaration[230684-230710]:FieldDeclaration[231656-231682]"
    }, {
      "left" : "int folderCompleted = 0;",
      "right" : "int folderCompleted = 0;",
      "info" : "FieldDeclaration[230720-230744]:FieldDeclaration[231692-231716]"
    }, {
      "left" : "int folderTotal = 0;",
      "right" : "int folderTotal = 0;",
      "info" : "FieldDeclaration[230753-230773]:FieldDeclaration[231725-231745]"
    }, {
      "left" : "String processingCommandTitle = null;",
      "right" : "String processingCommandTitle = null;",
      "info" : "FieldDeclaration[230782-230819]:FieldDeclaration[231754-231791]"
    }, {
      "left" : "Memory(Account nAccount, String nFolderName)",
      "right" : "Memory(Account nAccount, String nFolderName)",
      "info" : "MethodDeclaration[230829-230955]:MethodDeclaration[231801-231927]"
    }, {
      "left" : "String getKey()",
      "right" : "String getKey()",
      "info" : "MethodDeclaration[230965-231046]:MethodDeclaration[231937-232018]"
    }, {
      "left" : "static String getMemoryKey(Account taccount, String tfolderName)",
      "right" : "static String getMemoryKey(Account taccount, String tfolderName)",
      "info" : "MethodDeclaration[231059-231193]:MethodDeclaration[232031-232165]"
    }, {
      "left" : "MemorizingListener",
      "right" : "MemorizingListener",
      "info" : "TypeDeclaration[231198-239616]:TypeDeclaration[232170-240588]"
    }, {
      "left" : "Map<String, Memory> memories = new HashMap<String, Memory>(31);",
      "right" : "Map<String, Memory> memories = new HashMap<String, Memory>(31);",
      "info" : "FieldDeclaration[231266-231329]:FieldDeclaration[232238-232301]"
    }, {
      "left" : "Memory getMemory(Account account, String folderName)",
      "right" : "Memory getMemory(Account account, String folderName)",
      "info" : "MethodDeclaration[231339-231668]:MethodDeclaration[232311-232640]"
    }, {
      "left" : "synchronized void removeAccount(Account account)",
      "right" : "synchronized void removeAccount(Account account)",
      "info" : "MethodDeclaration[231678-232141]:MethodDeclaration[232650-233113]"
    }, {
      "left" : "public synchronized void synchronizeMailboxStarted(Account account, String folder)",
      "right" : "public synchronized void synchronizeMailboxStarted(Account account, String folder)",
      "info" : "MethodDeclaration[232151-232454]:MethodDeclaration[233123-233426]"
    }, {
      "left" : "public synchronized void synchronizeMailboxFinished(Account account, String folder,\n                int totalMessagesInMailbox, int numNewMessages)",
      "right" : "public synchronized void synchronizeMailboxFinished(Account account, String folder,\n                int totalMessagesInMailbox, int numNewMessages)",
      "info" : "MethodDeclaration[232464-232891]:MethodDeclaration[233436-233863]"
    }, {
      "left" : "public synchronized void synchronizeMailboxFailed(Account account, String folder,\n                String message)",
      "right" : "public synchronized void synchronizeMailboxFailed(Account account, String folder,\n                String message)",
      "info" : "MethodDeclaration[232901-233204]:MethodDeclaration[233873-234176]"
    }, {
      "left" : "synchronized void refreshOther(MessagingListener other)",
      "right" : "synchronized void refreshOther(MessagingListener other)",
      "info" : "MethodDeclaration[233213-237295]:MethodDeclaration[234185-238267]"
    }, {
      "left" : "public synchronized void setPushActive(Account account, String folderName, boolean active)",
      "right" : "public synchronized void setPushActive(Account account, String folderName, boolean active)",
      "info" : "MethodDeclaration[237304-237581]:MethodDeclaration[238276-238553]"
    }, {
      "left" : "public synchronized void sendPendingMessagesStarted(Account account)",
      "right" : "public synchronized void sendPendingMessagesStarted(Account account)",
      "info" : "MethodDeclaration[237591-237878]:MethodDeclaration[238563-238850]"
    }, {
      "left" : "public synchronized void sendPendingMessagesCompleted(Account account)",
      "right" : "public synchronized void sendPendingMessagesCompleted(Account account)",
      "info" : "MethodDeclaration[237888-238102]:MethodDeclaration[238860-239074]"
    }, {
      "left" : "public synchronized void sendPendingMessagesFailed(Account account)",
      "right" : "public synchronized void sendPendingMessagesFailed(Account account)",
      "info" : "MethodDeclaration[238112-238321]:MethodDeclaration[239084-239293]"
    }, {
      "left" : "public synchronized void synchronizeMailboxProgress(Account account, String folderName, int completed, int total)",
      "right" : "public synchronized void synchronizeMailboxProgress(Account account, String folderName, int completed, int total)",
      "info" : "MethodDeclaration[238332-238623]:MethodDeclaration[239304-239595]"
    }, {
      "left" : "public synchronized void pendingCommandsProcessing(Account account)",
      "right" : "public synchronized void pendingCommandsProcessing(Account account)",
      "info" : "MethodDeclaration[238634-238923]:MethodDeclaration[239606-239895]"
    }, {
      "left" : "public synchronized void pendingCommandsFinished(Account account)",
      "right" : "public synchronized void pendingCommandsFinished(Account account)",
      "info" : "MethodDeclaration[238932-239144]:MethodDeclaration[239904-240116]"
    }, {
      "left" : "public synchronized void pendingCommandStarted(Account account, String commandTitle)",
      "right" : "public synchronized void pendingCommandStarted(Account account, String commandTitle)",
      "info" : "MethodDeclaration[239153-239379]:MethodDeclaration[240125-240351]"
    }, {
      "left" : "public synchronized void pendingCommandCompleted(Account account, String commandTitle)",
      "right" : "public synchronized void pendingCommandCompleted(Account account, String commandTitle)",
      "info" : "MethodDeclaration[239389-239609]:MethodDeclaration[240361-240581]"
    }, {
      "left" : "private void actOnMessages(List<LocalMessage> messages, MessageActor actor)",
      "right" : "private void actOnMessages(List<LocalMessage> messages, MessageActor actor)",
      "info" : "MethodDeclaration[239622-241131]:MethodDeclaration[240594-242103]"
    }, {
      "left" : "MessageActor",
      "right" : "MessageActor",
      "info" : "TypeDeclaration[241137-241266]:TypeDeclaration[242109-242238]"
    }, {
      "left" : "public void act(final Account account, final Folder folder, final List<Message> messages);",
      "right" : "public void act(final Account account, final Folder folder, final List<Message> messages);",
      "info" : "MethodDeclaration[241170-241260]:MethodDeclaration[242142-242232]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4619-4625]:Modifier[4619-4625]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[4626-4631]:TYPE_DECLARATION_KIND[4626-4631]"
    }, {
      "left" : "MessagingController",
      "right" : "MessagingController",
      "info" : "SimpleName[4632-4651]:SimpleName[4632-4651]"
    }, {
      "left" : "Runnable",
      "right" : "Runnable",
      "info" : "SimpleType[4663-4671]:SimpleType[4663-4671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6677-6683]:Modifier[6677-6683]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6684-6690]:Modifier[6684-6690]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[6691-6696]:TYPE_DECLARATION_KIND[6691-6696]"
    }, {
      "left" : "UidReverseComparator",
      "right" : "UidReverseComparator",
      "info" : "SimpleName[6697-6717]:SimpleName[6697-6717]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6759-6768]:MarkerAnnotation[6759-6768]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6777-6783]:Modifier[6777-6783]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6784-6787]:PrimitiveType[6784-6787]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[6788-6795]:SimpleName[6788-6795]"
    }, {
      "left" : "Message o1",
      "right" : "Message o1",
      "info" : "SingleVariableDeclaration[6796-6806]:SingleVariableDeclaration[6796-6806]"
    }, {
      "left" : "Message o2",
      "right" : "Message o2",
      "info" : "SingleVariableDeclaration[6808-6818]:SingleVariableDeclaration[6808-6818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6820-7366]:Block[6820-7366]"
    }, {
      "left" : "if (o1 == null || o2 == null || o1.getUid() == null || o2.getUid() == null)",
      "right" : "if (o1 == null || o2 == null || o1.getUid() == null || o2.getUid() == null)",
      "info" : "IfStatement[6834-6951]:IfStatement[6834-6951]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6910-6951]:Block[6910-6951]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[6928-6937]:ReturnStatement[6928-6937]"
    }, {
      "left" : "int id1, id2;",
      "right" : "int id1, id2;",
      "info" : "VariableDeclarationStatement[6964-6977]:VariableDeclarationStatement[6964-6977]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6990-7189]:TryStatement[6990-7189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6994-7115]:Block[6994-7115]"
    }, {
      "left" : "id1 = Integer.parseInt(o1.getUid());",
      "right" : "id1 = Integer.parseInt(o1.getUid());",
      "info" : "ExpressionStatement[7012-7048]:ExpressionStatement[7012-7048]"
    }, {
      "left" : "id2 = Integer.parseInt(o2.getUid());",
      "right" : "id2 = Integer.parseInt(o2.getUid());",
      "info" : "ExpressionStatement[7065-7101]:ExpressionStatement[7065-7101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7148-7189]:Block[7148-7189]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[7166-7175]:ReturnStatement[7166-7175]"
    }, {
      "left" : "if (id1 < id2)",
      "right" : "if (id1 < id2)",
      "info" : "IfStatement[7240-7280]:IfStatement[7240-7280]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[7271-7280]:ReturnStatement[7271-7280]"
    }, {
      "left" : "if (id1 > id2)",
      "right" : "if (id1 > id2)",
      "info" : "IfStatement[7293-7334]:IfStatement[7293-7334]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[7324-7334]:ReturnStatement[7324-7334]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[7347-7356]:ReturnStatement[7347-7356]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8441-8448]:Modifier[8441-8448]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8449-8455]:Modifier[8449-8455]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[8456-8461]:TYPE_DECLARATION_KIND[8456-8461]"
    }, {
      "left" : "NotificationData",
      "right" : "NotificationData",
      "info" : "SimpleName[8462-8478]:SimpleName[8462-8478]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9827-9833]:Modifier[9827-9833]"
    }, {
      "left" : "NotificationData",
      "right" : "NotificationData",
      "info" : "SimpleName[9834-9850]:SimpleName[9834-9850]"
    }, {
      "left" : "int unread",
      "right" : "int unread",
      "info" : "SingleVariableDeclaration[9851-9861]:SingleVariableDeclaration[9851-9861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9863-10042]:Block[9863-10042]"
    }, {
      "left" : "unreadBeforeNotification = unread;",
      "right" : "unreadBeforeNotification = unread;",
      "info" : "ExpressionStatement[9877-9911]:ExpressionStatement[9877-9911]"
    }, {
      "left" : "droppedMessages = new LinkedList<MessageReference>();",
      "right" : "droppedMessages = new LinkedList<MessageReference>();",
      "info" : "ExpressionStatement[9924-9977]:ExpressionStatement[9924-9977]"
    }, {
      "left" : "messages = new LinkedList<LocalMessage>();",
      "right" : "messages = new LinkedList<LocalMessage>();",
      "info" : "ExpressionStatement[9990-10032]:ExpressionStatement[9990-10032]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10348-10354]:Modifier[10348-10354]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10355-10359]:PrimitiveType[10355-10359]"
    }, {
      "left" : "addMessage",
      "right" : "addMessage",
      "info" : "SimpleName[10360-10370]:SimpleName[10360-10370]"
    }, {
      "left" : "LocalMessage m",
      "right" : "LocalMessage m",
      "info" : "SingleVariableDeclaration[10371-10385]:SingleVariableDeclaration[10371-10385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10387-10636]:Block[10387-10636]"
    }, {
      "left" : "while (messages.size() >= MAX_MESSAGES)",
      "right" : "while (messages.size() >= MAX_MESSAGES)",
      "info" : "WhileStatement[10401-10592]:WhileStatement[10401-10592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10441-10592]:Block[10441-10592]"
    }, {
      "left" : "LocalMessage dropped = messages.removeLast();",
      "right" : "LocalMessage dropped = messages.removeLast();",
      "info" : "VariableDeclarationStatement[10459-10504]:VariableDeclarationStatement[10459-10504]"
    }, {
      "left" : "droppedMessages.addFirst(dropped.makeMessageReference());",
      "right" : "droppedMessages.addFirst(dropped.makeMessageReference());",
      "info" : "ExpressionStatement[10521-10578]:ExpressionStatement[10521-10578]"
    }, {
      "left" : "messages.addFirst(m);",
      "right" : "messages.addFirst(m);",
      "info" : "ExpressionStatement[10605-10626]:ExpressionStatement[10605-10626]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10908-10914]:Modifier[10908-10914]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[10915-10922]:PrimitiveType[10915-10922]"
    }, {
      "left" : "removeMatchingMessage",
      "right" : "removeMatchingMessage",
      "info" : "SimpleName[10923-10944]:SimpleName[10923-10944]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[10945-10960]:SingleVariableDeclaration[10945-10960]"
    }, {
      "left" : "MessageReference ref",
      "right" : "MessageReference ref",
      "info" : "SingleVariableDeclaration[10962-10982]:SingleVariableDeclaration[10962-10982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10984-11851]:Block[10984-11851]"
    }, {
      "left" : "for (MessageReference dropped : droppedMessages)",
      "right" : "for (MessageReference dropped : droppedMessages)",
      "info" : "EnhancedForStatement[10998-11209]:EnhancedForStatement[10998-11209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11047-11209]:Block[11047-11209]"
    }, {
      "left" : "if (dropped.equals(ref))",
      "right" : "if (dropped.equals(ref))",
      "info" : "IfStatement[11065-11195]:IfStatement[11065-11195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11090-11195]:Block[11090-11195]"
    }, {
      "left" : "droppedMessages.remove(dropped);",
      "right" : "droppedMessages.remove(dropped);",
      "info" : "ExpressionStatement[11112-11144]:ExpressionStatement[11112-11144]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11165-11177]:ReturnStatement[11165-11177]"
    }, {
      "left" : "for (LocalMessage message : messages)",
      "right" : "for (LocalMessage message : messages)",
      "info" : "EnhancedForStatement[11223-11814]:EnhancedForStatement[11223-11814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11261-11814]:Block[11261-11814]"
    }, {
      "left" : "if (message.makeMessageReference().equals(ref))",
      "right" : "if (message.makeMessageReference().equals(ref))",
      "info" : "IfStatement[11279-11800]:IfStatement[11279-11800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11327-11800]:Block[11327-11800]"
    }, {
      "left" : "if (messages.remove(message) && !droppedMessages.isEmpty())",
      "right" : "if (messages.remove(message) && !droppedMessages.isEmpty())",
      "info" : "IfStatement[11349-11749]:IfStatement[11349-11749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11409-11749]:Block[11409-11749]"
    }, {
      "left" : "LocalMessage restoredMessage = droppedMessages.getFirst().restoreToLocalMessage(context);",
      "right" : "LocalMessage restoredMessage = droppedMessages.getFirst().restoreToLocalMessage(context);",
      "info" : "VariableDeclarationStatement[11435-11524]:VariableDeclarationStatement[11435-11524]"
    }, {
      "left" : "if (restoredMessage != null)",
      "right" : "if (restoredMessage != null)",
      "info" : "IfStatement[11549-11727]:IfStatement[11549-11727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11578-11727]:Block[11578-11727]"
    }, {
      "left" : "messages.addLast(restoredMessage);",
      "right" : "messages.addLast(restoredMessage);",
      "info" : "ExpressionStatement[11608-11642]:ExpressionStatement[11608-11642]"
    }, {
      "left" : "droppedMessages.removeFirst();",
      "right" : "droppedMessages.removeFirst();",
      "info" : "ExpressionStatement[11671-11701]:ExpressionStatement[11671-11701]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11770-11782]:ReturnStatement[11770-11782]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11828-11841]:ReturnStatement[11828-11841]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12001-12007]:Modifier[12001-12007]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12008-12012]:PrimitiveType[12008-12012]"
    }, {
      "left" : "supplyAllMessageRefs",
      "right" : "supplyAllMessageRefs",
      "info" : "SimpleName[12013-12033]:SimpleName[12013-12033]"
    }, {
      "left" : "List<MessageReference> refs",
      "right" : "List<MessageReference> refs",
      "info" : "SingleVariableDeclaration[12034-12061]:SingleVariableDeclaration[12034-12061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12063-12228]:Block[12063-12228]"
    }, {
      "left" : "for (LocalMessage m : messages)",
      "right" : "for (LocalMessage m : messages)",
      "info" : "EnhancedForStatement[12077-12176]:EnhancedForStatement[12077-12176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12109-12176]:Block[12109-12176]"
    }, {
      "left" : "refs.add(m.makeMessageReference());",
      "right" : "refs.add(m.makeMessageReference());",
      "info" : "ExpressionStatement[12127-12162]:ExpressionStatement[12127-12162]"
    }, {
      "left" : "refs.addAll(droppedMessages);",
      "right" : "refs.addAll(droppedMessages);",
      "info" : "ExpressionStatement[12189-12218]:ExpressionStatement[12189-12218]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12421-12427]:Modifier[12421-12427]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12428-12431]:PrimitiveType[12428-12431]"
    }, {
      "left" : "getNewMessageCount",
      "right" : "getNewMessageCount",
      "info" : "SimpleName[12432-12450]:SimpleName[12432-12450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12453-12525]:Block[12453-12525]"
    }, {
      "left" : "return messages.size() + droppedMessages.size();",
      "right" : "return messages.size() + droppedMessages.size();",
      "info" : "ReturnStatement[12467-12515]:ReturnStatement[12467-12515]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12814-12821]:Modifier[12814-12821]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12822-12826]:PrimitiveType[12822-12826]"
    }, {
      "left" : "suppressMessages",
      "right" : "suppressMessages",
      "info" : "SimpleName[12827-12843]:SimpleName[12827-12843]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[12844-12859]:SingleVariableDeclaration[12844-12859]"
    }, {
      "left" : "List<LocalMessage> messages",
      "right" : "List<LocalMessage> messages",
      "info" : "SingleVariableDeclaration[12861-12888]:SingleVariableDeclaration[12861-12888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12890-13027]:Block[12890-13027]"
    }, {
      "left" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "right" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "info" : "VariableDeclarationStatement[12900-12983]:VariableDeclarationStatement[12900-12983]"
    }, {
      "left" : "cache.hideMessages(messages);",
      "right" : "cache.hideMessages(messages);",
      "info" : "ExpressionStatement[12992-13021]:ExpressionStatement[12992-13021]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13033-13040]:Modifier[13033-13040]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13041-13045]:PrimitiveType[13041-13045]"
    }, {
      "left" : "unsuppressMessages",
      "right" : "unsuppressMessages",
      "info" : "SimpleName[13046-13064]:SimpleName[13046-13064]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[13065-13080]:SingleVariableDeclaration[13065-13080]"
    }, {
      "left" : "List<? extends Message> messages",
      "right" : "List<? extends Message> messages",
      "info" : "SingleVariableDeclaration[13082-13114]:SingleVariableDeclaration[13082-13114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13116-13255]:Block[13116-13255]"
    }, {
      "left" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "right" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "info" : "VariableDeclarationStatement[13126-13209]:VariableDeclarationStatement[13126-13209]"
    }, {
      "left" : "cache.unhideMessages(messages);",
      "right" : "cache.unhideMessages(messages);",
      "info" : "ExpressionStatement[13218-13249]:ExpressionStatement[13218-13249]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13261-13268]:Modifier[13261-13268]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13269-13276]:PrimitiveType[13269-13276]"
    }, {
      "left" : "isMessageSuppressed",
      "right" : "isMessageSuppressed",
      "info" : "SimpleName[13277-13296]:SimpleName[13277-13296]"
    }, {
      "left" : "LocalMessage message",
      "right" : "LocalMessage message",
      "info" : "SingleVariableDeclaration[13297-13317]:SingleVariableDeclaration[13297-13317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13319-13592]:Block[13319-13592]"
    }, {
      "left" : "long messageId = message.getId();",
      "right" : "long messageId = message.getId();",
      "info" : "VariableDeclarationStatement[13329-13362]:VariableDeclarationStatement[13329-13362]"
    }, {
      "left" : "long folderId = message.getFolder().getId();",
      "right" : "long folderId = message.getFolder().getId();",
      "info" : "VariableDeclarationStatement[13371-13415]:VariableDeclarationStatement[13371-13415]"
    }, {
      "left" : "EmailProviderCache cache = EmailProviderCache.getCache(message.getFolder().getAccountUuid(), context);",
      "right" : "EmailProviderCache cache = EmailProviderCache.getCache(message.getFolder().getAccountUuid(), context);",
      "info" : "VariableDeclarationStatement[13425-13527]:VariableDeclarationStatement[13425-13527]"
    }, {
      "left" : "return cache.isMessageHidden(messageId, folderId);",
      "right" : "return cache.isMessageHidden(messageId, folderId);",
      "info" : "ReturnStatement[13536-13586]:ReturnStatement[13536-13586]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[13598-13605]:Modifier[13598-13605]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13606-13610]:PrimitiveType[13606-13610]"
    }, {
      "left" : "setFlagInCache",
      "right" : "setFlagInCache",
      "info" : "SimpleName[13611-13625]:SimpleName[13611-13625]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[13626-13647]:SingleVariableDeclaration[13626-13647]"
    }, {
      "left" : "final List<Long> messageIds",
      "right" : "final List<Long> messageIds",
      "info" : "SingleVariableDeclaration[13649-13676]:SingleVariableDeclaration[13649-13676]"
    }, {
      "left" : "final Flag flag",
      "right" : "final Flag flag",
      "info" : "SingleVariableDeclaration[13690-13705]:SingleVariableDeclaration[13690-13705]"
    }, {
      "left" : "final boolean newState",
      "right" : "final boolean newState",
      "info" : "SingleVariableDeclaration[13707-13729]:SingleVariableDeclaration[13707-13729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13731-14025]:Block[13731-14025]"
    }, {
      "left" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "right" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "info" : "VariableDeclarationStatement[13742-13825]:VariableDeclarationStatement[13742-13825]"
    }, {
      "left" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "right" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "info" : "VariableDeclarationStatement[13834-13892]:VariableDeclarationStatement[13834-13892]"
    }, {
      "left" : "String value = Integer.toString((newState) ? 1 : 0);",
      "right" : "String value = Integer.toString((newState) ? 1 : 0);",
      "info" : "VariableDeclarationStatement[13901-13953]:VariableDeclarationStatement[13901-13953]"
    }, {
      "left" : "cache.setValueForMessages(messageIds, columnName, value);",
      "right" : "cache.setValueForMessages(messageIds, columnName, value);",
      "info" : "ExpressionStatement[13962-14019]:ExpressionStatement[13962-14019]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14031-14038]:Modifier[14031-14038]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14039-14043]:PrimitiveType[14039-14043]"
    }, {
      "left" : "removeFlagFromCache",
      "right" : "removeFlagFromCache",
      "info" : "SimpleName[14044-14063]:SimpleName[14044-14063]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[14064-14085]:SingleVariableDeclaration[14064-14085]"
    }, {
      "left" : "final List<Long> messageIds",
      "right" : "final List<Long> messageIds",
      "info" : "SingleVariableDeclaration[14087-14114]:SingleVariableDeclaration[14087-14114]"
    }, {
      "left" : "final Flag flag",
      "right" : "final Flag flag",
      "info" : "SingleVariableDeclaration[14128-14143]:SingleVariableDeclaration[14128-14143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14145-14374]:Block[14145-14374]"
    }, {
      "left" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "right" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "info" : "VariableDeclarationStatement[14156-14239]:VariableDeclarationStatement[14156-14239]"
    }, {
      "left" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "right" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "info" : "VariableDeclarationStatement[14248-14306]:VariableDeclarationStatement[14248-14306]"
    }, {
      "left" : "cache.removeValueForMessages(messageIds, columnName);",
      "right" : "cache.removeValueForMessages(messageIds, columnName);",
      "info" : "ExpressionStatement[14315-14368]:ExpressionStatement[14315-14368]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14380-14387]:Modifier[14380-14387]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14388-14392]:PrimitiveType[14388-14392]"
    }, {
      "left" : "setFlagForThreadsInCache",
      "right" : "setFlagForThreadsInCache",
      "info" : "SimpleName[14393-14417]:SimpleName[14393-14417]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[14418-14439]:SingleVariableDeclaration[14418-14439]"
    }, {
      "left" : "final List<Long> threadRootIds",
      "right" : "final List<Long> threadRootIds",
      "info" : "SingleVariableDeclaration[14441-14471]:SingleVariableDeclaration[14441-14471]"
    }, {
      "left" : "final Flag flag",
      "right" : "final Flag flag",
      "info" : "SingleVariableDeclaration[14485-14500]:SingleVariableDeclaration[14485-14500]"
    }, {
      "left" : "final boolean newState",
      "right" : "final boolean newState",
      "info" : "SingleVariableDeclaration[14502-14524]:SingleVariableDeclaration[14502-14524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14526-14822]:Block[14526-14822]"
    }, {
      "left" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "right" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "info" : "VariableDeclarationStatement[14537-14620]:VariableDeclarationStatement[14537-14620]"
    }, {
      "left" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "right" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "info" : "VariableDeclarationStatement[14629-14687]:VariableDeclarationStatement[14629-14687]"
    }, {
      "left" : "String value = Integer.toString((newState) ? 1 : 0);",
      "right" : "String value = Integer.toString((newState) ? 1 : 0);",
      "info" : "VariableDeclarationStatement[14696-14748]:VariableDeclarationStatement[14696-14748]"
    }, {
      "left" : "cache.setValueForThreads(threadRootIds, columnName, value);",
      "right" : "cache.setValueForThreads(threadRootIds, columnName, value);",
      "info" : "ExpressionStatement[14757-14816]:ExpressionStatement[14757-14816]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[14828-14835]:Modifier[14828-14835]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14836-14840]:PrimitiveType[14836-14840]"
    }, {
      "left" : "removeFlagForThreadsFromCache",
      "right" : "removeFlagForThreadsFromCache",
      "info" : "SimpleName[14841-14870]:SimpleName[14841-14870]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[14871-14892]:SingleVariableDeclaration[14871-14892]"
    }, {
      "left" : "final List<Long> messageIds",
      "right" : "final List<Long> messageIds",
      "info" : "SingleVariableDeclaration[14894-14921]:SingleVariableDeclaration[14894-14921]"
    }, {
      "left" : "final Flag flag",
      "right" : "final Flag flag",
      "info" : "SingleVariableDeclaration[14935-14950]:SingleVariableDeclaration[14935-14950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14952-15180]:Block[14952-15180]"
    }, {
      "left" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "right" : "EmailProviderCache cache = EmailProviderCache.getCache(account.getUuid(), context);",
      "info" : "VariableDeclarationStatement[14963-15046]:VariableDeclarationStatement[14963-15046]"
    }, {
      "left" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "right" : "String columnName = LocalStore.getColumnNameForFlag(flag);",
      "info" : "VariableDeclarationStatement[15055-15113]:VariableDeclarationStatement[15055-15113]"
    }, {
      "left" : "cache.removeValueForThreads(messageIds, columnName);",
      "right" : "cache.removeValueForThreads(messageIds, columnName);",
      "info" : "ExpressionStatement[15122-15174]:ExpressionStatement[15122-15174]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[15187-15194]:Modifier[15187-15194]"
    }, {
      "left" : "MessagingController",
      "right" : "MessagingController",
      "info" : "SimpleName[15195-15214]:SimpleName[15195-15214]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[15215-15230]:SingleVariableDeclaration[15215-15230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15232-15477]:Block[15232-15477]"
    }, {
      "left" : "this.context = context;",
      "right" : "this.context = context;",
      "info" : "ExpressionStatement[15242-15265]:ExpressionStatement[15242-15265]"
    }, {
      "left" : "mThread = new Thread(this);",
      "right" : "mThread = new Thread(this);",
      "info" : "ExpressionStatement[15274-15301]:ExpressionStatement[15274-15301]"
    }, {
      "left" : "mThread.setName(\"MessagingController\");",
      "right" : "mThread.setName(\"MessagingController\");",
      "info" : "ExpressionStatement[15310-15349]:ExpressionStatement[15310-15349]"
    }, {
      "left" : "mThread.start();",
      "right" : "mThread.start();",
      "info" : "ExpressionStatement[15358-15374]:ExpressionStatement[15358-15374]"
    }, {
      "left" : "if (memorizingListener != null)",
      "right" : "if (memorizingListener != null)",
      "info" : "IfStatement[15383-15471]:IfStatement[15383-15471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15415-15471]:Block[15415-15471]"
    }, {
      "left" : "addListener(memorizingListener);",
      "right" : "addListener(memorizingListener);",
      "info" : "ExpressionStatement[15429-15461]:ExpressionStatement[15429-15461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15483-15489]:Modifier[15483-15489]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[15490-15502]:Modifier[15490-15502]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15503-15509]:Modifier[15503-15509]"
    }, {
      "left" : "MessagingController",
      "right" : "MessagingController",
      "info" : "SimpleType[15510-15529]:SimpleType[15510-15529]"
    }, {
      "left" : "getInstance",
      "right" : "getInstance",
      "info" : "SimpleName[15530-15541]:SimpleName[15530-15541]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[15542-15557]:SingleVariableDeclaration[15542-15557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15559-15702]:Block[15559-15702]"
    }, {
      "left" : "if (inst == null)",
      "right" : "if (inst == null)",
      "info" : "IfStatement[15569-15675]:IfStatement[15569-15675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15587-15675]:Block[15587-15675]"
    }, {
      "left" : "inst = new MessagingController(context.getApplicationContext());",
      "right" : "inst = new MessagingController(context.getApplicationContext());",
      "info" : "ExpressionStatement[15601-15665]:ExpressionStatement[15601-15665]"
    }, {
      "left" : "return inst;",
      "right" : "return inst;",
      "info" : "ReturnStatement[15684-15696]:ReturnStatement[15684-15696]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15708-15714]:Modifier[15708-15714]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[15715-15722]:PrimitiveType[15715-15722]"
    }, {
      "left" : "isBusy",
      "right" : "isBusy",
      "info" : "SimpleName[15723-15729]:SimpleName[15723-15729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15732-15761]:Block[15732-15761]"
    }, {
      "left" : "return mBusy;",
      "right" : "return mBusy;",
      "info" : "ReturnStatement[15742-15755]:ReturnStatement[15742-15755]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[15767-15776]:MarkerAnnotation[15767-15776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15781-15787]:Modifier[15781-15787]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15788-15792]:PrimitiveType[15788-15792]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[15793-15796]:SimpleName[15793-15796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15799-17877]:Block[15799-17877]"
    }, {
      "left" : "Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);",
      "right" : "Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);",
      "info" : "ExpressionStatement[15809-15871]:ExpressionStatement[15809-15871]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[15880-17871]:WhileStatement[15880-17871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15893-17871]:Block[15893-17871]"
    }, {
      "left" : "String commandDescription = null;",
      "right" : "String commandDescription = null;",
      "info" : "VariableDeclarationStatement[15907-15940]:VariableDeclarationStatement[15907-15940]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[15953-17834]:TryStatement[15953-17834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15957-17706]:Block[15957-17706]"
    }, {
      "left" : "final Command command = mCommands.take();",
      "right" : "final Command command = mCommands.take();",
      "info" : "VariableDeclarationStatement[15975-16016]:VariableDeclarationStatement[15975-16016]"
    }, {
      "left" : "if (command != null)",
      "right" : "if (command != null)",
      "info" : "IfStatement[16034-17692]:IfStatement[16034-17692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16055-17692]:Block[16055-17692]"
    }, {
      "left" : "commandDescription = command.description;",
      "right" : "commandDescription = command.description;",
      "info" : "ExpressionStatement[16077-16118]:ExpressionStatement[16077-16118]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[16140-16333]:IfStatement[16140-16333]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Running \" + (command.isForeground ? \"Foreground\" : \"Background\") + \" command '\" + command.description + \"', seq = \" + command.sequence);",
      "right" : "Log.i(K9.LOG_TAG, \"Running \" + (command.isForeground ? \"Foreground\" : \"Background\") + \" command '\" + command.description + \"', seq = \" + command.sequence);",
      "info" : "ExpressionStatement[16178-16333]:ExpressionStatement[16178-16333]"
    }, {
      "left" : "mBusy = true;",
      "right" : "mBusy = true;",
      "info" : "ExpressionStatement[16355-16368]:ExpressionStatement[16355-16368]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16389-17279]:TryStatement[16389-17279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16393-16464]:Block[16393-16464]"
    }, {
      "left" : "command.runnable.run();",
      "right" : "command.runnable.run();",
      "info" : "ExpressionStatement[16419-16442]:ExpressionStatement[16419-16442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16503-17279]:Block[16503-17279]"
    }, {
      "left" : "new Thread() {\n                            @Override\n                            public void run() {\n                                try {\n                                    sleep(30 * 1000);\n                                    mCommands.put(command);\n                                } catch (InterruptedException e) {\n                                    Log.e(K9.LOG_TAG, \"interrupted while putting a pending command for\"\n                                          + \" an unavailable account back into the queue.\"\n                                          + \" THIS SHOULD NEVER HAPPEN.\");\n                                }\n                            }\n                        } .start();",
      "right" : "new Thread() {\n                            @Override\n                            public void run() {\n                                try {\n                                    sleep(30 * 1000);\n                                    mCommands.put(command);\n                                } catch (InterruptedException e) {\n                                    Log.e(K9.LOG_TAG, \"interrupted while putting a pending command for\"\n                                          + \" an unavailable account back into the queue.\"\n                                          + \" THIS SHOULD NEVER HAPPEN.\");\n                                }\n                            }\n                        } .start();",
      "info" : "ExpressionStatement[16568-17257]:ExpressionStatement[16568-17257]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16611-16620]:MarkerAnnotation[16611-16620]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16649-16655]:Modifier[16649-16655]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16656-16660]:PrimitiveType[16656-16660]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[16661-16664]:SimpleName[16661-16664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16667-17221]:Block[16667-17221]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16701-17191]:TryStatement[16701-17191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16705-16854]:Block[16705-16854]"
    }, {
      "left" : "sleep(30 * 1000);",
      "right" : "sleep(30 * 1000);",
      "info" : "ExpressionStatement[16743-16760]:ExpressionStatement[16743-16760]"
    }, {
      "left" : "mCommands.put(command);",
      "right" : "mCommands.put(command);",
      "info" : "ExpressionStatement[16797-16820]:ExpressionStatement[16797-16820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16886-17191]:Block[16886-17191]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"interrupted while putting a pending command for\"\n                                          + \" an unavailable account back into the queue.\"\n                                          + \" THIS SHOULD NEVER HAPPEN.\");",
      "right" : "Log.e(K9.LOG_TAG, \"interrupted while putting a pending command for\"\n                                          + \" an unavailable account back into the queue.\"\n                                          + \" THIS SHOULD NEVER HAPPEN.\");",
      "info" : "ExpressionStatement[16924-17157]:ExpressionStatement[16924-17157]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[17301-17494]:IfStatement[17301-17494]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, (command.isForeground ? \"Foreground\" : \"Background\") +\n                              \" Command '\" + command.description + \"' completed\");",
      "right" : "Log.i(K9.LOG_TAG, (command.isForeground ? \"Foreground\" : \"Background\") +\n                              \" Command '\" + command.description + \"' completed\");",
      "info" : "ExpressionStatement[17339-17494]:ExpressionStatement[17339-17494]"
    }, {
      "left" : "for (MessagingListener l : getListeners(command.listener))",
      "right" : "for (MessagingListener l : getListeners(command.listener))",
      "info" : "EnhancedForStatement[17516-17674]:EnhancedForStatement[17516-17674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17575-17674]:Block[17575-17674]"
    }, {
      "left" : "l.controllerCommandCompleted(!mCommands.isEmpty());",
      "right" : "l.controllerCommandCompleted(!mCommands.isEmpty());",
      "info" : "ExpressionStatement[17601-17652]:ExpressionStatement[17601-17652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17727-17834]:Block[17727-17834]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Error running command '\" + commandDescription + \"'\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Error running command '\" + commandDescription + \"'\", e);",
      "info" : "ExpressionStatement[17745-17820]:ExpressionStatement[17745-17820]"
    }, {
      "left" : "mBusy = false;",
      "right" : "mBusy = false;",
      "info" : "ExpressionStatement[17847-17861]:ExpressionStatement[17847-17861]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17883-17890]:Modifier[17883-17890]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17891-17895]:PrimitiveType[17891-17895]"
    }, {
      "left" : "put",
      "right" : "put",
      "info" : "SimpleName[17896-17899]:SimpleName[17896-17899]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[17900-17918]:SingleVariableDeclaration[17900-17918]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[17920-17946]:SingleVariableDeclaration[17920-17946]"
    }, {
      "left" : "Runnable runnable",
      "right" : "Runnable runnable",
      "info" : "SingleVariableDeclaration[17948-17965]:SingleVariableDeclaration[17948-17965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17967-18044]:Block[17967-18044]"
    }, {
      "left" : "putCommand(mCommands, description, listener, runnable, true);",
      "right" : "putCommand(mCommands, description, listener, runnable, true);",
      "info" : "ExpressionStatement[17977-18038]:ExpressionStatement[17977-18038]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18050-18057]:Modifier[18050-18057]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18058-18062]:PrimitiveType[18058-18062]"
    }, {
      "left" : "putBackground",
      "right" : "putBackground",
      "info" : "SimpleName[18063-18076]:SimpleName[18063-18076]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[18077-18095]:SingleVariableDeclaration[18077-18095]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[18097-18123]:SingleVariableDeclaration[18097-18123]"
    }, {
      "left" : "Runnable runnable",
      "right" : "Runnable runnable",
      "info" : "SingleVariableDeclaration[18125-18142]:SingleVariableDeclaration[18125-18142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18144-18222]:Block[18144-18222]"
    }, {
      "left" : "putCommand(mCommands, description, listener, runnable, false);",
      "right" : "putCommand(mCommands, description, listener, runnable, false);",
      "info" : "ExpressionStatement[18154-18216]:ExpressionStatement[18154-18216]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18228-18235]:Modifier[18228-18235]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18236-18240]:PrimitiveType[18236-18240]"
    }, {
      "left" : "putCommand",
      "right" : "putCommand",
      "info" : "SimpleName[18241-18251]:SimpleName[18241-18251]"
    }, {
      "left" : "BlockingQueue<Command> queue",
      "right" : "BlockingQueue<Command> queue",
      "info" : "SingleVariableDeclaration[18252-18280]:SingleVariableDeclaration[18252-18280]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[18282-18300]:SingleVariableDeclaration[18282-18300]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[18302-18328]:SingleVariableDeclaration[18302-18328]"
    }, {
      "left" : "Runnable runnable",
      "right" : "Runnable runnable",
      "info" : "SingleVariableDeclaration[18330-18347]:SingleVariableDeclaration[18330-18347]"
    }, {
      "left" : "boolean isForeground",
      "right" : "boolean isForeground",
      "info" : "SingleVariableDeclaration[18349-18369]:SingleVariableDeclaration[18349-18369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18371-19040]:Block[18371-19040]"
    }, {
      "left" : "int retries = 10;",
      "right" : "int retries = 10;",
      "info" : "VariableDeclarationStatement[18381-18398]:VariableDeclarationStatement[18381-18398]"
    }, {
      "left" : "Exception e = null;",
      "right" : "Exception e = null;",
      "info" : "VariableDeclarationStatement[18407-18426]:VariableDeclarationStatement[18407-18426]"
    }, {
      "left" : "while (retries-- > 0)",
      "right" : "while (retries-- > 0)",
      "info" : "WhileStatement[18435-19006]:WhileStatement[18435-19006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18457-19006]:Block[18457-19006]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18471-18996]:TryStatement[18471-18996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18475-18793]:Block[18475-18793]"
    }, {
      "left" : "Command command = new Command();",
      "right" : "Command command = new Command();",
      "info" : "VariableDeclarationStatement[18493-18525]:VariableDeclarationStatement[18493-18525]"
    }, {
      "left" : "command.listener = listener;",
      "right" : "command.listener = listener;",
      "info" : "ExpressionStatement[18542-18570]:ExpressionStatement[18542-18570]"
    }, {
      "left" : "command.runnable = runnable;",
      "right" : "command.runnable = runnable;",
      "info" : "ExpressionStatement[18587-18615]:ExpressionStatement[18587-18615]"
    }, {
      "left" : "command.description = description;",
      "right" : "command.description = description;",
      "info" : "ExpressionStatement[18632-18666]:ExpressionStatement[18632-18666]"
    }, {
      "left" : "command.isForeground = isForeground;",
      "right" : "command.isForeground = isForeground;",
      "info" : "ExpressionStatement[18683-18719]:ExpressionStatement[18683-18719]"
    }, {
      "left" : "queue.put(command);",
      "right" : "queue.put(command);",
      "info" : "ExpressionStatement[18736-18755]:ExpressionStatement[18736-18755]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[18772-18779]:ReturnStatement[18772-18779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18826-18996]:Block[18826-18996]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18844-18958]:TryStatement[18844-18958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18848-18906]:Block[18848-18906]"
    }, {
      "left" : "Thread.sleep(200);",
      "right" : "Thread.sleep(200);",
      "info" : "ExpressionStatement[18870-18888]:ExpressionStatement[18870-18888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18939-18958]:Block[18939-18958]"
    }, {
      "left" : "e = ie;",
      "right" : "e = ie;",
      "info" : "ExpressionStatement[18975-18982]:ExpressionStatement[18975-18982]"
    }, {
      "left" : "throw new Error(e);",
      "right" : "throw new Error(e);",
      "info" : "ThrowStatement[19015-19034]:ThrowStatement[19015-19034]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19047-19053]:Modifier[19047-19053]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19054-19058]:PrimitiveType[19054-19058]"
    }, {
      "left" : "addListener",
      "right" : "addListener",
      "info" : "SimpleName[19059-19070]:SimpleName[19059-19070]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[19071-19097]:SingleVariableDeclaration[19071-19097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19099-19175]:Block[19099-19175]"
    }, {
      "left" : "mListeners.add(listener);",
      "right" : "mListeners.add(listener);",
      "info" : "ExpressionStatement[19109-19134]:ExpressionStatement[19109-19134]"
    }, {
      "left" : "refreshListener(listener);",
      "right" : "refreshListener(listener);",
      "info" : "ExpressionStatement[19143-19169]:ExpressionStatement[19143-19169]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19181-19187]:Modifier[19181-19187]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19188-19192]:PrimitiveType[19188-19192]"
    }, {
      "left" : "refreshListener",
      "right" : "refreshListener",
      "info" : "SimpleName[19193-19208]:SimpleName[19193-19208]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[19209-19235]:SingleVariableDeclaration[19209-19235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19237-19371]:Block[19237-19371]"
    }, {
      "left" : "if (memorizingListener != null && listener != null)",
      "right" : "if (memorizingListener != null && listener != null)",
      "info" : "IfStatement[19247-19365]:IfStatement[19247-19365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19299-19365]:Block[19299-19365]"
    }, {
      "left" : "memorizingListener.refreshOther(listener);",
      "right" : "memorizingListener.refreshOther(listener);",
      "info" : "ExpressionStatement[19313-19355]:ExpressionStatement[19313-19355]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19377-19383]:Modifier[19377-19383]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19384-19388]:PrimitiveType[19384-19388]"
    }, {
      "left" : "removeListener",
      "right" : "removeListener",
      "info" : "SimpleName[19389-19403]:SimpleName[19389-19403]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[19404-19430]:SingleVariableDeclaration[19404-19430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19432-19476]:Block[19432-19476]"
    }, {
      "left" : "mListeners.remove(listener);",
      "right" : "mListeners.remove(listener);",
      "info" : "ExpressionStatement[19442-19470]:ExpressionStatement[19442-19470]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19482-19488]:Modifier[19482-19488]"
    }, {
      "left" : "Set<MessagingListener>",
      "right" : "Set<MessagingListener>",
      "info" : "ParameterizedType[19489-19511]:ParameterizedType[19489-19511]"
    }, {
      "left" : "getListeners",
      "right" : "getListeners",
      "info" : "SimpleName[19512-19524]:SimpleName[19512-19524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19527-19561]:Block[19527-19561]"
    }, {
      "left" : "return mListeners;",
      "right" : "return mListeners;",
      "info" : "ReturnStatement[19537-19555]:ReturnStatement[19537-19555]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19568-19574]:Modifier[19568-19574]"
    }, {
      "left" : "Set<MessagingListener>",
      "right" : "Set<MessagingListener>",
      "info" : "ParameterizedType[19575-19597]:ParameterizedType[19575-19597]"
    }, {
      "left" : "getListeners",
      "right" : "getListeners",
      "info" : "SimpleName[19598-19610]:SimpleName[19598-19610]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[19611-19637]:SingleVariableDeclaration[19611-19637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19639-19867]:Block[19639-19867]"
    }, {
      "left" : "if (listener == null)",
      "right" : "if (listener == null)",
      "info" : "IfStatement[19649-19713]:IfStatement[19649-19713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19671-19713]:Block[19671-19713]"
    }, {
      "left" : "return mListeners;",
      "right" : "return mListeners;",
      "info" : "ReturnStatement[19685-19703]:ReturnStatement[19685-19703]"
    }, {
      "left" : "Set<MessagingListener> listeners = new HashSet<MessagingListener>(mListeners);",
      "right" : "Set<MessagingListener> listeners = new HashSet<MessagingListener>(mListeners);",
      "info" : "VariableDeclarationStatement[19723-19801]:VariableDeclarationStatement[19723-19801]"
    }, {
      "left" : "listeners.add(listener);",
      "right" : "listeners.add(listener);",
      "info" : "ExpressionStatement[19810-19834]:ExpressionStatement[19810-19834]"
    }, {
      "left" : "return listeners;",
      "right" : "return listeners;",
      "info" : "ReturnStatement[19843-19860]:ReturnStatement[19843-19860]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20416-20422]:Modifier[20416-20422]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20423-20427]:PrimitiveType[20423-20427]"
    }, {
      "left" : "listFolders",
      "right" : "listFolders",
      "info" : "SimpleName[20428-20439]:SimpleName[20428-20439]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[20440-20461]:SingleVariableDeclaration[20440-20461]"
    }, {
      "left" : "final boolean refreshRemote",
      "right" : "final boolean refreshRemote",
      "info" : "SingleVariableDeclaration[20463-20490]:SingleVariableDeclaration[20463-20490]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[20492-20524]:SingleVariableDeclaration[20492-20524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20526-20731]:Block[20526-20731]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                listFoldersSynchronous(account, refreshRemote, listener);\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                listFoldersSynchronous(account, refreshRemote, listener);\n            }\n        });",
      "info" : "ExpressionStatement[20536-20725]:ExpressionStatement[20536-20725]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20584-20593]:MarkerAnnotation[20584-20593]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20606-20612]:Modifier[20606-20612]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20613-20617]:PrimitiveType[20613-20617]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[20618-20621]:SimpleName[20618-20621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20624-20713]:Block[20624-20713]"
    }, {
      "left" : "listFoldersSynchronous(account, refreshRemote, listener);",
      "right" : "listFoldersSynchronous(account, refreshRemote, listener);",
      "info" : "ExpressionStatement[20642-20699]:ExpressionStatement[20642-20699]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21219-21225]:Modifier[21219-21225]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21226-21230]:PrimitiveType[21226-21230]"
    }, {
      "left" : "listFoldersSynchronous",
      "right" : "listFoldersSynchronous",
      "info" : "SimpleName[21231-21253]:SimpleName[21231-21253]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[21254-21275]:SingleVariableDeclaration[21254-21275]"
    }, {
      "left" : "final boolean refreshRemote",
      "right" : "final boolean refreshRemote",
      "info" : "SingleVariableDeclaration[21277-21304]:SingleVariableDeclaration[21277-21304]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[21306-21338]:SingleVariableDeclaration[21306-21338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21340-22741]:Block[21340-22741]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[21350-21455]:EnhancedForStatement[21350-21455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21401-21455]:Block[21401-21455]"
    }, {
      "left" : "l.listFoldersStarted(account);",
      "right" : "l.listFoldersStarted(account);",
      "info" : "ExpressionStatement[21415-21445]:ExpressionStatement[21415-21445]"
    }, {
      "left" : "List <? extends Folder > localFolders = null;",
      "right" : "List <? extends Folder > localFolders = null;",
      "info" : "VariableDeclarationStatement[21464-21509]:VariableDeclarationStatement[21464-21509]"
    }, {
      "left" : "if (!account.isAvailable(context))",
      "right" : "if (!account.isAvailable(context))",
      "info" : "IfStatement[21518-22619]:IfStatement[21518-22619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21553-21641]:Block[21553-21641]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"not listing folders of unavailable account\");",
      "right" : "Log.i(K9.LOG_TAG, \"not listing folders of unavailable account\");",
      "info" : "ExpressionStatement[21567-21631]:ExpressionStatement[21567-21631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21647-22619]:Block[21647-22619]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[21661-22609]:TryStatement[21661-22609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21665-22124]:Block[21665-22124]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[21683-21726]:VariableDeclarationStatement[21683-21726]"
    }, {
      "left" : "localFolders = localStore.getPersonalNamespaces(false);",
      "right" : "localFolders = localStore.getPersonalNamespaces(false);",
      "info" : "ExpressionStatement[21743-21798]:ExpressionStatement[21743-21798]"
    }, {
      "left" : "if (refreshRemote || localFolders.isEmpty())",
      "right" : "if (refreshRemote || localFolders.isEmpty())",
      "info" : "IfStatement[21816-21964]:IfStatement[21816-21964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21861-21964]:Block[21861-21964]"
    }, {
      "left" : "doRefreshRemote(account, listener);",
      "right" : "doRefreshRemote(account, listener);",
      "info" : "ExpressionStatement[21883-21918]:ExpressionStatement[21883-21918]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[21939-21946]:ReturnStatement[21939-21946]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[21982-22110]:EnhancedForStatement[21982-22110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22033-22110]:Block[22033-22110]"
    }, {
      "left" : "l.listFolders(account, localFolders);",
      "right" : "l.listFolders(account, localFolders);",
      "info" : "ExpressionStatement[22055-22092]:ExpressionStatement[22055-22092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22145-22389]:Block[22145-22389]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[22163-22299]:EnhancedForStatement[22163-22299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22214-22299]:Block[22214-22299]"
    }, {
      "left" : "l.listFoldersFailed(account, e.getMessage());",
      "right" : "l.listFoldersFailed(account, e.getMessage());",
      "info" : "ExpressionStatement[22236-22281]:ExpressionStatement[22236-22281]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[22317-22351]:ExpressionStatement[22317-22351]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[22368-22375]:ReturnStatement[22368-22375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22398-22609]:Block[22398-22609]"
    }, {
      "left" : "if (localFolders != null)",
      "right" : "if (localFolders != null)",
      "info" : "IfStatement[22416-22595]:IfStatement[22416-22595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22442-22595]:Block[22442-22595]"
    }, {
      "left" : "for (Folder localFolder : localFolders)",
      "right" : "for (Folder localFolder : localFolders)",
      "info" : "EnhancedForStatement[22464-22577]:EnhancedForStatement[22464-22577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22504-22577]:Block[22504-22577]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[22530-22555]:ExpressionStatement[22530-22555]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[22629-22735]:EnhancedForStatement[22629-22735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22680-22735]:Block[22680-22735]"
    }, {
      "left" : "l.listFoldersFinished(account);",
      "right" : "l.listFoldersFinished(account);",
      "info" : "ExpressionStatement[22694-22725]:ExpressionStatement[22694-22725]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[22747-22754]:Modifier[22747-22754]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22755-22759]:PrimitiveType[22755-22759]"
    }, {
      "left" : "doRefreshRemote",
      "right" : "doRefreshRemote",
      "info" : "SimpleName[22760-22775]:SimpleName[22760-22775]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[22776-22797]:SingleVariableDeclaration[22776-22797]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[22799-22831]:SingleVariableDeclaration[22799-22831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22833-26100]:Block[22833-26100]"
    }, {
      "left" : "put(\"doRefreshRemote\", listener, new Runnable() {\n            @Override\n            public void run() {\n                List <? extends Folder > localFolders = null;\n                try {\n                    Store store = account.getRemoteStore();\n\n                    List <? extends Folder > remoteFolders = store.getPersonalNamespaces(false);\n\n                    LocalStore localStore = account.getLocalStore();\n                    Set<String> remoteFolderNames = new HashSet<String>();\n                    List<LocalFolder> foldersToCreate = new LinkedList<LocalFolder>();\n\n                    localFolders = localStore.getPersonalNamespaces(false);\n                    Set<String> localFolderNames = new HashSet<String>();\n                    for (Folder localFolder : localFolders) {\n                        localFolderNames.add(localFolder.getName());\n                    }\n                    for (Folder remoteFolder : remoteFolders) {\n                        if (localFolderNames.contains(remoteFolder.getName()) == false) {\n                            LocalFolder localFolder = localStore.getFolder(remoteFolder.getName());\n                            foldersToCreate.add(localFolder);\n                        }\n                        remoteFolderNames.add(remoteFolder.getName());\n                    }\n                    localStore.createFolders(foldersToCreate, account.getDisplayCount());\n\n                    localFolders = localStore.getPersonalNamespaces(false);\n\n                    /*\n                     * Clear out any folders that are no longer on the remote store.\n                     */\n                    for (Folder localFolder : localFolders) {\n                        String localFolderName = localFolder.getName();\n\n                        // FIXME: This is a hack used to clean up when we accidentally created the\n                        //        special placeholder folder \"-NONE-\".\n                        if (K9.FOLDER_NONE.equals(localFolderName)) {\n                            localFolder.delete(false);\n                        }\n\n                        if (!account.isSpecialFolder(localFolderName) &&\n                                !remoteFolderNames.contains(localFolderName)) {\n                            localFolder.delete(false);\n                        }\n                    }\n\n                    localFolders = localStore.getPersonalNamespaces(false);\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.listFolders(account, localFolders);\n                    }\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.listFoldersFinished(account);\n                    }\n                } catch (Exception e) {\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.listFoldersFailed(account, \"\");\n                    }\n                    addErrorMessage(account, null, e);\n                } finally {\n                    if (localFolders != null) {\n                        for (Folder localFolder : localFolders) {\n                            closeFolder(localFolder);\n                        }\n                    }\n                }\n            }\n        });",
      "right" : "put(\"doRefreshRemote\", listener, new Runnable() {\n            @Override\n            public void run() {\n                List <? extends Folder > localFolders = null;\n                try {\n                    Store store = account.getRemoteStore();\n\n                    List <? extends Folder > remoteFolders = store.getPersonalNamespaces(false);\n\n                    LocalStore localStore = account.getLocalStore();\n                    Set<String> remoteFolderNames = new HashSet<String>();\n                    List<LocalFolder> foldersToCreate = new LinkedList<LocalFolder>();\n\n                    localFolders = localStore.getPersonalNamespaces(false);\n                    Set<String> localFolderNames = new HashSet<String>();\n                    for (Folder localFolder : localFolders) {\n                        localFolderNames.add(localFolder.getName());\n                    }\n                    for (Folder remoteFolder : remoteFolders) {\n                        if (localFolderNames.contains(remoteFolder.getName()) == false) {\n                            LocalFolder localFolder = localStore.getFolder(remoteFolder.getName());\n                            foldersToCreate.add(localFolder);\n                        }\n                        remoteFolderNames.add(remoteFolder.getName());\n                    }\n                    localStore.createFolders(foldersToCreate, account.getDisplayCount());\n\n                    localFolders = localStore.getPersonalNamespaces(false);\n\n                    /*\n                     * Clear out any folders that are no longer on the remote store.\n                     */\n                    for (Folder localFolder : localFolders) {\n                        String localFolderName = localFolder.getName();\n\n                        // FIXME: This is a hack used to clean up when we accidentally created the\n                        //        special placeholder folder \"-NONE-\".\n                        if (K9.FOLDER_NONE.equals(localFolderName)) {\n                            localFolder.delete(false);\n                        }\n\n                        if (!account.isSpecialFolder(localFolderName) &&\n                                !remoteFolderNames.contains(localFolderName)) {\n                            localFolder.delete(false);\n                        }\n                    }\n\n                    localFolders = localStore.getPersonalNamespaces(false);\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.listFolders(account, localFolders);\n                    }\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.listFoldersFinished(account);\n                    }\n                } catch (Exception e) {\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.listFoldersFailed(account, \"\");\n                    }\n                    addErrorMessage(account, null, e);\n                } finally {\n                    if (localFolders != null) {\n                        for (Folder localFolder : localFolders) {\n                            closeFolder(localFolder);\n                        }\n                    }\n                }\n            }\n        });",
      "info" : "ExpressionStatement[22843-26094]:ExpressionStatement[22843-26094]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[22905-22914]:MarkerAnnotation[22905-22914]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22927-22933]:Modifier[22927-22933]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22934-22938]:PrimitiveType[22934-22938]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[22939-22942]:SimpleName[22939-22942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22945-26082]:Block[22945-26082]"
    }, {
      "left" : "List <? extends Folder > localFolders = null;",
      "right" : "List <? extends Folder > localFolders = null;",
      "info" : "VariableDeclarationStatement[22963-23008]:VariableDeclarationStatement[22963-23008]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[23025-26068]:TryStatement[23025-26068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23029-25576]:Block[23029-25576]"
    }, {
      "left" : "Store store = account.getRemoteStore();",
      "right" : "Store store = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[23051-23090]:VariableDeclarationStatement[23051-23090]"
    }, {
      "left" : "List <? extends Folder > remoteFolders = store.getPersonalNamespaces(false);",
      "right" : "List <? extends Folder > remoteFolders = store.getPersonalNamespaces(false);",
      "info" : "VariableDeclarationStatement[23112-23188]:VariableDeclarationStatement[23112-23188]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[23210-23258]:VariableDeclarationStatement[23210-23258]"
    }, {
      "left" : "Set<String> remoteFolderNames = new HashSet<String>();",
      "right" : "Set<String> remoteFolderNames = new HashSet<String>();",
      "info" : "VariableDeclarationStatement[23279-23333]:VariableDeclarationStatement[23279-23333]"
    }, {
      "left" : "List<LocalFolder> foldersToCreate = new LinkedList<LocalFolder>();",
      "right" : "List<LocalFolder> foldersToCreate = new LinkedList<LocalFolder>();",
      "info" : "VariableDeclarationStatement[23354-23420]:VariableDeclarationStatement[23354-23420]"
    }, {
      "left" : "localFolders = localStore.getPersonalNamespaces(false);",
      "right" : "localFolders = localStore.getPersonalNamespaces(false);",
      "info" : "ExpressionStatement[23442-23497]:ExpressionStatement[23442-23497]"
    }, {
      "left" : "Set<String> localFolderNames = new HashSet<String>();",
      "right" : "Set<String> localFolderNames = new HashSet<String>();",
      "info" : "VariableDeclarationStatement[23518-23571]:VariableDeclarationStatement[23518-23571]"
    }, {
      "left" : "for (Folder localFolder : localFolders)",
      "right" : "for (Folder localFolder : localFolders)",
      "info" : "EnhancedForStatement[23592-23724]:EnhancedForStatement[23592-23724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23632-23724]:Block[23632-23724]"
    }, {
      "left" : "localFolderNames.add(localFolder.getName());",
      "right" : "localFolderNames.add(localFolder.getName());",
      "info" : "ExpressionStatement[23658-23702]:ExpressionStatement[23658-23702]"
    }, {
      "left" : "for (Folder remoteFolder : remoteFolders)",
      "right" : "for (Folder remoteFolder : remoteFolders)",
      "info" : "EnhancedForStatement[23745-24159]:EnhancedForStatement[23745-24159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23787-24159]:Block[23787-24159]"
    }, {
      "left" : "if (localFolderNames.contains(remoteFolder.getName()) == false)",
      "right" : "if (localFolderNames.contains(remoteFolder.getName()) == false)",
      "info" : "IfStatement[23813-24066]:IfStatement[23813-24066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23877-24066]:Block[23877-24066]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(remoteFolder.getName());",
      "right" : "LocalFolder localFolder = localStore.getFolder(remoteFolder.getName());",
      "info" : "VariableDeclarationStatement[23907-23978]:VariableDeclarationStatement[23907-23978]"
    }, {
      "left" : "foldersToCreate.add(localFolder);",
      "right" : "foldersToCreate.add(localFolder);",
      "info" : "ExpressionStatement[24007-24040]:ExpressionStatement[24007-24040]"
    }, {
      "left" : "remoteFolderNames.add(remoteFolder.getName());",
      "right" : "remoteFolderNames.add(remoteFolder.getName());",
      "info" : "ExpressionStatement[24091-24137]:ExpressionStatement[24091-24137]"
    }, {
      "left" : "localStore.createFolders(foldersToCreate, account.getDisplayCount());",
      "right" : "localStore.createFolders(foldersToCreate, account.getDisplayCount());",
      "info" : "ExpressionStatement[24180-24249]:ExpressionStatement[24180-24249]"
    }, {
      "left" : "localFolders = localStore.getPersonalNamespaces(false);",
      "right" : "localFolders = localStore.getPersonalNamespaces(false);",
      "info" : "ExpressionStatement[24271-24326]:ExpressionStatement[24271-24326]"
    }, {
      "left" : "for (Folder localFolder : localFolders)",
      "right" : "for (Folder localFolder : localFolders)",
      "info" : "EnhancedForStatement[24480-25172]:EnhancedForStatement[24480-25172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24520-25172]:Block[24520-25172]"
    }, {
      "left" : "String localFolderName = localFolder.getName();",
      "right" : "String localFolderName = localFolder.getName();",
      "info" : "VariableDeclarationStatement[24546-24593]:VariableDeclarationStatement[24546-24593]"
    }, {
      "left" : "if (K9.FOLDER_NONE.equals(localFolderName))",
      "right" : "if (K9.FOLDER_NONE.equals(localFolderName))",
      "info" : "IfStatement[24789-24915]:IfStatement[24789-24915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24833-24915]:Block[24833-24915]"
    }, {
      "left" : "localFolder.delete(false);",
      "right" : "localFolder.delete(false);",
      "info" : "ExpressionStatement[24863-24889]:ExpressionStatement[24863-24889]"
    }, {
      "left" : "if (!account.isSpecialFolder(localFolderName) &&\n                                !remoteFolderNames.contains(localFolderName))",
      "right" : "if (!account.isSpecialFolder(localFolderName) &&\n                                !remoteFolderNames.contains(localFolderName))",
      "info" : "IfStatement[24941-25150]:IfStatement[24941-25150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25068-25150]:Block[25068-25150]"
    }, {
      "left" : "localFolder.delete(false);",
      "right" : "localFolder.delete(false);",
      "info" : "ExpressionStatement[25098-25124]:ExpressionStatement[25098-25124]"
    }, {
      "left" : "localFolders = localStore.getPersonalNamespaces(false);",
      "right" : "localFolders = localStore.getPersonalNamespaces(false);",
      "info" : "ExpressionStatement[25194-25249]:ExpressionStatement[25194-25249]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[25271-25407]:EnhancedForStatement[25271-25407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25322-25407]:Block[25322-25407]"
    }, {
      "left" : "l.listFolders(account, localFolders);",
      "right" : "l.listFolders(account, localFolders);",
      "info" : "ExpressionStatement[25348-25385]:ExpressionStatement[25348-25385]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[25428-25558]:EnhancedForStatement[25428-25558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25479-25558]:Block[25479-25558]"
    }, {
      "left" : "l.listFoldersFinished(account);",
      "right" : "l.listFoldersFinished(account);",
      "info" : "ExpressionStatement[25505-25536]:ExpressionStatement[25505-25536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25597-25824]:Block[25597-25824]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[25619-25751]:EnhancedForStatement[25619-25751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25670-25751]:Block[25670-25751]"
    }, {
      "left" : "l.listFoldersFailed(account, \"\");",
      "right" : "l.listFoldersFailed(account, \"\");",
      "info" : "ExpressionStatement[25696-25729]:ExpressionStatement[25696-25729]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[25772-25806]:ExpressionStatement[25772-25806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25833-26068]:Block[25833-26068]"
    }, {
      "left" : "if (localFolders != null)",
      "right" : "if (localFolders != null)",
      "info" : "IfStatement[25855-26050]:IfStatement[25855-26050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25881-26050]:Block[25881-26050]"
    }, {
      "left" : "for (Folder localFolder : localFolders)",
      "right" : "for (Folder localFolder : localFolders)",
      "info" : "EnhancedForStatement[25907-26028]:EnhancedForStatement[25907-26028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25947-26028]:Block[25947-26028]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[25977-26002]:ExpressionStatement[25977-26002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26232-26238]:Modifier[26232-26238]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26239-26243]:PrimitiveType[26239-26243]"
    }, {
      "left" : "searchLocalMessages",
      "right" : "searchLocalMessages",
      "info" : "SimpleName[26244-26263]:SimpleName[26244-26263]"
    }, {
      "left" : "final LocalSearch search",
      "right" : "final LocalSearch search",
      "info" : "SingleVariableDeclaration[26264-26288]:SingleVariableDeclaration[26264-26288]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[26290-26322]:SingleVariableDeclaration[26290-26322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26324-26521]:Block[26324-26521]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                searchLocalMessagesSynchronous(search, listener);\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                searchLocalMessagesSynchronous(search, listener);\n            }\n        });",
      "info" : "ExpressionStatement[26334-26515]:ExpressionStatement[26334-26515]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[26382-26391]:MarkerAnnotation[26382-26391]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26404-26410]:Modifier[26404-26410]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26411-26415]:PrimitiveType[26411-26415]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[26416-26419]:SimpleName[26416-26419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26422-26503]:Block[26422-26503]"
    }, {
      "left" : "searchLocalMessagesSynchronous(search, listener);",
      "right" : "searchLocalMessagesSynchronous(search, listener);",
      "info" : "ExpressionStatement[26440-26489]:ExpressionStatement[26440-26489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26527-26533]:Modifier[26527-26533]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26534-26538]:PrimitiveType[26534-26538]"
    }, {
      "left" : "searchLocalMessagesSynchronous",
      "right" : "searchLocalMessagesSynchronous",
      "info" : "SimpleName[26539-26569]:SimpleName[26539-26569]"
    }, {
      "left" : "final LocalSearch search",
      "right" : "final LocalSearch search",
      "info" : "SingleVariableDeclaration[26570-26594]:SingleVariableDeclaration[26570-26594]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[26596-26628]:SingleVariableDeclaration[26596-26628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26630-29192]:Block[26630-29192]"
    }, {
      "left" : "final AccountStats stats = new AccountStats();",
      "right" : "final AccountStats stats = new AccountStats();",
      "info" : "VariableDeclarationStatement[26640-26686]:VariableDeclarationStatement[26640-26686]"
    }, {
      "left" : "final Set<String> uuidSet = new HashSet<String>(Arrays.asList(search.getAccountUuids()));",
      "right" : "final Set<String> uuidSet = new HashSet<String>(Arrays.asList(search.getAccountUuids()));",
      "info" : "VariableDeclarationStatement[26695-26784]:VariableDeclarationStatement[26695-26784]"
    }, {
      "left" : "List<Account> accounts = Preferences.getPreferences(context).getAccounts();",
      "right" : "List<Account> accounts = Preferences.getPreferences(context).getAccounts();",
      "info" : "VariableDeclarationStatement[26793-26868]:VariableDeclarationStatement[26793-26868]"
    }, {
      "left" : "boolean allAccounts = uuidSet.contains(SearchSpecification.ALL_ACCOUNTS);",
      "right" : "boolean allAccounts = uuidSet.contains(SearchSpecification.ALL_ACCOUNTS);",
      "info" : "VariableDeclarationStatement[26877-26950]:VariableDeclarationStatement[26877-26950]"
    }, {
      "left" : "for (final Account account : accounts)",
      "right" : "for (final Account account : accounts)",
      "info" : "EnhancedForStatement[27038-29055]:EnhancedForStatement[27038-29055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27077-29055]:Block[27077-29055]"
    }, {
      "left" : "if (!allAccounts && !uuidSet.contains(account.getUuid()))",
      "right" : "if (!allAccounts && !uuidSet.contains(account.getUuid()))",
      "info" : "IfStatement[27092-27191]:IfStatement[27092-27191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27150-27191]:Block[27150-27191]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[27168-27177]:ContinueStatement[27168-27177]"
    }, {
      "left" : "MessageRetrievalListener retrievalListener = new MessageRetrievalListener<LocalMessage>() {\n                @Override\n                public void messageStarted(String message, int number, int ofTotal) {}\n                @Override\n                public void messagesFinished(int number) {}\n                @Override\n\n                public void messageFinished(LocalMessage message, int number, int ofTotal) {\n                    if (!isMessageSuppressed(message)) {\n                        List<LocalMessage> messages = new ArrayList<LocalMessage>();\n\n                        messages.add(message);\n                        stats.unreadMessageCount += (!message.isSet(Flag.SEEN)) ? 1 : 0;\n                        stats.flaggedMessageCount += (message.isSet(Flag.FLAGGED)) ? 1 : 0;\n                        if (listener != null) {\n                            listener.listLocalMessagesAddMessages(account, null, messages);\n                        }\n                    }\n                }\n            };",
      "right" : "MessageRetrievalListener retrievalListener = new MessageRetrievalListener<LocalMessage>() {\n                @Override\n                public void messageStarted(String message, int number, int ofTotal) {}\n                @Override\n                public void messagesFinished(int number) {}\n                @Override\n\n                public void messageFinished(LocalMessage message, int number, int ofTotal) {\n                    if (!isMessageSuppressed(message)) {\n                        List<LocalMessage> messages = new ArrayList<LocalMessage>();\n\n                        messages.add(message);\n                        stats.unreadMessageCount += (!message.isSet(Flag.SEEN)) ? 1 : 0;\n                        stats.flaggedMessageCount += (message.isSet(Flag.FLAGGED)) ? 1 : 0;\n                        if (listener != null) {\n                            listener.listLocalMessagesAddMessages(account, null, messages);\n                        }\n                    }\n                }\n            };",
      "info" : "VariableDeclarationStatement[27263-28265]:VariableDeclarationStatement[27263-28265]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27371-27380]:MarkerAnnotation[27371-27380]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27397-27403]:Modifier[27397-27403]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27404-27408]:PrimitiveType[27404-27408]"
    }, {
      "left" : "messageStarted",
      "right" : "messageStarted",
      "info" : "SimpleName[27409-27423]:SimpleName[27409-27423]"
    }, {
      "left" : "String message",
      "right" : "String message",
      "info" : "SingleVariableDeclaration[27424-27438]:SingleVariableDeclaration[27424-27438]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[27440-27450]:SingleVariableDeclaration[27440-27450]"
    }, {
      "left" : "int ofTotal",
      "right" : "int ofTotal",
      "info" : "SingleVariableDeclaration[27452-27463]:SingleVariableDeclaration[27452-27463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27465-27467]:Block[27465-27467]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27484-27493]:MarkerAnnotation[27484-27493]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27510-27516]:Modifier[27510-27516]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27517-27521]:PrimitiveType[27517-27521]"
    }, {
      "left" : "messagesFinished",
      "right" : "messagesFinished",
      "info" : "SimpleName[27522-27538]:SimpleName[27522-27538]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[27539-27549]:SingleVariableDeclaration[27539-27549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27551-27553]:Block[27551-27553]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[27570-27579]:MarkerAnnotation[27570-27579]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27597-27603]:Modifier[27597-27603]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27604-27608]:PrimitiveType[27604-27608]"
    }, {
      "left" : "messageFinished",
      "right" : "messageFinished",
      "info" : "SimpleName[27609-27624]:SimpleName[27609-27624]"
    }, {
      "left" : "LocalMessage message",
      "right" : "LocalMessage message",
      "info" : "SingleVariableDeclaration[27625-27645]:SingleVariableDeclaration[27625-27645]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[27647-27657]:SingleVariableDeclaration[27647-27657]"
    }, {
      "left" : "int ofTotal",
      "right" : "int ofTotal",
      "info" : "SingleVariableDeclaration[27659-27670]:SingleVariableDeclaration[27659-27670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27672-28250]:Block[27672-28250]"
    }, {
      "left" : "if (!isMessageSuppressed(message))",
      "right" : "if (!isMessageSuppressed(message))",
      "info" : "IfStatement[27694-28232]:IfStatement[27694-28232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27729-28232]:Block[27729-28232]"
    }, {
      "left" : "List<LocalMessage> messages = new ArrayList<LocalMessage>();",
      "right" : "List<LocalMessage> messages = new ArrayList<LocalMessage>();",
      "info" : "VariableDeclarationStatement[27755-27815]:VariableDeclarationStatement[27755-27815]"
    }, {
      "left" : "messages.add(message);",
      "right" : "messages.add(message);",
      "info" : "ExpressionStatement[27841-27863]:ExpressionStatement[27841-27863]"
    }, {
      "left" : "stats.unreadMessageCount += (!message.isSet(Flag.SEEN)) ? 1 : 0;",
      "right" : "stats.unreadMessageCount += (!message.isSet(Flag.SEEN)) ? 1 : 0;",
      "info" : "ExpressionStatement[27888-27952]:ExpressionStatement[27888-27952]"
    }, {
      "left" : "stats.flaggedMessageCount += (message.isSet(Flag.FLAGGED)) ? 1 : 0;",
      "right" : "stats.flaggedMessageCount += (message.isSet(Flag.FLAGGED)) ? 1 : 0;",
      "info" : "ExpressionStatement[27977-28044]:ExpressionStatement[27977-28044]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[28069-28210]:IfStatement[28069-28210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28091-28210]:Block[28091-28210]"
    }, {
      "left" : "listener.listLocalMessagesAddMessages(account, null, messages);",
      "right" : "listener.listLocalMessagesAddMessages(account, null, messages);",
      "info" : "ExpressionStatement[28121-28184]:ExpressionStatement[28121-28184]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[28332-28435]:IfStatement[28332-28435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28354-28435]:Block[28354-28435]"
    }, {
      "left" : "listener.listLocalMessagesStarted(account, null);",
      "right" : "listener.listLocalMessagesStarted(account, null);",
      "info" : "ExpressionStatement[28372-28421]:ExpressionStatement[28372-28421]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28505-29045]:TryStatement[28505-29045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28509-28662]:Block[28509-28662]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[28527-28575]:VariableDeclarationStatement[28527-28575]"
    }, {
      "left" : "localStore.searchForMessages(retrievalListener, search);",
      "right" : "localStore.searchForMessages(retrievalListener, search);",
      "info" : "ExpressionStatement[28592-28648]:ExpressionStatement[28592-28648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28683-28892]:Block[28683-28892]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[28701-28827]:IfStatement[28701-28827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28723-28827]:Block[28723-28827]"
    }, {
      "left" : "listener.listLocalMessagesFailed(account, null, e.getMessage());",
      "right" : "listener.listLocalMessagesFailed(account, null, e.getMessage());",
      "info" : "ExpressionStatement[28745-28809]:ExpressionStatement[28745-28809]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[28844-28878]:ExpressionStatement[28844-28878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28901-29045]:Block[28901-29045]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[28919-29031]:IfStatement[28919-29031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28941-29031]:Block[28941-29031]"
    }, {
      "left" : "listener.listLocalMessagesFinished(account, null);",
      "right" : "listener.listLocalMessagesFinished(account, null);",
      "info" : "ExpressionStatement[28963-29013]:ExpressionStatement[28963-29013]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[29112-29186]:IfStatement[29112-29186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29134-29186]:Block[29134-29186]"
    }, {
      "left" : "listener.searchStats(stats);",
      "right" : "listener.searchStats(stats);",
      "info" : "ExpressionStatement[29148-29176]:ExpressionStatement[29148-29176]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29200-29206]:Modifier[29200-29206]"
    }, {
      "left" : "Future<?>",
      "right" : "Future<?>",
      "info" : "ParameterizedType[29207-29216]:ParameterizedType[29207-29216]"
    }, {
      "left" : "searchRemoteMessages",
      "right" : "searchRemoteMessages",
      "info" : "SimpleName[29217-29237]:SimpleName[29217-29237]"
    }, {
      "left" : "final String acctUuid",
      "right" : "final String acctUuid",
      "info" : "SingleVariableDeclaration[29238-29259]:SingleVariableDeclaration[29238-29259]"
    }, {
      "left" : "final String folderName",
      "right" : "final String folderName",
      "info" : "SingleVariableDeclaration[29261-29284]:SingleVariableDeclaration[29261-29284]"
    }, {
      "left" : "final String query",
      "right" : "final String query",
      "info" : "SingleVariableDeclaration[29286-29304]:SingleVariableDeclaration[29286-29304]"
    }, {
      "left" : "final Set<Flag> requiredFlags",
      "right" : "final Set<Flag> requiredFlags",
      "info" : "SingleVariableDeclaration[29318-29347]:SingleVariableDeclaration[29318-29347]"
    }, {
      "left" : "final Set<Flag> forbiddenFlags",
      "right" : "final Set<Flag> forbiddenFlags",
      "info" : "SingleVariableDeclaration[29349-29379]:SingleVariableDeclaration[29349-29379]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[29381-29413]:SingleVariableDeclaration[29381-29413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29415-29976]:Block[29415-29976]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[29425-29720]:IfStatement[29425-29720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29439-29720]:Block[29439-29720]"
    }, {
      "left" : "String msg = \"searchRemoteMessages (\"\n                         + \"acct=\" + acctUuid\n                         + \", folderName = \" + folderName\n                         + \", query = \" + query\n                         + \")\";",
      "right" : "String msg = \"searchRemoteMessages (\"\n                         + \"acct=\" + acctUuid\n                         + \", folderName = \" + folderName\n                         + \", query = \" + query\n                         + \")\";",
      "info" : "VariableDeclarationStatement[29453-29674]:VariableDeclarationStatement[29453-29674]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, msg);",
      "right" : "Log.i(K9.LOG_TAG, msg);",
      "info" : "ExpressionStatement[29687-29710]:ExpressionStatement[29687-29710]"
    }, {
      "left" : "return threadPool.submit(new Runnable() {\n            @Override\n            public void run() {\n                searchRemoteMessagesSynchronous(acctUuid, folderName, query, requiredFlags, forbiddenFlags, listener);\n            }\n        });",
      "right" : "return threadPool.submit(new Runnable() {\n            @Override\n            public void run() {\n                searchRemoteMessagesSynchronous(acctUuid, folderName, query, requiredFlags, forbiddenFlags, listener);\n            }\n        });",
      "info" : "ReturnStatement[29730-29970]:ReturnStatement[29730-29970]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[29784-29793]:MarkerAnnotation[29784-29793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29806-29812]:Modifier[29806-29812]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29813-29817]:PrimitiveType[29813-29817]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[29818-29821]:SimpleName[29818-29821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29824-29958]:Block[29824-29958]"
    }, {
      "left" : "searchRemoteMessagesSynchronous(acctUuid, folderName, query, requiredFlags, forbiddenFlags, listener);",
      "right" : "searchRemoteMessagesSynchronous(acctUuid, folderName, query, requiredFlags, forbiddenFlags, listener);",
      "info" : "ExpressionStatement[29842-29944]:ExpressionStatement[29842-29944]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29981-29987]:Modifier[29981-29987]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29988-29992]:PrimitiveType[29988-29992]"
    }, {
      "left" : "searchRemoteMessagesSynchronous",
      "right" : "searchRemoteMessagesSynchronous",
      "info" : "SimpleName[29993-30024]:SimpleName[29993-30024]"
    }, {
      "left" : "final String acctUuid",
      "right" : "final String acctUuid",
      "info" : "SingleVariableDeclaration[30025-30046]:SingleVariableDeclaration[30025-30046]"
    }, {
      "left" : "final String folderName",
      "right" : "final String folderName",
      "info" : "SingleVariableDeclaration[30048-30071]:SingleVariableDeclaration[30048-30071]"
    }, {
      "left" : "final String query",
      "right" : "final String query",
      "info" : "SingleVariableDeclaration[30073-30091]:SingleVariableDeclaration[30073-30091]"
    }, {
      "left" : "final Set<Flag> requiredFlags",
      "right" : "final Set<Flag> requiredFlags",
      "info" : "SingleVariableDeclaration[30105-30134]:SingleVariableDeclaration[30105-30134]"
    }, {
      "left" : "final Set<Flag> forbiddenFlags",
      "right" : "final Set<Flag> forbiddenFlags",
      "info" : "SingleVariableDeclaration[30136-30166]:SingleVariableDeclaration[30136-30166]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[30168-30200]:SingleVariableDeclaration[30168-30200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30202-32777]:Block[30202-32777]"
    }, {
      "left" : "final Account acct = Preferences.getPreferences(context).getAccount(acctUuid);",
      "right" : "final Account acct = Preferences.getPreferences(context).getAccount(acctUuid);",
      "info" : "VariableDeclarationStatement[30212-30290]:VariableDeclarationStatement[30212-30290]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[30300-30387]:IfStatement[30300-30387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30322-30387]:Block[30322-30387]"
    }, {
      "left" : "listener.remoteSearchStarted(folderName);",
      "right" : "listener.remoteSearchStarted(folderName);",
      "info" : "ExpressionStatement[30336-30377]:ExpressionStatement[30336-30377]"
    }, {
      "left" : "List<Message> extraResults = new ArrayList<Message>();",
      "right" : "List<Message> extraResults = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[30397-30451]:VariableDeclarationStatement[30397-30451]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[30460-32770]:TryStatement[30460-32770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30464-32114]:Block[30464-32114]"
    }, {
      "left" : "Store remoteStore = acct.getRemoteStore();",
      "right" : "Store remoteStore = acct.getRemoteStore();",
      "info" : "VariableDeclarationStatement[30478-30520]:VariableDeclarationStatement[30478-30520]"
    }, {
      "left" : "LocalStore localStore = acct.getLocalStore();",
      "right" : "LocalStore localStore = acct.getLocalStore();",
      "info" : "VariableDeclarationStatement[30533-30578]:VariableDeclarationStatement[30533-30578]"
    }, {
      "left" : "if (remoteStore == null || localStore == null)",
      "right" : "if (remoteStore == null || localStore == null)",
      "info" : "IfStatement[30592-30723]:IfStatement[30592-30723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30639-30723]:Block[30639-30723]"
    }, {
      "left" : "throw new MessagingException(\"Could not get store\");",
      "right" : "throw new MessagingException(\"Could not get store\");",
      "info" : "ThrowStatement[30657-30709]:ThrowStatement[30657-30709]"
    }, {
      "left" : "Folder remoteFolder = remoteStore.getFolder(folderName);",
      "right" : "Folder remoteFolder = remoteStore.getFolder(folderName);",
      "info" : "VariableDeclarationStatement[30737-30793]:VariableDeclarationStatement[30737-30793]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "right" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "info" : "VariableDeclarationStatement[30806-30865]:VariableDeclarationStatement[30806-30865]"
    }, {
      "left" : "if (remoteFolder == null || localFolder == null)",
      "right" : "if (remoteFolder == null || localFolder == null)",
      "info" : "IfStatement[30878-31008]:IfStatement[30878-31008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30927-31008]:Block[30927-31008]"
    }, {
      "left" : "throw new MessagingException(\"Folder not found\");",
      "right" : "throw new MessagingException(\"Folder not found\");",
      "info" : "ThrowStatement[30945-30994]:ThrowStatement[30945-30994]"
    }, {
      "left" : "List<Message> messages = remoteFolder.search(query, requiredFlags, forbiddenFlags);",
      "right" : "List<Message> messages = remoteFolder.search(query, requiredFlags, forbiddenFlags);",
      "info" : "VariableDeclarationStatement[31022-31105]:VariableDeclarationStatement[31022-31105]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[31119-31241]:IfStatement[31119-31241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31133-31241]:Block[31133-31241]"
    }, {
      "left" : "Log.i(\"Remote Search\", \"Remote search got \" + messages.size() + \" results\");",
      "right" : "Log.i(\"Remote Search\", \"Remote search got \" + messages.size() + \" results\");",
      "info" : "ExpressionStatement[31151-31227]:ExpressionStatement[31151-31227]"
    }, {
      "left" : "List<Message> remoteMessages = localFolder.extractNewMessages(messages);",
      "right" : "List<Message> remoteMessages = localFolder.extractNewMessages(messages);",
      "info" : "VariableDeclarationStatement[31334-31406]:VariableDeclarationStatement[31334-31406]"
    }, {
      "left" : "messages.clear();",
      "right" : "messages.clear();",
      "info" : "ExpressionStatement[31419-31436]:ExpressionStatement[31419-31436]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[31450-31614]:IfStatement[31450-31614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31472-31614]:Block[31472-31614]"
    }, {
      "left" : "listener.remoteSearchServerQueryComplete(folderName, remoteMessages.size(), acct.getRemoteSearchNumResults());",
      "right" : "listener.remoteSearchServerQueryComplete(folderName, remoteMessages.size(), acct.getRemoteSearchNumResults());",
      "info" : "ExpressionStatement[31490-31600]:ExpressionStatement[31490-31600]"
    }, {
      "left" : "Collections.sort(remoteMessages, new UidReverseComparator());",
      "right" : "Collections.sort(remoteMessages, new UidReverseComparator());",
      "info" : "ExpressionStatement[31628-31689]:ExpressionStatement[31628-31689]"
    }, {
      "left" : "int resultLimit = acct.getRemoteSearchNumResults();",
      "right" : "int resultLimit = acct.getRemoteSearchNumResults();",
      "info" : "VariableDeclarationStatement[31703-31754]:VariableDeclarationStatement[31703-31754]"
    }, {
      "left" : "if (resultLimit > 0 && remoteMessages.size() > resultLimit)",
      "right" : "if (resultLimit > 0 && remoteMessages.size() > resultLimit)",
      "info" : "IfStatement[31767-32006]:IfStatement[31767-32006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31827-32006]:Block[31827-32006]"
    }, {
      "left" : "extraResults = remoteMessages.subList(resultLimit, remoteMessages.size());",
      "right" : "extraResults = remoteMessages.subList(resultLimit, remoteMessages.size());",
      "info" : "ExpressionStatement[31845-31919]:ExpressionStatement[31845-31919]"
    }, {
      "left" : "remoteMessages = remoteMessages.subList(0, resultLimit);",
      "right" : "remoteMessages = remoteMessages.subList(0, resultLimit);",
      "info" : "ExpressionStatement[31936-31992]:ExpressionStatement[31936-31992]"
    }, {
      "left" : "loadSearchResultsSynchronous(remoteMessages, localFolder, remoteFolder, listener);",
      "right" : "loadSearchResultsSynchronous(remoteMessages, localFolder, remoteFolder, listener);",
      "info" : "ExpressionStatement[32020-32102]:ExpressionStatement[32020-32102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32135-32590]:Block[32135-32590]"
    }, {
      "left" : "if (Thread.currentThread().isInterrupted())",
      "right" : "if (Thread.currentThread().isInterrupted())",
      "info" : "IfStatement[32149-32580]:IfStatement[32149-32580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32193-32308]:Block[32193-32308]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Caught exception on aborted remote search; safe to ignore.\", e);",
      "right" : "Log.i(K9.LOG_TAG, \"Caught exception on aborted remote search; safe to ignore.\", e);",
      "info" : "ExpressionStatement[32211-32294]:ExpressionStatement[32211-32294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32314-32580]:Block[32314-32580]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Could not complete remote search\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Could not complete remote search\", e);",
      "info" : "ExpressionStatement[32332-32389]:ExpressionStatement[32332-32389]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[32406-32518]:IfStatement[32406-32518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32428-32518]:Block[32428-32518]"
    }, {
      "left" : "listener.remoteSearchFailed(null, e.getMessage());",
      "right" : "listener.remoteSearchFailed(null, e.getMessage());",
      "info" : "ExpressionStatement[32450-32500]:ExpressionStatement[32450-32500]"
    }, {
      "left" : "addErrorMessage(acct, null, e);",
      "right" : "addErrorMessage(acct, null, e);",
      "info" : "ExpressionStatement[32535-32566]:ExpressionStatement[32535-32566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32599-32770]:Block[32599-32770]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[32613-32760]:IfStatement[32613-32760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32635-32760]:Block[32635-32760]"
    }, {
      "left" : "listener.remoteSearchFinished(folderName, 0, acct.getRemoteSearchNumResults(), extraResults);",
      "right" : "listener.remoteSearchFinished(folderName, 0, acct.getRemoteSearchNumResults(), extraResults);",
      "info" : "ExpressionStatement[32653-32746]:ExpressionStatement[32653-32746]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32783-32789]:Modifier[32783-32789]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32790-32794]:PrimitiveType[32790-32794]"
    }, {
      "left" : "loadSearchResults",
      "right" : "loadSearchResults",
      "info" : "SimpleName[32795-32812]:SimpleName[32795-32812]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[32813-32834]:SingleVariableDeclaration[32813-32834]"
    }, {
      "left" : "final String folderName",
      "right" : "final String folderName",
      "info" : "SingleVariableDeclaration[32836-32859]:SingleVariableDeclaration[32836-32859]"
    }, {
      "left" : "final List<Message> messages",
      "right" : "final List<Message> messages",
      "info" : "SingleVariableDeclaration[32861-32889]:SingleVariableDeclaration[32861-32889]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[32891-32923]:SingleVariableDeclaration[32891-32923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32925-34283]:Block[32925-34283]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                if (listener != null) {\n                    listener.enableProgressIndicator(true);\n                }\n                try {\n                    Store remoteStore = account.getRemoteStore();\n                    LocalStore localStore = account.getLocalStore();\n\n                    if (remoteStore == null || localStore == null) {\n                        throw new MessagingException(\"Could not get store\");\n                    }\n\n                    Folder remoteFolder = remoteStore.getFolder(folderName);\n                    LocalFolder localFolder = localStore.getFolder(folderName);\n                    if (remoteFolder == null || localFolder == null) {\n                        throw new MessagingException(\"Folder not found\");\n                    }\n\n                    loadSearchResultsSynchronous(messages, localFolder, remoteFolder, listener);\n                } catch (MessagingException e) {\n                    Log.e(K9.LOG_TAG, \"Exception in loadSearchResults: \" + e);\n                    addErrorMessage(account, null, e);\n                } finally {\n                    if (listener != null) {\n                        listener.enableProgressIndicator(false);\n                    }\n                }\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                if (listener != null) {\n                    listener.enableProgressIndicator(true);\n                }\n                try {\n                    Store remoteStore = account.getRemoteStore();\n                    LocalStore localStore = account.getLocalStore();\n\n                    if (remoteStore == null || localStore == null) {\n                        throw new MessagingException(\"Could not get store\");\n                    }\n\n                    Folder remoteFolder = remoteStore.getFolder(folderName);\n                    LocalFolder localFolder = localStore.getFolder(folderName);\n                    if (remoteFolder == null || localFolder == null) {\n                        throw new MessagingException(\"Folder not found\");\n                    }\n\n                    loadSearchResultsSynchronous(messages, localFolder, remoteFolder, listener);\n                } catch (MessagingException e) {\n                    Log.e(K9.LOG_TAG, \"Exception in loadSearchResults: \" + e);\n                    addErrorMessage(account, null, e);\n                } finally {\n                    if (listener != null) {\n                        listener.enableProgressIndicator(false);\n                    }\n                }\n            }\n        });",
      "info" : "ExpressionStatement[32935-34277]:ExpressionStatement[32935-34277]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32983-32992]:MarkerAnnotation[32983-32992]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33005-33011]:Modifier[33005-33011]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33012-33016]:PrimitiveType[33012-33016]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[33017-33020]:SimpleName[33017-33020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33023-34265]:Block[33023-34265]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[33041-33142]:IfStatement[33041-33142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33063-33142]:Block[33063-33142]"
    }, {
      "left" : "listener.enableProgressIndicator(true);",
      "right" : "listener.enableProgressIndicator(true);",
      "info" : "ExpressionStatement[33085-33124]:ExpressionStatement[33085-33124]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[33159-34251]:TryStatement[33159-34251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33163-33909]:Block[33163-33909]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[33185-33230]:VariableDeclarationStatement[33185-33230]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[33251-33299]:VariableDeclarationStatement[33251-33299]"
    }, {
      "left" : "if (remoteStore == null || localStore == null)",
      "right" : "if (remoteStore == null || localStore == null)",
      "info" : "IfStatement[33321-33468]:IfStatement[33321-33468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33368-33468]:Block[33368-33468]"
    }, {
      "left" : "throw new MessagingException(\"Could not get store\");",
      "right" : "throw new MessagingException(\"Could not get store\");",
      "info" : "ThrowStatement[33394-33446]:ThrowStatement[33394-33446]"
    }, {
      "left" : "Folder remoteFolder = remoteStore.getFolder(folderName);",
      "right" : "Folder remoteFolder = remoteStore.getFolder(folderName);",
      "info" : "VariableDeclarationStatement[33490-33546]:VariableDeclarationStatement[33490-33546]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "right" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "info" : "VariableDeclarationStatement[33567-33626]:VariableDeclarationStatement[33567-33626]"
    }, {
      "left" : "if (remoteFolder == null || localFolder == null)",
      "right" : "if (remoteFolder == null || localFolder == null)",
      "info" : "IfStatement[33647-33793]:IfStatement[33647-33793]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33696-33793]:Block[33696-33793]"
    }, {
      "left" : "throw new MessagingException(\"Folder not found\");",
      "right" : "throw new MessagingException(\"Folder not found\");",
      "info" : "ThrowStatement[33722-33771]:ThrowStatement[33722-33771]"
    }, {
      "left" : "loadSearchResultsSynchronous(messages, localFolder, remoteFolder, listener);",
      "right" : "loadSearchResultsSynchronous(messages, localFolder, remoteFolder, listener);",
      "info" : "ExpressionStatement[33815-33891]:ExpressionStatement[33815-33891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33939-34092]:Block[33939-34092]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Exception in loadSearchResults: \" + e);",
      "right" : "Log.e(K9.LOG_TAG, \"Exception in loadSearchResults: \" + e);",
      "info" : "ExpressionStatement[33961-34019]:ExpressionStatement[33961-34019]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[34040-34074]:ExpressionStatement[34040-34074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34101-34251]:Block[34101-34251]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[34123-34233]:IfStatement[34123-34233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34145-34233]:Block[34145-34233]"
    }, {
      "left" : "listener.enableProgressIndicator(false);",
      "right" : "listener.enableProgressIndicator(false);",
      "info" : "ExpressionStatement[34171-34211]:ExpressionStatement[34171-34211]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34289-34295]:Modifier[34289-34295]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34296-34300]:PrimitiveType[34296-34300]"
    }, {
      "left" : "loadSearchResultsSynchronous",
      "right" : "loadSearchResultsSynchronous",
      "info" : "SimpleName[34301-34329]:SimpleName[34301-34329]"
    }, {
      "left" : "List<Message> messages",
      "right" : "List<Message> messages",
      "info" : "SingleVariableDeclaration[34330-34352]:SingleVariableDeclaration[34330-34352]"
    }, {
      "left" : "LocalFolder localFolder",
      "right" : "LocalFolder localFolder",
      "info" : "SingleVariableDeclaration[34354-34377]:SingleVariableDeclaration[34354-34377]"
    }, {
      "left" : "Folder remoteFolder",
      "right" : "Folder remoteFolder",
      "info" : "SingleVariableDeclaration[34379-34398]:SingleVariableDeclaration[34379-34398]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[34400-34426]:SingleVariableDeclaration[34400-34426]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[34435-34453]:SimpleType[34435-34453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34454-35518]:Block[34454-35518]"
    }, {
      "left" : "final FetchProfile header = new FetchProfile();",
      "right" : "final FetchProfile header = new FetchProfile();",
      "info" : "VariableDeclarationStatement[34464-34511]:VariableDeclarationStatement[34464-34511]"
    }, {
      "left" : "header.add(FetchProfile.Item.FLAGS);",
      "right" : "header.add(FetchProfile.Item.FLAGS);",
      "info" : "ExpressionStatement[34520-34556]:ExpressionStatement[34520-34556]"
    }, {
      "left" : "header.add(FetchProfile.Item.ENVELOPE);",
      "right" : "header.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[34565-34604]:ExpressionStatement[34565-34604]"
    }, {
      "left" : "final FetchProfile structure = new FetchProfile();",
      "right" : "final FetchProfile structure = new FetchProfile();",
      "info" : "VariableDeclarationStatement[34613-34663]:VariableDeclarationStatement[34613-34663]"
    }, {
      "left" : "structure.add(FetchProfile.Item.STRUCTURE);",
      "right" : "structure.add(FetchProfile.Item.STRUCTURE);",
      "info" : "ExpressionStatement[34672-34715]:ExpressionStatement[34672-34715]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[34725-34735]:VariableDeclarationStatement[34725-34735]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[34744-35512]:EnhancedForStatement[34744-35512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34777-35512]:Block[34777-35512]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[34791-34795]:ExpressionStatement[34791-34795]"
    }, {
      "left" : "LocalMessage localMsg = localFolder.getMessage(message.getUid());",
      "right" : "LocalMessage localMsg = localFolder.getMessage(message.getUid());",
      "info" : "VariableDeclarationStatement[34808-34873]:VariableDeclarationStatement[34808-34873]"
    }, {
      "left" : "if (localMsg == null)",
      "right" : "if (localMsg == null)",
      "info" : "IfStatement[34887-35348]:IfStatement[34887-35348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34909-35348]:Block[34909-35348]"
    }, {
      "left" : "remoteFolder.fetch(Collections.singletonList(message), header, null);",
      "right" : "remoteFolder.fetch(Collections.singletonList(message), header, null);",
      "info" : "ExpressionStatement[34927-34996]:ExpressionStatement[34927-34996]"
    }, {
      "left" : "remoteFolder.fetch(Collections.singletonList(message), structure, null);",
      "right" : "remoteFolder.fetch(Collections.singletonList(message), structure, null);",
      "info" : "ExpressionStatement[35113-35185]:ExpressionStatement[35113-35185]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(message));",
      "right" : "localFolder.appendMessages(Collections.singletonList(message));",
      "info" : "ExpressionStatement[35202-35265]:ExpressionStatement[35202-35265]"
    }, {
      "left" : "localMsg = localFolder.getMessage(message.getUid());",
      "right" : "localMsg = localFolder.getMessage(message.getUid());",
      "info" : "ExpressionStatement[35282-35334]:ExpressionStatement[35282-35334]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[35362-35502]:IfStatement[35362-35502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35384-35502]:Block[35384-35502]"
    }, {
      "left" : "listener.remoteSearchAddMessage(remoteFolder.getName(), localMsg, i, messages.size());",
      "right" : "listener.remoteSearchAddMessage(remoteFolder.getName(), localMsg, i, messages.size());",
      "info" : "ExpressionStatement[35402-35488]:ExpressionStatement[35402-35488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35525-35531]:Modifier[35525-35531]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35532-35536]:PrimitiveType[35532-35536]"
    }, {
      "left" : "loadMoreMessages",
      "right" : "loadMoreMessages",
      "info" : "SimpleName[35537-35553]:SimpleName[35537-35553]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[35554-35569]:SingleVariableDeclaration[35554-35569]"
    }, {
      "left" : "String folder",
      "right" : "String folder",
      "info" : "SingleVariableDeclaration[35571-35584]:SingleVariableDeclaration[35571-35584]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[35586-35612]:SingleVariableDeclaration[35586-35612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35614-36186]:Block[35614-36186]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[35624-36180]:TryStatement[35624-36180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35628-36004]:Block[35628-36004]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[35642-35690]:VariableDeclarationStatement[35642-35690]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(folder);",
      "right" : "LocalFolder localFolder = localStore.getFolder(folder);",
      "info" : "VariableDeclarationStatement[35703-35758]:VariableDeclarationStatement[35703-35758]"
    }, {
      "left" : "if (localFolder.getVisibleLimit() > 0)",
      "right" : "if (localFolder.getVisibleLimit() > 0)",
      "info" : "IfStatement[35771-35929]:IfStatement[35771-35929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35810-35929]:Block[35810-35929]"
    }, {
      "left" : "localFolder.setVisibleLimit(localFolder.getVisibleLimit() + account.getDisplayCount());",
      "right" : "localFolder.setVisibleLimit(localFolder.getVisibleLimit() + account.getDisplayCount());",
      "info" : "ExpressionStatement[35828-35915]:ExpressionStatement[35828-35915]"
    }, {
      "left" : "synchronizeMailbox(account, folder, listener, null);",
      "right" : "synchronizeMailbox(account, folder, listener, null);",
      "info" : "ExpressionStatement[35942-35994]:ExpressionStatement[35942-35994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36035-36180]:Block[36035-36180]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[36049-36084]:ExpressionStatement[36049-36084]"
    }, {
      "left" : "throw new RuntimeException(\"Unable to set visible limit on folder\", me);",
      "right" : "throw new RuntimeException(\"Unable to set visible limit on folder\", me);",
      "info" : "ThrowStatement[36098-36170]:ThrowStatement[36098-36170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36192-36198]:Modifier[36192-36198]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36199-36203]:PrimitiveType[36199-36203]"
    }, {
      "left" : "resetVisibleLimits",
      "right" : "resetVisibleLimits",
      "info" : "SimpleName[36204-36222]:SimpleName[36204-36222]"
    }, {
      "left" : "Collection<Account> accounts",
      "right" : "Collection<Account> accounts",
      "info" : "SingleVariableDeclaration[36223-36251]:SingleVariableDeclaration[36223-36251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36253-36355]:Block[36253-36355]"
    }, {
      "left" : "for (Account account : accounts)",
      "right" : "for (Account account : accounts)",
      "info" : "EnhancedForStatement[36263-36349]:EnhancedForStatement[36263-36349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36296-36349]:Block[36296-36349]"
    }, {
      "left" : "account.resetVisibleLimits();",
      "right" : "account.resetVisibleLimits();",
      "info" : "ExpressionStatement[36310-36339]:ExpressionStatement[36310-36339]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36548-36554]:Modifier[36548-36554]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36555-36559]:PrimitiveType[36555-36559]"
    }, {
      "left" : "synchronizeMailbox",
      "right" : "synchronizeMailbox",
      "info" : "SimpleName[36560-36578]:SimpleName[36560-36578]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[36579-36600]:SingleVariableDeclaration[36579-36600]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[36602-36621]:SingleVariableDeclaration[36602-36621]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[36623-36655]:SingleVariableDeclaration[36623-36655]"
    }, {
      "left" : "final Folder providedRemoteFolder",
      "right" : "final Folder providedRemoteFolder",
      "info" : "SingleVariableDeclaration[36657-36690]:SingleVariableDeclaration[36657-36690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36692-36946]:Block[36692-36946]"
    }, {
      "left" : "putBackground(\"synchronizeMailbox\", listener, new Runnable() {\n            @Override\n            public void run() {\n                synchronizeMailboxSynchronous(account, folder, listener, providedRemoteFolder);\n            }\n        });",
      "right" : "putBackground(\"synchronizeMailbox\", listener, new Runnable() {\n            @Override\n            public void run() {\n                synchronizeMailboxSynchronous(account, folder, listener, providedRemoteFolder);\n            }\n        });",
      "info" : "ExpressionStatement[36702-36940]:ExpressionStatement[36702-36940]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36777-36786]:MarkerAnnotation[36777-36786]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36799-36805]:Modifier[36799-36805]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36806-36810]:PrimitiveType[36806-36810]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[36811-36814]:SimpleName[36811-36814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36817-36928]:Block[36817-36928]"
    }, {
      "left" : "synchronizeMailboxSynchronous(account, folder, listener, providedRemoteFolder);",
      "right" : "synchronizeMailboxSynchronous(account, folder, listener, providedRemoteFolder);",
      "info" : "ExpressionStatement[36835-36914]:ExpressionStatement[36835-36914]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37237-37244]:Modifier[37237-37244]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37245-37249]:PrimitiveType[37245-37249]"
    }, {
      "left" : "synchronizeMailboxSynchronous",
      "right" : "synchronizeMailboxSynchronous",
      "info" : "SimpleName[37250-37279]:SimpleName[37250-37279]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[37280-37301]:SingleVariableDeclaration[37280-37301]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[37303-37322]:SingleVariableDeclaration[37303-37322]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[37324-37356]:SingleVariableDeclaration[37324-37356]"
    }, {
      "left" : "Folder providedRemoteFolder",
      "right" : "Folder providedRemoteFolder",
      "info" : "SingleVariableDeclaration[37358-37385]:SingleVariableDeclaration[37358-37385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37387-48405]:Block[37387-48405]"
    }, {
      "left" : "Folder remoteFolder = null;",
      "right" : "Folder remoteFolder = null;",
      "info" : "VariableDeclarationStatement[37397-37424]:VariableDeclarationStatement[37397-37424]"
    }, {
      "left" : "LocalFolder tLocalFolder = null;",
      "right" : "LocalFolder tLocalFolder = null;",
      "info" : "VariableDeclarationStatement[37433-37465]:VariableDeclarationStatement[37433-37465]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[37475-37586]:IfStatement[37475-37586]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Synchronizing folder \" + account.getDescription() + \":\" + folder);",
      "right" : "Log.i(K9.LOG_TAG, \"Synchronizing folder \" + account.getDescription() + \":\" + folder);",
      "info" : "ExpressionStatement[37501-37586]:ExpressionStatement[37501-37586]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[37596-37716]:EnhancedForStatement[37596-37716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37647-37716]:Block[37647-37716]"
    }, {
      "left" : "l.synchronizeMailboxStarted(account, folder);",
      "right" : "l.synchronizeMailboxStarted(account, folder);",
      "info" : "ExpressionStatement[37661-37706]:ExpressionStatement[37661-37706]"
    }, {
      "left" : "if (folder.equals(account.getOutboxFolderName()) || folder.equals(account.getErrorFolderName()))",
      "right" : "if (folder.equals(account.getOutboxFolderName()) || folder.equals(account.getErrorFolderName()))",
      "info" : "IfStatement[37806-38083]:IfStatement[37806-38083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37903-38083]:Block[37903-38083]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[37917-38052]:EnhancedForStatement[37917-38052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37968-38052]:Block[37968-38052]"
    }, {
      "left" : "l.synchronizeMailboxFinished(account, folder, 0, 0);",
      "right" : "l.synchronizeMailboxFinished(account, folder, 0, 0);",
      "info" : "ExpressionStatement[37986-38038]:ExpressionStatement[37986-38038]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[38066-38073]:ReturnStatement[38066-38073]"
    }, {
      "left" : "Exception commandException = null;",
      "right" : "Exception commandException = null;",
      "info" : "VariableDeclarationStatement[38093-38127]:VariableDeclarationStatement[38093-38127]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[38136-48398]:TryStatement[38136-48398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38140-47133]:Block[38140-47133]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[38154-38285]:IfStatement[38154-38285]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: About to process pending commands for account \" + account.getDescription());",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: About to process pending commands for account \" + account.getDescription());",
      "info" : "ExpressionStatement[38184-38285]:ExpressionStatement[38184-38285]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[38299-38604]:TryStatement[38299-38604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38303-38378]:Block[38303-38378]"
    }, {
      "left" : "processPendingCommandsSynchronous(account);",
      "right" : "processPendingCommandsSynchronous(account);",
      "info" : "ExpressionStatement[38321-38364]:ExpressionStatement[38321-38364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38399-38604]:Block[38399-38604]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[38417-38451]:ExpressionStatement[38417-38451]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failure processing command, but allow message sync attempt\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Failure processing command, but allow message sync attempt\", e);",
      "info" : "ExpressionStatement[38469-38552]:ExpressionStatement[38469-38552]"
    }, {
      "left" : "commandException = e;",
      "right" : "commandException = e;",
      "info" : "ExpressionStatement[38569-38590]:ExpressionStatement[38569-38590]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[38770-38863]:IfStatement[38770-38863]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"SYNC: About to get local folder \" + folder);",
      "right" : "Log.v(K9.LOG_TAG, \"SYNC: About to get local folder \" + folder);",
      "info" : "ExpressionStatement[38800-38863]:ExpressionStatement[38800-38863]"
    }, {
      "left" : "final LocalStore localStore = account.getLocalStore();",
      "right" : "final LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[38877-38931]:VariableDeclarationStatement[38877-38931]"
    }, {
      "left" : "tLocalFolder = localStore.getFolder(folder);",
      "right" : "tLocalFolder = localStore.getFolder(folder);",
      "info" : "ExpressionStatement[38944-38988]:ExpressionStatement[38944-38988]"
    }, {
      "left" : "final LocalFolder localFolder = tLocalFolder;",
      "right" : "final LocalFolder localFolder = tLocalFolder;",
      "info" : "VariableDeclarationStatement[39001-39046]:VariableDeclarationStatement[39001-39046]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[39059-39097]:ExpressionStatement[39059-39097]"
    }, {
      "left" : "localFolder.updateLastUid();",
      "right" : "localFolder.updateLastUid();",
      "info" : "ExpressionStatement[39110-39138]:ExpressionStatement[39110-39138]"
    }, {
      "left" : "List<? extends Message> localMessages = localFolder.getMessages(null);",
      "right" : "List<? extends Message> localMessages = localFolder.getMessages(null);",
      "info" : "VariableDeclarationStatement[39151-39221]:VariableDeclarationStatement[39151-39221]"
    }, {
      "left" : "Map<String, Message> localUidMap = new HashMap<String, Message>();",
      "right" : "Map<String, Message> localUidMap = new HashMap<String, Message>();",
      "info" : "VariableDeclarationStatement[39234-39300]:VariableDeclarationStatement[39234-39300]"
    }, {
      "left" : "for (Message message : localMessages)",
      "right" : "for (Message message : localMessages)",
      "info" : "EnhancedForStatement[39313-39426]:EnhancedForStatement[39313-39426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39351-39426]:Block[39351-39426]"
    }, {
      "left" : "localUidMap.put(message.getUid(), message);",
      "right" : "localUidMap.put(message.getUid(), message);",
      "info" : "ExpressionStatement[39369-39412]:ExpressionStatement[39369-39412]"
    }, {
      "left" : "if (providedRemoteFolder != null)",
      "right" : "if (providedRemoteFolder != null)",
      "info" : "IfStatement[39440-41745]:IfStatement[39440-41745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39474-39657]:Block[39474-39657]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[39492-39590]:IfStatement[39492-39590]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"SYNC: using providedRemoteFolder \" + folder);",
      "right" : "Log.v(K9.LOG_TAG, \"SYNC: using providedRemoteFolder \" + folder);",
      "info" : "ExpressionStatement[39526-39590]:ExpressionStatement[39526-39590]"
    }, {
      "left" : "remoteFolder = providedRemoteFolder;",
      "right" : "remoteFolder = providedRemoteFolder;",
      "info" : "ExpressionStatement[39607-39643]:ExpressionStatement[39607-39643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39663-41745]:Block[39663-41745]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[39681-39726]:VariableDeclarationStatement[39681-39726]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[39744-39842]:IfStatement[39744-39842]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"SYNC: About to get remote folder \" + folder);",
      "right" : "Log.v(K9.LOG_TAG, \"SYNC: About to get remote folder \" + folder);",
      "info" : "ExpressionStatement[39778-39842]:ExpressionStatement[39778-39842]"
    }, {
      "left" : "remoteFolder = remoteStore.getFolder(folder);",
      "right" : "remoteFolder = remoteStore.getFolder(folder);",
      "info" : "ExpressionStatement[39859-39904]:ExpressionStatement[39859-39904]"
    }, {
      "left" : "if (! verifyOrCreateRemoteSpecialFolder(account, folder, remoteFolder, listener))",
      "right" : "if (! verifyOrCreateRemoteSpecialFolder(account, folder, remoteFolder, listener))",
      "info" : "IfStatement[39922-40051]:IfStatement[39922-40051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40004-40051]:Block[40004-40051]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[40026-40033]:ReturnStatement[40026-40033]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[41289-41388]:IfStatement[41289-41388]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"SYNC: About to open remote folder \" + folder);",
      "right" : "Log.v(K9.LOG_TAG, \"SYNC: About to open remote folder \" + folder);",
      "info" : "ExpressionStatement[41323-41388]:ExpressionStatement[41323-41388]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[41406-41445]:ExpressionStatement[41406-41445]"
    }, {
      "left" : "if (Expunge.EXPUNGE_ON_POLL == account.getExpungePolicy())",
      "right" : "if (Expunge.EXPUNGE_ON_POLL == account.getExpungePolicy())",
      "info" : "IfStatement[41462-41730]:IfStatement[41462-41730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41521-41730]:Block[41521-41730]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[41543-41668]:IfStatement[41543-41668]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Expunging folder \" + account.getDescription() + \":\" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Expunging folder \" + account.getDescription() + \":\" + folder);",
      "info" : "ExpressionStatement[41581-41668]:ExpressionStatement[41581-41668]"
    }, {
      "left" : "remoteFolder.expunge();",
      "right" : "remoteFolder.expunge();",
      "info" : "ExpressionStatement[41689-41712]:ExpressionStatement[41689-41712]"
    }, {
      "left" : "int remoteMessageCount = remoteFolder.getMessageCount();",
      "right" : "int remoteMessageCount = remoteFolder.getMessageCount();",
      "info" : "VariableDeclarationStatement[41835-41891]:VariableDeclarationStatement[41835-41891]"
    }, {
      "left" : "int visibleLimit = localFolder.getVisibleLimit();",
      "right" : "int visibleLimit = localFolder.getVisibleLimit();",
      "info" : "VariableDeclarationStatement[41905-41954]:VariableDeclarationStatement[41905-41954]"
    }, {
      "left" : "if (visibleLimit < 0)",
      "right" : "if (visibleLimit < 0)",
      "info" : "IfStatement[41968-42062]:IfStatement[41968-42062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41990-42062]:Block[41990-42062]"
    }, {
      "left" : "visibleLimit = K9.DEFAULT_VISIBLE_LIMIT;",
      "right" : "visibleLimit = K9.DEFAULT_VISIBLE_LIMIT;",
      "info" : "ExpressionStatement[42008-42048]:ExpressionStatement[42008-42048]"
    }, {
      "left" : "final List<Message> remoteMessages = new ArrayList<Message>();",
      "right" : "final List<Message> remoteMessages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[42076-42138]:VariableDeclarationStatement[42076-42138]"
    }, {
      "left" : "Map<String, Message> remoteUidMap = new HashMap<String, Message>();",
      "right" : "Map<String, Message> remoteUidMap = new HashMap<String, Message>();",
      "info" : "VariableDeclarationStatement[42151-42218]:VariableDeclarationStatement[42151-42218]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[42232-42361]:IfStatement[42232-42361]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"SYNC: Remote message count for folder \" + folder + \" is \" + remoteMessageCount);",
      "right" : "Log.v(K9.LOG_TAG, \"SYNC: Remote message count for folder \" + folder + \" is \" + remoteMessageCount);",
      "info" : "ExpressionStatement[42262-42361]:ExpressionStatement[42262-42361]"
    }, {
      "left" : "final Date earliestDate = account.getEarliestPollDate();",
      "right" : "final Date earliestDate = account.getEarliestPollDate();",
      "info" : "VariableDeclarationStatement[42374-42430]:VariableDeclarationStatement[42374-42430]"
    }, {
      "left" : "if (remoteMessageCount > 0)",
      "right" : "if (remoteMessageCount > 0)",
      "info" : "IfStatement[42445-44586]:IfStatement[42445-44586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42473-44435]:Block[42473-44435]"
    }, {
      "left" : "int remoteStart;",
      "right" : "int remoteStart;",
      "info" : "VariableDeclarationStatement[42542-42558]:VariableDeclarationStatement[42542-42558]"
    }, {
      "left" : "if (visibleLimit > 0)",
      "right" : "if (visibleLimit > 0)",
      "info" : "IfStatement[42575-42764]:IfStatement[42575-42764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42597-42702]:Block[42597-42702]"
    }, {
      "left" : "remoteStart = Math.max(0, remoteMessageCount - visibleLimit) + 1;",
      "right" : "remoteStart = Math.max(0, remoteMessageCount - visibleLimit) + 1;",
      "info" : "ExpressionStatement[42619-42684]:ExpressionStatement[42619-42684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42708-42764]:Block[42708-42764]"
    }, {
      "left" : "remoteStart = 1;",
      "right" : "remoteStart = 1;",
      "info" : "ExpressionStatement[42730-42746]:ExpressionStatement[42730-42746]"
    }, {
      "left" : "int remoteEnd = remoteMessageCount;",
      "right" : "int remoteEnd = remoteMessageCount;",
      "info" : "VariableDeclarationStatement[42781-42816]:VariableDeclarationStatement[42781-42816]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[42834-42984]:IfStatement[42834-42984]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"SYNC: About to get messages \" + remoteStart + \" through \" + remoteEnd + \" for folder \" + folder);",
      "right" : "Log.v(K9.LOG_TAG, \"SYNC: About to get messages \" + remoteStart + \" through \" + remoteEnd + \" for folder \" + folder);",
      "info" : "ExpressionStatement[42868-42984]:ExpressionStatement[42868-42984]"
    }, {
      "left" : "final AtomicInteger headerProgress = new AtomicInteger(0);",
      "right" : "final AtomicInteger headerProgress = new AtomicInteger(0);",
      "info" : "VariableDeclarationStatement[43002-43060]:VariableDeclarationStatement[43002-43060]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[43077-43220]:EnhancedForStatement[43077-43220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43128-43220]:Block[43128-43220]"
    }, {
      "left" : "l.synchronizeMailboxHeadersStarted(account, folder);",
      "right" : "l.synchronizeMailboxHeadersStarted(account, folder);",
      "info" : "ExpressionStatement[43150-43202]:ExpressionStatement[43150-43202]"
    }, {
      "left" : "List<? extends Message> remoteMessageArray = remoteFolder.getMessages(remoteStart, remoteEnd, earliestDate, null);",
      "right" : "List<? extends Message> remoteMessageArray = remoteFolder.getMessages(remoteStart, remoteEnd, earliestDate, null);",
      "info" : "VariableDeclarationStatement[43239-43353]:VariableDeclarationStatement[43239-43353]"
    }, {
      "left" : "int messageCount = remoteMessageArray.size();",
      "right" : "int messageCount = remoteMessageArray.size();",
      "info" : "VariableDeclarationStatement[43371-43416]:VariableDeclarationStatement[43371-43416]"
    }, {
      "left" : "for (Message thisMess : remoteMessageArray)",
      "right" : "for (Message thisMess : remoteMessageArray)",
      "info" : "EnhancedForStatement[43434-44075]:EnhancedForStatement[43434-44075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43478-44075]:Block[43478-44075]"
    }, {
      "left" : "headerProgress.incrementAndGet();",
      "right" : "headerProgress.incrementAndGet();",
      "info" : "ExpressionStatement[43500-43533]:ExpressionStatement[43500-43533]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[43554-43742]:EnhancedForStatement[43554-43742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43605-43742]:Block[43605-43742]"
    }, {
      "left" : "l.synchronizeMailboxHeadersProgress(account, folder, headerProgress.get(), messageCount);",
      "right" : "l.synchronizeMailboxHeadersProgress(account, folder, headerProgress.get(), messageCount);",
      "info" : "ExpressionStatement[43631-43720]:ExpressionStatement[43631-43720]"
    }, {
      "left" : "Message localMessage = localUidMap.get(thisMess.getUid());",
      "right" : "Message localMessage = localUidMap.get(thisMess.getUid());",
      "info" : "VariableDeclarationStatement[43763-43821]:VariableDeclarationStatement[43763-43821]"
    }, {
      "left" : "if (localMessage == null || !localMessage.olderThan(earliestDate))",
      "right" : "if (localMessage == null || !localMessage.olderThan(earliestDate))",
      "info" : "IfStatement[43842-44057]:IfStatement[43842-44057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43909-44057]:Block[43909-44057]"
    }, {
      "left" : "remoteMessages.add(thisMess);",
      "right" : "remoteMessages.add(thisMess);",
      "info" : "ExpressionStatement[43935-43964]:ExpressionStatement[43935-43964]"
    }, {
      "left" : "remoteUidMap.put(thisMess.getUid(), thisMess);",
      "right" : "remoteUidMap.put(thisMess.getUid(), thisMess);",
      "info" : "ExpressionStatement[43989-44035]:ExpressionStatement[43989-44035]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[44092-44215]:IfStatement[44092-44215]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"SYNC: Got \" + remoteUidMap.size() + \" messages for folder \" + folder);",
      "right" : "Log.v(K9.LOG_TAG, \"SYNC: Got \" + remoteUidMap.size() + \" messages for folder \" + folder);",
      "info" : "ExpressionStatement[44126-44215]:ExpressionStatement[44126-44215]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[44233-44420]:EnhancedForStatement[44233-44420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44284-44420]:Block[44284-44420]"
    }, {
      "left" : "l.synchronizeMailboxHeadersFinished(account, folder, headerProgress.get(), remoteUidMap.size());",
      "right" : "l.synchronizeMailboxHeadersFinished(account, folder, headerProgress.get(), remoteUidMap.size());",
      "info" : "ExpressionStatement[44306-44402]:ExpressionStatement[44306-44402]"
    }, {
      "left" : "if (remoteMessageCount < 0)",
      "right" : "if (remoteMessageCount < 0)",
      "info" : "IfStatement[44441-44586]:IfStatement[44441-44586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44469-44586]:Block[44469-44586]"
    }, {
      "left" : "throw new Exception(\"Message count \" + remoteMessageCount + \" for folder \" + folder);",
      "right" : "throw new Exception(\"Message count \" + remoteMessageCount + \" for folder \" + folder);",
      "info" : "ThrowStatement[44487-44572]:ThrowStatement[44487-44572]"
    }, {
      "left" : "if (account.syncRemoteDeletions())",
      "right" : "if (account.syncRemoteDeletions())",
      "info" : "IfStatement[44743-45438]:IfStatement[44743-45438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44778-45438]:Block[44778-45438]"
    }, {
      "left" : "List<Message> destroyMessages = new ArrayList<Message>();",
      "right" : "List<Message> destroyMessages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[44796-44853]:VariableDeclarationStatement[44796-44853]"
    }, {
      "left" : "for (Message localMessage : localMessages)",
      "right" : "for (Message localMessage : localMessages)",
      "info" : "EnhancedForStatement[44870-45088]:EnhancedForStatement[44870-45088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44913-45088]:Block[44913-45088]"
    }, {
      "left" : "if (remoteUidMap.get(localMessage.getUid()) == null)",
      "right" : "if (remoteUidMap.get(localMessage.getUid()) == null)",
      "info" : "IfStatement[44935-45070]:IfStatement[44935-45070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44988-45070]:Block[44988-45070]"
    }, {
      "left" : "destroyMessages.add(localMessage);",
      "right" : "destroyMessages.add(localMessage);",
      "info" : "ExpressionStatement[45014-45048]:ExpressionStatement[45014-45048]"
    }, {
      "left" : "localFolder.destroyMessages(destroyMessages);",
      "right" : "localFolder.destroyMessages(destroyMessages);",
      "info" : "ExpressionStatement[45107-45152]:ExpressionStatement[45107-45152]"
    }, {
      "left" : "for (Message destroyMessage : destroyMessages)",
      "right" : "for (Message destroyMessage : destroyMessages)",
      "info" : "EnhancedForStatement[45170-45424]:EnhancedForStatement[45170-45424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45217-45424]:Block[45217-45424]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[45239-45406]:EnhancedForStatement[45239-45406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45290-45406]:Block[45290-45406]"
    }, {
      "left" : "l.synchronizeMailboxRemovedMessage(account, folder, destroyMessage);",
      "right" : "l.synchronizeMailboxRemovedMessage(account, folder, destroyMessage);",
      "info" : "ExpressionStatement[45316-45384]:ExpressionStatement[45316-45384]"
    }, {
      "left" : "localMessages = null;",
      "right" : "localMessages = null;",
      "info" : "ExpressionStatement[45451-45472]:ExpressionStatement[45451-45472]"
    }, {
      "left" : "int newMessages = downloadMessages(account, remoteFolder, localFolder, remoteMessages, false);",
      "right" : "int newMessages = downloadMessages(account, remoteFolder, localFolder, remoteMessages, false);",
      "info" : "VariableDeclarationStatement[45580-45674]:VariableDeclarationStatement[45580-45674]"
    }, {
      "left" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "right" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "info" : "VariableDeclarationStatement[45688-45749]:VariableDeclarationStatement[45688-45749]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[45762-45896]:EnhancedForStatement[45762-45896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45805-45896]:Block[45805-45896]"
    }, {
      "left" : "l.folderStatusChanged(account, folder, unreadMessageCount);",
      "right" : "l.folderStatusChanged(account, folder, unreadMessageCount);",
      "info" : "ExpressionStatement[45823-45882]:ExpressionStatement[45823-45882]"
    }, {
      "left" : "localFolder.setLastChecked(System.currentTimeMillis());",
      "right" : "localFolder.setLastChecked(System.currentTimeMillis());",
      "info" : "ExpressionStatement[45971-46026]:ExpressionStatement[45971-46026]"
    }, {
      "left" : "localFolder.setStatus(null);",
      "right" : "localFolder.setStatus(null);",
      "info" : "ExpressionStatement[46039-46067]:ExpressionStatement[46039-46067]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[46081-46287]:IfStatement[46081-46287]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Done synchronizing folder \" + account.getDescription() + \":\" + folder +\n                      \" @ \" + new Date() + \" with \" + newMessages + \" new messages\");",
      "right" : "Log.d(K9.LOG_TAG, \"Done synchronizing folder \" + account.getDescription() + \":\" + folder +\n                      \" @ \" + new Date() + \" with \" + newMessages + \" new messages\");",
      "info" : "ExpressionStatement[46111-46287]:ExpressionStatement[46111-46287]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[46301-46463]:EnhancedForStatement[46301-46463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46352-46463]:Block[46352-46463]"
    }, {
      "left" : "l.synchronizeMailboxFinished(account, folder, remoteMessageCount, newMessages);",
      "right" : "l.synchronizeMailboxFinished(account, folder, remoteMessageCount, newMessages);",
      "info" : "ExpressionStatement[46370-46449]:ExpressionStatement[46370-46449]"
    }, {
      "left" : "if (commandException != null)",
      "right" : "if (commandException != null)",
      "info" : "IfStatement[46478-46988]:IfStatement[46478-46988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46508-46988]:Block[46508-46988]"
    }, {
      "left" : "String rootMessage = getRootCauseMessage(commandException);",
      "right" : "String rootMessage = getRootCauseMessage(commandException);",
      "info" : "VariableDeclarationStatement[46526-46585]:VariableDeclarationStatement[46526-46585]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Root cause failure in \" + account.getDescription() + \":\" +\n                      tLocalFolder.getName() + \" was '\" + rootMessage + \"'\");",
      "right" : "Log.e(K9.LOG_TAG, \"Root cause failure in \" + account.getDescription() + \":\" +\n                      tLocalFolder.getName() + \" was '\" + rootMessage + \"'\");",
      "info" : "ExpressionStatement[46602-46757]:ExpressionStatement[46602-46757]"
    }, {
      "left" : "localFolder.setStatus(rootMessage);",
      "right" : "localFolder.setStatus(rootMessage);",
      "info" : "ExpressionStatement[46774-46809]:ExpressionStatement[46774-46809]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[46826-46974]:EnhancedForStatement[46826-46974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46877-46974]:Block[46877-46974]"
    }, {
      "left" : "l.synchronizeMailboxFailed(account, folder, rootMessage);",
      "right" : "l.synchronizeMailboxFailed(account, folder, rootMessage);",
      "info" : "ExpressionStatement[46899-46956]:ExpressionStatement[46899-46956]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[47002-47122]:IfStatement[47002-47122]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Done synchronizing folder \" + account.getDescription() + \":\" + folder);",
      "right" : "Log.i(K9.LOG_TAG, \"Done synchronizing folder \" + account.getDescription() + \":\" + folder);",
      "info" : "ExpressionStatement[47032-47122]:ExpressionStatement[47032-47122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47154-48233]:Block[47154-48233]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"synchronizeMailbox\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"synchronizeMailbox\", e);",
      "info" : "ExpressionStatement[47168-47211]:ExpressionStatement[47168-47211]"
    }, {
      "left" : "String rootMessage = getRootCauseMessage(e);",
      "right" : "String rootMessage = getRootCauseMessage(e);",
      "info" : "VariableDeclarationStatement[47335-47379]:VariableDeclarationStatement[47335-47379]"
    }, {
      "left" : "if (tLocalFolder != null)",
      "right" : "if (tLocalFolder != null)",
      "info" : "IfStatement[47392-47824]:IfStatement[47392-47824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47418-47824]:Block[47418-47824]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[47436-47810]:TryStatement[47436-47810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47440-47593]:Block[47440-47593]"
    }, {
      "left" : "tLocalFolder.setStatus(rootMessage);",
      "right" : "tLocalFolder.setStatus(rootMessage);",
      "info" : "ExpressionStatement[47462-47498]:ExpressionStatement[47462-47498]"
    }, {
      "left" : "tLocalFolder.setLastChecked(System.currentTimeMillis());",
      "right" : "tLocalFolder.setLastChecked(System.currentTimeMillis());",
      "info" : "ExpressionStatement[47519-47575]:ExpressionStatement[47519-47575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47624-47810]:Block[47624-47810]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Could not set last checked on folder \" + account.getDescription() + \":\" +\n                          tLocalFolder.getName(), e);",
      "right" : "Log.e(K9.LOG_TAG, \"Could not set last checked on folder \" + account.getDescription() + \":\" +\n                          tLocalFolder.getName(), e);",
      "info" : "ExpressionStatement[47646-47792]:ExpressionStatement[47646-47792]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[47838-47978]:EnhancedForStatement[47838-47978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47889-47978]:Block[47889-47978]"
    }, {
      "left" : "l.synchronizeMailboxFailed(account, folder, rootMessage);",
      "right" : "l.synchronizeMailboxFailed(account, folder, rootMessage);",
      "info" : "ExpressionStatement[47907-47964]:ExpressionStatement[47907-47964]"
    }, {
      "left" : "notifyUserIfCertificateProblem(context, e, account, true);",
      "right" : "notifyUserIfCertificateProblem(context, e, account, true);",
      "info" : "ExpressionStatement[47991-48049]:ExpressionStatement[47991-48049]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[48062-48096]:ExpressionStatement[48062-48096]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failed synchronizing folder \" + account.getDescription() + \":\" + folder + \" @ \" + new Date());",
      "right" : "Log.e(K9.LOG_TAG, \"Failed synchronizing folder \" + account.getDescription() + \":\" + folder + \" @ \" + new Date());",
      "info" : "ExpressionStatement[48109-48222]:ExpressionStatement[48109-48222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48242-48398]:Block[48242-48398]"
    }, {
      "left" : "if (providedRemoteFolder == null)",
      "right" : "if (providedRemoteFolder == null)",
      "info" : "IfStatement[48256-48348]:IfStatement[48256-48348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48290-48348]:Block[48290-48348]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[48308-48334]:ExpressionStatement[48308-48334]"
    }, {
      "left" : "closeFolder(tLocalFolder);",
      "right" : "closeFolder(tLocalFolder);",
      "info" : "ExpressionStatement[48362-48388]:ExpressionStatement[48362-48388]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[48412-48419]:Modifier[48412-48419]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48420-48424]:PrimitiveType[48420-48424]"
    }, {
      "left" : "closeFolder",
      "right" : "closeFolder",
      "info" : "SimpleName[48425-48436]:SimpleName[48425-48436]"
    }, {
      "left" : "Folder f",
      "right" : "Folder f",
      "info" : "SingleVariableDeclaration[48437-48445]:SingleVariableDeclaration[48437-48445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48447-48512]:Block[48447-48512]"
    }, {
      "left" : "if (f != null)",
      "right" : "if (f != null)",
      "info" : "IfStatement[48457-48506]:IfStatement[48457-48506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48472-48506]:Block[48472-48506]"
    }, {
      "left" : "f.close();",
      "right" : "f.close();",
      "info" : "ExpressionStatement[48486-48496]:ExpressionStatement[48486-48496]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[48895-48902]:Modifier[48895-48902]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[48903-48910]:PrimitiveType[48903-48910]"
    }, {
      "left" : "verifyOrCreateRemoteSpecialFolder",
      "right" : "verifyOrCreateRemoteSpecialFolder",
      "info" : "SimpleName[48911-48944]:SimpleName[48911-48944]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[48945-48966]:SingleVariableDeclaration[48945-48966]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[48968-48987]:SingleVariableDeclaration[48968-48987]"
    }, {
      "left" : "final Folder remoteFolder",
      "right" : "final Folder remoteFolder",
      "info" : "SingleVariableDeclaration[48989-49014]:SingleVariableDeclaration[48989-49014]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[49016-49048]:SingleVariableDeclaration[49016-49048]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[49057-49075]:SimpleType[49057-49075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49076-49767]:Block[49076-49767]"
    }, {
      "left" : "if (folder.equals(account.getTrashFolderName()) ||\n                folder.equals(account.getSentFolderName()) ||\n                folder.equals(account.getDraftsFolderName()))",
      "right" : "if (folder.equals(account.getTrashFolderName()) ||\n                folder.equals(account.getSentFolderName()) ||\n                folder.equals(account.getDraftsFolderName()))",
      "info" : "IfStatement[49086-49740]:IfStatement[49086-49740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49261-49740]:Block[49261-49740]"
    }, {
      "left" : "if (!remoteFolder.exists())",
      "right" : "if (!remoteFolder.exists())",
      "info" : "IfStatement[49275-49730]:IfStatement[49275-49730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49303-49730]:Block[49303-49730]"
    }, {
      "left" : "if (!remoteFolder.create(FolderType.HOLDS_MESSAGES))",
      "right" : "if (!remoteFolder.create(FolderType.HOLDS_MESSAGES))",
      "info" : "IfStatement[49321-49716]:IfStatement[49321-49716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49374-49716]:Block[49374-49716]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[49396-49547]:EnhancedForStatement[49396-49547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49447-49547]:Block[49447-49547]"
    }, {
      "left" : "l.synchronizeMailboxFinished(account, folder, 0, 0);",
      "right" : "l.synchronizeMailboxFinished(account, folder, 0, 0);",
      "info" : "ExpressionStatement[49473-49525]:ExpressionStatement[49473-49525]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[49568-49663]:IfStatement[49568-49663]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Done synchronizing folder \" + folder);",
      "right" : "Log.i(K9.LOG_TAG, \"Done synchronizing folder \" + folder);",
      "info" : "ExpressionStatement[49606-49663]:ExpressionStatement[49606-49663]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[49685-49698]:ReturnStatement[49685-49698]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[49749-49761]:ReturnStatement[49749-49761]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[50581-50588]:Modifier[50581-50588]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[50589-50592]:PrimitiveType[50589-50592]"
    }, {
      "left" : "downloadMessages",
      "right" : "downloadMessages",
      "info" : "SimpleName[50593-50609]:SimpleName[50593-50609]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[50610-50631]:SingleVariableDeclaration[50610-50631]"
    }, {
      "left" : "final Folder remoteFolder",
      "right" : "final Folder remoteFolder",
      "info" : "SingleVariableDeclaration[50633-50658]:SingleVariableDeclaration[50633-50658]"
    }, {
      "left" : "final LocalFolder localFolder",
      "right" : "final LocalFolder localFolder",
      "info" : "SingleVariableDeclaration[50693-50722]:SingleVariableDeclaration[50693-50722]"
    }, {
      "left" : "List<Message> inputMessages",
      "right" : "List<Message> inputMessages",
      "info" : "SingleVariableDeclaration[50724-50751]:SingleVariableDeclaration[50724-50751]"
    }, {
      "left" : "boolean flagSyncOnly",
      "right" : "boolean flagSyncOnly",
      "info" : "SingleVariableDeclaration[50786-50806]:SingleVariableDeclaration[50786-50806]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[50815-50833]:SimpleType[50815-50833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50834-57050]:Block[50834-57050]"
    }, {
      "left" : "final Date earliestDate = account.getEarliestPollDate();",
      "right" : "final Date earliestDate = account.getEarliestPollDate();",
      "info" : "VariableDeclarationStatement[50845-50901]:VariableDeclarationStatement[50845-50901]"
    }, {
      "left" : "Date downloadStarted = new Date();",
      "right" : "Date downloadStarted = new Date();",
      "info" : "VariableDeclarationStatement[50910-50944]:VariableDeclarationStatement[50910-50944]"
    }, {
      "left" : "if (earliestDate != null)",
      "right" : "if (earliestDate != null)",
      "info" : "IfStatement[50961-51122]:IfStatement[50961-51122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50987-51122]:Block[50987-51122]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[51001-51112]:IfStatement[51001-51112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51015-51112]:Block[51015-51112]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Only syncing messages after \" + earliestDate);",
      "right" : "Log.d(K9.LOG_TAG, \"Only syncing messages after \" + earliestDate);",
      "info" : "ExpressionStatement[51033-51098]:ExpressionStatement[51033-51098]"
    }, {
      "left" : "final String folder = remoteFolder.getName();",
      "right" : "final String folder = remoteFolder.getName();",
      "info" : "VariableDeclarationStatement[51131-51176]:VariableDeclarationStatement[51131-51176]"
    }, {
      "left" : "int unreadBeforeStart = 0;",
      "right" : "int unreadBeforeStart = 0;",
      "info" : "VariableDeclarationStatement[51186-51212]:VariableDeclarationStatement[51186-51212]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[51221-51489]:TryStatement[51221-51489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51225-51355]:Block[51225-51355]"
    }, {
      "left" : "AccountStats stats = account.getStats(context);",
      "right" : "AccountStats stats = account.getStats(context);",
      "info" : "VariableDeclarationStatement[51239-51286]:VariableDeclarationStatement[51239-51286]"
    }, {
      "left" : "unreadBeforeStart = stats.unreadMessageCount;",
      "right" : "unreadBeforeStart = stats.unreadMessageCount;",
      "info" : "ExpressionStatement[51299-51344]:ExpressionStatement[51299-51344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51385-51489]:Block[51385-51489]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to getUnreadMessageCount for account: \" + account, e);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to getUnreadMessageCount for account: \" + account, e);",
      "info" : "ExpressionStatement[51399-51479]:ExpressionStatement[51399-51479]"
    }, {
      "left" : "List<Message> syncFlagMessages = new ArrayList<Message>();",
      "right" : "List<Message> syncFlagMessages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[51499-51557]:VariableDeclarationStatement[51499-51557]"
    }, {
      "left" : "List<Message> unsyncedMessages = new ArrayList<Message>();",
      "right" : "List<Message> unsyncedMessages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[51566-51624]:VariableDeclarationStatement[51566-51624]"
    }, {
      "left" : "final AtomicInteger newMessages = new AtomicInteger(0);",
      "right" : "final AtomicInteger newMessages = new AtomicInteger(0);",
      "info" : "VariableDeclarationStatement[51633-51688]:VariableDeclarationStatement[51633-51688]"
    }, {
      "left" : "List<Message> messages = new ArrayList<Message>(inputMessages);",
      "right" : "List<Message> messages = new ArrayList<Message>(inputMessages);",
      "info" : "VariableDeclarationStatement[51698-51761]:VariableDeclarationStatement[51698-51761]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[51771-51959]:EnhancedForStatement[51771-51959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51804-51959]:Block[51804-51959]"
    }, {
      "left" : "evaluateMessageForDownload(message, folder, localFolder, remoteFolder, account, unsyncedMessages, syncFlagMessages , flagSyncOnly);",
      "right" : "evaluateMessageForDownload(message, folder, localFolder, remoteFolder, account, unsyncedMessages, syncFlagMessages , flagSyncOnly);",
      "info" : "ExpressionStatement[51818-51949]:ExpressionStatement[51818-51949]"
    }, {
      "left" : "final AtomicInteger progress = new AtomicInteger(0);",
      "right" : "final AtomicInteger progress = new AtomicInteger(0);",
      "info" : "VariableDeclarationStatement[51969-52021]:VariableDeclarationStatement[51969-52021]"
    }, {
      "left" : "final int todo = unsyncedMessages.size() + syncFlagMessages.size();",
      "right" : "final int todo = unsyncedMessages.size() + syncFlagMessages.size();",
      "info" : "VariableDeclarationStatement[52030-52097]:VariableDeclarationStatement[52030-52097]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[52106-52241]:EnhancedForStatement[52106-52241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52149-52241]:Block[52149-52241]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "right" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "info" : "ExpressionStatement[52163-52231]:ExpressionStatement[52163-52231]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[52251-52359]:IfStatement[52251-52359]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Have \" + unsyncedMessages.size() + \" unsynced messages\");",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Have \" + unsyncedMessages.size() + \" unsynced messages\");",
      "info" : "ExpressionStatement[52277-52359]:ExpressionStatement[52277-52359]"
    }, {
      "left" : "messages.clear();",
      "right" : "messages.clear();",
      "info" : "ExpressionStatement[52369-52386]:ExpressionStatement[52369-52386]"
    }, {
      "left" : "final List<Message> largeMessages = new ArrayList<Message>();",
      "right" : "final List<Message> largeMessages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[52395-52456]:VariableDeclarationStatement[52395-52456]"
    }, {
      "left" : "final List<Message> smallMessages = new ArrayList<Message>();",
      "right" : "final List<Message> smallMessages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[52465-52526]:VariableDeclarationStatement[52465-52526]"
    }, {
      "left" : "if (!unsyncedMessages.isEmpty())",
      "right" : "if (!unsyncedMessages.isEmpty())",
      "info" : "IfStatement[52535-54164]:IfStatement[52535-54164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52568-54164]:Block[52568-54164]"
    }, {
      "left" : "Collections.sort(unsyncedMessages, new UidReverseComparator());",
      "right" : "Collections.sort(unsyncedMessages, new UidReverseComparator());",
      "info" : "ExpressionStatement[52777-52840]:ExpressionStatement[52777-52840]"
    }, {
      "left" : "int visibleLimit = localFolder.getVisibleLimit();",
      "right" : "int visibleLimit = localFolder.getVisibleLimit();",
      "info" : "VariableDeclarationStatement[52853-52902]:VariableDeclarationStatement[52853-52902]"
    }, {
      "left" : "int listSize = unsyncedMessages.size();",
      "right" : "int listSize = unsyncedMessages.size();",
      "info" : "VariableDeclarationStatement[52915-52954]:VariableDeclarationStatement[52915-52954]"
    }, {
      "left" : "if ((visibleLimit > 0) && (listSize > visibleLimit))",
      "right" : "if ((visibleLimit > 0) && (listSize > visibleLimit))",
      "info" : "IfStatement[52968-53114]:IfStatement[52968-53114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53021-53114]:Block[53021-53114]"
    }, {
      "left" : "unsyncedMessages = unsyncedMessages.subList(0, visibleLimit);",
      "right" : "unsyncedMessages = unsyncedMessages.subList(0, visibleLimit);",
      "info" : "ExpressionStatement[53039-53100]:ExpressionStatement[53039-53100]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[53128-53165]:VariableDeclarationStatement[53128-53165]"
    }, {
      "left" : "if (remoteFolder.supportsFetchingFlags())",
      "right" : "if (remoteFolder.supportsFetchingFlags())",
      "info" : "IfStatement[53178-53284]:IfStatement[53178-53284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53220-53284]:Block[53220-53284]"
    }, {
      "left" : "fp.add(FetchProfile.Item.FLAGS);",
      "right" : "fp.add(FetchProfile.Item.FLAGS);",
      "info" : "ExpressionStatement[53238-53270]:ExpressionStatement[53238-53270]"
    }, {
      "left" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "right" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[53297-53332]:ExpressionStatement[53297-53332]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[53346-53489]:IfStatement[53346-53489]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: About to fetch \" + unsyncedMessages.size() + \" unsynced messages for folder \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: About to fetch \" + unsyncedMessages.size() + \" unsynced messages for folder \" + folder);",
      "info" : "ExpressionStatement[53376-53489]:ExpressionStatement[53376-53489]"
    }, {
      "left" : "fetchUnsyncedMessages(account, remoteFolder, unsyncedMessages, smallMessages, largeMessages, progress, todo, fp);",
      "right" : "fetchUnsyncedMessages(account, remoteFolder, unsyncedMessages, smallMessages, largeMessages, progress, todo, fp);",
      "info" : "ExpressionStatement[53504-53617]:ExpressionStatement[53504-53617]"
    }, {
      "left" : "String updatedPushState = localFolder.getPushState();",
      "right" : "String updatedPushState = localFolder.getPushState();",
      "info" : "VariableDeclarationStatement[53631-53684]:VariableDeclarationStatement[53631-53684]"
    }, {
      "left" : "for (Message message : unsyncedMessages)",
      "right" : "for (Message message : unsyncedMessages)",
      "info" : "EnhancedForStatement[53697-53963]:EnhancedForStatement[53697-53963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53738-53963]:Block[53738-53963]"
    }, {
      "left" : "String newPushState = remoteFolder.getNewPushState(updatedPushState, message);",
      "right" : "String newPushState = remoteFolder.getNewPushState(updatedPushState, message);",
      "info" : "VariableDeclarationStatement[53756-53834]:VariableDeclarationStatement[53756-53834]"
    }, {
      "left" : "if (newPushState != null)",
      "right" : "if (newPushState != null)",
      "info" : "IfStatement[53851-53949]:IfStatement[53851-53949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53877-53949]:Block[53877-53949]"
    }, {
      "left" : "updatedPushState = newPushState;",
      "right" : "updatedPushState = newPushState;",
      "info" : "ExpressionStatement[53899-53931]:ExpressionStatement[53899-53931]"
    }, {
      "left" : "localFolder.setPushState(updatedPushState);",
      "right" : "localFolder.setPushState(updatedPushState);",
      "info" : "ExpressionStatement[53976-54019]:ExpressionStatement[53976-54019]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[54033-54152]:IfStatement[54033-54152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54047-54152]:Block[54047-54152]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Synced unsynced messages for folder \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Synced unsynced messages for folder \" + folder);",
      "info" : "ExpressionStatement[54065-54138]:ExpressionStatement[54065-54138]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[54174-54435]:IfStatement[54174-54435]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Have \"\n                  + largeMessages.size() + \" large messages and \"\n                  + smallMessages.size() + \" small messages out of \"\n                  + unsyncedMessages.size() + \" unsynced messages\");",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Have \"\n                  + largeMessages.size() + \" large messages and \"\n                  + smallMessages.size() + \" small messages out of \"\n                  + unsyncedMessages.size() + \" unsynced messages\");",
      "info" : "ExpressionStatement[54200-54435]:ExpressionStatement[54200-54435]"
    }, {
      "left" : "unsyncedMessages.clear();",
      "right" : "unsyncedMessages.clear();",
      "info" : "ExpressionStatement[54445-54470]:ExpressionStatement[54445-54470]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[54696-54733]:VariableDeclarationStatement[54696-54733]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[54742-54773]:ExpressionStatement[54742-54773]"
    }, {
      "left" : "downloadSmallMessages(account, remoteFolder, localFolder, smallMessages, progress, unreadBeforeStart, newMessages, todo, fp);",
      "right" : "downloadSmallMessages(account, remoteFolder, localFolder, smallMessages, progress, unreadBeforeStart, newMessages, todo, fp);",
      "info" : "ExpressionStatement[54888-55013]:ExpressionStatement[54888-55013]"
    }, {
      "left" : "smallMessages.clear();",
      "right" : "smallMessages.clear();",
      "info" : "ExpressionStatement[55022-55044]:ExpressionStatement[55022-55044]"
    }, {
      "left" : "fp.clear();",
      "right" : "fp.clear();",
      "info" : "ExpressionStatement[55145-55156]:ExpressionStatement[55145-55156]"
    }, {
      "left" : "fp.add(FetchProfile.Item.STRUCTURE);",
      "right" : "fp.add(FetchProfile.Item.STRUCTURE);",
      "info" : "ExpressionStatement[55165-55201]:ExpressionStatement[55165-55201]"
    }, {
      "left" : "downloadLargeMessages(account, remoteFolder, localFolder, largeMessages, progress, unreadBeforeStart,  newMessages, todo, fp);",
      "right" : "downloadLargeMessages(account, remoteFolder, localFolder, largeMessages, progress, unreadBeforeStart,  newMessages, todo, fp);",
      "info" : "ExpressionStatement[55210-55336]:ExpressionStatement[55210-55336]"
    }, {
      "left" : "largeMessages.clear();",
      "right" : "largeMessages.clear();",
      "info" : "ExpressionStatement[55345-55367]:ExpressionStatement[55345-55367]"
    }, {
      "left" : "refreshLocalMessageFlags(account, remoteFolder, localFolder, syncFlagMessages, progress, todo);",
      "right" : "refreshLocalMessageFlags(account, remoteFolder, localFolder, syncFlagMessages, progress, todo);",
      "info" : "ExpressionStatement[55507-55602]:ExpressionStatement[55507-55602]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[55612-55754]:IfStatement[55612-55754]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Synced remote messages for folder \" + folder + \", \" + newMessages.get() + \" new messages\");",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Synced remote messages for folder \" + folder + \", \" + newMessages.get() + \" new messages\");",
      "info" : "ExpressionStatement[55638-55754]:ExpressionStatement[55638-55754]"
    }, {
      "left" : "localFolder.purgeToVisibleLimit(new MessageRemovalListener() {\n            @Override\n            public void messageRemoved(Message message) {\n                for (MessagingListener l : getListeners()) {\n                    l.synchronizeMailboxRemovedMessage(account, folder, message);\n                }\n            }\n\n        });",
      "right" : "localFolder.purgeToVisibleLimit(new MessageRemovalListener() {\n            @Override\n            public void messageRemoved(Message message) {\n                for (MessagingListener l : getListeners()) {\n                    l.synchronizeMailboxRemovedMessage(account, folder, message);\n                }\n            }\n\n        });",
      "info" : "ExpressionStatement[55764-56094]:ExpressionStatement[55764-56094]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[55839-55848]:MarkerAnnotation[55839-55848]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55861-55867]:Modifier[55861-55867]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55868-55872]:PrimitiveType[55868-55872]"
    }, {
      "left" : "messageRemoved",
      "right" : "messageRemoved",
      "info" : "SimpleName[55873-55887]:SimpleName[55873-55887]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[55888-55903]:SingleVariableDeclaration[55888-55903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55905-56081]:Block[55905-56081]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[55923-56067]:EnhancedForStatement[55923-56067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55966-56067]:Block[55966-56067]"
    }, {
      "left" : "l.synchronizeMailboxRemovedMessage(account, folder, message);",
      "right" : "l.synchronizeMailboxRemovedMessage(account, folder, message);",
      "info" : "ExpressionStatement[55988-56049]:ExpressionStatement[55988-56049]"
    }, {
      "left" : "Long oldestMessageTime = localFolder.getOldestMessageDate();",
      "right" : "Long oldestMessageTime = localFolder.getOldestMessageDate();",
      "info" : "VariableDeclarationStatement[56503-56563]:VariableDeclarationStatement[56503-56563]"
    }, {
      "left" : "if (oldestMessageTime != null)",
      "right" : "if (oldestMessageTime != null)",
      "info" : "IfStatement[56573-57010]:IfStatement[56573-57010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56604-57010]:Block[56604-57010]"
    }, {
      "left" : "Date oldestExtantMessage = new Date(oldestMessageTime);",
      "right" : "Date oldestExtantMessage = new Date(oldestMessageTime);",
      "info" : "VariableDeclarationStatement[56618-56673]:VariableDeclarationStatement[56618-56673]"
    }, {
      "left" : "if (oldestExtantMessage.before(downloadStarted) &&\n                    oldestExtantMessage.after(new Date(account.getLatestOldMessageSeenTime())))",
      "right" : "if (oldestExtantMessage.before(downloadStarted) &&\n                    oldestExtantMessage.after(new Date(account.getLatestOldMessageSeenTime())))",
      "info" : "IfStatement[56686-56999]:IfStatement[56686-56999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56833-56999]:Block[56833-56999]"
    }, {
      "left" : "account.setLatestOldMessageSeenTime(oldestExtantMessage.getTime());",
      "right" : "account.setLatestOldMessageSeenTime(oldestExtantMessage.getTime());",
      "info" : "ExpressionStatement[56851-56918]:ExpressionStatement[56851-56918]"
    }, {
      "left" : "account.save(Preferences.getPreferences(context));",
      "right" : "account.save(Preferences.getPreferences(context));",
      "info" : "ExpressionStatement[56935-56985]:ExpressionStatement[56935-56985]"
    }, {
      "left" : "return newMessages.get();",
      "right" : "return newMessages.get();",
      "info" : "ReturnStatement[57019-57044]:ReturnStatement[57019-57044]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57055-57062]:Modifier[57055-57062]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57063-57067]:PrimitiveType[57063-57067]"
    }, {
      "left" : "evaluateMessageForDownload",
      "right" : "evaluateMessageForDownload",
      "info" : "SimpleName[57068-57094]:SimpleName[57068-57094]"
    }, {
      "left" : "final Message message",
      "right" : "final Message message",
      "info" : "SingleVariableDeclaration[57095-57116]:SingleVariableDeclaration[57095-57116]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[57118-57137]:SingleVariableDeclaration[57118-57137]"
    }, {
      "left" : "final LocalFolder localFolder",
      "right" : "final LocalFolder localFolder",
      "info" : "SingleVariableDeclaration[57183-57212]:SingleVariableDeclaration[57183-57212]"
    }, {
      "left" : "final Folder remoteFolder",
      "right" : "final Folder remoteFolder",
      "info" : "SingleVariableDeclaration[57258-57283]:SingleVariableDeclaration[57258-57283]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[57329-57350]:SingleVariableDeclaration[57329-57350]"
    }, {
      "left" : "final List<Message> unsyncedMessages",
      "right" : "final List<Message> unsyncedMessages",
      "info" : "SingleVariableDeclaration[57396-57432]:SingleVariableDeclaration[57396-57432]"
    }, {
      "left" : "final List<Message> syncFlagMessages",
      "right" : "final List<Message> syncFlagMessages",
      "info" : "SingleVariableDeclaration[57478-57514]:SingleVariableDeclaration[57478-57514]"
    }, {
      "left" : "boolean flagSyncOnly",
      "right" : "boolean flagSyncOnly",
      "info" : "SingleVariableDeclaration[57560-57580]:SingleVariableDeclaration[57560-57580]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[57589-57607]:SimpleType[57589-57607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57608-60056]:Block[57608-60056]"
    }, {
      "left" : "if (message.isSet(Flag.DELETED))",
      "right" : "if (message.isSet(Flag.DELETED))",
      "info" : "IfStatement[57618-57725]:IfStatement[57618-57725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57651-57725]:Block[57651-57725]"
    }, {
      "left" : "syncFlagMessages.add(message);",
      "right" : "syncFlagMessages.add(message);",
      "info" : "ExpressionStatement[57665-57695]:ExpressionStatement[57665-57695]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[57708-57715]:ReturnStatement[57708-57715]"
    }, {
      "left" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "right" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "info" : "VariableDeclarationStatement[57735-57799]:VariableDeclarationStatement[57735-57799]"
    }, {
      "left" : "if (localMessage == null)",
      "right" : "if (localMessage == null)",
      "info" : "IfStatement[57809-60050]:IfStatement[57809-60050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57835-59199]:Block[57835-59199]"
    }, {
      "left" : "if (!flagSyncOnly)",
      "right" : "if (!flagSyncOnly)",
      "info" : "IfStatement[57849-59189]:IfStatement[57849-59189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57868-59189]:Block[57868-59189]"
    }, {
      "left" : "if (!message.isSet(Flag.X_DOWNLOADED_FULL) && !message.isSet(Flag.X_DOWNLOADED_PARTIAL))",
      "right" : "if (!message.isSet(Flag.X_DOWNLOADED_FULL) && !message.isSet(Flag.X_DOWNLOADED_PARTIAL))",
      "info" : "IfStatement[57886-59175]:IfStatement[57886-59175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57975-58196]:Block[57975-58196]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[57997-58126]:IfStatement[57997-58126]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid() + \" has not yet been downloaded\");",
      "right" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid() + \" has not yet been downloaded\");",
      "info" : "ExpressionStatement[58035-58126]:ExpressionStatement[58035-58126]"
    }, {
      "left" : "unsyncedMessages.add(message);",
      "right" : "unsyncedMessages.add(message);",
      "info" : "ExpressionStatement[58148-58178]:ExpressionStatement[58148-58178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58202-59175]:Block[58202-59175]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[58224-58358]:IfStatement[58224-58358]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid() + \" is partially or fully downloaded\");",
      "right" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid() + \" is partially or fully downloaded\");",
      "info" : "ExpressionStatement[58262-58358]:ExpressionStatement[58262-58358]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(message));",
      "right" : "localFolder.appendMessages(Collections.singletonList(message));",
      "info" : "ExpressionStatement[58437-58500]:ExpressionStatement[58437-58500]"
    }, {
      "left" : "localMessage = localFolder.getMessage(message.getUid());",
      "right" : "localMessage = localFolder.getMessage(message.getUid());",
      "info" : "ExpressionStatement[58522-58578]:ExpressionStatement[58522-58578]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, message.isSet(Flag.X_DOWNLOADED_FULL));",
      "right" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, message.isSet(Flag.X_DOWNLOADED_FULL));",
      "info" : "ExpressionStatement[58600-58684]:ExpressionStatement[58600-58684]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_DOWNLOADED_PARTIAL, message.isSet(Flag.X_DOWNLOADED_PARTIAL));",
      "right" : "localMessage.setFlag(Flag.X_DOWNLOADED_PARTIAL, message.isSet(Flag.X_DOWNLOADED_PARTIAL));",
      "info" : "ExpressionStatement[58705-58795]:ExpressionStatement[58705-58795]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[58817-59157]:EnhancedForStatement[58817-59157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58860-59157]:Block[58860-59157]"
    }, {
      "left" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[58886-58956]:ExpressionStatement[58886-58956]"
    }, {
      "left" : "if (!localMessage.isSet(Flag.SEEN))",
      "right" : "if (!localMessage.isSet(Flag.SEEN))",
      "info" : "IfStatement[58981-59135]:IfStatement[58981-59135]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59017-59135]:Block[59017-59135]"
    }, {
      "left" : "l.synchronizeMailboxNewMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxNewMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[59047-59109]:ExpressionStatement[59047-59109]"
    }, {
      "left" : "if (!localMessage.isSet(Flag.DELETED))",
      "right" : "if (!localMessage.isSet(Flag.DELETED))",
      "info" : "IfStatement[59205-60050]:IfStatement[59205-60050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59244-60050]:Block[59244-60050]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[59258-59381]:IfStatement[59258-59381]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid() + \" is present in the local store\");",
      "right" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid() + \" is present in the local store\");",
      "info" : "ExpressionStatement[59288-59381]:ExpressionStatement[59288-59381]"
    }, {
      "left" : "if (!localMessage.isSet(Flag.X_DOWNLOADED_FULL) && !localMessage.isSet(Flag.X_DOWNLOADED_PARTIAL))",
      "right" : "if (!localMessage.isSet(Flag.X_DOWNLOADED_FULL) && !localMessage.isSet(Flag.X_DOWNLOADED_PARTIAL))",
      "info" : "IfStatement[59395-60040]:IfStatement[59395-60040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59494-59745]:Block[59494-59745]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[59512-59683]:IfStatement[59512-59683]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid()\n                          + \" is not downloaded, even partially; trying again\");",
      "right" : "Log.v(K9.LOG_TAG, \"Message with uid \" + message.getUid()\n                          + \" is not downloaded, even partially; trying again\");",
      "info" : "ExpressionStatement[59546-59683]:ExpressionStatement[59546-59683]"
    }, {
      "left" : "unsyncedMessages.add(message);",
      "right" : "unsyncedMessages.add(message);",
      "info" : "ExpressionStatement[59701-59731]:ExpressionStatement[59701-59731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59751-60040]:Block[59751-60040]"
    }, {
      "left" : "String newPushState = remoteFolder.getNewPushState(localFolder.getPushState(), message);",
      "right" : "String newPushState = remoteFolder.getNewPushState(localFolder.getPushState(), message);",
      "info" : "VariableDeclarationStatement[59769-59857]:VariableDeclarationStatement[59769-59857]"
    }, {
      "left" : "if (newPushState != null)",
      "right" : "if (newPushState != null)",
      "info" : "IfStatement[59874-59979]:IfStatement[59874-59979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59900-59979]:Block[59900-59979]"
    }, {
      "left" : "localFolder.setPushState(newPushState);",
      "right" : "localFolder.setPushState(newPushState);",
      "info" : "ExpressionStatement[59922-59961]:ExpressionStatement[59922-59961]"
    }, {
      "left" : "syncFlagMessages.add(message);",
      "right" : "syncFlagMessages.add(message);",
      "info" : "ExpressionStatement[59996-60026]:ExpressionStatement[59996-60026]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[60062-60069]:Modifier[60062-60069]"
    }, {
      "left" : "T extends Message",
      "right" : "T extends Message",
      "info" : "TypeParameter[60071-60088]:TypeParameter[60071-60088]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60090-60094]:PrimitiveType[60090-60094]"
    }, {
      "left" : "fetchUnsyncedMessages",
      "right" : "fetchUnsyncedMessages",
      "info" : "SimpleName[60095-60116]:SimpleName[60095-60116]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[60117-60138]:SingleVariableDeclaration[60117-60138]"
    }, {
      "left" : "final Folder<T> remoteFolder",
      "right" : "final Folder<T> remoteFolder",
      "info" : "SingleVariableDeclaration[60140-60168]:SingleVariableDeclaration[60140-60168]"
    }, {
      "left" : "List<T> unsyncedMessages",
      "right" : "List<T> unsyncedMessages",
      "info" : "SingleVariableDeclaration[60209-60233]:SingleVariableDeclaration[60209-60233]"
    }, {
      "left" : "final List<Message> smallMessages",
      "right" : "final List<Message> smallMessages",
      "info" : "SingleVariableDeclaration[60274-60307]:SingleVariableDeclaration[60274-60307]"
    }, {
      "left" : "final List<Message> largeMessages",
      "right" : "final List<Message> largeMessages",
      "info" : "SingleVariableDeclaration[60348-60381]:SingleVariableDeclaration[60348-60381]"
    }, {
      "left" : "final AtomicInteger progress",
      "right" : "final AtomicInteger progress",
      "info" : "SingleVariableDeclaration[60422-60450]:SingleVariableDeclaration[60422-60450]"
    }, {
      "left" : "final int todo",
      "right" : "final int todo",
      "info" : "SingleVariableDeclaration[60491-60505]:SingleVariableDeclaration[60491-60505]"
    }, {
      "left" : "FetchProfile fp",
      "right" : "FetchProfile fp",
      "info" : "SingleVariableDeclaration[60546-60561]:SingleVariableDeclaration[60546-60561]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[60570-60588]:SimpleType[60570-60588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60589-62763]:Block[60589-62763]"
    }, {
      "left" : "final String folder = remoteFolder.getName();",
      "right" : "final String folder = remoteFolder.getName();",
      "info" : "VariableDeclarationStatement[60599-60644]:VariableDeclarationStatement[60599-60644]"
    }, {
      "left" : "final Date earliestDate = account.getEarliestPollDate();",
      "right" : "final Date earliestDate = account.getEarliestPollDate();",
      "info" : "VariableDeclarationStatement[60654-60710]:VariableDeclarationStatement[60654-60710]"
    }, {
      "left" : "remoteFolder.fetch(unsyncedMessages, fp,\n        new MessageRetrievalListener<T>() {\n            @Override\n            public void messageFinished(T message, int number, int ofTotal) {\n                try {\n                    if (message.isSet(Flag.DELETED) || message.olderThan(earliestDate)) {\n                        if (K9.DEBUG) {\n                            if (message.isSet(Flag.DELETED)) {\n                                Log.v(K9.LOG_TAG, \"Newly downloaded message \" + account + \":\" + folder + \":\" + message.getUid()\n                                      + \" was marked deleted on server, skipping\");\n                            } else {\n                                Log.d(K9.LOG_TAG, \"Newly downloaded message \" + message.getUid() + \" is older than \"\n                                      + earliestDate + \", skipping\");\n                            }\n                        }\n                        progress.incrementAndGet();\n                        for (MessagingListener l : getListeners()) {\n                            l.synchronizeMailboxProgress(account, folder, progress.get(), todo);\n                        }\n                        return;\n                    }\n\n                    if (account.getMaximumAutoDownloadMessageSize() > 0 &&\n                    message.getSize() > account.getMaximumAutoDownloadMessageSize()) {\n                        largeMessages.add(message);\n                    } else {\n                        smallMessages.add(message);\n                    }\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Error while storing downloaded message.\", e);\n                    addErrorMessage(account, null, e);\n                }\n            }\n\n            @Override\n            public void messageStarted(String uid, int number, int ofTotal) {}\n\n            @Override\n            public void messagesFinished(int total) {\n                // FIXME this method is almost never invoked by various Stores! Don't rely on it unless fixed!!\n            }\n\n        });",
      "right" : "remoteFolder.fetch(unsyncedMessages, fp,\n        new MessageRetrievalListener<T>() {\n            @Override\n            public void messageFinished(T message, int number, int ofTotal) {\n                try {\n                    if (message.isSet(Flag.DELETED) || message.olderThan(earliestDate)) {\n                        if (K9.DEBUG) {\n                            if (message.isSet(Flag.DELETED)) {\n                                Log.v(K9.LOG_TAG, \"Newly downloaded message \" + account + \":\" + folder + \":\" + message.getUid()\n                                      + \" was marked deleted on server, skipping\");\n                            } else {\n                                Log.d(K9.LOG_TAG, \"Newly downloaded message \" + message.getUid() + \" is older than \"\n                                      + earliestDate + \", skipping\");\n                            }\n                        }\n                        progress.incrementAndGet();\n                        for (MessagingListener l : getListeners()) {\n                            l.synchronizeMailboxProgress(account, folder, progress.get(), todo);\n                        }\n                        return;\n                    }\n\n                    if (account.getMaximumAutoDownloadMessageSize() > 0 &&\n                    message.getSize() > account.getMaximumAutoDownloadMessageSize()) {\n                        largeMessages.add(message);\n                    } else {\n                        smallMessages.add(message);\n                    }\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Error while storing downloaded message.\", e);\n                    addErrorMessage(account, null, e);\n                }\n            }\n\n            @Override\n            public void messageStarted(String uid, int number, int ofTotal) {}\n\n            @Override\n            public void messagesFinished(int total) {\n                // FIXME this method is almost never invoked by various Stores! Don't rely on it unless fixed!!\n            }\n\n        });",
      "info" : "ExpressionStatement[60720-62757]:ExpressionStatement[60720-62757]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[60817-60826]:MarkerAnnotation[60817-60826]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60839-60845]:Modifier[60839-60845]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60846-60850]:PrimitiveType[60846-60850]"
    }, {
      "left" : "messageFinished",
      "right" : "messageFinished",
      "info" : "SimpleName[60851-60866]:SimpleName[60851-60866]"
    }, {
      "left" : "T message",
      "right" : "T message",
      "info" : "SingleVariableDeclaration[60867-60876]:SingleVariableDeclaration[60867-60876]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[60878-60888]:SingleVariableDeclaration[60878-60888]"
    }, {
      "left" : "int ofTotal",
      "right" : "int ofTotal",
      "info" : "SingleVariableDeclaration[60890-60901]:SingleVariableDeclaration[60890-60901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60903-62439]:Block[60903-62439]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[60921-62425]:TryStatement[60921-62425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60925-62245]:Block[60925-62245]"
    }, {
      "left" : "if (message.isSet(Flag.DELETED) || message.olderThan(earliestDate))",
      "right" : "if (message.isSet(Flag.DELETED) || message.olderThan(earliestDate))",
      "info" : "IfStatement[60947-61909]:IfStatement[60947-61909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61015-61909]:Block[61015-61909]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[61041-61611]:IfStatement[61041-61611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61055-61611]:Block[61055-61611]"
    }, {
      "left" : "if (message.isSet(Flag.DELETED))",
      "right" : "if (message.isSet(Flag.DELETED))",
      "info" : "IfStatement[61085-61585]:IfStatement[61085-61585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61118-61361]:Block[61118-61361]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Newly downloaded message \" + account + \":\" + folder + \":\" + message.getUid()\n                                      + \" was marked deleted on server, skipping\");",
      "right" : "Log.v(K9.LOG_TAG, \"Newly downloaded message \" + account + \":\" + folder + \":\" + message.getUid()\n                                      + \" was marked deleted on server, skipping\");",
      "info" : "ExpressionStatement[61152-61331]:ExpressionStatement[61152-61331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61367-61585]:Block[61367-61585]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Newly downloaded message \" + message.getUid() + \" is older than \"\n                                      + earliestDate + \", skipping\");",
      "right" : "Log.d(K9.LOG_TAG, \"Newly downloaded message \" + message.getUid() + \" is older than \"\n                                      + earliestDate + \", skipping\");",
      "info" : "ExpressionStatement[61401-61555]:ExpressionStatement[61401-61555]"
    }, {
      "left" : "progress.incrementAndGet();",
      "right" : "progress.incrementAndGet();",
      "info" : "ExpressionStatement[61636-61663]:ExpressionStatement[61636-61663]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[61688-61855]:EnhancedForStatement[61688-61855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61731-61855]:Block[61731-61855]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "right" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "info" : "ExpressionStatement[61761-61829]:ExpressionStatement[61761-61829]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[61880-61887]:ReturnStatement[61880-61887]"
    }, {
      "left" : "if (account.getMaximumAutoDownloadMessageSize() > 0 &&\n                    message.getSize() > account.getMaximumAutoDownloadMessageSize())",
      "right" : "if (account.getMaximumAutoDownloadMessageSize() > 0 &&\n                    message.getSize() > account.getMaximumAutoDownloadMessageSize())",
      "info" : "IfStatement[61931-62227]:IfStatement[61931-62227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62071-62146]:Block[62071-62146]"
    }, {
      "left" : "largeMessages.add(message);",
      "right" : "largeMessages.add(message);",
      "info" : "ExpressionStatement[62097-62124]:ExpressionStatement[62097-62124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62152-62227]:Block[62152-62227]"
    }, {
      "left" : "smallMessages.add(message);",
      "right" : "smallMessages.add(message);",
      "info" : "ExpressionStatement[62178-62205]:ExpressionStatement[62178-62205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62266-62425]:Block[62266-62425]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Error while storing downloaded message.\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Error while storing downloaded message.\", e);",
      "info" : "ExpressionStatement[62288-62352]:ExpressionStatement[62288-62352]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[62373-62407]:ExpressionStatement[62373-62407]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62453-62462]:MarkerAnnotation[62453-62462]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62475-62481]:Modifier[62475-62481]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[62482-62486]:PrimitiveType[62482-62486]"
    }, {
      "left" : "messageStarted",
      "right" : "messageStarted",
      "info" : "SimpleName[62487-62501]:SimpleName[62487-62501]"
    }, {
      "left" : "String uid",
      "right" : "String uid",
      "info" : "SingleVariableDeclaration[62502-62512]:SingleVariableDeclaration[62502-62512]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[62514-62524]:SingleVariableDeclaration[62514-62524]"
    }, {
      "left" : "int ofTotal",
      "right" : "int ofTotal",
      "info" : "SingleVariableDeclaration[62526-62537]:SingleVariableDeclaration[62526-62537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62539-62541]:Block[62539-62541]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62555-62564]:MarkerAnnotation[62555-62564]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62577-62583]:Modifier[62577-62583]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[62584-62588]:PrimitiveType[62584-62588]"
    }, {
      "left" : "messagesFinished",
      "right" : "messagesFinished",
      "info" : "SimpleName[62589-62605]:SimpleName[62589-62605]"
    }, {
      "left" : "int total",
      "right" : "int total",
      "info" : "SingleVariableDeclaration[62606-62615]:SingleVariableDeclaration[62606-62615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62617-62744]:Block[62617-62744]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[62769-62776]:Modifier[62769-62776]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62777-62784]:PrimitiveType[62777-62784]"
    }, {
      "left" : "shouldImportMessage",
      "right" : "shouldImportMessage",
      "info" : "SimpleName[62785-62804]:SimpleName[62785-62804]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[62805-62826]:SingleVariableDeclaration[62805-62826]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[62828-62847]:SingleVariableDeclaration[62828-62847]"
    }, {
      "left" : "final Message message",
      "right" : "final Message message",
      "info" : "SingleVariableDeclaration[62849-62870]:SingleVariableDeclaration[62849-62870]"
    }, {
      "left" : "final AtomicInteger progress",
      "right" : "final AtomicInteger progress",
      "info" : "SingleVariableDeclaration[62872-62900]:SingleVariableDeclaration[62872-62900]"
    }, {
      "left" : "final Date earliestDate",
      "right" : "final Date earliestDate",
      "info" : "SingleVariableDeclaration[62902-62925]:SingleVariableDeclaration[62902-62925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62927-63262]:Block[62927-63262]"
    }, {
      "left" : "if (account.isSearchByDateCapable() && message.olderThan(earliestDate))",
      "right" : "if (account.isSearchByDateCapable() && message.olderThan(earliestDate))",
      "info" : "IfStatement[62938-63235]:IfStatement[62938-63235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63010-63235]:Block[63010-63235]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[63024-63199]:IfStatement[63024-63199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63038-63199]:Block[63038-63199]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Message \" + message.getUid() + \" is older than \"\n                      + earliestDate + \", hence not saving\");",
      "right" : "Log.d(K9.LOG_TAG, \"Message \" + message.getUid() + \" is older than \"\n                      + earliestDate + \", hence not saving\");",
      "info" : "ExpressionStatement[63056-63185]:ExpressionStatement[63056-63185]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63212-63225]:ReturnStatement[63212-63225]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63244-63256]:ReturnStatement[63244-63256]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[63268-63275]:Modifier[63268-63275]"
    }, {
      "left" : "T extends Message",
      "right" : "T extends Message",
      "info" : "TypeParameter[63277-63294]:TypeParameter[63277-63294]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[63296-63300]:PrimitiveType[63296-63300]"
    }, {
      "left" : "downloadSmallMessages",
      "right" : "downloadSmallMessages",
      "info" : "SimpleName[63301-63322]:SimpleName[63301-63322]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[63323-63344]:SingleVariableDeclaration[63323-63344]"
    }, {
      "left" : "final Folder<T> remoteFolder",
      "right" : "final Folder<T> remoteFolder",
      "info" : "SingleVariableDeclaration[63346-63374]:SingleVariableDeclaration[63346-63374]"
    }, {
      "left" : "final LocalFolder localFolder",
      "right" : "final LocalFolder localFolder",
      "info" : "SingleVariableDeclaration[63415-63444]:SingleVariableDeclaration[63415-63444]"
    }, {
      "left" : "List<T> smallMessages",
      "right" : "List<T> smallMessages",
      "info" : "SingleVariableDeclaration[63485-63506]:SingleVariableDeclaration[63485-63506]"
    }, {
      "left" : "final AtomicInteger progress",
      "right" : "final AtomicInteger progress",
      "info" : "SingleVariableDeclaration[63547-63575]:SingleVariableDeclaration[63547-63575]"
    }, {
      "left" : "final int unreadBeforeStart",
      "right" : "final int unreadBeforeStart",
      "info" : "SingleVariableDeclaration[63616-63643]:SingleVariableDeclaration[63616-63643]"
    }, {
      "left" : "final AtomicInteger newMessages",
      "right" : "final AtomicInteger newMessages",
      "info" : "SingleVariableDeclaration[63684-63715]:SingleVariableDeclaration[63684-63715]"
    }, {
      "left" : "final int todo",
      "right" : "final int todo",
      "info" : "SingleVariableDeclaration[63756-63770]:SingleVariableDeclaration[63756-63770]"
    }, {
      "left" : "FetchProfile fp",
      "right" : "FetchProfile fp",
      "info" : "SingleVariableDeclaration[63811-63826]:SingleVariableDeclaration[63811-63826]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[63835-63853]:SimpleType[63835-63853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63854-66766]:Block[63854-66766]"
    }, {
      "left" : "final String folder = remoteFolder.getName();",
      "right" : "final String folder = remoteFolder.getName();",
      "info" : "VariableDeclarationStatement[63864-63909]:VariableDeclarationStatement[63864-63909]"
    }, {
      "left" : "final Date earliestDate = account.getEarliestPollDate();",
      "right" : "final Date earliestDate = account.getEarliestPollDate();",
      "info" : "VariableDeclarationStatement[63919-63975]:VariableDeclarationStatement[63919-63975]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[63985-64083]:IfStatement[63985-64083]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Fetching small messages for folder \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Fetching small messages for folder \" + folder);",
      "info" : "ExpressionStatement[64011-64083]:ExpressionStatement[64011-64083]"
    }, {
      "left" : "remoteFolder.fetch(smallMessages,\n        fp, new MessageRetrievalListener<T>() {\n            @Override\n            public void messageFinished(final T message, int number, int ofTotal) {\n                try {\n\n                    if (!shouldImportMessage(account, folder, message, progress, earliestDate)) {\n                        progress.incrementAndGet();\n\n                        return;\n                    }\n\n                    // Store the updated message locally\n                    final LocalMessage localMessage = localFolder.storeSmallMessage(message, new Runnable() {\n                        @Override\n                        public void run() {\n                            progress.incrementAndGet();\n                        }\n                    });\n\n                    // Increment the number of \"new messages\" if the newly downloaded message is\n                    // not marked as read.\n                    if (!localMessage.isSet(Flag.SEEN)) {\n                        newMessages.incrementAndGet();\n                    }\n\n                    if (K9.DEBUG)\n                        Log.v(K9.LOG_TAG, \"About to notify listeners that we got a new small message \"\n                              + account + \":\" + folder + \":\" + message.getUid());\n\n                    // Update the listener with what we've found\n                    for (MessagingListener l : getListeners()) {\n                        l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);\n                        l.synchronizeMailboxProgress(account, folder, progress.get(), todo);\n                        if (!localMessage.isSet(Flag.SEEN)) {\n                            l.synchronizeMailboxNewMessage(account, folder, localMessage);\n                        }\n                    }\n                    // Send a notification of this message\n\n                    if (shouldNotifyForMessage(account, localFolder, message)) {\n                        // Notify with the localMessage so that we don't have to recalculate the content preview.\n                        notifyAccount(context, account, localMessage, unreadBeforeStart);\n                    }\n\n                } catch (MessagingException me) {\n                    addErrorMessage(account, null, me);\n                    Log.e(K9.LOG_TAG, \"SYNC: fetch small messages\", me);\n                }\n            }\n\n            @Override\n            public void messageStarted(String uid, int number, int ofTotal) {}\n\n            @Override\n            public void messagesFinished(int total) {}\n        });",
      "right" : "remoteFolder.fetch(smallMessages,\n        fp, new MessageRetrievalListener<T>() {\n            @Override\n            public void messageFinished(final T message, int number, int ofTotal) {\n                try {\n\n                    if (!shouldImportMessage(account, folder, message, progress, earliestDate)) {\n                        progress.incrementAndGet();\n\n                        return;\n                    }\n\n                    // Store the updated message locally\n                    final LocalMessage localMessage = localFolder.storeSmallMessage(message, new Runnable() {\n                        @Override\n                        public void run() {\n                            progress.incrementAndGet();\n                        }\n                    });\n\n                    // Increment the number of \"new messages\" if the newly downloaded message is\n                    // not marked as read.\n                    if (!localMessage.isSet(Flag.SEEN)) {\n                        newMessages.incrementAndGet();\n                    }\n\n                    if (K9.DEBUG)\n                        Log.v(K9.LOG_TAG, \"About to notify listeners that we got a new small message \"\n                              + account + \":\" + folder + \":\" + message.getUid());\n\n                    // Update the listener with what we've found\n                    for (MessagingListener l : getListeners()) {\n                        l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);\n                        l.synchronizeMailboxProgress(account, folder, progress.get(), todo);\n                        if (!localMessage.isSet(Flag.SEEN)) {\n                            l.synchronizeMailboxNewMessage(account, folder, localMessage);\n                        }\n                    }\n                    // Send a notification of this message\n\n                    if (shouldNotifyForMessage(account, localFolder, message)) {\n                        // Notify with the localMessage so that we don't have to recalculate the content preview.\n                        notifyAccount(context, account, localMessage, unreadBeforeStart);\n                    }\n\n                } catch (MessagingException me) {\n                    addErrorMessage(account, null, me);\n                    Log.e(K9.LOG_TAG, \"SYNC: fetch small messages\", me);\n                }\n            }\n\n            @Override\n            public void messageStarted(String uid, int number, int ofTotal) {}\n\n            @Override\n            public void messagesFinished(int total) {}\n        });",
      "info" : "ExpressionStatement[64093-66647]:ExpressionStatement[64093-66647]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[64187-64196]:MarkerAnnotation[64187-64196]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64209-64215]:Modifier[64209-64215]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[64216-64220]:PrimitiveType[64216-64220]"
    }, {
      "left" : "messageFinished",
      "right" : "messageFinished",
      "info" : "SimpleName[64221-64236]:SimpleName[64221-64236]"
    }, {
      "left" : "final T message",
      "right" : "final T message",
      "info" : "SingleVariableDeclaration[64237-64252]:SingleVariableDeclaration[64237-64252]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[64254-64264]:SingleVariableDeclaration[64254-64264]"
    }, {
      "left" : "int ofTotal",
      "right" : "int ofTotal",
      "info" : "SingleVariableDeclaration[64266-64277]:SingleVariableDeclaration[64266-64277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64279-66455]:Block[64279-66455]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[64297-66441]:TryStatement[64297-66441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64301-66262]:Block[64301-66262]"
    }, {
      "left" : "if (!shouldImportMessage(account, folder, message, progress, earliestDate))",
      "right" : "if (!shouldImportMessage(account, folder, message, progress, earliestDate))",
      "info" : "IfStatement[64324-64508]:IfStatement[64324-64508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64400-64508]:Block[64400-64508]"
    }, {
      "left" : "progress.incrementAndGet();",
      "right" : "progress.incrementAndGet();",
      "info" : "ExpressionStatement[64426-64453]:ExpressionStatement[64426-64453]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[64479-64486]:ReturnStatement[64479-64486]"
    }, {
      "left" : "final LocalMessage localMessage = localFolder.storeSmallMessage(message, new Runnable() {\n                        @Override\n                        public void run() {\n                            progress.incrementAndGet();\n                        }\n                    });",
      "right" : "final LocalMessage localMessage = localFolder.storeSmallMessage(message, new Runnable() {\n                        @Override\n                        public void run() {\n                            progress.incrementAndGet();\n                        }\n                    });",
      "info" : "VariableDeclarationStatement[64587-64860]:VariableDeclarationStatement[64587-64860]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[64701-64710]:MarkerAnnotation[64701-64710]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64735-64741]:Modifier[64735-64741]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[64742-64746]:PrimitiveType[64742-64746]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[64747-64750]:SimpleName[64747-64750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64753-64836]:Block[64753-64836]"
    }, {
      "left" : "progress.incrementAndGet();",
      "right" : "progress.incrementAndGet();",
      "info" : "ExpressionStatement[64783-64810]:ExpressionStatement[64783-64810]"
    }, {
      "left" : "if (!localMessage.isSet(Flag.SEEN))",
      "right" : "if (!localMessage.isSet(Flag.SEEN))",
      "info" : "IfStatement[65022-65136]:IfStatement[65022-65136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65058-65136]:Block[65058-65136]"
    }, {
      "left" : "newMessages.incrementAndGet();",
      "right" : "newMessages.incrementAndGet();",
      "info" : "ExpressionStatement[65084-65114]:ExpressionStatement[65084-65114]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[65158-65356]:IfStatement[65158-65356]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"About to notify listeners that we got a new small message \"\n                              + account + \":\" + folder + \":\" + message.getUid());",
      "right" : "Log.v(K9.LOG_TAG, \"About to notify listeners that we got a new small message \"\n                              + account + \":\" + folder + \":\" + message.getUid());",
      "info" : "ExpressionStatement[65196-65356]:ExpressionStatement[65196-65356]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[65443-65876]:EnhancedForStatement[65443-65876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65486-65876]:Block[65486-65876]"
    }, {
      "left" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[65512-65582]:ExpressionStatement[65512-65582]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "right" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "info" : "ExpressionStatement[65607-65675]:ExpressionStatement[65607-65675]"
    }, {
      "left" : "if (!localMessage.isSet(Flag.SEEN))",
      "right" : "if (!localMessage.isSet(Flag.SEEN))",
      "info" : "IfStatement[65700-65854]:IfStatement[65700-65854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65736-65854]:Block[65736-65854]"
    }, {
      "left" : "l.synchronizeMailboxNewMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxNewMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[65766-65828]:ExpressionStatement[65766-65828]"
    }, {
      "left" : "if (shouldNotifyForMessage(account, localFolder, message))",
      "right" : "if (shouldNotifyForMessage(account, localFolder, message))",
      "info" : "IfStatement[65957-66243]:IfStatement[65957-66243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66016-66243]:Block[66016-66243]"
    }, {
      "left" : "notifyAccount(context, account, localMessage, unreadBeforeStart);",
      "right" : "notifyAccount(context, account, localMessage, unreadBeforeStart);",
      "info" : "ExpressionStatement[66156-66221]:ExpressionStatement[66156-66221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66293-66441]:Block[66293-66441]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[66315-66350]:ExpressionStatement[66315-66350]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"SYNC: fetch small messages\", me);",
      "right" : "Log.e(K9.LOG_TAG, \"SYNC: fetch small messages\", me);",
      "info" : "ExpressionStatement[66371-66423]:ExpressionStatement[66371-66423]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[66469-66478]:MarkerAnnotation[66469-66478]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66491-66497]:Modifier[66491-66497]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[66498-66502]:PrimitiveType[66498-66502]"
    }, {
      "left" : "messageStarted",
      "right" : "messageStarted",
      "info" : "SimpleName[66503-66517]:SimpleName[66503-66517]"
    }, {
      "left" : "String uid",
      "right" : "String uid",
      "info" : "SingleVariableDeclaration[66518-66528]:SingleVariableDeclaration[66518-66528]"
    }, {
      "left" : "int number",
      "right" : "int number",
      "info" : "SingleVariableDeclaration[66530-66540]:SingleVariableDeclaration[66530-66540]"
    }, {
      "left" : "int ofTotal",
      "right" : "int ofTotal",
      "info" : "SingleVariableDeclaration[66542-66553]:SingleVariableDeclaration[66542-66553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66555-66557]:Block[66555-66557]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[66571-66580]:MarkerAnnotation[66571-66580]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66593-66599]:Modifier[66593-66599]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[66600-66604]:PrimitiveType[66600-66604]"
    }, {
      "left" : "messagesFinished",
      "right" : "messagesFinished",
      "info" : "SimpleName[66605-66621]:SimpleName[66605-66621]"
    }, {
      "left" : "int total",
      "right" : "int total",
      "info" : "SingleVariableDeclaration[66622-66631]:SingleVariableDeclaration[66622-66631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66633-66635]:Block[66633-66635]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[66657-66760]:IfStatement[66657-66760]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Done fetching small messages for folder \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Done fetching small messages for folder \" + folder);",
      "info" : "ExpressionStatement[66683-66760]:ExpressionStatement[66683-66760]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[66774-66781]:Modifier[66774-66781]"
    }, {
      "left" : "T extends Message",
      "right" : "T extends Message",
      "info" : "TypeParameter[66783-66800]:TypeParameter[66783-66800]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[66802-66806]:PrimitiveType[66802-66806]"
    }, {
      "left" : "downloadLargeMessages",
      "right" : "downloadLargeMessages",
      "info" : "SimpleName[66807-66828]:SimpleName[66807-66828]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[66829-66850]:SingleVariableDeclaration[66829-66850]"
    }, {
      "left" : "final Folder<T> remoteFolder",
      "right" : "final Folder<T> remoteFolder",
      "info" : "SingleVariableDeclaration[66852-66880]:SingleVariableDeclaration[66852-66880]"
    }, {
      "left" : "final LocalFolder localFolder",
      "right" : "final LocalFolder localFolder",
      "info" : "SingleVariableDeclaration[66921-66950]:SingleVariableDeclaration[66921-66950]"
    }, {
      "left" : "List<T> largeMessages",
      "right" : "List<T> largeMessages",
      "info" : "SingleVariableDeclaration[66991-67012]:SingleVariableDeclaration[66991-67012]"
    }, {
      "left" : "final AtomicInteger progress",
      "right" : "final AtomicInteger progress",
      "info" : "SingleVariableDeclaration[67053-67081]:SingleVariableDeclaration[67053-67081]"
    }, {
      "left" : "final int unreadBeforeStart",
      "right" : "final int unreadBeforeStart",
      "info" : "SingleVariableDeclaration[67122-67149]:SingleVariableDeclaration[67122-67149]"
    }, {
      "left" : "final AtomicInteger newMessages",
      "right" : "final AtomicInteger newMessages",
      "info" : "SingleVariableDeclaration[67190-67221]:SingleVariableDeclaration[67190-67221]"
    }, {
      "left" : "final int todo",
      "right" : "final int todo",
      "info" : "SingleVariableDeclaration[67262-67276]:SingleVariableDeclaration[67262-67276]"
    }, {
      "left" : "FetchProfile fp",
      "right" : "FetchProfile fp",
      "info" : "SingleVariableDeclaration[67317-67332]:SingleVariableDeclaration[67317-67332]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[67341-67359]:SimpleType[67341-67359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67360-72808]:Block[67360-72808]"
    }, {
      "left" : "final String folder = remoteFolder.getName();",
      "right" : "final String folder = remoteFolder.getName();",
      "info" : "VariableDeclarationStatement[67370-67415]:VariableDeclarationStatement[67370-67415]"
    }, {
      "left" : "final Date earliestDate = account.getEarliestPollDate();",
      "right" : "final Date earliestDate = account.getEarliestPollDate();",
      "info" : "VariableDeclarationStatement[67425-67481]:VariableDeclarationStatement[67425-67481]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[67491-67589]:IfStatement[67491-67589]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Fetching large messages for folder \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Fetching large messages for folder \" + folder);",
      "info" : "ExpressionStatement[67517-67589]:ExpressionStatement[67517-67589]"
    }, {
      "left" : "remoteFolder.fetch(largeMessages, fp, null);",
      "right" : "remoteFolder.fetch(largeMessages, fp, null);",
      "info" : "ExpressionStatement[67599-67643]:ExpressionStatement[67599-67643]"
    }, {
      "left" : "for (T message : largeMessages)",
      "right" : "for (T message : largeMessages)",
      "info" : "EnhancedForStatement[67652-72669]:EnhancedForStatement[67652-72669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67684-72669]:Block[67684-72669]"
    }, {
      "left" : "if (!shouldImportMessage(account, folder, message, progress, earliestDate))",
      "right" : "if (!shouldImportMessage(account, folder, message, progress, earliestDate))",
      "info" : "IfStatement[67699-67860]:IfStatement[67699-67860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67775-67860]:Block[67775-67860]"
    }, {
      "left" : "progress.incrementAndGet();",
      "right" : "progress.incrementAndGet();",
      "info" : "ExpressionStatement[67793-67820]:ExpressionStatement[67793-67820]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[67837-67846]:ContinueStatement[67837-67846]"
    }, {
      "left" : "if (message.getBody() == null)",
      "right" : "if (message.getBody() == null)",
      "info" : "IfStatement[67874-71267]:IfStatement[67874-71267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67905-70183]:Block[67905-70183]"
    }, {
      "left" : "fp.clear();",
      "right" : "fp.clear();",
      "info" : "ExpressionStatement[68257-68268]:ExpressionStatement[68257-68268]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY_SANE);",
      "right" : "fp.add(FetchProfile.Item.BODY_SANE);",
      "info" : "ExpressionStatement[68285-68321]:ExpressionStatement[68285-68321]"
    }, {
      "left" : "remoteFolder.fetch(Collections.singletonList(message), fp, null);",
      "right" : "remoteFolder.fetch(Collections.singletonList(message), fp, null);",
      "info" : "ExpressionStatement[68660-68725]:ExpressionStatement[68660-68725]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(message));",
      "right" : "localFolder.appendMessages(Collections.singletonList(message));",
      "info" : "ExpressionStatement[68796-68859]:ExpressionStatement[68796-68859]"
    }, {
      "left" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "right" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "info" : "VariableDeclarationStatement[68877-68941]:VariableDeclarationStatement[68877-68941]"
    }, {
      "left" : "if (!message.isSet(Flag.X_DOWNLOADED_FULL))",
      "right" : "if (!message.isSet(Flag.X_DOWNLOADED_FULL))",
      "info" : "IfStatement[69071-70169]:IfStatement[69071-70169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69115-70169]:Block[69115-70169]"
    }, {
      "left" : "if (account.getMaximumAutoDownloadMessageSize() == 0 || message.getSize() < account.getMaximumAutoDownloadMessageSize())",
      "right" : "if (account.getMaximumAutoDownloadMessageSize() == 0 || message.getSize() < account.getMaximumAutoDownloadMessageSize())",
      "info" : "IfStatement[69677-70151]:IfStatement[69677-70151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69798-69897]:Block[69798-69897]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "right" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "info" : "ExpressionStatement[69824-69875]:ExpressionStatement[69824-69875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69903-70151]:Block[69903-70151]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_DOWNLOADED_PARTIAL, true);",
      "right" : "localMessage.setFlag(Flag.X_DOWNLOADED_PARTIAL, true);",
      "info" : "ExpressionStatement[70075-70129]:ExpressionStatement[70075-70129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70189-71267]:Block[70189-71267]"
    }, {
      "left" : "Set<Part> viewables = MessageExtractor.collectTextParts(message);",
      "right" : "Set<Part> viewables = MessageExtractor.collectTextParts(message);",
      "info" : "VariableDeclarationStatement[70543-70608]:VariableDeclarationStatement[70543-70608]"
    }, {
      "left" : "for (Part part : viewables)",
      "right" : "for (Part part : viewables)",
      "info" : "EnhancedForStatement[70736-70848]:EnhancedForStatement[70736-70848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70764-70848]:Block[70764-70848]"
    }, {
      "left" : "remoteFolder.fetchPart(message, part, null);",
      "right" : "remoteFolder.fetchPart(message, part, null);",
      "info" : "ExpressionStatement[70786-70830]:ExpressionStatement[70786-70830]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(message));",
      "right" : "localFolder.appendMessages(Collections.singletonList(message));",
      "info" : "ExpressionStatement[70918-70981]:ExpressionStatement[70918-70981]"
    }, {
      "left" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "right" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "info" : "VariableDeclarationStatement[70999-71063]:VariableDeclarationStatement[70999-71063]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_DOWNLOADED_PARTIAL, true);",
      "right" : "localMessage.setFlag(Flag.X_DOWNLOADED_PARTIAL, true);",
      "info" : "ExpressionStatement[71199-71253]:ExpressionStatement[71199-71253]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[71280-71462]:IfStatement[71280-71462]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"About to notify listeners that we got a new large message \"\n                      + account + \":\" + folder + \":\" + message.getUid());",
      "right" : "Log.v(K9.LOG_TAG, \"About to notify listeners that we got a new large message \"\n                      + account + \":\" + folder + \":\" + message.getUid());",
      "info" : "ExpressionStatement[71310-71462]:ExpressionStatement[71310-71462]"
    }, {
      "left" : "progress.incrementAndGet();",
      "right" : "progress.incrementAndGet();",
      "info" : "ExpressionStatement[71533-71560]:ExpressionStatement[71533-71560]"
    }, {
      "left" : "LocalMessage localMessage = localFolder.getMessage(message.getUid());",
      "right" : "LocalMessage localMessage = localFolder.getMessage(message.getUid());",
      "info" : "VariableDeclarationStatement[71627-71696]:VariableDeclarationStatement[71627-71696]"
    }, {
      "left" : "if (!localMessage.isSet(Flag.SEEN))",
      "right" : "if (!localMessage.isSet(Flag.SEEN))",
      "info" : "IfStatement[71834-71932]:IfStatement[71834-71932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71870-71932]:Block[71870-71932]"
    }, {
      "left" : "newMessages.incrementAndGet();",
      "right" : "newMessages.incrementAndGet();",
      "info" : "ExpressionStatement[71888-71918]:ExpressionStatement[71888-71918]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[71946-72331]:EnhancedForStatement[71946-72331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71989-72331]:Block[71989-72331]"
    }, {
      "left" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[72007-72077]:ExpressionStatement[72007-72077]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "right" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "info" : "ExpressionStatement[72094-72162]:ExpressionStatement[72094-72162]"
    }, {
      "left" : "if (!localMessage.isSet(Flag.SEEN))",
      "right" : "if (!localMessage.isSet(Flag.SEEN))",
      "info" : "IfStatement[72179-72317]:IfStatement[72179-72317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72215-72317]:Block[72215-72317]"
    }, {
      "left" : "l.synchronizeMailboxNewMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxNewMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[72237-72299]:ExpressionStatement[72237-72299]"
    }, {
      "left" : "if (shouldNotifyForMessage(account, localFolder, message))",
      "right" : "if (shouldNotifyForMessage(account, localFolder, message))",
      "info" : "IfStatement[72396-72658]:IfStatement[72396-72658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72455-72658]:Block[72455-72658]"
    }, {
      "left" : "notifyAccount(context, account, localMessage, unreadBeforeStart);",
      "right" : "notifyAccount(context, account, localMessage, unreadBeforeStart);",
      "info" : "ExpressionStatement[72579-72644]:ExpressionStatement[72579-72644]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[72698-72801]:IfStatement[72698-72801]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: Done fetching large messages for folder \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: Done fetching large messages for folder \" + folder);",
      "info" : "ExpressionStatement[72724-72801]:ExpressionStatement[72724-72801]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[72814-72821]:Modifier[72814-72821]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[72822-72826]:PrimitiveType[72822-72826]"
    }, {
      "left" : "refreshLocalMessageFlags",
      "right" : "refreshLocalMessageFlags",
      "info" : "SimpleName[72827-72851]:SimpleName[72827-72851]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[72852-72873]:SingleVariableDeclaration[72852-72873]"
    }, {
      "left" : "final Folder remoteFolder",
      "right" : "final Folder remoteFolder",
      "info" : "SingleVariableDeclaration[72875-72900]:SingleVariableDeclaration[72875-72900]"
    }, {
      "left" : "final LocalFolder localFolder",
      "right" : "final LocalFolder localFolder",
      "info" : "SingleVariableDeclaration[72944-72973]:SingleVariableDeclaration[72944-72973]"
    }, {
      "left" : "List<Message> syncFlagMessages",
      "right" : "List<Message> syncFlagMessages",
      "info" : "SingleVariableDeclaration[73017-73047]:SingleVariableDeclaration[73017-73047]"
    }, {
      "left" : "final AtomicInteger progress",
      "right" : "final AtomicInteger progress",
      "info" : "SingleVariableDeclaration[73091-73119]:SingleVariableDeclaration[73091-73119]"
    }, {
      "left" : "final int todo",
      "right" : "final int todo",
      "info" : "SingleVariableDeclaration[73163-73177]:SingleVariableDeclaration[73163-73177]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[73228-73246]:SimpleType[73228-73246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73247-75935]:Block[73247-75935]"
    }, {
      "left" : "final String folder = remoteFolder.getName();",
      "right" : "final String folder = remoteFolder.getName();",
      "info" : "VariableDeclarationStatement[73258-73303]:VariableDeclarationStatement[73258-73303]"
    }, {
      "left" : "if (remoteFolder.supportsFetchingFlags())",
      "right" : "if (remoteFolder.supportsFetchingFlags())",
      "info" : "IfStatement[73312-75929]:IfStatement[73312-75929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73354-75929]:Block[73354-75929]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[73368-73540]:IfStatement[73368-73540]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"SYNC: About to sync flags for \"\n                      + syncFlagMessages.size() + \" remote messages for folder \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"SYNC: About to sync flags for \"\n                      + syncFlagMessages.size() + \" remote messages for folder \" + folder);",
      "info" : "ExpressionStatement[73398-73540]:ExpressionStatement[73398-73540]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[73554-73591]:VariableDeclarationStatement[73554-73591]"
    }, {
      "left" : "fp.add(FetchProfile.Item.FLAGS);",
      "right" : "fp.add(FetchProfile.Item.FLAGS);",
      "info" : "ExpressionStatement[73604-73636]:ExpressionStatement[73604-73636]"
    }, {
      "left" : "List<Message> undeletedMessages = new LinkedList<Message>();",
      "right" : "List<Message> undeletedMessages = new LinkedList<Message>();",
      "info" : "VariableDeclarationStatement[73650-73710]:VariableDeclarationStatement[73650-73710]"
    }, {
      "left" : "for (Message message : syncFlagMessages)",
      "right" : "for (Message message : syncFlagMessages)",
      "info" : "EnhancedForStatement[73723-73901]:EnhancedForStatement[73723-73901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73764-73901]:Block[73764-73901]"
    }, {
      "left" : "if (!message.isSet(Flag.DELETED))",
      "right" : "if (!message.isSet(Flag.DELETED))",
      "info" : "IfStatement[73782-73887]:IfStatement[73782-73887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73816-73887]:Block[73816-73887]"
    }, {
      "left" : "undeletedMessages.add(message);",
      "right" : "undeletedMessages.add(message);",
      "info" : "ExpressionStatement[73838-73869]:ExpressionStatement[73838-73869]"
    }, {
      "left" : "remoteFolder.fetch(undeletedMessages, fp, null);",
      "right" : "remoteFolder.fetch(undeletedMessages, fp, null);",
      "info" : "ExpressionStatement[73915-73963]:ExpressionStatement[73915-73963]"
    }, {
      "left" : "for (Message remoteMessage : syncFlagMessages)",
      "right" : "for (Message remoteMessage : syncFlagMessages)",
      "info" : "EnhancedForStatement[73976-75919]:EnhancedForStatement[73976-75919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74023-75919]:Block[74023-75919]"
    }, {
      "left" : "LocalMessage localMessage = localFolder.getMessage(remoteMessage.getUid());",
      "right" : "LocalMessage localMessage = localFolder.getMessage(remoteMessage.getUid());",
      "info" : "VariableDeclarationStatement[74041-74116]:VariableDeclarationStatement[74041-74116]"
    }, {
      "left" : "boolean messageChanged = syncFlags(localMessage, remoteMessage);",
      "right" : "boolean messageChanged = syncFlags(localMessage, remoteMessage);",
      "info" : "VariableDeclarationStatement[74133-74197]:VariableDeclarationStatement[74133-74197]"
    }, {
      "left" : "if (messageChanged)",
      "right" : "if (messageChanged)",
      "info" : "IfStatement[74214-75693]:IfStatement[74214-75693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74234-75693]:Block[74234-75693]"
    }, {
      "left" : "boolean shouldBeNotifiedOf = false;",
      "right" : "boolean shouldBeNotifiedOf = false;",
      "info" : "VariableDeclarationStatement[74256-74291]:VariableDeclarationStatement[74256-74291]"
    }, {
      "left" : "if (localMessage.isSet(Flag.DELETED) || isMessageSuppressed(localMessage))",
      "right" : "if (localMessage.isSet(Flag.DELETED) || isMessageSuppressed(localMessage))",
      "info" : "IfStatement[74312-74994]:IfStatement[74312-74994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74387-74600]:Block[74387-74600]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[74413-74578]:EnhancedForStatement[74413-74578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74456-74578]:Block[74456-74578]"
    }, {
      "left" : "l.synchronizeMailboxRemovedMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxRemovedMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[74486-74552]:ExpressionStatement[74486-74552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74606-74994]:Block[74606-74994]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[74632-74801]:EnhancedForStatement[74632-74801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74675-74801]:Block[74675-74801]"
    }, {
      "left" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "right" : "l.synchronizeMailboxAddOrUpdateMessage(account, folder, localMessage);",
      "info" : "ExpressionStatement[74705-74775]:ExpressionStatement[74705-74775]"
    }, {
      "left" : "if (shouldNotifyForMessage(account, localFolder, localMessage))",
      "right" : "if (shouldNotifyForMessage(account, localFolder, localMessage))",
      "info" : "IfStatement[74826-74972]:IfStatement[74826-74972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74890-74972]:Block[74890-74972]"
    }, {
      "left" : "shouldBeNotifiedOf = true;",
      "right" : "shouldBeNotifiedOf = true;",
      "info" : "ExpressionStatement[74920-74946]:ExpressionStatement[74920-74946]"
    }, {
      "left" : "if (!shouldBeNotifiedOf)",
      "right" : "if (!shouldBeNotifiedOf)",
      "info" : "IfStatement[75092-75675]:IfStatement[75092-75675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75117-75675]:Block[75117-75675]"
    }, {
      "left" : "NotificationData data = getNotificationData(account, null);",
      "right" : "NotificationData data = getNotificationData(account, null);",
      "info" : "VariableDeclarationStatement[75143-75202]:VariableDeclarationStatement[75143-75202]"
    }, {
      "left" : "if (data != null)",
      "right" : "if (data != null)",
      "info" : "IfStatement[75227-75653]:IfStatement[75227-75653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75245-75653]:Block[75245-75653]"
    }, {
      "left" : "synchronized (data) {\n                                MessageReference ref = localMessage.makeMessageReference();\n                                if (data.removeMatchingMessage(context, ref)) {\n                                    notifyAccountWithDataLocked(context, account, null, data);\n                                }\n                            }",
      "right" : "synchronized (data) {\n                                MessageReference ref = localMessage.makeMessageReference();\n                                if (data.removeMatchingMessage(context, ref)) {\n                                    notifyAccountWithDataLocked(context, account, null, data);\n                                }\n                            }",
      "info" : "SynchronizedStatement[75275-75627]:SynchronizedStatement[75275-75627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75295-75627]:Block[75295-75627]"
    }, {
      "left" : "MessageReference ref = localMessage.makeMessageReference();",
      "right" : "MessageReference ref = localMessage.makeMessageReference();",
      "info" : "VariableDeclarationStatement[75329-75388]:VariableDeclarationStatement[75329-75388]"
    }, {
      "left" : "if (data.removeMatchingMessage(context, ref))",
      "right" : "if (data.removeMatchingMessage(context, ref))",
      "info" : "IfStatement[75421-75597]:IfStatement[75421-75597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75467-75597]:Block[75467-75597]"
    }, {
      "left" : "notifyAccountWithDataLocked(context, account, null, data);",
      "right" : "notifyAccountWithDataLocked(context, account, null, data);",
      "info" : "ExpressionStatement[75505-75563]:ExpressionStatement[75505-75563]"
    }, {
      "left" : "progress.incrementAndGet();",
      "right" : "progress.incrementAndGet();",
      "info" : "ExpressionStatement[75710-75737]:ExpressionStatement[75710-75737]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[75754-75905]:EnhancedForStatement[75754-75905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75797-75905]:Block[75797-75905]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "right" : "l.synchronizeMailboxProgress(account, folder, progress.get(), todo);",
      "info" : "ExpressionStatement[75819-75887]:ExpressionStatement[75819-75887]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[75941-75948]:Modifier[75941-75948]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[75949-75956]:PrimitiveType[75949-75956]"
    }, {
      "left" : "syncFlags",
      "right" : "syncFlags",
      "info" : "SimpleName[75957-75966]:SimpleName[75957-75966]"
    }, {
      "left" : "LocalMessage localMessage",
      "right" : "LocalMessage localMessage",
      "info" : "SingleVariableDeclaration[75967-75992]:SingleVariableDeclaration[75967-75992]"
    }, {
      "left" : "Message remoteMessage",
      "right" : "Message remoteMessage",
      "info" : "SingleVariableDeclaration[75994-76015]:SingleVariableDeclaration[75994-76015]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[76024-76042]:SimpleType[76024-76042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76043-76772]:Block[76043-76772]"
    }, {
      "left" : "boolean messageChanged = false;",
      "right" : "boolean messageChanged = false;",
      "info" : "VariableDeclarationStatement[76053-76084]:VariableDeclarationStatement[76053-76084]"
    }, {
      "left" : "if (localMessage == null || localMessage.isSet(Flag.DELETED))",
      "right" : "if (localMessage == null || localMessage.isSet(Flag.DELETED))",
      "info" : "IfStatement[76093-76192]:IfStatement[76093-76192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76155-76192]:Block[76155-76192]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[76169-76182]:ReturnStatement[76169-76182]"
    }, {
      "left" : "if (remoteMessage.isSet(Flag.DELETED))",
      "right" : "if (remoteMessage.isSet(Flag.DELETED))",
      "info" : "IfStatement[76201-76735]:IfStatement[76201-76735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76240-76428]:Block[76240-76428]"
    }, {
      "left" : "if (localMessage.getFolder().syncRemoteDeletions())",
      "right" : "if (localMessage.getFolder().syncRemoteDeletions())",
      "info" : "IfStatement[76254-76418]:IfStatement[76254-76418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76306-76418]:Block[76306-76418]"
    }, {
      "left" : "localMessage.setFlag(Flag.DELETED, true);",
      "right" : "localMessage.setFlag(Flag.DELETED, true);",
      "info" : "ExpressionStatement[76324-76365]:ExpressionStatement[76324-76365]"
    }, {
      "left" : "messageChanged = true;",
      "right" : "messageChanged = true;",
      "info" : "ExpressionStatement[76382-76404]:ExpressionStatement[76382-76404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76434-76735]:Block[76434-76735]"
    }, {
      "left" : "for (Flag flag : MessagingController.SYNC_FLAGS)",
      "right" : "for (Flag flag : MessagingController.SYNC_FLAGS)",
      "info" : "EnhancedForStatement[76448-76725]:EnhancedForStatement[76448-76725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76497-76725]:Block[76497-76725]"
    }, {
      "left" : "if (remoteMessage.isSet(flag) != localMessage.isSet(flag))",
      "right" : "if (remoteMessage.isSet(flag) != localMessage.isSet(flag))",
      "info" : "IfStatement[76515-76711]:IfStatement[76515-76711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76574-76711]:Block[76574-76711]"
    }, {
      "left" : "localMessage.setFlag(flag, remoteMessage.isSet(flag));",
      "right" : "localMessage.setFlag(flag, remoteMessage.isSet(flag));",
      "info" : "ExpressionStatement[76596-76650]:ExpressionStatement[76596-76650]"
    }, {
      "left" : "messageChanged = true;",
      "right" : "messageChanged = true;",
      "info" : "ExpressionStatement[76671-76693]:ExpressionStatement[76671-76693]"
    }, {
      "left" : "return messageChanged;",
      "right" : "return messageChanged;",
      "info" : "ReturnStatement[76744-76766]:ReturnStatement[76744-76766]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[76777-76784]:Modifier[76777-76784]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[76785-76791]:SimpleType[76785-76791]"
    }, {
      "left" : "getRootCauseMessage",
      "right" : "getRootCauseMessage",
      "info" : "SimpleName[76792-76811]:SimpleName[76792-76811]"
    }, {
      "left" : "Throwable t",
      "right" : "Throwable t",
      "info" : "SingleVariableDeclaration[76812-76823]:SingleVariableDeclaration[76812-76823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76825-77578]:Block[76825-77578]"
    }, {
      "left" : "Throwable rootCause = t;",
      "right" : "Throwable rootCause = t;",
      "info" : "VariableDeclarationStatement[76835-76859]:VariableDeclarationStatement[76835-76859]"
    }, {
      "left" : "Throwable nextCause = rootCause;",
      "right" : "Throwable nextCause = rootCause;",
      "info" : "VariableDeclarationStatement[76868-76900]:VariableDeclarationStatement[76868-76900]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[76909-77086]:DoStatement[76909-77086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76912-77059]:Block[76912-77059]"
    }, {
      "left" : "nextCause = rootCause.getCause();",
      "right" : "nextCause = rootCause.getCause();",
      "info" : "ExpressionStatement[76926-76959]:ExpressionStatement[76926-76959]"
    }, {
      "left" : "if (nextCause != null)",
      "right" : "if (nextCause != null)",
      "info" : "IfStatement[76972-77049]:IfStatement[76972-77049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76995-77049]:Block[76995-77049]"
    }, {
      "left" : "rootCause = nextCause;",
      "right" : "rootCause = nextCause;",
      "info" : "ExpressionStatement[77013-77035]:ExpressionStatement[77013-77035]"
    }, {
      "left" : "if (rootCause instanceof MessagingException)",
      "right" : "if (rootCause instanceof MessagingException)",
      "info" : "IfStatement[77095-77572]:IfStatement[77095-77572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77140-77194]:Block[77140-77194]"
    }, {
      "left" : "return rootCause.getMessage();",
      "right" : "return rootCause.getMessage();",
      "info" : "ReturnStatement[77154-77184]:ReturnStatement[77154-77184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77200-77572]:Block[77200-77572]"
    }, {
      "left" : "return (rootCause.getLocalizedMessage() != null)\n                ? (rootCause.getClass().getSimpleName() + \": \" + rootCause.getLocalizedMessage())\n                : rootCause.getClass().getSimpleName();",
      "right" : "return (rootCause.getLocalizedMessage() != null)\n                ? (rootCause.getClass().getSimpleName() + \": \" + rootCause.getLocalizedMessage())\n                : rootCause.getClass().getSimpleName();",
      "info" : "ReturnStatement[77360-77562]:ReturnStatement[77360-77562]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[77584-77591]:Modifier[77584-77591]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[77592-77596]:PrimitiveType[77592-77596]"
    }, {
      "left" : "queuePendingCommand",
      "right" : "queuePendingCommand",
      "info" : "SimpleName[77597-77616]:SimpleName[77597-77616]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[77617-77632]:SingleVariableDeclaration[77617-77632]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[77634-77656]:SingleVariableDeclaration[77634-77656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77658-77961]:Block[77658-77961]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[77668-77955]:TryStatement[77668-77955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77672-77795]:Block[77672-77795]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[77686-77734]:VariableDeclarationStatement[77686-77734]"
    }, {
      "left" : "localStore.addPendingCommand(command);",
      "right" : "localStore.addPendingCommand(command);",
      "info" : "ExpressionStatement[77747-77785]:ExpressionStatement[77747-77785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77816-77955]:Block[77816-77955]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[77830-77864]:ExpressionStatement[77830-77864]"
    }, {
      "left" : "throw new RuntimeException(\"Unable to enqueue pending command\", e);",
      "right" : "throw new RuntimeException(\"Unable to enqueue pending command\", e);",
      "info" : "ThrowStatement[77878-77945]:ThrowStatement[77878-77945]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[77967-77974]:Modifier[77967-77974]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[77975-77979]:PrimitiveType[77975-77979]"
    }, {
      "left" : "processPendingCommands",
      "right" : "processPendingCommands",
      "info" : "SimpleName[77980-78002]:SimpleName[77980-78002]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[78003-78024]:SingleVariableDeclaration[78003-78024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78026-78896]:Block[78026-78896]"
    }, {
      "left" : "putBackground(\"processPendingCommands\", null, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    processPendingCommandsSynchronous(account);\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to process pending command because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"processPendingCommands\", me);\n\n                    addErrorMessage(account, null, me);\n\n                    /*\n                     * Ignore any exceptions from the commands. Commands will be processed\n                     * on the next round.\n                     */\n                }\n            }\n        });",
      "right" : "putBackground(\"processPendingCommands\", null, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    processPendingCommandsSynchronous(account);\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to process pending command because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"processPendingCommands\", me);\n\n                    addErrorMessage(account, null, me);\n\n                    /*\n                     * Ignore any exceptions from the commands. Commands will be processed\n                     * on the next round.\n                     */\n                }\n            }\n        });",
      "info" : "ExpressionStatement[78036-78890]:ExpressionStatement[78036-78890]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[78111-78120]:MarkerAnnotation[78111-78120]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78133-78139]:Modifier[78133-78139]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[78140-78144]:PrimitiveType[78140-78144]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[78145-78148]:SimpleName[78145-78148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78151-78878]:Block[78151-78878]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[78169-78864]:TryStatement[78169-78864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78173-78256]:Block[78173-78256]"
    }, {
      "left" : "processPendingCommandsSynchronous(account);",
      "right" : "processPendingCommandsSynchronous(account);",
      "info" : "ExpressionStatement[78195-78238]:ExpressionStatement[78195-78238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78295-78507]:Block[78295-78507]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to process pending command because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to process pending command because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[78317-78427]:ExpressionStatement[78317-78427]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[78448-78489]:ThrowStatement[78448-78489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78538-78864]:Block[78538-78864]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"processPendingCommands\", me);",
      "right" : "Log.e(K9.LOG_TAG, \"processPendingCommands\", me);",
      "info" : "ExpressionStatement[78560-78608]:ExpressionStatement[78560-78608]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[78630-78665]:ExpressionStatement[78630-78665]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[78902-78909]:Modifier[78902-78909]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[78910-78914]:PrimitiveType[78910-78914]"
    }, {
      "left" : "processPendingCommandsSynchronous",
      "right" : "processPendingCommandsSynchronous",
      "info" : "SimpleName[78915-78948]:SimpleName[78915-78948]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[78949-78964]:SingleVariableDeclaration[78949-78964]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[78973-78991]:SimpleType[78973-78991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78992-83157]:Block[78992-83157]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[79002-79050]:VariableDeclarationStatement[79002-79050]"
    }, {
      "left" : "List<PendingCommand> commands = localStore.getPendingCommands();",
      "right" : "List<PendingCommand> commands = localStore.getPendingCommands();",
      "info" : "VariableDeclarationStatement[79059-79123]:VariableDeclarationStatement[79059-79123]"
    }, {
      "left" : "int progress = 0;",
      "right" : "int progress = 0;",
      "info" : "VariableDeclarationStatement[79133-79150]:VariableDeclarationStatement[79133-79150]"
    }, {
      "left" : "int todo = commands.size();",
      "right" : "int todo = commands.size();",
      "info" : "VariableDeclarationStatement[79159-79186]:VariableDeclarationStatement[79159-79186]"
    }, {
      "left" : "if (todo == 0)",
      "right" : "if (todo == 0)",
      "info" : "IfStatement[79195-79241]:IfStatement[79195-79241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79210-79241]:Block[79210-79241]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[79224-79231]:ReturnStatement[79224-79231]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[79251-79428]:EnhancedForStatement[79251-79428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79294-79428]:Block[79294-79428]"
    }, {
      "left" : "l.pendingCommandsProcessing(account);",
      "right" : "l.pendingCommandsProcessing(account);",
      "info" : "ExpressionStatement[79308-79345]:ExpressionStatement[79308-79345]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, null, progress, todo);",
      "right" : "l.synchronizeMailboxProgress(account, null, progress, todo);",
      "info" : "ExpressionStatement[79358-79418]:ExpressionStatement[79358-79418]"
    }, {
      "left" : "PendingCommand processingCommand = null;",
      "right" : "PendingCommand processingCommand = null;",
      "info" : "VariableDeclarationStatement[79438-79478]:VariableDeclarationStatement[79438-79478]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[79487-83151]:TryStatement[79487-83151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79491-82732]:Block[79491-82732]"
    }, {
      "left" : "for (PendingCommand command : commands)",
      "right" : "for (PendingCommand command : commands)",
      "info" : "EnhancedForStatement[79505-82722]:EnhancedForStatement[79505-82722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79545-82722]:Block[79545-82722]"
    }, {
      "left" : "processingCommand = command;",
      "right" : "processingCommand = command;",
      "info" : "ExpressionStatement[79563-79591]:ExpressionStatement[79563-79591]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[79608-79708]:IfStatement[79608-79708]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Processing pending command '\" + command + \"'\");",
      "right" : "Log.d(K9.LOG_TAG, \"Processing pending command '\" + command + \"'\");",
      "info" : "ExpressionStatement[79642-79708]:ExpressionStatement[79642-79708]"
    }, {
      "left" : "String[] components = command.command.split(\"\\\\.\");",
      "right" : "String[] components = command.command.split(\"\\\\.\");",
      "info" : "VariableDeclarationStatement[79726-79777]:VariableDeclarationStatement[79726-79777]"
    }, {
      "left" : "String commandTitle = components[components.length - 1];",
      "right" : "String commandTitle = components[components.length - 1];",
      "info" : "VariableDeclarationStatement[79794-79850]:VariableDeclarationStatement[79794-79850]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[79867-79997]:EnhancedForStatement[79867-79997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79910-79997]:Block[79910-79997]"
    }, {
      "left" : "l.pendingCommandStarted(account, commandTitle);",
      "right" : "l.pendingCommandStarted(account, commandTitle);",
      "info" : "ExpressionStatement[79932-79979]:ExpressionStatement[79932-79979]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[80326-82708]:TryStatement[80326-82708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80330-81954]:Block[80330-81954]"
    }, {
      "left" : "if (PENDING_COMMAND_APPEND.equals(command.command))",
      "right" : "if (PENDING_COMMAND_APPEND.equals(command.command))",
      "info" : "IfStatement[80352-81744]:IfStatement[80352-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80404-80491]:Block[80404-80491]"
    }, {
      "left" : "processPendingAppend(command, account);",
      "right" : "processPendingAppend(command, account);",
      "info" : "ExpressionStatement[80430-80469]:ExpressionStatement[80430-80469]"
    }, {
      "left" : "if (PENDING_COMMAND_SET_FLAG_BULK.equals(command.command))",
      "right" : "if (PENDING_COMMAND_SET_FLAG_BULK.equals(command.command))",
      "info" : "IfStatement[80497-81744]:IfStatement[80497-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80556-80644]:Block[80556-80644]"
    }, {
      "left" : "processPendingSetFlag(command, account);",
      "right" : "processPendingSetFlag(command, account);",
      "info" : "ExpressionStatement[80582-80622]:ExpressionStatement[80582-80622]"
    }, {
      "left" : "if (PENDING_COMMAND_SET_FLAG.equals(command.command))",
      "right" : "if (PENDING_COMMAND_SET_FLAG.equals(command.command))",
      "info" : "IfStatement[80650-81744]:IfStatement[80650-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80704-80795]:Block[80704-80795]"
    }, {
      "left" : "processPendingSetFlagOld(command, account);",
      "right" : "processPendingSetFlagOld(command, account);",
      "info" : "ExpressionStatement[80730-80773]:ExpressionStatement[80730-80773]"
    }, {
      "left" : "if (PENDING_COMMAND_MARK_ALL_AS_READ.equals(command.command))",
      "right" : "if (PENDING_COMMAND_MARK_ALL_AS_READ.equals(command.command))",
      "info" : "IfStatement[80801-81744]:IfStatement[80801-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80863-80957]:Block[80863-80957]"
    }, {
      "left" : "processPendingMarkAllAsRead(command, account);",
      "right" : "processPendingMarkAllAsRead(command, account);",
      "info" : "ExpressionStatement[80889-80935]:ExpressionStatement[80889-80935]"
    }, {
      "left" : "if (PENDING_COMMAND_MOVE_OR_COPY_BULK.equals(command.command))",
      "right" : "if (PENDING_COMMAND_MOVE_OR_COPY_BULK.equals(command.command))",
      "info" : "IfStatement[80963-81744]:IfStatement[80963-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81026-81121]:Block[81026-81121]"
    }, {
      "left" : "processPendingMoveOrCopyOld2(command, account);",
      "right" : "processPendingMoveOrCopyOld2(command, account);",
      "info" : "ExpressionStatement[81052-81099]:ExpressionStatement[81052-81099]"
    }, {
      "left" : "if (PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW.equals(command.command))",
      "right" : "if (PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW.equals(command.command))",
      "info" : "IfStatement[81127-81744]:IfStatement[81127-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81194-81285]:Block[81194-81285]"
    }, {
      "left" : "processPendingMoveOrCopy(command, account);",
      "right" : "processPendingMoveOrCopy(command, account);",
      "info" : "ExpressionStatement[81220-81263]:ExpressionStatement[81220-81263]"
    }, {
      "left" : "if (PENDING_COMMAND_MOVE_OR_COPY.equals(command.command))",
      "right" : "if (PENDING_COMMAND_MOVE_OR_COPY.equals(command.command))",
      "info" : "IfStatement[81291-81744]:IfStatement[81291-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81349-81443]:Block[81349-81443]"
    }, {
      "left" : "processPendingMoveOrCopyOld(command, account);",
      "right" : "processPendingMoveOrCopyOld(command, account);",
      "info" : "ExpressionStatement[81375-81421]:ExpressionStatement[81375-81421]"
    }, {
      "left" : "if (PENDING_COMMAND_EMPTY_TRASH.equals(command.command))",
      "right" : "if (PENDING_COMMAND_EMPTY_TRASH.equals(command.command))",
      "info" : "IfStatement[81449-81744]:IfStatement[81449-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81506-81597]:Block[81506-81597]"
    }, {
      "left" : "processPendingEmptyTrash(command, account);",
      "right" : "processPendingEmptyTrash(command, account);",
      "info" : "ExpressionStatement[81532-81575]:ExpressionStatement[81532-81575]"
    }, {
      "left" : "if (PENDING_COMMAND_EXPUNGE.equals(command.command))",
      "right" : "if (PENDING_COMMAND_EXPUNGE.equals(command.command))",
      "info" : "IfStatement[81603-81744]:IfStatement[81603-81744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81656-81744]:Block[81656-81744]"
    }, {
      "left" : "processPendingExpunge(command, account);",
      "right" : "processPendingExpunge(command, account);",
      "info" : "ExpressionStatement[81682-81722]:ExpressionStatement[81682-81722]"
    }, {
      "left" : "localStore.removePendingCommand(command);",
      "right" : "localStore.removePendingCommand(command);",
      "info" : "ExpressionStatement[81765-81806]:ExpressionStatement[81765-81806]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[81827-81936]:IfStatement[81827-81936]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Done processing pending command '\" + command + \"'\");",
      "right" : "Log.d(K9.LOG_TAG, \"Done processing pending command '\" + command + \"'\");",
      "info" : "ExpressionStatement[81865-81936]:ExpressionStatement[81865-81936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81985-82402]:Block[81985-82402]"
    }, {
      "left" : "if (me.isPermanentFailure())",
      "right" : "if (me.isPermanentFailure())",
      "info" : "IfStatement[82007-82384]:IfStatement[82007-82384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82036-82321]:Block[82036-82321]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[82062-82097]:ExpressionStatement[82062-82097]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failure of command '\" + command + \"' was permanent, removing command from queue\");",
      "right" : "Log.e(K9.LOG_TAG, \"Failure of command '\" + command + \"' was permanent, removing command from queue\");",
      "info" : "ExpressionStatement[82122-82223]:ExpressionStatement[82122-82223]"
    }, {
      "left" : "localStore.removePendingCommand(processingCommand);",
      "right" : "localStore.removePendingCommand(processingCommand);",
      "info" : "ExpressionStatement[82248-82299]:ExpressionStatement[82248-82299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82327-82384]:Block[82327-82384]"
    }, {
      "left" : "throw me;",
      "right" : "throw me;",
      "info" : "ThrowStatement[82353-82362]:ThrowStatement[82353-82362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82411-82708]:Block[82411-82708]"
    }, {
      "left" : "progress++;",
      "right" : "progress++;",
      "info" : "ExpressionStatement[82433-82444]:ExpressionStatement[82433-82444]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[82465-82690]:EnhancedForStatement[82465-82690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82508-82690]:Block[82508-82690]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, null, progress, todo);",
      "right" : "l.synchronizeMailboxProgress(account, null, progress, todo);",
      "info" : "ExpressionStatement[82534-82594]:ExpressionStatement[82534-82594]"
    }, {
      "left" : "l.pendingCommandCompleted(account, commandTitle);",
      "right" : "l.pendingCommandCompleted(account, commandTitle);",
      "info" : "ExpressionStatement[82619-82668]:ExpressionStatement[82619-82668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82763-83008]:Block[82763-83008]"
    }, {
      "left" : "notifyUserIfCertificateProblem(context, me, account, true);",
      "right" : "notifyUserIfCertificateProblem(context, me, account, true);",
      "info" : "ExpressionStatement[82777-82836]:ExpressionStatement[82777-82836]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[82849-82884]:ExpressionStatement[82849-82884]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Could not process command '\" + processingCommand + \"'\", me);",
      "right" : "Log.e(K9.LOG_TAG, \"Could not process command '\" + processingCommand + \"'\", me);",
      "info" : "ExpressionStatement[82897-82976]:ExpressionStatement[82897-82976]"
    }, {
      "left" : "throw me;",
      "right" : "throw me;",
      "info" : "ThrowStatement[82989-82998]:ThrowStatement[82989-82998]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83017-83151]:Block[83017-83151]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[83031-83141]:EnhancedForStatement[83031-83141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83074-83141]:Block[83074-83141]"
    }, {
      "left" : "l.pendingCommandsFinished(account);",
      "right" : "l.pendingCommandsFinished(account);",
      "info" : "ExpressionStatement[83092-83127]:ExpressionStatement[83092-83127]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[83743-83750]:Modifier[83743-83750]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[83751-83755]:PrimitiveType[83751-83755]"
    }, {
      "left" : "processPendingAppend",
      "right" : "processPendingAppend",
      "info" : "SimpleName[83756-83776]:SimpleName[83756-83776]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[83777-83799]:SingleVariableDeclaration[83777-83799]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[83801-83816]:SingleVariableDeclaration[83801-83816]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[83829-83847]:SimpleType[83829-83847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83848-89467]:Block[83848-89467]"
    }, {
      "left" : "Folder remoteFolder = null;",
      "right" : "Folder remoteFolder = null;",
      "info" : "VariableDeclarationStatement[83858-83885]:VariableDeclarationStatement[83858-83885]"
    }, {
      "left" : "LocalFolder localFolder = null;",
      "right" : "LocalFolder localFolder = null;",
      "info" : "VariableDeclarationStatement[83894-83925]:VariableDeclarationStatement[83894-83925]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[83934-89461]:TryStatement[83934-89461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83938-89364]:Block[83938-89364]"
    }, {
      "left" : "String folder = command.arguments[0];",
      "right" : "String folder = command.arguments[0];",
      "info" : "VariableDeclarationStatement[83953-83990]:VariableDeclarationStatement[83953-83990]"
    }, {
      "left" : "String uid = command.arguments[1];",
      "right" : "String uid = command.arguments[1];",
      "info" : "VariableDeclarationStatement[84003-84037]:VariableDeclarationStatement[84003-84037]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(folder))",
      "right" : "if (account.getErrorFolderName().equals(folder))",
      "info" : "IfStatement[84051-84139]:IfStatement[84051-84139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84100-84139]:Block[84100-84139]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[84118-84125]:ReturnStatement[84118-84125]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[84153-84201]:VariableDeclarationStatement[84153-84201]"
    }, {
      "left" : "localFolder = localStore.getFolder(folder);",
      "right" : "localFolder = localStore.getFolder(folder);",
      "info" : "ExpressionStatement[84214-84257]:ExpressionStatement[84214-84257]"
    }, {
      "left" : "LocalMessage localMessage = localFolder.getMessage(uid);",
      "right" : "LocalMessage localMessage = localFolder.getMessage(uid);",
      "info" : "VariableDeclarationStatement[84270-84326]:VariableDeclarationStatement[84270-84326]"
    }, {
      "left" : "if (localMessage == null)",
      "right" : "if (localMessage == null)",
      "info" : "IfStatement[84340-84405]:IfStatement[84340-84405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84366-84405]:Block[84366-84405]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[84384-84391]:ReturnStatement[84384-84391]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[84419-84464]:VariableDeclarationStatement[84419-84464]"
    }, {
      "left" : "remoteFolder = remoteStore.getFolder(folder);",
      "right" : "remoteFolder = remoteStore.getFolder(folder);",
      "info" : "ExpressionStatement[84477-84522]:ExpressionStatement[84477-84522]"
    }, {
      "left" : "if (!remoteFolder.exists())",
      "right" : "if (!remoteFolder.exists())",
      "info" : "IfStatement[84535-84695]:IfStatement[84535-84695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84563-84695]:Block[84563-84695]"
    }, {
      "left" : "if (!remoteFolder.create(FolderType.HOLDS_MESSAGES))",
      "right" : "if (!remoteFolder.create(FolderType.HOLDS_MESSAGES))",
      "info" : "IfStatement[84581-84681]:IfStatement[84581-84681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84634-84681]:Block[84634-84681]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[84656-84663]:ReturnStatement[84656-84663]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[84708-84747]:ExpressionStatement[84708-84747]"
    }, {
      "left" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[84760-84850]:IfStatement[84760-84850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84811-84850]:Block[84811-84850]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[84829-84836]:ReturnStatement[84829-84836]"
    }, {
      "left" : "Message remoteMessage = null;",
      "right" : "Message remoteMessage = null;",
      "info" : "VariableDeclarationStatement[84864-84893]:VariableDeclarationStatement[84864-84893]"
    }, {
      "left" : "if (!localMessage.getUid().startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (!localMessage.getUid().startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[84906-85061]:IfStatement[84906-85061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84966-85061]:Block[84966-85061]"
    }, {
      "left" : "remoteMessage = remoteFolder.getMessage(localMessage.getUid());",
      "right" : "remoteMessage = remoteFolder.getMessage(localMessage.getUid());",
      "info" : "ExpressionStatement[84984-85047]:ExpressionStatement[84984-85047]"
    }, {
      "left" : "if (remoteMessage == null)",
      "right" : "if (remoteMessage == null)",
      "info" : "IfStatement[85075-89354]:IfStatement[85075-89354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85102-87220]:Block[85102-87220]"
    }, {
      "left" : "if (localMessage.isSet(Flag.X_REMOTE_COPY_STARTED))",
      "right" : "if (localMessage.isSet(Flag.X_REMOTE_COPY_STARTED))",
      "info" : "IfStatement[85120-86398]:IfStatement[85120-86398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85172-86398]:Block[85172-86398]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"Local message with uid \" + localMessage.getUid() +\n                          \" has flag \" + Flag.X_REMOTE_COPY_STARTED + \" already set, checking for remote message with \" +\n                          \" same message id\");",
      "right" : "Log.w(K9.LOG_TAG, \"Local message with uid \" + localMessage.getUid() +\n                          \" has flag \" + Flag.X_REMOTE_COPY_STARTED + \" already set, checking for remote message with \" +\n                          \" same message id\");",
      "info" : "ExpressionStatement[85194-85432]:ExpressionStatement[85194-85432]"
    }, {
      "left" : "String rUid = remoteFolder.getUidFromMessageId(localMessage);",
      "right" : "String rUid = remoteFolder.getUidFromMessageId(localMessage);",
      "info" : "VariableDeclarationStatement[85453-85514]:VariableDeclarationStatement[85453-85514]"
    }, {
      "left" : "if (rUid != null)",
      "right" : "if (rUid != null)",
      "info" : "IfStatement[85535-86380]:IfStatement[85535-86380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85553-86241]:Block[85553-86241]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"Local message has flag \" + Flag.X_REMOTE_COPY_STARTED + \" already set, and there is a remote message with \" +\n                              \" uid \" + rUid + \", assuming message was already copied and aborting this copy\");",
      "right" : "Log.w(K9.LOG_TAG, \"Local message has flag \" + Flag.X_REMOTE_COPY_STARTED + \" already set, and there is a remote message with \" +\n                              \" uid \" + rUid + \", assuming message was already copied and aborting this copy\");",
      "info" : "ExpressionStatement[85579-85819]:ExpressionStatement[85579-85819]"
    }, {
      "left" : "String oldUid = localMessage.getUid();",
      "right" : "String oldUid = localMessage.getUid();",
      "info" : "VariableDeclarationStatement[85845-85883]:VariableDeclarationStatement[85845-85883]"
    }, {
      "left" : "localMessage.setUid(rUid);",
      "right" : "localMessage.setUid(rUid);",
      "info" : "ExpressionStatement[85908-85934]:ExpressionStatement[85908-85934]"
    }, {
      "left" : "localFolder.changeUid(localMessage);",
      "right" : "localFolder.changeUid(localMessage);",
      "info" : "ExpressionStatement[85959-85995]:ExpressionStatement[85959-85995]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[86020-86187]:EnhancedForStatement[86020-86187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86063-86187]:Block[86063-86187]"
    }, {
      "left" : "l.messageUidChanged(account, folder, oldUid, localMessage.getUid());",
      "right" : "l.messageUidChanged(account, folder, oldUid, localMessage.getUid());",
      "info" : "ExpressionStatement[86093-86161]:ExpressionStatement[86093-86161]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[86212-86219]:ReturnStatement[86212-86219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86247-86380]:Block[86247-86380]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"No remote message with message-id found, proceeding with append\");",
      "right" : "Log.w(K9.LOG_TAG, \"No remote message with message-id found, proceeding with append\");",
      "info" : "ExpressionStatement[86273-86358]:ExpressionStatement[86273-86358]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[86599-86636]:VariableDeclarationStatement[86599-86636]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[86653-86684]:ExpressionStatement[86653-86684]"
    }, {
      "left" : "localFolder.fetch(Collections.singletonList(localMessage) , fp, null);",
      "right" : "localFolder.fetch(Collections.singletonList(localMessage) , fp, null);",
      "info" : "ExpressionStatement[86701-86771]:ExpressionStatement[86701-86771]"
    }, {
      "left" : "String oldUid = localMessage.getUid();",
      "right" : "String oldUid = localMessage.getUid();",
      "info" : "VariableDeclarationStatement[86788-86826]:VariableDeclarationStatement[86788-86826]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_REMOTE_COPY_STARTED, true);",
      "right" : "localMessage.setFlag(Flag.X_REMOTE_COPY_STARTED, true);",
      "info" : "ExpressionStatement[86843-86898]:ExpressionStatement[86843-86898]"
    }, {
      "left" : "remoteFolder.appendMessages(Collections.singletonList(localMessage));",
      "right" : "remoteFolder.appendMessages(Collections.singletonList(localMessage));",
      "info" : "ExpressionStatement[86915-86984]:ExpressionStatement[86915-86984]"
    }, {
      "left" : "localFolder.changeUid(localMessage);",
      "right" : "localFolder.changeUid(localMessage);",
      "info" : "ExpressionStatement[87002-87038]:ExpressionStatement[87002-87038]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[87055-87206]:EnhancedForStatement[87055-87206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87098-87206]:Block[87098-87206]"
    }, {
      "left" : "l.messageUidChanged(account, folder, oldUid, localMessage.getUid());",
      "right" : "l.messageUidChanged(account, folder, oldUid, localMessage.getUid());",
      "info" : "ExpressionStatement[87120-87188]:ExpressionStatement[87120-87188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87226-89354]:Block[87226-89354]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[87476-87513]:VariableDeclarationStatement[87476-87513]"
    }, {
      "left" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "right" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[87530-87565]:ExpressionStatement[87530-87565]"
    }, {
      "left" : "remoteFolder.fetch(Collections.singletonList(remoteMessage), fp, null);",
      "right" : "remoteFolder.fetch(Collections.singletonList(remoteMessage), fp, null);",
      "info" : "ExpressionStatement[87582-87653]:ExpressionStatement[87582-87653]"
    }, {
      "left" : "Date localDate = localMessage.getInternalDate();",
      "right" : "Date localDate = localMessage.getInternalDate();",
      "info" : "VariableDeclarationStatement[87670-87718]:VariableDeclarationStatement[87670-87718]"
    }, {
      "left" : "Date remoteDate = remoteMessage.getInternalDate();",
      "right" : "Date remoteDate = remoteMessage.getInternalDate();",
      "info" : "VariableDeclarationStatement[87735-87785]:VariableDeclarationStatement[87735-87785]"
    }, {
      "left" : "if (remoteDate != null && remoteDate.compareTo(localDate) > 0)",
      "right" : "if (remoteDate != null && remoteDate.compareTo(localDate) > 0)",
      "info" : "IfStatement[87802-89340]:IfStatement[87802-89340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87865-88189]:Block[87865-88189]"
    }, {
      "left" : "localMessage.destroy();",
      "right" : "localMessage.destroy();",
      "info" : "ExpressionStatement[88148-88171]:ExpressionStatement[88148-88171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88195-89340]:Block[88195-89340]"
    }, {
      "left" : "fp.clear();",
      "right" : "fp.clear();",
      "info" : "ExpressionStatement[88358-88369]:ExpressionStatement[88358-88369]"
    }, {
      "left" : "fp = new FetchProfile();",
      "right" : "fp = new FetchProfile();",
      "info" : "ExpressionStatement[88390-88414]:ExpressionStatement[88390-88414]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[88435-88466]:ExpressionStatement[88435-88466]"
    }, {
      "left" : "localFolder.fetch(Collections.singletonList(localMessage), fp, null);",
      "right" : "localFolder.fetch(Collections.singletonList(localMessage), fp, null);",
      "info" : "ExpressionStatement[88487-88556]:ExpressionStatement[88487-88556]"
    }, {
      "left" : "String oldUid = localMessage.getUid();",
      "right" : "String oldUid = localMessage.getUid();",
      "info" : "VariableDeclarationStatement[88577-88615]:VariableDeclarationStatement[88577-88615]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_REMOTE_COPY_STARTED, true);",
      "right" : "localMessage.setFlag(Flag.X_REMOTE_COPY_STARTED, true);",
      "info" : "ExpressionStatement[88637-88692]:ExpressionStatement[88637-88692]"
    }, {
      "left" : "remoteFolder.appendMessages(Collections.singletonList(localMessage));",
      "right" : "remoteFolder.appendMessages(Collections.singletonList(localMessage));",
      "info" : "ExpressionStatement[88714-88783]:ExpressionStatement[88714-88783]"
    }, {
      "left" : "localFolder.changeUid(localMessage);",
      "right" : "localFolder.changeUid(localMessage);",
      "info" : "ExpressionStatement[88804-88840]:ExpressionStatement[88804-88840]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[88861-89020]:EnhancedForStatement[88861-89020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88904-89020]:Block[88904-89020]"
    }, {
      "left" : "l.messageUidChanged(account, folder, oldUid, localMessage.getUid());",
      "right" : "l.messageUidChanged(account, folder, oldUid, localMessage.getUid());",
      "info" : "ExpressionStatement[88930-88998]:ExpressionStatement[88930-88998]"
    }, {
      "left" : "if (remoteDate != null)",
      "right" : "if (remoteDate != null)",
      "info" : "IfStatement[89041-89322]:IfStatement[89041-89322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89065-89322]:Block[89065-89322]"
    }, {
      "left" : "remoteMessage.setFlag(Flag.DELETED, true);",
      "right" : "remoteMessage.setFlag(Flag.DELETED, true);",
      "info" : "ExpressionStatement[89091-89133]:ExpressionStatement[89091-89133]"
    }, {
      "left" : "if (Expunge.EXPUNGE_IMMEDIATELY == account.getExpungePolicy())",
      "right" : "if (Expunge.EXPUNGE_IMMEDIATELY == account.getExpungePolicy())",
      "info" : "IfStatement[89158-89300]:IfStatement[89158-89300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89221-89300]:Block[89221-89300]"
    }, {
      "left" : "remoteFolder.expunge();",
      "right" : "remoteFolder.expunge();",
      "info" : "ExpressionStatement[89251-89274]:ExpressionStatement[89251-89274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89373-89461]:Block[89373-89461]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[89387-89413]:ExpressionStatement[89387-89413]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[89426-89451]:ExpressionStatement[89426-89451]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[89472-89479]:Modifier[89472-89479]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[89480-89484]:PrimitiveType[89480-89484]"
    }, {
      "left" : "queueMoveOrCopy",
      "right" : "queueMoveOrCopy",
      "info" : "SimpleName[89485-89500]:SimpleName[89485-89500]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[89501-89516]:SingleVariableDeclaration[89501-89516]"
    }, {
      "left" : "String srcFolder",
      "right" : "String srcFolder",
      "info" : "SingleVariableDeclaration[89518-89534]:SingleVariableDeclaration[89518-89534]"
    }, {
      "left" : "String destFolder",
      "right" : "String destFolder",
      "info" : "SingleVariableDeclaration[89536-89553]:SingleVariableDeclaration[89536-89553]"
    }, {
      "left" : "boolean isCopy",
      "right" : "boolean isCopy",
      "info" : "SingleVariableDeclaration[89555-89569]:SingleVariableDeclaration[89555-89569]"
    }, {
      "left" : "String uids[]",
      "right" : "String uids[]",
      "info" : "SingleVariableDeclaration[89571-89584]:SingleVariableDeclaration[89571-89584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89586-90207]:Block[89586-90207]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(srcFolder))",
      "right" : "if (account.getErrorFolderName().equals(srcFolder))",
      "info" : "IfStatement[89596-89679]:IfStatement[89596-89679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89648-89679]:Block[89648-89679]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[89662-89669]:ReturnStatement[89662-89669]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[89688-89734]:VariableDeclarationStatement[89688-89734]"
    }, {
      "left" : "command.command = PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW;",
      "right" : "command.command = PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW;",
      "info" : "ExpressionStatement[89743-89799]:ExpressionStatement[89743-89799]"
    }, {
      "left" : "int length = 4 + uids.length;",
      "right" : "int length = 4 + uids.length;",
      "info" : "VariableDeclarationStatement[89809-89838]:VariableDeclarationStatement[89809-89838]"
    }, {
      "left" : "command.arguments = new String[length];",
      "right" : "command.arguments = new String[length];",
      "info" : "ExpressionStatement[89847-89886]:ExpressionStatement[89847-89886]"
    }, {
      "left" : "command.arguments[0] = srcFolder;",
      "right" : "command.arguments[0] = srcFolder;",
      "info" : "ExpressionStatement[89895-89928]:ExpressionStatement[89895-89928]"
    }, {
      "left" : "command.arguments[1] = destFolder;",
      "right" : "command.arguments[1] = destFolder;",
      "info" : "ExpressionStatement[89937-89971]:ExpressionStatement[89937-89971]"
    }, {
      "left" : "command.arguments[2] = Boolean.toString(isCopy);",
      "right" : "command.arguments[2] = Boolean.toString(isCopy);",
      "info" : "ExpressionStatement[89980-90028]:ExpressionStatement[89980-90028]"
    }, {
      "left" : "command.arguments[3] = Boolean.toString(false);",
      "right" : "command.arguments[3] = Boolean.toString(false);",
      "info" : "ExpressionStatement[90037-90084]:ExpressionStatement[90037-90084]"
    }, {
      "left" : "System.arraycopy(uids, 0, command.arguments, 4, uids.length);",
      "right" : "System.arraycopy(uids, 0, command.arguments, 4, uids.length);",
      "info" : "ExpressionStatement[90093-90154]:ExpressionStatement[90093-90154]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[90163-90201]:ExpressionStatement[90163-90201]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[90213-90220]:Modifier[90213-90220]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[90221-90225]:PrimitiveType[90221-90225]"
    }, {
      "left" : "queueMoveOrCopy",
      "right" : "queueMoveOrCopy",
      "info" : "SimpleName[90226-90241]:SimpleName[90226-90241]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[90242-90257]:SingleVariableDeclaration[90242-90257]"
    }, {
      "left" : "String srcFolder",
      "right" : "String srcFolder",
      "info" : "SingleVariableDeclaration[90259-90275]:SingleVariableDeclaration[90259-90275]"
    }, {
      "left" : "String destFolder",
      "right" : "String destFolder",
      "info" : "SingleVariableDeclaration[90277-90294]:SingleVariableDeclaration[90277-90294]"
    }, {
      "left" : "boolean isCopy",
      "right" : "boolean isCopy",
      "info" : "SingleVariableDeclaration[90296-90310]:SingleVariableDeclaration[90296-90310]"
    }, {
      "left" : "String uids[]",
      "right" : "String uids[]",
      "info" : "SingleVariableDeclaration[90312-90325]:SingleVariableDeclaration[90312-90325]"
    }, {
      "left" : "Map<String, String> uidMap",
      "right" : "Map<String, String> uidMap",
      "info" : "SingleVariableDeclaration[90327-90353]:SingleVariableDeclaration[90327-90353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90355-91378]:Block[90355-91378]"
    }, {
      "left" : "if (uidMap == null || uidMap.isEmpty())",
      "right" : "if (uidMap == null || uidMap.isEmpty())",
      "info" : "IfStatement[90365-91372]:IfStatement[90365-91372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90405-90491]:Block[90405-90491]"
    }, {
      "left" : "queueMoveOrCopy(account, srcFolder, destFolder, isCopy, uids);",
      "right" : "queueMoveOrCopy(account, srcFolder, destFolder, isCopy, uids);",
      "info" : "ExpressionStatement[90419-90481]:ExpressionStatement[90419-90481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90497-91372]:Block[90497-91372]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(srcFolder))",
      "right" : "if (account.getErrorFolderName().equals(srcFolder))",
      "info" : "IfStatement[90511-90602]:IfStatement[90511-90602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90563-90602]:Block[90563-90602]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[90581-90588]:ReturnStatement[90581-90588]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[90615-90661]:VariableDeclarationStatement[90615-90661]"
    }, {
      "left" : "command.command = PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW;",
      "right" : "command.command = PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW;",
      "info" : "ExpressionStatement[90674-90730]:ExpressionStatement[90674-90730]"
    }, {
      "left" : "int length = 4 + uidMap.keySet().size() + uidMap.values().size();",
      "right" : "int length = 4 + uidMap.keySet().size() + uidMap.values().size();",
      "info" : "VariableDeclarationStatement[90744-90809]:VariableDeclarationStatement[90744-90809]"
    }, {
      "left" : "command.arguments = new String[length];",
      "right" : "command.arguments = new String[length];",
      "info" : "ExpressionStatement[90822-90861]:ExpressionStatement[90822-90861]"
    }, {
      "left" : "command.arguments[0] = srcFolder;",
      "right" : "command.arguments[0] = srcFolder;",
      "info" : "ExpressionStatement[90874-90907]:ExpressionStatement[90874-90907]"
    }, {
      "left" : "command.arguments[1] = destFolder;",
      "right" : "command.arguments[1] = destFolder;",
      "info" : "ExpressionStatement[90920-90954]:ExpressionStatement[90920-90954]"
    }, {
      "left" : "command.arguments[2] = Boolean.toString(isCopy);",
      "right" : "command.arguments[2] = Boolean.toString(isCopy);",
      "info" : "ExpressionStatement[90967-91015]:ExpressionStatement[90967-91015]"
    }, {
      "left" : "command.arguments[3] = Boolean.toString(true);",
      "right" : "command.arguments[3] = Boolean.toString(true);",
      "info" : "ExpressionStatement[91028-91074]:ExpressionStatement[91028-91074]"
    }, {
      "left" : "System.arraycopy(uidMap.keySet().toArray(), 0, command.arguments, 4, uidMap.keySet().size());",
      "right" : "System.arraycopy(uidMap.keySet().toArray(), 0, command.arguments, 4, uidMap.keySet().size());",
      "info" : "ExpressionStatement[91087-91180]:ExpressionStatement[91087-91180]"
    }, {
      "left" : "System.arraycopy(uidMap.values().toArray(), 0, command.arguments, 4 + uidMap.keySet().size(), uidMap.values().size());",
      "right" : "System.arraycopy(uidMap.values().toArray(), 0, command.arguments, 4 + uidMap.keySet().size(), uidMap.values().size());",
      "info" : "ExpressionStatement[91193-91311]:ExpressionStatement[91193-91311]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[91324-91362]:ExpressionStatement[91324-91362]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[91923-91930]:Modifier[91923-91930]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[91931-91935]:PrimitiveType[91931-91935]"
    }, {
      "left" : "processPendingMoveOrCopyOld2",
      "right" : "processPendingMoveOrCopyOld2",
      "info" : "SimpleName[91936-91964]:SimpleName[91936-91964]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[91965-91987]:SingleVariableDeclaration[91965-91987]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[91989-92004]:SingleVariableDeclaration[91989-92004]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[92025-92043]:SimpleType[92025-92043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92044-92638]:Block[92044-92638]"
    }, {
      "left" : "PendingCommand newCommand = new PendingCommand();",
      "right" : "PendingCommand newCommand = new PendingCommand();",
      "info" : "VariableDeclarationStatement[92054-92103]:VariableDeclarationStatement[92054-92103]"
    }, {
      "left" : "int len = command.arguments.length;",
      "right" : "int len = command.arguments.length;",
      "info" : "VariableDeclarationStatement[92112-92147]:VariableDeclarationStatement[92112-92147]"
    }, {
      "left" : "newCommand.command = PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW;",
      "right" : "newCommand.command = PENDING_COMMAND_MOVE_OR_COPY_BULK_NEW;",
      "info" : "ExpressionStatement[92156-92215]:ExpressionStatement[92156-92215]"
    }, {
      "left" : "newCommand.arguments = new String[len + 1];",
      "right" : "newCommand.arguments = new String[len + 1];",
      "info" : "ExpressionStatement[92224-92267]:ExpressionStatement[92224-92267]"
    }, {
      "left" : "newCommand.arguments[0] = command.arguments[0];",
      "right" : "newCommand.arguments[0] = command.arguments[0];",
      "info" : "ExpressionStatement[92276-92323]:ExpressionStatement[92276-92323]"
    }, {
      "left" : "newCommand.arguments[1] = command.arguments[1];",
      "right" : "newCommand.arguments[1] = command.arguments[1];",
      "info" : "ExpressionStatement[92332-92379]:ExpressionStatement[92332-92379]"
    }, {
      "left" : "newCommand.arguments[2] = command.arguments[2];",
      "right" : "newCommand.arguments[2] = command.arguments[2];",
      "info" : "ExpressionStatement[92388-92435]:ExpressionStatement[92388-92435]"
    }, {
      "left" : "newCommand.arguments[3] = Boolean.toString(false);",
      "right" : "newCommand.arguments[3] = Boolean.toString(false);",
      "info" : "ExpressionStatement[92444-92494]:ExpressionStatement[92444-92494]"
    }, {
      "left" : "System.arraycopy(command.arguments, 3, newCommand.arguments, 4, len - 3);",
      "right" : "System.arraycopy(command.arguments, 3, newCommand.arguments, 4, len - 3);",
      "info" : "ExpressionStatement[92503-92576]:ExpressionStatement[92503-92576]"
    }, {
      "left" : "processPendingMoveOrCopy(newCommand, account);",
      "right" : "processPendingMoveOrCopy(newCommand, account);",
      "info" : "ExpressionStatement[92586-92632]:ExpressionStatement[92586-92632]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[92833-92840]:Modifier[92833-92840]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[92841-92845]:PrimitiveType[92841-92845]"
    }, {
      "left" : "processPendingMoveOrCopy",
      "right" : "processPendingMoveOrCopy",
      "info" : "SimpleName[92846-92870]:SimpleName[92846-92870]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[92871-92893]:SingleVariableDeclaration[92871-92893]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[92895-92910]:SingleVariableDeclaration[92895-92910]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[92923-92941]:SimpleType[92923-92941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92942-98157]:Block[92942-98157]"
    }, {
      "left" : "Folder remoteSrcFolder = null;",
      "right" : "Folder remoteSrcFolder = null;",
      "info" : "VariableDeclarationStatement[92952-92982]:VariableDeclarationStatement[92952-92982]"
    }, {
      "left" : "Folder remoteDestFolder = null;",
      "right" : "Folder remoteDestFolder = null;",
      "info" : "VariableDeclarationStatement[92991-93022]:VariableDeclarationStatement[92991-93022]"
    }, {
      "left" : "LocalFolder localDestFolder = null;",
      "right" : "LocalFolder localDestFolder = null;",
      "info" : "VariableDeclarationStatement[93031-93066]:VariableDeclarationStatement[93031-93066]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[93075-98151]:TryStatement[93075-98151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93079-98046]:Block[93079-98046]"
    }, {
      "left" : "String srcFolder = command.arguments[0];",
      "right" : "String srcFolder = command.arguments[0];",
      "info" : "VariableDeclarationStatement[93093-93133]:VariableDeclarationStatement[93093-93133]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(srcFolder))",
      "right" : "if (account.getErrorFolderName().equals(srcFolder))",
      "info" : "IfStatement[93146-93237]:IfStatement[93146-93237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93198-93237]:Block[93198-93237]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[93216-93223]:ReturnStatement[93216-93223]"
    }, {
      "left" : "String destFolder = command.arguments[1];",
      "right" : "String destFolder = command.arguments[1];",
      "info" : "VariableDeclarationStatement[93250-93291]:VariableDeclarationStatement[93250-93291]"
    }, {
      "left" : "String isCopyS = command.arguments[2];",
      "right" : "String isCopyS = command.arguments[2];",
      "info" : "VariableDeclarationStatement[93304-93342]:VariableDeclarationStatement[93304-93342]"
    }, {
      "left" : "String hasNewUidsS = command.arguments[3];",
      "right" : "String hasNewUidsS = command.arguments[3];",
      "info" : "VariableDeclarationStatement[93355-93397]:VariableDeclarationStatement[93355-93397]"
    }, {
      "left" : "boolean hasNewUids = false;",
      "right" : "boolean hasNewUids = false;",
      "info" : "VariableDeclarationStatement[93411-93438]:VariableDeclarationStatement[93411-93438]"
    }, {
      "left" : "if (hasNewUidsS != null)",
      "right" : "if (hasNewUidsS != null)",
      "info" : "IfStatement[93451-93555]:IfStatement[93451-93555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93476-93555]:Block[93476-93555]"
    }, {
      "left" : "hasNewUids = Boolean.parseBoolean(hasNewUidsS);",
      "right" : "hasNewUids = Boolean.parseBoolean(hasNewUidsS);",
      "info" : "ExpressionStatement[93494-93541]:ExpressionStatement[93494-93541]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[93569-93614]:VariableDeclarationStatement[93569-93614]"
    }, {
      "left" : "remoteSrcFolder = remoteStore.getFolder(srcFolder);",
      "right" : "remoteSrcFolder = remoteStore.getFolder(srcFolder);",
      "info" : "ExpressionStatement[93627-93678]:ExpressionStatement[93627-93678]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[93692-93735]:VariableDeclarationStatement[93692-93735]"
    }, {
      "left" : "localDestFolder = (LocalFolder) localStore.getFolder(destFolder);",
      "right" : "localDestFolder = (LocalFolder) localStore.getFolder(destFolder);",
      "info" : "ExpressionStatement[93748-93813]:ExpressionStatement[93748-93813]"
    }, {
      "left" : "List<Message> messages = new ArrayList<Message>();",
      "right" : "List<Message> messages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[93826-93876]:VariableDeclarationStatement[93826-93876]"
    }, {
      "left" : "Map<String, String> localUidMap = new HashMap<String, String>();",
      "right" : "Map<String, String> localUidMap = new HashMap<String, String>();",
      "info" : "VariableDeclarationStatement[94032-94096]:VariableDeclarationStatement[94032-94096]"
    }, {
      "left" : "if (hasNewUids)",
      "right" : "if (hasNewUids)",
      "info" : "IfStatement[94109-94903]:IfStatement[94109-94903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94125-94583]:Block[94125-94583]"
    }, {
      "left" : "int offset = (command.arguments.length - 4) / 2;",
      "right" : "int offset = (command.arguments.length - 4) / 2;",
      "info" : "VariableDeclarationStatement[94143-94191]:VariableDeclarationStatement[94143-94191]"
    }, {
      "left" : "for (int i = 4; i < 4 + offset; i++)",
      "right" : "for (int i = 4; i < 4 + offset; i++)",
      "info" : "ForStatement[94209-94568]:ForStatement[94209-94568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94246-94568]:Block[94246-94568]"
    }, {
      "left" : "localUidMap.put(command.arguments[i], command.arguments[i + offset]);",
      "right" : "localUidMap.put(command.arguments[i], command.arguments[i + offset]);",
      "info" : "ExpressionStatement[94268-94337]:ExpressionStatement[94268-94337]"
    }, {
      "left" : "String uid = command.arguments[i];",
      "right" : "String uid = command.arguments[i];",
      "info" : "VariableDeclarationStatement[94359-94393]:VariableDeclarationStatement[94359-94393]"
    }, {
      "left" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[94414-94550]:IfStatement[94414-94550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94456-94550]:Block[94456-94550]"
    }, {
      "left" : "messages.add(remoteSrcFolder.getMessage(uid));",
      "right" : "messages.add(remoteSrcFolder.getMessage(uid));",
      "info" : "ExpressionStatement[94482-94528]:ExpressionStatement[94482-94528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94589-94903]:Block[94589-94903]"
    }, {
      "left" : "for (int i = 4; i < command.arguments.length; i++)",
      "right" : "for (int i = 4; i < command.arguments.length; i++)",
      "info" : "ForStatement[94607-94889]:ForStatement[94607-94889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94658-94889]:Block[94658-94889]"
    }, {
      "left" : "String uid = command.arguments[i];",
      "right" : "String uid = command.arguments[i];",
      "info" : "VariableDeclarationStatement[94680-94714]:VariableDeclarationStatement[94680-94714]"
    }, {
      "left" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[94735-94871]:IfStatement[94735-94871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94777-94871]:Block[94777-94871]"
    }, {
      "left" : "messages.add(remoteSrcFolder.getMessage(uid));",
      "right" : "messages.add(remoteSrcFolder.getMessage(uid));",
      "info" : "ExpressionStatement[94803-94849]:ExpressionStatement[94803-94849]"
    }, {
      "left" : "boolean isCopy = false;",
      "right" : "boolean isCopy = false;",
      "info" : "VariableDeclarationStatement[94917-94940]:VariableDeclarationStatement[94917-94940]"
    }, {
      "left" : "if (isCopyS != null)",
      "right" : "if (isCopyS != null)",
      "info" : "IfStatement[94953-95045]:IfStatement[94953-95045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94974-95045]:Block[94974-95045]"
    }, {
      "left" : "isCopy = Boolean.parseBoolean(isCopyS);",
      "right" : "isCopy = Boolean.parseBoolean(isCopyS);",
      "info" : "ExpressionStatement[94992-95031]:ExpressionStatement[94992-95031]"
    }, {
      "left" : "if (!remoteSrcFolder.exists())",
      "right" : "if (!remoteSrcFolder.exists())",
      "info" : "IfStatement[95059-95235]:IfStatement[95059-95235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95090-95235]:Block[95090-95235]"
    }, {
      "left" : "throw new MessagingException(\"processingPendingMoveOrCopy: remoteFolder \" + srcFolder + \" does not exist\", true);",
      "right" : "throw new MessagingException(\"processingPendingMoveOrCopy: remoteFolder \" + srcFolder + \" does not exist\", true);",
      "info" : "ThrowStatement[95108-95221]:ThrowStatement[95108-95221]"
    }, {
      "left" : "remoteSrcFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteSrcFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[95248-95290]:ExpressionStatement[95248-95290]"
    }, {
      "left" : "if (remoteSrcFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteSrcFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[95303-95516]:IfStatement[95303-95516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95357-95516]:Block[95357-95516]"
    }, {
      "left" : "throw new MessagingException(\"processingPendingMoveOrCopy: could not open remoteSrcFolder \" + srcFolder + \" read/write\", true);",
      "right" : "throw new MessagingException(\"processingPendingMoveOrCopy: could not open remoteSrcFolder \" + srcFolder + \" read/write\", true);",
      "info" : "ThrowStatement[95375-95502]:ThrowStatement[95375-95502]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[95530-95761]:IfStatement[95530-95761]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"processingPendingMoveOrCopy: source folder = \" + srcFolder\n                      + \", \" + messages.size() + \" messages, destination folder = \" + destFolder + \", isCopy = \" + isCopy);",
      "right" : "Log.d(K9.LOG_TAG, \"processingPendingMoveOrCopy: source folder = \" + srcFolder\n                      + \", \" + messages.size() + \" messages, destination folder = \" + destFolder + \", isCopy = \" + isCopy);",
      "info" : "ExpressionStatement[95560-95761]:ExpressionStatement[95560-95761]"
    }, {
      "left" : "Map <String, String> remoteUidMap = null;",
      "right" : "Map <String, String> remoteUidMap = null;",
      "info" : "VariableDeclarationStatement[95775-95816]:VariableDeclarationStatement[95775-95816]"
    }, {
      "left" : "if (!isCopy && destFolder.equals(account.getTrashFolderName()))",
      "right" : "if (!isCopy && destFolder.equals(account.getTrashFolderName()))",
      "info" : "IfStatement[95830-96641]:IfStatement[95830-96641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95894-96290]:Block[95894-96290]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[95912-96035]:IfStatement[95912-96035]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"processingPendingMoveOrCopy doing special case for deleting message\");",
      "right" : "Log.d(K9.LOG_TAG, \"processingPendingMoveOrCopy doing special case for deleting message\");",
      "info" : "ExpressionStatement[95946-96035]:ExpressionStatement[95946-96035]"
    }, {
      "left" : "String destFolderName = destFolder;",
      "right" : "String destFolderName = destFolder;",
      "info" : "VariableDeclarationStatement[96053-96088]:VariableDeclarationStatement[96053-96088]"
    }, {
      "left" : "if (K9.FOLDER_NONE.equals(destFolderName))",
      "right" : "if (K9.FOLDER_NONE.equals(destFolderName))",
      "info" : "IfStatement[96105-96210]:IfStatement[96105-96210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96148-96210]:Block[96148-96210]"
    }, {
      "left" : "destFolderName = null;",
      "right" : "destFolderName = null;",
      "info" : "ExpressionStatement[96170-96192]:ExpressionStatement[96170-96192]"
    }, {
      "left" : "remoteSrcFolder.delete(messages, destFolderName);",
      "right" : "remoteSrcFolder.delete(messages, destFolderName);",
      "info" : "ExpressionStatement[96227-96276]:ExpressionStatement[96227-96276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96296-96641]:Block[96296-96641]"
    }, {
      "left" : "remoteDestFolder = remoteStore.getFolder(destFolder);",
      "right" : "remoteDestFolder = remoteStore.getFolder(destFolder);",
      "info" : "ExpressionStatement[96314-96367]:ExpressionStatement[96314-96367]"
    }, {
      "left" : "if (isCopy)",
      "right" : "if (isCopy)",
      "info" : "IfStatement[96385-96627]:IfStatement[96385-96627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96397-96509]:Block[96397-96509]"
    }, {
      "left" : "remoteUidMap = remoteSrcFolder.copyMessages(messages, remoteDestFolder);",
      "right" : "remoteUidMap = remoteSrcFolder.copyMessages(messages, remoteDestFolder);",
      "info" : "ExpressionStatement[96419-96491]:ExpressionStatement[96419-96491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96515-96627]:Block[96515-96627]"
    }, {
      "left" : "remoteUidMap = remoteSrcFolder.moveMessages(messages, remoteDestFolder);",
      "right" : "remoteUidMap = remoteSrcFolder.moveMessages(messages, remoteDestFolder);",
      "info" : "ExpressionStatement[96537-96609]:ExpressionStatement[96537-96609]"
    }, {
      "left" : "if (!isCopy && Expunge.EXPUNGE_IMMEDIATELY == account.getExpungePolicy())",
      "right" : "if (!isCopy && Expunge.EXPUNGE_IMMEDIATELY == account.getExpungePolicy())",
      "info" : "IfStatement[96654-96950]:IfStatement[96654-96950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96728-96950]:Block[96728-96950]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[96746-96892]:IfStatement[96746-96892]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"processingPendingMoveOrCopy expunging folder \" + account.getDescription() + \":\" + srcFolder);",
      "right" : "Log.i(K9.LOG_TAG, \"processingPendingMoveOrCopy expunging folder \" + account.getDescription() + \":\" + srcFolder);",
      "info" : "ExpressionStatement[96780-96892]:ExpressionStatement[96780-96892]"
    }, {
      "left" : "remoteSrcFolder.expunge();",
      "right" : "remoteSrcFolder.expunge();",
      "info" : "ExpressionStatement[96910-96936]:ExpressionStatement[96910-96936]"
    }, {
      "left" : "if (!localUidMap.isEmpty() && remoteUidMap != null && !remoteUidMap.isEmpty())",
      "right" : "if (!localUidMap.isEmpty() && remoteUidMap != null && !remoteUidMap.isEmpty())",
      "info" : "IfStatement[97166-98036]:IfStatement[97166-98036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97245-98036]:Block[97245-98036]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : remoteUidMap.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : remoteUidMap.entrySet())",
      "info" : "EnhancedForStatement[97263-98022]:EnhancedForStatement[97263-98022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97327-98022]:Block[97327-98022]"
    }, {
      "left" : "String remoteSrcUid = entry.getKey();",
      "right" : "String remoteSrcUid = entry.getKey();",
      "info" : "VariableDeclarationStatement[97349-97386]:VariableDeclarationStatement[97349-97386]"
    }, {
      "left" : "String localDestUid = localUidMap.get(remoteSrcUid);",
      "right" : "String localDestUid = localUidMap.get(remoteSrcUid);",
      "info" : "VariableDeclarationStatement[97407-97459]:VariableDeclarationStatement[97407-97459]"
    }, {
      "left" : "String newUid = entry.getValue();",
      "right" : "String newUid = entry.getValue();",
      "info" : "VariableDeclarationStatement[97480-97513]:VariableDeclarationStatement[97480-97513]"
    }, {
      "left" : "Message localDestMessage = localDestFolder.getMessage(localDestUid);",
      "right" : "Message localDestMessage = localDestFolder.getMessage(localDestUid);",
      "info" : "VariableDeclarationStatement[97535-97603]:VariableDeclarationStatement[97535-97603]"
    }, {
      "left" : "if (localDestMessage != null)",
      "right" : "if (localDestMessage != null)",
      "info" : "IfStatement[97624-98004]:IfStatement[97624-98004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97654-98004]:Block[97654-98004]"
    }, {
      "left" : "localDestMessage.setUid(newUid);",
      "right" : "localDestMessage.setUid(newUid);",
      "info" : "ExpressionStatement[97680-97712]:ExpressionStatement[97680-97712]"
    }, {
      "left" : "localDestFolder.changeUid((LocalMessage)localDestMessage);",
      "right" : "localDestFolder.changeUid((LocalMessage)localDestMessage);",
      "info" : "ExpressionStatement[97737-97795]:ExpressionStatement[97737-97795]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[97820-97982]:EnhancedForStatement[97820-97982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97863-97982]:Block[97863-97982]"
    }, {
      "left" : "l.messageUidChanged(account, destFolder, localDestUid, newUid);",
      "right" : "l.messageUidChanged(account, destFolder, localDestUid, newUid);",
      "info" : "ExpressionStatement[97893-97956]:ExpressionStatement[97893-97956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98055-98151]:Block[98055-98151]"
    }, {
      "left" : "closeFolder(remoteSrcFolder);",
      "right" : "closeFolder(remoteSrcFolder);",
      "info" : "ExpressionStatement[98069-98098]:ExpressionStatement[98069-98098]"
    }, {
      "left" : "closeFolder(remoteDestFolder);",
      "right" : "closeFolder(remoteDestFolder);",
      "info" : "ExpressionStatement[98111-98141]:ExpressionStatement[98111-98141]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[98163-98170]:Modifier[98163-98170]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[98171-98175]:PrimitiveType[98171-98175]"
    }, {
      "left" : "queueSetFlag",
      "right" : "queueSetFlag",
      "info" : "SimpleName[98176-98188]:SimpleName[98176-98188]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[98189-98210]:SingleVariableDeclaration[98189-98210]"
    }, {
      "left" : "final String folderName",
      "right" : "final String folderName",
      "info" : "SingleVariableDeclaration[98212-98235]:SingleVariableDeclaration[98212-98235]"
    }, {
      "left" : "final String newState",
      "right" : "final String newState",
      "info" : "SingleVariableDeclaration[98237-98258]:SingleVariableDeclaration[98237-98258]"
    }, {
      "left" : "final String flag",
      "right" : "final String flag",
      "info" : "SingleVariableDeclaration[98260-98277]:SingleVariableDeclaration[98260-98277]"
    }, {
      "left" : "final String[] uids",
      "right" : "final String[] uids",
      "info" : "SingleVariableDeclaration[98279-98298]:SingleVariableDeclaration[98279-98298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98300-99052]:Block[98300-99052]"
    }, {
      "left" : "putBackground(\"queueSetFlag \" + account.getDescription() + \":\" + folderName, null, new Runnable() {\n            @Override\n            public void run() {\n                PendingCommand command = new PendingCommand();\n                command.command = PENDING_COMMAND_SET_FLAG_BULK;\n                int length = 3 + uids.length;\n                command.arguments = new String[length];\n                command.arguments[0] = folderName;\n                command.arguments[1] = newState;\n                command.arguments[2] = flag;\n                System.arraycopy(uids, 0, command.arguments, 3, uids.length);\n                queuePendingCommand(account, command);\n                processPendingCommands(account);\n            }\n        });",
      "right" : "putBackground(\"queueSetFlag \" + account.getDescription() + \":\" + folderName, null, new Runnable() {\n            @Override\n            public void run() {\n                PendingCommand command = new PendingCommand();\n                command.command = PENDING_COMMAND_SET_FLAG_BULK;\n                int length = 3 + uids.length;\n                command.arguments = new String[length];\n                command.arguments[0] = folderName;\n                command.arguments[1] = newState;\n                command.arguments[2] = flag;\n                System.arraycopy(uids, 0, command.arguments, 3, uids.length);\n                queuePendingCommand(account, command);\n                processPendingCommands(account);\n            }\n        });",
      "info" : "ExpressionStatement[98310-99046]:ExpressionStatement[98310-99046]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[98422-98431]:MarkerAnnotation[98422-98431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[98444-98450]:Modifier[98444-98450]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[98451-98455]:PrimitiveType[98451-98455]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[98456-98459]:SimpleName[98456-98459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98462-99034]:Block[98462-99034]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[98480-98526]:VariableDeclarationStatement[98480-98526]"
    }, {
      "left" : "command.command = PENDING_COMMAND_SET_FLAG_BULK;",
      "right" : "command.command = PENDING_COMMAND_SET_FLAG_BULK;",
      "info" : "ExpressionStatement[98543-98591]:ExpressionStatement[98543-98591]"
    }, {
      "left" : "int length = 3 + uids.length;",
      "right" : "int length = 3 + uids.length;",
      "info" : "VariableDeclarationStatement[98608-98637]:VariableDeclarationStatement[98608-98637]"
    }, {
      "left" : "command.arguments = new String[length];",
      "right" : "command.arguments = new String[length];",
      "info" : "ExpressionStatement[98654-98693]:ExpressionStatement[98654-98693]"
    }, {
      "left" : "command.arguments[0] = folderName;",
      "right" : "command.arguments[0] = folderName;",
      "info" : "ExpressionStatement[98710-98744]:ExpressionStatement[98710-98744]"
    }, {
      "left" : "command.arguments[1] = newState;",
      "right" : "command.arguments[1] = newState;",
      "info" : "ExpressionStatement[98761-98793]:ExpressionStatement[98761-98793]"
    }, {
      "left" : "command.arguments[2] = flag;",
      "right" : "command.arguments[2] = flag;",
      "info" : "ExpressionStatement[98810-98838]:ExpressionStatement[98810-98838]"
    }, {
      "left" : "System.arraycopy(uids, 0, command.arguments, 3, uids.length);",
      "right" : "System.arraycopy(uids, 0, command.arguments, 3, uids.length);",
      "info" : "ExpressionStatement[98855-98916]:ExpressionStatement[98855-98916]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[98933-98971]:ExpressionStatement[98933-98971]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[98988-99020]:ExpressionStatement[98988-99020]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[99234-99241]:Modifier[99234-99241]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[99242-99246]:PrimitiveType[99242-99246]"
    }, {
      "left" : "processPendingSetFlag",
      "right" : "processPendingSetFlag",
      "info" : "SimpleName[99247-99268]:SimpleName[99247-99268]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[99269-99291]:SingleVariableDeclaration[99269-99291]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[99293-99308]:SingleVariableDeclaration[99293-99308]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[99321-99339]:SimpleType[99321-99339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99340-100570]:Block[99340-100570]"
    }, {
      "left" : "String folder = command.arguments[0];",
      "right" : "String folder = command.arguments[0];",
      "info" : "VariableDeclarationStatement[99350-99387]:VariableDeclarationStatement[99350-99387]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(folder))",
      "right" : "if (account.getErrorFolderName().equals(folder))",
      "info" : "IfStatement[99397-99477]:IfStatement[99397-99477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99446-99477]:Block[99446-99477]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[99460-99467]:ReturnStatement[99460-99467]"
    }, {
      "left" : "boolean newState = Boolean.parseBoolean(command.arguments[1]);",
      "right" : "boolean newState = Boolean.parseBoolean(command.arguments[1]);",
      "info" : "VariableDeclarationStatement[99487-99549]:VariableDeclarationStatement[99487-99549]"
    }, {
      "left" : "Flag flag = Flag.valueOf(command.arguments[2]);",
      "right" : "Flag flag = Flag.valueOf(command.arguments[2]);",
      "info" : "VariableDeclarationStatement[99559-99606]:VariableDeclarationStatement[99559-99606]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[99616-99661]:VariableDeclarationStatement[99616-99661]"
    }, {
      "left" : "Folder remoteFolder = remoteStore.getFolder(folder);",
      "right" : "Folder remoteFolder = remoteStore.getFolder(folder);",
      "info" : "VariableDeclarationStatement[99670-99722]:VariableDeclarationStatement[99670-99722]"
    }, {
      "left" : "if (!remoteFolder.exists() || !remoteFolder.isFlagSupported(flag))",
      "right" : "if (!remoteFolder.exists() || !remoteFolder.isFlagSupported(flag))",
      "info" : "IfStatement[99731-99829]:IfStatement[99731-99829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99798-99829]:Block[99798-99829]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[99812-99819]:ReturnStatement[99812-99819]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[99839-100564]:TryStatement[99839-100564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99843-100505]:Block[99843-100505]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[99857-99896]:ExpressionStatement[99857-99896]"
    }, {
      "left" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[99909-99999]:IfStatement[99909-99999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99960-99999]:Block[99960-99999]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[99978-99985]:ReturnStatement[99978-99985]"
    }, {
      "left" : "List<Message> messages = new ArrayList<Message>();",
      "right" : "List<Message> messages = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[100012-100062]:VariableDeclarationStatement[100012-100062]"
    }, {
      "left" : "for (int i = 3; i < command.arguments.length; i++)",
      "right" : "for (int i = 3; i < command.arguments.length; i++)",
      "info" : "ForStatement[100075-100334]:ForStatement[100075-100334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100126-100334]:Block[100126-100334]"
    }, {
      "left" : "String uid = command.arguments[i];",
      "right" : "String uid = command.arguments[i];",
      "info" : "VariableDeclarationStatement[100144-100178]:VariableDeclarationStatement[100144-100178]"
    }, {
      "left" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[100195-100320]:IfStatement[100195-100320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100237-100320]:Block[100237-100320]"
    }, {
      "left" : "messages.add(remoteFolder.getMessage(uid));",
      "right" : "messages.add(remoteFolder.getMessage(uid));",
      "info" : "ExpressionStatement[100259-100302]:ExpressionStatement[100259-100302]"
    }, {
      "left" : "if (messages.isEmpty())",
      "right" : "if (messages.isEmpty())",
      "info" : "IfStatement[100348-100411]:IfStatement[100348-100411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100372-100411]:Block[100372-100411]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[100390-100397]:ReturnStatement[100390-100397]"
    }, {
      "left" : "remoteFolder.setFlags(messages, Collections.singleton(flag), newState);",
      "right" : "remoteFolder.setFlags(messages, Collections.singleton(flag), newState);",
      "info" : "ExpressionStatement[100424-100495]:ExpressionStatement[100424-100495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100514-100564]:Block[100514-100564]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[100528-100554]:ExpressionStatement[100528-100554]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[100704-100711]:Modifier[100704-100711]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[100712-100716]:PrimitiveType[100712-100716]"
    }, {
      "left" : "processPendingSetFlagOld",
      "right" : "processPendingSetFlagOld",
      "info" : "SimpleName[100717-100741]:SimpleName[100717-100741]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[100742-100764]:SingleVariableDeclaration[100742-100764]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[100766-100781]:SingleVariableDeclaration[100766-100781]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[100794-100812]:SimpleType[100794-100812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100813-102022]:Block[100813-102022]"
    }, {
      "left" : "String folder = command.arguments[0];",
      "right" : "String folder = command.arguments[0];",
      "info" : "VariableDeclarationStatement[100823-100860]:VariableDeclarationStatement[100823-100860]"
    }, {
      "left" : "String uid = command.arguments[1];",
      "right" : "String uid = command.arguments[1];",
      "info" : "VariableDeclarationStatement[100869-100903]:VariableDeclarationStatement[100869-100903]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(folder))",
      "right" : "if (account.getErrorFolderName().equals(folder))",
      "info" : "IfStatement[100913-100993]:IfStatement[100913-100993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100962-100993]:Block[100962-100993]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[100976-100983]:ReturnStatement[100976-100983]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[101002-101113]:IfStatement[101002-101113]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"processPendingSetFlagOld: folder = \" + folder + \", uid = \" + uid);",
      "right" : "Log.d(K9.LOG_TAG, \"processPendingSetFlagOld: folder = \" + folder + \", uid = \" + uid);",
      "info" : "ExpressionStatement[101028-101113]:ExpressionStatement[101028-101113]"
    }, {
      "left" : "boolean newState = Boolean.parseBoolean(command.arguments[2]);",
      "right" : "boolean newState = Boolean.parseBoolean(command.arguments[2]);",
      "info" : "VariableDeclarationStatement[101123-101185]:VariableDeclarationStatement[101123-101185]"
    }, {
      "left" : "Flag flag = Flag.valueOf(command.arguments[3]);",
      "right" : "Flag flag = Flag.valueOf(command.arguments[3]);",
      "info" : "VariableDeclarationStatement[101195-101242]:VariableDeclarationStatement[101195-101242]"
    }, {
      "left" : "Folder remoteFolder = null;",
      "right" : "Folder remoteFolder = null;",
      "info" : "VariableDeclarationStatement[101251-101278]:VariableDeclarationStatement[101251-101278]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[101287-102016]:TryStatement[101287-102016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101291-101957]:Block[101291-101957]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[101305-101350]:VariableDeclarationStatement[101305-101350]"
    }, {
      "left" : "remoteFolder = remoteStore.getFolder(folder);",
      "right" : "remoteFolder = remoteStore.getFolder(folder);",
      "info" : "ExpressionStatement[101363-101408]:ExpressionStatement[101363-101408]"
    }, {
      "left" : "if (!remoteFolder.exists())",
      "right" : "if (!remoteFolder.exists())",
      "info" : "IfStatement[101421-101488]:IfStatement[101421-101488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101449-101488]:Block[101449-101488]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[101467-101474]:ReturnStatement[101467-101474]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[101501-101540]:ExpressionStatement[101501-101540]"
    }, {
      "left" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[101553-101643]:IfStatement[101553-101643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101604-101643]:Block[101604-101643]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[101622-101629]:ReturnStatement[101622-101629]"
    }, {
      "left" : "Message remoteMessage = null;",
      "right" : "Message remoteMessage = null;",
      "info" : "VariableDeclarationStatement[101656-101685]:VariableDeclarationStatement[101656-101685]"
    }, {
      "left" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[101698-101817]:IfStatement[101698-101817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101740-101817]:Block[101740-101817]"
    }, {
      "left" : "remoteMessage = remoteFolder.getMessage(uid);",
      "right" : "remoteMessage = remoteFolder.getMessage(uid);",
      "info" : "ExpressionStatement[101758-101803]:ExpressionStatement[101758-101803]"
    }, {
      "left" : "if (remoteMessage == null)",
      "right" : "if (remoteMessage == null)",
      "info" : "IfStatement[101830-101896]:IfStatement[101830-101896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101857-101896]:Block[101857-101896]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[101875-101882]:ReturnStatement[101875-101882]"
    }, {
      "left" : "remoteMessage.setFlag(flag, newState);",
      "right" : "remoteMessage.setFlag(flag, newState);",
      "info" : "ExpressionStatement[101909-101947]:ExpressionStatement[101909-101947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101966-102016]:Block[101966-102016]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[101980-102006]:ExpressionStatement[101980-102006]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[102027-102034]:Modifier[102027-102034]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[102035-102039]:PrimitiveType[102035-102039]"
    }, {
      "left" : "queueExpunge",
      "right" : "queueExpunge",
      "info" : "SimpleName[102040-102052]:SimpleName[102040-102052]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[102053-102074]:SingleVariableDeclaration[102053-102074]"
    }, {
      "left" : "final String folderName",
      "right" : "final String folderName",
      "info" : "SingleVariableDeclaration[102076-102099]:SingleVariableDeclaration[102076-102099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102101-102626]:Block[102101-102626]"
    }, {
      "left" : "putBackground(\"queueExpunge \" + account.getDescription() + \":\" + folderName, null, new Runnable() {\n            @Override\n            public void run() {\n                PendingCommand command = new PendingCommand();\n                command.command = PENDING_COMMAND_EXPUNGE;\n\n                command.arguments = new String[1];\n\n                command.arguments[0] = folderName;\n                queuePendingCommand(account, command);\n                processPendingCommands(account);\n            }\n        });",
      "right" : "putBackground(\"queueExpunge \" + account.getDescription() + \":\" + folderName, null, new Runnable() {\n            @Override\n            public void run() {\n                PendingCommand command = new PendingCommand();\n                command.command = PENDING_COMMAND_EXPUNGE;\n\n                command.arguments = new String[1];\n\n                command.arguments[0] = folderName;\n                queuePendingCommand(account, command);\n                processPendingCommands(account);\n            }\n        });",
      "info" : "ExpressionStatement[102111-102620]:ExpressionStatement[102111-102620]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[102223-102232]:MarkerAnnotation[102223-102232]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[102245-102251]:Modifier[102245-102251]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[102252-102256]:PrimitiveType[102252-102256]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[102257-102260]:SimpleName[102257-102260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102263-102608]:Block[102263-102608]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[102281-102327]:VariableDeclarationStatement[102281-102327]"
    }, {
      "left" : "command.command = PENDING_COMMAND_EXPUNGE;",
      "right" : "command.command = PENDING_COMMAND_EXPUNGE;",
      "info" : "ExpressionStatement[102344-102386]:ExpressionStatement[102344-102386]"
    }, {
      "left" : "command.arguments = new String[1];",
      "right" : "command.arguments = new String[1];",
      "info" : "ExpressionStatement[102404-102438]:ExpressionStatement[102404-102438]"
    }, {
      "left" : "command.arguments[0] = folderName;",
      "right" : "command.arguments[0] = folderName;",
      "info" : "ExpressionStatement[102456-102490]:ExpressionStatement[102456-102490]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[102507-102545]:ExpressionStatement[102507-102545]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[102562-102594]:ExpressionStatement[102562-102594]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[102631-102638]:Modifier[102631-102638]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[102639-102643]:PrimitiveType[102639-102643]"
    }, {
      "left" : "processPendingExpunge",
      "right" : "processPendingExpunge",
      "info" : "SimpleName[102644-102665]:SimpleName[102644-102665]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[102666-102688]:SingleVariableDeclaration[102666-102688]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[102690-102705]:SingleVariableDeclaration[102690-102705]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[102718-102736]:SimpleType[102718-102736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102737-103567]:Block[102737-103567]"
    }, {
      "left" : "String folder = command.arguments[0];",
      "right" : "String folder = command.arguments[0];",
      "info" : "VariableDeclarationStatement[102747-102784]:VariableDeclarationStatement[102747-102784]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(folder))",
      "right" : "if (account.getErrorFolderName().equals(folder))",
      "info" : "IfStatement[102794-102874]:IfStatement[102794-102874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102843-102874]:Block[102843-102874]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[102857-102864]:ReturnStatement[102857-102864]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[102883-102972]:IfStatement[102883-102972]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"processPendingExpunge: folder = \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"processPendingExpunge: folder = \" + folder);",
      "info" : "ExpressionStatement[102909-102972]:ExpressionStatement[102909-102972]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[102982-103027]:VariableDeclarationStatement[102982-103027]"
    }, {
      "left" : "Folder remoteFolder = remoteStore.getFolder(folder);",
      "right" : "Folder remoteFolder = remoteStore.getFolder(folder);",
      "info" : "VariableDeclarationStatement[103036-103088]:VariableDeclarationStatement[103036-103088]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[103097-103561]:TryStatement[103097-103561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103101-103502]:Block[103101-103502]"
    }, {
      "left" : "if (!remoteFolder.exists())",
      "right" : "if (!remoteFolder.exists())",
      "info" : "IfStatement[103115-103182]:IfStatement[103115-103182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103143-103182]:Block[103143-103182]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[103161-103168]:ReturnStatement[103161-103168]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[103195-103234]:ExpressionStatement[103195-103234]"
    }, {
      "left" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[103247-103337]:IfStatement[103247-103337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103298-103337]:Block[103298-103337]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[103316-103323]:ReturnStatement[103316-103323]"
    }, {
      "left" : "remoteFolder.expunge();",
      "right" : "remoteFolder.expunge();",
      "info" : "ExpressionStatement[103350-103373]:ExpressionStatement[103350-103373]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[103386-103492]:IfStatement[103386-103492]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"processPendingExpunge: complete for folder = \" + folder);",
      "right" : "Log.d(K9.LOG_TAG, \"processPendingExpunge: complete for folder = \" + folder);",
      "info" : "ExpressionStatement[103416-103492]:ExpressionStatement[103416-103492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103511-103561]:Block[103511-103561]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[103525-103551]:ExpressionStatement[103525-103551]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[103702-103709]:Modifier[103702-103709]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[103710-103714]:PrimitiveType[103710-103714]"
    }, {
      "left" : "processPendingMoveOrCopyOld",
      "right" : "processPendingMoveOrCopyOld",
      "info" : "SimpleName[103715-103742]:SimpleName[103715-103742]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[103743-103765]:SingleVariableDeclaration[103743-103765]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[103767-103782]:SingleVariableDeclaration[103767-103782]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[103795-103813]:SimpleType[103795-103813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103814-106340]:Block[103814-106340]"
    }, {
      "left" : "String srcFolder = command.arguments[0];",
      "right" : "String srcFolder = command.arguments[0];",
      "info" : "VariableDeclarationStatement[103824-103864]:VariableDeclarationStatement[103824-103864]"
    }, {
      "left" : "String uid = command.arguments[1];",
      "right" : "String uid = command.arguments[1];",
      "info" : "VariableDeclarationStatement[103873-103907]:VariableDeclarationStatement[103873-103907]"
    }, {
      "left" : "String destFolder = command.arguments[2];",
      "right" : "String destFolder = command.arguments[2];",
      "info" : "VariableDeclarationStatement[103916-103957]:VariableDeclarationStatement[103916-103957]"
    }, {
      "left" : "String isCopyS = command.arguments[3];",
      "right" : "String isCopyS = command.arguments[3];",
      "info" : "VariableDeclarationStatement[103966-104004]:VariableDeclarationStatement[103966-104004]"
    }, {
      "left" : "boolean isCopy = false;",
      "right" : "boolean isCopy = false;",
      "info" : "VariableDeclarationStatement[104014-104037]:VariableDeclarationStatement[104014-104037]"
    }, {
      "left" : "if (isCopyS != null)",
      "right" : "if (isCopyS != null)",
      "info" : "IfStatement[104046-104130]:IfStatement[104046-104130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104067-104130]:Block[104067-104130]"
    }, {
      "left" : "isCopy = Boolean.parseBoolean(isCopyS);",
      "right" : "isCopy = Boolean.parseBoolean(isCopyS);",
      "info" : "ExpressionStatement[104081-104120]:ExpressionStatement[104081-104120]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(srcFolder))",
      "right" : "if (account.getErrorFolderName().equals(srcFolder))",
      "info" : "IfStatement[104140-104223]:IfStatement[104140-104223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104192-104223]:Block[104192-104223]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[104206-104213]:ReturnStatement[104206-104213]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[104233-104278]:VariableDeclarationStatement[104233-104278]"
    }, {
      "left" : "Folder remoteSrcFolder = remoteStore.getFolder(srcFolder);",
      "right" : "Folder remoteSrcFolder = remoteStore.getFolder(srcFolder);",
      "info" : "VariableDeclarationStatement[104287-104345]:VariableDeclarationStatement[104287-104345]"
    }, {
      "left" : "Folder remoteDestFolder = remoteStore.getFolder(destFolder);",
      "right" : "Folder remoteDestFolder = remoteStore.getFolder(destFolder);",
      "info" : "VariableDeclarationStatement[104354-104414]:VariableDeclarationStatement[104354-104414]"
    }, {
      "left" : "if (!remoteSrcFolder.exists())",
      "right" : "if (!remoteSrcFolder.exists())",
      "info" : "IfStatement[104424-104592]:IfStatement[104424-104592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104455-104592]:Block[104455-104592]"
    }, {
      "left" : "throw new MessagingException(\"processPendingMoveOrCopyOld: remoteFolder \" + srcFolder + \" does not exist\", true);",
      "right" : "throw new MessagingException(\"processPendingMoveOrCopyOld: remoteFolder \" + srcFolder + \" does not exist\", true);",
      "info" : "ThrowStatement[104469-104582]:ThrowStatement[104469-104582]"
    }, {
      "left" : "remoteSrcFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteSrcFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[104601-104643]:ExpressionStatement[104601-104643]"
    }, {
      "left" : "if (remoteSrcFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteSrcFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[104652-104857]:IfStatement[104652-104857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104706-104857]:Block[104706-104857]"
    }, {
      "left" : "throw new MessagingException(\"processPendingMoveOrCopyOld: could not open remoteSrcFolder \" + srcFolder + \" read/write\", true);",
      "right" : "throw new MessagingException(\"processPendingMoveOrCopyOld: could not open remoteSrcFolder \" + srcFolder + \" read/write\", true);",
      "info" : "ThrowStatement[104720-104847]:ThrowStatement[104720-104847]"
    }, {
      "left" : "Message remoteMessage = null;",
      "right" : "Message remoteMessage = null;",
      "info" : "VariableDeclarationStatement[104867-104896]:VariableDeclarationStatement[104867-104896]"
    }, {
      "left" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[104905-105019]:IfStatement[104905-105019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104947-105019]:Block[104947-105019]"
    }, {
      "left" : "remoteMessage = remoteSrcFolder.getMessage(uid);",
      "right" : "remoteMessage = remoteSrcFolder.getMessage(uid);",
      "info" : "ExpressionStatement[104961-105009]:ExpressionStatement[104961-105009]"
    }, {
      "left" : "if (remoteMessage == null)",
      "right" : "if (remoteMessage == null)",
      "info" : "IfStatement[105028-105187]:IfStatement[105028-105187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105055-105187]:Block[105055-105187]"
    }, {
      "left" : "throw new MessagingException(\"processPendingMoveOrCopyOld: remoteMessage \" + uid + \" does not exist\", true);",
      "right" : "throw new MessagingException(\"processPendingMoveOrCopyOld: remoteMessage \" + uid + \" does not exist\", true);",
      "info" : "ThrowStatement[105069-105177]:ThrowStatement[105069-105177]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[105197-105405]:IfStatement[105197-105405]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"processPendingMoveOrCopyOld: source folder = \" + srcFolder\n                  + \", uid = \" + uid + \", destination folder = \" + destFolder + \", isCopy = \" + isCopy);",
      "right" : "Log.d(K9.LOG_TAG, \"processPendingMoveOrCopyOld: source folder = \" + srcFolder\n                  + \", uid = \" + uid + \", destination folder = \" + destFolder + \", isCopy = \" + isCopy);",
      "info" : "ExpressionStatement[105223-105405]:ExpressionStatement[105223-105405]"
    }, {
      "left" : "if (!isCopy && destFolder.equals(account.getTrashFolderName()))",
      "right" : "if (!isCopy && destFolder.equals(account.getTrashFolderName()))",
      "info" : "IfStatement[105415-105744]:IfStatement[105415-105744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105479-105744]:Block[105479-105744]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[105493-105612]:IfStatement[105493-105612]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"processPendingMoveOrCopyOld doing special case for deleting message\");",
      "right" : "Log.d(K9.LOG_TAG, \"processPendingMoveOrCopyOld doing special case for deleting message\");",
      "info" : "ExpressionStatement[105523-105612]:ExpressionStatement[105523-105612]"
    }, {
      "left" : "remoteMessage.delete(account.getTrashFolderName());",
      "right" : "remoteMessage.delete(account.getTrashFolderName());",
      "info" : "ExpressionStatement[105626-105677]:ExpressionStatement[105626-105677]"
    }, {
      "left" : "remoteSrcFolder.close();",
      "right" : "remoteSrcFolder.close();",
      "info" : "ExpressionStatement[105690-105714]:ExpressionStatement[105690-105714]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[105727-105734]:ReturnStatement[105727-105734]"
    }, {
      "left" : "remoteDestFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteDestFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[105754-105797]:ExpressionStatement[105754-105797]"
    }, {
      "left" : "if (remoteDestFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteDestFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[105806-106013]:IfStatement[105806-106013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105861-106013]:Block[105861-106013]"
    }, {
      "left" : "throw new MessagingException(\"processPendingMoveOrCopyOld: could not open remoteDestFolder \" + srcFolder + \" read/write\", true);",
      "right" : "throw new MessagingException(\"processPendingMoveOrCopyOld: could not open remoteDestFolder \" + srcFolder + \" read/write\", true);",
      "info" : "ThrowStatement[105875-106003]:ThrowStatement[105875-106003]"
    }, {
      "left" : "if (isCopy)",
      "right" : "if (isCopy)",
      "info" : "IfStatement[106023-106267]:IfStatement[106023-106267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106035-106148]:Block[106035-106148]"
    }, {
      "left" : "remoteSrcFolder.copyMessages(Collections.singletonList(remoteMessage), remoteDestFolder);",
      "right" : "remoteSrcFolder.copyMessages(Collections.singletonList(remoteMessage), remoteDestFolder);",
      "info" : "ExpressionStatement[106049-106138]:ExpressionStatement[106049-106138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106154-106267]:Block[106154-106267]"
    }, {
      "left" : "remoteSrcFolder.moveMessages(Collections.singletonList(remoteMessage), remoteDestFolder);",
      "right" : "remoteSrcFolder.moveMessages(Collections.singletonList(remoteMessage), remoteDestFolder);",
      "info" : "ExpressionStatement[106168-106257]:ExpressionStatement[106168-106257]"
    }, {
      "left" : "remoteSrcFolder.close();",
      "right" : "remoteSrcFolder.close();",
      "info" : "ExpressionStatement[106276-106300]:ExpressionStatement[106276-106300]"
    }, {
      "left" : "remoteDestFolder.close();",
      "right" : "remoteDestFolder.close();",
      "info" : "ExpressionStatement[106309-106334]:ExpressionStatement[106309-106334]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[106346-106353]:Modifier[106346-106353]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[106354-106358]:PrimitiveType[106354-106358]"
    }, {
      "left" : "processPendingMarkAllAsRead",
      "right" : "processPendingMarkAllAsRead",
      "info" : "SimpleName[106359-106386]:SimpleName[106359-106386]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[106387-106409]:SingleVariableDeclaration[106387-106409]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[106411-106426]:SingleVariableDeclaration[106411-106426]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[106435-106453]:SimpleType[106435-106453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106454-108232]:Block[106454-108232]"
    }, {
      "left" : "String folder = command.arguments[0];",
      "right" : "String folder = command.arguments[0];",
      "info" : "VariableDeclarationStatement[106464-106501]:VariableDeclarationStatement[106464-106501]"
    }, {
      "left" : "Folder remoteFolder = null;",
      "right" : "Folder remoteFolder = null;",
      "info" : "VariableDeclarationStatement[106510-106537]:VariableDeclarationStatement[106510-106537]"
    }, {
      "left" : "LocalFolder localFolder = null;",
      "right" : "LocalFolder localFolder = null;",
      "info" : "VariableDeclarationStatement[106546-106577]:VariableDeclarationStatement[106546-106577]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[106586-108226]:TryStatement[106586-108226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106590-107957]:Block[106590-107957]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[106604-106647]:VariableDeclarationStatement[106604-106647]"
    }, {
      "left" : "localFolder = (LocalFolder) localStore.getFolder(folder);",
      "right" : "localFolder = (LocalFolder) localStore.getFolder(folder);",
      "info" : "ExpressionStatement[106660-106717]:ExpressionStatement[106660-106717]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[106730-106768]:ExpressionStatement[106730-106768]"
    }, {
      "left" : "List<? extends Message> messages = localFolder.getMessages(null, false);",
      "right" : "List<? extends Message> messages = localFolder.getMessages(null, false);",
      "info" : "VariableDeclarationStatement[106781-106853]:VariableDeclarationStatement[106781-106853]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[106866-107206]:EnhancedForStatement[106866-107206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106899-107206]:Block[106899-107206]"
    }, {
      "left" : "if (!message.isSet(Flag.SEEN))",
      "right" : "if (!message.isSet(Flag.SEEN))",
      "info" : "IfStatement[106917-107192]:IfStatement[106917-107192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106948-107192]:Block[106948-107192]"
    }, {
      "left" : "message.setFlag(Flag.SEEN, true);",
      "right" : "message.setFlag(Flag.SEEN, true);",
      "info" : "ExpressionStatement[106970-107003]:ExpressionStatement[106970-107003]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[107024-107174]:EnhancedForStatement[107024-107174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107067-107174]:Block[107067-107174]"
    }, {
      "left" : "l.listLocalMessagesUpdateMessage(account, folder, message);",
      "right" : "l.listLocalMessagesUpdateMessage(account, folder, message);",
      "info" : "ExpressionStatement[107093-107152]:ExpressionStatement[107093-107152]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[107220-107337]:EnhancedForStatement[107220-107337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107263-107337]:Block[107263-107337]"
    }, {
      "left" : "l.folderStatusChanged(account, folder, 0);",
      "right" : "l.folderStatusChanged(account, folder, 0);",
      "info" : "ExpressionStatement[107281-107323]:ExpressionStatement[107281-107323]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(folder))",
      "right" : "if (account.getErrorFolderName().equals(folder))",
      "info" : "IfStatement[107352-107440]:IfStatement[107352-107440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107401-107440]:Block[107401-107440]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[107419-107426]:ReturnStatement[107419-107426]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[107454-107499]:VariableDeclarationStatement[107454-107499]"
    }, {
      "left" : "remoteFolder = remoteStore.getFolder(folder);",
      "right" : "remoteFolder = remoteStore.getFolder(folder);",
      "info" : "ExpressionStatement[107512-107557]:ExpressionStatement[107512-107557]"
    }, {
      "left" : "if (!remoteFolder.exists() || !remoteFolder.isFlagSupported(Flag.SEEN))",
      "right" : "if (!remoteFolder.exists() || !remoteFolder.isFlagSupported(Flag.SEEN))",
      "info" : "IfStatement[107571-107682]:IfStatement[107571-107682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107643-107682]:Block[107643-107682]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[107661-107668]:ReturnStatement[107661-107668]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[107695-107734]:ExpressionStatement[107695-107734]"
    }, {
      "left" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "right" : "if (remoteFolder.getMode() != Folder.OPEN_MODE_RW)",
      "info" : "IfStatement[107747-107837]:IfStatement[107747-107837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107798-107837]:Block[107798-107837]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[107816-107823]:ReturnStatement[107816-107823]"
    }, {
      "left" : "remoteFolder.setFlags(Collections.singleton(Flag.SEEN), true);",
      "right" : "remoteFolder.setFlags(Collections.singleton(Flag.SEEN), true);",
      "info" : "ExpressionStatement[107851-107913]:ExpressionStatement[107851-107913]"
    }, {
      "left" : "remoteFolder.close();",
      "right" : "remoteFolder.close();",
      "info" : "ExpressionStatement[107926-107947]:ExpressionStatement[107926-107947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108000-108129]:Block[108000-108129]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"Could not mark all server-side as read because store doesn't support operation\", uoe);",
      "right" : "Log.w(K9.LOG_TAG, \"Could not mark all server-side as read because store doesn't support operation\", uoe);",
      "info" : "ExpressionStatement[108014-108119]:ExpressionStatement[108014-108119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108138-108226]:Block[108138-108226]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[108152-108177]:ExpressionStatement[108152-108177]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[108190-108216]:ExpressionStatement[108190-108216]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[108238-108242]:PrimitiveType[108238-108242]"
    }, {
      "left" : "notifyUserIfCertificateProblem",
      "right" : "notifyUserIfCertificateProblem",
      "info" : "SimpleName[108243-108273]:SimpleName[108243-108273]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[108274-108289]:SingleVariableDeclaration[108274-108289]"
    }, {
      "left" : "Exception e",
      "right" : "Exception e",
      "info" : "SingleVariableDeclaration[108291-108302]:SingleVariableDeclaration[108291-108302]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[108316-108331]:SingleVariableDeclaration[108316-108331]"
    }, {
      "left" : "boolean incoming",
      "right" : "boolean incoming",
      "info" : "SingleVariableDeclaration[108333-108349]:SingleVariableDeclaration[108333-108349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108351-110296]:Block[108351-110296]"
    }, {
      "left" : "if (!(e instanceof CertificateValidationException))",
      "right" : "if (!(e instanceof CertificateValidationException))",
      "info" : "IfStatement[108361-108444]:IfStatement[108361-108444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108413-108444]:Block[108413-108444]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[108427-108434]:ReturnStatement[108427-108434]"
    }, {
      "left" : "CertificateValidationException cve = (CertificateValidationException) e;",
      "right" : "CertificateValidationException cve = (CertificateValidationException) e;",
      "info" : "VariableDeclarationStatement[108454-108526]:VariableDeclarationStatement[108454-108526]"
    }, {
      "left" : "if (!cve.needsUserAttention())",
      "right" : "if (!cve.needsUserAttention())",
      "info" : "IfStatement[108535-108597]:IfStatement[108535-108597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108566-108597]:Block[108566-108597]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[108580-108587]:ReturnStatement[108580-108587]"
    }, {
      "left" : "final int id = incoming\n                ? K9.CERTIFICATE_EXCEPTION_NOTIFICATION_INCOMING + account.getAccountNumber()\n                : K9.CERTIFICATE_EXCEPTION_NOTIFICATION_OUTGOING + account.getAccountNumber();",
      "right" : "final int id = incoming\n                ? K9.CERTIFICATE_EXCEPTION_NOTIFICATION_INCOMING + account.getAccountNumber()\n                : K9.CERTIFICATE_EXCEPTION_NOTIFICATION_OUTGOING + account.getAccountNumber();",
      "info" : "VariableDeclarationStatement[108607-108819]:VariableDeclarationStatement[108607-108819]"
    }, {
      "left" : "final Intent i = incoming\n                ? AccountSetupIncoming.intentActionEditIncomingSettings(context, account)\n                : AccountSetupOutgoing.intentActionEditOutgoingSettings(context, account);",
      "right" : "final Intent i = incoming\n                ? AccountSetupIncoming.intentActionEditIncomingSettings(context, account)\n                : AccountSetupOutgoing.intentActionEditOutgoingSettings(context, account);",
      "info" : "VariableDeclarationStatement[108828-109034]:VariableDeclarationStatement[108828-109034]"
    }, {
      "left" : "final PendingIntent pi = PendingIntent.getActivity(context,\n                account.getAccountNumber(), i, PendingIntent.FLAG_UPDATE_CURRENT);",
      "right" : "final PendingIntent pi = PendingIntent.getActivity(context,\n                account.getAccountNumber(), i, PendingIntent.FLAG_UPDATE_CURRENT);",
      "info" : "VariableDeclarationStatement[109043-109185]:VariableDeclarationStatement[109043-109185]"
    }, {
      "left" : "final String title = context.getString(\n                R.string.notification_certificate_error_title, account.getDescription());",
      "right" : "final String title = context.getString(\n                R.string.notification_certificate_error_title, account.getDescription());",
      "info" : "VariableDeclarationStatement[109194-109323]:VariableDeclarationStatement[109194-109323]"
    }, {
      "left" : "final NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "right" : "final NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "info" : "VariableDeclarationStatement[109333-109416]:VariableDeclarationStatement[109333-109416]"
    }, {
      "left" : "builder.setSmallIcon(platformSupportsLockScreenNotifications()\n            ? R.drawable.ic_notify_new_mail_vector\n            : R.drawable.ic_notify_new_mail);",
      "right" : "builder.setSmallIcon(platformSupportsLockScreenNotifications()\n            ? R.drawable.ic_notify_new_mail_vector\n            : R.drawable.ic_notify_new_mail);",
      "info" : "ExpressionStatement[109425-109584]:ExpressionStatement[109425-109584]"
    }, {
      "left" : "builder.setWhen(System.currentTimeMillis());",
      "right" : "builder.setWhen(System.currentTimeMillis());",
      "info" : "ExpressionStatement[109593-109637]:ExpressionStatement[109593-109637]"
    }, {
      "left" : "builder.setAutoCancel(true);",
      "right" : "builder.setAutoCancel(true);",
      "info" : "ExpressionStatement[109646-109674]:ExpressionStatement[109646-109674]"
    }, {
      "left" : "builder.setTicker(title);",
      "right" : "builder.setTicker(title);",
      "info" : "ExpressionStatement[109683-109708]:ExpressionStatement[109683-109708]"
    }, {
      "left" : "builder.setContentTitle(title);",
      "right" : "builder.setContentTitle(title);",
      "info" : "ExpressionStatement[109717-109748]:ExpressionStatement[109717-109748]"
    }, {
      "left" : "builder.setContentText(context.getString(R.string.notification_certificate_error_text));",
      "right" : "builder.setContentText(context.getString(R.string.notification_certificate_error_text));",
      "info" : "ExpressionStatement[109757-109845]:ExpressionStatement[109757-109845]"
    }, {
      "left" : "builder.setContentIntent(pi);",
      "right" : "builder.setContentIntent(pi);",
      "info" : "ExpressionStatement[109854-109883]:ExpressionStatement[109854-109883]"
    }, {
      "left" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "right" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "info" : "ExpressionStatement[109892-109952]:ExpressionStatement[109892-109952]"
    }, {
      "left" : "configureNotification(builder, null, null,\n                K9.NOTIFICATION_LED_FAILURE_COLOR,\n                K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "right" : "configureNotification(builder, null, null,\n                K9.NOTIFICATION_LED_FAILURE_COLOR,\n                K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "info" : "ExpressionStatement[109962-110110]:ExpressionStatement[109962-110110]"
    }, {
      "left" : "final NotificationManager nm = (NotificationManager)\n                context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "final NotificationManager nm = (NotificationManager)\n                context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[110120-110244]:VariableDeclarationStatement[110120-110244]"
    }, {
      "left" : "nm.notify(null, id, builder.build());",
      "right" : "nm.notify(null, id, builder.build());",
      "info" : "ExpressionStatement[110253-110290]:ExpressionStatement[110253-110290]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[110302-110308]:Modifier[110302-110308]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[110309-110313]:PrimitiveType[110309-110313]"
    }, {
      "left" : "clearCertificateErrorNotifications",
      "right" : "clearCertificateErrorNotifications",
      "info" : "SimpleName[110314-110348]:SimpleName[110314-110348]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[110349-110364]:SingleVariableDeclaration[110349-110364]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[110378-110399]:SingleVariableDeclaration[110378-110399]"
    }, {
      "left" : "CheckDirection direction",
      "right" : "CheckDirection direction",
      "info" : "SingleVariableDeclaration[110401-110425]:SingleVariableDeclaration[110401-110425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110427-110859]:Block[110427-110859]"
    }, {
      "left" : "final NotificationManager nm = (NotificationManager)\n                context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "final NotificationManager nm = (NotificationManager)\n                context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[110437-110561]:VariableDeclarationStatement[110437-110561]"
    }, {
      "left" : "if (direction == CheckDirection.INCOMING)",
      "right" : "if (direction == CheckDirection.INCOMING)",
      "info" : "IfStatement[110571-110853]:IfStatement[110571-110853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110613-110730]:Block[110613-110730]"
    }, {
      "left" : "nm.cancel(null, K9.CERTIFICATE_EXCEPTION_NOTIFICATION_INCOMING + account.getAccountNumber());",
      "right" : "nm.cancel(null, K9.CERTIFICATE_EXCEPTION_NOTIFICATION_INCOMING + account.getAccountNumber());",
      "info" : "ExpressionStatement[110627-110720]:ExpressionStatement[110627-110720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110736-110853]:Block[110736-110853]"
    }, {
      "left" : "nm.cancel(null, K9.CERTIFICATE_EXCEPTION_NOTIFICATION_OUTGOING + account.getAccountNumber());",
      "right" : "nm.cancel(null, K9.CERTIFICATE_EXCEPTION_NOTIFICATION_OUTGOING + account.getAccountNumber());",
      "info" : "ExpressionStatement[110750-110843]:ExpressionStatement[110750-110843]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[110953-110959]:Modifier[110953-110959]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[110960-110964]:PrimitiveType[110960-110964]"
    }, {
      "left" : "addErrorMessage",
      "right" : "addErrorMessage",
      "info" : "SimpleName[110965-110980]:SimpleName[110965-110980]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[110981-110996]:SingleVariableDeclaration[110981-110996]"
    }, {
      "left" : "String subject",
      "right" : "String subject",
      "info" : "SingleVariableDeclaration[110998-111012]:SingleVariableDeclaration[110998-111012]"
    }, {
      "left" : "Throwable t",
      "right" : "Throwable t",
      "info" : "SingleVariableDeclaration[111014-111025]:SingleVariableDeclaration[111014-111025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111027-112140]:Block[111027-112140]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[111037-112134]:TryStatement[111037-112134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111041-111999]:Block[111041-111999]"
    }, {
      "left" : "if (t == null)",
      "right" : "if (t == null)",
      "info" : "IfStatement[111055-111109]:IfStatement[111055-111109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111070-111109]:Block[111070-111109]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[111088-111095]:ReturnStatement[111088-111095]"
    }, {
      "left" : "CharArrayWriter baos = new CharArrayWriter(t.getStackTrace().length * 10);",
      "right" : "CharArrayWriter baos = new CharArrayWriter(t.getStackTrace().length * 10);",
      "info" : "VariableDeclarationStatement[111123-111197]:VariableDeclarationStatement[111123-111197]"
    }, {
      "left" : "PrintWriter ps = new PrintWriter(baos);",
      "right" : "PrintWriter ps = new PrintWriter(baos);",
      "info" : "VariableDeclarationStatement[111210-111249]:VariableDeclarationStatement[111210-111249]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[111262-111562]:TryStatement[111262-111562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111266-111500]:Block[111266-111500]"
    }, {
      "left" : "PackageInfo packageInfo = context.getPackageManager().getPackageInfo(\n                        context.getPackageName(), 0);",
      "right" : "PackageInfo packageInfo = context.getPackageManager().getPackageInfo(\n                        context.getPackageName(), 0);",
      "info" : "VariableDeclarationStatement[111284-111407]:VariableDeclarationStatement[111284-111407]"
    }, {
      "left" : "ps.format(\"K9-Mail version: %s\\r\\n\", packageInfo.versionName);",
      "right" : "ps.format(\"K9-Mail version: %s\\r\\n\", packageInfo.versionName);",
      "info" : "ExpressionStatement[111424-111486]:ExpressionStatement[111424-111486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111521-111562]:Block[111521-111562]"
    }, {
      "left" : "ps.format(\"Device make: %s\\r\\n\", Build.MANUFACTURER);",
      "right" : "ps.format(\"Device make: %s\\r\\n\", Build.MANUFACTURER);",
      "info" : "ExpressionStatement[111575-111628]:ExpressionStatement[111575-111628]"
    }, {
      "left" : "ps.format(\"Device model: %s\\r\\n\", Build.MODEL);",
      "right" : "ps.format(\"Device model: %s\\r\\n\", Build.MODEL);",
      "info" : "ExpressionStatement[111641-111688]:ExpressionStatement[111641-111688]"
    }, {
      "left" : "ps.format(\"Android version: %s\\r\\n\\r\\n\", Build.VERSION.RELEASE);",
      "right" : "ps.format(\"Android version: %s\\r\\n\\r\\n\", Build.VERSION.RELEASE);",
      "info" : "ExpressionStatement[111701-111765]:ExpressionStatement[111701-111765]"
    }, {
      "left" : "t.printStackTrace(ps);",
      "right" : "t.printStackTrace(ps);",
      "info" : "ExpressionStatement[111778-111800]:ExpressionStatement[111778-111800]"
    }, {
      "left" : "ps.close();",
      "right" : "ps.close();",
      "info" : "ExpressionStatement[111813-111824]:ExpressionStatement[111813-111824]"
    }, {
      "left" : "if (subject == null)",
      "right" : "if (subject == null)",
      "info" : "IfStatement[111838-111924]:IfStatement[111838-111924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111859-111924]:Block[111859-111924]"
    }, {
      "left" : "subject = getRootCauseMessage(t);",
      "right" : "subject = getRootCauseMessage(t);",
      "info" : "ExpressionStatement[111877-111910]:ExpressionStatement[111877-111910]"
    }, {
      "left" : "addErrorMessage(account, subject, baos.toString());",
      "right" : "addErrorMessage(account, subject, baos.toString());",
      "info" : "ExpressionStatement[111938-111989]:ExpressionStatement[111938-111989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112021-112134]:Block[112021-112134]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Could not save error message to \" + account.getErrorFolderName(), it);",
      "right" : "Log.e(K9.LOG_TAG, \"Could not save error message to \" + account.getErrorFolderName(), it);",
      "info" : "ExpressionStatement[112035-112124]:ExpressionStatement[112035-112124]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[112146-112152]:Modifier[112146-112152]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[112153-112157]:PrimitiveType[112153-112157]"
    }, {
      "left" : "addErrorMessage",
      "right" : "addErrorMessage",
      "info" : "SimpleName[112158-112173]:SimpleName[112158-112173]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[112174-112189]:SingleVariableDeclaration[112174-112189]"
    }, {
      "left" : "String subject",
      "right" : "String subject",
      "info" : "SingleVariableDeclaration[112191-112205]:SingleVariableDeclaration[112191-112205]"
    }, {
      "left" : "String body",
      "right" : "String body",
      "info" : "SingleVariableDeclaration[112207-112218]:SingleVariableDeclaration[112207-112218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112220-113496]:Block[112220-113496]"
    }, {
      "left" : "if (!K9.DEBUG)",
      "right" : "if (!K9.DEBUG)",
      "info" : "IfStatement[112230-112276]:IfStatement[112230-112276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112245-112276]:Block[112245-112276]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[112259-112266]:ReturnStatement[112259-112266]"
    }, {
      "left" : "if (!loopCatch.compareAndSet(false, true))",
      "right" : "if (!loopCatch.compareAndSet(false, true))",
      "info" : "IfStatement[112285-112359]:IfStatement[112285-112359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112328-112359]:Block[112328-112359]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[112342-112349]:ReturnStatement[112342-112349]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[112368-113490]:TryStatement[112368-113490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112372-113301]:Block[112372-113301]"
    }, {
      "left" : "if (body == null || body.length() < 1)",
      "right" : "if (body == null || body.length() < 1)",
      "info" : "IfStatement[112386-112464]:IfStatement[112386-112464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112425-112464]:Block[112425-112464]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[112443-112450]:ReturnStatement[112443-112450]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[112478-112521]:VariableDeclarationStatement[112478-112521]"
    }, {
      "left" : "LocalFolder localFolder = (LocalFolder)localStore.getFolder(account.getErrorFolderName());",
      "right" : "LocalFolder localFolder = (LocalFolder)localStore.getFolder(account.getErrorFolderName());",
      "info" : "VariableDeclarationStatement[112534-112624]:VariableDeclarationStatement[112534-112624]"
    }, {
      "left" : "MimeMessage message = new MimeMessage();",
      "right" : "MimeMessage message = new MimeMessage();",
      "info" : "VariableDeclarationStatement[112637-112677]:VariableDeclarationStatement[112637-112677]"
    }, {
      "left" : "MimeMessageHelper.setBody(message, new TextBody(body));",
      "right" : "MimeMessageHelper.setBody(message, new TextBody(body));",
      "info" : "ExpressionStatement[112691-112746]:ExpressionStatement[112691-112746]"
    }, {
      "left" : "message.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "right" : "message.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "info" : "ExpressionStatement[112759-112805]:ExpressionStatement[112759-112805]"
    }, {
      "left" : "message.setSubject(subject);",
      "right" : "message.setSubject(subject);",
      "info" : "ExpressionStatement[112818-112846]:ExpressionStatement[112818-112846]"
    }, {
      "left" : "long nowTime = System.currentTimeMillis();",
      "right" : "long nowTime = System.currentTimeMillis();",
      "info" : "VariableDeclarationStatement[112860-112902]:VariableDeclarationStatement[112860-112902]"
    }, {
      "left" : "Date nowDate = new Date(nowTime);",
      "right" : "Date nowDate = new Date(nowTime);",
      "info" : "VariableDeclarationStatement[112915-112948]:VariableDeclarationStatement[112915-112948]"
    }, {
      "left" : "message.setInternalDate(nowDate);",
      "right" : "message.setInternalDate(nowDate);",
      "info" : "ExpressionStatement[112961-112994]:ExpressionStatement[112961-112994]"
    }, {
      "left" : "message.addSentDate(nowDate, K9.hideTimeZone());",
      "right" : "message.addSentDate(nowDate, K9.hideTimeZone());",
      "info" : "ExpressionStatement[113007-113055]:ExpressionStatement[113007-113055]"
    }, {
      "left" : "message.setFrom(new Address(account.getEmail(), \"K9mail internal\"));",
      "right" : "message.setFrom(new Address(account.getEmail(), \"K9mail internal\"));",
      "info" : "ExpressionStatement[113068-113136]:ExpressionStatement[113068-113136]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(message));",
      "right" : "localFolder.appendMessages(Collections.singletonList(message));",
      "info" : "ExpressionStatement[113150-113213]:ExpressionStatement[113150-113213]"
    }, {
      "left" : "localFolder.clearMessagesOlderThan(nowTime - (15 * 60 * 1000));",
      "right" : "localFolder.clearMessagesOlderThan(nowTime - (15 * 60 * 1000));",
      "info" : "ExpressionStatement[113227-113290]:ExpressionStatement[113227-113290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113323-113436]:Block[113323-113436]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Could not save error message to \" + account.getErrorFolderName(), it);",
      "right" : "Log.e(K9.LOG_TAG, \"Could not save error message to \" + account.getErrorFolderName(), it);",
      "info" : "ExpressionStatement[113337-113426]:ExpressionStatement[113337-113426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113445-113490]:Block[113445-113490]"
    }, {
      "left" : "loopCatch.set(false);",
      "right" : "loopCatch.set(false);",
      "info" : "ExpressionStatement[113459-113480]:ExpressionStatement[113459-113480]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[113504-113510]:Modifier[113504-113510]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[113511-113515]:PrimitiveType[113511-113515]"
    }, {
      "left" : "markAllMessagesRead",
      "right" : "markAllMessagesRead",
      "info" : "SimpleName[113516-113535]:SimpleName[113516-113535]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[113536-113557]:SingleVariableDeclaration[113536-113557]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[113559-113578]:SingleVariableDeclaration[113559-113578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113580-114068]:Block[113580-114068]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[113591-113718]:IfStatement[113591-113718]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Marking all messages in \" + account.getDescription() + \":\" + folder + \" as read\");",
      "right" : "Log.i(K9.LOG_TAG, \"Marking all messages in \" + account.getDescription() + \":\" + folder + \" as read\");",
      "info" : "ExpressionStatement[113617-113718]:ExpressionStatement[113617-113718]"
    }, {
      "left" : "List<String> args = new ArrayList<String>();",
      "right" : "List<String> args = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[113727-113771]:VariableDeclarationStatement[113727-113771]"
    }, {
      "left" : "args.add(folder);",
      "right" : "args.add(folder);",
      "info" : "ExpressionStatement[113780-113797]:ExpressionStatement[113780-113797]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[113806-113852]:VariableDeclarationStatement[113806-113852]"
    }, {
      "left" : "command.command = PENDING_COMMAND_MARK_ALL_AS_READ;",
      "right" : "command.command = PENDING_COMMAND_MARK_ALL_AS_READ;",
      "info" : "ExpressionStatement[113861-113912]:ExpressionStatement[113861-113912]"
    }, {
      "left" : "command.arguments = args.toArray(EMPTY_STRING_ARRAY);",
      "right" : "command.arguments = args.toArray(EMPTY_STRING_ARRAY);",
      "info" : "ExpressionStatement[113921-113974]:ExpressionStatement[113921-113974]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[113983-114021]:ExpressionStatement[113983-114021]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[114030-114062]:ExpressionStatement[114030-114062]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[114074-114080]:Modifier[114074-114080]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[114081-114085]:PrimitiveType[114081-114085]"
    }, {
      "left" : "setFlag",
      "right" : "setFlag",
      "info" : "SimpleName[114086-114093]:SimpleName[114086-114093]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[114094-114115]:SingleVariableDeclaration[114094-114115]"
    }, {
      "left" : "final List<Long> messageIds",
      "right" : "final List<Long> messageIds",
      "info" : "SingleVariableDeclaration[114117-114144]:SingleVariableDeclaration[114117-114144]"
    }, {
      "left" : "final Flag flag",
      "right" : "final Flag flag",
      "info" : "SingleVariableDeclaration[114146-114161]:SingleVariableDeclaration[114146-114161]"
    }, {
      "left" : "final boolean newState",
      "right" : "final boolean newState",
      "info" : "SingleVariableDeclaration[114175-114197]:SingleVariableDeclaration[114175-114197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114199-114473]:Block[114199-114473]"
    }, {
      "left" : "setFlagInCache(account, messageIds, flag, newState);",
      "right" : "setFlagInCache(account, messageIds, flag, newState);",
      "info" : "ExpressionStatement[114210-114262]:ExpressionStatement[114210-114262]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                setFlagSynchronous(account, messageIds, flag, newState, false);\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                setFlagSynchronous(account, messageIds, flag, newState, false);\n            }\n        });",
      "info" : "ExpressionStatement[114272-114467]:ExpressionStatement[114272-114467]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[114320-114329]:MarkerAnnotation[114320-114329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[114342-114348]:Modifier[114342-114348]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[114349-114353]:PrimitiveType[114349-114353]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[114354-114357]:SimpleName[114354-114357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114360-114455]:Block[114360-114455]"
    }, {
      "left" : "setFlagSynchronous(account, messageIds, flag, newState, false);",
      "right" : "setFlagSynchronous(account, messageIds, flag, newState, false);",
      "info" : "ExpressionStatement[114378-114441]:ExpressionStatement[114378-114441]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[114479-114485]:Modifier[114479-114485]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[114486-114490]:PrimitiveType[114486-114490]"
    }, {
      "left" : "setFlagForThreads",
      "right" : "setFlagForThreads",
      "info" : "SimpleName[114491-114508]:SimpleName[114491-114508]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[114509-114530]:SingleVariableDeclaration[114509-114530]"
    }, {
      "left" : "final List<Long> threadRootIds",
      "right" : "final List<Long> threadRootIds",
      "info" : "SingleVariableDeclaration[114532-114562]:SingleVariableDeclaration[114532-114562]"
    }, {
      "left" : "final Flag flag",
      "right" : "final Flag flag",
      "info" : "SingleVariableDeclaration[114576-114591]:SingleVariableDeclaration[114576-114591]"
    }, {
      "left" : "final boolean newState",
      "right" : "final boolean newState",
      "info" : "SingleVariableDeclaration[114593-114615]:SingleVariableDeclaration[114593-114615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114617-114906]:Block[114617-114906]"
    }, {
      "left" : "setFlagForThreadsInCache(account, threadRootIds, flag, newState);",
      "right" : "setFlagForThreadsInCache(account, threadRootIds, flag, newState);",
      "info" : "ExpressionStatement[114628-114693]:ExpressionStatement[114628-114693]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                setFlagSynchronous(account, threadRootIds, flag, newState, true);\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                setFlagSynchronous(account, threadRootIds, flag, newState, true);\n            }\n        });",
      "info" : "ExpressionStatement[114703-114900]:ExpressionStatement[114703-114900]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[114751-114760]:MarkerAnnotation[114751-114760]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[114773-114779]:Modifier[114773-114779]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[114780-114784]:PrimitiveType[114780-114784]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[114785-114788]:SimpleName[114785-114788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114791-114888]:Block[114791-114888]"
    }, {
      "left" : "setFlagSynchronous(account, threadRootIds, flag, newState, true);",
      "right" : "setFlagSynchronous(account, threadRootIds, flag, newState, true);",
      "info" : "ExpressionStatement[114809-114874]:ExpressionStatement[114809-114874]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[114912-114919]:Modifier[114912-114919]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[114920-114924]:PrimitiveType[114920-114924]"
    }, {
      "left" : "setFlagSynchronous",
      "right" : "setFlagSynchronous",
      "info" : "SimpleName[114925-114943]:SimpleName[114925-114943]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[114944-114965]:SingleVariableDeclaration[114944-114965]"
    }, {
      "left" : "final List<Long> ids",
      "right" : "final List<Long> ids",
      "info" : "SingleVariableDeclaration[114967-114987]:SingleVariableDeclaration[114967-114987]"
    }, {
      "left" : "final Flag flag",
      "right" : "final Flag flag",
      "info" : "SingleVariableDeclaration[115001-115016]:SingleVariableDeclaration[115001-115016]"
    }, {
      "left" : "final boolean newState",
      "right" : "final boolean newState",
      "info" : "SingleVariableDeclaration[115018-115040]:SingleVariableDeclaration[115018-115040]"
    }, {
      "left" : "final boolean threadedList",
      "right" : "final boolean threadedList",
      "info" : "SingleVariableDeclaration[115042-115068]:SingleVariableDeclaration[115042-115068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115070-117465]:Block[115070-117465]"
    }, {
      "left" : "LocalStore localStore;",
      "right" : "LocalStore localStore;",
      "info" : "VariableDeclarationStatement[115081-115103]:VariableDeclarationStatement[115081-115103]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[115112-115308]:TryStatement[115112-115308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115116-115177]:Block[115116-115177]"
    }, {
      "left" : "localStore = account.getLocalStore();",
      "right" : "localStore = account.getLocalStore();",
      "info" : "ExpressionStatement[115130-115167]:ExpressionStatement[115130-115167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115207-115308]:Block[115207-115308]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Couldn't get LocalStore instance\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Couldn't get LocalStore instance\", e);",
      "info" : "ExpressionStatement[115221-115278]:ExpressionStatement[115221-115278]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[115291-115298]:ReturnStatement[115291-115298]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[115462-115907]:TryStatement[115462-115907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115466-115792]:Block[115466-115792]"
    }, {
      "left" : "if (threadedList)",
      "right" : "if (threadedList)",
      "info" : "IfStatement[115480-115782]:IfStatement[115480-115782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115498-115647]:Block[115498-115647]"
    }, {
      "left" : "localStore.setFlagForThreads(ids, flag, newState);",
      "right" : "localStore.setFlagForThreads(ids, flag, newState);",
      "info" : "ExpressionStatement[115516-115566]:ExpressionStatement[115516-115566]"
    }, {
      "left" : "removeFlagForThreadsFromCache(account, ids, flag);",
      "right" : "removeFlagForThreadsFromCache(account, ids, flag);",
      "info" : "ExpressionStatement[115583-115633]:ExpressionStatement[115583-115633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115653-115782]:Block[115653-115782]"
    }, {
      "left" : "localStore.setFlag(ids, flag, newState);",
      "right" : "localStore.setFlag(ids, flag, newState);",
      "info" : "ExpressionStatement[115671-115711]:ExpressionStatement[115671-115711]"
    }, {
      "left" : "removeFlagFromCache(account, ids, flag);",
      "right" : "removeFlagFromCache(account, ids, flag);",
      "info" : "ExpressionStatement[115728-115768]:ExpressionStatement[115728-115768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115822-115907]:Block[115822-115907]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Couldn't set flags in local database\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Couldn't set flags in local database\", e);",
      "info" : "ExpressionStatement[115836-115897]:ExpressionStatement[115836-115897]"
    }, {
      "left" : "Map<String, List<String>> folderMap;",
      "right" : "Map<String, List<String>> folderMap;",
      "info" : "VariableDeclarationStatement[115983-116019]:VariableDeclarationStatement[115983-116019]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[116028-116259]:TryStatement[116028-116259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116032-116116]:Block[116032-116116]"
    }, {
      "left" : "folderMap = localStore.getFoldersAndUids(ids, threadedList);",
      "right" : "folderMap = localStore.getFoldersAndUids(ids, threadedList);",
      "info" : "ExpressionStatement[116046-116106]:ExpressionStatement[116046-116106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116146-116259]:Block[116146-116259]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Couldn't get folder name and UID of messages\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Couldn't get folder name and UID of messages\", e);",
      "info" : "ExpressionStatement[116160-116229]:ExpressionStatement[116160-116229]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[116242-116249]:ReturnStatement[116242-116249]"
    }, {
      "left" : "for (Entry<String, List<String>> entry : folderMap.entrySet())",
      "right" : "for (Entry<String, List<String>> entry : folderMap.entrySet())",
      "info" : "EnhancedForStatement[116302-117459]:EnhancedForStatement[116302-117459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116365-117459]:Block[116365-117459]"
    }, {
      "left" : "String folderName = entry.getKey();",
      "right" : "String folderName = entry.getKey();",
      "info" : "VariableDeclarationStatement[116379-116414]:VariableDeclarationStatement[116379-116414]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "right" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "info" : "VariableDeclarationStatement[116485-116544]:VariableDeclarationStatement[116485-116544]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[116557-116955]:TryStatement[116557-116955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116561-116817]:Block[116561-116817]"
    }, {
      "left" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "right" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "info" : "VariableDeclarationStatement[116579-116640]:VariableDeclarationStatement[116579-116640]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[116657-116803]:EnhancedForStatement[116657-116803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116700-116803]:Block[116700-116803]"
    }, {
      "left" : "l.folderStatusChanged(account, folderName, unreadMessageCount);",
      "right" : "l.folderStatusChanged(account, folderName, unreadMessageCount);",
      "info" : "ExpressionStatement[116722-116785]:ExpressionStatement[116722-116785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116847-116955]:Block[116847-116955]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"Couldn't get unread count for folder: \" + folderName, e);",
      "right" : "Log.w(K9.LOG_TAG, \"Couldn't get unread count for folder: \" + folderName, e);",
      "info" : "ExpressionStatement[116865-116941]:ExpressionStatement[116865-116941]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(folderName))",
      "right" : "if (account.getErrorFolderName().equals(folderName))",
      "info" : "IfStatement[117095-117189]:IfStatement[117095-117189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117148-117189]:Block[117148-117189]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[117166-117175]:ContinueStatement[117166-117175]"
    }, {
      "left" : "String[] uids = entry.getValue().toArray(EMPTY_STRING_ARRAY);",
      "right" : "String[] uids = entry.getValue().toArray(EMPTY_STRING_ARRAY);",
      "info" : "VariableDeclarationStatement[117245-117306]:VariableDeclarationStatement[117245-117306]"
    }, {
      "left" : "queueSetFlag(account, folderName, Boolean.toString(newState), flag.toString(), uids);",
      "right" : "queueSetFlag(account, folderName, Boolean.toString(newState), flag.toString(), uids);",
      "info" : "ExpressionStatement[117319-117404]:ExpressionStatement[117319-117404]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[117417-117449]:ExpressionStatement[117417-117449]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[118091-118097]:Modifier[118091-118097]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[118098-118102]:PrimitiveType[118098-118102]"
    }, {
      "left" : "setFlag",
      "right" : "setFlag",
      "info" : "SimpleName[118103-118110]:SimpleName[118103-118110]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[118111-118126]:SingleVariableDeclaration[118111-118126]"
    }, {
      "left" : "String folderName",
      "right" : "String folderName",
      "info" : "SingleVariableDeclaration[118128-118145]:SingleVariableDeclaration[118128-118145]"
    }, {
      "left" : "List<? extends Message> messages",
      "right" : "List<? extends Message> messages",
      "info" : "SingleVariableDeclaration[118147-118179]:SingleVariableDeclaration[118147-118179]"
    }, {
      "left" : "Flag flag",
      "right" : "Flag flag",
      "info" : "SingleVariableDeclaration[118181-118190]:SingleVariableDeclaration[118181-118190]"
    }, {
      "left" : "boolean newState",
      "right" : "boolean newState",
      "info" : "SingleVariableDeclaration[118204-118220]:SingleVariableDeclaration[118204-118220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118222-120263]:Block[118222-120263]"
    }, {
      "left" : "Folder localFolder = null;",
      "right" : "Folder localFolder = null;",
      "info" : "VariableDeclarationStatement[118401-118427]:VariableDeclarationStatement[118401-118427]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[118436-120257]:TryStatement[118436-120257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118440-120065]:Block[118440-120065]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[118454-118497]:VariableDeclarationStatement[118454-118497]"
    }, {
      "left" : "localFolder = localStore.getFolder(folderName);",
      "right" : "localFolder = localStore.getFolder(folderName);",
      "info" : "ExpressionStatement[118510-118557]:ExpressionStatement[118510-118557]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[118570-118608]:ExpressionStatement[118570-118608]"
    }, {
      "left" : "if (flag == Flag.FLAGGED && !newState &&\n                    account.getOutboxFolderName().equals(folderName))",
      "right" : "if (flag == Flag.FLAGGED && !newState &&\n                    account.getOutboxFolderName().equals(folderName))",
      "info" : "IfStatement[118703-119057]:IfStatement[118703-119057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118814-119057]:Block[118814-119057]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[118832-119043]:EnhancedForStatement[118832-119043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118865-119043]:Block[118865-119043]"
    }, {
      "left" : "String uid = message.getUid();",
      "right" : "String uid = message.getUid();",
      "info" : "VariableDeclarationStatement[118887-118917]:VariableDeclarationStatement[118887-118917]"
    }, {
      "left" : "if (uid != null)",
      "right" : "if (uid != null)",
      "info" : "IfStatement[118938-119025]:IfStatement[118938-119025]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118955-119025]:Block[118955-119025]"
    }, {
      "left" : "sendCount.remove(uid);",
      "right" : "sendCount.remove(uid);",
      "info" : "ExpressionStatement[118981-119003]:ExpressionStatement[118981-119003]"
    }, {
      "left" : "localFolder.setFlags(messages, Collections.singleton(flag), newState);",
      "right" : "localFolder.setFlags(messages, Collections.singleton(flag), newState);",
      "info" : "ExpressionStatement[119125-119195]:ExpressionStatement[119125-119195]"
    }, {
      "left" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "right" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "info" : "VariableDeclarationStatement[119209-119270]:VariableDeclarationStatement[119209-119270]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[119283-119421]:EnhancedForStatement[119283-119421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119326-119421]:Block[119326-119421]"
    }, {
      "left" : "l.folderStatusChanged(account, folderName, unreadMessageCount);",
      "right" : "l.folderStatusChanged(account, folderName, unreadMessageCount);",
      "info" : "ExpressionStatement[119344-119407]:ExpressionStatement[119344-119407]"
    }, {
      "left" : "if (account.getErrorFolderName().equals(folderName))",
      "right" : "if (account.getErrorFolderName().equals(folderName))",
      "info" : "IfStatement[119632-119724]:IfStatement[119632-119724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119685-119724]:Block[119685-119724]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[119703-119710]:ReturnStatement[119703-119710]"
    }, {
      "left" : "String[] uids = new String[messages.size()];",
      "right" : "String[] uids = new String[messages.size()];",
      "info" : "VariableDeclarationStatement[119738-119782]:VariableDeclarationStatement[119738-119782]"
    }, {
      "left" : "for (int i = 0, end = uids.length; i < end; i++)",
      "right" : "for (int i = 0, end = uids.length; i < end; i++)",
      "info" : "ForStatement[119795-119911]:ForStatement[119795-119911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119844-119911]:Block[119844-119911]"
    }, {
      "left" : "uids[i] = messages.get(i).getUid();",
      "right" : "uids[i] = messages.get(i).getUid();",
      "info" : "ExpressionStatement[119862-119897]:ExpressionStatement[119862-119897]"
    }, {
      "left" : "queueSetFlag(account, folderName, Boolean.toString(newState), flag.toString(), uids);",
      "right" : "queueSetFlag(account, folderName, Boolean.toString(newState), flag.toString(), uids);",
      "info" : "ExpressionStatement[119925-120010]:ExpressionStatement[119925-120010]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[120023-120055]:ExpressionStatement[120023-120055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120096-120199]:Block[120096-120199]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[120110-120145]:ExpressionStatement[120110-120145]"
    }, {
      "left" : "throw new RuntimeException(me);",
      "right" : "throw new RuntimeException(me);",
      "info" : "ThrowStatement[120158-120189]:ThrowStatement[120158-120189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120208-120257]:Block[120208-120257]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[120222-120247]:ExpressionStatement[120222-120247]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[120772-120778]:Modifier[120772-120778]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[120779-120783]:PrimitiveType[120779-120783]"
    }, {
      "left" : "setFlag",
      "right" : "setFlag",
      "info" : "SimpleName[120784-120791]:SimpleName[120784-120791]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[120792-120807]:SingleVariableDeclaration[120792-120807]"
    }, {
      "left" : "String folderName",
      "right" : "String folderName",
      "info" : "SingleVariableDeclaration[120809-120826]:SingleVariableDeclaration[120809-120826]"
    }, {
      "left" : "String uid",
      "right" : "String uid",
      "info" : "SingleVariableDeclaration[120828-120838]:SingleVariableDeclaration[120828-120838]"
    }, {
      "left" : "Flag flag",
      "right" : "Flag flag",
      "info" : "SingleVariableDeclaration[120840-120849]:SingleVariableDeclaration[120840-120849]"
    }, {
      "left" : "boolean newState",
      "right" : "boolean newState",
      "info" : "SingleVariableDeclaration[120863-120879]:SingleVariableDeclaration[120863-120879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120881-121518]:Block[120881-121518]"
    }, {
      "left" : "Folder localFolder = null;",
      "right" : "Folder localFolder = null;",
      "info" : "VariableDeclarationStatement[120891-120917]:VariableDeclarationStatement[120891-120917]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[120926-121512]:TryStatement[120926-121512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120930-121320]:Block[120930-121320]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[120944-120992]:VariableDeclarationStatement[120944-120992]"
    }, {
      "left" : "localFolder = localStore.getFolder(folderName);",
      "right" : "localFolder = localStore.getFolder(folderName);",
      "info" : "ExpressionStatement[121005-121052]:ExpressionStatement[121005-121052]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[121065-121103]:ExpressionStatement[121065-121103]"
    }, {
      "left" : "Message message = localFolder.getMessage(uid);",
      "right" : "Message message = localFolder.getMessage(uid);",
      "info" : "VariableDeclarationStatement[121117-121163]:VariableDeclarationStatement[121117-121163]"
    }, {
      "left" : "if (message != null)",
      "right" : "if (message != null)",
      "info" : "IfStatement[121176-121310]:IfStatement[121176-121310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121197-121310]:Block[121197-121310]"
    }, {
      "left" : "setFlag(account, folderName, Collections.singletonList(message), flag, newState);",
      "right" : "setFlag(account, folderName, Collections.singletonList(message), flag, newState);",
      "info" : "ExpressionStatement[121215-121296]:ExpressionStatement[121215-121296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121351-121454]:Block[121351-121454]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[121365-121400]:ExpressionStatement[121365-121400]"
    }, {
      "left" : "throw new RuntimeException(me);",
      "right" : "throw new RuntimeException(me);",
      "info" : "ThrowStatement[121413-121444]:ThrowStatement[121413-121444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121463-121512]:Block[121463-121512]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[121477-121502]:ExpressionStatement[121477-121502]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[121524-121530]:Modifier[121524-121530]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[121531-121535]:PrimitiveType[121531-121535]"
    }, {
      "left" : "clearAllPending",
      "right" : "clearAllPending",
      "info" : "SimpleName[121536-121551]:SimpleName[121536-121551]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[121552-121573]:SingleVariableDeclaration[121552-121573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121575-121936]:Block[121575-121936]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[121585-121930]:TryStatement[121585-121930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121589-121770]:Block[121589-121770]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"Clearing pending commands!\");",
      "right" : "Log.w(K9.LOG_TAG, \"Clearing pending commands!\");",
      "info" : "ExpressionStatement[121603-121651]:ExpressionStatement[121603-121651]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[121664-121712]:VariableDeclarationStatement[121664-121712]"
    }, {
      "left" : "localStore.removePendingCommands();",
      "right" : "localStore.removePendingCommands();",
      "info" : "ExpressionStatement[121725-121760]:ExpressionStatement[121725-121760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121801-121930]:Block[121801-121930]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to clear pending command\", me);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to clear pending command\", me);",
      "info" : "ExpressionStatement[121815-121872]:ExpressionStatement[121815-121872]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[121885-121920]:ExpressionStatement[121885-121920]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[121942-121948]:Modifier[121942-121948]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[121949-121953]:PrimitiveType[121949-121953]"
    }, {
      "left" : "loadMessageForViewRemote",
      "right" : "loadMessageForViewRemote",
      "info" : "SimpleName[121954-121978]:SimpleName[121954-121978]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[121979-122000]:SingleVariableDeclaration[121979-122000]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[122002-122021]:SingleVariableDeclaration[122002-122021]"
    }, {
      "left" : "final String uid",
      "right" : "final String uid",
      "info" : "SingleVariableDeclaration[122064-122080]:SingleVariableDeclaration[122064-122080]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[122082-122114]:SingleVariableDeclaration[122082-122114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122116-122369]:Block[122116-122369]"
    }, {
      "left" : "put(\"loadMessageForViewRemote\", listener, new Runnable() {\n            @Override\n            public void run() {\n                loadMessageForViewRemoteSynchronous(account, folder, uid, listener, false, false);\n            }\n        });",
      "right" : "put(\"loadMessageForViewRemote\", listener, new Runnable() {\n            @Override\n            public void run() {\n                loadMessageForViewRemoteSynchronous(account, folder, uid, listener, false, false);\n            }\n        });",
      "info" : "ExpressionStatement[122126-122363]:ExpressionStatement[122126-122363]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[122197-122206]:MarkerAnnotation[122197-122206]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122219-122225]:Modifier[122219-122225]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[122226-122230]:PrimitiveType[122226-122230]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[122231-122234]:SimpleName[122231-122234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122237-122351]:Block[122237-122351]"
    }, {
      "left" : "loadMessageForViewRemoteSynchronous(account, folder, uid, listener, false, false);",
      "right" : "loadMessageForViewRemoteSynchronous(account, folder, uid, listener, false, false);",
      "info" : "ExpressionStatement[122255-122337]:ExpressionStatement[122255-122337]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122375-122381]:Modifier[122375-122381]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[122382-122389]:PrimitiveType[122382-122389]"
    }, {
      "left" : "loadMessageForViewRemoteSynchronous",
      "right" : "loadMessageForViewRemoteSynchronous",
      "info" : "SimpleName[122390-122425]:SimpleName[122390-122425]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[122426-122447]:SingleVariableDeclaration[122426-122447]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[122449-122468]:SingleVariableDeclaration[122449-122468]"
    }, {
      "left" : "final String uid",
      "right" : "final String uid",
      "info" : "SingleVariableDeclaration[122482-122498]:SingleVariableDeclaration[122482-122498]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[122500-122532]:SingleVariableDeclaration[122500-122532]"
    }, {
      "left" : "final boolean force",
      "right" : "final boolean force",
      "info" : "SingleVariableDeclaration[122534-122553]:SingleVariableDeclaration[122534-122553]"
    }, {
      "left" : "final boolean loadPartialFromSearch",
      "right" : "final boolean loadPartialFromSearch",
      "info" : "SingleVariableDeclaration[122567-122602]:SingleVariableDeclaration[122567-122602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122604-127194]:Block[122604-127194]"
    }, {
      "left" : "Folder remoteFolder = null;",
      "right" : "Folder remoteFolder = null;",
      "info" : "VariableDeclarationStatement[122614-122641]:VariableDeclarationStatement[122614-122641]"
    }, {
      "left" : "LocalFolder localFolder = null;",
      "right" : "LocalFolder localFolder = null;",
      "info" : "VariableDeclarationStatement[122650-122681]:VariableDeclarationStatement[122650-122681]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[122690-127188]:TryStatement[122690-127188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122694-126767]:Block[122694-126767]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[122708-122756]:VariableDeclarationStatement[122708-122756]"
    }, {
      "left" : "localFolder = localStore.getFolder(folder);",
      "right" : "localFolder = localStore.getFolder(folder);",
      "info" : "ExpressionStatement[122769-122812]:ExpressionStatement[122769-122812]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[122825-122863]:ExpressionStatement[122825-122863]"
    }, {
      "left" : "LocalMessage message = localFolder.getMessage(uid);",
      "right" : "LocalMessage message = localFolder.getMessage(uid);",
      "info" : "VariableDeclarationStatement[122877-122928]:VariableDeclarationStatement[122877-122928]"
    }, {
      "left" : "if (uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[122942-123637]:IfStatement[122942-123637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122983-123637]:Block[122983-123637]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"Message has local UID so cannot download fully.\");",
      "right" : "Log.w(K9.LOG_TAG, \"Message has local UID so cannot download fully.\");",
      "info" : "ExpressionStatement[123001-123070]:ExpressionStatement[123001-123070]"
    }, {
      "left" : "android.widget.Toast.makeText(context,\n                        \"Message has local UID so cannot download fully\",\n                        android.widget.Toast.LENGTH_LONG).show();",
      "right" : "android.widget.Toast.makeText(context,\n                        \"Message has local UID so cannot download fully\",\n                        android.widget.Toast.LENGTH_LONG).show();",
      "info" : "ExpressionStatement[123121-123299]:ExpressionStatement[123121-123299]"
    }, {
      "left" : "message.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "right" : "message.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "info" : "ExpressionStatement[123510-123556]:ExpressionStatement[123510-123556]"
    }, {
      "left" : "message.setFlag(Flag.X_DOWNLOADED_PARTIAL, false);",
      "right" : "message.setFlag(Flag.X_DOWNLOADED_PARTIAL, false);",
      "info" : "ExpressionStatement[123573-123623]:ExpressionStatement[123573-123623]"
    }, {
      "left" : "if (message.isSet(Flag.X_DOWNLOADED_FULL))",
      "right" : "if (message.isSet(Flag.X_DOWNLOADED_FULL))",
      "info" : "IfStatement[124276-126179]:IfStatement[124276-126179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124319-124752]:Block[124319-124752]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[124520-124557]:VariableDeclarationStatement[124520-124557]"
    }, {
      "left" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "right" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[124574-124609]:ExpressionStatement[124574-124609]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[124626-124657]:ExpressionStatement[124626-124657]"
    }, {
      "left" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "right" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "info" : "ExpressionStatement[124674-124738]:ExpressionStatement[124674-124738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124758-126179]:Block[124758-126179]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[124943-124988]:VariableDeclarationStatement[124943-124988]"
    }, {
      "left" : "remoteFolder = remoteStore.getFolder(folder);",
      "right" : "remoteFolder = remoteStore.getFolder(folder);",
      "info" : "ExpressionStatement[125005-125050]:ExpressionStatement[125005-125050]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[125067-125106]:ExpressionStatement[125067-125106]"
    }, {
      "left" : "Message remoteMessage = remoteFolder.getMessage(uid);",
      "right" : "Message remoteMessage = remoteFolder.getMessage(uid);",
      "info" : "VariableDeclarationStatement[125188-125241]:VariableDeclarationStatement[125188-125241]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[125258-125295]:VariableDeclarationStatement[125258-125295]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[125312-125343]:ExpressionStatement[125312-125343]"
    }, {
      "left" : "remoteFolder.fetch(Collections.singletonList(remoteMessage), fp, null);",
      "right" : "remoteFolder.fetch(Collections.singletonList(remoteMessage), fp, null);",
      "info" : "ExpressionStatement[125361-125432]:ExpressionStatement[125361-125432]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(remoteMessage));",
      "right" : "localFolder.appendMessages(Collections.singletonList(remoteMessage));",
      "info" : "ExpressionStatement[125535-125604]:ExpressionStatement[125535-125604]"
    }, {
      "left" : "if (loadPartialFromSearch)",
      "right" : "if (loadPartialFromSearch)",
      "info" : "IfStatement[125621-125719]:IfStatement[125621-125719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125648-125719]:Block[125648-125719]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[125670-125701]:ExpressionStatement[125670-125701]"
    }, {
      "left" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "right" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[125736-125771]:ExpressionStatement[125736-125771]"
    }, {
      "left" : "message = localFolder.getMessage(uid);",
      "right" : "message = localFolder.getMessage(uid);",
      "info" : "ExpressionStatement[125788-125826]:ExpressionStatement[125788-125826]"
    }, {
      "left" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "right" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "info" : "ExpressionStatement[125843-125907]:ExpressionStatement[125843-125907]"
    }, {
      "left" : "if (account.isMarkMessageAsReadOnView())",
      "right" : "if (account.isMarkMessageAsReadOnView())",
      "info" : "IfStatement[125988-126102]:IfStatement[125988-126102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126029-126102]:Block[126029-126102]"
    }, {
      "left" : "message.setFlag(Flag.SEEN, true);",
      "right" : "message.setFlag(Flag.SEEN, true);",
      "info" : "ExpressionStatement[126051-126084]:ExpressionStatement[126051-126084]"
    }, {
      "left" : "message.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "right" : "message.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "info" : "ExpressionStatement[126119-126165]:ExpressionStatement[126119-126165]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[126263-126414]:EnhancedForStatement[126263-126414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126314-126414]:Block[126314-126414]"
    }, {
      "left" : "l.loadMessageForViewHeadersAvailable(account, folder, uid, message);",
      "right" : "l.loadMessageForViewHeadersAvailable(account, folder, uid, message);",
      "info" : "ExpressionStatement[126332-126400]:ExpressionStatement[126332-126400]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[126428-126576]:EnhancedForStatement[126428-126576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126479-126576]:Block[126479-126576]"
    }, {
      "left" : "l.loadMessageForViewBodyAvailable(account, folder, uid, message);",
      "right" : "l.loadMessageForViewBodyAvailable(account, folder, uid, message);",
      "info" : "ExpressionStatement[126497-126562]:ExpressionStatement[126497-126562]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[126589-126732]:EnhancedForStatement[126589-126732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126640-126732]:Block[126640-126732]"
    }, {
      "left" : "l.loadMessageForViewFinished(account, folder, uid, message);",
      "right" : "l.loadMessageForViewFinished(account, folder, uid, message);",
      "info" : "ExpressionStatement[126658-126718]:ExpressionStatement[126658-126718]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[126745-126757]:ReturnStatement[126745-126757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126788-127091]:Block[126788-127091]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[126802-126937]:EnhancedForStatement[126802-126937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126853-126937]:Block[126853-126937]"
    }, {
      "left" : "l.loadMessageForViewFailed(account, folder, uid, e);",
      "right" : "l.loadMessageForViewFailed(account, folder, uid, e);",
      "info" : "ExpressionStatement[126871-126923]:ExpressionStatement[126871-126923]"
    }, {
      "left" : "notifyUserIfCertificateProblem(context, e, account, true);",
      "right" : "notifyUserIfCertificateProblem(context, e, account, true);",
      "info" : "ExpressionStatement[126950-127008]:ExpressionStatement[126950-127008]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[127021-127055]:ExpressionStatement[127021-127055]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[127068-127081]:ReturnStatement[127068-127081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127100-127188]:Block[127100-127188]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[127114-127140]:ExpressionStatement[127114-127140]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[127153-127178]:ExpressionStatement[127153-127178]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[127200-127206]:Modifier[127200-127206]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[127207-127211]:PrimitiveType[127207-127211]"
    }, {
      "left" : "loadMessageForView",
      "right" : "loadMessageForView",
      "info" : "SimpleName[127212-127230]:SimpleName[127212-127230]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[127231-127252]:SingleVariableDeclaration[127231-127252]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[127254-127273]:SingleVariableDeclaration[127254-127273]"
    }, {
      "left" : "final String uid",
      "right" : "final String uid",
      "info" : "SingleVariableDeclaration[127275-127291]:SingleVariableDeclaration[127275-127291]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[127328-127360]:SingleVariableDeclaration[127328-127360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127362-129964]:Block[127362-129964]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[127372-127497]:EnhancedForStatement[127372-127497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127423-127497]:Block[127423-127497]"
    }, {
      "left" : "l.loadMessageForViewStarted(account, folder, uid);",
      "right" : "l.loadMessageForViewStarted(account, folder, uid);",
      "info" : "ExpressionStatement[127437-127487]:ExpressionStatement[127437-127487]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    LocalFolder localFolder = localStore.getFolder(folder);\n                    localFolder.open(Folder.OPEN_MODE_RW);\n\n                    LocalMessage message = localFolder.getMessage(uid);\n                    if (message == null\n                    || message.getId() == 0) {\n                        throw new IllegalArgumentException(\"Message not found: folder=\" + folder + \", uid=\" + uid);\n                    }\n                    // IMAP search results will usually need to be downloaded before viewing.\n                    // TODO: limit by account.getMaximumAutoDownloadMessageSize().\n                    if (!message.isSet(Flag.X_DOWNLOADED_FULL) &&\n                            !message.isSet(Flag.X_DOWNLOADED_PARTIAL)) {\n                        if (loadMessageForViewRemoteSynchronous(account, folder, uid, listener,\n                                false, true)) {\n\n                            markMessageAsReadOnView(account, message);\n                        }\n                        return;\n                    }\n\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewHeadersAvailable(account, folder, uid, message);\n                    }\n\n                    FetchProfile fp = new FetchProfile();\n                    fp.add(FetchProfile.Item.ENVELOPE);\n                    fp.add(FetchProfile.Item.BODY);\n                    localFolder.fetch(Collections.singletonList(message), fp, null);\n                    localFolder.close();\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewBodyAvailable(account, folder, uid, message);\n                    }\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewFinished(account, folder, uid, message);\n                    }\n                    markMessageAsReadOnView(account, message);\n\n                } catch (Exception e) {\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewFailed(account, folder, uid, e);\n                    }\n                    addErrorMessage(account, null, e);\n\n                }\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    LocalFolder localFolder = localStore.getFolder(folder);\n                    localFolder.open(Folder.OPEN_MODE_RW);\n\n                    LocalMessage message = localFolder.getMessage(uid);\n                    if (message == null\n                    || message.getId() == 0) {\n                        throw new IllegalArgumentException(\"Message not found: folder=\" + folder + \", uid=\" + uid);\n                    }\n                    // IMAP search results will usually need to be downloaded before viewing.\n                    // TODO: limit by account.getMaximumAutoDownloadMessageSize().\n                    if (!message.isSet(Flag.X_DOWNLOADED_FULL) &&\n                            !message.isSet(Flag.X_DOWNLOADED_PARTIAL)) {\n                        if (loadMessageForViewRemoteSynchronous(account, folder, uid, listener,\n                                false, true)) {\n\n                            markMessageAsReadOnView(account, message);\n                        }\n                        return;\n                    }\n\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewHeadersAvailable(account, folder, uid, message);\n                    }\n\n                    FetchProfile fp = new FetchProfile();\n                    fp.add(FetchProfile.Item.ENVELOPE);\n                    fp.add(FetchProfile.Item.BODY);\n                    localFolder.fetch(Collections.singletonList(message), fp, null);\n                    localFolder.close();\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewBodyAvailable(account, folder, uid, message);\n                    }\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewFinished(account, folder, uid, message);\n                    }\n                    markMessageAsReadOnView(account, message);\n\n                } catch (Exception e) {\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadMessageForViewFailed(account, folder, uid, e);\n                    }\n                    addErrorMessage(account, null, e);\n\n                }\n            }\n        });",
      "info" : "ExpressionStatement[127506-129958]:ExpressionStatement[127506-129958]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[127554-127563]:MarkerAnnotation[127554-127563]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[127576-127582]:Modifier[127576-127582]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[127583-127587]:PrimitiveType[127583-127587]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[127588-127591]:SimpleName[127588-127591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127594-129946]:Block[127594-129946]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[127613-129932]:TryStatement[127613-129932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127617-129664]:Block[127617-129664]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[127639-127687]:VariableDeclarationStatement[127639-127687]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(folder);",
      "right" : "LocalFolder localFolder = localStore.getFolder(folder);",
      "info" : "VariableDeclarationStatement[127708-127763]:VariableDeclarationStatement[127708-127763]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[127784-127822]:ExpressionStatement[127784-127822]"
    }, {
      "left" : "LocalMessage message = localFolder.getMessage(uid);",
      "right" : "LocalMessage message = localFolder.getMessage(uid);",
      "info" : "VariableDeclarationStatement[127844-127895]:VariableDeclarationStatement[127844-127895]"
    }, {
      "left" : "if (message == null\n                    || message.getId() == 0)",
      "right" : "if (message == null\n                    || message.getId() == 0)",
      "info" : "IfStatement[127916-128120]:IfStatement[127916-128120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127981-128120]:Block[127981-128120]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Message not found: folder=\" + folder + \", uid=\" + uid);",
      "right" : "throw new IllegalArgumentException(\"Message not found: folder=\" + folder + \", uid=\" + uid);",
      "info" : "ThrowStatement[128007-128098]:ThrowStatement[128007-128098]"
    }, {
      "left" : "if (!message.isSet(Flag.X_DOWNLOADED_FULL) &&\n                            !message.isSet(Flag.X_DOWNLOADED_PARTIAL))",
      "right" : "if (!message.isSet(Flag.X_DOWNLOADED_FULL) &&\n                            !message.isSet(Flag.X_DOWNLOADED_PARTIAL))",
      "info" : "IfStatement[128318-128732]:IfStatement[128318-128732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128435-128732]:Block[128435-128732]"
    }, {
      "left" : "if (loadMessageForViewRemoteSynchronous(account, folder, uid, listener,\n                                false, true))",
      "right" : "if (loadMessageForViewRemoteSynchronous(account, folder, uid, listener,\n                                false, true))",
      "info" : "IfStatement[128461-128678]:IfStatement[128461-128678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128579-128678]:Block[128579-128678]"
    }, {
      "left" : "markMessageAsReadOnView(account, message);",
      "right" : "markMessageAsReadOnView(account, message);",
      "info" : "ExpressionStatement[128610-128652]:ExpressionStatement[128610-128652]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[128703-128710]:ReturnStatement[128703-128710]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[128755-128922]:EnhancedForStatement[128755-128922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128806-128922]:Block[128806-128922]"
    }, {
      "left" : "l.loadMessageForViewHeadersAvailable(account, folder, uid, message);",
      "right" : "l.loadMessageForViewHeadersAvailable(account, folder, uid, message);",
      "info" : "ExpressionStatement[128832-128900]:ExpressionStatement[128832-128900]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[128944-128981]:VariableDeclarationStatement[128944-128981]"
    }, {
      "left" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "right" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[129002-129037]:ExpressionStatement[129002-129037]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[129058-129089]:ExpressionStatement[129058-129089]"
    }, {
      "left" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "right" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "info" : "ExpressionStatement[129110-129174]:ExpressionStatement[129110-129174]"
    }, {
      "left" : "localFolder.close();",
      "right" : "localFolder.close();",
      "info" : "ExpressionStatement[129195-129215]:ExpressionStatement[129195-129215]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[129237-129401]:EnhancedForStatement[129237-129401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129288-129401]:Block[129288-129401]"
    }, {
      "left" : "l.loadMessageForViewBodyAvailable(account, folder, uid, message);",
      "right" : "l.loadMessageForViewBodyAvailable(account, folder, uid, message);",
      "info" : "ExpressionStatement[129314-129379]:ExpressionStatement[129314-129379]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[129423-129582]:EnhancedForStatement[129423-129582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129474-129582]:Block[129474-129582]"
    }, {
      "left" : "l.loadMessageForViewFinished(account, folder, uid, message);",
      "right" : "l.loadMessageForViewFinished(account, folder, uid, message);",
      "info" : "ExpressionStatement[129500-129560]:ExpressionStatement[129500-129560]"
    }, {
      "left" : "markMessageAsReadOnView(account, message);",
      "right" : "markMessageAsReadOnView(account, message);",
      "info" : "ExpressionStatement[129603-129645]:ExpressionStatement[129603-129645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129685-129932]:Block[129685-129932]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[129707-129858]:EnhancedForStatement[129707-129858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129758-129858]:Block[129758-129858]"
    }, {
      "left" : "l.loadMessageForViewFailed(account, folder, uid, e);",
      "right" : "l.loadMessageForViewFailed(account, folder, uid, e);",
      "info" : "ExpressionStatement[129784-129836]:ExpressionStatement[129784-129836]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[129879-129913]:ExpressionStatement[129879-129913]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[129970-129976]:Modifier[129970-129976]"
    }, {
      "left" : "LocalMessage",
      "right" : "LocalMessage",
      "info" : "SimpleType[129977-129989]:SimpleType[129977-129989]"
    }, {
      "left" : "loadMessage",
      "right" : "loadMessage",
      "info" : "SimpleName[129990-130001]:SimpleName[129990-130001]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[130002-130017]:SingleVariableDeclaration[130002-130017]"
    }, {
      "left" : "String folderName",
      "right" : "String folderName",
      "info" : "SingleVariableDeclaration[130019-130036]:SingleVariableDeclaration[130019-130036]"
    }, {
      "left" : "String uid",
      "right" : "String uid",
      "info" : "SingleVariableDeclaration[130038-130048]:SingleVariableDeclaration[130038-130048]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[130057-130075]:SimpleType[130057-130075]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130076-130755]:Block[130076-130755]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[130086-130134]:VariableDeclarationStatement[130086-130134]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "right" : "LocalFolder localFolder = localStore.getFolder(folderName);",
      "info" : "VariableDeclarationStatement[130143-130202]:VariableDeclarationStatement[130143-130202]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[130211-130249]:ExpressionStatement[130211-130249]"
    }, {
      "left" : "LocalMessage message = localFolder.getMessage(uid);",
      "right" : "LocalMessage message = localFolder.getMessage(uid);",
      "info" : "VariableDeclarationStatement[130259-130310]:VariableDeclarationStatement[130259-130310]"
    }, {
      "left" : "if (message == null || message.getId() == 0)",
      "right" : "if (message == null || message.getId() == 0)",
      "info" : "IfStatement[130319-130483]:IfStatement[130319-130483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130364-130483]:Block[130364-130483]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Message not found: folder=\" + folderName + \", uid=\" + uid);",
      "right" : "throw new IllegalArgumentException(\"Message not found: folder=\" + folderName + \", uid=\" + uid);",
      "info" : "ThrowStatement[130378-130473]:ThrowStatement[130378-130473]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[130493-130530]:VariableDeclarationStatement[130493-130530]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[130539-130570]:ExpressionStatement[130539-130570]"
    }, {
      "left" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "right" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "info" : "ExpressionStatement[130579-130643]:ExpressionStatement[130579-130643]"
    }, {
      "left" : "localFolder.close();",
      "right" : "localFolder.close();",
      "info" : "ExpressionStatement[130652-130672]:ExpressionStatement[130652-130672]"
    }, {
      "left" : "markMessageAsReadOnView(account, message);",
      "right" : "markMessageAsReadOnView(account, message);",
      "info" : "ExpressionStatement[130682-130724]:ExpressionStatement[130682-130724]"
    }, {
      "left" : "return message;",
      "right" : "return message;",
      "info" : "ReturnStatement[130734-130749]:ReturnStatement[130734-130749]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[130761-130768]:Modifier[130761-130768]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[130769-130773]:PrimitiveType[130769-130773]"
    }, {
      "left" : "markMessageAsReadOnView",
      "right" : "markMessageAsReadOnView",
      "info" : "SimpleName[130774-130797]:SimpleName[130774-130797]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[130798-130813]:SingleVariableDeclaration[130798-130813]"
    }, {
      "left" : "LocalMessage message",
      "right" : "LocalMessage message",
      "info" : "SingleVariableDeclaration[130815-130835]:SingleVariableDeclaration[130815-130835]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[130856-130874]:SimpleType[130856-130874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130875-131167]:Block[130875-131167]"
    }, {
      "left" : "if (account.isMarkMessageAsReadOnView() && !message.isSet(Flag.SEEN))",
      "right" : "if (account.isMarkMessageAsReadOnView() && !message.isSet(Flag.SEEN))",
      "info" : "IfStatement[130886-131161]:IfStatement[130886-131161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130956-131161]:Block[130956-131161]"
    }, {
      "left" : "List<Long> messageIds = Collections.singletonList(message.getId());",
      "right" : "List<Long> messageIds = Collections.singletonList(message.getId());",
      "info" : "VariableDeclarationStatement[130970-131037]:VariableDeclarationStatement[130970-131037]"
    }, {
      "left" : "setFlag(account, messageIds, Flag.SEEN, true);",
      "right" : "setFlag(account, messageIds, Flag.SEEN, true);",
      "info" : "ExpressionStatement[131050-131096]:ExpressionStatement[131050-131096]"
    }, {
      "left" : "message.setFlagInternal(Flag.SEEN, true);",
      "right" : "message.setFlagInternal(Flag.SEEN, true);",
      "info" : "ExpressionStatement[131110-131151]:ExpressionStatement[131110-131151]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[131173-131179]:Modifier[131173-131179]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[131180-131184]:PrimitiveType[131180-131184]"
    }, {
      "left" : "loadAttachment",
      "right" : "loadAttachment",
      "info" : "SimpleName[131185-131199]:SimpleName[131185-131199]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[131200-131221]:SingleVariableDeclaration[131200-131221]"
    }, {
      "left" : "final LocalMessage message",
      "right" : "final LocalMessage message",
      "info" : "SingleVariableDeclaration[131223-131249]:SingleVariableDeclaration[131223-131249]"
    }, {
      "left" : "final Part part",
      "right" : "final Part part",
      "info" : "SingleVariableDeclaration[131251-131266]:SingleVariableDeclaration[131251-131266]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[131280-131312]:SingleVariableDeclaration[131280-131312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131314-132998]:Block[131314-132998]"
    }, {
      "left" : "put(\"loadAttachment\", listener, new Runnable() {\n            @Override\n            public void run() {\n                Folder remoteFolder = null;\n                LocalFolder localFolder = null;\n                try {\n                    String folderName = message.getFolder().getName();\n\n                    LocalStore localStore = account.getLocalStore();\n                    localFolder = localStore.getFolder(folderName);\n\n                    Store remoteStore = account.getRemoteStore();\n                    remoteFolder = remoteStore.getFolder(folderName);\n                    remoteFolder.open(Folder.OPEN_MODE_RW);\n\n                    Message remoteMessage = remoteFolder.getMessage(message.getUid());\n                    remoteFolder.fetchPart(remoteMessage, part, null);\n\n                    localFolder.addPartToMessage(message, part);\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadAttachmentFinished(account, message, part);\n                    }\n                } catch (MessagingException me) {\n                    if (K9.DEBUG)\n                        Log.v(K9.LOG_TAG, \"Exception loading attachment\", me);\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadAttachmentFailed(account, message, part, me.getMessage());\n                    }\n                    notifyUserIfCertificateProblem(context, me, account, true);\n                    addErrorMessage(account, null, me);\n\n                } finally {\n                    closeFolder(localFolder);\n                    closeFolder(remoteFolder);\n                }\n            }\n        });",
      "right" : "put(\"loadAttachment\", listener, new Runnable() {\n            @Override\n            public void run() {\n                Folder remoteFolder = null;\n                LocalFolder localFolder = null;\n                try {\n                    String folderName = message.getFolder().getName();\n\n                    LocalStore localStore = account.getLocalStore();\n                    localFolder = localStore.getFolder(folderName);\n\n                    Store remoteStore = account.getRemoteStore();\n                    remoteFolder = remoteStore.getFolder(folderName);\n                    remoteFolder.open(Folder.OPEN_MODE_RW);\n\n                    Message remoteMessage = remoteFolder.getMessage(message.getUid());\n                    remoteFolder.fetchPart(remoteMessage, part, null);\n\n                    localFolder.addPartToMessage(message, part);\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadAttachmentFinished(account, message, part);\n                    }\n                } catch (MessagingException me) {\n                    if (K9.DEBUG)\n                        Log.v(K9.LOG_TAG, \"Exception loading attachment\", me);\n\n                    for (MessagingListener l : getListeners(listener)) {\n                        l.loadAttachmentFailed(account, message, part, me.getMessage());\n                    }\n                    notifyUserIfCertificateProblem(context, me, account, true);\n                    addErrorMessage(account, null, me);\n\n                } finally {\n                    closeFolder(localFolder);\n                    closeFolder(remoteFolder);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[131325-132992]:ExpressionStatement[131325-132992]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[131386-131395]:MarkerAnnotation[131386-131395]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[131408-131414]:Modifier[131408-131414]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[131415-131419]:PrimitiveType[131415-131419]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[131420-131423]:SimpleName[131420-131423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131426-132980]:Block[131426-132980]"
    }, {
      "left" : "Folder remoteFolder = null;",
      "right" : "Folder remoteFolder = null;",
      "info" : "VariableDeclarationStatement[131444-131471]:VariableDeclarationStatement[131444-131471]"
    }, {
      "left" : "LocalFolder localFolder = null;",
      "right" : "LocalFolder localFolder = null;",
      "info" : "VariableDeclarationStatement[131488-131519]:VariableDeclarationStatement[131488-131519]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[131536-132966]:TryStatement[131536-132966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131540-132360]:Block[131540-132360]"
    }, {
      "left" : "String folderName = message.getFolder().getName();",
      "right" : "String folderName = message.getFolder().getName();",
      "info" : "VariableDeclarationStatement[131562-131612]:VariableDeclarationStatement[131562-131612]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[131634-131682]:VariableDeclarationStatement[131634-131682]"
    }, {
      "left" : "localFolder = localStore.getFolder(folderName);",
      "right" : "localFolder = localStore.getFolder(folderName);",
      "info" : "ExpressionStatement[131703-131750]:ExpressionStatement[131703-131750]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[131772-131817]:VariableDeclarationStatement[131772-131817]"
    }, {
      "left" : "remoteFolder = remoteStore.getFolder(folderName);",
      "right" : "remoteFolder = remoteStore.getFolder(folderName);",
      "info" : "ExpressionStatement[131838-131887]:ExpressionStatement[131838-131887]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[131908-131947]:ExpressionStatement[131908-131947]"
    }, {
      "left" : "Message remoteMessage = remoteFolder.getMessage(message.getUid());",
      "right" : "Message remoteMessage = remoteFolder.getMessage(message.getUid());",
      "info" : "VariableDeclarationStatement[131969-132035]:VariableDeclarationStatement[131969-132035]"
    }, {
      "left" : "remoteFolder.fetchPart(remoteMessage, part, null);",
      "right" : "remoteFolder.fetchPart(remoteMessage, part, null);",
      "info" : "ExpressionStatement[132056-132106]:ExpressionStatement[132056-132106]"
    }, {
      "left" : "localFolder.addPartToMessage(message, part);",
      "right" : "localFolder.addPartToMessage(message, part);",
      "info" : "ExpressionStatement[132128-132172]:ExpressionStatement[132128-132172]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[132194-132342]:EnhancedForStatement[132194-132342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132245-132342]:Block[132245-132342]"
    }, {
      "left" : "l.loadAttachmentFinished(account, message, part);",
      "right" : "l.loadAttachmentFinished(account, message, part);",
      "info" : "ExpressionStatement[132271-132320]:ExpressionStatement[132271-132320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132391-132845]:Block[132391-132845]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[132413-132505]:IfStatement[132413-132505]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Exception loading attachment\", me);",
      "right" : "Log.v(K9.LOG_TAG, \"Exception loading attachment\", me);",
      "info" : "ExpressionStatement[132451-132505]:ExpressionStatement[132451-132505]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[132527-132690]:EnhancedForStatement[132527-132690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132578-132690]:Block[132578-132690]"
    }, {
      "left" : "l.loadAttachmentFailed(account, message, part, me.getMessage());",
      "right" : "l.loadAttachmentFailed(account, message, part, me.getMessage());",
      "info" : "ExpressionStatement[132604-132668]:ExpressionStatement[132604-132668]"
    }, {
      "left" : "notifyUserIfCertificateProblem(context, me, account, true);",
      "right" : "notifyUserIfCertificateProblem(context, me, account, true);",
      "info" : "ExpressionStatement[132711-132770]:ExpressionStatement[132711-132770]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[132791-132826]:ExpressionStatement[132791-132826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132854-132966]:Block[132854-132966]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[132876-132901]:ExpressionStatement[132876-132901]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[132922-132948]:ExpressionStatement[132922-132948]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[133213-133219]:Modifier[133213-133219]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[133220-133224]:PrimitiveType[133220-133224]"
    }, {
      "left" : "sendMessage",
      "right" : "sendMessage",
      "info" : "SimpleName[133225-133236]:SimpleName[133225-133236]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[133237-133258]:SingleVariableDeclaration[133237-133258]"
    }, {
      "left" : "final Message message",
      "right" : "final Message message",
      "info" : "SingleVariableDeclaration[133288-133309]:SingleVariableDeclaration[133288-133309]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[133339-133365]:SingleVariableDeclaration[133339-133365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133367-134135]:Block[133367-134135]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[133377-134129]:TryStatement[133377-134129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133381-133897]:Block[133381-133897]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[133395-133443]:VariableDeclarationStatement[133395-133443]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(account.getOutboxFolderName());",
      "right" : "LocalFolder localFolder = localStore.getFolder(account.getOutboxFolderName());",
      "info" : "VariableDeclarationStatement[133456-133534]:VariableDeclarationStatement[133456-133534]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[133547-133585]:ExpressionStatement[133547-133585]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(message));",
      "right" : "localFolder.appendMessages(Collections.singletonList(message));",
      "info" : "ExpressionStatement[133598-133661]:ExpressionStatement[133598-133661]"
    }, {
      "left" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "right" : "Message localMessage = localFolder.getMessage(message.getUid());",
      "info" : "VariableDeclarationStatement[133674-133738]:VariableDeclarationStatement[133674-133738]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "right" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "info" : "ExpressionStatement[133751-133802]:ExpressionStatement[133751-133802]"
    }, {
      "left" : "localFolder.close();",
      "right" : "localFolder.close();",
      "info" : "ExpressionStatement[133815-133835]:ExpressionStatement[133815-133835]"
    }, {
      "left" : "sendPendingMessages(account, listener);",
      "right" : "sendPendingMessages(account, listener);",
      "info" : "ExpressionStatement[133848-133887]:ExpressionStatement[133848-133887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133918-134129]:Block[133918-134129]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[134084-134118]:ExpressionStatement[134084-134118]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[134142-134148]:Modifier[134142-134148]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[134149-134153]:PrimitiveType[134149-134153]"
    }, {
      "left" : "sendPendingMessages",
      "right" : "sendPendingMessages",
      "info" : "SimpleName[134154-134173]:SimpleName[134154-134173]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[134174-134200]:SingleVariableDeclaration[134174-134200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134202-134405]:Block[134202-134405]"
    }, {
      "left" : "final Preferences prefs = Preferences.getPreferences(context);",
      "right" : "final Preferences prefs = Preferences.getPreferences(context);",
      "info" : "VariableDeclarationStatement[134212-134274]:VariableDeclarationStatement[134212-134274]"
    }, {
      "left" : "for (Account account : prefs.getAvailableAccounts())",
      "right" : "for (Account account : prefs.getAvailableAccounts())",
      "info" : "EnhancedForStatement[134283-134399]:EnhancedForStatement[134283-134399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134336-134399]:Block[134336-134399]"
    }, {
      "left" : "sendPendingMessages(account, listener);",
      "right" : "sendPendingMessages(account, listener);",
      "info" : "ExpressionStatement[134350-134389]:ExpressionStatement[134350-134389]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[134541-134547]:Modifier[134541-134547]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[134548-134552]:PrimitiveType[134548-134552]"
    }, {
      "left" : "sendPendingMessages",
      "right" : "sendPendingMessages",
      "info" : "SimpleName[134553-134572]:SimpleName[134553-134572]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[134573-134594]:SingleVariableDeclaration[134573-134594]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[134632-134658]:SingleVariableDeclaration[134632-134658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134660-135275]:Block[134660-135275]"
    }, {
      "left" : "putBackground(\"sendPendingMessages\", listener, new Runnable() {\n            @Override\n            public void run() {\n                if (!account.isAvailable(context)) {\n                    throw new UnavailableAccountException();\n                }\n                if (messagesPendingSend(account)) {\n\n\n                    notifyWhileSending(account);\n\n                    try {\n                        sendPendingMessagesSynchronous(account);\n                    } finally {\n                        notifyWhileSendingDone(account);\n                    }\n                }\n            }\n        });",
      "right" : "putBackground(\"sendPendingMessages\", listener, new Runnable() {\n            @Override\n            public void run() {\n                if (!account.isAvailable(context)) {\n                    throw new UnavailableAccountException();\n                }\n                if (messagesPendingSend(account)) {\n\n\n                    notifyWhileSending(account);\n\n                    try {\n                        sendPendingMessagesSynchronous(account);\n                    } finally {\n                        notifyWhileSendingDone(account);\n                    }\n                }\n            }\n        });",
      "info" : "ExpressionStatement[134670-135269]:ExpressionStatement[134670-135269]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[134746-134755]:MarkerAnnotation[134746-134755]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[134768-134774]:Modifier[134768-134774]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[134775-134779]:PrimitiveType[134775-134779]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[134780-134783]:SimpleName[134780-134783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134786-135257]:Block[134786-135257]"
    }, {
      "left" : "if (!account.isAvailable(context))",
      "right" : "if (!account.isAvailable(context))",
      "info" : "IfStatement[134804-134919]:IfStatement[134804-134919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134839-134919]:Block[134839-134919]"
    }, {
      "left" : "throw new UnavailableAccountException();",
      "right" : "throw new UnavailableAccountException();",
      "info" : "ThrowStatement[134861-134901]:ThrowStatement[134861-134901]"
    }, {
      "left" : "if (messagesPendingSend(account))",
      "right" : "if (messagesPendingSend(account))",
      "info" : "IfStatement[134936-135243]:IfStatement[134936-135243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134970-135243]:Block[134970-135243]"
    }, {
      "left" : "notifyWhileSending(account);",
      "right" : "notifyWhileSending(account);",
      "info" : "ExpressionStatement[134994-135022]:ExpressionStatement[134994-135022]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[135044-135225]:TryStatement[135044-135225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135048-135136]:Block[135048-135136]"
    }, {
      "left" : "sendPendingMessagesSynchronous(account);",
      "right" : "sendPendingMessagesSynchronous(account);",
      "info" : "ExpressionStatement[135074-135114]:ExpressionStatement[135074-135114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135145-135225]:Block[135145-135225]"
    }, {
      "left" : "notifyWhileSendingDone(account);",
      "right" : "notifyWhileSendingDone(account);",
      "info" : "ExpressionStatement[135171-135203]:ExpressionStatement[135171-135203]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[135281-135288]:Modifier[135281-135288]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[135289-135293]:PrimitiveType[135289-135293]"
    }, {
      "left" : "cancelNotification",
      "right" : "cancelNotification",
      "info" : "SimpleName[135294-135312]:SimpleName[135294-135312]"
    }, {
      "left" : "int id",
      "right" : "int id",
      "info" : "SingleVariableDeclaration[135313-135319]:SingleVariableDeclaration[135313-135319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135321-135487]:Block[135321-135487]"
    }, {
      "left" : "NotificationManager notifMgr =\n            (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "NotificationManager notifMgr =\n            (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[135331-135451]:VariableDeclarationStatement[135331-135451]"
    }, {
      "left" : "notifMgr.cancel(id);",
      "right" : "notifMgr.cancel(id);",
      "info" : "ExpressionStatement[135461-135481]:ExpressionStatement[135461-135481]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[135493-135500]:Modifier[135493-135500]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[135501-135505]:PrimitiveType[135501-135505]"
    }, {
      "left" : "notifyWhileSendingDone",
      "right" : "notifyWhileSendingDone",
      "info" : "SimpleName[135506-135528]:SimpleName[135506-135528]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[135529-135544]:SingleVariableDeclaration[135529-135544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135546-135695]:Block[135546-135695]"
    }, {
      "left" : "if (account.isShowOngoing())",
      "right" : "if (account.isShowOngoing())",
      "info" : "IfStatement[135556-135689]:IfStatement[135556-135689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135585-135689]:Block[135585-135689]"
    }, {
      "left" : "cancelNotification(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber());",
      "right" : "cancelNotification(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber());",
      "info" : "ExpressionStatement[135599-135679]:ExpressionStatement[135599-135679]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[135889-135896]:Modifier[135889-135896]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[135897-135901]:PrimitiveType[135897-135901]"
    }, {
      "left" : "notifyWhileSending",
      "right" : "notifyWhileSending",
      "info" : "SimpleName[135902-135920]:SimpleName[135902-135920]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[135921-135936]:SingleVariableDeclaration[135921-135936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135938-137455]:Block[135938-137455]"
    }, {
      "left" : "if (!account.isShowOngoing())",
      "right" : "if (!account.isShowOngoing())",
      "info" : "IfStatement[135948-136009]:IfStatement[135948-136009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135978-136009]:Block[135978-136009]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[135992-135999]:ReturnStatement[135992-135999]"
    }, {
      "left" : "NotificationManager notifMgr =\n            (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "NotificationManager notifMgr =\n            (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[136019-136139]:VariableDeclarationStatement[136019-136139]"
    }, {
      "left" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "right" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "info" : "VariableDeclarationStatement[136149-136226]:VariableDeclarationStatement[136149-136226]"
    }, {
      "left" : "builder.setSmallIcon(R.drawable.ic_notify_check_mail);",
      "right" : "builder.setSmallIcon(R.drawable.ic_notify_check_mail);",
      "info" : "ExpressionStatement[136235-136289]:ExpressionStatement[136235-136289]"
    }, {
      "left" : "builder.setWhen(System.currentTimeMillis());",
      "right" : "builder.setWhen(System.currentTimeMillis());",
      "info" : "ExpressionStatement[136298-136342]:ExpressionStatement[136298-136342]"
    }, {
      "left" : "builder.setOngoing(true);",
      "right" : "builder.setOngoing(true);",
      "info" : "ExpressionStatement[136351-136376]:ExpressionStatement[136351-136376]"
    }, {
      "left" : "String accountDescription = account.getDescription();",
      "right" : "String accountDescription = account.getDescription();",
      "info" : "VariableDeclarationStatement[136386-136439]:VariableDeclarationStatement[136386-136439]"
    }, {
      "left" : "String accountName = (TextUtils.isEmpty(accountDescription)) ?\n                account.getEmail() : accountDescription;",
      "right" : "String accountName = (TextUtils.isEmpty(accountDescription)) ?\n                account.getEmail() : accountDescription;",
      "info" : "VariableDeclarationStatement[136448-136567]:VariableDeclarationStatement[136448-136567]"
    }, {
      "left" : "builder.setTicker(context.getString(R.string.notification_bg_send_ticker,\n                accountName));",
      "right" : "builder.setTicker(context.getString(R.string.notification_bg_send_ticker,\n                accountName));",
      "info" : "ExpressionStatement[136577-136681]:ExpressionStatement[136577-136681]"
    }, {
      "left" : "builder.setContentTitle(context.getString(R.string.notification_bg_send_title));",
      "right" : "builder.setContentTitle(context.getString(R.string.notification_bg_send_title));",
      "info" : "ExpressionStatement[136691-136771]:ExpressionStatement[136691-136771]"
    }, {
      "left" : "builder.setContentText(account.getDescription());",
      "right" : "builder.setContentText(account.getDescription());",
      "info" : "ExpressionStatement[136780-136829]:ExpressionStatement[136780-136829]"
    }, {
      "left" : "TaskStackBuilder stack = buildMessageListBackStack(context, account,\n                account.getInboxFolderName());",
      "right" : "TaskStackBuilder stack = buildMessageListBackStack(context, account,\n                account.getInboxFolderName());",
      "info" : "VariableDeclarationStatement[136839-136954]:VariableDeclarationStatement[136839-136954]"
    }, {
      "left" : "builder.setContentIntent(stack.getPendingIntent(0, 0));",
      "right" : "builder.setContentIntent(stack.getPendingIntent(0, 0));",
      "info" : "ExpressionStatement[136963-137018]:ExpressionStatement[136963-137018]"
    }, {
      "left" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "right" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "info" : "ExpressionStatement[137027-137087]:ExpressionStatement[137027-137087]"
    }, {
      "left" : "if (K9.NOTIFICATION_LED_WHILE_SYNCING)",
      "right" : "if (K9.NOTIFICATION_LED_WHILE_SYNCING)",
      "info" : "IfStatement[137097-137329]:IfStatement[137097-137329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137136-137329]:Block[137136-137329]"
    }, {
      "left" : "configureNotification(builder, null, null,\n                    account.getNotificationSetting().getLedColor(),\n                    K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "right" : "configureNotification(builder, null, null,\n                    account.getNotificationSetting().getLedColor(),\n                    K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "info" : "ExpressionStatement[137150-137319]:ExpressionStatement[137150-137319]"
    }, {
      "left" : "notifMgr.notify(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber(),\n                builder.build());",
      "right" : "notifMgr.notify(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber(),\n                builder.build());",
      "info" : "ExpressionStatement[137339-137449]:ExpressionStatement[137339-137449]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[137461-137468]:Modifier[137461-137468]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[137469-137473]:PrimitiveType[137469-137473]"
    }, {
      "left" : "notifySendTempFailed",
      "right" : "notifySendTempFailed",
      "info" : "SimpleName[137474-137494]:SimpleName[137474-137494]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[137495-137510]:SingleVariableDeclaration[137495-137510]"
    }, {
      "left" : "Exception lastFailure",
      "right" : "Exception lastFailure",
      "info" : "SingleVariableDeclaration[137512-137533]:SingleVariableDeclaration[137512-137533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137535-137621]:Block[137535-137621]"
    }, {
      "left" : "notifySendFailed(account, lastFailure, account.getOutboxFolderName());",
      "right" : "notifySendFailed(account, lastFailure, account.getOutboxFolderName());",
      "info" : "ExpressionStatement[137545-137615]:ExpressionStatement[137545-137615]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[137627-137634]:Modifier[137627-137634]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[137635-137639]:PrimitiveType[137635-137639]"
    }, {
      "left" : "notifySendPermFailed",
      "right" : "notifySendPermFailed",
      "info" : "SimpleName[137640-137660]:SimpleName[137640-137660]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[137661-137676]:SingleVariableDeclaration[137661-137676]"
    }, {
      "left" : "Exception lastFailure",
      "right" : "Exception lastFailure",
      "info" : "SingleVariableDeclaration[137678-137699]:SingleVariableDeclaration[137678-137699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137701-137787]:Block[137701-137787]"
    }, {
      "left" : "notifySendFailed(account, lastFailure, account.getDraftsFolderName());",
      "right" : "notifySendFailed(account, lastFailure, account.getDraftsFolderName());",
      "info" : "ExpressionStatement[137711-137781]:ExpressionStatement[137711-137781]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[138189-138196]:Modifier[138189-138196]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[138197-138201]:PrimitiveType[138197-138201]"
    }, {
      "left" : "notifySendFailed",
      "right" : "notifySendFailed",
      "info" : "SimpleName[138202-138218]:SimpleName[138202-138218]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[138219-138234]:SingleVariableDeclaration[138219-138234]"
    }, {
      "left" : "Exception lastFailure",
      "right" : "Exception lastFailure",
      "info" : "SingleVariableDeclaration[138236-138257]:SingleVariableDeclaration[138236-138257]"
    }, {
      "left" : "String openFolder",
      "right" : "String openFolder",
      "info" : "SingleVariableDeclaration[138259-138276]:SingleVariableDeclaration[138259-138276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138278-139460]:Block[138278-139460]"
    }, {
      "left" : "NotificationManager notifMgr =\n                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "NotificationManager notifMgr =\n                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[138288-138412]:VariableDeclarationStatement[138288-138412]"
    }, {
      "left" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "right" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "info" : "VariableDeclarationStatement[138422-138499]:VariableDeclarationStatement[138422-138499]"
    }, {
      "left" : "builder.setSmallIcon(platformSupportsLockScreenNotifications()\n            ? R.drawable.ic_notify_new_mail_vector\n            : R.drawable.ic_notify_new_mail);",
      "right" : "builder.setSmallIcon(platformSupportsLockScreenNotifications()\n            ? R.drawable.ic_notify_new_mail_vector\n            : R.drawable.ic_notify_new_mail);",
      "info" : "ExpressionStatement[138508-138667]:ExpressionStatement[138508-138667]"
    }, {
      "left" : "builder.setWhen(System.currentTimeMillis());",
      "right" : "builder.setWhen(System.currentTimeMillis());",
      "info" : "ExpressionStatement[138676-138720]:ExpressionStatement[138676-138720]"
    }, {
      "left" : "builder.setAutoCancel(true);",
      "right" : "builder.setAutoCancel(true);",
      "info" : "ExpressionStatement[138729-138757]:ExpressionStatement[138729-138757]"
    }, {
      "left" : "builder.setTicker(context.getString(R.string.send_failure_subject));",
      "right" : "builder.setTicker(context.getString(R.string.send_failure_subject));",
      "info" : "ExpressionStatement[138766-138834]:ExpressionStatement[138766-138834]"
    }, {
      "left" : "builder.setContentTitle(context.getString(R.string.send_failure_subject));",
      "right" : "builder.setContentTitle(context.getString(R.string.send_failure_subject));",
      "info" : "ExpressionStatement[138843-138917]:ExpressionStatement[138843-138917]"
    }, {
      "left" : "builder.setContentText(getRootCauseMessage(lastFailure));",
      "right" : "builder.setContentText(getRootCauseMessage(lastFailure));",
      "info" : "ExpressionStatement[138926-138983]:ExpressionStatement[138926-138983]"
    }, {
      "left" : "TaskStackBuilder stack = buildFolderListBackStack(context, account);",
      "right" : "TaskStackBuilder stack = buildFolderListBackStack(context, account);",
      "info" : "VariableDeclarationStatement[138993-139061]:VariableDeclarationStatement[138993-139061]"
    }, {
      "left" : "builder.setContentIntent(stack.getPendingIntent(0, 0));",
      "right" : "builder.setContentIntent(stack.getPendingIntent(0, 0));",
      "info" : "ExpressionStatement[139070-139125]:ExpressionStatement[139070-139125]"
    }, {
      "left" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "right" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "info" : "ExpressionStatement[139134-139194]:ExpressionStatement[139134-139194]"
    }, {
      "left" : "configureNotification(builder,  null, null, K9.NOTIFICATION_LED_FAILURE_COLOR,\n                K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "right" : "configureNotification(builder,  null, null, K9.NOTIFICATION_LED_FAILURE_COLOR,\n                K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "info" : "ExpressionStatement[139204-139337]:ExpressionStatement[139204-139337]"
    }, {
      "left" : "notifMgr.notify(K9.SEND_FAILED_NOTIFICATION - account.getAccountNumber(),\n                builder.build());",
      "right" : "notifMgr.notify(K9.SEND_FAILED_NOTIFICATION - account.getAccountNumber(),\n                builder.build());",
      "info" : "ExpressionStatement[139347-139454]:ExpressionStatement[139347-139454]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[139785-139792]:Modifier[139785-139792]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[139793-139797]:PrimitiveType[139793-139797]"
    }, {
      "left" : "notifyFetchingMail",
      "right" : "notifyFetchingMail",
      "info" : "SimpleName[139798-139816]:SimpleName[139798-139816]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[139817-139838]:SingleVariableDeclaration[139817-139838]"
    }, {
      "left" : "final Folder folder",
      "right" : "final Folder folder",
      "info" : "SingleVariableDeclaration[139840-139859]:SingleVariableDeclaration[139840-139859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139861-141341]:Block[139861-141341]"
    }, {
      "left" : "if (!account.isShowOngoing())",
      "right" : "if (!account.isShowOngoing())",
      "info" : "IfStatement[139871-139932]:IfStatement[139871-139932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139901-139932]:Block[139901-139932]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[139915-139922]:ReturnStatement[139915-139922]"
    }, {
      "left" : "final NotificationManager notifMgr =\n                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "final NotificationManager notifMgr =\n                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[139942-140072]:VariableDeclarationStatement[139942-140072]"
    }, {
      "left" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "right" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "info" : "VariableDeclarationStatement[140082-140159]:VariableDeclarationStatement[140082-140159]"
    }, {
      "left" : "builder.setSmallIcon(R.drawable.ic_notify_check_mail);",
      "right" : "builder.setSmallIcon(R.drawable.ic_notify_check_mail);",
      "info" : "ExpressionStatement[140168-140222]:ExpressionStatement[140168-140222]"
    }, {
      "left" : "builder.setWhen(System.currentTimeMillis());",
      "right" : "builder.setWhen(System.currentTimeMillis());",
      "info" : "ExpressionStatement[140231-140275]:ExpressionStatement[140231-140275]"
    }, {
      "left" : "builder.setOngoing(true);",
      "right" : "builder.setOngoing(true);",
      "info" : "ExpressionStatement[140284-140309]:ExpressionStatement[140284-140309]"
    }, {
      "left" : "builder.setTicker(context.getString(\n                R.string.notification_bg_sync_ticker, account.getDescription(), folder.getName()));",
      "right" : "builder.setTicker(context.getString(\n                R.string.notification_bg_sync_ticker, account.getDescription(), folder.getName()));",
      "info" : "ExpressionStatement[140318-140454]:ExpressionStatement[140318-140454]"
    }, {
      "left" : "builder.setContentTitle(context.getString(R.string.notification_bg_sync_title));",
      "right" : "builder.setContentTitle(context.getString(R.string.notification_bg_sync_title));",
      "info" : "ExpressionStatement[140463-140543]:ExpressionStatement[140463-140543]"
    }, {
      "left" : "builder.setContentText(account.getDescription() +\n                context.getString(R.string.notification_bg_title_separator) +\n                folder.getName());",
      "right" : "builder.setContentText(account.getDescription() +\n                context.getString(R.string.notification_bg_title_separator) +\n                folder.getName());",
      "info" : "ExpressionStatement[140552-140714]:ExpressionStatement[140552-140714]"
    }, {
      "left" : "TaskStackBuilder stack = buildMessageListBackStack(context, account,\n                account.getInboxFolderName());",
      "right" : "TaskStackBuilder stack = buildMessageListBackStack(context, account,\n                account.getInboxFolderName());",
      "info" : "VariableDeclarationStatement[140724-140839]:VariableDeclarationStatement[140724-140839]"
    }, {
      "left" : "builder.setContentIntent(stack.getPendingIntent(0, 0));",
      "right" : "builder.setContentIntent(stack.getPendingIntent(0, 0));",
      "info" : "ExpressionStatement[140848-140903]:ExpressionStatement[140848-140903]"
    }, {
      "left" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "right" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "info" : "ExpressionStatement[140912-140972]:ExpressionStatement[140912-140972]"
    }, {
      "left" : "if (K9.NOTIFICATION_LED_WHILE_SYNCING)",
      "right" : "if (K9.NOTIFICATION_LED_WHILE_SYNCING)",
      "info" : "IfStatement[140982-141215]:IfStatement[140982-141215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141021-141215]:Block[141021-141215]"
    }, {
      "left" : "configureNotification(builder,  null, null,\n                    account.getNotificationSetting().getLedColor(),\n                    K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "right" : "configureNotification(builder,  null, null,\n                    account.getNotificationSetting().getLedColor(),\n                    K9.NOTIFICATION_LED_BLINK_FAST, true);",
      "info" : "ExpressionStatement[141035-141205]:ExpressionStatement[141035-141205]"
    }, {
      "left" : "notifMgr.notify(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber(),\n                builder.build());",
      "right" : "notifMgr.notify(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber(),\n                builder.build());",
      "info" : "ExpressionStatement[141225-141335]:ExpressionStatement[141225-141335]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[141347-141354]:Modifier[141347-141354]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[141355-141359]:PrimitiveType[141355-141359]"
    }, {
      "left" : "notifyFetchingMailCancel",
      "right" : "notifyFetchingMailCancel",
      "info" : "SimpleName[141360-141384]:SimpleName[141360-141384]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[141385-141406]:SingleVariableDeclaration[141385-141406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141408-141557]:Block[141408-141557]"
    }, {
      "left" : "if (account.isShowOngoing())",
      "right" : "if (account.isShowOngoing())",
      "info" : "IfStatement[141418-141551]:IfStatement[141418-141551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141447-141551]:Block[141447-141551]"
    }, {
      "left" : "cancelNotification(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber());",
      "right" : "cancelNotification(K9.FETCHING_EMAIL_NOTIFICATION - account.getAccountNumber());",
      "info" : "ExpressionStatement[141461-141541]:ExpressionStatement[141461-141541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[141563-141569]:Modifier[141563-141569]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[141570-141577]:PrimitiveType[141570-141577]"
    }, {
      "left" : "messagesPendingSend",
      "right" : "messagesPendingSend",
      "info" : "SimpleName[141578-141597]:SimpleName[141578-141597]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[141598-141619]:SingleVariableDeclaration[141598-141619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141621-142238]:Block[141621-142238]"
    }, {
      "left" : "Folder localFolder = null;",
      "right" : "Folder localFolder = null;",
      "info" : "VariableDeclarationStatement[141631-141657]:VariableDeclarationStatement[141631-141657]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[141666-142210]:TryStatement[141666-142210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141670-142038]:Block[141670-142038]"
    }, {
      "left" : "localFolder = account.getLocalStore().getFolder(\n                              account.getOutboxFolderName());",
      "right" : "localFolder = account.getLocalStore().getFolder(\n                              account.getOutboxFolderName());",
      "info" : "ExpressionStatement[141684-141794]:ExpressionStatement[141684-141794]"
    }, {
      "left" : "if (!localFolder.exists())",
      "right" : "if (!localFolder.exists())",
      "info" : "IfStatement[141807-141879]:IfStatement[141807-141879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141834-141879]:Block[141834-141879]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[141852-141865]:ReturnStatement[141852-141865]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[141893-141931]:ExpressionStatement[141893-141931]"
    }, {
      "left" : "if (localFolder.getMessageCount() > 0)",
      "right" : "if (localFolder.getMessageCount() > 0)",
      "info" : "IfStatement[141945-142028]:IfStatement[141945-142028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141984-142028]:Block[141984-142028]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[142002-142014]:ReturnStatement[142002-142014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142059-142152]:Block[142059-142152]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Exception while checking for unsent messages\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Exception while checking for unsent messages\", e);",
      "info" : "ExpressionStatement[142073-142142]:ExpressionStatement[142073-142142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142161-142210]:Block[142161-142210]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[142175-142200]:ExpressionStatement[142175-142200]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[142219-142232]:ReturnStatement[142219-142232]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[142350-142356]:Modifier[142350-142356]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[142357-142361]:PrimitiveType[142357-142361]"
    }, {
      "left" : "sendPendingMessagesSynchronous",
      "right" : "sendPendingMessagesSynchronous",
      "info" : "SimpleName[142362-142392]:SimpleName[142362-142392]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[142393-142414]:SingleVariableDeclaration[142393-142414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142416-150088]:Block[142416-149744]"
    }, {
      "left" : "Folder localFolder = null;",
      "right" : "Folder localFolder = null;",
      "info" : "VariableDeclarationStatement[142426-142452]:VariableDeclarationStatement[142426-142452]"
    }, {
      "left" : "Exception lastFailure = null;",
      "right" : "Exception lastFailure = null;",
      "info" : "VariableDeclarationStatement[142461-142490]:VariableDeclarationStatement[142461-142490]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[142499-150082]:TryStatement[142544-149738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142503-149447]:Block[142548-149103]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[142517-142560]:VariableDeclarationStatement[142562-142605]"
    }, {
      "left" : "localFolder = localStore.getFolder(\n                              account.getOutboxFolderName());",
      "right" : "localFolder = localStore.getFolder(\n                              account.getOutboxFolderName());",
      "info" : "ExpressionStatement[142573-142670]:ExpressionStatement[142618-142715]"
    }, {
      "left" : "if (!localFolder.exists())",
      "right" : "if (!localFolder.exists())",
      "info" : "IfStatement[142683-142749]:IfStatement[142728-142794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142710-142749]:Block[142755-142794]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[142728-142735]:ReturnStatement[142773-142780]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[142762-142875]:EnhancedForStatement[142807-142920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142805-142875]:Block[142850-142920]"
    }, {
      "left" : "l.sendPendingMessagesStarted(account);",
      "right" : "l.sendPendingMessagesStarted(account);",
      "info" : "ExpressionStatement[142823-142861]:ExpressionStatement[142868-142906]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[142888-142926]:ExpressionStatement[142933-142971]"
    }, {
      "left" : "List<? extends Message> localMessages = localFolder.getMessages(null);",
      "right" : "List<? extends Message> localMessages = localFolder.getMessages(null);",
      "info" : "VariableDeclarationStatement[142940-143010]:VariableDeclarationStatement[142985-143055]"
    }, {
      "left" : "int progress = 0;",
      "right" : "int progress = 0;",
      "info" : "VariableDeclarationStatement[143023-143040]:VariableDeclarationStatement[143068-143085]"
    }, {
      "left" : "int todo = localMessages.size();",
      "right" : "int todo = localMessages.size();",
      "info" : "VariableDeclarationStatement[143053-143085]:VariableDeclarationStatement[143098-143130]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[143098-143256]:EnhancedForStatement[143143-143301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143141-143256]:Block[143186-143301]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, account.getSentFolderName(), progress, todo);",
      "right" : "l.synchronizeMailboxProgress(account, account.getSentFolderName(), progress, todo);",
      "info" : "ExpressionStatement[143159-143242]:ExpressionStatement[143204-143287]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[143432-143469]:VariableDeclarationStatement[143477-143514]"
    }, {
      "left" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "right" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[143482-143517]:ExpressionStatement[143527-143562]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[143530-143561]:ExpressionStatement[143575-143606]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[143575-143748]:IfStatement[143620-143793]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Scanning folder '\" + account.getOutboxFolderName() + \"' (\" + ((LocalFolder)localFolder).getId() + \") for messages to send\");",
      "right" : "Log.i(K9.LOG_TAG, \"Scanning folder '\" + account.getOutboxFolderName() + \"' (\" + ((LocalFolder)localFolder).getId() + \") for messages to send\");",
      "info" : "ExpressionStatement[143605-143748]:ExpressionStatement[143650-143793]"
    }, {
      "left" : "Transport transport = Transport.getInstance(K9.app, account);",
      "right" : "Transport transport = Transport.getInstance(K9.app, account);",
      "info" : "VariableDeclarationStatement[143762-143823]:VariableDeclarationStatement[143807-143868]"
    }, {
      "left" : "for (Message message : localMessages)",
      "right" : "for (Message message : localMessages)",
      "info" : "EnhancedForStatement[143836-149013]:EnhancedForStatement[143881-148696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143874-149013]:Block[143919-148696]"
    }, {
      "left" : "if (message.isSet(Flag.DELETED))",
      "right" : "if (message.isSet(Flag.DELETED))",
      "info" : "IfStatement[143892-144013]:IfStatement[143937-144058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143925-144013]:Block[143970-144058]"
    }, {
      "left" : "message.destroy();",
      "right" : "message.destroy();",
      "info" : "ExpressionStatement[143947-143965]:ExpressionStatement[143992-144010]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[143986-143995]:ContinueStatement[144031-144040]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[144030-148999]:TryStatement[144075-148682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144034-148558]:Block[144079-148308]"
    }, {
      "left" : "AtomicInteger count = new AtomicInteger(0);",
      "right" : "AtomicInteger count = new AtomicInteger(0);",
      "info" : "VariableDeclarationStatement[144056-144099]:VariableDeclarationStatement[144101-144144]"
    }, {
      "left" : "AtomicInteger oldCount = sendCount.putIfAbsent(message.getUid(), count);",
      "right" : "AtomicInteger oldCount = sendCount.putIfAbsent(message.getUid(), count);",
      "info" : "VariableDeclarationStatement[144120-144192]:VariableDeclarationStatement[144165-144237]"
    }, {
      "left" : "if (oldCount != null)",
      "right" : "if (oldCount != null)",
      "info" : "IfStatement[144213-144300]:IfStatement[144258-144345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144235-144300]:Block[144280-144345]"
    }, {
      "left" : "count = oldCount;",
      "right" : "count = oldCount;",
      "info" : "ExpressionStatement[144261-144278]:ExpressionStatement[144306-144323]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[144322-144447]:IfStatement[144367-144492]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Send count for message \" + message.getUid() + \" is \" + count.get());",
      "right" : "Log.i(K9.LOG_TAG, \"Send count for message \" + message.getUid() + \" is \" + count.get());",
      "info" : "ExpressionStatement[144360-144447]:ExpressionStatement[144405-144492]"
    }, {
      "left" : "if (count.incrementAndGet() > K9.MAX_SEND_ATTEMPTS)",
      "right" : "if (count.incrementAndGet() > K9.MAX_SEND_ATTEMPTS)",
      "info" : "IfStatement[144469-144883]:IfStatement[144514-144928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144521-144883]:Block[144566-144928]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Send count for message \" + message.getUid() + \" can't be delivered after \" + K9.MAX_SEND_ATTEMPTS + \" attempts.  Giving up until the user restarts the device\");",
      "right" : "Log.e(K9.LOG_TAG, \"Send count for message \" + message.getUid() + \" can't be delivered after \" + K9.MAX_SEND_ATTEMPTS + \" attempts.  Giving up until the user restarts the device\");",
      "info" : "ExpressionStatement[144547-144726]:ExpressionStatement[144592-144771]"
    }, {
      "left" : "notifySendTempFailed(account, new MessagingException(message.getSubject()));",
      "right" : "notifySendTempFailed(account, new MessagingException(message.getSubject()));",
      "info" : "ExpressionStatement[144751-144827]:ExpressionStatement[144796-144872]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[144852-144861]:ContinueStatement[144897-144906]"
    }, {
      "left" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "right" : "localFolder.fetch(Collections.singletonList(message), fp, null);",
      "info" : "ExpressionStatement[144907-144971]:ExpressionStatement[144952-145016]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[144992-148540]:TryStatement[145037-148290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144996-147368]:Block[145041-147413]"
    }, {
      "left" : "if (message.getHeader(K9.IDENTITY_HEADER) != null)",
      "right" : "if (message.getHeader(K9.IDENTITY_HEADER) != null)",
      "info" : "IfStatement[145024-145355]:IfStatement[145069-145400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145075-145355]:Block[145120-145400]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"The user has set the Outbox and Drafts folder to the same thing. \" +\n                                  \"This message appears to be a draft, so K-9 will not send it\");",
      "right" : "Log.v(K9.LOG_TAG, \"The user has set the Outbox and Drafts folder to the same thing. \" +\n                                  \"This message appears to be a draft, so K-9 will not send it\");",
      "info" : "ExpressionStatement[145105-145290]:ExpressionStatement[145150-145335]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[145319-145328]:ContinueStatement[145364-145373]"
    }, {
      "left" : "message.setFlag(Flag.X_SEND_IN_PROGRESS, true);",
      "right" : "message.setFlag(Flag.X_SEND_IN_PROGRESS, true);",
      "info" : "ExpressionStatement[145382-145429]:ExpressionStatement[145427-145474]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[145454-145562]:IfStatement[145499-145607]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Sending message with UID \" + message.getUid());",
      "right" : "Log.i(K9.LOG_TAG, \"Sending message with UID \" + message.getUid());",
      "info" : "ExpressionStatement[145496-145562]:ExpressionStatement[145541-145607]"
    }, {
      "left" : "transport.sendMessage(message);",
      "right" : "transport.sendMessage(message);",
      "info" : "ExpressionStatement[145587-145618]:ExpressionStatement[145632-145663]"
    }, {
      "left" : "message.setFlag(Flag.X_SEND_IN_PROGRESS, false);",
      "right" : "message.setFlag(Flag.X_SEND_IN_PROGRESS, false);",
      "info" : "ExpressionStatement[145643-145691]:ExpressionStatement[145688-145736]"
    }, {
      "left" : "message.setFlag(Flag.SEEN, true);",
      "right" : "message.setFlag(Flag.SEEN, true);",
      "info" : "ExpressionStatement[145716-145749]:ExpressionStatement[145761-145794]"
    }, {
      "left" : "progress++;",
      "right" : "progress++;",
      "info" : "ExpressionStatement[145774-145785]:ExpressionStatement[145819-145830]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[145810-145992]:EnhancedForStatement[145855-146037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145853-145992]:Block[145898-146037]"
    }, {
      "left" : "l.synchronizeMailboxProgress(account, account.getSentFolderName(), progress, todo);",
      "right" : "l.synchronizeMailboxProgress(account, account.getSentFolderName(), progress, todo);",
      "info" : "ExpressionStatement[145883-145966]:ExpressionStatement[145928-146011]"
    }, {
      "left" : "if (!account.hasSentFolder())",
      "right" : "if (!account.hasSentFolder())",
      "info" : "IfStatement[146017-147345]:IfStatement[146062-147390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146047-146299]:Block[146092-146344]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[146077-146208]:IfStatement[146122-146253]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Account does not have a sent mail folder; deleting sent message\");",
      "right" : "Log.i(K9.LOG_TAG, \"Account does not have a sent mail folder; deleting sent message\");",
      "info" : "ExpressionStatement[146123-146208]:ExpressionStatement[146168-146253]"
    }, {
      "left" : "message.setFlag(Flag.DELETED, true);",
      "right" : "message.setFlag(Flag.DELETED, true);",
      "info" : "ExpressionStatement[146237-146273]:ExpressionStatement[146282-146318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146305-147345]:Block[146350-147390]"
    }, {
      "left" : "LocalFolder localSentFolder = (LocalFolder) localStore.getFolder(account.getSentFolderName());",
      "right" : "LocalFolder localSentFolder = (LocalFolder) localStore.getFolder(account.getSentFolderName());",
      "info" : "VariableDeclarationStatement[146335-146429]:VariableDeclarationStatement[146380-146474]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[146458-146628]:IfStatement[146503-146673]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Moving sent message to folder '\" + account.getSentFolderName() + \"' (\" + localSentFolder.getId() + \") \");",
      "right" : "Log.i(K9.LOG_TAG, \"Moving sent message to folder '\" + account.getSentFolderName() + \"' (\" + localSentFolder.getId() + \") \");",
      "info" : "ExpressionStatement[146504-146628]:ExpressionStatement[146549-146673]"
    }, {
      "left" : "localFolder.moveMessages(Collections.singletonList(message), localSentFolder);",
      "right" : "localFolder.moveMessages(Collections.singletonList(message), localSentFolder);",
      "info" : "ExpressionStatement[146658-146736]:ExpressionStatement[146703-146781]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[146766-146935]:IfStatement[146811-146980]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Moved sent message to folder '\" + account.getSentFolderName() + \"' (\" + localSentFolder.getId() + \") \");",
      "right" : "Log.i(K9.LOG_TAG, \"Moved sent message to folder '\" + account.getSentFolderName() + \"' (\" + localSentFolder.getId() + \") \");",
      "info" : "ExpressionStatement[146812-146935]:ExpressionStatement[146857-146980]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[146965-147011]:VariableDeclarationStatement[147010-147056]"
    }, {
      "left" : "command.command = PENDING_COMMAND_APPEND;",
      "right" : "command.command = PENDING_COMMAND_APPEND;",
      "info" : "ExpressionStatement[147040-147081]:ExpressionStatement[147085-147126]"
    }, {
      "left" : "command.arguments = new String[] { localSentFolder.getName(), message.getUid() };",
      "right" : "command.arguments = new String[] { localSentFolder.getName(), message.getUid() };",
      "info" : "ExpressionStatement[147110-147191]:ExpressionStatement[147155-147236]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[147220-147258]:ExpressionStatement[147265-147303]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[147287-147319]:ExpressionStatement[147332-147364]"
    }, {
      "left" : "Exception",
      "right" : "CertificateValidationException",
      "info" : "SimpleName[147376-147385]:SimpleName[147421-147451]"
    }, {
      "left" : "Exception e",
      "right" : "CertificateValidationException e",
      "info" : "SingleVariableDeclaration[147376-147387]:SingleVariableDeclaration[147421-147453]"
    }, {
      "left" : "localFolder.moveMessages(Collections.singletonList(message), (LocalFolder) localStore.getFolder(account.getDraftsFolderName()));",
      "right" : "handleSendFailure(account, localStore, localFolder, message, e, wasPermanentFailure);",
      "info" : "ExpressionStatement[147813-147941]:ExpressionStatement[147660-147745]"
    }, {
      "left" : "localFolder",
      "right" : "localStore",
      "info" : "SimpleName[147813-147824]:SimpleName[147687-147697]"
    }, {
      "left" : "message",
      "right" : "message",
      "info" : "SimpleName[147864-147871]:SimpleName[147712-147719]"
    }, {
      "left" : "(LocalFolder) localStore.getFolder(account.getDraftsFolderName())",
      "right" : "(LocalFolder) localStore.getFolder(account.getDraftsFolderName())",
      "info" : "CastExpression[147874-147939]:CastExpression[150524-150589]"
    }, {
      "left" : "notifyUserIfCertificateProblem(context, e, account, false);",
      "right" : "notifyUserIfCertificateProblem(context, e, account, false);",
      "info" : "ExpressionStatement[147993-148052]:ExpressionStatement[147576-147635]"
    }, {
      "left" : "addErrorMessage(account, \"Failed to send message\", e);",
      "right" : "lastFailure = e;",
      "info" : "ExpressionStatement[148077-148131]:ExpressionStatement[147823-147839]"
    }, {
      "left" : "message.setFlag(Flag.X_SEND_FAILED, true);",
      "right" : "message.setFlag(Flag.X_SEND_FAILED, true);",
      "info" : "ExpressionStatement[148156-148198]:ExpressionStatement[150210-150252]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failed to send message\", e);",
      "right" : "handleSendFailure(account, localStore, localFolder, message, e, wasPermanentFailure);",
      "info" : "ExpressionStatement[148223-148270]:ExpressionStatement[147935-148020]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[148267-148268]:SimpleName[147996-147997]"
    }, {
      "left" : "MessagingListener",
      "right" : "Exception",
      "info" : "SimpleName[148300-148317]:SimpleName[148050-148059]"
    }, {
      "left" : "l.synchronizeMailboxFailed(account, localFolder.getName(), getRootCauseMessage(e));",
      "right" : "handleSendFailure(account, localStore, localFolder, message, e, wasPermanentFailure);",
      "info" : "ExpressionStatement[148368-148451]:ExpressionStatement[148183-148268]"
    }, {
      "left" : "account",
      "right" : "account",
      "info" : "SimpleName[148395-148402]:SimpleName[148201-148208]"
    }, {
      "left" : "localFolder",
      "right" : "localFolder",
      "info" : "SimpleName[148404-148415]:SimpleName[148222-148233]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[148447-148448]:SimpleName[148244-148245]"
    }, {
      "left" : "lastFailure = e;",
      "right" : "lastFailure = e;",
      "info" : "ExpressionStatement[148502-148518]:ExpressionStatement[147481-147497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148579-148999]:Block[148329-148682]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failed to fetch message for sending\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Failed to fetch message for sending\", e);",
      "info" : "ExpressionStatement[148601-148661]:ExpressionStatement[148438-148498]"
    }, {
      "left" : "l.synchronizeMailboxFailed(account, localFolder.getName(), getRootCauseMessage(e));",
      "right" : "notifySynchronizeMailboxFailed(account, localFolder, e);",
      "info" : "ExpressionStatement[148751-148834]:ExpressionStatement[148608-148664]"
    }, {
      "left" : "synchronizeMailboxFailed",
      "right" : "notifySynchronizeMailboxFailed",
      "info" : "SimpleName[148753-148777]:SimpleName[148608-148638]"
    }, {
      "left" : "account",
      "right" : "account",
      "info" : "SimpleName[148778-148785]:SimpleName[148639-148646]"
    }, {
      "left" : "localFolder",
      "right" : "localFolder",
      "info" : "SimpleName[148787-148798]:SimpleName[148648-148659]"
    }, {
      "left" : "e",
      "right" : "e",
      "info" : "SimpleName[148830-148831]:SimpleName[148661-148662]"
    }, {
      "left" : "addErrorMessage(account, \"Failed to fetch message for sending\", e);",
      "right" : "addErrorMessage(account, \"Failed to fetch message for sending\", e);",
      "info" : "ExpressionStatement[148877-148944]:ExpressionStatement[148520-148587]"
    }, {
      "left" : "lastFailure = e;",
      "right" : "lastFailure = e;",
      "info" : "ExpressionStatement[148965-148981]:ExpressionStatement[148351-148367]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[149026-149141]:EnhancedForStatement[148710-148825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149069-149141]:Block[148753-148825]"
    }, {
      "left" : "l.sendPendingMessagesCompleted(account);",
      "right" : "l.sendPendingMessagesCompleted(account);",
      "info" : "ExpressionStatement[149087-149127]:ExpressionStatement[148771-148811]"
    }, {
      "left" : "if (lastFailure != null)",
      "right" : "if (lastFailure != null)",
      "info" : "IfStatement[149154-149437]:IfStatement[148839-149093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149179-149437]:Block[148864-149093]"
    }, {
      "left" : "if (getRootCauseMessage(lastFailure).startsWith(\"5\"))",
      "right" : "if (wasPermanentFailure)",
      "info" : "IfStatement[149197-149423]:IfStatement[148882-149079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149251-149334]:Block[148907-148990]"
    }, {
      "left" : "notifySendPermFailed(account, lastFailure);",
      "right" : "notifySendPermFailed(account, lastFailure);",
      "info" : "ExpressionStatement[149273-149316]:ExpressionStatement[148929-148972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149340-149423]:Block[148996-149079]"
    }, {
      "left" : "notifySendTempFailed(account, lastFailure);",
      "right" : "notifySendTempFailed(account, lastFailure);",
      "info" : "ExpressionStatement[149362-149405]:ExpressionStatement[149018-149061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149486-149672]:Block[149142-149328]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to send pending messages because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to send pending messages because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[149500-149608]:ExpressionStatement[149156-149264]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[149621-149662]:ThrowStatement[149277-149318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149693-149877]:Block[149349-149533]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[149707-149819]:EnhancedForStatement[149363-149475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149750-149819]:Block[149406-149475]"
    }, {
      "left" : "l.sendPendingMessagesFailed(account);",
      "right" : "l.sendPendingMessagesFailed(account);",
      "info" : "ExpressionStatement[149768-149805]:ExpressionStatement[149424-149461]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[149832-149866]:ExpressionStatement[149488-149522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149886-150082]:Block[149542-149738]"
    }, {
      "left" : "if (lastFailure == null)",
      "right" : "if (lastFailure == null)",
      "info" : "IfStatement[149900-150034]:IfStatement[149556-149690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149925-150034]:Block[149581-149690]"
    }, {
      "left" : "cancelNotification(K9.SEND_FAILED_NOTIFICATION - account.getAccountNumber());",
      "right" : "cancelNotification(K9.SEND_FAILED_NOTIFICATION - account.getAccountNumber());",
      "info" : "ExpressionStatement[149943-150020]:ExpressionStatement[149599-149676]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[150047-150072]:ExpressionStatement[149703-149728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[150094-150100]:Modifier[151066-151072]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[150101-150105]:PrimitiveType[151073-151077]"
    }, {
      "left" : "getAccountStats",
      "right" : "getAccountStats",
      "info" : "SimpleName[150106-150121]:SimpleName[151078-151093]"
    }, {
      "left" : "final Context context",
      "right" : "final Context context",
      "info" : "SingleVariableDeclaration[150122-150143]:SingleVariableDeclaration[151094-151115]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[150145-150166]:SingleVariableDeclaration[151117-151138]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[150180-150212]:SingleVariableDeclaration[151152-151184]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150214-150713]:Block[151186-151685]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    AccountStats stats = account.getStats(context);\n                    listener.accountStatusChanged(account, stats);\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"Count not get unread count for account \" +\n                            account.getDescription(), me);\n                }\n\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    AccountStats stats = account.getStats(context);\n                    listener.accountStatusChanged(account, stats);\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"Count not get unread count for account \" +\n                            account.getDescription(), me);\n                }\n\n            }\n        });",
      "info" : "ExpressionStatement[150225-150707]:ExpressionStatement[151197-151679]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[150273-150282]:MarkerAnnotation[151245-151254]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[150295-150301]:Modifier[151267-151273]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[150302-150306]:PrimitiveType[151274-151278]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[150307-150310]:SimpleName[151279-151282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150313-150695]:Block[151285-151667]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[150331-150680]:TryStatement[151303-151652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150335-150489]:Block[151307-151461]"
    }, {
      "left" : "AccountStats stats = account.getStats(context);",
      "right" : "AccountStats stats = account.getStats(context);",
      "info" : "VariableDeclarationStatement[150357-150404]:VariableDeclarationStatement[151329-151376]"
    }, {
      "left" : "listener.accountStatusChanged(account, stats);",
      "right" : "listener.accountStatusChanged(account, stats);",
      "info" : "ExpressionStatement[150425-150471]:ExpressionStatement[151397-151443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150520-150680]:Block[151492-151652]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Count not get unread count for account \" +\n                            account.getDescription(), me);",
      "right" : "Log.e(K9.LOG_TAG, \"Count not get unread count for account \" +\n                            account.getDescription(), me);",
      "info" : "ExpressionStatement[150542-150662]:ExpressionStatement[151514-151634]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[150719-150725]:Modifier[151691-151697]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[150726-150730]:PrimitiveType[151698-151702]"
    }, {
      "left" : "getSearchAccountStats",
      "right" : "getSearchAccountStats",
      "info" : "SimpleName[150731-150752]:SimpleName[151703-151724]"
    }, {
      "left" : "final SearchAccount searchAccount",
      "right" : "final SearchAccount searchAccount",
      "info" : "SingleVariableDeclaration[150753-150786]:SingleVariableDeclaration[151725-151758]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[150800-150832]:SingleVariableDeclaration[151772-151804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150834-151041]:Block[151806-152013]"
    }, {
      "left" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                getSearchAccountStatsSynchronous(searchAccount, listener);\n            }\n        });",
      "right" : "threadPool.execute(new Runnable() {\n            @Override\n            public void run() {\n                getSearchAccountStatsSynchronous(searchAccount, listener);\n            }\n        });",
      "info" : "ExpressionStatement[150845-151035]:ExpressionStatement[151817-152007]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[150893-150902]:MarkerAnnotation[151865-151874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[150915-150921]:Modifier[151887-151893]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[150922-150926]:PrimitiveType[151894-151898]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[150927-150930]:SimpleName[151899-151902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150933-151023]:Block[151905-151995]"
    }, {
      "left" : "getSearchAccountStatsSynchronous(searchAccount, listener);",
      "right" : "getSearchAccountStatsSynchronous(searchAccount, listener);",
      "info" : "ExpressionStatement[150951-151009]:ExpressionStatement[151923-151981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[151047-151053]:Modifier[152019-152025]"
    }, {
      "left" : "AccountStats",
      "right" : "AccountStats",
      "info" : "SimpleType[151054-151066]:SimpleType[152026-152038]"
    }, {
      "left" : "getSearchAccountStatsSynchronous",
      "right" : "getSearchAccountStatsSynchronous",
      "info" : "SimpleName[151067-151099]:SimpleName[152039-152071]"
    }, {
      "left" : "final SearchAccount searchAccount",
      "right" : "final SearchAccount searchAccount",
      "info" : "SingleVariableDeclaration[151100-151133]:SingleVariableDeclaration[152072-152105]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[151147-151179]:SingleVariableDeclaration[152119-152151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151181-153509]:Block[152153-154481]"
    }, {
      "left" : "Preferences preferences = Preferences.getPreferences(context);",
      "right" : "Preferences preferences = Preferences.getPreferences(context);",
      "info" : "VariableDeclarationStatement[151192-151254]:VariableDeclarationStatement[152164-152226]"
    }, {
      "left" : "LocalSearch search = searchAccount.getRelatedSearch();",
      "right" : "LocalSearch search = searchAccount.getRelatedSearch();",
      "info" : "VariableDeclarationStatement[151263-151317]:VariableDeclarationStatement[152235-152289]"
    }, {
      "left" : "String[] accountUuids = search.getAccountUuids();",
      "right" : "String[] accountUuids = search.getAccountUuids();",
      "info" : "VariableDeclarationStatement[151381-151430]:VariableDeclarationStatement[152353-152402]"
    }, {
      "left" : "List<Account> accounts;",
      "right" : "List<Account> accounts;",
      "info" : "VariableDeclarationStatement[151439-151462]:VariableDeclarationStatement[152411-152434]"
    }, {
      "left" : "if (search.searchAllAccounts())",
      "right" : "if (search.searchAllAccounts())",
      "info" : "IfStatement[151471-151858]:IfStatement[152443-152830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151503-151564]:Block[152475-152536]"
    }, {
      "left" : "accounts = preferences.getAccounts();",
      "right" : "accounts = preferences.getAccounts();",
      "info" : "ExpressionStatement[151517-151554]:ExpressionStatement[152489-152526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151570-151858]:Block[152542-152830]"
    }, {
      "left" : "accounts = new ArrayList<Account>(accountUuids.length);",
      "right" : "accounts = new ArrayList<Account>(accountUuids.length);",
      "info" : "ExpressionStatement[151584-151639]:ExpressionStatement[152556-152611]"
    }, {
      "left" : "for (int i = 0, len = accountUuids.length; i < len; i++)",
      "right" : "for (int i = 0, len = accountUuids.length; i < len; i++)",
      "info" : "ForStatement[151652-151848]:ForStatement[152624-152820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151709-151848]:Block[152681-152820]"
    }, {
      "left" : "String accountUuid = accountUuids[i];",
      "right" : "String accountUuid = accountUuids[i];",
      "info" : "VariableDeclarationStatement[151727-151764]:VariableDeclarationStatement[152699-152736]"
    }, {
      "left" : "accounts.set(i, preferences.getAccount(accountUuid));",
      "right" : "accounts.set(i, preferences.getAccount(accountUuid));",
      "info" : "ExpressionStatement[151781-151834]:ExpressionStatement[152753-152806]"
    }, {
      "left" : "ContentResolver cr = context.getContentResolver();",
      "right" : "ContentResolver cr = context.getContentResolver();",
      "info" : "VariableDeclarationStatement[151868-151918]:VariableDeclarationStatement[152840-152890]"
    }, {
      "left" : "int unreadMessageCount = 0;",
      "right" : "int unreadMessageCount = 0;",
      "info" : "VariableDeclarationStatement[151928-151955]:VariableDeclarationStatement[152900-152927]"
    }, {
      "left" : "int flaggedMessageCount = 0;",
      "right" : "int flaggedMessageCount = 0;",
      "info" : "VariableDeclarationStatement[151964-151992]:VariableDeclarationStatement[152936-152964]"
    }, {
      "left" : "String[] projection = {\n                StatsColumns.UNREAD_COUNT,\n                StatsColumns.FLAGGED_COUNT\n        };",
      "right" : "String[] projection = {\n                StatsColumns.UNREAD_COUNT,\n                StatsColumns.FLAGGED_COUNT\n        };",
      "info" : "VariableDeclarationStatement[152002-152122]:VariableDeclarationStatement[152974-153094]"
    }, {
      "left" : "for (Account account : accounts)",
      "right" : "for (Account account : accounts)",
      "info" : "EnhancedForStatement[152132-153129]:EnhancedForStatement[153104-154101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152165-153129]:Block[153137-154101]"
    }, {
      "left" : "StringBuilder query = new StringBuilder();",
      "right" : "StringBuilder query = new StringBuilder();",
      "info" : "VariableDeclarationStatement[152179-152221]:VariableDeclarationStatement[153151-153193]"
    }, {
      "left" : "List<String> queryArgs = new ArrayList<String>();",
      "right" : "List<String> queryArgs = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[152234-152283]:VariableDeclarationStatement[153206-153255]"
    }, {
      "left" : "ConditionsTreeNode conditions = search.getConditions();",
      "right" : "ConditionsTreeNode conditions = search.getConditions();",
      "info" : "VariableDeclarationStatement[152296-152351]:VariableDeclarationStatement[153268-153323]"
    }, {
      "left" : "SqlQueryBuilder.buildWhereClause(account, conditions, query, queryArgs);",
      "right" : "SqlQueryBuilder.buildWhereClause(account, conditions, query, queryArgs);",
      "info" : "ExpressionStatement[152364-152436]:ExpressionStatement[153336-153408]"
    }, {
      "left" : "String selection = query.toString();",
      "right" : "String selection = query.toString();",
      "info" : "VariableDeclarationStatement[152450-152486]:VariableDeclarationStatement[153422-153458]"
    }, {
      "left" : "String[] selectionArgs = queryArgs.toArray(EMPTY_STRING_ARRAY);",
      "right" : "String[] selectionArgs = queryArgs.toArray(EMPTY_STRING_ARRAY);",
      "info" : "VariableDeclarationStatement[152499-152562]:VariableDeclarationStatement[153471-153534]"
    }, {
      "left" : "Uri uri = Uri.withAppendedPath(EmailProvider.CONTENT_URI,\n                    \"account/\" + account.getUuid() + \"/stats\");",
      "right" : "Uri uri = Uri.withAppendedPath(EmailProvider.CONTENT_URI,\n                    \"account/\" + account.getUuid() + \"/stats\");",
      "info" : "VariableDeclarationStatement[152576-152697]:VariableDeclarationStatement[153548-153669]"
    }, {
      "left" : "Cursor cursor = cr.query(uri, projection, selection, selectionArgs, null);",
      "right" : "Cursor cursor = cr.query(uri, projection, selection, selectionArgs, null);",
      "info" : "VariableDeclarationStatement[152774-152848]:VariableDeclarationStatement[153746-153820]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[152861-153119]:TryStatement[153833-154091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152865-153063]:Block[153837-154035]"
    }, {
      "left" : "if (cursor.moveToFirst())",
      "right" : "if (cursor.moveToFirst())",
      "info" : "IfStatement[152883-153049]:IfStatement[153855-154021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152909-153049]:Block[153881-154021]"
    }, {
      "left" : "unreadMessageCount += cursor.getInt(0);",
      "right" : "unreadMessageCount += cursor.getInt(0);",
      "info" : "ExpressionStatement[152931-152970]:ExpressionStatement[153903-153942]"
    }, {
      "left" : "flaggedMessageCount += cursor.getInt(1);",
      "right" : "flaggedMessageCount += cursor.getInt(1);",
      "info" : "ExpressionStatement[152991-153031]:ExpressionStatement[153963-154003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153072-153119]:Block[154044-154091]"
    }, {
      "left" : "cursor.close();",
      "right" : "cursor.close();",
      "info" : "ExpressionStatement[153090-153105]:ExpressionStatement[154062-154077]"
    }, {
      "left" : "AccountStats stats = new AccountStats();",
      "right" : "AccountStats stats = new AccountStats();",
      "info" : "VariableDeclarationStatement[153182-153222]:VariableDeclarationStatement[154154-154194]"
    }, {
      "left" : "stats.unreadMessageCount = unreadMessageCount;",
      "right" : "stats.unreadMessageCount = unreadMessageCount;",
      "info" : "ExpressionStatement[153231-153277]:ExpressionStatement[154203-154249]"
    }, {
      "left" : "stats.flaggedMessageCount = flaggedMessageCount;",
      "right" : "stats.flaggedMessageCount = flaggedMessageCount;",
      "info" : "ExpressionStatement[153286-153334]:ExpressionStatement[154258-154306]"
    }, {
      "left" : "if (listener != null)",
      "right" : "if (listener != null)",
      "info" : "IfStatement[153382-153480]:IfStatement[154354-154452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153404-153480]:Block[154376-154452]"
    }, {
      "left" : "listener.accountStatusChanged(searchAccount, stats);",
      "right" : "listener.accountStatusChanged(searchAccount, stats);",
      "info" : "ExpressionStatement[153418-153470]:ExpressionStatement[154390-154442]"
    }, {
      "left" : "return stats;",
      "right" : "return stats;",
      "info" : "ReturnStatement[153490-153503]:ReturnStatement[154462-154475]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[153515-153521]:Modifier[154487-154493]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[153522-153526]:PrimitiveType[154494-154498]"
    }, {
      "left" : "getFolderUnreadMessageCount",
      "right" : "getFolderUnreadMessageCount",
      "info" : "SimpleName[153527-153554]:SimpleName[154499-154526]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[153555-153576]:SingleVariableDeclaration[154527-154548]"
    }, {
      "left" : "final String folderName",
      "right" : "final String folderName",
      "info" : "SingleVariableDeclaration[153578-153601]:SingleVariableDeclaration[154550-154573]"
    }, {
      "left" : "final MessagingListener l",
      "right" : "final MessagingListener l",
      "info" : "SingleVariableDeclaration[153647-153672]:SingleVariableDeclaration[154619-154644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153674-154405]:Block[154646-155377]"
    }, {
      "left" : "Runnable unreadRunnable = new Runnable() {\n            @Override\n            public void run() {\n\n                int unreadMessageCount = 0;\n                try {\n                    Folder localFolder = account.getLocalStore().getFolder(folderName);\n                    unreadMessageCount = localFolder.getUnreadMessageCount();\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"Count not get unread count for account \" + account.getDescription(), me);\n                }\n                l.folderStatusChanged(account, folderName, unreadMessageCount);\n            }\n        };",
      "right" : "Runnable unreadRunnable = new Runnable() {\n            @Override\n            public void run() {\n\n                int unreadMessageCount = 0;\n                try {\n                    Folder localFolder = account.getLocalStore().getFolder(folderName);\n                    unreadMessageCount = localFolder.getUnreadMessageCount();\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"Count not get unread count for account \" + account.getDescription(), me);\n                }\n                l.folderStatusChanged(account, folderName, unreadMessageCount);\n            }\n        };",
      "info" : "VariableDeclarationStatement[153684-154299]:VariableDeclarationStatement[154656-155271]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[153739-153748]:MarkerAnnotation[154711-154720]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[153761-153767]:Modifier[154733-154739]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[153768-153772]:PrimitiveType[154740-154744]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[153773-153776]:SimpleName[154745-154748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153779-154288]:Block[154751-155260]"
    }, {
      "left" : "int unreadMessageCount = 0;",
      "right" : "int unreadMessageCount = 0;",
      "info" : "VariableDeclarationStatement[153798-153825]:VariableDeclarationStatement[154770-154797]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[153842-154194]:TryStatement[154814-155166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153846-154031]:Block[154818-155003]"
    }, {
      "left" : "Folder localFolder = account.getLocalStore().getFolder(folderName);",
      "right" : "Folder localFolder = account.getLocalStore().getFolder(folderName);",
      "info" : "VariableDeclarationStatement[153868-153935]:VariableDeclarationStatement[154840-154907]"
    }, {
      "left" : "unreadMessageCount = localFolder.getUnreadMessageCount();",
      "right" : "unreadMessageCount = localFolder.getUnreadMessageCount();",
      "info" : "ExpressionStatement[153956-154013]:ExpressionStatement[154928-154985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154062-154194]:Block[155034-155166]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Count not get unread count for account \" + account.getDescription(), me);",
      "right" : "Log.e(K9.LOG_TAG, \"Count not get unread count for account \" + account.getDescription(), me);",
      "info" : "ExpressionStatement[154084-154176]:ExpressionStatement[155056-155148]"
    }, {
      "left" : "l.folderStatusChanged(account, folderName, unreadMessageCount);",
      "right" : "l.folderStatusChanged(account, folderName, unreadMessageCount);",
      "info" : "ExpressionStatement[154211-154274]:ExpressionStatement[155183-155246]"
    }, {
      "left" : "put(\"getFolderUnread:\" + account.getDescription() + \":\" + folderName, l, unreadRunnable);",
      "right" : "put(\"getFolderUnread:\" + account.getDescription() + \":\" + folderName, l, unreadRunnable);",
      "info" : "ExpressionStatement[154310-154399]:ExpressionStatement[155282-155371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[154413-154419]:Modifier[155385-155391]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[154420-154427]:PrimitiveType[155392-155399]"
    }, {
      "left" : "isMoveCapable",
      "right" : "isMoveCapable",
      "info" : "SimpleName[154428-154441]:SimpleName[155400-155413]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[154442-154457]:SingleVariableDeclaration[155414-155429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154459-154532]:Block[155431-155504]"
    }, {
      "left" : "return !message.getUid().startsWith(K9.LOCAL_UID_PREFIX);",
      "right" : "return !message.getUid().startsWith(K9.LOCAL_UID_PREFIX);",
      "info" : "ReturnStatement[154469-154526]:ReturnStatement[155441-155498]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[154537-154543]:Modifier[155509-155515]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[154544-154551]:PrimitiveType[155516-155523]"
    }, {
      "left" : "isCopyCapable",
      "right" : "isCopyCapable",
      "info" : "SimpleName[154552-154565]:SimpleName[155524-155537]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[154566-154581]:SingleVariableDeclaration[155538-155553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154583-154629]:Block[155555-155601]"
    }, {
      "left" : "return isMoveCapable(message);",
      "right" : "return isMoveCapable(message);",
      "info" : "ReturnStatement[154593-154623]:ReturnStatement[155565-155595]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[154635-154641]:Modifier[155607-155613]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[154642-154649]:PrimitiveType[155614-155621]"
    }, {
      "left" : "isMoveCapable",
      "right" : "isMoveCapable",
      "info" : "SimpleName[154650-154663]:SimpleName[155622-155635]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[154664-154685]:SingleVariableDeclaration[155636-155657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154687-155062]:Block[155659-156034]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[154697-155056]:TryStatement[155669-156028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154701-154904]:Block[155673-155876]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[154715-154758]:VariableDeclarationStatement[155687-155730]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[154771-154816]:VariableDeclarationStatement[155743-155788]"
    }, {
      "left" : "return localStore.isMoveCapable() && remoteStore.isMoveCapable();",
      "right" : "return localStore.isMoveCapable() && remoteStore.isMoveCapable();",
      "info" : "ReturnStatement[154829-154894]:ReturnStatement[155801-155866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154935-155056]:Block[155907-156028]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Exception while ascertaining move capability\", me);",
      "right" : "Log.e(K9.LOG_TAG, \"Exception while ascertaining move capability\", me);",
      "info" : "ExpressionStatement[154950-155020]:ExpressionStatement[155922-155992]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[155033-155046]:ReturnStatement[156005-156018]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[155067-155073]:Modifier[156039-156045]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[155074-155081]:PrimitiveType[156046-156053]"
    }, {
      "left" : "isCopyCapable",
      "right" : "isCopyCapable",
      "info" : "SimpleName[155082-155095]:SimpleName[156054-156067]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[155096-155117]:SingleVariableDeclaration[156068-156089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155119-155493]:Block[156091-156465]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[155129-155487]:TryStatement[156101-156459]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155133-155336]:Block[156105-156308]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[155147-155190]:VariableDeclarationStatement[156119-156162]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[155203-155248]:VariableDeclarationStatement[156175-156220]"
    }, {
      "left" : "return localStore.isCopyCapable() && remoteStore.isCopyCapable();",
      "right" : "return localStore.isCopyCapable() && remoteStore.isCopyCapable();",
      "info" : "ReturnStatement[155261-155326]:ReturnStatement[156233-156298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155367-155487]:Block[156339-156459]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Exception while ascertaining copy capability\", me);",
      "right" : "Log.e(K9.LOG_TAG, \"Exception while ascertaining copy capability\", me);",
      "info" : "ExpressionStatement[155381-155451]:ExpressionStatement[156353-156423]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[155464-155477]:ReturnStatement[156436-156449]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[155498-155504]:Modifier[156470-156476]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[155505-155509]:PrimitiveType[156477-156481]"
    }, {
      "left" : "moveMessages",
      "right" : "moveMessages",
      "info" : "SimpleName[155510-155522]:SimpleName[156482-156494]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[155523-155544]:SingleVariableDeclaration[156495-156516]"
    }, {
      "left" : "final String srcFolder",
      "right" : "final String srcFolder",
      "info" : "SingleVariableDeclaration[155546-155568]:SingleVariableDeclaration[156518-156540]"
    }, {
      "left" : "final List<LocalMessage> messages",
      "right" : "final List<LocalMessage> messages",
      "info" : "SingleVariableDeclaration[155582-155615]:SingleVariableDeclaration[156554-156587]"
    }, {
      "left" : "final String destFolder",
      "right" : "final String destFolder",
      "info" : "SingleVariableDeclaration[155617-155640]:SingleVariableDeclaration[156589-156612]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[155654-155686]:SingleVariableDeclaration[156626-156658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155688-156012]:Block[156660-156984]"
    }, {
      "left" : "suppressMessages(account, messages);",
      "right" : "suppressMessages(account, messages);",
      "info" : "ExpressionStatement[155699-155735]:ExpressionStatement[156671-156707]"
    }, {
      "left" : "putBackground(\"moveMessages\", null, new Runnable() {\n            @Override\n            public void run() {\n                moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, false,\n                        listener);\n            }\n        });",
      "right" : "putBackground(\"moveMessages\", null, new Runnable() {\n            @Override\n            public void run() {\n                moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, false,\n                        listener);\n            }\n        });",
      "info" : "ExpressionStatement[155745-156006]:ExpressionStatement[156717-156978]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[155810-155819]:MarkerAnnotation[156782-156791]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[155832-155838]:Modifier[156804-156810]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[155839-155843]:PrimitiveType[156811-156815]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[155844-155847]:SimpleName[156816-156819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155850-155994]:Block[156822-156966]"
    }, {
      "left" : "moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, false,\n                        listener);",
      "right" : "moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, false,\n                        listener);",
      "info" : "ExpressionStatement[155868-155980]:ExpressionStatement[156840-156952]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[156018-156024]:Modifier[156990-156996]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[156025-156029]:PrimitiveType[156997-157001]"
    }, {
      "left" : "moveMessagesInThread",
      "right" : "moveMessagesInThread",
      "info" : "SimpleName[156030-156050]:SimpleName[157002-157022]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[156051-156072]:SingleVariableDeclaration[157023-157044]"
    }, {
      "left" : "final String srcFolder",
      "right" : "final String srcFolder",
      "info" : "SingleVariableDeclaration[156074-156096]:SingleVariableDeclaration[157046-157068]"
    }, {
      "left" : "final List<LocalMessage> messages",
      "right" : "final List<LocalMessage> messages",
      "info" : "SingleVariableDeclaration[156110-156143]:SingleVariableDeclaration[157082-157115]"
    }, {
      "left" : "final String destFolder",
      "right" : "final String destFolder",
      "info" : "SingleVariableDeclaration[156145-156168]:SingleVariableDeclaration[157117-157140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156170-156787]:Block[157142-157759]"
    }, {
      "left" : "suppressMessages(account, messages);",
      "right" : "suppressMessages(account, messages);",
      "info" : "ExpressionStatement[156181-156217]:ExpressionStatement[157153-157189]"
    }, {
      "left" : "putBackground(\"moveMessagesInThread\", null, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    List<Message> messagesInThreads = collectMessagesInThreads(account, messages);\n                    moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            false, null);\n                } catch (MessagingException e) {\n                    addErrorMessage(account, \"Exception while moving messages\", e);\n                }\n            }\n        });",
      "right" : "putBackground(\"moveMessagesInThread\", null, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    List<Message> messagesInThreads = collectMessagesInThreads(account, messages);\n                    moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            false, null);\n                } catch (MessagingException e) {\n                    addErrorMessage(account, \"Exception while moving messages\", e);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[156227-156781]:ExpressionStatement[157199-157753]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[156300-156309]:MarkerAnnotation[157272-157281]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[156322-156328]:Modifier[157294-157300]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[156329-156333]:PrimitiveType[157301-157305]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[156334-156337]:SimpleName[157306-157309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156340-156769]:Block[157312-157741]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[156358-156755]:TryStatement[157330-157727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156362-156622]:Block[157334-157594]"
    }, {
      "left" : "List<Message> messagesInThreads = collectMessagesInThreads(account, messages);",
      "right" : "List<Message> messagesInThreads = collectMessagesInThreads(account, messages);",
      "info" : "VariableDeclarationStatement[156384-156462]:VariableDeclarationStatement[157356-157434]"
    }, {
      "left" : "moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            false, null);",
      "right" : "moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            false, null);",
      "info" : "ExpressionStatement[156483-156604]:ExpressionStatement[157455-157576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156652-156755]:Block[157624-157727]"
    }, {
      "left" : "addErrorMessage(account, \"Exception while moving messages\", e);",
      "right" : "addErrorMessage(account, \"Exception while moving messages\", e);",
      "info" : "ExpressionStatement[156674-156737]:ExpressionStatement[157646-157709]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[156793-156799]:Modifier[157765-157771]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[156800-156804]:PrimitiveType[157772-157776]"
    }, {
      "left" : "moveMessage",
      "right" : "moveMessage",
      "info" : "SimpleName[156805-156816]:SimpleName[157777-157788]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[156817-156838]:SingleVariableDeclaration[157789-157810]"
    }, {
      "left" : "final String srcFolder",
      "right" : "final String srcFolder",
      "info" : "SingleVariableDeclaration[156840-156862]:SingleVariableDeclaration[157812-157834]"
    }, {
      "left" : "final LocalMessage message",
      "right" : "final LocalMessage message",
      "info" : "SingleVariableDeclaration[156864-156890]:SingleVariableDeclaration[157836-157862]"
    }, {
      "left" : "final String destFolder",
      "right" : "final String destFolder",
      "info" : "SingleVariableDeclaration[156904-156927]:SingleVariableDeclaration[157876-157899]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[156929-156961]:SingleVariableDeclaration[157901-157933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156963-157071]:Block[157935-158043]"
    }, {
      "left" : "moveMessages(account, srcFolder, Collections.singletonList(message), destFolder, listener);",
      "right" : "moveMessages(account, srcFolder, Collections.singletonList(message), destFolder, listener);",
      "info" : "ExpressionStatement[156974-157065]:ExpressionStatement[157946-158037]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[157077-157083]:Modifier[158049-158055]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[157084-157088]:PrimitiveType[158056-158060]"
    }, {
      "left" : "copyMessages",
      "right" : "copyMessages",
      "info" : "SimpleName[157089-157101]:SimpleName[158061-158073]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[157102-157123]:SingleVariableDeclaration[158074-158095]"
    }, {
      "left" : "final String srcFolder",
      "right" : "final String srcFolder",
      "info" : "SingleVariableDeclaration[157125-157147]:SingleVariableDeclaration[158097-158119]"
    }, {
      "left" : "final List<? extends Message> messages",
      "right" : "final List<? extends Message> messages",
      "info" : "SingleVariableDeclaration[157161-157199]:SingleVariableDeclaration[158133-158171]"
    }, {
      "left" : "final String destFolder",
      "right" : "final String destFolder",
      "info" : "SingleVariableDeclaration[157201-157224]:SingleVariableDeclaration[158173-158196]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[157238-157270]:SingleVariableDeclaration[158210-158242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157272-157549]:Block[158244-158521]"
    }, {
      "left" : "putBackground(\"copyMessages\", null, new Runnable() {\n            @Override\n            public void run() {\n                moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, true,\n                        listener);\n            }\n        });",
      "right" : "putBackground(\"copyMessages\", null, new Runnable() {\n            @Override\n            public void run() {\n                moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, true,\n                        listener);\n            }\n        });",
      "info" : "ExpressionStatement[157283-157543]:ExpressionStatement[158255-158515]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[157348-157357]:MarkerAnnotation[158320-158329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[157370-157376]:Modifier[158342-158348]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[157377-157381]:PrimitiveType[158349-158353]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[157382-157385]:SimpleName[158354-158357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157388-157531]:Block[158360-158503]"
    }, {
      "left" : "moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, true,\n                        listener);",
      "right" : "moveOrCopyMessageSynchronous(account, srcFolder, messages, destFolder, true,\n                        listener);",
      "info" : "ExpressionStatement[157406-157517]:ExpressionStatement[158378-158489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[157555-157561]:Modifier[158527-158533]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[157562-157566]:PrimitiveType[158534-158538]"
    }, {
      "left" : "copyMessagesInThread",
      "right" : "copyMessagesInThread",
      "info" : "SimpleName[157567-157587]:SimpleName[158539-158559]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[157588-157609]:SingleVariableDeclaration[158560-158581]"
    }, {
      "left" : "final String srcFolder",
      "right" : "final String srcFolder",
      "info" : "SingleVariableDeclaration[157611-157633]:SingleVariableDeclaration[158583-158605]"
    }, {
      "left" : "final List<? extends Message> messages",
      "right" : "final List<? extends Message> messages",
      "info" : "SingleVariableDeclaration[157647-157685]:SingleVariableDeclaration[158619-158657]"
    }, {
      "left" : "final String destFolder",
      "right" : "final String destFolder",
      "info" : "SingleVariableDeclaration[157687-157710]:SingleVariableDeclaration[158659-158682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157712-158283]:Block[158684-159255]"
    }, {
      "left" : "putBackground(\"copyMessagesInThread\", null, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    List<Message> messagesInThreads = collectMessagesInThreads(account, messages);\n                    moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            true, null);\n                } catch (MessagingException e) {\n                    addErrorMessage(account, \"Exception while copying messages\", e);\n                }\n            }\n        });",
      "right" : "putBackground(\"copyMessagesInThread\", null, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    List<Message> messagesInThreads = collectMessagesInThreads(account, messages);\n                    moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            true, null);\n                } catch (MessagingException e) {\n                    addErrorMessage(account, \"Exception while copying messages\", e);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[157723-158277]:ExpressionStatement[158695-159249]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[157796-157805]:MarkerAnnotation[158768-158777]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[157818-157824]:Modifier[158790-158796]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[157825-157829]:PrimitiveType[158797-158801]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[157830-157833]:SimpleName[158802-158805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157836-158265]:Block[158808-159237]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[157854-158251]:TryStatement[158826-159223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157858-158117]:Block[158830-159089]"
    }, {
      "left" : "List<Message> messagesInThreads = collectMessagesInThreads(account, messages);",
      "right" : "List<Message> messagesInThreads = collectMessagesInThreads(account, messages);",
      "info" : "VariableDeclarationStatement[157880-157958]:VariableDeclarationStatement[158852-158930]"
    }, {
      "left" : "moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            true, null);",
      "right" : "moveOrCopyMessageSynchronous(account, srcFolder, messagesInThreads, destFolder,\n                            true, null);",
      "info" : "ExpressionStatement[157979-158099]:ExpressionStatement[158951-159071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158147-158251]:Block[159119-159223]"
    }, {
      "left" : "addErrorMessage(account, \"Exception while copying messages\", e);",
      "right" : "addErrorMessage(account, \"Exception while copying messages\", e);",
      "info" : "ExpressionStatement[158169-158233]:ExpressionStatement[159141-159205]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[158289-158295]:Modifier[159261-159267]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[158296-158300]:PrimitiveType[159268-159272]"
    }, {
      "left" : "copyMessage",
      "right" : "copyMessage",
      "info" : "SimpleName[158301-158312]:SimpleName[159273-159284]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[158313-158334]:SingleVariableDeclaration[159285-159306]"
    }, {
      "left" : "final String srcFolder",
      "right" : "final String srcFolder",
      "info" : "SingleVariableDeclaration[158336-158358]:SingleVariableDeclaration[159308-159330]"
    }, {
      "left" : "final Message message",
      "right" : "final Message message",
      "info" : "SingleVariableDeclaration[158360-158381]:SingleVariableDeclaration[159332-159353]"
    }, {
      "left" : "final String destFolder",
      "right" : "final String destFolder",
      "info" : "SingleVariableDeclaration[158395-158418]:SingleVariableDeclaration[159367-159390]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[158420-158452]:SingleVariableDeclaration[159392-159424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158454-158562]:Block[159426-159534]"
    }, {
      "left" : "copyMessages(account, srcFolder, Collections.singletonList(message), destFolder, listener);",
      "right" : "copyMessages(account, srcFolder, Collections.singletonList(message), destFolder, listener);",
      "info" : "ExpressionStatement[158465-158556]:ExpressionStatement[159437-159528]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[158568-158575]:Modifier[159540-159547]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[158576-158580]:PrimitiveType[159548-159552]"
    }, {
      "left" : "moveOrCopyMessageSynchronous",
      "right" : "moveOrCopyMessageSynchronous",
      "info" : "SimpleName[158581-158609]:SimpleName[159553-159581]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[158610-158631]:SingleVariableDeclaration[159582-159603]"
    }, {
      "left" : "final String srcFolder",
      "right" : "final String srcFolder",
      "info" : "SingleVariableDeclaration[158633-158655]:SingleVariableDeclaration[159605-159627]"
    }, {
      "left" : "final List<? extends Message> inMessages",
      "right" : "final List<? extends Message> inMessages",
      "info" : "SingleVariableDeclaration[158669-158709]:SingleVariableDeclaration[159641-159681]"
    }, {
      "left" : "final String destFolder",
      "right" : "final String destFolder",
      "info" : "SingleVariableDeclaration[158711-158734]:SingleVariableDeclaration[159683-159706]"
    }, {
      "left" : "final boolean isCopy",
      "right" : "final boolean isCopy",
      "info" : "SingleVariableDeclaration[158736-158756]:SingleVariableDeclaration[159708-159728]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[158770-158796]:SingleVariableDeclaration[159742-159768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158798-163275]:Block[159770-164247]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[158809-163269]:TryStatement[159781-164241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158813-162889]:Block[159785-163861]"
    }, {
      "left" : "Map<String, String> uidMap = new HashMap<String, String>();",
      "right" : "Map<String, String> uidMap = new HashMap<String, String>();",
      "info" : "VariableDeclarationStatement[158827-158886]:VariableDeclarationStatement[159799-159858]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[158899-158942]:VariableDeclarationStatement[159871-159914]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[158955-159000]:VariableDeclarationStatement[159927-159972]"
    }, {
      "left" : "if (!isCopy && (!remoteStore.isMoveCapable() || !localStore.isMoveCapable()))",
      "right" : "if (!isCopy && (!remoteStore.isMoveCapable() || !localStore.isMoveCapable()))",
      "info" : "IfStatement[159013-159130]:IfStatement[159985-160102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159091-159130]:Block[160063-160102]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[159109-159116]:ReturnStatement[160081-160088]"
    }, {
      "left" : "if (isCopy && (!remoteStore.isCopyCapable() || !localStore.isCopyCapable()))",
      "right" : "if (isCopy && (!remoteStore.isCopyCapable() || !localStore.isCopyCapable()))",
      "info" : "IfStatement[159143-159259]:IfStatement[160115-160231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159220-159259]:Block[160192-160231]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[159238-159245]:ReturnStatement[160210-160217]"
    }, {
      "left" : "Folder localSrcFolder = localStore.getFolder(srcFolder);",
      "right" : "Folder localSrcFolder = localStore.getFolder(srcFolder);",
      "info" : "VariableDeclarationStatement[159273-159329]:VariableDeclarationStatement[160245-160301]"
    }, {
      "left" : "Folder localDestFolder = localStore.getFolder(destFolder);",
      "right" : "Folder localDestFolder = localStore.getFolder(destFolder);",
      "info" : "VariableDeclarationStatement[159342-159400]:VariableDeclarationStatement[160314-160372]"
    }, {
      "left" : "boolean unreadCountAffected = false;",
      "right" : "boolean unreadCountAffected = false;",
      "info" : "VariableDeclarationStatement[159414-159450]:VariableDeclarationStatement[160386-160422]"
    }, {
      "left" : "List<String> uids = new LinkedList<String>();",
      "right" : "List<String> uids = new LinkedList<String>();",
      "info" : "VariableDeclarationStatement[159463-159508]:VariableDeclarationStatement[160435-160480]"
    }, {
      "left" : "for (Message message : inMessages)",
      "right" : "for (Message message : inMessages)",
      "info" : "EnhancedForStatement[159521-159871]:EnhancedForStatement[160493-160843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159556-159871]:Block[160528-160843]"
    }, {
      "left" : "String uid = message.getUid();",
      "right" : "String uid = message.getUid();",
      "info" : "VariableDeclarationStatement[159574-159604]:VariableDeclarationStatement[160546-160576]"
    }, {
      "left" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "right" : "if (!uid.startsWith(K9.LOCAL_UID_PREFIX))",
      "info" : "IfStatement[159621-159717]:IfStatement[160593-160689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159663-159717]:Block[160635-160689]"
    }, {
      "left" : "uids.add(uid);",
      "right" : "uids.add(uid);",
      "info" : "ExpressionStatement[159685-159699]:ExpressionStatement[160657-160671]"
    }, {
      "left" : "if (!unreadCountAffected && !message.isSet(Flag.SEEN))",
      "right" : "if (!unreadCountAffected && !message.isSet(Flag.SEEN))",
      "info" : "IfStatement[159735-159857]:IfStatement[160707-160829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159790-159857]:Block[160762-160829]"
    }, {
      "left" : "unreadCountAffected = true;",
      "right" : "unreadCountAffected = true;",
      "info" : "ExpressionStatement[159812-159839]:ExpressionStatement[160784-160811]"
    }, {
      "left" : "List<? extends Message> messages = localSrcFolder.getMessages(uids.toArray(EMPTY_STRING_ARRAY), null);",
      "right" : "List<? extends Message> messages = localSrcFolder.getMessages(uids.toArray(EMPTY_STRING_ARRAY), null);",
      "info" : "VariableDeclarationStatement[159885-159987]:VariableDeclarationStatement[160857-160959]"
    }, {
      "left" : "if (messages.size() > 0)",
      "right" : "if (messages.size() > 0)",
      "info" : "IfStatement[160000-162833]:IfStatement[160972-163805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160025-162833]:Block[160997-163805]"
    }, {
      "left" : "Map<String, Message> origUidMap = new HashMap<String, Message>();",
      "right" : "Map<String, Message> origUidMap = new HashMap<String, Message>();",
      "info" : "VariableDeclarationStatement[160043-160108]:VariableDeclarationStatement[161015-161080]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[160126-160241]:EnhancedForStatement[161098-161213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160159-160241]:Block[161131-161213]"
    }, {
      "left" : "origUidMap.put(message.getUid(), message);",
      "right" : "origUidMap.put(message.getUid(), message);",
      "info" : "ExpressionStatement[160181-160223]:ExpressionStatement[161153-161195]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[160259-160506]:IfStatement[161231-161478]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"moveOrCopyMessageSynchronous: source folder = \" + srcFolder\n                          + \", \" + messages.size() + \" messages, \" + \", destination folder = \" + destFolder + \", isCopy = \" + isCopy);",
      "right" : "Log.i(K9.LOG_TAG, \"moveOrCopyMessageSynchronous: source folder = \" + srcFolder\n                          + \", \" + messages.size() + \" messages, \" + \", destination folder = \" + destFolder + \", isCopy = \" + isCopy);",
      "info" : "ExpressionStatement[160293-160506]:ExpressionStatement[161265-161478]"
    }, {
      "left" : "if (isCopy)",
      "right" : "if (isCopy)",
      "info" : "IfStatement[160524-162688]:IfStatement[161496-163660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160536-161366]:Block[161508-162338]"
    }, {
      "left" : "FetchProfile fp = new FetchProfile();",
      "right" : "FetchProfile fp = new FetchProfile();",
      "info" : "VariableDeclarationStatement[160558-160595]:VariableDeclarationStatement[161530-161567]"
    }, {
      "left" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "right" : "fp.add(FetchProfile.Item.ENVELOPE);",
      "info" : "ExpressionStatement[160616-160651]:ExpressionStatement[161588-161623]"
    }, {
      "left" : "fp.add(FetchProfile.Item.BODY);",
      "right" : "fp.add(FetchProfile.Item.BODY);",
      "info" : "ExpressionStatement[160672-160703]:ExpressionStatement[161644-161675]"
    }, {
      "left" : "localSrcFolder.fetch(messages, fp, null);",
      "right" : "localSrcFolder.fetch(messages, fp, null);",
      "info" : "ExpressionStatement[160724-160765]:ExpressionStatement[161696-161737]"
    }, {
      "left" : "uidMap = localSrcFolder.copyMessages(messages, localDestFolder);",
      "right" : "uidMap = localSrcFolder.copyMessages(messages, localDestFolder);",
      "info" : "ExpressionStatement[160786-160850]:ExpressionStatement[161758-161822]"
    }, {
      "left" : "if (unreadCountAffected)",
      "right" : "if (unreadCountAffected)",
      "info" : "IfStatement[160872-161348]:IfStatement[161844-162320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160897-161348]:Block[161869-162320]"
    }, {
      "left" : "int unreadMessageCount = localDestFolder.getUnreadMessageCount();",
      "right" : "int unreadMessageCount = localDestFolder.getUnreadMessageCount();",
      "info" : "VariableDeclarationStatement[161074-161139]:VariableDeclarationStatement[162046-162111]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[161164-161326]:EnhancedForStatement[162136-162298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161207-161326]:Block[162179-162298]"
    }, {
      "left" : "l.folderStatusChanged(account, destFolder, unreadMessageCount);",
      "right" : "l.folderStatusChanged(account, destFolder, unreadMessageCount);",
      "info" : "ExpressionStatement[161237-161300]:ExpressionStatement[162209-162272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161372-162688]:Block[162344-163660]"
    }, {
      "left" : "uidMap = localSrcFolder.moveMessages(messages, localDestFolder);",
      "right" : "uidMap = localSrcFolder.moveMessages(messages, localDestFolder);",
      "info" : "ExpressionStatement[161394-161458]:ExpressionStatement[162366-162430]"
    }, {
      "left" : "for (Map.Entry<String, Message> entry : origUidMap.entrySet())",
      "right" : "for (Map.Entry<String, Message> entry : origUidMap.entrySet())",
      "info" : "EnhancedForStatement[161479-161873]:EnhancedForStatement[162451-162845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161542-161873]:Block[162514-162845]"
    }, {
      "left" : "String origUid = entry.getKey();",
      "right" : "String origUid = entry.getKey();",
      "info" : "VariableDeclarationStatement[161568-161600]:VariableDeclarationStatement[162540-162572]"
    }, {
      "left" : "Message message = entry.getValue();",
      "right" : "Message message = entry.getValue();",
      "info" : "VariableDeclarationStatement[161625-161660]:VariableDeclarationStatement[162597-162632]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[161685-161851]:EnhancedForStatement[162657-162823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161728-161851]:Block[162700-162823]"
    }, {
      "left" : "l.messageUidChanged(account, srcFolder, origUid, message.getUid());",
      "right" : "l.messageUidChanged(account, srcFolder, origUid, message.getUid());",
      "info" : "ExpressionStatement[161758-161825]:ExpressionStatement[162730-162797]"
    }, {
      "left" : "unsuppressMessages(account, messages);",
      "right" : "unsuppressMessages(account, messages);",
      "info" : "ExpressionStatement[161894-161932]:ExpressionStatement[162866-162904]"
    }, {
      "left" : "if (unreadCountAffected)",
      "right" : "if (unreadCountAffected)",
      "info" : "IfStatement[161954-162670]:IfStatement[162926-163642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161979-162670]:Block[162951-163642]"
    }, {
      "left" : "int unreadMessageCountSrc = localSrcFolder.getUnreadMessageCount();",
      "right" : "int unreadMessageCountSrc = localSrcFolder.getUnreadMessageCount();",
      "info" : "VariableDeclarationStatement[162202-162269]:VariableDeclarationStatement[163174-163241]"
    }, {
      "left" : "int unreadMessageCountDest = localDestFolder.getUnreadMessageCount();",
      "right" : "int unreadMessageCountDest = localDestFolder.getUnreadMessageCount();",
      "info" : "VariableDeclarationStatement[162294-162363]:VariableDeclarationStatement[163266-163335]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[162388-162648]:EnhancedForStatement[163360-163620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162431-162648]:Block[163403-163620]"
    }, {
      "left" : "l.folderStatusChanged(account, srcFolder, unreadMessageCountSrc);",
      "right" : "l.folderStatusChanged(account, srcFolder, unreadMessageCountSrc);",
      "info" : "ExpressionStatement[162461-162526]:ExpressionStatement[163433-163498]"
    }, {
      "left" : "l.folderStatusChanged(account, destFolder, unreadMessageCountDest);",
      "right" : "l.folderStatusChanged(account, destFolder, unreadMessageCountDest);",
      "info" : "ExpressionStatement[162555-162622]:ExpressionStatement[163527-163594]"
    }, {
      "left" : "queueMoveOrCopy(account, srcFolder, destFolder, isCopy, origUidMap.keySet().toArray(EMPTY_STRING_ARRAY), uidMap);",
      "right" : "queueMoveOrCopy(account, srcFolder, destFolder, isCopy, origUidMap.keySet().toArray(EMPTY_STRING_ARRAY), uidMap);",
      "info" : "ExpressionStatement[162706-162819]:ExpressionStatement[163678-163791]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[162847-162879]:ExpressionStatement[163819-163851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162928-163110]:Block[163900-164082]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to move/copy message because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to move/copy message because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[162942-163046]:ExpressionStatement[163914-164018]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[163059-163100]:ThrowStatement[164031-164072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163141-163269]:Block[164113-164241]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[163155-163190]:ExpressionStatement[164127-164162]"
    }, {
      "left" : "throw new RuntimeException(\"Error moving message\", me);",
      "right" : "throw new RuntimeException(\"Error moving message\", me);",
      "info" : "ThrowStatement[163204-163259]:ThrowStatement[164176-164231]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[163281-163287]:Modifier[164253-164259]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[163288-163292]:PrimitiveType[164260-164264]"
    }, {
      "left" : "expunge",
      "right" : "expunge",
      "info" : "SimpleName[163293-163300]:SimpleName[164265-164272]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[163301-163322]:SingleVariableDeclaration[164273-164294]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[163324-163343]:SingleVariableDeclaration[164296-164315]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[163345-163377]:SingleVariableDeclaration[164317-164349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163379-163569]:Block[164351-164541]"
    }, {
      "left" : "putBackground(\"expunge\", null, new Runnable() {\n            @Override\n            public void run() {\n                queueExpunge(account, folder);\n            }\n        });",
      "right" : "putBackground(\"expunge\", null, new Runnable() {\n            @Override\n            public void run() {\n                queueExpunge(account, folder);\n            }\n        });",
      "info" : "ExpressionStatement[163389-163563]:ExpressionStatement[164361-164535]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[163449-163458]:MarkerAnnotation[164421-164430]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[163471-163477]:Modifier[164443-164449]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[163478-163482]:PrimitiveType[164450-164454]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[163483-163486]:SimpleName[164455-164458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163489-163551]:Block[164461-164523]"
    }, {
      "left" : "queueExpunge(account, folder);",
      "right" : "queueExpunge(account, folder);",
      "info" : "ExpressionStatement[163507-163537]:ExpressionStatement[164479-164509]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[163575-163581]:Modifier[164547-164553]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[163582-163586]:PrimitiveType[164554-164558]"
    }, {
      "left" : "deleteDraft",
      "right" : "deleteDraft",
      "info" : "SimpleName[163587-163598]:SimpleName[164559-164570]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[163599-163620]:SingleVariableDeclaration[164571-164592]"
    }, {
      "left" : "long id",
      "right" : "long id",
      "info" : "SingleVariableDeclaration[163622-163629]:SingleVariableDeclaration[164594-164601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163631-164349]:Block[164603-165321]"
    }, {
      "left" : "LocalFolder localFolder = null;",
      "right" : "LocalFolder localFolder = null;",
      "info" : "VariableDeclarationStatement[163641-163672]:VariableDeclarationStatement[164613-164644]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[163681-164343]:TryStatement[164653-165315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163685-164195]:Block[164657-165167]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[163699-163747]:VariableDeclarationStatement[164671-164719]"
    }, {
      "left" : "localFolder = localStore.getFolder(account.getDraftsFolderName());",
      "right" : "localFolder = localStore.getFolder(account.getDraftsFolderName());",
      "info" : "ExpressionStatement[163760-163826]:ExpressionStatement[164732-164798]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[163839-163877]:ExpressionStatement[164811-164849]"
    }, {
      "left" : "String uid = localFolder.getMessageUidById(id);",
      "right" : "String uid = localFolder.getMessageUidById(id);",
      "info" : "VariableDeclarationStatement[163890-163937]:VariableDeclarationStatement[164862-164909]"
    }, {
      "left" : "if (uid != null)",
      "right" : "if (uid != null)",
      "info" : "IfStatement[163950-164185]:IfStatement[164922-165157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163967-164185]:Block[164939-165157]"
    }, {
      "left" : "LocalMessage message = localFolder.getMessage(uid);",
      "right" : "LocalMessage message = localFolder.getMessage(uid);",
      "info" : "VariableDeclarationStatement[163985-164036]:VariableDeclarationStatement[164957-165008]"
    }, {
      "left" : "if (message != null)",
      "right" : "if (message != null)",
      "info" : "IfStatement[164053-164171]:IfStatement[165025-165143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164074-164171]:Block[165046-165143]"
    }, {
      "left" : "deleteMessages(Collections.singletonList(message), null);",
      "right" : "deleteMessages(Collections.singletonList(message), null);",
      "info" : "ExpressionStatement[164096-164153]:ExpressionStatement[165068-165125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164226-164285]:Block[165198-165257]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[164240-164275]:ExpressionStatement[165212-165247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164294-164343]:Block[165266-165315]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[164308-164333]:ExpressionStatement[165280-165305]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164355-164361]:Modifier[165327-165333]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[164362-164366]:PrimitiveType[165334-165338]"
    }, {
      "left" : "deleteThreads",
      "right" : "deleteThreads",
      "info" : "SimpleName[164367-164380]:SimpleName[165339-165352]"
    }, {
      "left" : "final List<LocalMessage> messages",
      "right" : "final List<LocalMessage> messages",
      "info" : "SingleVariableDeclaration[164381-164414]:SingleVariableDeclaration[165353-165386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164416-164987]:Block[165388-165959]"
    }, {
      "left" : "actOnMessages(messages, new MessageActor() {\n\n            @Override\n            public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages) {\n\n                suppressMessages(account, messages);\n\n                putBackground(\"deleteThreads\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteThreadsSynchronous(account, folder.getName(), accountMessages);\n                    }\n                });\n            }\n        });",
      "right" : "actOnMessages(messages, new MessageActor() {\n\n            @Override\n            public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages) {\n\n                suppressMessages(account, messages);\n\n                putBackground(\"deleteThreads\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteThreadsSynchronous(account, folder.getName(), accountMessages);\n                    }\n                });\n            }\n        });",
      "info" : "ExpressionStatement[164426-164981]:ExpressionStatement[165398-165953]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[164484-164493]:MarkerAnnotation[165456-165465]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164506-164512]:Modifier[165478-165484]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[164513-164517]:PrimitiveType[165485-165489]"
    }, {
      "left" : "act",
      "right" : "act",
      "info" : "SimpleName[164518-164521]:SimpleName[165490-165493]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[164522-164543]:SingleVariableDeclaration[165494-165515]"
    }, {
      "left" : "final Folder folder",
      "right" : "final Folder folder",
      "info" : "SingleVariableDeclaration[164545-164564]:SingleVariableDeclaration[165517-165536]"
    }, {
      "left" : "final List<Message> accountMessages",
      "right" : "final List<Message> accountMessages",
      "info" : "SingleVariableDeclaration[164586-164621]:SingleVariableDeclaration[165558-165593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164623-164969]:Block[165595-165941]"
    }, {
      "left" : "suppressMessages(account, messages);",
      "right" : "suppressMessages(account, messages);",
      "info" : "ExpressionStatement[164642-164678]:ExpressionStatement[165614-165650]"
    }, {
      "left" : "putBackground(\"deleteThreads\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteThreadsSynchronous(account, folder.getName(), accountMessages);\n                    }\n                });",
      "right" : "putBackground(\"deleteThreads\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteThreadsSynchronous(account, folder.getName(), accountMessages);\n                    }\n                });",
      "info" : "ExpressionStatement[164696-164955]:ExpressionStatement[165668-165927]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[164770-164779]:MarkerAnnotation[165742-165751]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164800-164806]:Modifier[165772-165778]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[164807-164811]:PrimitiveType[165779-165783]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[164812-164815]:SimpleName[165784-165787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164818-164935]:Block[165790-165907]"
    }, {
      "left" : "deleteThreadsSynchronous(account, folder.getName(), accountMessages);",
      "right" : "deleteThreadsSynchronous(account, folder.getName(), accountMessages);",
      "info" : "ExpressionStatement[164844-164913]:ExpressionStatement[165816-165885]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164993-164999]:Modifier[165965-165971]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[165000-165004]:PrimitiveType[165972-165976]"
    }, {
      "left" : "deleteThreadsSynchronous",
      "right" : "deleteThreadsSynchronous",
      "info" : "SimpleName[165005-165029]:SimpleName[165977-166001]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[165030-165045]:SingleVariableDeclaration[166002-166017]"
    }, {
      "left" : "String folderName",
      "right" : "String folderName",
      "info" : "SingleVariableDeclaration[165047-165064]:SingleVariableDeclaration[166019-166036]"
    }, {
      "left" : "List<Message> messages",
      "right" : "List<Message> messages",
      "info" : "SingleVariableDeclaration[165078-165100]:SingleVariableDeclaration[166050-166072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165102-165451]:Block[166074-166423]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[165113-165445]:TryStatement[166085-166417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165117-165323]:Block[166089-166295]"
    }, {
      "left" : "List<Message> messagesToDelete = collectMessagesInThreads(account, messages);",
      "right" : "List<Message> messagesToDelete = collectMessagesInThreads(account, messages);",
      "info" : "VariableDeclarationStatement[165131-165208]:VariableDeclarationStatement[166103-166180]"
    }, {
      "left" : "deleteMessagesSynchronous(account, folderName,\n                    messagesToDelete, null);",
      "right" : "deleteMessagesSynchronous(account, folderName,\n                    messagesToDelete, null);",
      "info" : "ExpressionStatement[165222-165313]:ExpressionStatement[166194-166285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165353-165445]:Block[166325-166417]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Something went wrong while deleting threads\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Something went wrong while deleting threads\", e);",
      "info" : "ExpressionStatement[165367-165435]:ExpressionStatement[166339-166407]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[165457-165463]:Modifier[166429-166435]"
    }, {
      "left" : "List<Message>",
      "right" : "List<Message>",
      "info" : "ParameterizedType[165464-165477]:ParameterizedType[166436-166449]"
    }, {
      "left" : "collectMessagesInThreads",
      "right" : "collectMessagesInThreads",
      "info" : "SimpleName[165478-165502]:SimpleName[166450-166474]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[165503-165518]:SingleVariableDeclaration[166475-166490]"
    }, {
      "left" : "List<? extends Message> messages",
      "right" : "List<? extends Message> messages",
      "info" : "SingleVariableDeclaration[165520-165552]:SingleVariableDeclaration[166492-166524]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[165573-165591]:SimpleType[166545-166563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165592-166167]:Block[166564-167139]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[165603-165651]:VariableDeclarationStatement[166575-166623]"
    }, {
      "left" : "List<Message> messagesInThreads = new ArrayList<Message>();",
      "right" : "List<Message> messagesInThreads = new ArrayList<Message>();",
      "info" : "VariableDeclarationStatement[165661-165720]:VariableDeclarationStatement[166633-166692]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[165729-166126]:EnhancedForStatement[166701-167098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165762-166126]:Block[166734-167098]"
    }, {
      "left" : "LocalMessage localMessage = (LocalMessage) message;",
      "right" : "LocalMessage localMessage = (LocalMessage) message;",
      "info" : "VariableDeclarationStatement[165776-165827]:VariableDeclarationStatement[166748-166799]"
    }, {
      "left" : "long rootId = localMessage.getRootId();",
      "right" : "long rootId = localMessage.getRootId();",
      "info" : "VariableDeclarationStatement[165840-165879]:VariableDeclarationStatement[166812-166851]"
    }, {
      "left" : "long threadId = (rootId == -1) ? localMessage.getThreadId() : rootId;",
      "right" : "long threadId = (rootId == -1) ? localMessage.getThreadId() : rootId;",
      "info" : "VariableDeclarationStatement[165892-165961]:VariableDeclarationStatement[166864-166933]"
    }, {
      "left" : "List<? extends Message> messagesInThread = localStore.getMessagesInThread(threadId);",
      "right" : "List<? extends Message> messagesInThread = localStore.getMessagesInThread(threadId);",
      "info" : "VariableDeclarationStatement[165975-166059]:VariableDeclarationStatement[166947-167031]"
    }, {
      "left" : "messagesInThreads.addAll(messagesInThread);",
      "right" : "messagesInThreads.addAll(messagesInThread);",
      "info" : "ExpressionStatement[166073-166116]:ExpressionStatement[167045-167088]"
    }, {
      "left" : "return messagesInThreads;",
      "right" : "return messagesInThreads;",
      "info" : "ReturnStatement[166136-166161]:ReturnStatement[167108-167133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[166173-166179]:Modifier[167145-167151]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[166180-166184]:PrimitiveType[167152-167156]"
    }, {
      "left" : "deleteMessages",
      "right" : "deleteMessages",
      "info" : "SimpleName[166185-166199]:SimpleName[167157-167171]"
    }, {
      "left" : "final List<LocalMessage> messages",
      "right" : "final List<LocalMessage> messages",
      "info" : "SingleVariableDeclaration[166200-166233]:SingleVariableDeclaration[167172-167205]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[166235-166267]:SingleVariableDeclaration[167207-167239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166269-166885]:Block[167241-167857]"
    }, {
      "left" : "actOnMessages(messages, new MessageActor() {\n\n            @Override\n            public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages) {\n                suppressMessages(account, messages);\n\n                putBackground(\"deleteMessages\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteMessagesSynchronous(account, folder.getName(),\n                                accountMessages, listener);\n                    }\n                });\n            }\n\n        });",
      "right" : "actOnMessages(messages, new MessageActor() {\n\n            @Override\n            public void act(final Account account, final Folder folder,\n                    final List<Message> accountMessages) {\n                suppressMessages(account, messages);\n\n                putBackground(\"deleteMessages\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteMessagesSynchronous(account, folder.getName(),\n                                accountMessages, listener);\n                    }\n                });\n            }\n\n        });",
      "info" : "ExpressionStatement[166279-166878]:ExpressionStatement[167251-167850]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[166337-166346]:MarkerAnnotation[167309-167318]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[166359-166365]:Modifier[167331-167337]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[166366-166370]:PrimitiveType[167338-167342]"
    }, {
      "left" : "act",
      "right" : "act",
      "info" : "SimpleName[166371-166374]:SimpleName[167343-167346]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[166375-166396]:SingleVariableDeclaration[167347-167368]"
    }, {
      "left" : "final Folder folder",
      "right" : "final Folder folder",
      "info" : "SingleVariableDeclaration[166398-166417]:SingleVariableDeclaration[167370-167389]"
    }, {
      "left" : "final List<Message> accountMessages",
      "right" : "final List<Message> accountMessages",
      "info" : "SingleVariableDeclaration[166439-166474]:SingleVariableDeclaration[167411-167446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166476-166865]:Block[167448-167837]"
    }, {
      "left" : "suppressMessages(account, messages);",
      "right" : "suppressMessages(account, messages);",
      "info" : "ExpressionStatement[166494-166530]:ExpressionStatement[167466-167502]"
    }, {
      "left" : "putBackground(\"deleteMessages\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteMessagesSynchronous(account, folder.getName(),\n                                accountMessages, listener);\n                    }\n                });",
      "right" : "putBackground(\"deleteMessages\", null, new Runnable() {\n                    @Override\n                    public void run() {\n                        deleteMessagesSynchronous(account, folder.getName(),\n                                accountMessages, listener);\n                    }\n                });",
      "info" : "ExpressionStatement[166548-166851]:ExpressionStatement[167520-167823]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[166623-166632]:MarkerAnnotation[167595-167604]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[166653-166659]:Modifier[167625-167631]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[166660-166664]:PrimitiveType[167632-167636]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[166665-166668]:SimpleName[167637-167640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166671-166831]:Block[167643-167803]"
    }, {
      "left" : "deleteMessagesSynchronous(account, folder.getName(),\n                                accountMessages, listener);",
      "right" : "deleteMessagesSynchronous(account, folder.getName(),\n                                accountMessages, listener);",
      "info" : "ExpressionStatement[166697-166809]:ExpressionStatement[167669-167781]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[166891-166898]:Modifier[167863-167870]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[166899-166903]:PrimitiveType[167871-167875]"
    }, {
      "left" : "deleteMessagesSynchronous",
      "right" : "deleteMessagesSynchronous",
      "info" : "SimpleName[166904-166929]:SimpleName[167876-167901]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[166930-166951]:SingleVariableDeclaration[167902-167923]"
    }, {
      "left" : "final String folder",
      "right" : "final String folder",
      "info" : "SingleVariableDeclaration[166953-166972]:SingleVariableDeclaration[167925-167944]"
    }, {
      "left" : "final List<? extends Message> messages",
      "right" : "final List<? extends Message> messages",
      "info" : "SingleVariableDeclaration[166974-167012]:SingleVariableDeclaration[167946-167984]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[167057-167083]:SingleVariableDeclaration[168029-168055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167085-171277]:Block[168057-172249]"
    }, {
      "left" : "Folder localFolder = null;",
      "right" : "Folder localFolder = null;",
      "info" : "VariableDeclarationStatement[167095-167121]:VariableDeclarationStatement[168067-168093]"
    }, {
      "left" : "Folder localTrashFolder = null;",
      "right" : "Folder localTrashFolder = null;",
      "info" : "VariableDeclarationStatement[167130-167161]:VariableDeclarationStatement[168102-168133]"
    }, {
      "left" : "String[] uids = getUidsFromMessages(messages);",
      "right" : "String[] uids = getUidsFromMessages(messages);",
      "info" : "VariableDeclarationStatement[167170-167216]:VariableDeclarationStatement[168142-168188]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[167225-171271]:TryStatement[168197-172243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167229-170773]:Block[168201-171745]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[167387-167586]:EnhancedForStatement[168359-168558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167420-167586]:Block[168392-168558]"
    }, {
      "left" : "for (MessagingListener l : getListeners(listener))",
      "right" : "for (MessagingListener l : getListeners(listener))",
      "info" : "EnhancedForStatement[167438-167572]:EnhancedForStatement[168410-168544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167489-167572]:Block[168461-168544]"
    }, {
      "left" : "l.messageDeleted(account, folder, message);",
      "right" : "l.messageDeleted(account, folder, message);",
      "info" : "ExpressionStatement[167511-167554]:ExpressionStatement[168483-168526]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[167599-167642]:VariableDeclarationStatement[168571-168614]"
    }, {
      "left" : "localFolder = localStore.getFolder(folder);",
      "right" : "localFolder = localStore.getFolder(folder);",
      "info" : "ExpressionStatement[167655-167698]:ExpressionStatement[168627-168670]"
    }, {
      "left" : "Map<String, String> uidMap = null;",
      "right" : "Map<String, String> uidMap = null;",
      "info" : "VariableDeclarationStatement[167711-167745]:VariableDeclarationStatement[168683-168717]"
    }, {
      "left" : "if (folder.equals(account.getTrashFolderName()) || !account.hasTrashFolder())",
      "right" : "if (folder.equals(account.getTrashFolderName()) || !account.hasTrashFolder())",
      "info" : "IfStatement[167758-168615]:IfStatement[168730-169587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167836-168085]:Block[168808-169057]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[167854-167979]:IfStatement[168826-168951]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Deleting messages in trash folder or trash set to -None-, not copying\");",
      "right" : "Log.d(K9.LOG_TAG, \"Deleting messages in trash folder or trash set to -None-, not copying\");",
      "info" : "ExpressionStatement[167888-167979]:ExpressionStatement[168860-168951]"
    }, {
      "left" : "localFolder.setFlags(messages, Collections.singleton(Flag.DELETED), true);",
      "right" : "localFolder.setFlags(messages, Collections.singleton(Flag.DELETED), true);",
      "info" : "ExpressionStatement[167997-168071]:ExpressionStatement[168969-169043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168091-168615]:Block[169063-169587]"
    }, {
      "left" : "localTrashFolder = localStore.getFolder(account.getTrashFolderName());",
      "right" : "localTrashFolder = localStore.getFolder(account.getTrashFolderName());",
      "info" : "ExpressionStatement[168109-168179]:ExpressionStatement[169081-169151]"
    }, {
      "left" : "if (!localTrashFolder.exists())",
      "right" : "if (!localTrashFolder.exists())",
      "info" : "IfStatement[168196-168326]:IfStatement[169168-169298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168228-168326]:Block[169200-169298]"
    }, {
      "left" : "localTrashFolder.create(Folder.FolderType.HOLDS_MESSAGES);",
      "right" : "localTrashFolder.create(Folder.FolderType.HOLDS_MESSAGES);",
      "info" : "ExpressionStatement[168250-168308]:ExpressionStatement[169222-169280]"
    }, {
      "left" : "if (localTrashFolder.exists())",
      "right" : "if (localTrashFolder.exists())",
      "info" : "IfStatement[168343-168601]:IfStatement[169315-169573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168374-168601]:Block[169346-169573]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[168396-168498]:IfStatement[169368-169470]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Deleting messages in normal folder, moving\");",
      "right" : "Log.d(K9.LOG_TAG, \"Deleting messages in normal folder, moving\");",
      "info" : "ExpressionStatement[168434-168498]:ExpressionStatement[169406-169470]"
    }, {
      "left" : "uidMap = localFolder.moveMessages(messages, localTrashFolder);",
      "right" : "uidMap = localFolder.moveMessages(messages, localTrashFolder);",
      "info" : "ExpressionStatement[168520-168582]:ExpressionStatement[169492-169554]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[168629-168970]:EnhancedForStatement[169601-169942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168672-168970]:Block[169644-169942]"
    }, {
      "left" : "l.folderStatusChanged(account, folder, localFolder.getUnreadMessageCount());",
      "right" : "l.folderStatusChanged(account, folder, localFolder.getUnreadMessageCount());",
      "info" : "ExpressionStatement[168690-168766]:ExpressionStatement[169662-169738]"
    }, {
      "left" : "if (localTrashFolder != null)",
      "right" : "if (localTrashFolder != null)",
      "info" : "IfStatement[168783-168956]:IfStatement[169755-169928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168813-168956]:Block[169785-169928]"
    }, {
      "left" : "l.folderStatusChanged(account, account.getTrashFolderName(), localTrashFolder.getUnreadMessageCount());",
      "right" : "l.folderStatusChanged(account, account.getTrashFolderName(), localTrashFolder.getUnreadMessageCount());",
      "info" : "ExpressionStatement[168835-168938]:ExpressionStatement[169807-169910]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[168984-169126]:IfStatement[169956-170098]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Delete policy for account \" + account.getDescription() + \" is \" + account.getDeletePolicy());",
      "right" : "Log.d(K9.LOG_TAG, \"Delete policy for account \" + account.getDescription() + \" is \" + account.getDeletePolicy());",
      "info" : "ExpressionStatement[169014-169126]:ExpressionStatement[169986-170098]"
    }, {
      "left" : "if (folder.equals(account.getOutboxFolderName()))",
      "right" : "if (folder.equals(account.getOutboxFolderName()))",
      "info" : "IfStatement[169140-170711]:IfStatement[170112-171683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169190-169865]:Block[170162-170837]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[169208-169802]:EnhancedForStatement[170180-170774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169241-169802]:Block[170213-170774]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[169420-169466]:VariableDeclarationStatement[170392-170438]"
    }, {
      "left" : "command.command = PENDING_COMMAND_APPEND;",
      "right" : "command.command = PENDING_COMMAND_APPEND;",
      "info" : "ExpressionStatement[169487-169528]:ExpressionStatement[170459-170500]"
    }, {
      "left" : "command.arguments =\n                        new String[] {\n                        account.getTrashFolderName(),\n                        message.getUid()\n                    };",
      "right" : "command.arguments =\n                        new String[] {\n                        account.getTrashFolderName(),\n                        message.getUid()\n                    };",
      "info" : "ExpressionStatement[169549-169725]:ExpressionStatement[170521-170697]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[169746-169784]:ExpressionStatement[170718-170756]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[169819-169851]:ExpressionStatement[170791-170823]"
    }, {
      "left" : "if (account.getDeletePolicy() == DeletePolicy.ON_DELETE)",
      "right" : "if (account.getDeletePolicy() == DeletePolicy.ON_DELETE)",
      "info" : "IfStatement[169871-170711]:IfStatement[170843-171683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169928-170313]:Block[170900-171285]"
    }, {
      "left" : "if (folder.equals(account.getTrashFolderName()))",
      "right" : "if (folder.equals(account.getTrashFolderName()))",
      "info" : "IfStatement[169946-170250]:IfStatement[170918-171222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169995-170120]:Block[170967-171092]"
    }, {
      "left" : "queueSetFlag(account, folder, Boolean.toString(true), Flag.DELETED.toString(), uids);",
      "right" : "queueSetFlag(account, folder, Boolean.toString(true), Flag.DELETED.toString(), uids);",
      "info" : "ExpressionStatement[170017-170102]:ExpressionStatement[170989-171074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170126-170250]:Block[171098-171222]"
    }, {
      "left" : "queueMoveOrCopy(account, folder, account.getTrashFolderName(), false, uids, uidMap);",
      "right" : "queueMoveOrCopy(account, folder, account.getTrashFolderName(), false, uids, uidMap);",
      "info" : "ExpressionStatement[170148-170232]:ExpressionStatement[171120-171204]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[170267-170299]:ExpressionStatement[171239-171271]"
    }, {
      "left" : "if (account.getDeletePolicy() == DeletePolicy.MARK_AS_READ)",
      "right" : "if (account.getDeletePolicy() == DeletePolicy.MARK_AS_READ)",
      "info" : "IfStatement[170319-170711]:IfStatement[171291-171683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170379-170542]:Block[171351-171514]"
    }, {
      "left" : "queueSetFlag(account, folder, Boolean.toString(true), Flag.SEEN.toString(), uids);",
      "right" : "queueSetFlag(account, folder, Boolean.toString(true), Flag.SEEN.toString(), uids);",
      "info" : "ExpressionStatement[170397-170479]:ExpressionStatement[171369-171451]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[170496-170528]:ExpressionStatement[171468-171500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170548-170711]:Block[171520-171683]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[170566-170697]:IfStatement[171538-171669]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Delete policy \" + account.getDeletePolicy() + \" prevents delete from server\");",
      "right" : "Log.d(K9.LOG_TAG, \"Delete policy \" + account.getDeletePolicy() + \" prevents delete from server\");",
      "info" : "ExpressionStatement[170600-170697]:ExpressionStatement[171572-171669]"
    }, {
      "left" : "unsuppressMessages(account, messages);",
      "right" : "unsuppressMessages(account, messages);",
      "info" : "ExpressionStatement[170725-170763]:ExpressionStatement[171697-171735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170812-170991]:Block[171784-171963]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to delete message because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to delete message because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[170826-170927]:ExpressionStatement[171798-171899]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[170940-170981]:ThrowStatement[171912-171953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171022-171170]:Block[171994-172142]"
    }, {
      "left" : "addErrorMessage(account, null, me);",
      "right" : "addErrorMessage(account, null, me);",
      "info" : "ExpressionStatement[171036-171071]:ExpressionStatement[172008-172043]"
    }, {
      "left" : "throw new RuntimeException(\"Error deleting message from local store.\", me);",
      "right" : "throw new RuntimeException(\"Error deleting message from local store.\", me);",
      "info" : "ThrowStatement[171085-171160]:ThrowStatement[172057-172132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171179-171271]:Block[172151-172243]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[171193-171218]:ExpressionStatement[172165-172190]"
    }, {
      "left" : "closeFolder(localTrashFolder);",
      "right" : "closeFolder(localTrashFolder);",
      "info" : "ExpressionStatement[171231-171261]:ExpressionStatement[172203-172233]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[171283-171290]:Modifier[172255-172262]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[171291-171299]:ArrayType[172263-172271]"
    }, {
      "left" : "getUidsFromMessages",
      "right" : "getUidsFromMessages",
      "info" : "SimpleName[171300-171319]:SimpleName[172272-172291]"
    }, {
      "left" : "List <? extends Message> messages",
      "right" : "List <? extends Message> messages",
      "info" : "SingleVariableDeclaration[171320-171353]:SingleVariableDeclaration[172292-172325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171355-171546]:Block[172327-172518]"
    }, {
      "left" : "String[] uids = new String[messages.size()];",
      "right" : "String[] uids = new String[messages.size()];",
      "info" : "VariableDeclarationStatement[171365-171409]:VariableDeclarationStatement[172337-172381]"
    }, {
      "left" : "for (int i = 0; i < messages.size(); i++)",
      "right" : "for (int i = 0; i < messages.size(); i++)",
      "info" : "ForStatement[171418-171519]:ForStatement[172390-172491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171460-171519]:Block[172432-172491]"
    }, {
      "left" : "uids[i] = messages.get(i).getUid();",
      "right" : "uids[i] = messages.get(i).getUid();",
      "info" : "ExpressionStatement[171474-171509]:ExpressionStatement[172446-172481]"
    }, {
      "left" : "return uids;",
      "right" : "return uids;",
      "info" : "ReturnStatement[171528-171540]:ReturnStatement[172500-172512]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[171552-171559]:Modifier[172524-172531]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[171560-171564]:PrimitiveType[172532-172536]"
    }, {
      "left" : "processPendingEmptyTrash",
      "right" : "processPendingEmptyTrash",
      "info" : "SimpleName[171565-171589]:SimpleName[172537-172561]"
    }, {
      "left" : "PendingCommand command",
      "right" : "PendingCommand command",
      "info" : "SingleVariableDeclaration[171590-171612]:SingleVariableDeclaration[172562-172584]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[171614-171629]:SingleVariableDeclaration[172586-172601]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[171638-171656]:SimpleType[172610-172628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171657-172482]:Block[172629-173454]"
    }, {
      "left" : "Store remoteStore = account.getRemoteStore();",
      "right" : "Store remoteStore = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[171667-171712]:VariableDeclarationStatement[172639-172684]"
    }, {
      "left" : "Folder remoteFolder = remoteStore.getFolder(account.getTrashFolderName());",
      "right" : "Folder remoteFolder = remoteStore.getFolder(account.getTrashFolderName());",
      "info" : "VariableDeclarationStatement[171722-171796]:VariableDeclarationStatement[172694-172768]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[171805-172476]:TryStatement[172777-173448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171809-172417]:Block[172781-173389]"
    }, {
      "left" : "if (remoteFolder.exists())",
      "right" : "if (remoteFolder.exists())",
      "info" : "IfStatement[171823-172407]:IfStatement[172795-173379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171850-172407]:Block[172822-173379]"
    }, {
      "left" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "remoteFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[171868-171907]:ExpressionStatement[172840-172879]"
    }, {
      "left" : "remoteFolder.setFlags(Collections.singleton(Flag.DELETED), true);",
      "right" : "remoteFolder.setFlags(Collections.singleton(Flag.DELETED), true);",
      "info" : "ExpressionStatement[171924-171989]:ExpressionStatement[172896-172961]"
    }, {
      "left" : "if (Expunge.EXPUNGE_IMMEDIATELY == account.getExpungePolicy())",
      "right" : "if (Expunge.EXPUNGE_IMMEDIATELY == account.getExpungePolicy())",
      "info" : "IfStatement[172006-172132]:IfStatement[172978-173104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172069-172132]:Block[173041-173104]"
    }, {
      "left" : "remoteFolder.expunge();",
      "right" : "remoteFolder.expunge();",
      "info" : "ExpressionStatement[172091-172114]:ExpressionStatement[173063-173086]"
    }, {
      "left" : "synchronizeFolder(account, remoteFolder, true, 0, null);",
      "right" : "synchronizeFolder(account, remoteFolder, true, 0, null);",
      "info" : "ExpressionStatement[172295-172351]:ExpressionStatement[173267-173323]"
    }, {
      "left" : "compact(account, null);",
      "right" : "compact(account, null);",
      "info" : "ExpressionStatement[172368-172391]:ExpressionStatement[173340-173363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172426-172476]:Block[173398-173448]"
    }, {
      "left" : "closeFolder(remoteFolder);",
      "right" : "closeFolder(remoteFolder);",
      "info" : "ExpressionStatement[172440-172466]:ExpressionStatement[173412-173438]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[172488-172494]:Modifier[173460-173466]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[172495-172499]:PrimitiveType[173467-173471]"
    }, {
      "left" : "emptyTrash",
      "right" : "emptyTrash",
      "info" : "SimpleName[172500-172510]:SimpleName[173472-173482]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[172511-172532]:SingleVariableDeclaration[173483-173504]"
    }, {
      "left" : "MessagingListener listener",
      "right" : "MessagingListener listener",
      "info" : "SingleVariableDeclaration[172534-172560]:SingleVariableDeclaration[173506-173532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172562-174430]:Block[173534-175402]"
    }, {
      "left" : "putBackground(\"emptyTrash\", listener, new Runnable() {\n            @Override\n            public void run() {\n                LocalFolder localFolder = null;\n                try {\n                    Store localStore = account.getLocalStore();\n                    localFolder = (LocalFolder) localStore.getFolder(account.getTrashFolderName());\n                    localFolder.open(Folder.OPEN_MODE_RW);\n\n                    boolean isTrashLocalOnly = isTrashLocalOnly(account);\n                    if (isTrashLocalOnly) {\n                        localFolder.clearAllMessages();\n                    } else {\n                        localFolder.setFlags(Collections.singleton(Flag.DELETED), true);\n                    }\n\n                    for (MessagingListener l : getListeners()) {\n                        l.emptyTrashCompleted(account);\n                    }\n\n                    if (!isTrashLocalOnly) {\n                        List<String> args = new ArrayList<String>();\n                        PendingCommand command = new PendingCommand();\n                        command.command = PENDING_COMMAND_EMPTY_TRASH;\n                        command.arguments = args.toArray(EMPTY_STRING_ARRAY);\n                        queuePendingCommand(account, command);\n                        processPendingCommands(account);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to empty trash because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"emptyTrash failed\", e);\n                    addErrorMessage(account, null, e);\n                } finally {\n                    closeFolder(localFolder);\n                }\n            }\n        });",
      "right" : "putBackground(\"emptyTrash\", listener, new Runnable() {\n            @Override\n            public void run() {\n                LocalFolder localFolder = null;\n                try {\n                    Store localStore = account.getLocalStore();\n                    localFolder = (LocalFolder) localStore.getFolder(account.getTrashFolderName());\n                    localFolder.open(Folder.OPEN_MODE_RW);\n\n                    boolean isTrashLocalOnly = isTrashLocalOnly(account);\n                    if (isTrashLocalOnly) {\n                        localFolder.clearAllMessages();\n                    } else {\n                        localFolder.setFlags(Collections.singleton(Flag.DELETED), true);\n                    }\n\n                    for (MessagingListener l : getListeners()) {\n                        l.emptyTrashCompleted(account);\n                    }\n\n                    if (!isTrashLocalOnly) {\n                        List<String> args = new ArrayList<String>();\n                        PendingCommand command = new PendingCommand();\n                        command.command = PENDING_COMMAND_EMPTY_TRASH;\n                        command.arguments = args.toArray(EMPTY_STRING_ARRAY);\n                        queuePendingCommand(account, command);\n                        processPendingCommands(account);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to empty trash because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"emptyTrash failed\", e);\n                    addErrorMessage(account, null, e);\n                } finally {\n                    closeFolder(localFolder);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[172572-174424]:ExpressionStatement[173544-175396]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[172639-172648]:MarkerAnnotation[173611-173620]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[172661-172667]:Modifier[173633-173639]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[172668-172672]:PrimitiveType[173640-173644]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[172673-172676]:SimpleName[173645-173648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172679-174412]:Block[173651-175384]"
    }, {
      "left" : "LocalFolder localFolder = null;",
      "right" : "LocalFolder localFolder = null;",
      "info" : "VariableDeclarationStatement[172697-172728]:VariableDeclarationStatement[173669-173700]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[172745-174398]:TryStatement[173717-175370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172749-173927]:Block[173721-174899]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[172771-172814]:VariableDeclarationStatement[173743-173786]"
    }, {
      "left" : "localFolder = (LocalFolder) localStore.getFolder(account.getTrashFolderName());",
      "right" : "localFolder = (LocalFolder) localStore.getFolder(account.getTrashFolderName());",
      "info" : "ExpressionStatement[172835-172914]:ExpressionStatement[173807-173886]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[172935-172973]:ExpressionStatement[173907-173945]"
    }, {
      "left" : "boolean isTrashLocalOnly = isTrashLocalOnly(account);",
      "right" : "boolean isTrashLocalOnly = isTrashLocalOnly(account);",
      "info" : "VariableDeclarationStatement[172995-173048]:VariableDeclarationStatement[173967-174020]"
    }, {
      "left" : "if (isTrashLocalOnly)",
      "right" : "if (isTrashLocalOnly)",
      "info" : "IfStatement[173069-173288]:IfStatement[174041-174260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173091-173170]:Block[174063-174142]"
    }, {
      "left" : "localFolder.clearAllMessages();",
      "right" : "localFolder.clearAllMessages();",
      "info" : "ExpressionStatement[173117-173148]:ExpressionStatement[174089-174120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173176-173288]:Block[174148-174260]"
    }, {
      "left" : "localFolder.setFlags(Collections.singleton(Flag.DELETED), true);",
      "right" : "localFolder.setFlags(Collections.singleton(Flag.DELETED), true);",
      "info" : "ExpressionStatement[173202-173266]:ExpressionStatement[174174-174238]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[173310-173432]:EnhancedForStatement[174282-174404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173353-173432]:Block[174325-174404]"
    }, {
      "left" : "l.emptyTrashCompleted(account);",
      "right" : "l.emptyTrashCompleted(account);",
      "info" : "ExpressionStatement[173379-173410]:ExpressionStatement[174351-174382]"
    }, {
      "left" : "if (!isTrashLocalOnly)",
      "right" : "if (!isTrashLocalOnly)",
      "info" : "IfStatement[173454-173909]:IfStatement[174426-174881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173477-173909]:Block[174449-174881]"
    }, {
      "left" : "List<String> args = new ArrayList<String>();",
      "right" : "List<String> args = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[173503-173547]:VariableDeclarationStatement[174475-174519]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[173572-173618]:VariableDeclarationStatement[174544-174590]"
    }, {
      "left" : "command.command = PENDING_COMMAND_EMPTY_TRASH;",
      "right" : "command.command = PENDING_COMMAND_EMPTY_TRASH;",
      "info" : "ExpressionStatement[173643-173689]:ExpressionStatement[174615-174661]"
    }, {
      "left" : "command.arguments = args.toArray(EMPTY_STRING_ARRAY);",
      "right" : "command.arguments = args.toArray(EMPTY_STRING_ARRAY);",
      "info" : "ExpressionStatement[173714-173767]:ExpressionStatement[174686-174739]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[173792-173830]:ExpressionStatement[174764-174802]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[173855-173887]:ExpressionStatement[174827-174859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173966-174166]:Block[174938-175138]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to empty trash because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to empty trash because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[173988-174086]:ExpressionStatement[174960-175058]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[174107-174148]:ThrowStatement[175079-175120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174187-174324]:Block[175159-175296]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"emptyTrash failed\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"emptyTrash failed\", e);",
      "info" : "ExpressionStatement[174209-174251]:ExpressionStatement[175181-175223]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[174272-174306]:ExpressionStatement[175244-175278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174333-174398]:Block[175305-175370]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[174355-174380]:ExpressionStatement[175327-175352]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[174924-174931]:Modifier[175896-175903]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[174932-174939]:PrimitiveType[175904-175911]"
    }, {
      "left" : "isTrashLocalOnly",
      "right" : "isTrashLocalOnly",
      "info" : "SimpleName[174940-174956]:SimpleName[175912-175928]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[174957-174972]:SingleVariableDeclaration[175929-175944]"
    }, {
      "left" : "MessagingException",
      "right" : "MessagingException",
      "info" : "SimpleType[174981-174999]:SimpleType[175953-175971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175000-175157]:Block[175972-176129]"
    }, {
      "left" : "return (account.getRemoteStore() instanceof Pop3Store);",
      "right" : "return (account.getRemoteStore() instanceof Pop3Store);",
      "info" : "ReturnStatement[175096-175151]:ReturnStatement[176068-176123]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[175163-175169]:Modifier[176135-176141]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[175170-175174]:PrimitiveType[176142-176146]"
    }, {
      "left" : "sendAlternate",
      "right" : "sendAlternate",
      "info" : "SimpleName[175175-175188]:SimpleName[176147-176160]"
    }, {
      "left" : "final Context context",
      "right" : "final Context context",
      "info" : "SingleVariableDeclaration[175189-175210]:SingleVariableDeclaration[176161-176182]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[175212-175227]:SingleVariableDeclaration[176184-176199]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[175229-175244]:SingleVariableDeclaration[176201-176216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175246-178063]:Block[176218-179035]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[175256-175457]:IfStatement[176228-176429]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"About to load message \" + account.getDescription() + \":\" + message.getFolder().getName()\n                  + \":\" + message.getUid() + \" for sendAlternate\");",
      "right" : "Log.d(K9.LOG_TAG, \"About to load message \" + account.getDescription() + \":\" + message.getFolder().getName()\n                  + \":\" + message.getUid() + \" for sendAlternate\");",
      "info" : "ExpressionStatement[175282-175457]:ExpressionStatement[176254-176429]"
    }, {
      "left" : "loadMessageForView(account, message.getFolder().getName(),\n        message.getUid(), new MessagingListener() {\n            @Override\n            public void loadMessageForViewBodyAvailable(Account account, String folder, String uid,\n            Message message) {\n                if (K9.DEBUG)\n                    Log.d(K9.LOG_TAG, \"Got message \" + account.getDescription() + \":\" + folder\n                          + \":\" + message.getUid() + \" for sendAlternate\");\n\n                try {\n                    Intent msg = new Intent(Intent.ACTION_SEND);\n                    String quotedText = null;\n                    Part part = MimeUtility.findFirstPartByMimeType(message, \"text/plain\");\n                    if (part == null) {\n                        part = MimeUtility.findFirstPartByMimeType(message, \"text/html\");\n                    }\n                    if (part != null) {\n                        quotedText = MessageExtractor.getTextFromPart(part);\n                    }\n                    if (quotedText != null) {\n                        msg.putExtra(Intent.EXTRA_TEXT, quotedText);\n                    }\n                    msg.putExtra(Intent.EXTRA_SUBJECT, message.getSubject());\n\n                    Address[] from = message.getFrom();\n                    String[] senders = new String[from.length];\n                    for (int i = 0; i < from.length; i++) {\n                        senders[i] = from[i].toString();\n                    }\n                    msg.putExtra(Intents.Share.EXTRA_FROM, senders);\n\n                    Address[] to = message.getRecipients(RecipientType.TO);\n                    String[] recipientsTo = new String[to.length];\n                    for (int i = 0; i < to.length; i++) {\n                        recipientsTo[i] = to[i].toString();\n                    }\n                    msg.putExtra(Intent.EXTRA_EMAIL, recipientsTo);\n\n                    Address[] cc = message.getRecipients(RecipientType.CC);\n                    String[] recipientsCc = new String[cc.length];\n                    for (int i = 0; i < cc.length; i++) {\n                        recipientsCc[i] = cc[i].toString();\n                    }\n                    msg.putExtra(Intent.EXTRA_CC, recipientsCc);\n\n                    msg.setType(\"text/plain\");\n                    context.startActivity(Intent.createChooser(msg, context.getString(R.string.send_alternate_chooser_title)));\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"Unable to send email through alternate program\", me);\n                }\n            }\n        });",
      "right" : "loadMessageForView(account, message.getFolder().getName(),\n        message.getUid(), new MessagingListener() {\n            @Override\n            public void loadMessageForViewBodyAvailable(Account account, String folder, String uid,\n            Message message) {\n                if (K9.DEBUG)\n                    Log.d(K9.LOG_TAG, \"Got message \" + account.getDescription() + \":\" + folder\n                          + \":\" + message.getUid() + \" for sendAlternate\");\n\n                try {\n                    Intent msg = new Intent(Intent.ACTION_SEND);\n                    String quotedText = null;\n                    Part part = MimeUtility.findFirstPartByMimeType(message, \"text/plain\");\n                    if (part == null) {\n                        part = MimeUtility.findFirstPartByMimeType(message, \"text/html\");\n                    }\n                    if (part != null) {\n                        quotedText = MessageExtractor.getTextFromPart(part);\n                    }\n                    if (quotedText != null) {\n                        msg.putExtra(Intent.EXTRA_TEXT, quotedText);\n                    }\n                    msg.putExtra(Intent.EXTRA_SUBJECT, message.getSubject());\n\n                    Address[] from = message.getFrom();\n                    String[] senders = new String[from.length];\n                    for (int i = 0; i < from.length; i++) {\n                        senders[i] = from[i].toString();\n                    }\n                    msg.putExtra(Intents.Share.EXTRA_FROM, senders);\n\n                    Address[] to = message.getRecipients(RecipientType.TO);\n                    String[] recipientsTo = new String[to.length];\n                    for (int i = 0; i < to.length; i++) {\n                        recipientsTo[i] = to[i].toString();\n                    }\n                    msg.putExtra(Intent.EXTRA_EMAIL, recipientsTo);\n\n                    Address[] cc = message.getRecipients(RecipientType.CC);\n                    String[] recipientsCc = new String[cc.length];\n                    for (int i = 0; i < cc.length; i++) {\n                        recipientsCc[i] = cc[i].toString();\n                    }\n                    msg.putExtra(Intent.EXTRA_CC, recipientsCc);\n\n                    msg.setType(\"text/plain\");\n                    context.startActivity(Intent.createChooser(msg, context.getString(R.string.send_alternate_chooser_title)));\n                } catch (MessagingException me) {\n                    Log.e(K9.LOG_TAG, \"Unable to send email through alternate program\", me);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[175467-178056]:ExpressionStatement[176439-179028]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[175590-175599]:MarkerAnnotation[176562-176571]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[175612-175618]:Modifier[176584-176590]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[175619-175623]:PrimitiveType[176591-176595]"
    }, {
      "left" : "loadMessageForViewBodyAvailable",
      "right" : "loadMessageForViewBodyAvailable",
      "info" : "SimpleName[175624-175655]:SimpleName[176596-176627]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[175656-175671]:SingleVariableDeclaration[176628-176643]"
    }, {
      "left" : "String folder",
      "right" : "String folder",
      "info" : "SingleVariableDeclaration[175673-175686]:SingleVariableDeclaration[176645-176658]"
    }, {
      "left" : "String uid",
      "right" : "String uid",
      "info" : "SingleVariableDeclaration[175688-175698]:SingleVariableDeclaration[176660-176670]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[175712-175727]:SingleVariableDeclaration[176684-176699]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175729-178044]:Block[176701-179016]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[175747-175931]:IfStatement[176719-176903]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Got message \" + account.getDescription() + \":\" + folder\n                          + \":\" + message.getUid() + \" for sendAlternate\");",
      "right" : "Log.d(K9.LOG_TAG, \"Got message \" + account.getDescription() + \":\" + folder\n                          + \":\" + message.getUid() + \" for sendAlternate\");",
      "info" : "ExpressionStatement[175781-175931]:ExpressionStatement[176753-176903]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[175949-178030]:TryStatement[176921-179002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175953-177887]:Block[176925-178859]"
    }, {
      "left" : "Intent msg = new Intent(Intent.ACTION_SEND);",
      "right" : "Intent msg = new Intent(Intent.ACTION_SEND);",
      "info" : "VariableDeclarationStatement[175975-176019]:VariableDeclarationStatement[176947-176991]"
    }, {
      "left" : "String quotedText = null;",
      "right" : "String quotedText = null;",
      "info" : "VariableDeclarationStatement[176040-176065]:VariableDeclarationStatement[177012-177037]"
    }, {
      "left" : "Part part = MimeUtility.findFirstPartByMimeType(message, \"text/plain\");",
      "right" : "Part part = MimeUtility.findFirstPartByMimeType(message, \"text/plain\");",
      "info" : "VariableDeclarationStatement[176086-176157]:VariableDeclarationStatement[177058-177129]"
    }, {
      "left" : "if (part == null)",
      "right" : "if (part == null)",
      "info" : "IfStatement[176178-176309]:IfStatement[177150-177281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176196-176309]:Block[177168-177281]"
    }, {
      "left" : "part = MimeUtility.findFirstPartByMimeType(message, \"text/html\");",
      "right" : "part = MimeUtility.findFirstPartByMimeType(message, \"text/html\");",
      "info" : "ExpressionStatement[176222-176287]:ExpressionStatement[177194-177259]"
    }, {
      "left" : "if (part != null)",
      "right" : "if (part != null)",
      "info" : "IfStatement[176330-176448]:IfStatement[177302-177420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176348-176448]:Block[177320-177420]"
    }, {
      "left" : "quotedText = MessageExtractor.getTextFromPart(part);",
      "right" : "quotedText = MessageExtractor.getTextFromPart(part);",
      "info" : "ExpressionStatement[176374-176426]:ExpressionStatement[177346-177398]"
    }, {
      "left" : "if (quotedText != null)",
      "right" : "if (quotedText != null)",
      "info" : "IfStatement[176469-176585]:IfStatement[177441-177557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176493-176585]:Block[177465-177557]"
    }, {
      "left" : "msg.putExtra(Intent.EXTRA_TEXT, quotedText);",
      "right" : "msg.putExtra(Intent.EXTRA_TEXT, quotedText);",
      "info" : "ExpressionStatement[176519-176563]:ExpressionStatement[177491-177535]"
    }, {
      "left" : "msg.putExtra(Intent.EXTRA_SUBJECT, message.getSubject());",
      "right" : "msg.putExtra(Intent.EXTRA_SUBJECT, message.getSubject());",
      "info" : "ExpressionStatement[176606-176663]:ExpressionStatement[177578-177635]"
    }, {
      "left" : "Address[] from = message.getFrom();",
      "right" : "Address[] from = message.getFrom();",
      "info" : "VariableDeclarationStatement[176685-176720]:VariableDeclarationStatement[177657-177692]"
    }, {
      "left" : "String[] senders = new String[from.length];",
      "right" : "String[] senders = new String[from.length];",
      "info" : "VariableDeclarationStatement[176741-176784]:VariableDeclarationStatement[177713-177756]"
    }, {
      "left" : "for (int i = 0; i < from.length; i++)",
      "right" : "for (int i = 0; i < from.length; i++)",
      "info" : "ForStatement[176805-176923]:ForStatement[177777-177895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176843-176923]:Block[177815-177895]"
    }, {
      "left" : "senders[i] = from[i].toString();",
      "right" : "senders[i] = from[i].toString();",
      "info" : "ExpressionStatement[176869-176901]:ExpressionStatement[177841-177873]"
    }, {
      "left" : "msg.putExtra(Intents.Share.EXTRA_FROM, senders);",
      "right" : "msg.putExtra(Intents.Share.EXTRA_FROM, senders);",
      "info" : "ExpressionStatement[176944-176992]:ExpressionStatement[177916-177964]"
    }, {
      "left" : "Address[] to = message.getRecipients(RecipientType.TO);",
      "right" : "Address[] to = message.getRecipients(RecipientType.TO);",
      "info" : "VariableDeclarationStatement[177014-177069]:VariableDeclarationStatement[177986-178041]"
    }, {
      "left" : "String[] recipientsTo = new String[to.length];",
      "right" : "String[] recipientsTo = new String[to.length];",
      "info" : "VariableDeclarationStatement[177090-177136]:VariableDeclarationStatement[178062-178108]"
    }, {
      "left" : "for (int i = 0; i < to.length; i++)",
      "right" : "for (int i = 0; i < to.length; i++)",
      "info" : "ForStatement[177157-177276]:ForStatement[178129-178248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177193-177276]:Block[178165-178248]"
    }, {
      "left" : "recipientsTo[i] = to[i].toString();",
      "right" : "recipientsTo[i] = to[i].toString();",
      "info" : "ExpressionStatement[177219-177254]:ExpressionStatement[178191-178226]"
    }, {
      "left" : "msg.putExtra(Intent.EXTRA_EMAIL, recipientsTo);",
      "right" : "msg.putExtra(Intent.EXTRA_EMAIL, recipientsTo);",
      "info" : "ExpressionStatement[177297-177344]:ExpressionStatement[178269-178316]"
    }, {
      "left" : "Address[] cc = message.getRecipients(RecipientType.CC);",
      "right" : "Address[] cc = message.getRecipients(RecipientType.CC);",
      "info" : "VariableDeclarationStatement[177366-177421]:VariableDeclarationStatement[178338-178393]"
    }, {
      "left" : "String[] recipientsCc = new String[cc.length];",
      "right" : "String[] recipientsCc = new String[cc.length];",
      "info" : "VariableDeclarationStatement[177442-177488]:VariableDeclarationStatement[178414-178460]"
    }, {
      "left" : "for (int i = 0; i < cc.length; i++)",
      "right" : "for (int i = 0; i < cc.length; i++)",
      "info" : "ForStatement[177509-177628]:ForStatement[178481-178600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177545-177628]:Block[178517-178600]"
    }, {
      "left" : "recipientsCc[i] = cc[i].toString();",
      "right" : "recipientsCc[i] = cc[i].toString();",
      "info" : "ExpressionStatement[177571-177606]:ExpressionStatement[178543-178578]"
    }, {
      "left" : "msg.putExtra(Intent.EXTRA_CC, recipientsCc);",
      "right" : "msg.putExtra(Intent.EXTRA_CC, recipientsCc);",
      "info" : "ExpressionStatement[177649-177693]:ExpressionStatement[178621-178665]"
    }, {
      "left" : "msg.setType(\"text/plain\");",
      "right" : "msg.setType(\"text/plain\");",
      "info" : "ExpressionStatement[177715-177741]:ExpressionStatement[178687-178713]"
    }, {
      "left" : "context.startActivity(Intent.createChooser(msg, context.getString(R.string.send_alternate_chooser_title)));",
      "right" : "context.startActivity(Intent.createChooser(msg, context.getString(R.string.send_alternate_chooser_title)));",
      "info" : "ExpressionStatement[177762-177869]:ExpressionStatement[178734-178841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177918-178030]:Block[178890-179002]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to send email through alternate program\", me);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to send email through alternate program\", me);",
      "info" : "ExpressionStatement[177940-178012]:ExpressionStatement[178912-178984]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[178260-178266]:Modifier[179232-179238]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[178267-178271]:PrimitiveType[179239-179243]"
    }, {
      "left" : "checkMail",
      "right" : "checkMail",
      "info" : "SimpleName[178272-178281]:SimpleName[179244-179253]"
    }, {
      "left" : "final Context context",
      "right" : "final Context context",
      "info" : "SingleVariableDeclaration[178282-178303]:SingleVariableDeclaration[179254-179275]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[178305-178326]:SingleVariableDeclaration[179277-179298]"
    }, {
      "left" : "final boolean ignoreLastCheckedTime",
      "right" : "final boolean ignoreLastCheckedTime",
      "info" : "SingleVariableDeclaration[178354-178389]:SingleVariableDeclaration[179326-179361]"
    }, {
      "left" : "final boolean useManualWakeLock",
      "right" : "final boolean useManualWakeLock",
      "info" : "SingleVariableDeclaration[178417-178448]:SingleVariableDeclaration[179389-179420]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[178476-178508]:SingleVariableDeclaration[179448-179480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178510-180711]:Block[179482-181683]"
    }, {
      "left" : "TracingWakeLock twakeLock = null;",
      "right" : "TracingWakeLock twakeLock = null;",
      "info" : "VariableDeclarationStatement[178521-178554]:VariableDeclarationStatement[179493-179526]"
    }, {
      "left" : "if (useManualWakeLock)",
      "right" : "if (useManualWakeLock)",
      "info" : "IfStatement[178563-178899]:IfStatement[179535-179871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178586-178899]:Block[179558-179871]"
    }, {
      "left" : "TracingPowerManager pm = TracingPowerManager.getPowerManager(context);",
      "right" : "TracingPowerManager pm = TracingPowerManager.getPowerManager(context);",
      "info" : "VariableDeclarationStatement[178600-178670]:VariableDeclarationStatement[179572-179642]"
    }, {
      "left" : "twakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, \"K9 MessagingController.checkMail\");",
      "right" : "twakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, \"K9 MessagingController.checkMail\");",
      "info" : "ExpressionStatement[178684-178779]:ExpressionStatement[179656-179751]"
    }, {
      "left" : "twakeLock.setReferenceCounted(false);",
      "right" : "twakeLock.setReferenceCounted(false);",
      "info" : "ExpressionStatement[178792-178829]:ExpressionStatement[179764-179801]"
    }, {
      "left" : "twakeLock.acquire(K9.MANUAL_WAKE_LOCK_TIMEOUT);",
      "right" : "twakeLock.acquire(K9.MANUAL_WAKE_LOCK_TIMEOUT);",
      "info" : "ExpressionStatement[178842-178889]:ExpressionStatement[179814-179861]"
    }, {
      "left" : "final TracingWakeLock wakeLock = twakeLock;",
      "right" : "final TracingWakeLock wakeLock = twakeLock;",
      "info" : "VariableDeclarationStatement[178908-178951]:VariableDeclarationStatement[179880-179923]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[178961-179065]:EnhancedForStatement[179933-180037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179004-179065]:Block[179976-180037]"
    }, {
      "left" : "l.checkMailStarted(context, account);",
      "right" : "l.checkMailStarted(context, account);",
      "info" : "ExpressionStatement[179018-179055]:ExpressionStatement[179990-180027]"
    }, {
      "left" : "putBackground(\"checkMail\", listener, new Runnable() {\n            @Override\n            public void run() {\n\n                try {\n                    if (K9.DEBUG)\n                        Log.i(K9.LOG_TAG, \"Starting mail check\");\n                    Preferences prefs = Preferences.getPreferences(context);\n\n                    Collection<Account> accounts;\n                    if (account != null) {\n                        accounts = new ArrayList<Account>(1);\n                        accounts.add(account);\n                    } else {\n                        accounts = prefs.getAvailableAccounts();\n                    }\n\n                    for (final Account account : accounts) {\n                        checkMailForAccount(context, account, ignoreLastCheckedTime, prefs, listener);\n                    }\n\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Unable to synchronize mail\", e);\n                    addErrorMessage(account, null, e);\n                }\n                putBackground(\"finalize sync\", null, new Runnable() {\n                    @Override\n                    public void run() {\n\n                        if (K9.DEBUG)\n                            Log.i(K9.LOG_TAG, \"Finished mail sync\");\n\n                        if (wakeLock != null) {\n                            wakeLock.release();\n                        }\n                        for (MessagingListener l : getListeners()) {\n                            l.checkMailFinished(context, account);\n                        }\n\n                    }\n                }\n                             );\n            }\n        });",
      "right" : "putBackground(\"checkMail\", listener, new Runnable() {\n            @Override\n            public void run() {\n\n                try {\n                    if (K9.DEBUG)\n                        Log.i(K9.LOG_TAG, \"Starting mail check\");\n                    Preferences prefs = Preferences.getPreferences(context);\n\n                    Collection<Account> accounts;\n                    if (account != null) {\n                        accounts = new ArrayList<Account>(1);\n                        accounts.add(account);\n                    } else {\n                        accounts = prefs.getAvailableAccounts();\n                    }\n\n                    for (final Account account : accounts) {\n                        checkMailForAccount(context, account, ignoreLastCheckedTime, prefs, listener);\n                    }\n\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Unable to synchronize mail\", e);\n                    addErrorMessage(account, null, e);\n                }\n                putBackground(\"finalize sync\", null, new Runnable() {\n                    @Override\n                    public void run() {\n\n                        if (K9.DEBUG)\n                            Log.i(K9.LOG_TAG, \"Finished mail sync\");\n\n                        if (wakeLock != null) {\n                            wakeLock.release();\n                        }\n                        for (MessagingListener l : getListeners()) {\n                            l.checkMailFinished(context, account);\n                        }\n\n                    }\n                }\n                             );\n            }\n        });",
      "info" : "ExpressionStatement[179074-180705]:ExpressionStatement[180046-181677]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[179140-179149]:MarkerAnnotation[180112-180121]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[179162-179168]:Modifier[180134-180140]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[179169-179173]:PrimitiveType[180141-180145]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[179174-179177]:SimpleName[180146-180149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179180-180693]:Block[180152-181665]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[179199-180073]:TryStatement[180171-181045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179203-179906]:Block[180175-180878]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[179225-179304]:IfStatement[180197-180276]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Starting mail check\");",
      "right" : "Log.i(K9.LOG_TAG, \"Starting mail check\");",
      "info" : "ExpressionStatement[179263-179304]:ExpressionStatement[180235-180276]"
    }, {
      "left" : "Preferences prefs = Preferences.getPreferences(context);",
      "right" : "Preferences prefs = Preferences.getPreferences(context);",
      "info" : "VariableDeclarationStatement[179325-179381]:VariableDeclarationStatement[180297-180353]"
    }, {
      "left" : "Collection<Account> accounts;",
      "right" : "Collection<Account> accounts;",
      "info" : "VariableDeclarationStatement[179403-179432]:VariableDeclarationStatement[180375-180404]"
    }, {
      "left" : "if (account != null)",
      "right" : "if (account != null)",
      "info" : "IfStatement[179453-179700]:IfStatement[180425-180672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179474-179606]:Block[180446-180578]"
    }, {
      "left" : "accounts = new ArrayList<Account>(1);",
      "right" : "accounts = new ArrayList<Account>(1);",
      "info" : "ExpressionStatement[179500-179537]:ExpressionStatement[180472-180509]"
    }, {
      "left" : "accounts.add(account);",
      "right" : "accounts.add(account);",
      "info" : "ExpressionStatement[179562-179584]:ExpressionStatement[180534-180556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179612-179700]:Block[180584-180672]"
    }, {
      "left" : "accounts = prefs.getAvailableAccounts();",
      "right" : "accounts = prefs.getAvailableAccounts();",
      "info" : "ExpressionStatement[179638-179678]:ExpressionStatement[180610-180650]"
    }, {
      "left" : "for (final Account account : accounts)",
      "right" : "for (final Account account : accounts)",
      "info" : "EnhancedForStatement[179722-179887]:EnhancedForStatement[180694-180859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179761-179887]:Block[180733-180859]"
    }, {
      "left" : "checkMailForAccount(context, account, ignoreLastCheckedTime, prefs, listener);",
      "right" : "checkMailForAccount(context, account, ignoreLastCheckedTime, prefs, listener);",
      "info" : "ExpressionStatement[179787-179865]:ExpressionStatement[180759-180837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179927-180073]:Block[180899-181045]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to synchronize mail\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to synchronize mail\", e);",
      "info" : "ExpressionStatement[179949-180000]:ExpressionStatement[180921-180972]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[180021-180055]:ExpressionStatement[180993-181027]"
    }, {
      "left" : "putBackground(\"finalize sync\", null, new Runnable() {\n                    @Override\n                    public void run() {\n\n                        if (K9.DEBUG)\n                            Log.i(K9.LOG_TAG, \"Finished mail sync\");\n\n                        if (wakeLock != null) {\n                            wakeLock.release();\n                        }\n                        for (MessagingListener l : getListeners()) {\n                            l.checkMailFinished(context, account);\n                        }\n\n                    }\n                }\n                             );",
      "right" : "putBackground(\"finalize sync\", null, new Runnable() {\n                    @Override\n                    public void run() {\n\n                        if (K9.DEBUG)\n                            Log.i(K9.LOG_TAG, \"Finished mail sync\");\n\n                        if (wakeLock != null) {\n                            wakeLock.release();\n                        }\n                        for (MessagingListener l : getListeners()) {\n                            l.checkMailFinished(context, account);\n                        }\n\n                    }\n                }\n                             );",
      "info" : "ExpressionStatement[180090-180679]:ExpressionStatement[181062-181651]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[180164-180173]:MarkerAnnotation[181136-181145]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[180194-180200]:Modifier[181166-181172]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[180201-180205]:PrimitiveType[181173-181177]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[180206-180209]:SimpleName[181178-181181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180212-180629]:Block[181184-181601]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[180239-180321]:IfStatement[181211-181293]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Finished mail sync\");",
      "right" : "Log.i(K9.LOG_TAG, \"Finished mail sync\");",
      "info" : "ExpressionStatement[180281-180321]:ExpressionStatement[181253-181293]"
    }, {
      "left" : "if (wakeLock != null)",
      "right" : "if (wakeLock != null)",
      "info" : "IfStatement[180347-180444]:IfStatement[181319-181416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180369-180444]:Block[181341-181416]"
    }, {
      "left" : "wakeLock.release();",
      "right" : "wakeLock.release();",
      "info" : "ExpressionStatement[180399-180418]:ExpressionStatement[181371-181390]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[180469-180606]:EnhancedForStatement[181441-181578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180512-180606]:Block[181484-181578]"
    }, {
      "left" : "l.checkMailFinished(context, account);",
      "right" : "l.checkMailFinished(context, account);",
      "info" : "ExpressionStatement[180542-180580]:ExpressionStatement[181514-181552]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[180719-180726]:Modifier[181691-181698]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[180727-180731]:PrimitiveType[181699-181703]"
    }, {
      "left" : "checkMailForAccount",
      "right" : "checkMailForAccount",
      "info" : "SimpleName[180732-180751]:SimpleName[181704-181723]"
    }, {
      "left" : "final Context context",
      "right" : "final Context context",
      "info" : "SingleVariableDeclaration[180752-180773]:SingleVariableDeclaration[181724-181745]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[180775-180796]:SingleVariableDeclaration[181747-181768]"
    }, {
      "left" : "final boolean ignoreLastCheckedTime",
      "right" : "final boolean ignoreLastCheckedTime",
      "info" : "SingleVariableDeclaration[180835-180870]:SingleVariableDeclaration[181807-181842]"
    }, {
      "left" : "final Preferences prefs",
      "right" : "final Preferences prefs",
      "info" : "SingleVariableDeclaration[180909-180932]:SingleVariableDeclaration[181881-181904]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[180971-181003]:SingleVariableDeclaration[181943-181975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181005-184370]:Block[181977-185342]"
    }, {
      "left" : "if (!account.isAvailable(context))",
      "right" : "if (!account.isAvailable(context))",
      "info" : "IfStatement[181015-181232]:IfStatement[181987-182204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181050-181232]:Block[182022-182204]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[181064-181202]:IfStatement[182036-182174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181078-181202]:Block[182050-182174]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Skipping synchronizing unavailable account \" + account.getDescription());",
      "right" : "Log.i(K9.LOG_TAG, \"Skipping synchronizing unavailable account \" + account.getDescription());",
      "info" : "ExpressionStatement[181096-181188]:ExpressionStatement[182068-182160]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[181215-181222]:ReturnStatement[182187-182194]"
    }, {
      "left" : "final long accountInterval = account.getAutomaticCheckIntervalMinutes() * 60 * 1000;",
      "right" : "final long accountInterval = account.getAutomaticCheckIntervalMinutes() * 60 * 1000;",
      "info" : "VariableDeclarationStatement[181241-181325]:VariableDeclarationStatement[182213-182297]"
    }, {
      "left" : "if (!ignoreLastCheckedTime && accountInterval <= 0)",
      "right" : "if (!ignoreLastCheckedTime && accountInterval <= 0)",
      "info" : "IfStatement[181334-181540]:IfStatement[182306-182512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181386-181540]:Block[182358-182512]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[181400-181510]:IfStatement[182372-182482]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Skipping synchronizing account \" + account.getDescription());",
      "right" : "Log.i(K9.LOG_TAG, \"Skipping synchronizing account \" + account.getDescription());",
      "info" : "ExpressionStatement[181430-181510]:ExpressionStatement[182402-182482]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[181523-181530]:ReturnStatement[182495-182502]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[181550-181647]:IfStatement[182522-182619]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Synchronizing account \" + account.getDescription());",
      "right" : "Log.i(K9.LOG_TAG, \"Synchronizing account \" + account.getDescription());",
      "info" : "ExpressionStatement[181576-181647]:ExpressionStatement[182548-182619]"
    }, {
      "left" : "account.setRingNotified(false);",
      "right" : "account.setRingNotified(false);",
      "info" : "ExpressionStatement[181657-181688]:ExpressionStatement[182629-182660]"
    }, {
      "left" : "sendPendingMessages(account, listener);",
      "right" : "sendPendingMessages(account, listener);",
      "info" : "ExpressionStatement[181698-181737]:ExpressionStatement[182670-182709]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[181747-184362]:TryStatement[182719-185334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181751-183296]:Block[182723-184268]"
    }, {
      "left" : "Account.FolderMode aDisplayMode = account.getFolderDisplayMode();",
      "right" : "Account.FolderMode aDisplayMode = account.getFolderDisplayMode();",
      "info" : "VariableDeclarationStatement[181765-181830]:VariableDeclarationStatement[182737-182802]"
    }, {
      "left" : "Account.FolderMode aSyncMode = account.getFolderSyncMode();",
      "right" : "Account.FolderMode aSyncMode = account.getFolderSyncMode();",
      "info" : "VariableDeclarationStatement[181843-181902]:VariableDeclarationStatement[182815-182874]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[181916-181959]:VariableDeclarationStatement[182888-182931]"
    }, {
      "left" : "for (final Folder folder : localStore.getPersonalNamespaces(false))",
      "right" : "for (final Folder folder : localStore.getPersonalNamespaces(false))",
      "info" : "EnhancedForStatement[181972-183286]:EnhancedForStatement[182944-184258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182040-183286]:Block[183012-184258]"
    }, {
      "left" : "folder.open(Folder.OPEN_MODE_RW);",
      "right" : "folder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[182058-182091]:ExpressionStatement[183030-183063]"
    }, {
      "left" : "Folder.FolderClass fDisplayClass = folder.getDisplayClass();",
      "right" : "Folder.FolderClass fDisplayClass = folder.getDisplayClass();",
      "info" : "VariableDeclarationStatement[182109-182169]:VariableDeclarationStatement[183081-183141]"
    }, {
      "left" : "Folder.FolderClass fSyncClass = folder.getSyncClass();",
      "right" : "Folder.FolderClass fSyncClass = folder.getSyncClass();",
      "info" : "VariableDeclarationStatement[182186-182240]:VariableDeclarationStatement[183158-183212]"
    }, {
      "left" : "if (modeMismatch(aDisplayMode, fDisplayClass))",
      "right" : "if (modeMismatch(aDisplayMode, fDisplayClass))",
      "info" : "IfStatement[182258-182715]:IfStatement[183230-183687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182305-182715]:Block[183277-183687]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[182688-182697]:ContinueStatement[183660-183669]"
    }, {
      "left" : "if (modeMismatch(aSyncMode, fSyncClass))",
      "right" : "if (modeMismatch(aSyncMode, fSyncClass))",
      "info" : "IfStatement[182733-183170]:IfStatement[183705-184142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182774-183170]:Block[183746-184142]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[183143-183152]:ContinueStatement[184115-184124]"
    }, {
      "left" : "synchronizeFolder(account, folder, ignoreLastCheckedTime, accountInterval, listener);",
      "right" : "synchronizeFolder(account, folder, ignoreLastCheckedTime, accountInterval, listener);",
      "info" : "ExpressionStatement[183187-183272]:ExpressionStatement[184159-184244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183326-183472]:Block[184298-184444]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to synchronize account \" + account.getName(), e);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to synchronize account \" + account.getName(), e);",
      "info" : "ExpressionStatement[183340-183415]:ExpressionStatement[184312-184387]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[183428-183462]:ExpressionStatement[184400-184434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183481-184362]:Block[184453-185334]"
    }, {
      "left" : "putBackground(\"clear notification flag for \" + account.getDescription(), null, new Runnable() {\n                @Override\n                public void run() {\n                    if (K9.DEBUG)\n                        Log.v(K9.LOG_TAG, \"Clearing notification flag for \" + account.getDescription());\n                    account.setRingNotified(false);\n                    try {\n                        AccountStats stats = account.getStats(context);\n                        if (stats == null || stats.unreadMessageCount == 0) {\n                            notifyAccountCancel(context, account);\n                        }\n                    } catch (MessagingException e) {\n                        Log.e(K9.LOG_TAG, \"Unable to getUnreadMessageCount for account: \" + account, e);\n                    }\n                }\n            }\n                         );",
      "right" : "putBackground(\"clear notification flag for \" + account.getDescription(), null, new Runnable() {\n                @Override\n                public void run() {\n                    if (K9.DEBUG)\n                        Log.v(K9.LOG_TAG, \"Clearing notification flag for \" + account.getDescription());\n                    account.setRingNotified(false);\n                    try {\n                        AccountStats stats = account.getStats(context);\n                        if (stats == null || stats.unreadMessageCount == 0) {\n                            notifyAccountCancel(context, account);\n                        }\n                    } catch (MessagingException e) {\n                        Log.e(K9.LOG_TAG, \"Unable to getUnreadMessageCount for account: \" + account, e);\n                    }\n                }\n            }\n                         );",
      "info" : "ExpressionStatement[183495-184352]:ExpressionStatement[184467-185324]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[183607-183616]:MarkerAnnotation[184579-184588]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[183633-183639]:Modifier[184605-184611]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[183640-183644]:PrimitiveType[184612-184616]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[183645-183648]:SimpleName[184617-184620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183651-184310]:Block[184623-185282]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[183673-183791]:IfStatement[184645-184763]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Clearing notification flag for \" + account.getDescription());",
      "right" : "Log.v(K9.LOG_TAG, \"Clearing notification flag for \" + account.getDescription());",
      "info" : "ExpressionStatement[183711-183791]:ExpressionStatement[184683-184763]"
    }, {
      "left" : "account.setRingNotified(false);",
      "right" : "account.setRingNotified(false);",
      "info" : "ExpressionStatement[183812-183843]:ExpressionStatement[184784-184815]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[183864-184292]:TryStatement[184836-185264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183868-184134]:Block[184840-185106]"
    }, {
      "left" : "AccountStats stats = account.getStats(context);",
      "right" : "AccountStats stats = account.getStats(context);",
      "info" : "VariableDeclarationStatement[183894-183941]:VariableDeclarationStatement[184866-184913]"
    }, {
      "left" : "if (stats == null || stats.unreadMessageCount == 0)",
      "right" : "if (stats == null || stats.unreadMessageCount == 0)",
      "info" : "IfStatement[183966-184112]:IfStatement[184938-185084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184018-184112]:Block[184990-185084]"
    }, {
      "left" : "notifyAccountCancel(context, account);",
      "right" : "notifyAccountCancel(context, account);",
      "info" : "ExpressionStatement[184048-184086]:ExpressionStatement[185020-185058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184164-184292]:Block[185136-185264]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to getUnreadMessageCount for account: \" + account, e);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to getUnreadMessageCount for account: \" + account, e);",
      "info" : "ExpressionStatement[184190-184270]:ExpressionStatement[185162-185242]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[184377-184384]:Modifier[185349-185356]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[184385-184389]:PrimitiveType[185357-185361]"
    }, {
      "left" : "synchronizeFolder",
      "right" : "synchronizeFolder",
      "info" : "SimpleName[184390-184407]:SimpleName[185362-185379]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[184417-184438]:SingleVariableDeclaration[185389-185410]"
    }, {
      "left" : "final Folder folder",
      "right" : "final Folder folder",
      "info" : "SingleVariableDeclaration[184448-184467]:SingleVariableDeclaration[185420-185439]"
    }, {
      "left" : "final boolean ignoreLastCheckedTime",
      "right" : "final boolean ignoreLastCheckedTime",
      "info" : "SingleVariableDeclaration[184477-184512]:SingleVariableDeclaration[185449-185484]"
    }, {
      "left" : "final long accountInterval",
      "right" : "final long accountInterval",
      "info" : "SingleVariableDeclaration[184522-184548]:SingleVariableDeclaration[185494-185520]"
    }, {
      "left" : "final MessagingListener listener",
      "right" : "final MessagingListener listener",
      "info" : "SingleVariableDeclaration[184558-184590]:SingleVariableDeclaration[185530-185562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184592-186928]:Block[185564-187900]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[184604-184756]:IfStatement[185576-185728]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Folder \" + folder.getName() + \" was last synced @ \" +\n                  new Date(folder.getLastChecked()));",
      "right" : "Log.v(K9.LOG_TAG, \"Folder \" + folder.getName() + \" was last synced @ \" +\n                  new Date(folder.getLastChecked()));",
      "info" : "ExpressionStatement[184630-184756]:ExpressionStatement[185602-185728]"
    }, {
      "left" : "if (!ignoreLastCheckedTime && folder.getLastChecked() >\n                (System.currentTimeMillis() - accountInterval))",
      "right" : "if (!ignoreLastCheckedTime && folder.getLastChecked() >\n                (System.currentTimeMillis() - accountInterval))",
      "info" : "IfStatement[184766-185182]:IfStatement[185738-186154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184886-185182]:Block[185858-186154]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[184900-185151]:IfStatement[185872-186123]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Not syncing folder \" + folder.getName()\n                      + \", previously synced @ \" + new Date(folder.getLastChecked())\n                      + \" which would be too recent for the account period\");",
      "right" : "Log.v(K9.LOG_TAG, \"Not syncing folder \" + folder.getName()\n                      + \", previously synced @ \" + new Date(folder.getLastChecked())\n                      + \" which would be too recent for the account period\");",
      "info" : "ExpressionStatement[184930-185151]:ExpressionStatement[185902-186123]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[185165-185172]:ReturnStatement[186137-186144]"
    }, {
      "left" : "putBackground(\"sync\" + folder.getName(), null, new Runnable() {\n            @Override\n            public void run() {\n                LocalFolder tLocalFolder = null;\n                try {\n                    // In case multiple Commands get enqueued, don't run more than\n                    // once\n                    final LocalStore localStore = account.getLocalStore();\n                    tLocalFolder = localStore.getFolder(folder.getName());\n                    tLocalFolder.open(Folder.OPEN_MODE_RW);\n\n                    if (!ignoreLastCheckedTime && tLocalFolder.getLastChecked() >\n                    (System.currentTimeMillis() - accountInterval)) {\n                        if (K9.DEBUG)\n                            Log.v(K9.LOG_TAG, \"Not running Command for folder \" + folder.getName()\n                                  + \", previously synced @ \" + new Date(folder.getLastChecked())\n                                  + \" which would be too recent for the account period\");\n                        return;\n                    }\n                    notifyFetchingMail(account, folder);\n                    try {\n                        synchronizeMailboxSynchronous(account, folder.getName(), listener, null);\n                    } finally {\n                        notifyFetchingMailCancel(account);\n                    }\n                } catch (Exception e) {\n\n                    Log.e(K9.LOG_TAG, \"Exception while processing folder \" +\n                          account.getDescription() + \":\" + folder.getName(), e);\n                    addErrorMessage(account, null, e);\n                } finally {\n                    closeFolder(tLocalFolder);\n                }\n            }\n        }\n                     );",
      "right" : "putBackground(\"sync\" + folder.getName(), null, new Runnable() {\n            @Override\n            public void run() {\n                LocalFolder tLocalFolder = null;\n                try {\n                    // In case multiple Commands get enqueued, don't run more than\n                    // once\n                    final LocalStore localStore = account.getLocalStore();\n                    tLocalFolder = localStore.getFolder(folder.getName());\n                    tLocalFolder.open(Folder.OPEN_MODE_RW);\n\n                    if (!ignoreLastCheckedTime && tLocalFolder.getLastChecked() >\n                    (System.currentTimeMillis() - accountInterval)) {\n                        if (K9.DEBUG)\n                            Log.v(K9.LOG_TAG, \"Not running Command for folder \" + folder.getName()\n                                  + \", previously synced @ \" + new Date(folder.getLastChecked())\n                                  + \" which would be too recent for the account period\");\n                        return;\n                    }\n                    notifyFetchingMail(account, folder);\n                    try {\n                        synchronizeMailboxSynchronous(account, folder.getName(), listener, null);\n                    } finally {\n                        notifyFetchingMailCancel(account);\n                    }\n                } catch (Exception e) {\n\n                    Log.e(K9.LOG_TAG, \"Exception while processing folder \" +\n                          account.getDescription() + \":\" + folder.getName(), e);\n                    addErrorMessage(account, null, e);\n                } finally {\n                    closeFolder(tLocalFolder);\n                }\n            }\n        }\n                     );",
      "info" : "ExpressionStatement[185191-186920]:ExpressionStatement[186163-187892]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[185267-185276]:MarkerAnnotation[186239-186248]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[185289-185295]:Modifier[186261-186267]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[185296-185300]:PrimitiveType[186268-186272]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[185301-185304]:SimpleName[186273-186276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185307-186886]:Block[186279-187858]"
    }, {
      "left" : "LocalFolder tLocalFolder = null;",
      "right" : "LocalFolder tLocalFolder = null;",
      "info" : "VariableDeclarationStatement[185325-185357]:VariableDeclarationStatement[186297-186329]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[185374-186872]:TryStatement[186346-187844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185378-186543]:Block[186350-187515]"
    }, {
      "left" : "final LocalStore localStore = account.getLocalStore();",
      "right" : "final LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[185511-185565]:VariableDeclarationStatement[186483-186537]"
    }, {
      "left" : "tLocalFolder = localStore.getFolder(folder.getName());",
      "right" : "tLocalFolder = localStore.getFolder(folder.getName());",
      "info" : "ExpressionStatement[185586-185640]:ExpressionStatement[186558-186612]"
    }, {
      "left" : "tLocalFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "tLocalFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[185661-185700]:ExpressionStatement[186633-186672]"
    }, {
      "left" : "if (!ignoreLastCheckedTime && tLocalFolder.getLastChecked() >\n                    (System.currentTimeMillis() - accountInterval))",
      "right" : "if (!ignoreLastCheckedTime && tLocalFolder.getLastChecked() >\n                    (System.currentTimeMillis() - accountInterval))",
      "info" : "IfStatement[185722-186231]:IfStatement[186694-187203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185852-186231]:Block[186824-187203]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[185878-186177]:IfStatement[186850-187149]"
    }, {
      "left" : "Log.v(K9.LOG_TAG, \"Not running Command for folder \" + folder.getName()\n                                  + \", previously synced @ \" + new Date(folder.getLastChecked())\n                                  + \" which would be too recent for the account period\");",
      "right" : "Log.v(K9.LOG_TAG, \"Not running Command for folder \" + folder.getName()\n                                  + \", previously synced @ \" + new Date(folder.getLastChecked())\n                                  + \" which would be too recent for the account period\");",
      "info" : "ExpressionStatement[185920-186177]:ExpressionStatement[186892-187149]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[186202-186209]:ReturnStatement[187174-187181]"
    }, {
      "left" : "notifyFetchingMail(account, folder);",
      "right" : "notifyFetchingMail(account, folder);",
      "info" : "ExpressionStatement[186252-186288]:ExpressionStatement[187224-187260]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[186309-186525]:TryStatement[187281-187497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186313-186434]:Block[187285-187406]"
    }, {
      "left" : "synchronizeMailboxSynchronous(account, folder.getName(), listener, null);",
      "right" : "synchronizeMailboxSynchronous(account, folder.getName(), listener, null);",
      "info" : "ExpressionStatement[186339-186412]:ExpressionStatement[187311-187384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186443-186525]:Block[187415-187497]"
    }, {
      "left" : "notifyFetchingMailCancel(account);",
      "right" : "notifyFetchingMailCancel(account);",
      "info" : "ExpressionStatement[186469-186503]:ExpressionStatement[187441-187475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186564-186797]:Block[187536-187769]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Exception while processing folder \" +\n                          account.getDescription() + \":\" + folder.getName(), e);",
      "right" : "Log.e(K9.LOG_TAG, \"Exception while processing folder \" +\n                          account.getDescription() + \":\" + folder.getName(), e);",
      "info" : "ExpressionStatement[186587-186724]:ExpressionStatement[187559-187696]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[186745-186779]:ExpressionStatement[187717-187751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186806-186872]:Block[187778-187844]"
    }, {
      "left" : "closeFolder(tLocalFolder);",
      "right" : "closeFolder(tLocalFolder);",
      "info" : "ExpressionStatement[186828-186854]:ExpressionStatement[187800-187826]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[186936-186942]:Modifier[187908-187914]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[186943-186947]:PrimitiveType[187915-187919]"
    }, {
      "left" : "compact",
      "right" : "compact",
      "info" : "SimpleName[186948-186955]:SimpleName[187920-187927]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[186956-186977]:SingleVariableDeclaration[187928-187949]"
    }, {
      "left" : "final MessagingListener ml",
      "right" : "final MessagingListener ml",
      "info" : "SingleVariableDeclaration[186979-187005]:SingleVariableDeclaration[187951-187977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187007-187985]:Block[187979-188957]"
    }, {
      "left" : "putBackground(\"compact:\" + account.getDescription(), ml, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    long oldSize = localStore.getSize();\n                    localStore.compact();\n                    long newSize = localStore.getSize();\n                    for (MessagingListener l : getListeners(ml)) {\n                        l.accountSizeChanged(account, oldSize, newSize);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to compact account because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Failed to compact account \" + account.getDescription(), e);\n                }\n            }\n        });",
      "right" : "putBackground(\"compact:\" + account.getDescription(), ml, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    long oldSize = localStore.getSize();\n                    localStore.compact();\n                    long newSize = localStore.getSize();\n                    for (MessagingListener l : getListeners(ml)) {\n                        l.accountSizeChanged(account, oldSize, newSize);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to compact account because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Failed to compact account \" + account.getDescription(), e);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[187017-187979]:ExpressionStatement[187989-188951]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[187103-187112]:MarkerAnnotation[188075-188084]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[187125-187131]:Modifier[188097-188103]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[187132-187136]:PrimitiveType[188104-188108]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[187137-187140]:SimpleName[188109-188112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187143-187967]:Block[188115-188939]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[187161-187953]:TryStatement[188133-188925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187165-187571]:Block[188137-188543]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[187187-187235]:VariableDeclarationStatement[188159-188207]"
    }, {
      "left" : "long oldSize = localStore.getSize();",
      "right" : "long oldSize = localStore.getSize();",
      "info" : "VariableDeclarationStatement[187256-187292]:VariableDeclarationStatement[188228-188264]"
    }, {
      "left" : "localStore.compact();",
      "right" : "localStore.compact();",
      "info" : "ExpressionStatement[187313-187334]:ExpressionStatement[188285-188306]"
    }, {
      "left" : "long newSize = localStore.getSize();",
      "right" : "long newSize = localStore.getSize();",
      "info" : "VariableDeclarationStatement[187355-187391]:VariableDeclarationStatement[188327-188363]"
    }, {
      "left" : "for (MessagingListener l : getListeners(ml))",
      "right" : "for (MessagingListener l : getListeners(ml))",
      "info" : "EnhancedForStatement[187412-187553]:EnhancedForStatement[188384-188525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187457-187553]:Block[188429-188525]"
    }, {
      "left" : "l.accountSizeChanged(account, oldSize, newSize);",
      "right" : "l.accountSizeChanged(account, oldSize, newSize);",
      "info" : "ExpressionStatement[187483-187531]:ExpressionStatement[188455-188503]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187610-187814]:Block[188582-188786]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to compact account because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to compact account because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[187632-187734]:ExpressionStatement[188604-188706]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[187755-187796]:ThrowStatement[188727-188768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187835-187953]:Block[188807-188925]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failed to compact account \" + account.getDescription(), e);",
      "right" : "Log.e(K9.LOG_TAG, \"Failed to compact account \" + account.getDescription(), e);",
      "info" : "ExpressionStatement[187857-187935]:ExpressionStatement[188829-188907]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[187991-187997]:Modifier[188963-188969]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[187998-188002]:PrimitiveType[188970-188974]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[188003-188008]:SimpleName[188975-188980]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[188009-188030]:SingleVariableDeclaration[188981-189002]"
    }, {
      "left" : "final MessagingListener ml",
      "right" : "final MessagingListener ml",
      "info" : "SingleVariableDeclaration[188032-188058]:SingleVariableDeclaration[189004-189030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188060-189376]:Block[189032-190348]"
    }, {
      "left" : "putBackground(\"clear:\" + account.getDescription(), ml, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    long oldSize = localStore.getSize();\n                    localStore.clear();\n                    localStore.resetVisibleLimits(account.getDisplayCount());\n                    long newSize = localStore.getSize();\n                    AccountStats stats = new AccountStats();\n                    stats.size = newSize;\n                    stats.unreadMessageCount = 0;\n                    stats.flaggedMessageCount = 0;\n                    for (MessagingListener l : getListeners(ml)) {\n                        l.accountSizeChanged(account, oldSize, newSize);\n                        l.accountStatusChanged(account, stats);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to clear account because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Failed to clear account \" + account.getDescription(), e);\n                }\n            }\n        });",
      "right" : "putBackground(\"clear:\" + account.getDescription(), ml, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    long oldSize = localStore.getSize();\n                    localStore.clear();\n                    localStore.resetVisibleLimits(account.getDisplayCount());\n                    long newSize = localStore.getSize();\n                    AccountStats stats = new AccountStats();\n                    stats.size = newSize;\n                    stats.unreadMessageCount = 0;\n                    stats.flaggedMessageCount = 0;\n                    for (MessagingListener l : getListeners(ml)) {\n                        l.accountSizeChanged(account, oldSize, newSize);\n                        l.accountStatusChanged(account, stats);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to clear account because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Failed to clear account \" + account.getDescription(), e);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[188070-189370]:ExpressionStatement[189042-190342]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[188154-188163]:MarkerAnnotation[189126-189135]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[188176-188182]:Modifier[189148-189154]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[188183-188187]:PrimitiveType[189155-189159]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[188188-188191]:SimpleName[189160-189163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188194-189358]:Block[189166-190330]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[188212-189344]:TryStatement[189184-190316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188216-188966]:Block[189188-189938]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[188238-188286]:VariableDeclarationStatement[189210-189258]"
    }, {
      "left" : "long oldSize = localStore.getSize();",
      "right" : "long oldSize = localStore.getSize();",
      "info" : "VariableDeclarationStatement[188307-188343]:VariableDeclarationStatement[189279-189315]"
    }, {
      "left" : "localStore.clear();",
      "right" : "localStore.clear();",
      "info" : "ExpressionStatement[188364-188383]:ExpressionStatement[189336-189355]"
    }, {
      "left" : "localStore.resetVisibleLimits(account.getDisplayCount());",
      "right" : "localStore.resetVisibleLimits(account.getDisplayCount());",
      "info" : "ExpressionStatement[188404-188461]:ExpressionStatement[189376-189433]"
    }, {
      "left" : "long newSize = localStore.getSize();",
      "right" : "long newSize = localStore.getSize();",
      "info" : "VariableDeclarationStatement[188482-188518]:VariableDeclarationStatement[189454-189490]"
    }, {
      "left" : "AccountStats stats = new AccountStats();",
      "right" : "AccountStats stats = new AccountStats();",
      "info" : "VariableDeclarationStatement[188539-188579]:VariableDeclarationStatement[189511-189551]"
    }, {
      "left" : "stats.size = newSize;",
      "right" : "stats.size = newSize;",
      "info" : "ExpressionStatement[188600-188621]:ExpressionStatement[189572-189593]"
    }, {
      "left" : "stats.unreadMessageCount = 0;",
      "right" : "stats.unreadMessageCount = 0;",
      "info" : "ExpressionStatement[188642-188671]:ExpressionStatement[189614-189643]"
    }, {
      "left" : "stats.flaggedMessageCount = 0;",
      "right" : "stats.flaggedMessageCount = 0;",
      "info" : "ExpressionStatement[188692-188722]:ExpressionStatement[189664-189694]"
    }, {
      "left" : "for (MessagingListener l : getListeners(ml))",
      "right" : "for (MessagingListener l : getListeners(ml))",
      "info" : "EnhancedForStatement[188743-188948]:EnhancedForStatement[189715-189920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188788-188948]:Block[189760-189920]"
    }, {
      "left" : "l.accountSizeChanged(account, oldSize, newSize);",
      "right" : "l.accountSizeChanged(account, oldSize, newSize);",
      "info" : "ExpressionStatement[188814-188862]:ExpressionStatement[189786-189834]"
    }, {
      "left" : "l.accountStatusChanged(account, stats);",
      "right" : "l.accountStatusChanged(account, stats);",
      "info" : "ExpressionStatement[188887-188926]:ExpressionStatement[189859-189898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189005-189207]:Block[189977-190179]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to clear account because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to clear account because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[189027-189127]:ExpressionStatement[189999-190099]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[189148-189189]:ThrowStatement[190120-190161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189228-189344]:Block[190200-190316]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failed to clear account \" + account.getDescription(), e);",
      "right" : "Log.e(K9.LOG_TAG, \"Failed to clear account \" + account.getDescription(), e);",
      "info" : "ExpressionStatement[189250-189326]:ExpressionStatement[190222-190298]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[189382-189388]:Modifier[190354-190360]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[189389-189393]:PrimitiveType[190361-190365]"
    }, {
      "left" : "recreate",
      "right" : "recreate",
      "info" : "SimpleName[189394-189402]:SimpleName[190366-190374]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[189403-189424]:SingleVariableDeclaration[190375-190396]"
    }, {
      "left" : "final MessagingListener ml",
      "right" : "final MessagingListener ml",
      "info" : "SingleVariableDeclaration[189426-189452]:SingleVariableDeclaration[190398-190424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189454-190785]:Block[190426-191757]"
    }, {
      "left" : "putBackground(\"recreate:\" + account.getDescription(), ml, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    long oldSize = localStore.getSize();\n                    localStore.recreate();\n                    localStore.resetVisibleLimits(account.getDisplayCount());\n                    long newSize = localStore.getSize();\n                    AccountStats stats = new AccountStats();\n                    stats.size = newSize;\n                    stats.unreadMessageCount = 0;\n                    stats.flaggedMessageCount = 0;\n                    for (MessagingListener l : getListeners(ml)) {\n                        l.accountSizeChanged(account, oldSize, newSize);\n                        l.accountStatusChanged(account, stats);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to recreate an account because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Failed to recreate account \" + account.getDescription(), e);\n                }\n            }\n        });",
      "right" : "putBackground(\"recreate:\" + account.getDescription(), ml, new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    long oldSize = localStore.getSize();\n                    localStore.recreate();\n                    localStore.resetVisibleLimits(account.getDisplayCount());\n                    long newSize = localStore.getSize();\n                    AccountStats stats = new AccountStats();\n                    stats.size = newSize;\n                    stats.unreadMessageCount = 0;\n                    stats.flaggedMessageCount = 0;\n                    for (MessagingListener l : getListeners(ml)) {\n                        l.accountSizeChanged(account, oldSize, newSize);\n                        l.accountStatusChanged(account, stats);\n                    }\n                } catch (UnavailableStorageException e) {\n                    Log.i(K9.LOG_TAG, \"Failed to recreate an account because storage is not available - trying again later.\");\n                    throw new UnavailableAccountException(e);\n                } catch (Exception e) {\n                    Log.e(K9.LOG_TAG, \"Failed to recreate account \" + account.getDescription(), e);\n                }\n            }\n        });",
      "info" : "ExpressionStatement[189464-190779]:ExpressionStatement[190436-191751]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[189551-189560]:MarkerAnnotation[190523-190532]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[189573-189579]:Modifier[190545-190551]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[189580-189584]:PrimitiveType[190552-190556]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[189585-189588]:SimpleName[190557-190560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189591-190767]:Block[190563-191739]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[189609-190753]:TryStatement[190581-191725]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189613-190366]:Block[190585-191338]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[189635-189683]:VariableDeclarationStatement[190607-190655]"
    }, {
      "left" : "long oldSize = localStore.getSize();",
      "right" : "long oldSize = localStore.getSize();",
      "info" : "VariableDeclarationStatement[189704-189740]:VariableDeclarationStatement[190676-190712]"
    }, {
      "left" : "localStore.recreate();",
      "right" : "localStore.recreate();",
      "info" : "ExpressionStatement[189761-189783]:ExpressionStatement[190733-190755]"
    }, {
      "left" : "localStore.resetVisibleLimits(account.getDisplayCount());",
      "right" : "localStore.resetVisibleLimits(account.getDisplayCount());",
      "info" : "ExpressionStatement[189804-189861]:ExpressionStatement[190776-190833]"
    }, {
      "left" : "long newSize = localStore.getSize();",
      "right" : "long newSize = localStore.getSize();",
      "info" : "VariableDeclarationStatement[189882-189918]:VariableDeclarationStatement[190854-190890]"
    }, {
      "left" : "AccountStats stats = new AccountStats();",
      "right" : "AccountStats stats = new AccountStats();",
      "info" : "VariableDeclarationStatement[189939-189979]:VariableDeclarationStatement[190911-190951]"
    }, {
      "left" : "stats.size = newSize;",
      "right" : "stats.size = newSize;",
      "info" : "ExpressionStatement[190000-190021]:ExpressionStatement[190972-190993]"
    }, {
      "left" : "stats.unreadMessageCount = 0;",
      "right" : "stats.unreadMessageCount = 0;",
      "info" : "ExpressionStatement[190042-190071]:ExpressionStatement[191014-191043]"
    }, {
      "left" : "stats.flaggedMessageCount = 0;",
      "right" : "stats.flaggedMessageCount = 0;",
      "info" : "ExpressionStatement[190092-190122]:ExpressionStatement[191064-191094]"
    }, {
      "left" : "for (MessagingListener l : getListeners(ml))",
      "right" : "for (MessagingListener l : getListeners(ml))",
      "info" : "EnhancedForStatement[190143-190348]:EnhancedForStatement[191115-191320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190188-190348]:Block[191160-191320]"
    }, {
      "left" : "l.accountSizeChanged(account, oldSize, newSize);",
      "right" : "l.accountSizeChanged(account, oldSize, newSize);",
      "info" : "ExpressionStatement[190214-190262]:ExpressionStatement[191186-191234]"
    }, {
      "left" : "l.accountStatusChanged(account, stats);",
      "right" : "l.accountStatusChanged(account, stats);",
      "info" : "ExpressionStatement[190287-190326]:ExpressionStatement[191259-191298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190405-190613]:Block[191377-191585]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Failed to recreate an account because storage is not available - trying again later.\");",
      "right" : "Log.i(K9.LOG_TAG, \"Failed to recreate an account because storage is not available - trying again later.\");",
      "info" : "ExpressionStatement[190427-190533]:ExpressionStatement[191399-191505]"
    }, {
      "left" : "throw new UnavailableAccountException(e);",
      "right" : "throw new UnavailableAccountException(e);",
      "info" : "ThrowStatement[190554-190595]:ThrowStatement[191526-191567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190634-190753]:Block[191606-191725]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Failed to recreate account \" + account.getDescription(), e);",
      "right" : "Log.e(K9.LOG_TAG, \"Failed to recreate account \" + account.getDescription(), e);",
      "info" : "ExpressionStatement[190656-190735]:ExpressionStatement[191628-191707]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[190792-190799]:Modifier[191764-191771]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[190800-190807]:PrimitiveType[191772-191779]"
    }, {
      "left" : "shouldNotifyForMessage",
      "right" : "shouldNotifyForMessage",
      "info" : "SimpleName[190808-190830]:SimpleName[191780-191802]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[190831-190846]:SingleVariableDeclaration[191803-191818]"
    }, {
      "left" : "LocalFolder localFolder",
      "right" : "LocalFolder localFolder",
      "info" : "SingleVariableDeclaration[190848-190871]:SingleVariableDeclaration[191820-191843]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[190873-190888]:SingleVariableDeclaration[191845-191860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190890-193858]:Block[191862-194830]"
    }, {
      "left" : "if (account.getName() == null)",
      "right" : "if (account.getName() == null)",
      "info" : "IfStatement[191034-191102]:IfStatement[192006-192074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191065-191102]:Block[192037-192074]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[191079-191092]:ReturnStatement[192051-192064]"
    }, {
      "left" : "if (!account.isNotifyNewMail() || message.isSet(Flag.SEEN))",
      "right" : "if (!account.isNotifyNewMail() || message.isSet(Flag.SEEN))",
      "info" : "IfStatement[191229-191326]:IfStatement[192201-192298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191289-191326]:Block[192261-192298]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[191303-191316]:ReturnStatement[192275-192288]"
    }, {
      "left" : "Account.FolderMode aDisplayMode = account.getFolderDisplayMode();",
      "right" : "Account.FolderMode aDisplayMode = account.getFolderDisplayMode();",
      "info" : "VariableDeclarationStatement[191336-191401]:VariableDeclarationStatement[192308-192373]"
    }, {
      "left" : "Account.FolderMode aNotifyMode = account.getFolderNotifyNewMailMode();",
      "right" : "Account.FolderMode aNotifyMode = account.getFolderNotifyNewMailMode();",
      "info" : "VariableDeclarationStatement[191410-191480]:VariableDeclarationStatement[192382-192452]"
    }, {
      "left" : "Folder.FolderClass fDisplayClass = localFolder.getDisplayClass();",
      "right" : "Folder.FolderClass fDisplayClass = localFolder.getDisplayClass();",
      "info" : "VariableDeclarationStatement[191489-191554]:VariableDeclarationStatement[192461-192526]"
    }, {
      "left" : "Folder.FolderClass fNotifyClass = localFolder.getNotifyClass();",
      "right" : "Folder.FolderClass fNotifyClass = localFolder.getNotifyClass();",
      "info" : "VariableDeclarationStatement[191563-191626]:VariableDeclarationStatement[192535-192598]"
    }, {
      "left" : "if (modeMismatch(aDisplayMode, fDisplayClass))",
      "right" : "if (modeMismatch(aDisplayMode, fDisplayClass))",
      "info" : "IfStatement[191636-191778]:IfStatement[192608-192750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191683-191778]:Block[192655-192750]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[191755-191768]:ReturnStatement[192727-192740]"
    }, {
      "left" : "if (modeMismatch(aNotifyMode, fNotifyClass))",
      "right" : "if (modeMismatch(aNotifyMode, fNotifyClass))",
      "info" : "IfStatement[191788-191926]:IfStatement[192760-192898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191833-191926]:Block[192805-192898]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[191903-191916]:ReturnStatement[192875-192888]"
    }, {
      "left" : "if (account.getStoreUri().startsWith(\"pop3\") &&\n                message.olderThan(new Date(account.getLatestOldMessageSeenTime())))",
      "right" : "if (account.getStoreUri().startsWith(\"pop3\") &&\n                message.olderThan(new Date(account.getLatestOldMessageSeenTime())))",
      "info" : "IfStatement[192091-192260]:IfStatement[193063-193232]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192223-192260]:Block[193195-193232]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[192237-192250]:ReturnStatement[193209-193222]"
    }, {
      "left" : "Folder folder = message.getFolder();",
      "right" : "Folder folder = message.getFolder();",
      "info" : "VariableDeclarationStatement[192414-192450]:VariableDeclarationStatement[193386-193422]"
    }, {
      "left" : "if (folder != null)",
      "right" : "if (folder != null)",
      "info" : "IfStatement[192459-192940]:IfStatement[193431-193912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192479-192940]:Block[193451-193912]"
    }, {
      "left" : "String folderName = folder.getName();",
      "right" : "String folderName = folder.getName();",
      "info" : "VariableDeclarationStatement[192493-192530]:VariableDeclarationStatement[193465-193502]"
    }, {
      "left" : "if (!account.getInboxFolderName().equals(folderName) &&\n                    (account.getTrashFolderName().equals(folderName)\n                     || account.getDraftsFolderName().equals(folderName)\n                     || account.getSpamFolderName().equals(folderName)\n                     || account.getSentFolderName().equals(folderName)))",
      "right" : "if (!account.getInboxFolderName().equals(folderName) &&\n                    (account.getTrashFolderName().equals(folderName)\n                     || account.getDraftsFolderName().equals(folderName)\n                     || account.getSpamFolderName().equals(folderName)\n                     || account.getSentFolderName().equals(folderName)))",
      "info" : "IfStatement[192543-192930]:IfStatement[193515-193902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192885-192930]:Block[193857-193902]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[192903-192916]:ReturnStatement[193875-193888]"
    }, {
      "left" : "if (message.getUid() != null && localFolder.getLastUid() != null)",
      "right" : "if (message.getUid() != null && localFolder.getLastUid() != null)",
      "info" : "IfStatement[192950-193560]:IfStatement[193922-194532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193016-193560]:Block[193988-194532]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[193030-193550]:TryStatement[194002-194522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193034-193458]:Block[194006-194430]"
    }, {
      "left" : "Integer messageUid = Integer.parseInt(message.getUid());",
      "right" : "Integer messageUid = Integer.parseInt(message.getUid());",
      "info" : "VariableDeclarationStatement[193052-193108]:VariableDeclarationStatement[194024-194080]"
    }, {
      "left" : "if (messageUid <= localFolder.getLastUid())",
      "right" : "if (messageUid <= localFolder.getLastUid())",
      "info" : "IfStatement[193125-193444]:IfStatement[194097-194416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193169-193444]:Block[194141-194416]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[193191-193392]:IfStatement[194163-194364]"
    }, {
      "left" : "Log.d(K9.LOG_TAG, \"Message uid is \" + messageUid + \", max message uid is \" +\n                              localFolder.getLastUid() + \".  Skipping notification.\");",
      "right" : "Log.d(K9.LOG_TAG, \"Message uid is \" + messageUid + \", max message uid is \" +\n                              localFolder.getLastUid() + \".  Skipping notification.\");",
      "info" : "ExpressionStatement[193229-193392]:ExpressionStatement[194201-194364]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[193413-193426]:ReturnStatement[194385-194398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193491-193550]:Block[194463-194522]"
    }, {
      "left" : "if (account.isAnIdentity(message.getFrom()) && !account.isNotifySelfNewMail())",
      "right" : "if (account.isAnIdentity(message.getFrom()) && !account.isNotifySelfNewMail())",
      "info" : "IfStatement[193714-193830]:IfStatement[194686-194802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193793-193830]:Block[194765-194802]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[193807-193820]:ReturnStatement[194779-194792]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[193840-193852]:ReturnStatement[194812-194824]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[194480-194487]:Modifier[195452-195459]"
    }, {
      "left" : "NotificationData",
      "right" : "NotificationData",
      "info" : "SimpleType[194488-194504]:SimpleType[195460-195476]"
    }, {
      "left" : "getNotificationData",
      "right" : "getNotificationData",
      "info" : "SimpleName[194505-194524]:SimpleName[195477-195496]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[194525-194540]:SingleVariableDeclaration[195497-195512]"
    }, {
      "left" : "Integer previousUnreadMessageCount",
      "right" : "Integer previousUnreadMessageCount",
      "info" : "SingleVariableDeclaration[194542-194576]:SingleVariableDeclaration[195514-195548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194578-194989]:Block[195550-195961]"
    }, {
      "left" : "NotificationData data;",
      "right" : "NotificationData data;",
      "info" : "VariableDeclarationStatement[194588-194610]:VariableDeclarationStatement[195560-195582]"
    }, {
      "left" : "synchronized (notificationData) {\n            data = notificationData.get(account.getAccountNumber());\n            if (data == null && previousUnreadMessageCount != null) {\n                data = new NotificationData(previousUnreadMessageCount);\n                notificationData.put(account.getAccountNumber(), data);\n            }\n        }",
      "right" : "synchronized (notificationData) {\n            data = notificationData.get(account.getAccountNumber());\n            if (data == null && previousUnreadMessageCount != null) {\n                data = new NotificationData(previousUnreadMessageCount);\n                notificationData.put(account.getAccountNumber(), data);\n            }\n        }",
      "info" : "SynchronizedStatement[194620-194961]:SynchronizedStatement[195592-195933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194652-194961]:Block[195624-195933]"
    }, {
      "left" : "data = notificationData.get(account.getAccountNumber());",
      "right" : "data = notificationData.get(account.getAccountNumber());",
      "info" : "ExpressionStatement[194666-194722]:ExpressionStatement[195638-195694]"
    }, {
      "left" : "if (data == null && previousUnreadMessageCount != null)",
      "right" : "if (data == null && previousUnreadMessageCount != null)",
      "info" : "IfStatement[194735-194951]:IfStatement[195707-195923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194791-194951]:Block[195763-195923]"
    }, {
      "left" : "data = new NotificationData(previousUnreadMessageCount);",
      "right" : "data = new NotificationData(previousUnreadMessageCount);",
      "info" : "ExpressionStatement[194809-194865]:ExpressionStatement[195781-195837]"
    }, {
      "left" : "notificationData.put(account.getAccountNumber(), data);",
      "right" : "notificationData.put(account.getAccountNumber(), data);",
      "info" : "ExpressionStatement[194882-194937]:ExpressionStatement[195854-195909]"
    }, {
      "left" : "return data;",
      "right" : "return data;",
      "info" : "ReturnStatement[194971-194983]:ReturnStatement[195943-195955]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[194995-195002]:Modifier[195967-195974]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[195003-195015]:SimpleType[195975-195987]"
    }, {
      "left" : "getMessageSender",
      "right" : "getMessageSender",
      "info" : "SimpleName[195016-195032]:SimpleName[195988-196004]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[195033-195048]:SingleVariableDeclaration[196005-196020]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[195050-195065]:SingleVariableDeclaration[196022-196037]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[195067-195082]:SingleVariableDeclaration[196039-196054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195084-196218]:Block[196056-197190]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[195094-196190]:TryStatement[196066-197162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195098-196061]:Block[196070-197033]"
    }, {
      "left" : "boolean isSelf = false;",
      "right" : "boolean isSelf = false;",
      "info" : "VariableDeclarationStatement[195112-195135]:VariableDeclarationStatement[196084-196107]"
    }, {
      "left" : "final Contacts contacts = K9.showContactName() ? Contacts.getInstance(context) : null;",
      "right" : "final Contacts contacts = K9.showContactName() ? Contacts.getInstance(context) : null;",
      "info" : "VariableDeclarationStatement[195148-195234]:VariableDeclarationStatement[196120-196206]"
    }, {
      "left" : "final Address[] fromAddrs = message.getFrom();",
      "right" : "final Address[] fromAddrs = message.getFrom();",
      "info" : "VariableDeclarationStatement[195247-195293]:VariableDeclarationStatement[196219-196265]"
    }, {
      "left" : "if (fromAddrs != null)",
      "right" : "if (fromAddrs != null)",
      "info" : "IfStatement[195307-195564]:IfStatement[196279-196536]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195330-195564]:Block[196302-196536]"
    }, {
      "left" : "isSelf = account.isAnIdentity(fromAddrs);",
      "right" : "isSelf = account.isAnIdentity(fromAddrs);",
      "info" : "ExpressionStatement[195348-195389]:ExpressionStatement[196320-196361]"
    }, {
      "left" : "if (!isSelf && fromAddrs.length > 0)",
      "right" : "if (!isSelf && fromAddrs.length > 0)",
      "info" : "IfStatement[195406-195550]:IfStatement[196378-196522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195443-195550]:Block[196415-196522]"
    }, {
      "left" : "return MessageHelper.toFriendly(fromAddrs[0], contacts).toString();",
      "right" : "return MessageHelper.toFriendly(fromAddrs[0], contacts).toString();",
      "info" : "ReturnStatement[195465-195532]:ReturnStatement[196437-196504]"
    }, {
      "left" : "if (isSelf)",
      "right" : "if (isSelf)",
      "info" : "IfStatement[195578-196051]:IfStatement[196550-197023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195590-196051]:Block[196562-197023]"
    }, {
      "left" : "Address[] rcpts = message.getRecipients(Message.RecipientType.TO);",
      "right" : "Address[] rcpts = message.getRecipients(Message.RecipientType.TO);",
      "info" : "VariableDeclarationStatement[195668-195734]:VariableDeclarationStatement[196640-196706]"
    }, {
      "left" : "if (rcpts != null && rcpts.length > 0)",
      "right" : "if (rcpts != null && rcpts.length > 0)",
      "info" : "IfStatement[195752-195966]:IfStatement[196724-196938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195791-195966]:Block[196763-196938]"
    }, {
      "left" : "return context.getString(R.string.message_to_fmt,\n                            MessageHelper.toFriendly(rcpts[0], contacts).toString());",
      "right" : "return context.getString(R.string.message_to_fmt,\n                            MessageHelper.toFriendly(rcpts[0], contacts).toString());",
      "info" : "ReturnStatement[195813-195948]:ReturnStatement[196785-196920]"
    }, {
      "left" : "return context.getString(R.string.general_no_sender);",
      "right" : "return context.getString(R.string.general_no_sender);",
      "info" : "ReturnStatement[195984-196037]:ReturnStatement[196956-197009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196091-196190]:Block[197063-197162]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to get sender information for notification.\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to get sender information for notification.\", e);",
      "info" : "ExpressionStatement[196105-196180]:ExpressionStatement[197077-197152]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[196200-196212]:ReturnStatement[197172-197184]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[196224-196231]:Modifier[197196-197203]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[196232-196244]:SimpleType[197204-197216]"
    }, {
      "left" : "getMessageSubject",
      "right" : "getMessageSubject",
      "info" : "SimpleName[196245-196262]:SimpleName[197217-197234]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[196263-196278]:SingleVariableDeclaration[197235-197250]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[196280-196295]:SingleVariableDeclaration[197252-197267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196297-196496]:Block[197269-197468]"
    }, {
      "left" : "String subject = message.getSubject();",
      "right" : "String subject = message.getSubject();",
      "info" : "VariableDeclarationStatement[196307-196345]:VariableDeclarationStatement[197279-197317]"
    }, {
      "left" : "if (!TextUtils.isEmpty(subject))",
      "right" : "if (!TextUtils.isEmpty(subject))",
      "info" : "IfStatement[196354-196426]:IfStatement[197326-197398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196387-196426]:Block[197359-197398]"
    }, {
      "left" : "return subject;",
      "right" : "return subject;",
      "info" : "ReturnStatement[196401-196416]:ReturnStatement[197373-197388]"
    }, {
      "left" : "return context.getString(R.string.general_no_subject);",
      "right" : "return context.getString(R.string.general_no_subject);",
      "info" : "ReturnStatement[196436-196490]:ReturnStatement[197408-197462]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[196557-196564]:Modifier[197529-197536]"
    }, {
      "left" : "TextAppearanceSpan",
      "right" : "TextAppearanceSpan",
      "info" : "SimpleType[196565-196583]:SimpleType[197537-197555]"
    }, {
      "left" : "getEmphasizedSpan",
      "right" : "getEmphasizedSpan",
      "info" : "SimpleName[196584-196601]:SimpleName[197556-197573]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[196602-196617]:SingleVariableDeclaration[197574-197589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196619-196848]:Block[197591-197820]"
    }, {
      "left" : "if (sEmphasizedSpan == null)",
      "right" : "if (sEmphasizedSpan == null)",
      "info" : "IfStatement[196629-196810]:IfStatement[197601-197782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196658-196810]:Block[197630-197782]"
    }, {
      "left" : "sEmphasizedSpan = new TextAppearanceSpan(context,\n                    R.style.TextAppearance_StatusBar_EventContent_Emphasized);",
      "right" : "sEmphasizedSpan = new TextAppearanceSpan(context,\n                    R.style.TextAppearance_StatusBar_EventContent_Emphasized);",
      "info" : "ExpressionStatement[196672-196800]:ExpressionStatement[197644-197772]"
    }, {
      "left" : "return sEmphasizedSpan;",
      "right" : "return sEmphasizedSpan;",
      "info" : "ReturnStatement[196819-196842]:ReturnStatement[197791-197814]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[196854-196861]:Modifier[197826-197833]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[196862-196874]:SimpleType[197834-197846]"
    }, {
      "left" : "getMessagePreview",
      "right" : "getMessagePreview",
      "info" : "SimpleName[196875-196892]:SimpleName[197847-197864]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[196893-196908]:SingleVariableDeclaration[197865-197880]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[196910-196925]:SingleVariableDeclaration[197882-197897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196927-197478]:Block[197899-198450]"
    }, {
      "left" : "CharSequence subject = getMessageSubject(context, message);",
      "right" : "CharSequence subject = getMessageSubject(context, message);",
      "info" : "VariableDeclarationStatement[196937-196996]:VariableDeclarationStatement[197909-197968]"
    }, {
      "left" : "String snippet = message.getPreview();",
      "right" : "String snippet = message.getPreview();",
      "info" : "VariableDeclarationStatement[197005-197043]:VariableDeclarationStatement[197977-198015]"
    }, {
      "left" : "if (TextUtils.isEmpty(subject))",
      "right" : "if (TextUtils.isEmpty(subject))",
      "info" : "IfStatement[197053-197201]:IfStatement[198025-198173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197085-197124]:Block[198057-198096]"
    }, {
      "left" : "return snippet;",
      "right" : "return snippet;",
      "info" : "ReturnStatement[197099-197114]:ReturnStatement[198071-198086]"
    }, {
      "left" : "if (TextUtils.isEmpty(snippet))",
      "right" : "if (TextUtils.isEmpty(snippet))",
      "info" : "IfStatement[197130-197201]:IfStatement[198102-198173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197162-197201]:Block[198134-198173]"
    }, {
      "left" : "return subject;",
      "right" : "return subject;",
      "info" : "ReturnStatement[197176-197191]:ReturnStatement[198148-198163]"
    }, {
      "left" : "SpannableStringBuilder preview = new SpannableStringBuilder();",
      "right" : "SpannableStringBuilder preview = new SpannableStringBuilder();",
      "info" : "VariableDeclarationStatement[197211-197273]:VariableDeclarationStatement[198183-198245]"
    }, {
      "left" : "preview.append(subject);",
      "right" : "preview.append(subject);",
      "info" : "ExpressionStatement[197282-197306]:ExpressionStatement[198254-198278]"
    }, {
      "left" : "preview.append('\\n');",
      "right" : "preview.append('\\n');",
      "info" : "ExpressionStatement[197315-197336]:ExpressionStatement[198287-198308]"
    }, {
      "left" : "preview.append(snippet);",
      "right" : "preview.append(snippet);",
      "info" : "ExpressionStatement[197345-197369]:ExpressionStatement[198317-198341]"
    }, {
      "left" : "preview.setSpan(getEmphasizedSpan(context), 0, subject.length(), 0);",
      "right" : "preview.setSpan(getEmphasizedSpan(context), 0, subject.length(), 0);",
      "info" : "ExpressionStatement[197379-197447]:ExpressionStatement[198351-198419]"
    }, {
      "left" : "return preview;",
      "right" : "return preview;",
      "info" : "ReturnStatement[197457-197472]:ReturnStatement[198429-198444]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[197484-197491]:Modifier[198456-198463]"
    }, {
      "left" : "CharSequence",
      "right" : "CharSequence",
      "info" : "SimpleType[197492-197504]:SimpleType[198464-198476]"
    }, {
      "left" : "buildMessageSummary",
      "right" : "buildMessageSummary",
      "info" : "SimpleName[197505-197524]:SimpleName[198477-198496]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[197525-197540]:SingleVariableDeclaration[198497-198512]"
    }, {
      "left" : "CharSequence sender",
      "right" : "CharSequence sender",
      "info" : "SingleVariableDeclaration[197542-197561]:SingleVariableDeclaration[198514-198533]"
    }, {
      "left" : "CharSequence subject",
      "right" : "CharSequence subject",
      "info" : "SingleVariableDeclaration[197563-197583]:SingleVariableDeclaration[198535-198555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197585-197928]:Block[198557-198900]"
    }, {
      "left" : "if (sender == null)",
      "right" : "if (sender == null)",
      "info" : "IfStatement[197595-197654]:IfStatement[198567-198626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[197615-197654]:Block[198587-198626]"
    }, {
      "left" : "return subject;",
      "right" : "return subject;",
      "info" : "ReturnStatement[197629-197644]:ReturnStatement[198601-198616]"
    }, {
      "left" : "SpannableStringBuilder summary = new SpannableStringBuilder();",
      "right" : "SpannableStringBuilder summary = new SpannableStringBuilder();",
      "info" : "VariableDeclarationStatement[197664-197726]:VariableDeclarationStatement[198636-198698]"
    }, {
      "left" : "summary.append(sender);",
      "right" : "summary.append(sender);",
      "info" : "ExpressionStatement[197735-197758]:ExpressionStatement[198707-198730]"
    }, {
      "left" : "summary.append(\" \");",
      "right" : "summary.append(\" \");",
      "info" : "ExpressionStatement[197767-197787]:ExpressionStatement[198739-198759]"
    }, {
      "left" : "summary.append(subject);",
      "right" : "summary.append(subject);",
      "info" : "ExpressionStatement[197796-197820]:ExpressionStatement[198768-198792]"
    }, {
      "left" : "summary.setSpan(getEmphasizedSpan(context), 0, sender.length(), 0);",
      "right" : "summary.setSpan(getEmphasizedSpan(context), 0, sender.length(), 0);",
      "info" : "ExpressionStatement[197830-197897]:ExpressionStatement[198802-198869]"
    }, {
      "left" : "return summary;",
      "right" : "return summary;",
      "info" : "ReturnStatement[197907-197922]:ReturnStatement[198879-198894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[197934-197940]:Modifier[198906-198912]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[197941-197947]:Modifier[198913-198919]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[197948-197953]:Modifier[198920-198925]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[197954-197961]:PrimitiveType[198926-198933]"
    }, {
      "left" : "platformSupportsExtendedNotifications",
      "right" : "platformSupportsExtendedNotifications",
      "info" : "SimpleName[197962-197999]:SimpleName[198934-198971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198002-198149]:Block[198974-199121]"
    }, {
      "left" : "return Build.VERSION.SDK_INT >= 16;",
      "right" : "return Build.VERSION.SDK_INT >= 16;",
      "info" : "ReturnStatement[198108-198143]:ReturnStatement[199080-199115]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[198155-198161]:Modifier[199127-199133]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[198162-198168]:Modifier[199134-199140]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[198169-198176]:PrimitiveType[199141-199148]"
    }, {
      "left" : "platformSupportsLockScreenNotifications",
      "right" : "platformSupportsLockScreenNotifications",
      "info" : "SimpleName[198177-198216]:SimpleName[199149-199188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198219-198296]:Block[199191-199268]"
    }, {
      "left" : "return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;",
      "right" : "return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;",
      "info" : "ReturnStatement[198229-198290]:ReturnStatement[199201-199262]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[198302-198309]:Modifier[199274-199281]"
    }, {
      "left" : "LocalMessage",
      "right" : "LocalMessage",
      "info" : "SimpleType[198310-198322]:SimpleType[199282-199294]"
    }, {
      "left" : "findNewestMessageForNotificationLocked",
      "right" : "findNewestMessageForNotificationLocked",
      "info" : "SimpleName[198323-198361]:SimpleName[199295-199333]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[198362-198377]:SingleVariableDeclaration[199334-199349]"
    }, {
      "left" : "NotificationData data",
      "right" : "NotificationData data",
      "info" : "SingleVariableDeclaration[198379-198400]:SingleVariableDeclaration[199351-199372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198402-198667]:Block[199374-199639]"
    }, {
      "left" : "if (!data.messages.isEmpty())",
      "right" : "if (!data.messages.isEmpty())",
      "info" : "IfStatement[198412-198498]:IfStatement[199384-199470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198442-198498]:Block[199414-199470]"
    }, {
      "left" : "return data.messages.getFirst();",
      "right" : "return data.messages.getFirst();",
      "info" : "ReturnStatement[198456-198488]:ReturnStatement[199428-199460]"
    }, {
      "left" : "if (!data.droppedMessages.isEmpty())",
      "right" : "if (!data.droppedMessages.isEmpty())",
      "info" : "IfStatement[198508-198639]:IfStatement[199480-199611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198545-198639]:Block[199517-199611]"
    }, {
      "left" : "return data.droppedMessages.getFirst().restoreToLocalMessage(context);",
      "right" : "return data.droppedMessages.getFirst().restoreToLocalMessage(context);",
      "info" : "ReturnStatement[198559-198629]:ReturnStatement[199531-199601]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[198649-198661]:ReturnStatement[199621-199633]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[198748-198755]:Modifier[199720-199727]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[198756-198760]:PrimitiveType[199728-199732]"
    }, {
      "left" : "notifyAccount",
      "right" : "notifyAccount",
      "info" : "SimpleName[198761-198774]:SimpleName[199733-199746]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[198775-198790]:SingleVariableDeclaration[199747-199762]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[198792-198807]:SingleVariableDeclaration[199764-199779]"
    }, {
      "left" : "LocalMessage message",
      "right" : "LocalMessage message",
      "info" : "SingleVariableDeclaration[198821-198841]:SingleVariableDeclaration[199793-199813]"
    }, {
      "left" : "int previousUnreadMessageCount",
      "right" : "int previousUnreadMessageCount",
      "info" : "SingleVariableDeclaration[198843-198873]:SingleVariableDeclaration[199815-199845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198875-199092]:Block[199847-200064]"
    }, {
      "left" : "final NotificationData data = getNotificationData(account, previousUnreadMessageCount);",
      "right" : "final NotificationData data = getNotificationData(account, previousUnreadMessageCount);",
      "info" : "VariableDeclarationStatement[198885-198972]:VariableDeclarationStatement[199857-199944]"
    }, {
      "left" : "synchronized (data) {\n            notifyAccountWithDataLocked(context, account, message, data);\n        }",
      "right" : "synchronized (data) {\n            notifyAccountWithDataLocked(context, account, message, data);\n        }",
      "info" : "SynchronizedStatement[198981-199086]:SynchronizedStatement[199953-200058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199001-199086]:Block[199973-200058]"
    }, {
      "left" : "notifyAccountWithDataLocked(context, account, message, data);",
      "right" : "notifyAccountWithDataLocked(context, account, message, data);",
      "info" : "ExpressionStatement[199015-199076]:ExpressionStatement[199987-200048]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[199248-199255]:Modifier[200220-200227]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[199256-199260]:PrimitiveType[200228-200232]"
    }, {
      "left" : "notifyAccountWithDataLocked",
      "right" : "notifyAccountWithDataLocked",
      "info" : "SimpleName[199261-199288]:SimpleName[200233-200260]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[199289-199304]:SingleVariableDeclaration[200261-200276]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[199306-199321]:SingleVariableDeclaration[200278-200293]"
    }, {
      "left" : "LocalMessage message",
      "right" : "LocalMessage message",
      "info" : "SingleVariableDeclaration[199335-199355]:SingleVariableDeclaration[200307-200327]"
    }, {
      "left" : "NotificationData data",
      "right" : "NotificationData data",
      "info" : "SingleVariableDeclaration[199357-199378]:SingleVariableDeclaration[200329-200350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199380-210241]:Block[200352-211213]"
    }, {
      "left" : "boolean updateSilently = false;",
      "right" : "boolean updateSilently = false;",
      "info" : "VariableDeclarationStatement[199390-199421]:VariableDeclarationStatement[200362-200393]"
    }, {
      "left" : "if (message == null)",
      "right" : "if (message == null)",
      "info" : "IfStatement[199431-200036]:IfStatement[200403-201008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199452-199981]:Block[200424-200953]"
    }, {
      "left" : "message = findNewestMessageForNotificationLocked(context, data);",
      "right" : "message = findNewestMessageForNotificationLocked(context, data);",
      "info" : "ExpressionStatement[199568-199632]:ExpressionStatement[200540-200604]"
    }, {
      "left" : "updateSilently = true;",
      "right" : "updateSilently = true;",
      "info" : "ExpressionStatement[199645-199667]:ExpressionStatement[200617-200639]"
    }, {
      "left" : "if (message == null)",
      "right" : "if (message == null)",
      "info" : "IfStatement[199680-199971]:IfStatement[200652-200943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199701-199971]:Block[200673-200943]"
    }, {
      "left" : "notifyAccountCancel(context, account);",
      "right" : "notifyAccountCancel(context, account);",
      "info" : "ExpressionStatement[199895-199933]:ExpressionStatement[200867-200905]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[199950-199957]:ReturnStatement[200922-200929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199987-200036]:Block[200959-201008]"
    }, {
      "left" : "data.addMessage(message);",
      "right" : "data.addMessage(message);",
      "info" : "ExpressionStatement[200001-200026]:ExpressionStatement[200973-200998]"
    }, {
      "left" : "final KeyguardManager keyguardService = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);",
      "right" : "final KeyguardManager keyguardService = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);",
      "info" : "VariableDeclarationStatement[200046-200155]:VariableDeclarationStatement[201018-201127]"
    }, {
      "left" : "final CharSequence sender = getMessageSender(context, account, message);",
      "right" : "final CharSequence sender = getMessageSender(context, account, message);",
      "info" : "VariableDeclarationStatement[200164-200236]:VariableDeclarationStatement[201136-201208]"
    }, {
      "left" : "final CharSequence subject = getMessageSubject(context, message);",
      "right" : "final CharSequence subject = getMessageSubject(context, message);",
      "info" : "VariableDeclarationStatement[200245-200310]:VariableDeclarationStatement[201217-201282]"
    }, {
      "left" : "CharSequence summary = buildMessageSummary(context, sender, subject);",
      "right" : "CharSequence summary = buildMessageSummary(context, sender, subject);",
      "info" : "VariableDeclarationStatement[200319-200388]:VariableDeclarationStatement[201291-201360]"
    }, {
      "left" : "boolean privacyModeEnabled =\n                (K9.getNotificationHideSubject() == NotificationHideSubject.ALWAYS) ||\n                (K9.getNotificationHideSubject() == NotificationHideSubject.WHEN_LOCKED &&\n                keyguardService.inKeyguardRestrictedInputMode());",
      "right" : "boolean privacyModeEnabled =\n                (K9.getNotificationHideSubject() == NotificationHideSubject.ALWAYS) ||\n                (K9.getNotificationHideSubject() == NotificationHideSubject.WHEN_LOCKED &&\n                keyguardService.inKeyguardRestrictedInputMode());",
      "info" : "VariableDeclarationStatement[200398-200670]:VariableDeclarationStatement[201370-201642]"
    }, {
      "left" : "if (privacyModeEnabled || summary.length() == 0)",
      "right" : "if (privacyModeEnabled || summary.length() == 0)",
      "info" : "IfStatement[200680-200814]:IfStatement[201652-201786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[200729-200814]:Block[201701-201786]"
    }, {
      "left" : "summary = context.getString(R.string.notification_new_title);",
      "right" : "summary = context.getString(R.string.notification_new_title);",
      "info" : "ExpressionStatement[200743-200804]:ExpressionStatement[201715-201776]"
    }, {
      "left" : "NotificationManager notifMgr =\n                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "NotificationManager notifMgr =\n                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[200824-200948]:VariableDeclarationStatement[201796-201920]"
    }, {
      "left" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "right" : "NotificationCompat.Builder builder = new NotificationCompat.Builder(context);",
      "info" : "VariableDeclarationStatement[200958-201035]:VariableDeclarationStatement[201930-202007]"
    }, {
      "left" : "builder.setSmallIcon(R.drawable.ic_notify_new_mail);",
      "right" : "builder.setSmallIcon(R.drawable.ic_notify_new_mail);",
      "info" : "ExpressionStatement[201044-201096]:ExpressionStatement[202016-202068]"
    }, {
      "left" : "builder.setWhen(System.currentTimeMillis());",
      "right" : "builder.setWhen(System.currentTimeMillis());",
      "info" : "ExpressionStatement[201105-201149]:ExpressionStatement[202077-202121]"
    }, {
      "left" : "if (!updateSilently)",
      "right" : "if (!updateSilently)",
      "info" : "IfStatement[201158-201230]:IfStatement[202130-202202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201179-201230]:Block[202151-202202]"
    }, {
      "left" : "builder.setTicker(summary);",
      "right" : "builder.setTicker(summary);",
      "info" : "ExpressionStatement[201193-201220]:ExpressionStatement[202165-202192]"
    }, {
      "left" : "final int newMessages = data.getNewMessageCount();",
      "right" : "final int newMessages = data.getNewMessageCount();",
      "info" : "VariableDeclarationStatement[201240-201290]:VariableDeclarationStatement[202212-202262]"
    }, {
      "left" : "final int unreadCount = data.unreadBeforeNotification + newMessages;",
      "right" : "final int unreadCount = data.unreadBeforeNotification + newMessages;",
      "info" : "VariableDeclarationStatement[201299-201367]:VariableDeclarationStatement[202271-202339]"
    }, {
      "left" : "builder.setNumber(unreadCount);",
      "right" : "builder.setNumber(unreadCount);",
      "info" : "ExpressionStatement[201377-201408]:ExpressionStatement[202349-202380]"
    }, {
      "left" : "String accountDescr = (account.getDescription() != null) ?\n                account.getDescription() : account.getEmail();",
      "right" : "String accountDescr = (account.getDescription() != null) ?\n                account.getDescription() : account.getEmail();",
      "info" : "VariableDeclarationStatement[201418-201539]:VariableDeclarationStatement[202390-202511]"
    }, {
      "left" : "final ArrayList<MessageReference> allRefs = new ArrayList<MessageReference>();",
      "right" : "final ArrayList<MessageReference> allRefs = new ArrayList<MessageReference>();",
      "info" : "VariableDeclarationStatement[201548-201626]:VariableDeclarationStatement[202520-202598]"
    }, {
      "left" : "data.supplyAllMessageRefs(allRefs);",
      "right" : "data.supplyAllMessageRefs(allRefs);",
      "info" : "ExpressionStatement[201635-201670]:ExpressionStatement[202607-202642]"
    }, {
      "left" : "if (platformSupportsExtendedNotifications() && !privacyModeEnabled)",
      "right" : "if (platformSupportsExtendedNotifications() && !privacyModeEnabled)",
      "info" : "IfStatement[201680-207569]:IfStatement[202652-208541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201748-207311]:Block[202720-208283]"
    }, {
      "left" : "if (newMessages > 1)",
      "right" : "if (newMessages > 1)",
      "info" : "IfStatement[201762-203813]:IfStatement[202734-204785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201783-202823]:Block[202755-203795]"
    }, {
      "left" : "NotificationCompat.InboxStyle style = new NotificationCompat.InboxStyle(builder);",
      "right" : "NotificationCompat.InboxStyle style = new NotificationCompat.InboxStyle(builder);",
      "info" : "VariableDeclarationStatement[201864-201945]:VariableDeclarationStatement[202836-202917]"
    }, {
      "left" : "for (Message m : data.messages)",
      "right" : "for (Message m : data.messages)",
      "info" : "EnhancedForStatement[201962-202204]:EnhancedForStatement[202934-203176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201994-202204]:Block[202966-203176]"
    }, {
      "left" : "style.addLine(buildMessageSummary(context,\n                            getMessageSender(context, account, m),\n                            getMessageSubject(context, m)));",
      "right" : "style.addLine(buildMessageSummary(context,\n                            getMessageSender(context, account, m),\n                            getMessageSubject(context, m)));",
      "info" : "ExpressionStatement[202016-202186]:ExpressionStatement[202988-203158]"
    }, {
      "left" : "if (!data.droppedMessages.isEmpty())",
      "right" : "if (!data.droppedMessages.isEmpty())",
      "info" : "IfStatement[202221-202452]:IfStatement[203193-203424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202258-202452]:Block[203230-203424]"
    }, {
      "left" : "style.setSummaryText(context.getString(R.string.notification_additional_messages,\n                            data.droppedMessages.size(), accountDescr));",
      "right" : "style.setSummaryText(context.getString(R.string.notification_additional_messages,\n                            data.droppedMessages.size(), accountDescr));",
      "info" : "ExpressionStatement[202280-202434]:ExpressionStatement[203252-203406]"
    }, {
      "left" : "final String title = context.getResources().getQuantityString(\n                    R.plurals.notification_new_messages_title, newMessages, newMessages);",
      "right" : "final String title = context.getResources().getQuantityString(\n                    R.plurals.notification_new_messages_title, newMessages, newMessages);",
      "info" : "VariableDeclarationStatement[202469-202621]:VariableDeclarationStatement[203441-203593]"
    }, {
      "left" : "style.setBigContentTitle(title);",
      "right" : "style.setBigContentTitle(title);",
      "info" : "ExpressionStatement[202638-202670]:ExpressionStatement[203610-203642]"
    }, {
      "left" : "builder.setContentTitle(title);",
      "right" : "builder.setContentTitle(title);",
      "info" : "ExpressionStatement[202687-202718]:ExpressionStatement[203659-203690]"
    }, {
      "left" : "builder.setSubText(accountDescr);",
      "right" : "builder.setSubText(accountDescr);",
      "info" : "ExpressionStatement[202735-202768]:ExpressionStatement[203707-203740]"
    }, {
      "left" : "builder.setStyle(style);",
      "right" : "builder.setStyle(style);",
      "info" : "ExpressionStatement[202785-202809]:ExpressionStatement[203757-203781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202829-203813]:Block[203801-204785]"
    }, {
      "left" : "NotificationCompat.BigTextStyle style = new NotificationCompat.BigTextStyle(builder);",
      "right" : "NotificationCompat.BigTextStyle style = new NotificationCompat.BigTextStyle(builder);",
      "info" : "VariableDeclarationStatement[202904-202989]:VariableDeclarationStatement[203876-203961]"
    }, {
      "left" : "CharSequence preview = getMessagePreview(context, message);",
      "right" : "CharSequence preview = getMessagePreview(context, message);",
      "info" : "VariableDeclarationStatement[203006-203065]:VariableDeclarationStatement[203978-204037]"
    }, {
      "left" : "if (preview != null)",
      "right" : "if (preview != null)",
      "info" : "IfStatement[203082-203166]:IfStatement[204054-204138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203103-203166]:Block[204075-204138]"
    }, {
      "left" : "style.bigText(preview);",
      "right" : "style.bigText(preview);",
      "info" : "ExpressionStatement[203125-203148]:ExpressionStatement[204097-204120]"
    }, {
      "left" : "builder.setContentText(subject);",
      "right" : "builder.setContentText(subject);",
      "info" : "ExpressionStatement[203183-203215]:ExpressionStatement[204155-204187]"
    }, {
      "left" : "builder.setSubText(accountDescr);",
      "right" : "builder.setSubText(accountDescr);",
      "info" : "ExpressionStatement[203232-203265]:ExpressionStatement[204204-204237]"
    }, {
      "left" : "builder.setContentTitle(sender);",
      "right" : "builder.setContentTitle(sender);",
      "info" : "ExpressionStatement[203282-203314]:ExpressionStatement[204254-204286]"
    }, {
      "left" : "builder.setStyle(style);",
      "right" : "builder.setStyle(style);",
      "info" : "ExpressionStatement[203331-203355]:ExpressionStatement[204303-204327]"
    }, {
      "left" : "builder.addAction(\n                    platformSupportsLockScreenNotifications()\n                        ? R.drawable.ic_action_single_message_options_dark_vector\n                        : R.drawable.ic_action_single_message_options_dark,\n                    context.getString(R.string.notification_action_reply),\n                    NotificationActionService.getReplyIntent(context, account, message.makeMessageReference()));",
      "right" : "builder.addAction(\n                    platformSupportsLockScreenNotifications()\n                        ? R.drawable.ic_action_single_message_options_dark_vector\n                        : R.drawable.ic_action_single_message_options_dark,\n                    context.getString(R.string.notification_action_reply),\n                    NotificationActionService.getReplyIntent(context, account, message.makeMessageReference()));",
      "info" : "ExpressionStatement[203373-203799]:ExpressionStatement[204345-204771]"
    }, {
      "left" : "builder.addAction(\n                platformSupportsLockScreenNotifications()\n                    ? R.drawable.ic_action_mark_as_read_dark_vector\n                    : R.drawable.ic_action_mark_as_read_dark,\n                context.getString(R.string.notification_action_mark_as_read),\n                NotificationActionService.getReadAllMessagesIntent(context, account, allRefs));",
      "right" : "builder.addAction(\n                platformSupportsLockScreenNotifications()\n                    ? R.drawable.ic_action_mark_as_read_dark_vector\n                    : R.drawable.ic_action_mark_as_read_dark,\n                context.getString(R.string.notification_action_mark_as_read),\n                NotificationActionService.getReadAllMessagesIntent(context, account, allRefs));",
      "info" : "ExpressionStatement[203861-204241]:ExpressionStatement[204833-205213]"
    }, {
      "left" : "NotificationQuickDelete deleteOption = K9.getNotificationQuickDeleteBehaviour();",
      "right" : "NotificationQuickDelete deleteOption = K9.getNotificationQuickDeleteBehaviour();",
      "info" : "VariableDeclarationStatement[204255-204335]:VariableDeclarationStatement[205227-205307]"
    }, {
      "left" : "boolean showDeleteAction = deleteOption == NotificationQuickDelete.ALWAYS ||\n                    (deleteOption == NotificationQuickDelete.FOR_SINGLE_MSG && newMessages == 1);",
      "right" : "boolean showDeleteAction = deleteOption == NotificationQuickDelete.ALWAYS ||\n                    (deleteOption == NotificationQuickDelete.FOR_SINGLE_MSG && newMessages == 1);",
      "info" : "VariableDeclarationStatement[204348-204522]:VariableDeclarationStatement[205320-205494]"
    }, {
      "left" : "NotificationCompat.WearableExtender wearableExtender = new NotificationCompat.WearableExtender();",
      "right" : "NotificationCompat.WearableExtender wearableExtender = new NotificationCompat.WearableExtender();",
      "info" : "VariableDeclarationStatement[204536-204633]:VariableDeclarationStatement[205508-205605]"
    }, {
      "left" : "if (showDeleteAction)",
      "right" : "if (showDeleteAction)",
      "info" : "IfStatement[204646-205962]:IfStatement[205618-206934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204668-205962]:Block[205640-206934]"
    }, {
      "left" : "builder.addAction(\n                    platformSupportsLockScreenNotifications()\n                        ? R.drawable.ic_action_delete_dark_vector\n                        : R.drawable.ic_action_delete_dark,\n                    context.getString(R.string.notification_action_delete),\n                    NotificationDeleteConfirmation.getIntent(context, account, allRefs));",
      "right" : "builder.addAction(\n                    platformSupportsLockScreenNotifications()\n                        ? R.drawable.ic_action_delete_dark_vector\n                        : R.drawable.ic_action_delete_dark,\n                    context.getString(R.string.notification_action_delete),\n                    NotificationDeleteConfirmation.getIntent(context, account, allRefs));",
      "info" : "ExpressionStatement[204901-205273]:ExpressionStatement[205873-206245]"
    }, {
      "left" : "if (!K9.confirmDeleteFromNotification())",
      "right" : "if (!K9.confirmDeleteFromNotification())",
      "info" : "IfStatement[205361-205948]:IfStatement[206333-206920]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205402-205948]:Block[206374-206920]"
    }, {
      "left" : "NotificationCompat.Action wearActionDelete =\n                            new NotificationCompat.Action.Builder(\n                                    R.drawable.ic_action_delete_dark,\n                                    context.getString(R.string.notification_action_delete),\n                                    NotificationDeleteConfirmation.getIntent(context, account, allRefs))\n                                    .build();",
      "right" : "NotificationCompat.Action wearActionDelete =\n                            new NotificationCompat.Action.Builder(\n                                    R.drawable.ic_action_delete_dark,\n                                    context.getString(R.string.notification_action_delete),\n                                    NotificationDeleteConfirmation.getIntent(context, account, allRefs))\n                                    .build();",
      "info" : "VariableDeclarationStatement[205424-205848]:VariableDeclarationStatement[206396-206820]"
    }, {
      "left" : "builder.extend(wearableExtender.addAction(wearActionDelete));",
      "right" : "builder.extend(wearableExtender.addAction(wearActionDelete));",
      "info" : "ExpressionStatement[205869-205930]:ExpressionStatement[206841-206902]"
    }, {
      "left" : "if (NotificationActionService.isArchiveAllMessagesWearAvaliable(context, account, data.messages))",
      "right" : "if (NotificationActionService.isArchiveAllMessagesWearAvaliable(context, account, data.messages))",
      "info" : "IfStatement[205975-206639]:IfStatement[206947-207611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[206073-206639]:Block[207045-207611]"
    }, {
      "left" : "NotificationCompat.Action wearActionArchive =\n                        new NotificationCompat.Action.Builder(\n                                R.drawable.ic_action_delete_dark,\n                                context.getString(R.string.notification_action_archive),\n                                NotificationActionService.getArchiveAllMessagesIntent(context, account, allRefs))\n                                .build();",
      "right" : "NotificationCompat.Action wearActionArchive =\n                        new NotificationCompat.Action.Builder(\n                                R.drawable.ic_action_delete_dark,\n                                context.getString(R.string.notification_action_archive),\n                                NotificationActionService.getArchiveAllMessagesIntent(context, account, allRefs))\n                                .build();",
      "info" : "VariableDeclarationStatement[206127-206546]:VariableDeclarationStatement[207099-207518]"
    }, {
      "left" : "builder.extend(wearableExtender.addAction(wearActionArchive));",
      "right" : "builder.extend(wearableExtender.addAction(wearActionArchive));",
      "info" : "ExpressionStatement[206563-206625]:ExpressionStatement[207535-207597]"
    }, {
      "left" : "if (NotificationActionService.isSpamAllMessagesWearAvaliable(context, account, data.messages))",
      "right" : "if (NotificationActionService.isSpamAllMessagesWearAvaliable(context, account, data.messages))",
      "info" : "IfStatement[206652-207301]:IfStatement[207624-208273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[206747-207301]:Block[207719-208273]"
    }, {
      "left" : "NotificationCompat.Action wearActionSpam =\n                        new NotificationCompat.Action.Builder(\n                                R.drawable.ic_action_delete_dark,\n                                context.getString(R.string.notification_action_spam),\n                                NotificationActionService.getSpamAllMessagesIntent(context, account, allRefs))\n                                .build();",
      "right" : "NotificationCompat.Action wearActionSpam =\n                        new NotificationCompat.Action.Builder(\n                                R.drawable.ic_action_delete_dark,\n                                context.getString(R.string.notification_action_spam),\n                                NotificationActionService.getSpamAllMessagesIntent(context, account, allRefs))\n                                .build();",
      "info" : "VariableDeclarationStatement[206801-207211]:VariableDeclarationStatement[207773-208183]"
    }, {
      "left" : "builder.extend(wearableExtender.addAction(wearActionSpam));",
      "right" : "builder.extend(wearableExtender.addAction(wearActionSpam));",
      "info" : "ExpressionStatement[207228-207287]:ExpressionStatement[208200-208259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207317-207569]:Block[208289-208541]"
    }, {
      "left" : "String accountNotice = context.getString(R.string.notification_new_one_account_fmt,\n                    unreadCount, accountDescr);",
      "right" : "String accountNotice = context.getString(R.string.notification_new_one_account_fmt,\n                    unreadCount, accountDescr);",
      "info" : "VariableDeclarationStatement[207331-207462]:VariableDeclarationStatement[208303-208434]"
    }, {
      "left" : "builder.setContentTitle(accountNotice);",
      "right" : "builder.setContentTitle(accountNotice);",
      "info" : "ExpressionStatement[207475-207514]:ExpressionStatement[208447-208486]"
    }, {
      "left" : "builder.setContentText(summary);",
      "right" : "builder.setContentText(summary);",
      "info" : "ExpressionStatement[207527-207559]:ExpressionStatement[208499-208531]"
    }, {
      "left" : "for (Message m : data.messages)",
      "right" : "for (Message m : data.messages)",
      "info" : "EnhancedForStatement[207579-207771]:EnhancedForStatement[208551-208743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207611-207771]:Block[208583-208743]"
    }, {
      "left" : "if (m.isSet(Flag.FLAGGED))",
      "right" : "if (m.isSet(Flag.FLAGGED))",
      "info" : "IfStatement[207625-207761]:IfStatement[208597-208733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207652-207761]:Block[208624-208733]"
    }, {
      "left" : "builder.setPriority(NotificationCompat.PRIORITY_HIGH);",
      "right" : "builder.setPriority(NotificationCompat.PRIORITY_HIGH);",
      "info" : "ExpressionStatement[207670-207724]:ExpressionStatement[208642-208696]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[207741-207747]:BreakStatement[208713-208719]"
    }, {
      "left" : "TaskStackBuilder stack;",
      "right" : "TaskStackBuilder stack;",
      "info" : "VariableDeclarationStatement[207781-207804]:VariableDeclarationStatement[208753-208776]"
    }, {
      "left" : "boolean treatAsSingleMessageNotification;",
      "right" : "boolean treatAsSingleMessageNotification;",
      "info" : "VariableDeclarationStatement[207813-207854]:VariableDeclarationStatement[208785-208826]"
    }, {
      "left" : "if (platformSupportsExtendedNotifications())",
      "right" : "if (platformSupportsExtendedNotifications())",
      "info" : "IfStatement[207864-208316]:IfStatement[208836-209288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207909-208082]:Block[208881-209054]"
    }, {
      "left" : "treatAsSingleMessageNotification = newMessages == 1;",
      "right" : "treatAsSingleMessageNotification = newMessages == 1;",
      "info" : "ExpressionStatement[208020-208072]:ExpressionStatement[208992-209044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208088-208316]:Block[209060-209288]"
    }, {
      "left" : "treatAsSingleMessageNotification = unreadCount == 1;",
      "right" : "treatAsSingleMessageNotification = unreadCount == 1;",
      "info" : "ExpressionStatement[208254-208306]:ExpressionStatement[209226-209278]"
    }, {
      "left" : "if (treatAsSingleMessageNotification)",
      "right" : "if (treatAsSingleMessageNotification)",
      "info" : "IfStatement[208326-209071]:IfStatement[209298-210043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208364-208463]:Block[209336-209435]"
    }, {
      "left" : "stack = buildMessageViewBackStack(context, message.makeMessageReference());",
      "right" : "stack = buildMessageViewBackStack(context, message.makeMessageReference());",
      "info" : "ExpressionStatement[208378-208453]:ExpressionStatement[209350-209425]"
    }, {
      "left" : "if (account.goToUnreadMessageSearch())",
      "right" : "if (account.goToUnreadMessageSearch())",
      "info" : "IfStatement[208469-209071]:IfStatement[209441-210043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208508-208579]:Block[209480-209551]"
    }, {
      "left" : "stack = buildUnreadBackStack(context, account);",
      "right" : "stack = buildUnreadBackStack(context, account);",
      "info" : "ExpressionStatement[208522-208569]:ExpressionStatement[209494-209541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208585-209071]:Block[209557-210043]"
    }, {
      "left" : "String initialFolder = message.getFolder().getName();",
      "right" : "String initialFolder = message.getFolder().getName();",
      "info" : "VariableDeclarationStatement[208599-208652]:VariableDeclarationStatement[209571-209624]"
    }, {
      "left" : "for (MessageReference ref : allRefs)",
      "right" : "for (MessageReference ref : allRefs)",
      "info" : "EnhancedForStatement[208764-208980]:EnhancedForStatement[209736-209952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208801-208980]:Block[209773-209952]"
    }, {
      "left" : "if (!TextUtils.equals(initialFolder, ref.getFolderName()))",
      "right" : "if (!TextUtils.equals(initialFolder, ref.getFolderName()))",
      "info" : "IfStatement[208819-208966]:IfStatement[209791-209938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208878-208966]:Block[209850-209938]"
    }, {
      "left" : "initialFolder = null;",
      "right" : "initialFolder = null;",
      "info" : "ExpressionStatement[208900-208921]:ExpressionStatement[209872-209893]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[208942-208948]:BreakStatement[209914-209920]"
    }, {
      "left" : "stack = buildMessageListBackStack(context, account, initialFolder);",
      "right" : "stack = buildMessageListBackStack(context, account, initialFolder);",
      "info" : "ExpressionStatement[208994-209061]:ExpressionStatement[209966-210033]"
    }, {
      "left" : "builder.setContentIntent(stack.getPendingIntent(\n                account.getAccountNumber(),\n                PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT));",
      "right" : "builder.setContentIntent(stack.getPendingIntent(\n                account.getAccountNumber(),\n                PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_ONE_SHOT));",
      "info" : "ExpressionStatement[209081-209256]:ExpressionStatement[210053-210228]"
    }, {
      "left" : "builder.setDeleteIntent(NotificationActionService.getAcknowledgeIntent(context, account));",
      "right" : "builder.setDeleteIntent(NotificationActionService.getAcknowledgeIntent(context, account));",
      "info" : "ExpressionStatement[209265-209355]:ExpressionStatement[210237-210327]"
    }, {
      "left" : "boolean ringAndVibrate = false;",
      "right" : "boolean ringAndVibrate = false;",
      "info" : "VariableDeclarationStatement[209454-209485]:VariableDeclarationStatement[210426-210457]"
    }, {
      "left" : "if (!updateSilently && !account.isRingNotified())",
      "right" : "if (!updateSilently && !account.isRingNotified())",
      "info" : "IfStatement[209494-209633]:IfStatement[210466-210605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209544-209633]:Block[210516-210605]"
    }, {
      "left" : "account.setRingNotified(true);",
      "right" : "account.setRingNotified(true);",
      "info" : "ExpressionStatement[209558-209588]:ExpressionStatement[210530-210560]"
    }, {
      "left" : "ringAndVibrate = true;",
      "right" : "ringAndVibrate = true;",
      "info" : "ExpressionStatement[209601-209623]:ExpressionStatement[210573-210595]"
    }, {
      "left" : "NotificationSetting n = account.getNotificationSetting();",
      "right" : "NotificationSetting n = account.getNotificationSetting();",
      "info" : "VariableDeclarationStatement[209643-209700]:VariableDeclarationStatement[210615-210672]"
    }, {
      "left" : "configureLockScreenNotification(builder, context, account, newMessages, unreadCount, accountDescr, sender, data.messages);",
      "right" : "configureLockScreenNotification(builder, context, account, newMessages, unreadCount, accountDescr, sender, data.messages);",
      "info" : "ExpressionStatement[209710-209832]:ExpressionStatement[210682-210804]"
    }, {
      "left" : "configureNotification(\n                builder,\n                (n.shouldRing()) ?  n.getRingtone() : null,\n                (n.shouldVibrate()) ? n.getVibration() : null,\n                (n.isLed()) ? Integer.valueOf(n.getLedColor()) : null,\n                K9.NOTIFICATION_LED_BLINK_SLOW,\n                ringAndVibrate);",
      "right" : "configureNotification(\n                builder,\n                (n.shouldRing()) ?  n.getRingtone() : null,\n                (n.shouldVibrate()) ? n.getVibration() : null,\n                (n.isLed()) ? Integer.valueOf(n.getLedColor()) : null,\n                K9.NOTIFICATION_LED_BLINK_SLOW,\n                ringAndVibrate);",
      "info" : "ExpressionStatement[209842-210164]:ExpressionStatement[210814-211136]"
    }, {
      "left" : "notifMgr.notify(account.getAccountNumber(), builder.build());",
      "right" : "notifMgr.notify(account.getAccountNumber(), builder.build());",
      "info" : "ExpressionStatement[210174-210235]:ExpressionStatement[211146-211207]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[210247-210254]:Modifier[211219-211226]"
    }, {
      "left" : "TaskStackBuilder",
      "right" : "TaskStackBuilder",
      "info" : "SimpleType[210255-210271]:SimpleType[211227-211243]"
    }, {
      "left" : "buildAccountsBackStack",
      "right" : "buildAccountsBackStack",
      "info" : "SimpleName[210272-210294]:SimpleName[211244-211266]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[210295-210310]:SingleVariableDeclaration[211267-211282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210312-210577]:Block[211284-211549]"
    }, {
      "left" : "TaskStackBuilder stack = TaskStackBuilder.create(context);",
      "right" : "TaskStackBuilder stack = TaskStackBuilder.create(context);",
      "info" : "VariableDeclarationStatement[210322-210380]:VariableDeclarationStatement[211294-211352]"
    }, {
      "left" : "if (!skipAccountsInBackStack(context))",
      "right" : "if (!skipAccountsInBackStack(context))",
      "info" : "IfStatement[210389-210549]:IfStatement[211361-211521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210428-210549]:Block[211400-211521]"
    }, {
      "left" : "stack.addNextIntent(new Intent(context, Accounts.class).putExtra(Accounts.EXTRA_STARTUP, false));",
      "right" : "stack.addNextIntent(new Intent(context, Accounts.class).putExtra(Accounts.EXTRA_STARTUP, false));",
      "info" : "ExpressionStatement[210442-210539]:ExpressionStatement[211414-211511]"
    }, {
      "left" : "return stack;",
      "right" : "return stack;",
      "info" : "ReturnStatement[210558-210571]:ReturnStatement[211530-211543]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[210583-210590]:Modifier[211555-211562]"
    }, {
      "left" : "TaskStackBuilder",
      "right" : "TaskStackBuilder",
      "info" : "SimpleType[210591-210607]:SimpleType[211563-211579]"
    }, {
      "left" : "buildFolderListBackStack",
      "right" : "buildFolderListBackStack",
      "info" : "SimpleName[210608-210632]:SimpleName[211580-211604]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[210633-210648]:SingleVariableDeclaration[211605-211620]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[210650-210665]:SingleVariableDeclaration[211622-211637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210667-210854]:Block[211639-211826]"
    }, {
      "left" : "TaskStackBuilder stack = buildAccountsBackStack(context);",
      "right" : "TaskStackBuilder stack = buildAccountsBackStack(context);",
      "info" : "VariableDeclarationStatement[210677-210734]:VariableDeclarationStatement[211649-211706]"
    }, {
      "left" : "stack.addNextIntent(FolderList.actionHandleAccountIntent(context, account, false));",
      "right" : "stack.addNextIntent(FolderList.actionHandleAccountIntent(context, account, false));",
      "info" : "ExpressionStatement[210743-210826]:ExpressionStatement[211715-211798]"
    }, {
      "left" : "return stack;",
      "right" : "return stack;",
      "info" : "ReturnStatement[210835-210848]:ReturnStatement[211807-211820]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[210860-210867]:Modifier[211832-211839]"
    }, {
      "left" : "TaskStackBuilder",
      "right" : "TaskStackBuilder",
      "info" : "SimpleType[210868-210884]:SimpleType[211840-211856]"
    }, {
      "left" : "buildUnreadBackStack",
      "right" : "buildUnreadBackStack",
      "info" : "SimpleName[210885-210905]:SimpleName[211857-211877]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[210906-210921]:SingleVariableDeclaration[211878-211893]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[210923-210944]:SingleVariableDeclaration[211895-211916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210946-211216]:Block[211918-212188]"
    }, {
      "left" : "TaskStackBuilder stack = buildAccountsBackStack(context);",
      "right" : "TaskStackBuilder stack = buildAccountsBackStack(context);",
      "info" : "VariableDeclarationStatement[210956-211013]:VariableDeclarationStatement[211928-211985]"
    }, {
      "left" : "LocalSearch search = Accounts.createUnreadSearch(context, account);",
      "right" : "LocalSearch search = Accounts.createUnreadSearch(context, account);",
      "info" : "VariableDeclarationStatement[211022-211089]:VariableDeclarationStatement[211994-212061]"
    }, {
      "left" : "stack.addNextIntent(MessageList.intentDisplaySearch(context, search, true, false, false));",
      "right" : "stack.addNextIntent(MessageList.intentDisplaySearch(context, search, true, false, false));",
      "info" : "ExpressionStatement[211098-211188]:ExpressionStatement[212070-212160]"
    }, {
      "left" : "return stack;",
      "right" : "return stack;",
      "info" : "ReturnStatement[211197-211210]:ReturnStatement[212169-212182]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[211222-211229]:Modifier[212194-212201]"
    }, {
      "left" : "TaskStackBuilder",
      "right" : "TaskStackBuilder",
      "info" : "SimpleType[211230-211246]:SimpleType[212202-212218]"
    }, {
      "left" : "buildMessageListBackStack",
      "right" : "buildMessageListBackStack",
      "info" : "SimpleName[211247-211272]:SimpleName[212219-212244]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[211273-211288]:SingleVariableDeclaration[212245-212260]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[211290-211305]:SingleVariableDeclaration[212262-212277]"
    }, {
      "left" : "String folder",
      "right" : "String folder",
      "info" : "SingleVariableDeclaration[211307-211320]:SingleVariableDeclaration[212279-212292]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211322-211848]:Block[212294-212820]"
    }, {
      "left" : "TaskStackBuilder stack = skipFolderListInBackStack(context, account, folder)\n                ? buildAccountsBackStack(context)\n                : buildFolderListBackStack(context, account);",
      "right" : "TaskStackBuilder stack = skipFolderListInBackStack(context, account, folder)\n                ? buildAccountsBackStack(context)\n                : buildFolderListBackStack(context, account);",
      "info" : "VariableDeclarationStatement[211332-211520]:VariableDeclarationStatement[212304-212492]"
    }, {
      "left" : "if (folder != null)",
      "right" : "if (folder != null)",
      "info" : "IfStatement[211530-211820]:IfStatement[212502-212792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211550-211820]:Block[212522-212792]"
    }, {
      "left" : "LocalSearch search = new LocalSearch(folder);",
      "right" : "LocalSearch search = new LocalSearch(folder);",
      "info" : "VariableDeclarationStatement[211564-211609]:VariableDeclarationStatement[212536-212581]"
    }, {
      "left" : "search.addAllowedFolder(folder);",
      "right" : "search.addAllowedFolder(folder);",
      "info" : "ExpressionStatement[211622-211654]:ExpressionStatement[212594-212626]"
    }, {
      "left" : "search.addAccountUuid(account.getUuid());",
      "right" : "search.addAccountUuid(account.getUuid());",
      "info" : "ExpressionStatement[211667-211708]:ExpressionStatement[212639-212680]"
    }, {
      "left" : "stack.addNextIntent(MessageList.intentDisplaySearch(context, search, false, true, true));",
      "right" : "stack.addNextIntent(MessageList.intentDisplaySearch(context, search, false, true, true));",
      "info" : "ExpressionStatement[211721-211810]:ExpressionStatement[212693-212782]"
    }, {
      "left" : "return stack;",
      "right" : "return stack;",
      "info" : "ReturnStatement[211829-211842]:ReturnStatement[212801-212814]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[211854-211861]:Modifier[212826-212833]"
    }, {
      "left" : "TaskStackBuilder",
      "right" : "TaskStackBuilder",
      "info" : "SimpleType[211862-211878]:SimpleType[212834-212850]"
    }, {
      "left" : "buildMessageViewBackStack",
      "right" : "buildMessageViewBackStack",
      "info" : "SimpleName[211879-211904]:SimpleName[212851-212876]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[211905-211920]:SingleVariableDeclaration[212877-212892]"
    }, {
      "left" : "MessageReference message",
      "right" : "MessageReference message",
      "info" : "SingleVariableDeclaration[211922-211946]:SingleVariableDeclaration[212894-212918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211948-212267]:Block[212920-213239]"
    }, {
      "left" : "Account account = Preferences.getPreferences(context).getAccount(message.getAccountUuid());",
      "right" : "Account account = Preferences.getPreferences(context).getAccount(message.getAccountUuid());",
      "info" : "VariableDeclarationStatement[211958-212049]:VariableDeclarationStatement[212930-213021]"
    }, {
      "left" : "TaskStackBuilder stack = buildMessageListBackStack(context, account, message.getFolderName());",
      "right" : "TaskStackBuilder stack = buildMessageListBackStack(context, account, message.getFolderName());",
      "info" : "VariableDeclarationStatement[212058-212152]:VariableDeclarationStatement[213030-213124]"
    }, {
      "left" : "stack.addNextIntent(MessageList.actionDisplayMessageIntent(context, message));",
      "right" : "stack.addNextIntent(MessageList.actionDisplayMessageIntent(context, message));",
      "info" : "ExpressionStatement[212161-212239]:ExpressionStatement[213133-213211]"
    }, {
      "left" : "return stack;",
      "right" : "return stack;",
      "info" : "ReturnStatement[212248-212261]:ReturnStatement[213220-213233]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[212273-212280]:Modifier[213245-213252]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[212281-212288]:PrimitiveType[213253-213260]"
    }, {
      "left" : "skipFolderListInBackStack",
      "right" : "skipFolderListInBackStack",
      "info" : "SimpleName[212289-212314]:SimpleName[213261-213286]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[212315-212330]:SingleVariableDeclaration[213287-213302]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[212332-212347]:SingleVariableDeclaration[213304-213319]"
    }, {
      "left" : "String folder",
      "right" : "String folder",
      "info" : "SingleVariableDeclaration[212349-212362]:SingleVariableDeclaration[213321-213334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[212364-212454]:Block[213336-213426]"
    }, {
      "left" : "return folder != null && folder.equals(account.getAutoExpandFolderName());",
      "right" : "return folder != null && folder.equals(account.getAutoExpandFolderName());",
      "info" : "ReturnStatement[212374-212448]:ReturnStatement[213346-213420]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[212460-212467]:Modifier[213432-213439]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[212468-212475]:PrimitiveType[213440-213447]"
    }, {
      "left" : "skipAccountsInBackStack",
      "right" : "skipAccountsInBackStack",
      "info" : "SimpleName[212476-212499]:SimpleName[213448-213471]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[212500-212515]:SingleVariableDeclaration[213472-213487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[212517-212602]:Block[213489-213574]"
    }, {
      "left" : "return Preferences.getPreferences(context).getAccounts().size() == 1;",
      "right" : "return Preferences.getPreferences(context).getAccounts().size() == 1;",
      "info" : "ReturnStatement[212527-212596]:ReturnStatement[213499-213568]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[213435-213442]:Modifier[214407-214414]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[213443-213447]:PrimitiveType[214415-214419]"
    }, {
      "left" : "configureNotification",
      "right" : "configureNotification",
      "info" : "SimpleName[213448-213469]:SimpleName[214420-214441]"
    }, {
      "left" : "NotificationCompat.Builder builder",
      "right" : "NotificationCompat.Builder builder",
      "info" : "SingleVariableDeclaration[213470-213504]:SingleVariableDeclaration[214442-214476]"
    }, {
      "left" : "String ringtone",
      "right" : "String ringtone",
      "info" : "SingleVariableDeclaration[213506-213521]:SingleVariableDeclaration[214478-214493]"
    }, {
      "left" : "long[] vibrationPattern",
      "right" : "long[] vibrationPattern",
      "info" : "SingleVariableDeclaration[213535-213558]:SingleVariableDeclaration[214507-214530]"
    }, {
      "left" : "Integer ledColor",
      "right" : "Integer ledColor",
      "info" : "SingleVariableDeclaration[213560-213576]:SingleVariableDeclaration[214532-214548]"
    }, {
      "left" : "int ledSpeed",
      "right" : "int ledSpeed",
      "info" : "SingleVariableDeclaration[213578-213590]:SingleVariableDeclaration[214550-214562]"
    }, {
      "left" : "boolean ringAndVibrate",
      "right" : "boolean ringAndVibrate",
      "info" : "SingleVariableDeclaration[213592-213614]:SingleVariableDeclaration[214564-214586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213616-214544]:Block[214588-215516]"
    }, {
      "left" : "if (K9.isQuietTime())",
      "right" : "if (K9.isQuietTime())",
      "info" : "IfStatement[213708-213761]:IfStatement[214680-214733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213730-213761]:Block[214702-214733]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[213744-213751]:ReturnStatement[214716-214723]"
    }, {
      "left" : "if (ringAndVibrate)",
      "right" : "if (ringAndVibrate)",
      "info" : "IfStatement[213771-214052]:IfStatement[214743-215024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213791-214052]:Block[214763-215024]"
    }, {
      "left" : "if (ringtone != null && !TextUtils.isEmpty(ringtone))",
      "right" : "if (ringtone != null && !TextUtils.isEmpty(ringtone))",
      "info" : "IfStatement[213805-213929]:IfStatement[214777-214901]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213859-213929]:Block[214831-214901]"
    }, {
      "left" : "builder.setSound(Uri.parse(ringtone));",
      "right" : "builder.setSound(Uri.parse(ringtone));",
      "info" : "ExpressionStatement[213877-213915]:ExpressionStatement[214849-214887]"
    }, {
      "left" : "if (vibrationPattern != null)",
      "right" : "if (vibrationPattern != null)",
      "info" : "IfStatement[213943-214042]:IfStatement[214915-215014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213973-214042]:Block[214945-215014]"
    }, {
      "left" : "builder.setVibrate(vibrationPattern);",
      "right" : "builder.setVibrate(vibrationPattern);",
      "info" : "ExpressionStatement[213991-214028]:ExpressionStatement[214963-215000]"
    }, {
      "left" : "if (ledColor != null)",
      "right" : "if (ledColor != null)",
      "info" : "IfStatement[214062-214538]:IfStatement[215034-215510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[214084-214538]:Block[215056-215510]"
    }, {
      "left" : "int ledOnMS;",
      "right" : "int ledOnMS;",
      "info" : "VariableDeclarationStatement[214098-214110]:VariableDeclarationStatement[215070-215082]"
    }, {
      "left" : "int ledOffMS;",
      "right" : "int ledOffMS;",
      "info" : "VariableDeclarationStatement[214123-214136]:VariableDeclarationStatement[215095-215108]"
    }, {
      "left" : "if (ledSpeed == K9.NOTIFICATION_LED_BLINK_SLOW)",
      "right" : "if (ledSpeed == K9.NOTIFICATION_LED_BLINK_SLOW)",
      "info" : "IfStatement[214149-214467]:IfStatement[215121-215439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[214197-214324]:Block[215169-215296]"
    }, {
      "left" : "ledOnMS = K9.NOTIFICATION_LED_ON_TIME;",
      "right" : "ledOnMS = K9.NOTIFICATION_LED_ON_TIME;",
      "info" : "ExpressionStatement[214215-214253]:ExpressionStatement[215187-215225]"
    }, {
      "left" : "ledOffMS = K9.NOTIFICATION_LED_OFF_TIME;",
      "right" : "ledOffMS = K9.NOTIFICATION_LED_OFF_TIME;",
      "info" : "ExpressionStatement[214270-214310]:ExpressionStatement[215242-215282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[214330-214467]:Block[215302-215439]"
    }, {
      "left" : "ledOnMS = K9.NOTIFICATION_LED_FAST_ON_TIME;",
      "right" : "ledOnMS = K9.NOTIFICATION_LED_FAST_ON_TIME;",
      "info" : "ExpressionStatement[214348-214391]:ExpressionStatement[215320-215363]"
    }, {
      "left" : "ledOffMS = K9.NOTIFICATION_LED_FAST_OFF_TIME;",
      "right" : "ledOffMS = K9.NOTIFICATION_LED_FAST_OFF_TIME;",
      "info" : "ExpressionStatement[214408-214453]:ExpressionStatement[215380-215425]"
    }, {
      "left" : "builder.setLights(ledColor, ledOnMS, ledOffMS);",
      "right" : "builder.setLights(ledColor, ledOnMS, ledOffMS);",
      "info" : "ExpressionStatement[214481-214528]:ExpressionStatement[215453-215500]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[215130-215137]:Modifier[216102-216109]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[215138-215142]:PrimitiveType[216110-216114]"
    }, {
      "left" : "configureLockScreenNotification",
      "right" : "configureLockScreenNotification",
      "info" : "SimpleName[215143-215174]:SimpleName[216115-216146]"
    }, {
      "left" : "NotificationCompat.Builder builder",
      "right" : "NotificationCompat.Builder builder",
      "info" : "SingleVariableDeclaration[215175-215209]:SingleVariableDeclaration[216147-216181]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[215260-215275]:SingleVariableDeclaration[216232-216247]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[215326-215341]:SingleVariableDeclaration[216298-216313]"
    }, {
      "left" : "int newMessages",
      "right" : "int newMessages",
      "info" : "SingleVariableDeclaration[215392-215407]:SingleVariableDeclaration[216364-216379]"
    }, {
      "left" : "int unreadCount",
      "right" : "int unreadCount",
      "info" : "SingleVariableDeclaration[215458-215473]:SingleVariableDeclaration[216430-216445]"
    }, {
      "left" : "CharSequence accountDescription",
      "right" : "CharSequence accountDescription",
      "info" : "SingleVariableDeclaration[215524-215555]:SingleVariableDeclaration[216496-216527]"
    }, {
      "left" : "CharSequence formattedSender",
      "right" : "CharSequence formattedSender",
      "info" : "SingleVariableDeclaration[215606-215634]:SingleVariableDeclaration[216578-216606]"
    }, {
      "left" : "List<? extends Message> messages",
      "right" : "List<? extends Message> messages",
      "info" : "SingleVariableDeclaration[215685-215717]:SingleVariableDeclaration[216657-216689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[215719-218120]:Block[216691-219092]"
    }, {
      "left" : "if (!platformSupportsLockScreenNotifications())",
      "right" : "if (!platformSupportsLockScreenNotifications())",
      "info" : "IfStatement[215729-215808]:IfStatement[216701-216780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[215777-215808]:Block[216749-216780]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[215791-215798]:ReturnStatement[216763-216770]"
    }, {
      "left" : "builder.setSmallIcon(R.drawable.ic_notify_new_mail_vector);",
      "right" : "builder.setSmallIcon(R.drawable.ic_notify_new_mail_vector);",
      "info" : "ExpressionStatement[215818-215877]:ExpressionStatement[216790-216849]"
    }, {
      "left" : "builder.setColor(account.getChipColor());",
      "right" : "builder.setColor(account.getChipColor());",
      "info" : "ExpressionStatement[215886-215927]:ExpressionStatement[216858-216899]"
    }, {
      "left" : "NotificationCompat.Builder publicNotification = new NotificationCompat.Builder(context);",
      "right" : "NotificationCompat.Builder publicNotification = new NotificationCompat.Builder(context);",
      "info" : "VariableDeclarationStatement[215937-216025]:VariableDeclarationStatement[216909-216997]"
    }, {
      "left" : "publicNotification.setSmallIcon(R.drawable.ic_notify_new_mail_vector);",
      "right" : "publicNotification.setSmallIcon(R.drawable.ic_notify_new_mail_vector);",
      "info" : "ExpressionStatement[216034-216104]:ExpressionStatement[217006-217076]"
    }, {
      "left" : "publicNotification.setColor(account.getChipColor());",
      "right" : "publicNotification.setColor(account.getChipColor());",
      "info" : "ExpressionStatement[216113-216165]:ExpressionStatement[217085-217137]"
    }, {
      "left" : "publicNotification.setNumber(unreadCount);",
      "right" : "publicNotification.setNumber(unreadCount);",
      "info" : "ExpressionStatement[216174-216216]:ExpressionStatement[217146-217188]"
    }, {
      "left" : "final String title = context.getResources().getQuantityString(\n            R.plurals.notification_new_messages_title, newMessages, newMessages);",
      "right" : "final String title = context.getResources().getQuantityString(\n            R.plurals.notification_new_messages_title, newMessages, newMessages);",
      "info" : "VariableDeclarationStatement[216225-216369]:VariableDeclarationStatement[217197-217341]"
    }, {
      "left" : "publicNotification.setContentTitle(title);",
      "right" : "publicNotification.setContentTitle(title);",
      "info" : "ExpressionStatement[216378-216420]:ExpressionStatement[217350-217392]"
    }, {
      "left" : "switch (K9.getLockScreenNotificationVisibility()) {\n            case NOTHING:\n                builder.setVisibility(NotificationCompat.VISIBILITY_SECRET);\n                break;\n            case APP_NAME:\n                // This is the Android default, but we should be explicit in case that changes in the future.\n                builder.setVisibility(NotificationCompat.VISIBILITY_PRIVATE);\n                break;\n            case SENDERS:\n                if (newMessages == 1) {\n                    publicNotification.setContentText(formattedSender);\n                } else {\n                    // Use a LinkedHashSet so that we preserve ordering (newest to oldest), but still remove duplicates\n                    Set<CharSequence> senders = new LinkedHashSet<CharSequence>(NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION);\n                    for (Message message : messages) {\n                        senders.add(getMessageSender(context, account, message));\n                        if (senders.size() == NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION) {\n                            break;\n                        }\n                    }\n                    publicNotification.setContentText(TextUtils.join(\", \", senders));\n                }\n\n                builder.setPublicVersion(publicNotification.build());\n                break;\n            case EVERYTHING:\n                builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n                break;\n            case MESSAGE_COUNT:\n            default:\n                publicNotification.setContentText(accountDescription);\n\n                builder.setPublicVersion(publicNotification.build());\n                break;\n        }",
      "right" : "switch (K9.getLockScreenNotificationVisibility()) {\n            case NOTHING:\n                builder.setVisibility(NotificationCompat.VISIBILITY_SECRET);\n                break;\n            case APP_NAME:\n                // This is the Android default, but we should be explicit in case that changes in the future.\n                builder.setVisibility(NotificationCompat.VISIBILITY_PRIVATE);\n                break;\n            case SENDERS:\n                if (newMessages == 1) {\n                    publicNotification.setContentText(formattedSender);\n                } else {\n                    // Use a LinkedHashSet so that we preserve ordering (newest to oldest), but still remove duplicates\n                    Set<CharSequence> senders = new LinkedHashSet<CharSequence>(NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION);\n                    for (Message message : messages) {\n                        senders.add(getMessageSender(context, account, message));\n                        if (senders.size() == NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION) {\n                            break;\n                        }\n                    }\n                    publicNotification.setContentText(TextUtils.join(\", \", senders));\n                }\n\n                builder.setPublicVersion(publicNotification.build());\n                break;\n            case EVERYTHING:\n                builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n                break;\n            case MESSAGE_COUNT:\n            default:\n                publicNotification.setContentText(accountDescription);\n\n                builder.setPublicVersion(publicNotification.build());\n                break;\n        }",
      "info" : "SwitchStatement[216430-218114]:SwitchStatement[217402-219086]"
    }, {
      "left" : "case NOTHING:",
      "right" : "case NOTHING:",
      "info" : "SwitchCase[216494-216507]:SwitchCase[217466-217479]"
    }, {
      "left" : "builder.setVisibility(NotificationCompat.VISIBILITY_SECRET);",
      "right" : "builder.setVisibility(NotificationCompat.VISIBILITY_SECRET);",
      "info" : "ExpressionStatement[216524-216584]:ExpressionStatement[217496-217556]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[216601-216607]:BreakStatement[217573-217579]"
    }, {
      "left" : "case APP_NAME:",
      "right" : "case APP_NAME:",
      "info" : "SwitchCase[216620-216634]:SwitchCase[217592-217606]"
    }, {
      "left" : "builder.setVisibility(NotificationCompat.VISIBILITY_PRIVATE);",
      "right" : "builder.setVisibility(NotificationCompat.VISIBILITY_PRIVATE);",
      "info" : "ExpressionStatement[216761-216822]:ExpressionStatement[217733-217794]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[216839-216845]:BreakStatement[217811-217817]"
    }, {
      "left" : "case SENDERS:",
      "right" : "case SENDERS:",
      "info" : "SwitchCase[216858-216871]:SwitchCase[217830-217843]"
    }, {
      "left" : "if (newMessages == 1)",
      "right" : "if (newMessages == 1)",
      "info" : "IfStatement[216888-217663]:IfStatement[217860-218635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[216910-217001]:Block[217882-217973]"
    }, {
      "left" : "publicNotification.setContentText(formattedSender);",
      "right" : "publicNotification.setContentText(formattedSender);",
      "info" : "ExpressionStatement[216932-216983]:ExpressionStatement[217904-217955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217007-217663]:Block[217979-218635]"
    }, {
      "left" : "Set<CharSequence> senders = new LinkedHashSet<CharSequence>(NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION);",
      "right" : "Set<CharSequence> senders = new LinkedHashSet<CharSequence>(NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION);",
      "info" : "VariableDeclarationStatement[217149-217250]:VariableDeclarationStatement[218121-218222]"
    }, {
      "left" : "for (Message message : messages)",
      "right" : "for (Message message : messages)",
      "info" : "EnhancedForStatement[217271-217559]:EnhancedForStatement[218243-218531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217304-217559]:Block[218276-218531]"
    }, {
      "left" : "senders.add(getMessageSender(context, account, message));",
      "right" : "senders.add(getMessageSender(context, account, message));",
      "info" : "ExpressionStatement[217330-217387]:ExpressionStatement[218302-218359]"
    }, {
      "left" : "if (senders.size() == NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION)",
      "right" : "if (senders.size() == NUM_SENDERS_IN_LOCK_SCREEN_NOTIFICATION)",
      "info" : "IfStatement[217412-217537]:IfStatement[218384-218509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217475-217537]:Block[218447-218509]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[217505-217511]:BreakStatement[218477-218483]"
    }, {
      "left" : "publicNotification.setContentText(TextUtils.join(\", \", senders));",
      "right" : "publicNotification.setContentText(TextUtils.join(\", \", senders));",
      "info" : "ExpressionStatement[217580-217645]:ExpressionStatement[218552-218617]"
    }, {
      "left" : "builder.setPublicVersion(publicNotification.build());",
      "right" : "builder.setPublicVersion(publicNotification.build());",
      "info" : "ExpressionStatement[217681-217734]:ExpressionStatement[218653-218706]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[217751-217757]:BreakStatement[218723-218729]"
    }, {
      "left" : "case EVERYTHING:",
      "right" : "case EVERYTHING:",
      "info" : "SwitchCase[217770-217786]:SwitchCase[218742-218758]"
    }, {
      "left" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "right" : "builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);",
      "info" : "ExpressionStatement[217803-217863]:ExpressionStatement[218775-218835]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[217880-217886]:BreakStatement[218852-218858]"
    }, {
      "left" : "case MESSAGE_COUNT:",
      "right" : "case MESSAGE_COUNT:",
      "info" : "SwitchCase[217899-217918]:SwitchCase[218871-218890]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[217931-217939]:SwitchCase[218903-218911]"
    }, {
      "left" : "publicNotification.setContentText(accountDescription);",
      "right" : "publicNotification.setContentText(accountDescription);",
      "info" : "ExpressionStatement[217956-218010]:ExpressionStatement[218928-218982]"
    }, {
      "left" : "builder.setPublicVersion(publicNotification.build());",
      "right" : "builder.setPublicVersion(publicNotification.build());",
      "info" : "ExpressionStatement[218028-218081]:ExpressionStatement[219000-219053]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[218098-218104]:BreakStatement[219070-219076]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[218181-218187]:Modifier[219153-219159]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[218188-218192]:PrimitiveType[219160-219164]"
    }, {
      "left" : "notifyAccountCancel",
      "right" : "notifyAccountCancel",
      "info" : "SimpleName[218193-218212]:SimpleName[219165-219184]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[218213-218228]:SingleVariableDeclaration[219185-219200]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[218230-218245]:SingleVariableDeclaration[219202-219217]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218247-218557]:Block[219219-219529]"
    }, {
      "left" : "NotificationManager notifMgr =\n            (NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "right" : "NotificationManager notifMgr =\n            (NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);",
      "info" : "VariableDeclarationStatement[218257-218376]:VariableDeclarationStatement[219229-219348]"
    }, {
      "left" : "notifMgr.cancel(account.getAccountNumber());",
      "right" : "notifMgr.cancel(account.getAccountNumber());",
      "info" : "ExpressionStatement[218385-218429]:ExpressionStatement[219357-219401]"
    }, {
      "left" : "notifMgr.cancel(-1000 - account.getAccountNumber());",
      "right" : "notifMgr.cancel(-1000 - account.getAccountNumber());",
      "info" : "ExpressionStatement[218438-218490]:ExpressionStatement[219410-219462]"
    }, {
      "left" : "notificationData.remove(account.getAccountNumber());",
      "right" : "notificationData.remove(account.getAccountNumber());",
      "info" : "ExpressionStatement[218499-218551]:ExpressionStatement[219471-219523]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[218563-218569]:Modifier[219535-219541]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[218570-218574]:PrimitiveType[219542-219546]"
    }, {
      "left" : "deleteAccount",
      "right" : "deleteAccount",
      "info" : "SimpleName[218575-218588]:SimpleName[219547-219560]"
    }, {
      "left" : "Context context",
      "right" : "Context context",
      "info" : "SingleVariableDeclaration[218589-218604]:SingleVariableDeclaration[219561-219576]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[218606-218621]:SingleVariableDeclaration[219578-219593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[218623-218728]:Block[219595-219700]"
    }, {
      "left" : "notifyAccountCancel(context, account);",
      "right" : "notifyAccountCancel(context, account);",
      "info" : "ExpressionStatement[218633-218671]:ExpressionStatement[219605-219643]"
    }, {
      "left" : "memorizingListener.removeAccount(account);",
      "right" : "memorizingListener.removeAccount(account);",
      "info" : "ExpressionStatement[218680-218722]:ExpressionStatement[219652-219694]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[218933-218939]:Modifier[219905-219911]"
    }, {
      "left" : "Message",
      "right" : "Message",
      "info" : "SimpleType[218940-218947]:SimpleType[219912-219919]"
    }, {
      "left" : "saveDraft",
      "right" : "saveDraft",
      "info" : "SimpleName[218948-218957]:SimpleName[219920-219929]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[218958-218979]:SingleVariableDeclaration[219930-219951]"
    }, {
      "left" : "final Message message",
      "right" : "final Message message",
      "info" : "SingleVariableDeclaration[218981-219002]:SingleVariableDeclaration[219953-219974]"
    }, {
      "left" : "long existingDraftId",
      "right" : "long existingDraftId",
      "info" : "SingleVariableDeclaration[219004-219024]:SingleVariableDeclaration[219976-219996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219026-220382]:Block[219998-221354]"
    }, {
      "left" : "Message localMessage = null;",
      "right" : "Message localMessage = null;",
      "info" : "VariableDeclarationStatement[219036-219064]:VariableDeclarationStatement[220008-220036]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[219073-220347]:TryStatement[220045-221319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219077-220189]:Block[220049-221161]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[219091-219139]:VariableDeclarationStatement[220063-220111]"
    }, {
      "left" : "LocalFolder localFolder = localStore.getFolder(account.getDraftsFolderName());",
      "right" : "LocalFolder localFolder = localStore.getFolder(account.getDraftsFolderName());",
      "info" : "VariableDeclarationStatement[219152-219230]:VariableDeclarationStatement[220124-220202]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[219243-219281]:ExpressionStatement[220215-220253]"
    }, {
      "left" : "if (existingDraftId != INVALID_MESSAGE_ID)",
      "right" : "if (existingDraftId != INVALID_MESSAGE_ID)",
      "info" : "IfStatement[219295-219467]:IfStatement[220267-220439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219338-219467]:Block[220310-220439]"
    }, {
      "left" : "String uid = localFolder.getMessageUidById(existingDraftId);",
      "right" : "String uid = localFolder.getMessageUidById(existingDraftId);",
      "info" : "VariableDeclarationStatement[219356-219416]:VariableDeclarationStatement[220328-220388]"
    }, {
      "left" : "message.setUid(uid);",
      "right" : "message.setUid(uid);",
      "info" : "ExpressionStatement[219433-219453]:ExpressionStatement[220405-220425]"
    }, {
      "left" : "localFolder.appendMessages(Collections.singletonList(message));",
      "right" : "localFolder.appendMessages(Collections.singletonList(message));",
      "info" : "ExpressionStatement[219527-219590]:ExpressionStatement[220499-220562]"
    }, {
      "left" : "localMessage = localFolder.getMessage(message.getUid());",
      "right" : "localMessage = localFolder.getMessage(message.getUid());",
      "info" : "ExpressionStatement[219709-219765]:ExpressionStatement[220681-220737]"
    }, {
      "left" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "right" : "localMessage.setFlag(Flag.X_DOWNLOADED_FULL, true);",
      "info" : "ExpressionStatement[219778-219829]:ExpressionStatement[220750-220801]"
    }, {
      "left" : "PendingCommand command = new PendingCommand();",
      "right" : "PendingCommand command = new PendingCommand();",
      "info" : "VariableDeclarationStatement[219843-219889]:VariableDeclarationStatement[220815-220861]"
    }, {
      "left" : "command.command = PENDING_COMMAND_APPEND;",
      "right" : "command.command = PENDING_COMMAND_APPEND;",
      "info" : "ExpressionStatement[219902-219943]:ExpressionStatement[220874-220915]"
    }, {
      "left" : "command.arguments = new String[] {\n                localFolder.getName(),\n                localMessage.getUid()\n            };",
      "right" : "command.arguments = new String[] {\n                localFolder.getName(),\n                localMessage.getUid()\n            };",
      "info" : "ExpressionStatement[219956-220082]:ExpressionStatement[220928-221054]"
    }, {
      "left" : "queuePendingCommand(account, command);",
      "right" : "queuePendingCommand(account, command);",
      "info" : "ExpressionStatement[220095-220133]:ExpressionStatement[221067-221105]"
    }, {
      "left" : "processPendingCommands(account);",
      "right" : "processPendingCommands(account);",
      "info" : "ExpressionStatement[220146-220178]:ExpressionStatement[221118-221150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220219-220347]:Block[221191-221319]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to save message as draft.\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to save message as draft.\", e);",
      "info" : "ExpressionStatement[220233-220290]:ExpressionStatement[221205-221262]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[220303-220337]:ExpressionStatement[221275-221309]"
    }, {
      "left" : "return localMessage;",
      "right" : "return localMessage;",
      "info" : "ReturnStatement[220356-220376]:ReturnStatement[221328-221348]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[220388-220394]:Modifier[221360-221366]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[220395-220399]:PrimitiveType[221367-221371]"
    }, {
      "left" : "getId",
      "right" : "getId",
      "info" : "SimpleName[220400-220405]:SimpleName[221372-221377]"
    }, {
      "left" : "Message message",
      "right" : "Message message",
      "info" : "SingleVariableDeclaration[220406-220421]:SingleVariableDeclaration[221378-221393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220423-220721]:Block[221395-221693]"
    }, {
      "left" : "long id;",
      "right" : "long id;",
      "info" : "VariableDeclarationStatement[220433-220441]:VariableDeclarationStatement[221405-221413]"
    }, {
      "left" : "if (message instanceof LocalMessage)",
      "right" : "if (message instanceof LocalMessage)",
      "info" : "IfStatement[220450-220695]:IfStatement[221422-221667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220487-220549]:Block[221459-221521]"
    }, {
      "left" : "id = ((LocalMessage) message).getId();",
      "right" : "id = ((LocalMessage) message).getId();",
      "info" : "ExpressionStatement[220501-220539]:ExpressionStatement[221473-221511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220555-220695]:Block[221527-221667]"
    }, {
      "left" : "Log.w(K9.LOG_TAG, \"MessagingController.getId() called without a LocalMessage\");",
      "right" : "Log.w(K9.LOG_TAG, \"MessagingController.getId() called without a LocalMessage\");",
      "info" : "ExpressionStatement[220569-220648]:ExpressionStatement[221541-221620]"
    }, {
      "left" : "id = INVALID_MESSAGE_ID;",
      "right" : "id = INVALID_MESSAGE_ID;",
      "info" : "ExpressionStatement[220661-220685]:ExpressionStatement[221633-221657]"
    }, {
      "left" : "return id;",
      "right" : "return id;",
      "info" : "ReturnStatement[220705-220715]:ReturnStatement[221677-221687]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[220727-220733]:Modifier[221699-221705]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[220734-220741]:PrimitiveType[221706-221713]"
    }, {
      "left" : "modeMismatch",
      "right" : "modeMismatch",
      "info" : "SimpleName[220742-220754]:SimpleName[221714-221726]"
    }, {
      "left" : "Account.FolderMode aMode",
      "right" : "Account.FolderMode aMode",
      "info" : "SingleVariableDeclaration[220755-220779]:SingleVariableDeclaration[221727-221751]"
    }, {
      "left" : "Folder.FolderClass fMode",
      "right" : "Folder.FolderClass fMode",
      "info" : "SingleVariableDeclaration[220781-220805]:SingleVariableDeclaration[221753-221777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220807-221393]:Block[221779-222365]"
    }, {
      "left" : "if (aMode == Account.FolderMode.NONE\n                || (aMode == Account.FolderMode.FIRST_CLASS &&\n                    fMode != Folder.FolderClass.FIRST_CLASS)\n                || (aMode == Account.FolderMode.FIRST_AND_SECOND_CLASS &&\n                    fMode != Folder.FolderClass.FIRST_CLASS &&\n                    fMode != Folder.FolderClass.SECOND_CLASS)\n                || (aMode == Account.FolderMode.NOT_SECOND_CLASS &&\n                    fMode == Folder.FolderClass.SECOND_CLASS))",
      "right" : "if (aMode == Account.FolderMode.NONE\n                || (aMode == Account.FolderMode.FIRST_CLASS &&\n                    fMode != Folder.FolderClass.FIRST_CLASS)\n                || (aMode == Account.FolderMode.FIRST_AND_SECOND_CLASS &&\n                    fMode != Folder.FolderClass.FIRST_CLASS &&\n                    fMode != Folder.FolderClass.SECOND_CLASS)\n                || (aMode == Account.FolderMode.NOT_SECOND_CLASS &&\n                    fMode == Folder.FolderClass.SECOND_CLASS))",
      "info" : "IfStatement[220817-221387]:IfStatement[221789-222359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221308-221344]:Block[222280-222316]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[221322-221334]:ReturnStatement[222294-222306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221350-221387]:Block[222322-222359]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[221364-221377]:ReturnStatement[222336-222349]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[221459-221465]:Modifier[222431-222437]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[221466-221471]:TYPE_DECLARATION_KIND[222438-222443]"
    }, {
      "left" : "Command",
      "right" : "Command",
      "info" : "SimpleName[221472-221479]:SimpleName[222444-222451]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[221721-221730]:MarkerAnnotation[222693-222702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[221739-221745]:Modifier[222711-222717]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[221746-221749]:PrimitiveType[222718-222721]"
    }, {
      "left" : "compareTo",
      "right" : "compareTo",
      "info" : "SimpleName[221750-221759]:SimpleName[222722-222731]"
    }, {
      "left" : "Command other",
      "right" : "Command other",
      "info" : "SingleVariableDeclaration[221760-221773]:SingleVariableDeclaration[222732-222745]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221775-222043]:Block[222747-223015]"
    }, {
      "left" : "if (other.isForeground && !isForeground)",
      "right" : "if (other.isForeground && !isForeground)",
      "info" : "IfStatement[221789-222033]:IfStatement[222761-223005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221830-221871]:Block[222802-222843]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[221848-221857]:ReturnStatement[222820-222829]"
    }, {
      "left" : "if (!other.isForeground && isForeground)",
      "right" : "if (!other.isForeground && isForeground)",
      "info" : "IfStatement[221877-222033]:IfStatement[222849-223005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221918-221960]:Block[222890-222932]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[221936-221946]:ReturnStatement[222908-222918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221966-222033]:Block[222938-223005]"
    }, {
      "left" : "return (sequence - other.sequence);",
      "right" : "return (sequence - other.sequence);",
      "info" : "ReturnStatement[221984-222019]:ReturnStatement[222956-222991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[222055-222061]:Modifier[223027-223033]"
    }, {
      "left" : "MessagingListener",
      "right" : "MessagingListener",
      "info" : "SimpleType[222062-222079]:SimpleType[223034-223051]"
    }, {
      "left" : "getCheckMailListener",
      "right" : "getCheckMailListener",
      "info" : "SimpleName[222080-222100]:SimpleName[223052-223072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222103-222144]:Block[223075-223116]"
    }, {
      "left" : "return checkMailListener;",
      "right" : "return checkMailListener;",
      "info" : "ReturnStatement[222113-222138]:ReturnStatement[223085-223110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[222150-222156]:Modifier[223122-223128]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[222157-222161]:PrimitiveType[223129-223133]"
    }, {
      "left" : "setCheckMailListener",
      "right" : "setCheckMailListener",
      "info" : "SimpleName[222162-222182]:SimpleName[223134-223154]"
    }, {
      "left" : "MessagingListener checkMailListener",
      "right" : "MessagingListener checkMailListener",
      "info" : "SingleVariableDeclaration[222183-222218]:SingleVariableDeclaration[223155-223190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222220-222492]:Block[223192-223464]"
    }, {
      "left" : "if (this.checkMailListener != null)",
      "right" : "if (this.checkMailListener != null)",
      "info" : "IfStatement[222230-222329]:IfStatement[223202-223301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222266-222329]:Block[223238-223301]"
    }, {
      "left" : "removeListener(this.checkMailListener);",
      "right" : "removeListener(this.checkMailListener);",
      "info" : "ExpressionStatement[222280-222319]:ExpressionStatement[223252-223291]"
    }, {
      "left" : "this.checkMailListener = checkMailListener;",
      "right" : "this.checkMailListener = checkMailListener;",
      "info" : "ExpressionStatement[222338-222381]:ExpressionStatement[223310-223353]"
    }, {
      "left" : "if (this.checkMailListener != null)",
      "right" : "if (this.checkMailListener != null)",
      "info" : "IfStatement[222390-222486]:IfStatement[223362-223458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222426-222486]:Block[223398-223458]"
    }, {
      "left" : "addListener(this.checkMailListener);",
      "right" : "addListener(this.checkMailListener);",
      "info" : "ExpressionStatement[222440-222476]:ExpressionStatement[223412-223448]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[222498-222504]:Modifier[223470-223476]"
    }, {
      "left" : "Collection<Pusher>",
      "right" : "Collection<Pusher>",
      "info" : "ParameterizedType[222505-222523]:ParameterizedType[223477-223495]"
    }, {
      "left" : "getPushers",
      "right" : "getPushers",
      "info" : "SimpleName[222524-222534]:SimpleName[223496-223506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222537-222577]:Block[223509-223549]"
    }, {
      "left" : "return pushers.values();",
      "right" : "return pushers.values();",
      "info" : "ReturnStatement[222547-222571]:ReturnStatement[223519-223543]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[222583-222589]:Modifier[223555-223561]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[222590-222597]:PrimitiveType[223562-223569]"
    }, {
      "left" : "setupPushing",
      "right" : "setupPushing",
      "info" : "SimpleName[222598-222610]:SimpleName[223570-223582]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[222611-222632]:SingleVariableDeclaration[223583-223604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222634-226768]:Block[223606-227740]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[222644-226740]:TryStatement[223616-227712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222648-226632]:Block[223620-227604]"
    }, {
      "left" : "Pusher previousPusher = pushers.remove(account);",
      "right" : "Pusher previousPusher = pushers.remove(account);",
      "info" : "VariableDeclarationStatement[222662-222710]:VariableDeclarationStatement[223634-223682]"
    }, {
      "left" : "if (previousPusher != null)",
      "right" : "if (previousPusher != null)",
      "info" : "IfStatement[222723-222805]:IfStatement[223695-223777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222751-222805]:Block[223723-223777]"
    }, {
      "left" : "previousPusher.stop();",
      "right" : "previousPusher.stop();",
      "info" : "ExpressionStatement[222769-222791]:ExpressionStatement[223741-223763]"
    }, {
      "left" : "Account.FolderMode aDisplayMode = account.getFolderDisplayMode();",
      "right" : "Account.FolderMode aDisplayMode = account.getFolderDisplayMode();",
      "info" : "VariableDeclarationStatement[222819-222884]:VariableDeclarationStatement[223791-223856]"
    }, {
      "left" : "Account.FolderMode aPushMode = account.getFolderPushMode();",
      "right" : "Account.FolderMode aPushMode = account.getFolderPushMode();",
      "info" : "VariableDeclarationStatement[222897-222956]:VariableDeclarationStatement[223869-223928]"
    }, {
      "left" : "List<String> names = new ArrayList<String>();",
      "right" : "List<String> names = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[222970-223015]:VariableDeclarationStatement[223942-223987]"
    }, {
      "left" : "Store localStore = account.getLocalStore();",
      "right" : "Store localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[223029-223072]:VariableDeclarationStatement[224001-224044]"
    }, {
      "left" : "for (final Folder folder : localStore.getPersonalNamespaces(false))",
      "right" : "for (final Folder folder : localStore.getPersonalNamespaces(false))",
      "info" : "EnhancedForStatement[223085-224926]:EnhancedForStatement[224057-225898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223153-224926]:Block[224125-225898]"
    }, {
      "left" : "if (folder.getName().equals(account.getErrorFolderName())\n                        || folder.getName().equals(account.getOutboxFolderName()))",
      "right" : "if (folder.getName().equals(account.getErrorFolderName())\n                        || folder.getName().equals(account.getOutboxFolderName()))",
      "info" : "IfStatement[223171-223591]:IfStatement[224143-224563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223312-223591]:Block[224284-224563]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[223564-223573]:ContinueStatement[224536-224545]"
    }, {
      "left" : "folder.open(Folder.OPEN_MODE_RW);",
      "right" : "folder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[223608-223641]:ExpressionStatement[224580-224613]"
    }, {
      "left" : "Folder.FolderClass fDisplayClass = folder.getDisplayClass();",
      "right" : "Folder.FolderClass fDisplayClass = folder.getDisplayClass();",
      "info" : "VariableDeclarationStatement[223659-223719]:VariableDeclarationStatement[224631-224691]"
    }, {
      "left" : "Folder.FolderClass fPushClass = folder.getPushClass();",
      "right" : "Folder.FolderClass fPushClass = folder.getPushClass();",
      "info" : "VariableDeclarationStatement[223736-223790]:VariableDeclarationStatement[224708-224762]"
    }, {
      "left" : "if (modeMismatch(aDisplayMode, fDisplayClass))",
      "right" : "if (modeMismatch(aDisplayMode, fDisplayClass))",
      "info" : "IfStatement[223808-224266]:IfStatement[224780-225238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223855-224266]:Block[224827-225238]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[224239-224248]:ContinueStatement[225211-225220]"
    }, {
      "left" : "if (modeMismatch(aPushMode, fPushClass))",
      "right" : "if (modeMismatch(aPushMode, fPushClass))",
      "info" : "IfStatement[224284-224721]:IfStatement[225256-225693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224325-224721]:Block[225297-225693]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[224694-224703]:ContinueStatement[225666-225675]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[224738-224866]:IfStatement[225710-225838]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Starting pusher for \" + account.getDescription() + \":\" + folder.getName());",
      "right" : "Log.i(K9.LOG_TAG, \"Starting pusher for \" + account.getDescription() + \":\" + folder.getName());",
      "info" : "ExpressionStatement[224772-224866]:ExpressionStatement[225744-225838]"
    }, {
      "left" : "names.add(folder.getName());",
      "right" : "names.add(folder.getName());",
      "info" : "ExpressionStatement[224884-224912]:ExpressionStatement[225856-225884]"
    }, {
      "left" : "if (!names.isEmpty())",
      "right" : "if (!names.isEmpty())",
      "info" : "IfStatement[224940-226621]:IfStatement[225912-227593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224962-226421]:Block[225934-227393]"
    }, {
      "left" : "PushReceiver receiver = new MessagingControllerPushReceiver(context, account, this);",
      "right" : "PushReceiver receiver = new MessagingControllerPushReceiver(context, account, this);",
      "info" : "VariableDeclarationStatement[224980-225064]:VariableDeclarationStatement[225952-226036]"
    }, {
      "left" : "int maxPushFolders = account.getMaxPushFolders();",
      "right" : "int maxPushFolders = account.getMaxPushFolders();",
      "info" : "VariableDeclarationStatement[225081-225130]:VariableDeclarationStatement[226053-226102]"
    }, {
      "left" : "if (names.size() > maxPushFolders)",
      "right" : "if (names.size() > maxPushFolders)",
      "info" : "IfStatement[225148-225527]:IfStatement[226120-226499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225183-225527]:Block[226155-226499]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[225205-225446]:IfStatement[226177-226418]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Count of folders to push for account \" + account.getDescription() + \" is \" + names.size()\n                              + \", greater than limit of \" + maxPushFolders + \", truncating\");",
      "right" : "Log.i(K9.LOG_TAG, \"Count of folders to push for account \" + account.getDescription() + \" is \" + names.size()\n                              + \", greater than limit of \" + maxPushFolders + \", truncating\");",
      "info" : "ExpressionStatement[225243-225446]:ExpressionStatement[226215-226418]"
    }, {
      "left" : "names = names.subList(0, maxPushFolders);",
      "right" : "names = names.subList(0, maxPushFolders);",
      "info" : "ExpressionStatement[225468-225509]:ExpressionStatement[226440-226481]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[225545-226377]:TryStatement[226517-227349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225549-226231]:Block[226521-227203]"
    }, {
      "left" : "Store store = account.getRemoteStore();",
      "right" : "Store store = account.getRemoteStore();",
      "info" : "VariableDeclarationStatement[225571-225610]:VariableDeclarationStatement[226543-226582]"
    }, {
      "left" : "if (!store.isPushCapable())",
      "right" : "if (!store.isPushCapable())",
      "info" : "IfStatement[225631-225880]:IfStatement[226603-226852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225659-225880]:Block[226631-226852]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[225685-225819]:IfStatement[226657-226791]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Account \" + account.getDescription() + \" is not push capable, skipping\");",
      "right" : "Log.i(K9.LOG_TAG, \"Account \" + account.getDescription() + \" is not push capable, skipping\");",
      "info" : "ExpressionStatement[225727-225819]:ExpressionStatement[226699-226791]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[225845-225858]:ReturnStatement[226817-226830]"
    }, {
      "left" : "Pusher pusher = store.getPusher(receiver);",
      "right" : "Pusher pusher = store.getPusher(receiver);",
      "info" : "VariableDeclarationStatement[225901-225943]:VariableDeclarationStatement[226873-226915]"
    }, {
      "left" : "if (pusher != null)",
      "right" : "if (pusher != null)",
      "info" : "IfStatement[225964-226213]:IfStatement[226936-227185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225984-226213]:Block[226956-227185]"
    }, {
      "left" : "Pusher oldPusher  = pushers.putIfAbsent(account, pusher);",
      "right" : "Pusher oldPusher  = pushers.putIfAbsent(account, pusher);",
      "info" : "VariableDeclarationStatement[226010-226067]:VariableDeclarationStatement[226982-227039]"
    }, {
      "left" : "if (oldPusher == null)",
      "right" : "if (oldPusher == null)",
      "info" : "IfStatement[226092-226191]:IfStatement[227064-227163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226115-226191]:Block[227087-227163]"
    }, {
      "left" : "pusher.start(names);",
      "right" : "pusher.start(names);",
      "info" : "ExpressionStatement[226145-226165]:ExpressionStatement[227117-227137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226252-226377]:Block[227224-227349]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Could not get remote store\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Could not get remote store\", e);",
      "info" : "ExpressionStatement[226274-226325]:ExpressionStatement[227246-227297]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[226346-226359]:ReturnStatement[227318-227331]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[226395-226407]:ReturnStatement[227367-227379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226427-226621]:Block[227399-227593]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[226445-226577]:IfStatement[227417-227549]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"No folders are configured for pushing in account \" + account.getDescription());",
      "right" : "Log.i(K9.LOG_TAG, \"No folders are configured for pushing in account \" + account.getDescription());",
      "info" : "ExpressionStatement[226479-226577]:ExpressionStatement[227451-227549]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[226594-226607]:ReturnStatement[227566-227579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226653-226740]:Block[227625-227712]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Got exception while setting up pushing\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Got exception while setting up pushing\", e);",
      "info" : "ExpressionStatement[226667-226730]:ExpressionStatement[227639-227702]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[226749-226762]:ReturnStatement[227721-227734]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[226774-226780]:Modifier[227746-227752]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[226781-226785]:PrimitiveType[227753-227757]"
    }, {
      "left" : "stopAllPushing",
      "right" : "stopAllPushing",
      "info" : "SimpleName[226786-226800]:SimpleName[227758-227772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226803-227087]:Block[227775-228059]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[226813-226881]:IfStatement[227785-227853]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Stopping all pushers\");",
      "right" : "Log.i(K9.LOG_TAG, \"Stopping all pushers\");",
      "info" : "ExpressionStatement[226839-226881]:ExpressionStatement[227811-227853]"
    }, {
      "left" : "Iterator<Pusher> iter = pushers.values().iterator();",
      "right" : "Iterator<Pusher> iter = pushers.values().iterator();",
      "info" : "VariableDeclarationStatement[226891-226943]:VariableDeclarationStatement[227863-227915]"
    }, {
      "left" : "while (iter.hasNext())",
      "right" : "while (iter.hasNext())",
      "info" : "WhileStatement[226952-227081]:WhileStatement[227924-228053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[226975-227081]:Block[227947-228053]"
    }, {
      "left" : "Pusher pusher = iter.next();",
      "right" : "Pusher pusher = iter.next();",
      "info" : "VariableDeclarationStatement[226989-227017]:VariableDeclarationStatement[227961-227989]"
    }, {
      "left" : "iter.remove();",
      "right" : "iter.remove();",
      "info" : "ExpressionStatement[227030-227044]:ExpressionStatement[228002-228016]"
    }, {
      "left" : "pusher.stop();",
      "right" : "pusher.stop();",
      "info" : "ExpressionStatement[227057-227071]:ExpressionStatement[228029-228043]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[227093-227099]:Modifier[228065-228071]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[227100-227104]:PrimitiveType[228072-228076]"
    }, {
      "left" : "messagesArrived",
      "right" : "messagesArrived",
      "info" : "SimpleName[227105-227120]:SimpleName[228077-228092]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[227121-227142]:SingleVariableDeclaration[228093-228114]"
    }, {
      "left" : "final Folder remoteFolder",
      "right" : "final Folder remoteFolder",
      "info" : "SingleVariableDeclaration[227144-227169]:SingleVariableDeclaration[228116-228141]"
    }, {
      "left" : "final List<Message> messages",
      "right" : "final List<Message> messages",
      "info" : "SingleVariableDeclaration[227171-227199]:SingleVariableDeclaration[228143-228171]"
    }, {
      "left" : "final boolean flagSyncOnly",
      "right" : "final boolean flagSyncOnly",
      "info" : "SingleVariableDeclaration[227201-227227]:SingleVariableDeclaration[228173-228199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227229-230128]:Block[228201-231100]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[227239-227413]:IfStatement[228211-228385]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"Got new pushed email messages for account \" + account.getDescription()\n                  + \", folder \" + remoteFolder.getName());",
      "right" : "Log.i(K9.LOG_TAG, \"Got new pushed email messages for account \" + account.getDescription()\n                  + \", folder \" + remoteFolder.getName());",
      "info" : "ExpressionStatement[227265-227413]:ExpressionStatement[228237-228385]"
    }, {
      "left" : "final CountDownLatch latch = new CountDownLatch(1);",
      "right" : "final CountDownLatch latch = new CountDownLatch(1);",
      "info" : "VariableDeclarationStatement[227423-227474]:VariableDeclarationStatement[228395-228446]"
    }, {
      "left" : "putBackground(\"Push messageArrived of account \" + account.getDescription()\n        + \", folder \" + remoteFolder.getName(), null, new Runnable() {\n            @Override\n            public void run() {\n                LocalFolder localFolder = null;\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    localFolder = localStore.getFolder(remoteFolder.getName());\n                    localFolder.open(Folder.OPEN_MODE_RW);\n\n                    account.setRingNotified(false);\n                    int newCount = downloadMessages(account, remoteFolder, localFolder, messages, flagSyncOnly);\n\n                    int unreadMessageCount = localFolder.getUnreadMessageCount();\n\n                    localFolder.setLastPush(System.currentTimeMillis());\n                    localFolder.setStatus(null);\n\n                    if (K9.DEBUG)\n                        Log.i(K9.LOG_TAG, \"messagesArrived newCount = \" + newCount + \", unread count = \" + unreadMessageCount);\n\n                    if (unreadMessageCount == 0) {\n                        notifyAccountCancel(context, account);\n                    }\n\n                    for (MessagingListener l : getListeners()) {\n                        l.folderStatusChanged(account, remoteFolder.getName(), unreadMessageCount);\n                    }\n\n                } catch (Exception e) {\n                    String rootMessage = getRootCauseMessage(e);\n                    String errorMessage = \"Push failed: \" + rootMessage;\n                    try {\n                        // Oddly enough, using a local variable gets rid of a\n                        // potential null pointer access warning with Eclipse.\n                        LocalFolder folder = localFolder;\n                        folder.setStatus(errorMessage);\n                    } catch (Exception se) {\n                        Log.e(K9.LOG_TAG, \"Unable to set failed status on localFolder\", se);\n                    }\n                    for (MessagingListener l : getListeners()) {\n                        l.synchronizeMailboxFailed(account, remoteFolder.getName(), errorMessage);\n                    }\n                    addErrorMessage(account, null, e);\n                } finally {\n                    closeFolder(localFolder);\n                    latch.countDown();\n                }\n\n            }\n        });",
      "right" : "putBackground(\"Push messageArrived of account \" + account.getDescription()\n        + \", folder \" + remoteFolder.getName(), null, new Runnable() {\n            @Override\n            public void run() {\n                LocalFolder localFolder = null;\n                try {\n                    LocalStore localStore = account.getLocalStore();\n                    localFolder = localStore.getFolder(remoteFolder.getName());\n                    localFolder.open(Folder.OPEN_MODE_RW);\n\n                    account.setRingNotified(false);\n                    int newCount = downloadMessages(account, remoteFolder, localFolder, messages, flagSyncOnly);\n\n                    int unreadMessageCount = localFolder.getUnreadMessageCount();\n\n                    localFolder.setLastPush(System.currentTimeMillis());\n                    localFolder.setStatus(null);\n\n                    if (K9.DEBUG)\n                        Log.i(K9.LOG_TAG, \"messagesArrived newCount = \" + newCount + \", unread count = \" + unreadMessageCount);\n\n                    if (unreadMessageCount == 0) {\n                        notifyAccountCancel(context, account);\n                    }\n\n                    for (MessagingListener l : getListeners()) {\n                        l.folderStatusChanged(account, remoteFolder.getName(), unreadMessageCount);\n                    }\n\n                } catch (Exception e) {\n                    String rootMessage = getRootCauseMessage(e);\n                    String errorMessage = \"Push failed: \" + rootMessage;\n                    try {\n                        // Oddly enough, using a local variable gets rid of a\n                        // potential null pointer access warning with Eclipse.\n                        LocalFolder folder = localFolder;\n                        folder.setStatus(errorMessage);\n                    } catch (Exception se) {\n                        Log.e(K9.LOG_TAG, \"Unable to set failed status on localFolder\", se);\n                    }\n                    for (MessagingListener l : getListeners()) {\n                        l.synchronizeMailboxFailed(account, remoteFolder.getName(), errorMessage);\n                    }\n                    addErrorMessage(account, null, e);\n                } finally {\n                    closeFolder(localFolder);\n                    latch.countDown();\n                }\n\n            }\n        });",
      "info" : "ExpressionStatement[227483-229855]:ExpressionStatement[228455-230827]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[227641-227650]:MarkerAnnotation[228613-228622]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[227663-227669]:Modifier[228635-228641]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[227670-227674]:PrimitiveType[228642-228646]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[227675-227678]:SimpleName[228647-228650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227681-229843]:Block[228653-230815]"
    }, {
      "left" : "LocalFolder localFolder = null;",
      "right" : "LocalFolder localFolder = null;",
      "info" : "VariableDeclarationStatement[227699-227730]:VariableDeclarationStatement[228671-228702]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[227747-229828]:TryStatement[228719-230800]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227751-228839]:Block[228723-229811]"
    }, {
      "left" : "LocalStore localStore = account.getLocalStore();",
      "right" : "LocalStore localStore = account.getLocalStore();",
      "info" : "VariableDeclarationStatement[227773-227821]:VariableDeclarationStatement[228745-228793]"
    }, {
      "left" : "localFolder = localStore.getFolder(remoteFolder.getName());",
      "right" : "localFolder = localStore.getFolder(remoteFolder.getName());",
      "info" : "ExpressionStatement[227842-227901]:ExpressionStatement[228814-228873]"
    }, {
      "left" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "right" : "localFolder.open(Folder.OPEN_MODE_RW);",
      "info" : "ExpressionStatement[227922-227960]:ExpressionStatement[228894-228932]"
    }, {
      "left" : "account.setRingNotified(false);",
      "right" : "account.setRingNotified(false);",
      "info" : "ExpressionStatement[227982-228013]:ExpressionStatement[228954-228985]"
    }, {
      "left" : "int newCount = downloadMessages(account, remoteFolder, localFolder, messages, flagSyncOnly);",
      "right" : "int newCount = downloadMessages(account, remoteFolder, localFolder, messages, flagSyncOnly);",
      "info" : "VariableDeclarationStatement[228034-228126]:VariableDeclarationStatement[229006-229098]"
    }, {
      "left" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "right" : "int unreadMessageCount = localFolder.getUnreadMessageCount();",
      "info" : "VariableDeclarationStatement[228148-228209]:VariableDeclarationStatement[229120-229181]"
    }, {
      "left" : "localFolder.setLastPush(System.currentTimeMillis());",
      "right" : "localFolder.setLastPush(System.currentTimeMillis());",
      "info" : "ExpressionStatement[228231-228283]:ExpressionStatement[229203-229255]"
    }, {
      "left" : "localFolder.setStatus(null);",
      "right" : "localFolder.setStatus(null);",
      "info" : "ExpressionStatement[228304-228332]:ExpressionStatement[229276-229304]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[228354-228495]:IfStatement[229326-229467]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"messagesArrived newCount = \" + newCount + \", unread count = \" + unreadMessageCount);",
      "right" : "Log.i(K9.LOG_TAG, \"messagesArrived newCount = \" + newCount + \", unread count = \" + unreadMessageCount);",
      "info" : "ExpressionStatement[228392-228495]:ExpressionStatement[229364-229467]"
    }, {
      "left" : "if (unreadMessageCount == 0)",
      "right" : "if (unreadMessageCount == 0)",
      "info" : "IfStatement[228517-228632]:IfStatement[229489-229604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228546-228632]:Block[229518-229604]"
    }, {
      "left" : "notifyAccountCancel(context, account);",
      "right" : "notifyAccountCancel(context, account);",
      "info" : "ExpressionStatement[228572-228610]:ExpressionStatement[229544-229582]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[228654-228820]:EnhancedForStatement[229626-229792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228697-228820]:Block[229669-229792]"
    }, {
      "left" : "l.folderStatusChanged(account, remoteFolder.getName(), unreadMessageCount);",
      "right" : "l.folderStatusChanged(account, remoteFolder.getName(), unreadMessageCount);",
      "info" : "ExpressionStatement[228723-228798]:ExpressionStatement[229695-229770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228860-229715]:Block[229832-230687]"
    }, {
      "left" : "String rootMessage = getRootCauseMessage(e);",
      "right" : "String rootMessage = getRootCauseMessage(e);",
      "info" : "VariableDeclarationStatement[228882-228926]:VariableDeclarationStatement[229854-229898]"
    }, {
      "left" : "String errorMessage = \"Push failed: \" + rootMessage;",
      "right" : "String errorMessage = \"Push failed: \" + rootMessage;",
      "info" : "VariableDeclarationStatement[228947-228999]:VariableDeclarationStatement[229919-229971]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[229020-229456]:TryStatement[229992-230428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[229024-229318]:Block[229996-230290]"
    }, {
      "left" : "LocalFolder folder = localFolder;",
      "right" : "LocalFolder folder = localFolder;",
      "info" : "VariableDeclarationStatement[229207-229240]:VariableDeclarationStatement[230179-230212]"
    }, {
      "left" : "folder.setStatus(errorMessage);",
      "right" : "folder.setStatus(errorMessage);",
      "info" : "ExpressionStatement[229265-229296]:ExpressionStatement[230237-230268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[229340-229456]:Block[230312-230428]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Unable to set failed status on localFolder\", se);",
      "right" : "Log.e(K9.LOG_TAG, \"Unable to set failed status on localFolder\", se);",
      "info" : "ExpressionStatement[229366-229434]:ExpressionStatement[230338-230406]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[229477-229642]:EnhancedForStatement[230449-230614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[229520-229642]:Block[230492-230614]"
    }, {
      "left" : "l.synchronizeMailboxFailed(account, remoteFolder.getName(), errorMessage);",
      "right" : "l.synchronizeMailboxFailed(account, remoteFolder.getName(), errorMessage);",
      "info" : "ExpressionStatement[229546-229620]:ExpressionStatement[230518-230592]"
    }, {
      "left" : "addErrorMessage(account, null, e);",
      "right" : "addErrorMessage(account, null, e);",
      "info" : "ExpressionStatement[229663-229697]:ExpressionStatement[230635-230669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[229724-229828]:Block[230696-230800]"
    }, {
      "left" : "closeFolder(localFolder);",
      "right" : "closeFolder(localFolder);",
      "info" : "ExpressionStatement[229746-229771]:ExpressionStatement[230718-230743]"
    }, {
      "left" : "latch.countDown();",
      "right" : "latch.countDown();",
      "info" : "ExpressionStatement[229792-229810]:ExpressionStatement[230764-230782]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[229864-230016]:TryStatement[230836-230988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[229868-229906]:Block[230840-230878]"
    }, {
      "left" : "latch.await();",
      "right" : "latch.await();",
      "info" : "ExpressionStatement[229882-229896]:ExpressionStatement[230854-230868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[229927-230016]:Block[230899-230988]"
    }, {
      "left" : "Log.e(K9.LOG_TAG, \"Interrupted while awaiting latch release\", e);",
      "right" : "Log.e(K9.LOG_TAG, \"Interrupted while awaiting latch release\", e);",
      "info" : "ExpressionStatement[229941-230006]:ExpressionStatement[230913-230978]"
    }, {
      "left" : "if (K9.DEBUG)",
      "right" : "if (K9.DEBUG)",
      "info" : "IfStatement[230025-230122]:IfStatement[230997-231094]"
    }, {
      "left" : "Log.i(K9.LOG_TAG, \"MessagingController.messagesArrivedLatch released\");",
      "right" : "Log.i(K9.LOG_TAG, \"MessagingController.messagesArrivedLatch released\");",
      "info" : "ExpressionStatement[230051-230122]:ExpressionStatement[231023-231094]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[230134-230140]:Modifier[231106-231112]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[230141-230145]:PrimitiveType[231113-231117]"
    }, {
      "left" : "systemStatusChanged",
      "right" : "systemStatusChanged",
      "info" : "SimpleName[230146-230165]:SimpleName[231118-231137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230168-230275]:Block[231140-231247]"
    }, {
      "left" : "for (MessagingListener l : getListeners())",
      "right" : "for (MessagingListener l : getListeners())",
      "info" : "EnhancedForStatement[230178-230269]:EnhancedForStatement[231150-231241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230221-230269]:Block[231193-231241]"
    }, {
      "left" : "l.systemStatusChanged();",
      "right" : "l.systemStatusChanged();",
      "info" : "ExpressionStatement[230235-230259]:ExpressionStatement[231207-231231]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[230337-230343]:Modifier[231309-231315]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[230344-230349]:TYPE_DECLARATION_KIND[231316-231321]"
    }, {
      "left" : "Memory",
      "right" : "Memory",
      "info" : "SimpleName[230350-230356]:SimpleName[231322-231328]"
    }, {
      "left" : "Memory",
      "right" : "Memory",
      "info" : "SimpleName[230829-230835]:SimpleName[231801-231807]"
    }, {
      "left" : "Account nAccount",
      "right" : "Account nAccount",
      "info" : "SingleVariableDeclaration[230836-230852]:SingleVariableDeclaration[231808-231824]"
    }, {
      "left" : "String nFolderName",
      "right" : "String nFolderName",
      "info" : "SingleVariableDeclaration[230854-230872]:SingleVariableDeclaration[231826-231844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230874-230955]:Block[231846-231927]"
    }, {
      "left" : "account = nAccount;",
      "right" : "account = nAccount;",
      "info" : "ExpressionStatement[230888-230907]:ExpressionStatement[231860-231879]"
    }, {
      "left" : "folderName = nFolderName;",
      "right" : "folderName = nFolderName;",
      "info" : "ExpressionStatement[230920-230945]:ExpressionStatement[231892-231917]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[230965-230971]:SimpleType[231937-231943]"
    }, {
      "left" : "getKey",
      "right" : "getKey",
      "info" : "SimpleName[230972-230978]:SimpleName[231944-231950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[230981-231046]:Block[231953-232018]"
    }, {
      "left" : "return getMemoryKey(account, folderName);",
      "right" : "return getMemoryKey(account, folderName);",
      "info" : "ReturnStatement[230995-231036]:ReturnStatement[231967-232008]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[231059-231065]:Modifier[232031-232037]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[231066-231072]:SimpleType[232038-232044]"
    }, {
      "left" : "getMemoryKey",
      "right" : "getMemoryKey",
      "info" : "SimpleName[231073-231085]:SimpleName[232045-232057]"
    }, {
      "left" : "Account taccount",
      "right" : "Account taccount",
      "info" : "SingleVariableDeclaration[231086-231102]:SingleVariableDeclaration[232058-232074]"
    }, {
      "left" : "String tfolderName",
      "right" : "String tfolderName",
      "info" : "SingleVariableDeclaration[231104-231122]:SingleVariableDeclaration[232076-232094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231124-231193]:Block[232096-232165]"
    }, {
      "left" : "return taccount.getDescription() + \":\" + tfolderName;",
      "right" : "return taccount.getDescription() + \":\" + tfolderName;",
      "info" : "ReturnStatement[231134-231187]:ReturnStatement[232106-232159]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[231198-231204]:Modifier[232170-232176]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[231205-231210]:TYPE_DECLARATION_KIND[232177-232182]"
    }, {
      "left" : "MemorizingListener",
      "right" : "MemorizingListener",
      "info" : "SimpleName[231211-231229]:SimpleName[232183-232201]"
    }, {
      "left" : "MessagingListener",
      "right" : "MessagingListener",
      "info" : "SimpleType[231238-231255]:SimpleType[232210-232227]"
    }, {
      "left" : "Memory",
      "right" : "Memory",
      "info" : "SimpleType[231339-231345]:SimpleType[232311-232317]"
    }, {
      "left" : "getMemory",
      "right" : "getMemory",
      "info" : "SimpleName[231346-231355]:SimpleName[232318-232327]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[231356-231371]:SingleVariableDeclaration[232328-232343]"
    }, {
      "left" : "String folderName",
      "right" : "String folderName",
      "info" : "SingleVariableDeclaration[231373-231390]:SingleVariableDeclaration[232345-232362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231392-231668]:Block[232364-232640]"
    }, {
      "left" : "Memory memory = memories.get(getMemoryKey(account, folderName));",
      "right" : "Memory memory = memories.get(getMemoryKey(account, folderName));",
      "info" : "VariableDeclarationStatement[231406-231470]:VariableDeclarationStatement[232378-232442]"
    }, {
      "left" : "if (memory == null)",
      "right" : "if (memory == null)",
      "info" : "IfStatement[231483-231631]:IfStatement[232455-232603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231503-231631]:Block[232475-232603]"
    }, {
      "left" : "memory = new Memory(account, folderName);",
      "right" : "memory = new Memory(account, folderName);",
      "info" : "ExpressionStatement[231521-231562]:ExpressionStatement[232493-232534]"
    }, {
      "left" : "memories.put(memory.getKey(), memory);",
      "right" : "memories.put(memory.getKey(), memory);",
      "info" : "ExpressionStatement[231579-231617]:ExpressionStatement[232551-232589]"
    }, {
      "left" : "return memory;",
      "right" : "return memory;",
      "info" : "ReturnStatement[231644-231658]:ReturnStatement[232616-232630]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[231678-231690]:Modifier[232650-232662]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[231691-231695]:PrimitiveType[232663-232667]"
    }, {
      "left" : "removeAccount",
      "right" : "removeAccount",
      "info" : "SimpleName[231696-231709]:SimpleName[232668-232681]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[231710-231725]:SingleVariableDeclaration[232682-232697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231727-232141]:Block[232699-233113]"
    }, {
      "left" : "Iterator<Entry<String, Memory>> memIt = memories.entrySet().iterator();",
      "right" : "Iterator<Entry<String, Memory>> memIt = memories.entrySet().iterator();",
      "info" : "VariableDeclarationStatement[231741-231812]:VariableDeclarationStatement[232713-232784]"
    }, {
      "left" : "while (memIt.hasNext())",
      "right" : "while (memIt.hasNext())",
      "info" : "WhileStatement[231826-232131]:WhileStatement[232798-233103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231850-232131]:Block[232822-233103]"
    }, {
      "left" : "Entry<String, Memory> memoryEntry = memIt.next();",
      "right" : "Entry<String, Memory> memoryEntry = memIt.next();",
      "info" : "VariableDeclarationStatement[231868-231917]:VariableDeclarationStatement[232840-232889]"
    }, {
      "left" : "String uuidForMemory = memoryEntry.getValue().account.getUuid();",
      "right" : "String uuidForMemory = memoryEntry.getValue().account.getUuid();",
      "info" : "VariableDeclarationStatement[231935-231999]:VariableDeclarationStatement[232907-232971]"
    }, {
      "left" : "if (uuidForMemory.equals(account.getUuid()))",
      "right" : "if (uuidForMemory.equals(account.getUuid()))",
      "info" : "IfStatement[232017-232117]:IfStatement[232989-233089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[232062-232117]:Block[233034-233089]"
    }, {
      "left" : "memIt.remove();",
      "right" : "memIt.remove();",
      "info" : "ExpressionStatement[232084-232099]:ExpressionStatement[233056-233071]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[232151-232160]:MarkerAnnotation[233123-233132]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[232169-232175]:Modifier[233141-233147]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[232176-232188]:Modifier[233148-233160]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[232189-232193]:PrimitiveType[233161-233165]"
    }, {
      "left" : "synchronizeMailboxStarted",
      "right" : "synchronizeMailboxStarted",
      "info" : "SimpleName[232194-232219]:SimpleName[233166-233191]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[232220-232235]:SingleVariableDeclaration[233192-233207]"
    }, {
      "left" : "String folder",
      "right" : "String folder",
      "info" : "SingleVariableDeclaration[232237-232250]:SingleVariableDeclaration[233209-233222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[232252-232454]:Block[233224-233426]"
    }, {
      "left" : "Memory memory = getMemory(account, folder);",
      "right" : "Memory memory = getMemory(account, folder);",
      "info" : "VariableDeclarationStatement[232266-232309]:VariableDeclarationStatement[233238-233281]"
    }, {
      "left" : "memory.syncingState = MemorizingState.STARTED;",
      "right" : "memory.syncingState = MemorizingState.STARTED;",
      "info" : "ExpressionStatement[232322-232368]:ExpressionStatement[233294-233340]"
    }, {
      "left" : "memory.folderCompleted = 0;",
      "right" : "memory.folderCompleted = 0;",
      "info" : "ExpressionStatement[232381-232408]:ExpressionStatement[233353-233380]"
    }, {
      "left" : "memory.folderTotal = 0;",
      "right" : "memory.folderTotal = 0;",
      "info" : "ExpressionStatement[232421-232444]:ExpressionStatement[233393-233416]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[232464-232473]:MarkerAnnotation[233436-233445]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[232482-232488]:Modifier[233454-233460]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[232489-232501]:Modifier[233461-233473]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[232502-232506]:PrimitiveType[233474-233478]"
    }, {
      "left" : "synchronizeMailboxFinished",
      "right" : "synchronizeMailboxFinished",
      "info" : "SimpleName[232507-232533]:SimpleName[233479-233505]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[232534-232549]:SingleVariableDeclaration[233506-233521]"
    }, {
      "left" : "String folder",
      "right" : "String folder",
      "info" : "SingleVariableDeclaration[232551-232564]:SingleVariableDeclaration[233523-233536]"
    }, {
      "left" : "int totalMessagesInMailbox",
      "right" : "int totalMessagesInMailbox",
      "info" : "SingleVariableDeclaration[232582-232608]:SingleVariableDeclaration[233554-233580]"
    }, {
      "left" : "int numNewMessages",
      "right" : "int numNewMessages",
      "info" : "SingleVariableDeclaration[232610-232628]:SingleVariableDeclaration[233582-233600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[232630-232891]:Block[233602-233863]"
    }, {
      "left" : "Memory memory = getMemory(account, folder);",
      "right" : "Memory memory = getMemory(account, folder);",
      "info" : "VariableDeclarationStatement[232644-232687]:VariableDeclarationStatement[233616-233659]"
    }, {
      "left" : "memory.syncingState = MemorizingState.FINISHED;",
      "right" : "memory.syncingState = MemorizingState.FINISHED;",
      "info" : "ExpressionStatement[232700-232747]:ExpressionStatement[233672-233719]"
    }, {
      "left" : "memory.syncingTotalMessagesInMailbox = totalMessagesInMailbox;",
      "right" : "memory.syncingTotalMessagesInMailbox = totalMessagesInMailbox;",
      "info" : "ExpressionStatement[232760-232822]:ExpressionStatement[233732-233794]"
    }, {
      "left" : "memory.syncingNumNewMessages = numNewMessages;",
      "right" : "memory.syncingNumNewMessages = numNewMessages;",
      "info" : "ExpressionStatement[232835-232881]:ExpressionStatement[233807-233853]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[232901-232910]:MarkerAnnotation[233873-233882]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[232919-232925]:Modifier[233891-233897]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[232926-232938]:Modifier[233898-233910]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[232939-232943]:PrimitiveType[233911-233915]"
    }, {
      "left" : "synchronizeMailboxFailed",
      "right" : "synchronizeMailboxFailed",
      "info" : "SimpleName[232944-232968]:SimpleName[233916-233940]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[232969-232984]:SingleVariableDeclaration[233941-233956]"
    }, {
      "left" : "String folder",
      "right" : "String folder",
      "info" : "SingleVariableDeclaration[232986-232999]:SingleVariableDeclaration[233958-233971]"
    }, {
      "left" : "String message",
      "right" : "String message",
      "info" : "SingleVariableDeclaration[233017-233031]:SingleVariableDeclaration[233989-234003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[233033-233204]:Block[234005-234176]"
    }, {
      "left" : "Memory memory = getMemory(account, folder);",
      "right" : "Memory memory = getMemory(account, folder);",
      "info" : "VariableDeclarationStatement[233048-233091]:VariableDeclarationStatement[234020-234063]"
    }, {
      "left" : "memory.syncingState = MemorizingState.FAILED;",
      "right" : "memory.syncingState = MemorizingState.FAILED;",
      "info" : "ExpressionStatement[233104-233149]:ExpressionStatement[234076-234121]"
    }, {
      "left" : "memory.failureMessage = message;",
      "right" : "memory.failureMessage = message;",
      "info" : "ExpressionStatement[233162-233194]:ExpressionStatement[234134-234166]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[233213-233225]:Modifier[234185-234197]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[233226-233230]:PrimitiveType[234198-234202]"
    }, {
      "left" : "refreshOther",
      "right" : "refreshOther",
      "info" : "SimpleName[233231-233243]:SimpleName[234203-234215]"
    }, {
      "left" : "MessagingListener other",
      "right" : "MessagingListener other",
      "info" : "SingleVariableDeclaration[233244-233267]:SingleVariableDeclaration[234216-234239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[233269-237295]:Block[234241-238267]"
    }, {
      "left" : "if (other != null)",
      "right" : "if (other != null)",
      "info" : "IfStatement[233283-237285]:IfStatement[234255-238257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[233302-237285]:Block[234274-238257]"
    }, {
      "left" : "Memory syncStarted = null;",
      "right" : "Memory syncStarted = null;",
      "info" : "VariableDeclarationStatement[233321-233347]:VariableDeclarationStatement[234293-234319]"
    }, {
      "left" : "Memory sendStarted = null;",
      "right" : "Memory sendStarted = null;",
      "info" : "VariableDeclarationStatement[233364-233390]:VariableDeclarationStatement[234336-234362]"
    }, {
      "left" : "Memory processingStarted = null;",
      "right" : "Memory processingStarted = null;",
      "info" : "VariableDeclarationStatement[233407-233439]:VariableDeclarationStatement[234379-234411]"
    }, {
      "left" : "for (Memory memory : memories.values())",
      "right" : "for (Memory memory : memories.values())",
      "info" : "EnhancedForStatement[233457-235969]:EnhancedForStatement[234429-236941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[233497-235969]:Block[234469-236941]"
    }, {
      "left" : "if (memory.syncingState != null)",
      "right" : "if (memory.syncingState != null)",
      "info" : "IfStatement[233520-234329]:IfStatement[234492-235301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[233553-234329]:Block[234525-235301]"
    }, {
      "left" : "switch (memory.syncingState) {\n                        case STARTED:\n                            syncStarted = memory;\n                            break;\n                        case FINISHED:\n                            other.synchronizeMailboxFinished(memory.account, memory.folderName,\n                                                             memory.syncingTotalMessagesInMailbox, memory.syncingNumNewMessages);\n                            break;\n                        case FAILED:\n                            other.synchronizeMailboxFailed(memory.account, memory.folderName,\n                                                           memory.failureMessage);\n                            break;\n                        }",
      "right" : "switch (memory.syncingState) {\n                        case STARTED:\n                            syncStarted = memory;\n                            break;\n                        case FINISHED:\n                            other.synchronizeMailboxFinished(memory.account, memory.folderName,\n                                                             memory.syncingTotalMessagesInMailbox, memory.syncingNumNewMessages);\n                            break;\n                        case FAILED:\n                            other.synchronizeMailboxFailed(memory.account, memory.folderName,\n                                                           memory.failureMessage);\n                            break;\n                        }",
      "info" : "SwitchStatement[233579-234307]:SwitchStatement[234551-235279]"
    }, {
      "left" : "case STARTED:",
      "right" : "case STARTED:",
      "info" : "SwitchCase[233634-233647]:SwitchCase[234606-234619]"
    }, {
      "left" : "syncStarted = memory;",
      "right" : "syncStarted = memory;",
      "info" : "ExpressionStatement[233676-233697]:ExpressionStatement[234648-234669]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[233726-233732]:BreakStatement[234698-234704]"
    }, {
      "left" : "case FINISHED:",
      "right" : "case FINISHED:",
      "info" : "SwitchCase[233757-233771]:SwitchCase[234729-234743]"
    }, {
      "left" : "other.synchronizeMailboxFinished(memory.account, memory.folderName,\n                                                             memory.syncingTotalMessagesInMailbox, memory.syncingNumNewMessages);",
      "right" : "other.synchronizeMailboxFinished(memory.account, memory.folderName,\n                                                             memory.syncingTotalMessagesInMailbox, memory.syncingNumNewMessages);",
      "info" : "ExpressionStatement[233800-233997]:ExpressionStatement[234772-234969]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[234026-234032]:BreakStatement[234998-235004]"
    }, {
      "left" : "case FAILED:",
      "right" : "case FAILED:",
      "info" : "SwitchCase[234057-234069]:SwitchCase[235029-235041]"
    }, {
      "left" : "other.synchronizeMailboxFailed(memory.account, memory.folderName,\n                                                           memory.failureMessage);",
      "right" : "other.synchronizeMailboxFailed(memory.account, memory.folderName,\n                                                           memory.failureMessage);",
      "info" : "ExpressionStatement[234098-234246]:ExpressionStatement[235070-235218]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[234275-234281]:BreakStatement[235247-235253]"
    }, {
      "left" : "if (memory.sendingState != null)",
      "right" : "if (memory.sendingState != null)",
      "info" : "IfStatement[234351-234914]:IfStatement[235323-235886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[234384-234914]:Block[235356-235886]"
    }, {
      "left" : "switch (memory.sendingState) {\n                        case STARTED:\n                            sendStarted = memory;\n                            break;\n                        case FINISHED:\n                            other.sendPendingMessagesCompleted(memory.account);\n                            break;\n                        case FAILED:\n                            other.sendPendingMessagesFailed(memory.account);\n                            break;\n                        }",
      "right" : "switch (memory.sendingState) {\n                        case STARTED:\n                            sendStarted = memory;\n                            break;\n                        case FINISHED:\n                            other.sendPendingMessagesCompleted(memory.account);\n                            break;\n                        case FAILED:\n                            other.sendPendingMessagesFailed(memory.account);\n                            break;\n                        }",
      "info" : "SwitchStatement[234410-234892]:SwitchStatement[235382-235864]"
    }, {
      "left" : "case STARTED:",
      "right" : "case STARTED:",
      "info" : "SwitchCase[234465-234478]:SwitchCase[235437-235450]"
    }, {
      "left" : "sendStarted = memory;",
      "right" : "sendStarted = memory;",
      "info" : "ExpressionStatement[234507-234528]:ExpressionStatement[235479-235500]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[234557-234563]:BreakStatement[235529-235535]"
    }, {
      "left" : "case FINISHED:",
      "right" : "case FINISHED:",
      "info" : "SwitchCase[234588-234602]:SwitchCase[235560-235574]"
    }, {
      "left" : "other.sendPendingMessagesCompleted(memory.account);",
      "right" : "other.sendPendingMessagesCompleted(memory.account);",
      "info" : "ExpressionStatement[234631-234682]:ExpressionStatement[235603-235654]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[234711-234717]:BreakStatement[235683-235689]"
    }, {
      "left" : "case FAILED:",
      "right" : "case FAILED:",
      "info" : "SwitchCase[234742-234754]:SwitchCase[235714-235726]"
    }, {
      "left" : "other.sendPendingMessagesFailed(memory.account);",
      "right" : "other.sendPendingMessagesFailed(memory.account);",
      "info" : "ExpressionStatement[234783-234831]:ExpressionStatement[235755-235803]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[234860-234866]:BreakStatement[235832-235838]"
    }, {
      "left" : "if (memory.pushingState != null)",
      "right" : "if (memory.pushingState != null)",
      "info" : "IfStatement[234935-235472]:IfStatement[235907-236444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[234968-235472]:Block[235940-236444]"
    }, {
      "left" : "switch (memory.pushingState) {\n                        case STARTED:\n                            other.setPushActive(memory.account, memory.folderName, true);\n                            break;\n                        case FINISHED:\n                            other.setPushActive(memory.account, memory.folderName, false);\n                            break;\n                        case FAILED:\n                            break;\n                        }",
      "right" : "switch (memory.pushingState) {\n                        case STARTED:\n                            other.setPushActive(memory.account, memory.folderName, true);\n                            break;\n                        case FINISHED:\n                            other.setPushActive(memory.account, memory.folderName, false);\n                            break;\n                        case FAILED:\n                            break;\n                        }",
      "info" : "SwitchStatement[234994-235450]:SwitchStatement[235966-236422]"
    }, {
      "left" : "case STARTED:",
      "right" : "case STARTED:",
      "info" : "SwitchCase[235049-235062]:SwitchCase[236021-236034]"
    }, {
      "left" : "other.setPushActive(memory.account, memory.folderName, true);",
      "right" : "other.setPushActive(memory.account, memory.folderName, true);",
      "info" : "ExpressionStatement[235091-235152]:ExpressionStatement[236063-236124]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[235181-235187]:BreakStatement[236153-236159]"
    }, {
      "left" : "case FINISHED:",
      "right" : "case FINISHED:",
      "info" : "SwitchCase[235212-235226]:SwitchCase[236184-236198]"
    }, {
      "left" : "other.setPushActive(memory.account, memory.folderName, false);",
      "right" : "other.setPushActive(memory.account, memory.folderName, false);",
      "info" : "ExpressionStatement[235255-235317]:ExpressionStatement[236227-236289]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[235346-235352]:BreakStatement[236318-236324]"
    }, {
      "left" : "case FAILED:",
      "right" : "case FAILED:",
      "info" : "SwitchCase[235377-235389]:SwitchCase[236349-236361]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[235418-235424]:BreakStatement[236390-236396]"
    }, {
      "left" : "if (memory.processingState != null)",
      "right" : "if (memory.processingState != null)",
      "info" : "IfStatement[235493-235951]:IfStatement[236465-236923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[235529-235951]:Block[236501-236923]"
    }, {
      "left" : "switch (memory.processingState) {\n                        case STARTED:\n                            processingStarted = memory;\n                            break;\n                        case FINISHED:\n                        case FAILED:\n                            other.pendingCommandsFinished(memory.account);\n                            break;\n                        }",
      "right" : "switch (memory.processingState) {\n                        case STARTED:\n                            processingStarted = memory;\n                            break;\n                        case FINISHED:\n                        case FAILED:\n                            other.pendingCommandsFinished(memory.account);\n                            break;\n                        }",
      "info" : "SwitchStatement[235555-235929]:SwitchStatement[236527-236901]"
    }, {
      "left" : "case STARTED:",
      "right" : "case STARTED:",
      "info" : "SwitchCase[235613-235626]:SwitchCase[236585-236598]"
    }, {
      "left" : "processingStarted = memory;",
      "right" : "processingStarted = memory;",
      "info" : "ExpressionStatement[235655-235682]:ExpressionStatement[236627-236654]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[235711-235717]:BreakStatement[236683-236689]"
    }, {
      "left" : "case FINISHED:",
      "right" : "case FINISHED:",
      "info" : "SwitchCase[235742-235756]:SwitchCase[236714-236728]"
    }, {
      "left" : "case FAILED:",
      "right" : "case FAILED:",
      "info" : "SwitchCase[235781-235793]:SwitchCase[236753-236765]"
    }, {
      "left" : "other.pendingCommandsFinished(memory.account);",
      "right" : "other.pendingCommandsFinished(memory.account);",
      "info" : "ExpressionStatement[235822-235868]:ExpressionStatement[236794-236840]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[235897-235903]:BreakStatement[236869-236875]"
    }, {
      "left" : "Memory somethingStarted = null;",
      "right" : "Memory somethingStarted = null;",
      "info" : "VariableDeclarationStatement[235986-236017]:VariableDeclarationStatement[236958-236989]"
    }, {
      "left" : "if (syncStarted != null)",
      "right" : "if (syncStarted != null)",
      "info" : "IfStatement[236034-236228]:IfStatement[237006-237200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[236059-236228]:Block[237031-237200]"
    }, {
      "left" : "other.synchronizeMailboxStarted(syncStarted.account, syncStarted.folderName);",
      "right" : "other.synchronizeMailboxStarted(syncStarted.account, syncStarted.folderName);",
      "info" : "ExpressionStatement[236081-236158]:ExpressionStatement[237053-237130]"
    }, {
      "left" : "somethingStarted = syncStarted;",
      "right" : "somethingStarted = syncStarted;",
      "info" : "ExpressionStatement[236179-236210]:ExpressionStatement[237151-237182]"
    }, {
      "left" : "if (sendStarted != null)",
      "right" : "if (sendStarted != null)",
      "info" : "IfStatement[236245-236416]:IfStatement[237217-237388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[236270-236416]:Block[237242-237388]"
    }, {
      "left" : "other.sendPendingMessagesStarted(sendStarted.account);",
      "right" : "other.sendPendingMessagesStarted(sendStarted.account);",
      "info" : "ExpressionStatement[236292-236346]:ExpressionStatement[237264-237318]"
    }, {
      "left" : "somethingStarted = sendStarted;",
      "right" : "somethingStarted = sendStarted;",
      "info" : "ExpressionStatement[236367-236398]:ExpressionStatement[237339-237370]"
    }, {
      "left" : "if (processingStarted != null)",
      "right" : "if (processingStarted != null)",
      "info" : "IfStatement[236433-236995]:IfStatement[237405-237967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[236464-236995]:Block[237436-237967]"
    }, {
      "left" : "other.pendingCommandsProcessing(processingStarted.account);",
      "right" : "other.pendingCommandsProcessing(processingStarted.account);",
      "info" : "ExpressionStatement[236486-236545]:ExpressionStatement[237458-237517]"
    }, {
      "left" : "if (processingStarted.processingCommandTitle != null)",
      "right" : "if (processingStarted.processingCommandTitle != null)",
      "info" : "IfStatement[236566-236919]:IfStatement[237538-237891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[236620-236766]:Block[237592-237738]"
    }, {
      "left" : "other.pendingCommandStarted(processingStarted.account, processingStarted.processingCommandTitle);",
      "right" : "other.pendingCommandStarted(processingStarted.account, processingStarted.processingCommandTitle);",
      "info" : "ExpressionStatement[236646-236743]:ExpressionStatement[237618-237715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[236772-236919]:Block[237744-237891]"
    }, {
      "left" : "other.pendingCommandCompleted(processingStarted.account, processingStarted.processingCommandTitle);",
      "right" : "other.pendingCommandCompleted(processingStarted.account, processingStarted.processingCommandTitle);",
      "info" : "ExpressionStatement[236798-236897]:ExpressionStatement[237770-237869]"
    }, {
      "left" : "somethingStarted = processingStarted;",
      "right" : "somethingStarted = processingStarted;",
      "info" : "ExpressionStatement[236940-236977]:ExpressionStatement[237912-237949]"
    }, {
      "left" : "if (somethingStarted != null && somethingStarted.folderTotal > 0)",
      "right" : "if (somethingStarted != null && somethingStarted.folderTotal > 0)",
      "info" : "IfStatement[237012-237270]:IfStatement[237984-238242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[237078-237270]:Block[238050-238242]"
    }, {
      "left" : "other.synchronizeMailboxProgress(somethingStarted.account, somethingStarted.folderName, somethingStarted.folderCompleted, somethingStarted.folderTotal);",
      "right" : "other.synchronizeMailboxProgress(somethingStarted.account, somethingStarted.folderName, somethingStarted.folderCompleted, somethingStarted.folderTotal);",
      "info" : "ExpressionStatement[237100-237252]:ExpressionStatement[238072-238224]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[237304-237313]:MarkerAnnotation[238276-238285]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[237322-237328]:Modifier[238294-238300]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[237329-237341]:Modifier[238301-238313]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[237342-237346]:PrimitiveType[238314-238318]"
    }, {
      "left" : "setPushActive",
      "right" : "setPushActive",
      "info" : "SimpleName[237347-237360]:SimpleName[238319-238332]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[237361-237376]:SingleVariableDeclaration[238333-238348]"
    }, {
      "left" : "String folderName",
      "right" : "String folderName",
      "info" : "SingleVariableDeclaration[237378-237395]:SingleVariableDeclaration[238350-238367]"
    }, {
      "left" : "boolean active",
      "right" : "boolean active",
      "info" : "SingleVariableDeclaration[237397-237411]:SingleVariableDeclaration[238369-238383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[237413-237581]:Block[238385-238553]"
    }, {
      "left" : "Memory memory = getMemory(account, folderName);",
      "right" : "Memory memory = getMemory(account, folderName);",
      "info" : "VariableDeclarationStatement[237427-237474]:VariableDeclarationStatement[238399-238446]"
    }, {
      "left" : "memory.pushingState = (active ? MemorizingState.STARTED : MemorizingState.FINISHED);",
      "right" : "memory.pushingState = (active ? MemorizingState.STARTED : MemorizingState.FINISHED);",
      "info" : "ExpressionStatement[237487-237571]:ExpressionStatement[238459-238543]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[237591-237600]:MarkerAnnotation[238563-238572]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[237609-237615]:Modifier[238581-238587]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[237616-237628]:Modifier[238588-238600]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[237629-237633]:PrimitiveType[238601-238605]"
    }, {
      "left" : "sendPendingMessagesStarted",
      "right" : "sendPendingMessagesStarted",
      "info" : "SimpleName[237634-237660]:SimpleName[238606-238632]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[237661-237676]:SingleVariableDeclaration[238633-238648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[237678-237878]:Block[238650-238850]"
    }, {
      "left" : "Memory memory = getMemory(account, null);",
      "right" : "Memory memory = getMemory(account, null);",
      "info" : "VariableDeclarationStatement[237692-237733]:VariableDeclarationStatement[238664-238705]"
    }, {
      "left" : "memory.sendingState = MemorizingState.STARTED;",
      "right" : "memory.sendingState = MemorizingState.STARTED;",
      "info" : "ExpressionStatement[237746-237792]:ExpressionStatement[238718-238764]"
    }, {
      "left" : "memory.folderCompleted = 0;",
      "right" : "memory.folderCompleted = 0;",
      "info" : "ExpressionStatement[237805-237832]:ExpressionStatement[238777-238804]"
    }, {
      "left" : "memory.folderTotal = 0;",
      "right" : "memory.folderTotal = 0;",
      "info" : "ExpressionStatement[237845-237868]:ExpressionStatement[238817-238840]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[237888-237897]:MarkerAnnotation[238860-238869]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[237906-237912]:Modifier[238878-238884]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[237913-237925]:Modifier[238885-238897]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[237926-237930]:PrimitiveType[238898-238902]"
    }, {
      "left" : "sendPendingMessagesCompleted",
      "right" : "sendPendingMessagesCompleted",
      "info" : "SimpleName[237931-237959]:SimpleName[238903-238931]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[237960-237975]:SingleVariableDeclaration[238932-238947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[237977-238102]:Block[238949-239074]"
    }, {
      "left" : "Memory memory = getMemory(account, null);",
      "right" : "Memory memory = getMemory(account, null);",
      "info" : "VariableDeclarationStatement[237991-238032]:VariableDeclarationStatement[238963-239004]"
    }, {
      "left" : "memory.sendingState = MemorizingState.FINISHED;",
      "right" : "memory.sendingState = MemorizingState.FINISHED;",
      "info" : "ExpressionStatement[238045-238092]:ExpressionStatement[239017-239064]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[238112-238121]:MarkerAnnotation[239084-239093]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[238130-238136]:Modifier[239102-239108]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[238137-238149]:Modifier[239109-239121]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[238150-238154]:PrimitiveType[239122-239126]"
    }, {
      "left" : "sendPendingMessagesFailed",
      "right" : "sendPendingMessagesFailed",
      "info" : "SimpleName[238155-238180]:SimpleName[239127-239152]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[238181-238196]:SingleVariableDeclaration[239153-239168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238198-238321]:Block[239170-239293]"
    }, {
      "left" : "Memory memory = getMemory(account, null);",
      "right" : "Memory memory = getMemory(account, null);",
      "info" : "VariableDeclarationStatement[238212-238253]:VariableDeclarationStatement[239184-239225]"
    }, {
      "left" : "memory.sendingState = MemorizingState.FAILED;",
      "right" : "memory.sendingState = MemorizingState.FAILED;",
      "info" : "ExpressionStatement[238266-238311]:ExpressionStatement[239238-239283]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[238332-238341]:MarkerAnnotation[239304-239313]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[238350-238356]:Modifier[239322-239328]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[238357-238369]:Modifier[239329-239341]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[238370-238374]:PrimitiveType[239342-239346]"
    }, {
      "left" : "synchronizeMailboxProgress",
      "right" : "synchronizeMailboxProgress",
      "info" : "SimpleName[238375-238401]:SimpleName[239347-239373]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[238402-238417]:SingleVariableDeclaration[239374-239389]"
    }, {
      "left" : "String folderName",
      "right" : "String folderName",
      "info" : "SingleVariableDeclaration[238419-238436]:SingleVariableDeclaration[239391-239408]"
    }, {
      "left" : "int completed",
      "right" : "int completed",
      "info" : "SingleVariableDeclaration[238438-238451]:SingleVariableDeclaration[239410-239423]"
    }, {
      "left" : "int total",
      "right" : "int total",
      "info" : "SingleVariableDeclaration[238453-238462]:SingleVariableDeclaration[239425-239434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238464-238623]:Block[239436-239595]"
    }, {
      "left" : "Memory memory = getMemory(account, folderName);",
      "right" : "Memory memory = getMemory(account, folderName);",
      "info" : "VariableDeclarationStatement[238478-238525]:VariableDeclarationStatement[239450-239497]"
    }, {
      "left" : "memory.folderCompleted = completed;",
      "right" : "memory.folderCompleted = completed;",
      "info" : "ExpressionStatement[238538-238573]:ExpressionStatement[239510-239545]"
    }, {
      "left" : "memory.folderTotal = total;",
      "right" : "memory.folderTotal = total;",
      "info" : "ExpressionStatement[238586-238613]:ExpressionStatement[239558-239585]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[238634-238643]:MarkerAnnotation[239606-239615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[238652-238658]:Modifier[239624-239630]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[238659-238671]:Modifier[239631-239643]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[238672-238676]:PrimitiveType[239644-239648]"
    }, {
      "left" : "pendingCommandsProcessing",
      "right" : "pendingCommandsProcessing",
      "info" : "SimpleName[238677-238702]:SimpleName[239649-239674]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[238703-238718]:SingleVariableDeclaration[239675-239690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238720-238923]:Block[239692-239895]"
    }, {
      "left" : "Memory memory = getMemory(account, null);",
      "right" : "Memory memory = getMemory(account, null);",
      "info" : "VariableDeclarationStatement[238734-238775]:VariableDeclarationStatement[239706-239747]"
    }, {
      "left" : "memory.processingState = MemorizingState.STARTED;",
      "right" : "memory.processingState = MemorizingState.STARTED;",
      "info" : "ExpressionStatement[238788-238837]:ExpressionStatement[239760-239809]"
    }, {
      "left" : "memory.folderCompleted = 0;",
      "right" : "memory.folderCompleted = 0;",
      "info" : "ExpressionStatement[238850-238877]:ExpressionStatement[239822-239849]"
    }, {
      "left" : "memory.folderTotal = 0;",
      "right" : "memory.folderTotal = 0;",
      "info" : "ExpressionStatement[238890-238913]:ExpressionStatement[239862-239885]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[238932-238941]:MarkerAnnotation[239904-239913]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[238950-238956]:Modifier[239922-239928]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[238957-238969]:Modifier[239929-239941]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[238970-238974]:PrimitiveType[239942-239946]"
    }, {
      "left" : "pendingCommandsFinished",
      "right" : "pendingCommandsFinished",
      "info" : "SimpleName[238975-238998]:SimpleName[239947-239970]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[238999-239014]:SingleVariableDeclaration[239971-239986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239016-239144]:Block[239988-240116]"
    }, {
      "left" : "Memory memory = getMemory(account, null);",
      "right" : "Memory memory = getMemory(account, null);",
      "info" : "VariableDeclarationStatement[239030-239071]:VariableDeclarationStatement[240002-240043]"
    }, {
      "left" : "memory.processingState = MemorizingState.FINISHED;",
      "right" : "memory.processingState = MemorizingState.FINISHED;",
      "info" : "ExpressionStatement[239084-239134]:ExpressionStatement[240056-240106]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[239153-239162]:MarkerAnnotation[240125-240134]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[239171-239177]:Modifier[240143-240149]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[239178-239190]:Modifier[240150-240162]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[239191-239195]:PrimitiveType[240163-240167]"
    }, {
      "left" : "pendingCommandStarted",
      "right" : "pendingCommandStarted",
      "info" : "SimpleName[239196-239217]:SimpleName[240168-240189]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[239218-239233]:SingleVariableDeclaration[240190-240205]"
    }, {
      "left" : "String commandTitle",
      "right" : "String commandTitle",
      "info" : "SingleVariableDeclaration[239235-239254]:SingleVariableDeclaration[240207-240226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239256-239379]:Block[240228-240351]"
    }, {
      "left" : "Memory memory = getMemory(account, null);",
      "right" : "Memory memory = getMemory(account, null);",
      "info" : "VariableDeclarationStatement[239270-239311]:VariableDeclarationStatement[240242-240283]"
    }, {
      "left" : "memory.processingCommandTitle = commandTitle;",
      "right" : "memory.processingCommandTitle = commandTitle;",
      "info" : "ExpressionStatement[239324-239369]:ExpressionStatement[240296-240341]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[239389-239398]:MarkerAnnotation[240361-240370]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[239407-239413]:Modifier[240379-240385]"
    }, {
      "left" : "synchronized",
      "right" : "synchronized",
      "info" : "Modifier[239414-239426]:Modifier[240386-240398]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[239427-239431]:PrimitiveType[240399-240403]"
    }, {
      "left" : "pendingCommandCompleted",
      "right" : "pendingCommandCompleted",
      "info" : "SimpleName[239432-239455]:SimpleName[240404-240427]"
    }, {
      "left" : "Account account",
      "right" : "Account account",
      "info" : "SingleVariableDeclaration[239456-239471]:SingleVariableDeclaration[240428-240443]"
    }, {
      "left" : "String commandTitle",
      "right" : "String commandTitle",
      "info" : "SingleVariableDeclaration[239473-239492]:SingleVariableDeclaration[240445-240464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239494-239609]:Block[240466-240581]"
    }, {
      "left" : "Memory memory = getMemory(account, null);",
      "right" : "Memory memory = getMemory(account, null);",
      "info" : "VariableDeclarationStatement[239508-239549]:VariableDeclarationStatement[240480-240521]"
    }, {
      "left" : "memory.processingCommandTitle = null;",
      "right" : "memory.processingCommandTitle = null;",
      "info" : "ExpressionStatement[239562-239599]:ExpressionStatement[240534-240571]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[239622-239629]:Modifier[240594-240601]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[239630-239634]:PrimitiveType[240602-240606]"
    }, {
      "left" : "actOnMessages",
      "right" : "actOnMessages",
      "info" : "SimpleName[239635-239648]:SimpleName[240607-240620]"
    }, {
      "left" : "List<LocalMessage> messages",
      "right" : "List<LocalMessage> messages",
      "info" : "SingleVariableDeclaration[239649-239676]:SingleVariableDeclaration[240621-240648]"
    }, {
      "left" : "MessageActor actor",
      "right" : "MessageActor actor",
      "info" : "SingleVariableDeclaration[239678-239696]:SingleVariableDeclaration[240650-240668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239698-241131]:Block[240670-242103]"
    }, {
      "left" : "Map<Account, Map<Folder, List<Message>>> accountMap = new HashMap<Account, Map<Folder, List<Message>>>();",
      "right" : "Map<Account, Map<Folder, List<Message>>> accountMap = new HashMap<Account, Map<Folder, List<Message>>>();",
      "info" : "VariableDeclarationStatement[239708-239813]:VariableDeclarationStatement[240680-240785]"
    }, {
      "left" : "for (LocalMessage message : messages)",
      "right" : "for (LocalMessage message : messages)",
      "info" : "EnhancedForStatement[239823-240558]:EnhancedForStatement[240795-241530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239861-240558]:Block[240833-241530]"
    }, {
      "left" : "if ( message == null)",
      "right" : "if ( message == null)",
      "info" : "IfStatement[239875-239937]:IfStatement[240847-240909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239897-239937]:Block[240869-240909]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[239914-239923]:ContinueStatement[240886-240895]"
    }, {
      "left" : "Folder folder = message.getFolder();",
      "right" : "Folder folder = message.getFolder();",
      "info" : "VariableDeclarationStatement[239950-239986]:VariableDeclarationStatement[240922-240958]"
    }, {
      "left" : "Account account = message.getAccount();",
      "right" : "Account account = message.getAccount();",
      "info" : "VariableDeclarationStatement[239999-240038]:VariableDeclarationStatement[240971-241010]"
    }, {
      "left" : "Map<Folder, List<Message>> folderMap = accountMap.get(account);",
      "right" : "Map<Folder, List<Message>> folderMap = accountMap.get(account);",
      "info" : "VariableDeclarationStatement[240052-240115]:VariableDeclarationStatement[241024-241087]"
    }, {
      "left" : "if (folderMap == null)",
      "right" : "if (folderMap == null)",
      "info" : "IfStatement[240128-240284]:IfStatement[241100-241256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240151-240284]:Block[241123-241256]"
    }, {
      "left" : "folderMap = new HashMap<Folder, List<Message>>();",
      "right" : "folderMap = new HashMap<Folder, List<Message>>();",
      "info" : "ExpressionStatement[240169-240218]:ExpressionStatement[241141-241190]"
    }, {
      "left" : "accountMap.put(account, folderMap);",
      "right" : "accountMap.put(account, folderMap);",
      "info" : "ExpressionStatement[240235-240270]:ExpressionStatement[241207-241242]"
    }, {
      "left" : "List<Message> messageList = folderMap.get(folder);",
      "right" : "List<Message> messageList = folderMap.get(folder);",
      "info" : "VariableDeclarationStatement[240297-240347]:VariableDeclarationStatement[241269-241319]"
    }, {
      "left" : "if (messageList == null)",
      "right" : "if (messageList == null)",
      "info" : "IfStatement[240360-240509]:IfStatement[241332-241481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240385-240509]:Block[241357-241481]"
    }, {
      "left" : "messageList = new LinkedList<Message>();",
      "right" : "messageList = new LinkedList<Message>();",
      "info" : "ExpressionStatement[240403-240443]:ExpressionStatement[241375-241415]"
    }, {
      "left" : "folderMap.put(folder, messageList);",
      "right" : "folderMap.put(folder, messageList);",
      "info" : "ExpressionStatement[240460-240495]:ExpressionStatement[241432-241467]"
    }, {
      "left" : "messageList.add(message);",
      "right" : "messageList.add(message);",
      "info" : "ExpressionStatement[240523-240548]:ExpressionStatement[241495-241520]"
    }, {
      "left" : "for (Map.Entry<Account, Map<Folder, List<Message>>> entry : accountMap.entrySet())",
      "right" : "for (Map.Entry<Account, Map<Folder, List<Message>>> entry : accountMap.entrySet())",
      "info" : "EnhancedForStatement[240567-241125]:EnhancedForStatement[241539-242097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240650-241125]:Block[241622-242097]"
    }, {
      "left" : "Account account = entry.getKey();",
      "right" : "Account account = entry.getKey();",
      "info" : "VariableDeclarationStatement[240664-240697]:VariableDeclarationStatement[241636-241669]"
    }, {
      "left" : "Map<Folder, List<Message>> folderMap = entry.getValue();",
      "right" : "Map<Folder, List<Message>> folderMap = entry.getValue();",
      "info" : "VariableDeclarationStatement[240778-240834]:VariableDeclarationStatement[241750-241806]"
    }, {
      "left" : "for (Map.Entry<Folder, List<Message>> folderEntry : folderMap.entrySet())",
      "right" : "for (Map.Entry<Folder, List<Message>> folderEntry : folderMap.entrySet())",
      "info" : "EnhancedForStatement[240847-241115]:EnhancedForStatement[241819-242087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240921-241115]:Block[241893-242087]"
    }, {
      "left" : "Folder folder = folderEntry.getKey();",
      "right" : "Folder folder = folderEntry.getKey();",
      "info" : "VariableDeclarationStatement[240939-240976]:VariableDeclarationStatement[241911-241948]"
    }, {
      "left" : "List<Message> messageList = folderEntry.getValue();",
      "right" : "List<Message> messageList = folderEntry.getValue();",
      "info" : "VariableDeclarationStatement[240993-241044]:VariableDeclarationStatement[241965-242016]"
    }, {
      "left" : "actor.act(account, folder, messageList);",
      "right" : "actor.act(account, folder, messageList);",
      "info" : "ExpressionStatement[241061-241101]:ExpressionStatement[242033-242073]"
    }, {
      "left" : "interface",
      "right" : "interface",
      "info" : "TYPE_DECLARATION_KIND[241137-241146]:TYPE_DECLARATION_KIND[242109-242118]"
    }, {
      "left" : "MessageActor",
      "right" : "MessageActor",
      "info" : "SimpleName[241147-241159]:SimpleName[242119-242131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[241170-241176]:Modifier[242142-242148]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[241177-241181]:PrimitiveType[242149-242153]"
    }, {
      "left" : "act",
      "right" : "act",
      "info" : "SimpleName[241182-241185]:SimpleName[242154-242157]"
    }, {
      "left" : "final Account account",
      "right" : "final Account account",
      "info" : "SingleVariableDeclaration[241186-241207]:SingleVariableDeclaration[242158-242179]"
    }, {
      "left" : "final Folder folder",
      "right" : "final Folder folder",
      "info" : "SingleVariableDeclaration[241209-241228]:SingleVariableDeclaration[242181-242200]"
    }, {
      "left" : "final List<Message> messages",
      "right" : "final List<Message> messages",
      "info" : "SingleVariableDeclaration[241230-241258]:SingleVariableDeclaration[242202-242230]"
    } ]
  },
  "interFileMappings" : { }
}