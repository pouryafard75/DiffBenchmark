{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TarArchiveOutputStream",
      "right" : "TarArchiveOutputStream",
      "info" : "TypeDeclaration[1062-11412]:TypeDeclaration[1062-11649]"
    }, {
      "left" : "public static final int LONGFILE_ERROR = 0;",
      "right" : "public static final int LONGFILE_ERROR = 0;",
      "info" : "FieldDeclaration[1341-1448]:FieldDeclaration[1341-1448]"
    }, {
      "left" : "public static final int LONGFILE_TRUNCATE = 1;",
      "right" : "public static final int LONGFILE_TRUNCATE = 1;",
      "info" : "FieldDeclaration[1454-1556]:FieldDeclaration[1454-1556]"
    }, {
      "left" : "public static final int LONGFILE_GNU = 2;",
      "right" : "public static final int LONGFILE_GNU = 2;",
      "info" : "FieldDeclaration[1562-1683]:FieldDeclaration[1562-1683]"
    }, {
      "left" : "private long      currSize;",
      "right" : "private long      currSize;",
      "info" : "FieldDeclaration[1689-1716]:FieldDeclaration[1689-1716]"
    }, {
      "left" : "private String    currName;",
      "right" : "private String    currName;",
      "info" : "FieldDeclaration[1721-1748]:FieldDeclaration[1721-1748]"
    }, {
      "left" : "private long      currBytes;",
      "right" : "private long      currBytes;",
      "info" : "FieldDeclaration[1753-1781]:FieldDeclaration[1753-1781]"
    }, {
      "left" : "private final byte[]    recordBuf;",
      "right" : "private final byte[]    recordBuf;",
      "info" : "FieldDeclaration[1786-1820]:FieldDeclaration[1786-1820]"
    }, {
      "left" : "private int       assemLen;",
      "right" : "private int       assemLen;",
      "info" : "FieldDeclaration[1825-1852]:FieldDeclaration[1825-1852]"
    }, {
      "left" : "private final byte[]    assemBuf;",
      "right" : "private final byte[]    assemBuf;",
      "info" : "FieldDeclaration[1857-1890]:FieldDeclaration[1857-1890]"
    }, {
      "left" : "protected final TarBuffer buffer;",
      "right" : "protected final TarBuffer buffer;",
      "info" : "FieldDeclaration[1895-1928]:FieldDeclaration[1895-1928]"
    }, {
      "left" : "private int       longFileMode = LONGFILE_ERROR;",
      "right" : "private int       longFileMode = LONGFILE_ERROR;",
      "info" : "FieldDeclaration[1933-1981]:FieldDeclaration[1933-1981]"
    }, {
      "left" : "private boolean closed = false;",
      "right" : "private boolean closed = false;",
      "info" : "FieldDeclaration[1987-2018]:FieldDeclaration[1987-2018]"
    }, {
      "left" : "private final OutputStream out;",
      "right" : "private final OutputStream out;",
      "info" : "FieldDeclaration[2110-2141]:FieldDeclaration[2157-2188]"
    }, {
      "left" : "public TarArchiveOutputStream(OutputStream os)",
      "right" : "public TarArchiveOutputStream(OutputStream os)",
      "info" : "MethodDeclaration[2147-2370]:MethodDeclaration[2194-2417]"
    }, {
      "left" : "public TarArchiveOutputStream(OutputStream os, int blockSize)",
      "right" : "public TarArchiveOutputStream(OutputStream os, int blockSize)",
      "info" : "MethodDeclaration[2376-2644]:MethodDeclaration[2423-2691]"
    }, {
      "left" : "public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize)",
      "right" : "public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize)",
      "info" : "MethodDeclaration[2650-3129]:MethodDeclaration[2697-3176]"
    }, {
      "left" : "public void setLongFileMode(int longFileMode)",
      "right" : "public void setLongFileMode(int longFileMode)",
      "info" : "MethodDeclaration[3135-3521]:MethodDeclaration[3182-3568]"
    }, {
      "left" : "public void finish() throws IOException",
      "right" : "public void finish() throws IOException",
      "info" : "MethodDeclaration[3528-3992]:MethodDeclaration[3575-4160]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[3998-4393]:MethodDeclaration[4166-4561]"
    }, {
      "left" : "public int getRecordSize()",
      "right" : "public int getRecordSize()",
      "info" : "MethodDeclaration[4399-4603]:MethodDeclaration[4567-4771]"
    }, {
      "left" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
      "right" : "public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException",
      "info" : "MethodDeclaration[4609-6782]:MethodDeclaration[4777-6984]"
    }, {
      "left" : "public void closeArchiveEntry() throws IOException",
      "right" : "public void closeArchiveEntry() throws IOException",
      "info" : "MethodDeclaration[6788-7867]:MethodDeclaration[6990-8104]"
    }, {
      "left" : "public void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException",
      "right" : "public void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException",
      "info" : "MethodDeclaration[7873-10778]:MethodDeclaration[8110-11015]"
    }, {
      "left" : "private void writeEOFRecord() throws IOException",
      "right" : "private void writeEOFRecord() throws IOException",
      "info" : "MethodDeclaration[10784-11109]:MethodDeclaration[11021-11346]"
    }, {
      "left" : "public void flush() throws IOException",
      "right" : "public void flush() throws IOException",
      "info" : "MethodDeclaration[11168-11235]:MethodDeclaration[11405-11472]"
    }, {
      "left" : "public ArchiveEntry createArchiveEntry(File inputFile, String entryName)\n            throws IOException",
      "right" : "public ArchiveEntry createArchiveEntry(File inputFile, String entryName)\n            throws IOException",
      "info" : "MethodDeclaration[11241-11410]:MethodDeclaration[11478-11647]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2291-2370]:Block[2338-2417]"
    }, {
      "left" : "this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE);",
      "right" : "this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE);",
      "info" : "ConstructorInvocation[2301-2364]:ConstructorInvocation[2348-2411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2581-2644]:Block[2628-2691]"
    }, {
      "left" : "this(os, blockSize, TarBuffer.DEFAULT_RCDSIZE);",
      "right" : "this(os, blockSize, TarBuffer.DEFAULT_RCDSIZE);",
      "info" : "ConstructorInvocation[2591-2638]:ConstructorInvocation[2638-2685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2919-3129]:Block[2966-3176]"
    }, {
      "left" : "out = os;",
      "right" : "out = os;",
      "info" : "ExpressionStatement[2929-2938]:ExpressionStatement[2976-2985]"
    }, {
      "left" : "this.buffer = new TarBuffer(os, blockSize, recordSize);",
      "right" : "this.buffer = new TarBuffer(os, blockSize, recordSize);",
      "info" : "ExpressionStatement[2948-3003]:ExpressionStatement[2995-3050]"
    }, {
      "left" : "this.assemLen = 0;",
      "right" : "this.assemLen = 0;",
      "info" : "ExpressionStatement[3012-3030]:ExpressionStatement[3059-3077]"
    }, {
      "left" : "this.assemBuf = new byte[recordSize];",
      "right" : "this.assemBuf = new byte[recordSize];",
      "info" : "ExpressionStatement[3039-3076]:ExpressionStatement[3086-3123]"
    }, {
      "left" : "this.recordBuf = new byte[recordSize];",
      "right" : "this.recordBuf = new byte[recordSize];",
      "info" : "ExpressionStatement[3085-3123]:ExpressionStatement[3132-3170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3472-3521]:Block[3519-3568]"
    }, {
      "left" : "this.longFileMode = longFileMode;",
      "right" : "this.longFileMode = longFileMode;",
      "info" : "ExpressionStatement[3482-3515]:ExpressionStatement[3529-3562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3933-3992]:Block[3980-4160]"
    }, {
      "left" : "writeEOFRecord();",
      "right" : "writeEOFRecord();",
      "info" : "ExpressionStatement[3943-3960]:ExpressionStatement[4111-4128]"
    }, {
      "left" : "writeEOFRecord();",
      "right" : "writeEOFRecord();",
      "info" : "ExpressionStatement[3969-3986]:ExpressionStatement[4137-4154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4251-4393]:Block[4419-4561]"
    }, {
      "left" : "if (!closed)",
      "right" : "if (!closed)",
      "info" : "IfStatement[4261-4387]:IfStatement[4429-4555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4274-4387]:Block[4442-4555]"
    }, {
      "left" : "finish();",
      "right" : "finish();",
      "info" : "ExpressionStatement[4288-4297]:ExpressionStatement[4456-4465]"
    }, {
      "left" : "buffer.close();",
      "right" : "buffer.close();",
      "info" : "ExpressionStatement[4310-4325]:ExpressionStatement[4478-4493]"
    }, {
      "left" : "out.close();",
      "right" : "out.close();",
      "info" : "ExpressionStatement[4338-4350]:ExpressionStatement[4506-4518]"
    }, {
      "left" : "closed = true;",
      "right" : "closed = true;",
      "info" : "ExpressionStatement[4363-4377]:ExpressionStatement[4531-4545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4557-4603]:Block[4725-4771]"
    }, {
      "left" : "return buffer.getRecordSize();",
      "right" : "return buffer.getRecordSize();",
      "info" : "ReturnStatement[4567-4597]:ReturnStatement[4735-4765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5343-6782]:Block[5511-6984]"
    }, {
      "left" : "TarArchiveEntry entry = (TarArchiveEntry) archiveEntry;",
      "right" : "TarArchiveEntry entry = (TarArchiveEntry) archiveEntry;",
      "info" : "VariableDeclarationStatement[5353-5408]:VariableDeclarationStatement[5521-5576]"
    }, {
      "left" : "if (entry.getName().length() >= TarConstants.NAMELEN)",
      "right" : "if (entry.getName().length() >= TarConstants.NAMELEN)",
      "info" : "IfStatement[5417-6504]:IfStatement[5585-6672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5471-6504]:Block[5639-6672]"
    }, {
      "left" : "if (longFileMode == LONGFILE_GNU)",
      "right" : "if (longFileMode == LONGFILE_GNU)",
      "info" : "IfStatement[5486-6494]:IfStatement[5654-6662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5520-6213]:Block[5688-6381]"
    }, {
      "left" : "TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK,\n                                                                    TarConstants.LF_GNUTYPE_LONGNAME);",
      "right" : "TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK,\n                                                                    TarConstants.LF_GNUTYPE_LONGNAME);",
      "info" : "VariableDeclarationStatement[5655-5836]:VariableDeclarationStatement[5823-6004]"
    }, {
      "left" : "final byte[] nameBytes = entry.getName().getBytes();",
      "right" : "final byte[] nameBytes = entry.getName().getBytes();",
      "info" : "VariableDeclarationStatement[5854-5906]:VariableDeclarationStatement[6022-6074]"
    }, {
      "left" : "longLinkEntry.setSize(nameBytes.length + 1);",
      "right" : "longLinkEntry.setSize(nameBytes.length + 1);",
      "info" : "ExpressionStatement[5978-6022]:ExpressionStatement[6146-6190]"
    }, {
      "left" : "putArchiveEntry(longLinkEntry);",
      "right" : "putArchiveEntry(longLinkEntry);",
      "info" : "ExpressionStatement[6053-6084]:ExpressionStatement[6221-6252]"
    }, {
      "left" : "write(nameBytes);",
      "right" : "write(nameBytes);",
      "info" : "ExpressionStatement[6101-6118]:ExpressionStatement[6269-6286]"
    }, {
      "left" : "write(0);",
      "right" : "write(0);",
      "info" : "ExpressionStatement[6135-6144]:ExpressionStatement[6303-6312]"
    }, {
      "left" : "closeArchiveEntry();",
      "right" : "closeArchiveEntry();",
      "info" : "ExpressionStatement[6179-6199]:ExpressionStatement[6347-6367]"
    }, {
      "left" : "if (longFileMode != LONGFILE_TRUNCATE)",
      "right" : "if (longFileMode != LONGFILE_TRUNCATE)",
      "info" : "IfStatement[6219-6494]:IfStatement[6387-6662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6258-6494]:Block[6426-6662]"
    }, {
      "left" : "throw new RuntimeException(\"file name '\" + entry.getName()\n                                           + \"' is too long ( > \"\n                                           + TarConstants.NAMELEN + \" bytes)\");",
      "right" : "throw new RuntimeException(\"file name '\" + entry.getName()\n                                           + \"' is too long ( > \"\n                                           + TarConstants.NAMELEN + \" bytes)\");",
      "info" : "ThrowStatement[6276-6480]:ThrowStatement[6444-6648]"
    }, {
      "left" : "entry.writeEntryHeader(recordBuf);",
      "right" : "entry.writeEntryHeader(recordBuf);",
      "info" : "ExpressionStatement[6514-6548]:ExpressionStatement[6682-6716]"
    }, {
      "left" : "buffer.writeRecord(recordBuf);",
      "right" : "buffer.writeRecord(recordBuf);",
      "info" : "ExpressionStatement[6557-6587]:ExpressionStatement[6725-6755]"
    }, {
      "left" : "currBytes = 0;",
      "right" : "currBytes = 0;",
      "info" : "ExpressionStatement[6597-6611]:ExpressionStatement[6765-6779]"
    }, {
      "left" : "if (entry.isDirectory())",
      "right" : "if (entry.isDirectory())",
      "info" : "IfStatement[6621-6740]:IfStatement[6789-6908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6646-6683]:Block[6814-6851]"
    }, {
      "left" : "currSize = 0;",
      "right" : "currSize = 0;",
      "info" : "ExpressionStatement[6660-6673]:ExpressionStatement[6828-6841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6689-6740]:Block[6857-6908]"
    }, {
      "left" : "currSize = entry.getSize();",
      "right" : "currSize = entry.getSize();",
      "info" : "ExpressionStatement[6703-6730]:ExpressionStatement[6871-6898]"
    }, {
      "left" : "currName = entry.getName();",
      "right" : "currName = entry.getName();",
      "info" : "ExpressionStatement[6749-6776]:ExpressionStatement[6917-6944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7292-7867]:Block[7494-8104]"
    }, {
      "left" : "if (assemLen > 0)",
      "right" : "if (assemLen > 0)",
      "info" : "IfStatement[7302-7546]:IfStatement[7504-7748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7320-7546]:Block[7522-7748]"
    }, {
      "left" : "for (int i = assemLen; i < assemBuf.length; ++i)",
      "right" : "for (int i = assemLen; i < assemBuf.length; ++i)",
      "info" : "ForStatement[7334-7431]:ForStatement[7536-7633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7383-7431]:Block[7585-7633]"
    }, {
      "left" : "assemBuf[i] = 0;",
      "right" : "assemBuf[i] = 0;",
      "info" : "ExpressionStatement[7401-7417]:ExpressionStatement[7603-7619]"
    }, {
      "left" : "buffer.writeRecord(assemBuf);",
      "right" : "buffer.writeRecord(assemBuf);",
      "info" : "ExpressionStatement[7445-7474]:ExpressionStatement[7647-7676]"
    }, {
      "left" : "currBytes += assemLen;",
      "right" : "currBytes += assemLen;",
      "info" : "ExpressionStatement[7488-7510]:ExpressionStatement[7690-7712]"
    }, {
      "left" : "assemLen = 0;",
      "right" : "assemLen = 0;",
      "info" : "ExpressionStatement[7523-7536]:ExpressionStatement[7725-7738]"
    }, {
      "left" : "if (currBytes < currSize)",
      "right" : "if (currBytes < currSize)",
      "info" : "IfStatement[7556-7861]:IfStatement[7758-8063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7582-7861]:Block[7784-8063]"
    }, {
      "left" : "throw new IOException(\"entry '\" + currName + \"' closed at '\"\n                                  + currBytes\n                                  + \"' before the '\" + currSize\n                                  + \"' bytes specified in the header were written\");",
      "right" : "throw new IOException(\"entry '\" + currName + \"' closed at '\"\n                                  + currBytes\n                                  + \"' before the '\" + currSize\n                                  + \"' bytes specified in the header were written\");",
      "info" : "ThrowStatement[7596-7851]:ThrowStatement[7798-8053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8640-10778]:Block[8877-11015]"
    }, {
      "left" : "if ((currBytes + numToWrite) > currSize)",
      "right" : "if ((currBytes + numToWrite) > currSize)",
      "info" : "IfStatement[8650-9324]:IfStatement[8887-9561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8691-9324]:Block[8928-9561]"
    }, {
      "left" : "throw new IOException(\"request to write '\" + numToWrite\n                                  + \"' bytes exceeds size in header of '\"\n                                  + currSize + \"' bytes for entry '\"\n                                  + currName + \"'\");",
      "right" : "throw new IOException(\"request to write '\" + numToWrite\n                                  + \"' bytes exceeds size in header of '\"\n                                  + currSize + \"' bytes for entry '\"\n                                  + currName + \"'\");",
      "info" : "ThrowStatement[8705-8956]:ThrowStatement[8942-9193]"
    }, {
      "left" : "if (assemLen > 0)",
      "right" : "if (assemLen > 0)",
      "info" : "IfStatement[9334-10151]:IfStatement[9571-10388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9352-10151]:Block[9589-10388]"
    }, {
      "left" : "if ((assemLen + numToWrite) >= recordBuf.length)",
      "right" : "if ((assemLen + numToWrite) >= recordBuf.length)",
      "info" : "IfStatement[9366-10141]:IfStatement[9603-10378]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9415-9894]:Block[9652-10131]"
    }, {
      "left" : "int aLen = recordBuf.length - assemLen;",
      "right" : "int aLen = recordBuf.length - assemLen;",
      "info" : "VariableDeclarationStatement[9433-9472]:VariableDeclarationStatement[9670-9709]"
    }, {
      "left" : "System.arraycopy(assemBuf, 0, recordBuf, 0,\n                                 assemLen);",
      "right" : "System.arraycopy(assemBuf, 0, recordBuf, 0,\n                                 assemLen);",
      "info" : "ExpressionStatement[9490-9577]:ExpressionStatement[9727-9814]"
    }, {
      "left" : "System.arraycopy(wBuf, wOffset, recordBuf,\n                                 assemLen, aLen);",
      "right" : "System.arraycopy(wBuf, wOffset, recordBuf,\n                                 assemLen, aLen);",
      "info" : "ExpressionStatement[9594-9686]:ExpressionStatement[9831-9923]"
    }, {
      "left" : "buffer.writeRecord(recordBuf);",
      "right" : "buffer.writeRecord(recordBuf);",
      "info" : "ExpressionStatement[9703-9733]:ExpressionStatement[9940-9970]"
    }, {
      "left" : "currBytes += recordBuf.length;",
      "right" : "currBytes += recordBuf.length;",
      "info" : "ExpressionStatement[9751-9781]:ExpressionStatement[9988-10018]"
    }, {
      "left" : "wOffset += aLen;",
      "right" : "wOffset += aLen;",
      "info" : "ExpressionStatement[9798-9814]:ExpressionStatement[10035-10051]"
    }, {
      "left" : "numToWrite -= aLen;",
      "right" : "numToWrite -= aLen;",
      "info" : "ExpressionStatement[9831-9850]:ExpressionStatement[10068-10087]"
    }, {
      "left" : "assemLen = 0;",
      "right" : "assemLen = 0;",
      "info" : "ExpressionStatement[9867-9880]:ExpressionStatement[10104-10117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9900-10141]:Block[10137-10378]"
    }, {
      "left" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
      "right" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
      "info" : "ExpressionStatement[9918-10015]:ExpressionStatement[10155-10252]"
    }, {
      "left" : "wOffset += numToWrite;",
      "right" : "wOffset += numToWrite;",
      "info" : "ExpressionStatement[10033-10055]:ExpressionStatement[10270-10292]"
    }, {
      "left" : "assemLen += numToWrite;",
      "right" : "assemLen += numToWrite;",
      "info" : "ExpressionStatement[10072-10095]:ExpressionStatement[10309-10332]"
    }, {
      "left" : "numToWrite = 0;",
      "right" : "numToWrite = 0;",
      "info" : "ExpressionStatement[10112-10127]:ExpressionStatement[10349-10364]"
    }, {
      "left" : "while (numToWrite > 0)",
      "right" : "while (numToWrite > 0)",
      "info" : "WhileStatement[10317-10772]:WhileStatement[10554-11009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10340-10772]:Block[10577-11009]"
    }, {
      "left" : "if (numToWrite < recordBuf.length)",
      "right" : "if (numToWrite < recordBuf.length)",
      "info" : "IfStatement[10354-10583]:IfStatement[10591-10820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10389-10583]:Block[10626-10820]"
    }, {
      "left" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
      "right" : "System.arraycopy(wBuf, wOffset, assemBuf, assemLen,\n                                 numToWrite);",
      "info" : "ExpressionStatement[10407-10504]:ExpressionStatement[10644-10741]"
    }, {
      "left" : "assemLen += numToWrite;",
      "right" : "assemLen += numToWrite;",
      "info" : "ExpressionStatement[10522-10545]:ExpressionStatement[10759-10782]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[10563-10569]:BreakStatement[10800-10806]"
    }, {
      "left" : "buffer.writeRecord(wBuf, wOffset);",
      "right" : "buffer.writeRecord(wBuf, wOffset);",
      "info" : "ExpressionStatement[10597-10631]:ExpressionStatement[10834-10868]"
    }, {
      "left" : "int num = recordBuf.length;",
      "right" : "int num = recordBuf.length;",
      "info" : "VariableDeclarationStatement[10645-10672]:VariableDeclarationStatement[10882-10909]"
    }, {
      "left" : "currBytes += num;",
      "right" : "currBytes += num;",
      "info" : "ExpressionStatement[10686-10703]:ExpressionStatement[10923-10940]"
    }, {
      "left" : "numToWrite -= num;",
      "right" : "numToWrite -= num;",
      "info" : "ExpressionStatement[10716-10734]:ExpressionStatement[10953-10971]"
    }, {
      "left" : "wOffset += num;",
      "right" : "wOffset += num;",
      "info" : "ExpressionStatement[10747-10762]:ExpressionStatement[10984-10999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10969-11109]:Block[11206-11346]"
    }, {
      "left" : "for (int i = 0; i < recordBuf.length; ++i)",
      "right" : "for (int i = 0; i < recordBuf.length; ++i)",
      "info" : "ForStatement[10979-11063]:ForStatement[11216-11300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11022-11063]:Block[11259-11300]"
    }, {
      "left" : "recordBuf[i] = 0;",
      "right" : "recordBuf[i] = 0;",
      "info" : "ExpressionStatement[11036-11053]:ExpressionStatement[11273-11290]"
    }, {
      "left" : "buffer.writeRecord(recordBuf);",
      "right" : "buffer.writeRecord(recordBuf);",
      "info" : "ExpressionStatement[11073-11103]:ExpressionStatement[11310-11340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11207-11235]:Block[11444-11472]"
    }, {
      "left" : "out.flush();",
      "right" : "out.flush();",
      "info" : "ExpressionStatement[11217-11229]:ExpressionStatement[11454-11466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11345-11410]:Block[11582-11647]"
    }, {
      "left" : "return new TarArchiveEntry(inputFile, entryName);",
      "right" : "return new TarArchiveEntry(inputFile, entryName);",
      "info" : "ReturnStatement[11355-11404]:ReturnStatement[11592-11641]"
    } ]
  },
  "interFileMappings" : { }
}