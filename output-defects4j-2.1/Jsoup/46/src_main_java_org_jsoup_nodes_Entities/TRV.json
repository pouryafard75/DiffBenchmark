{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "enum : EscapeMode",
      "right" : "enum : EscapeMode",
      "info" : "EnumDeclaration[438-940]:EnumDeclaration[438-940]"
    }, {
      "left" : "private Map<Character, String> map;",
      "right" : "private Map<Character, String> map;",
      "info" : "FieldDeclaration[727-762]:FieldDeclaration[727-762]"
    }, {
      "left" : "EscapeMode(Map<Character, String> map)",
      "right" : "EscapeMode(Map<Character, String> map)",
      "info" : "MethodDeclaration[772-850]:MethodDeclaration[772-850]"
    }, {
      "left" : "public Map<Character, String> getMap()",
      "right" : "public Map<Character, String> getMap()",
      "info" : "MethodDeclaration[860-934]:MethodDeclaration[860-934]"
    }, {
      "left" : "private static final Map<String, Character> full;",
      "right" : "private static final Map<String, Character> full;",
      "info" : "FieldDeclaration[946-995]:FieldDeclaration[946-995]"
    }, {
      "left" : "private static final Map<Character, String> xhtmlByVal;",
      "right" : "private static final Map<Character, String> xhtmlByVal;",
      "info" : "FieldDeclaration[1000-1055]:FieldDeclaration[1000-1055]"
    }, {
      "left" : "private static final Map<String, Character> base;",
      "right" : "private static final Map<String, Character> base;",
      "info" : "FieldDeclaration[1060-1109]:FieldDeclaration[1060-1109]"
    }, {
      "left" : "private static final Map<Character, String> baseByVal;",
      "right" : "private static final Map<Character, String> baseByVal;",
      "info" : "FieldDeclaration[1114-1168]:FieldDeclaration[1114-1168]"
    }, {
      "left" : "private static final Map<Character, String> fullByVal;",
      "right" : "private static final Map<Character, String> fullByVal;",
      "info" : "FieldDeclaration[1173-1227]:FieldDeclaration[1173-1227]"
    }, {
      "left" : "private Entities()",
      "right" : "private Entities()",
      "info" : "MethodDeclaration[1233-1254]:MethodDeclaration[1233-1254]"
    }, {
      "left" : "public static boolean isNamedEntity(String name)",
      "right" : "public static boolean isNamedEntity(String name)",
      "info" : "MethodDeclaration[1260-1530]:MethodDeclaration[1260-1530]"
    }, {
      "left" : "public static boolean isBaseNamedEntity(String name)",
      "right" : "public static boolean isBaseNamedEntity(String name)",
      "info" : "MethodDeclaration[1536-1885]:MethodDeclaration[1536-1885]"
    }, {
      "left" : "public static Character getCharacterByName(String name)",
      "right" : "public static Character getCharacterByName(String name)",
      "info" : "MethodDeclaration[1891-2200]:MethodDeclaration[1891-2200]"
    }, {
      "left" : "static String escape(String string, Document.OutputSettings out)",
      "right" : "static String escape(String string, Document.OutputSettings out)",
      "info" : "MethodDeclaration[2210-2442]:MethodDeclaration[2210-2442]"
    }, {
      "left" : "static String unescape(String string)",
      "right" : "static String unescape(String string)",
      "info" : "MethodDeclaration[5899-5984]:MethodDeclaration[5906-5991]"
    }, {
      "left" : "static String unescape(String string, boolean strict)",
      "right" : "static String unescape(String string, boolean strict)",
      "info" : "MethodDeclaration[5990-6326]:MethodDeclaration[5997-6333]"
    }, {
      "left" : "private static boolean canEncode(final CoreCharset charset, final char c, final CharsetEncoder fallback)",
      "right" : "private static boolean canEncode(final CoreCharset charset, final char c, final CharsetEncoder fallback)",
      "info" : "MethodDeclaration[6909-7420]:MethodDeclaration[6916-7427]"
    }, {
      "left" : "enum : CoreCharset",
      "right" : "enum : CoreCharset",
      "info" : "EnumDeclaration[7426-7756]:EnumDeclaration[7433-7763]"
    }, {
      "left" : "private static CoreCharset byName(String name)",
      "right" : "private static CoreCharset byName(String name)",
      "info" : "MethodDeclaration[7492-7750]:MethodDeclaration[7499-7757]"
    }, {
      "left" : "private static final Object[][] xhtmlArray = {\n            {\"quot\", 0x00022},\n            {\"amp\", 0x00026},\n            {\"lt\", 0x0003C},\n            {\"gt\", 0x0003E}\n    };",
      "right" : "private static final Object[][] xhtmlArray = {\n            {\"quot\", 0x00022},\n            {\"amp\", 0x00026},\n            {\"lt\", 0x0003C},\n            {\"gt\", 0x0003E}\n    };",
      "info" : "FieldDeclaration[7800-7971]:FieldDeclaration[7807-7978]"
    }, {
      "left" : "private static Map<String, Character> loadEntities(String filename)",
      "right" : "private static Map<String, Character> loadEntities(String filename)",
      "info" : "MethodDeclaration[8498-9295]:MethodDeclaration[8505-9302]"
    }, {
      "left" : "private static Map<Character, String> toCharacterKey(Map<String, Character> inMap)",
      "right" : "private static Map<Character, String> toCharacterKey(Map<String, Character> inMap)",
      "info" : "MethodDeclaration[9301-9948]:MethodDeclaration[9308-9955]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[811-850]:Block[811-850]"
    }, {
      "left" : "this.map = map;",
      "right" : "this.map = map;",
      "info" : "ExpressionStatement[825-840]:ExpressionStatement[825-840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[899-934]:Block[899-934]"
    }, {
      "left" : "return map;",
      "right" : "return map;",
      "info" : "ReturnStatement[913-924]:ReturnStatement[913-924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1252-1254]:Block[1252-1254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1484-1530]:Block[1484-1530]"
    }, {
      "left" : "return full.containsKey(name);",
      "right" : "return full.containsKey(name);",
      "info" : "ReturnStatement[1494-1524]:ReturnStatement[1494-1524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1839-1885]:Block[1839-1885]"
    }, {
      "left" : "return base.containsKey(name);",
      "right" : "return base.containsKey(name);",
      "info" : "ReturnStatement[1849-1879]:ReturnStatement[1849-1879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2162-2200]:Block[2162-2200]"
    }, {
      "left" : "return full.get(name);",
      "right" : "return full.get(name);",
      "info" : "ReturnStatement[2172-2194]:ReturnStatement[2172-2194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2275-2442]:Block[2275-2442]"
    }, {
      "left" : "StringBuilder accum = new StringBuilder(string.length() * 2);",
      "right" : "StringBuilder accum = new StringBuilder(string.length() * 2);",
      "info" : "VariableDeclarationStatement[2285-2346]:VariableDeclarationStatement[2285-2346]"
    }, {
      "left" : "escape(accum, string, out, false, false, false);",
      "right" : "escape(accum, string, out, false, false, false);",
      "info" : "ExpressionStatement[2355-2403]:ExpressionStatement[2355-2403]"
    }, {
      "left" : "return accum.toString();",
      "right" : "return accum.toString();",
      "info" : "ReturnStatement[2412-2436]:ReturnStatement[2412-2436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5937-5984]:Block[5944-5991]"
    }, {
      "left" : "return unescape(string, false);",
      "right" : "return unescape(string, false);",
      "info" : "ReturnStatement[5947-5978]:ReturnStatement[5954-5985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6263-6326]:Block[6270-6333]"
    }, {
      "left" : "return Parser.unescapeEntities(string, strict);",
      "right" : "return Parser.unescapeEntities(string, strict);",
      "info" : "ReturnStatement[6273-6320]:ReturnStatement[6280-6327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7014-7420]:Block[7021-7427]"
    }, {
      "left" : "switch (charset) {\n            case ascii:\n                return c < 0x80;\n            case utf:\n                return true; // real is:!(Character.isLowSurrogate(c) || Character.isHighSurrogate(c)); - but already check above\n            default:\n                return fallback.canEncode(c);\n        }",
      "right" : "switch (charset) {\n            case ascii:\n                return c < 0x80;\n            case utf:\n                return true; // real is:!(Character.isLowSurrogate(c) || Character.isHighSurrogate(c)); - but already check above\n            default:\n                return fallback.canEncode(c);\n        }",
      "info" : "SwitchStatement[7110-7414]:SwitchStatement[7117-7421]"
    }, {
      "left" : "case ascii:",
      "right" : "case ascii:",
      "info" : "SwitchCase[7141-7152]:SwitchCase[7148-7159]"
    }, {
      "left" : "return c < 0x80;",
      "right" : "return c < 0x80;",
      "info" : "ReturnStatement[7169-7185]:ReturnStatement[7176-7192]"
    }, {
      "left" : "case utf:",
      "right" : "case utf:",
      "info" : "SwitchCase[7198-7207]:SwitchCase[7205-7214]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[7224-7236]:ReturnStatement[7231-7243]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[7350-7358]:SwitchCase[7357-7365]"
    }, {
      "left" : "return fallback.canEncode(c);",
      "right" : "return fallback.canEncode(c);",
      "info" : "ReturnStatement[7375-7404]:ReturnStatement[7382-7411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7539-7750]:Block[7546-7757]"
    }, {
      "left" : "if (name.equals(\"US-ASCII\"))",
      "right" : "if (name.equals(\"US-ASCII\"))",
      "info" : "IfStatement[7553-7611]:IfStatement[7560-7618]"
    }, {
      "left" : "return ascii;",
      "right" : "return ascii;",
      "info" : "ReturnStatement[7598-7611]:ReturnStatement[7605-7618]"
    }, {
      "left" : "if (name.startsWith(\"UTF-\"))",
      "right" : "if (name.startsWith(\"UTF-\"))",
      "info" : "IfStatement[7624-7711]:IfStatement[7631-7718]"
    }, {
      "left" : "return utf;",
      "right" : "return utf;",
      "info" : "ReturnStatement[7700-7711]:ReturnStatement[7707-7718]"
    }, {
      "left" : "return fallback;",
      "right" : "return fallback;",
      "info" : "ReturnStatement[7724-7740]:ReturnStatement[7731-7747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8566-9295]:Block[8573-9302]"
    }, {
      "left" : "Properties properties = new Properties();",
      "right" : "Properties properties = new Properties();",
      "info" : "VariableDeclarationStatement[8576-8617]:VariableDeclarationStatement[8583-8624]"
    }, {
      "left" : "Map<String, Character> entities = new HashMap<String, Character>();",
      "right" : "Map<String, Character> entities = new HashMap<String, Character>();",
      "info" : "VariableDeclarationStatement[8626-8693]:VariableDeclarationStatement[8633-8700]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[8702-9007]:TryStatement[8709-9014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8706-8849]:Block[8713-8856]"
    }, {
      "left" : "InputStream in = Entities.class.getResourceAsStream(filename);",
      "right" : "InputStream in = Entities.class.getResourceAsStream(filename);",
      "info" : "VariableDeclarationStatement[8720-8782]:VariableDeclarationStatement[8727-8789]"
    }, {
      "left" : "properties.load(in);",
      "right" : "properties.load(in);",
      "info" : "ExpressionStatement[8795-8815]:ExpressionStatement[8802-8822]"
    }, {
      "left" : "in.close();",
      "right" : "in.close();",
      "info" : "ExpressionStatement[8828-8839]:ExpressionStatement[8835-8846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8872-9007]:Block[8879-9014]"
    }, {
      "left" : "throw new MissingResourceException(\"Error loading entities resource: \" + e.getMessage(), \"Entities\", filename);",
      "right" : "throw new MissingResourceException(\"Error loading entities resource: \" + e.getMessage(), \"Entities\", filename);",
      "info" : "ThrowStatement[8886-8997]:ThrowStatement[8893-9004]"
    }, {
      "left" : "for (Map.Entry entry: properties.entrySet())",
      "right" : "for (Map.Entry entry: properties.entrySet())",
      "info" : "EnhancedForStatement[9017-9264]:EnhancedForStatement[9024-9271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9062-9264]:Block[9069-9271]"
    }, {
      "left" : "Character val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));",
      "right" : "Character val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));",
      "info" : "VariableDeclarationStatement[9076-9166]:VariableDeclarationStatement[9083-9173]"
    }, {
      "left" : "String name = (String) entry.getKey();",
      "right" : "String name = (String) entry.getKey();",
      "info" : "VariableDeclarationStatement[9179-9217]:VariableDeclarationStatement[9186-9224]"
    }, {
      "left" : "entities.put(name, val);",
      "right" : "entities.put(name, val);",
      "info" : "ExpressionStatement[9230-9254]:ExpressionStatement[9237-9261]"
    }, {
      "left" : "return entities;",
      "right" : "return entities;",
      "info" : "ReturnStatement[9273-9289]:ReturnStatement[9280-9296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9384-9948]:Block[9391-9955]"
    }, {
      "left" : "Map<Character, String> outMap = new HashMap<Character, String>();",
      "right" : "Map<Character, String> outMap = new HashMap<Character, String>();",
      "info" : "VariableDeclarationStatement[9394-9459]:VariableDeclarationStatement[9401-9466]"
    }, {
      "left" : "for (Map.Entry<String, Character> entry: inMap.entrySet())",
      "right" : "for (Map.Entry<String, Character> entry: inMap.entrySet())",
      "info" : "EnhancedForStatement[9468-9919]:EnhancedForStatement[9475-9926]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9527-9919]:Block[9534-9926]"
    }, {
      "left" : "Character character = entry.getValue();",
      "right" : "Character character = entry.getValue();",
      "info" : "VariableDeclarationStatement[9541-9580]:VariableDeclarationStatement[9548-9587]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[9593-9622]:VariableDeclarationStatement[9600-9629]"
    }, {
      "left" : "if (outMap.containsKey(character))",
      "right" : "if (outMap.containsKey(character))",
      "info" : "IfStatement[9636-9909]:IfStatement[9643-9916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9671-9843]:Block[9678-9850]"
    }, {
      "left" : "if (name.toLowerCase().equals(name))",
      "right" : "if (name.toLowerCase().equals(name))",
      "info" : "IfStatement[9744-9829]:IfStatement[9751-9836]"
    }, {
      "left" : "outMap.put(character, name);",
      "right" : "outMap.put(character, name);",
      "info" : "ExpressionStatement[9801-9829]:ExpressionStatement[9808-9836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9849-9909]:Block[9856-9916]"
    }, {
      "left" : "outMap.put(character, name);",
      "right" : "outMap.put(character, name);",
      "info" : "ExpressionStatement[9867-9895]:ExpressionStatement[9874-9902]"
    }, {
      "left" : "return outMap;",
      "right" : "return outMap;",
      "info" : "ReturnStatement[9928-9942]:ReturnStatement[9935-9949]"
    } ]
  },
  "interFileMappings" : { }
}