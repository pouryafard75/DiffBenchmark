{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CaffeTest",
      "right" : "CaffeTest",
      "info" : "TypeDeclaration[260-1015]:TypeDeclaration[203-958]"
    }, {
      "left" : "public void testCaffeModelToJavaClass() throws Exception",
      "right" : "public void testCaffeModelToJavaClass() throws Exception",
      "info" : "MethodDeclaration[336-1012]:MethodDeclaration[279-955]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[306-312]:Modifier[249-255]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[313-318]:TYPE_DECLARATION_KIND[256-261]"
    }, {
      "left" : "CaffeTest",
      "right" : "CaffeTest",
      "info" : "SimpleName[319-328]:SimpleName[262-271]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[336-341]:MarkerAnnotation[279-284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[346-352]:Modifier[289-295]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[353-357]:PrimitiveType[296-300]"
    }, {
      "left" : "testCaffeModelToJavaClass",
      "right" : "testCaffeModelToJavaClass",
      "info" : "SimpleName[358-383]:SimpleName[301-326]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[393-402]:SimpleType[336-345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[403-1012]:Block[346-955]"
    }, {
      "left" : "String imagenetCaffeModelPath = new ClassPathResource(\"nin_imagenet_conv.caffemodel\").getURL().getFile();",
      "right" : "String imagenetCaffeModelPath = new ClassPathResource(\"nin_imagenet_conv.caffemodel\").getURL().getFile();",
      "info" : "VariableDeclarationStatement[505-610]:VariableDeclarationStatement[448-553]"
    }, {
      "left" : "NetParameter net = CaffeModelToJavaClass.readCaffeModel(imagenetCaffeModelPath, 1000);",
      "right" : "NetParameter net = CaffeModelToJavaClass.readCaffeModel(imagenetCaffeModelPath, 1000);",
      "info" : "VariableDeclarationStatement[620-706]:VariableDeclarationStatement[563-649]"
    }, {
      "left" : "assertEquals(net.getName(), \"CaffeNet\");",
      "right" : "assertEquals(net.getName(), \"CaffeNet\");",
      "info" : "ExpressionStatement[715-755]:ExpressionStatement[658-698]"
    }, {
      "left" : "assertEquals(net.getLayersCount(), 31);",
      "right" : "assertEquals(net.getLayersCount(), 31);",
      "info" : "ExpressionStatement[764-803]:ExpressionStatement[707-746]"
    }, {
      "left" : "assertEquals(net.getLayers(0).getName(), \"data\");",
      "right" : "assertEquals(net.getLayers(0).getName(), \"data\");",
      "info" : "ExpressionStatement[812-861]:ExpressionStatement[755-804]"
    }, {
      "left" : "assertEquals(net.getLayers(30).getName(), \"loss\");",
      "right" : "assertEquals(net.getLayers(30).getName(), \"loss\");",
      "info" : "ExpressionStatement[870-920]:ExpressionStatement[813-863]"
    }, {
      "left" : "assertEquals(net.getLayers(15).getBlobs(0).getData(0), -0.008252043f, 1e-1);",
      "right" : "assertEquals(net.getLayers(15).getBlobs(0).getData(0), -0.008252043f, 1e-1);",
      "info" : "ExpressionStatement[929-1005]:ExpressionStatement[872-948]"
    } ]
  },
  "interFileMappings" : { }
}