{
  "matchedElements" : [
 {
    "left" : "class : BeanDeserializerFactory",
    "right" : "class : BeanDeserializerFactory",
    "info" : "TypeDeclaration[795-42645]:TypeDeclaration[795-42675]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[1446-1493]:FieldDeclaration[1446-1493]"
  }, {
    "left" : "INIT_CAUSE_PARAMS",
    "right" : "INIT_CAUSE_PARAMS",
    "info" : "FieldDeclaration[1499-1657]:FieldDeclaration[1499-1657]"
  }, {
    "left" : "instance",
    "right" : "instance",
    "info" : "FieldDeclaration[1829-2084]:FieldDeclaration[1829-2084]"
  }, {
    "left" : "public BeanDeserializerFactory(config )",
    "right" : "public BeanDeserializerFactory(config )",
    "info" : "MethodDeclaration[2090-2185]:MethodDeclaration[2090-2185]"
  }, {
    "left" : "public withConfig(config ) : ",
    "right" : "public withConfig(config ) : ",
    "info" : "MethodDeclaration[2195-3158]:MethodDeclaration[2195-3158]"
  }, {
    "left" : "public createBeanDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "public createBeanDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[3358-5818]:MethodDeclaration[3358-5818]"
  }, {
    "left" : "public createBuilderBasedDeserializer(ctxt , valueType , beanDesc , builderClass ) : ",
    "right" : "public createBuilderBasedDeserializer(ctxt , valueType , beanDesc , builderClass ) : ",
    "info" : "MethodDeclaration[5824-6360]:MethodDeclaration[5824-6360]"
  }, {
    "left" : "protected findStdDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "protected findStdDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[6366-7281]:MethodDeclaration[6366-7281]"
  }, {
    "left" : "protected materializeAbstractType(ctxt , type , beanDesc ) : ",
    "right" : "protected materializeAbstractType(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[7291-7832]:MethodDeclaration[7291-7832]"
  }, {
    "left" : "public buildBeanDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "public buildBeanDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[8126-11141]:MethodDeclaration[8126-11156]"
  }, {
    "left" : "protected buildBuilderBasedDeserializer(ctxt , valueType , builderDesc ) : ",
    "right" : "protected buildBuilderBasedDeserializer(ctxt , valueType , builderDesc ) : ",
    "info" : "MethodDeclaration[11151-14538]:MethodDeclaration[11166-14568]"
  }, {
    "left" : "protected addObjectIdReader(ctxt , beanDesc , builder ) : void",
    "right" : "protected addObjectIdReader(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[14548-16397]:MethodDeclaration[14578-16427]"
  }, {
    "left" : "public buildThrowableDeserializer(ctxt , type , beanDesc ) : ",
    "right" : "public buildThrowableDeserializer(ctxt , type , beanDesc ) : ",
    "info" : "MethodDeclaration[16407-19468]:MethodDeclaration[16437-19498]"
  }, {
    "left" : "protected constructBeanDeserializerBuilder(ctxt , beanDesc ) : ",
    "right" : "protected constructBeanDeserializerBuilder(ctxt , beanDesc ) : ",
    "info" : "MethodDeclaration[19710-20097]:MethodDeclaration[19740-20127]"
  }, {
    "left" : "protected addBeanProps(ctxt , beanDesc , builder ) : void",
    "right" : "protected addBeanProps(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[20107-28002]:MethodDeclaration[20137-28032]"
  }, {
    "left" : "private _isSetterlessType(rawType ) : boolean",
    "right" : "private _isSetterlessType(rawType ) : boolean",
    "info" : "MethodDeclaration[28008-28358]:MethodDeclaration[28038-28388]"
  }, {
    "left" : "protected filterBeanProps(ctxt , beanDesc , builder , propDefsIn , ignored ) : ",
    "right" : "protected filterBeanProps(ctxt , beanDesc , builder , propDefsIn , ignored ) : ",
    "info" : "MethodDeclaration[28364-30079]:MethodDeclaration[28394-30109]"
  }, {
    "left" : "protected addBackReferenceProperties(ctxt , beanDesc , builder ) : void",
    "right" : "protected addBackReferenceProperties(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[30085-31781]:MethodDeclaration[30115-31811]"
  }, {
    "left" : "protected addReferenceProperties(ctxt , beanDesc , builder ) : void",
    "right" : "protected addReferenceProperties(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[31787-32071]:MethodDeclaration[31817-32101]"
  }, {
    "left" : "protected addInjectables(ctxt , beanDesc , builder ) : void",
    "right" : "protected addInjectables(ctxt , beanDesc , builder ) : void",
    "info" : "MethodDeclaration[32077-32906]:MethodDeclaration[32107-32936]"
  }, {
    "left" : "protected constructAnySetter(ctxt , beanDesc , mutator ) : ",
    "right" : "protected constructAnySetter(ctxt , beanDesc , mutator ) : ",
    "info" : "MethodDeclaration[32912-36196]:MethodDeclaration[32942-36226]"
  }, {
    "left" : "protected constructSettableProperty(ctxt , beanDesc , propDef , propType0 ) : ",
    "right" : "protected constructSettableProperty(ctxt , beanDesc , propDef , propType0 ) : ",
    "info" : "MethodDeclaration[36202-38684]:MethodDeclaration[36232-38714]"
  }, {
    "left" : "protected constructSetterlessProperty(ctxt , beanDesc , propDef ) : ",
    "right" : "protected constructSetterlessProperty(ctxt , beanDesc , propDef ) : ",
    "info" : "MethodDeclaration[38690-39720]:MethodDeclaration[38720-39750]"
  }, {
    "left" : "protected isPotentialBeanType(type ) : boolean",
    "right" : "protected isPotentialBeanType(type ) : boolean",
    "info" : "MethodDeclaration[39921-41095]:MethodDeclaration[39951-41125]"
  }, {
    "left" : "protected isIgnorableType(config , propDef , type , ignoredTypes ...) : boolean",
    "right" : "protected isIgnorableType(config , propDef , type , ignoredTypes ...) : boolean",
    "info" : "MethodDeclaration[41101-42364]:MethodDeclaration[41131-42394]"
  }, {
    "left" : "protected _validateSubType(ctxt , type , beanDesc ) : void",
    "right" : "protected _validateSubType(ctxt , type , beanDesc ) : void",
    "info" : "MethodDeclaration[42370-42643]:MethodDeclaration[42400-42673]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1317-1323]:Modifier[1317-1323]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1324-1329]:TYPE_DECLARATION_KIND[1324-1329]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2090-2096]:Modifier[2090-2096]"
  }, {
    "left" : "BeanDeserializerFactory",
    "right" : "BeanDeserializerFactory",
    "info" : "SimpleName[2097-2120]:SimpleName[2097-2120]"
  }, {
    "left" : "DeserializerFactoryConfig config",
    "right" : "DeserializerFactoryConfig config",
    "info" : "SingleVariableDeclaration[2121-2153]:SingleVariableDeclaration[2121-2153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2155-2185]:Block[2155-2185]"
  }, {
    "left" : "super(config);",
    "right" : "super(config);",
    "info" : "SuperConstructorInvocation[2165-2179]:SuperConstructorInvocation[2165-2179]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[2366-2375]:MarkerAnnotation[2366-2375]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2380-2386]:Modifier[2380-2386]"
  }, {
    "left" : "DeserializerFactory",
    "right" : "DeserializerFactory",
    "info" : "SimpleType[2387-2406]:SimpleType[2387-2406]"
  }, {
    "left" : "withConfig",
    "right" : "withConfig",
    "info" : "SimpleName[2407-2417]:SimpleName[2407-2417]"
  }, {
    "left" : "DeserializerFactoryConfig config",
    "right" : "DeserializerFactoryConfig config",
    "info" : "SingleVariableDeclaration[2418-2450]:SingleVariableDeclaration[2418-2450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2456-3158]:Block[2456-3158]"
  }, {
    "left" : "if (_factoryConfig == config)",
    "right" : "if (_factoryConfig == config)",
    "info" : "IfStatement[2466-2532]:IfStatement[2466-2532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2496-2532]:Block[2496-2532]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[2510-2522]:ReturnStatement[2510-2522]"
  }, {
    "left" : "ClassUtil.verifyMustOverride(BeanDeserializerFactory.class, this, \"withConfig\");",
    "right" : "ClassUtil.verifyMustOverride(BeanDeserializerFactory.class, this, \"withConfig\");",
    "info" : "ExpressionStatement[3020-3100]:ExpressionStatement[3020-3100]"
  }, {
    "left" : "return new BeanDeserializerFactory(config);",
    "right" : "return new BeanDeserializerFactory(config);",
    "info" : "ReturnStatement[3109-3152]:ReturnStatement[3109-3152]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[3526-3535]:MarkerAnnotation[3526-3535]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3540-3546]:Modifier[3540-3546]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[3547-3571]:ParameterizedType[3547-3571]"
  }, {
    "left" : "createBeanDeserializer",
    "right" : "createBeanDeserializer",
    "info" : "SimpleName[3572-3594]:SimpleName[3572-3594]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[3595-3622]:SingleVariableDeclaration[3595-3622]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[3636-3649]:SingleVariableDeclaration[3636-3649]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[3651-3675]:SingleVariableDeclaration[3651-3675]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[3692-3712]:SimpleType[3692-3712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3717-5818]:Block[3717-5818]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[3727-3781]:VariableDeclarationStatement[3727-3781]"
  }, {
    "left" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
    "right" : "JsonDeserializer<Object> custom = _findCustomBeanDeserializer(type, config, beanDesc);",
    "info" : "VariableDeclarationStatement[3836-3922]:VariableDeclarationStatement[3836-3922]"
  }, {
    "left" : "if (custom != null)",
    "right" : "if (custom != null)",
    "info" : "IfStatement[3931-3989]:IfStatement[3931-3989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3951-3989]:Block[3951-3989]"
  }, {
    "left" : "return custom;",
    "right" : "return custom;",
    "info" : "ReturnStatement[3965-3979]:ReturnStatement[3965-3979]"
  }, {
    "left" : "if (type.isThrowable())",
    "right" : "if (type.isThrowable())",
    "info" : "IfStatement[4170-4274]:IfStatement[4170-4274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4194-4274]:Block[4194-4274]"
  }, {
    "left" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
    "right" : "return buildThrowableDeserializer(ctxt, type, beanDesc);",
    "info" : "ReturnStatement[4208-4264]:ReturnStatement[4208-4264]"
  }, {
    "left" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
    "right" : "if (type.isAbstract() && !type.isPrimitive() && !type.isEnumType())",
    "info" : "IfStatement[4544-5132]:IfStatement[4544-5132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4612-5132]:Block[4612-5132]"
  }, {
    "left" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
    "right" : "JavaType concreteType = materializeAbstractType(ctxt, type, beanDesc);",
    "info" : "VariableDeclarationStatement[4695-4765]:VariableDeclarationStatement[4695-4765]"
  }, {
    "left" : "if (concreteType != null)",
    "right" : "if (concreteType != null)",
    "info" : "IfStatement[4778-5122]:IfStatement[4778-5122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4804-5122]:Block[4804-5122]"
  }, {
    "left" : "beanDesc = config.introspect(concreteType);",
    "right" : "beanDesc = config.introspect(concreteType);",
    "info" : "ExpressionStatement[4989-5032]:ExpressionStatement[4989-5032]"
  }, {
    "left" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
    "right" : "return buildBeanDeserializer(ctxt, concreteType, beanDesc);",
    "info" : "ReturnStatement[5049-5108]:ReturnStatement[5049-5108]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
    "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> deser = (JsonDeserializer<Object>) findStdDeserializer(ctxt, type, beanDesc);",
    "info" : "VariableDeclarationStatement[5227-5368]:VariableDeclarationStatement[5227-5368]"
  }, {
    "left" : "if (deser != null)",
    "right" : "if (deser != null)",
    "info" : "IfStatement[5377-5433]:IfStatement[5377-5433]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5396-5433]:Block[5396-5433]"
  }, {
    "left" : "return deser;",
    "right" : "return deser;",
    "info" : "ReturnStatement[5410-5423]:ReturnStatement[5410-5423]"
  }, {
    "left" : "if (!isPotentialBeanType(type.getRawClass()))",
    "right" : "if (!isPotentialBeanType(type.getRawClass()))",
    "info" : "IfStatement[5515-5597]:IfStatement[5515-5597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5561-5597]:Block[5561-5597]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[5575-5587]:ReturnStatement[5575-5587]"
  }, {
    "left" : "_validateSubType(ctxt, type, beanDesc);",
    "right" : "_validateSubType(ctxt, type, beanDesc);",
    "info" : "ExpressionStatement[5649-5688]:ExpressionStatement[5649-5688]"
  }, {
    "left" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
    "right" : "return buildBeanDeserializer(ctxt, type, beanDesc);",
    "info" : "ReturnStatement[5761-5812]:ReturnStatement[5761-5812]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5824-5833]:MarkerAnnotation[5824-5833]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5838-5844]:Modifier[5838-5844]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[5845-5869]:ParameterizedType[5845-5869]"
  }, {
    "left" : "createBuilderBasedDeserializer",
    "right" : "createBuilderBasedDeserializer",
    "info" : "SimpleName[5870-5900]:SimpleName[5870-5900]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[5901-5928]:SingleVariableDeclaration[5901-5928]"
  }, {
    "left" : "JavaType valueType",
    "right" : "JavaType valueType",
    "info" : "SingleVariableDeclaration[5942-5960]:SingleVariableDeclaration[5942-5960]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[5962-5986]:SingleVariableDeclaration[5962-5986]"
  }, {
    "left" : "Class<?> builderClass",
    "right" : "Class<?> builderClass",
    "info" : "SingleVariableDeclaration[5988-6009]:SingleVariableDeclaration[5988-6009]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[6038-6058]:SimpleType[6038-6058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6063-6360]:Block[6063-6360]"
  }, {
    "left" : "JavaType builderType = ctxt.constructType(builderClass);",
    "right" : "JavaType builderType = ctxt.constructType(builderClass);",
    "info" : "VariableDeclarationStatement[6132-6188]:VariableDeclarationStatement[6132-6188]"
  }, {
    "left" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
    "right" : "BeanDescription builderDesc = ctxt.getConfig().introspectForBuilder(builderType);",
    "info" : "VariableDeclarationStatement[6197-6278]:VariableDeclarationStatement[6197-6278]"
  }, {
    "left" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
    "right" : "return buildBuilderBasedDeserializer(ctxt, valueType, builderDesc);",
    "info" : "ReturnStatement[6287-6354]:ReturnStatement[6287-6354]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[6521-6530]:Modifier[6521-6530]"
  }, {
    "left" : "JsonDeserializer<?>",
    "right" : "JsonDeserializer<?>",
    "info" : "ParameterizedType[6531-6550]:ParameterizedType[6531-6550]"
  }, {
    "left" : "findStdDeserializer",
    "right" : "findStdDeserializer",
    "info" : "SimpleName[6551-6570]:SimpleName[6551-6570]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[6571-6598]:SingleVariableDeclaration[6571-6598]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[6612-6625]:SingleVariableDeclaration[6612-6625]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[6627-6651]:SingleVariableDeclaration[6627-6651]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[6668-6688]:SimpleType[6668-6688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6693-7281]:Block[6693-7281]"
  }, {
    "left" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
    "right" : "JsonDeserializer<?> deser = findDefaultDeserializer(ctxt, type, beanDesc);",
    "info" : "VariableDeclarationStatement[6807-6881]:VariableDeclarationStatement[6807-6881]"
  }, {
    "left" : "if (deser != null)",
    "right" : "if (deser != null)",
    "info" : "IfStatement[6949-7253]:IfStatement[6949-7253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6968-7253]:Block[6968-7253]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[6982-7243]:IfStatement[6982-7243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7029-7243]:Block[7029-7243]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[7047-7229]:EnhancedForStatement[7047-7229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7123-7229]:Block[7123-7229]"
  }, {
    "left" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
    "right" : "deser = mod.modifyDeserializer(ctxt.getConfig(), beanDesc, deser);",
    "info" : "ExpressionStatement[7145-7211]:ExpressionStatement[7145-7211]"
  }, {
    "left" : "return deser;",
    "right" : "return deser;",
    "info" : "ReturnStatement[7262-7275]:ReturnStatement[7262-7275]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[7291-7300]:Modifier[7291-7300]"
  }, {
    "left" : "JavaType",
    "right" : "JavaType",
    "info" : "SimpleType[7301-7309]:SimpleType[7301-7309]"
  }, {
    "left" : "materializeAbstractType",
    "right" : "materializeAbstractType",
    "info" : "SimpleName[7310-7333]:SimpleName[7310-7333]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[7334-7361]:SingleVariableDeclaration[7334-7361]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[7375-7388]:SingleVariableDeclaration[7375-7388]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[7390-7414]:SingleVariableDeclaration[7390-7414]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[7431-7451]:SimpleType[7431-7451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7456-7832]:Block[7456-7832]"
  }, {
    "left" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
    "right" : "for (AbstractTypeResolver r : _factoryConfig.abstractTypeResolvers())",
    "info" : "EnhancedForStatement[7558-7805]:EnhancedForStatement[7558-7805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7628-7805]:Block[7628-7805]"
  }, {
    "left" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
    "right" : "JavaType concrete = r.resolveAbstractType(ctxt.getConfig(), beanDesc);",
    "info" : "VariableDeclarationStatement[7642-7712]:VariableDeclarationStatement[7642-7712]"
  }, {
    "left" : "if (concrete != null)",
    "right" : "if (concrete != null)",
    "info" : "IfStatement[7725-7795]:IfStatement[7725-7795]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7747-7795]:Block[7747-7795]"
  }, {
    "left" : "return concrete;",
    "right" : "return concrete;",
    "info" : "ReturnStatement[7765-7781]:ReturnStatement[7765-7781]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[7814-7826]:ReturnStatement[7814-7826]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[8376-8406]:SingleMemberAnnotation[8376-8406]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8411-8417]:Modifier[8411-8417]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[8418-8442]:ParameterizedType[8418-8442]"
  }, {
    "left" : "buildBeanDeserializer",
    "right" : "buildBeanDeserializer",
    "info" : "SimpleName[8443-8464]:SimpleName[8443-8464]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[8465-8492]:SingleVariableDeclaration[8465-8492]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[8506-8519]:SingleVariableDeclaration[8506-8519]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[8521-8545]:SingleVariableDeclaration[8521-8545]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[8562-8582]:SimpleType[8562-8582]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8587-11141]:Block[8587-11156]"
  }, {
    "left" : "ValueInstantiator valueInstantiator;",
    "right" : "ValueInstantiator valueInstantiator;",
    "info" : "VariableDeclarationStatement[8654-8690]:VariableDeclarationStatement[8654-8690]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[9010-9595]:TryStatement[9010-9610]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9014-9096]:Block[9014-9096]"
  }, {
    "left" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
    "right" : "valueInstantiator = findValueInstantiator(ctxt, beanDesc);",
    "info" : "ExpressionStatement[9028-9086]:ExpressionStatement[9028-9086]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9132-9200]:Block[9132-9200]"
  }, {
    "left" : "return new ErrorThrowingDeserializer(error);",
    "right" : "return new ErrorThrowingDeserializer(error);",
    "info" : "ReturnStatement[9146-9190]:ReturnStatement[9146-9190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9236-9595]:Block[9236-9610]"
  }, {
    "left" : "throw InvalidDefinitionException.from(ctxt.getParser(),\n                    e.getMessage(),\n                    beanDesc, null);",
    "right" : "throw InvalidDefinitionException.from(ctxt.getParser(),\n                    ClassUtil.exceptionMessage(e),\n                    beanDesc, null);",
    "info" : "ThrowStatement[9457-9585]:ThrowStatement[9457-9600]"
  }, {
    "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "info" : "VariableDeclarationStatement[9604-9687]:VariableDeclarationStatement[9619-9702]"
  }, {
    "left" : "builder.setValueInstantiator(valueInstantiator);",
    "right" : "builder.setValueInstantiator(valueInstantiator);",
    "info" : "ExpressionStatement[9696-9744]:ExpressionStatement[9711-9759]"
  }, {
    "left" : "addBeanProps(ctxt, beanDesc, builder);",
    "right" : "addBeanProps(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[9817-9855]:ExpressionStatement[9832-9870]"
  }, {
    "left" : "addObjectIdReader(ctxt, beanDesc, builder);",
    "right" : "addObjectIdReader(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[9864-9907]:ExpressionStatement[9879-9922]"
  }, {
    "left" : "addBackReferenceProperties(ctxt, beanDesc, builder);",
    "right" : "addBackReferenceProperties(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[10002-10054]:ExpressionStatement[10017-10069]"
  }, {
    "left" : "addInjectables(ctxt, beanDesc, builder);",
    "right" : "addInjectables(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[10063-10103]:ExpressionStatement[10078-10118]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[10121-10175]:VariableDeclarationStatement[10136-10190]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[10184-10418]:IfStatement[10199-10433]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10231-10418]:Block[10246-10433]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[10245-10408]:EnhancedForStatement[10260-10423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10321-10408]:Block[10336-10423]"
  }, {
    "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "info" : "ExpressionStatement[10339-10394]:ExpressionStatement[10354-10409]"
  }, {
    "left" : "JsonDeserializer<?> deserializer;",
    "right" : "JsonDeserializer<?> deserializer;",
    "info" : "VariableDeclarationStatement[10427-10460]:VariableDeclarationStatement[10442-10475]"
  }, {
    "left" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
    "right" : "if (type.isAbstract() && !valueInstantiator.canInstantiate())",
    "info" : "IfStatement[10470-10656]:IfStatement[10485-10671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10532-10595]:Block[10547-10610]"
  }, {
    "left" : "deserializer = builder.buildAbstract();",
    "right" : "deserializer = builder.buildAbstract();",
    "info" : "ExpressionStatement[10546-10585]:ExpressionStatement[10561-10600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10601-10656]:Block[10616-10671]"
  }, {
    "left" : "deserializer = builder.build();",
    "right" : "deserializer = builder.build();",
    "info" : "ExpressionStatement[10615-10646]:ExpressionStatement[10630-10661]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[10830-11079]:IfStatement[10845-11094]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10877-11079]:Block[10892-11094]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[10891-11069]:EnhancedForStatement[10906-11084]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10967-11069]:Block[10982-11084]"
  }, {
    "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "info" : "ExpressionStatement[10985-11055]:ExpressionStatement[11000-11070]"
  }, {
    "left" : "return (JsonDeserializer<Object>) deserializer;",
    "right" : "return (JsonDeserializer<Object>) deserializer;",
    "info" : "ReturnStatement[11088-11135]:ReturnStatement[11103-11150]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[11435-11465]:SingleMemberAnnotation[11450-11480]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[11470-11479]:Modifier[11485-11494]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[11480-11504]:ParameterizedType[11495-11519]"
  }, {
    "left" : "buildBuilderBasedDeserializer",
    "right" : "buildBuilderBasedDeserializer",
    "info" : "SimpleName[11505-11534]:SimpleName[11520-11549]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[11542-11569]:SingleVariableDeclaration[11557-11584]"
  }, {
    "left" : "JavaType valueType",
    "right" : "JavaType valueType",
    "info" : "SingleVariableDeclaration[11571-11589]:SingleVariableDeclaration[11586-11604]"
  }, {
    "left" : "BeanDescription builderDesc",
    "right" : "BeanDescription builderDesc",
    "info" : "SingleVariableDeclaration[11591-11618]:SingleVariableDeclaration[11606-11633]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[11635-11655]:SimpleType[11650-11670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11660-14538]:Block[11675-14568]"
  }, {
    "left" : "ValueInstantiator valueInstantiator;",
    "right" : "ValueInstantiator valueInstantiator;",
    "info" : "VariableDeclarationStatement[11726-11762]:VariableDeclarationStatement[11741-11777]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11771-12362]:TryStatement[11786-12392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11775-11860]:Block[11790-11875]"
  }, {
    "left" : "valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
    "right" : "valueInstantiator = findValueInstantiator(ctxt, builderDesc);",
    "info" : "ExpressionStatement[11789-11850]:ExpressionStatement[11804-11865]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11896-11964]:Block[11911-11979]"
  }, {
    "left" : "return new ErrorThrowingDeserializer(error);",
    "right" : "return new ErrorThrowingDeserializer(error);",
    "info" : "ReturnStatement[11910-11954]:ReturnStatement[11925-11969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12000-12362]:Block[12015-12392]"
  }, {
    "left" : "throw InvalidDefinitionException.from(ctxt.getParser(),\n                    e.getMessage(),\n                    builderDesc, null);",
    "right" : "throw InvalidDefinitionException.from(ctxt.getParser(),\n                    ClassUtil.exceptionMessage(e),\n                    builderDesc, null);",
    "info" : "ThrowStatement[12221-12352]:ThrowStatement[12236-12382]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[12371-12425]:VariableDeclarationStatement[12401-12455]"
  }, {
    "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
    "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, builderDesc);",
    "info" : "VariableDeclarationStatement[12434-12520]:VariableDeclarationStatement[12464-12550]"
  }, {
    "left" : "builder.setValueInstantiator(valueInstantiator);",
    "right" : "builder.setValueInstantiator(valueInstantiator);",
    "info" : "ExpressionStatement[12529-12577]:ExpressionStatement[12559-12607]"
  }, {
    "left" : "addBeanProps(ctxt, builderDesc, builder);",
    "right" : "addBeanProps(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12657-12698]:ExpressionStatement[12687-12728]"
  }, {
    "left" : "addObjectIdReader(ctxt, builderDesc, builder);",
    "right" : "addObjectIdReader(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12707-12753]:ExpressionStatement[12737-12783]"
  }, {
    "left" : "addBackReferenceProperties(ctxt, builderDesc, builder);",
    "right" : "addBackReferenceProperties(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12856-12911]:ExpressionStatement[12886-12941]"
  }, {
    "left" : "addInjectables(ctxt, builderDesc, builder);",
    "right" : "addInjectables(ctxt, builderDesc, builder);",
    "info" : "ExpressionStatement[12920-12963]:ExpressionStatement[12950-12993]"
  }, {
    "left" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
    "right" : "JsonPOJOBuilder.Value builderConfig = builderDesc.findPOJOBuilderConfig();",
    "info" : "VariableDeclarationStatement[12973-13047]:VariableDeclarationStatement[13003-13077]"
  }, {
    "left" : "final String buildMethodName = (builderConfig == null) ?\n                JsonPOJOBuilder.DEFAULT_BUILD_METHOD : builderConfig.buildMethodName;",
    "right" : "final String buildMethodName = (builderConfig == null) ?\n                JsonPOJOBuilder.DEFAULT_BUILD_METHOD : builderConfig.buildMethodName;",
    "info" : "VariableDeclarationStatement[13056-13198]:VariableDeclarationStatement[13086-13228]"
  }, {
    "left" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
    "right" : "AnnotatedMethod buildMethod = builderDesc.findMethod(buildMethodName, null);",
    "info" : "VariableDeclarationStatement[13265-13341]:VariableDeclarationStatement[13295-13371]"
  }, {
    "left" : "if (buildMethod != null)",
    "right" : "if (buildMethod != null)",
    "info" : "IfStatement[13350-13646]:IfStatement[13380-13676]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13375-13646]:Block[13405-13676]"
  }, {
    "left" : "if (config.canOverrideAccessModifiers())",
    "right" : "if (config.canOverrideAccessModifiers())",
    "info" : "IfStatement[13447-13636]:IfStatement[13477-13666]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13488-13636]:Block[13518-13666]"
  }, {
    "left" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "right" : "ClassUtil.checkAndFixAccess(buildMethod.getMember(), config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
    "info" : "ExpressionStatement[13503-13622]:ExpressionStatement[13533-13652]"
  }, {
    "left" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
    "right" : "builder.setPOJOBuilder(buildMethod, builderConfig);",
    "info" : "ExpressionStatement[13655-13706]:ExpressionStatement[13685-13736]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[13763-14000]:IfStatement[13793-14030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13810-14000]:Block[13840-14030]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[13824-13990]:EnhancedForStatement[13854-14020]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13900-13990]:Block[13930-14020]"
  }, {
    "left" : "builder = mod.updateBuilder(config, builderDesc, builder);",
    "right" : "builder = mod.updateBuilder(config, builderDesc, builder);",
    "info" : "ExpressionStatement[13918-13976]:ExpressionStatement[13948-14006]"
  }, {
    "left" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
    "right" : "JsonDeserializer<?> deserializer = builder.buildBuilderBased(\n        \t\tvalueType, buildMethodName);",
    "info" : "VariableDeclarationStatement[14009-14109]:VariableDeclarationStatement[14039-14139]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[14224-14476]:IfStatement[14254-14506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14271-14476]:Block[14301-14506]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[14285-14466]:EnhancedForStatement[14315-14496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14361-14466]:Block[14391-14496]"
  }, {
    "left" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
    "right" : "deserializer = mod.modifyDeserializer(config, builderDesc, deserializer);",
    "info" : "ExpressionStatement[14379-14452]:ExpressionStatement[14409-14482]"
  }, {
    "left" : "return (JsonDeserializer<Object>) deserializer;",
    "right" : "return (JsonDeserializer<Object>) deserializer;",
    "info" : "ReturnStatement[14485-14532]:ReturnStatement[14515-14562]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[14548-14557]:Modifier[14578-14587]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14558-14562]:PrimitiveType[14588-14592]"
  }, {
    "left" : "addObjectIdReader",
    "right" : "addObjectIdReader",
    "info" : "SimpleName[14563-14580]:SimpleName[14593-14610]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[14581-14608]:SingleVariableDeclaration[14611-14638]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[14622-14646]:SingleVariableDeclaration[14652-14676]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[14648-14679]:SingleVariableDeclaration[14678-14709]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[14696-14716]:SimpleType[14726-14746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14721-16397]:Block[14751-16427]"
  }, {
    "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
    "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
    "info" : "VariableDeclarationStatement[14731-14786]:VariableDeclarationStatement[14761-14816]"
  }, {
    "left" : "if (objectIdInfo == null)",
    "right" : "if (objectIdInfo == null)",
    "info" : "IfStatement[14795-14852]:IfStatement[14825-14882]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14821-14852]:Block[14851-14882]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[14835-14842]:ReturnStatement[14865-14872]"
  }, {
    "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
    "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
    "info" : "VariableDeclarationStatement[14861-14914]:VariableDeclarationStatement[14891-14944]"
  }, {
    "left" : "JavaType idType;",
    "right" : "JavaType idType;",
    "info" : "VariableDeclarationStatement[14923-14939]:VariableDeclarationStatement[14953-14969]"
  }, {
    "left" : "SettableBeanProperty idProp;",
    "right" : "SettableBeanProperty idProp;",
    "info" : "VariableDeclarationStatement[14948-14976]:VariableDeclarationStatement[14978-15006]"
  }, {
    "left" : "ObjectIdGenerator<?> gen;",
    "right" : "ObjectIdGenerator<?> gen;",
    "info" : "VariableDeclarationStatement[14985-15010]:VariableDeclarationStatement[15015-15040]"
  }, {
    "left" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "right" : "ObjectIdResolver resolver = ctxt.objectIdResolverInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "info" : "VariableDeclarationStatement[15020-15117]:VariableDeclarationStatement[15050-15147]"
  }, {
    "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
    "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
    "info" : "IfStatement[15198-16082]:IfStatement[15228-16112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15259-15793]:Block[15289-15823]"
  }, {
    "left" : "PropertyName propName = objectIdInfo.getPropertyName();",
    "right" : "PropertyName propName = objectIdInfo.getPropertyName();",
    "info" : "VariableDeclarationStatement[15311-15366]:VariableDeclarationStatement[15341-15396]"
  }, {
    "left" : "idProp = builder.findProperty(propName);",
    "right" : "idProp = builder.findProperty(propName);",
    "info" : "ExpressionStatement[15379-15419]:ExpressionStatement[15409-15449]"
  }, {
    "left" : "if (idProp == null)",
    "right" : "if (idProp == null)",
    "info" : "IfStatement[15432-15665]:IfStatement[15462-15695]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15452-15665]:Block[15482-15695]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": cannot find property with name '\"+propName+\"'\");",
    "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"\n                        +beanDesc.getBeanClass().getName()+\": cannot find property with name '\"+propName+\"'\");",
    "info" : "ThrowStatement[15470-15651]:ThrowStatement[15500-15681]"
  }, {
    "left" : "idType = idProp.getType();",
    "right" : "idType = idProp.getType();",
    "info" : "ExpressionStatement[15678-15704]:ExpressionStatement[15708-15734]"
  }, {
    "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
    "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo.getScope());",
    "info" : "ExpressionStatement[15717-15783]:ExpressionStatement[15747-15813]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15799-16082]:Block[15829-16112]"
  }, {
    "left" : "JavaType type = ctxt.constructType(implClass);",
    "right" : "JavaType type = ctxt.constructType(implClass);",
    "info" : "VariableDeclarationStatement[15813-15859]:VariableDeclarationStatement[15843-15889]"
  }, {
    "left" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
    "right" : "idType = ctxt.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
    "info" : "ExpressionStatement[15872-15956]:ExpressionStatement[15902-15986]"
  }, {
    "left" : "idProp = null;",
    "right" : "idProp = null;",
    "info" : "ExpressionStatement[15969-15983]:ExpressionStatement[15999-16013]"
  }, {
    "left" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "right" : "gen = ctxt.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
    "info" : "ExpressionStatement[15996-16072]:ExpressionStatement[16026-16102]"
  }, {
    "left" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
    "right" : "JsonDeserializer<?> deser = ctxt.findRootValueDeserializer(idType);",
    "info" : "VariableDeclarationStatement[16177-16244]:VariableDeclarationStatement[16207-16274]"
  }, {
    "left" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
    "right" : "builder.setObjectIdReader(ObjectIdReader.construct(idType,\n                objectIdInfo.getPropertyName(), gen, deser, idProp, resolver));",
    "info" : "ExpressionStatement[16253-16391]:ExpressionStatement[16283-16421]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[16407-16437]:SingleMemberAnnotation[16437-16467]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16442-16448]:Modifier[16472-16478]"
  }, {
    "left" : "JsonDeserializer<Object>",
    "right" : "JsonDeserializer<Object>",
    "info" : "ParameterizedType[16449-16473]:ParameterizedType[16479-16503]"
  }, {
    "left" : "buildThrowableDeserializer",
    "right" : "buildThrowableDeserializer",
    "info" : "SimpleName[16474-16500]:SimpleName[16504-16530]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[16501-16528]:SingleVariableDeclaration[16531-16558]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[16542-16555]:SingleVariableDeclaration[16572-16585]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[16557-16581]:SingleVariableDeclaration[16587-16611]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[16598-16618]:SimpleType[16628-16648]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16623-19468]:Block[16653-19498]"
  }, {
    "left" : "final DeserializationConfig config = ctxt.getConfig();",
    "right" : "final DeserializationConfig config = ctxt.getConfig();",
    "info" : "VariableDeclarationStatement[16633-16687]:VariableDeclarationStatement[16663-16717]"
  }, {
    "left" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "right" : "BeanDeserializerBuilder builder = constructBeanDeserializerBuilder(ctxt, beanDesc);",
    "info" : "VariableDeclarationStatement[16760-16843]:VariableDeclarationStatement[16790-16873]"
  }, {
    "left" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
    "right" : "builder.setValueInstantiator(findValueInstantiator(ctxt, beanDesc));",
    "info" : "ExpressionStatement[16852-16920]:ExpressionStatement[16882-16950]"
  }, {
    "left" : "addBeanProps(ctxt, beanDesc, builder);",
    "right" : "addBeanProps(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[16930-16968]:ExpressionStatement[16960-16998]"
  }, {
    "left" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
    "right" : "AnnotatedMethod am = beanDesc.findMethod(\"initCause\", INIT_CAUSE_PARAMS);",
    "info" : "VariableDeclarationStatement[17173-17246]:VariableDeclarationStatement[17203-17276]"
  }, {
    "left" : "if (am != null)",
    "right" : "if (am != null)",
    "info" : "IfStatement[17255-17893]:IfStatement[17285-17923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17271-17893]:Block[17301-17923]"
  }, {
    "left" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
    "right" : "SimpleBeanPropertyDefinition propDef = SimpleBeanPropertyDefinition.construct(ctxt.getConfig(), am,\n                    new PropertyName(\"cause\"));",
    "info" : "VariableDeclarationStatement[17309-17456]:VariableDeclarationStatement[17339-17486]"
  }, {
    "left" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
    "right" : "SettableBeanProperty prop = constructSettableProperty(ctxt, beanDesc, propDef,\n                    am.getParameterType(0));",
    "info" : "VariableDeclarationStatement[17469-17592]:VariableDeclarationStatement[17499-17622]"
  }, {
    "left" : "if (prop != null)",
    "right" : "if (prop != null)",
    "info" : "IfStatement[17605-17883]:IfStatement[17635-17913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17623-17883]:Block[17653-17913]"
  }, {
    "left" : "builder.addOrReplaceProperty(prop, true);",
    "right" : "builder.addOrReplaceProperty(prop, true);",
    "info" : "ExpressionStatement[17828-17869]:ExpressionStatement[17858-17899]"
  }, {
    "left" : "builder.addIgnorable(\"localizedMessage\");",
    "right" : "builder.addIgnorable(\"localizedMessage\");",
    "info" : "ExpressionStatement[17957-17998]:ExpressionStatement[17987-18028]"
  }, {
    "left" : "builder.addIgnorable(\"suppressed\");",
    "right" : "builder.addIgnorable(\"suppressed\");",
    "info" : "ExpressionStatement[18080-18115]:ExpressionStatement[18110-18145]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[18438-18672]:IfStatement[18468-18702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18485-18672]:Block[18515-18702]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[18499-18662]:EnhancedForStatement[18529-18692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18575-18662]:Block[18605-18692]"
  }, {
    "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
    "info" : "ExpressionStatement[18593-18648]:ExpressionStatement[18623-18678]"
  }, {
    "left" : "JsonDeserializer<?> deserializer = builder.build();",
    "right" : "JsonDeserializer<?> deserializer = builder.build();",
    "info" : "VariableDeclarationStatement[18681-18732]:VariableDeclarationStatement[18711-18762]"
  }, {
    "left" : "if (deserializer instanceof BeanDeserializer)",
    "right" : "if (deserializer instanceof BeanDeserializer)",
    "info" : "IfStatement[18913-19057]:IfStatement[18943-19087]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18959-19057]:Block[18989-19087]"
  }, {
    "left" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
    "right" : "deserializer = new ThrowableDeserializer((BeanDeserializer) deserializer);",
    "info" : "ExpressionStatement[18973-19047]:ExpressionStatement[19003-19077]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[19157-19406]:IfStatement[19187-19436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19204-19406]:Block[19234-19436]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[19218-19396]:EnhancedForStatement[19248-19426]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19294-19396]:Block[19324-19426]"
  }, {
    "left" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "right" : "deserializer = mod.modifyDeserializer(config, beanDesc, deserializer);",
    "info" : "ExpressionStatement[19312-19382]:ExpressionStatement[19342-19412]"
  }, {
    "left" : "return (JsonDeserializer<Object>) deserializer;",
    "right" : "return (JsonDeserializer<Object>) deserializer;",
    "info" : "ReturnStatement[19415-19462]:ReturnStatement[19445-19492]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[19896-19905]:Modifier[19926-19935]"
  }, {
    "left" : "BeanDeserializerBuilder",
    "right" : "BeanDeserializerBuilder",
    "info" : "SimpleType[19906-19929]:SimpleType[19936-19959]"
  }, {
    "left" : "constructBeanDeserializerBuilder",
    "right" : "constructBeanDeserializerBuilder",
    "info" : "SimpleName[19930-19962]:SimpleName[19960-19992]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[19963-19990]:SingleVariableDeclaration[19993-20020]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[20004-20028]:SingleVariableDeclaration[20034-20058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20030-20097]:Block[20060-20127]"
  }, {
    "left" : "return new BeanDeserializerBuilder(beanDesc, ctxt);",
    "right" : "return new BeanDeserializerBuilder(beanDesc, ctxt);",
    "info" : "ReturnStatement[20040-20091]:ReturnStatement[20070-20121]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[20340-20349]:Modifier[20370-20379]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20350-20354]:PrimitiveType[20380-20384]"
  }, {
    "left" : "addBeanProps",
    "right" : "addBeanProps",
    "info" : "SimpleName[20355-20367]:SimpleName[20385-20397]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[20368-20395]:SingleVariableDeclaration[20398-20425]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[20409-20433]:SingleVariableDeclaration[20439-20463]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[20435-20466]:SingleVariableDeclaration[20465-20496]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[20483-20503]:SimpleType[20513-20533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20508-28002]:Block[20538-28032]"
  }, {
    "left" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
    "right" : "final boolean isConcrete = !beanDesc.getType().isAbstract();",
    "info" : "VariableDeclarationStatement[20518-20578]:VariableDeclarationStatement[20548-20608]"
  }, {
    "left" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
    "right" : "final SettableBeanProperty[] creatorProps = isConcrete\n                ? builder.getValueInstantiator().getFromObjectArguments(ctxt.getConfig())\n                : null;",
    "info" : "VariableDeclarationStatement[20587-20755]:VariableDeclarationStatement[20617-20785]"
  }, {
    "left" : "final boolean hasCreatorProps = (creatorProps != null);",
    "right" : "final boolean hasCreatorProps = (creatorProps != null);",
    "info" : "VariableDeclarationStatement[20764-20819]:VariableDeclarationStatement[20794-20849]"
  }, {
    "left" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
    "right" : "JsonIgnoreProperties.Value ignorals = ctxt.getConfig()\n                .getDefaultPropertyIgnorals(beanDesc.getBeanClass(),\n                        beanDesc.getClassInfo());",
    "info" : "VariableDeclarationStatement[21094-21267]:VariableDeclarationStatement[21124-21297]"
  }, {
    "left" : "Set<String> ignored;",
    "right" : "Set<String> ignored;",
    "info" : "VariableDeclarationStatement[21276-21296]:VariableDeclarationStatement[21306-21326]"
  }, {
    "left" : "if (ignorals != null)",
    "right" : "if (ignorals != null)",
    "info" : "IfStatement[21305-21742]:IfStatement[21335-21772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21327-21679]:Block[21357-21709]"
  }, {
    "left" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
    "right" : "boolean ignoreAny = ignorals.getIgnoreUnknown();",
    "info" : "VariableDeclarationStatement[21341-21389]:VariableDeclarationStatement[21371-21419]"
  }, {
    "left" : "builder.setIgnoreUnknownProperties(ignoreAny);",
    "right" : "builder.setIgnoreUnknownProperties(ignoreAny);",
    "info" : "ExpressionStatement[21402-21448]:ExpressionStatement[21432-21478]"
  }, {
    "left" : "ignored = ignorals.findIgnoredForDeserialization();",
    "right" : "ignored = ignorals.findIgnoredForDeserialization();",
    "info" : "ExpressionStatement[21510-21561]:ExpressionStatement[21540-21591]"
  }, {
    "left" : "for (String propName : ignored)",
    "right" : "for (String propName : ignored)",
    "info" : "EnhancedForStatement[21574-21669]:EnhancedForStatement[21604-21699]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21606-21669]:Block[21636-21699]"
  }, {
    "left" : "builder.addIgnorable(propName);",
    "right" : "builder.addIgnorable(propName);",
    "info" : "ExpressionStatement[21624-21655]:ExpressionStatement[21654-21685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21685-21742]:Block[21715-21772]"
  }, {
    "left" : "ignored = Collections.emptySet();",
    "right" : "ignored = Collections.emptySet();",
    "info" : "ExpressionStatement[21699-21732]:ExpressionStatement[21729-21762]"
  }, {
    "left" : "AnnotatedMember anySetter = beanDesc.findAnySetterAccessor();",
    "right" : "AnnotatedMember anySetter = beanDesc.findAnySetterAccessor();",
    "info" : "VariableDeclarationStatement[21805-21866]:VariableDeclarationStatement[21835-21896]"
  }, {
    "left" : "if (anySetter != null)",
    "right" : "if (anySetter != null)",
    "info" : "IfStatement[21875-22591]:IfStatement[21905-22621]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21898-21990]:Block[21928-22020]"
  }, {
    "left" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
    "right" : "builder.setAnySetter(constructAnySetter(ctxt, beanDesc, anySetter));",
    "info" : "ExpressionStatement[21912-21980]:ExpressionStatement[21942-22010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21996-22591]:Block[22026-22621]"
  }, {
    "left" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
    "right" : "Collection<String> ignored2 = beanDesc.getIgnoredPropertyNames();",
    "info" : "VariableDeclarationStatement[22190-22255]:VariableDeclarationStatement[22220-22285]"
  }, {
    "left" : "if (ignored2 != null)",
    "right" : "if (ignored2 != null)",
    "info" : "IfStatement[22268-22581]:IfStatement[22298-22611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22290-22581]:Block[22320-22611]"
  }, {
    "left" : "for (String propName : ignored2)",
    "right" : "for (String propName : ignored2)",
    "info" : "EnhancedForStatement[22308-22567]:EnhancedForStatement[22338-22597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22341-22567]:Block[22371-22597]"
  }, {
    "left" : "builder.addIgnorable(propName);",
    "right" : "builder.addIgnorable(propName);",
    "info" : "ExpressionStatement[22518-22549]:ExpressionStatement[22548-22579]"
  }, {
    "left" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
    "right" : "final boolean useGettersAsSetters = ctxt.isEnabled(MapperFeature.USE_GETTERS_AS_SETTERS)\n                && ctxt.isEnabled(MapperFeature.AUTO_DETECT_GETTERS);",
    "info" : "VariableDeclarationStatement[22600-22758]:VariableDeclarationStatement[22630-22788]"
  }, {
    "left" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
    "right" : "List<BeanPropertyDefinition> propDefs = filterBeanProps(ctxt,\n                beanDesc, builder, beanDesc.findProperties(), ignored);",
    "info" : "VariableDeclarationStatement[22826-22959]:VariableDeclarationStatement[22856-22989]"
  }, {
    "left" : "if (_factoryConfig.hasDeserializerModifiers())",
    "right" : "if (_factoryConfig.hasDeserializerModifiers())",
    "info" : "IfStatement[23029-23278]:IfStatement[23059-23308]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23076-23278]:Block[23106-23308]"
  }, {
    "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
    "info" : "EnhancedForStatement[23090-23268]:EnhancedForStatement[23120-23298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23166-23268]:Block[23196-23298]"
  }, {
    "left" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
    "right" : "propDefs = mod.updateProperties(ctxt.getConfig(), beanDesc, propDefs);",
    "info" : "ExpressionStatement[23184-23254]:ExpressionStatement[23214-23284]"
  }, {
    "left" : "for (BeanPropertyDefinition propDef : propDefs)",
    "right" : "for (BeanPropertyDefinition propDef : propDefs)",
    "info" : "EnhancedForStatement[23376-27996]:EnhancedForStatement[23406-28026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23424-27996]:Block[23454-28026]"
  }, {
    "left" : "SettableBeanProperty prop = null;",
    "right" : "SettableBeanProperty prop = null;",
    "info" : "VariableDeclarationStatement[23438-23471]:VariableDeclarationStatement[23468-23501]"
  }, {
    "left" : "if (propDef.hasSetter())",
    "right" : "if (propDef.hasSetter())",
    "info" : "IfStatement[23760-25667]:IfStatement[23790-25697]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23785-24019]:Block[23815-24049]"
  }, {
    "left" : "AnnotatedMethod setter = propDef.getSetter();",
    "right" : "AnnotatedMethod setter = propDef.getSetter();",
    "info" : "VariableDeclarationStatement[23803-23848]:VariableDeclarationStatement[23833-23878]"
  }, {
    "left" : "JavaType propertyType = setter.getParameterType(0);",
    "right" : "JavaType propertyType = setter.getParameterType(0);",
    "info" : "VariableDeclarationStatement[23865-23916]:VariableDeclarationStatement[23895-23946]"
  }, {
    "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "info" : "ExpressionStatement[23933-24005]:ExpressionStatement[23963-24035]"
  }, {
    "left" : "if (propDef.hasField())",
    "right" : "if (propDef.hasField())",
    "info" : "IfStatement[24025-25667]:IfStatement[24055-25697]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24049-24269]:Block[24079-24299]"
  }, {
    "left" : "AnnotatedField field = propDef.getField();",
    "right" : "AnnotatedField field = propDef.getField();",
    "info" : "VariableDeclarationStatement[24067-24109]:VariableDeclarationStatement[24097-24139]"
  }, {
    "left" : "JavaType propertyType = field.getType();",
    "right" : "JavaType propertyType = field.getType();",
    "info" : "VariableDeclarationStatement[24126-24166]:VariableDeclarationStatement[24156-24196]"
  }, {
    "left" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "right" : "prop = constructSettableProperty(ctxt, beanDesc, propDef, propertyType);",
    "info" : "ExpressionStatement[24183-24255]:ExpressionStatement[24213-24285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24275-25667]:Block[24305-25697]"
  }, {
    "left" : "AnnotatedMethod getter = propDef.getGetter();",
    "right" : "AnnotatedMethod getter = propDef.getGetter();",
    "info" : "VariableDeclarationStatement[24377-24422]:VariableDeclarationStatement[24407-24452]"
  }, {
    "left" : "if (getter != null)",
    "right" : "if (getter != null)",
    "info" : "IfStatement[24439-25653]:IfStatement[24469-25683]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24459-25653]:Block[24489-25683]"
  }, {
    "left" : "if (useGettersAsSetters && _isSetterlessType(getter.getRawType()))",
    "right" : "if (useGettersAsSetters && _isSetterlessType(getter.getRawType()))",
    "info" : "IfStatement[24481-25635]:IfStatement[24511-25665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24548-25009]:Block[24578-25039]"
  }, {
    "left" : "if (builder.hasIgnorable(propDef.getName()))",
    "right" : "if (builder.hasIgnorable(propDef.getName()))",
    "info" : "IfStatement[24763-24987]:IfStatement[24793-25017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24808-24865]:Block[24838-24895]"
  }, {
    "left" : ";",
    "right" : ";",
    "info" : "EmptyStatement[24838-24839]:EmptyStatement[24868-24869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24871-24987]:Block[24901-25017]"
  }, {
    "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
    "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
    "info" : "ExpressionStatement[24901-24961]:ExpressionStatement[24931-24991]"
  }, {
    "left" : "if (!propDef.hasConstructorParameter())",
    "right" : "if (!propDef.hasConstructorParameter())",
    "info" : "IfStatement[25015-25635]:IfStatement[25045-25665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25055-25635]:Block[25085-25665]"
  }, {
    "left" : "PropertyMetadata md = propDef.getMetadata();",
    "right" : "PropertyMetadata md = propDef.getMetadata();",
    "info" : "VariableDeclarationStatement[25081-25125]:VariableDeclarationStatement[25111-25155]"
  }, {
    "left" : "if (md.getMergeInfo() != null)",
    "right" : "if (md.getMergeInfo() != null)",
    "info" : "IfStatement[25466-25613]:IfStatement[25496-25643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25497-25613]:Block[25527-25643]"
  }, {
    "left" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
    "right" : "prop = constructSetterlessProperty(ctxt, beanDesc, propDef);",
    "info" : "ExpressionStatement[25527-25587]:ExpressionStatement[25557-25617]"
  }, {
    "left" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
    "right" : "if (hasCreatorProps && propDef.hasConstructorParameter())",
    "info" : "IfStatement[25829-27613]:IfStatement[25859-27643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25887-27613]:Block[25917-27643]"
  }, {
    "left" : "final String name = propDef.getName();",
    "right" : "final String name = propDef.getName();",
    "info" : "VariableDeclarationStatement[26270-26308]:VariableDeclarationStatement[26300-26338]"
  }, {
    "left" : "CreatorProperty cprop = null;",
    "right" : "CreatorProperty cprop = null;",
    "info" : "VariableDeclarationStatement[26325-26354]:VariableDeclarationStatement[26355-26384]"
  }, {
    "left" : "if (creatorProps != null)",
    "right" : "if (creatorProps != null)",
    "info" : "IfStatement[26371-26716]:IfStatement[26401-26746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26397-26716]:Block[26427-26746]"
  }, {
    "left" : "for (SettableBeanProperty cp : creatorProps)",
    "right" : "for (SettableBeanProperty cp : creatorProps)",
    "info" : "EnhancedForStatement[26419-26698]:EnhancedForStatement[26449-26728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26464-26698]:Block[26494-26728]"
  }, {
    "left" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
    "right" : "if (name.equals(cp.getName()) && (cp instanceof CreatorProperty))",
    "info" : "IfStatement[26490-26676]:IfStatement[26520-26706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26556-26676]:Block[26586-26706]"
  }, {
    "left" : "cprop = (CreatorProperty) cp;",
    "right" : "cprop = (CreatorProperty) cp;",
    "info" : "ExpressionStatement[26586-26615]:ExpressionStatement[26616-26645]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[26644-26650]:BreakStatement[26674-26680]"
  }, {
    "left" : "if (cprop == null)",
    "right" : "if (cprop == null)",
    "info" : "IfStatement[26733-27210]:IfStatement[26763-27240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26752-27210]:Block[26782-27240]"
  }, {
    "left" : "List<String> n = new ArrayList<>();",
    "right" : "List<String> n = new ArrayList<>();",
    "info" : "VariableDeclarationStatement[26774-26809]:VariableDeclarationStatement[26804-26839]"
  }, {
    "left" : "for (SettableBeanProperty cp : creatorProps)",
    "right" : "for (SettableBeanProperty cp : creatorProps)",
    "info" : "EnhancedForStatement[26830-26943]:EnhancedForStatement[26860-26973]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26875-26943]:Block[26905-26973]"
  }, {
    "left" : "n.add(cp.getName());",
    "right" : "n.add(cp.getName());",
    "info" : "ExpressionStatement[26901-26921]:ExpressionStatement[26931-26951]"
  }, {
    "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
    "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef,\n                            \"Could not find creator property with name '%s' (known Creator properties: %s)\",\n                            name, n);",
    "info" : "ExpressionStatement[26964-27162]:ExpressionStatement[26994-27192]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[27183-27192]:ContinueStatement[27213-27222]"
  }, {
    "left" : "if (prop != null)",
    "right" : "if (prop != null)",
    "info" : "IfStatement[27227-27315]:IfStatement[27257-27345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27245-27315]:Block[27275-27345]"
  }, {
    "left" : "cprop.setFallbackSetter(prop);",
    "right" : "cprop.setFallbackSetter(prop);",
    "info" : "ExpressionStatement[27267-27297]:ExpressionStatement[27297-27327]"
  }, {
    "left" : "Class<?>[] views = propDef.findViews();",
    "right" : "Class<?>[] views = propDef.findViews();",
    "info" : "VariableDeclarationStatement[27332-27371]:VariableDeclarationStatement[27362-27401]"
  }, {
    "left" : "if (views == null)",
    "right" : "if (views == null)",
    "info" : "IfStatement[27388-27483]:IfStatement[27418-27513]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27407-27483]:Block[27437-27513]"
  }, {
    "left" : "views = beanDesc.findDefaultViews();",
    "right" : "views = beanDesc.findDefaultViews();",
    "info" : "ExpressionStatement[27429-27465]:ExpressionStatement[27459-27495]"
  }, {
    "left" : "cprop.setViews(views);",
    "right" : "cprop.setViews(views);",
    "info" : "ExpressionStatement[27500-27522]:ExpressionStatement[27530-27552]"
  }, {
    "left" : "builder.addCreatorProperty(cprop);",
    "right" : "builder.addCreatorProperty(cprop);",
    "info" : "ExpressionStatement[27539-27573]:ExpressionStatement[27569-27603]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[27590-27599]:ContinueStatement[27620-27629]"
  }, {
    "left" : "if (prop != null)",
    "right" : "if (prop != null)",
    "info" : "IfStatement[27626-27986]:IfStatement[27656-28016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27644-27986]:Block[27674-28016]"
  }, {
    "left" : "Class<?>[] views = propDef.findViews();",
    "right" : "Class<?>[] views = propDef.findViews();",
    "info" : "VariableDeclarationStatement[27740-27779]:VariableDeclarationStatement[27770-27809]"
  }, {
    "left" : "if (views == null)",
    "right" : "if (views == null)",
    "info" : "IfStatement[27796-27891]:IfStatement[27826-27921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27815-27891]:Block[27845-27921]"
  }, {
    "left" : "views = beanDesc.findDefaultViews();",
    "right" : "views = beanDesc.findDefaultViews();",
    "info" : "ExpressionStatement[27837-27873]:ExpressionStatement[27867-27903]"
  }, {
    "left" : "prop.setViews(views);",
    "right" : "prop.setViews(views);",
    "info" : "ExpressionStatement[27908-27929]:ExpressionStatement[27938-27959]"
  }, {
    "left" : "builder.addProperty(prop);",
    "right" : "builder.addProperty(prop);",
    "info" : "ExpressionStatement[27946-27972]:ExpressionStatement[27976-28002]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28008-28015]:Modifier[28038-28045]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[28016-28023]:PrimitiveType[28046-28053]"
  }, {
    "left" : "_isSetterlessType",
    "right" : "_isSetterlessType",
    "info" : "SimpleName[28024-28041]:SimpleName[28054-28071]"
  }, {
    "left" : "Class<?> rawType",
    "right" : "Class<?> rawType",
    "info" : "SingleVariableDeclaration[28042-28058]:SingleVariableDeclaration[28072-28088]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28060-28358]:Block[28090-28388]"
  }, {
    "left" : "return Collection.class.isAssignableFrom(rawType)\n                || Map.class.isAssignableFrom(rawType);",
    "right" : "return Collection.class.isAssignableFrom(rawType)\n                || Map.class.isAssignableFrom(rawType);",
    "info" : "ReturnStatement[28247-28352]:ReturnStatement[28277-28382]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[28587-28596]:Modifier[28617-28626]"
  }, {
    "left" : "List<BeanPropertyDefinition>",
    "right" : "List<BeanPropertyDefinition>",
    "info" : "ParameterizedType[28597-28625]:ParameterizedType[28627-28655]"
  }, {
    "left" : "filterBeanProps",
    "right" : "filterBeanProps",
    "info" : "SimpleName[28626-28641]:SimpleName[28656-28671]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[28642-28669]:SingleVariableDeclaration[28672-28699]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[28683-28707]:SingleVariableDeclaration[28713-28737]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[28709-28740]:SingleVariableDeclaration[28739-28770]"
  }, {
    "left" : "List<BeanPropertyDefinition> propDefsIn",
    "right" : "List<BeanPropertyDefinition> propDefsIn",
    "info" : "SingleVariableDeclaration[28754-28793]:SingleVariableDeclaration[28784-28823]"
  }, {
    "left" : "Set<String> ignored",
    "right" : "Set<String> ignored",
    "info" : "SingleVariableDeclaration[28807-28826]:SingleVariableDeclaration[28837-28856]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[28843-28863]:SimpleType[28873-28893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28868-30079]:Block[28898-30109]"
  }, {
    "left" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
    "right" : "ArrayList<BeanPropertyDefinition> result = new ArrayList<BeanPropertyDefinition>(\n                Math.max(4, propDefsIn.size()));",
    "info" : "VariableDeclarationStatement[28878-29008]:VariableDeclarationStatement[28908-29038]"
  }, {
    "left" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
    "right" : "HashMap<Class<?>,Boolean> ignoredTypes = new HashMap<Class<?>,Boolean>();",
    "info" : "VariableDeclarationStatement[29017-29090]:VariableDeclarationStatement[29047-29120]"
  }, {
    "left" : "for (BeanPropertyDefinition property : propDefsIn)",
    "right" : "for (BeanPropertyDefinition property : propDefsIn)",
    "info" : "EnhancedForStatement[29177-30050]:EnhancedForStatement[29207-30080]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29228-30050]:Block[29258-30080]"
  }, {
    "left" : "String name = property.getName();",
    "right" : "String name = property.getName();",
    "info" : "VariableDeclarationStatement[29242-29275]:VariableDeclarationStatement[29272-29305]"
  }, {
    "left" : "if (ignored.contains(name))",
    "right" : "if (ignored.contains(name))",
    "info" : "IfStatement[29288-29428]:IfStatement[29318-29458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29316-29428]:Block[29346-29458]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[29405-29414]:ContinueStatement[29435-29444]"
  }, {
    "left" : "if (!property.hasConstructorParameter())",
    "right" : "if (!property.hasConstructorParameter())",
    "info" : "IfStatement[29441-30006]:IfStatement[29471-30036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29482-30006]:Block[29512-30036]"
  }, {
    "left" : "Class<?> rawPropertyType = property.getRawPrimaryType();",
    "right" : "Class<?> rawPropertyType = property.getRawPrimaryType();",
    "info" : "VariableDeclarationStatement[29533-29589]:VariableDeclarationStatement[29563-29619]"
  }, {
    "left" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), property, rawPropertyType, ignoredTypes))",
    "right" : "if ((rawPropertyType != null)\n                        && isIgnorableType(ctxt.getConfig(), property, rawPropertyType, ignoredTypes))",
    "info" : "IfStatement[29670-29992]:IfStatement[29700-30022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29803-29992]:Block[29833-30022]"
  }, {
    "left" : "builder.addIgnorable(name);",
    "right" : "builder.addIgnorable(name);",
    "info" : "ExpressionStatement[29917-29944]:ExpressionStatement[29947-29974]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[29965-29974]:ContinueStatement[29995-30004]"
  }, {
    "left" : "result.add(property);",
    "right" : "result.add(property);",
    "info" : "ExpressionStatement[30019-30040]:ExpressionStatement[30049-30070]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[30059-30073]:ReturnStatement[30089-30103]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[30283-30292]:Modifier[30313-30322]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30293-30297]:PrimitiveType[30323-30327]"
  }, {
    "left" : "addBackReferenceProperties",
    "right" : "addBackReferenceProperties",
    "info" : "SimpleName[30298-30324]:SimpleName[30328-30354]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[30325-30352]:SingleVariableDeclaration[30355-30382]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[30366-30390]:SingleVariableDeclaration[30396-30420]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[30392-30423]:SingleVariableDeclaration[30422-30453]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[30440-30460]:SimpleType[30470-30490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30465-31781]:Block[30495-31811]"
  }, {
    "left" : "List<BeanPropertyDefinition> refProps = beanDesc.findBackReferences();",
    "right" : "List<BeanPropertyDefinition> refProps = beanDesc.findBackReferences();",
    "info" : "VariableDeclarationStatement[30556-30626]:VariableDeclarationStatement[30586-30656]"
  }, {
    "left" : "if (refProps != null)",
    "right" : "if (refProps != null)",
    "info" : "IfStatement[30635-31775]:IfStatement[30665-31805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30657-31775]:Block[30687-31805]"
  }, {
    "left" : "for (BeanPropertyDefinition refProp : refProps)",
    "right" : "for (BeanPropertyDefinition refProp : refProps)",
    "info" : "EnhancedForStatement[30671-31765]:EnhancedForStatement[30701-31795]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30719-31765]:Block[30749-31795]"
  }, {
    "left" : "String refName = refProp.findReferenceName();",
    "right" : "String refName = refProp.findReferenceName();",
    "info" : "VariableDeclarationStatement[31545-31590]:VariableDeclarationStatement[31575-31620]"
  }, {
    "left" : "builder.addBackReferenceProperty(refName, constructSettableProperty(ctxt,\n                        beanDesc, refProp, refProp.getPrimaryType()));",
    "right" : "builder.addBackReferenceProperty(refName, constructSettableProperty(ctxt,\n                        beanDesc, refProp, refProp.getPrimaryType()));",
    "info" : "ExpressionStatement[31607-31751]:ExpressionStatement[31637-31781]"
  }, {
    "left" : "@Deprecated",
    "right" : "@Deprecated",
    "info" : "MarkerAnnotation[31787-31798]:MarkerAnnotation[31817-31828]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[31825-31834]:Modifier[31855-31864]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31835-31839]:PrimitiveType[31865-31869]"
  }, {
    "left" : "addReferenceProperties",
    "right" : "addReferenceProperties",
    "info" : "SimpleName[31840-31862]:SimpleName[31870-31892]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[31863-31890]:SingleVariableDeclaration[31893-31920]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[31904-31928]:SingleVariableDeclaration[31934-31958]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[31930-31961]:SingleVariableDeclaration[31960-31991]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[31978-31998]:SimpleType[32008-32028]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32003-32071]:Block[32033-32101]"
  }, {
    "left" : "addBackReferenceProperties(ctxt, beanDesc, builder);",
    "right" : "addBackReferenceProperties(ctxt, beanDesc, builder);",
    "info" : "ExpressionStatement[32013-32065]:ExpressionStatement[32043-32095]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[32287-32296]:Modifier[32317-32326]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[32297-32301]:PrimitiveType[32327-32331]"
  }, {
    "left" : "addInjectables",
    "right" : "addInjectables",
    "info" : "SimpleName[32302-32316]:SimpleName[32332-32346]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[32317-32344]:SingleVariableDeclaration[32347-32374]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[32358-32382]:SingleVariableDeclaration[32388-32412]"
  }, {
    "left" : "BeanDeserializerBuilder builder",
    "right" : "BeanDeserializerBuilder builder",
    "info" : "SingleVariableDeclaration[32384-32415]:SingleVariableDeclaration[32414-32445]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[32432-32452]:SimpleType[32462-32482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32457-32906]:Block[32487-32936]"
  }, {
    "left" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
    "right" : "Map<Object, AnnotatedMember> raw = beanDesc.findInjectables();",
    "info" : "VariableDeclarationStatement[32467-32529]:VariableDeclarationStatement[32497-32559]"
  }, {
    "left" : "if (raw != null)",
    "right" : "if (raw != null)",
    "info" : "IfStatement[32538-32900]:IfStatement[32568-32930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32555-32900]:Block[32585-32930]"
  }, {
    "left" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
    "right" : "for (Map.Entry<Object, AnnotatedMember> entry : raw.entrySet())",
    "info" : "EnhancedForStatement[32569-32890]:EnhancedForStatement[32599-32920]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32633-32890]:Block[32663-32920]"
  }, {
    "left" : "AnnotatedMember m = entry.getValue();",
    "right" : "AnnotatedMember m = entry.getValue();",
    "info" : "VariableDeclarationStatement[32651-32688]:VariableDeclarationStatement[32681-32718]"
  }, {
    "left" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
    "right" : "builder.addInjectable(PropertyName.construct(m.getName()),\n                        m.getType(),\n                        beanDesc.getClassAnnotations(), m, entry.getKey());",
    "info" : "ExpressionStatement[32705-32876]:ExpressionStatement[32735-32906]"
  }, {
    "left" : "@SuppressWarnings(\"unchecked\")",
    "right" : "@SuppressWarnings(\"unchecked\")",
    "info" : "SingleMemberAnnotation[33281-33311]:SingleMemberAnnotation[33311-33341]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[33316-33325]:Modifier[33346-33355]"
  }, {
    "left" : "SettableAnyProperty",
    "right" : "SettableAnyProperty",
    "info" : "SimpleType[33326-33345]:SimpleType[33356-33375]"
  }, {
    "left" : "constructAnySetter",
    "right" : "constructAnySetter",
    "info" : "SimpleName[33346-33364]:SimpleName[33376-33394]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[33365-33392]:SingleVariableDeclaration[33395-33422]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[33406-33430]:SingleVariableDeclaration[33436-33460]"
  }, {
    "left" : "AnnotatedMember mutator",
    "right" : "AnnotatedMember mutator",
    "info" : "SingleVariableDeclaration[33432-33455]:SingleVariableDeclaration[33462-33485]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[33472-33492]:SimpleType[33502-33522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33497-36196]:Block[33527-36226]"
  }, {
    "left" : "BeanProperty prop;",
    "right" : "BeanProperty prop;",
    "info" : "VariableDeclarationStatement[33590-33608]:VariableDeclarationStatement[33620-33638]"
  }, {
    "left" : "JavaType keyType;",
    "right" : "JavaType keyType;",
    "info" : "VariableDeclarationStatement[33617-33634]:VariableDeclarationStatement[33647-33664]"
  }, {
    "left" : "JavaType valueType;",
    "right" : "JavaType valueType;",
    "info" : "VariableDeclarationStatement[33643-33662]:VariableDeclarationStatement[33673-33692]"
  }, {
    "left" : "if (mutator instanceof AnnotatedMethod)",
    "right" : "if (mutator instanceof AnnotatedMethod)",
    "info" : "IfStatement[33672-34955]:IfStatement[33702-34985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33712-34210]:Block[33742-34240]"
  }, {
    "left" : "AnnotatedMethod am = (AnnotatedMethod) mutator;",
    "right" : "AnnotatedMethod am = (AnnotatedMethod) mutator;",
    "info" : "VariableDeclarationStatement[33794-33841]:VariableDeclarationStatement[33824-33871]"
  }, {
    "left" : "keyType = am.getParameterType(0);",
    "right" : "keyType = am.getParameterType(0);",
    "info" : "ExpressionStatement[33854-33887]:ExpressionStatement[33884-33917]"
  }, {
    "left" : "valueType = am.getParameterType(1);",
    "right" : "valueType = am.getParameterType(1);",
    "info" : "ExpressionStatement[33900-33935]:ExpressionStatement[33930-33965]"
  }, {
    "left" : "valueType = resolveMemberAndTypeAnnotations(ctxt, mutator, valueType);",
    "right" : "valueType = resolveMemberAndTypeAnnotations(ctxt, mutator, valueType);",
    "info" : "ExpressionStatement[33948-34018]:ExpressionStatement[33978-34048]"
  }, {
    "left" : "prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                    valueType, null, mutator,\n                    PropertyMetadata.STD_OPTIONAL);",
    "right" : "prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                    valueType, null, mutator,\n                    PropertyMetadata.STD_OPTIONAL);",
    "info" : "ExpressionStatement[34031-34199]:ExpressionStatement[34061-34229]"
  }, {
    "left" : "if (mutator instanceof AnnotatedField)",
    "right" : "if (mutator instanceof AnnotatedField)",
    "info" : "IfStatement[34216-34955]:IfStatement[34246-34985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34255-34769]:Block[34285-34799]"
  }, {
    "left" : "AnnotatedField af = (AnnotatedField) mutator;",
    "right" : "AnnotatedField af = (AnnotatedField) mutator;",
    "info" : "VariableDeclarationStatement[34269-34314]:VariableDeclarationStatement[34299-34344]"
  }, {
    "left" : "JavaType mapType = af.getType();",
    "right" : "JavaType mapType = af.getType();",
    "info" : "VariableDeclarationStatement[34395-34427]:VariableDeclarationStatement[34425-34457]"
  }, {
    "left" : "mapType = resolveMemberAndTypeAnnotations(ctxt, mutator, mapType);",
    "right" : "mapType = resolveMemberAndTypeAnnotations(ctxt, mutator, mapType);",
    "info" : "ExpressionStatement[34440-34506]:ExpressionStatement[34470-34536]"
  }, {
    "left" : "keyType = mapType.getKeyType();",
    "right" : "keyType = mapType.getKeyType();",
    "info" : "ExpressionStatement[34519-34550]:ExpressionStatement[34549-34580]"
  }, {
    "left" : "valueType = mapType.getContentType();",
    "right" : "valueType = mapType.getContentType();",
    "info" : "ExpressionStatement[34563-34600]:ExpressionStatement[34593-34630]"
  }, {
    "left" : "prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                    mapType, null, mutator, PropertyMetadata.STD_OPTIONAL);",
    "right" : "prop = new BeanProperty.Std(PropertyName.construct(mutator.getName()),\n                    mapType, null, mutator, PropertyMetadata.STD_OPTIONAL);",
    "info" : "ExpressionStatement[34613-34759]:ExpressionStatement[34643-34789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34775-34955]:Block[34805-34985]"
  }, {
    "left" : "return ctxt.reportBadDefinition(beanDesc.getType(), String.format(\n                    \"Unrecognized mutator type for any setter: %s\", mutator.getClass()));",
    "right" : "return ctxt.reportBadDefinition(beanDesc.getType(), String.format(\n                    \"Unrecognized mutator type for any setter: %s\", mutator.getClass()));",
    "info" : "ReturnStatement[34789-34945]:ReturnStatement[34819-34975]"
  }, {
    "left" : "KeyDeserializer keyDeser = findKeyDeserializerFromAnnotation(ctxt, mutator);",
    "right" : "KeyDeserializer keyDeser = findKeyDeserializerFromAnnotation(ctxt, mutator);",
    "info" : "VariableDeclarationStatement[35091-35167]:VariableDeclarationStatement[35121-35197]"
  }, {
    "left" : "if (keyDeser == null)",
    "right" : "if (keyDeser == null)",
    "info" : "IfStatement[35176-35259]:IfStatement[35206-35289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35198-35259]:Block[35228-35289]"
  }, {
    "left" : "keyDeser = keyType.getValueHandler();",
    "right" : "keyDeser = keyType.getValueHandler();",
    "info" : "ExpressionStatement[35212-35249]:ExpressionStatement[35242-35279]"
  }, {
    "left" : "if (keyDeser == null)",
    "right" : "if (keyDeser == null)",
    "info" : "IfStatement[35268-35582]:IfStatement[35298-35612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35290-35365]:Block[35320-35395]"
  }, {
    "left" : "keyDeser = ctxt.findKeyDeserializer(keyType, prop);",
    "right" : "keyDeser = ctxt.findKeyDeserializer(keyType, prop);",
    "info" : "ExpressionStatement[35304-35355]:ExpressionStatement[35334-35385]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35371-35582]:Block[35401-35612]"
  }, {
    "left" : "if (keyDeser instanceof ContextualKeyDeserializer)",
    "right" : "if (keyDeser instanceof ContextualKeyDeserializer)",
    "info" : "IfStatement[35385-35572]:IfStatement[35415-35602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35436-35572]:Block[35466-35602]"
  }, {
    "left" : "keyDeser = ((ContextualKeyDeserializer) keyDeser)\n                        .createContextual(ctxt, prop);",
    "right" : "keyDeser = ((ContextualKeyDeserializer) keyDeser)\n                        .createContextual(ctxt, prop);",
    "info" : "ExpressionStatement[35454-35558]:ExpressionStatement[35484-35588]"
  }, {
    "left" : "JsonDeserializer<Object> deser = findContentDeserializerFromAnnotation(ctxt, mutator);",
    "right" : "JsonDeserializer<Object> deser = findContentDeserializerFromAnnotation(ctxt, mutator);",
    "info" : "VariableDeclarationStatement[35591-35677]:VariableDeclarationStatement[35621-35707]"
  }, {
    "left" : "if (deser == null)",
    "right" : "if (deser == null)",
    "info" : "IfStatement[35686-35765]:IfStatement[35716-35795]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35705-35765]:Block[35735-35795]"
  }, {
    "left" : "deser = valueType.getValueHandler();",
    "right" : "deser = valueType.getValueHandler();",
    "info" : "ExpressionStatement[35719-35755]:ExpressionStatement[35749-35785]"
  }, {
    "left" : "if (deser != null)",
    "right" : "if (deser != null)",
    "info" : "IfStatement[35774-36015]:IfStatement[35804-36045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35793-36015]:Block[35823-36045]"
  }, {
    "left" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, valueType);",
    "right" : "deser = (JsonDeserializer<Object>) ctxt.handlePrimaryContextualization(deser, prop, valueType);",
    "info" : "ExpressionStatement[35910-36005]:ExpressionStatement[35940-36035]"
  }, {
    "left" : "TypeDeserializer typeDeser = valueType.getTypeHandler();",
    "right" : "TypeDeserializer typeDeser = valueType.getTypeHandler();",
    "info" : "VariableDeclarationStatement[36024-36080]:VariableDeclarationStatement[36054-36110]"
  }, {
    "left" : "return new SettableAnyProperty(prop, mutator, valueType,\n                keyDeser, deser, typeDeser);",
    "right" : "return new SettableAnyProperty(prop, mutator, valueType,\n                keyDeser, deser, typeDeser);",
    "info" : "ReturnStatement[36089-36190]:ReturnStatement[36119-36220]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[36463-36472]:Modifier[36493-36502]"
  }, {
    "left" : "SettableBeanProperty",
    "right" : "SettableBeanProperty",
    "info" : "SimpleType[36473-36493]:SimpleType[36503-36523]"
  }, {
    "left" : "constructSettableProperty",
    "right" : "constructSettableProperty",
    "info" : "SimpleName[36494-36519]:SimpleName[36524-36549]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[36520-36547]:SingleVariableDeclaration[36550-36577]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[36561-36585]:SingleVariableDeclaration[36591-36615]"
  }, {
    "left" : "BeanPropertyDefinition propDef",
    "right" : "BeanPropertyDefinition propDef",
    "info" : "SingleVariableDeclaration[36587-36617]:SingleVariableDeclaration[36617-36647]"
  }, {
    "left" : "JavaType propType0",
    "right" : "JavaType propType0",
    "info" : "SingleVariableDeclaration[36631-36649]:SingleVariableDeclaration[36661-36679]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[36666-36686]:SimpleType[36696-36716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36691-38684]:Block[36721-38714]"
  }, {
    "left" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
    "right" : "AnnotatedMember mutator = propDef.getNonConstructorMutator();",
    "info" : "VariableDeclarationStatement[36763-36824]:VariableDeclarationStatement[36793-36854]"
  }, {
    "left" : "if (mutator == null)",
    "right" : "if (mutator == null)",
    "info" : "IfStatement[37042-37179]:IfStatement[37072-37209]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37063-37179]:Block[37093-37209]"
  }, {
    "left" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
    "right" : "ctxt.reportBadPropertyDefinition(beanDesc, propDef, \"No non-constructor mutator available\");",
    "info" : "ExpressionStatement[37077-37169]:ExpressionStatement[37107-37199]"
  }, {
    "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
    "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, mutator, propType0);",
    "info" : "VariableDeclarationStatement[37188-37262]:VariableDeclarationStatement[37218-37292]"
  }, {
    "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "info" : "VariableDeclarationStatement[37352-37403]:VariableDeclarationStatement[37382-37433]"
  }, {
    "left" : "SettableBeanProperty prop;",
    "right" : "SettableBeanProperty prop;",
    "info" : "VariableDeclarationStatement[37412-37438]:VariableDeclarationStatement[37442-37468]"
  }, {
    "left" : "if (mutator instanceof AnnotatedMethod)",
    "right" : "if (mutator instanceof AnnotatedMethod)",
    "info" : "IfStatement[37447-37897]:IfStatement[37477-37927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37487-37642]:Block[37517-37672]"
  }, {
    "left" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
    "right" : "prop = new MethodProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedMethod) mutator);",
    "info" : "ExpressionStatement[37501-37632]:ExpressionStatement[37531-37662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37648-37897]:Block[37678-37927]"
  }, {
    "left" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
    "right" : "prop = new FieldProperty(propDef, type, typeDeser,\n                    beanDesc.getClassAnnotations(), (AnnotatedField) mutator);",
    "info" : "ExpressionStatement[37758-37887]:ExpressionStatement[37788-37917]"
  }, {
    "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
    "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, mutator);",
    "info" : "VariableDeclarationStatement[37906-37980]:VariableDeclarationStatement[37936-38010]"
  }, {
    "left" : "if (deser == null)",
    "right" : "if (deser == null)",
    "info" : "IfStatement[37989-38063]:IfStatement[38019-38093]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38008-38063]:Block[38038-38093]"
  }, {
    "left" : "deser = type.getValueHandler();",
    "right" : "deser = type.getValueHandler();",
    "info" : "ExpressionStatement[38022-38053]:ExpressionStatement[38052-38083]"
  }, {
    "left" : "if (deser != null)",
    "right" : "if (deser != null)",
    "info" : "IfStatement[38072-38232]:IfStatement[38102-38262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38091-38232]:Block[38121-38262]"
  }, {
    "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
    "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
    "info" : "ExpressionStatement[38105-38168]:ExpressionStatement[38135-38198]"
  }, {
    "left" : "prop = prop.withValueDeserializer(deser);",
    "right" : "prop = prop.withValueDeserializer(deser);",
    "info" : "ExpressionStatement[38181-38222]:ExpressionStatement[38211-38252]"
  }, {
    "left" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
    "right" : "AnnotationIntrospector.ReferenceProperty ref = propDef.findReferenceType();",
    "info" : "VariableDeclarationStatement[38303-38378]:VariableDeclarationStatement[38333-38408]"
  }, {
    "left" : "if (ref != null && ref.isManagedReference())",
    "right" : "if (ref != null && ref.isManagedReference())",
    "info" : "IfStatement[38387-38500]:IfStatement[38417-38530]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38432-38500]:Block[38462-38530]"
  }, {
    "left" : "prop.setManagedReferenceName(ref.getName());",
    "right" : "prop.setManagedReferenceName(ref.getName());",
    "info" : "ExpressionStatement[38446-38490]:ExpressionStatement[38476-38520]"
  }, {
    "left" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
    "right" : "ObjectIdInfo objectIdInfo = propDef.findObjectIdInfo();",
    "info" : "VariableDeclarationStatement[38509-38564]:VariableDeclarationStatement[38539-38594]"
  }, {
    "left" : "if (objectIdInfo != null)",
    "right" : "if (objectIdInfo != null)",
    "info" : "IfStatement[38573-38657]:IfStatement[38603-38687]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38598-38657]:Block[38628-38687]"
  }, {
    "left" : "prop.setObjectIdInfo(objectIdInfo);",
    "right" : "prop.setObjectIdInfo(objectIdInfo);",
    "info" : "ExpressionStatement[38612-38647]:ExpressionStatement[38642-38677]"
  }, {
    "left" : "return prop;",
    "right" : "return prop;",
    "info" : "ReturnStatement[38666-38678]:ReturnStatement[38696-38708]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[38809-38818]:Modifier[38839-38848]"
  }, {
    "left" : "SettableBeanProperty",
    "right" : "SettableBeanProperty",
    "info" : "SimpleType[38819-38839]:SimpleType[38849-38869]"
  }, {
    "left" : "constructSetterlessProperty",
    "right" : "constructSetterlessProperty",
    "info" : "SimpleName[38840-38867]:SimpleName[38870-38897]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[38868-38895]:SingleVariableDeclaration[38898-38925]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[38909-38933]:SingleVariableDeclaration[38939-38963]"
  }, {
    "left" : "BeanPropertyDefinition propDef",
    "right" : "BeanPropertyDefinition propDef",
    "info" : "SingleVariableDeclaration[38935-38965]:SingleVariableDeclaration[38965-38995]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[38982-39002]:SimpleType[39012-39032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39007-39720]:Block[39037-39750]"
  }, {
    "left" : "final AnnotatedMethod getter = propDef.getGetter();",
    "right" : "final AnnotatedMethod getter = propDef.getGetter();",
    "info" : "VariableDeclarationStatement[39017-39068]:VariableDeclarationStatement[39047-39098]"
  }, {
    "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
    "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, getter, getter.getType());",
    "info" : "VariableDeclarationStatement[39077-39157]:VariableDeclarationStatement[39107-39187]"
  }, {
    "left" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "right" : "TypeDeserializer typeDeser = type.getTypeHandler();",
    "info" : "VariableDeclarationStatement[39166-39217]:VariableDeclarationStatement[39196-39247]"
  }, {
    "left" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
    "right" : "SettableBeanProperty prop = new SetterlessProperty(propDef, type, typeDeser,\n                beanDesc.getClassAnnotations(), getter);",
    "info" : "VariableDeclarationStatement[39226-39359]:VariableDeclarationStatement[39256-39389]"
  }, {
    "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
    "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, getter);",
    "info" : "VariableDeclarationStatement[39368-39441]:VariableDeclarationStatement[39398-39471]"
  }, {
    "left" : "if (deser == null)",
    "right" : "if (deser == null)",
    "info" : "IfStatement[39450-39524]:IfStatement[39480-39554]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39469-39524]:Block[39499-39554]"
  }, {
    "left" : "deser = type.getValueHandler();",
    "right" : "deser = type.getValueHandler();",
    "info" : "ExpressionStatement[39483-39514]:ExpressionStatement[39513-39544]"
  }, {
    "left" : "if (deser != null)",
    "right" : "if (deser != null)",
    "info" : "IfStatement[39533-39693]:IfStatement[39563-39723]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39552-39693]:Block[39582-39723]"
  }, {
    "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
    "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
    "info" : "ExpressionStatement[39566-39629]:ExpressionStatement[39596-39659]"
  }, {
    "left" : "prop = prop.withValueDeserializer(deser);",
    "right" : "prop = prop.withValueDeserializer(deser);",
    "info" : "ExpressionStatement[39642-39683]:ExpressionStatement[39672-39713]"
  }, {
    "left" : "return prop;",
    "right" : "return prop;",
    "info" : "ReturnStatement[39702-39714]:ReturnStatement[39732-39744]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[40254-40263]:Modifier[40284-40293]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[40264-40271]:PrimitiveType[40294-40301]"
  }, {
    "left" : "isPotentialBeanType",
    "right" : "isPotentialBeanType",
    "info" : "SimpleName[40272-40291]:SimpleName[40302-40321]"
  }, {
    "left" : "Class<?> type",
    "right" : "Class<?> type",
    "info" : "SingleVariableDeclaration[40292-40305]:SingleVariableDeclaration[40322-40335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40311-41095]:Block[40341-41125]"
  }, {
    "left" : "String typeStr = ClassUtil.canBeABeanType(type);",
    "right" : "String typeStr = ClassUtil.canBeABeanType(type);",
    "info" : "VariableDeclarationStatement[40321-40369]:VariableDeclarationStatement[40351-40399]"
  }, {
    "left" : "if (typeStr != null)",
    "right" : "if (typeStr != null)",
    "info" : "IfStatement[40378-40537]:IfStatement[40408-40567]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40399-40537]:Block[40429-40567]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Cannot deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "right" : "throw new IllegalArgumentException(\"Cannot deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "info" : "ThrowStatement[40413-40527]:ThrowStatement[40443-40557]"
  }, {
    "left" : "if (ClassUtil.isProxyType(type))",
    "right" : "if (ClassUtil.isProxyType(type))",
    "info" : "IfStatement[40546-40701]:IfStatement[40576-40731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40579-40701]:Block[40609-40731]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Cannot deserialize Proxy class \"+type.getName()+\" as a Bean\");",
    "right" : "throw new IllegalArgumentException(\"Cannot deserialize Proxy class \"+type.getName()+\" as a Bean\");",
    "info" : "ThrowStatement[40593-40691]:ThrowStatement[40623-40721]"
  }, {
    "left" : "typeStr = ClassUtil.isLocalType(type, true);",
    "right" : "typeStr = ClassUtil.isLocalType(type, true);",
    "info" : "ExpressionStatement[40856-40900]:ExpressionStatement[40886-40930]"
  }, {
    "left" : "if (typeStr != null)",
    "right" : "if (typeStr != null)",
    "info" : "IfStatement[40909-41068]:IfStatement[40939-41098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40930-41068]:Block[40960-41098]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Cannot deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "right" : "throw new IllegalArgumentException(\"Cannot deserialize Class \"+type.getName()+\" (of type \"+typeStr+\") as a Bean\");",
    "info" : "ThrowStatement[40944-41058]:ThrowStatement[40974-41088]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[41077-41089]:ReturnStatement[41107-41119]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[41261-41270]:Modifier[41291-41300]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[41271-41278]:PrimitiveType[41301-41308]"
  }, {
    "left" : "isIgnorableType",
    "right" : "isIgnorableType",
    "info" : "SimpleName[41279-41294]:SimpleName[41309-41324]"
  }, {
    "left" : "DeserializationConfig config",
    "right" : "DeserializationConfig config",
    "info" : "SingleVariableDeclaration[41295-41323]:SingleVariableDeclaration[41325-41353]"
  }, {
    "left" : "BeanPropertyDefinition propDef",
    "right" : "BeanPropertyDefinition propDef",
    "info" : "SingleVariableDeclaration[41325-41355]:SingleVariableDeclaration[41355-41385]"
  }, {
    "left" : "Class<?> type",
    "right" : "Class<?> type",
    "info" : "SingleVariableDeclaration[41369-41382]:SingleVariableDeclaration[41399-41412]"
  }, {
    "left" : "Map<Class<?>,Boolean> ignoredTypes",
    "right" : "Map<Class<?>,Boolean> ignoredTypes",
    "info" : "SingleVariableDeclaration[41384-41418]:SingleVariableDeclaration[41414-41448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41424-42364]:Block[41454-42394]"
  }, {
    "left" : "Boolean status = ignoredTypes.get(type);",
    "right" : "Boolean status = ignoredTypes.get(type);",
    "info" : "VariableDeclarationStatement[41434-41474]:VariableDeclarationStatement[41464-41504]"
  }, {
    "left" : "if (status != null)",
    "right" : "if (status != null)",
    "info" : "IfStatement[41483-41556]:IfStatement[41513-41586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41503-41556]:Block[41533-41586]"
  }, {
    "left" : "return status.booleanValue();",
    "right" : "return status.booleanValue();",
    "info" : "ReturnStatement[41517-41546]:ReturnStatement[41547-41576]"
  }, {
    "left" : "if ((type == String.class) || type.isPrimitive())",
    "right" : "if ((type == String.class) || type.isPrimitive())",
    "info" : "IfStatement[41635-42280]:IfStatement[41665-42310]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41685-41732]:Block[41715-41762]"
  }, {
    "left" : "status = Boolean.FALSE;",
    "right" : "status = Boolean.FALSE;",
    "info" : "ExpressionStatement[41699-41722]:ExpressionStatement[41729-41752]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41738-42280]:Block[41768-42310]"
  }, {
    "left" : "status = config.getConfigOverride(type).getIsIgnoredType();",
    "right" : "status = config.getConfigOverride(type).getIsIgnoredType();",
    "info" : "ExpressionStatement[41824-41883]:ExpressionStatement[41854-41913]"
  }, {
    "left" : "if (status == null)",
    "right" : "if (status == null)",
    "info" : "IfStatement[41896-42270]:IfStatement[41926-42300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41916-42270]:Block[41946-42300]"
  }, {
    "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
    "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
    "info" : "VariableDeclarationStatement[41934-41997]:VariableDeclarationStatement[41964-42027]"
  }, {
    "left" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
    "right" : "status = config.getAnnotationIntrospector().isIgnorableType(desc.getClassInfo());",
    "info" : "ExpressionStatement[42014-42095]:ExpressionStatement[42044-42125]"
  }, {
    "left" : "if (status == null)",
    "right" : "if (status == null)",
    "info" : "IfStatement[42173-42256]:IfStatement[42203-42286]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42193-42256]:Block[42223-42286]"
  }, {
    "left" : "status = Boolean.FALSE;",
    "right" : "status = Boolean.FALSE;",
    "info" : "ExpressionStatement[42215-42238]:ExpressionStatement[42245-42268]"
  }, {
    "left" : "ignoredTypes.put(type, status);",
    "right" : "ignoredTypes.put(type, status);",
    "info" : "ExpressionStatement[42289-42320]:ExpressionStatement[42319-42350]"
  }, {
    "left" : "return status.booleanValue();",
    "right" : "return status.booleanValue();",
    "info" : "ReturnStatement[42329-42358]:ReturnStatement[42359-42388]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[42407-42416]:Modifier[42437-42446]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42417-42421]:PrimitiveType[42447-42451]"
  }, {
    "left" : "_validateSubType",
    "right" : "_validateSubType",
    "info" : "SimpleName[42422-42438]:SimpleName[42452-42468]"
  }, {
    "left" : "DeserializationContext ctxt",
    "right" : "DeserializationContext ctxt",
    "info" : "SingleVariableDeclaration[42439-42466]:SingleVariableDeclaration[42469-42496]"
  }, {
    "left" : "JavaType type",
    "right" : "JavaType type",
    "info" : "SingleVariableDeclaration[42468-42481]:SingleVariableDeclaration[42498-42511]"
  }, {
    "left" : "BeanDescription beanDesc",
    "right" : "BeanDescription beanDesc",
    "info" : "SingleVariableDeclaration[42495-42519]:SingleVariableDeclaration[42525-42549]"
  }, {
    "left" : "JsonMappingException",
    "right" : "JsonMappingException",
    "info" : "SimpleType[42536-42556]:SimpleType[42566-42586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42561-42643]:Block[42591-42673]"
  }, {
    "left" : "SubTypeValidator.instance().validateSubType(ctxt, type, beanDesc);",
    "right" : "SubTypeValidator.instance().validateSubType(ctxt, type, beanDesc);",
    "info" : "ExpressionStatement[42571-42637]:ExpressionStatement[42601-42667]"
  } ]
}