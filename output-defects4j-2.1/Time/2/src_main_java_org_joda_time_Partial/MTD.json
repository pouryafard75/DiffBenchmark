{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Partial",
      "right" : "Partial",
      "info" : "TypeDeclaration[1050-39133]:TypeDeclaration[1050-39220]"
    }, {
      "left" : "private static final long serialVersionUID = 12324121189002L;",
      "right" : "private static final long serialVersionUID = 12324121189002L;",
      "info" : "FieldDeclaration[2769-2863]:FieldDeclaration[2769-2863]"
    }, {
      "left" : "private final Chronology iChronology;",
      "right" : "private final Chronology iChronology;",
      "info" : "FieldDeclaration[2869-2940]:FieldDeclaration[2869-2940]"
    }, {
      "left" : "private final DateTimeFieldType[] iTypes;",
      "right" : "private final DateTimeFieldType[] iTypes;",
      "info" : "FieldDeclaration[2945-3021]:FieldDeclaration[2945-3021]"
    }, {
      "left" : "private final int[] iValues;",
      "right" : "private final int[] iValues;",
      "info" : "FieldDeclaration[3026-3107]:FieldDeclaration[3026-3107]"
    }, {
      "left" : "private transient DateTimeFormatter[] iFormatter;",
      "right" : "private transient DateTimeFormatter[] iFormatter;",
      "info" : "FieldDeclaration[3112-3249]:FieldDeclaration[3112-3249]"
    }, {
      "left" : "public Partial()",
      "right" : "public Partial()",
      "info" : "MethodDeclaration[3353-4005]:MethodDeclaration[3353-4005]"
    }, {
      "left" : "public Partial(Chronology chrono)",
      "right" : "public Partial(Chronology chrono)",
      "info" : "MethodDeclaration[4011-4805]:MethodDeclaration[4011-4805]"
    }, {
      "left" : "public Partial(DateTimeFieldType type, int value)",
      "right" : "public Partial(DateTimeFieldType type, int value)",
      "info" : "MethodDeclaration[4811-5241]:MethodDeclaration[4811-5241]"
    }, {
      "left" : "public Partial(DateTimeFieldType type, int value, Chronology chronology)",
      "right" : "public Partial(DateTimeFieldType type, int value, Chronology chronology)",
      "info" : "MethodDeclaration[5247-6096]:MethodDeclaration[5247-6096]"
    }, {
      "left" : "public Partial(DateTimeFieldType[] types, int[] values)",
      "right" : "public Partial(DateTimeFieldType[] types, int[] values)",
      "info" : "MethodDeclaration[6102-6620]:MethodDeclaration[6102-6620]"
    }, {
      "left" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
      "right" : "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology)",
      "info" : "MethodDeclaration[6626-10505]:MethodDeclaration[6626-10447]"
    }, {
      "left" : "public Partial(ReadablePartial partial)",
      "right" : "public Partial(ReadablePartial partial)",
      "info" : "MethodDeclaration[10511-11231]:MethodDeclaration[10453-11173]"
    }, {
      "left" : "Partial(Partial partial, int[] values)",
      "right" : "Partial(Partial partial, int[] values)",
      "info" : "MethodDeclaration[11237-11701]:MethodDeclaration[11179-11643]"
    }, {
      "left" : "Partial(Chronology chronology, DateTimeFieldType[] types, int[] values)",
      "right" : "Partial(Chronology chronology, DateTimeFieldType[] types, int[] values)",
      "info" : "MethodDeclaration[11707-12265]:MethodDeclaration[11649-12207]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[12349-12509]:MethodDeclaration[12291-12451]"
    }, {
      "left" : "public Chronology getChronology()",
      "right" : "public Chronology getChronology()",
      "info" : "MethodDeclaration[12515-12892]:MethodDeclaration[12457-12834]"
    }, {
      "left" : "protected DateTimeField getField(int index, Chronology chrono)",
      "right" : "protected DateTimeField getField(int index, Chronology chrono)",
      "info" : "MethodDeclaration[12898-13288]:MethodDeclaration[12840-13230]"
    }, {
      "left" : "public DateTimeFieldType getFieldType(int index)",
      "right" : "public DateTimeFieldType getFieldType(int index)",
      "info" : "MethodDeclaration[13294-13610]:MethodDeclaration[13236-13552]"
    }, {
      "left" : "public DateTimeFieldType[] getFieldTypes()",
      "right" : "public DateTimeFieldType[] getFieldTypes()",
      "info" : "MethodDeclaration[13616-13971]:MethodDeclaration[13558-13913]"
    }, {
      "left" : "public int getValue(int index)",
      "right" : "public int getValue(int index)",
      "info" : "MethodDeclaration[14055-14327]:MethodDeclaration[13997-14269]"
    }, {
      "left" : "public int[] getValues()",
      "right" : "public int[] getValues()",
      "info" : "MethodDeclaration[14333-14746]:MethodDeclaration[14275-14688]"
    }, {
      "left" : "public Partial withChronologyRetainFields(Chronology newChronology)",
      "right" : "public Partial withChronologyRetainFields(Chronology newChronology)",
      "info" : "MethodDeclaration[14830-15922]:MethodDeclaration[14772-15864]"
    }, {
      "left" : "public Partial with(DateTimeFieldType fieldType, int value)",
      "right" : "public Partial with(DateTimeFieldType fieldType, int value)",
      "info" : "MethodDeclaration[16006-19092]:MethodDeclaration[15948-19179]"
    }, {
      "left" : "public Partial without(DateTimeFieldType fieldType)",
      "right" : "public Partial without(DateTimeFieldType fieldType)",
      "info" : "MethodDeclaration[19098-20164]:MethodDeclaration[19185-20251]"
    }, {
      "left" : "public Partial withField(DateTimeFieldType fieldType, int value)",
      "right" : "public Partial withField(DateTimeFieldType fieldType, int value)",
      "info" : "MethodDeclaration[20248-21241]:MethodDeclaration[20335-21328]"
    }, {
      "left" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
      "right" : "public Partial withFieldAdded(DurationFieldType fieldType, int amount)",
      "info" : "MethodDeclaration[21247-22310]:MethodDeclaration[21334-22397]"
    }, {
      "left" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
      "right" : "public Partial withFieldAddWrapped(DurationFieldType fieldType, int amount)",
      "info" : "MethodDeclaration[22316-23381]:MethodDeclaration[22403-23468]"
    }, {
      "left" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
      "right" : "public Partial withPeriodAdded(ReadablePeriod period, int scalar)",
      "info" : "MethodDeclaration[23387-24733]:MethodDeclaration[23474-24820]"
    }, {
      "left" : "public Partial plus(ReadablePeriod period)",
      "right" : "public Partial plus(ReadablePeriod period)",
      "info" : "MethodDeclaration[24739-25227]:MethodDeclaration[24826-25314]"
    }, {
      "left" : "public Partial minus(ReadablePeriod period)",
      "right" : "public Partial minus(ReadablePeriod period)",
      "info" : "MethodDeclaration[25233-25720]:MethodDeclaration[25320-25807]"
    }, {
      "left" : "public Property property(DateTimeFieldType type)",
      "right" : "public Property property(DateTimeFieldType type)",
      "info" : "MethodDeclaration[25804-26337]:MethodDeclaration[25891-26424]"
    }, {
      "left" : "public boolean isMatch(ReadableInstant instant)",
      "right" : "public boolean isMatch(ReadableInstant instant)",
      "info" : "MethodDeclaration[26421-27209]:MethodDeclaration[26508-27296]"
    }, {
      "left" : "public boolean isMatch(ReadablePartial partial)",
      "right" : "public boolean isMatch(ReadablePartial partial)",
      "info" : "MethodDeclaration[27215-28125]:MethodDeclaration[27302-28212]"
    }, {
      "left" : "public DateTimeFormatter getFormatter()",
      "right" : "public DateTimeFormatter getFormatter()",
      "info" : "MethodDeclaration[28209-29334]:MethodDeclaration[28296-29421]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[29418-30158]:MethodDeclaration[29505-30245]"
    }, {
      "left" : "public String toStringList()",
      "right" : "public String toStringList()",
      "info" : "MethodDeclaration[30164-30981]:MethodDeclaration[30251-31068]"
    }, {
      "left" : "public String toString(String pattern)",
      "right" : "public String toString(String pattern)",
      "info" : "MethodDeclaration[30987-31454]:MethodDeclaration[31074-31541]"
    }, {
      "left" : "public String toString(String pattern, Locale locale)",
      "right" : "public String toString(String pattern, Locale locale)",
      "info" : "MethodDeclaration[31460-32017]:MethodDeclaration[31547-32104]"
    }, {
      "left" : "Property",
      "right" : "Property",
      "info" : "TypeDeclaration[32101-39130]:TypeDeclaration[32188-39217]"
    }, {
      "left" : "private static final long serialVersionUID = 53278362873888L;",
      "right" : "private static final long serialVersionUID = 53278362873888L;",
      "info" : "FieldDeclaration[32421-32519]:FieldDeclaration[32508-32606]"
    }, {
      "left" : "private final Partial iPartial;",
      "right" : "private final Partial iPartial;",
      "info" : "FieldDeclaration[32529-32587]:FieldDeclaration[32616-32674]"
    }, {
      "left" : "private final int iFieldIndex;",
      "right" : "private final int iFieldIndex;",
      "info" : "FieldDeclaration[32596-32657]:FieldDeclaration[32683-32744]"
    }, {
      "left" : "Property(Partial partial, int fieldIndex)",
      "right" : "Property(Partial partial, int fieldIndex)",
      "info" : "MethodDeclaration[32667-32984]:MethodDeclaration[32754-33071]"
    }, {
      "left" : "public DateTimeField getField()",
      "right" : "public DateTimeField getField()",
      "info" : "MethodDeclaration[32994-33204]:MethodDeclaration[33081-33291]"
    }, {
      "left" : "protected ReadablePartial getReadablePartial()",
      "right" : "protected ReadablePartial getReadablePartial()",
      "info" : "MethodDeclaration[33214-33427]:MethodDeclaration[33301-33514]"
    }, {
      "left" : "public Partial getPartial()",
      "right" : "public Partial getPartial()",
      "info" : "MethodDeclaration[33437-33631]:MethodDeclaration[33524-33718]"
    }, {
      "left" : "public int get()",
      "right" : "public int get()",
      "info" : "MethodDeclaration[33641-33832]:MethodDeclaration[33728-33919]"
    }, {
      "left" : "public Partial addToCopy(int valueToAdd)",
      "right" : "public Partial addToCopy(int valueToAdd)",
      "info" : "MethodDeclaration[33924-34975]:MethodDeclaration[34011-35062]"
    }, {
      "left" : "public Partial addWrapFieldToCopy(int valueToAdd)",
      "right" : "public Partial addWrapFieldToCopy(int valueToAdd)",
      "info" : "MethodDeclaration[34985-36110]:MethodDeclaration[35072-36197]"
    }, {
      "left" : "public Partial setCopy(int value)",
      "right" : "public Partial setCopy(int value)",
      "info" : "MethodDeclaration[36202-36867]:MethodDeclaration[36289-36954]"
    }, {
      "left" : "public Partial setCopy(String text, Locale locale)",
      "right" : "public Partial setCopy(String text, Locale locale)",
      "info" : "MethodDeclaration[36877-37650]:MethodDeclaration[36964-37737]"
    }, {
      "left" : "public Partial setCopy(String text)",
      "right" : "public Partial setCopy(String text)",
      "info" : "MethodDeclaration[37660-38188]:MethodDeclaration[37747-38275]"
    }, {
      "left" : "public Partial withMaximumValue()",
      "right" : "public Partial withMaximumValue()",
      "info" : "MethodDeclaration[38280-38697]:MethodDeclaration[38367-38784]"
    }, {
      "left" : "public Partial withMinimumValue()",
      "right" : "public Partial withMinimumValue()",
      "info" : "MethodDeclaration[38707-39124]:MethodDeclaration[38794-39211]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3965-4005]:Block[3965-4005]"
    }, {
      "left" : "this((Chronology) null);",
      "right" : "this((Chronology) null);",
      "info" : "ConstructorInvocation[3975-3999]:ConstructorInvocation[3975-3999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4639-4805]:Block[4639-4805]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[4649-4657]:SuperConstructorInvocation[4649-4657]"
    }, {
      "left" : "iChronology = DateTimeUtils.getChronology(chrono).withUTC();",
      "right" : "iChronology = DateTimeUtils.getChronology(chrono).withUTC();",
      "info" : "ExpressionStatement[4666-4726]:ExpressionStatement[4666-4726]"
    }, {
      "left" : "iTypes = new DateTimeFieldType[0];",
      "right" : "iTypes = new DateTimeFieldType[0];",
      "info" : "ExpressionStatement[4735-4769]:ExpressionStatement[4735-4769]"
    }, {
      "left" : "iValues = new int[0];",
      "right" : "iValues = new int[0];",
      "info" : "ExpressionStatement[4778-4799]:ExpressionStatement[4778-4799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5201-5241]:Block[5201-5241]"
    }, {
      "left" : "this(type, value, null);",
      "right" : "this(type, value, null);",
      "info" : "ConstructorInvocation[5211-5235]:ConstructorInvocation[5211-5235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5715-6096]:Block[5715-6096]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[5725-5733]:SuperConstructorInvocation[5725-5733]"
    }, {
      "left" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "right" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "info" : "ExpressionStatement[5742-5805]:ExpressionStatement[5742-5805]"
    }, {
      "left" : "iChronology = chronology;",
      "right" : "iChronology = chronology;",
      "info" : "ExpressionStatement[5814-5839]:ExpressionStatement[5814-5839]"
    }, {
      "left" : "if (type == null)",
      "right" : "if (type == null)",
      "info" : "IfStatement[5848-5960]:IfStatement[5848-5960]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5866-5960]:Block[5866-5960]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "info" : "ThrowStatement[5880-5950]:ThrowStatement[5880-5950]"
    }, {
      "left" : "iTypes = new DateTimeFieldType[] {type};",
      "right" : "iTypes = new DateTimeFieldType[] {type};",
      "info" : "ExpressionStatement[5969-6009]:ExpressionStatement[5969-6009]"
    }, {
      "left" : "iValues = new int[] {value};",
      "right" : "iValues = new int[] {value};",
      "info" : "ExpressionStatement[6018-6046]:ExpressionStatement[6018-6046]"
    }, {
      "left" : "chronology.validate(this, iValues);",
      "right" : "chronology.validate(this, iValues);",
      "info" : "ExpressionStatement[6055-6090]:ExpressionStatement[6055-6090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6578-6620]:Block[6578-6620]"
    }, {
      "left" : "this(types, values, null);",
      "right" : "this(types, values, null);",
      "info" : "ConstructorInvocation[6588-6614]:ConstructorInvocation[6588-6614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7182-10505]:Block[7182-10447]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[7192-7200]:SuperConstructorInvocation[7192-7200]"
    }, {
      "left" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "right" : "chronology = DateTimeUtils.getChronology(chronology).withUTC();",
      "info" : "ExpressionStatement[7209-7272]:ExpressionStatement[7209-7272]"
    }, {
      "left" : "iChronology = chronology;",
      "right" : "iChronology = chronology;",
      "info" : "ExpressionStatement[7281-7306]:ExpressionStatement[7281-7306]"
    }, {
      "left" : "if (types == null)",
      "right" : "if (types == null)",
      "info" : "IfStatement[7315-7425]:IfStatement[7315-7425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7334-7425]:Block[7334-7425]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"Types array must not be null\");",
      "info" : "ThrowStatement[7348-7415]:ThrowStatement[7348-7415]"
    }, {
      "left" : "if (values == null)",
      "right" : "if (values == null)",
      "info" : "IfStatement[7434-7546]:IfStatement[7434-7546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7454-7546]:Block[7454-7546]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Values array must not be null\");",
      "right" : "throw new IllegalArgumentException(\"Values array must not be null\");",
      "info" : "ThrowStatement[7468-7536]:ThrowStatement[7468-7536]"
    }, {
      "left" : "if (values.length != types.length)",
      "right" : "if (values.length != types.length)",
      "info" : "IfStatement[7555-7708]:IfStatement[7555-7708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7590-7708]:Block[7590-7708]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Values array must be the same length as the types array\");",
      "right" : "throw new IllegalArgumentException(\"Values array must be the same length as the types array\");",
      "info" : "ThrowStatement[7604-7698]:ThrowStatement[7604-7698]"
    }, {
      "left" : "if (types.length == 0)",
      "right" : "if (types.length == 0)",
      "info" : "IfStatement[7717-7829]:IfStatement[7717-7829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7740-7829]:Block[7740-7829]"
    }, {
      "left" : "iTypes = types;",
      "right" : "iTypes = types;",
      "info" : "ExpressionStatement[7754-7769]:ExpressionStatement[7754-7769]"
    }, {
      "left" : "iValues = values;",
      "right" : "iValues = values;",
      "info" : "ExpressionStatement[7782-7799]:ExpressionStatement[7782-7799]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7812-7819]:ReturnStatement[7812-7819]"
    }, {
      "left" : "for (int i = 0; i < types.length; i++)",
      "right" : "for (int i = 0; i < types.length; i++)",
      "info" : "ForStatement[7838-8039]:ForStatement[7838-8039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7877-8039]:Block[7877-8039]"
    }, {
      "left" : "if (types[i] == null)",
      "right" : "if (types[i] == null)",
      "info" : "IfStatement[7891-8029]:IfStatement[7891-8029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7913-8029]:Block[7913-8029]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not contain null: index \" + i);",
      "right" : "throw new IllegalArgumentException(\"Types array must not contain null: index \" + i);",
      "info" : "ThrowStatement[7931-8015]:ThrowStatement[7931-8015]"
    }, {
      "left" : "DurationField lastUnitField = null;",
      "right" : "DurationField lastUnitField = null;",
      "info" : "VariableDeclarationStatement[8048-8083]:VariableDeclarationStatement[8048-8083]"
    }, {
      "left" : "for (int i = 0; i < types.length; i++)",
      "right" : "for (int i = 0; i < types.length; i++)",
      "info" : "ForStatement[8092-10351]:ForStatement[8092-10293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8131-10351]:Block[8131-10293]"
    }, {
      "left" : "DateTimeFieldType loopType = types[i];",
      "right" : "DateTimeFieldType loopType = types[i];",
      "info" : "VariableDeclarationStatement[8145-8183]:VariableDeclarationStatement[8145-8183]"
    }, {
      "left" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "right" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[8196-8275]:VariableDeclarationStatement[8196-8275]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[8288-10298]:IfStatement[8288-10240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8299-10298]:Block[8299-10240]"
    }, {
      "left" : "int compare = lastUnitField.compareTo(loopUnitField);",
      "right" : "int compare = lastUnitField.compareTo(loopUnitField);",
      "info" : "VariableDeclarationStatement[8317-8370]:VariableDeclarationStatement[8317-8370]"
    }, {
      "left" : "if (compare < 0 || (compare != 0 && loopUnitField.isSupported() == false))",
      "right" : "if (compare < 0)",
      "info" : "IfStatement[8387-10284]:IfStatement[8387-10226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8462-8670]:Block[8404-8612]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                            types[i - 1].getName() + \" < \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                            types[i - 1].getName() + \" < \" + loopType.getName());",
      "info" : "ThrowStatement[8484-8652]:ThrowStatement[8426-8594]"
    }, {
      "left" : "if (compare == 0)",
      "right" : "if (compare == 0)",
      "info" : "IfStatement[8676-10284]:IfStatement[8618-10226]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8694-10284]:Block[8636-10226]"
    }, {
      "left" : "if (types[i - 1].getRangeDurationType() == null)",
      "right" : "if (types[i - 1].getRangeDurationType() == null)",
      "info" : "IfStatement[8716-10266]:IfStatement[8658-10208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8765-9093]:Block[8707-9035]"
    }, {
      "left" : "if (loopType.getRangeDurationType() == null)",
      "right" : "if (loopType.getRangeDurationType() == null)",
      "info" : "IfStatement[8791-9071]:IfStatement[8733-9013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8836-9071]:Block[8778-9013]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "info" : "ThrowStatement[8866-9045]:ThrowStatement[8808-8987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9099-10266]:Block[9041-10208]"
    }, {
      "left" : "if (loopType.getRangeDurationType() == null)",
      "right" : "if (loopType.getRangeDurationType() == null)",
      "info" : "IfStatement[9125-9402]:IfStatement[9067-9344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9170-9402]:Block[9112-9344]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "info" : "ThrowStatement[9200-9376]:ThrowStatement[9142-9318]"
    }, {
      "left" : "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
      "right" : "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[9427-9516]:VariableDeclarationStatement[9369-9458]"
    }, {
      "left" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "right" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[9541-9626]:VariableDeclarationStatement[9483-9568]"
    }, {
      "left" : "if (lastRangeField.compareTo(loopRangeField) < 0)",
      "right" : "if (lastRangeField.compareTo(loopRangeField) < 0)",
      "info" : "IfStatement[9651-9933]:IfStatement[9593-9875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9701-9933]:Block[9643-9875]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n                                    types[i - 1].getName() + \" < \" + loopType.getName());",
      "info" : "ThrowStatement[9731-9907]:ThrowStatement[9673-9849]"
    }, {
      "left" : "if (lastRangeField.compareTo(loopRangeField) == 0)",
      "right" : "if (lastRangeField.compareTo(loopRangeField) == 0)",
      "info" : "IfStatement[9958-10244]:IfStatement[9900-10186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10009-10244]:Block[9951-10186]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "right" : "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" +\n                                            types[i - 1].getName() + \" and \" + loopType.getName());",
      "info" : "ThrowStatement[10039-10218]:ThrowStatement[9981-10160]"
    }, {
      "left" : "lastUnitField = loopUnitField;",
      "right" : "lastUnitField = loopUnitField;",
      "info" : "ExpressionStatement[10311-10341]:ExpressionStatement[10253-10283]"
    }, {
      "left" : "iTypes = (DateTimeFieldType[]) types.clone();",
      "right" : "iTypes = (DateTimeFieldType[]) types.clone();",
      "info" : "ExpressionStatement[10369-10414]:ExpressionStatement[10311-10356]"
    }, {
      "left" : "chronology.validate(this, values);",
      "right" : "chronology.validate(this, values);",
      "info" : "ExpressionStatement[10423-10457]:ExpressionStatement[10365-10399]"
    }, {
      "left" : "iValues = (int[]) values.clone();",
      "right" : "iValues = (int[]) values.clone();",
      "info" : "ExpressionStatement[10466-10499]:ExpressionStatement[10408-10441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10745-11231]:Block[10687-11173]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[10755-10763]:SuperConstructorInvocation[10697-10705]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[10772-10884]:IfStatement[10714-10826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10793-10884]:Block[10735-10826]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[10807-10874]:ThrowStatement[10749-10816]"
    }, {
      "left" : "iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();",
      "right" : "iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();",
      "info" : "ExpressionStatement[10893-10970]:ExpressionStatement[10835-10912]"
    }, {
      "left" : "iTypes = new DateTimeFieldType[partial.size()];",
      "right" : "iTypes = new DateTimeFieldType[partial.size()];",
      "info" : "ExpressionStatement[10979-11026]:ExpressionStatement[10921-10968]"
    }, {
      "left" : "iValues = new int[partial.size()];",
      "right" : "iValues = new int[partial.size()];",
      "info" : "ExpressionStatement[11035-11069]:ExpressionStatement[10977-11011]"
    }, {
      "left" : "for (int i = 0; i < partial.size(); i++)",
      "right" : "for (int i = 0; i < partial.size(); i++)",
      "info" : "ForStatement[11078-11225]:ForStatement[11020-11167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11119-11225]:Block[11061-11167]"
    }, {
      "left" : "iTypes[i] = partial.getFieldType(i);",
      "right" : "iTypes[i] = partial.getFieldType(i);",
      "info" : "ExpressionStatement[11133-11169]:ExpressionStatement[11075-11111]"
    }, {
      "left" : "iValues[i] = partial.getValue(i);",
      "right" : "iValues[i] = partial.getValue(i);",
      "info" : "ExpressionStatement[11182-11215]:ExpressionStatement[11124-11157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11575-11701]:Block[11517-11643]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[11585-11593]:SuperConstructorInvocation[11527-11535]"
    }, {
      "left" : "iChronology = partial.iChronology;",
      "right" : "iChronology = partial.iChronology;",
      "info" : "ExpressionStatement[11602-11636]:ExpressionStatement[11544-11578]"
    }, {
      "left" : "iTypes = partial.iTypes;",
      "right" : "iTypes = partial.iTypes;",
      "info" : "ExpressionStatement[11645-11669]:ExpressionStatement[11587-11611]"
    }, {
      "left" : "iValues = values;",
      "right" : "iValues = values;",
      "info" : "ExpressionStatement[11678-11695]:ExpressionStatement[11620-11637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12157-12265]:Block[12099-12207]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[12167-12175]:SuperConstructorInvocation[12109-12117]"
    }, {
      "left" : "iChronology = chronology;",
      "right" : "iChronology = chronology;",
      "info" : "ExpressionStatement[12184-12209]:ExpressionStatement[12126-12151]"
    }, {
      "left" : "iTypes = types;",
      "right" : "iTypes = types;",
      "info" : "ExpressionStatement[12218-12233]:ExpressionStatement[12160-12175]"
    }, {
      "left" : "iValues = values;",
      "right" : "iValues = values;",
      "info" : "ExpressionStatement[12242-12259]:ExpressionStatement[12184-12201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12472-12509]:Block[12414-12451]"
    }, {
      "left" : "return iTypes.length;",
      "right" : "return iTypes.length;",
      "info" : "ReturnStatement[12482-12503]:ReturnStatement[12424-12445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12857-12892]:Block[12799-12834]"
    }, {
      "left" : "return iChronology;",
      "right" : "return iChronology;",
      "info" : "ReturnStatement[12867-12886]:ReturnStatement[12809-12828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13234-13288]:Block[13176-13230]"
    }, {
      "left" : "return iTypes[index].getField(chrono);",
      "right" : "return iTypes[index].getField(chrono);",
      "info" : "ReturnStatement[13244-13282]:ReturnStatement[13186-13224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13573-13610]:Block[13515-13552]"
    }, {
      "left" : "return iTypes[index];",
      "right" : "return iTypes[index];",
      "info" : "ReturnStatement[13583-13604]:ReturnStatement[13525-13546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13911-13971]:Block[13853-13913]"
    }, {
      "left" : "return (DateTimeFieldType[]) iTypes.clone();",
      "right" : "return (DateTimeFieldType[]) iTypes.clone();",
      "info" : "ReturnStatement[13921-13965]:ReturnStatement[13863-13907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14289-14327]:Block[14231-14269]"
    }, {
      "left" : "return iValues[index];",
      "right" : "return iValues[index];",
      "info" : "ReturnStatement[14299-14321]:ReturnStatement[14241-14263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14699-14746]:Block[14641-14688]"
    }, {
      "left" : "return (int[]) iValues.clone();",
      "right" : "return (int[]) iValues.clone();",
      "info" : "ReturnStatement[14709-14740]:ReturnStatement[14651-14682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15532-15922]:Block[15474-15864]"
    }, {
      "left" : "newChronology = DateTimeUtils.getChronology(newChronology);",
      "right" : "newChronology = DateTimeUtils.getChronology(newChronology);",
      "info" : "ExpressionStatement[15542-15601]:ExpressionStatement[15484-15543]"
    }, {
      "left" : "newChronology = newChronology.withUTC();",
      "right" : "newChronology = newChronology.withUTC();",
      "info" : "ExpressionStatement[15610-15650]:ExpressionStatement[15552-15592]"
    }, {
      "left" : "if (newChronology == getChronology())",
      "right" : "if (newChronology == getChronology())",
      "info" : "IfStatement[15659-15916]:IfStatement[15601-15858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15697-15733]:Block[15639-15675]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[15711-15723]:ReturnStatement[15653-15665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15739-15916]:Block[15681-15858]"
    }, {
      "left" : "Partial newPartial = new Partial(newChronology, iTypes, iValues);",
      "right" : "Partial newPartial = new Partial(newChronology, iTypes, iValues);",
      "info" : "VariableDeclarationStatement[15753-15818]:VariableDeclarationStatement[15695-15760]"
    }, {
      "left" : "newChronology.validate(newPartial, iValues);",
      "right" : "newChronology.validate(newPartial, iValues);",
      "info" : "ExpressionStatement[15831-15875]:ExpressionStatement[15773-15817]"
    }, {
      "left" : "return newPartial;",
      "right" : "return newPartial;",
      "info" : "ReturnStatement[15888-15906]:ReturnStatement[15830-15848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16706-19092]:Block[16648-19179]"
    }, {
      "left" : "if (fieldType == null)",
      "right" : "if (fieldType == null)",
      "info" : "IfStatement[16716-16833]:IfStatement[16658-16775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16739-16833]:Block[16681-16775]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The field type must not be null\");",
      "info" : "ThrowStatement[16753-16823]:ThrowStatement[16695-16765]"
    }, {
      "left" : "int index = indexOf(fieldType);",
      "right" : "int index = indexOf(fieldType);",
      "info" : "VariableDeclarationStatement[16842-16873]:VariableDeclarationStatement[16784-16815]"
    }, {
      "left" : "if (index == -1)",
      "right" : "if (index == -1)",
      "info" : "IfStatement[16882-18855]:IfStatement[16824-18942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16899-18855]:Block[16841-18942]"
    }, {
      "left" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];",
      "right" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[iTypes.length + 1];",
      "info" : "VariableDeclarationStatement[16913-16985]:VariableDeclarationStatement[16855-16927]"
    }, {
      "left" : "int[] newValues = new int[newTypes.length];",
      "right" : "int[] newValues = new int[newTypes.length];",
      "info" : "VariableDeclarationStatement[16998-17041]:VariableDeclarationStatement[16940-16983]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[17142-17152]:VariableDeclarationStatement[17084-17094]"
    }, {
      "left" : "DurationField unitField = fieldType.getDurationType().getField(iChronology);",
      "right" : "DurationField unitField = fieldType.getDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17165-17241]:VariableDeclarationStatement[17107-17183]"
    }, {
      "left" : "if (unitField.isSupported())",
      "right" : "if (unitField.isSupported())",
      "info" : "IfStatement[17254-18201]:IfStatement[17196-18288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17283-18201]:Block[17225-18288]"
    }, {
      "left" : "for (; i < iTypes.length; i++)",
      "right" : "for (; i < iTypes.length; i++)",
      "info" : "ForStatement[17301-18187]:ForStatement[17243-18274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17332-18187]:Block[17274-18274]"
    }, {
      "left" : "DateTimeFieldType loopType = iTypes[i];",
      "right" : "DateTimeFieldType loopType = iTypes[i];",
      "info" : "VariableDeclarationStatement[17354-17393]:VariableDeclarationStatement[17296-17335]"
    }, {
      "left" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "right" : "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17414-17493]:VariableDeclarationStatement[17356-17435]"
    }, {
      "left" : "if (loopUnitField.isSupported())",
      "right" : "if (loopUnitField.isSupported())",
      "info" : "IfStatement[17514-18169]:IfStatement[17456-18256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17547-18169]:Block[17489-18256]"
    }, {
      "left" : "int compare = unitField.compareTo(loopUnitField);",
      "right" : "int compare = unitField.compareTo(loopUnitField);",
      "info" : "VariableDeclarationStatement[17573-17622]:VariableDeclarationStatement[17515-17564]"
    }, {
      "left" : "if (compare > 0)",
      "right" : "if (compare > 0)",
      "info" : "IfStatement[17647-18147]:IfStatement[17589-18234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17664-17726]:Block[17606-17668]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[17694-17700]:BreakStatement[17802-17808]"
    }, {
      "left" : "if (compare == 0)",
      "right" : "if (compare == 0)",
      "info" : "IfStatement[17732-18147]:IfStatement[17674-18234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17750-18147]:Block[17692-18234]"
    }, {
      "left" : "DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
      "right" : "DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17780-17862]:VariableDeclarationStatement[17867-17949]"
    }, {
      "left" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "right" : "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
      "info" : "VariableDeclarationStatement[17891-17976]:VariableDeclarationStatement[17978-18063]"
    }, {
      "left" : "if (rangeField.compareTo(loopRangeField) > 0)",
      "right" : "if (rangeField.compareTo(loopRangeField) > 0)",
      "info" : "IfStatement[18005-18121]:IfStatement[18092-18208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18051-18121]:Block[18138-18208]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[18085-18091]:BreakStatement[18172-18178]"
    }, {
      "left" : "System.arraycopy(iTypes, 0, newTypes, 0, i);",
      "right" : "System.arraycopy(iTypes, 0, newTypes, 0, i);",
      "info" : "ExpressionStatement[18214-18258]:ExpressionStatement[18301-18345]"
    }, {
      "left" : "System.arraycopy(iValues, 0, newValues, 0, i);",
      "right" : "System.arraycopy(iValues, 0, newValues, 0, i);",
      "info" : "ExpressionStatement[18271-18317]:ExpressionStatement[18358-18404]"
    }, {
      "left" : "newTypes[i] = fieldType;",
      "right" : "newTypes[i] = fieldType;",
      "info" : "ExpressionStatement[18330-18354]:ExpressionStatement[18417-18441]"
    }, {
      "left" : "newValues[i] = value;",
      "right" : "newValues[i] = value;",
      "info" : "ExpressionStatement[18367-18388]:ExpressionStatement[18454-18475]"
    }, {
      "left" : "System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);",
      "right" : "System.arraycopy(iTypes, i, newTypes, i + 1, newTypes.length - i - 1);",
      "info" : "ExpressionStatement[18401-18471]:ExpressionStatement[18488-18558]"
    }, {
      "left" : "System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);",
      "right" : "System.arraycopy(iValues, i, newValues, i + 1, newValues.length - i - 1);",
      "info" : "ExpressionStatement[18484-18557]:ExpressionStatement[18571-18644]"
    }, {
      "left" : "Partial newPartial = new Partial(newTypes, newValues, iChronology);",
      "right" : "Partial newPartial = new Partial(newTypes, newValues, iChronology);",
      "info" : "VariableDeclarationStatement[18690-18757]:VariableDeclarationStatement[18777-18844]"
    }, {
      "left" : "iChronology.validate(newPartial, newValues);",
      "right" : "iChronology.validate(newPartial, newValues);",
      "info" : "ExpressionStatement[18770-18814]:ExpressionStatement[18857-18901]"
    }, {
      "left" : "return newPartial;",
      "right" : "return newPartial;",
      "info" : "ReturnStatement[18827-18845]:ReturnStatement[18914-18932]"
    }, {
      "left" : "if (value == getValue(index))",
      "right" : "if (value == getValue(index))",
      "info" : "IfStatement[18864-18930]:IfStatement[18951-19017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18894-18930]:Block[18981-19017]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[18908-18920]:ReturnStatement[18995-19007]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[18939-18969]:VariableDeclarationStatement[19026-19056]"
    }, {
      "left" : "newValues = getField(index).set(this, index, newValues, value);",
      "right" : "newValues = getField(index).set(this, index, newValues, value);",
      "info" : "ExpressionStatement[18978-19041]:ExpressionStatement[19065-19128]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[19050-19086]:ReturnStatement[19137-19173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19453-20164]:Block[19540-20251]"
    }, {
      "left" : "int index = indexOf(fieldType);",
      "right" : "int index = indexOf(fieldType);",
      "info" : "VariableDeclarationStatement[19463-19494]:VariableDeclarationStatement[19550-19581]"
    }, {
      "left" : "if (index != -1)",
      "right" : "if (index != -1)",
      "info" : "IfStatement[19503-20137]:IfStatement[19590-20224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19520-20137]:Block[19607-20224]"
    }, {
      "left" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[size() - 1];",
      "right" : "DateTimeFieldType[] newTypes = new DateTimeFieldType[size() - 1];",
      "info" : "VariableDeclarationStatement[19534-19599]:VariableDeclarationStatement[19621-19686]"
    }, {
      "left" : "int[] newValues = new int[size() - 1];",
      "right" : "int[] newValues = new int[size() - 1];",
      "info" : "VariableDeclarationStatement[19612-19650]:VariableDeclarationStatement[19699-19737]"
    }, {
      "left" : "System.arraycopy(iTypes, 0, newTypes, 0, index);",
      "right" : "System.arraycopy(iTypes, 0, newTypes, 0, index);",
      "info" : "ExpressionStatement[19663-19711]:ExpressionStatement[19750-19798]"
    }, {
      "left" : "System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index);",
      "right" : "System.arraycopy(iTypes, index + 1, newTypes, index, newTypes.length - index);",
      "info" : "ExpressionStatement[19724-19802]:ExpressionStatement[19811-19889]"
    }, {
      "left" : "System.arraycopy(iValues, 0, newValues, 0, index);",
      "right" : "System.arraycopy(iValues, 0, newValues, 0, index);",
      "info" : "ExpressionStatement[19815-19865]:ExpressionStatement[19902-19952]"
    }, {
      "left" : "System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index);",
      "right" : "System.arraycopy(iValues, index + 1, newValues, index, newValues.length - index);",
      "info" : "ExpressionStatement[19878-19959]:ExpressionStatement[19965-20046]"
    }, {
      "left" : "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
      "right" : "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
      "info" : "VariableDeclarationStatement[19972-20039]:VariableDeclarationStatement[20059-20126]"
    }, {
      "left" : "iChronology.validate(newPartial, newValues);",
      "right" : "iChronology.validate(newPartial, newValues);",
      "info" : "ExpressionStatement[20052-20096]:ExpressionStatement[20139-20183]"
    }, {
      "left" : "return newPartial;",
      "right" : "return newPartial;",
      "info" : "ReturnStatement[20109-20127]:ReturnStatement[20196-20214]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[20146-20158]:ReturnStatement[20233-20245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20954-21241]:Block[21041-21328]"
    }, {
      "left" : "int index = indexOfSupported(fieldType);",
      "right" : "int index = indexOfSupported(fieldType);",
      "info" : "VariableDeclarationStatement[20964-21004]:VariableDeclarationStatement[21051-21091]"
    }, {
      "left" : "if (value == getValue(index))",
      "right" : "if (value == getValue(index))",
      "info" : "IfStatement[21013-21079]:IfStatement[21100-21166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21043-21079]:Block[21130-21166]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[21057-21069]:ReturnStatement[21144-21156]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[21088-21118]:VariableDeclarationStatement[21175-21205]"
    }, {
      "left" : "newValues = getField(index).set(this, index, newValues, value);",
      "right" : "newValues = getField(index).set(this, index, newValues, value);",
      "info" : "ExpressionStatement[21127-21190]:ExpressionStatement[21214-21277]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[21199-21235]:ReturnStatement[21286-21322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22035-22310]:Block[22122-22397]"
    }, {
      "left" : "int index = indexOfSupported(fieldType);",
      "right" : "int index = indexOfSupported(fieldType);",
      "info" : "VariableDeclarationStatement[22045-22085]:VariableDeclarationStatement[22132-22172]"
    }, {
      "left" : "if (amount == 0)",
      "right" : "if (amount == 0)",
      "info" : "IfStatement[22094-22147]:IfStatement[22181-22234]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22111-22147]:Block[22198-22234]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[22125-22137]:ReturnStatement[22212-22224]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[22156-22186]:VariableDeclarationStatement[22243-22273]"
    }, {
      "left" : "newValues = getField(index).add(this, index, newValues, amount);",
      "right" : "newValues = getField(index).add(this, index, newValues, amount);",
      "info" : "ExpressionStatement[22195-22259]:ExpressionStatement[22282-22346]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[22268-22304]:ReturnStatement[22355-22391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23095-23381]:Block[23182-23468]"
    }, {
      "left" : "int index = indexOfSupported(fieldType);",
      "right" : "int index = indexOfSupported(fieldType);",
      "info" : "VariableDeclarationStatement[23105-23145]:VariableDeclarationStatement[23192-23232]"
    }, {
      "left" : "if (amount == 0)",
      "right" : "if (amount == 0)",
      "info" : "IfStatement[23154-23207]:IfStatement[23241-23294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23171-23207]:Block[23258-23294]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[23185-23197]:ReturnStatement[23272-23284]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[23216-23246]:VariableDeclarationStatement[23303-23333]"
    }, {
      "left" : "newValues = getField(index).addWrapPartial(this, index, newValues, amount);",
      "right" : "newValues = getField(index).addWrapPartial(this, index, newValues, amount);",
      "info" : "ExpressionStatement[23255-23330]:ExpressionStatement[23342-23417]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[23339-23375]:ReturnStatement[23426-23462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24198-24733]:Block[24285-24820]"
    }, {
      "left" : "if (period == null || scalar == 0)",
      "right" : "if (period == null || scalar == 0)",
      "info" : "IfStatement[24208-24279]:IfStatement[24295-24366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24243-24279]:Block[24330-24366]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[24257-24269]:ReturnStatement[24344-24356]"
    }, {
      "left" : "int[] newValues = getValues();",
      "right" : "int[] newValues = getValues();",
      "info" : "VariableDeclarationStatement[24288-24318]:VariableDeclarationStatement[24375-24405]"
    }, {
      "left" : "for (int i = 0; i < period.size(); i++)",
      "right" : "for (int i = 0; i < period.size(); i++)",
      "info" : "ForStatement[24327-24682]:ForStatement[24414-24769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24367-24682]:Block[24454-24769]"
    }, {
      "left" : "DurationFieldType fieldType = period.getFieldType(i);",
      "right" : "DurationFieldType fieldType = period.getFieldType(i);",
      "info" : "VariableDeclarationStatement[24381-24434]:VariableDeclarationStatement[24468-24521]"
    }, {
      "left" : "int index = indexOf(fieldType);",
      "right" : "int index = indexOf(fieldType);",
      "info" : "VariableDeclarationStatement[24447-24478]:VariableDeclarationStatement[24534-24565]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[24491-24672]:IfStatement[24578-24759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24507-24672]:Block[24594-24759]"
    }, {
      "left" : "newValues = getField(index).add(this, index, newValues,\n                        FieldUtils.safeMultiply(period.getValue(i), scalar));",
      "right" : "newValues = getField(index).add(this, index, newValues,\n                        FieldUtils.safeMultiply(period.getValue(i), scalar));",
      "info" : "ExpressionStatement[24525-24658]:ExpressionStatement[24612-24745]"
    }, {
      "left" : "return new Partial(this, newValues);",
      "right" : "return new Partial(this, newValues);",
      "info" : "ReturnStatement[24691-24727]:ReturnStatement[24778-24814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25177-25227]:Block[25264-25314]"
    }, {
      "left" : "return withPeriodAdded(period, 1);",
      "right" : "return withPeriodAdded(period, 1);",
      "info" : "ReturnStatement[25187-25221]:ReturnStatement[25274-25308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25669-25720]:Block[25756-25807]"
    }, {
      "left" : "return withPeriodAdded(period, -1);",
      "right" : "return withPeriodAdded(period, -1);",
      "info" : "ReturnStatement[25679-25714]:ReturnStatement[25766-25801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26271-26337]:Block[26358-26424]"
    }, {
      "left" : "return new Property(this, indexOfSupported(type));",
      "right" : "return new Property(this, indexOfSupported(type));",
      "info" : "ReturnStatement[26281-26331]:ReturnStatement[26368-26418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26838-27209]:Block[26925-27296]"
    }, {
      "left" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "right" : "long millis = DateTimeUtils.getInstantMillis(instant);",
      "info" : "VariableDeclarationStatement[26848-26902]:VariableDeclarationStatement[26935-26989]"
    }, {
      "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(instant);",
      "info" : "VariableDeclarationStatement[26911-26975]:VariableDeclarationStatement[26998-27062]"
    }, {
      "left" : "for (int i = 0; i < iTypes.length; i++)",
      "right" : "for (int i = 0; i < iTypes.length; i++)",
      "info" : "ForStatement[26984-27182]:ForStatement[27071-27269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27024-27182]:Block[27111-27269]"
    }, {
      "left" : "int value = iTypes[i].getField(chrono).get(millis);",
      "right" : "int value = iTypes[i].getField(chrono).get(millis);",
      "info" : "VariableDeclarationStatement[27038-27089]:VariableDeclarationStatement[27125-27176]"
    }, {
      "left" : "if (value != iValues[i])",
      "right" : "if (value != iValues[i])",
      "info" : "IfStatement[27102-27172]:IfStatement[27189-27259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27127-27172]:Block[27214-27259]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[27145-27158]:ReturnStatement[27232-27245]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[27191-27203]:ReturnStatement[27278-27290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27785-28125]:Block[27872-28212]"
    }, {
      "left" : "if (partial == null)",
      "right" : "if (partial == null)",
      "info" : "IfStatement[27795-27907]:IfStatement[27882-27994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27816-27907]:Block[27903-27994]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The partial must not be null\");",
      "info" : "ThrowStatement[27830-27897]:ThrowStatement[27917-27984]"
    }, {
      "left" : "for (int i = 0; i < iTypes.length; i++)",
      "right" : "for (int i = 0; i < iTypes.length; i++)",
      "info" : "ForStatement[27916-28098]:ForStatement[28003-28185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27956-28098]:Block[28043-28185]"
    }, {
      "left" : "int value = partial.get(iTypes[i]);",
      "right" : "int value = partial.get(iTypes[i]);",
      "info" : "VariableDeclarationStatement[27970-28005]:VariableDeclarationStatement[28057-28092]"
    }, {
      "left" : "if (value != iValues[i])",
      "right" : "if (value != iValues[i])",
      "info" : "IfStatement[28018-28088]:IfStatement[28105-28175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28043-28088]:Block[28130-28175]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[28061-28074]:ReturnStatement[28148-28161]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[28107-28119]:ReturnStatement[28194-28206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28707-29334]:Block[28794-29421]"
    }, {
      "left" : "DateTimeFormatter[] f = iFormatter;",
      "right" : "DateTimeFormatter[] f = iFormatter;",
      "info" : "VariableDeclarationStatement[28717-28752]:VariableDeclarationStatement[28804-28839]"
    }, {
      "left" : "if (f == null)",
      "right" : "if (f == null)",
      "info" : "IfStatement[28761-29307]:IfStatement[28848-29394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28776-29307]:Block[28863-29394]"
    }, {
      "left" : "if (size() == 0)",
      "right" : "if (size() == 0)",
      "info" : "IfStatement[28790-28851]:IfStatement[28877-28938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28807-28851]:Block[28894-28938]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[28825-28837]:ReturnStatement[28912-28924]"
    }, {
      "left" : "f = new DateTimeFormatter[2];",
      "right" : "f = new DateTimeFormatter[2];",
      "info" : "ExpressionStatement[28864-28893]:ExpressionStatement[28951-28980]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28906-29269]:TryStatement[28993-29356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28910-29191]:Block[28997-29278]"
    }, {
      "left" : "List<DateTimeFieldType> list = new ArrayList<DateTimeFieldType>(Arrays.asList(iTypes));",
      "right" : "List<DateTimeFieldType> list = new ArrayList<DateTimeFieldType>(Arrays.asList(iTypes));",
      "info" : "VariableDeclarationStatement[28928-29015]:VariableDeclarationStatement[29015-29102]"
    }, {
      "left" : "f[0] = ISODateTimeFormat.forFields(list, true, false);",
      "right" : "f[0] = ISODateTimeFormat.forFields(list, true, false);",
      "info" : "ExpressionStatement[29032-29086]:ExpressionStatement[29119-29173]"
    }, {
      "left" : "if (list.size() == 0)",
      "right" : "if (list.size() == 0)",
      "info" : "IfStatement[29103-29177]:IfStatement[29190-29264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29125-29177]:Block[29212-29264]"
    }, {
      "left" : "f[1] = f[0];",
      "right" : "f[1] = f[0];",
      "info" : "ExpressionStatement[29147-29159]:ExpressionStatement[29234-29246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29228-29269]:Block[29315-29356]"
    }, {
      "left" : "iFormatter = f;",
      "right" : "iFormatter = f;",
      "info" : "ExpressionStatement[29282-29297]:ExpressionStatement[29369-29384]"
    }, {
      "left" : "return f[0];",
      "right" : "return f[0];",
      "info" : "ReturnStatement[29316-29328]:ReturnStatement[29403-29415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29795-30158]:Block[29882-30245]"
    }, {
      "left" : "DateTimeFormatter[] f = iFormatter;",
      "right" : "DateTimeFormatter[] f = iFormatter;",
      "info" : "VariableDeclarationStatement[29805-29840]:VariableDeclarationStatement[29892-29927]"
    }, {
      "left" : "if (f == null)",
      "right" : "if (f == null)",
      "info" : "IfStatement[29849-30013]:IfStatement[29936-30100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29864-30013]:Block[29951-30100]"
    }, {
      "left" : "getFormatter();",
      "right" : "getFormatter();",
      "info" : "ExpressionStatement[29878-29893]:ExpressionStatement[29965-29980]"
    }, {
      "left" : "f = iFormatter;",
      "right" : "f = iFormatter;",
      "info" : "ExpressionStatement[29906-29921]:ExpressionStatement[29993-30008]"
    }, {
      "left" : "if (f == null)",
      "right" : "if (f == null)",
      "info" : "IfStatement[29934-30003]:IfStatement[30021-30090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29949-30003]:Block[30036-30090]"
    }, {
      "left" : "return toStringList();",
      "right" : "return toStringList();",
      "info" : "ReturnStatement[29967-29989]:ReturnStatement[30054-30076]"
    }, {
      "left" : "DateTimeFormatter f1 = f[1];",
      "right" : "DateTimeFormatter f1 = f[1];",
      "info" : "VariableDeclarationStatement[30022-30050]:VariableDeclarationStatement[30109-30137]"
    }, {
      "left" : "if (f1 == null)",
      "right" : "if (f1 == null)",
      "info" : "IfStatement[30059-30121]:IfStatement[30146-30208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30075-30121]:Block[30162-30208]"
    }, {
      "left" : "return toStringList();",
      "right" : "return toStringList();",
      "info" : "ReturnStatement[30089-30111]:ReturnStatement[30176-30198]"
    }, {
      "left" : "return f1.print(this);",
      "right" : "return f1.print(this);",
      "info" : "ReturnStatement[30130-30152]:ReturnStatement[30217-30239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30563-30981]:Block[30650-31068]"
    }, {
      "left" : "int size = size();",
      "right" : "int size = size();",
      "info" : "VariableDeclarationStatement[30573-30591]:VariableDeclarationStatement[30660-30678]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(20 * size);",
      "right" : "StringBuilder buf = new StringBuilder(20 * size);",
      "info" : "VariableDeclarationStatement[30600-30649]:VariableDeclarationStatement[30687-30736]"
    }, {
      "left" : "buf.append('[');",
      "right" : "buf.append('[');",
      "info" : "ExpressionStatement[30658-30674]:ExpressionStatement[30745-30761]"
    }, {
      "left" : "for (int i = 0; i < size; i++)",
      "right" : "for (int i = 0; i < size; i++)",
      "info" : "ForStatement[30683-30919]:ForStatement[30770-31006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30714-30919]:Block[30801-31006]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[30728-30799]:IfStatement[30815-30886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30739-30799]:Block[30826-30886]"
    }, {
      "left" : "buf.append(',').append(' ');",
      "right" : "buf.append(',').append(' ');",
      "info" : "ExpressionStatement[30757-30785]:ExpressionStatement[30844-30872]"
    }, {
      "left" : "buf.append(iTypes[i].getName());",
      "right" : "buf.append(iTypes[i].getName());",
      "info" : "ExpressionStatement[30812-30844]:ExpressionStatement[30899-30931]"
    }, {
      "left" : "buf.append('=');",
      "right" : "buf.append('=');",
      "info" : "ExpressionStatement[30857-30873]:ExpressionStatement[30944-30960]"
    }, {
      "left" : "buf.append(iValues[i]);",
      "right" : "buf.append(iValues[i]);",
      "info" : "ExpressionStatement[30886-30909]:ExpressionStatement[30973-30996]"
    }, {
      "left" : "buf.append(']');",
      "right" : "buf.append(']');",
      "info" : "ExpressionStatement[30928-30944]:ExpressionStatement[31015-31031]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[30953-30975]:ReturnStatement[31040-31062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31312-31454]:Block[31399-31541]"
    }, {
      "left" : "if (pattern == null)",
      "right" : "if (pattern == null)",
      "info" : "IfStatement[31322-31385]:IfStatement[31409-31472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31343-31385]:Block[31430-31472]"
    }, {
      "left" : "return toString();",
      "right" : "return toString();",
      "info" : "ReturnStatement[31357-31375]:ReturnStatement[31444-31462]"
    }, {
      "left" : "return DateTimeFormat.forPattern(pattern).print(this);",
      "right" : "return DateTimeFormat.forPattern(pattern).print(this);",
      "info" : "ReturnStatement[31394-31448]:ReturnStatement[31481-31535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31856-32017]:Block[31943-32104]"
    }, {
      "left" : "if (pattern == null)",
      "right" : "if (pattern == null)",
      "info" : "IfStatement[31866-31929]:IfStatement[31953-32016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31887-31929]:Block[31974-32016]"
    }, {
      "left" : "return toString();",
      "right" : "return toString();",
      "info" : "ReturnStatement[31901-31919]:ReturnStatement[31988-32006]"
    }, {
      "left" : "return DateTimeFormat.forPattern(pattern).withLocale(locale).print(this);",
      "right" : "return DateTimeFormat.forPattern(pattern).withLocale(locale).print(this);",
      "info" : "ReturnStatement[31938-32011]:ReturnStatement[32025-32098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32882-32984]:Block[32969-33071]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[32896-32904]:SuperConstructorInvocation[32983-32991]"
    }, {
      "left" : "iPartial = partial;",
      "right" : "iPartial = partial;",
      "info" : "ExpressionStatement[32917-32936]:ExpressionStatement[33004-33023]"
    }, {
      "left" : "iFieldIndex = fieldIndex;",
      "right" : "iFieldIndex = fieldIndex;",
      "info" : "ExpressionStatement[32949-32974]:ExpressionStatement[33036-33061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33142-33204]:Block[33229-33291]"
    }, {
      "left" : "return iPartial.getField(iFieldIndex);",
      "right" : "return iPartial.getField(iFieldIndex);",
      "info" : "ReturnStatement[33156-33194]:ReturnStatement[33243-33281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33387-33427]:Block[33474-33514]"
    }, {
      "left" : "return iPartial;",
      "right" : "return iPartial;",
      "info" : "ReturnStatement[33401-33417]:ReturnStatement[33488-33504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33591-33631]:Block[33678-33718]"
    }, {
      "left" : "return iPartial;",
      "right" : "return iPartial;",
      "info" : "ReturnStatement[33605-33621]:ReturnStatement[33692-33708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33770-33832]:Block[33857-33919]"
    }, {
      "left" : "return iPartial.getValue(iFieldIndex);",
      "right" : "return iPartial.getValue(iFieldIndex);",
      "info" : "ReturnStatement[33784-33822]:ReturnStatement[33871-33909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34773-34975]:Block[34860-35062]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[34787-34826]:VariableDeclarationStatement[34874-34913]"
    }, {
      "left" : "newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd);",
      "right" : "newValues = getField().add(iPartial, iFieldIndex, newValues, valueToAdd);",
      "info" : "ExpressionStatement[34839-34912]:ExpressionStatement[34926-34999]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[34925-34965]:ReturnStatement[35012-35052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35899-36110]:Block[35986-36197]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[35913-35952]:VariableDeclarationStatement[36000-36039]"
    }, {
      "left" : "newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd);",
      "right" : "newValues = getField().addWrapField(iPartial, iFieldIndex, newValues, valueToAdd);",
      "info" : "ExpressionStatement[35965-36047]:ExpressionStatement[36052-36134]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[36060-36100]:ReturnStatement[36147-36187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36670-36867]:Block[36757-36954]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[36684-36723]:VariableDeclarationStatement[36771-36810]"
    }, {
      "left" : "newValues = getField().set(iPartial, iFieldIndex, newValues, value);",
      "right" : "newValues = getField().set(iPartial, iFieldIndex, newValues, value);",
      "info" : "ExpressionStatement[36736-36804]:ExpressionStatement[36823-36891]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[36817-36857]:ReturnStatement[36904-36944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37446-37650]:Block[37533-37737]"
    }, {
      "left" : "int[] newValues = iPartial.getValues();",
      "right" : "int[] newValues = iPartial.getValues();",
      "info" : "VariableDeclarationStatement[37460-37499]:VariableDeclarationStatement[37547-37586]"
    }, {
      "left" : "newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale);",
      "right" : "newValues = getField().set(iPartial, iFieldIndex, newValues, text, locale);",
      "info" : "ExpressionStatement[37512-37587]:ExpressionStatement[37599-37674]"
    }, {
      "left" : "return new Partial(iPartial, newValues);",
      "right" : "return new Partial(iPartial, newValues);",
      "info" : "ReturnStatement[37600-37640]:ReturnStatement[37687-37727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38137-38188]:Block[38224-38275]"
    }, {
      "left" : "return setCopy(text, null);",
      "right" : "return setCopy(text, null);",
      "info" : "ReturnStatement[38151-38178]:ReturnStatement[38238-38265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38639-38697]:Block[38726-38784]"
    }, {
      "left" : "return setCopy(getMaximumValue());",
      "right" : "return setCopy(getMaximumValue());",
      "info" : "ReturnStatement[38653-38687]:ReturnStatement[38740-38774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39066-39124]:Block[39153-39211]"
    }, {
      "left" : "return setCopy(getMinimumValue());",
      "right" : "return setCopy(getMinimumValue());",
      "info" : "ReturnStatement[39080-39114]:ReturnStatement[39167-39201]"
    } ]
  },
  "interFileMappings" : { }
}