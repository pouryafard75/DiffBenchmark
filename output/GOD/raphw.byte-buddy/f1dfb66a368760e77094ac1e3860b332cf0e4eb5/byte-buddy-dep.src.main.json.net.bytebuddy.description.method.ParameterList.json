{
  "matchedElements" : [ {
    "left" : "interface : ParameterList",
    "right" : "interface : ParameterList",
    "info" : "TypeDeclaration[682-12483]:TypeDeclaration[682-12019]"
  }, {
    "left" : "public asTypeList() : ",
    "right" : "public asTypeList() : ",
    "info" : "MethodDeclaration[853-882]:MethodDeclaration[853-882]"
  }, {
    "left" : "public hasExplicitMetaData() : boolean",
    "right" : "public hasExplicitMetaData() : boolean",
    "info" : "MethodDeclaration[888-1155]:MethodDeclaration[888-1155]"
  }, {
    "left" : "class : AbstractBase",
    "right" : "class : AbstractBase",
    "info" : "TypeDeclaration[1161-1700]:TypeDeclaration[1161-1844]"
  }, {
    "left" : "public hasExplicitMetaData() : boolean",
    "right" : "public hasExplicitMetaData() : boolean",
    "info" : "MethodDeclaration[1373-1694]:MethodDeclaration[1373-1694]"
  }, {
    "left" : "class : ForLoadedExecutable",
    "right" : "class : ForLoadedExecutable",
    "info" : "TypeDeclaration[1706-9345]:TypeDeclaration[1850-9025]"
  }, {
    "left" : "GET_PARAMETERS",
    "right" : "GET_PARAMETERS",
    "info" : "FieldDeclaration[1927-2093]:FieldDeclaration[2071-2237]"
  }, {
    "left" : "parameter",
    "right" : "parameter",
    "info" : "FieldDeclaration[2732-2875]:FieldDeclaration[2876-3019]"
  }, {
    "left" : "protected ForLoadedExecutable(parameter )",
    "right" : "protected ForLoadedExecutable(parameter )",
    "info" : "MethodDeclaration[2885-3201]:MethodDeclaration[3029-3345]"
  }, {
    "left" : "public of(method ) : ",
    "right" : "public of(method ) : ",
    "info" : "MethodDeclaration[3211-3655]:MethodDeclaration[3355-3799]"
  }, {
    "left" : "public of(constructor ) : ",
    "right" : "public of(constructor ) : ",
    "info" : "MethodDeclaration[3665-4157]:MethodDeclaration[3809-4301]"
  }, {
    "left" : "public get(index int) : ",
    "right" : "public get(index int) : ",
    "info" : "MethodDeclaration[4167-4328]:MethodDeclaration[4311-4472]"
  }, {
    "left" : "public size() : int",
    "right" : "public size() : int",
    "info" : "MethodDeclaration[4338-4422]:MethodDeclaration[4482-4566]"
  }, {
    "left" : "public asTypeList() : ",
    "right" : "public asTypeList() : ",
    "info" : "MethodDeclaration[4432-4823]:MethodDeclaration[4576-4967]"
  }, {
    "left" : "protected wrap(values ...) : ",
    "right" : "protected wrap(values ...) : ",
    "info" : "MethodDeclaration[4833-4967]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "class : OfLegacyVmMethod",
    "right" : "class : OfLegacyVmMethod",
    "info" : "TypeDeclaration[4977-7104]:TypeDeclaration[4977-6944]"
  }, {
    "left" : "method",
    "right" : "method",
    "info" : "FieldDeclaration[5241-5340]:FieldDeclaration[5241-5340]"
  }, {
    "left" : "parameterType",
    "right" : "parameterType",
    "info" : "FieldDeclaration[5354-5483]:FieldDeclaration[5354-5483]"
  }, {
    "left" : "parameterAnnotation",
    "right" : "parameterAnnotation",
    "info" : "FieldDeclaration[5497-5658]:FieldDeclaration[5497-5658]"
  }, {
    "left" : "protected OfLegacyVmMethod(method )",
    "right" : "protected OfLegacyVmMethod(method )",
    "info" : "MethodDeclaration[5672-6083]:MethodDeclaration[5672-6083]"
  }, {
    "left" : "protected wrap(values ...) : ",
    "right" : "protected wrap(values ...) : ",
    "info" : "MethodDeclaration[6097-6243]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "public get(index int) : ",
    "right" : "public get(index int) : ",
    "info" : "MethodDeclaration[6257-6487]:MethodDeclaration[6097-6327]"
  }, {
    "left" : "public size() : int",
    "right" : "public size() : int",
    "info" : "MethodDeclaration[6501-6601]:MethodDeclaration[6341-6441]"
  }, {
    "left" : "public asTypeList() : ",
    "right" : "public asTypeList() : ",
    "info" : "MethodDeclaration[6615-7094]:MethodDeclaration[6455-6934]"
  }, {
    "left" : "class : OfLegacyVmConstructor",
    "right" : "class : OfLegacyVmConstructor",
    "info" : "TypeDeclaration[7114-9339]:TypeDeclaration[6954-9019]"
  }, {
    "left" : "constructor",
    "right" : "constructor",
    "info" : "FieldDeclaration[7388-7505]:FieldDeclaration[7228-7345]"
  }, {
    "left" : "parameterType",
    "right" : "parameterType",
    "info" : "FieldDeclaration[7519-7648]:FieldDeclaration[7359-7488]"
  }, {
    "left" : "parameterAnnotation",
    "right" : "parameterAnnotation",
    "info" : "FieldDeclaration[7662-7823]:FieldDeclaration[7502-7663]"
  }, {
    "left" : "public OfLegacyVmConstructor(constructor )",
    "right" : "public OfLegacyVmConstructor(constructor )",
    "info" : "MethodDeclaration[7837-8298]:MethodDeclaration[7677-8138]"
  }, {
    "left" : "protected wrap(values ...) : ",
    "right" : "protected wrap(values ...) : ",
    "info" : "MethodDeclaration[8312-8458]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "public get(index int) : ",
    "right" : "public get(index int) : ",
    "info" : "MethodDeclaration[8472-8712]:MethodDeclaration[8152-8392]"
  }, {
    "left" : "public size() : int",
    "right" : "public size() : int",
    "info" : "MethodDeclaration[8726-8826]:MethodDeclaration[8406-8506]"
  }, {
    "left" : "public asTypeList() : ",
    "right" : "public asTypeList() : ",
    "info" : "MethodDeclaration[8840-9329]:MethodDeclaration[8520-9009]"
  }, {
    "left" : "class : Explicit",
    "right" : "class : Explicit",
    "info" : "TypeDeclaration[9351-12089]:TypeDeclaration[9031-11625]"
  }, {
    "left" : "parameterDescriptions",
    "right" : "parameterDescriptions",
    "info" : "FieldDeclaration[9475-9653]:FieldDeclaration[9155-9333]"
  }, {
    "left" : "public Explicit(parameterDescriptions ...)",
    "right" : "public Explicit(parameterDescriptions ...)",
    "info" : "MethodDeclaration[9663-10055]:MethodDeclaration[9343-9735]"
  }, {
    "left" : "public latent(declaringMethod , parameterTypes ...) : ",
    "right" : "public latent(declaringMethod , parameterTypes ...) : ",
    "info" : "MethodDeclaration[10065-11290]:MethodDeclaration[9745-10970]"
  }, {
    "left" : "public get(index int) : ",
    "right" : "public get(index int) : ",
    "info" : "MethodDeclaration[11300-11425]:MethodDeclaration[10980-11105]"
  }, {
    "left" : "public size() : int",
    "right" : "public size() : int",
    "info" : "MethodDeclaration[11435-11531]:MethodDeclaration[11115-11211]"
  }, {
    "left" : "public asTypeList() : ",
    "right" : "public asTypeList() : ",
    "info" : "MethodDeclaration[11541-11939]:MethodDeclaration[11221-11619]"
  }, {
    "left" : "protected wrap(values ...) : ",
    "right" : "protected wrap(values ...) : ",
    "info" : "MethodDeclaration[11949-12083]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "class : Empty",
    "right" : "class : Empty",
    "info" : "TypeDeclaration[12095-12481]:TypeDeclaration[11631-12017]"
  }, {
    "left" : "public hasExplicitMetaData() : boolean",
    "right" : "public hasExplicitMetaData() : boolean",
    "info" : "MethodDeclaration[12261-12352]:MethodDeclaration[11797-11888]"
  }, {
    "left" : "public asTypeList() : ",
    "right" : "public asTypeList() : ",
    "info" : "MethodDeclaration[12362-12475]:MethodDeclaration[11898-12011]"
  } ],
  "mappings" : [ {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1428-1694]:Block[1428-1694]"
  }, {
    "left" : "for (ParameterDescription parameterDescription : this)",
    "right" : "for (ParameterDescription parameterDescription : this)",
    "info" : "EnhancedForStatement[1442-1659]:EnhancedForStatement[1442-1659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1497-1659]:Block[1497-1659]"
  }, {
    "left" : "if (!parameterDescription.isNamed() || !parameterDescription.hasModifiers())",
    "right" : "if (!parameterDescription.isNamed() || !parameterDescription.hasModifiers())",
    "info" : "IfStatement[1515-1645]:IfStatement[1515-1645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1592-1645]:Block[1592-1645]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[1614-1627]:ReturnStatement[1614-1627]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[1672-1684]:ReturnStatement[1672-1684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2277-2722]:Block[2421-2866]"
  }, {
    "left" : "JavaMethod getParameters;",
    "right" : "JavaMethod getParameters;",
    "info" : "VariableDeclarationStatement[2291-2316]:VariableDeclarationStatement[2435-2460]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[2329-2668]:TryStatement[2473-2812]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2333-2552]:Block[2477-2696]"
  }, {
    "left" : "Class<?> executableType = Class.forName(\"java.lang.reflect.Executable\");",
    "right" : "Class<?> executableType = Class.forName(\"java.lang.reflect.Executable\");",
    "info" : "VariableDeclarationStatement[2351-2423]:VariableDeclarationStatement[2495-2567]"
  }, {
    "left" : "getParameters = new JavaMethod.ForLoadedMethod(executableType.getDeclaredMethod(\"getParameters\"));",
    "right" : "getParameters = new JavaMethod.ForLoadedMethod(executableType.getDeclaredMethod(\"getParameters\"));",
    "info" : "ExpressionStatement[2440-2538]:ExpressionStatement[2584-2682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2579-2668]:Block[2723-2812]"
  }, {
    "left" : "getParameters = JavaMethod.ForUnavailableMethod.INSTANCE;",
    "right" : "getParameters = JavaMethod.ForUnavailableMethod.INSTANCE;",
    "info" : "ExpressionStatement[2597-2654]:ExpressionStatement[2741-2798]"
  }, {
    "left" : "GET_PARAMETERS = getParameters;",
    "right" : "GET_PARAMETERS = getParameters;",
    "info" : "ExpressionStatement[2681-2712]:ExpressionStatement[2825-2856]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3150-3201]:Block[3294-3345]"
  }, {
    "left" : "this.parameter = parameter;",
    "right" : "this.parameter = parameter;",
    "info" : "ExpressionStatement[3164-3191]:ExpressionStatement[3308-3335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3456-3655]:Block[3600-3799]"
  }, {
    "left" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(method))\n                    : new OfLegacyVmMethod(method);",
    "right" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(method))\n                    : new OfLegacyVmMethod(method);",
    "info" : "ReturnStatement[3470-3645]:ReturnStatement[3614-3789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3943-4157]:Block[4087-4301]"
  }, {
    "left" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(constructor))\n                    : new OfLegacyVmConstructor(constructor);",
    "right" : "return GET_PARAMETERS.isInvokable()\n                    ? new ForLoadedExecutable((Object[]) GET_PARAMETERS.invoke(constructor))\n                    : new OfLegacyVmConstructor(constructor);",
    "info" : "ReturnStatement[3957-4147]:ReturnStatement[4101-4291]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4228-4328]:Block[4372-4472]"
  }, {
    "left" : "return new ParameterDescription.ForLoadedParameter(parameter[index], index);",
    "right" : "return new ParameterDescription.ForLoadedParameter(parameter[index], index);",
    "info" : "ReturnStatement[4242-4318]:ReturnStatement[4386-4462]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4374-4422]:Block[4518-4566]"
  }, {
    "left" : "return parameter.length;",
    "right" : "return parameter.length;",
    "info" : "ReturnStatement[4388-4412]:ReturnStatement[4532-4556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4486-4823]:Block[4630-4967]"
  }, {
    "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameter.length);",
    "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameter.length);",
    "info" : "VariableDeclarationStatement[4500-4593]:VariableDeclarationStatement[4644-4737]"
  }, {
    "left" : "for (Object aParameter : parameter)",
    "right" : "for (Object aParameter : parameter)",
    "info" : "EnhancedForStatement[4606-4757]:EnhancedForStatement[4750-4901]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4642-4757]:Block[4786-4901]"
  }, {
    "left" : "types.add(new GenericTypeDescription.LazyProjection.OfLoadedParameter(aParameter));",
    "right" : "types.add(new GenericTypeDescription.LazyProjection.OfLoadedParameter(aParameter));",
    "info" : "ExpressionStatement[4660-4743]:ExpressionStatement[4804-4887]"
  }, {
    "left" : "return new GenericTypeList.Explicit(types);",
    "right" : "return new GenericTypeList.Explicit(types);",
    "info" : "ReturnStatement[4770-4813]:ReturnStatement[4914-4957]"
  }, {
    "left" : "@Override\n        protected ParameterList wrap(List<ParameterDescription> values) {\n            return new Explicit(values);\n        }",
    "right" : "@Override\n        protected ParameterList wrap(List<ParameterDescription> values) {\n            return new Explicit(values);\n        }",
    "info" : "MethodDeclaration[4833-4967]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4915-4967]:Block[1786-1838]"
  }, {
    "left" : "return new Explicit(values);",
    "right" : "return new Explicit(values);",
    "info" : "ReturnStatement[4929-4957]:ReturnStatement[1800-1828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5888-6083]:Block[5888-6083]"
  }, {
    "left" : "this.method = method;",
    "right" : "this.method = method;",
    "info" : "ExpressionStatement[5906-5927]:ExpressionStatement[5906-5927]"
  }, {
    "left" : "this.parameterType = method.getParameterTypes();",
    "right" : "this.parameterType = method.getParameterTypes();",
    "info" : "ExpressionStatement[5944-5992]:ExpressionStatement[5944-5992]"
  }, {
    "left" : "this.parameterAnnotation = method.getParameterAnnotations();",
    "right" : "this.parameterAnnotation = method.getParameterAnnotations();",
    "info" : "ExpressionStatement[6009-6069]:ExpressionStatement[6009-6069]"
  }, {
    "left" : "@Override\n            protected ParameterList wrap(List<ParameterDescription> values) {\n                return new Explicit(values);\n            }",
    "right" : "@Override\n        protected ParameterList wrap(List<ParameterDescription> values) {\n            return new Explicit(values);\n        }",
    "info" : "MethodDeclaration[6097-6243]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6183-6243]:Block[1786-1838]"
  }, {
    "left" : "return new Explicit(values);",
    "right" : "return new Explicit(values);",
    "info" : "ReturnStatement[6201-6229]:ReturnStatement[1800-1828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6322-6487]:Block[6162-6327]"
  }, {
    "left" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmMethod(method, index, parameterType[index], parameterAnnotation[index]);",
    "right" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmMethod(method, index, parameterType[index], parameterAnnotation[index]);",
    "info" : "ReturnStatement[6340-6473]:ReturnStatement[6180-6313]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6541-6601]:Block[6381-6441]"
  }, {
    "left" : "return parameterType.length;",
    "right" : "return parameterType.length;",
    "info" : "ReturnStatement[6559-6587]:ReturnStatement[6399-6427]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6673-7094]:Block[6513-6934]"
  }, {
    "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
    "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
    "info" : "VariableDeclarationStatement[6691-6788]:VariableDeclarationStatement[6531-6628]"
  }, {
    "left" : "for (int index = 0; index < parameterType.length; index++)",
    "right" : "for (int index = 0; index < parameterType.length; index++)",
    "info" : "ForStatement[6805-7020]:ForStatement[6645-6860]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6864-7020]:Block[6704-6860]"
  }, {
    "left" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmMethodParameter(method, index, parameterType[index]));",
    "right" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmMethodParameter(method, index, parameterType[index]));",
    "info" : "ExpressionStatement[6886-7002]:ExpressionStatement[6726-6842]"
  }, {
    "left" : "return new GenericTypeList.Explicit(types);",
    "right" : "return new GenericTypeList.Explicit(types);",
    "info" : "ReturnStatement[7037-7080]:ReturnStatement[6877-6920]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8083-8298]:Block[7923-8138]"
  }, {
    "left" : "this.constructor = constructor;",
    "right" : "this.constructor = constructor;",
    "info" : "ExpressionStatement[8101-8132]:ExpressionStatement[7941-7972]"
  }, {
    "left" : "this.parameterType = constructor.getParameterTypes();",
    "right" : "this.parameterType = constructor.getParameterTypes();",
    "info" : "ExpressionStatement[8149-8202]:ExpressionStatement[7989-8042]"
  }, {
    "left" : "this.parameterAnnotation = constructor.getParameterAnnotations();",
    "right" : "this.parameterAnnotation = constructor.getParameterAnnotations();",
    "info" : "ExpressionStatement[8219-8284]:ExpressionStatement[8059-8124]"
  }, {
    "left" : "@Override\n            protected ParameterList wrap(List<ParameterDescription> values) {\n                return new Explicit(values);\n            }",
    "right" : "@Override\n        protected ParameterList wrap(List<ParameterDescription> values) {\n            return new Explicit(values);\n        }",
    "info" : "MethodDeclaration[8312-8458]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8398-8458]:Block[1786-1838]"
  }, {
    "left" : "return new Explicit(values);",
    "right" : "return new Explicit(values);",
    "info" : "ReturnStatement[8416-8444]:ReturnStatement[1800-1828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8537-8712]:Block[8217-8392]"
  }, {
    "left" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmConstructor(constructor, index, parameterType[index], parameterAnnotation[index]);",
    "right" : "return new ParameterDescription.ForLoadedParameter.OfLegacyVmConstructor(constructor, index, parameterType[index], parameterAnnotation[index]);",
    "info" : "ReturnStatement[8555-8698]:ReturnStatement[8235-8378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8766-8826]:Block[8446-8506]"
  }, {
    "left" : "return parameterType.length;",
    "right" : "return parameterType.length;",
    "info" : "ReturnStatement[8784-8812]:ReturnStatement[8464-8492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8898-9329]:Block[8578-9009]"
  }, {
    "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
    "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterType.length);",
    "info" : "VariableDeclarationStatement[8916-9013]:VariableDeclarationStatement[8596-8693]"
  }, {
    "left" : "for (int index = 0; index < parameterType.length; index++)",
    "right" : "for (int index = 0; index < parameterType.length; index++)",
    "info" : "ForStatement[9030-9255]:ForStatement[8710-8935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9089-9255]:Block[8769-8935]"
  }, {
    "left" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmConstructorParameter(constructor, index, parameterType[index]));",
    "right" : "types.add(new GenericTypeDescription.LazyProjection.OfLegacyVmConstructorParameter(constructor, index, parameterType[index]));",
    "info" : "ExpressionStatement[9111-9237]:ExpressionStatement[8791-8917]"
  }, {
    "left" : "return new GenericTypeList.Explicit(types);",
    "right" : "return new GenericTypeList.Explicit(types);",
    "info" : "ReturnStatement[9272-9315]:ReturnStatement[8952-8995]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9950-10055]:Block[9630-9735]"
  }, {
    "left" : "this.parameterDescriptions = Collections.unmodifiableList(parameterDescriptions);",
    "right" : "this.parameterDescriptions = Collections.unmodifiableList(parameterDescriptions);",
    "info" : "ExpressionStatement[9964-10045]:ExpressionStatement[9644-9725]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10517-11290]:Block[10197-10970]"
  }, {
    "left" : "List<ParameterDescription> parameterDescriptions = new ArrayList<ParameterDescription>(parameterTypes.size());",
    "right" : "List<ParameterDescription> parameterDescriptions = new ArrayList<ParameterDescription>(parameterTypes.size());",
    "info" : "VariableDeclarationStatement[10531-10641]:VariableDeclarationStatement[10211-10321]"
  }, {
    "left" : "int index = 0, offset = declaringMethod.isStatic()\n                    ? StackSize.ZERO.getSize()\n                    : StackSize.SINGLE.getSize();",
    "right" : "int index = 0, offset = declaringMethod.isStatic()\n                    ? StackSize.ZERO.getSize()\n                    : StackSize.SINGLE.getSize();",
    "info" : "VariableDeclarationStatement[10654-10801]:VariableDeclarationStatement[10334-10481]"
  }, {
    "left" : "for (GenericTypeDescription parameterType : parameterTypes)",
    "right" : "for (GenericTypeDescription parameterType : parameterTypes)",
    "info" : "EnhancedForStatement[10814-11224]:EnhancedForStatement[10494-10904]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10874-11224]:Block[10554-10904]"
  }, {
    "left" : "parameterDescriptions.add(new ParameterDescription.Latent(declaringMethod,\n                        parameterType,\n                        Collections.<AnnotationDescription>emptyList(),\n                        index++,\n                        offset));",
    "right" : "parameterDescriptions.add(new ParameterDescription.Latent(declaringMethod,\n                        parameterType,\n                        Collections.<AnnotationDescription>emptyList(),\n                        index++,\n                        offset));",
    "info" : "ExpressionStatement[10892-11144]:ExpressionStatement[10572-10824]"
  }, {
    "left" : "offset += parameterType.getStackSize().getSize();",
    "right" : "offset += parameterType.getStackSize().getSize();",
    "info" : "ExpressionStatement[11161-11210]:ExpressionStatement[10841-10890]"
  }, {
    "left" : "return new Explicit(parameterDescriptions);",
    "right" : "return new Explicit(parameterDescriptions);",
    "info" : "ReturnStatement[11237-11280]:ReturnStatement[10917-10960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11361-11425]:Block[11041-11105]"
  }, {
    "left" : "return parameterDescriptions.get(index);",
    "right" : "return parameterDescriptions.get(index);",
    "info" : "ReturnStatement[11375-11415]:ReturnStatement[11055-11095]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11471-11531]:Block[11151-11211]"
  }, {
    "left" : "return parameterDescriptions.size();",
    "right" : "return parameterDescriptions.size();",
    "info" : "ReturnStatement[11485-11521]:ReturnStatement[11165-11201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11595-11939]:Block[11275-11619]"
  }, {
    "left" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterDescriptions.size());",
    "right" : "List<GenericTypeDescription> types = new ArrayList<GenericTypeDescription>(parameterDescriptions.size());",
    "info" : "VariableDeclarationStatement[11609-11714]:VariableDeclarationStatement[11289-11394]"
  }, {
    "left" : "for (ParameterDescription parameterDescription : parameterDescriptions)",
    "right" : "for (ParameterDescription parameterDescription : parameterDescriptions)",
    "info" : "EnhancedForStatement[11727-11873]:EnhancedForStatement[11407-11553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11799-11873]:Block[11479-11553]"
  }, {
    "left" : "types.add(parameterDescription.getType());",
    "right" : "types.add(parameterDescription.getType());",
    "info" : "ExpressionStatement[11817-11859]:ExpressionStatement[11497-11539]"
  }, {
    "left" : "return new GenericTypeList.Explicit(types);",
    "right" : "return new GenericTypeList.Explicit(types);",
    "info" : "ReturnStatement[11886-11929]:ReturnStatement[11566-11609]"
  }, {
    "left" : "@Override\n        protected ParameterList wrap(List<ParameterDescription> values) {\n            return new Explicit(values);\n        }",
    "right" : "@Override\n        protected ParameterList wrap(List<ParameterDescription> values) {\n            return new Explicit(values);\n        }",
    "info" : "MethodDeclaration[11949-12083]:MethodDeclaration[1704-1838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12031-12083]:Block[1786-1838]"
  }, {
    "left" : "return new Explicit(values);",
    "right" : "return new Explicit(values);",
    "info" : "ReturnStatement[12045-12073]:ReturnStatement[1800-1828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12316-12352]:Block[11852-11888]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[12330-12342]:ReturnStatement[11866-11878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12416-12475]:Block[11952-12011]"
  }, {
    "left" : "return new GenericTypeList.Empty();",
    "right" : "return new GenericTypeList.Empty();",
    "info" : "ReturnStatement[12430-12465]:ReturnStatement[11966-12001]"
  } ]
}