{
  "matchedElements" : [
 {
    "left" : "class : DateTimeZone",
    "right" : "class : DateTimeZone",
    "info" : "TypeDeclaration[1531-50572]:TypeDeclaration[1531-50889]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[3645-3745]:FieldDeclaration[3645-3745]"
  }, {
    "left" : "UTC",
    "right" : "UTC",
    "info" : "FieldDeclaration[3751-3888]:FieldDeclaration[3751-3888]"
  }, {
    "left" : "cProvider",
    "right" : "cProvider",
    "info" : "FieldDeclaration[3921-4009]:FieldDeclaration[3983-4071]"
  }, {
    "left" : "cNameProvider",
    "right" : "cNameProvider",
    "info" : "FieldDeclaration[4014-4115]:FieldDeclaration[4076-4177]"
  }, {
    "left" : "cAvailableIDs",
    "right" : "cAvailableIDs",
    "info" : "FieldDeclaration[4120-4195]:FieldDeclaration[4182-4257]"
  }, {
    "left" : "cDefault",
    "right" : "cDefault",
    "info" : "FieldDeclaration[4200-4280]:FieldDeclaration[4262-4342]"
  }, {
    "left" : "cOffsetFormatter",
    "right" : "cOffsetFormatter",
    "info" : "FieldDeclaration[4285-4390]:FieldDeclaration[4347-4452]"
  }, {
    "left" : "iFixedOffsetCache",
    "right" : "iFixedOffsetCache",
    "info" : "FieldDeclaration[4396-4553]:FieldDeclaration[4458-4615]"
  }, {
    "left" : "cZoneIdConversion",
    "right" : "cZoneIdConversion",
    "info" : "FieldDeclaration[4559-4661]:FieldDeclaration[4621-4723]"
  }, {
    "left" : "public getDefault() : ",
    "right" : "public getDefault() : ",
    "info" : "MethodDeclaration[4825-6517]:MethodDeclaration[4887-6579]"
  }, {
    "left" : "public setDefault(zone ) : void",
    "right" : "public setDefault(zone ) : void",
    "info" : "MethodDeclaration[6523-7366]:MethodDeclaration[6585-7428]"
  }, {
    "left" : "public forID(id ) : ",
    "right" : "public forID(id ) : ",
    "info" : "MethodDeclaration[7450-8885]:MethodDeclaration[7512-8947]"
  }, {
    "left" : "public forOffsetHours(hoursOffset int) : ",
    "right" : "public forOffsetHours(hoursOffset int) : ",
    "info" : "MethodDeclaration[8891-9493]:MethodDeclaration[8953-9555]"
  }, {
    "left" : "public forOffsetHoursMinutes(hoursOffset int, minutesOffset int) : ",
    "right" : "public forOffsetHoursMinutes(hoursOffset int, minutesOffset int) : ",
    "info" : "MethodDeclaration[9499-11241]:MethodDeclaration[9561-11389]"
  }, {
    "left" : "public forOffsetMillis(millisOffset int) : ",
    "right" : "public forOffsetMillis(millisOffset int) : ",
    "info" : "MethodDeclaration[11247-11666]:MethodDeclaration[11395-11983]"
  }, {
    "left" : "public forTimeZone(zone ) : ",
    "right" : "public forTimeZone(zone ) : ",
    "info" : "MethodDeclaration[11672-13621]:MethodDeclaration[11989-13938]"
  }, {
    "left" : "private fixedOffsetZone(id , offset int) : ",
    "right" : "private fixedOffsetZone(id , offset int) : ",
    "info" : "MethodDeclaration[13705-14565]:MethodDeclaration[14022-14882]"
  }, {
    "left" : "public getAvailableIDs() : ",
    "right" : "public getAvailableIDs() : ",
    "info" : "MethodDeclaration[14571-14770]:MethodDeclaration[14888-15087]"
  }, {
    "left" : "public getProvider() : ",
    "right" : "public getProvider() : ",
    "info" : "MethodDeclaration[14854-15142]:MethodDeclaration[15171-15459]"
  }, {
    "left" : "public setProvider(provider ) : void",
    "right" : "public setProvider(provider ) : void",
    "info" : "MethodDeclaration[15148-15850]:MethodDeclaration[15465-16167]"
  }, {
    "left" : "private setProvider0(provider ) : void",
    "right" : "private setProvider0(provider ) : void",
    "info" : "MethodDeclaration[15856-16781]:MethodDeclaration[16173-17098]"
  }, {
    "left" : "private getDefaultProvider() : ",
    "right" : "private getDefaultProvider() : ",
    "info" : "MethodDeclaration[16787-18198]:MethodDeclaration[17104-18515]"
  }, {
    "left" : "public getNameProvider() : ",
    "right" : "public getNameProvider() : ",
    "info" : "MethodDeclaration[18282-18576]:MethodDeclaration[18599-18893]"
  }, {
    "left" : "public setNameProvider(nameProvider ) : void",
    "right" : "public setNameProvider(nameProvider ) : void",
    "info" : "MethodDeclaration[18582-19310]:MethodDeclaration[18899-19627]"
  }, {
    "left" : "private setNameProvider0(nameProvider ) : void",
    "right" : "private setNameProvider0(nameProvider ) : void",
    "info" : "MethodDeclaration[19316-19757]:MethodDeclaration[19633-20074]"
  }, {
    "left" : "private getDefaultNameProvider() : ",
    "right" : "private getDefaultNameProvider() : ",
    "info" : "MethodDeclaration[19763-20799]:MethodDeclaration[20080-21116]"
  }, {
    "left" : "private getConvertedId(id ) : ",
    "right" : "private getConvertedId(id ) : ",
    "info" : "MethodDeclaration[20883-22942]:MethodDeclaration[21200-23259]"
  }, {
    "left" : "private parseOffset(str ) : int",
    "right" : "private parseOffset(str ) : int",
    "info" : "MethodDeclaration[22948-23641]:MethodDeclaration[23265-23958]"
  }, {
    "left" : "public getZone() : ",
    "right" : "public getZone() : ",
    "info" : "MethodDeclaration[23183-23257]:MethodDeclaration[23500-23574]"
  }, {
    "left" : "public withUTC() : ",
    "right" : "public withUTC() : ",
    "info" : "MethodDeclaration[23270-23342]:MethodDeclaration[23587-23659]"
  }, {
    "left" : "public withZone(zone ) : ",
    "right" : "public withZone(zone ) : ",
    "info" : "MethodDeclaration[23355-23445]:MethodDeclaration[23672-23762]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[23458-23543]:MethodDeclaration[23775-23860]"
  }, {
    "left" : "private printOffset(offset int) : ",
    "right" : "private printOffset(offset int) : ",
    "info" : "MethodDeclaration[23647-25049]:MethodDeclaration[23964-25366]"
  }, {
    "left" : "private offsetFormatter() : ",
    "right" : "private offsetFormatter() : ",
    "info" : "MethodDeclaration[25055-25480]:MethodDeclaration[25372-25797]"
  }, {
    "left" : "iID",
    "right" : "iID",
    "info" : "FieldDeclaration[25597-25622]:FieldDeclaration[25914-25939]"
  }, {
    "left" : "protected DateTimeZone(id )",
    "right" : "protected DateTimeZone(id )",
    "info" : "MethodDeclaration[25628-25928]:MethodDeclaration[25945-26245]"
  }, {
    "left" : "public getID() : ",
    "right" : "public getID() : ",
    "info" : "MethodDeclaration[26035-26214]:MethodDeclaration[26352-26531]"
  }, {
    "left" : "public abstract getNameKey(instant long) : ",
    "right" : "public abstract getNameKey(instant long) : ",
    "info" : "MethodDeclaration[26220-26591]:MethodDeclaration[26537-26908]"
  }, {
    "left" : "public getShortName(instant long) : ",
    "right" : "public getShortName(instant long) : ",
    "info" : "MethodDeclaration[26597-27113]:MethodDeclaration[26914-27430]"
  }, {
    "left" : "public getShortName(instant long, locale ) : ",
    "right" : "public getShortName(instant long, locale ) : ",
    "info" : "MethodDeclaration[27119-28033]:MethodDeclaration[27436-28350]"
  }, {
    "left" : "public getName(instant long) : ",
    "right" : "public getName(instant long) : ",
    "info" : "MethodDeclaration[28039-28543]:MethodDeclaration[28356-28860]"
  }, {
    "left" : "public getName(instant long, locale ) : ",
    "right" : "public getName(instant long, locale ) : ",
    "info" : "MethodDeclaration[28549-29451]:MethodDeclaration[28866-29768]"
  }, {
    "left" : "public abstract getOffset(instant long) : int",
    "right" : "public abstract getOffset(instant long) : int",
    "info" : "MethodDeclaration[29457-29747]:MethodDeclaration[29774-30064]"
  }, {
    "left" : "public getOffset(instant ) : int",
    "right" : "public getOffset(instant ) : int",
    "info" : "MethodDeclaration[29753-30196]:MethodDeclaration[30070-30513]"
  }, {
    "left" : "public abstract getStandardOffset(instant long) : int",
    "right" : "public abstract getStandardOffset(instant long) : int",
    "info" : "MethodDeclaration[30202-30549]:MethodDeclaration[30519-30866]"
  }, {
    "left" : "public isStandardOffset(instant long) : boolean",
    "right" : "public isStandardOffset(instant long) : boolean",
    "info" : "MethodDeclaration[30555-31424]:MethodDeclaration[30872-31741]"
  }, {
    "left" : "public getOffsetFromLocal(instantLocal long) : int",
    "right" : "public getOffsetFromLocal(instantLocal long) : int",
    "info" : "MethodDeclaration[31430-34581]:MethodDeclaration[31747-34898]"
  }, {
    "left" : "public convertUTCToLocal(instantUTC long) : long",
    "right" : "public convertUTCToLocal(instantUTC long) : long",
    "info" : "MethodDeclaration[34587-35459]:MethodDeclaration[34904-35776]"
  }, {
    "left" : "public convertLocalToUTC(instantLocal long, strict boolean, originalInstantUTC long) : long",
    "right" : "public convertLocalToUTC(instantLocal long, strict boolean, originalInstantUTC long) : long",
    "info" : "MethodDeclaration[35465-36801]:MethodDeclaration[35782-37118]"
  }, {
    "left" : "public convertLocalToUTC(instantLocal long, strict boolean) : long",
    "right" : "public convertLocalToUTC(instantLocal long, strict boolean) : long",
    "info" : "MethodDeclaration[36807-39554]:MethodDeclaration[37124-39871]"
  }, {
    "left" : "public getMillisKeepLocal(newZone , oldInstant long) : long",
    "right" : "public getMillisKeepLocal(newZone , oldInstant long) : long",
    "info" : "MethodDeclaration[39560-40416]:MethodDeclaration[39877-40733]"
  }, {
    "left" : "public isLocalDateTimeGap(localDateTime ) : boolean",
    "right" : "public isLocalDateTimeGap(localDateTime ) : boolean",
    "info" : "MethodDeclaration[44929-45668]:MethodDeclaration[45246-45985]"
  }, {
    "left" : "public adjustOffset(instant long, earlierOrLater boolean) : long",
    "right" : "public adjustOffset(instant long, earlierOrLater boolean) : long",
    "info" : "MethodDeclaration[45674-47301]:MethodDeclaration[45991-47618]"
  }, {
    "left" : "public abstract isFixed() : boolean",
    "right" : "public abstract isFixed() : boolean",
    "info" : "MethodDeclaration[47504-47657]:MethodDeclaration[47821-47974]"
  }, {
    "left" : "public abstract nextTransition(instant long) : long",
    "right" : "public abstract nextTransition(instant long) : long",
    "info" : "MethodDeclaration[47663-48052]:MethodDeclaration[47980-48369]"
  }, {
    "left" : "public abstract previousTransition(instant long) : long",
    "right" : "public abstract previousTransition(instant long) : long",
    "info" : "MethodDeclaration[48058-48452]:MethodDeclaration[48375-48769]"
  }, {
    "left" : "public toTimeZone() : ",
    "right" : "public toTimeZone() : ",
    "info" : "MethodDeclaration[48555-48791]:MethodDeclaration[48872-49108]"
  }, {
    "left" : "public abstract equals(object ) : boolean",
    "right" : "public abstract equals(object ) : boolean",
    "info" : "MethodDeclaration[48797-49032]:MethodDeclaration[49114-49349]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[49038-49212]:MethodDeclaration[49355-49529]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[49218-49391]:MethodDeclaration[49535-49708]"
  }, {
    "left" : "protected writeReplace() : ",
    "right" : "protected writeReplace() : ",
    "info" : "MethodDeclaration[49397-49758]:MethodDeclaration[49714-50075]"
  }, {
    "left" : "class : Stub",
    "right" : "class : Stub",
    "info" : "TypeDeclaration[49764-50569]:TypeDeclaration[50081-50886]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[49892-49994]:FieldDeclaration[50209-50311]"
  }, {
    "left" : "iID",
    "right" : "iID",
    "info" : "FieldDeclaration[50003-50067]:FieldDeclaration[50320-50384]"
  }, {
    "left" : "package Stub(id )",
    "right" : "package Stub(id )",
    "info" : "MethodDeclaration[50077-50215]:MethodDeclaration[50394-50532]"
  }, {
    "left" : "private writeObject(out ) : void",
    "right" : "private writeObject(out ) : void",
    "info" : "MethodDeclaration[50225-50335]:MethodDeclaration[50542-50652]"
  }, {
    "left" : "private readObject(in ) : void",
    "right" : "private readObject(in ) : void",
    "info" : "MethodDeclaration[50345-50453]:MethodDeclaration[50662-50770]"
  }, {
    "left" : "private readResolve() : ",
    "right" : "private readResolve() : ",
    "info" : "MethodDeclaration[50463-50563]:MethodDeclaration[50780-50880]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3575-3581]:Modifier[3575-3581]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[3582-3590]:Modifier[3582-3590]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3591-3596]:TYPE_DECLARATION_KIND[3591-3596]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4674-4741]:Block[4736-4803]"
  }, {
    "left" : "setProvider0(null);",
    "right" : "setProvider0(null);",
    "info" : "ExpressionStatement[4684-4703]:ExpressionStatement[4746-4765]"
  }, {
    "left" : "setNameProvider0(null);",
    "right" : "setNameProvider0(null);",
    "info" : "ExpressionStatement[4712-4735]:ExpressionStatement[4774-4797]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5362-5368]:Modifier[5424-5430]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5369-5375]:Modifier[5431-5437]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[5376-5388]:SimpleType[5438-5450]"
  }, {
    "left" : "getDefault",
    "right" : "getDefault",
    "info" : "SimpleName[5389-5399]:SimpleName[5451-5461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5402-6517]:Block[5464-6579]"
  }, {
    "left" : "DateTimeZone zone = cDefault;",
    "right" : "DateTimeZone zone = cDefault;",
    "info" : "VariableDeclarationStatement[5412-5441]:VariableDeclarationStatement[5474-5503]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[5450-6490]:IfStatement[5512-6552]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5468-6490]:Block[5530-6552]"
  }, {
    "left" : "synchronized(DateTimeZone.class) {\n                zone = cDefault;\n                if (zone == null) {\n                    DateTimeZone temp = null;\n                    try {\n                        try {\n                            String id = System.getProperty(\"user.timezone\");\n                            if (id != null) {  // null check avoids stack overflow\n                                temp = forID(id);\n                            }\n                        } catch (RuntimeException ex) {\n                            // ignored\n                        }\n                        if (temp == null) {\n                            temp = forTimeZone(TimeZone.getDefault());\n                        }\n                    } catch (IllegalArgumentException ex) {\n                        // ignored\n                    }\n                    if (temp == null) {\n                        temp = UTC;\n                    }\n                    cDefault = zone = temp;\n                }\n            }",
    "right" : "synchronized(DateTimeZone.class) {\n                zone = cDefault;\n                if (zone == null) {\n                    DateTimeZone temp = null;\n                    try {\n                        try {\n                            String id = System.getProperty(\"user.timezone\");\n                            if (id != null) {  // null check avoids stack overflow\n                                temp = forID(id);\n                            }\n                        } catch (RuntimeException ex) {\n                            // ignored\n                        }\n                        if (temp == null) {\n                            temp = forTimeZone(TimeZone.getDefault());\n                        }\n                    } catch (IllegalArgumentException ex) {\n                        // ignored\n                    }\n                    if (temp == null) {\n                        temp = UTC;\n                    }\n                    cDefault = zone = temp;\n                }\n            }",
    "info" : "SynchronizedStatement[5482-6480]:SynchronizedStatement[5544-6542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5515-6480]:Block[5577-6542]"
  }, {
    "left" : "zone = cDefault;",
    "right" : "zone = cDefault;",
    "info" : "ExpressionStatement[5533-5549]:ExpressionStatement[5595-5611]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[5566-6466]:IfStatement[5628-6528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5584-6466]:Block[5646-6528]"
  }, {
    "left" : "DateTimeZone temp = null;",
    "right" : "DateTimeZone temp = null;",
    "info" : "VariableDeclarationStatement[5606-5631]:VariableDeclarationStatement[5668-5693]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[5652-6306]:TryStatement[5714-6368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5656-6211]:Block[5718-6273]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[5682-6048]:TryStatement[5744-6110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5686-5953]:Block[5748-6015]"
  }, {
    "left" : "String id = System.getProperty(\"user.timezone\");",
    "right" : "String id = System.getProperty(\"user.timezone\");",
    "info" : "VariableDeclarationStatement[5716-5764]:VariableDeclarationStatement[5778-5826]"
  }, {
    "left" : "if (id != null)",
    "right" : "if (id != null)",
    "info" : "IfStatement[5793-5927]:IfStatement[5855-5989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5809-5927]:Block[5871-5989]"
  }, {
    "left" : "temp = forID(id);",
    "right" : "temp = forID(id);",
    "info" : "ExpressionStatement[5880-5897]:ExpressionStatement[5942-5959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5982-6048]:Block[6044-6110]"
  }, {
    "left" : "if (temp == null)",
    "right" : "if (temp == null)",
    "info" : "IfStatement[6073-6189]:IfStatement[6135-6251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6091-6189]:Block[6153-6251]"
  }, {
    "left" : "temp = forTimeZone(TimeZone.getDefault());",
    "right" : "temp = forTimeZone(TimeZone.getDefault());",
    "info" : "ExpressionStatement[6121-6163]:ExpressionStatement[6183-6225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6248-6306]:Block[6310-6368]"
  }, {
    "left" : "if (temp == null)",
    "right" : "if (temp == null)",
    "info" : "IfStatement[6327-6404]:IfStatement[6389-6466]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6345-6404]:Block[6407-6466]"
  }, {
    "left" : "temp = UTC;",
    "right" : "temp = UTC;",
    "info" : "ExpressionStatement[6371-6382]:ExpressionStatement[6433-6444]"
  }, {
    "left" : "cDefault = zone = temp;",
    "right" : "cDefault = zone = temp;",
    "info" : "ExpressionStatement[6425-6448]:ExpressionStatement[6487-6510]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[6499-6511]:ReturnStatement[6561-6573]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6902-6908]:Modifier[6964-6970]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6909-6915]:Modifier[6971-6977]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6916-6920]:PrimitiveType[6978-6982]"
  }, {
    "left" : "setDefault",
    "right" : "setDefault",
    "info" : "SimpleName[6921-6931]:SimpleName[6983-6993]"
  }, {
    "left" : "DateTimeZone zone",
    "right" : "DateTimeZone zone",
    "info" : "SingleVariableDeclaration[6932-6949]:SingleVariableDeclaration[6994-7011]"
  }, {
    "left" : "SecurityException",
    "right" : "SecurityException",
    "info" : "SimpleType[6958-6975]:SimpleType[7020-7037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6976-7366]:Block[7038-7428]"
  }, {
    "left" : "SecurityManager sm = System.getSecurityManager();",
    "right" : "SecurityManager sm = System.getSecurityManager();",
    "info" : "VariableDeclarationStatement[6986-7035]:VariableDeclarationStatement[7048-7097]"
  }, {
    "left" : "if (sm != null)",
    "right" : "if (sm != null)",
    "info" : "IfStatement[7044-7154]:IfStatement[7106-7216]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7060-7154]:Block[7122-7216]"
  }, {
    "left" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setDefault\"));",
    "right" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setDefault\"));",
    "info" : "ExpressionStatement[7074-7144]:ExpressionStatement[7136-7206]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[7163-7278]:IfStatement[7225-7340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7181-7278]:Block[7243-7340]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The datetime zone must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The datetime zone must not be null\");",
    "info" : "ThrowStatement[7195-7268]:ThrowStatement[7257-7330]"
  }, {
    "left" : "synchronized(DateTimeZone.class) {\n            cDefault = zone;\n        }",
    "right" : "synchronized(DateTimeZone.class) {\n            cDefault = zone;\n        }",
    "info" : "SynchronizedStatement[7287-7360]:SynchronizedStatement[7349-7422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7320-7360]:Block[7382-7422]"
  }, {
    "left" : "cDefault = zone;",
    "right" : "cDefault = zone;",
    "info" : "ExpressionStatement[7334-7350]:ExpressionStatement[7396-7412]"
  }, {
    "left" : "@FromString",
    "right" : "@FromString",
    "info" : "MarkerAnnotation[8147-8158]:MarkerAnnotation[8209-8220]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8163-8169]:Modifier[8225-8231]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8170-8176]:Modifier[8232-8238]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[8177-8189]:SimpleType[8239-8251]"
  }, {
    "left" : "forID",
    "right" : "forID",
    "info" : "SimpleName[8190-8195]:SimpleName[8252-8257]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[8196-8205]:SingleVariableDeclaration[8258-8267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8207-8885]:Block[8269-8947]"
  }, {
    "left" : "if (id == null)",
    "right" : "if (id == null)",
    "info" : "IfStatement[8217-8277]:IfStatement[8279-8339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8233-8277]:Block[8295-8339]"
  }, {
    "left" : "return getDefault();",
    "right" : "return getDefault();",
    "info" : "ReturnStatement[8247-8267]:ReturnStatement[8309-8329]"
  }, {
    "left" : "if (id.equals(\"UTC\"))",
    "right" : "if (id.equals(\"UTC\"))",
    "info" : "IfStatement[8286-8356]:IfStatement[8348-8418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8308-8356]:Block[8370-8418]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[8322-8346]:ReturnStatement[8384-8408]"
  }, {
    "left" : "DateTimeZone zone = cProvider.getZone(id);",
    "right" : "DateTimeZone zone = cProvider.getZone(id);",
    "info" : "VariableDeclarationStatement[8365-8407]:VariableDeclarationStatement[8427-8469]"
  }, {
    "left" : "if (zone != null)",
    "right" : "if (zone != null)",
    "info" : "IfStatement[8416-8470]:IfStatement[8478-8532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8434-8470]:Block[8496-8532]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[8448-8460]:ReturnStatement[8510-8522]"
  }, {
    "left" : "if (id.startsWith(\"+\") || id.startsWith(\"-\"))",
    "right" : "if (id.startsWith(\"+\") || id.startsWith(\"-\"))",
    "info" : "IfStatement[8479-8780]:IfStatement[8541-8842]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8525-8780]:Block[8587-8842]"
  }, {
    "left" : "int offset = parseOffset(id);",
    "right" : "int offset = parseOffset(id);",
    "info" : "VariableDeclarationStatement[8539-8568]:VariableDeclarationStatement[8601-8630]"
  }, {
    "left" : "if (offset == 0L)",
    "right" : "if (offset == 0L)",
    "info" : "IfStatement[8581-8770]:IfStatement[8643-8832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8599-8655]:Block[8661-8717]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[8617-8641]:ReturnStatement[8679-8703]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8661-8770]:Block[8723-8832]"
  }, {
    "left" : "id = printOffset(offset);",
    "right" : "id = printOffset(offset);",
    "info" : "ExpressionStatement[8679-8704]:ExpressionStatement[8741-8766]"
  }, {
    "left" : "return fixedOffsetZone(id, offset);",
    "right" : "return fixedOffsetZone(id, offset);",
    "info" : "ReturnStatement[8721-8756]:ReturnStatement[8783-8818]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "right" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "info" : "ThrowStatement[8789-8879]:ThrowStatement[8851-8941]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9341-9347]:Modifier[9403-9409]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9348-9354]:Modifier[9410-9416]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[9355-9367]:SimpleType[9417-9429]"
  }, {
    "left" : "forOffsetHours",
    "right" : "forOffsetHours",
    "info" : "SimpleName[9368-9382]:SimpleName[9430-9444]"
  }, {
    "left" : "int hoursOffset",
    "right" : "int hoursOffset",
    "info" : "SingleVariableDeclaration[9383-9398]:SingleVariableDeclaration[9445-9460]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[9407-9431]:SimpleType[9469-9493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9432-9493]:Block[9494-9555]"
  }, {
    "left" : "return forOffsetHoursMinutes(hoursOffset, 0);",
    "right" : "return forOffsetHoursMinutes(hoursOffset, 0);",
    "info" : "ReturnStatement[9442-9487]:ReturnStatement[9504-9549]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10246-10252]:Modifier[10308-10314]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10253-10259]:Modifier[10315-10321]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[10260-10272]:SimpleType[10322-10334]"
  }, {
    "left" : "forOffsetHoursMinutes",
    "right" : "forOffsetHoursMinutes",
    "info" : "SimpleName[10273-10294]:SimpleName[10335-10356]"
  }, {
    "left" : "int hoursOffset",
    "right" : "int hoursOffset",
    "info" : "SingleVariableDeclaration[10295-10310]:SingleVariableDeclaration[10357-10372]"
  }, {
    "left" : "int minutesOffset",
    "right" : "int minutesOffset",
    "info" : "SingleVariableDeclaration[10312-10329]:SingleVariableDeclaration[10374-10391]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[10338-10362]:SimpleType[10400-10424]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10363-11241]:Block[10425-11389]"
  }, {
    "left" : "if (hoursOffset == 0 && minutesOffset == 0)",
    "right" : "if (hoursOffset == 0 && minutesOffset == 0)",
    "info" : "IfStatement[10373-10465]:IfStatement[10435-10527]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10417-10465]:Block[10479-10527]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[10431-10455]:ReturnStatement[10493-10517]"
  }, {
    "left" : "if (minutesOffset < 0 || minutesOffset > 59)",
    "right" : "if (minutesOffset < 0 || minutesOffset > 59)",
    "info" : "IfStatement[10474-10620]:IfStatement[10685-10831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10519-10620]:Block[10730-10831]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);",
    "right" : "throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);",
    "info" : "ThrowStatement[10533-10610]:ThrowStatement[10744-10821]"
  }, {
    "left" : "int offset = 0;",
    "right" : "int offset = 0;",
    "info" : "VariableDeclarationStatement[10629-10644]:VariableDeclarationStatement[10840-10855]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[10653-11195]:TryStatement[10864-11343]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10657-11081]:Block[10868-11229]"
  }, {
    "left" : "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",
    "right" : "int hoursInMinutes = hoursOffset * 60;",
    "info" : "VariableDeclarationStatement[10671-10733]:VariableDeclarationStatement[10882-10920]"
  }, {
    "left" : "hoursOffset",
    "right" : "hoursOffset",
    "info" : "SimpleName[10716-10727]:SimpleName[10903-10914]"
  }, {
    "left" : "60",
    "right" : "60",
    "info" : "NumberLiteral[10729-10731]:NumberLiteral[10917-10919]"
  }, {
    "left" : "if (hoursInMinutes < 0)",
    "right" : "if (hoursInMinutes < 0)",
    "info" : "IfStatement[10746-10973]:IfStatement[10933-11121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10770-10869]:Block[10957-11036]"
  }, {
    "left" : "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);",
    "right" : "minutesOffset = hoursInMinutes - minutesOffset;",
    "info" : "ExpressionStatement[10788-10855]:ExpressionStatement[10975-11022]"
  }, {
    "left" : "hoursInMinutes",
    "right" : "hoursInMinutes",
    "info" : "SimpleName[10823-10837]:SimpleName[10991-11005]"
  }, {
    "left" : "minutesOffset",
    "right" : "minutesOffset",
    "info" : "SimpleName[10840-10853]:SimpleName[11008-11021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10875-10973]:Block[11042-11121]"
  }, {
    "left" : "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
    "right" : "minutesOffset = hoursInMinutes + minutesOffset;",
    "info" : "ExpressionStatement[10893-10959]:ExpressionStatement[11060-11107]"
  }, {
    "left" : "hoursInMinutes",
    "right" : "hoursInMinutes",
    "info" : "SimpleName[10928-10942]:SimpleName[11076-11090]"
  }, {
    "left" : "minutesOffset",
    "right" : "minutesOffset",
    "info" : "SimpleName[10944-10957]:SimpleName[11093-11106]"
  }, {
    "left" : "offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);",
    "right" : "offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);",
    "info" : "ExpressionStatement[10986-11071]:ExpressionStatement[11134-11219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11113-11195]:Block[11261-11343]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Offset is too large\");",
    "right" : "throw new IllegalArgumentException(\"Offset is too large\");",
    "info" : "ThrowStatement[11127-11185]:ThrowStatement[11275-11333]"
  }, {
    "left" : "return forOffsetMillis(offset);",
    "right" : "return forOffsetMillis(offset);",
    "info" : "ReturnStatement[11204-11235]:ReturnStatement[11352-11383]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11501-11507]:Modifier[11649-11655]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11508-11514]:Modifier[11656-11662]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[11515-11527]:SimpleType[11663-11675]"
  }, {
    "left" : "forOffsetMillis",
    "right" : "forOffsetMillis",
    "info" : "SimpleName[11528-11543]:SimpleName[11676-11691]"
  }, {
    "left" : "int millisOffset",
    "right" : "int millisOffset",
    "info" : "SingleVariableDeclaration[11544-11560]:SingleVariableDeclaration[11692-11708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11562-11666]:Block[11710-11983]"
  }, {
    "left" : "String id = printOffset(millisOffset);",
    "right" : "String id = printOffset(millisOffset);",
    "info" : "VariableDeclarationStatement[11572-11610]:VariableDeclarationStatement[11889-11927]"
  }, {
    "left" : "return fixedOffsetZone(id, millisOffset);",
    "right" : "return fixedOffsetZone(id, millisOffset);",
    "info" : "ReturnStatement[11619-11660]:ReturnStatement[11936-11977]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12352-12358]:Modifier[12669-12675]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12359-12365]:Modifier[12676-12682]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[12366-12378]:SimpleType[12683-12695]"
  }, {
    "left" : "forTimeZone",
    "right" : "forTimeZone",
    "info" : "SimpleName[12379-12390]:SimpleName[12696-12707]"
  }, {
    "left" : "TimeZone zone",
    "right" : "TimeZone zone",
    "info" : "SingleVariableDeclaration[12391-12404]:SingleVariableDeclaration[12708-12721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12406-13621]:Block[12723-13938]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[12416-12478]:IfStatement[12733-12795]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12434-12478]:Block[12751-12795]"
  }, {
    "left" : "return getDefault();",
    "right" : "return getDefault();",
    "info" : "ReturnStatement[12448-12468]:ReturnStatement[12765-12785]"
  }, {
    "left" : "final String id = zone.getID();",
    "right" : "final String id = zone.getID();",
    "info" : "VariableDeclarationStatement[12487-12518]:VariableDeclarationStatement[12804-12835]"
  }, {
    "left" : "if (id.equals(\"UTC\"))",
    "right" : "if (id.equals(\"UTC\"))",
    "info" : "IfStatement[12527-12597]:IfStatement[12844-12914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12549-12597]:Block[12866-12914]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[12563-12587]:ReturnStatement[12880-12904]"
  }, {
    "left" : "DateTimeZone dtz = null;",
    "right" : "DateTimeZone dtz = null;",
    "info" : "VariableDeclarationStatement[12691-12715]:VariableDeclarationStatement[13008-13032]"
  }, {
    "left" : "String convId = getConvertedId(id);",
    "right" : "String convId = getConvertedId(id);",
    "info" : "VariableDeclarationStatement[12724-12759]:VariableDeclarationStatement[13041-13076]"
  }, {
    "left" : "if (convId != null)",
    "right" : "if (convId != null)",
    "info" : "IfStatement[12768-12844]:IfStatement[13085-13161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12788-12844]:Block[13105-13161]"
  }, {
    "left" : "dtz = cProvider.getZone(convId);",
    "right" : "dtz = cProvider.getZone(convId);",
    "info" : "ExpressionStatement[12802-12834]:ExpressionStatement[13119-13151]"
  }, {
    "left" : "if (dtz == null)",
    "right" : "if (dtz == null)",
    "info" : "IfStatement[12853-12922]:IfStatement[13170-13239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12870-12922]:Block[13187-13239]"
  }, {
    "left" : "dtz = cProvider.getZone(id);",
    "right" : "dtz = cProvider.getZone(id);",
    "info" : "ExpressionStatement[12884-12912]:ExpressionStatement[13201-13229]"
  }, {
    "left" : "if (dtz != null)",
    "right" : "if (dtz != null)",
    "info" : "IfStatement[12931-12983]:IfStatement[13248-13300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12948-12983]:Block[13265-13300]"
  }, {
    "left" : "return dtz;",
    "right" : "return dtz;",
    "info" : "ReturnStatement[12962-12973]:ReturnStatement[13279-13290]"
  }, {
    "left" : "if (convId == null)",
    "right" : "if (convId == null)",
    "info" : "IfStatement[13032-13516]:IfStatement[13349-13833]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13052-13516]:Block[13369-13833]"
  }, {
    "left" : "convId = zone.getID();",
    "right" : "convId = zone.getID();",
    "info" : "ExpressionStatement[13066-13088]:ExpressionStatement[13383-13405]"
  }, {
    "left" : "if (convId.startsWith(\"GMT+\") || convId.startsWith(\"GMT-\"))",
    "right" : "if (convId.startsWith(\"GMT+\") || convId.startsWith(\"GMT-\"))",
    "info" : "IfStatement[13101-13506]:IfStatement[13418-13823]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13161-13506]:Block[13478-13823]"
  }, {
    "left" : "convId = convId.substring(3);",
    "right" : "convId = convId.substring(3);",
    "info" : "ExpressionStatement[13179-13208]:ExpressionStatement[13496-13525]"
  }, {
    "left" : "int offset = parseOffset(convId);",
    "right" : "int offset = parseOffset(convId);",
    "info" : "VariableDeclarationStatement[13225-13258]:VariableDeclarationStatement[13542-13575]"
  }, {
    "left" : "if (offset == 0L)",
    "right" : "if (offset == 0L)",
    "info" : "IfStatement[13275-13492]:IfStatement[13592-13809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13293-13357]:Block[13610-13674]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[13315-13339]:ReturnStatement[13632-13656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13363-13492]:Block[13680-13809]"
  }, {
    "left" : "convId = printOffset(offset);",
    "right" : "convId = printOffset(offset);",
    "info" : "ExpressionStatement[13385-13414]:ExpressionStatement[13702-13731]"
  }, {
    "left" : "return fixedOffsetZone(convId, offset);",
    "right" : "return fixedOffsetZone(convId, offset);",
    "info" : "ReturnStatement[13435-13474]:ReturnStatement[13752-13791]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "right" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "info" : "ThrowStatement[13525-13615]:ThrowStatement[13842-13932]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13876-13883]:Modifier[14193-14200]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13884-13890]:Modifier[14201-14207]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[13891-13903]:Modifier[14208-14220]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[13904-13916]:SimpleType[14221-14233]"
  }, {
    "left" : "fixedOffsetZone",
    "right" : "fixedOffsetZone",
    "info" : "SimpleName[13917-13932]:SimpleName[14234-14249]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[13933-13942]:SingleVariableDeclaration[14250-14259]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[13944-13954]:SingleVariableDeclaration[14261-14271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13956-14565]:Block[14273-14882]"
  }, {
    "left" : "if (offset == 0)",
    "right" : "if (offset == 0)",
    "info" : "IfStatement[13966-14031]:IfStatement[14283-14348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13983-14031]:Block[14300-14348]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[13997-14021]:ReturnStatement[14314-14338]"
  }, {
    "left" : "if (iFixedOffsetCache == null)",
    "right" : "if (iFixedOffsetCache == null)",
    "info" : "IfStatement[14040-14166]:IfStatement[14357-14483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14071-14166]:Block[14388-14483]"
  }, {
    "left" : "iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>();",
    "right" : "iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>();",
    "info" : "ExpressionStatement[14085-14156]:ExpressionStatement[14402-14473]"
  }, {
    "left" : "DateTimeZone zone;",
    "right" : "DateTimeZone zone;",
    "info" : "VariableDeclarationStatement[14175-14193]:VariableDeclarationStatement[14492-14510]"
  }, {
    "left" : "Reference<DateTimeZone> ref = iFixedOffsetCache.get(id);",
    "right" : "Reference<DateTimeZone> ref = iFixedOffsetCache.get(id);",
    "info" : "VariableDeclarationStatement[14202-14258]:VariableDeclarationStatement[14519-14575]"
  }, {
    "left" : "if (ref != null)",
    "right" : "if (ref != null)",
    "info" : "IfStatement[14267-14400]:IfStatement[14584-14717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14284-14400]:Block[14601-14717]"
  }, {
    "left" : "zone = ref.get();",
    "right" : "zone = ref.get();",
    "info" : "ExpressionStatement[14298-14315]:ExpressionStatement[14615-14632]"
  }, {
    "left" : "if (zone != null)",
    "right" : "if (zone != null)",
    "info" : "IfStatement[14328-14390]:IfStatement[14645-14707]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14346-14390]:Block[14663-14707]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[14364-14376]:ReturnStatement[14681-14693]"
  }, {
    "left" : "zone = new FixedDateTimeZone(id, null, offset, offset);",
    "right" : "zone = new FixedDateTimeZone(id, null, offset, offset);",
    "info" : "ExpressionStatement[14409-14464]:ExpressionStatement[14726-14781]"
  }, {
    "left" : "iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone));",
    "right" : "iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone));",
    "info" : "ExpressionStatement[14473-14538]:ExpressionStatement[14790-14855]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[14547-14559]:ReturnStatement[14864-14876]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14689-14695]:Modifier[15006-15012]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14696-14702]:Modifier[15013-15019]"
  }, {
    "left" : "Set<String>",
    "right" : "Set<String>",
    "info" : "ParameterizedType[14703-14714]:ParameterizedType[15020-15031]"
  }, {
    "left" : "getAvailableIDs",
    "right" : "getAvailableIDs",
    "info" : "SimpleName[14715-14730]:SimpleName[15032-15047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14733-14770]:Block[15050-15087]"
  }, {
    "left" : "return cAvailableIDs;",
    "right" : "return cAvailableIDs;",
    "info" : "ReturnStatement[14743-14764]:ReturnStatement[15060-15081]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15072-15078]:Modifier[15389-15395]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15079-15085]:Modifier[15396-15402]"
  }, {
    "left" : "Provider",
    "right" : "Provider",
    "info" : "SimpleType[15086-15094]:SimpleType[15403-15411]"
  }, {
    "left" : "getProvider",
    "right" : "getProvider",
    "info" : "SimpleName[15095-15106]:SimpleName[15412-15423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15109-15142]:Block[15426-15459]"
  }, {
    "left" : "return cProvider;",
    "right" : "return cProvider;",
    "info" : "ReturnStatement[15119-15136]:ReturnStatement[15436-15453]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15558-15564]:Modifier[15875-15881]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15565-15571]:Modifier[15882-15888]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15572-15576]:PrimitiveType[15889-15893]"
  }, {
    "left" : "setProvider",
    "right" : "setProvider",
    "info" : "SimpleName[15577-15588]:SimpleName[15894-15905]"
  }, {
    "left" : "Provider provider",
    "right" : "Provider provider",
    "info" : "SingleVariableDeclaration[15589-15606]:SingleVariableDeclaration[15906-15923]"
  }, {
    "left" : "SecurityException",
    "right" : "SecurityException",
    "info" : "SimpleType[15615-15632]:SimpleType[15932-15949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15633-15850]:Block[15950-16167]"
  }, {
    "left" : "SecurityManager sm = System.getSecurityManager();",
    "right" : "SecurityManager sm = System.getSecurityManager();",
    "info" : "VariableDeclarationStatement[15643-15692]:VariableDeclarationStatement[15960-16009]"
  }, {
    "left" : "if (sm != null)",
    "right" : "if (sm != null)",
    "info" : "IfStatement[15701-15812]:IfStatement[16018-16129]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15717-15812]:Block[16034-16129]"
  }, {
    "left" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setProvider\"));",
    "right" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setProvider\"));",
    "info" : "ExpressionStatement[15731-15802]:ExpressionStatement[16048-16119]"
  }, {
    "left" : "setProvider0(provider);",
    "right" : "setProvider0(provider);",
    "info" : "ExpressionStatement[15821-15844]:ExpressionStatement[16138-16161]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16085-16092]:Modifier[16402-16409]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16093-16099]:Modifier[16410-16416]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16100-16104]:PrimitiveType[16417-16421]"
  }, {
    "left" : "setProvider0",
    "right" : "setProvider0",
    "info" : "SimpleName[16105-16117]:SimpleName[16422-16434]"
  }, {
    "left" : "Provider provider",
    "right" : "Provider provider",
    "info" : "SingleVariableDeclaration[16118-16135]:SingleVariableDeclaration[16435-16452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16137-16781]:Block[16454-17098]"
  }, {
    "left" : "if (provider == null)",
    "right" : "if (provider == null)",
    "info" : "IfStatement[16147-16225]:IfStatement[16464-16542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16169-16225]:Block[16486-16542]"
  }, {
    "left" : "provider = getDefaultProvider();",
    "right" : "provider = getDefaultProvider();",
    "info" : "ExpressionStatement[16183-16215]:ExpressionStatement[16500-16532]"
  }, {
    "left" : "Set<String> ids = provider.getAvailableIDs();",
    "right" : "Set<String> ids = provider.getAvailableIDs();",
    "info" : "VariableDeclarationStatement[16234-16279]:VariableDeclarationStatement[16551-16596]"
  }, {
    "left" : "if (ids == null || ids.size() == 0)",
    "right" : "if (ids == null || ids.size() == 0)",
    "info" : "IfStatement[16288-16447]:IfStatement[16605-16764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16324-16447]:Block[16641-16764]"
  }, {
    "left" : "throw new IllegalArgumentException\n                (\"The provider doesn't have any available ids\");",
    "right" : "throw new IllegalArgumentException\n                (\"The provider doesn't have any available ids\");",
    "info" : "ThrowStatement[16338-16437]:ThrowStatement[16655-16754]"
  }, {
    "left" : "if (!ids.contains(\"UTC\"))",
    "right" : "if (!ids.contains(\"UTC\"))",
    "info" : "IfStatement[16456-16577]:IfStatement[16773-16894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16482-16577]:Block[16799-16894]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The provider doesn't support UTC\");",
    "right" : "throw new IllegalArgumentException(\"The provider doesn't support UTC\");",
    "info" : "ThrowStatement[16496-16567]:ThrowStatement[16813-16884]"
  }, {
    "left" : "if (!UTC.equals(provider.getZone(\"UTC\")))",
    "right" : "if (!UTC.equals(provider.getZone(\"UTC\")))",
    "info" : "IfStatement[16586-16716]:IfStatement[16903-17033]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16628-16716]:Block[16945-17033]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Invalid UTC zone provided\");",
    "right" : "throw new IllegalArgumentException(\"Invalid UTC zone provided\");",
    "info" : "ThrowStatement[16642-16706]:ThrowStatement[16959-17023]"
  }, {
    "left" : "cProvider = provider;",
    "right" : "cProvider = provider;",
    "info" : "ExpressionStatement[16725-16746]:ExpressionStatement[17042-17063]"
  }, {
    "left" : "cAvailableIDs = ids;",
    "right" : "cAvailableIDs = ids;",
    "info" : "ExpressionStatement[16755-16775]:ExpressionStatement[17072-17092]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[17132-17139]:Modifier[17449-17456]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[17140-17146]:Modifier[17457-17463]"
  }, {
    "left" : "Provider",
    "right" : "Provider",
    "info" : "SimpleType[17147-17155]:SimpleType[17464-17472]"
  }, {
    "left" : "getDefaultProvider",
    "right" : "getDefaultProvider",
    "info" : "SimpleName[17156-17174]:SimpleName[17473-17491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17177-18198]:Block[17494-18515]"
  }, {
    "left" : "Provider provider = null;",
    "right" : "Provider provider = null;",
    "info" : "VariableDeclarationStatement[17187-17212]:VariableDeclarationStatement[17504-17529]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17222-17768]:TryStatement[17539-18085]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17226-17704]:Block[17543-18021]"
  }, {
    "left" : "String providerClass =\n                System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
    "right" : "String providerClass =\n                System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
    "info" : "VariableDeclarationStatement[17240-17337]:VariableDeclarationStatement[17557-17654]"
  }, {
    "left" : "if (providerClass != null)",
    "right" : "if (providerClass != null)",
    "info" : "IfStatement[17350-17694]:IfStatement[17667-18011]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17377-17694]:Block[17694-18011]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17395-17680]:TryStatement[17712-17997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17399-17504]:Block[17716-17821]"
  }, {
    "left" : "provider = (Provider) Class.forName(providerClass).newInstance();",
    "right" : "provider = (Provider) Class.forName(providerClass).newInstance();",
    "info" : "ExpressionStatement[17421-17486]:ExpressionStatement[17738-17803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17526-17680]:Block[17843-17997]"
  }, {
    "left" : "Thread thread = Thread.currentThread();",
    "right" : "Thread thread = Thread.currentThread();",
    "info" : "VariableDeclarationStatement[17548-17587]:VariableDeclarationStatement[17865-17904]"
  }, {
    "left" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "right" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "info" : "ExpressionStatement[17608-17662]:ExpressionStatement[17925-17979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17734-17768]:Block[18051-18085]"
  }, {
    "left" : "if (provider == null)",
    "right" : "if (provider == null)",
    "info" : "IfStatement[17778-18081]:IfStatement[18095-18398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17800-18081]:Block[18117-18398]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17814-18071]:TryStatement[18131-18388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17818-17907]:Block[18135-18224]"
  }, {
    "left" : "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
    "right" : "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
    "info" : "ExpressionStatement[17836-17893]:ExpressionStatement[18153-18210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17929-18071]:Block[18246-18388]"
  }, {
    "left" : "Thread thread = Thread.currentThread();",
    "right" : "Thread thread = Thread.currentThread();",
    "info" : "VariableDeclarationStatement[17947-17986]:VariableDeclarationStatement[18264-18303]"
  }, {
    "left" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "right" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "info" : "ExpressionStatement[18003-18057]:ExpressionStatement[18320-18374]"
  }, {
    "left" : "if (provider == null)",
    "right" : "if (provider == null)",
    "info" : "IfStatement[18091-18166]:IfStatement[18408-18483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18113-18166]:Block[18430-18483]"
  }, {
    "left" : "provider = new UTCProvider();",
    "right" : "provider = new UTCProvider();",
    "info" : "ExpressionStatement[18127-18156]:ExpressionStatement[18444-18473]"
  }, {
    "left" : "return provider;",
    "right" : "return provider;",
    "info" : "ReturnStatement[18176-18192]:ReturnStatement[18493-18509]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18494-18500]:Modifier[18811-18817]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18501-18507]:Modifier[18818-18824]"
  }, {
    "left" : "NameProvider",
    "right" : "NameProvider",
    "info" : "SimpleType[18508-18520]:SimpleType[18825-18837]"
  }, {
    "left" : "getNameProvider",
    "right" : "getNameProvider",
    "info" : "SimpleName[18521-18536]:SimpleName[18838-18853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18539-18576]:Block[18856-18893]"
  }, {
    "left" : "return cNameProvider;",
    "right" : "return cNameProvider;",
    "info" : "ReturnStatement[18549-18570]:ReturnStatement[18866-18887]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18994-19000]:Modifier[19311-19317]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19001-19007]:Modifier[19318-19324]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19008-19012]:PrimitiveType[19325-19329]"
  }, {
    "left" : "setNameProvider",
    "right" : "setNameProvider",
    "info" : "SimpleName[19013-19028]:SimpleName[19330-19345]"
  }, {
    "left" : "NameProvider nameProvider",
    "right" : "NameProvider nameProvider",
    "info" : "SingleVariableDeclaration[19029-19054]:SingleVariableDeclaration[19346-19371]"
  }, {
    "left" : "SecurityException",
    "right" : "SecurityException",
    "info" : "SimpleType[19063-19080]:SimpleType[19380-19397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19081-19310]:Block[19398-19627]"
  }, {
    "left" : "SecurityManager sm = System.getSecurityManager();",
    "right" : "SecurityManager sm = System.getSecurityManager();",
    "info" : "VariableDeclarationStatement[19091-19140]:VariableDeclarationStatement[19408-19457]"
  }, {
    "left" : "if (sm != null)",
    "right" : "if (sm != null)",
    "info" : "IfStatement[19149-19264]:IfStatement[19466-19581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19165-19264]:Block[19482-19581]"
  }, {
    "left" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setNameProvider\"));",
    "right" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setNameProvider\"));",
    "info" : "ExpressionStatement[19179-19254]:ExpressionStatement[19496-19571]"
  }, {
    "left" : "setNameProvider0(nameProvider);",
    "right" : "setNameProvider0(nameProvider);",
    "info" : "ExpressionStatement[19273-19304]:ExpressionStatement[19590-19621]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19549-19556]:Modifier[19866-19873]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19557-19563]:Modifier[19874-19880]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19564-19568]:PrimitiveType[19881-19885]"
  }, {
    "left" : "setNameProvider0",
    "right" : "setNameProvider0",
    "info" : "SimpleName[19569-19585]:SimpleName[19886-19902]"
  }, {
    "left" : "NameProvider nameProvider",
    "right" : "NameProvider nameProvider",
    "info" : "SingleVariableDeclaration[19586-19611]:SingleVariableDeclaration[19903-19928]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19613-19757]:Block[19930-20074]"
  }, {
    "left" : "if (nameProvider == null)",
    "right" : "if (nameProvider == null)",
    "info" : "IfStatement[19623-19713]:IfStatement[19940-20030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19649-19713]:Block[19966-20030]"
  }, {
    "left" : "nameProvider = getDefaultNameProvider();",
    "right" : "nameProvider = getDefaultNameProvider();",
    "info" : "ExpressionStatement[19663-19703]:ExpressionStatement[19980-20020]"
  }, {
    "left" : "cNameProvider = nameProvider;",
    "right" : "cNameProvider = nameProvider;",
    "info" : "ExpressionStatement[19722-19751]:ExpressionStatement[20039-20068]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20016-20023]:Modifier[20333-20340]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[20024-20030]:Modifier[20341-20347]"
  }, {
    "left" : "NameProvider",
    "right" : "NameProvider",
    "info" : "SimpleType[20031-20043]:SimpleType[20348-20360]"
  }, {
    "left" : "getDefaultNameProvider",
    "right" : "getDefaultNameProvider",
    "info" : "SimpleName[20044-20066]:SimpleName[20361-20383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20069-20799]:Block[20386-21116]"
  }, {
    "left" : "NameProvider nameProvider = null;",
    "right" : "NameProvider nameProvider = null;",
    "info" : "VariableDeclarationStatement[20079-20112]:VariableDeclarationStatement[20396-20429]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20121-20662]:TryStatement[20438-20979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20125-20599]:Block[20442-20916]"
  }, {
    "left" : "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
    "right" : "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
    "info" : "VariableDeclarationStatement[20139-20224]:VariableDeclarationStatement[20456-20541]"
  }, {
    "left" : "if (providerClass != null)",
    "right" : "if (providerClass != null)",
    "info" : "IfStatement[20237-20589]:IfStatement[20554-20906]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20264-20589]:Block[20581-20906]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20282-20575]:TryStatement[20599-20892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20286-20399]:Block[20603-20716]"
  }, {
    "left" : "nameProvider = (NameProvider) Class.forName(providerClass).newInstance();",
    "right" : "nameProvider = (NameProvider) Class.forName(providerClass).newInstance();",
    "info" : "ExpressionStatement[20308-20381]:ExpressionStatement[20625-20698]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20421-20575]:Block[20738-20892]"
  }, {
    "left" : "Thread thread = Thread.currentThread();",
    "right" : "Thread thread = Thread.currentThread();",
    "info" : "VariableDeclarationStatement[20443-20482]:VariableDeclarationStatement[20760-20799]"
  }, {
    "left" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "right" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "info" : "ExpressionStatement[20503-20557]:ExpressionStatement[20820-20874]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20629-20662]:Block[20946-20979]"
  }, {
    "left" : "if (nameProvider == null)",
    "right" : "if (nameProvider == null)",
    "info" : "IfStatement[20672-20763]:IfStatement[20989-21080]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20698-20763]:Block[21015-21080]"
  }, {
    "left" : "nameProvider = new DefaultNameProvider();",
    "right" : "nameProvider = new DefaultNameProvider();",
    "info" : "ExpressionStatement[20712-20753]:ExpressionStatement[21029-21070]"
  }, {
    "left" : "return nameProvider;",
    "right" : "return nameProvider;",
    "info" : "ReturnStatement[20773-20793]:ReturnStatement[21090-21110]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21044-21051]:Modifier[21361-21368]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21052-21058]:Modifier[21369-21375]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[21059-21071]:Modifier[21376-21388]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[21072-21078]:SimpleType[21389-21395]"
  }, {
    "left" : "getConvertedId",
    "right" : "getConvertedId",
    "info" : "SimpleName[21079-21093]:SimpleName[21396-21410]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[21094-21103]:SingleVariableDeclaration[21411-21420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21105-22942]:Block[21422-23259]"
  }, {
    "left" : "Map<String, String> map = cZoneIdConversion;",
    "right" : "Map<String, String> map = cZoneIdConversion;",
    "info" : "VariableDeclarationStatement[21115-21159]:VariableDeclarationStatement[21432-21476]"
  }, {
    "left" : "if (map == null)",
    "right" : "if (map == null)",
    "info" : "IfStatement[21168-22908]:IfStatement[21485-23225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21185-22908]:Block[21502-23225]"
  }, {
    "left" : "map = new HashMap<String, String>();",
    "right" : "map = new HashMap<String, String>();",
    "info" : "ExpressionStatement[21253-21289]:ExpressionStatement[21570-21606]"
  }, {
    "left" : "map.put(\"GMT\", \"UTC\");",
    "right" : "map.put(\"GMT\", \"UTC\");",
    "info" : "ExpressionStatement[21302-21324]:ExpressionStatement[21619-21641]"
  }, {
    "left" : "map.put(\"WET\", \"WET\");",
    "right" : "map.put(\"WET\", \"WET\");",
    "info" : "ExpressionStatement[21337-21359]:ExpressionStatement[21654-21676]"
  }, {
    "left" : "map.put(\"CET\", \"CET\");",
    "right" : "map.put(\"CET\", \"CET\");",
    "info" : "ExpressionStatement[21372-21394]:ExpressionStatement[21689-21711]"
  }, {
    "left" : "map.put(\"MET\", \"CET\");",
    "right" : "map.put(\"MET\", \"CET\");",
    "info" : "ExpressionStatement[21407-21429]:ExpressionStatement[21724-21746]"
  }, {
    "left" : "map.put(\"ECT\", \"CET\");",
    "right" : "map.put(\"ECT\", \"CET\");",
    "info" : "ExpressionStatement[21442-21464]:ExpressionStatement[21759-21781]"
  }, {
    "left" : "map.put(\"EET\", \"EET\");",
    "right" : "map.put(\"EET\", \"EET\");",
    "info" : "ExpressionStatement[21477-21499]:ExpressionStatement[21794-21816]"
  }, {
    "left" : "map.put(\"MIT\", \"Pacific/Apia\");",
    "right" : "map.put(\"MIT\", \"Pacific/Apia\");",
    "info" : "ExpressionStatement[21512-21543]:ExpressionStatement[21829-21860]"
  }, {
    "left" : "map.put(\"HST\", \"Pacific/Honolulu\");",
    "right" : "map.put(\"HST\", \"Pacific/Honolulu\");",
    "info" : "ExpressionStatement[21556-21591]:ExpressionStatement[21873-21908]"
  }, {
    "left" : "map.put(\"AST\", \"America/Anchorage\");",
    "right" : "map.put(\"AST\", \"America/Anchorage\");",
    "info" : "ExpressionStatement[21627-21663]:ExpressionStatement[21944-21980]"
  }, {
    "left" : "map.put(\"PST\", \"America/Los_Angeles\");",
    "right" : "map.put(\"PST\", \"America/Los_Angeles\");",
    "info" : "ExpressionStatement[21676-21714]:ExpressionStatement[21993-22031]"
  }, {
    "left" : "map.put(\"MST\", \"America/Denver\");",
    "right" : "map.put(\"MST\", \"America/Denver\");",
    "info" : "ExpressionStatement[21727-21760]:ExpressionStatement[22044-22077]"
  }, {
    "left" : "map.put(\"PNT\", \"America/Phoenix\");",
    "right" : "map.put(\"PNT\", \"America/Phoenix\");",
    "info" : "ExpressionStatement[21796-21830]:ExpressionStatement[22113-22147]"
  }, {
    "left" : "map.put(\"CST\", \"America/Chicago\");",
    "right" : "map.put(\"CST\", \"America/Chicago\");",
    "info" : "ExpressionStatement[21843-21877]:ExpressionStatement[22160-22194]"
  }, {
    "left" : "map.put(\"EST\", \"America/New_York\");",
    "right" : "map.put(\"EST\", \"America/New_York\");",
    "info" : "ExpressionStatement[21890-21925]:ExpressionStatement[22207-22242]"
  }, {
    "left" : "map.put(\"IET\", \"America/Indiana/Indianapolis\");",
    "right" : "map.put(\"IET\", \"America/Indiana/Indianapolis\");",
    "info" : "ExpressionStatement[21961-22008]:ExpressionStatement[22278-22325]"
  }, {
    "left" : "map.put(\"PRT\", \"America/Puerto_Rico\");",
    "right" : "map.put(\"PRT\", \"America/Puerto_Rico\");",
    "info" : "ExpressionStatement[22021-22059]:ExpressionStatement[22338-22376]"
  }, {
    "left" : "map.put(\"CNT\", \"America/St_Johns\");",
    "right" : "map.put(\"CNT\", \"America/St_Johns\");",
    "info" : "ExpressionStatement[22072-22107]:ExpressionStatement[22389-22424]"
  }, {
    "left" : "map.put(\"AGT\", \"America/Argentina/Buenos_Aires\");",
    "right" : "map.put(\"AGT\", \"America/Argentina/Buenos_Aires\");",
    "info" : "ExpressionStatement[22120-22169]:ExpressionStatement[22437-22486]"
  }, {
    "left" : "map.put(\"BET\", \"America/Sao_Paulo\");",
    "right" : "map.put(\"BET\", \"America/Sao_Paulo\");",
    "info" : "ExpressionStatement[22182-22218]:ExpressionStatement[22499-22535]"
  }, {
    "left" : "map.put(\"ART\", \"Africa/Cairo\");",
    "right" : "map.put(\"ART\", \"Africa/Cairo\");",
    "info" : "ExpressionStatement[22231-22262]:ExpressionStatement[22548-22579]"
  }, {
    "left" : "map.put(\"CAT\", \"Africa/Harare\");",
    "right" : "map.put(\"CAT\", \"Africa/Harare\");",
    "info" : "ExpressionStatement[22275-22307]:ExpressionStatement[22592-22624]"
  }, {
    "left" : "map.put(\"EAT\", \"Africa/Addis_Ababa\");",
    "right" : "map.put(\"EAT\", \"Africa/Addis_Ababa\");",
    "info" : "ExpressionStatement[22320-22357]:ExpressionStatement[22637-22674]"
  }, {
    "left" : "map.put(\"NET\", \"Asia/Yerevan\");",
    "right" : "map.put(\"NET\", \"Asia/Yerevan\");",
    "info" : "ExpressionStatement[22370-22401]:ExpressionStatement[22687-22718]"
  }, {
    "left" : "map.put(\"PLT\", \"Asia/Karachi\");",
    "right" : "map.put(\"PLT\", \"Asia/Karachi\");",
    "info" : "ExpressionStatement[22414-22445]:ExpressionStatement[22731-22762]"
  }, {
    "left" : "map.put(\"IST\", \"Asia/Kolkata\");",
    "right" : "map.put(\"IST\", \"Asia/Kolkata\");",
    "info" : "ExpressionStatement[22458-22489]:ExpressionStatement[22775-22806]"
  }, {
    "left" : "map.put(\"BST\", \"Asia/Dhaka\");",
    "right" : "map.put(\"BST\", \"Asia/Dhaka\");",
    "info" : "ExpressionStatement[22502-22531]:ExpressionStatement[22819-22848]"
  }, {
    "left" : "map.put(\"VST\", \"Asia/Ho_Chi_Minh\");",
    "right" : "map.put(\"VST\", \"Asia/Ho_Chi_Minh\");",
    "info" : "ExpressionStatement[22544-22579]:ExpressionStatement[22861-22896]"
  }, {
    "left" : "map.put(\"CTT\", \"Asia/Shanghai\");",
    "right" : "map.put(\"CTT\", \"Asia/Shanghai\");",
    "info" : "ExpressionStatement[22592-22624]:ExpressionStatement[22909-22941]"
  }, {
    "left" : "map.put(\"JST\", \"Asia/Tokyo\");",
    "right" : "map.put(\"JST\", \"Asia/Tokyo\");",
    "info" : "ExpressionStatement[22637-22666]:ExpressionStatement[22954-22983]"
  }, {
    "left" : "map.put(\"ACT\", \"Australia/Darwin\");",
    "right" : "map.put(\"ACT\", \"Australia/Darwin\");",
    "info" : "ExpressionStatement[22679-22714]:ExpressionStatement[22996-23031]"
  }, {
    "left" : "map.put(\"AET\", \"Australia/Sydney\");",
    "right" : "map.put(\"AET\", \"Australia/Sydney\");",
    "info" : "ExpressionStatement[22727-22762]:ExpressionStatement[23044-23079]"
  }, {
    "left" : "map.put(\"SST\", \"Pacific/Guadalcanal\");",
    "right" : "map.put(\"SST\", \"Pacific/Guadalcanal\");",
    "info" : "ExpressionStatement[22775-22813]:ExpressionStatement[23092-23130]"
  }, {
    "left" : "map.put(\"NST\", \"Pacific/Auckland\");",
    "right" : "map.put(\"NST\", \"Pacific/Auckland\");",
    "info" : "ExpressionStatement[22826-22861]:ExpressionStatement[23143-23178]"
  }, {
    "left" : "cZoneIdConversion = map;",
    "right" : "cZoneIdConversion = map;",
    "info" : "ExpressionStatement[22874-22898]:ExpressionStatement[23191-23215]"
  }, {
    "left" : "return map.get(id);",
    "right" : "return map.get(id);",
    "info" : "ReturnStatement[22917-22936]:ReturnStatement[23234-23253]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22948-22955]:Modifier[23265-23272]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[22956-22962]:Modifier[23273-23279]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[22963-22966]:PrimitiveType[23280-23283]"
  }, {
    "left" : "parseOffset",
    "right" : "parseOffset",
    "info" : "SimpleName[22967-22978]:SimpleName[23284-23295]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[22979-22989]:SingleVariableDeclaration[23296-23306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22991-23641]:Block[23308-23958]"
  }, {
    "left" : "Chronology chrono = new BaseChronology() {\n            public DateTimeZone getZone() {\n                return null;\n            }\n            public Chronology withUTC() {\n                return this;\n            }\n            public Chronology withZone(DateTimeZone zone) {\n                return this;\n            }\n            public String toString() {\n                return getClass().getName();\n            }\n        };",
    "right" : "Chronology chrono = new BaseChronology() {\n            public DateTimeZone getZone() {\n                return null;\n            }\n            public Chronology withUTC() {\n                return this;\n            }\n            public Chronology withZone(DateTimeZone zone) {\n                return this;\n            }\n            public String toString() {\n                return getClass().getName();\n            }\n        };",
    "info" : "VariableDeclarationStatement[23128-23554]:VariableDeclarationStatement[23445-23871]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23183-23189]:Modifier[23500-23506]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[23190-23202]:SimpleType[23507-23519]"
  }, {
    "left" : "getZone",
    "right" : "getZone",
    "info" : "SimpleName[23203-23210]:SimpleName[23520-23527]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23213-23257]:Block[23530-23574]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[23231-23243]:ReturnStatement[23548-23560]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23270-23276]:Modifier[23587-23593]"
  }, {
    "left" : "Chronology",
    "right" : "Chronology",
    "info" : "SimpleType[23277-23287]:SimpleType[23594-23604]"
  }, {
    "left" : "withUTC",
    "right" : "withUTC",
    "info" : "SimpleName[23288-23295]:SimpleName[23605-23612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23298-23342]:Block[23615-23659]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[23316-23328]:ReturnStatement[23633-23645]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23355-23361]:Modifier[23672-23678]"
  }, {
    "left" : "Chronology",
    "right" : "Chronology",
    "info" : "SimpleType[23362-23372]:SimpleType[23679-23689]"
  }, {
    "left" : "withZone",
    "right" : "withZone",
    "info" : "SimpleName[23373-23381]:SimpleName[23690-23698]"
  }, {
    "left" : "DateTimeZone zone",
    "right" : "DateTimeZone zone",
    "info" : "SingleVariableDeclaration[23382-23399]:SingleVariableDeclaration[23699-23716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23401-23445]:Block[23718-23762]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[23419-23431]:ReturnStatement[23736-23748]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23458-23464]:Modifier[23775-23781]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[23465-23471]:SimpleType[23782-23788]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[23472-23480]:SimpleName[23789-23797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23483-23543]:Block[23800-23860]"
  }, {
    "left" : "return getClass().getName();",
    "right" : "return getClass().getName();",
    "info" : "ReturnStatement[23501-23529]:ReturnStatement[23818-23846]"
  }, {
    "left" : "return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);",
    "right" : "return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);",
    "info" : "ReturnStatement[23563-23635]:ReturnStatement[23880-23952]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23927-23934]:Modifier[24244-24251]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23935-23941]:Modifier[24252-24258]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[23942-23948]:SimpleType[24259-24265]"
  }, {
    "left" : "printOffset",
    "right" : "printOffset",
    "info" : "SimpleName[23949-23960]:SimpleName[24266-24277]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[23961-23971]:SingleVariableDeclaration[24278-24288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23973-25049]:Block[24290-25366]"
  }, {
    "left" : "StringBuffer buf = new StringBuffer();",
    "right" : "StringBuffer buf = new StringBuffer();",
    "info" : "VariableDeclarationStatement[23983-24021]:VariableDeclarationStatement[24300-24338]"
  }, {
    "left" : "if (offset >= 0)",
    "right" : "if (offset >= 0)",
    "info" : "IfStatement[24030-24163]:IfStatement[24347-24480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24047-24087]:Block[24364-24404]"
  }, {
    "left" : "buf.append('+');",
    "right" : "buf.append('+');",
    "info" : "ExpressionStatement[24061-24077]:ExpressionStatement[24378-24394]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24093-24163]:Block[24410-24480]"
  }, {
    "left" : "buf.append('-');",
    "right" : "buf.append('-');",
    "info" : "ExpressionStatement[24107-24123]:ExpressionStatement[24424-24440]"
  }, {
    "left" : "offset = -offset;",
    "right" : "offset = -offset;",
    "info" : "ExpressionStatement[24136-24153]:ExpressionStatement[24453-24470]"
  }, {
    "left" : "int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;",
    "right" : "int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;",
    "info" : "VariableDeclarationStatement[24173-24228]:VariableDeclarationStatement[24490-24545]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, hours, 2);",
    "right" : "FormatUtils.appendPaddedInteger(buf, hours, 2);",
    "info" : "ExpressionStatement[24237-24284]:ExpressionStatement[24554-24601]"
  }, {
    "left" : "offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;",
    "right" : "offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;",
    "info" : "ExpressionStatement[24293-24351]:ExpressionStatement[24610-24668]"
  }, {
    "left" : "int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;",
    "right" : "int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;",
    "info" : "VariableDeclarationStatement[24361-24420]:VariableDeclarationStatement[24678-24737]"
  }, {
    "left" : "buf.append(':');",
    "right" : "buf.append(':');",
    "info" : "ExpressionStatement[24429-24445]:ExpressionStatement[24746-24762]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, minutes, 2);",
    "right" : "FormatUtils.appendPaddedInteger(buf, minutes, 2);",
    "info" : "ExpressionStatement[24454-24503]:ExpressionStatement[24771-24820]"
  }, {
    "left" : "offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;",
    "right" : "offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;",
    "info" : "ExpressionStatement[24512-24568]:ExpressionStatement[24829-24885]"
  }, {
    "left" : "if (offset == 0)",
    "right" : "if (offset == 0)",
    "info" : "IfStatement[24577-24640]:IfStatement[24894-24957]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24594-24640]:Block[24911-24957]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[24608-24630]:ReturnStatement[24925-24947]"
  }, {
    "left" : "int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;",
    "right" : "int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;",
    "info" : "VariableDeclarationStatement[24650-24709]:VariableDeclarationStatement[24967-25026]"
  }, {
    "left" : "buf.append(':');",
    "right" : "buf.append(':');",
    "info" : "ExpressionStatement[24718-24734]:ExpressionStatement[25035-25051]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, seconds, 2);",
    "right" : "FormatUtils.appendPaddedInteger(buf, seconds, 2);",
    "info" : "ExpressionStatement[24743-24792]:ExpressionStatement[25060-25109]"
  }, {
    "left" : "offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;",
    "right" : "offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;",
    "info" : "ExpressionStatement[24801-24857]:ExpressionStatement[25118-25174]"
  }, {
    "left" : "if (offset == 0)",
    "right" : "if (offset == 0)",
    "info" : "IfStatement[24866-24929]:IfStatement[25183-25246]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24883-24929]:Block[25200-25246]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[24897-24919]:ReturnStatement[25214-25236]"
  }, {
    "left" : "buf.append('.');",
    "right" : "buf.append('.');",
    "info" : "ExpressionStatement[24939-24955]:ExpressionStatement[25256-25272]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, offset, 3);",
    "right" : "FormatUtils.appendPaddedInteger(buf, offset, 3);",
    "info" : "ExpressionStatement[24964-25012]:ExpressionStatement[25281-25329]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[25021-25043]:ReturnStatement[25338-25360]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25176-25183]:Modifier[25493-25500]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[25184-25190]:Modifier[25501-25507]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[25191-25203]:Modifier[25508-25520]"
  }, {
    "left" : "DateTimeFormatter",
    "right" : "DateTimeFormatter",
    "info" : "SimpleType[25204-25221]:SimpleType[25521-25538]"
  }, {
    "left" : "offsetFormatter",
    "right" : "offsetFormatter",
    "info" : "SimpleName[25222-25237]:SimpleName[25539-25554]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25240-25480]:Block[25557-25797]"
  }, {
    "left" : "if (cOffsetFormatter == null)",
    "right" : "if (cOffsetFormatter == null)",
    "info" : "IfStatement[25250-25441]:IfStatement[25567-25758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25280-25441]:Block[25597-25758]"
  }, {
    "left" : "cOffsetFormatter = new DateTimeFormatterBuilder()\n                .appendTimeZoneOffset(null, true, 2, 4)\n                .toFormatter();",
    "right" : "cOffsetFormatter = new DateTimeFormatterBuilder()\n                .appendTimeZoneOffset(null, true, 2, 4)\n                .toFormatter();",
    "info" : "ExpressionStatement[25294-25431]:ExpressionStatement[25611-25748]"
  }, {
    "left" : "return cOffsetFormatter;",
    "right" : "return cOffsetFormatter;",
    "info" : "ReturnStatement[25450-25474]:ReturnStatement[25767-25791]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[25762-25771]:Modifier[26079-26088]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleName[25772-25784]:SimpleName[26089-26101]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[25785-25794]:SingleVariableDeclaration[26102-26111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25796-25928]:Block[26113-26245]"
  }, {
    "left" : "if (id == null)",
    "right" : "if (id == null)",
    "info" : "IfStatement[25806-25904]:IfStatement[26123-26221]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25822-25904]:Block[26139-26221]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Id must not be null\");",
    "right" : "throw new IllegalArgumentException(\"Id must not be null\");",
    "info" : "ThrowStatement[25836-25894]:ThrowStatement[26153-26211]"
  }, {
    "left" : "iID = id;",
    "right" : "iID = id;",
    "info" : "ExpressionStatement[25913-25922]:ExpressionStatement[26230-26239]"
  }, {
    "left" : "@ToString",
    "right" : "@ToString",
    "info" : "MarkerAnnotation[26145-26154]:MarkerAnnotation[26462-26471]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26159-26165]:Modifier[26476-26482]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[26166-26171]:Modifier[26483-26488]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26172-26178]:SimpleType[26489-26495]"
  }, {
    "left" : "getID",
    "right" : "getID",
    "info" : "SimpleName[26179-26184]:SimpleName[26496-26501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26187-26214]:Block[26504-26531]"
  }, {
    "left" : "return iID;",
    "right" : "return iID;",
    "info" : "ReturnStatement[26197-26208]:ReturnStatement[26514-26525]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26543-26549]:Modifier[26860-26866]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[26550-26558]:Modifier[26867-26875]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26559-26565]:SimpleType[26876-26882]"
  }, {
    "left" : "getNameKey",
    "right" : "getNameKey",
    "info" : "SimpleName[26566-26576]:SimpleName[26883-26893]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[26577-26589]:SingleVariableDeclaration[26894-26906]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27015-27021]:Modifier[27332-27338]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[27022-27027]:Modifier[27339-27344]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[27028-27034]:SimpleType[27345-27351]"
  }, {
    "left" : "getShortName",
    "right" : "getShortName",
    "info" : "SimpleName[27035-27047]:SimpleName[27352-27364]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[27048-27060]:SingleVariableDeclaration[27365-27377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27062-27113]:Block[27379-27430]"
  }, {
    "left" : "return getShortName(instant, null);",
    "right" : "return getShortName(instant, null);",
    "info" : "ReturnStatement[27072-27107]:ReturnStatement[27389-27424]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27594-27600]:Modifier[27911-27917]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[27601-27607]:SimpleType[27918-27924]"
  }, {
    "left" : "getShortName",
    "right" : "getShortName",
    "info" : "SimpleName[27608-27620]:SimpleName[27925-27937]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[27621-27633]:SingleVariableDeclaration[27938-27950]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[27635-27648]:SingleVariableDeclaration[27952-27965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27650-28033]:Block[27967-28350]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[27660-27733]:IfStatement[27977-28050]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27680-27733]:Block[27997-28050]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[27694-27723]:ExpressionStatement[28011-28040]"
  }, {
    "left" : "String nameKey = getNameKey(instant);",
    "right" : "String nameKey = getNameKey(instant);",
    "info" : "VariableDeclarationStatement[27742-27779]:VariableDeclarationStatement[28059-28096]"
  }, {
    "left" : "if (nameKey == null)",
    "right" : "if (nameKey == null)",
    "info" : "IfStatement[27788-27844]:IfStatement[28105-28161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27809-27844]:Block[28126-28161]"
  }, {
    "left" : "return iID;",
    "right" : "return iID;",
    "info" : "ReturnStatement[27823-27834]:ReturnStatement[28140-28151]"
  }, {
    "left" : "String name = cNameProvider.getShortName(locale, iID, nameKey);",
    "right" : "String name = cNameProvider.getShortName(locale, iID, nameKey);",
    "info" : "VariableDeclarationStatement[27853-27916]:VariableDeclarationStatement[28170-28233]"
  }, {
    "left" : "if (name != null)",
    "right" : "if (name != null)",
    "info" : "IfStatement[27925-27979]:IfStatement[28242-28296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27943-27979]:Block[28260-28296]"
  }, {
    "left" : "return name;",
    "right" : "return name;",
    "info" : "ReturnStatement[27957-27969]:ReturnStatement[28274-28286]"
  }, {
    "left" : "return printOffset(getOffset(instant));",
    "right" : "return printOffset(getOffset(instant));",
    "info" : "ReturnStatement[27988-28027]:ReturnStatement[28305-28344]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28455-28461]:Modifier[28772-28778]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[28462-28467]:Modifier[28779-28784]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[28468-28474]:SimpleType[28785-28791]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[28475-28482]:SimpleName[28792-28799]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[28483-28495]:SingleVariableDeclaration[28800-28812]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28497-28543]:Block[28814-28860]"
  }, {
    "left" : "return getName(instant, null);",
    "right" : "return getName(instant, null);",
    "info" : "ReturnStatement[28507-28537]:ReturnStatement[28824-28854]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29022-29028]:Modifier[29339-29345]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[29029-29035]:SimpleType[29346-29352]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[29036-29043]:SimpleName[29353-29360]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[29044-29056]:SingleVariableDeclaration[29361-29373]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[29058-29071]:SingleVariableDeclaration[29375-29388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29073-29451]:Block[29390-29768]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[29083-29156]:IfStatement[29400-29473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29103-29156]:Block[29420-29473]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[29117-29146]:ExpressionStatement[29434-29463]"
  }, {
    "left" : "String nameKey = getNameKey(instant);",
    "right" : "String nameKey = getNameKey(instant);",
    "info" : "VariableDeclarationStatement[29165-29202]:VariableDeclarationStatement[29482-29519]"
  }, {
    "left" : "if (nameKey == null)",
    "right" : "if (nameKey == null)",
    "info" : "IfStatement[29211-29267]:IfStatement[29528-29584]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29232-29267]:Block[29549-29584]"
  }, {
    "left" : "return iID;",
    "right" : "return iID;",
    "info" : "ReturnStatement[29246-29257]:ReturnStatement[29563-29574]"
  }, {
    "left" : "String name = cNameProvider.getName(locale, iID, nameKey);",
    "right" : "String name = cNameProvider.getName(locale, iID, nameKey);",
    "info" : "VariableDeclarationStatement[29276-29334]:VariableDeclarationStatement[29593-29651]"
  }, {
    "left" : "if (name != null)",
    "right" : "if (name != null)",
    "info" : "IfStatement[29343-29397]:IfStatement[29660-29714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29361-29397]:Block[29678-29714]"
  }, {
    "left" : "return name;",
    "right" : "return name;",
    "info" : "ReturnStatement[29375-29387]:ReturnStatement[29692-29704]"
  }, {
    "left" : "return printOffset(getOffset(instant));",
    "right" : "return printOffset(getOffset(instant));",
    "info" : "ReturnStatement[29406-29445]:ReturnStatement[29723-29762]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29703-29709]:Modifier[30020-30026]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[29710-29718]:Modifier[30027-30035]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[29719-29722]:PrimitiveType[30036-30039]"
  }, {
    "left" : "getOffset",
    "right" : "getOffset",
    "info" : "SimpleName[29723-29732]:SimpleName[30040-30049]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[29733-29745]:SingleVariableDeclaration[30050-30062]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29984-29990]:Modifier[30301-30307]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[29991-29996]:Modifier[30308-30313]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[29997-30000]:PrimitiveType[30314-30317]"
  }, {
    "left" : "getOffset",
    "right" : "getOffset",
    "info" : "SimpleName[30001-30010]:SimpleName[30318-30327]"
  }, {
    "left" : "ReadableInstant instant",
    "right" : "ReadableInstant instant",
    "info" : "SingleVariableDeclaration[30011-30034]:SingleVariableDeclaration[30328-30351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30036-30196]:Block[30353-30513]"
  }, {
    "left" : "if (instant == null)",
    "right" : "if (instant == null)",
    "info" : "IfStatement[30046-30143]:IfStatement[30363-30460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30067-30143]:Block[30384-30460]"
  }, {
    "left" : "return getOffset(DateTimeUtils.currentTimeMillis());",
    "right" : "return getOffset(DateTimeUtils.currentTimeMillis());",
    "info" : "ReturnStatement[30081-30133]:ReturnStatement[30398-30450]"
  }, {
    "left" : "return getOffset(instant.getMillis());",
    "right" : "return getOffset(instant.getMillis());",
    "info" : "ReturnStatement[30152-30190]:ReturnStatement[30469-30507]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30497-30503]:Modifier[30814-30820]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[30504-30512]:Modifier[30821-30829]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[30513-30516]:PrimitiveType[30830-30833]"
  }, {
    "left" : "getStandardOffset",
    "right" : "getStandardOffset",
    "info" : "SimpleName[30517-30534]:SimpleName[30834-30851]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[30535-30547]:SingleVariableDeclaration[30852-30864]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31306-31312]:Modifier[31623-31629]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[31313-31320]:PrimitiveType[31630-31637]"
  }, {
    "left" : "isStandardOffset",
    "right" : "isStandardOffset",
    "info" : "SimpleName[31321-31337]:SimpleName[31638-31654]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[31338-31350]:SingleVariableDeclaration[31655-31667]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31352-31424]:Block[31669-31741]"
  }, {
    "left" : "return getOffset(instant) == getStandardOffset(instant);",
    "right" : "return getOffset(instant) == getStandardOffset(instant);",
    "info" : "ReturnStatement[31362-31418]:ReturnStatement[31679-31735]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33022-33028]:Modifier[33339-33345]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[33029-33032]:PrimitiveType[33346-33349]"
  }, {
    "left" : "getOffsetFromLocal",
    "right" : "getOffsetFromLocal",
    "info" : "SimpleName[33033-33051]:SimpleName[33350-33368]"
  }, {
    "left" : "long instantLocal",
    "right" : "long instantLocal",
    "info" : "SingleVariableDeclaration[33052-33069]:SingleVariableDeclaration[33369-33386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33071-34581]:Block[33388-34898]"
  }, {
    "left" : "final int offsetLocal = getOffset(instantLocal);",
    "right" : "final int offsetLocal = getOffset(instantLocal);",
    "info" : "VariableDeclarationStatement[33140-33188]:VariableDeclarationStatement[33457-33505]"
  }, {
    "left" : "final long instantAdjusted = instantLocal - offsetLocal;",
    "right" : "final long instantAdjusted = instantLocal - offsetLocal;",
    "info" : "VariableDeclarationStatement[33269-33325]:VariableDeclarationStatement[33586-33642]"
  }, {
    "left" : "final int offsetAdjusted = getOffset(instantAdjusted);",
    "right" : "final int offsetAdjusted = getOffset(instantAdjusted);",
    "info" : "VariableDeclarationStatement[33334-33388]:VariableDeclarationStatement[33651-33705]"
  }, {
    "left" : "if (offsetLocal != offsetAdjusted)",
    "right" : "if (offsetLocal != offsetAdjusted)",
    "info" : "IfStatement[33462-34544]:IfStatement[33779-34861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33497-34174]:Block[33814-34491]"
  }, {
    "left" : "if ((offsetLocal - offsetAdjusted) < 0)",
    "right" : "if ((offsetLocal - offsetAdjusted) < 0)",
    "info" : "IfStatement[33663-34164]:IfStatement[33980-34481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33703-34164]:Block[34020-34481]"
  }, {
    "left" : "long nextLocal = nextTransition(instantAdjusted);",
    "right" : "long nextLocal = nextTransition(instantAdjusted);",
    "info" : "VariableDeclarationStatement[33911-33960]:VariableDeclarationStatement[34228-34277]"
  }, {
    "left" : "long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);",
    "right" : "long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);",
    "info" : "VariableDeclarationStatement[33977-34043]:VariableDeclarationStatement[34294-34360]"
  }, {
    "left" : "if (nextLocal != nextAdjusted)",
    "right" : "if (nextLocal != nextAdjusted)",
    "info" : "IfStatement[34060-34150]:IfStatement[34377-34467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34091-34150]:Block[34408-34467]"
  }, {
    "left" : "return offsetLocal;",
    "right" : "return offsetLocal;",
    "info" : "ReturnStatement[34113-34132]:ReturnStatement[34430-34449]"
  }, {
    "left" : "if (offsetLocal >= 0)",
    "right" : "if (offsetLocal >= 0)",
    "info" : "IfStatement[34180-34544]:IfStatement[34497-34861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34202-34544]:Block[34519-34861]"
  }, {
    "left" : "long prev = previousTransition(instantAdjusted);",
    "right" : "long prev = previousTransition(instantAdjusted);",
    "info" : "VariableDeclarationStatement[34216-34264]:VariableDeclarationStatement[34533-34581]"
  }, {
    "left" : "if (prev < instantAdjusted)",
    "right" : "if (prev < instantAdjusted)",
    "info" : "IfStatement[34277-34534]:IfStatement[34594-34851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34305-34534]:Block[34622-34851]"
  }, {
    "left" : "int offsetPrev = getOffset(prev);",
    "right" : "int offsetPrev = getOffset(prev);",
    "info" : "VariableDeclarationStatement[34323-34356]:VariableDeclarationStatement[34640-34673]"
  }, {
    "left" : "int diff = offsetPrev - offsetLocal;",
    "right" : "int diff = offsetPrev - offsetLocal;",
    "info" : "VariableDeclarationStatement[34373-34409]:VariableDeclarationStatement[34690-34726]"
  }, {
    "left" : "if (instantAdjusted - prev <= diff)",
    "right" : "if (instantAdjusted - prev <= diff)",
    "info" : "IfStatement[34426-34520]:IfStatement[34743-34837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34462-34520]:Block[34779-34837]"
  }, {
    "left" : "return offsetPrev;",
    "right" : "return offsetPrev;",
    "info" : "ReturnStatement[34484-34502]:ReturnStatement[34801-34819]"
  }, {
    "left" : "return offsetAdjusted;",
    "right" : "return offsetAdjusted;",
    "info" : "ReturnStatement[34553-34575]:ReturnStatement[34870-34892]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35031-35037]:Modifier[35348-35354]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[35038-35042]:PrimitiveType[35355-35359]"
  }, {
    "left" : "convertUTCToLocal",
    "right" : "convertUTCToLocal",
    "info" : "SimpleName[35043-35060]:SimpleName[35360-35377]"
  }, {
    "left" : "long instantUTC",
    "right" : "long instantUTC",
    "info" : "SingleVariableDeclaration[35061-35076]:SingleVariableDeclaration[35378-35393]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35078-35459]:Block[35395-35776]"
  }, {
    "left" : "int offset = getOffset(instantUTC);",
    "right" : "int offset = getOffset(instantUTC);",
    "info" : "VariableDeclarationStatement[35088-35123]:VariableDeclarationStatement[35405-35440]"
  }, {
    "left" : "long instantLocal = instantUTC + offset;",
    "right" : "long instantLocal = instantUTC + offset;",
    "info" : "VariableDeclarationStatement[35132-35172]:VariableDeclarationStatement[35449-35489]"
  }, {
    "left" : "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0)",
    "right" : "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0)",
    "info" : "IfStatement[35260-35424]:IfStatement[35577-35741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35327-35424]:Block[35644-35741]"
  }, {
    "left" : "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
    "right" : "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
    "info" : "ThrowStatement[35341-35414]:ThrowStatement[35658-35731]"
  }, {
    "left" : "return instantLocal;",
    "right" : "return instantLocal;",
    "info" : "ReturnStatement[35433-35453]:ReturnStatement[35750-35770]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36372-36378]:Modifier[36689-36695]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[36379-36383]:PrimitiveType[36696-36700]"
  }, {
    "left" : "convertLocalToUTC",
    "right" : "convertLocalToUTC",
    "info" : "SimpleName[36384-36401]:SimpleName[36701-36718]"
  }, {
    "left" : "long instantLocal",
    "right" : "long instantLocal",
    "info" : "SingleVariableDeclaration[36402-36419]:SingleVariableDeclaration[36719-36736]"
  }, {
    "left" : "boolean strict",
    "right" : "boolean strict",
    "info" : "SingleVariableDeclaration[36421-36435]:SingleVariableDeclaration[36738-36752]"
  }, {
    "left" : "long originalInstantUTC",
    "right" : "long originalInstantUTC",
    "info" : "SingleVariableDeclaration[36437-36460]:SingleVariableDeclaration[36754-36777]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36462-36801]:Block[36779-37118]"
  }, {
    "left" : "int offsetOriginal = getOffset(originalInstantUTC);",
    "right" : "int offsetOriginal = getOffset(originalInstantUTC);",
    "info" : "VariableDeclarationStatement[36472-36523]:VariableDeclarationStatement[36789-36840]"
  }, {
    "left" : "long instantUTC = instantLocal - offsetOriginal;",
    "right" : "long instantUTC = instantLocal - offsetOriginal;",
    "info" : "VariableDeclarationStatement[36532-36580]:VariableDeclarationStatement[36849-36897]"
  }, {
    "left" : "int offsetLocalFromOriginal = getOffset(instantUTC);",
    "right" : "int offsetLocalFromOriginal = getOffset(instantUTC);",
    "info" : "VariableDeclarationStatement[36589-36641]:VariableDeclarationStatement[36906-36958]"
  }, {
    "left" : "if (offsetLocalFromOriginal == offsetOriginal)",
    "right" : "if (offsetLocalFromOriginal == offsetOriginal)",
    "info" : "IfStatement[36650-36739]:IfStatement[36967-37056]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36697-36739]:Block[37014-37056]"
  }, {
    "left" : "return instantUTC;",
    "right" : "return instantUTC;",
    "info" : "ReturnStatement[36711-36729]:ReturnStatement[37028-37046]"
  }, {
    "left" : "return convertLocalToUTC(instantLocal, strict);",
    "right" : "return convertLocalToUTC(instantLocal, strict);",
    "info" : "ReturnStatement[36748-36795]:ReturnStatement[37065-37112]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37411-37417]:Modifier[37728-37734]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[37418-37422]:PrimitiveType[37735-37739]"
  }, {
    "left" : "convertLocalToUTC",
    "right" : "convertLocalToUTC",
    "info" : "SimpleName[37423-37440]:SimpleName[37740-37757]"
  }, {
    "left" : "long instantLocal",
    "right" : "long instantLocal",
    "info" : "SingleVariableDeclaration[37441-37458]:SingleVariableDeclaration[37758-37775]"
  }, {
    "left" : "boolean strict",
    "right" : "boolean strict",
    "info" : "SingleVariableDeclaration[37460-37474]:SingleVariableDeclaration[37777-37791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37476-39554]:Block[37793-39871]"
  }, {
    "left" : "int offsetLocal = getOffset(instantLocal);",
    "right" : "int offsetLocal = getOffset(instantLocal);",
    "info" : "VariableDeclarationStatement[37545-37587]:VariableDeclarationStatement[37862-37904]"
  }, {
    "left" : "int offset = getOffset(instantLocal - offsetLocal);",
    "right" : "int offset = getOffset(instantLocal - offsetLocal);",
    "info" : "VariableDeclarationStatement[37668-37719]:VariableDeclarationStatement[37985-38036]"
  }, {
    "left" : "if (offsetLocal != offset)",
    "right" : "if (offsetLocal != offset)",
    "info" : "IfStatement[37793-39182]:IfStatement[38110-39499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37820-39182]:Block[38137-39499]"
  }, {
    "left" : "if (strict || offsetLocal < 0)",
    "right" : "if (strict || offsetLocal < 0)",
    "info" : "IfStatement[38039-39172]:IfStatement[38356-39489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38070-39172]:Block[38387-39489]"
  }, {
    "left" : "long nextLocal = nextTransition(instantLocal - offsetLocal);",
    "right" : "long nextLocal = nextTransition(instantLocal - offsetLocal);",
    "info" : "VariableDeclarationStatement[38142-38202]:VariableDeclarationStatement[38459-38519]"
  }, {
    "left" : "if (nextLocal == (instantLocal - offsetLocal))",
    "right" : "if (nextLocal == (instantLocal - offsetLocal))",
    "info" : "IfStatement[38219-38333]:IfStatement[38536-38650]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38266-38333]:Block[38583-38650]"
  }, {
    "left" : "nextLocal = Long.MAX_VALUE;",
    "right" : "nextLocal = Long.MAX_VALUE;",
    "info" : "ExpressionStatement[38288-38315]:ExpressionStatement[38605-38632]"
  }, {
    "left" : "long nextAdjusted = nextTransition(instantLocal - offset);",
    "right" : "long nextAdjusted = nextTransition(instantLocal - offset);",
    "info" : "VariableDeclarationStatement[38350-38408]:VariableDeclarationStatement[38667-38725]"
  }, {
    "left" : "if (nextAdjusted == (instantLocal - offset))",
    "right" : "if (nextAdjusted == (instantLocal - offset))",
    "info" : "IfStatement[38425-38540]:IfStatement[38742-38857]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38470-38540]:Block[38787-38857]"
  }, {
    "left" : "nextAdjusted = Long.MAX_VALUE;",
    "right" : "nextAdjusted = Long.MAX_VALUE;",
    "info" : "ExpressionStatement[38492-38522]:ExpressionStatement[38809-38839]"
  }, {
    "left" : "if (nextLocal != nextAdjusted)",
    "right" : "if (nextLocal != nextAdjusted)",
    "info" : "IfStatement[38557-39158]:IfStatement[38874-39475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38588-39158]:Block[38905-39475]"
  }, {
    "left" : "if (strict)",
    "right" : "if (strict)",
    "info" : "IfStatement[38659-39140]:IfStatement[38976-39457]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38671-38829]:Block[38988-39146]"
  }, {
    "left" : "throw new IllegalInstantException(instantLocal, getID());",
    "right" : "throw new IllegalInstantException(instantLocal, getID());",
    "info" : "ThrowStatement[38750-38807]:ThrowStatement[39067-39124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38835-39140]:Block[39152-39457]"
  }, {
    "left" : "offset = offsetLocal;",
    "right" : "offset = offsetLocal;",
    "info" : "ExpressionStatement[39097-39118]:ExpressionStatement[39414-39435]"
  }, {
    "left" : "long instantUTC = instantLocal - offset;",
    "right" : "long instantUTC = instantLocal - offset;",
    "info" : "VariableDeclarationStatement[39221-39261]:VariableDeclarationStatement[39538-39578]"
  }, {
    "left" : "if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0)",
    "right" : "if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0)",
    "info" : "IfStatement[39351-39521]:IfStatement[39668-39838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39419-39521]:Block[39736-39838]"
  }, {
    "left" : "throw new ArithmeticException(\"Subtracting time zone offset caused overflow\");",
    "right" : "throw new ArithmeticException(\"Subtracting time zone offset caused overflow\");",
    "info" : "ThrowStatement[39433-39511]:ThrowStatement[39750-39828]"
  }, {
    "left" : "return instantUTC;",
    "right" : "return instantUTC;",
    "info" : "ReturnStatement[39530-39548]:ReturnStatement[39847-39865]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40043-40049]:Modifier[40360-40366]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[40050-40054]:PrimitiveType[40367-40371]"
  }, {
    "left" : "getMillisKeepLocal",
    "right" : "getMillisKeepLocal",
    "info" : "SimpleName[40055-40073]:SimpleName[40372-40390]"
  }, {
    "left" : "DateTimeZone newZone",
    "right" : "DateTimeZone newZone",
    "info" : "SingleVariableDeclaration[40074-40094]:SingleVariableDeclaration[40391-40411]"
  }, {
    "left" : "long oldInstant",
    "right" : "long oldInstant",
    "info" : "SingleVariableDeclaration[40096-40111]:SingleVariableDeclaration[40413-40428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40113-40416]:Block[40430-40733]"
  }, {
    "left" : "if (newZone == null)",
    "right" : "if (newZone == null)",
    "info" : "IfStatement[40123-40204]:IfStatement[40440-40521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40144-40204]:Block[40461-40521]"
  }, {
    "left" : "newZone = DateTimeZone.getDefault();",
    "right" : "newZone = DateTimeZone.getDefault();",
    "info" : "ExpressionStatement[40158-40194]:ExpressionStatement[40475-40511]"
  }, {
    "left" : "if (newZone == this)",
    "right" : "if (newZone == this)",
    "info" : "IfStatement[40213-40276]:IfStatement[40530-40593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40234-40276]:Block[40551-40593]"
  }, {
    "left" : "return oldInstant;",
    "right" : "return oldInstant;",
    "info" : "ReturnStatement[40248-40266]:ReturnStatement[40565-40583]"
  }, {
    "left" : "long instantLocal = convertUTCToLocal(oldInstant);",
    "right" : "long instantLocal = convertUTCToLocal(oldInstant);",
    "info" : "VariableDeclarationStatement[40285-40335]:VariableDeclarationStatement[40602-40652]"
  }, {
    "left" : "return newZone.convertLocalToUTC(instantLocal, false, oldInstant);",
    "right" : "return newZone.convertLocalToUTC(instantLocal, false, oldInstant);",
    "info" : "ReturnStatement[40344-40410]:ReturnStatement[40661-40727]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45371-45377]:Modifier[45688-45694]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[45378-45385]:PrimitiveType[45695-45702]"
  }, {
    "left" : "isLocalDateTimeGap",
    "right" : "isLocalDateTimeGap",
    "info" : "SimpleName[45386-45404]:SimpleName[45703-45721]"
  }, {
    "left" : "LocalDateTime localDateTime",
    "right" : "LocalDateTime localDateTime",
    "info" : "SingleVariableDeclaration[45405-45432]:SingleVariableDeclaration[45722-45749]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45434-45668]:Block[45751-45985]"
  }, {
    "left" : "if (isFixed())",
    "right" : "if (isFixed())",
    "info" : "IfStatement[45444-45496]:IfStatement[45761-45813]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45459-45496]:Block[45776-45813]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[45473-45486]:ReturnStatement[45790-45803]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[45505-45662]:TryStatement[45822-45979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45509-45590]:Block[45826-45907]"
  }, {
    "left" : "localDateTime.toDateTime(this);",
    "right" : "localDateTime.toDateTime(this);",
    "info" : "ExpressionStatement[45523-45554]:ExpressionStatement[45840-45871]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[45567-45580]:ReturnStatement[45884-45897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45626-45662]:Block[45943-45979]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[45640-45652]:ReturnStatement[45957-45969]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45926-45932]:Modifier[46243-46249]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[45933-45937]:PrimitiveType[46250-46254]"
  }, {
    "left" : "adjustOffset",
    "right" : "adjustOffset",
    "info" : "SimpleName[45938-45950]:SimpleName[46255-46267]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[45951-45963]:SingleVariableDeclaration[46268-46280]"
  }, {
    "left" : "boolean earlierOrLater",
    "right" : "boolean earlierOrLater",
    "info" : "SingleVariableDeclaration[45965-45987]:SingleVariableDeclaration[46282-46304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45989-47301]:Block[46306-47618]"
  }, {
    "left" : "long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;",
    "right" : "long instantBefore = instant - 3 * DateTimeConstants.MILLIS_PER_HOUR;",
    "info" : "VariableDeclarationStatement[46158-46227]:VariableDeclarationStatement[46475-46544]"
  }, {
    "left" : "long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;",
    "right" : "long instantAfter = instant + 3 * DateTimeConstants.MILLIS_PER_HOUR;",
    "info" : "VariableDeclarationStatement[46236-46304]:VariableDeclarationStatement[46553-46621]"
  }, {
    "left" : "long offsetBefore = getOffset(instantBefore);",
    "right" : "long offsetBefore = getOffset(instantBefore);",
    "info" : "VariableDeclarationStatement[46313-46358]:VariableDeclarationStatement[46630-46675]"
  }, {
    "left" : "long offsetAfter = getOffset(instantAfter);",
    "right" : "long offsetAfter = getOffset(instantAfter);",
    "info" : "VariableDeclarationStatement[46367-46410]:VariableDeclarationStatement[46684-46727]"
  }, {
    "left" : "if (offsetBefore <= offsetAfter)",
    "right" : "if (offsetBefore <= offsetAfter)",
    "info" : "IfStatement[46419-46553]:IfStatement[46736-46870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46452-46553]:Block[46769-46870]"
  }, {
    "left" : "return instant;",
    "right" : "return instant;",
    "info" : "ReturnStatement[46466-46481]:ReturnStatement[46783-46798]"
  }, {
    "left" : "long diff = offsetBefore - offsetAfter;",
    "right" : "long diff = offsetBefore - offsetAfter;",
    "info" : "VariableDeclarationStatement[46641-46680]:VariableDeclarationStatement[46958-46997]"
  }, {
    "left" : "long transition = nextTransition(instantBefore);",
    "right" : "long transition = nextTransition(instantBefore);",
    "info" : "VariableDeclarationStatement[46689-46737]:VariableDeclarationStatement[47006-47054]"
  }, {
    "left" : "long overlapStart = transition - diff;",
    "right" : "long overlapStart = transition - diff;",
    "info" : "VariableDeclarationStatement[46746-46784]:VariableDeclarationStatement[47063-47101]"
  }, {
    "left" : "long overlapEnd = transition + diff;",
    "right" : "long overlapEnd = transition + diff;",
    "info" : "VariableDeclarationStatement[46793-46829]:VariableDeclarationStatement[47110-47146]"
  }, {
    "left" : "if (instant < overlapStart || instant >= overlapEnd)",
    "right" : "if (instant < overlapStart || instant >= overlapEnd)",
    "info" : "IfStatement[46838-46947]:IfStatement[47155-47264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46891-46947]:Block[47208-47264]"
  }, {
    "left" : "return instant;",
    "right" : "return instant;",
    "info" : "ReturnStatement[46903-46918]:ReturnStatement[47220-47235]"
  }, {
    "left" : "long afterStart = instant - overlapStart;",
    "right" : "long afterStart = instant - overlapStart;",
    "info" : "VariableDeclarationStatement[46993-47034]:VariableDeclarationStatement[47310-47351]"
  }, {
    "left" : "if (afterStart >= diff)",
    "right" : "if (afterStart >= diff)",
    "info" : "IfStatement[47043-47295]:IfStatement[47360-47612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47067-47177]:Block[47384-47494]"
  }, {
    "left" : "return earlierOrLater ? instant : instant - diff;",
    "right" : "return earlierOrLater ? instant : instant - diff;",
    "info" : "ReturnStatement[47118-47167]:ReturnStatement[47435-47484]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47183-47295]:Block[47500-47612]"
  }, {
    "left" : "return earlierOrLater ? instant + diff : instant;",
    "right" : "return earlierOrLater ? instant + diff : instant;",
    "info" : "ReturnStatement[47236-47285]:ReturnStatement[47553-47602]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47623-47629]:Modifier[47940-47946]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[47630-47638]:Modifier[47947-47955]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[47639-47646]:PrimitiveType[47956-47963]"
  }, {
    "left" : "isFixed",
    "right" : "isFixed",
    "info" : "SimpleName[47647-47654]:SimpleName[47964-47971]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48002-48008]:Modifier[48319-48325]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[48009-48017]:Modifier[48326-48334]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[48018-48022]:PrimitiveType[48335-48339]"
  }, {
    "left" : "nextTransition",
    "right" : "nextTransition",
    "info" : "SimpleName[48023-48037]:SimpleName[48340-48354]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[48038-48050]:SingleVariableDeclaration[48355-48367]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48398-48404]:Modifier[48715-48721]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[48405-48413]:Modifier[48722-48730]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[48414-48418]:PrimitiveType[48731-48735]"
  }, {
    "left" : "previousTransition",
    "right" : "previousTransition",
    "info" : "SimpleName[48419-48437]:SimpleName[48736-48754]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[48438-48450]:SingleVariableDeclaration[48755-48767]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48693-48699]:Modifier[49010-49016]"
  }, {
    "left" : "java.util.TimeZone",
    "right" : "java.util.TimeZone",
    "info" : "SimpleType[48700-48718]:SimpleType[49017-49035]"
  }, {
    "left" : "toTimeZone",
    "right" : "toTimeZone",
    "info" : "SimpleName[48719-48729]:SimpleName[49036-49046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48732-48791]:Block[49049-49108]"
  }, {
    "left" : "return java.util.TimeZone.getTimeZone(iID);",
    "right" : "return java.util.TimeZone.getTimeZone(iID);",
    "info" : "ReturnStatement[48742-48785]:ReturnStatement[49059-49102]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48986-48992]:Modifier[49303-49309]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[48993-49001]:Modifier[49310-49318]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[49002-49009]:PrimitiveType[49319-49326]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[49010-49016]:SimpleName[49327-49333]"
  }, {
    "left" : "Object object",
    "right" : "Object object",
    "info" : "SingleVariableDeclaration[49017-49030]:SingleVariableDeclaration[49334-49347]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49143-49149]:Modifier[49460-49466]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[49150-49153]:PrimitiveType[49467-49470]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[49154-49162]:SimpleName[49471-49479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49165-49212]:Block[49482-49529]"
  }, {
    "left" : "return 57 + getID().hashCode();",
    "right" : "return 57 + getID().hashCode();",
    "info" : "ReturnStatement[49175-49206]:ReturnStatement[49492-49523]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49335-49341]:Modifier[49652-49658]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[49342-49348]:SimpleType[49659-49665]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[49349-49357]:SimpleName[49666-49674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49360-49391]:Block[49677-49708]"
  }, {
    "left" : "return getID();",
    "right" : "return getID();",
    "info" : "ReturnStatement[49370-49385]:ReturnStatement[49687-49702]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[49660-49669]:Modifier[49977-49986]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[49670-49676]:SimpleType[49987-49993]"
  }, {
    "left" : "writeReplace",
    "right" : "writeReplace",
    "info" : "SimpleName[49677-49689]:SimpleName[49994-50006]"
  }, {
    "left" : "ObjectStreamException",
    "right" : "ObjectStreamException",
    "info" : "SimpleType[49699-49720]:SimpleType[50016-50037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49721-49758]:Block[50038-50075]"
  }, {
    "left" : "return new Stub(iID);",
    "right" : "return new Stub(iID);",
    "info" : "ReturnStatement[49731-49752]:ReturnStatement[50048-50069]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[49826-49833]:Modifier[50143-50150]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[49834-49840]:Modifier[50151-50157]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[49841-49846]:Modifier[50158-50163]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[49847-49852]:TYPE_DECLARATION_KIND[50164-50169]"
  }, {
    "left" : "Stub",
    "right" : "Stub",
    "info" : "SimpleName[50166-50170]:SimpleName[50483-50487]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[50171-50180]:SingleVariableDeclaration[50488-50497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50182-50215]:Block[50499-50532]"
  }, {
    "left" : "iID = id;",
    "right" : "iID = id;",
    "info" : "ExpressionStatement[50196-50205]:ExpressionStatement[50513-50522]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[50225-50232]:Modifier[50542-50549]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[50233-50237]:PrimitiveType[50550-50554]"
  }, {
    "left" : "writeObject",
    "right" : "writeObject",
    "info" : "SimpleName[50238-50249]:SimpleName[50555-50566]"
  }, {
    "left" : "ObjectOutputStream out",
    "right" : "ObjectOutputStream out",
    "info" : "SingleVariableDeclaration[50250-50272]:SingleVariableDeclaration[50567-50589]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[50281-50292]:SimpleType[50598-50609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50293-50335]:Block[50610-50652]"
  }, {
    "left" : "out.writeUTF(iID);",
    "right" : "out.writeUTF(iID);",
    "info" : "ExpressionStatement[50307-50325]:ExpressionStatement[50624-50642]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[50345-50352]:Modifier[50662-50669]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[50353-50357]:PrimitiveType[50670-50674]"
  }, {
    "left" : "readObject",
    "right" : "readObject",
    "info" : "SimpleName[50358-50368]:SimpleName[50675-50685]"
  }, {
    "left" : "ObjectInputStream in",
    "right" : "ObjectInputStream in",
    "info" : "SingleVariableDeclaration[50369-50389]:SingleVariableDeclaration[50686-50706]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[50398-50409]:SimpleType[50715-50726]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50410-50453]:Block[50727-50770]"
  }, {
    "left" : "iID = in.readUTF();",
    "right" : "iID = in.readUTF();",
    "info" : "ExpressionStatement[50424-50443]:ExpressionStatement[50741-50760]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[50463-50470]:Modifier[50780-50787]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[50471-50477]:SimpleType[50788-50794]"
  }, {
    "left" : "readResolve",
    "right" : "readResolve",
    "info" : "SimpleName[50478-50489]:SimpleName[50795-50806]"
  }, {
    "left" : "ObjectStreamException",
    "right" : "ObjectStreamException",
    "info" : "SimpleType[50499-50520]:SimpleType[50816-50837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50521-50563]:Block[50838-50880]"
  }, {
    "left" : "return forID(iID);",
    "right" : "return forID(iID);",
    "info" : "ReturnStatement[50535-50553]:ReturnStatement[50852-50870]"
  } ]
}