{
  "matchedElements" : [
 {
    "left" : "class : Base64InputStream",
    "right" : "class : Base64InputStream",
    "info" : "TypeDeclaration[939-7463]:TypeDeclaration[939-7324]"
  }, {
    "left" : "doEncode",
    "right" : "doEncode",
    "info" : "FieldDeclaration[2113-2144]:FieldDeclaration[2113-2144]"
  }, {
    "left" : "base64",
    "right" : "base64",
    "info" : "FieldDeclaration[2150-2178]:FieldDeclaration[2150-2178]"
  }, {
    "left" : "singleByte",
    "right" : "singleByte",
    "info" : "FieldDeclaration[2184-2230]:FieldDeclaration[2184-2230]"
  }, {
    "left" : "public Base64InputStream(in )",
    "right" : "public Base64InputStream(in )",
    "info" : "MethodDeclaration[2236-2506]:MethodDeclaration[2236-2506]"
  }, {
    "left" : "public Base64InputStream(in , doEncode boolean)",
    "right" : "public Base64InputStream(in , doEncode boolean)",
    "info" : "MethodDeclaration[2512-3017]:MethodDeclaration[2512-3017]"
  }, {
    "left" : "public Base64InputStream(in , doEncode boolean, lineLength int, lineSeparator )",
    "right" : "public Base64InputStream(in , doEncode boolean, lineLength int, lineSeparator )",
    "info" : "MethodDeclaration[3023-4161]:MethodDeclaration[3023-4161]"
  }, {
    "left" : "public read() : int",
    "right" : "public read() : int",
    "info" : "MethodDeclaration[4167-4702]:MethodDeclaration[4167-4702]"
  }, {
    "left" : "public read(b byte, offset int, len int) : int",
    "right" : "public read(b byte, offset int, len int) : int",
    "info" : "MethodDeclaration[4708-7293]:MethodDeclaration[4708-7154]"
  }, {
    "left" : "public markSupported() : boolean",
    "right" : "public markSupported() : boolean",
    "info" : "MethodDeclaration[7299-7461]:MethodDeclaration[7160-7322]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2049-2055]:Modifier[2049-2055]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[2056-2061]:TYPE_DECLARATION_KIND[2056-2061]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2433-2439]:Modifier[2433-2439]"
  }, {
    "left" : "Base64InputStream",
    "right" : "Base64InputStream",
    "info" : "SimpleName[2440-2457]:SimpleName[2440-2457]"
  }, {
    "left" : "InputStream in",
    "right" : "InputStream in",
    "info" : "SingleVariableDeclaration[2458-2472]:SingleVariableDeclaration[2458-2472]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2474-2506]:Block[2474-2506]"
  }, {
    "left" : "this(in, false);",
    "right" : "this(in, false);",
    "info" : "ConstructorInvocation[2484-2500]:ConstructorInvocation[2484-2500]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2857-2863]:Modifier[2857-2863]"
  }, {
    "left" : "Base64InputStream",
    "right" : "Base64InputStream",
    "info" : "SimpleName[2864-2881]:SimpleName[2864-2881]"
  }, {
    "left" : "InputStream in",
    "right" : "InputStream in",
    "info" : "SingleVariableDeclaration[2882-2896]:SingleVariableDeclaration[2882-2896]"
  }, {
    "left" : "boolean doEncode",
    "right" : "boolean doEncode",
    "info" : "SingleVariableDeclaration[2898-2914]:SingleVariableDeclaration[2898-2914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2916-3017]:Block[2916-3017]"
  }, {
    "left" : "super(in);",
    "right" : "super(in);",
    "info" : "SuperConstructorInvocation[2926-2936]:SuperConstructorInvocation[2926-2936]"
  }, {
    "left" : "this.doEncode = doEncode;",
    "right" : "this.doEncode = doEncode;",
    "info" : "ExpressionStatement[2945-2970]:ExpressionStatement[2945-2970]"
  }, {
    "left" : "this.base64 = new Base64(false);",
    "right" : "this.base64 = new Base64(false);",
    "info" : "ExpressionStatement[2979-3011]:ExpressionStatement[2979-3011]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3943-3949]:Modifier[3943-3949]"
  }, {
    "left" : "Base64InputStream",
    "right" : "Base64InputStream",
    "info" : "SimpleName[3950-3967]:SimpleName[3950-3967]"
  }, {
    "left" : "InputStream in",
    "right" : "InputStream in",
    "info" : "SingleVariableDeclaration[3968-3982]:SingleVariableDeclaration[3968-3982]"
  }, {
    "left" : "boolean doEncode",
    "right" : "boolean doEncode",
    "info" : "SingleVariableDeclaration[3984-4000]:SingleVariableDeclaration[3984-4000]"
  }, {
    "left" : "int lineLength",
    "right" : "int lineLength",
    "info" : "SingleVariableDeclaration[4002-4016]:SingleVariableDeclaration[4002-4016]"
  }, {
    "left" : "byte[] lineSeparator",
    "right" : "byte[] lineSeparator",
    "info" : "SingleVariableDeclaration[4018-4038]:SingleVariableDeclaration[4018-4038]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4040-4161]:Block[4040-4161]"
  }, {
    "left" : "super(in);",
    "right" : "super(in);",
    "info" : "SuperConstructorInvocation[4050-4060]:SuperConstructorInvocation[4050-4060]"
  }, {
    "left" : "this.doEncode = doEncode;",
    "right" : "this.doEncode = doEncode;",
    "info" : "ExpressionStatement[4069-4094]:ExpressionStatement[4069-4094]"
  }, {
    "left" : "this.base64 = new Base64(lineLength, lineSeparator);",
    "right" : "this.base64 = new Base64(lineLength, lineSeparator);",
    "info" : "ExpressionStatement[4103-4155]:ExpressionStatement[4103-4155]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4417-4423]:Modifier[4417-4423]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4424-4427]:PrimitiveType[4424-4427]"
  }, {
    "left" : "read",
    "right" : "read",
    "info" : "SimpleName[4428-4432]:SimpleName[4428-4432]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[4442-4453]:SimpleType[4442-4453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4454-4702]:Block[4454-4702]"
  }, {
    "left" : "int r = read(singleByte, 0, 1);",
    "right" : "int r = read(singleByte, 0, 1);",
    "info" : "VariableDeclarationStatement[4464-4495]:VariableDeclarationStatement[4464-4495]"
  }, {
    "left" : "while (r == 0)",
    "right" : "while (r == 0)",
    "info" : "WhileStatement[4504-4570]:WhileStatement[4504-4570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4519-4570]:Block[4519-4570]"
  }, {
    "left" : "r = read(singleByte, 0, 1);",
    "right" : "r = read(singleByte, 0, 1);",
    "info" : "ExpressionStatement[4533-4560]:ExpressionStatement[4533-4560]"
  }, {
    "left" : "if (r > 0)",
    "right" : "if (r > 0)",
    "info" : "IfStatement[4579-4677]:IfStatement[4579-4677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4590-4677]:Block[4590-4677]"
  }, {
    "left" : "return singleByte[0] < 0 ? 256 + singleByte[0] : singleByte[0];",
    "right" : "return singleByte[0] < 0 ? 256 + singleByte[0] : singleByte[0];",
    "info" : "ReturnStatement[4604-4667]:ReturnStatement[4604-4667]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[4686-4696]:ReturnStatement[4686-4696]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5385-5391]:Modifier[5385-5391]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[5392-5395]:PrimitiveType[5392-5395]"
  }, {
    "left" : "read",
    "right" : "read",
    "info" : "SimpleName[5396-5400]:SimpleName[5396-5400]"
  }, {
    "left" : "byte b[]",
    "right" : "byte b[]",
    "info" : "SingleVariableDeclaration[5401-5409]:SingleVariableDeclaration[5401-5409]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[5411-5421]:SingleVariableDeclaration[5411-5421]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[5423-5430]:SingleVariableDeclaration[5423-5430]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5439-5450]:SimpleType[5439-5450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5451-7293]:Block[5451-7154]"
  }, {
    "left" : "if (b == null)",
    "right" : "if (b == null)",
    "info" : "IfStatement[5461-7287]:IfStatement[5461-7148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5476-5533]:Block[5476-5533]"
  }, {
    "left" : "throw new NullPointerException();",
    "right" : "throw new NullPointerException();",
    "info" : "ThrowStatement[5490-5523]:ThrowStatement[5490-5523]"
  }, {
    "left" : "if (offset < 0 || len < 0)",
    "right" : "if (offset < 0 || len < 0)",
    "info" : "IfStatement[5539-7287]:IfStatement[5539-7148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5566-5628]:Block[5566-5628]"
  }, {
    "left" : "throw new IndexOutOfBoundsException();",
    "right" : "throw new IndexOutOfBoundsException();",
    "info" : "ThrowStatement[5580-5618]:ThrowStatement[5580-5618]"
  }, {
    "left" : "if (offset > b.length || offset + len > b.length)",
    "right" : "if (offset > b.length || offset + len > b.length)",
    "info" : "IfStatement[5634-7287]:IfStatement[5634-7148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5684-5746]:Block[5684-5746]"
  }, {
    "left" : "throw new IndexOutOfBoundsException();",
    "right" : "throw new IndexOutOfBoundsException();",
    "info" : "ThrowStatement[5698-5736]:ThrowStatement[5698-5736]"
  }, {
    "left" : "if (len == 0)",
    "right" : "if (len == 0)",
    "info" : "IfStatement[5752-7287]:IfStatement[5752-7148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5766-5799]:Block[5766-5799]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[5780-5789]:ReturnStatement[5780-5789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5805-7287]:Block[5805-7148]"
  }, {
    "left" : "int readLen = 0;",
    "right" : "int readLen = 0;",
    "info" : "VariableDeclarationStatement[5819-5835]:VariableDeclarationStatement[5819-5835]"
  }, {
    "left" : "while (readLen == 0)",
    "right" : "while (readLen == 0)",
    "info" : "WhileStatement[6657-7249]:WhileStatement[6657-7110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6678-7249]:Block[6678-7110]"
  }, {
    "left" : "if (!base64.hasData())",
    "right" : "if (!base64.hasData())",
    "info" : "IfStatement[6696-7173]:IfStatement[6696-7034]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6719-7173]:Block[6719-7034]"
  }, {
    "left" : "byte[] buf = new byte[doEncode ? 4096 : 8192];",
    "right" : "byte[] buf = new byte[doEncode ? 4096 : 8192];",
    "info" : "VariableDeclarationStatement[6741-6787]:VariableDeclarationStatement[6741-6787]"
  }, {
    "left" : "int c = in.read(buf);",
    "right" : "int c = in.read(buf);",
    "info" : "VariableDeclarationStatement[6808-6829]:VariableDeclarationStatement[6808-6829]"
  }, {
    "left" : "if (doEncode)",
    "right" : "if (doEncode)",
    "info" : "IfStatement[6989-7155]:IfStatement[6850-7016]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7003-7076]:Block[6864-6937]"
  }, {
    "left" : "base64.encode(buf, 0, c);",
    "right" : "base64.encode(buf, 0, c);",
    "info" : "ExpressionStatement[7029-7054]:ExpressionStatement[6890-6915]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7082-7155]:Block[6943-7016]"
  }, {
    "left" : "base64.decode(buf, 0, c);",
    "right" : "base64.decode(buf, 0, c);",
    "info" : "ExpressionStatement[7108-7133]:ExpressionStatement[6969-6994]"
  }, {
    "left" : "readLen = base64.readResults(b, offset, len);",
    "right" : "readLen = base64.readResults(b, offset, len);",
    "info" : "ExpressionStatement[7190-7235]:ExpressionStatement[7051-7096]"
  }, {
    "left" : "return readLen;",
    "right" : "return readLen;",
    "info" : "ReturnStatement[7262-7277]:ReturnStatement[7123-7138]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7365-7371]:Modifier[7226-7232]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7372-7379]:PrimitiveType[7233-7240]"
  }, {
    "left" : "markSupported",
    "right" : "markSupported",
    "info" : "SimpleName[7380-7393]:SimpleName[7241-7254]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7396-7461]:Block[7257-7322]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7406-7419]:ReturnStatement[7267-7280]"
  } ]
}