{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "JsdocToEs6TypedConverter",
      "info" : "TypeDeclaration[1061-3414]:TypeDeclaration[2156-11302]"
    }, {
      "left" : "private final AbstractCompiler compiler;",
      "right" : "private final AbstractCompiler compiler;",
      "info" : "FieldDeclaration[1416-1456]:FieldDeclaration[2511-2551]"
    }, {
      "left" : "public JsdocToEs6TypedConverter(AbstractCompiler compiler)",
      "right" : "public JsdocToEs6TypedConverter(AbstractCompiler compiler)",
      "info" : "MethodDeclaration[1460-1554]:MethodDeclaration[2555-2649]"
    }, {
      "left" : "public JsdocToEs6TypedConverter(AbstractCompiler compiler)",
      "right" : "public TypeDeclarationNode apply(Node node)",
      "info" : "MethodDeclaration[1460-1554]:MethodDeclaration[4949-5071]"
    }, {
      "left" : "public void process(Node externs, Node root)",
      "right" : "public void process(Node externs, Node root)",
      "info" : "MethodDeclaration[1558-1670]:MethodDeclaration[2653-2765]"
    }, {
      "left" : "public void process(Node externs, Node root)",
      "right" : "public static TypeDeclarationNode convert(@Nullable JSTypeExpression typeExpr)",
      "info" : "MethodDeclaration[1558-1670]:MethodDeclaration[5088-5300]"
    }, {
      "left" : "public void visit(NodeTraversal t, Node n, Node parent)",
      "right" : "public void visit(NodeTraversal t, Node n, Node parent)",
      "info" : "MethodDeclaration[1674-3189]:MethodDeclaration[2769-4284]"
    }, {
      "left" : "private void setTypeExpression(Node n, JSTypeExpression type)",
      "right" : "private void setTypeExpression(Node n, JSTypeExpression type)",
      "info" : "MethodDeclaration[3193-3412]:MethodDeclaration[4288-4533]"
    } ],
    "mappings" : [
 {
      "left" : "com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactory.convert",
      "right" : "com.google.javascript.rhino.TypeDeclarationsIR.stringType",
      "info" : "QualifiedName[667-737]:QualifiedName[1336-1393]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1305-1311]:Modifier[2400-2406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1305-1311]:Modifier[4674-4680]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1312-1317]:Modifier[2407-2412]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1312-1317]:Modifier[4688-4693]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1318-1323]:TYPE_DECLARATION_KIND[2413-2418]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1318-1323]:TYPE_DECLARATION_KIND[4694-4699]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "JsdocToEs6TypedConverter",
      "info" : "SimpleName[1324-1348]:SimpleName[2419-2443]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "TypeDeclarationsIRFactory",
      "info" : "SimpleName[1324-1348]:SimpleName[4700-4725]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "parameterizedType",
      "info" : "SimpleName[1324-1348]:SimpleName[7104-7121]"
    }, {
      "left" : "AbstractPostOrderCallback",
      "right" : "AbstractPostOrderCallback",
      "info" : "SimpleType[1361-1386]:SimpleType[2456-2481]"
    }, {
      "left" : "AbstractPostOrderCallback",
      "right" : "LinkedHashMap",
      "info" : "SimpleType[1361-1386]:SimpleType[7739-7752]"
    }, {
      "left" : "AbstractPostOrderCallback",
      "right" : "LinkedHashMap",
      "info" : "SimpleType[1361-1386]:SimpleType[9085-9098]"
    }, {
      "left" : "AbstractPostOrderCallback",
      "right" : "LinkedHashMap",
      "info" : "SimpleType[1361-1386]:SimpleType[9178-9191]"
    }, {
      "left" : "AbstractPostOrderCallback",
      "right" : "LinkedHashMap",
      "info" : "SimpleType[1361-1386]:SimpleType[9242-9255]"
    }, {
      "left" : "CompilerPass",
      "right" : "CompilerPass",
      "info" : "SimpleType[1398-1410]:SimpleType[2493-2505]"
    }, {
      "left" : "CompilerPass",
      "right" : "String",
      "info" : "SimpleType[1398-1410]:SimpleType[7753-7759]"
    }, {
      "left" : "CompilerPass",
      "right" : "String",
      "info" : "SimpleType[1398-1410]:SimpleType[9099-9105]"
    }, {
      "left" : "CompilerPass",
      "right" : "String",
      "info" : "SimpleType[1398-1410]:SimpleType[9192-9198]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1416-1423]:Modifier[4810-4817]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[1424-1429]:Modifier[4825-4830]"
    }, {
      "left" : "AbstractCompiler",
      "right" : "Function",
      "info" : "SimpleType[1430-1446]:SimpleType[4831-4839]"
    }, {
      "left" : "compiler",
      "right" : "Node",
      "info" : "SimpleName[1447-1455]:SimpleName[4840-4844]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1460-1466]:Modifier[2555-2561]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1460-1466]:Modifier[4969-4975]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "JsdocToEs6TypedConverter",
      "info" : "SimpleName[1467-1491]:SimpleName[2562-2586]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[1467-1491]:SimpleName[4976-4995]"
    }, {
      "left" : "AbstractCompiler compiler",
      "right" : "AbstractCompiler compiler",
      "info" : "SingleVariableDeclaration[1492-1517]:SingleVariableDeclaration[2587-2612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1519-1554]:Block[2614-2649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1519-1554]:Block[5013-5071]"
    }, {
      "left" : "this.compiler = compiler;",
      "right" : "this.compiler = compiler;",
      "info" : "ExpressionStatement[1525-1550]:ExpressionStatement[2620-2645]"
    }, {
      "left" : "compiler",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[1530-1538]:SimpleName[5034-5052]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1558-1567]:MarkerAnnotation[2653-2662]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1558-1567]:MarkerAnnotation[4949-4958]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1570-1576]:Modifier[2665-2671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1570-1576]:Modifier[5102-5108]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1577-1581]:PrimitiveType[2672-2676]"
    }, {
      "left" : "void",
      "right" : "int",
      "info" : "PrimitiveType[1577-1581]:PrimitiveType[9441-9444]"
    }, {
      "left" : "process",
      "right" : "process",
      "info" : "SimpleName[1582-1589]:SimpleName[2677-2684]"
    }, {
      "left" : "Node externs",
      "right" : "Node externs",
      "info" : "SingleVariableDeclaration[1590-1602]:SingleVariableDeclaration[2685-2697]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[1590-1594]:SimpleType[4908-4912]"
    }, {
      "left" : "Node externs",
      "right" : "Node child2",
      "info" : "SingleVariableDeclaration[1590-1602]:SingleVariableDeclaration[9357-9368]"
    }, {
      "left" : "externs",
      "right" : "child2",
      "info" : "SimpleName[1595-1602]:SimpleName[9362-9368]"
    }, {
      "left" : "Node root",
      "right" : "Node root",
      "info" : "SingleVariableDeclaration[1604-1613]:SingleVariableDeclaration[2699-2708]"
    }, {
      "left" : "Node root",
      "right" : "Node field",
      "info" : "SingleVariableDeclaration[1604-1613]:SingleVariableDeclaration[7833-7843]"
    }, {
      "left" : "root",
      "right" : "root",
      "info" : "SimpleName[1609-1613]:SimpleName[7122-7126]"
    }, {
      "left" : "root",
      "right" : "field",
      "info" : "SimpleName[1609-1613]:SimpleName[7838-7843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1615-1670]:Block[2710-2765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1615-1670]:Block[5181-5300]"
    }, {
      "left" : "NodeTraversal.traverse(compiler, root, this);",
      "right" : "NodeTraversal.traverse(compiler, root, this);",
      "info" : "ExpressionStatement[1621-1666]:ExpressionStatement[2716-2761]"
    }, {
      "left" : "NodeTraversal",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[1621-1634]:SimpleName[5255-5273]"
    }, {
      "left" : "NodeTraversal.traverse(compiler, root, this)",
      "right" : "convertTypeNodeAST(typeExpr.getRoot())",
      "info" : "MethodInvocation[1621-1665]:MethodInvocation[5255-5293]"
    }, {
      "left" : "NodeTraversal",
      "right" : "Iterables",
      "info" : "SimpleName[1621-1634]:SimpleName[7148-7157]"
    }, {
      "left" : "compiler",
      "right" : "typeExpr",
      "info" : "SimpleName[1644-1652]:SimpleName[5274-5282]"
    }, {
      "left" : "compiler",
      "right" : "filter",
      "info" : "SimpleName[1644-1652]:SimpleName[7158-7164]"
    }, {
      "left" : "root",
      "right" : "getRoot",
      "info" : "SimpleName[1654-1658]:SimpleName[5283-5290]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1674-1683]:MarkerAnnotation[2769-2778]"
    }, {
      "left" : "@Override",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[1674-1683]:MarkerAnnotation[5859-5868]"
    }, {
      "left" : "Override",
      "right" : "Nullable",
      "info" : "SimpleName[1675-1683]:SimpleName[5860-5868]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1686-1692]:Modifier[2781-2787]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1686-1692]:Modifier[5873-5879]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1693-1697]:PrimitiveType[2788-2792]"
    }, {
      "left" : "visit",
      "right" : "visit",
      "info" : "SimpleName[1698-1703]:SimpleName[2793-2798]"
    }, {
      "left" : "NodeTraversal t",
      "right" : "NodeTraversal t",
      "info" : "SingleVariableDeclaration[1704-1719]:SingleVariableDeclaration[2799-2814]"
    }, {
      "left" : "NodeTraversal",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[1704-1717]:SimpleType[5887-5906]"
    }, {
      "left" : "t",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[1718-1719]:SimpleName[5907-5925]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[1721-1727]:SingleVariableDeclaration[2816-2822]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[1721-1727]:SingleVariableDeclaration[5926-5932]"
    }, {
      "left" : "Node parent",
      "right" : "Node parent",
      "info" : "SingleVariableDeclaration[1729-1740]:SingleVariableDeclaration[2824-2835]"
    }, {
      "left" : "Node parent",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[1729-1740]:SingleVariableDeclaration[5002-5011]"
    }, {
      "left" : "parent",
      "right" : "node",
      "info" : "SimpleName[1734-1740]:SimpleName[5007-5011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1742-3189]:Block[2837-4284]"
    }, {
      "left" : "JSDocInfo bestJSDocInfo = NodeUtil.getBestJSDocInfo(n);",
      "right" : "JSDocInfo bestJSDocInfo = NodeUtil.getBestJSDocInfo(n);",
      "info" : "VariableDeclarationStatement[1748-1803]:VariableDeclarationStatement[2843-2898]"
    }, {
      "left" : "JSDocInfo",
      "right" : "anyType",
      "info" : "SimpleName[1748-1757]:SimpleName[6113-6120]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "undefinedType",
      "info" : "SimpleName[1758-1771]:SimpleName[6166-6179]"
    }, {
      "left" : "NodeUtil",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[1774-1782]:SimpleName[6297-6315]"
    }, {
      "left" : "NodeUtil.getBestJSDocInfo(n)",
      "right" : "convertTypeNodeAST(n.getFirstChild())",
      "info" : "MethodInvocation[1774-1802]:MethodInvocation[6297-6334]"
    }, {
      "left" : "n",
      "right" : "n",
      "info" : "SimpleName[1800-1801]:SimpleName[6316-6317]"
    }, {
      "left" : "switch (n.getType()) {\n      case Token.FUNCTION:\n        if (bestJSDocInfo != null) {\n          setTypeExpression(n, bestJSDocInfo.getReturnType());\n        }\n        break;\n      case Token.NAME:\n      case Token.GETPROP:\n        if (parent == null) {\n          break;\n        }\n        if (parent.isVar() || parent.isAssign() || parent.isExprResult()) {\n          if (bestJSDocInfo != null) {\n            setTypeExpression(n, bestJSDocInfo.getType());\n          }\n        } else if (parent.isParamList()) {\n          JSDocInfo parentDocInfo = NodeUtil.getBestJSDocInfo(parent);\n          if (parentDocInfo == null) {\n            break;\n          }\n          JSTypeExpression parameterType =\n              parentDocInfo.getParameterType(n.getString());\n          if (parameterType != null) {\n            Node attachTypeExpr = n;\n            // Modify the primary AST to represent a function parameter as a\n            // REST node, if the type indicates it is a rest parameter.\n            if (parameterType.getRoot().getType() == Token.ELLIPSIS) {\n              attachTypeExpr = Node.newString(Token.REST, n.getString());\n              n.getParent().replaceChild(n, attachTypeExpr);\n              compiler.reportCodeChange();\n            }\n            setTypeExpression(attachTypeExpr, parameterType);\n          }\n        }\n        break;\n      default:\n        break;\n    }",
      "right" : "switch (n.getType()) {\n      case Token.FUNCTION:\n        if (bestJSDocInfo != null) {\n          setTypeExpression(n, bestJSDocInfo.getReturnType());\n        }\n        break;\n      case Token.NAME:\n      case Token.GETPROP:\n        if (parent == null) {\n          break;\n        }\n        if (parent.isVar() || parent.isAssign() || parent.isExprResult()) {\n          if (bestJSDocInfo != null) {\n            setTypeExpression(n, bestJSDocInfo.getType());\n          }\n        } else if (parent.isParamList()) {\n          JSDocInfo parentDocInfo = NodeUtil.getBestJSDocInfo(parent);\n          if (parentDocInfo == null) {\n            break;\n          }\n          JSTypeExpression parameterType =\n              parentDocInfo.getParameterType(n.getString());\n          if (parameterType != null) {\n            Node attachTypeExpr = n;\n            // Modify the primary AST to represent a function parameter as a\n            // REST node, if the type indicates it is a rest parameter.\n            if (parameterType.getRoot().getType() == Token.ELLIPSIS) {\n              attachTypeExpr = Node.newString(Token.REST, n.getString());\n              n.getParent().replaceChild(n, attachTypeExpr);\n              compiler.reportCodeChange();\n            }\n            setTypeExpression(attachTypeExpr, parameterType);\n          }\n        }\n        break;\n      default:\n        break;\n    }",
      "info" : "SwitchStatement[1808-3185]:SwitchStatement[2903-4280]"
    }, {
      "left" : "n.getType()",
      "right" : "n.getType()",
      "info" : "MethodInvocation[1816-1827]:MethodInvocation[5954-5965]"
    }, {
      "left" : "n.getType()",
      "right" : "booleanType()",
      "info" : "MethodInvocation[1816-1827]:MethodInvocation[6485-6498]"
    }, {
      "left" : "n.getType()",
      "right" : "stringType()",
      "info" : "MethodInvocation[1816-1827]:MethodInvocation[6610-6622]"
    }, {
      "left" : "n.getType()",
      "right" : "n.getFirstChild()",
      "info" : "MethodInvocation[1816-1827]:MethodInvocation[7400-7417]"
    }, {
      "left" : "n",
      "right" : "field",
      "info" : "METHOD_INVOCATION_RECEIVER[1816-1817]:METHOD_INVOCATION_RECEIVER[7920-7925]"
    }, {
      "left" : "n.getType()",
      "right" : "n.getFirstChild()",
      "info" : "MethodInvocation[1816-1827]:MethodInvocation[8568-8585]"
    }, {
      "left" : "n.getType()",
      "right" : "n.children()",
      "info" : "MethodInvocation[1816-1827]:MethodInvocation[9371-9383]"
    }, {
      "left" : "n.getType()",
      "right" : "n.getType()",
      "info" : "MethodInvocation[1816-1827]:MethodInvocation[11225-11236]"
    }, {
      "left" : "getType",
      "right" : "booleanType",
      "info" : "SimpleName[1818-1825]:SimpleName[6485-6496]"
    }, {
      "left" : "getType",
      "right" : "stringType",
      "info" : "SimpleName[1818-1825]:SimpleName[6610-6620]"
    }, {
      "left" : "getType",
      "right" : "getFirstChild",
      "info" : "SimpleName[1818-1825]:SimpleName[7402-7415]"
    }, {
      "left" : "getType",
      "right" : "getType",
      "info" : "SimpleName[1818-1825]:SimpleName[7926-7933]"
    }, {
      "left" : "getType",
      "right" : "fieldType",
      "info" : "SimpleName[1818-1825]:SimpleName[8291-8300]"
    }, {
      "left" : "getType",
      "right" : "getFirstChild",
      "info" : "SimpleName[1818-1825]:SimpleName[8570-8583]"
    }, {
      "left" : "getType",
      "right" : "children",
      "info" : "SimpleName[1818-1825]:SimpleName[9373-9381]"
    }, {
      "left" : "case Token.FUNCTION:",
      "right" : "case Token.FUNCTION:",
      "info" : "SwitchCase[1837-1857]:SwitchCase[2932-2952]"
    }, {
      "left" : "case Token.FUNCTION:",
      "right" : "case Token.FUNCTION:",
      "info" : "SwitchCase[1837-1857]:SwitchCase[9015-9035]"
    }, {
      "left" : "if (bestJSDocInfo != null)",
      "right" : "if (bestJSDocInfo != null)",
      "info" : "IfStatement[1866-1967]:IfStatement[2961-3062]"
    }, {
      "left" : "if (bestJSDocInfo != null)",
      "right" : "if (n.getChildCount() > 0 && n.getFirstChild().isBlock())",
      "info" : "IfStatement[1866-1967]:IfStatement[6828-7311]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "n",
      "info" : "SimpleName[1870-1883]:SimpleName[6832-6833]"
    }, {
      "left" : "bestJSDocInfo != null",
      "right" : "n.getChildCount() > 0",
      "info" : "InfixExpression[1870-1891]:InfixExpression[6832-6853]"
    }, {
      "left" : "!=",
      "right" : ">",
      "info" : "INFIX_EXPRESSION_OPERATOR[1884-1886]:INFIX_EXPRESSION_OPERATOR[6850-6851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1893-1967]:Block[2988-3062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1893-1967]:Block[6982-7080]"
    }, {
      "left" : "setTypeExpression(n, bestJSDocInfo.getReturnType());",
      "right" : "setTypeExpression(n, bestJSDocInfo.getReturnType());",
      "info" : "ExpressionStatement[1905-1957]:ExpressionStatement[3000-3052]"
    }, {
      "left" : "setTypeExpression",
      "right" : "arrayType",
      "info" : "SimpleName[1905-1922]:SimpleName[7009-7018]"
    }, {
      "left" : "setTypeExpression(n, bestJSDocInfo.getReturnType())",
      "right" : "arrayType(convertTypeNodeAST(block.getFirstChild()))",
      "info" : "MethodInvocation[1905-1956]:MethodInvocation[7009-7061]"
    }, {
      "left" : "n",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[1923-1924]:SimpleName[7019-7037]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "block",
      "info" : "SimpleName[1926-1939]:SimpleName[7038-7043]"
    }, {
      "left" : "bestJSDocInfo.getReturnType()",
      "right" : "block.getFirstChild()",
      "info" : "MethodInvocation[1926-1955]:MethodInvocation[7038-7059]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "Predicates",
      "info" : "SimpleName[1926-1939]:SimpleName[8767-8777]"
    }, {
      "left" : "bestJSDocInfo.getReturnType()",
      "right" : "Predicates.notNull()",
      "info" : "MethodInvocation[1926-1955]:MethodInvocation[8767-8787]"
    }, {
      "left" : "getReturnType",
      "right" : "getFirstChild",
      "info" : "SimpleName[1940-1953]:SimpleName[7044-7057]"
    }, {
      "left" : "getReturnType",
      "right" : "notNull",
      "info" : "SimpleName[1940-1953]:SimpleName[8778-8785]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[1976-1982]:BreakStatement[3071-3077]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.NAME:",
      "info" : "SwitchCase[1989-2005]:SwitchCase[3084-3100]"
    }, {
      "left" : "case Token.NAME:",
      "right" : "case Token.QMARK:",
      "info" : "SwitchCase[1989-2005]:SwitchCase[7359-7376]"
    }, {
      "left" : "Token.NAME",
      "right" : "Token.QMARK",
      "info" : "QualifiedName[1994-2004]:QualifiedName[7364-7375]"
    }, {
      "left" : "case Token.GETPROP:",
      "right" : "case Token.GETPROP:",
      "info" : "SwitchCase[2012-2031]:SwitchCase[3107-3126]"
    }, {
      "left" : "if (parent == null)",
      "right" : "if (parent == null)",
      "info" : "IfStatement[2040-2088]:IfStatement[3135-3183]"
    }, {
      "left" : "parent",
      "right" : "child",
      "info" : "SimpleName[2044-2050]:SimpleName[7436-7441]"
    }, {
      "left" : "parent == null",
      "right" : "child == null",
      "info" : "InfixExpression[2044-2058]:InfixExpression[7436-7449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2060-2088]:Block[3155-3183]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2072-2078]:BreakStatement[3167-3173]"
    }, {
      "left" : "if (parent.isVar() || parent.isAssign() || parent.isExprResult())",
      "right" : "if (parent.isVar() || parent.isAssign() || parent.isExprResult())",
      "info" : "IfStatement[2097-3134]:IfStatement[3192-4229]"
    }, {
      "left" : "parent",
      "right" : "n",
      "info" : "SimpleName[2101-2107]:SimpleName[7846-7847]"
    }, {
      "left" : "parent.isVar()",
      "right" : "n.getFirstChild()",
      "info" : "MethodInvocation[2101-2115]:MethodInvocation[7846-7863]"
    }, {
      "left" : "parent",
      "right" : "child2",
      "info" : "SimpleName[2101-2107]:SimpleName[10306-10312]"
    }, {
      "left" : "parent",
      "right" : "child2",
      "info" : "SimpleName[2101-2107]:SimpleName[10542-10548]"
    }, {
      "left" : "isVar",
      "right" : "getFirstChild",
      "info" : "SimpleName[2108-2113]:SimpleName[7848-7861]"
    }, {
      "left" : "isVar",
      "right" : "isFieldTypeDeclared",
      "info" : "SimpleName[2108-2113]:SimpleName[8303-8322]"
    }, {
      "left" : "isVar",
      "right" : "isNew",
      "info" : "SimpleName[2108-2113]:SimpleName[10313-10318]"
    }, {
      "left" : "isVar",
      "right" : "isThis",
      "info" : "SimpleName[2108-2113]:SimpleName[10549-10555]"
    }, {
      "left" : "||",
      "right" : "==",
      "info" : "INFIX_EXPRESSION_OPERATOR[2116-2118]:INFIX_EXPRESSION_OPERATOR[7936-7938]"
    }, {
      "left" : "parent",
      "right" : "field",
      "info" : "SimpleName[2119-2125]:SimpleName[8007-8012]"
    }, {
      "left" : "parent.isAssign()",
      "right" : "field.getFirstChild()",
      "info" : "MethodInvocation[2119-2136]:MethodInvocation[8007-8028]"
    }, {
      "left" : "isAssign",
      "right" : "getFirstChild",
      "info" : "SimpleName[2126-2134]:SimpleName[8013-8026]"
    }, {
      "left" : "parent",
      "right" : "fieldNameNode",
      "info" : "SimpleName[2140-2146]:SimpleName[8069-8082]"
    }, {
      "left" : "parent.isExprResult()",
      "right" : "fieldNameNode.getString()",
      "info" : "MethodInvocation[2140-2161]:MethodInvocation[8069-8094]"
    }, {
      "left" : "isExprResult",
      "right" : "getString",
      "info" : "SimpleName[2147-2159]:SimpleName[8083-8092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2163-2284]:Block[3258-3379]"
    }, {
      "left" : "if (bestJSDocInfo != null)",
      "right" : "if (bestJSDocInfo != null)",
      "info" : "IfStatement[2175-2274]:IfStatement[3270-3369]"
    }, {
      "left" : "if (bestJSDocInfo != null)",
      "right" : "if (fieldName.startsWith(\"'\") || fieldName.startsWith(\"\\\"\"))",
      "info" : "IfStatement[2175-2274]:IfStatement[8108-8258]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "typeExpr",
      "info" : "SimpleName[2179-2192]:SimpleName[5193-5201]"
    }, {
      "left" : "bestJSDocInfo != null",
      "right" : "typeExpr == null",
      "info" : "InfixExpression[2179-2200]:InfixExpression[5193-5209]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "fieldName",
      "info" : "SimpleName[2179-2192]:SimpleName[8112-8121]"
    }, {
      "left" : "!=",
      "right" : "==",
      "info" : "INFIX_EXPRESSION_OPERATOR[2193-2195]:INFIX_EXPRESSION_OPERATOR[5202-5204]"
    }, {
      "left" : "!=",
      "right" : "||",
      "info" : "INFIX_EXPRESSION_OPERATOR[2193-2195]:INFIX_EXPRESSION_OPERATOR[8138-8140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2202-2274]:Block[3297-3369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2202-2274]:Block[8169-8258]"
    }, {
      "left" : "setTypeExpression(n, bestJSDocInfo.getType());",
      "right" : "setTypeExpression(n, bestJSDocInfo.getType());",
      "info" : "ExpressionStatement[2216-2262]:ExpressionStatement[3311-3357]"
    }, {
      "left" : "setTypeExpression(n, bestJSDocInfo.getType());",
      "right" : "fieldName = fieldName.substring(1, fieldName.length() - 1);",
      "info" : "ExpressionStatement[2216-2262]:ExpressionStatement[8185-8244]"
    }, {
      "left" : "setTypeExpression(n, bestJSDocInfo.getType())",
      "right" : "fieldName.substring(1, fieldName.length() - 1)",
      "info" : "MethodInvocation[2216-2261]:MethodInvocation[8197-8243]"
    }, {
      "left" : "setTypeExpression",
      "right" : "substring",
      "info" : "SimpleName[2216-2233]:SimpleName[8207-8216]"
    }, {
      "left" : "setTypeExpression",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[2216-2233]:SimpleName[8341-8359]"
    }, {
      "left" : "setTypeExpression(n, bestJSDocInfo.getType())",
      "right" : "convertTypeNodeAST(field.getLastChild())",
      "info" : "MethodInvocation[2216-2261]:MethodInvocation[8341-8381]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "fieldName",
      "info" : "SimpleName[2237-2250]:SimpleName[8220-8229]"
    }, {
      "left" : "bestJSDocInfo.getType()",
      "right" : "fieldName.length()",
      "info" : "MethodInvocation[2237-2260]:MethodInvocation[8220-8238]"
    }, {
      "left" : "bestJSDocInfo",
      "right" : "field",
      "info" : "SimpleName[2237-2250]:SimpleName[8360-8365]"
    }, {
      "left" : "getType",
      "right" : "length",
      "info" : "SimpleName[2251-2258]:SimpleName[8230-8236]"
    }, {
      "left" : "getType",
      "right" : "getLastChild",
      "info" : "SimpleName[2251-2258]:SimpleName[8366-8378]"
    }, {
      "left" : "if (parent.isParamList())",
      "right" : "if (parent.isParamList())",
      "info" : "IfStatement[2290-3134]:IfStatement[3385-4229]"
    }, {
      "left" : "parent",
      "right" : "properties",
      "info" : "SimpleName[2294-2300]:SimpleName[8402-8412]"
    }, {
      "left" : "parent.isParamList()",
      "right" : "properties.put(fieldName, fieldType)",
      "info" : "MethodInvocation[2294-2314]:MethodInvocation[8402-8438]"
    }, {
      "left" : "parent",
      "right" : "child2",
      "info" : "METHOD_INVOCATION_RECEIVER[2294-2300]:METHOD_INVOCATION_RECEIVER[9403-9409]"
    }, {
      "left" : "isParamList",
      "right" : "put",
      "info" : "SimpleName[2301-2312]:SimpleName[8413-8416]"
    }, {
      "left" : "isParamList",
      "right" : "isParamList",
      "info" : "SimpleName[2301-2312]:SimpleName[9410-9421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2316-3134]:Block[3411-4229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2316-3134]:Block[5211-5241]"
    }, {
      "left" : "JSDocInfo parentDocInfo = NodeUtil.getBestJSDocInfo(parent);",
      "right" : "JSDocInfo parentDocInfo = NodeUtil.getBestJSDocInfo(parent);",
      "info" : "VariableDeclarationStatement[2328-2388]:VariableDeclarationStatement[3423-3483]"
    }, {
      "left" : "JSDocInfo",
      "right" : "ImmutableList",
      "info" : "SimpleType[2328-2337]:SimpleType[8624-8637]"
    }, {
      "left" : "JSDocInfo parentDocInfo = NodeUtil.getBestJSDocInfo(parent);",
      "right" : "ImmutableList<TypeDeclarationNode> types = FluentIterable\n              .from(n.children()).transform(CONVERT_TYPE_NODE)\n              .filter(Predicates.notNull()).toList();",
      "info" : "VariableDeclarationStatement[2328-2388]:VariableDeclarationStatement[8624-8798]"
    }, {
      "left" : "parentDocInfo",
      "right" : "types",
      "info" : "SimpleName[2338-2351]:SimpleName[8659-8664]"
    }, {
      "left" : "NodeUtil",
      "right" : "FluentIterable",
      "info" : "SimpleName[2354-2362]:SimpleName[8667-8681]"
    }, {
      "left" : "NodeUtil.getBestJSDocInfo(parent)",
      "right" : "FluentIterable\n              .from(n.children())",
      "info" : "MethodInvocation[2354-2387]:MethodInvocation[8667-8715]"
    }, {
      "left" : "getBestJSDocInfo",
      "right" : "from",
      "info" : "SimpleName[2363-2379]:SimpleName[8697-8701]"
    }, {
      "left" : "parent",
      "right" : "children",
      "info" : "SimpleName[2380-2386]:SimpleName[8704-8712]"
    }, {
      "left" : "if (parentDocInfo == null)",
      "right" : "if (parentDocInfo == null)",
      "info" : "IfStatement[2399-2458]:IfStatement[3494-3553]"
    }, {
      "left" : "parentDocInfo",
      "right" : "types",
      "info" : "SimpleName[2403-2416]:SimpleName[8817-8822]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[2420-2424]:NullLiteral[5228-5232]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[2420-2424]:NullLiteral[8384-8388]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[2420-2424]:NullLiteral[8874-8878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2426-2458]:Block[3521-3553]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2440-2446]:BreakStatement[3535-3541]"
    }, {
      "left" : "JSTypeExpression parameterType =\n              parentDocInfo.getParameterType(n.getString());",
      "right" : "JSTypeExpression parameterType =\n              parentDocInfo.getParameterType(n.getString());",
      "info" : "VariableDeclarationStatement[2469-2562]:VariableDeclarationStatement[3564-3657]"
    }, {
      "left" : "JSTypeExpression",
      "right" : "Function",
      "info" : "SimpleName[2469-2485]:SimpleName[4899-4907]"
    }, {
      "left" : "JSTypeExpression",
      "right" : "String",
      "info" : "SimpleName[2469-2485]:SimpleName[6373-6379]"
    }, {
      "left" : "JSTypeExpression parameterType =\n              parentDocInfo.getParameterType(n.getString());",
      "right" : "String typeName = n.getString();",
      "info" : "VariableDeclarationStatement[2469-2562]:VariableDeclarationStatement[6373-6405]"
    }, {
      "left" : "JSTypeExpression",
      "right" : "String",
      "info" : "SimpleType[2469-2485]:SimpleType[9271-9277]"
    }, {
      "left" : "parameterType",
      "right" : "typeName",
      "info" : "SimpleName[2486-2499]:SimpleName[6380-6388]"
    }, {
      "left" : "parameterType",
      "right" : "child",
      "info" : "SimpleName[2486-2499]:SimpleName[7392-7397]"
    }, {
      "left" : "parameterType =\n              parentDocInfo.getParameterType(n.getString())",
      "right" : "child = n.getFirstChild()",
      "info" : "VariableDeclarationFragment[2486-2561]:VariableDeclarationFragment[7392-7417]"
    }, {
      "left" : "parameterType",
      "right" : "restName",
      "info" : "SimpleName[2486-2499]:SimpleName[9278-9286]"
    }, {
      "left" : "parameterType =\n              parentDocInfo.getParameterType(n.getString())",
      "right" : "restName = null",
      "info" : "VariableDeclarationFragment[2486-2561]:VariableDeclarationFragment[9278-9293]"
    }, {
      "left" : "parameterType",
      "right" : "paramIdx",
      "info" : "SimpleName[2486-2499]:SimpleName[9445-9453]"
    }, {
      "left" : "parameterType =\n              parentDocInfo.getParameterType(n.getString())",
      "right" : "paramIdx = 1",
      "info" : "VariableDeclarationFragment[2486-2561]:VariableDeclarationFragment[9445-9457]"
    }, {
      "left" : "parentDocInfo",
      "right" : "Iterables",
      "info" : "SimpleName[2516-2529]:SimpleName[7190-7199]"
    }, {
      "left" : "parentDocInfo.getParameterType(n.getString())",
      "right" : "Iterables.transform(block.children(), CONVERT_TYPE_NODE)",
      "info" : "MethodInvocation[2516-2561]:MethodInvocation[7190-7246]"
    }, {
      "left" : "parentDocInfo.getParameterType(n.getString())",
      "right" : "recordType(properties)",
      "info" : "MethodInvocation[2516-2561]:MethodInvocation[8469-8491]"
    }, {
      "left" : "parentDocInfo",
      "right" : "optionalParams",
      "info" : "SimpleName[2516-2529]:SimpleName[9221-9235]"
    }, {
      "left" : "parentDocInfo",
      "right" : "Token",
      "info" : "SimpleName[2516-2529]:SimpleName[11214-11219]"
    }, {
      "left" : "getParameterType",
      "right" : "transform",
      "info" : "SimpleName[2530-2546]:SimpleName[7200-7209]"
    }, {
      "left" : "getParameterType",
      "right" : "recordType",
      "info" : "SimpleName[2530-2546]:SimpleName[8469-8479]"
    }, {
      "left" : "getParameterType",
      "right" : "restType",
      "info" : "SimpleName[2530-2546]:SimpleName[9325-9333]"
    }, {
      "left" : "getParameterType",
      "right" : "optionalParameter",
      "info" : "SimpleName[2530-2546]:SimpleName[11075-11092]"
    }, {
      "left" : "getParameterType",
      "right" : "name",
      "info" : "SimpleName[2530-2546]:SimpleName[11220-11224]"
    }, {
      "left" : "n.getString()",
      "right" : "n.getString()",
      "info" : "MethodInvocation[2547-2560]:MethodInvocation[6391-6404]"
    }, {
      "left" : "n",
      "right" : "block",
      "info" : "SimpleName[2547-2548]:SimpleName[7210-7215]"
    }, {
      "left" : "n",
      "right" : "properties",
      "info" : "SimpleName[2547-2548]:SimpleName[8480-8490]"
    }, {
      "left" : "n",
      "right" : "optionalParam",
      "info" : "SimpleName[2547-2548]:SimpleName[11093-11106]"
    }, {
      "left" : "n.getString()",
      "right" : "optionalParam",
      "info" : "METHOD_INVOCATION_ARGUMENTS[2547-2560]:METHOD_INVOCATION_ARGUMENTS[11093-11106]"
    }, {
      "left" : "n.getString()",
      "right" : "n.getType()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[2547-2560]:METHOD_INVOCATION_ARGUMENTS[11225-11236]"
    }, {
      "left" : "getString",
      "right" : "children",
      "info" : "SimpleName[2549-2558]:SimpleName[7216-7224]"
    }, {
      "left" : "if (parameterType != null)",
      "right" : "if (parameterType != null)",
      "info" : "IfStatement[2573-3124]:IfStatement[3668-4219]"
    }, {
      "left" : "if (parameterType != null)",
      "right" : "if (child2.isParamList())",
      "info" : "IfStatement[2573-3124]:IfStatement[9399-10807]"
    }, {
      "left" : "parameterType",
      "right" : "param",
      "info" : "SimpleName[2577-2590]:SimpleName[9483-9488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2600-3124]:Block[3695-4219]"
    }, {
      "left" : "Node attachTypeExpr = n;",
      "right" : "Node attachTypeExpr = n;",
      "info" : "VariableDeclarationStatement[2614-2638]:VariableDeclarationStatement[3709-3733]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[2614-2618]:SimpleType[6904-6908]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[2614-2618]:SimpleType[7387-7391]"
    }, {
      "left" : "Node",
      "right" : "Node",
      "info" : "SimpleType[2614-2618]:SimpleType[9046-9050]"
    }, {
      "left" : "Node attachTypeExpr = n;",
      "right" : "String paramName = \"p\" + paramIdx++;",
      "info" : "VariableDeclarationStatement[2614-2638]:VariableDeclarationStatement[9528-9564]"
    }, {
      "left" : "attachTypeExpr",
      "right" : "paramName",
      "info" : "SimpleName[2619-2633]:SimpleName[9535-9544]"
    }, {
      "left" : "n",
      "right" : "paramIdx",
      "info" : "SimpleName[2636-2637]:SimpleName[9553-9561]"
    }, {
      "left" : "if (parameterType.getRoot().getType() == Token.ELLIPSIS)",
      "right" : "if (parameterType.getRoot().getType() == Token.ELLIPSIS)",
      "info" : "IfStatement[2800-3050]:IfStatement[3895-4145]"
    }, {
      "left" : "if (parameterType.getRoot().getType() == Token.ELLIPSIS)",
      "right" : "if (param.getType() == Token.ELLIPSIS)",
      "info" : "IfStatement[2800-3050]:IfStatement[9581-10266]"
    }, {
      "left" : "parameterType",
      "right" : "numberType",
      "info" : "SimpleName[2804-2817]:SimpleName[6548-6558]"
    }, {
      "left" : "parameterType.getRoot()",
      "right" : "numberType()",
      "info" : "MethodInvocation[2804-2827]:MethodInvocation[6548-6560]"
    }, {
      "left" : "parameterType",
      "right" : "param",
      "info" : "METHOD_INVOCATION_RECEIVER[2804-2817]:METHOD_INVOCATION_RECEIVER[9585-9590]"
    }, {
      "left" : "parameterType",
      "right" : "param",
      "info" : "SimpleName[2804-2817]:SimpleName[9644-9649]"
    }, {
      "left" : "parameterType.getRoot()",
      "right" : "param.getFirstChild()",
      "info" : "MethodInvocation[2804-2827]:MethodInvocation[9644-9665]"
    }, {
      "left" : "parameterType",
      "right" : "paramNode",
      "info" : "METHOD_INVOCATION_RECEIVER[2804-2817]:METHOD_INVOCATION_RECEIVER[9946-9955]"
    }, {
      "left" : "parameterType.getRoot().getType()",
      "right" : "paramNode.getType()",
      "info" : "MethodInvocation[2804-2837]:MethodInvocation[9946-9965]"
    }, {
      "left" : "getRoot",
      "right" : "getFirstChild",
      "info" : "SimpleName[2818-2825]:SimpleName[9650-9663]"
    }, {
      "left" : "==",
      "right" : "==",
      "info" : "INFIX_EXPRESSION_OPERATOR[2838-2840]:INFIX_EXPRESSION_OPERATOR[9966-9968]"
    }, {
      "left" : "Token.ELLIPSIS",
      "right" : "Token.OPTIONAL_PARAMETER",
      "info" : "QualifiedName[2841-2855]:QualifiedName[9969-9993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2857-3050]:Block[3952-4145]"
    }, {
      "left" : "attachTypeExpr = Node.newString(Token.REST, n.getString());",
      "right" : "attachTypeExpr = Node.newString(Token.REST, n.getString());",
      "info" : "ExpressionStatement[2873-2932]:ExpressionStatement[3968-4027]"
    }, {
      "left" : "attachTypeExpr",
      "right" : "restType",
      "info" : "SimpleName[2873-2887]:SimpleName[9697-9705]"
    }, {
      "left" : "attachTypeExpr = Node.newString(Token.REST, n.getString());",
      "right" : "restType = arrayType(convertTypeNodeAST(param.getFirstChild()));",
      "info" : "ExpressionStatement[2873-2932]:ExpressionStatement[9697-9761]"
    }, {
      "left" : "attachTypeExpr",
      "right" : "restName",
      "info" : "SimpleName[2873-2887]:SimpleName[9800-9808]"
    }, {
      "left" : "attachTypeExpr = Node.newString(Token.REST, n.getString())",
      "right" : "restName = paramName",
      "info" : "Assignment[2873-2931]:Assignment[9800-9820]"
    }, {
      "left" : "Node",
      "right" : "fieldName",
      "info" : "METHOD_INVOCATION_RECEIVER[2890-2894]:METHOD_INVOCATION_RECEIVER[8141-8150]"
    }, {
      "left" : "Node",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[2890-2894]:SimpleName[8549-8567]"
    }, {
      "left" : "Node.newString(Token.REST, n.getString())",
      "right" : "convertTypeNodeAST(n.getFirstChild())",
      "info" : "MethodInvocation[2890-2931]:MethodInvocation[8549-8586]"
    }, {
      "left" : "Node",
      "right" : "arrayType",
      "info" : "SimpleName[2890-2894]:SimpleName[9708-9717]"
    }, {
      "left" : "Node",
      "right" : "paramName",
      "info" : "SimpleName[2890-2894]:SimpleName[9811-9820]"
    }, {
      "left" : "Node",
      "right" : "paramNode",
      "info" : "SimpleName[2890-2894]:SimpleName[10093-10102]"
    }, {
      "left" : "newString",
      "right" : "startsWith",
      "info" : "SimpleName[2895-2904]:SimpleName[8151-8161]"
    }, {
      "left" : "newString",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[2895-2904]:SimpleName[9718-9736]"
    }, {
      "left" : "newString",
      "right" : "removeFirstChild",
      "info" : "SimpleName[2895-2904]:SimpleName[10103-10119]"
    }, {
      "left" : "Token.REST, n.getString()",
      "right" : "\"\\\"\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[2905-2930]:METHOD_INVOCATION_ARGUMENTS[8162-8166]"
    }, {
      "left" : "Token.REST, n.getString()",
      "right" : "param.getFirstChild()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[2905-2930]:METHOD_INVOCATION_ARGUMENTS[9737-9758]"
    }, {
      "left" : "n",
      "right" : "param",
      "info" : "SimpleName[2917-2918]:SimpleName[9737-9742]"
    }, {
      "left" : "getString",
      "right" : "getFirstChild",
      "info" : "SimpleName[2919-2928]:SimpleName[9743-9756]"
    }, {
      "left" : "n.getParent().replaceChild(n, attachTypeExpr);",
      "right" : "n.getParent().replaceChild(n, attachTypeExpr);",
      "info" : "ExpressionStatement[2947-2993]:ExpressionStatement[4042-4088]"
    }, {
      "left" : "n.getParent().replaceChild(n, attachTypeExpr)",
      "right" : "n.getFirstChild().isBlock()",
      "info" : "MethodInvocation[2947-2992]:MethodInvocation[6857-6884]"
    }, {
      "left" : "n",
      "right" : "types",
      "info" : "METHOD_INVOCATION_RECEIVER[2947-2948]:METHOD_INVOCATION_RECEIVER[8921-8926]"
    }, {
      "left" : "n.getParent().replaceChild(n, attachTypeExpr)",
      "right" : "types.get(0)",
      "info" : "MethodInvocation[2947-2992]:MethodInvocation[8921-8933]"
    }, {
      "left" : "n",
      "right" : "child2",
      "info" : "SimpleName[2947-2948]:SimpleName[9491-9497]"
    }, {
      "left" : "getParent",
      "right" : "getFirstChild",
      "info" : "SimpleName[2949-2958]:SimpleName[6859-6872]"
    }, {
      "left" : "getParent",
      "right" : "get",
      "info" : "SimpleName[2949-2958]:SimpleName[8927-8930]"
    }, {
      "left" : "replaceChild",
      "right" : "isBlock",
      "info" : "SimpleName[2961-2973]:SimpleName[6875-6882]"
    }, {
      "left" : "replaceChild",
      "right" : "children",
      "info" : "SimpleName[2961-2973]:SimpleName[9498-9506]"
    }, {
      "left" : "n",
      "right" : "paramName",
      "info" : "SimpleName[2974-2975]:SimpleName[10036-10045]"
    }, {
      "left" : "n, attachTypeExpr",
      "right" : "paramName,\n                        (TypeDeclarationNode) paramNode.removeFirstChild()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[2974-2991]:METHOD_INVOCATION_ARGUMENTS[10036-10121]"
    }, {
      "left" : "attachTypeExpr",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[2977-2991]:SimpleName[10072-10091]"
    }, {
      "left" : "compiler.reportCodeChange();",
      "right" : "compiler.reportCodeChange();",
      "info" : "ExpressionStatement[3008-3036]:ExpressionStatement[4103-4131]"
    }, {
      "left" : "compiler",
      "right" : "requiredParams",
      "info" : "SimpleName[3008-3016]:SimpleName[10171-10185]"
    }, {
      "left" : "compiler.reportCodeChange();",
      "right" : "requiredParams.put(paramName, convertTypeNodeAST(param));",
      "info" : "ExpressionStatement[3008-3036]:ExpressionStatement[10171-10228]"
    }, {
      "left" : "reportCodeChange",
      "right" : "paramName",
      "info" : "SimpleName[3017-3033]:SimpleName[10190-10199]"
    }, {
      "left" : "setTypeExpression(attachTypeExpr, parameterType);",
      "right" : "setTypeExpression(attachTypeExpr, parameterType);",
      "info" : "ExpressionStatement[3063-3112]:ExpressionStatement[4158-4207]"
    }, {
      "left" : "setTypeExpression",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[3063-3080]:SimpleName[10201-10219]"
    }, {
      "left" : "setTypeExpression(attachTypeExpr, parameterType);",
      "right" : "returnType = convertTypeNodeAST(child2);",
      "info" : "ExpressionStatement[3063-3112]:ExpressionStatement[10753-10793]"
    }, {
      "left" : "setTypeExpression",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[3063-3080]:SimpleName[10766-10784]"
    }, {
      "left" : "setTypeExpression(attachTypeExpr, parameterType)",
      "right" : "convertTypeNodeAST(child2)",
      "info" : "MethodInvocation[3063-3111]:MethodInvocation[10766-10792]"
    }, {
      "left" : "attachTypeExpr, parameterType",
      "right" : "param",
      "info" : "METHOD_INVOCATION_ARGUMENTS[3081-3110]:METHOD_INVOCATION_ARGUMENTS[10220-10225]"
    }, {
      "left" : "attachTypeExpr",
      "right" : "child2",
      "info" : "SimpleName[3081-3095]:SimpleName[10785-10791]"
    }, {
      "left" : "parameterType",
      "right" : "param",
      "info" : "SimpleName[3097-3110]:SimpleName[10220-10225]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3143-3149]:BreakStatement[4238-4244]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[3156-3164]:SwitchCase[4251-4259]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3173-3179]:BreakStatement[4268-4274]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3193-3200]:Modifier[4288-4295]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3201-3205]:PrimitiveType[4296-4300]"
    }, {
      "left" : "setTypeExpression",
      "right" : "setTypeExpression",
      "info" : "SimpleName[3206-3223]:SimpleName[4301-4318]"
    }, {
      "left" : "setTypeExpression",
      "right" : "functionType",
      "info" : "SimpleName[3206-3223]:SimpleName[10837-10849]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[3224-3230]:SingleVariableDeclaration[4319-4325]"
    }, {
      "left" : "Node",
      "right" : "returnType",
      "info" : "SimpleName[3224-3228]:SimpleName[10850-10860]"
    }, {
      "left" : "n",
      "right" : "requiredParams",
      "info" : "SimpleName[3229-3230]:SimpleName[10862-10876]"
    }, {
      "left" : "JSTypeExpression type",
      "right" : "JSTypeExpression type",
      "info" : "SingleVariableDeclaration[3232-3253]:SingleVariableDeclaration[4327-4348]"
    }, {
      "left" : "JSTypeExpression type",
      "right" : "@Nullable JSTypeExpression typeExpr",
      "info" : "SingleVariableDeclaration[3232-3253]:SingleVariableDeclaration[5144-5179]"
    }, {
      "left" : "type",
      "right" : "typeExpr",
      "info" : "SimpleName[3249-3253]:SimpleName[5171-5179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3255-3412]:Block[4350-4533]"
    }, {
      "left" : "TypeDeclarationNode node = convert(type);",
      "right" : "TypeDeclarationNode node = TypeDeclarationsIRFactory.convert(type);",
      "info" : "VariableDeclarationStatement[3261-3302]:VariableDeclarationStatement[4356-4423]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[4914-4933]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[6766-6785]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[7761-7780]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[8271-8290]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[9107-9126]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[9200-9219]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[9305-9324]"
    }, {
      "left" : "TypeDeclarationNode",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[3261-3280]:SimpleType[9865-9884]"
    }, {
      "left" : "TypeDeclarationNode node = convert(type);",
      "right" : "TypeDeclarationNode optionalParam = convertTypeNodeAST(n.getFirstChild());",
      "info" : "VariableDeclarationStatement[3261-3302]:VariableDeclarationStatement[10952-11026]"
    }, {
      "left" : "node",
      "right" : "root",
      "info" : "SimpleName[3281-3285]:SimpleName[6786-6790]"
    }, {
      "left" : "node = convert(type)",
      "right" : "root = namedType(typeName)",
      "info" : "VariableDeclarationFragment[3281-3301]:VariableDeclarationFragment[6786-6812]"
    }, {
      "left" : "node = convert(type)",
      "right" : "properties = new LinkedHashMap<>()",
      "info" : "VariableDeclarationFragment[3281-3301]:VariableDeclarationFragment[7782-7816]"
    }, {
      "left" : "node",
      "right" : "returnType",
      "info" : "SimpleName[3281-3285]:SimpleName[9051-9061]"
    }, {
      "left" : "node = convert(type)",
      "right" : "returnType = anyType()",
      "info" : "VariableDeclarationFragment[3281-3301]:VariableDeclarationFragment[9051-9073]"
    }, {
      "left" : "node",
      "right" : "requiredParams",
      "info" : "SimpleName[3281-3285]:SimpleName[9128-9142]"
    }, {
      "left" : "node = convert(type)",
      "right" : "requiredParams = new LinkedHashMap<>()",
      "info" : "VariableDeclarationFragment[3281-3301]:VariableDeclarationFragment[9128-9166]"
    }, {
      "left" : "node",
      "right" : "paramNode",
      "info" : "SimpleName[3281-3285]:SimpleName[9885-9894]"
    }, {
      "left" : "node = convert(type)",
      "right" : "paramNode = convertTypeNodeAST(param)",
      "info" : "VariableDeclarationFragment[3281-3301]:VariableDeclarationFragment[9885-9922]"
    }, {
      "left" : "node",
      "right" : "optionalParam",
      "info" : "SimpleName[3281-3285]:SimpleName[10972-10985]"
    }, {
      "left" : "convert",
      "right" : "namedType",
      "info" : "SimpleName[3288-3295]:SimpleName[6793-6802]"
    }, {
      "left" : "convert",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[3288-3295]:SimpleName[7679-7697]"
    }, {
      "left" : "convert",
      "right" : "properties",
      "info" : "SimpleName[3288-3295]:SimpleName[7782-7792]"
    }, {
      "left" : "convert",
      "right" : "unionType",
      "info" : "SimpleName[3288-3295]:SimpleName[8977-8986]"
    }, {
      "left" : "convert(type)",
      "right" : "unionType(types)",
      "info" : "MethodInvocation[3288-3301]:MethodInvocation[8977-8993]"
    }, {
      "left" : "convert",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[3288-3295]:SimpleName[9149-9162]"
    }, {
      "left" : "convert",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[3288-3295]:SimpleName[9897-9915]"
    }, {
      "left" : "convert",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[3288-3295]:SimpleName[10988-11006]"
    }, {
      "left" : "type",
      "right" : "typeName",
      "info" : "SimpleName[3296-3300]:SimpleName[6803-6811]"
    }, {
      "left" : "type",
      "right" : "child",
      "info" : "SimpleName[3296-3300]:SimpleName[7698-7703]"
    }, {
      "left" : "type",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[3296-3300]:SimpleName[7799-7812]"
    }, {
      "left" : "type",
      "right" : "types",
      "info" : "SimpleName[3296-3300]:SimpleName[8987-8992]"
    }, {
      "left" : "type",
      "right" : "anyType",
      "info" : "SimpleName[3296-3300]:SimpleName[9064-9071]"
    }, {
      "left" : "type",
      "right" : "param",
      "info" : "SimpleName[3296-3300]:SimpleName[9916-9921]"
    }, {
      "left" : "type",
      "right" : "n",
      "info" : "SimpleName[3296-3300]:SimpleName[11007-11008]"
    }, {
      "left" : "if (node != null)",
      "right" : "if (node != null)",
      "info" : "IfStatement[3307-3408]:IfStatement[4428-4529]"
    }, {
      "left" : "node",
      "right" : "optionalParam",
      "info" : "SimpleName[3311-3315]:SimpleName[11044-11057]"
    }, {
      "left" : "node != null",
      "right" : "optionalParam == null",
      "info" : "InfixExpression[3311-3323]:InfixExpression[11044-11065]"
    }, {
      "left" : "!=",
      "right" : "!=",
      "info" : "INFIX_EXPRESSION_OPERATOR[3316-3318]:INFIX_EXPRESSION_OPERATOR[9666-9668]"
    }, {
      "left" : "!=",
      "right" : "==",
      "info" : "INFIX_EXPRESSION_OPERATOR[3316-3318]:INFIX_EXPRESSION_OPERATOR[11058-11060]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[3319-3323]:NullLiteral[9669-9673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3325-3408]:Block[4446-4529]"
    }, {
      "left" : "n.setDeclaredTypeExpression(node);",
      "right" : "n.setDeclaredTypeExpression(node);",
      "info" : "ExpressionStatement[3333-3367]:ExpressionStatement[4454-4488]"
    }, {
      "left" : "n.setDeclaredTypeExpression(node)",
      "right" : "n.getFirstChild()",
      "info" : "MethodInvocation[3333-3366]:MethodInvocation[6917-6934]"
    }, {
      "left" : "n",
      "right" : "\"Array\"",
      "info" : "METHOD_INVOCATION_RECEIVER[3333-3334]:METHOD_INVOCATION_RECEIVER[6956-6963]"
    }, {
      "left" : "n",
      "right" : "Predicates",
      "info" : "SimpleName[3333-3334]:SimpleName[7272-7282]"
    }, {
      "left" : "n.setDeclaredTypeExpression(node)",
      "right" : "Predicates.notNull()",
      "info" : "MethodInvocation[3333-3366]:MethodInvocation[7272-7292]"
    }, {
      "left" : "setDeclaredTypeExpression",
      "right" : "getFirstChild",
      "info" : "SimpleName[3335-3360]:SimpleName[6919-6932]"
    }, {
      "left" : "setDeclaredTypeExpression",
      "right" : "equals",
      "info" : "SimpleName[3335-3360]:SimpleName[6964-6970]"
    }, {
      "left" : "node",
      "right" : "node",
      "info" : "METHOD_INVOCATION_ARGUMENTS[3361-3365]:METHOD_INVOCATION_ARGUMENTS[5053-5057]"
    }, {
      "left" : "node",
      "right" : "typeName",
      "info" : "SimpleName[3361-3365]:SimpleName[6971-6979]"
    }, {
      "left" : "node",
      "right" : "notNull",
      "info" : "SimpleName[3361-3365]:SimpleName[7283-7290]"
    }, {
      "left" : "compiler.reportCodeChange();",
      "right" : "compiler.reportCodeChange();",
      "info" : "ExpressionStatement[3374-3402]:ExpressionStatement[4495-4523]"
    }, {
      "left" : "compiler",
      "right" : "n",
      "info" : "SimpleName[3374-3382]:SimpleName[11264-11265]"
    }, {
      "left" : "compiler.reportCodeChange()",
      "right" : "n.toStringTree()",
      "info" : "MethodInvocation[3374-3401]:MethodInvocation[11264-11280]"
    }, {
      "left" : "reportCodeChange",
      "right" : "toStringTree",
      "info" : "SimpleName[3383-3399]:SimpleName[11266-11278]"
    } ]
  },
  "interFileMappings" : { }
}