{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final static Class<?> CLASS_OBJECT = Object.class;",
      "right" : "private final static Class<?> CLASS_OBJECT = Object.class;",
      "info" : "FieldDeclaration[1956-2014]:FieldDeclaration[1956-2014]"
    }, {
      "left" : "private final static Class<?> CLASS_STRING = String.class;",
      "right" : "private final static Class<?> CLASS_STRING = String.class;",
      "info" : "FieldDeclaration[2019-2077]:FieldDeclaration[2019-2077]"
    }, {
      "left" : "private final static Class<?> CLASS_CHAR_SEQUENCE = CharSequence.class;",
      "right" : "private final static Class<?> CLASS_CHAR_SEQUENCE = CharSequence.class;",
      "info" : "FieldDeclaration[2082-2153]:FieldDeclaration[2082-2153]"
    }, {
      "left" : "private final static Class<?> CLASS_ITERABLE = Iterable.class;",
      "right" : "private final static Class<?> CLASS_ITERABLE = Iterable.class;",
      "info" : "FieldDeclaration[2158-2220]:FieldDeclaration[2158-2220]"
    }, {
      "left" : "private final static Class<?> CLASS_MAP_ENTRY = Map.Entry.class;",
      "right" : "private final static Class<?> CLASS_MAP_ENTRY = Map.Entry.class;",
      "info" : "FieldDeclaration[2225-2289]:FieldDeclaration[2225-2289]"
    }, {
      "left" : "protected final static PropertyName UNWRAPPED_CREATOR_PARAM_NAME = new PropertyName(\"@JsonUnwrapped\");",
      "right" : "protected final static PropertyName UNWRAPPED_CREATOR_PARAM_NAME = new PropertyName(\"@JsonUnwrapped\");",
      "info" : "FieldDeclaration[2295-2540]:FieldDeclaration[2295-2540]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n    final static HashMap<String, Class<? extends Map>> _mapFallbacks =\n        new HashMap<String, Class<? extends Map>>();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n    final static HashMap<String, Class<? extends Map>> _mapFallbacks =\n        new HashMap<String, Class<? extends Map>>();",
      "info" : "FieldDeclaration[2746-2899]:FieldDeclaration[2746-2899]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n    final static HashMap<String, Class<? extends Collection>> _collectionFallbacks =\n        new HashMap<String, Class<? extends Collection>>();",
      "right" : "@SuppressWarnings(\"rawtypes\")\n    final static HashMap<String, Class<? extends Collection>> _collectionFallbacks =\n        new HashMap<String, Class<? extends Collection>>();",
      "info" : "FieldDeclaration[3591-3765]:FieldDeclaration[3591-3765]"
    }, {
      "left" : "protected final DeserializerFactoryConfig _factoryConfig;",
      "right" : "protected final DeserializerFactoryConfig _factoryConfig;",
      "info" : "FieldDeclaration[4755-4984]:FieldDeclaration[4755-4984]"
    }, {
      "left" : "protected BasicDeserializerFactory(DeserializerFactoryConfig config)",
      "right" : "protected BasicDeserializerFactory(DeserializerFactoryConfig config)",
      "info" : "MethodDeclaration[5152-5261]:MethodDeclaration[5152-5261]"
    }, {
      "left" : "public DeserializerFactoryConfig getFactoryConfig()",
      "right" : "public DeserializerFactoryConfig getFactoryConfig()",
      "info" : "MethodDeclaration[5271-5648]:MethodDeclaration[5271-5648]"
    }, {
      "left" : "protected abstract DeserializerFactory withConfig(DeserializerFactoryConfig config);",
      "right" : "protected abstract DeserializerFactory withConfig(DeserializerFactoryConfig config);",
      "info" : "MethodDeclaration[5654-5738]:MethodDeclaration[5654-5738]"
    }, {
      "left" : "public final DeserializerFactory withAdditionalDeserializers(Deserializers additional)",
      "right" : "public final DeserializerFactory withAdditionalDeserializers(Deserializers additional)",
      "info" : "MethodDeclaration[5936-6251]:MethodDeclaration[5936-6251]"
    }, {
      "left" : "public final DeserializerFactory withAdditionalKeyDeserializers(KeyDeserializers additional)",
      "right" : "public final DeserializerFactory withAdditionalKeyDeserializers(KeyDeserializers additional)",
      "info" : "MethodDeclaration[6257-6584]:MethodDeclaration[6257-6584]"
    }, {
      "left" : "public final DeserializerFactory withDeserializerModifier(BeanDeserializerModifier modifier)",
      "right" : "public final DeserializerFactory withDeserializerModifier(BeanDeserializerModifier modifier)",
      "info" : "MethodDeclaration[6594-6921]:MethodDeclaration[6594-6921]"
    }, {
      "left" : "public final DeserializerFactory withAbstractTypeResolver(AbstractTypeResolver resolver)",
      "right" : "public final DeserializerFactory withAbstractTypeResolver(AbstractTypeResolver resolver)",
      "info" : "MethodDeclaration[6927-7246]:MethodDeclaration[6927-7246]"
    }, {
      "left" : "public final DeserializerFactory withValueInstantiators(ValueInstantiators instantiators)",
      "right" : "public final DeserializerFactory withValueInstantiators(ValueInstantiators instantiators)",
      "info" : "MethodDeclaration[7252-7573]:MethodDeclaration[7252-7573]"
    }, {
      "left" : "public JavaType mapAbstractType(DeserializationConfig config, JavaType type) throws JsonMappingException",
      "right" : "public JavaType mapAbstractType(DeserializationConfig config, JavaType type) throws JsonMappingException",
      "info" : "MethodDeclaration[7780-8672]:MethodDeclaration[7780-8672]"
    }, {
      "left" : "private JavaType _mapAbstractType2(DeserializationConfig config, JavaType type)\n        throws JsonMappingException",
      "right" : "private JavaType _mapAbstractType2(DeserializationConfig config, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8678-9447]:MethodDeclaration[8678-9447]"
    }, {
      "left" : "public ValueInstantiator findValueInstantiator(DeserializationContext ctxt,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public ValueInstantiator findValueInstantiator(DeserializationContext ctxt,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[9663-12059]:MethodDeclaration[9663-12059]"
    }, {
      "left" : "private ValueInstantiator _findStdValueInstantiator(DeserializationConfig config,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "private ValueInstantiator _findStdValueInstantiator(DeserializationConfig config,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12065-13020]:MethodDeclaration[12065-13020]"
    }, {
      "left" : "protected ValueInstantiator _constructDefaultValueInstantiator(DeserializationContext ctxt,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected ValueInstantiator _constructDefaultValueInstantiator(DeserializationContext ctxt,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[13026-14932]:MethodDeclaration[13026-14932]"
    }, {
      "left" : "protected Map<AnnotatedWithParams,BeanPropertyDefinition[]> _findCreatorsFromProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc) throws JsonMappingException",
      "right" : "protected Map<AnnotatedWithParams,BeanPropertyDefinition[]> _findCreatorsFromProperties(DeserializationContext ctxt,\n            BeanDescription beanDesc) throws JsonMappingException",
      "info" : "MethodDeclaration[14938-16428]:MethodDeclaration[14938-16428]"
    }, {
      "left" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config,\n            Annotated annotated, Object instDef)\n        throws JsonMappingException",
      "right" : "public ValueInstantiator _valueInstantiatorInstance(DeserializationConfig config,\n            Annotated annotated, Object instDef)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[16438-17900]:MethodDeclaration[16438-17900]"
    }, {
      "left" : "protected void _addDeserializerConstructors(DeserializationContext ctxt,\n            BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators,\n         Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams)\n                 throws JsonMappingException",
      "right" : "protected void _addDeserializerConstructors(DeserializationContext ctxt,\n            BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators,\n         Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams)\n                 throws JsonMappingException",
      "info" : "MethodDeclaration[18079-27528]:MethodDeclaration[18079-27528]"
    }, {
      "left" : "protected void _addExplicitDelegatingCreator(DeserializationContext ctxt,\n            BeanDescription beanDesc, CreatorCollector creators,\n            CreatorCandidate candidate)\n        throws JsonMappingException",
      "right" : "protected void _addExplicitDelegatingCreator(DeserializationContext ctxt,\n            BeanDescription beanDesc, CreatorCollector creators,\n            CreatorCandidate candidate)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[27534-29936]:MethodDeclaration[27534-29936]"
    }, {
      "left" : "protected void _addExplicitPropertyCreator(DeserializationContext ctxt,\n            BeanDescription beanDesc, CreatorCollector creators,\n            CreatorCandidate candidate)\n        throws JsonMappingException",
      "right" : "protected void _addExplicitPropertyCreator(DeserializationContext ctxt,\n            BeanDescription beanDesc, CreatorCollector creators,\n            CreatorCandidate candidate)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[29942-31905]:MethodDeclaration[29942-31905]"
    }, {
      "left" : "protected void _addExplicitAnyCreator(DeserializationContext ctxt,\n            BeanDescription beanDesc, CreatorCollector creators,\n            CreatorCandidate candidate)\n        throws JsonMappingException",
      "right" : "protected void _addExplicitAnyCreator(DeserializationContext ctxt,\n            BeanDescription beanDesc, CreatorCollector creators,\n            CreatorCandidate candidate)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[31911-34624]:MethodDeclaration[31911-34624]"
    }, {
      "left" : "private boolean _checkIfCreatorPropertyBased(AnnotationIntrospector intr,\n            AnnotatedWithParams creator, BeanPropertyDefinition propDef)",
      "right" : "private boolean _checkIfCreatorPropertyBased(AnnotationIntrospector intr,\n            AnnotatedWithParams creator, BeanPropertyDefinition propDef)",
      "info" : "MethodDeclaration[34630-35519]:MethodDeclaration[34630-35519]"
    }, {
      "left" : "private void _checkImplicitlyNamedConstructors(DeserializationContext ctxt,\n            BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n            AnnotationIntrospector intr, CreatorCollector creators,\n            List<AnnotatedWithParams> implicitCtors) throws JsonMappingException",
      "right" : "private void _checkImplicitlyNamedConstructors(DeserializationContext ctxt,\n            BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n            AnnotationIntrospector intr, CreatorCollector creators,\n            List<AnnotatedWithParams> implicitCtors) throws JsonMappingException",
      "info" : "MethodDeclaration[35525-38070]:MethodDeclaration[35525-38070]"
    }, {
      "left" : "protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators,\n         Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams)\n        throws JsonMappingException",
      "right" : "protected void _addDeserializerFactoryMethods\n        (DeserializationContext ctxt, BeanDescription beanDesc, VisibilityChecker<?> vchecker,\n         AnnotationIntrospector intr, CreatorCollector creators,\n         Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[38076-45502]:MethodDeclaration[38076-45502]"
    }, {
      "left" : "protected boolean _handleSingleArgumentCreator(CreatorCollector creators,\n            AnnotatedWithParams ctor, boolean isCreator, boolean isVisible)",
      "right" : "protected boolean _handleSingleArgumentCreator(CreatorCollector creators,\n            AnnotatedWithParams ctor, boolean isCreator, boolean isVisible)",
      "info" : "MethodDeclaration[45508-47064]:MethodDeclaration[45508-47064]"
    }, {
      "left" : "protected void _reportUnwrappedCreatorProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedParameter param)\n        throws JsonMappingException",
      "right" : "protected void _reportUnwrappedCreatorProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, AnnotatedParameter param)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[47218-47614]:MethodDeclaration[47218-47614]"
    }, {
      "left" : "protected SettableBeanProperty constructCreatorProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, PropertyName name, int index,\n            AnnotatedParameter param,\n            JacksonInject.Value injectable)\n        throws JsonMappingException",
      "right" : "protected SettableBeanProperty constructCreatorProperty(DeserializationContext ctxt,\n            BeanDescription beanDesc, PropertyName name, int index,\n            AnnotatedParameter param,\n            JacksonInject.Value injectable)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[47620-50181]:MethodDeclaration[47620-50181]"
    }, {
      "left" : "private PropertyName _findParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
      "right" : "private PropertyName _findParamName(AnnotatedParameter param, AnnotationIntrospector intr)",
      "info" : "MethodDeclaration[50187-50815]:MethodDeclaration[50187-50815]"
    }, {
      "left" : "public JsonDeserializer<?> createArrayDeserializer(DeserializationContext ctxt,\n            ArrayType type, final BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createArrayDeserializer(DeserializationContext ctxt,\n            ArrayType type, final BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[51030-52873]:MethodDeclaration[51030-52873]"
    }, {
      "left" : "public JsonDeserializer<?> createCollectionDeserializer(DeserializationContext ctxt,\n            CollectionType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createCollectionDeserializer(DeserializationContext ctxt,\n            CollectionType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[53092-57364]:MethodDeclaration[53092-57364]"
    }, {
      "left" : "protected CollectionType _mapAbstractCollectionType(JavaType type, DeserializationConfig config)",
      "right" : "protected CollectionType _mapAbstractCollectionType(JavaType type, DeserializationConfig config)",
      "info" : "MethodDeclaration[57370-57774]:MethodDeclaration[57370-57774]"
    }, {
      "left" : "public JsonDeserializer<?> createCollectionLikeDeserializer(DeserializationContext ctxt,\n            CollectionLikeType type, final BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createCollectionLikeDeserializer(DeserializationContext ctxt,\n            CollectionLikeType type, final BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[57883-59302]:MethodDeclaration[57883-59302]"
    }, {
      "left" : "public JsonDeserializer<?> createMapDeserializer(DeserializationContext ctxt,\n            MapType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createMapDeserializer(DeserializationContext ctxt,\n            MapType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[59514-64940]:MethodDeclaration[59514-64940]"
    }, {
      "left" : "public JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt,\n            MapLikeType type, final BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createMapLikeDeserializer(DeserializationContext ctxt,\n            MapLikeType type, final BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[65038-66913]:MethodDeclaration[65038-66913]"
    }, {
      "left" : "public JsonDeserializer<?> createEnumDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createEnumDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[67116-69528]:MethodDeclaration[67116-69528]"
    }, {
      "left" : "public JsonDeserializer<?> createTreeDeserializer(DeserializationConfig config,\n            JavaType nodeType, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createTreeDeserializer(DeserializationConfig config,\n            JavaType nodeType, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[69534-70166]:MethodDeclaration[69534-70166]"
    }, {
      "left" : "public JsonDeserializer<?> createReferenceDeserializer(DeserializationContext ctxt,\n            ReferenceType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> createReferenceDeserializer(DeserializationContext ctxt,\n            ReferenceType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[70172-72366]:MethodDeclaration[70172-72366]"
    }, {
      "left" : "protected JsonDeserializer<?> findOptionalStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> findOptionalStdDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[74454-74847]:MethodDeclaration[74469-74862]"
    }, {
      "left" : "public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,\n            JavaType type)\n        throws JsonMappingException",
      "right" : "public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,\n            JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[75070-76405]:MethodDeclaration[75085-76420]"
    }, {
      "left" : "private KeyDeserializer _createEnumKeyDeserializer(DeserializationContext ctxt,\n            JavaType type)\n        throws JsonMappingException",
      "right" : "private KeyDeserializer _createEnumKeyDeserializer(DeserializationContext ctxt,\n            JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[76411-79347]:MethodDeclaration[76426-79362]"
    }, {
      "left" : "public TypeDeserializer findPropertyTypeDeserializer(DeserializationConfig config,\n            JavaType baseType, AnnotatedMember annotated)\n        throws JsonMappingException",
      "right" : "public TypeDeserializer findPropertyTypeDeserializer(DeserializationConfig config,\n            JavaType baseType, AnnotatedMember annotated)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[79517-80990]:MethodDeclaration[79532-81005]"
    }, {
      "left" : "public TypeDeserializer findPropertyContentTypeDeserializer(DeserializationConfig config,\n            JavaType containerType, AnnotatedMember propertyEntity)\n        throws JsonMappingException",
      "right" : "public TypeDeserializer findPropertyContentTypeDeserializer(DeserializationConfig config,\n            JavaType containerType, AnnotatedMember propertyEntity)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[81000-82515]:MethodDeclaration[81015-82530]"
    }, {
      "left" : "public JsonDeserializer<?> findDefaultDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonDeserializer<?> findDefaultDeserializer(DeserializationContext ctxt,\n            JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[82521-85750]:MethodDeclaration[82536-85765]"
    }, {
      "left" : "protected JavaType _findRemappedType(DeserializationConfig config, Class<?> rawType) throws JsonMappingException",
      "right" : "protected JavaType _findRemappedType(DeserializationConfig config, Class<?> rawType) throws JsonMappingException",
      "info" : "MethodDeclaration[85756-86030]:MethodDeclaration[85771-86045]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomTreeNodeDeserializer(Class<? extends JsonNode> type,\n            DeserializationConfig config, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomTreeNodeDeserializer(Class<? extends JsonNode> type,\n            DeserializationConfig config, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[86232-86707]:MethodDeclaration[86247-86722]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomReferenceDeserializer(ReferenceType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomReferenceDeserializer(ReferenceType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer contentTypeDeserializer, JsonDeserializer<?> contentDeserializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[86713-87339]:MethodDeclaration[86728-87354]"
    }, {
      "left" : "protected JsonDeserializer<Object> _findCustomBeanDeserializer(JavaType type,\n            DeserializationConfig config, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> _findCustomBeanDeserializer(JavaType type,\n            DeserializationConfig config, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[87345-87862]:MethodDeclaration[87360-87877]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomArrayDeserializer(ArrayType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomArrayDeserializer(ArrayType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[87868-88482]:MethodDeclaration[87883-88497]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomCollectionDeserializer(CollectionType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomCollectionDeserializer(CollectionType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[88492-89121]:MethodDeclaration[88507-89136]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomCollectionLikeDeserializer(CollectionLikeType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomCollectionLikeDeserializer(CollectionLikeType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[89131-89772]:MethodDeclaration[89146-89787]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomEnumDeserializer(Class<?> type,\n            DeserializationConfig config, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomEnumDeserializer(Class<?> type,\n            DeserializationConfig config, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[89778-90228]:MethodDeclaration[89793-90243]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomMapDeserializer(MapType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            KeyDeserializer keyDeserializer,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomMapDeserializer(MapType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            KeyDeserializer keyDeserializer,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[90238-90908]:MethodDeclaration[90253-90923]"
    }, {
      "left" : "protected JsonDeserializer<?> _findCustomMapLikeDeserializer(MapLikeType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            KeyDeserializer keyDeserializer,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<?> _findCustomMapLikeDeserializer(MapLikeType type,\n            DeserializationConfig config, BeanDescription beanDesc,\n            KeyDeserializer keyDeserializer,\n            TypeDeserializer elementTypeDeserializer, JsonDeserializer<?> elementDeserializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[90914-91596]:MethodDeclaration[90929-91611]"
    }, {
      "left" : "protected JsonDeserializer<Object> findDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> findDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[91810-92677]:MethodDeclaration[91825-92692]"
    }, {
      "left" : "protected KeyDeserializer findKeyDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n            throws JsonMappingException",
      "right" : "protected KeyDeserializer findKeyDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n            throws JsonMappingException",
      "info" : "MethodDeclaration[92683-93356]:MethodDeclaration[92698-93371]"
    }, {
      "left" : "protected JsonDeserializer<Object> findContentDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "right" : "protected JsonDeserializer<Object> findContentDeserializerFromAnnotation(DeserializationContext ctxt,\n            Annotated ann)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[93362-93883]:MethodDeclaration[93377-93898]"
    }, {
      "left" : "protected JavaType resolveMemberAndTypeAnnotations(DeserializationContext ctxt,\n            AnnotatedMember member, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JavaType resolveMemberAndTypeAnnotations(DeserializationContext ctxt,\n            AnnotatedMember member, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[93893-96517]:MethodDeclaration[93908-96532]"
    }, {
      "left" : "protected EnumResolver constructEnumResolver(Class<?> enumClass,\n            DeserializationConfig config, AnnotatedMember jsonValueAccessor)",
      "right" : "protected EnumResolver constructEnumResolver(Class<?> enumClass,\n            DeserializationConfig config, AnnotatedMember jsonValueAccessor)",
      "info" : "MethodDeclaration[96523-97374]:MethodDeclaration[96538-97389]"
    }, {
      "left" : "protected boolean _hasCreatorAnnotation(DeserializationContext ctxt,\n            Annotated ann)",
      "right" : "protected boolean _hasCreatorAnnotation(DeserializationContext ctxt,\n            Annotated ann)",
      "info" : "MethodDeclaration[97380-97811]:MethodDeclaration[97395-97826]"
    }, {
      "left" : "protected JavaType modifyTypeByAnnotation(DeserializationContext ctxt,\n            Annotated a, JavaType type)\n        throws JsonMappingException",
      "right" : "protected JavaType modifyTypeByAnnotation(DeserializationContext ctxt,\n            Annotated a, JavaType type)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[98002-98628]:MethodDeclaration[98017-98643]"
    }, {
      "left" : "// since 2.8\n    protected JavaType resolveType(DeserializationContext ctxt,\n            BeanDescription beanDesc, JavaType type, AnnotatedMember member)\n        throws JsonMappingException",
      "right" : "// since 2.8\n    protected JavaType resolveType(DeserializationContext ctxt,\n            BeanDescription beanDesc, JavaType type, AnnotatedMember member)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[98634-99015]:MethodDeclaration[98649-99030]"
    }, {
      "left" : "// not used, possibly remove as early as 2.9\n    protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
      "right" : "// not used, possibly remove as early as 2.9\n    protected AnnotatedMethod _findJsonValueFor(DeserializationConfig config, JavaType enumType)",
      "info" : "MethodDeclaration[99021-99482]:MethodDeclaration[99036-99497]"
    } ],
    "mappings" : [
 {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5152-5161]:Modifier[5152-5161]"
    }, {
      "left" : "BasicDeserializerFactory",
      "right" : "BasicDeserializerFactory",
      "info" : "SimpleName[5162-5186]:SimpleName[5162-5186]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[5187-5219]:SingleVariableDeclaration[5187-5219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5221-5261]:Block[5221-5261]"
    }, {
      "left" : "_factoryConfig = config;",
      "right" : "_factoryConfig = config;",
      "info" : "ExpressionStatement[5231-5255]:ExpressionStatement[5231-5255]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5558-5564]:Modifier[5558-5564]"
    }, {
      "left" : "DeserializerFactoryConfig",
      "right" : "DeserializerFactoryConfig",
      "info" : "SimpleType[5565-5590]:SimpleType[5565-5590]"
    }, {
      "left" : "getFactoryConfig",
      "right" : "getFactoryConfig",
      "info" : "SimpleName[5591-5607]:SimpleName[5591-5607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5610-5648]:Block[5610-5648]"
    }, {
      "left" : "return _factoryConfig;",
      "right" : "return _factoryConfig;",
      "info" : "ReturnStatement[5620-5642]:ReturnStatement[5620-5642]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5654-5663]:Modifier[5654-5663]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[5664-5672]:Modifier[5664-5672]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[5673-5692]:SimpleType[5673-5692]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[5693-5703]:SimpleName[5693-5703]"
    }, {
      "left" : "DeserializerFactoryConfig config",
      "right" : "DeserializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[5704-5736]:SingleVariableDeclaration[5704-5736]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6060-6069]:MarkerAnnotation[6060-6069]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6074-6080]:Modifier[6074-6080]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6081-6086]:Modifier[6081-6086]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[6087-6106]:SimpleType[6087-6106]"
    }, {
      "left" : "withAdditionalDeserializers",
      "right" : "withAdditionalDeserializers",
      "info" : "SimpleName[6107-6134]:SimpleName[6107-6134]"
    }, {
      "left" : "Deserializers additional",
      "right" : "Deserializers additional",
      "info" : "SingleVariableDeclaration[6135-6159]:SingleVariableDeclaration[6135-6159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6161-6251]:Block[6161-6251]"
    }, {
      "left" : "return withConfig(_factoryConfig.withAdditionalDeserializers(additional));",
      "right" : "return withConfig(_factoryConfig.withAdditionalDeserializers(additional));",
      "info" : "ReturnStatement[6171-6245]:ReturnStatement[6171-6245]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6384-6393]:MarkerAnnotation[6384-6393]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6398-6404]:Modifier[6398-6404]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6405-6410]:Modifier[6405-6410]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[6411-6430]:SimpleType[6411-6430]"
    }, {
      "left" : "withAdditionalKeyDeserializers",
      "right" : "withAdditionalKeyDeserializers",
      "info" : "SimpleName[6431-6461]:SimpleName[6431-6461]"
    }, {
      "left" : "KeyDeserializers additional",
      "right" : "KeyDeserializers additional",
      "info" : "SingleVariableDeclaration[6462-6489]:SingleVariableDeclaration[6462-6489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6491-6584]:Block[6491-6584]"
    }, {
      "left" : "return withConfig(_factoryConfig.withAdditionalKeyDeserializers(additional));",
      "right" : "return withConfig(_factoryConfig.withAdditionalKeyDeserializers(additional));",
      "info" : "ReturnStatement[6501-6578]:ReturnStatement[6501-6578]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6729-6738]:MarkerAnnotation[6729-6738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6743-6749]:Modifier[6743-6749]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[6750-6755]:Modifier[6750-6755]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[6756-6775]:SimpleType[6756-6775]"
    }, {
      "left" : "withDeserializerModifier",
      "right" : "withDeserializerModifier",
      "info" : "SimpleName[6776-6800]:SimpleName[6776-6800]"
    }, {
      "left" : "BeanDeserializerModifier modifier",
      "right" : "BeanDeserializerModifier modifier",
      "info" : "SingleVariableDeclaration[6801-6834]:SingleVariableDeclaration[6801-6834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6836-6921]:Block[6836-6921]"
    }, {
      "left" : "return withConfig(_factoryConfig.withDeserializerModifier(modifier));",
      "right" : "return withConfig(_factoryConfig.withDeserializerModifier(modifier));",
      "info" : "ReturnStatement[6846-6915]:ReturnStatement[6846-6915]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7058-7067]:MarkerAnnotation[7058-7067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7072-7078]:Modifier[7072-7078]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7079-7084]:Modifier[7079-7084]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[7085-7104]:SimpleType[7085-7104]"
    }, {
      "left" : "withAbstractTypeResolver",
      "right" : "withAbstractTypeResolver",
      "info" : "SimpleName[7105-7129]:SimpleName[7105-7129]"
    }, {
      "left" : "AbstractTypeResolver resolver",
      "right" : "AbstractTypeResolver resolver",
      "info" : "SingleVariableDeclaration[7130-7159]:SingleVariableDeclaration[7130-7159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7161-7246]:Block[7161-7246]"
    }, {
      "left" : "return withConfig(_factoryConfig.withAbstractTypeResolver(resolver));",
      "right" : "return withConfig(_factoryConfig.withAbstractTypeResolver(resolver));",
      "info" : "ReturnStatement[7171-7240]:ReturnStatement[7171-7240]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7381-7390]:MarkerAnnotation[7381-7390]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7395-7401]:Modifier[7395-7401]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[7402-7407]:Modifier[7402-7407]"
    }, {
      "left" : "DeserializerFactory",
      "right" : "DeserializerFactory",
      "info" : "SimpleType[7408-7427]:SimpleType[7408-7427]"
    }, {
      "left" : "withValueInstantiators",
      "right" : "withValueInstantiators",
      "info" : "SimpleName[7428-7450]:SimpleName[7428-7450]"
    }, {
      "left" : "ValueInstantiators instantiators",
      "right" : "ValueInstantiators instantiators",
      "info" : "SingleVariableDeclaration[7451-7483]:SingleVariableDeclaration[7451-7483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7485-7573]:Block[7485-7573]"
    }, {
      "left" : "return withConfig(_factoryConfig.withValueInstantiators(instantiators));",
      "right" : "return withConfig(_factoryConfig.withValueInstantiators(instantiators));",
      "info" : "ReturnStatement[7495-7567]:ReturnStatement[7495-7567]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7780-7789]:MarkerAnnotation[7780-7789]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7794-7800]:Modifier[7794-7800]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[7801-7809]:SimpleType[7801-7809]"
    }, {
      "left" : "mapAbstractType",
      "right" : "mapAbstractType",
      "info" : "SimpleName[7810-7825]:SimpleName[7810-7825]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[7826-7854]:SingleVariableDeclaration[7826-7854]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[7856-7869]:SingleVariableDeclaration[7856-7869]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7878-7898]:SimpleType[7878-7898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7903-8672]:Block[7903-8672]"
    }, {
      "left" : "while (true)",
      "right" : "while (true)",
      "info" : "WhileStatement[7948-8666]:WhileStatement[7948-8666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7961-8666]:Block[7961-8666]"
    }, {
      "left" : "JavaType next = _mapAbstractType2(config, type);",
      "right" : "JavaType next = _mapAbstractType2(config, type);",
      "info" : "VariableDeclarationStatement[7975-8023]:VariableDeclarationStatement[7975-8023]"
    }, {
      "left" : "if (next == null)",
      "right" : "if (next == null)",
      "info" : "IfStatement[8036-8098]:IfStatement[8036-8098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8054-8098]:Block[8054-8098]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[8072-8084]:ReturnStatement[8072-8084]"
    }, {
      "left" : "Class<?> prevCls = type.getRawClass();",
      "right" : "Class<?> prevCls = type.getRawClass();",
      "info" : "VariableDeclarationStatement[8301-8339]:VariableDeclarationStatement[8301-8339]"
    }, {
      "left" : "Class<?> nextCls = next.getRawClass();",
      "right" : "Class<?> nextCls = next.getRawClass();",
      "info" : "VariableDeclarationStatement[8352-8390]:VariableDeclarationStatement[8352-8390]"
    }, {
      "left" : "if ((prevCls == nextCls) || !prevCls.isAssignableFrom(nextCls))",
      "right" : "if ((prevCls == nextCls) || !prevCls.isAssignableFrom(nextCls))",
      "info" : "IfStatement[8403-8631]:IfStatement[8403-8631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8467-8631]:Block[8467-8631]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid abstract type resolution from \"+type+\" to \"+next+\": latter is not a subtype of former\");",
      "right" : "throw new IllegalArgumentException(\"Invalid abstract type resolution from \"+type+\" to \"+next+\": latter is not a subtype of former\");",
      "info" : "ThrowStatement[8485-8617]:ThrowStatement[8485-8617]"
    }, {
      "left" : "type = next;",
      "right" : "type = next;",
      "info" : "ExpressionStatement[8644-8656]:ExpressionStatement[8644-8656]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[8869-8876]:Modifier[8869-8876]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[8877-8885]:SimpleType[8877-8885]"
    }, {
      "left" : "_mapAbstractType2",
      "right" : "_mapAbstractType2",
      "info" : "SimpleName[8886-8903]:SimpleName[8886-8903]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[8904-8932]:SingleVariableDeclaration[8904-8932]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[8934-8947]:SingleVariableDeclaration[8934-8947]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[8964-8984]:SimpleType[8964-8984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8989-9447]:Block[8989-9447]"
    }, {
      "left" : "Class<?> currClass = type.getRawClass();",
      "right" : "Class<?> currClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[8999-9039]:VariableDeclarationStatement[8999-9039]"
    }, {
      "left" : "if (_factoryConfig.hasAbstractTypeResolvers())",
      "right" : "if (_factoryConfig.hasAbstractTypeResolvers())",
      "info" : "IfStatement[9048-9420]:IfStatement[9048-9420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9095-9420]:Block[9095-9420]"
    }, {
      "left" : "for (AbstractTypeResolver resolver : _factoryConfig.abstractTypeResolvers())",
      "right" : "for (AbstractTypeResolver resolver : _factoryConfig.abstractTypeResolvers())",
      "info" : "EnhancedForStatement[9109-9410]:EnhancedForStatement[9109-9410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9186-9410]:Block[9186-9410]"
    }, {
      "left" : "JavaType concrete = resolver.findTypeMapping(config, type);",
      "right" : "JavaType concrete = resolver.findTypeMapping(config, type);",
      "info" : "VariableDeclarationStatement[9204-9263]:VariableDeclarationStatement[9204-9263]"
    }, {
      "left" : "if ((concrete != null) && !concrete.hasRawClass(currClass))",
      "right" : "if ((concrete != null) && !concrete.hasRawClass(currClass))",
      "info" : "IfStatement[9280-9396]:IfStatement[9280-9396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9340-9396]:Block[9340-9396]"
    }, {
      "left" : "return concrete;",
      "right" : "return concrete;",
      "info" : "ReturnStatement[9362-9378]:ReturnStatement[9362-9378]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9429-9441]:ReturnStatement[9429-9441]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9854-9863]:MarkerAnnotation[9854-9863]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9868-9874]:Modifier[9868-9874]"
    }, {
      "left" : "ValueInstantiator",
      "right" : "ValueInstantiator",
      "info" : "SimpleType[9875-9892]:SimpleType[9875-9892]"
    }, {
      "left" : "findValueInstantiator",
      "right" : "findValueInstantiator",
      "info" : "SimpleName[9893-9914]:SimpleName[9893-9914]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[9915-9942]:SingleVariableDeclaration[9915-9942]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[9956-9980]:SingleVariableDeclaration[9956-9980]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[9997-10017]:SimpleType[9997-10017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10022-12059]:Block[10022-12059]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[10032-10086]:VariableDeclarationStatement[10032-10086]"
    }, {
      "left" : "ValueInstantiator instantiator = null;",
      "right" : "ValueInstantiator instantiator = null;",
      "info" : "VariableDeclarationStatement[10096-10134]:VariableDeclarationStatement[10096-10134]"
    }, {
      "left" : "AnnotatedClass ac = beanDesc.getClassInfo();",
      "right" : "AnnotatedClass ac = beanDesc.getClassInfo();",
      "info" : "VariableDeclarationStatement[10204-10248]:VariableDeclarationStatement[10204-10248]"
    }, {
      "left" : "Object instDef = ctxt.getAnnotationIntrospector().findValueInstantiator(ac);",
      "right" : "Object instDef = ctxt.getAnnotationIntrospector().findValueInstantiator(ac);",
      "info" : "VariableDeclarationStatement[10257-10333]:VariableDeclarationStatement[10257-10333]"
    }, {
      "left" : "if (instDef != null)",
      "right" : "if (instDef != null)",
      "info" : "IfStatement[10342-10450]:IfStatement[10342-10450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10363-10450]:Block[10363-10450]"
    }, {
      "left" : "instantiator = _valueInstantiatorInstance(config, ac, instDef);",
      "right" : "instantiator = _valueInstantiatorInstance(config, ac, instDef);",
      "info" : "ExpressionStatement[10377-10440]:ExpressionStatement[10377-10440]"
    }, {
      "left" : "if (instantiator == null)",
      "right" : "if (instantiator == null)",
      "info" : "IfStatement[10459-10820]:IfStatement[10459-10820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10485-10820]:Block[10485-10820]"
    }, {
      "left" : "instantiator = _findStdValueInstantiator(config, beanDesc);",
      "right" : "instantiator = _findStdValueInstantiator(config, beanDesc);",
      "info" : "ExpressionStatement[10614-10673]:ExpressionStatement[10614-10673]"
    }, {
      "left" : "if (instantiator == null)",
      "right" : "if (instantiator == null)",
      "info" : "IfStatement[10686-10810]:IfStatement[10686-10810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10712-10810]:Block[10712-10810]"
    }, {
      "left" : "instantiator = _constructDefaultValueInstantiator(ctxt, beanDesc);",
      "right" : "instantiator = _constructDefaultValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[10730-10796]:ExpressionStatement[10730-10796]"
    }, {
      "left" : "if (_factoryConfig.hasValueInstantiators())",
      "right" : "if (_factoryConfig.hasValueInstantiators())",
      "info" : "IfStatement[10891-11455]:IfStatement[10891-11455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10935-11455]:Block[10935-11455]"
    }, {
      "left" : "for (ValueInstantiators insts : _factoryConfig.valueInstantiators())",
      "right" : "for (ValueInstantiators insts : _factoryConfig.valueInstantiators())",
      "info" : "EnhancedForStatement[10949-11445]:EnhancedForStatement[10949-11445]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11018-11445]:Block[11018-11445]"
    }, {
      "left" : "instantiator = insts.findValueInstantiator(config, beanDesc, instantiator);",
      "right" : "instantiator = insts.findValueInstantiator(config, beanDesc, instantiator);",
      "info" : "ExpressionStatement[11036-11111]:ExpressionStatement[11036-11111]"
    }, {
      "left" : "if (instantiator == null)",
      "right" : "if (instantiator == null)",
      "info" : "IfStatement[11200-11431]:IfStatement[11200-11431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11226-11431]:Block[11226-11431]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\t\t\t\t\t\t\"Broken registered ValueInstantiators (of type %s): returned null ValueInstantiator\",\n\t\t\t\t\t\tinsts.getClass().getName());",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\t\t\t\t\t\t\"Broken registered ValueInstantiators (of type %s): returned null ValueInstantiator\",\n\t\t\t\t\t\tinsts.getClass().getName());",
      "info" : "ExpressionStatement[11248-11413]:ExpressionStatement[11248-11413]"
    }, {
      "left" : "if (instantiator.getIncompleteParameter() != null)",
      "right" : "if (instantiator.getIncompleteParameter() != null)",
      "info" : "IfStatement[11550-12023]:IfStatement[11550-12023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11601-12023]:Block[11601-12023]"
    }, {
      "left" : "final AnnotatedParameter nonAnnotatedParam = instantiator.getIncompleteParameter();",
      "right" : "final AnnotatedParameter nonAnnotatedParam = instantiator.getIncompleteParameter();",
      "info" : "VariableDeclarationStatement[11615-11698]:VariableDeclarationStatement[11615-11698]"
    }, {
      "left" : "final AnnotatedWithParams ctor = nonAnnotatedParam.getOwner();",
      "right" : "final AnnotatedWithParams ctor = nonAnnotatedParam.getOwner();",
      "info" : "VariableDeclarationStatement[11711-11773]:VariableDeclarationStatement[11711-11773]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                +\" of constructor \"+ctor+\" has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\");",
      "right" : "throw new IllegalArgumentException(\"Argument #\"+nonAnnotatedParam.getIndex()\n                +\" of constructor \"+ctor+\" has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\");",
      "info" : "ThrowStatement[11786-12013]:ThrowStatement[11786-12013]"
    }, {
      "left" : "return instantiator;",
      "right" : "return instantiator;",
      "info" : "ReturnStatement[12033-12053]:ReturnStatement[12033-12053]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12065-12072]:Modifier[12065-12072]"
    }, {
      "left" : "ValueInstantiator",
      "right" : "ValueInstantiator",
      "info" : "SimpleType[12073-12090]:SimpleType[12073-12090]"
    }, {
      "left" : "_findStdValueInstantiator",
      "right" : "_findStdValueInstantiator",
      "info" : "SimpleName[12091-12116]:SimpleName[12091-12116]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[12117-12145]:SingleVariableDeclaration[12117-12145]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[12159-12183]:SingleVariableDeclaration[12159-12183]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[12200-12220]:SimpleType[12200-12220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12225-13020]:Block[12225-13020]"
    }, {
      "left" : "Class<?> raw = beanDesc.getBeanClass();",
      "right" : "Class<?> raw = beanDesc.getBeanClass();",
      "info" : "VariableDeclarationStatement[12235-12274]:VariableDeclarationStatement[12235-12274]"
    }, {
      "left" : "if (raw == JsonLocation.class)",
      "right" : "if (raw == JsonLocation.class)",
      "info" : "IfStatement[12283-12376]:IfStatement[12283-12376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12314-12376]:Block[12314-12376]"
    }, {
      "left" : "return new JsonLocationInstantiator();",
      "right" : "return new JsonLocationInstantiator();",
      "info" : "ReturnStatement[12328-12366]:ReturnStatement[12328-12366]"
    }, {
      "left" : "if (Collection.class.isAssignableFrom(raw))",
      "right" : "if (Collection.class.isAssignableFrom(raw))",
      "info" : "IfStatement[12432-12993]:IfStatement[12432-12993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12476-12789]:Block[12476-12789]"
    }, {
      "left" : "if (Collections.EMPTY_SET.getClass() == raw)",
      "right" : "if (Collections.EMPTY_SET.getClass() == raw)",
      "info" : "IfStatement[12490-12627]:IfStatement[12490-12627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12535-12627]:Block[12535-12627]"
    }, {
      "left" : "return new ConstantValueInstantiator(Collections.EMPTY_SET);",
      "right" : "return new ConstantValueInstantiator(Collections.EMPTY_SET);",
      "info" : "ReturnStatement[12553-12613]:ReturnStatement[12553-12613]"
    }, {
      "left" : "if (Collections.EMPTY_LIST.getClass() == raw)",
      "right" : "if (Collections.EMPTY_LIST.getClass() == raw)",
      "info" : "IfStatement[12640-12779]:IfStatement[12640-12779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12686-12779]:Block[12686-12779]"
    }, {
      "left" : "return new ConstantValueInstantiator(Collections.EMPTY_LIST);",
      "right" : "return new ConstantValueInstantiator(Collections.EMPTY_LIST);",
      "info" : "ReturnStatement[12704-12765]:ReturnStatement[12704-12765]"
    }, {
      "left" : "if (Map.class.isAssignableFrom(raw))",
      "right" : "if (Map.class.isAssignableFrom(raw))",
      "info" : "IfStatement[12795-12993]:IfStatement[12795-12993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12832-12993]:Block[12832-12993]"
    }, {
      "left" : "if (Collections.EMPTY_MAP.getClass() == raw)",
      "right" : "if (Collections.EMPTY_MAP.getClass() == raw)",
      "info" : "IfStatement[12846-12983]:IfStatement[12846-12983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12891-12983]:Block[12891-12983]"
    }, {
      "left" : "return new ConstantValueInstantiator(Collections.EMPTY_MAP);",
      "right" : "return new ConstantValueInstantiator(Collections.EMPTY_MAP);",
      "info" : "ReturnStatement[12909-12969]:ReturnStatement[12909-12969]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13002-13014]:ReturnStatement[13002-13014]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[13185-13194]:Modifier[13185-13194]"
    }, {
      "left" : "ValueInstantiator",
      "right" : "ValueInstantiator",
      "info" : "SimpleType[13195-13212]:SimpleType[13195-13212]"
    }, {
      "left" : "_constructDefaultValueInstantiator",
      "right" : "_constructDefaultValueInstantiator",
      "info" : "SimpleName[13213-13247]:SimpleName[13213-13247]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[13248-13275]:SingleVariableDeclaration[13248-13275]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[13289-13313]:SingleVariableDeclaration[13289-13313]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[13330-13350]:SimpleType[13330-13350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13355-14932]:Block[13355-14932]"
    }, {
      "left" : "CreatorCollector creators = new CreatorCollector(beanDesc, ctxt.getConfig());",
      "right" : "CreatorCollector creators = new CreatorCollector(beanDesc, ctxt.getConfig());",
      "info" : "VariableDeclarationStatement[13365-13442]:VariableDeclarationStatement[13365-13442]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[13451-13514]:VariableDeclarationStatement[13451-13514]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[13590-13644]:VariableDeclarationStatement[13590-13644]"
    }, {
      "left" : "VisibilityChecker<?> vchecker = config.getDefaultVisibilityChecker(beanDesc.getBeanClass(),\n                beanDesc.getClassInfo());",
      "right" : "VisibilityChecker<?> vchecker = config.getDefaultVisibilityChecker(beanDesc.getBeanClass(),\n                beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[13653-13786]:VariableDeclarationStatement[13653-13786]"
    }, {
      "left" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorDefs = _findCreatorsFromProperties(ctxt,\n                beanDesc);",
      "right" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorDefs = _findCreatorsFromProperties(ctxt,\n                beanDesc);",
      "info" : "VariableDeclarationStatement[14330-14454]:VariableDeclarationStatement[14330-14454]"
    }, {
      "left" : "_addDeserializerFactoryMethods(ctxt, beanDesc, vchecker, intr, creators, creatorDefs);",
      "right" : "_addDeserializerFactoryMethods(ctxt, beanDesc, vchecker, intr, creators, creatorDefs);",
      "info" : "ExpressionStatement[14573-14659]:ExpressionStatement[14573-14659]"
    }, {
      "left" : "if (beanDesc.getType().isConcrete())",
      "right" : "if (beanDesc.getType().isConcrete())",
      "info" : "IfStatement[14723-14868]:IfStatement[14723-14868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14760-14868]:Block[14760-14868]"
    }, {
      "left" : "_addDeserializerConstructors(ctxt, beanDesc, vchecker, intr, creators, creatorDefs);",
      "right" : "_addDeserializerConstructors(ctxt, beanDesc, vchecker, intr, creators, creatorDefs);",
      "info" : "ExpressionStatement[14774-14858]:ExpressionStatement[14774-14858]"
    }, {
      "left" : "return creators.constructValueInstantiator(ctxt);",
      "right" : "return creators.constructValueInstantiator(ctxt);",
      "info" : "ReturnStatement[14877-14926]:ReturnStatement[14877-14926]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14938-14947]:Modifier[14938-14947]"
    }, {
      "left" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]>",
      "right" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]>",
      "info" : "ParameterizedType[14948-14997]:ParameterizedType[14948-14997]"
    }, {
      "left" : "_findCreatorsFromProperties",
      "right" : "_findCreatorsFromProperties",
      "info" : "SimpleName[14998-15025]:SimpleName[14998-15025]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[15026-15053]:SingleVariableDeclaration[15026-15053]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[15067-15091]:SingleVariableDeclaration[15067-15091]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[15100-15120]:SimpleType[15100-15120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15125-16428]:Block[15125-16428]"
    }, {
      "left" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> result = Collections.emptyMap();",
      "right" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> result = Collections.emptyMap();",
      "info" : "VariableDeclarationStatement[15135-15217]:VariableDeclarationStatement[15135-15217]"
    }, {
      "left" : "for (BeanPropertyDefinition propDef : beanDesc.findProperties())",
      "right" : "for (BeanPropertyDefinition propDef : beanDesc.findProperties())",
      "info" : "EnhancedForStatement[15226-16399]:EnhancedForStatement[15226-16399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15291-16399]:Block[15291-16399]"
    }, {
      "left" : "Iterator<AnnotatedParameter> it = propDef.getConstructorParameters();",
      "right" : "Iterator<AnnotatedParameter> it = propDef.getConstructorParameters();",
      "info" : "VariableDeclarationStatement[15305-15374]:VariableDeclarationStatement[15305-15374]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[15387-16389]:WhileStatement[15387-16389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15408-16389]:Block[15408-16389]"
    }, {
      "left" : "AnnotatedParameter param = it.next();",
      "right" : "AnnotatedParameter param = it.next();",
      "info" : "VariableDeclarationStatement[15426-15463]:VariableDeclarationStatement[15426-15463]"
    }, {
      "left" : "AnnotatedWithParams owner = param.getOwner();",
      "right" : "AnnotatedWithParams owner = param.getOwner();",
      "info" : "VariableDeclarationStatement[15480-15525]:VariableDeclarationStatement[15480-15525]"
    }, {
      "left" : "BeanPropertyDefinition[] defs = result.get(owner);",
      "right" : "BeanPropertyDefinition[] defs = result.get(owner);",
      "info" : "VariableDeclarationStatement[15542-15592]:VariableDeclarationStatement[15542-15592]"
    }, {
      "left" : "final int index = param.getIndex();",
      "right" : "final int index = param.getIndex();",
      "info" : "VariableDeclarationStatement[15609-15644]:VariableDeclarationStatement[15609-15644]"
    }, {
      "left" : "if (defs == null)",
      "right" : "if (defs == null)",
      "info" : "IfStatement[15678-16336]:IfStatement[15678-16336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15696-16067]:Block[15696-16067]"
    }, {
      "left" : "if (result.isEmpty())",
      "right" : "if (result.isEmpty())",
      "info" : "IfStatement[15718-15922]:IfStatement[15718-15922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15740-15922]:Block[15740-15922]"
    }, {
      "left" : "result = new LinkedHashMap<AnnotatedWithParams,BeanPropertyDefinition[]>();",
      "right" : "result = new LinkedHashMap<AnnotatedWithParams,BeanPropertyDefinition[]>();",
      "info" : "ExpressionStatement[15825-15900]:ExpressionStatement[15825-15900]"
    }, {
      "left" : "defs = new BeanPropertyDefinition[owner.getParameterCount()];",
      "right" : "defs = new BeanPropertyDefinition[owner.getParameterCount()];",
      "info" : "ExpressionStatement[15943-16004]:ExpressionStatement[15943-16004]"
    }, {
      "left" : "result.put(owner, defs);",
      "right" : "result.put(owner, defs);",
      "info" : "ExpressionStatement[16025-16049]:ExpressionStatement[16025-16049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16073-16336]:Block[16073-16336]"
    }, {
      "left" : "if (defs[index] != null)",
      "right" : "if (defs[index] != null)",
      "info" : "IfStatement[16095-16318]:IfStatement[16095-16318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16120-16318]:Block[16120-16318]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Conflict: parameter #%d of %s bound to more than one property; %s vs %s\",\nindex, owner, defs[index], propDef);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Conflict: parameter #%d of %s bound to more than one property; %s vs %s\",\nindex, owner, defs[index], propDef);",
      "info" : "ExpressionStatement[16146-16296]:ExpressionStatement[16146-16296]"
    }, {
      "left" : "defs[index] = propDef;",
      "right" : "defs[index] = propDef;",
      "info" : "ExpressionStatement[16353-16375]:ExpressionStatement[16353-16375]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[16408-16422]:ReturnStatement[16408-16422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16438-16444]:Modifier[16438-16444]"
    }, {
      "left" : "ValueInstantiator",
      "right" : "ValueInstantiator",
      "info" : "SimpleType[16445-16462]:SimpleType[16445-16462]"
    }, {
      "left" : "_valueInstantiatorInstance",
      "right" : "_valueInstantiatorInstance",
      "info" : "SimpleName[16463-16489]:SimpleName[16463-16489]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[16490-16518]:SingleVariableDeclaration[16490-16518]"
    }, {
      "left" : "Annotated annotated",
      "right" : "Annotated annotated",
      "info" : "SingleVariableDeclaration[16532-16551]:SingleVariableDeclaration[16532-16551]"
    }, {
      "left" : "Object instDef",
      "right" : "Object instDef",
      "info" : "SingleVariableDeclaration[16553-16567]:SingleVariableDeclaration[16553-16567]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[16584-16604]:SimpleType[16584-16604]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16609-17900]:Block[16609-17900]"
    }, {
      "left" : "if (instDef == null)",
      "right" : "if (instDef == null)",
      "info" : "IfStatement[16619-16676]:IfStatement[16619-16676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16640-16676]:Block[16640-16676]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16654-16666]:ReturnStatement[16654-16666]"
    }, {
      "left" : "ValueInstantiator inst;",
      "right" : "ValueInstantiator inst;",
      "info" : "VariableDeclarationStatement[16686-16709]:VariableDeclarationStatement[16686-16709]"
    }, {
      "left" : "if (instDef instanceof ValueInstantiator)",
      "right" : "if (instDef instanceof ValueInstantiator)",
      "info" : "IfStatement[16727-16828]:IfStatement[16727-16828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16769-16828]:Block[16769-16828]"
    }, {
      "left" : "return (ValueInstantiator) instDef;",
      "right" : "return (ValueInstantiator) instDef;",
      "info" : "ReturnStatement[16783-16818]:ReturnStatement[16783-16818]"
    }, {
      "left" : "if (!(instDef instanceof Class))",
      "right" : "if (!(instDef instanceof Class))",
      "info" : "IfStatement[16837-17137]:IfStatement[16837-17137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16870-17137]:Block[16870-17137]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned key deserializer definition of type \"\n                    +instDef.getClass().getName()\n                    +\"; expected type KeyDeserializer or Class<KeyDeserializer> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned key deserializer definition of type \"\n                    +instDef.getClass().getName()\n                    +\"; expected type KeyDeserializer or Class<KeyDeserializer> instead\");",
      "info" : "ThrowStatement[16884-17127]:ThrowStatement[16884-17127]"
    }, {
      "left" : "Class<?> instClass = (Class<?>)instDef;",
      "right" : "Class<?> instClass = (Class<?>)instDef;",
      "info" : "VariableDeclarationStatement[17146-17185]:VariableDeclarationStatement[17146-17185]"
    }, {
      "left" : "if (ClassUtil.isBogusClass(instClass))",
      "right" : "if (ClassUtil.isBogusClass(instClass))",
      "info" : "IfStatement[17194-17269]:IfStatement[17194-17269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17233-17269]:Block[17233-17269]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17247-17259]:ReturnStatement[17247-17259]"
    }, {
      "left" : "if (!ValueInstantiator.class.isAssignableFrom(instClass))",
      "right" : "if (!ValueInstantiator.class.isAssignableFrom(instClass))",
      "info" : "IfStatement[17278-17513]:IfStatement[17278-17513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17336-17513]:Block[17336-17513]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"+instClass.getName()\n                    +\"; expected Class<ValueInstantiator>\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"+instClass.getName()\n                    +\"; expected Class<ValueInstantiator>\");",
      "info" : "ThrowStatement[17350-17503]:ThrowStatement[17350-17503]"
    }, {
      "left" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[17522-17579]:VariableDeclarationStatement[17522-17579]"
    }, {
      "left" : "if (hi != null)",
      "right" : "if (hi != null)",
      "info" : "IfStatement[17588-17769]:IfStatement[17588-17769]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17604-17769]:Block[17604-17769]"
    }, {
      "left" : "inst = hi.valueInstantiatorInstance(config, annotated, instClass);",
      "right" : "inst = hi.valueInstantiatorInstance(config, annotated, instClass);",
      "info" : "ExpressionStatement[17618-17684]:ExpressionStatement[17618-17684]"
    }, {
      "left" : "if (inst != null)",
      "right" : "if (inst != null)",
      "info" : "IfStatement[17697-17759]:IfStatement[17697-17759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17715-17759]:Block[17715-17759]"
    }, {
      "left" : "return inst;",
      "right" : "return inst;",
      "info" : "ReturnStatement[17733-17745]:ReturnStatement[17733-17745]"
    }, {
      "left" : "return (ValueInstantiator) ClassUtil.createInstance(instClass,\n                config.canOverrideAccessModifiers());",
      "right" : "return (ValueInstantiator) ClassUtil.createInstance(instClass,\n                config.canOverrideAccessModifiers());",
      "info" : "ReturnStatement[17778-17894]:ReturnStatement[17778-17894]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18079-18088]:Modifier[18079-18088]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18089-18093]:PrimitiveType[18089-18093]"
    }, {
      "left" : "_addDeserializerConstructors",
      "right" : "_addDeserializerConstructors",
      "info" : "SimpleName[18094-18122]:SimpleName[18094-18122]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[18123-18150]:SingleVariableDeclaration[18123-18150]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[18164-18188]:SingleVariableDeclaration[18164-18188]"
    }, {
      "left" : "VisibilityChecker<?> vchecker",
      "right" : "VisibilityChecker<?> vchecker",
      "info" : "SingleVariableDeclaration[18190-18219]:SingleVariableDeclaration[18190-18219]"
    }, {
      "left" : "AnnotationIntrospector intr",
      "right" : "AnnotationIntrospector intr",
      "info" : "SingleVariableDeclaration[18230-18257]:SingleVariableDeclaration[18230-18257]"
    }, {
      "left" : "CreatorCollector creators",
      "right" : "CreatorCollector creators",
      "info" : "SingleVariableDeclaration[18259-18284]:SingleVariableDeclaration[18259-18284]"
    }, {
      "left" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams",
      "right" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams",
      "info" : "SingleVariableDeclaration[18295-18358]:SingleVariableDeclaration[18295-18358]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[18384-18404]:SimpleType[18384-18404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18409-27528]:Block[18409-27528]"
    }, {
      "left" : "final boolean isNonStaticInnerClass = beanDesc.isNonStaticInnerClass();",
      "right" : "final boolean isNonStaticInnerClass = beanDesc.isNonStaticInnerClass();",
      "info" : "VariableDeclarationStatement[18658-18729]:VariableDeclarationStatement[18658-18729]"
    }, {
      "left" : "if (isNonStaticInnerClass)",
      "right" : "if (isNonStaticInnerClass)",
      "info" : "IfStatement[18738-18883]:IfStatement[18738-18883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18765-18883]:Block[18765-18883]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[18866-18873]:ReturnStatement[18866-18873]"
    }, {
      "left" : "AnnotatedConstructor defaultCtor = beanDesc.findDefaultConstructor();",
      "right" : "AnnotatedConstructor defaultCtor = beanDesc.findDefaultConstructor();",
      "info" : "VariableDeclarationStatement[19101-19170]:VariableDeclarationStatement[19101-19170]"
    }, {
      "left" : "if (defaultCtor != null)",
      "right" : "if (defaultCtor != null)",
      "info" : "IfStatement[19179-19379]:IfStatement[19179-19379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19204-19379]:Block[19204-19379]"
    }, {
      "left" : "if (!creators.hasDefaultCreator() || _hasCreatorAnnotation(ctxt, defaultCtor))",
      "right" : "if (!creators.hasDefaultCreator() || _hasCreatorAnnotation(ctxt, defaultCtor))",
      "info" : "IfStatement[19218-19369]:IfStatement[19218-19369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19297-19369]:Block[19297-19369]"
    }, {
      "left" : "creators.setDefaultCreator(defaultCtor);",
      "right" : "creators.setDefaultCreator(defaultCtor);",
      "info" : "ExpressionStatement[19315-19355]:ExpressionStatement[19315-19355]"
    }, {
      "left" : "List<CreatorCandidate> nonAnnotated = new LinkedList<>();",
      "right" : "List<CreatorCandidate> nonAnnotated = new LinkedList<>();",
      "info" : "VariableDeclarationStatement[19463-19520]:VariableDeclarationStatement[19463-19520]"
    }, {
      "left" : "int explCount = 0;",
      "right" : "int explCount = 0;",
      "info" : "VariableDeclarationStatement[19529-19547]:VariableDeclarationStatement[19529-19547]"
    }, {
      "left" : "for (AnnotatedConstructor ctor : beanDesc.getConstructors())",
      "right" : "for (AnnotatedConstructor ctor : beanDesc.getConstructors())",
      "info" : "EnhancedForStatement[19556-20839]:EnhancedForStatement[19556-20839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19617-20839]:Block[19617-20839]"
    }, {
      "left" : "JsonCreator.Mode creatorMode = intr.findCreatorAnnotation(ctxt.getConfig(), ctor);",
      "right" : "JsonCreator.Mode creatorMode = intr.findCreatorAnnotation(ctxt.getConfig(), ctor);",
      "info" : "VariableDeclarationStatement[19631-19713]:VariableDeclarationStatement[19631-19713]"
    }, {
      "left" : "if (Mode.DISABLED == creatorMode)",
      "right" : "if (Mode.DISABLED == creatorMode)",
      "info" : "IfStatement[19726-19801]:IfStatement[19726-19801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19760-19801]:Block[19760-19801]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[19778-19787]:ContinueStatement[19778-19787]"
    }, {
      "left" : "if (creatorMode == null)",
      "right" : "if (creatorMode == null)",
      "info" : "IfStatement[19814-20149]:IfStatement[19814-20149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19839-20149]:Block[19839-20149]"
    }, {
      "left" : "if (vchecker.isCreatorVisible(ctor))",
      "right" : "if (vchecker.isCreatorVisible(ctor))",
      "info" : "IfStatement[19950-20109]:IfStatement[19950-20109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19987-20109]:Block[19987-20109]"
    }, {
      "left" : "nonAnnotated.add(CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));",
      "right" : "nonAnnotated.add(CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));",
      "info" : "ExpressionStatement[20009-20091]:ExpressionStatement[20009-20091]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[20126-20135]:ContinueStatement[20126-20135]"
    }, {
      "left" : "switch (creatorMode) {\n            case DELEGATING:\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, null));\n                break;\n            case PROPERTIES:\n                _addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));\n                break;\n            default:\n                _addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));\n                break;\n            }",
      "right" : "switch (creatorMode) {\n            case DELEGATING:\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, null));\n                break;\n            case PROPERTIES:\n                _addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));\n                break;\n            default:\n                _addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));\n                break;\n            }",
      "info" : "SwitchStatement[20162-20804]:SwitchStatement[20162-20804]"
    }, {
      "left" : "case DELEGATING:",
      "right" : "case DELEGATING:",
      "info" : "SwitchCase[20197-20213]:SwitchCase[20197-20213]"
    }, {
      "left" : "_addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, null));",
      "right" : "_addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, null));",
      "info" : "ExpressionStatement[20230-20356]:ExpressionStatement[20230-20356]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20373-20379]:BreakStatement[20373-20379]"
    }, {
      "left" : "case PROPERTIES:",
      "right" : "case PROPERTIES:",
      "info" : "SwitchCase[20392-20408]:SwitchCase[20392-20408]"
    }, {
      "left" : "_addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));",
      "right" : "_addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));",
      "info" : "ExpressionStatement[20425-20568]:ExpressionStatement[20425-20568]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20585-20591]:BreakStatement[20585-20591]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[20604-20612]:SwitchCase[20604-20612]"
    }, {
      "left" : "_addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));",
      "right" : "_addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, ctor, creatorParams.get(ctor)));",
      "info" : "ExpressionStatement[20629-20767]:ExpressionStatement[20629-20767]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[20784-20790]:BreakStatement[20784-20790]"
    }, {
      "left" : "++explCount;",
      "right" : "++explCount;",
      "info" : "ExpressionStatement[20817-20829]:ExpressionStatement[20817-20829]"
    }, {
      "left" : "if (explCount > 0)",
      "right" : "if (explCount > 0)",
      "info" : "IfStatement[20929-21045]:IfStatement[20929-21045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20948-21045]:Block[20948-21045]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[21028-21035]:ReturnStatement[21028-21035]"
    }, {
      "left" : "List<AnnotatedWithParams> implicitCtors = null;",
      "right" : "List<AnnotatedWithParams> implicitCtors = null;",
      "info" : "VariableDeclarationStatement[21054-21101]:VariableDeclarationStatement[21054-21101]"
    }, {
      "left" : "for (CreatorCandidate candidate : nonAnnotated)",
      "right" : "for (CreatorCandidate candidate : nonAnnotated)",
      "info" : "EnhancedForStatement[21110-27139]:EnhancedForStatement[21110-27139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21158-27139]:Block[21158-27139]"
    }, {
      "left" : "final int argCount = candidate.paramCount();",
      "right" : "final int argCount = candidate.paramCount();",
      "info" : "VariableDeclarationStatement[21172-21216]:VariableDeclarationStatement[21172-21216]"
    }, {
      "left" : "final AnnotatedWithParams ctor = candidate.creator();",
      "right" : "final AnnotatedWithParams ctor = candidate.creator();",
      "info" : "VariableDeclarationStatement[21229-21282]:VariableDeclarationStatement[21229-21282]"
    }, {
      "left" : "if (argCount == 1)",
      "right" : "if (argCount == 1)",
      "info" : "IfStatement[21378-22598]:IfStatement[21378-22598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21397-22598]:Block[21397-22598]"
    }, {
      "left" : "BeanPropertyDefinition propDef = candidate.propertyDef(0);",
      "right" : "BeanPropertyDefinition propDef = candidate.propertyDef(0);",
      "info" : "VariableDeclarationStatement[21415-21473]:VariableDeclarationStatement[21415-21473]"
    }, {
      "left" : "boolean useProps = _checkIfCreatorPropertyBased(intr, ctor, propDef);",
      "right" : "boolean useProps = _checkIfCreatorPropertyBased(intr, ctor, propDef);",
      "info" : "VariableDeclarationStatement[21490-21559]:VariableDeclarationStatement[21490-21559]"
    }, {
      "left" : "if (useProps)",
      "right" : "if (useProps)",
      "info" : "IfStatement[21577-22513]:IfStatement[21577-22513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21591-21996]:Block[21591-21996]"
    }, {
      "left" : "SettableBeanProperty[] properties = new SettableBeanProperty[1];",
      "right" : "SettableBeanProperty[] properties = new SettableBeanProperty[1];",
      "info" : "VariableDeclarationStatement[21613-21677]:VariableDeclarationStatement[21613-21677]"
    }, {
      "left" : "PropertyName name = candidate.paramName(0);",
      "right" : "PropertyName name = candidate.paramName(0);",
      "info" : "VariableDeclarationStatement[21698-21741]:VariableDeclarationStatement[21698-21741]"
    }, {
      "left" : "properties[0] = constructCreatorProperty(ctxt, beanDesc, name, 0,\n                            candidate.parameter(0), candidate.injection(0));",
      "right" : "properties[0] = constructCreatorProperty(ctxt, beanDesc, name, 0,\n                            candidate.parameter(0), candidate.injection(0));",
      "info" : "ExpressionStatement[21762-21904]:ExpressionStatement[21762-21904]"
    }, {
      "left" : "creators.addPropertyCreator(ctor, false, properties);",
      "right" : "creators.addPropertyCreator(ctor, false, properties);",
      "info" : "ExpressionStatement[21925-21978]:ExpressionStatement[21925-21978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22002-22513]:Block[22002-22513]"
    }, {
      "left" : "_handleSingleArgumentCreator(creators,\n                            ctor, false,\n                            vchecker.isCreatorVisible(ctor));",
      "right" : "_handleSingleArgumentCreator(creators,\n                            ctor, false,\n                            vchecker.isCreatorVisible(ctor));",
      "info" : "ExpressionStatement[22045-22186]:ExpressionStatement[22045-22186]"
    }, {
      "left" : "if (propDef != null)",
      "right" : "if (propDef != null)",
      "info" : "IfStatement[22373-22495]:IfStatement[22373-22495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22394-22495]:Block[22394-22495]"
    }, {
      "left" : "((POJOPropertyBuilder) propDef).removeConstructors();",
      "right" : "((POJOPropertyBuilder) propDef).removeConstructors();",
      "info" : "ExpressionStatement[22420-22473]:ExpressionStatement[22420-22473]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[22575-22584]:ContinueStatement[22575-22584]"
    }, {
      "left" : "int nonAnnotatedParamIndex = -1;",
      "right" : "int nonAnnotatedParamIndex = -1;",
      "info" : "VariableDeclarationStatement[22861-22893]:VariableDeclarationStatement[22861-22893]"
    }, {
      "left" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "right" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "info" : "VariableDeclarationStatement[22906-22977]:VariableDeclarationStatement[22906-22977]"
    }, {
      "left" : "int explicitNameCount = 0;",
      "right" : "int explicitNameCount = 0;",
      "info" : "VariableDeclarationStatement[22990-23016]:VariableDeclarationStatement[22990-23016]"
    }, {
      "left" : "int implicitWithCreatorCount = 0;",
      "right" : "int implicitWithCreatorCount = 0;",
      "info" : "VariableDeclarationStatement[23029-23062]:VariableDeclarationStatement[23029-23062]"
    }, {
      "left" : "int injectCount = 0;",
      "right" : "int injectCount = 0;",
      "info" : "VariableDeclarationStatement[23075-23095]:VariableDeclarationStatement[23075-23095]"
    }, {
      "left" : "for (int i = 0; i < argCount; ++i)",
      "right" : "for (int i = 0; i < argCount; ++i)",
      "info" : "ForStatement[23109-24944]:ForStatement[23109-24944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23144-24944]:Block[23144-24944]"
    }, {
      "left" : "final AnnotatedParameter param = ctor.getParameter(i);",
      "right" : "final AnnotatedParameter param = ctor.getParameter(i);",
      "info" : "VariableDeclarationStatement[23162-23216]:VariableDeclarationStatement[23162-23216]"
    }, {
      "left" : "BeanPropertyDefinition propDef = candidate.propertyDef(i);",
      "right" : "BeanPropertyDefinition propDef = candidate.propertyDef(i);",
      "info" : "VariableDeclarationStatement[23233-23291]:VariableDeclarationStatement[23233-23291]"
    }, {
      "left" : "JacksonInject.Value injectId = intr.findInjectableValue(param);",
      "right" : "JacksonInject.Value injectId = intr.findInjectableValue(param);",
      "info" : "VariableDeclarationStatement[23308-23371]:VariableDeclarationStatement[23308-23371]"
    }, {
      "left" : "final PropertyName name = (propDef == null) ? null : propDef.getFullName();",
      "right" : "final PropertyName name = (propDef == null) ? null : propDef.getFullName();",
      "info" : "VariableDeclarationStatement[23388-23463]:VariableDeclarationStatement[23388-23463]"
    }, {
      "left" : "if (propDef != null && propDef.isExplicitlyNamed())",
      "right" : "if (propDef != null && propDef.isExplicitlyNamed())",
      "info" : "IfStatement[23481-23727]:IfStatement[23481-23727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23533-23727]:Block[23533-23727]"
    }, {
      "left" : "++explicitNameCount;",
      "right" : "++explicitNameCount;",
      "info" : "ExpressionStatement[23555-23575]:ExpressionStatement[23555-23575]"
    }, {
      "left" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);",
      "right" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);",
      "info" : "ExpressionStatement[23596-23679]:ExpressionStatement[23596-23679]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[23700-23709]:ContinueStatement[23700-23709]"
    }, {
      "left" : "if (injectId != null)",
      "right" : "if (injectId != null)",
      "info" : "IfStatement[23744-23954]:IfStatement[23744-23954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23766-23954]:Block[23766-23954]"
    }, {
      "left" : "++injectCount;",
      "right" : "++injectCount;",
      "info" : "ExpressionStatement[23788-23802]:ExpressionStatement[23788-23802]"
    }, {
      "left" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);",
      "right" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);",
      "info" : "ExpressionStatement[23823-23906]:ExpressionStatement[23823-23906]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[23927-23936]:ContinueStatement[23927-23936]"
    }, {
      "left" : "NameTransformer unwrapper = intr.findUnwrappingNameTransformer(param);",
      "right" : "NameTransformer unwrapper = intr.findUnwrappingNameTransformer(param);",
      "info" : "VariableDeclarationStatement[23971-24041]:VariableDeclarationStatement[23971-24041]"
    }, {
      "left" : "if (unwrapper != null)",
      "right" : "if (unwrapper != null)",
      "info" : "IfStatement[24058-24417]:IfStatement[24058-24417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24081-24417]:Block[24081-24417]"
    }, {
      "left" : "_reportUnwrappedCreatorProperty(ctxt, beanDesc, param);",
      "right" : "_reportUnwrappedCreatorProperty(ctxt, beanDesc, param);",
      "info" : "ExpressionStatement[24103-24158]:ExpressionStatement[24103-24158]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[24390-24399]:ContinueStatement[24390-24399]"
    }, {
      "left" : "if (nonAnnotatedParamIndex < 0)",
      "right" : "if (nonAnnotatedParamIndex < 0)",
      "info" : "IfStatement[24831-24930]:IfStatement[24831-24930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24863-24930]:Block[24863-24930]"
    }, {
      "left" : "nonAnnotatedParamIndex = i;",
      "right" : "nonAnnotatedParamIndex = i;",
      "info" : "ExpressionStatement[24885-24912]:ExpressionStatement[24885-24912]"
    }, {
      "left" : "final int namedCount = explicitNameCount + implicitWithCreatorCount;",
      "right" : "final int namedCount = explicitNameCount + implicitWithCreatorCount;",
      "info" : "VariableDeclarationStatement[24958-25026]:VariableDeclarationStatement[24958-25026]"
    }, {
      "left" : "if ((explicitNameCount > 0) || (injectCount > 0))",
      "right" : "if ((explicitNameCount > 0) || (injectCount > 0))",
      "info" : "IfStatement[25106-26832]:IfStatement[25106-26832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25156-26832]:Block[25156-26832]"
    }, {
      "left" : "if ((namedCount + injectCount) == argCount)",
      "right" : "if ((namedCount + injectCount) == argCount)",
      "info" : "IfStatement[25226-25393]:IfStatement[25226-25393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25270-25393]:Block[25270-25393]"
    }, {
      "left" : "creators.addPropertyCreator(ctor, false, properties);",
      "right" : "creators.addPropertyCreator(ctor, false, properties);",
      "info" : "ExpressionStatement[25292-25345]:ExpressionStatement[25292-25345]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[25366-25375]:ContinueStatement[25366-25375]"
    }, {
      "left" : "if ((explicitNameCount == 0) && ((injectCount + 1) == argCount))",
      "right" : "if ((explicitNameCount == 0) && ((injectCount + 1) == argCount))",
      "info" : "IfStatement[25410-25689]:IfStatement[25410-25689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25475-25689]:Block[25475-25689]"
    }, {
      "left" : "creators.addDelegatingCreator(ctor, false, properties, 0);",
      "right" : "creators.addDelegatingCreator(ctor, false, properties, 0);",
      "info" : "ExpressionStatement[25583-25641]:ExpressionStatement[25583-25641]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[25662-25671]:ContinueStatement[25662-25671]"
    }, {
      "left" : "PropertyName impl = candidate.findImplicitParamName(nonAnnotatedParamIndex);",
      "right" : "PropertyName impl = candidate.findImplicitParamName(nonAnnotatedParamIndex);",
      "info" : "VariableDeclarationStatement[25912-25988]:VariableDeclarationStatement[25912-25988]"
    }, {
      "left" : "if (impl == null || impl.isEmpty())",
      "right" : "if (impl == null || impl.isEmpty())",
      "info" : "IfStatement[26005-26818]:IfStatement[26005-26818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26041-26818]:Block[26041-26818]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Argument #%d of constructor %s has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\",\nnonAnnotatedParamIndex, ctor);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Argument #%d of constructor %s has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\",\nnonAnnotatedParamIndex, ctor);",
      "info" : "ExpressionStatement[26592-26800]:ExpressionStatement[26592-26800]"
    }, {
      "left" : "if (!creators.hasDefaultCreator())",
      "right" : "if (!creators.hasDefaultCreator())",
      "info" : "IfStatement[26919-27129]:IfStatement[26919-27129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26954-27129]:Block[26954-27129]"
    }, {
      "left" : "if (implicitCtors == null)",
      "right" : "if (implicitCtors == null)",
      "info" : "IfStatement[26972-27074]:IfStatement[26972-27074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26999-27074]:Block[26999-27074]"
    }, {
      "left" : "implicitCtors = new LinkedList<>();",
      "right" : "implicitCtors = new LinkedList<>();",
      "info" : "ExpressionStatement[27021-27056]:ExpressionStatement[27021-27056]"
    }, {
      "left" : "implicitCtors.add(ctor);",
      "right" : "implicitCtors.add(ctor);",
      "info" : "ExpressionStatement[27091-27115]:ExpressionStatement[27091-27115]"
    }, {
      "left" : "if ((implicitCtors != null) && !creators.hasDelegatingCreator()\n                && !creators.hasPropertyBasedCreator())",
      "right" : "if ((implicitCtors != null) && !creators.hasDelegatingCreator()\n                && !creators.hasPropertyBasedCreator())",
      "info" : "IfStatement[27267-27522]:IfStatement[27267-27522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27387-27522]:Block[27387-27522]"
    }, {
      "left" : "_checkImplicitlyNamedConstructors(ctxt, beanDesc, vchecker, intr,\n                    creators, implicitCtors);",
      "right" : "_checkImplicitlyNamedConstructors(ctxt, beanDesc, vchecker, intr,\n                    creators, implicitCtors);",
      "info" : "ExpressionStatement[27401-27512]:ExpressionStatement[27401-27512]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[27671-27680]:Modifier[27671-27680]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27681-27685]:PrimitiveType[27681-27685]"
    }, {
      "left" : "_addExplicitDelegatingCreator",
      "right" : "_addExplicitDelegatingCreator",
      "info" : "SimpleName[27686-27715]:SimpleName[27686-27715]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[27716-27743]:SingleVariableDeclaration[27716-27743]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[27757-27781]:SingleVariableDeclaration[27757-27781]"
    }, {
      "left" : "CreatorCollector creators",
      "right" : "CreatorCollector creators",
      "info" : "SingleVariableDeclaration[27783-27808]:SingleVariableDeclaration[27783-27808]"
    }, {
      "left" : "CreatorCandidate candidate",
      "right" : "CreatorCandidate candidate",
      "info" : "SingleVariableDeclaration[27822-27848]:SingleVariableDeclaration[27822-27848]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[27865-27885]:SimpleType[27865-27885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27890-29936]:Block[27890-29936]"
    }, {
      "left" : "int ix = -1;",
      "right" : "int ix = -1;",
      "info" : "VariableDeclarationStatement[28050-28062]:VariableDeclarationStatement[28050-28062]"
    }, {
      "left" : "final int argCount = candidate.paramCount();",
      "right" : "final int argCount = candidate.paramCount();",
      "info" : "VariableDeclarationStatement[28071-28115]:VariableDeclarationStatement[28071-28115]"
    }, {
      "left" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "right" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "info" : "VariableDeclarationStatement[28124-28195]:VariableDeclarationStatement[28124-28195]"
    }, {
      "left" : "for (int i = 0; i < argCount; ++i)",
      "right" : "for (int i = 0; i < argCount; ++i)",
      "info" : "ForStatement[28204-28914]:ForStatement[28204-28914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28239-28914]:Block[28239-28914]"
    }, {
      "left" : "AnnotatedParameter param = candidate.parameter(i);",
      "right" : "AnnotatedParameter param = candidate.parameter(i);",
      "info" : "VariableDeclarationStatement[28253-28303]:VariableDeclarationStatement[28253-28303]"
    }, {
      "left" : "JacksonInject.Value injectId = candidate.injection(i);",
      "right" : "JacksonInject.Value injectId = candidate.injection(i);",
      "info" : "VariableDeclarationStatement[28316-28370]:VariableDeclarationStatement[28316-28370]"
    }, {
      "left" : "if (injectId != null)",
      "right" : "if (injectId != null)",
      "info" : "IfStatement[28383-28546]:IfStatement[28383-28546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28405-28546]:Block[28405-28546]"
    }, {
      "left" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, null, i, param, injectId);",
      "right" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, null, i, param, injectId);",
      "info" : "ExpressionStatement[28423-28506]:ExpressionStatement[28423-28506]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[28523-28532]:ContinueStatement[28523-28532]"
    }, {
      "left" : "if (ix < 0)",
      "right" : "if (ix < 0)",
      "info" : "IfStatement[28559-28636]:IfStatement[28559-28636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28571-28636]:Block[28571-28636]"
    }, {
      "left" : "ix = i;",
      "right" : "ix = i;",
      "info" : "ExpressionStatement[28589-28596]:ExpressionStatement[28589-28596]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[28613-28622]:ContinueStatement[28613-28622]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"More than one argument (#%d and #%d) left as delegating for Creator %s: only one allowed\",\n                    ix, i, candidate);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"More than one argument (#%d and #%d) left as delegating for Creator %s: only one allowed\",\n                    ix, i, candidate);",
      "info" : "ExpressionStatement[28715-28904]:ExpressionStatement[28715-28904]"
    }, {
      "left" : "if (ix < 0)",
      "right" : "if (ix < 0)",
      "info" : "IfStatement[28993-29170]:IfStatement[28993-29170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29005-29170]:Block[29005-29170]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"No argument left as delegating for Creator %s: exactly one required\", candidate);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n                    \"No argument left as delegating for Creator %s: exactly one required\", candidate);",
      "info" : "ExpressionStatement[29019-29160]:ExpressionStatement[29019-29160]"
    }, {
      "left" : "if (argCount == 1)",
      "right" : "if (argCount == 1)",
      "info" : "IfStatement[29370-29848]:IfStatement[29370-29848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29389-29848]:Block[29389-29848]"
    }, {
      "left" : "_handleSingleArgumentCreator(creators, candidate.creator(), true, true);",
      "right" : "_handleSingleArgumentCreator(creators, candidate.creator(), true, true);",
      "info" : "ExpressionStatement[29403-29475]:ExpressionStatement[29403-29475]"
    }, {
      "left" : "BeanPropertyDefinition paramDef = candidate.propertyDef(0);",
      "right" : "BeanPropertyDefinition paramDef = candidate.propertyDef(0);",
      "info" : "VariableDeclarationStatement[29638-29697]:VariableDeclarationStatement[29638-29697]"
    }, {
      "left" : "if (paramDef != null)",
      "right" : "if (paramDef != null)",
      "info" : "IfStatement[29710-29818]:IfStatement[29710-29818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29732-29818]:Block[29732-29818]"
    }, {
      "left" : "((POJOPropertyBuilder) paramDef).removeConstructors();",
      "right" : "((POJOPropertyBuilder) paramDef).removeConstructors();",
      "info" : "ExpressionStatement[29750-29804]:ExpressionStatement[29750-29804]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[29831-29838]:ReturnStatement[29831-29838]"
    }, {
      "left" : "creators.addDelegatingCreator(candidate.creator(), true, properties, ix);",
      "right" : "creators.addDelegatingCreator(candidate.creator(), true, properties, ix);",
      "info" : "ExpressionStatement[29857-29930]:ExpressionStatement[29857-29930]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30085-30094]:Modifier[30085-30094]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30095-30099]:PrimitiveType[30095-30099]"
    }, {
      "left" : "_addExplicitPropertyCreator",
      "right" : "_addExplicitPropertyCreator",
      "info" : "SimpleName[30100-30127]:SimpleName[30100-30127]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[30128-30155]:SingleVariableDeclaration[30128-30155]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[30169-30193]:SingleVariableDeclaration[30169-30193]"
    }, {
      "left" : "CreatorCollector creators",
      "right" : "CreatorCollector creators",
      "info" : "SingleVariableDeclaration[30195-30220]:SingleVariableDeclaration[30195-30220]"
    }, {
      "left" : "CreatorCandidate candidate",
      "right" : "CreatorCandidate candidate",
      "info" : "SingleVariableDeclaration[30234-30260]:SingleVariableDeclaration[30234-30260]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[30277-30297]:SimpleType[30277-30297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30302-31905]:Block[30302-31905]"
    }, {
      "left" : "final int paramCount = candidate.paramCount();",
      "right" : "final int paramCount = candidate.paramCount();",
      "info" : "VariableDeclarationStatement[30312-30358]:VariableDeclarationStatement[30312-30358]"
    }, {
      "left" : "SettableBeanProperty[] properties = new SettableBeanProperty[paramCount];",
      "right" : "SettableBeanProperty[] properties = new SettableBeanProperty[paramCount];",
      "info" : "VariableDeclarationStatement[30367-30440]:VariableDeclarationStatement[30367-30440]"
    }, {
      "left" : "for (int i = 0; i < paramCount; ++i)",
      "right" : "for (int i = 0; i < paramCount; ++i)",
      "info" : "ForStatement[30450-31823]:ForStatement[30450-31823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30487-31823]:Block[30487-31823]"
    }, {
      "left" : "JacksonInject.Value injectId = candidate.injection(i);",
      "right" : "JacksonInject.Value injectId = candidate.injection(i);",
      "info" : "VariableDeclarationStatement[30501-30555]:VariableDeclarationStatement[30501-30555]"
    }, {
      "left" : "AnnotatedParameter param = candidate.parameter(i);",
      "right" : "AnnotatedParameter param = candidate.parameter(i);",
      "info" : "VariableDeclarationStatement[30568-30618]:VariableDeclarationStatement[30568-30618]"
    }, {
      "left" : "PropertyName name = candidate.paramName(i);",
      "right" : "PropertyName name = candidate.paramName(i);",
      "info" : "VariableDeclarationStatement[30631-30674]:VariableDeclarationStatement[30631-30674]"
    }, {
      "left" : "if (name == null)",
      "right" : "if (name == null)",
      "info" : "IfStatement[30687-31717]:IfStatement[30687-31717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30705-31717]:Block[30705-31717]"
    }, {
      "left" : "NameTransformer unwrapper = ctxt.getAnnotationIntrospector().findUnwrappingNameTransformer(param);",
      "right" : "NameTransformer unwrapper = ctxt.getAnnotationIntrospector().findUnwrappingNameTransformer(param);",
      "info" : "VariableDeclarationStatement[30887-30985]:VariableDeclarationStatement[30887-30985]"
    }, {
      "left" : "if (unwrapper != null)",
      "right" : "if (unwrapper != null)",
      "info" : "IfStatement[31002-31331]:IfStatement[31002-31331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31025-31331]:Block[31025-31331]"
    }, {
      "left" : "_reportUnwrappedCreatorProperty(ctxt, beanDesc, param);",
      "right" : "_reportUnwrappedCreatorProperty(ctxt, beanDesc, param);",
      "info" : "ExpressionStatement[31047-31102]:ExpressionStatement[31047-31102]"
    }, {
      "left" : "name = candidate.findImplicitParamName(i);",
      "right" : "name = candidate.findImplicitParamName(i);",
      "info" : "ExpressionStatement[31348-31390]:ExpressionStatement[31348-31390]"
    }, {
      "left" : "if ((name == null) && (injectId == null))",
      "right" : "if ((name == null) && (injectId == null))",
      "info" : "IfStatement[31485-31703]:IfStatement[31485-31703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31527-31703]:Block[31527-31703]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Argument #%d has no property name, is not Injectable: can not use as Creator %s\", i, candidate);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Argument #%d has no property name, is not Injectable: can not use as Creator %s\", i, candidate);",
      "info" : "ExpressionStatement[31549-31685]:ExpressionStatement[31549-31685]"
    }, {
      "left" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);",
      "right" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectId);",
      "info" : "ExpressionStatement[31730-31813]:ExpressionStatement[31730-31813]"
    }, {
      "left" : "creators.addPropertyCreator(candidate.creator(), true, properties);",
      "right" : "creators.addPropertyCreator(candidate.creator(), true, properties);",
      "info" : "ExpressionStatement[31832-31899]:ExpressionStatement[31832-31899]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32048-32057]:Modifier[32048-32057]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32058-32062]:PrimitiveType[32058-32062]"
    }, {
      "left" : "_addExplicitAnyCreator",
      "right" : "_addExplicitAnyCreator",
      "info" : "SimpleName[32063-32085]:SimpleName[32063-32085]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[32086-32113]:SingleVariableDeclaration[32086-32113]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[32127-32151]:SingleVariableDeclaration[32127-32151]"
    }, {
      "left" : "CreatorCollector creators",
      "right" : "CreatorCollector creators",
      "info" : "SingleVariableDeclaration[32153-32178]:SingleVariableDeclaration[32153-32178]"
    }, {
      "left" : "CreatorCandidate candidate",
      "right" : "CreatorCandidate candidate",
      "info" : "SingleVariableDeclaration[32192-32218]:SingleVariableDeclaration[32192-32218]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[32235-32255]:SimpleType[32235-32255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32260-34624]:Block[32260-34624]"
    }, {
      "left" : "if (1 != candidate.paramCount())",
      "right" : "if (1 != candidate.paramCount())",
      "info" : "IfStatement[32361-33012]:IfStatement[32361-33012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32394-33012]:Block[32394-33012]"
    }, {
      "left" : "int oneNotInjected = candidate.findOnlyParamWithoutInjection();",
      "right" : "int oneNotInjected = candidate.findOnlyParamWithoutInjection();",
      "info" : "VariableDeclarationStatement[32530-32593]:VariableDeclarationStatement[32530-32593]"
    }, {
      "left" : "if (oneNotInjected >= 0)",
      "right" : "if (oneNotInjected >= 0)",
      "info" : "IfStatement[32606-32904]:IfStatement[32606-32904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32631-32904]:Block[32631-32904]"
    }, {
      "left" : "if (candidate.paramName(oneNotInjected) == null)",
      "right" : "if (candidate.paramName(oneNotInjected) == null)",
      "info" : "IfStatement[32706-32890]:IfStatement[32706-32890]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32755-32890]:Block[32755-32890]"
    }, {
      "left" : "_addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);",
      "right" : "_addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);",
      "info" : "ExpressionStatement[32777-32844]:ExpressionStatement[32777-32844]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[32865-32872]:ReturnStatement[32865-32872]"
    }, {
      "left" : "_addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);",
      "right" : "_addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);",
      "info" : "ExpressionStatement[32917-32982]:ExpressionStatement[32917-32982]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[32995-33002]:ReturnStatement[32995-33002]"
    }, {
      "left" : "AnnotatedParameter param = candidate.parameter(0);",
      "right" : "AnnotatedParameter param = candidate.parameter(0);",
      "info" : "VariableDeclarationStatement[33021-33071]:VariableDeclarationStatement[33021-33071]"
    }, {
      "left" : "JacksonInject.Value injectId = candidate.injection(0);",
      "right" : "JacksonInject.Value injectId = candidate.injection(0);",
      "info" : "VariableDeclarationStatement[33080-33134]:VariableDeclarationStatement[33080-33134]"
    }, {
      "left" : "PropertyName paramName = candidate.explicitParamName(0);",
      "right" : "PropertyName paramName = candidate.explicitParamName(0);",
      "info" : "VariableDeclarationStatement[33143-33199]:VariableDeclarationStatement[33143-33199]"
    }, {
      "left" : "BeanPropertyDefinition paramDef = candidate.propertyDef(0);",
      "right" : "BeanPropertyDefinition paramDef = candidate.propertyDef(0);",
      "info" : "VariableDeclarationStatement[33208-33267]:VariableDeclarationStatement[33208-33267]"
    }, {
      "left" : "boolean useProps = (paramName != null) || (injectId != null);",
      "right" : "boolean useProps = (paramName != null) || (injectId != null);",
      "info" : "VariableDeclarationStatement[33354-33415]:VariableDeclarationStatement[33354-33415]"
    }, {
      "left" : "if (!useProps && (paramDef != null))",
      "right" : "if (!useProps && (paramDef != null))",
      "info" : "IfStatement[33424-33967]:IfStatement[33424-33967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33461-33967]:Block[33461-33967]"
    }, {
      "left" : "paramName = candidate.paramName(0);",
      "right" : "paramName = candidate.paramName(0);",
      "info" : "ExpressionStatement[33849-33884]:ExpressionStatement[33849-33884]"
    }, {
      "left" : "useProps = (paramName != null) && paramDef.couldSerialize();",
      "right" : "useProps = (paramName != null) && paramDef.couldSerialize();",
      "info" : "ExpressionStatement[33897-33957]:ExpressionStatement[33897-33957]"
    }, {
      "left" : "if (useProps)",
      "right" : "if (useProps)",
      "info" : "IfStatement[33976-34285]:IfStatement[33976-34285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33990-34285]:Block[33990-34285]"
    }, {
      "left" : "SettableBeanProperty[] properties = new SettableBeanProperty[] {\n                    constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)\n            };",
      "right" : "SettableBeanProperty[] properties = new SettableBeanProperty[] {\n                    constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)\n            };",
      "info" : "VariableDeclarationStatement[34004-34175]:VariableDeclarationStatement[34004-34175]"
    }, {
      "left" : "creators.addPropertyCreator(candidate.creator(), true, properties);",
      "right" : "creators.addPropertyCreator(candidate.creator(), true, properties);",
      "info" : "ExpressionStatement[34188-34255]:ExpressionStatement[34188-34255]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[34268-34275]:ReturnStatement[34268-34275]"
    }, {
      "left" : "_handleSingleArgumentCreator(creators, candidate.creator(), true, true);",
      "right" : "_handleSingleArgumentCreator(creators, candidate.creator(), true, true);",
      "info" : "ExpressionStatement[34294-34366]:ExpressionStatement[34294-34366]"
    }, {
      "left" : "if (paramDef != null)",
      "right" : "if (paramDef != null)",
      "info" : "IfStatement[34518-34618]:IfStatement[34518-34618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34540-34618]:Block[34540-34618]"
    }, {
      "left" : "((POJOPropertyBuilder) paramDef).removeConstructors();",
      "right" : "((POJOPropertyBuilder) paramDef).removeConstructors();",
      "info" : "ExpressionStatement[34554-34608]:ExpressionStatement[34554-34608]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34630-34637]:Modifier[34630-34637]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[34638-34645]:PrimitiveType[34638-34645]"
    }, {
      "left" : "_checkIfCreatorPropertyBased",
      "right" : "_checkIfCreatorPropertyBased",
      "info" : "SimpleName[34646-34674]:SimpleName[34646-34674]"
    }, {
      "left" : "AnnotationIntrospector intr",
      "right" : "AnnotationIntrospector intr",
      "info" : "SingleVariableDeclaration[34675-34702]:SingleVariableDeclaration[34675-34702]"
    }, {
      "left" : "AnnotatedWithParams creator",
      "right" : "AnnotatedWithParams creator",
      "info" : "SingleVariableDeclaration[34716-34743]:SingleVariableDeclaration[34716-34743]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[34745-34775]:SingleVariableDeclaration[34745-34775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34781-35519]:Block[34781-35519]"
    }, {
      "left" : "if (((propDef != null) && propDef.isExplicitlyNamed())\n                || (intr.findInjectableValue(creator.getParameter(0)) != null))",
      "right" : "if (((propDef != null) && propDef.isExplicitlyNamed())\n                || (intr.findInjectableValue(creator.getParameter(0)) != null))",
      "info" : "IfStatement[34849-35020]:IfStatement[34849-35020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34984-35020]:Block[34984-35020]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[34998-35010]:ReturnStatement[34998-35010]"
    }, {
      "left" : "if (propDef != null)",
      "right" : "if (propDef != null)",
      "info" : "IfStatement[35029-35427]:IfStatement[35029-35427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35050-35427]:Block[35050-35427]"
    }, {
      "left" : "String implName = propDef.getName();",
      "right" : "String implName = propDef.getName();",
      "info" : "VariableDeclarationStatement[35209-35245]:VariableDeclarationStatement[35209-35245]"
    }, {
      "left" : "if (implName != null && !implName.isEmpty())",
      "right" : "if (implName != null && !implName.isEmpty())",
      "info" : "IfStatement[35258-35417]:IfStatement[35258-35417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35303-35417]:Block[35303-35417]"
    }, {
      "left" : "if (propDef.couldSerialize())",
      "right" : "if (propDef.couldSerialize())",
      "info" : "IfStatement[35321-35403]:IfStatement[35321-35403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35351-35403]:Block[35351-35403]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35373-35385]:ReturnStatement[35373-35385]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35500-35513]:ReturnStatement[35500-35513]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35525-35532]:Modifier[35525-35532]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35533-35537]:PrimitiveType[35533-35537]"
    }, {
      "left" : "_checkImplicitlyNamedConstructors",
      "right" : "_checkImplicitlyNamedConstructors",
      "info" : "SimpleName[35538-35571]:SimpleName[35538-35571]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[35572-35599]:SingleVariableDeclaration[35572-35599]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[35613-35637]:SingleVariableDeclaration[35613-35637]"
    }, {
      "left" : "VisibilityChecker<?> vchecker",
      "right" : "VisibilityChecker<?> vchecker",
      "info" : "SingleVariableDeclaration[35639-35668]:SingleVariableDeclaration[35639-35668]"
    }, {
      "left" : "AnnotationIntrospector intr",
      "right" : "AnnotationIntrospector intr",
      "info" : "SingleVariableDeclaration[35682-35709]:SingleVariableDeclaration[35682-35709]"
    }, {
      "left" : "CreatorCollector creators",
      "right" : "CreatorCollector creators",
      "info" : "SingleVariableDeclaration[35711-35736]:SingleVariableDeclaration[35711-35736]"
    }, {
      "left" : "List<AnnotatedWithParams> implicitCtors",
      "right" : "List<AnnotatedWithParams> implicitCtors",
      "info" : "SingleVariableDeclaration[35750-35789]:SingleVariableDeclaration[35750-35789]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[35798-35818]:SimpleType[35798-35818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35823-38070]:Block[35823-38070]"
    }, {
      "left" : "AnnotatedWithParams found = null;",
      "right" : "AnnotatedWithParams found = null;",
      "info" : "VariableDeclarationStatement[35833-35866]:VariableDeclarationStatement[35833-35866]"
    }, {
      "left" : "SettableBeanProperty[] foundProps = null;",
      "right" : "SettableBeanProperty[] foundProps = null;",
      "info" : "VariableDeclarationStatement[35875-35916]:VariableDeclarationStatement[35875-35916]"
    }, {
      "left" : "main_loop:\n        for (AnnotatedWithParams ctor : implicitCtors) {\n            if (!vchecker.isCreatorVisible(ctor)) {\n                continue;\n            }\n            // as per earlier notes, only end up here if no properties associated with creator\n            final int argCount = ctor.getParameterCount();\n            SettableBeanProperty[] properties = new SettableBeanProperty[argCount];\n            for (int i = 0; i < argCount; ++i) {\n                final AnnotatedParameter param = ctor.getParameter(i);\n                final PropertyName name = _findParamName(param, intr);\n\n                // must have name (implicit fine)\n                if (name == null || name.isEmpty()) {\n                    continue main_loop;\n                }\n                properties[i] = constructCreatorProperty(ctxt, beanDesc, name, param.getIndex(),\n                        param, /*injectId*/ null);\n            }\n            if (found != null) { // only one allowed; but multiple not an error\n                found = null;\n                break;\n            }\n            found = ctor;\n            foundProps = properties;\n        }",
      "right" : "main_loop:\n        for (AnnotatedWithParams ctor : implicitCtors) {\n            if (!vchecker.isCreatorVisible(ctor)) {\n                continue;\n            }\n            // as per earlier notes, only end up here if no properties associated with creator\n            final int argCount = ctor.getParameterCount();\n            SettableBeanProperty[] properties = new SettableBeanProperty[argCount];\n            for (int i = 0; i < argCount; ++i) {\n                final AnnotatedParameter param = ctor.getParameter(i);\n                final PropertyName name = _findParamName(param, intr);\n\n                // must have name (implicit fine)\n                if (name == null || name.isEmpty()) {\n                    continue main_loop;\n                }\n                properties[i] = constructCreatorProperty(ctxt, beanDesc, name, param.getIndex(),\n                        param, /*injectId*/ null);\n            }\n            if (found != null) { // only one allowed; but multiple not an error\n                found = null;\n                break;\n            }\n            found = ctor;\n            foundProps = properties;\n        }",
      "info" : "LabeledStatement[36199-37332]:LabeledStatement[36199-37332]"
    }, {
      "left" : "for (AnnotatedWithParams ctor : implicitCtors)",
      "right" : "for (AnnotatedWithParams ctor : implicitCtors)",
      "info" : "EnhancedForStatement[36218-37332]:EnhancedForStatement[36218-37332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36265-37332]:Block[36265-37332]"
    }, {
      "left" : "if (!vchecker.isCreatorVisible(ctor))",
      "right" : "if (!vchecker.isCreatorVisible(ctor))",
      "info" : "IfStatement[36279-36358]:IfStatement[36279-36358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36317-36358]:Block[36317-36358]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[36335-36344]:ContinueStatement[36335-36344]"
    }, {
      "left" : "final int argCount = ctor.getParameterCount();",
      "right" : "final int argCount = ctor.getParameterCount();",
      "info" : "VariableDeclarationStatement[36466-36512]:VariableDeclarationStatement[36466-36512]"
    }, {
      "left" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "right" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "info" : "VariableDeclarationStatement[36525-36596]:VariableDeclarationStatement[36525-36596]"
    }, {
      "left" : "for (int i = 0; i < argCount; ++i)",
      "right" : "for (int i = 0; i < argCount; ++i)",
      "info" : "ForStatement[36609-37112]:ForStatement[36609-37112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36644-37112]:Block[36644-37112]"
    }, {
      "left" : "final AnnotatedParameter param = ctor.getParameter(i);",
      "right" : "final AnnotatedParameter param = ctor.getParameter(i);",
      "info" : "VariableDeclarationStatement[36662-36716]:VariableDeclarationStatement[36662-36716]"
    }, {
      "left" : "final PropertyName name = _findParamName(param, intr);",
      "right" : "final PropertyName name = _findParamName(param, intr);",
      "info" : "VariableDeclarationStatement[36733-36787]:VariableDeclarationStatement[36733-36787]"
    }, {
      "left" : "if (name == null || name.isEmpty())",
      "right" : "if (name == null || name.isEmpty())",
      "info" : "IfStatement[36855-36950]:IfStatement[36855-36950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36891-36950]:Block[36891-36950]"
    }, {
      "left" : "continue main_loop;",
      "right" : "continue main_loop;",
      "info" : "ContinueStatement[36913-36932]:ContinueStatement[36913-36932]"
    }, {
      "left" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, param.getIndex(),\n                        param, /*injectId*/ null);",
      "right" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, param.getIndex(),\n                        param, /*injectId*/ null);",
      "info" : "ExpressionStatement[36967-37098]:ExpressionStatement[36967-37098]"
    }, {
      "left" : "if (found != null)",
      "right" : "if (found != null)",
      "info" : "IfStatement[37125-37259]:IfStatement[37125-37259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37144-37259]:Block[37144-37259]"
    }, {
      "left" : "found = null;",
      "right" : "found = null;",
      "info" : "ExpressionStatement[37209-37222]:ExpressionStatement[37209-37222]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[37239-37245]:BreakStatement[37239-37245]"
    }, {
      "left" : "found = ctor;",
      "right" : "found = ctor;",
      "info" : "ExpressionStatement[37272-37285]:ExpressionStatement[37272-37285]"
    }, {
      "left" : "foundProps = properties;",
      "right" : "foundProps = properties;",
      "info" : "ExpressionStatement[37298-37322]:ExpressionStatement[37298-37322]"
    }, {
      "left" : "if (found != null)",
      "right" : "if (found != null)",
      "info" : "IfStatement[37393-38064]:IfStatement[37393-38064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37412-38064]:Block[37412-38064]"
    }, {
      "left" : "creators.addPropertyCreator(found, /*isCreator*/ false, foundProps);",
      "right" : "creators.addPropertyCreator(found, /*isCreator*/ false, foundProps);",
      "info" : "ExpressionStatement[37426-37494]:ExpressionStatement[37426-37494]"
    }, {
      "left" : "BasicBeanDescription bbd = (BasicBeanDescription) beanDesc;",
      "right" : "BasicBeanDescription bbd = (BasicBeanDescription) beanDesc;",
      "info" : "VariableDeclarationStatement[37507-37566]:VariableDeclarationStatement[37507-37566]"
    }, {
      "left" : "for (SettableBeanProperty prop : foundProps)",
      "right" : "for (SettableBeanProperty prop : foundProps)",
      "info" : "EnhancedForStatement[37672-38054]:EnhancedForStatement[37672-38054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37717-38054]:Block[37717-38054]"
    }, {
      "left" : "PropertyName pn = prop.getFullName();",
      "right" : "PropertyName pn = prop.getFullName();",
      "info" : "VariableDeclarationStatement[37735-37772]:VariableDeclarationStatement[37735-37772]"
    }, {
      "left" : "if (!bbd.hasProperty(pn))",
      "right" : "if (!bbd.hasProperty(pn))",
      "info" : "IfStatement[37789-38040]:IfStatement[37789-38040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37815-38040]:Block[37815-38040]"
    }, {
      "left" : "BeanPropertyDefinition newDef = SimpleBeanPropertyDefinition.construct(\n                            ctxt.getConfig(), prop.getMember(), pn);",
      "right" : "BeanPropertyDefinition newDef = SimpleBeanPropertyDefinition.construct(\n                            ctxt.getConfig(), prop.getMember(), pn);",
      "info" : "VariableDeclarationStatement[37837-37977]:VariableDeclarationStatement[37837-37977]"
    }, {
      "left" : "bbd.addProperty(newDef);",
      "right" : "bbd.addProperty(newDef);",
      "info" : "ExpressionStatement[37998-38022]:ExpressionStatement[37998-38022]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[38076-38085]:Modifier[38076-38085]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38086-38090]:PrimitiveType[38086-38090]"
    }, {
      "left" : "_addDeserializerFactoryMethods",
      "right" : "_addDeserializerFactoryMethods",
      "info" : "SimpleName[38091-38121]:SimpleName[38091-38121]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[38131-38158]:SingleVariableDeclaration[38131-38158]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[38160-38184]:SingleVariableDeclaration[38160-38184]"
    }, {
      "left" : "VisibilityChecker<?> vchecker",
      "right" : "VisibilityChecker<?> vchecker",
      "info" : "SingleVariableDeclaration[38186-38215]:SingleVariableDeclaration[38186-38215]"
    }, {
      "left" : "AnnotationIntrospector intr",
      "right" : "AnnotationIntrospector intr",
      "info" : "SingleVariableDeclaration[38226-38253]:SingleVariableDeclaration[38226-38253]"
    }, {
      "left" : "CreatorCollector creators",
      "right" : "CreatorCollector creators",
      "info" : "SingleVariableDeclaration[38255-38280]:SingleVariableDeclaration[38255-38280]"
    }, {
      "left" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams",
      "right" : "Map<AnnotatedWithParams,BeanPropertyDefinition[]> creatorParams",
      "info" : "SingleVariableDeclaration[38291-38354]:SingleVariableDeclaration[38291-38354]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[38371-38391]:SimpleType[38371-38391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38396-45502]:Block[38396-45502]"
    }, {
      "left" : "List<CreatorCandidate> nonAnnotated = new LinkedList<>();",
      "right" : "List<CreatorCandidate> nonAnnotated = new LinkedList<>();",
      "info" : "VariableDeclarationStatement[38406-38463]:VariableDeclarationStatement[38406-38463]"
    }, {
      "left" : "int explCount = 0;",
      "right" : "int explCount = 0;",
      "info" : "VariableDeclarationStatement[38472-38490]:VariableDeclarationStatement[38472-38490]"
    }, {
      "left" : "for (AnnotatedMethod factory : beanDesc.getFactoryMethods())",
      "right" : "for (AnnotatedMethod factory : beanDesc.getFactoryMethods())",
      "info" : "EnhancedForStatement[38575-40160]:EnhancedForStatement[38575-40160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38636-40160]:Block[38636-40160]"
    }, {
      "left" : "JsonCreator.Mode creatorMode = intr.findCreatorAnnotation(ctxt.getConfig(), factory);",
      "right" : "JsonCreator.Mode creatorMode = intr.findCreatorAnnotation(ctxt.getConfig(), factory);",
      "info" : "VariableDeclarationStatement[38650-38735]:VariableDeclarationStatement[38650-38735]"
    }, {
      "left" : "final int argCount = factory.getParameterCount();",
      "right" : "final int argCount = factory.getParameterCount();",
      "info" : "VariableDeclarationStatement[38748-38797]:VariableDeclarationStatement[38748-38797]"
    }, {
      "left" : "if (creatorMode == null)",
      "right" : "if (creatorMode == null)",
      "info" : "IfStatement[38810-39128]:IfStatement[38810-39128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38835-39128]:Block[38835-39128]"
    }, {
      "left" : "if ((argCount == 1) && vchecker.isCreatorVisible(factory))",
      "right" : "if ((argCount == 1) && vchecker.isCreatorVisible(factory))",
      "info" : "IfStatement[38923-39088]:IfStatement[38923-39088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38982-39088]:Block[38982-39088]"
    }, {
      "left" : "nonAnnotated.add(CreatorCandidate.construct(intr, factory, null));",
      "right" : "nonAnnotated.add(CreatorCandidate.construct(intr, factory, null));",
      "info" : "ExpressionStatement[39004-39070]:ExpressionStatement[39004-39070]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[39105-39114]:ContinueStatement[39105-39114]"
    }, {
      "left" : "if (creatorMode == Mode.DISABLED)",
      "right" : "if (creatorMode == Mode.DISABLED)",
      "info" : "IfStatement[39141-39216]:IfStatement[39141-39216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39175-39216]:Block[39175-39216]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[39193-39202]:ContinueStatement[39193-39202]"
    }, {
      "left" : "if (argCount == 0)",
      "right" : "if (argCount == 0)",
      "info" : "IfStatement[39315-39428]:IfStatement[39315-39428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39334-39428]:Block[39334-39428]"
    }, {
      "left" : "creators.setDefaultCreator(factory);",
      "right" : "creators.setDefaultCreator(factory);",
      "info" : "ExpressionStatement[39352-39388]:ExpressionStatement[39352-39388]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[39405-39414]:ContinueStatement[39405-39414]"
    }, {
      "left" : "switch (creatorMode) {\n            case DELEGATING:\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, null));\n                break;\n            case PROPERTIES:\n                _addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));\n                break;\n            case DEFAULT:\n            default:\n                _addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));\n                break;\n            }",
      "right" : "switch (creatorMode) {\n            case DELEGATING:\n                _addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, null));\n                break;\n            case PROPERTIES:\n                _addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));\n                break;\n            case DEFAULT:\n            default:\n                _addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));\n                break;\n            }",
      "info" : "SwitchStatement[39442-40125]:SwitchStatement[39442-40125]"
    }, {
      "left" : "case DELEGATING:",
      "right" : "case DELEGATING:",
      "info" : "SwitchCase[39477-39493]:SwitchCase[39477-39493]"
    }, {
      "left" : "_addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, null));",
      "right" : "_addExplicitDelegatingCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, null));",
      "info" : "ExpressionStatement[39510-39639]:ExpressionStatement[39510-39639]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39656-39662]:BreakStatement[39656-39662]"
    }, {
      "left" : "case PROPERTIES:",
      "right" : "case PROPERTIES:",
      "info" : "SwitchCase[39675-39691]:SwitchCase[39675-39691]"
    }, {
      "left" : "_addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));",
      "right" : "_addExplicitPropertyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));",
      "info" : "ExpressionStatement[39708-39857]:ExpressionStatement[39708-39857]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[39874-39880]:BreakStatement[39874-39880]"
    }, {
      "left" : "case DEFAULT:",
      "right" : "case DEFAULT:",
      "info" : "SwitchCase[39893-39906]:SwitchCase[39893-39906]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[39919-39927]:SwitchCase[39919-39927]"
    }, {
      "left" : "_addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));",
      "right" : "_addExplicitAnyCreator(ctxt, beanDesc, creators,\n                        CreatorCandidate.construct(intr, factory, creatorParams.get(factory)));",
      "info" : "ExpressionStatement[39944-40088]:ExpressionStatement[39944-40088]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[40105-40111]:BreakStatement[40105-40111]"
    }, {
      "left" : "++explCount;",
      "right" : "++explCount;",
      "info" : "ExpressionStatement[40138-40150]:ExpressionStatement[40138-40150]"
    }, {
      "left" : "if (explCount > 0)",
      "right" : "if (explCount > 0)",
      "info" : "IfStatement[40250-40366]:IfStatement[40250-40366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40269-40366]:Block[40269-40366]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[40349-40356]:ReturnStatement[40349-40356]"
    }, {
      "left" : "for (CreatorCandidate candidate : nonAnnotated)",
      "right" : "for (CreatorCandidate candidate : nonAnnotated)",
      "info" : "EnhancedForStatement[40412-45496]:EnhancedForStatement[40412-45496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40460-45496]:Block[40460-45496]"
    }, {
      "left" : "final int argCount = candidate.paramCount();",
      "right" : "final int argCount = candidate.paramCount();",
      "info" : "VariableDeclarationStatement[40474-40518]:VariableDeclarationStatement[40474-40518]"
    }, {
      "left" : "AnnotatedWithParams factory = candidate.creator();",
      "right" : "AnnotatedWithParams factory = candidate.creator();",
      "info" : "VariableDeclarationStatement[40531-40581]:VariableDeclarationStatement[40531-40581]"
    }, {
      "left" : "final BeanPropertyDefinition[] propDefs = creatorParams.get(factory);",
      "right" : "final BeanPropertyDefinition[] propDefs = creatorParams.get(factory);",
      "info" : "VariableDeclarationStatement[40594-40663]:VariableDeclarationStatement[40594-40663]"
    }, {
      "left" : "if (argCount != 1)",
      "right" : "if (argCount != 1)",
      "info" : "IfStatement[40758-40872]:IfStatement[40758-40872]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40777-40872]:Block[40777-40872]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[40795-40804]:ContinueStatement[40795-40804]"
    }, {
      "left" : "BeanPropertyDefinition argDef = candidate.propertyDef(0);",
      "right" : "BeanPropertyDefinition argDef = candidate.propertyDef(0);",
      "info" : "VariableDeclarationStatement[40885-40942]:VariableDeclarationStatement[40885-40942]"
    }, {
      "left" : "boolean useProps = _checkIfCreatorPropertyBased(intr, factory, argDef);",
      "right" : "boolean useProps = _checkIfCreatorPropertyBased(intr, factory, argDef);",
      "info" : "VariableDeclarationStatement[40955-41026]:VariableDeclarationStatement[40955-41026]"
    }, {
      "left" : "if (!useProps)",
      "right" : "if (!useProps)",
      "info" : "IfStatement[41039-41585]:IfStatement[41039-41585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41054-41585]:Block[41054-41585]"
    }, {
      "left" : "_handleSingleArgumentCreator(creators,\n                        factory, false, vchecker.isCreatorVisible(factory));",
      "right" : "_handleSingleArgumentCreator(creators,\n                        factory, false, vchecker.isCreatorVisible(factory));",
      "info" : "ExpressionStatement[41128-41243]:ExpressionStatement[41128-41243]"
    }, {
      "left" : "if (argDef != null)",
      "right" : "if (argDef != null)",
      "info" : "IfStatement[41433-41545]:IfStatement[41433-41545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41453-41545]:Block[41453-41545]"
    }, {
      "left" : "((POJOPropertyBuilder) argDef).removeConstructors();",
      "right" : "((POJOPropertyBuilder) argDef).removeConstructors();",
      "info" : "ExpressionStatement[41475-41527]:ExpressionStatement[41475-41527]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[41562-41571]:ContinueStatement[41562-41571]"
    }, {
      "left" : "AnnotatedParameter nonAnnotatedParam = null;",
      "right" : "AnnotatedParameter nonAnnotatedParam = null;",
      "info" : "VariableDeclarationStatement[41598-41642]:VariableDeclarationStatement[41598-41642]"
    }, {
      "left" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "right" : "SettableBeanProperty[] properties = new SettableBeanProperty[argCount];",
      "info" : "VariableDeclarationStatement[41667-41738]:VariableDeclarationStatement[41667-41738]"
    }, {
      "left" : "int implicitNameCount = 0;",
      "right" : "int implicitNameCount = 0;",
      "info" : "VariableDeclarationStatement[41751-41777]:VariableDeclarationStatement[41751-41777]"
    }, {
      "left" : "int explicitNameCount = 0;",
      "right" : "int explicitNameCount = 0;",
      "info" : "VariableDeclarationStatement[41790-41816]:VariableDeclarationStatement[41790-41816]"
    }, {
      "left" : "int injectCount = 0;",
      "right" : "int injectCount = 0;",
      "info" : "VariableDeclarationStatement[41829-41849]:VariableDeclarationStatement[41829-41849]"
    }, {
      "left" : "for (int i = 0; i < argCount; ++i)",
      "right" : "for (int i = 0; i < argCount; ++i)",
      "info" : "ForStatement[41875-44481]:ForStatement[41875-44481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41910-44481]:Block[41910-44481]"
    }, {
      "left" : "final AnnotatedParameter param = factory.getParameter(i);",
      "right" : "final AnnotatedParameter param = factory.getParameter(i);",
      "info" : "VariableDeclarationStatement[41928-41985]:VariableDeclarationStatement[41928-41985]"
    }, {
      "left" : "BeanPropertyDefinition propDef = (propDefs == null) ? null : propDefs[i];",
      "right" : "BeanPropertyDefinition propDef = (propDefs == null) ? null : propDefs[i];",
      "info" : "VariableDeclarationStatement[42002-42075]:VariableDeclarationStatement[42002-42075]"
    }, {
      "left" : "JacksonInject.Value injectable = intr.findInjectableValue(param);",
      "right" : "JacksonInject.Value injectable = intr.findInjectableValue(param);",
      "info" : "VariableDeclarationStatement[42092-42157]:VariableDeclarationStatement[42092-42157]"
    }, {
      "left" : "final PropertyName name = (propDef == null) ? null : propDef.getFullName();",
      "right" : "final PropertyName name = (propDef == null) ? null : propDef.getFullName();",
      "info" : "VariableDeclarationStatement[42174-42249]:VariableDeclarationStatement[42174-42249]"
    }, {
      "left" : "if (propDef != null && propDef.isExplicitlyNamed())",
      "right" : "if (propDef != null && propDef.isExplicitlyNamed())",
      "info" : "IfStatement[42267-42515]:IfStatement[42267-42515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42319-42515]:Block[42319-42515]"
    }, {
      "left" : "++explicitNameCount;",
      "right" : "++explicitNameCount;",
      "info" : "ExpressionStatement[42341-42361]:ExpressionStatement[42341-42361]"
    }, {
      "left" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectable);",
      "right" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectable);",
      "info" : "ExpressionStatement[42382-42467]:ExpressionStatement[42382-42467]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[42488-42497]:ContinueStatement[42488-42497]"
    }, {
      "left" : "if (injectable != null)",
      "right" : "if (injectable != null)",
      "info" : "IfStatement[42532-42746]:IfStatement[42532-42746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42556-42746]:Block[42556-42746]"
    }, {
      "left" : "++injectCount;",
      "right" : "++injectCount;",
      "info" : "ExpressionStatement[42578-42592]:ExpressionStatement[42578-42592]"
    }, {
      "left" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectable);",
      "right" : "properties[i] = constructCreatorProperty(ctxt, beanDesc, name, i, param, injectable);",
      "info" : "ExpressionStatement[42613-42698]:ExpressionStatement[42613-42698]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[42719-42728]:ContinueStatement[42719-42728]"
    }, {
      "left" : "NameTransformer unwrapper = intr.findUnwrappingNameTransformer(param);",
      "right" : "NameTransformer unwrapper = intr.findUnwrappingNameTransformer(param);",
      "info" : "VariableDeclarationStatement[42763-42833]:VariableDeclarationStatement[42763-42833]"
    }, {
      "left" : "if (unwrapper != null)",
      "right" : "if (unwrapper != null)",
      "info" : "IfStatement[42850-43209]:IfStatement[42850-43209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42873-43209]:Block[42873-43209]"
    }, {
      "left" : "_reportUnwrappedCreatorProperty(ctxt, beanDesc, param);",
      "right" : "_reportUnwrappedCreatorProperty(ctxt, beanDesc, param);",
      "info" : "ExpressionStatement[42895-42950]:ExpressionStatement[42895-42950]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[43182-43191]:ContinueStatement[43182-43191]"
    }, {
      "left" : "if (nonAnnotatedParam == null)",
      "right" : "if (nonAnnotatedParam == null)",
      "info" : "IfStatement[44370-44467]:IfStatement[44370-44467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44401-44467]:Block[44401-44467]"
    }, {
      "left" : "nonAnnotatedParam = param;",
      "right" : "nonAnnotatedParam = param;",
      "info" : "ExpressionStatement[44423-44449]:ExpressionStatement[44423-44449]"
    }, {
      "left" : "final int namedCount = explicitNameCount + implicitNameCount;",
      "right" : "final int namedCount = explicitNameCount + implicitNameCount;",
      "info" : "VariableDeclarationStatement[44494-44555]:VariableDeclarationStatement[44494-44555]"
    }, {
      "left" : "if (explicitNameCount > 0 || injectCount > 0)",
      "right" : "if (explicitNameCount > 0 || injectCount > 0)",
      "info" : "IfStatement[44648-45486]:IfStatement[44648-45486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44694-45486]:Block[44694-45486]"
    }, {
      "left" : "if ((namedCount + injectCount) == argCount)",
      "right" : "if ((namedCount + injectCount) == argCount)",
      "info" : "IfStatement[44764-45472]:IfStatement[44764-45472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44808-44904]:Block[44808-44904]"
    }, {
      "left" : "creators.addPropertyCreator(factory, false, properties);",
      "right" : "creators.addPropertyCreator(factory, false, properties);",
      "info" : "ExpressionStatement[44830-44886]:ExpressionStatement[44830-44886]"
    }, {
      "left" : "if ((explicitNameCount == 0) && ((injectCount + 1) == argCount))",
      "right" : "if ((explicitNameCount == 0) && ((injectCount + 1) == argCount))",
      "info" : "IfStatement[44910-45472]:IfStatement[44910-45472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44975-45162]:Block[44975-45162]"
    }, {
      "left" : "creators.addDelegatingCreator(factory, false, properties, 0);",
      "right" : "creators.addDelegatingCreator(factory, false, properties, 0);",
      "info" : "ExpressionStatement[45083-45144]:ExpressionStatement[45083-45144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45168-45472]:Block[45168-45472]"
    }, {
      "left" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Argument #%d of factory method %s has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\",\n                    nonAnnotatedParam.getIndex(), factory);",
      "right" : "ctxt.reportBadTypeDefinition(beanDesc,\n\"Argument #%d of factory method %s has no property name annotation; must have name when multiple-parameter constructor annotated as Creator\",\n                    nonAnnotatedParam.getIndex(), factory);",
      "info" : "ExpressionStatement[45214-45454]:ExpressionStatement[45214-45454]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[45508-45517]:Modifier[45508-45517]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[45518-45525]:PrimitiveType[45518-45525]"
    }, {
      "left" : "_handleSingleArgumentCreator",
      "right" : "_handleSingleArgumentCreator",
      "info" : "SimpleName[45526-45554]:SimpleName[45526-45554]"
    }, {
      "left" : "CreatorCollector creators",
      "right" : "CreatorCollector creators",
      "info" : "SingleVariableDeclaration[45555-45580]:SingleVariableDeclaration[45555-45580]"
    }, {
      "left" : "AnnotatedWithParams ctor",
      "right" : "AnnotatedWithParams ctor",
      "info" : "SingleVariableDeclaration[45594-45618]:SingleVariableDeclaration[45594-45618]"
    }, {
      "left" : "boolean isCreator",
      "right" : "boolean isCreator",
      "info" : "SingleVariableDeclaration[45620-45637]:SingleVariableDeclaration[45620-45637]"
    }, {
      "left" : "boolean isVisible",
      "right" : "boolean isVisible",
      "info" : "SingleVariableDeclaration[45639-45656]:SingleVariableDeclaration[45639-45656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45662-47064]:Block[45662-47064]"
    }, {
      "left" : "Class<?> type = ctor.getRawParameterType(0);",
      "right" : "Class<?> type = ctor.getRawParameterType(0);",
      "info" : "VariableDeclarationStatement[45746-45790]:VariableDeclarationStatement[45746-45790]"
    }, {
      "left" : "if (type == String.class || type == CLASS_CHAR_SEQUENCE)",
      "right" : "if (type == String.class || type == CLASS_CHAR_SEQUENCE)",
      "info" : "IfStatement[45799-46008]:IfStatement[45799-46008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45856-46008]:Block[45856-46008]"
    }, {
      "left" : "if (isCreator || isVisible)",
      "right" : "if (isCreator || isVisible)",
      "info" : "IfStatement[45870-45973]:IfStatement[45870-45973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45898-45973]:Block[45898-45973]"
    }, {
      "left" : "creators.addStringCreator(ctor, isCreator);",
      "right" : "creators.addStringCreator(ctor, isCreator);",
      "info" : "ExpressionStatement[45916-45959]:ExpressionStatement[45916-45959]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[45986-45998]:ReturnStatement[45986-45998]"
    }, {
      "left" : "if (type == int.class || type == Integer.class)",
      "right" : "if (type == int.class || type == Integer.class)",
      "info" : "IfStatement[46017-46214]:IfStatement[46017-46214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46065-46214]:Block[46065-46214]"
    }, {
      "left" : "if (isCreator || isVisible)",
      "right" : "if (isCreator || isVisible)",
      "info" : "IfStatement[46079-46179]:IfStatement[46079-46179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46107-46179]:Block[46107-46179]"
    }, {
      "left" : "creators.addIntCreator(ctor, isCreator);",
      "right" : "creators.addIntCreator(ctor, isCreator);",
      "info" : "ExpressionStatement[46125-46165]:ExpressionStatement[46125-46165]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46192-46204]:ReturnStatement[46192-46204]"
    }, {
      "left" : "if (type == long.class || type == Long.class)",
      "right" : "if (type == long.class || type == Long.class)",
      "info" : "IfStatement[46223-46419]:IfStatement[46223-46419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46269-46419]:Block[46269-46419]"
    }, {
      "left" : "if (isCreator || isVisible)",
      "right" : "if (isCreator || isVisible)",
      "info" : "IfStatement[46283-46384]:IfStatement[46283-46384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46311-46384]:Block[46311-46384]"
    }, {
      "left" : "creators.addLongCreator(ctor, isCreator);",
      "right" : "creators.addLongCreator(ctor, isCreator);",
      "info" : "ExpressionStatement[46329-46370]:ExpressionStatement[46329-46370]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46397-46409]:ReturnStatement[46397-46409]"
    }, {
      "left" : "if (type == double.class || type == Double.class)",
      "right" : "if (type == double.class || type == Double.class)",
      "info" : "IfStatement[46428-46630]:IfStatement[46428-46630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46478-46630]:Block[46478-46630]"
    }, {
      "left" : "if (isCreator || isVisible)",
      "right" : "if (isCreator || isVisible)",
      "info" : "IfStatement[46492-46595]:IfStatement[46492-46595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46520-46595]:Block[46520-46595]"
    }, {
      "left" : "creators.addDoubleCreator(ctor, isCreator);",
      "right" : "creators.addDoubleCreator(ctor, isCreator);",
      "info" : "ExpressionStatement[46538-46581]:ExpressionStatement[46538-46581]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46608-46620]:ReturnStatement[46608-46620]"
    }, {
      "left" : "if (type == boolean.class || type == Boolean.class)",
      "right" : "if (type == boolean.class || type == Boolean.class)",
      "info" : "IfStatement[46639-46844]:IfStatement[46639-46844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46691-46844]:Block[46691-46844]"
    }, {
      "left" : "if (isCreator || isVisible)",
      "right" : "if (isCreator || isVisible)",
      "info" : "IfStatement[46705-46809]:IfStatement[46705-46809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46733-46809]:Block[46733-46809]"
    }, {
      "left" : "creators.addBooleanCreator(ctor, isCreator);",
      "right" : "creators.addBooleanCreator(ctor, isCreator);",
      "info" : "ExpressionStatement[46751-46795]:ExpressionStatement[46751-46795]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[46822-46834]:ReturnStatement[46822-46834]"
    }, {
      "left" : "if (isCreator)",
      "right" : "if (isCreator)",
      "info" : "IfStatement[46916-47036]:IfStatement[46916-47036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46931-47036]:Block[46931-47036]"
    }, {
      "left" : "creators.addDelegatingCreator(ctor, isCreator, null, 0);",
      "right" : "creators.addDelegatingCreator(ctor, isCreator, null, 0);",
      "info" : "ExpressionStatement[46945-47001]:ExpressionStatement[46945-47001]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[47014-47026]:ReturnStatement[47014-47026]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[47045-47058]:ReturnStatement[47045-47058]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47218-47227]:Modifier[47218-47227]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[47228-47232]:PrimitiveType[47228-47232]"
    }, {
      "left" : "_reportUnwrappedCreatorProperty",
      "right" : "_reportUnwrappedCreatorProperty",
      "info" : "SimpleName[47233-47264]:SimpleName[47233-47264]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[47265-47292]:SingleVariableDeclaration[47265-47292]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[47306-47330]:SingleVariableDeclaration[47306-47330]"
    }, {
      "left" : "AnnotatedParameter param",
      "right" : "AnnotatedParameter param",
      "info" : "SingleVariableDeclaration[47332-47356]:SingleVariableDeclaration[47332-47356]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[47373-47393]:SimpleType[47373-47393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47398-47614]:Block[47398-47614]"
    }, {
      "left" : "ctxt.reportBadDefinition(beanDesc.getType(), String.format(\n                \"Cannot define Creator parameter %d as `@JsonUnwrapped`: combination not yet supported\",\n                param.getIndex()));",
      "right" : "ctxt.reportBadDefinition(beanDesc.getType(), String.format(\n                \"Cannot define Creator parameter %d as `@JsonUnwrapped`: combination not yet supported\",\n                param.getIndex()));",
      "info" : "ExpressionStatement[47408-47608]:ExpressionStatement[47408-47608]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47795-47804]:Modifier[47795-47804]"
    }, {
      "left" : "SettableBeanProperty",
      "right" : "SettableBeanProperty",
      "info" : "SimpleType[47805-47825]:SimpleType[47805-47825]"
    }, {
      "left" : "constructCreatorProperty",
      "right" : "constructCreatorProperty",
      "info" : "SimpleName[47826-47850]:SimpleName[47826-47850]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[47851-47878]:SingleVariableDeclaration[47851-47878]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[47892-47916]:SingleVariableDeclaration[47892-47916]"
    }, {
      "left" : "PropertyName name",
      "right" : "PropertyName name",
      "info" : "SingleVariableDeclaration[47918-47935]:SingleVariableDeclaration[47918-47935]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[47937-47946]:SingleVariableDeclaration[47937-47946]"
    }, {
      "left" : "AnnotatedParameter param",
      "right" : "AnnotatedParameter param",
      "info" : "SingleVariableDeclaration[47960-47984]:SingleVariableDeclaration[47960-47984]"
    }, {
      "left" : "JacksonInject.Value injectable",
      "right" : "JacksonInject.Value injectable",
      "info" : "SingleVariableDeclaration[47998-48028]:SingleVariableDeclaration[47998-48028]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[48045-48065]:SimpleType[48045-48065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48070-50181]:Block[48070-50181]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[48080-48134]:VariableDeclarationStatement[48080-48134]"
    }, {
      "left" : "final AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "final AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[48143-48212]:VariableDeclarationStatement[48143-48212]"
    }, {
      "left" : "PropertyMetadata metadata;",
      "right" : "PropertyMetadata metadata;",
      "info" : "VariableDeclarationStatement[48221-48247]:VariableDeclarationStatement[48221-48247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48256-48732]:Block[48256-48732]"
    }, {
      "left" : "if (intr == null)",
      "right" : "if (intr == null)",
      "info" : "IfStatement[48270-48722]:IfStatement[48270-48722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48288-48373]:Block[48288-48373]"
    }, {
      "left" : "metadata = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;",
      "right" : "metadata = PropertyMetadata.STD_REQUIRED_OR_OPTIONAL;",
      "info" : "ExpressionStatement[48306-48359]:ExpressionStatement[48306-48359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48379-48722]:Block[48379-48722]"
    }, {
      "left" : "Boolean b = intr.hasRequiredMarker(param);",
      "right" : "Boolean b = intr.hasRequiredMarker(param);",
      "info" : "VariableDeclarationStatement[48397-48439]:VariableDeclarationStatement[48397-48439]"
    }, {
      "left" : "String desc = intr.findPropertyDescription(param);",
      "right" : "String desc = intr.findPropertyDescription(param);",
      "info" : "VariableDeclarationStatement[48456-48506]:VariableDeclarationStatement[48456-48506]"
    }, {
      "left" : "Integer idx = intr.findPropertyIndex(param);",
      "right" : "Integer idx = intr.findPropertyIndex(param);",
      "info" : "VariableDeclarationStatement[48523-48567]:VariableDeclarationStatement[48523-48567]"
    }, {
      "left" : "String def = intr.findPropertyDefaultValue(param);",
      "right" : "String def = intr.findPropertyDefaultValue(param);",
      "info" : "VariableDeclarationStatement[48584-48634]:VariableDeclarationStatement[48584-48634]"
    }, {
      "left" : "metadata = PropertyMetadata.construct(b, desc, idx, def);",
      "right" : "metadata = PropertyMetadata.construct(b, desc, idx, def);",
      "info" : "ExpressionStatement[48651-48708]:ExpressionStatement[48651-48708]"
    }, {
      "left" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, param, param.getType());",
      "right" : "JavaType type = resolveMemberAndTypeAnnotations(ctxt, param, param.getType());",
      "info" : "VariableDeclarationStatement[48741-48819]:VariableDeclarationStatement[48741-48819]"
    }, {
      "left" : "BeanProperty.Std property = new BeanProperty.Std(name, type,\n                intr.findWrapperName(param), param, metadata);",
      "right" : "BeanProperty.Std property = new BeanProperty.Std(name, type,\n                intr.findWrapperName(param), param, metadata);",
      "info" : "VariableDeclarationStatement[48828-48951]:VariableDeclarationStatement[48828-48951]"
    }, {
      "left" : "TypeDeserializer typeDeser = (TypeDeserializer) type.getTypeHandler();",
      "right" : "TypeDeserializer typeDeser = (TypeDeserializer) type.getTypeHandler();",
      "info" : "VariableDeclarationStatement[49040-49110]:VariableDeclarationStatement[49040-49110]"
    }, {
      "left" : "if (typeDeser == null)",
      "right" : "if (typeDeser == null)",
      "info" : "IfStatement[49173-49267]:IfStatement[49173-49267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49196-49267]:Block[49196-49267]"
    }, {
      "left" : "typeDeser = findTypeDeserializer(config, type);",
      "right" : "typeDeser = findTypeDeserializer(config, type);",
      "info" : "ExpressionStatement[49210-49257]:ExpressionStatement[49210-49257]"
    }, {
      "left" : "Object injectableValueId = (injectable == null) ? null : injectable.getId();",
      "right" : "Object injectableValueId = (injectable == null) ? null : injectable.getId();",
      "info" : "VariableDeclarationStatement[49419-49495]:VariableDeclarationStatement[49419-49495]"
    }, {
      "left" : "SettableBeanProperty prop = new CreatorProperty(name, type, property.getWrapperName(),\n                typeDeser, beanDesc.getClassAnnotations(), param, index, injectableValueId,\n                metadata);",
      "right" : "SettableBeanProperty prop = new CreatorProperty(name, type, property.getWrapperName(),\n                typeDeser, beanDesc.getClassAnnotations(), param, index, injectableValueId,\n                metadata);",
      "info" : "VariableDeclarationStatement[49513-49718]:VariableDeclarationStatement[49513-49718]"
    }, {
      "left" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, param);",
      "right" : "JsonDeserializer<?> deser = findDeserializerFromAnnotation(ctxt, param);",
      "info" : "VariableDeclarationStatement[49727-49799]:VariableDeclarationStatement[49727-49799]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[49808-49882]:IfStatement[49808-49882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49827-49882]:Block[49827-49882]"
    }, {
      "left" : "deser = type.getValueHandler();",
      "right" : "deser = type.getValueHandler();",
      "info" : "ExpressionStatement[49841-49872]:ExpressionStatement[49841-49872]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[49891-50154]:IfStatement[49891-50154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49910-50154]:Block[49910-50154]"
    }, {
      "left" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "right" : "deser = ctxt.handlePrimaryContextualization(deser, prop, type);",
      "info" : "ExpressionStatement[50027-50090]:ExpressionStatement[50027-50090]"
    }, {
      "left" : "prop = prop.withValueDeserializer(deser);",
      "right" : "prop = prop.withValueDeserializer(deser);",
      "info" : "ExpressionStatement[50103-50144]:ExpressionStatement[50103-50144]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[50163-50175]:ReturnStatement[50163-50175]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[50187-50194]:Modifier[50187-50194]"
    }, {
      "left" : "PropertyName",
      "right" : "PropertyName",
      "info" : "SimpleType[50195-50207]:SimpleType[50195-50207]"
    }, {
      "left" : "_findParamName",
      "right" : "_findParamName",
      "info" : "SimpleName[50208-50222]:SimpleName[50208-50222]"
    }, {
      "left" : "AnnotatedParameter param",
      "right" : "AnnotatedParameter param",
      "info" : "SingleVariableDeclaration[50223-50247]:SingleVariableDeclaration[50223-50247]"
    }, {
      "left" : "AnnotationIntrospector intr",
      "right" : "AnnotationIntrospector intr",
      "info" : "SingleVariableDeclaration[50249-50276]:SingleVariableDeclaration[50249-50276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50282-50815]:Block[50282-50815]"
    }, {
      "left" : "if (param != null && intr != null)",
      "right" : "if (param != null && intr != null)",
      "info" : "IfStatement[50292-50788]:IfStatement[50292-50788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50327-50788]:Block[50327-50788]"
    }, {
      "left" : "PropertyName name = intr.findNameForDeserialization(param);",
      "right" : "PropertyName name = intr.findNameForDeserialization(param);",
      "info" : "VariableDeclarationStatement[50341-50400]:VariableDeclarationStatement[50341-50400]"
    }, {
      "left" : "if (name != null)",
      "right" : "if (name != null)",
      "info" : "IfStatement[50413-50475]:IfStatement[50413-50475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50431-50475]:Block[50431-50475]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[50449-50461]:ReturnStatement[50449-50461]"
    }, {
      "left" : "String str = intr.findImplicitPropertyName(param);",
      "right" : "String str = intr.findImplicitPropertyName(param);",
      "info" : "VariableDeclarationStatement[50613-50663]:VariableDeclarationStatement[50613-50663]"
    }, {
      "left" : "if (str != null && !str.isEmpty())",
      "right" : "if (str != null && !str.isEmpty())",
      "info" : "IfStatement[50676-50778]:IfStatement[50676-50778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50711-50778]:Block[50711-50778]"
    }, {
      "left" : "return PropertyName.construct(str);",
      "right" : "return PropertyName.construct(str);",
      "info" : "ReturnStatement[50729-50764]:ReturnStatement[50729-50764]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[50797-50809]:ReturnStatement[50797-50809]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[51030-51039]:MarkerAnnotation[51030-51039]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51044-51050]:Modifier[51044-51050]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[51051-51070]:ParameterizedType[51051-51070]"
    }, {
      "left" : "createArrayDeserializer",
      "right" : "createArrayDeserializer",
      "info" : "SimpleName[51071-51094]:SimpleName[51071-51094]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[51095-51122]:SingleVariableDeclaration[51095-51122]"
    }, {
      "left" : "ArrayType type",
      "right" : "ArrayType type",
      "info" : "SingleVariableDeclaration[51136-51150]:SingleVariableDeclaration[51136-51150]"
    }, {
      "left" : "final BeanDescription beanDesc",
      "right" : "final BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[51152-51182]:SingleVariableDeclaration[51152-51182]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[51199-51219]:SimpleType[51199-51219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51224-52873]:Block[51224-52873]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[51234-51288]:VariableDeclarationStatement[51234-51288]"
    }, {
      "left" : "JavaType elemType = type.getContentType();",
      "right" : "JavaType elemType = type.getContentType();",
      "info" : "VariableDeclarationStatement[51297-51339]:VariableDeclarationStatement[51297-51339]"
    }, {
      "left" : "JsonDeserializer<Object> contentDeser = elemType.getValueHandler();",
      "right" : "JsonDeserializer<Object> contentDeser = elemType.getValueHandler();",
      "info" : "VariableDeclarationStatement[51427-51494]:VariableDeclarationStatement[51427-51494]"
    }, {
      "left" : "TypeDeserializer elemTypeDeser = elemType.getTypeHandler();",
      "right" : "TypeDeserializer elemTypeDeser = elemType.getTypeHandler();",
      "info" : "VariableDeclarationStatement[51605-51664]:VariableDeclarationStatement[51605-51664]"
    }, {
      "left" : "if (elemTypeDeser == null)",
      "right" : "if (elemTypeDeser == null)",
      "info" : "IfStatement[51727-51833]:IfStatement[51727-51833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51754-51833]:Block[51754-51833]"
    }, {
      "left" : "elemTypeDeser = findTypeDeserializer(config, elemType);",
      "right" : "elemTypeDeser = findTypeDeserializer(config, elemType);",
      "info" : "ExpressionStatement[51768-51823]:ExpressionStatement[51768-51823]"
    }, {
      "left" : "JsonDeserializer<?>  deser = _findCustomArrayDeserializer(type,\n                config, beanDesc, elemTypeDeser, contentDeser);",
      "right" : "JsonDeserializer<?>  deser = _findCustomArrayDeserializer(type,\n                config, beanDesc, elemTypeDeser, contentDeser);",
      "info" : "VariableDeclarationStatement[51899-52026]:VariableDeclarationStatement[51899-52026]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[52035-52513]:IfStatement[52035-52513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52054-52513]:Block[52054-52513]"
    }, {
      "left" : "if (contentDeser == null)",
      "right" : "if (contentDeser == null)",
      "info" : "IfStatement[52068-52419]:IfStatement[52068-52419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52094-52419]:Block[52094-52419]"
    }, {
      "left" : "Class<?> raw = elemType.getRawClass();",
      "right" : "Class<?> raw = elemType.getRawClass();",
      "info" : "VariableDeclarationStatement[52112-52150]:VariableDeclarationStatement[52112-52150]"
    }, {
      "left" : "if (elemType.isPrimitive())",
      "right" : "if (elemType.isPrimitive())",
      "info" : "IfStatement[52167-52283]:IfStatement[52167-52283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52195-52283]:Block[52195-52283]"
    }, {
      "left" : "return PrimitiveArrayDeserializers.forType(raw);",
      "right" : "return PrimitiveArrayDeserializers.forType(raw);",
      "info" : "ReturnStatement[52217-52265]:ReturnStatement[52217-52265]"
    }, {
      "left" : "if (raw == String.class)",
      "right" : "if (raw == String.class)",
      "info" : "IfStatement[52300-52405]:IfStatement[52300-52405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52325-52405]:Block[52325-52405]"
    }, {
      "left" : "return StringArrayDeserializer.instance;",
      "right" : "return StringArrayDeserializer.instance;",
      "info" : "ReturnStatement[52347-52387]:ReturnStatement[52347-52387]"
    }, {
      "left" : "deser = new ObjectArrayDeserializer(type, contentDeser, elemTypeDeser);",
      "right" : "deser = new ObjectArrayDeserializer(type, contentDeser, elemTypeDeser);",
      "info" : "ExpressionStatement[52432-52503]:ExpressionStatement[52432-52503]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[52599-52845]:IfStatement[52599-52845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52646-52845]:Block[52646-52845]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[52660-52835]:EnhancedForStatement[52660-52835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52736-52835]:Block[52736-52835]"
    }, {
      "left" : "deser = mod.modifyArrayDeserializer(config, type, beanDesc, deser);",
      "right" : "deser = mod.modifyArrayDeserializer(config, type, beanDesc, deser);",
      "info" : "ExpressionStatement[52754-52821]:ExpressionStatement[52754-52821]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[52854-52867]:ReturnStatement[52854-52867]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[53092-53101]:MarkerAnnotation[53092-53101]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53106-53112]:Modifier[53106-53112]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[53113-53132]:ParameterizedType[53113-53132]"
    }, {
      "left" : "createCollectionDeserializer",
      "right" : "createCollectionDeserializer",
      "info" : "SimpleName[53133-53161]:SimpleName[53133-53161]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[53162-53189]:SingleVariableDeclaration[53162-53189]"
    }, {
      "left" : "CollectionType type",
      "right" : "CollectionType type",
      "info" : "SingleVariableDeclaration[53203-53222]:SingleVariableDeclaration[53203-53222]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[53224-53248]:SingleVariableDeclaration[53224-53248]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[53265-53285]:SimpleType[53265-53285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53290-57364]:Block[53290-57364]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[53300-53345]:VariableDeclarationStatement[53300-53345]"
    }, {
      "left" : "JsonDeserializer<Object> contentDeser = contentType.getValueHandler();",
      "right" : "JsonDeserializer<Object> contentDeser = contentType.getValueHandler();",
      "info" : "VariableDeclarationStatement[53424-53494]:VariableDeclarationStatement[53424-53494]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[53503-53557]:VariableDeclarationStatement[53503-53557]"
    }, {
      "left" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "right" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "info" : "VariableDeclarationStatement[53669-53734]:VariableDeclarationStatement[53669-53734]"
    }, {
      "left" : "if (contentTypeDeser == null)",
      "right" : "if (contentTypeDeser == null)",
      "info" : "IfStatement[53797-53912]:IfStatement[53797-53912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53827-53912]:Block[53827-53912]"
    }, {
      "left" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "right" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "info" : "ExpressionStatement[53841-53902]:ExpressionStatement[53841-53902]"
    }, {
      "left" : "JsonDeserializer<?> deser = _findCustomCollectionDeserializer(type,\n                config, beanDesc, contentTypeDeser, contentDeser);",
      "right" : "JsonDeserializer<?> deser = _findCustomCollectionDeserializer(type,\n                config, beanDesc, contentTypeDeser, contentDeser);",
      "info" : "VariableDeclarationStatement[53972-54106]:VariableDeclarationStatement[53972-54106]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[54115-54494]:IfStatement[54115-54494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54134-54494]:Block[54134-54494]"
    }, {
      "left" : "Class<?> collectionClass = type.getRawClass();",
      "right" : "Class<?> collectionClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[54148-54194]:VariableDeclarationStatement[54148-54194]"
    }, {
      "left" : "if (contentDeser == null)",
      "right" : "if (contentDeser == null)",
      "info" : "IfStatement[54207-54484]:IfStatement[54207-54484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54233-54484]:Block[54233-54484]"
    }, {
      "left" : "if (EnumSet.class.isAssignableFrom(collectionClass))",
      "right" : "if (EnumSet.class.isAssignableFrom(collectionClass))",
      "info" : "IfStatement[54326-54470]:IfStatement[54326-54470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54379-54470]:Block[54379-54470]"
    }, {
      "left" : "deser = new EnumSetDeserializer(contentType, null);",
      "right" : "deser = new EnumSetDeserializer(contentType, null);",
      "info" : "ExpressionStatement[54401-54452]:ExpressionStatement[54401-54452]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[54965-57036]:IfStatement[54965-57036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54984-57036]:Block[54984-57036]"
    }, {
      "left" : "if (type.isInterface() || type.isAbstract())",
      "right" : "if (type.isInterface() || type.isAbstract())",
      "info" : "IfStatement[54998-55786]:IfStatement[54998-55786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55043-55786]:Block[55043-55786]"
    }, {
      "left" : "CollectionType implType = _mapAbstractCollectionType(type, config);",
      "right" : "CollectionType implType = _mapAbstractCollectionType(type, config);",
      "info" : "VariableDeclarationStatement[55061-55128]:VariableDeclarationStatement[55061-55128]"
    }, {
      "left" : "if (implType == null)",
      "right" : "if (implType == null)",
      "info" : "IfStatement[55145-55772]:IfStatement[55145-55772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55167-55575]:Block[55167-55575]"
    }, {
      "left" : "if (type.getTypeHandler() == null)",
      "right" : "if (type.getTypeHandler() == null)",
      "info" : "IfStatement[55290-55477]:IfStatement[55290-55477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55325-55477]:Block[55325-55477]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Cannot find a deserializer for non-concrete Collection type \"+type);",
      "right" : "throw new IllegalArgumentException(\"Cannot find a deserializer for non-concrete Collection type \"+type);",
      "info" : "ThrowStatement[55351-55455]:ThrowStatement[55351-55455]"
    }, {
      "left" : "deser = AbstractDeserializer.constructForNonPOJO(beanDesc);",
      "right" : "deser = AbstractDeserializer.constructForNonPOJO(beanDesc);",
      "info" : "ExpressionStatement[55498-55557]:ExpressionStatement[55498-55557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55581-55772]:Block[55581-55772]"
    }, {
      "left" : "type = implType;",
      "right" : "type = implType;",
      "info" : "ExpressionStatement[55603-55619]:ExpressionStatement[55603-55619]"
    }, {
      "left" : "beanDesc = config.introspectForCreation(type);",
      "right" : "beanDesc = config.introspectForCreation(type);",
      "info" : "ExpressionStatement[55708-55754]:ExpressionStatement[55708-55754]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[55799-57026]:IfStatement[55799-57026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55818-57026]:Block[55818-57026]"
    }, {
      "left" : "ValueInstantiator inst = findValueInstantiator(ctxt, beanDesc);",
      "right" : "ValueInstantiator inst = findValueInstantiator(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[55836-55899]:VariableDeclarationStatement[55836-55899]"
    }, {
      "left" : "if (!inst.canCreateUsingDefault())",
      "right" : "if (!inst.canCreateUsingDefault())",
      "info" : "IfStatement[55916-56537]:IfStatement[55916-56537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55951-56537]:Block[55951-56537]"
    }, {
      "left" : "if (type.hasRawClass(ArrayBlockingQueue.class))",
      "right" : "if (type.hasRawClass(ArrayBlockingQueue.class))",
      "info" : "IfStatement[56061-56243]:IfStatement[56061-56243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56109-56243]:Block[56109-56243]"
    }, {
      "left" : "return new ArrayBlockingQueueDeserializer(type, contentDeser, contentTypeDeser, inst);",
      "right" : "return new ArrayBlockingQueueDeserializer(type, contentDeser, contentTypeDeser, inst);",
      "info" : "ReturnStatement[56135-56221]:ReturnStatement[56135-56221]"
    }, {
      "left" : "deser = JavaUtilCollectionsDeserializers.findForCollection(ctxt, type);",
      "right" : "deser = JavaUtilCollectionsDeserializers.findForCollection(ctxt, type);",
      "info" : "ExpressionStatement[56347-56418]:ExpressionStatement[56347-56418]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[56439-56519]:IfStatement[56439-56519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56458-56519]:Block[56458-56519]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[56484-56497]:ReturnStatement[56484-56497]"
    }, {
      "left" : "if (contentType.hasRawClass(String.class))",
      "right" : "if (contentType.hasRawClass(String.class))",
      "info" : "IfStatement[56638-57012]:IfStatement[56638-57012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56681-56887]:Block[56681-56887]"
    }, {
      "left" : "deser = new StringCollectionDeserializer(type, contentDeser, inst);",
      "right" : "deser = new StringCollectionDeserializer(type, contentDeser, inst);",
      "info" : "ExpressionStatement[56802-56869]:ExpressionStatement[56802-56869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56893-57012]:Block[56893-57012]"
    }, {
      "left" : "deser = new CollectionDeserializer(type, contentDeser, contentTypeDeser, inst);",
      "right" : "deser = new CollectionDeserializer(type, contentDeser, contentTypeDeser, inst);",
      "info" : "ExpressionStatement[56915-56994]:ExpressionStatement[56915-56994]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[57085-57336]:IfStatement[57085-57336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57132-57336]:Block[57132-57336]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[57146-57326]:EnhancedForStatement[57146-57326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57222-57326]:Block[57222-57326]"
    }, {
      "left" : "deser = mod.modifyCollectionDeserializer(config, type, beanDesc, deser);",
      "right" : "deser = mod.modifyCollectionDeserializer(config, type, beanDesc, deser);",
      "info" : "ExpressionStatement[57240-57312]:ExpressionStatement[57240-57312]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[57345-57358]:ReturnStatement[57345-57358]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[57370-57379]:Modifier[57370-57379]"
    }, {
      "left" : "CollectionType",
      "right" : "CollectionType",
      "info" : "SimpleType[57380-57394]:SimpleType[57380-57394]"
    }, {
      "left" : "_mapAbstractCollectionType",
      "right" : "_mapAbstractCollectionType",
      "info" : "SimpleName[57395-57421]:SimpleName[57395-57421]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[57422-57435]:SingleVariableDeclaration[57422-57435]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[57437-57465]:SingleVariableDeclaration[57437-57465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57471-57774]:Block[57471-57774]"
    }, {
      "left" : "Class<?> collectionClass = type.getRawClass();",
      "right" : "Class<?> collectionClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[57481-57527]:VariableDeclarationStatement[57481-57527]"
    }, {
      "left" : "collectionClass = _collectionFallbacks.get(collectionClass.getName());",
      "right" : "collectionClass = _collectionFallbacks.get(collectionClass.getName());",
      "info" : "ExpressionStatement[57536-57606]:ExpressionStatement[57536-57606]"
    }, {
      "left" : "if (collectionClass == null)",
      "right" : "if (collectionClass == null)",
      "info" : "IfStatement[57615-57680]:IfStatement[57615-57680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57644-57680]:Block[57644-57680]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[57658-57670]:ReturnStatement[57658-57670]"
    }, {
      "left" : "return (CollectionType) config.constructSpecializedType(type, collectionClass);",
      "right" : "return (CollectionType) config.constructSpecializedType(type, collectionClass);",
      "info" : "ReturnStatement[57689-57768]:ReturnStatement[57689-57768]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[57883-57892]:MarkerAnnotation[57883-57892]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57897-57903]:Modifier[57897-57903]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[57904-57923]:ParameterizedType[57904-57923]"
    }, {
      "left" : "createCollectionLikeDeserializer",
      "right" : "createCollectionLikeDeserializer",
      "info" : "SimpleName[57924-57956]:SimpleName[57924-57956]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[57957-57984]:SingleVariableDeclaration[57957-57984]"
    }, {
      "left" : "CollectionLikeType type",
      "right" : "CollectionLikeType type",
      "info" : "SingleVariableDeclaration[57998-58021]:SingleVariableDeclaration[57998-58021]"
    }, {
      "left" : "final BeanDescription beanDesc",
      "right" : "final BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[58023-58053]:SingleVariableDeclaration[58023-58053]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[58070-58090]:SimpleType[58070-58090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58095-59302]:Block[58095-59302]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[58105-58150]:VariableDeclarationStatement[58105-58150]"
    }, {
      "left" : "JsonDeserializer<Object> contentDeser = contentType.getValueHandler();",
      "right" : "JsonDeserializer<Object> contentDeser = contentType.getValueHandler();",
      "info" : "VariableDeclarationStatement[58229-58299]:VariableDeclarationStatement[58229-58299]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[58308-58362]:VariableDeclarationStatement[58308-58362]"
    }, {
      "left" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "right" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "info" : "VariableDeclarationStatement[58480-58545]:VariableDeclarationStatement[58480-58545]"
    }, {
      "left" : "if (contentTypeDeser == null)",
      "right" : "if (contentTypeDeser == null)",
      "info" : "IfStatement[58608-58723]:IfStatement[58608-58723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58638-58723]:Block[58638-58723]"
    }, {
      "left" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "right" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "info" : "ExpressionStatement[58652-58713]:ExpressionStatement[58652-58713]"
    }, {
      "left" : "JsonDeserializer<?> deser = _findCustomCollectionLikeDeserializer(type, config, beanDesc,\n                contentTypeDeser, contentDeser);",
      "right" : "JsonDeserializer<?> deser = _findCustomCollectionLikeDeserializer(type, config, beanDesc,\n                contentTypeDeser, contentDeser);",
      "info" : "VariableDeclarationStatement[58732-58870]:VariableDeclarationStatement[58732-58870]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[58879-59274]:IfStatement[58879-59274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58898-59274]:Block[58898-59274]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[58993-59264]:IfStatement[58993-59264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59040-59264]:Block[59040-59264]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[59058-59250]:EnhancedForStatement[59058-59250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59134-59250]:Block[59134-59250]"
    }, {
      "left" : "deser = mod.modifyCollectionLikeDeserializer(config, type, beanDesc, deser);",
      "right" : "deser = mod.modifyCollectionLikeDeserializer(config, type, beanDesc, deser);",
      "info" : "ExpressionStatement[59156-59232]:ExpressionStatement[59156-59232]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[59283-59296]:ReturnStatement[59283-59296]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[59514-59523]:MarkerAnnotation[59514-59523]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59528-59534]:Modifier[59528-59534]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[59535-59554]:ParameterizedType[59535-59554]"
    }, {
      "left" : "createMapDeserializer",
      "right" : "createMapDeserializer",
      "info" : "SimpleName[59555-59576]:SimpleName[59555-59576]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[59577-59604]:SingleVariableDeclaration[59577-59604]"
    }, {
      "left" : "MapType type",
      "right" : "MapType type",
      "info" : "SingleVariableDeclaration[59618-59630]:SingleVariableDeclaration[59618-59630]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[59632-59656]:SingleVariableDeclaration[59632-59656]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[59673-59693]:SimpleType[59673-59693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59698-64940]:Block[59698-64940]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[59708-59762]:VariableDeclarationStatement[59708-59762]"
    }, {
      "left" : "JavaType keyType = type.getKeyType();",
      "right" : "JavaType keyType = type.getKeyType();",
      "info" : "VariableDeclarationStatement[59771-59808]:VariableDeclarationStatement[59771-59808]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[59817-59862]:VariableDeclarationStatement[59817-59862]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> contentDeser = (JsonDeserializer<Object>) contentType.getValueHandler();",
      "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> contentDeser = (JsonDeserializer<Object>) contentType.getValueHandler();",
      "info" : "VariableDeclarationStatement[59953-60089]:VariableDeclarationStatement[59953-60089]"
    }, {
      "left" : "KeyDeserializer keyDes = (KeyDeserializer) keyType.getValueHandler();",
      "right" : "KeyDeserializer keyDes = (KeyDeserializer) keyType.getValueHandler();",
      "info" : "VariableDeclarationStatement[60170-60239]:VariableDeclarationStatement[60170-60239]"
    }, {
      "left" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "right" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "info" : "VariableDeclarationStatement[60333-60398]:VariableDeclarationStatement[60333-60398]"
    }, {
      "left" : "if (contentTypeDeser == null)",
      "right" : "if (contentTypeDeser == null)",
      "info" : "IfStatement[60461-60576]:IfStatement[60461-60576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60491-60576]:Block[60491-60576]"
    }, {
      "left" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "right" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "info" : "ExpressionStatement[60505-60566]:ExpressionStatement[60505-60566]"
    }, {
      "left" : "JsonDeserializer<?> deser = _findCustomMapDeserializer(type, config, beanDesc,\n                keyDes, contentTypeDeser, contentDeser);",
      "right" : "JsonDeserializer<?> deser = _findCustomMapDeserializer(type, config, beanDesc,\n                keyDes, contentTypeDeser, contentDeser);",
      "info" : "VariableDeclarationStatement[60637-60772]:VariableDeclarationStatement[60637-60772]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[60782-64659]:IfStatement[60782-64659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60801-64659]:Block[60801-64659]"
    }, {
      "left" : "Class<?> mapClass = type.getRawClass();",
      "right" : "Class<?> mapClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[60914-60953]:VariableDeclarationStatement[60914-60953]"
    }, {
      "left" : "if (EnumMap.class.isAssignableFrom(mapClass))",
      "right" : "if (EnumMap.class.isAssignableFrom(mapClass))",
      "info" : "IfStatement[60966-61775]:IfStatement[60966-61775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61012-61775]:Block[61012-61775]"
    }, {
      "left" : "ValueInstantiator inst;",
      "right" : "ValueInstantiator inst;",
      "info" : "VariableDeclarationStatement[61030-61053]:VariableDeclarationStatement[61030-61053]"
    }, {
      "left" : "if (mapClass == EnumMap.class)",
      "right" : "if (mapClass == EnumMap.class)",
      "info" : "IfStatement[61219-61393]:IfStatement[61219-61393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61250-61302]:Block[61250-61302]"
    }, {
      "left" : "inst = null;",
      "right" : "inst = null;",
      "info" : "ExpressionStatement[61272-61284]:ExpressionStatement[61272-61284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61308-61393]:Block[61308-61393]"
    }, {
      "left" : "inst = findValueInstantiator(ctxt, beanDesc);",
      "right" : "inst = findValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[61330-61375]:ExpressionStatement[61330-61375]"
    }, {
      "left" : "Class<?> kt = keyType.getRawClass();",
      "right" : "Class<?> kt = keyType.getRawClass();",
      "info" : "VariableDeclarationStatement[61410-61446]:VariableDeclarationStatement[61410-61446]"
    }, {
      "left" : "if (kt == null || !kt.isEnum())",
      "right" : "if (kt == null || !kt.isEnum())",
      "info" : "IfStatement[61463-61632]:IfStatement[61463-61632]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61495-61632]:Block[61495-61632]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Cannot construct EnumMap; generic (key) type not available\");",
      "right" : "throw new IllegalArgumentException(\"Cannot construct EnumMap; generic (key) type not available\");",
      "info" : "ThrowStatement[61517-61614]:ThrowStatement[61517-61614]"
    }, {
      "left" : "deser = new EnumMapDeserializer(type, inst, null,\n                        contentDeser, contentTypeDeser, null);",
      "right" : "deser = new EnumMapDeserializer(type, inst, null,\n                        contentDeser, contentTypeDeser, null);",
      "info" : "ExpressionStatement[61649-61761]:ExpressionStatement[61649-61761]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[62354-64649]:IfStatement[62354-64649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62373-64649]:Block[62373-64649]"
    }, {
      "left" : "if (type.isInterface() || type.isAbstract())",
      "right" : "if (type.isInterface() || type.isAbstract())",
      "info" : "IfStatement[62391-63664]:IfStatement[62391-63664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62436-63370]:Block[62436-63370]"
    }, {
      "left" : "@SuppressWarnings(\"rawtypes\")\n                    Class<? extends Map> fallback = _mapFallbacks.get(mapClass.getName());",
      "right" : "@SuppressWarnings(\"rawtypes\")\n                    Class<? extends Map> fallback = _mapFallbacks.get(mapClass.getName());",
      "info" : "VariableDeclarationStatement[62458-62578]:VariableDeclarationStatement[62458-62578]"
    }, {
      "left" : "if (fallback != null)",
      "right" : "if (fallback != null)",
      "info" : "IfStatement[62599-63352]:IfStatement[62599-63352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62621-62922]:Block[62621-62922]"
    }, {
      "left" : "mapClass = fallback;",
      "right" : "mapClass = fallback;",
      "info" : "ExpressionStatement[62647-62667]:ExpressionStatement[62647-62667]"
    }, {
      "left" : "type = (MapType) config.constructSpecializedType(type, mapClass);",
      "right" : "type = (MapType) config.constructSpecializedType(type, mapClass);",
      "info" : "ExpressionStatement[62692-62757]:ExpressionStatement[62692-62757]"
    }, {
      "left" : "beanDesc = config.introspectForCreation(type);",
      "right" : "beanDesc = config.introspectForCreation(type);",
      "info" : "ExpressionStatement[62854-62900]:ExpressionStatement[62854-62900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62928-63352]:Block[62928-63352]"
    }, {
      "left" : "if (type.getTypeHandler() == null)",
      "right" : "if (type.getTypeHandler() == null)",
      "info" : "IfStatement[63058-63246]:IfStatement[63058-63246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63093-63246]:Block[63093-63246]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Cannot find a deserializer for non-concrete Map type \"+type);",
      "right" : "throw new IllegalArgumentException(\"Cannot find a deserializer for non-concrete Map type \"+type);",
      "info" : "ThrowStatement[63123-63220]:ThrowStatement[63123-63220]"
    }, {
      "left" : "deser = AbstractDeserializer.constructForNonPOJO(beanDesc);",
      "right" : "deser = AbstractDeserializer.constructForNonPOJO(beanDesc);",
      "info" : "ExpressionStatement[63271-63330]:ExpressionStatement[63271-63330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63376-63664]:Block[63376-63664]"
    }, {
      "left" : "deser = JavaUtilCollectionsDeserializers.findForMap(ctxt, type);",
      "right" : "deser = JavaUtilCollectionsDeserializers.findForMap(ctxt, type);",
      "info" : "ExpressionStatement[63481-63545]:ExpressionStatement[63481-63545]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[63566-63646]:IfStatement[63566-63646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63585-63646]:Block[63585-63646]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[63611-63624]:ReturnStatement[63611-63624]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[63681-64635]:IfStatement[63681-64635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63700-64635]:Block[63700-64635]"
    }, {
      "left" : "ValueInstantiator inst = findValueInstantiator(ctxt, beanDesc);",
      "right" : "ValueInstantiator inst = findValueInstantiator(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[63722-63785]:VariableDeclarationStatement[63722-63785]"
    }, {
      "left" : "MapDeserializer md = new MapDeserializer(type, inst, keyDes, contentDeser, contentTypeDeser);",
      "right" : "MapDeserializer md = new MapDeserializer(type, inst, keyDes, contentDeser, contentTypeDeser);",
      "info" : "VariableDeclarationStatement[64139-64232]:VariableDeclarationStatement[64139-64232]"
    }, {
      "left" : "JsonIgnoreProperties.Value ignorals = config.getDefaultPropertyIgnorals(Map.class,\n                            beanDesc.getClassInfo());",
      "right" : "JsonIgnoreProperties.Value ignorals = config.getDefaultPropertyIgnorals(Map.class,\n                            beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[64253-64389]:VariableDeclarationStatement[64253-64389]"
    }, {
      "left" : "Set<String> ignored = (ignorals == null) ? null\n                            : ignorals.findIgnoredForDeserialization();",
      "right" : "Set<String> ignored = (ignorals == null) ? null\n                            : ignorals.findIgnoredForDeserialization();",
      "info" : "VariableDeclarationStatement[64410-64529]:VariableDeclarationStatement[64410-64529]"
    }, {
      "left" : "md.setIgnorableProperties(ignored);",
      "right" : "md.setIgnorableProperties(ignored);",
      "info" : "ExpressionStatement[64550-64585]:ExpressionStatement[64550-64585]"
    }, {
      "left" : "deser = md;",
      "right" : "deser = md;",
      "info" : "ExpressionStatement[64606-64617]:ExpressionStatement[64606-64617]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[64668-64912]:IfStatement[64668-64912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64715-64912]:Block[64715-64912]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[64729-64902]:EnhancedForStatement[64729-64902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64805-64902]:Block[64805-64902]"
    }, {
      "left" : "deser = mod.modifyMapDeserializer(config, type, beanDesc, deser);",
      "right" : "deser = mod.modifyMapDeserializer(config, type, beanDesc, deser);",
      "info" : "ExpressionStatement[64823-64888]:ExpressionStatement[64823-64888]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[64921-64934]:ReturnStatement[64921-64934]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[65038-65047]:MarkerAnnotation[65038-65047]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65052-65058]:Modifier[65052-65058]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[65059-65078]:ParameterizedType[65059-65078]"
    }, {
      "left" : "createMapLikeDeserializer",
      "right" : "createMapLikeDeserializer",
      "info" : "SimpleName[65079-65104]:SimpleName[65079-65104]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[65105-65132]:SingleVariableDeclaration[65105-65132]"
    }, {
      "left" : "MapLikeType type",
      "right" : "MapLikeType type",
      "info" : "SingleVariableDeclaration[65146-65162]:SingleVariableDeclaration[65146-65162]"
    }, {
      "left" : "final BeanDescription beanDesc",
      "right" : "final BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[65164-65194]:SingleVariableDeclaration[65164-65194]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[65211-65231]:SimpleType[65211-65231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65236-66913]:Block[65236-66913]"
    }, {
      "left" : "JavaType keyType = type.getKeyType();",
      "right" : "JavaType keyType = type.getKeyType();",
      "info" : "VariableDeclarationStatement[65246-65283]:VariableDeclarationStatement[65246-65283]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[65292-65337]:VariableDeclarationStatement[65292-65337]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[65346-65400]:VariableDeclarationStatement[65346-65400]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> contentDeser = (JsonDeserializer<Object>) contentType.getValueHandler();",
      "right" : "@SuppressWarnings(\"unchecked\")\n        JsonDeserializer<Object> contentDeser = (JsonDeserializer<Object>) contentType.getValueHandler();",
      "info" : "VariableDeclarationStatement[65491-65627]:VariableDeclarationStatement[65491-65627]"
    }, {
      "left" : "KeyDeserializer keyDes = (KeyDeserializer) keyType.getValueHandler();",
      "right" : "KeyDeserializer keyDes = (KeyDeserializer) keyType.getValueHandler();",
      "info" : "VariableDeclarationStatement[65716-65785]:VariableDeclarationStatement[65716-65785]"
    }, {
      "left" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "right" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "info" : "VariableDeclarationStatement[66097-66162]:VariableDeclarationStatement[66097-66162]"
    }, {
      "left" : "if (contentTypeDeser == null)",
      "right" : "if (contentTypeDeser == null)",
      "info" : "IfStatement[66225-66340]:IfStatement[66225-66340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66255-66340]:Block[66255-66340]"
    }, {
      "left" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "right" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "info" : "ExpressionStatement[66269-66330]:ExpressionStatement[66269-66330]"
    }, {
      "left" : "JsonDeserializer<?> deser = _findCustomMapLikeDeserializer(type, config,\n                beanDesc, keyDes, contentTypeDeser, contentDeser);",
      "right" : "JsonDeserializer<?> deser = _findCustomMapLikeDeserializer(type, config,\n                beanDesc, keyDes, contentTypeDeser, contentDeser);",
      "info" : "VariableDeclarationStatement[66349-66488]:VariableDeclarationStatement[66349-66488]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[66497-66885]:IfStatement[66497-66885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66516-66885]:Block[66516-66885]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[66611-66875]:IfStatement[66611-66875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66658-66875]:Block[66658-66875]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[66676-66861]:EnhancedForStatement[66676-66861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66752-66861]:Block[66752-66861]"
    }, {
      "left" : "deser = mod.modifyMapLikeDeserializer(config, type, beanDesc, deser);",
      "right" : "deser = mod.modifyMapLikeDeserializer(config, type, beanDesc, deser);",
      "info" : "ExpressionStatement[66774-66843]:ExpressionStatement[66774-66843]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[66894-66907]:ReturnStatement[66894-66907]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[67206-67215]:MarkerAnnotation[67206-67215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67220-67226]:Modifier[67220-67226]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[67227-67246]:ParameterizedType[67227-67246]"
    }, {
      "left" : "createEnumDeserializer",
      "right" : "createEnumDeserializer",
      "info" : "SimpleName[67247-67269]:SimpleName[67247-67269]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[67270-67297]:SingleVariableDeclaration[67270-67297]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[67311-67324]:SingleVariableDeclaration[67311-67324]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[67326-67350]:SingleVariableDeclaration[67326-67350]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[67367-67387]:SimpleType[67367-67387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67392-69528]:Block[67392-69528]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[67402-67456]:VariableDeclarationStatement[67402-67456]"
    }, {
      "left" : "final Class<?> enumClass = type.getRawClass();",
      "right" : "final Class<?> enumClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[67465-67511]:VariableDeclarationStatement[67465-67511]"
    }, {
      "left" : "JsonDeserializer<?> deser = _findCustomEnumDeserializer(enumClass, config, beanDesc);",
      "right" : "JsonDeserializer<?> deser = _findCustomEnumDeserializer(enumClass, config, beanDesc);",
      "info" : "VariableDeclarationStatement[67571-67656]:VariableDeclarationStatement[67571-67656]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[67666-69205]:IfStatement[67666-69205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67685-69205]:Block[67685-69205]"
    }, {
      "left" : "ValueInstantiator valueInstantiator = _constructDefaultValueInstantiator(ctxt, beanDesc);",
      "right" : "ValueInstantiator valueInstantiator = _constructDefaultValueInstantiator(ctxt, beanDesc);",
      "info" : "VariableDeclarationStatement[67699-67788]:VariableDeclarationStatement[67699-67788]"
    }, {
      "left" : "SettableBeanProperty[] creatorProps = (valueInstantiator == null) ? null\n                    : valueInstantiator.getFromObjectArguments(ctxt.getConfig());",
      "right" : "SettableBeanProperty[] creatorProps = (valueInstantiator == null) ? null\n                    : valueInstantiator.getFromObjectArguments(ctxt.getConfig());",
      "info" : "VariableDeclarationStatement[67801-67955]:VariableDeclarationStatement[67801-67955]"
    }, {
      "left" : "for (AnnotatedMethod factory : beanDesc.getFactoryMethods())",
      "right" : "for (AnnotatedMethod factory : beanDesc.getFactoryMethods())",
      "info" : "EnhancedForStatement[68032-68847]:EnhancedForStatement[68032-68847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68093-68847]:Block[68093-68847]"
    }, {
      "left" : "if (_hasCreatorAnnotation(ctxt, factory))",
      "right" : "if (_hasCreatorAnnotation(ctxt, factory))",
      "info" : "IfStatement[68111-68833]:IfStatement[68111-68833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68153-68833]:Block[68153-68833]"
    }, {
      "left" : "if (factory.getParameterCount() == 0)",
      "right" : "if (factory.getParameterCount() == 0)",
      "info" : "IfStatement[68175-68392]:IfStatement[68175-68392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68213-68392]:Block[68213-68392]"
    }, {
      "left" : "deser = EnumDeserializer.deserializerForNoArgsCreator(config, enumClass, factory);",
      "right" : "deser = EnumDeserializer.deserializerForNoArgsCreator(config, enumClass, factory);",
      "info" : "ExpressionStatement[68257-68339]:ExpressionStatement[68257-68339]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[68364-68370]:BreakStatement[68364-68370]"
    }, {
      "left" : "Class<?> returnType = factory.getRawReturnType();",
      "right" : "Class<?> returnType = factory.getRawReturnType();",
      "info" : "VariableDeclarationStatement[68413-68462]:VariableDeclarationStatement[68413-68462]"
    }, {
      "left" : "if (returnType.isAssignableFrom(enumClass))",
      "right" : "if (returnType.isAssignableFrom(enumClass))",
      "info" : "IfStatement[68583-68815]:IfStatement[68583-68815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68627-68815]:Block[68627-68815]"
    }, {
      "left" : "deser = EnumDeserializer.deserializerForCreator(config, enumClass, factory, valueInstantiator, creatorProps);",
      "right" : "deser = EnumDeserializer.deserializerForCreator(config, enumClass, factory, valueInstantiator, creatorProps);",
      "info" : "ExpressionStatement[68653-68762]:ExpressionStatement[68653-68762]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[68787-68793]:BreakStatement[68787-68793]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[68928-69195]:IfStatement[68928-69195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68947-69195]:Block[68947-69195]"
    }, {
      "left" : "deser = new EnumDeserializer(constructEnumResolver(enumClass,\n                        config, beanDesc.findJsonValueAccessor()),\n                        config.isEnabled(MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS));",
      "right" : "deser = new EnumDeserializer(constructEnumResolver(enumClass,\n                        config, beanDesc.findJsonValueAccessor()),\n                        config.isEnabled(MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS));",
      "info" : "ExpressionStatement[68965-69181]:ExpressionStatement[68965-69181]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[69255-69500]:IfStatement[69255-69500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69302-69500]:Block[69302-69500]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[69316-69490]:EnhancedForStatement[69316-69490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69392-69490]:Block[69392-69490]"
    }, {
      "left" : "deser = mod.modifyEnumDeserializer(config, type, beanDesc, deser);",
      "right" : "deser = mod.modifyEnumDeserializer(config, type, beanDesc, deser);",
      "info" : "ExpressionStatement[69410-69476]:ExpressionStatement[69410-69476]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[69509-69522]:ReturnStatement[69509-69522]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[69534-69543]:MarkerAnnotation[69534-69543]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69548-69554]:Modifier[69548-69554]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[69555-69574]:ParameterizedType[69555-69574]"
    }, {
      "left" : "createTreeDeserializer",
      "right" : "createTreeDeserializer",
      "info" : "SimpleName[69575-69597]:SimpleName[69575-69597]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[69598-69626]:SingleVariableDeclaration[69598-69626]"
    }, {
      "left" : "JavaType nodeType",
      "right" : "JavaType nodeType",
      "info" : "SingleVariableDeclaration[69640-69657]:SingleVariableDeclaration[69640-69657]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[69659-69683]:SingleVariableDeclaration[69659-69683]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[69700-69720]:SimpleType[69700-69720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69725-70166]:Block[69725-70166]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")\n        Class<? extends JsonNode> nodeClass = (Class<? extends JsonNode>) nodeType.getRawClass();",
      "right" : "@SuppressWarnings(\"unchecked\")\n        Class<? extends JsonNode> nodeClass = (Class<? extends JsonNode>) nodeType.getRawClass();",
      "info" : "VariableDeclarationStatement[69735-69863]:VariableDeclarationStatement[69735-69863]"
    }, {
      "left" : "JsonDeserializer<?> custom = _findCustomTreeNodeDeserializer(nodeClass, config,\n                beanDesc);",
      "right" : "JsonDeserializer<?> custom = _findCustomTreeNodeDeserializer(nodeClass, config,\n                beanDesc);",
      "info" : "VariableDeclarationStatement[69923-70029]:VariableDeclarationStatement[69923-70029]"
    }, {
      "left" : "if (custom != null)",
      "right" : "if (custom != null)",
      "info" : "IfStatement[70038-70096]:IfStatement[70038-70096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70058-70096]:Block[70058-70096]"
    }, {
      "left" : "return custom;",
      "right" : "return custom;",
      "info" : "ReturnStatement[70072-70086]:ReturnStatement[70072-70086]"
    }, {
      "left" : "return JsonNodeDeserializer.getDeserializer(nodeClass);",
      "right" : "return JsonNodeDeserializer.getDeserializer(nodeClass);",
      "info" : "ReturnStatement[70105-70160]:ReturnStatement[70105-70160]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[70172-70181]:MarkerAnnotation[70172-70181]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70186-70192]:Modifier[70186-70192]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[70193-70212]:ParameterizedType[70193-70212]"
    }, {
      "left" : "createReferenceDeserializer",
      "right" : "createReferenceDeserializer",
      "info" : "SimpleName[70213-70240]:SimpleName[70213-70240]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[70241-70268]:SingleVariableDeclaration[70241-70268]"
    }, {
      "left" : "ReferenceType type",
      "right" : "ReferenceType type",
      "info" : "SingleVariableDeclaration[70282-70300]:SingleVariableDeclaration[70282-70300]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[70302-70326]:SingleVariableDeclaration[70302-70326]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[70343-70363]:SimpleType[70343-70363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70368-72366]:Block[70368-72366]"
    }, {
      "left" : "JavaType contentType = type.getContentType();",
      "right" : "JavaType contentType = type.getContentType();",
      "info" : "VariableDeclarationStatement[70378-70423]:VariableDeclarationStatement[70378-70423]"
    }, {
      "left" : "JsonDeserializer<Object> contentDeser = contentType.getValueHandler();",
      "right" : "JsonDeserializer<Object> contentDeser = contentType.getValueHandler();",
      "info" : "VariableDeclarationStatement[70502-70572]:VariableDeclarationStatement[70502-70572]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[70581-70635]:VariableDeclarationStatement[70581-70635]"
    }, {
      "left" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "right" : "TypeDeserializer contentTypeDeser = contentType.getTypeHandler();",
      "info" : "VariableDeclarationStatement[70746-70811]:VariableDeclarationStatement[70746-70811]"
    }, {
      "left" : "if (contentTypeDeser == null)",
      "right" : "if (contentTypeDeser == null)",
      "info" : "IfStatement[70820-70970]:IfStatement[70820-70970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70850-70970]:Block[70850-70970]"
    }, {
      "left" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "right" : "contentTypeDeser = findTypeDeserializer(config, contentType);",
      "info" : "ExpressionStatement[70899-70960]:ExpressionStatement[70899-70960]"
    }, {
      "left" : "JsonDeserializer<?> deser = _findCustomReferenceDeserializer(type, config, beanDesc,\n                contentTypeDeser, contentDeser);",
      "right" : "JsonDeserializer<?> deser = _findCustomReferenceDeserializer(type, config, beanDesc,\n                contentTypeDeser, contentDeser);",
      "info" : "VariableDeclarationStatement[70979-71112]:VariableDeclarationStatement[70979-71112]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[71122-71983]:IfStatement[71122-71983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71141-71983]:Block[71141-71983]"
    }, {
      "left" : "if (type.isTypeOrSubTypeOf(AtomicReference.class))",
      "right" : "if (type.isTypeOrSubTypeOf(AtomicReference.class))",
      "info" : "IfStatement[71259-71973]:IfStatement[71259-71973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71310-71973]:Block[71310-71973]"
    }, {
      "left" : "Class<?> rawType = type.getRawClass();",
      "right" : "Class<?> rawType = type.getRawClass();",
      "info" : "VariableDeclarationStatement[71328-71366]:VariableDeclarationStatement[71328-71366]"
    }, {
      "left" : "ValueInstantiator inst;",
      "right" : "ValueInstantiator inst;",
      "info" : "VariableDeclarationStatement[71383-71406]:VariableDeclarationStatement[71383-71406]"
    }, {
      "left" : "if (rawType == AtomicReference.class)",
      "right" : "if (rawType == AtomicReference.class)",
      "info" : "IfStatement[71423-71859]:IfStatement[71423-71859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71461-71513]:Block[71461-71513]"
    }, {
      "left" : "inst = null;",
      "right" : "inst = null;",
      "info" : "ExpressionStatement[71483-71495]:ExpressionStatement[71483-71495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71519-71859]:Block[71519-71859]"
    }, {
      "left" : "inst = findValueInstantiator(ctxt, beanDesc);",
      "right" : "inst = findValueInstantiator(ctxt, beanDesc);",
      "info" : "ExpressionStatement[71796-71841]:ExpressionStatement[71796-71841]"
    }, {
      "left" : "return new AtomicReferenceDeserializer(type, inst, contentTypeDeser, contentDeser);",
      "right" : "return new AtomicReferenceDeserializer(type, inst, contentTypeDeser, contentDeser);",
      "info" : "ReturnStatement[71876-71959]:ReturnStatement[71876-71959]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[71992-72338]:IfStatement[71992-72338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72011-72338]:Block[72011-72338]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[72062-72328]:IfStatement[72062-72328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72109-72328]:Block[72109-72328]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[72127-72314]:EnhancedForStatement[72127-72314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72203-72314]:Block[72203-72314]"
    }, {
      "left" : "deser = mod.modifyReferenceDeserializer(config, type, beanDesc, deser);",
      "right" : "deser = mod.modifyReferenceDeserializer(config, type, beanDesc, deser);",
      "info" : "ExpressionStatement[72225-72296]:ExpressionStatement[72225-72296]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[72347-72360]:ReturnStatement[72347-72360]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[74561-74570]:Modifier[74576-74585]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[74571-74590]:ParameterizedType[74586-74605]"
    }, {
      "left" : "findOptionalStdDeserializer",
      "right" : "findOptionalStdDeserializer",
      "info" : "SimpleName[74591-74618]:SimpleName[74606-74633]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[74619-74646]:SingleVariableDeclaration[74634-74661]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[74660-74673]:SingleVariableDeclaration[74675-74688]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[74675-74699]:SingleVariableDeclaration[74690-74714]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[74716-74736]:SimpleType[74731-74751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74741-74847]:Block[74756-74862]"
    }, {
      "left" : "return OptionalHandlerFactory.instance.findDeserializer(type, ctxt.getConfig(), beanDesc);",
      "right" : "return OptionalHandlerFactory.instance.findDeserializer(type, ctxt.getConfig(), beanDesc);",
      "info" : "ReturnStatement[74751-74841]:ReturnStatement[74766-74856]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[75070-75079]:MarkerAnnotation[75085-75094]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75084-75090]:Modifier[75099-75105]"
    }, {
      "left" : "KeyDeserializer",
      "right" : "KeyDeserializer",
      "info" : "SimpleType[75091-75106]:SimpleType[75106-75121]"
    }, {
      "left" : "createKeyDeserializer",
      "right" : "createKeyDeserializer",
      "info" : "SimpleName[75107-75128]:SimpleName[75122-75143]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[75129-75156]:SingleVariableDeclaration[75144-75171]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[75170-75183]:SingleVariableDeclaration[75185-75198]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[75200-75220]:SimpleType[75215-75235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75225-76405]:Block[75240-76420]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[75235-75289]:VariableDeclarationStatement[75250-75304]"
    }, {
      "left" : "KeyDeserializer deser = null;",
      "right" : "KeyDeserializer deser = null;",
      "info" : "VariableDeclarationStatement[75298-75327]:VariableDeclarationStatement[75313-75342]"
    }, {
      "left" : "if (_factoryConfig.hasKeyDeserializers())",
      "right" : "if (_factoryConfig.hasKeyDeserializers())",
      "info" : "IfStatement[75336-75726]:IfStatement[75351-75741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75378-75726]:Block[75393-75741]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());",
      "right" : "BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());",
      "info" : "VariableDeclarationStatement[75392-75473]:VariableDeclarationStatement[75407-75488]"
    }, {
      "left" : "for (KeyDeserializers d  : _factoryConfig.keyDeserializers())",
      "right" : "for (KeyDeserializers d  : _factoryConfig.keyDeserializers())",
      "info" : "EnhancedForStatement[75486-75716]:EnhancedForStatement[75501-75731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75548-75716]:Block[75563-75731]"
    }, {
      "left" : "deser = d.findKeyDeserializer(type, config, beanDesc);",
      "right" : "deser = d.findKeyDeserializer(type, config, beanDesc);",
      "info" : "ExpressionStatement[75566-75620]:ExpressionStatement[75581-75635]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[75637-75702]:IfStatement[75652-75717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75656-75702]:Block[75671-75717]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[75678-75684]:BreakStatement[75693-75699]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[75783-76039]:IfStatement[75798-76054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75802-76039]:Block[75817-76054]"
    }, {
      "left" : "if (type.isEnumType())",
      "right" : "if (type.isEnumType())",
      "info" : "IfStatement[75816-76029]:IfStatement[75831-76044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75839-75918]:Block[75854-75933]"
    }, {
      "left" : "deser = _createEnumKeyDeserializer(ctxt, type);",
      "right" : "deser = _createEnumKeyDeserializer(ctxt, type);",
      "info" : "ExpressionStatement[75857-75904]:ExpressionStatement[75872-75919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75924-76029]:Block[75939-76044]"
    }, {
      "left" : "deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);",
      "right" : "deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);",
      "info" : "ExpressionStatement[75942-76015]:ExpressionStatement[75957-76030]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[76084-76377]:IfStatement[76099-76392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76103-76377]:Block[76118-76392]"
    }, {
      "left" : "if (_factoryConfig.hasDeserializerModifiers())",
      "right" : "if (_factoryConfig.hasDeserializerModifiers())",
      "info" : "IfStatement[76117-76367]:IfStatement[76132-76382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76164-76367]:Block[76179-76382]"
    }, {
      "left" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "right" : "for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers())",
      "info" : "EnhancedForStatement[76182-76353]:EnhancedForStatement[76197-76368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76258-76353]:Block[76273-76368]"
    }, {
      "left" : "deser = mod.modifyKeyDeserializer(config, type, deser);",
      "right" : "deser = mod.modifyKeyDeserializer(config, type, deser);",
      "info" : "ExpressionStatement[76280-76335]:ExpressionStatement[76295-76350]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[76386-76399]:ReturnStatement[76401-76414]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[76411-76418]:Modifier[76426-76433]"
    }, {
      "left" : "KeyDeserializer",
      "right" : "KeyDeserializer",
      "info" : "SimpleType[76419-76434]:SimpleType[76434-76449]"
    }, {
      "left" : "_createEnumKeyDeserializer",
      "right" : "_createEnumKeyDeserializer",
      "info" : "SimpleName[76435-76461]:SimpleName[76450-76476]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[76462-76489]:SingleVariableDeclaration[76477-76504]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[76503-76516]:SingleVariableDeclaration[76518-76531]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[76533-76553]:SimpleType[76548-76568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76558-79347]:Block[76573-79362]"
    }, {
      "left" : "final DeserializationConfig config = ctxt.getConfig();",
      "right" : "final DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[76568-76622]:VariableDeclarationStatement[76583-76637]"
    }, {
      "left" : "Class<?> enumClass = type.getRawClass();",
      "right" : "Class<?> enumClass = type.getRawClass();",
      "info" : "VariableDeclarationStatement[76631-76671]:VariableDeclarationStatement[76646-76686]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspect(type);",
      "right" : "BeanDescription beanDesc = config.introspect(type);",
      "info" : "VariableDeclarationStatement[76681-76732]:VariableDeclarationStatement[76696-76747]"
    }, {
      "left" : "KeyDeserializer des = findKeyDeserializerFromAnnotation(ctxt, beanDesc.getClassInfo());",
      "right" : "KeyDeserializer des = findKeyDeserializerFromAnnotation(ctxt, beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[76813-76900]:VariableDeclarationStatement[76828-76915]"
    }, {
      "left" : "if (des != null)",
      "right" : "if (des != null)",
      "info" : "IfStatement[76909-77607]:IfStatement[76924-77622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76926-76961]:Block[76941-76976]"
    }, {
      "left" : "return des;",
      "right" : "return des;",
      "info" : "ReturnStatement[76940-76951]:ReturnStatement[76955-76966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76967-77607]:Block[76982-77622]"
    }, {
      "left" : "JsonDeserializer<?> custom = _findCustomEnumDeserializer(enumClass, config, beanDesc);",
      "right" : "JsonDeserializer<?> custom = _findCustomEnumDeserializer(enumClass, config, beanDesc);",
      "info" : "VariableDeclarationStatement[77085-77171]:VariableDeclarationStatement[77100-77186]"
    }, {
      "left" : "if (custom != null)",
      "right" : "if (custom != null)",
      "info" : "IfStatement[77184-77320]:IfStatement[77199-77335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77204-77320]:Block[77219-77335]"
    }, {
      "left" : "return StdKeyDeserializers.constructDelegatingKeyDeserializer(config, type, custom);",
      "right" : "return StdKeyDeserializers.constructDelegatingKeyDeserializer(config, type, custom);",
      "info" : "ReturnStatement[77222-77306]:ReturnStatement[77237-77321]"
    }, {
      "left" : "JsonDeserializer<?> valueDesForKey = findDeserializerFromAnnotation(ctxt, beanDesc.getClassInfo());",
      "right" : "JsonDeserializer<?> valueDesForKey = findDeserializerFromAnnotation(ctxt, beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[77333-77432]:VariableDeclarationStatement[77348-77447]"
    }, {
      "left" : "if (valueDesForKey != null)",
      "right" : "if (valueDesForKey != null)",
      "info" : "IfStatement[77445-77597]:IfStatement[77460-77612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77473-77597]:Block[77488-77612]"
    }, {
      "left" : "return StdKeyDeserializers.constructDelegatingKeyDeserializer(config, type, valueDesForKey);",
      "right" : "return StdKeyDeserializers.constructDelegatingKeyDeserializer(config, type, valueDesForKey);",
      "info" : "ReturnStatement[77491-77583]:ReturnStatement[77506-77598]"
    }, {
      "left" : "EnumResolver enumRes = constructEnumResolver(enumClass, config, beanDesc.findJsonValueAccessor());",
      "right" : "EnumResolver enumRes = constructEnumResolver(enumClass, config, beanDesc.findJsonValueAccessor());",
      "info" : "VariableDeclarationStatement[77616-77714]:VariableDeclarationStatement[77631-77729]"
    }, {
      "left" : "for (AnnotatedMethod factory : beanDesc.getFactoryMethods())",
      "right" : "for (AnnotatedMethod factory : beanDesc.getFactoryMethods())",
      "info" : "EnhancedForStatement[77783-79208]:EnhancedForStatement[77798-79223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77844-79208]:Block[77859-79223]"
    }, {
      "left" : "if (_hasCreatorAnnotation(ctxt, factory))",
      "right" : "if (_hasCreatorAnnotation(ctxt, factory))",
      "info" : "IfStatement[77858-79198]:IfStatement[77873-79213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77900-79198]:Block[77915-79213]"
    }, {
      "left" : "int argCount = factory.getParameterCount();",
      "right" : "int argCount = factory.getParameterCount();",
      "info" : "VariableDeclarationStatement[77918-77961]:VariableDeclarationStatement[77933-77976]"
    }, {
      "left" : "if (argCount == 1)",
      "right" : "if (argCount == 1)",
      "info" : "IfStatement[77978-79004]:IfStatement[77993-79019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77997-79004]:Block[78012-79019]"
    }, {
      "left" : "Class<?> returnType = factory.getRawReturnType();",
      "right" : "Class<?> returnType = factory.getRawReturnType();",
      "info" : "VariableDeclarationStatement[78019-78068]:VariableDeclarationStatement[78034-78083]"
    }, {
      "left" : "if (returnType.isAssignableFrom(enumClass))",
      "right" : "if (returnType.isAssignableFrom(enumClass))",
      "info" : "IfStatement[78189-78986]:IfStatement[78204-79001]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78233-78986]:Block[78248-79001]"
    }, {
      "left" : "if (factory.getRawParameterType(0) != String.class)",
      "right" : "if (factory.getRawParameterType(0) != String.class)",
      "info" : "IfStatement[78358-78594]:IfStatement[78373-78609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78410-78594]:Block[78425-78609]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Parameter #0 type for factory method (\"+factory+\") not suitable, must be java.lang.String\");",
      "right" : "throw new IllegalArgumentException(\"Parameter #0 type for factory method (\"+factory+\") not suitable, must be java.lang.String\");",
      "info" : "ThrowStatement[78440-78568]:ThrowStatement[78455-78583]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[78619-78865]:IfStatement[78634-78880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78660-78865]:Block[78675-78880]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(factory.getMember(),\n                                    ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ClassUtil.checkAndFixAccess(factory.getMember(),\n                                    ctxt.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[78690-78839]:ExpressionStatement[78705-78854]"
    }, {
      "left" : "return StdKeyDeserializers.constructEnumKeyDeserializer(enumRes, factory);",
      "right" : "return StdKeyDeserializers.constructEnumKeyDeserializer(enumRes, factory);",
      "info" : "ReturnStatement[78890-78964]:ReturnStatement[78905-78979]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Unsuitable method (\"+factory+\") decorated with @JsonCreator (for Enum type \"\n                        +enumClass.getName()+\")\");",
      "right" : "throw new IllegalArgumentException(\"Unsuitable method (\"+factory+\") decorated with @JsonCreator (for Enum type \"\n                        +enumClass.getName()+\")\");",
      "info" : "ThrowStatement[79021-79184]:ThrowStatement[79036-79199]"
    }, {
      "left" : "return StdKeyDeserializers.constructEnumKeyDeserializer(enumRes);",
      "right" : "return StdKeyDeserializers.constructEnumKeyDeserializer(enumRes);",
      "info" : "ReturnStatement[79276-79341]:ReturnStatement[79291-79356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80180-80186]:Modifier[80195-80201]"
    }, {
      "left" : "TypeDeserializer",
      "right" : "TypeDeserializer",
      "info" : "SimpleType[80187-80203]:SimpleType[80202-80218]"
    }, {
      "left" : "findPropertyTypeDeserializer",
      "right" : "findPropertyTypeDeserializer",
      "info" : "SimpleName[80204-80232]:SimpleName[80219-80247]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[80233-80261]:SingleVariableDeclaration[80248-80276]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[80275-80292]:SingleVariableDeclaration[80290-80307]"
    }, {
      "left" : "AnnotatedMember annotated",
      "right" : "AnnotatedMember annotated",
      "info" : "SingleVariableDeclaration[80294-80319]:SingleVariableDeclaration[80309-80334]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[80336-80356]:SimpleType[80351-80371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80361-80990]:Block[80376-81005]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[80371-80434]:VariableDeclarationStatement[80386-80449]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findPropertyTypeResolver(config, annotated, baseType);",
      "right" : "TypeResolverBuilder<?> b = ai.findPropertyTypeResolver(config, annotated, baseType);",
      "info" : "VariableDeclarationStatement[80443-80527]:VariableDeclarationStatement[80458-80542]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[80614-80699]:IfStatement[80629-80714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80629-80699]:Block[80644-80714]"
    }, {
      "left" : "return findTypeDeserializer(config, baseType);",
      "right" : "return findTypeDeserializer(config, baseType);",
      "info" : "ReturnStatement[80643-80689]:ReturnStatement[80658-80704]"
    }, {
      "left" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByTypeId(\n                config, annotated, baseType);",
      "right" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByTypeId(\n                config, annotated, baseType);",
      "info" : "VariableDeclarationStatement[80775-80916]:VariableDeclarationStatement[80790-80931]"
    }, {
      "left" : "return b.buildTypeDeserializer(config, baseType, subtypes);",
      "right" : "return b.buildTypeDeserializer(config, baseType, subtypes);",
      "info" : "ReturnStatement[80925-80984]:ReturnStatement[80940-80999]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[81600-81606]:Modifier[81615-81621]"
    }, {
      "left" : "TypeDeserializer",
      "right" : "TypeDeserializer",
      "info" : "SimpleType[81607-81623]:SimpleType[81622-81638]"
    }, {
      "left" : "findPropertyContentTypeDeserializer",
      "right" : "findPropertyContentTypeDeserializer",
      "info" : "SimpleName[81624-81659]:SimpleName[81639-81674]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[81660-81688]:SingleVariableDeclaration[81675-81703]"
    }, {
      "left" : "JavaType containerType",
      "right" : "JavaType containerType",
      "info" : "SingleVariableDeclaration[81702-81724]:SingleVariableDeclaration[81717-81739]"
    }, {
      "left" : "AnnotatedMember propertyEntity",
      "right" : "AnnotatedMember propertyEntity",
      "info" : "SingleVariableDeclaration[81726-81756]:SingleVariableDeclaration[81741-81771]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[81773-81793]:SimpleType[81788-81808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81798-82515]:Block[81813-82530]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[81808-81871]:VariableDeclarationStatement[81823-81886]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findPropertyContentTypeResolver(config, propertyEntity, containerType);",
      "right" : "TypeResolverBuilder<?> b = ai.findPropertyContentTypeResolver(config, propertyEntity, containerType);",
      "info" : "VariableDeclarationStatement[81880-81981]:VariableDeclarationStatement[81895-81996]"
    }, {
      "left" : "JavaType contentType = containerType.getContentType();",
      "right" : "JavaType contentType = containerType.getContentType();",
      "info" : "VariableDeclarationStatement[81998-82052]:VariableDeclarationStatement[82013-82067]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[82125-82213]:IfStatement[82140-82228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82140-82213]:Block[82155-82228]"
    }, {
      "left" : "return findTypeDeserializer(config, contentType);",
      "right" : "return findTypeDeserializer(config, contentType);",
      "info" : "ReturnStatement[82154-82203]:ReturnStatement[82169-82218]"
    }, {
      "left" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByTypeId(\n                config, propertyEntity, contentType);",
      "right" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypesByTypeId(\n                config, propertyEntity, contentType);",
      "info" : "VariableDeclarationStatement[82289-82438]:VariableDeclarationStatement[82304-82453]"
    }, {
      "left" : "return b.buildTypeDeserializer(config, contentType, subtypes);",
      "right" : "return b.buildTypeDeserializer(config, contentType, subtypes);",
      "info" : "ReturnStatement[82447-82509]:ReturnStatement[82462-82524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82739-82745]:Modifier[82754-82760]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[82746-82765]:ParameterizedType[82761-82780]"
    }, {
      "left" : "findDefaultDeserializer",
      "right" : "findDefaultDeserializer",
      "info" : "SimpleName[82766-82789]:SimpleName[82781-82804]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[82790-82817]:SingleVariableDeclaration[82805-82832]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[82831-82844]:SingleVariableDeclaration[82846-82859]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[82846-82870]:SingleVariableDeclaration[82861-82885]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[82887-82907]:SimpleType[82902-82922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82912-85750]:Block[82927-85765]"
    }, {
      "left" : "Class<?> rawType = type.getRawClass();",
      "right" : "Class<?> rawType = type.getRawClass();",
      "info" : "VariableDeclarationStatement[82922-82960]:VariableDeclarationStatement[82937-82975]"
    }, {
      "left" : "if (rawType == CLASS_OBJECT)",
      "right" : "if (rawType == CLASS_OBJECT)",
      "info" : "IfStatement[83020-83570]:IfStatement[83035-83585]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83049-83570]:Block[83064-83585]"
    }, {
      "left" : "DeserializationConfig config = ctxt.getConfig();",
      "right" : "DeserializationConfig config = ctxt.getConfig();",
      "info" : "VariableDeclarationStatement[83165-83213]:VariableDeclarationStatement[83180-83228]"
    }, {
      "left" : "JavaType lt, mt;",
      "right" : "JavaType lt, mt;",
      "info" : "VariableDeclarationStatement[83226-83242]:VariableDeclarationStatement[83241-83257]"
    }, {
      "left" : "if (_factoryConfig.hasAbstractTypeResolvers())",
      "right" : "if (_factoryConfig.hasAbstractTypeResolvers())",
      "info" : "IfStatement[83268-83502]:IfStatement[83283-83517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83315-83449]:Block[83330-83464]"
    }, {
      "left" : "lt = _findRemappedType(config, List.class);",
      "right" : "lt = _findRemappedType(config, List.class);",
      "info" : "ExpressionStatement[83333-83376]:ExpressionStatement[83348-83391]"
    }, {
      "left" : "mt = _findRemappedType(config, Map.class);",
      "right" : "mt = _findRemappedType(config, Map.class);",
      "info" : "ExpressionStatement[83393-83435]:ExpressionStatement[83408-83450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83455-83502]:Block[83470-83517]"
    }, {
      "left" : "lt = mt = null;",
      "right" : "lt = mt = null;",
      "info" : "ExpressionStatement[83473-83488]:ExpressionStatement[83488-83503]"
    }, {
      "left" : "return new UntypedObjectDeserializer(lt, mt);",
      "right" : "return new UntypedObjectDeserializer(lt, mt);",
      "info" : "ReturnStatement[83515-83560]:ReturnStatement[83530-83575]"
    }, {
      "left" : "if (rawType == CLASS_STRING || rawType == CLASS_CHAR_SEQUENCE)",
      "right" : "if (rawType == CLASS_STRING || rawType == CLASS_CHAR_SEQUENCE)",
      "info" : "IfStatement[83579-83701]:IfStatement[83594-83716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83642-83701]:Block[83657-83716]"
    }, {
      "left" : "return StringDeserializer.instance;",
      "right" : "return StringDeserializer.instance;",
      "info" : "ReturnStatement[83656-83691]:ReturnStatement[83671-83706]"
    }, {
      "left" : "if (rawType == CLASS_ITERABLE)",
      "right" : "if (rawType == CLASS_ITERABLE)",
      "info" : "IfStatement[83710-84286]:IfStatement[83725-84301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83741-84286]:Block[83756-84301]"
    }, {
      "left" : "TypeFactory tf = ctxt.getTypeFactory();",
      "right" : "TypeFactory tf = ctxt.getTypeFactory();",
      "info" : "VariableDeclarationStatement[83833-83872]:VariableDeclarationStatement[83848-83887]"
    }, {
      "left" : "JavaType[] tps = tf.findTypeParameters(type, CLASS_ITERABLE);",
      "right" : "JavaType[] tps = tf.findTypeParameters(type, CLASS_ITERABLE);",
      "info" : "VariableDeclarationStatement[83885-83946]:VariableDeclarationStatement[83900-83961]"
    }, {
      "left" : "JavaType elemType = (tps == null || tps.length != 1) ? TypeFactory.unknownType() : tps[0];",
      "right" : "JavaType elemType = (tps == null || tps.length != 1) ? TypeFactory.unknownType() : tps[0];",
      "info" : "VariableDeclarationStatement[83959-84049]:VariableDeclarationStatement[83974-84064]"
    }, {
      "left" : "CollectionType ct = tf.constructCollectionType(Collection.class, elemType);",
      "right" : "CollectionType ct = tf.constructCollectionType(Collection.class, elemType);",
      "info" : "VariableDeclarationStatement[84062-84137]:VariableDeclarationStatement[84077-84152]"
    }, {
      "left" : "return createCollectionDeserializer(ctxt, ct, beanDesc);",
      "right" : "return createCollectionDeserializer(ctxt, ct, beanDesc);",
      "info" : "ReturnStatement[84220-84276]:ReturnStatement[84235-84291]"
    }, {
      "left" : "if (rawType == CLASS_MAP_ENTRY)",
      "right" : "if (rawType == CLASS_MAP_ENTRY)",
      "info" : "IfStatement[84295-84941]:IfStatement[84310-84956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84327-84941]:Block[84342-84956]"
    }, {
      "left" : "JavaType kt = type.containedTypeOrUnknown(0);",
      "right" : "JavaType kt = type.containedTypeOrUnknown(0);",
      "info" : "VariableDeclarationStatement[84417-84462]:VariableDeclarationStatement[84432-84477]"
    }, {
      "left" : "JavaType vt = type.containedTypeOrUnknown(1);",
      "right" : "JavaType vt = type.containedTypeOrUnknown(1);",
      "info" : "VariableDeclarationStatement[84475-84520]:VariableDeclarationStatement[84490-84535]"
    }, {
      "left" : "TypeDeserializer vts = (TypeDeserializer) vt.getTypeHandler();",
      "right" : "TypeDeserializer vts = (TypeDeserializer) vt.getTypeHandler();",
      "info" : "VariableDeclarationStatement[84533-84595]:VariableDeclarationStatement[84548-84610]"
    }, {
      "left" : "if (vts == null)",
      "right" : "if (vts == null)",
      "info" : "IfStatement[84608-84706]:IfStatement[84623-84721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84625-84706]:Block[84640-84721]"
    }, {
      "left" : "vts = findTypeDeserializer(ctxt.getConfig(), vt);",
      "right" : "vts = findTypeDeserializer(ctxt.getConfig(), vt);",
      "info" : "ExpressionStatement[84643-84692]:ExpressionStatement[84658-84707]"
    }, {
      "left" : "JsonDeserializer<Object> valueDeser = vt.getValueHandler();",
      "right" : "JsonDeserializer<Object> valueDeser = vt.getValueHandler();",
      "info" : "VariableDeclarationStatement[84719-84778]:VariableDeclarationStatement[84734-84793]"
    }, {
      "left" : "KeyDeserializer keyDes = (KeyDeserializer) kt.getValueHandler();",
      "right" : "KeyDeserializer keyDes = (KeyDeserializer) kt.getValueHandler();",
      "info" : "VariableDeclarationStatement[84791-84855]:VariableDeclarationStatement[84806-84870]"
    }, {
      "left" : "return new MapEntryDeserializer(type, keyDes, valueDeser, vts);",
      "right" : "return new MapEntryDeserializer(type, keyDes, valueDeser, vts);",
      "info" : "ReturnStatement[84868-84931]:ReturnStatement[84883-84946]"
    }, {
      "left" : "String clsName = rawType.getName();",
      "right" : "String clsName = rawType.getName();",
      "info" : "VariableDeclarationStatement[84950-84985]:VariableDeclarationStatement[84965-85000]"
    }, {
      "left" : "if (rawType.isPrimitive() || clsName.startsWith(\"java.\"))",
      "right" : "if (rawType.isPrimitive() || clsName.startsWith(\"java.\"))",
      "info" : "IfStatement[84994-85388]:IfStatement[85009-85403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85052-85388]:Block[85067-85403]"
    }, {
      "left" : "JsonDeserializer<?> deser = NumberDeserializers.find(rawType, clsName);",
      "right" : "JsonDeserializer<?> deser = NumberDeserializers.find(rawType, clsName);",
      "info" : "VariableDeclarationStatement[85117-85188]:VariableDeclarationStatement[85132-85203]"
    }, {
      "left" : "if (deser == null)",
      "right" : "if (deser == null)",
      "info" : "IfStatement[85201-85301]:IfStatement[85216-85316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85220-85301]:Block[85235-85316]"
    }, {
      "left" : "deser = DateDeserializers.find(rawType, clsName);",
      "right" : "deser = DateDeserializers.find(rawType, clsName);",
      "info" : "ExpressionStatement[85238-85287]:ExpressionStatement[85253-85302]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[85314-85378]:IfStatement[85329-85393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85333-85378]:Block[85348-85393]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[85351-85364]:ReturnStatement[85366-85379]"
    }, {
      "left" : "if (rawType == TokenBuffer.class)",
      "right" : "if (rawType == TokenBuffer.class)",
      "info" : "IfStatement[85441-85536]:IfStatement[85456-85551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85475-85536]:Block[85490-85551]"
    }, {
      "left" : "return new TokenBufferDeserializer();",
      "right" : "return new TokenBufferDeserializer();",
      "info" : "ReturnStatement[85489-85526]:ReturnStatement[85504-85541]"
    }, {
      "left" : "JsonDeserializer<?> deser = findOptionalStdDeserializer(ctxt, type, beanDesc);",
      "right" : "JsonDeserializer<?> deser = findOptionalStdDeserializer(ctxt, type, beanDesc);",
      "info" : "VariableDeclarationStatement[85545-85623]:VariableDeclarationStatement[85560-85638]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[85632-85688]:IfStatement[85647-85703]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85651-85688]:Block[85666-85703]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[85665-85678]:ReturnStatement[85680-85693]"
    }, {
      "left" : "return JdkDeserializers.find(rawType, clsName);",
      "right" : "return JdkDeserializers.find(rawType, clsName);",
      "info" : "ReturnStatement[85697-85744]:ReturnStatement[85712-85759]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[85756-85765]:Modifier[85771-85780]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[85766-85774]:SimpleType[85781-85789]"
    }, {
      "left" : "_findRemappedType",
      "right" : "_findRemappedType",
      "info" : "SimpleName[85775-85792]:SimpleName[85790-85807]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[85793-85821]:SingleVariableDeclaration[85808-85836]"
    }, {
      "left" : "Class<?> rawType",
      "right" : "Class<?> rawType",
      "info" : "SingleVariableDeclaration[85823-85839]:SingleVariableDeclaration[85838-85854]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[85848-85868]:SimpleType[85863-85883]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85869-86030]:Block[85884-86045]"
    }, {
      "left" : "JavaType type = mapAbstractType(config, config.constructType(rawType));",
      "right" : "JavaType type = mapAbstractType(config, config.constructType(rawType));",
      "info" : "VariableDeclarationStatement[85879-85950]:VariableDeclarationStatement[85894-85965]"
    }, {
      "left" : "return (type == null || type.hasRawClass(rawType)) ? null : type;",
      "right" : "return (type == null || type.hasRawClass(rawType)) ? null : type;",
      "info" : "ReturnStatement[85959-86024]:ReturnStatement[85974-86039]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[86232-86241]:Modifier[86247-86256]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[86242-86261]:ParameterizedType[86257-86276]"
    }, {
      "left" : "_findCustomTreeNodeDeserializer",
      "right" : "_findCustomTreeNodeDeserializer",
      "info" : "SimpleName[86262-86293]:SimpleName[86277-86308]"
    }, {
      "left" : "Class<? extends JsonNode> type",
      "right" : "Class<? extends JsonNode> type",
      "info" : "SingleVariableDeclaration[86294-86324]:SingleVariableDeclaration[86309-86339]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[86338-86366]:SingleVariableDeclaration[86353-86381]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[86368-86392]:SingleVariableDeclaration[86383-86407]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[86409-86429]:SimpleType[86424-86444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86434-86707]:Block[86449-86722]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[86444-86680]:EnhancedForStatement[86459-86695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86500-86680]:Block[86515-86695]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findTreeNodeDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<?> deser = d.findTreeNodeDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[86514-86593]:VariableDeclarationStatement[86529-86608]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[86606-86670]:IfStatement[86621-86685]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86625-86670]:Block[86640-86685]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[86643-86656]:ReturnStatement[86658-86671]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[86689-86701]:ReturnStatement[86704-86716]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[86713-86722]:Modifier[86728-86737]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[86723-86742]:ParameterizedType[86738-86757]"
    }, {
      "left" : "_findCustomReferenceDeserializer",
      "right" : "_findCustomReferenceDeserializer",
      "info" : "SimpleName[86743-86775]:SimpleName[86758-86790]"
    }, {
      "left" : "ReferenceType type",
      "right" : "ReferenceType type",
      "info" : "SingleVariableDeclaration[86776-86794]:SingleVariableDeclaration[86791-86809]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[86808-86836]:SingleVariableDeclaration[86823-86851]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[86838-86862]:SingleVariableDeclaration[86853-86877]"
    }, {
      "left" : "TypeDeserializer contentTypeDeserializer",
      "right" : "TypeDeserializer contentTypeDeserializer",
      "info" : "SingleVariableDeclaration[86876-86916]:SingleVariableDeclaration[86891-86931]"
    }, {
      "left" : "JsonDeserializer<?> contentDeserializer",
      "right" : "JsonDeserializer<?> contentDeserializer",
      "info" : "SingleVariableDeclaration[86918-86957]:SingleVariableDeclaration[86933-86972]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[86974-86994]:SimpleType[86989-87009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86999-87339]:Block[87014-87354]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[87009-87312]:EnhancedForStatement[87024-87327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87065-87312]:Block[87080-87327]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findReferenceDeserializer(type, config, beanDesc,\n                    contentTypeDeserializer, contentDeserializer);",
      "right" : "JsonDeserializer<?> deser = d.findReferenceDeserializer(type, config, beanDesc,\n                    contentTypeDeserializer, contentDeserializer);",
      "info" : "VariableDeclarationStatement[87079-87225]:VariableDeclarationStatement[87094-87240]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[87238-87302]:IfStatement[87253-87317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87257-87302]:Block[87272-87317]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[87275-87288]:ReturnStatement[87290-87303]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[87321-87333]:ReturnStatement[87336-87348]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[87345-87375]:SingleMemberAnnotation[87360-87390]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[87380-87389]:Modifier[87395-87404]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[87390-87414]:ParameterizedType[87405-87429]"
    }, {
      "left" : "_findCustomBeanDeserializer",
      "right" : "_findCustomBeanDeserializer",
      "info" : "SimpleName[87415-87442]:SimpleName[87430-87457]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[87443-87456]:SingleVariableDeclaration[87458-87471]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[87470-87498]:SingleVariableDeclaration[87485-87513]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[87500-87524]:SingleVariableDeclaration[87515-87539]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[87541-87561]:SimpleType[87556-87576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87566-87862]:Block[87581-87877]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[87576-87835]:EnhancedForStatement[87591-87850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87632-87835]:Block[87647-87850]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findBeanDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<?> deser = d.findBeanDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[87646-87721]:VariableDeclarationStatement[87661-87736]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[87734-87825]:IfStatement[87749-87840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87753-87825]:Block[87768-87840]"
    }, {
      "left" : "return (JsonDeserializer<Object>) deser;",
      "right" : "return (JsonDeserializer<Object>) deser;",
      "info" : "ReturnStatement[87771-87811]:ReturnStatement[87786-87826]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[87844-87856]:ReturnStatement[87859-87871]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[87868-87877]:Modifier[87883-87892]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[87878-87897]:ParameterizedType[87893-87912]"
    }, {
      "left" : "_findCustomArrayDeserializer",
      "right" : "_findCustomArrayDeserializer",
      "info" : "SimpleName[87898-87926]:SimpleName[87913-87941]"
    }, {
      "left" : "ArrayType type",
      "right" : "ArrayType type",
      "info" : "SingleVariableDeclaration[87927-87941]:SingleVariableDeclaration[87942-87956]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[87955-87983]:SingleVariableDeclaration[87970-87998]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[87985-88009]:SingleVariableDeclaration[88000-88024]"
    }, {
      "left" : "TypeDeserializer elementTypeDeserializer",
      "right" : "TypeDeserializer elementTypeDeserializer",
      "info" : "SingleVariableDeclaration[88023-88063]:SingleVariableDeclaration[88038-88078]"
    }, {
      "left" : "JsonDeserializer<?> elementDeserializer",
      "right" : "JsonDeserializer<?> elementDeserializer",
      "info" : "SingleVariableDeclaration[88065-88104]:SingleVariableDeclaration[88080-88119]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[88121-88141]:SimpleType[88136-88156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88146-88482]:Block[88161-88497]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[88156-88455]:EnhancedForStatement[88171-88470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88212-88455]:Block[88227-88470]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findArrayDeserializer(type, config,\n                    beanDesc, elementTypeDeserializer, elementDeserializer);",
      "right" : "JsonDeserializer<?> deser = d.findArrayDeserializer(type, config,\n                    beanDesc, elementTypeDeserializer, elementDeserializer);",
      "info" : "VariableDeclarationStatement[88226-88368]:VariableDeclarationStatement[88241-88383]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[88381-88445]:IfStatement[88396-88460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88400-88445]:Block[88415-88460]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[88418-88431]:ReturnStatement[88433-88446]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[88464-88476]:ReturnStatement[88479-88491]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[88492-88501]:Modifier[88507-88516]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[88502-88521]:ParameterizedType[88517-88536]"
    }, {
      "left" : "_findCustomCollectionDeserializer",
      "right" : "_findCustomCollectionDeserializer",
      "info" : "SimpleName[88522-88555]:SimpleName[88537-88570]"
    }, {
      "left" : "CollectionType type",
      "right" : "CollectionType type",
      "info" : "SingleVariableDeclaration[88556-88575]:SingleVariableDeclaration[88571-88590]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[88589-88617]:SingleVariableDeclaration[88604-88632]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[88619-88643]:SingleVariableDeclaration[88634-88658]"
    }, {
      "left" : "TypeDeserializer elementTypeDeserializer",
      "right" : "TypeDeserializer elementTypeDeserializer",
      "info" : "SingleVariableDeclaration[88657-88697]:SingleVariableDeclaration[88672-88712]"
    }, {
      "left" : "JsonDeserializer<?> elementDeserializer",
      "right" : "JsonDeserializer<?> elementDeserializer",
      "info" : "SingleVariableDeclaration[88699-88738]:SingleVariableDeclaration[88714-88753]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[88755-88775]:SimpleType[88770-88790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88780-89121]:Block[88795-89136]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[88790-89094]:EnhancedForStatement[88805-89109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88846-89094]:Block[88861-89109]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findCollectionDeserializer(type, config, beanDesc,\n                    elementTypeDeserializer, elementDeserializer);",
      "right" : "JsonDeserializer<?> deser = d.findCollectionDeserializer(type, config, beanDesc,\n                    elementTypeDeserializer, elementDeserializer);",
      "info" : "VariableDeclarationStatement[88860-89007]:VariableDeclarationStatement[88875-89022]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[89020-89084]:IfStatement[89035-89099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89039-89084]:Block[89054-89099]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[89057-89070]:ReturnStatement[89072-89085]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[89103-89115]:ReturnStatement[89118-89130]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[89131-89140]:Modifier[89146-89155]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[89141-89160]:ParameterizedType[89156-89175]"
    }, {
      "left" : "_findCustomCollectionLikeDeserializer",
      "right" : "_findCustomCollectionLikeDeserializer",
      "info" : "SimpleName[89161-89198]:SimpleName[89176-89213]"
    }, {
      "left" : "CollectionLikeType type",
      "right" : "CollectionLikeType type",
      "info" : "SingleVariableDeclaration[89199-89222]:SingleVariableDeclaration[89214-89237]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[89236-89264]:SingleVariableDeclaration[89251-89279]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[89266-89290]:SingleVariableDeclaration[89281-89305]"
    }, {
      "left" : "TypeDeserializer elementTypeDeserializer",
      "right" : "TypeDeserializer elementTypeDeserializer",
      "info" : "SingleVariableDeclaration[89304-89344]:SingleVariableDeclaration[89319-89359]"
    }, {
      "left" : "JsonDeserializer<?> elementDeserializer",
      "right" : "JsonDeserializer<?> elementDeserializer",
      "info" : "SingleVariableDeclaration[89346-89385]:SingleVariableDeclaration[89361-89400]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[89402-89422]:SimpleType[89417-89437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89427-89772]:Block[89442-89787]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[89437-89745]:EnhancedForStatement[89452-89760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89493-89745]:Block[89508-89760]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findCollectionLikeDeserializer(type, config, beanDesc,\n                    elementTypeDeserializer, elementDeserializer);",
      "right" : "JsonDeserializer<?> deser = d.findCollectionLikeDeserializer(type, config, beanDesc,\n                    elementTypeDeserializer, elementDeserializer);",
      "info" : "VariableDeclarationStatement[89507-89658]:VariableDeclarationStatement[89522-89673]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[89671-89735]:IfStatement[89686-89750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89690-89735]:Block[89705-89750]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[89708-89721]:ReturnStatement[89723-89736]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[89754-89766]:ReturnStatement[89769-89781]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[89778-89787]:Modifier[89793-89802]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[89788-89807]:ParameterizedType[89803-89822]"
    }, {
      "left" : "_findCustomEnumDeserializer",
      "right" : "_findCustomEnumDeserializer",
      "info" : "SimpleName[89808-89835]:SimpleName[89823-89850]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[89836-89849]:SingleVariableDeclaration[89851-89864]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[89863-89891]:SingleVariableDeclaration[89878-89906]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[89893-89917]:SingleVariableDeclaration[89908-89932]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[89934-89954]:SimpleType[89949-89969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89959-90228]:Block[89974-90243]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[89969-90201]:EnhancedForStatement[89984-90216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90025-90201]:Block[90040-90216]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findEnumDeserializer(type, config, beanDesc);",
      "right" : "JsonDeserializer<?> deser = d.findEnumDeserializer(type, config, beanDesc);",
      "info" : "VariableDeclarationStatement[90039-90114]:VariableDeclarationStatement[90054-90129]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[90127-90191]:IfStatement[90142-90206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90146-90191]:Block[90161-90206]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[90164-90177]:ReturnStatement[90179-90192]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[90210-90222]:ReturnStatement[90225-90237]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[90238-90247]:Modifier[90253-90262]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[90248-90267]:ParameterizedType[90263-90282]"
    }, {
      "left" : "_findCustomMapDeserializer",
      "right" : "_findCustomMapDeserializer",
      "info" : "SimpleName[90268-90294]:SimpleName[90283-90309]"
    }, {
      "left" : "MapType type",
      "right" : "MapType type",
      "info" : "SingleVariableDeclaration[90295-90307]:SingleVariableDeclaration[90310-90322]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[90321-90349]:SingleVariableDeclaration[90336-90364]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[90351-90375]:SingleVariableDeclaration[90366-90390]"
    }, {
      "left" : "KeyDeserializer keyDeserializer",
      "right" : "KeyDeserializer keyDeserializer",
      "info" : "SingleVariableDeclaration[90389-90420]:SingleVariableDeclaration[90404-90435]"
    }, {
      "left" : "TypeDeserializer elementTypeDeserializer",
      "right" : "TypeDeserializer elementTypeDeserializer",
      "info" : "SingleVariableDeclaration[90434-90474]:SingleVariableDeclaration[90449-90489]"
    }, {
      "left" : "JsonDeserializer<?> elementDeserializer",
      "right" : "JsonDeserializer<?> elementDeserializer",
      "info" : "SingleVariableDeclaration[90476-90515]:SingleVariableDeclaration[90491-90530]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[90532-90552]:SimpleType[90547-90567]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90557-90908]:Block[90572-90923]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[90567-90881]:EnhancedForStatement[90582-90896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90623-90881]:Block[90638-90896]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findMapDeserializer(type, config, beanDesc,\n                    keyDeserializer, elementTypeDeserializer, elementDeserializer);",
      "right" : "JsonDeserializer<?> deser = d.findMapDeserializer(type, config, beanDesc,\n                    keyDeserializer, elementTypeDeserializer, elementDeserializer);",
      "info" : "VariableDeclarationStatement[90637-90794]:VariableDeclarationStatement[90652-90809]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[90807-90871]:IfStatement[90822-90886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90826-90871]:Block[90841-90886]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[90844-90857]:ReturnStatement[90859-90872]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[90890-90902]:ReturnStatement[90905-90917]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[90914-90923]:Modifier[90929-90938]"
    }, {
      "left" : "JsonDeserializer<?>",
      "right" : "JsonDeserializer<?>",
      "info" : "ParameterizedType[90924-90943]:ParameterizedType[90939-90958]"
    }, {
      "left" : "_findCustomMapLikeDeserializer",
      "right" : "_findCustomMapLikeDeserializer",
      "info" : "SimpleName[90944-90974]:SimpleName[90959-90989]"
    }, {
      "left" : "MapLikeType type",
      "right" : "MapLikeType type",
      "info" : "SingleVariableDeclaration[90975-90991]:SingleVariableDeclaration[90990-91006]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[91005-91033]:SingleVariableDeclaration[91020-91048]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[91035-91059]:SingleVariableDeclaration[91050-91074]"
    }, {
      "left" : "KeyDeserializer keyDeserializer",
      "right" : "KeyDeserializer keyDeserializer",
      "info" : "SingleVariableDeclaration[91073-91104]:SingleVariableDeclaration[91088-91119]"
    }, {
      "left" : "TypeDeserializer elementTypeDeserializer",
      "right" : "TypeDeserializer elementTypeDeserializer",
      "info" : "SingleVariableDeclaration[91118-91158]:SingleVariableDeclaration[91133-91173]"
    }, {
      "left" : "JsonDeserializer<?> elementDeserializer",
      "right" : "JsonDeserializer<?> elementDeserializer",
      "info" : "SingleVariableDeclaration[91160-91199]:SingleVariableDeclaration[91175-91214]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[91216-91236]:SimpleType[91231-91251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91241-91596]:Block[91256-91611]"
    }, {
      "left" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "right" : "for (Deserializers d  : _factoryConfig.deserializers())",
      "info" : "EnhancedForStatement[91251-91569]:EnhancedForStatement[91266-91584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91307-91569]:Block[91322-91584]"
    }, {
      "left" : "JsonDeserializer<?> deser = d.findMapLikeDeserializer(type, config, beanDesc,\n                    keyDeserializer, elementTypeDeserializer, elementDeserializer);",
      "right" : "JsonDeserializer<?> deser = d.findMapLikeDeserializer(type, config, beanDesc,\n                    keyDeserializer, elementTypeDeserializer, elementDeserializer);",
      "info" : "VariableDeclarationStatement[91321-91482]:VariableDeclarationStatement[91336-91497]"
    }, {
      "left" : "if (deser != null)",
      "right" : "if (deser != null)",
      "info" : "IfStatement[91495-91559]:IfStatement[91510-91574]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91514-91559]:Block[91529-91574]"
    }, {
      "left" : "return deser;",
      "right" : "return deser;",
      "info" : "ReturnStatement[91532-91545]:ReturnStatement[91547-91560]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[91578-91590]:ReturnStatement[91593-91605]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[92204-92213]:Modifier[92219-92228]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[92214-92238]:ParameterizedType[92229-92253]"
    }, {
      "left" : "findDeserializerFromAnnotation",
      "right" : "findDeserializerFromAnnotation",
      "info" : "SimpleName[92239-92269]:SimpleName[92254-92284]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[92270-92297]:SingleVariableDeclaration[92285-92312]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[92311-92324]:SingleVariableDeclaration[92326-92339]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[92341-92361]:SimpleType[92356-92376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92366-92677]:Block[92381-92692]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[92376-92439]:VariableDeclarationStatement[92391-92454]"
    }, {
      "left" : "if (intr != null)",
      "right" : "if (intr != null)",
      "info" : "IfStatement[92448-92650]:IfStatement[92463-92665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92466-92650]:Block[92481-92665]"
    }, {
      "left" : "Object deserDef = intr.findDeserializer(ann);",
      "right" : "Object deserDef = intr.findDeserializer(ann);",
      "info" : "VariableDeclarationStatement[92480-92525]:VariableDeclarationStatement[92495-92540]"
    }, {
      "left" : "if (deserDef != null)",
      "right" : "if (deserDef != null)",
      "info" : "IfStatement[92538-92640]:IfStatement[92553-92655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92560-92640]:Block[92575-92655]"
    }, {
      "left" : "return ctxt.deserializerInstance(ann, deserDef);",
      "right" : "return ctxt.deserializerInstance(ann, deserDef);",
      "info" : "ReturnStatement[92578-92626]:ReturnStatement[92593-92641]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[92659-92671]:ReturnStatement[92674-92686]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[92879-92888]:Modifier[92894-92903]"
    }, {
      "left" : "KeyDeserializer",
      "right" : "KeyDeserializer",
      "info" : "SimpleType[92889-92904]:SimpleType[92904-92919]"
    }, {
      "left" : "findKeyDeserializerFromAnnotation",
      "right" : "findKeyDeserializerFromAnnotation",
      "info" : "SimpleName[92905-92938]:SimpleName[92920-92953]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[92939-92966]:SingleVariableDeclaration[92954-92981]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[92980-92993]:SingleVariableDeclaration[92995-93008]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[93014-93034]:SimpleType[93029-93049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93039-93356]:Block[93054-93371]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[93049-93112]:VariableDeclarationStatement[93064-93127]"
    }, {
      "left" : "if (intr != null)",
      "right" : "if (intr != null)",
      "info" : "IfStatement[93121-93329]:IfStatement[93136-93344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93139-93329]:Block[93154-93344]"
    }, {
      "left" : "Object deserDef = intr.findKeyDeserializer(ann);",
      "right" : "Object deserDef = intr.findKeyDeserializer(ann);",
      "info" : "VariableDeclarationStatement[93153-93201]:VariableDeclarationStatement[93168-93216]"
    }, {
      "left" : "if (deserDef != null)",
      "right" : "if (deserDef != null)",
      "info" : "IfStatement[93214-93319]:IfStatement[93229-93334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93236-93319]:Block[93251-93334]"
    }, {
      "left" : "return ctxt.keyDeserializerInstance(ann, deserDef);",
      "right" : "return ctxt.keyDeserializerInstance(ann, deserDef);",
      "info" : "ReturnStatement[93254-93305]:ReturnStatement[93269-93320]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[93338-93350]:ReturnStatement[93353-93365]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[93396-93405]:Modifier[93411-93420]"
    }, {
      "left" : "JsonDeserializer<Object>",
      "right" : "JsonDeserializer<Object>",
      "info" : "ParameterizedType[93406-93430]:ParameterizedType[93421-93445]"
    }, {
      "left" : "findContentDeserializerFromAnnotation",
      "right" : "findContentDeserializerFromAnnotation",
      "info" : "SimpleName[93431-93468]:SimpleName[93446-93483]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[93469-93496]:SingleVariableDeclaration[93484-93511]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[93510-93523]:SingleVariableDeclaration[93525-93538]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[93540-93560]:SimpleType[93555-93575]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93565-93883]:Block[93580-93898]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[93575-93638]:VariableDeclarationStatement[93590-93653]"
    }, {
      "left" : "if (intr != null)",
      "right" : "if (intr != null)",
      "info" : "IfStatement[93647-93856]:IfStatement[93662-93871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93665-93856]:Block[93680-93871]"
    }, {
      "left" : "Object deserDef = intr.findContentDeserializer(ann);",
      "right" : "Object deserDef = intr.findContentDeserializer(ann);",
      "info" : "VariableDeclarationStatement[93679-93731]:VariableDeclarationStatement[93694-93746]"
    }, {
      "left" : "if (deserDef != null)",
      "right" : "if (deserDef != null)",
      "info" : "IfStatement[93744-93846]:IfStatement[93759-93861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93766-93846]:Block[93781-93861]"
    }, {
      "left" : "return ctxt.deserializerInstance(ann, deserDef);",
      "right" : "return ctxt.deserializerInstance(ann, deserDef);",
      "info" : "ReturnStatement[93784-93832]:ReturnStatement[93799-93847]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[93865-93877]:ReturnStatement[93880-93892]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[94343-94352]:Modifier[94358-94367]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[94353-94361]:SimpleType[94368-94376]"
    }, {
      "left" : "resolveMemberAndTypeAnnotations",
      "right" : "resolveMemberAndTypeAnnotations",
      "info" : "SimpleName[94362-94393]:SimpleName[94377-94408]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[94394-94421]:SingleVariableDeclaration[94409-94436]"
    }, {
      "left" : "AnnotatedMember member",
      "right" : "AnnotatedMember member",
      "info" : "SingleVariableDeclaration[94435-94457]:SingleVariableDeclaration[94450-94472]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[94459-94472]:SingleVariableDeclaration[94474-94487]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[94489-94509]:SimpleType[94504-94524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94514-96517]:Block[94529-96532]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[94524-94587]:VariableDeclarationStatement[94539-94602]"
    }, {
      "left" : "if (intr == null)",
      "right" : "if (intr == null)",
      "info" : "IfStatement[94596-94650]:IfStatement[94611-94665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94614-94650]:Block[94629-94665]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[94628-94640]:ReturnStatement[94643-94655]"
    }, {
      "left" : "if (type.isMapLikeType())",
      "right" : "if (type.isMapLikeType())",
      "info" : "IfStatement[94751-95240]:IfStatement[94766-95255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94777-95240]:Block[94792-95255]"
    }, {
      "left" : "JavaType keyType = type.getKeyType();",
      "right" : "JavaType keyType = type.getKeyType();",
      "info" : "VariableDeclarationStatement[94791-94828]:VariableDeclarationStatement[94806-94843]"
    }, {
      "left" : "if (keyType != null)",
      "right" : "if (keyType != null)",
      "info" : "IfStatement[94841-95230]:IfStatement[94856-95245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94862-95230]:Block[94877-95245]"
    }, {
      "left" : "Object kdDef = intr.findKeyDeserializer(member);",
      "right" : "Object kdDef = intr.findKeyDeserializer(member);",
      "info" : "VariableDeclarationStatement[94880-94928]:VariableDeclarationStatement[94895-94943]"
    }, {
      "left" : "KeyDeserializer kd = ctxt.keyDeserializerInstance(member, kdDef);",
      "right" : "KeyDeserializer kd = ctxt.keyDeserializerInstance(member, kdDef);",
      "info" : "VariableDeclarationStatement[94945-95010]:VariableDeclarationStatement[94960-95025]"
    }, {
      "left" : "if (kd != null)",
      "right" : "if (kd != null)",
      "info" : "IfStatement[95027-95216]:IfStatement[95042-95231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95043-95216]:Block[95058-95231]"
    }, {
      "left" : "type = ((MapLikeType) type).withKeyValueHandler(kd);",
      "right" : "type = ((MapLikeType) type).withKeyValueHandler(kd);",
      "info" : "ExpressionStatement[95065-95117]:ExpressionStatement[95080-95132]"
    }, {
      "left" : "keyType = type.getKeyType();",
      "right" : "keyType = type.getKeyType();",
      "info" : "ExpressionStatement[95138-95166]:ExpressionStatement[95153-95181]"
    }, {
      "left" : "if (type.hasContentType())",
      "right" : "if (type.hasContentType())",
      "info" : "IfStatement[95250-95881]:IfStatement[95265-95896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95277-95881]:Block[95292-95896]"
    }, {
      "left" : "Object cdDef = intr.findContentDeserializer(member);",
      "right" : "Object cdDef = intr.findContentDeserializer(member);",
      "info" : "VariableDeclarationStatement[95342-95394]:VariableDeclarationStatement[95357-95409]"
    }, {
      "left" : "JsonDeserializer<?> cd = ctxt.deserializerInstance(member, cdDef);",
      "right" : "JsonDeserializer<?> cd = ctxt.deserializerInstance(member, cdDef);",
      "info" : "VariableDeclarationStatement[95407-95473]:VariableDeclarationStatement[95422-95488]"
    }, {
      "left" : "if (cd != null)",
      "right" : "if (cd != null)",
      "info" : "IfStatement[95486-95574]:IfStatement[95501-95589]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95502-95574]:Block[95517-95589]"
    }, {
      "left" : "type = type.withContentValueHandler(cd);",
      "right" : "type = type.withContentValueHandler(cd);",
      "info" : "ExpressionStatement[95520-95560]:ExpressionStatement[95535-95575]"
    }, {
      "left" : "TypeDeserializer contentTypeDeser = findPropertyContentTypeDeserializer(\n                    ctxt.getConfig(), type, (AnnotatedMember) member);",
      "right" : "TypeDeserializer contentTypeDeser = findPropertyContentTypeDeserializer(\n                    ctxt.getConfig(), type, (AnnotatedMember) member);",
      "info" : "VariableDeclarationStatement[95587-95730]:VariableDeclarationStatement[95602-95745]"
    }, {
      "left" : "if (contentTypeDeser != null)",
      "right" : "if (contentTypeDeser != null)",
      "info" : "IfStatement[95756-95871]:IfStatement[95771-95886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95786-95871]:Block[95801-95886]"
    }, {
      "left" : "type = type.withContentTypeHandler(contentTypeDeser);",
      "right" : "type = type.withContentTypeHandler(contentTypeDeser);",
      "info" : "ExpressionStatement[95804-95857]:ExpressionStatement[95819-95872]"
    }, {
      "left" : "TypeDeserializer valueTypeDeser = findPropertyTypeDeserializer(ctxt.getConfig(),\n                    type, (AnnotatedMember) member);",
      "right" : "TypeDeserializer valueTypeDeser = findPropertyTypeDeserializer(ctxt.getConfig(),\n                    type, (AnnotatedMember) member);",
      "info" : "VariableDeclarationStatement[95890-96023]:VariableDeclarationStatement[95905-96038]"
    }, {
      "left" : "if (valueTypeDeser != null)",
      "right" : "if (valueTypeDeser != null)",
      "info" : "IfStatement[96032-96128]:IfStatement[96047-96143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96060-96128]:Block[96075-96143]"
    }, {
      "left" : "type = type.withTypeHandler(valueTypeDeser);",
      "right" : "type = type.withTypeHandler(valueTypeDeser);",
      "info" : "ExpressionStatement[96074-96118]:ExpressionStatement[96089-96133]"
    }, {
      "left" : "type = intr.refineDeserializationType(ctxt.getConfig(), member, type);",
      "right" : "type = intr.refineDeserializationType(ctxt.getConfig(), member, type);",
      "info" : "ExpressionStatement[96420-96490]:ExpressionStatement[96435-96505]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[96499-96511]:ReturnStatement[96514-96526]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[96523-96532]:Modifier[96538-96547]"
    }, {
      "left" : "EnumResolver",
      "right" : "EnumResolver",
      "info" : "SimpleType[96533-96545]:SimpleType[96548-96560]"
    }, {
      "left" : "constructEnumResolver",
      "right" : "constructEnumResolver",
      "info" : "SimpleName[96546-96567]:SimpleName[96561-96582]"
    }, {
      "left" : "Class<?> enumClass",
      "right" : "Class<?> enumClass",
      "info" : "SingleVariableDeclaration[96568-96586]:SingleVariableDeclaration[96583-96601]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[96600-96628]:SingleVariableDeclaration[96615-96643]"
    }, {
      "left" : "AnnotatedMember jsonValueAccessor",
      "right" : "AnnotatedMember jsonValueAccessor",
      "info" : "SingleVariableDeclaration[96630-96663]:SingleVariableDeclaration[96645-96678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96669-97374]:Block[96684-97389]"
    }, {
      "left" : "if (jsonValueAccessor != null)",
      "right" : "if (jsonValueAccessor != null)",
      "info" : "IfStatement[96679-97102]:IfStatement[96694-97117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96710-97102]:Block[96725-97117]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[96724-96946]:IfStatement[96739-96961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96765-96946]:Block[96780-96961]"
    }, {
      "left" : "ClassUtil.checkAndFixAccess(jsonValueAccessor.getMember(),\n                        config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ClassUtil.checkAndFixAccess(jsonValueAccessor.getMember(),\n                        config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[96783-96932]:ExpressionStatement[96798-96947]"
    }, {
      "left" : "return EnumResolver.constructUnsafeUsingMethod(enumClass,\n                    jsonValueAccessor, config.getAnnotationIntrospector());",
      "right" : "return EnumResolver.constructUnsafeUsingMethod(enumClass,\n                    jsonValueAccessor, config.getAnnotationIntrospector());",
      "info" : "ReturnStatement[96959-97092]:ReturnStatement[96974-97107]"
    }, {
      "left" : "return EnumResolver.constructUnsafe(enumClass, config.getAnnotationIntrospector());",
      "right" : "return EnumResolver.constructUnsafe(enumClass, config.getAnnotationIntrospector());",
      "info" : "ReturnStatement[97285-97368]:ReturnStatement[97300-97383]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[97414-97423]:Modifier[97429-97438]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[97424-97431]:PrimitiveType[97439-97446]"
    }, {
      "left" : "_hasCreatorAnnotation",
      "right" : "_hasCreatorAnnotation",
      "info" : "SimpleName[97432-97453]:SimpleName[97447-97468]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[97454-97481]:SingleVariableDeclaration[97469-97496]"
    }, {
      "left" : "Annotated ann",
      "right" : "Annotated ann",
      "info" : "SingleVariableDeclaration[97495-97508]:SingleVariableDeclaration[97510-97523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97510-97811]:Block[97525-97826]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[97520-97583]:VariableDeclarationStatement[97535-97598]"
    }, {
      "left" : "if (intr != null)",
      "right" : "if (intr != null)",
      "info" : "IfStatement[97592-97783]:IfStatement[97607-97798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97610-97783]:Block[97625-97798]"
    }, {
      "left" : "JsonCreator.Mode mode = intr.findCreatorAnnotation(ctxt.getConfig(), ann);",
      "right" : "JsonCreator.Mode mode = intr.findCreatorAnnotation(ctxt.getConfig(), ann);",
      "info" : "VariableDeclarationStatement[97624-97698]:VariableDeclarationStatement[97639-97713]"
    }, {
      "left" : "return (mode != null) && (mode != JsonCreator.Mode.DISABLED);",
      "right" : "return (mode != null) && (mode != JsonCreator.Mode.DISABLED);",
      "info" : "ReturnStatement[97711-97772]:ReturnStatement[97726-97787]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[97792-97805]:ReturnStatement[97807-97820]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[98245-98256]:MarkerAnnotation[98260-98271]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[98261-98270]:Modifier[98276-98285]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[98271-98279]:SimpleType[98286-98294]"
    }, {
      "left" : "modifyTypeByAnnotation",
      "right" : "modifyTypeByAnnotation",
      "info" : "SimpleName[98280-98302]:SimpleName[98295-98317]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[98303-98330]:SingleVariableDeclaration[98318-98345]"
    }, {
      "left" : "Annotated a",
      "right" : "Annotated a",
      "info" : "SingleVariableDeclaration[98344-98355]:SingleVariableDeclaration[98359-98370]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[98357-98370]:SingleVariableDeclaration[98372-98385]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[98387-98407]:SimpleType[98402-98422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98412-98628]:Block[98427-98643]"
    }, {
      "left" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = ctxt.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[98422-98485]:VariableDeclarationStatement[98437-98500]"
    }, {
      "left" : "if (intr == null)",
      "right" : "if (intr == null)",
      "info" : "IfStatement[98494-98548]:IfStatement[98509-98563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98512-98548]:Block[98527-98563]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[98526-98538]:ReturnStatement[98541-98553]"
    }, {
      "left" : "return intr.refineDeserializationType(ctxt.getConfig(), a, type);",
      "right" : "return intr.refineDeserializationType(ctxt.getConfig(), a, type);",
      "info" : "ReturnStatement[98557-98622]:ReturnStatement[98572-98637]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[98734-98745]:MarkerAnnotation[98749-98760]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[98763-98772]:Modifier[98778-98787]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[98773-98781]:SimpleType[98788-98796]"
    }, {
      "left" : "resolveType",
      "right" : "resolveType",
      "info" : "SimpleName[98782-98793]:SimpleName[98797-98808]"
    }, {
      "left" : "DeserializationContext ctxt",
      "right" : "DeserializationContext ctxt",
      "info" : "SingleVariableDeclaration[98794-98821]:SingleVariableDeclaration[98809-98836]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[98835-98859]:SingleVariableDeclaration[98850-98874]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[98861-98874]:SingleVariableDeclaration[98876-98889]"
    }, {
      "left" : "AnnotatedMember member",
      "right" : "AnnotatedMember member",
      "info" : "SingleVariableDeclaration[98876-98898]:SingleVariableDeclaration[98891-98913]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[98915-98935]:SimpleType[98930-98950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98940-99015]:Block[98955-99030]"
    }, {
      "left" : "return resolveMemberAndTypeAnnotations(ctxt, member, type);",
      "right" : "return resolveMemberAndTypeAnnotations(ctxt, member, type);",
      "info" : "ReturnStatement[98950-99009]:ReturnStatement[98965-99024]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[99139-99150]:MarkerAnnotation[99154-99165]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[99200-99209]:Modifier[99215-99224]"
    }, {
      "left" : "AnnotatedMethod",
      "right" : "AnnotatedMethod",
      "info" : "SimpleType[99210-99225]:SimpleType[99225-99240]"
    }, {
      "left" : "_findJsonValueFor",
      "right" : "_findJsonValueFor",
      "info" : "SimpleName[99226-99243]:SimpleName[99241-99258]"
    }, {
      "left" : "DeserializationConfig config",
      "right" : "DeserializationConfig config",
      "info" : "SingleVariableDeclaration[99244-99272]:SingleVariableDeclaration[99259-99287]"
    }, {
      "left" : "JavaType enumType",
      "right" : "JavaType enumType",
      "info" : "SingleVariableDeclaration[99274-99291]:SingleVariableDeclaration[99289-99306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99297-99482]:Block[99312-99497]"
    }, {
      "left" : "if (enumType == null)",
      "right" : "if (enumType == null)",
      "info" : "IfStatement[99307-99365]:IfStatement[99322-99380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99329-99365]:Block[99344-99380]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[99343-99355]:ReturnStatement[99358-99370]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspect(enumType);",
      "right" : "BeanDescription beanDesc = config.introspect(enumType);",
      "info" : "VariableDeclarationStatement[99374-99429]:VariableDeclarationStatement[99389-99444]"
    }, {
      "left" : "return beanDesc.findJsonValueMethod();",
      "right" : "return beanDesc.findJsonValueMethod();",
      "info" : "ReturnStatement[99438-99476]:ReturnStatement[99453-99491]"
    } ]
  },
  "interFileMappings" : { }
}