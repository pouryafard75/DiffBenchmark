{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsonMojo",
      "right" : "JsonMojo",
      "info" : "TypeDeclaration[2887-57973]:TypeDeclaration[2854-59597]"
    }, {
      "left" : "public static final String FABRIC8_PORT_HOST_PREFIX = \"docker.port.host.\";",
      "right" : "public static final String FABRIC8_PORT_HOST_PREFIX = \"docker.port.host.\";",
      "info" : "FieldDeclaration[3183-3257]:FieldDeclaration[3150-3224]"
    }, {
      "left" : "public static final String FABRIC8_PORT_CONTAINER_PREFIX = \"docker.port.container.\";",
      "right" : "public static final String FABRIC8_PORT_CONTAINER_PREFIX = \"docker.port.container.\";",
      "info" : "FieldDeclaration[3262-3346]:FieldDeclaration[3229-3313]"
    }, {
      "left" : "public static final String FABRIC8_PORT_SERVICE = \"fabric8.service.port\";",
      "right" : "public static final String FABRIC8_PORT_SERVICE = \"fabric8.service.port\";",
      "info" : "FieldDeclaration[3351-3424]:FieldDeclaration[3318-3391]"
    }, {
      "left" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE = \"fabric8.service.containerPort\";",
      "right" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE = \"fabric8.service.containerPort\";",
      "info" : "FieldDeclaration[3429-3521]:FieldDeclaration[3396-3488]"
    }, {
      "left" : "public static final String FABRIC8_PROTOCOL_SERVICE = \"fabric8.service.protocol\";",
      "right" : "public static final String FABRIC8_PROTOCOL_SERVICE = \"fabric8.service.protocol\";",
      "info" : "FieldDeclaration[3526-3607]:FieldDeclaration[3493-3574]"
    }, {
      "left" : "public static final String FABRIC8_PORT_SERVICE_PREFIX = FABRIC8_PORT_SERVICE + \".\";",
      "right" : "public static final String FABRIC8_PORT_SERVICE_PREFIX = FABRIC8_PORT_SERVICE + \".\";",
      "info" : "FieldDeclaration[3612-3696]:FieldDeclaration[3579-3663]"
    }, {
      "left" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE_PREFIX = FABRIC8_CONTAINER_PORT_SERVICE + \".\";",
      "right" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE_PREFIX = FABRIC8_CONTAINER_PORT_SERVICE + \".\";",
      "info" : "FieldDeclaration[3701-3805]:FieldDeclaration[3668-3772]"
    }, {
      "left" : "public static final String FABRIC8_PROTOCOL_SERVICE_PREFIX = FABRIC8_PROTOCOL_SERVICE + \".\";",
      "right" : "public static final String FABRIC8_PROTOCOL_SERVICE_PREFIX = FABRIC8_PROTOCOL_SERVICE + \".\";",
      "info" : "FieldDeclaration[3810-3902]:FieldDeclaration[3777-3869]"
    }, {
      "left" : "private static final String NAME = \"name\";",
      "right" : "private static final String NAME = \"name\";",
      "info" : "FieldDeclaration[3909-3951]:FieldDeclaration[3876-3918]"
    }, {
      "left" : "private static final String ATTRIBUTE_TYPE = \"attributeType\";",
      "right" : "private static final String ATTRIBUTE_TYPE = \"attributeType\";",
      "info" : "FieldDeclaration[3956-4017]:FieldDeclaration[3923-3984]"
    }, {
      "left" : "private static final String VOLUME_MOUNT_PATH = \"mountPath\";",
      "right" : "private static final String VOLUME_MOUNT_PATH = \"mountPath\";",
      "info" : "FieldDeclaration[4023-4083]:FieldDeclaration[3990-4050]"
    }, {
      "left" : "private static final String VOLUME_REGEX = \"fabric8.volume.(?<name>[^. ]*).(?<attributeType>[^. ]*)\";",
      "right" : "private static final String VOLUME_REGEX = \"fabric8.volume.(?<name>[^. ]*).(?<attributeType>[^. ]*)\";",
      "info" : "FieldDeclaration[4088-4189]:FieldDeclaration[4055-4156]"
    }, {
      "left" : "private static final Pattern VOLUME_PATTERN = Pattern.compile(VOLUME_REGEX);",
      "right" : "private static final Pattern VOLUME_PATTERN = Pattern.compile(VOLUME_REGEX);",
      "info" : "FieldDeclaration[4194-4270]:FieldDeclaration[4161-4237]"
    }, {
      "left" : "private static final String PARAM_REGEX = \"fabric8.parameter.(?<name>[^. ]*)(.)?(?<attributeType>[^ ]*)\";",
      "right" : "private static final String PARAM_REGEX = \"fabric8.parameter.(?<name>[^. ]*)(.)?(?<attributeType>[^ ]*)\";",
      "info" : "FieldDeclaration[4276-4381]:FieldDeclaration[4243-4348]"
    }, {
      "left" : "private static final Pattern PARAM_PATTERN = Pattern.compile(PARAM_REGEX);",
      "right" : "private static final Pattern PARAM_PATTERN = Pattern.compile(PARAM_REGEX);",
      "info" : "FieldDeclaration[4386-4460]:FieldDeclaration[4353-4427]"
    }, {
      "left" : "private static final String TEMPLATE_NAME = \"fabric8.template\";",
      "right" : "private static final String TEMPLATE_NAME = \"fabric8.template\";",
      "info" : "FieldDeclaration[4466-4529]:FieldDeclaration[4433-4496]"
    }, {
      "left" : "private static final String PARAMETER_PREFIX = \"fabric8.parameter\";",
      "right" : "private static final String PARAMETER_PREFIX = \"fabric8.parameter\";",
      "info" : "FieldDeclaration[4534-4601]:FieldDeclaration[4501-4568]"
    }, {
      "left" : "private static final String PARAMETER_NAME_PREFIX = PARAMETER_PREFIX + \".%s\";",
      "right" : "private static final String PARAMETER_NAME_PREFIX = PARAMETER_PREFIX + \".%s\";",
      "info" : "FieldDeclaration[4606-4683]:FieldDeclaration[4573-4650]"
    }, {
      "left" : "private static final String PARAMETER_PROPERTY = PARAMETER_NAME_PREFIX + \".%s\";",
      "right" : "private static final String PARAMETER_PROPERTY = PARAMETER_NAME_PREFIX + \".%s\";",
      "info" : "FieldDeclaration[4688-4767]:FieldDeclaration[4655-4734]"
    }, {
      "left" : "private static final String GENERATE = \"generate\";",
      "right" : "private static final String GENERATE = \"generate\";",
      "info" : "FieldDeclaration[4773-4823]:FieldDeclaration[4740-4790]"
    }, {
      "left" : "private static final String FROM = \"from\";",
      "right" : "private static final String FROM = \"from\";",
      "info" : "FieldDeclaration[4828-4870]:FieldDeclaration[4795-4837]"
    }, {
      "left" : "private static final String VALUE = \"value\";",
      "right" : "private static final String VALUE = \"value\";",
      "info" : "FieldDeclaration[4875-4919]:FieldDeclaration[4842-4886]"
    }, {
      "left" : "private static final String DESCRIPTION = \"description\";",
      "right" : "private static final String DESCRIPTION = \"description\";",
      "info" : "FieldDeclaration[4924-4980]:FieldDeclaration[4891-4947]"
    }, {
      "left" : "@Component\n    private MavenProjectHelper projectHelper;",
      "right" : "@Component\n    private MavenProjectHelper projectHelper;",
      "info" : "FieldDeclaration[4986-5042]:FieldDeclaration[4953-5009]"
    }, {
      "left" : "@Parameter(property = \"fabric8.kubernetes.artifactType\", defaultValue = \"json\")\n    private String artifactType = \"json\";",
      "right" : "@Parameter(property = \"fabric8.kubernetes.artifactType\", defaultValue = \"json\")\n    private String artifactType = \"json\";",
      "info" : "FieldDeclaration[5048-5274]:FieldDeclaration[5015-5241]"
    }, {
      "left" : "@Parameter(property = \"fabric8.kubernetes.artifactClassifier\", defaultValue = \"kubernetes\")\n    private String artifactClassifier = \"kubernetes\";",
      "right" : "@Parameter(property = \"fabric8.kubernetes.artifactClassifier\", defaultValue = \"kubernetes\")\n    private String artifactClassifier = \"kubernetes\";",
      "info" : "FieldDeclaration[5280-5536]:FieldDeclaration[5247-5503]"
    }, {
      "left" : "@Parameter(property = \"fabric8.generateJson\", defaultValue = \"true\")\n    private boolean generateJson;",
      "right" : "@Parameter(property = \"fabric8.generateJson\", defaultValue = \"true\")\n    private boolean generateJson;",
      "info" : "FieldDeclaration[5542-5848]:FieldDeclaration[5509-5815]"
    }, {
      "left" : "@Parameter(property = \"fabric8.failOnMissingJsonFiles\", defaultValue = \"true\")\n    private boolean failOnMissingJsonFiles;",
      "right" : "@Parameter(property = \"fabric8.failOnMissingJsonFiles\", defaultValue = \"true\")\n    private boolean failOnMissingJsonFiles;",
      "info" : "FieldDeclaration[5854-6056]:FieldDeclaration[5821-6023]"
    }, {
      "left" : "@Parameter(property = \"fabric8.includeNamespaceEnvVar\", defaultValue = \"true\")\n    private boolean includeNamespaceEnvVar;",
      "right" : "@Parameter(property = \"fabric8.includeNamespaceEnvVar\", defaultValue = \"true\")\n    private boolean includeNamespaceEnvVar;",
      "info" : "FieldDeclaration[6062-6275]:FieldDeclaration[6029-6242]"
    }, {
      "left" : "@Parameter(property = \"fabric8.namespaceEnvVar\", defaultValue = \"KUBERNETES_NAMESPACE\")\n    private String kubernetesNamespaceEnvVar;",
      "right" : "@Parameter(property = \"fabric8.namespaceEnvVar\", defaultValue = \"KUBERNETES_NAMESPACE\")\n    private String kubernetesNamespaceEnvVar;",
      "info" : "FieldDeclaration[6281-6521]:FieldDeclaration[6248-6488]"
    }, {
      "left" : "@Parameter(property = \"fabric8.provider\", defaultValue = \"fabric8\")\n    private String provider;",
      "right" : "@Parameter(property = \"fabric8.provider\", defaultValue = \"fabric8\")\n    private String provider;",
      "info" : "FieldDeclaration[6527-6707]:FieldDeclaration[6494-6674]"
    }, {
      "left" : "@Parameter()\n    private Map<String, String> labels;",
      "right" : "@Parameter()\n    private Map<String, String> labels;",
      "info" : "FieldDeclaration[6713-6991]:FieldDeclaration[6680-6958]"
    }, {
      "left" : "@Parameter()\n    private List<EnvVar> environmentVariables;",
      "right" : "@Parameter()\n    private List<EnvVar> environmentVariables;",
      "info" : "FieldDeclaration[6997-7295]:FieldDeclaration[6964-7262]"
    }, {
      "left" : "@Parameter()\n    private List<ContainerPort> containerPorts;",
      "right" : "@Parameter()\n    private List<ContainerPort> containerPorts;",
      "info" : "FieldDeclaration[7301-7456]:FieldDeclaration[7268-7423]"
    }, {
      "left" : "@Parameter()\n    private Map<String, Integer> defaultContainerPortMap;",
      "right" : "@Parameter()\n    private Map<String, Integer> defaultContainerPortMap;",
      "info" : "FieldDeclaration[7462-7613]:FieldDeclaration[7429-7580]"
    }, {
      "left" : "@Parameter()\n    private List<ServicePort> servicePorts;",
      "right" : "@Parameter()\n    private List<ServicePort> servicePorts;",
      "info" : "FieldDeclaration[7619-7768]:FieldDeclaration[7586-7735]"
    }, {
      "left" : "@Parameter(property = \"fabric8.replicas\", defaultValue = \"1\")\n    private Integer replicaCount;",
      "right" : "@Parameter(property = \"fabric8.replicas\", defaultValue = \"1\")\n    private Integer replicaCount;",
      "info" : "FieldDeclaration[7774-7953]:FieldDeclaration[7741-7920]"
    }, {
      "left" : "// TODO lets disable by default until its working :)\n    @Parameter(property = \"fabric8.useDeploymentConfig\", defaultValue = \"false\")\n    private boolean useDeploymentConfig;",
      "right" : "// TODO lets disable by default until its working :)\n    @Parameter(property = \"fabric8.useDeploymentConfig\", defaultValue = \"false\")\n    private boolean useDeploymentConfig;",
      "info" : "FieldDeclaration[7959-8237]:FieldDeclaration[7926-8204]"
    }, {
      "left" : "@Parameter(property = \"fabric8.lastTriggeredImageTag\", defaultValue = \"latest\")\n    private String lastTriggeredImageTag;",
      "right" : "@Parameter(property = \"fabric8.lastTriggeredImageTag\", defaultValue = \"latest\")\n    private String lastTriggeredImageTag;",
      "info" : "FieldDeclaration[8243-8449]:FieldDeclaration[8210-8416]"
    }, {
      "left" : "@Parameter(property = \"fabric8.deploymentStrategy\", defaultValue = \"Recreate\")\n    private String deploymentStrategy;",
      "right" : "@Parameter(property = \"fabric8.deploymentStrategy\", defaultValue = \"Recreate\")\n    private String deploymentStrategy;",
      "info" : "FieldDeclaration[8455-8638]:FieldDeclaration[8422-8605]"
    }, {
      "left" : "@Parameter(property = \"fabric8.extra.json\", defaultValue = \"${basedir}/target/classes/kubernetes-extra.json\")\n    private File kubernetesExtraJson;",
      "right" : "@Parameter(property = \"fabric8.extra.json\", defaultValue = \"${basedir}/target/classes/kubernetes-extra.json\")\n    private File kubernetesExtraJson;",
      "info" : "FieldDeclaration[8644-8881]:FieldDeclaration[8611-8848]"
    }, {
      "left" : "@Parameter(property = \"fabric8.templateTempDir\", defaultValue = \"${basedir}/target/fabric8/template-workdir\")\n    private File templateTempDir;",
      "right" : "@Parameter(property = \"fabric8.templateTempDir\", defaultValue = \"${basedir}/target/fabric8/template-workdir\")\n    private File templateTempDir;",
      "info" : "FieldDeclaration[8887-9116]:FieldDeclaration[8854-9083]"
    }, {
      "left" : "@Parameter(property = \"fabric8.iconUrl\")\n    private String iconUrl;",
      "right" : "@Parameter(property = \"fabric8.iconUrl\")\n    private String iconUrl;",
      "info" : "FieldDeclaration[9122-9360]:FieldDeclaration[9089-9327]"
    }, {
      "left" : "@Parameter(property = \"fabric8.iconUrlPrefix\")\n    private String iconUrlPrefix;",
      "right" : "@Parameter(property = \"fabric8.iconUrlPrefix\")\n    private String iconUrlPrefix;",
      "info" : "FieldDeclaration[9366-9528]:FieldDeclaration[9333-9495]"
    }, {
      "left" : "@Parameter(property = \"fabric8.iconBranch\", defaultValue = \"master\")\n    private String iconBranch;",
      "right" : "@Parameter(property = \"fabric8.iconBranch\", defaultValue = \"master\")\n    private String iconBranch;",
      "info" : "FieldDeclaration[9534-9713]:FieldDeclaration[9501-9680]"
    }, {
      "left" : "@Parameter(property = \"fabric8.replicationController.name\", defaultValue = \"${project.artifactId}\")\n    private String replicationControllerName;",
      "right" : "@Parameter(property = \"fabric8.replicationController.name\", defaultValue = \"${project.artifactId}\")\n    private String replicationControllerName;",
      "info" : "FieldDeclaration[9719-9966]:FieldDeclaration[9686-9933]"
    }, {
      "left" : "@Parameter(property = \"fabric8.kubernetes.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesName;",
      "right" : "@Parameter(property = \"fabric8.kubernetes.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesName;",
      "info" : "FieldDeclaration[9972-10180]:FieldDeclaration[9939-10147]"
    }, {
      "left" : "@Parameter(property = \"fabric8.container.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesContainerName;",
      "right" : "@Parameter(property = \"fabric8.container.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesContainerName;",
      "info" : "FieldDeclaration[10186-10402]:FieldDeclaration[10153-10369]"
    }, {
      "left" : "@Parameter(property = \"fabric8.service.name\", defaultValue = \"${project.artifactId}\")\n    private String serviceName;",
      "right" : "@Parameter(property = \"fabric8.service.name\", defaultValue = \"${project.artifactId}\")\n    private String serviceName;",
      "info" : "FieldDeclaration[10408-10565]:FieldDeclaration[10375-10532]"
    }, {
      "left" : "// TODO for now lets default to not creating headless services as it barfs when used with kubernetes...\n    //@Parameter(property = \"fabric8.service.headless\", defaultValue = \"true\")\n    @Parameter(property = \"fabric8.service.headless\", defaultValue = \"false\")\n    private boolean headlessServices;",
      "right" : "// TODO for now lets default to not creating headless services as it barfs when used with kubernetes...\n    //@Parameter(property = \"fabric8.service.headless\", defaultValue = \"true\")\n    @Parameter(property = \"fabric8.service.headless\", defaultValue = \"false\")\n    private boolean headlessServices;",
      "info" : "FieldDeclaration[10571-10954]:FieldDeclaration[10538-10921]"
    }, {
      "left" : "@Parameter(property = FABRIC8_PORT_SERVICE)\n    private Integer servicePort;",
      "right" : "@Parameter(property = FABRIC8_PORT_SERVICE)\n    private Integer servicePort;",
      "info" : "FieldDeclaration[10960-11076]:FieldDeclaration[10927-11043]"
    }, {
      "left" : "@Parameter(property = FABRIC8_CONTAINER_PORT_SERVICE)\n    private String serviceContainerPort;",
      "right" : "@Parameter(property = FABRIC8_CONTAINER_PORT_SERVICE)\n    private String serviceContainerPort;",
      "info" : "FieldDeclaration[11082-11226]:FieldDeclaration[11049-11193]"
    }, {
      "left" : "@Parameter(property = FABRIC8_PROTOCOL_SERVICE, defaultValue = \"TCP\")\n    private String serviceProtocol;",
      "right" : "@Parameter(property = FABRIC8_PROTOCOL_SERVICE, defaultValue = \"TCP\")\n    private String serviceProtocol;",
      "info" : "FieldDeclaration[11232-11381]:FieldDeclaration[11199-11348]"
    }, {
      "left" : "@Parameter(property = \"fabric8.imagePullPolicy\")\n    private String imagePullPolicy;",
      "right" : "@Parameter(property = \"fabric8.imagePullPolicy\")\n    private String imagePullPolicy;",
      "info" : "FieldDeclaration[11387-11541]:FieldDeclaration[11354-11508]"
    }, {
      "left" : "@Parameter(property = \"fabric8.imagePullPolicySnapshot\")\n    private String imagePullPolicySnapshot;",
      "right" : "@Parameter(property = \"fabric8.imagePullPolicySnapshot\")\n    private String imagePullPolicySnapshot;",
      "info" : "FieldDeclaration[11547-11748]:FieldDeclaration[11514-11715]"
    }, {
      "left" : "@Parameter(property = \"fabric8.includeAllEnvironmentVariables\", defaultValue = \"true\")\n    private boolean includeAllEnvironmentVariables;",
      "right" : "@Parameter(property = \"fabric8.includeAllEnvironmentVariables\", defaultValue = \"true\")\n    private boolean includeAllEnvironmentVariables;",
      "info" : "FieldDeclaration[11754-12066]:FieldDeclaration[11721-12033]"
    }, {
      "left" : "@Parameter(property = \"fabric8.containerPrivileged\")\n    protected Boolean containerPrivileged;",
      "right" : "@Parameter(property = \"fabric8.containerPrivileged\")\n    protected Boolean containerPrivileged;",
      "info" : "FieldDeclaration[12072-12167]:FieldDeclaration[12039-12134]"
    }, {
      "left" : "@Parameter(property = \"fabric8.serviceAccount\")\n    protected String serviceAccount;",
      "right" : "@Parameter(property = \"fabric8.serviceAccount\")\n    protected String serviceAccount;",
      "info" : "FieldDeclaration[12173-12257]:FieldDeclaration[12140-12224]"
    }, {
      "left" : "@Parameter(property = \"fabric8.templateParametersFile\", defaultValue = \"${basedir}/src/main/fabric8/templateParameters.properties\")\n    protected File templateParametersPropertiesFile;",
      "right" : "@Parameter(property = \"fabric8.templateParametersFile\", defaultValue = \"${basedir}/src/main/fabric8/templateParameters.properties\")\n    protected File templateParametersPropertiesFile;",
      "info" : "FieldDeclaration[12263-12765]:FieldDeclaration[12230-12732]"
    }, {
      "left" : "@Parameter(property = \"fabric8.maximumDataUrlSizeK\", defaultValue = \"2\")\n    private int maximumDataUrlSizeK;",
      "right" : "@Parameter(property = \"fabric8.maximumDataUrlSizeK\", defaultValue = \"2\")\n    private int maximumDataUrlSizeK;",
      "info" : "FieldDeclaration[12771-13043]:FieldDeclaration[12738-13010]"
    }, {
      "left" : "@Component\n    protected ArtifactResolver resolver;",
      "right" : "@Component\n    protected ArtifactResolver resolver;",
      "info" : "FieldDeclaration[13049-13100]:FieldDeclaration[13016-13067]"
    }, {
      "left" : "@Parameter(property = \"localRepository\", readonly = true, required = true)\n    protected ArtifactRepository localRepository;",
      "right" : "@Parameter(property = \"localRepository\", readonly = true, required = true)\n    protected ArtifactRepository localRepository;",
      "info" : "FieldDeclaration[13106-13230]:FieldDeclaration[13073-13197]"
    }, {
      "left" : "@Parameter(property = \"project.remoteArtifactRepositories\")\n    protected List remoteRepositories;",
      "right" : "@Parameter(property = \"project.remoteArtifactRepositories\")\n    protected List remoteRepositories;",
      "info" : "FieldDeclaration[13236-13334]:FieldDeclaration[13203-13301]"
    }, {
      "left" : "public void execute() throws MojoExecutionException, MojoFailureException",
      "right" : "public void execute() throws MojoExecutionException, MojoFailureException",
      "info" : "MethodDeclaration[13340-14370]:MethodDeclaration[13307-14337]"
    }, {
      "left" : "protected boolean shouldGenerateForThisProject()",
      "right" : "protected boolean shouldGenerateForThisProject()",
      "info" : "MethodDeclaration[14376-14522]:MethodDeclaration[14343-14489]"
    }, {
      "left" : "protected void combineDependentJsonFiles(File json) throws MojoExecutionException",
      "right" : "protected void combineDependentJsonFiles(File json) throws MojoExecutionException",
      "info" : "MethodDeclaration[14528-17459]:MethodDeclaration[14495-17426]"
    }, {
      "left" : "private void addKubernetesJsonFileToList(List<Object> list, File file)",
      "right" : "private void addKubernetesJsonFileToList(List<Object> list, File file)",
      "info" : "MethodDeclaration[17465-18090]:MethodDeclaration[17432-18057]"
    }, {
      "left" : "protected Set<Artifact> resolveArtifacts(Artifact artifact)",
      "right" : "protected Set<Artifact> resolveArtifacts(Artifact artifact)",
      "info" : "MethodDeclaration[18096-18501]:MethodDeclaration[18063-18468]"
    }, {
      "left" : "protected void combineJsonFiles(File json, File kubernetesExtraJson) throws MojoExecutionException",
      "right" : "protected void combineJsonFiles(File json, File kubernetesExtraJson) throws MojoExecutionException",
      "info" : "MethodDeclaration[18507-19284]:MethodDeclaration[18474-19251]"
    }, {
      "left" : "protected void wrapInDeploymentConfigs(File json) throws MojoExecutionException",
      "right" : "protected void wrapInDeploymentConfigs(File json) throws MojoExecutionException",
      "info" : "MethodDeclaration[19290-20622]:MethodDeclaration[19257-20589]"
    }, {
      "left" : "protected List<HasMetadata> wrapInDeploymentConfigs(List<HasMetadata> items)",
      "right" : "protected List<HasMetadata> wrapInDeploymentConfigs(List<HasMetadata> items)",
      "info" : "MethodDeclaration[20628-21130]:MethodDeclaration[20595-21097]"
    }, {
      "left" : "protected void wrapInDeploymentConfigs(List<HasMetadata> list, ReplicationController replicationController)",
      "right" : "protected void wrapInDeploymentConfigs(List<HasMetadata> list, ReplicationController replicationController)",
      "info" : "MethodDeclaration[21136-23894]:MethodDeclaration[21103-23861]"
    }, {
      "left" : "protected ImageStream getOrAddImageStream(List<HasMetadata> list, String imageStreamName, Map<String, String> labels)",
      "right" : "protected ImageStream getOrAddImageStream(List<HasMetadata> list, String imageStreamName, Map<String, String> labels)",
      "info" : "MethodDeclaration[23900-24521]:MethodDeclaration[23867-24488]"
    }, {
      "left" : "protected static Object loadJsonFile(File file) throws MojoExecutionException",
      "right" : "protected static Object loadJsonFile(File file) throws MojoExecutionException",
      "info" : "MethodDeclaration[24527-24814]:MethodDeclaration[24494-24781]"
    }, {
      "left" : "protected void generateKubernetesJson(File kubernetesJson) throws MojoExecutionException",
      "right" : "protected void generateKubernetesJson(File kubernetesJson) throws MojoExecutionException",
      "info" : "MethodDeclaration[24820-28982]:MethodDeclaration[24787-28949]"
    }, {
      "left" : "protected void configureTemplateDescriptionAndIcon(Template template, String iconUrl)",
      "right" : "protected void configureTemplateDescriptionAndIcon(Template template, String iconUrl)",
      "info" : "MethodDeclaration[28988-29376]:MethodDeclaration[28955-29343]"
    }, {
      "left" : "protected String getTemplateKey(Template template, String key)",
      "right" : "protected String getTemplateKey(Template template, String key)",
      "info" : "MethodDeclaration[29382-29652]:MethodDeclaration[29349-29619]"
    }, {
      "left" : "protected void addDocumentationAnnotations(Template template, Map<String, String> annotations)",
      "right" : "protected void addDocumentationAnnotations(Template template, Map<String, String> annotations)",
      "info" : "MethodDeclaration[29658-31018]:MethodDeclaration[29625-30985]"
    }, {
      "left" : "protected String getIconUrl()",
      "right" : "protected String getIconUrl()",
      "info" : "MethodDeclaration[31024-32939]:MethodDeclaration[30991-32906]"
    }, {
      "left" : "protected String convertIconFileToURL(File iconFile) throws IOException",
      "right" : "protected String convertIconFileToURL(File iconFile) throws IOException",
      "info" : "MethodDeclaration[32945-36185]:MethodDeclaration[32912-36152]"
    }, {
      "left" : "protected String asCommonIconRef(String iconRef)",
      "right" : "protected String asCommonIconRef(String iconRef)",
      "info" : "MethodDeclaration[36191-37402]:MethodDeclaration[36158-37369]"
    }, {
      "left" : "protected Probe getLivenessProbe()",
      "right" : "protected Probe getLivenessProbe()",
      "info" : "MethodDeclaration[37408-37500]:MethodDeclaration[37375-37467]"
    }, {
      "left" : "protected Probe getReadinessProbe()",
      "right" : "protected Probe getReadinessProbe()",
      "info" : "MethodDeclaration[37506-37600]:MethodDeclaration[37473-37567]"
    }, {
      "left" : "protected Probe getProbe(String prefix)",
      "right" : "protected Probe getProbe(String prefix)",
      "info" : "MethodDeclaration[37606-38966]:MethodDeclaration[37573-38734]"
    }, {
      "left" : "public Boolean getContainerPrivileged()",
      "right" : "public Boolean getContainerPrivileged()",
      "info" : "MethodDeclaration[38972-39055]:MethodDeclaration[40596-40679]"
    }, {
      "left" : "public String getImagePullPolicy()",
      "right" : "public String getImagePullPolicy()",
      "info" : "MethodDeclaration[39061-39581]:MethodDeclaration[40685-41205]"
    }, {
      "left" : "public String getKubernetesContainerName()",
      "right" : "public String getKubernetesContainerName()",
      "info" : "MethodDeclaration[39587-40594]:MethodDeclaration[41211-42218]"
    }, {
      "left" : "public void setKubernetesContainerName(String kubernetesContainerName)",
      "right" : "public void setKubernetesContainerName(String kubernetesContainerName)",
      "info" : "MethodDeclaration[40600-40742]:MethodDeclaration[42224-42366]"
    }, {
      "left" : "public String getKubernetesName()",
      "right" : "public String getKubernetesName()",
      "info" : "MethodDeclaration[40748-40820]:MethodDeclaration[42372-42444]"
    }, {
      "left" : "public void setKubernetesName(String kubernetesName)",
      "right" : "public void setKubernetesName(String kubernetesName)",
      "info" : "MethodDeclaration[40826-40932]:MethodDeclaration[42450-42556]"
    }, {
      "left" : "public Map<String, Integer> getDefaultContainerPortMap()",
      "right" : "public Map<String, Integer> getDefaultContainerPortMap()",
      "info" : "MethodDeclaration[40938-41369]:MethodDeclaration[42562-42993]"
    }, {
      "left" : "public void setDefaultContainerPortMap(Map<String, Integer> defaultContainerPortMap)",
      "right" : "public void setDefaultContainerPortMap(Map<String, Integer> defaultContainerPortMap)",
      "info" : "MethodDeclaration[41375-41531]:MethodDeclaration[42999-43155]"
    }, {
      "left" : "public List<ContainerPort> getContainerPorts()",
      "right" : "public List<ContainerPort> getContainerPorts()",
      "info" : "MethodDeclaration[41537-43696]:MethodDeclaration[43161-45320]"
    }, {
      "left" : "protected static ContainerPort getOrCreatePort(Map<String, ContainerPort> portMap, String name)",
      "right" : "protected static ContainerPort getOrCreatePort(Map<String, ContainerPort> portMap, String name)",
      "info" : "MethodDeclaration[43702-44034]:MethodDeclaration[45326-45658]"
    }, {
      "left" : "public List<ServicePort> getServicePorts() throws MojoExecutionException",
      "right" : "public List<ServicePort> getServicePorts() throws MojoExecutionException",
      "info" : "MethodDeclaration[44040-47574]:MethodDeclaration[45664-49198]"
    }, {
      "left" : "protected static EnvVar getOrCreateEnv(Map<String, EnvVar> envMap, String name)",
      "right" : "protected static EnvVar getOrCreateEnv(Map<String, EnvVar> envMap, String name)",
      "info" : "MethodDeclaration[47580-47845]:MethodDeclaration[49204-49469]"
    }, {
      "left" : "protected Integer parsePort(String portText, String propertyName)",
      "right" : "protected Integer parsePort(String portText, String propertyName)",
      "info" : "MethodDeclaration[47851-48259]:MethodDeclaration[49475-49883]"
    }, {
      "left" : "public void setContainerPorts(List<ContainerPort> ports)",
      "right" : "public void setContainerPorts(List<ContainerPort> ports)",
      "info" : "MethodDeclaration[48265-48366]:MethodDeclaration[49889-49990]"
    }, {
      "left" : "public void setServicePorts(List<ServicePort> ports)",
      "right" : "public void setServicePorts(List<ServicePort> ports)",
      "info" : "MethodDeclaration[48372-48467]:MethodDeclaration[49996-50091]"
    }, {
      "left" : "public Map<String, String> getLabels()",
      "right" : "public Map<String, String> getLabels()",
      "info" : "MethodDeclaration[48473-48788]:MethodDeclaration[50097-50412]"
    }, {
      "left" : "public List<EnvVar> getEnvironmentVariables() throws MojoExecutionException",
      "right" : "public List<EnvVar> getEnvironmentVariables() throws MojoExecutionException",
      "info" : "MethodDeclaration[48794-50235]:MethodDeclaration[50418-51859]"
    }, {
      "left" : "public Map<String, String> getExportedEnvironmentVariables() throws MojoExecutionException",
      "right" : "public Map<String, String> getExportedEnvironmentVariables() throws MojoExecutionException",
      "info" : "MethodDeclaration[50241-51488]:MethodDeclaration[51865-53112]"
    }, {
      "left" : "public List<VolumeMount> getVolumeMounts()",
      "right" : "public List<VolumeMount> getVolumeMounts()",
      "info" : "MethodDeclaration[51494-52505]:MethodDeclaration[53118-54129]"
    }, {
      "left" : "public List<Volume> getVolumes()",
      "right" : "public List<Volume> getVolumes()",
      "info" : "MethodDeclaration[52511-53383]:MethodDeclaration[54135-55007]"
    }, {
      "left" : "public Template getTemplate() throws MojoExecutionException",
      "right" : "public Template getTemplate() throws MojoExecutionException",
      "info" : "MethodDeclaration[53389-55338]:MethodDeclaration[55013-56962]"
    }, {
      "left" : "protected void loadParametersFromProperties(Properties properties, List<io.fabric8.openshift.api.model.template.Parameter> parameters, Set<String> paramNames)",
      "right" : "protected void loadParametersFromProperties(Properties properties, List<io.fabric8.openshift.api.model.template.Parameter> parameters, Set<String> paramNames)",
      "info" : "MethodDeclaration[55344-57464]:MethodDeclaration[56968-59088]"
    }, {
      "left" : "private String labelValueOrBlank(String label, String value)",
      "right" : "private String labelValueOrBlank(String label, String value)",
      "info" : "MethodDeclaration[57470-57676]:MethodDeclaration[59094-59300]"
    }, {
      "left" : "public void setLabels(Map<String, String> labels)",
      "right" : "public void setLabels(Map<String, String> labels)",
      "info" : "MethodDeclaration[57682-57769]:MethodDeclaration[59306-59393]"
    }, {
      "left" : "protected static void addIfNotDefined(Map<String, Object> variables, String key, String value)",
      "right" : "protected static void addIfNotDefined(Map<String, Object> variables, String key, String value)",
      "info" : "MethodDeclaration[57775-57969]:MethodDeclaration[59399-59593]"
    } ],
    "mappings" : [
 {
      "left" : "@Mojo(name = \"json\", defaultPhase = LifecyclePhase.GENERATE_RESOURCES)",
      "right" : "@Mojo(name = \"json\", defaultPhase = LifecyclePhase.GENERATE_RESOURCES)",
      "info" : "NormalAnnotation[3055-3125]:NormalAnnotation[3022-3092]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3126-3132]:Modifier[3093-3099]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3133-3138]:TYPE_DECLARATION_KIND[3100-3105]"
    }, {
      "left" : "JsonMojo",
      "right" : "JsonMojo",
      "info" : "SimpleName[3139-3147]:SimpleName[3106-3114]"
    }, {
      "left" : "AbstractFabric8Mojo",
      "right" : "AbstractFabric8Mojo",
      "info" : "SimpleType[3156-3175]:SimpleType[3123-3142]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13340-13349]:MarkerAnnotation[13307-13316]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13354-13360]:Modifier[13321-13327]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13361-13365]:PrimitiveType[13328-13332]"
    }, {
      "left" : "execute",
      "right" : "execute",
      "info" : "SimpleName[13366-13373]:SimpleName[13333-13340]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[13383-13405]:SimpleType[13350-13372]"
    }, {
      "left" : "MojoFailureException",
      "right" : "MojoFailureException",
      "info" : "SimpleType[13407-13427]:SimpleType[13374-13394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13428-14370]:Block[13395-14337]"
    }, {
      "left" : "File json = getKubernetesJson();",
      "right" : "File json = getKubernetesJson();",
      "info" : "VariableDeclarationStatement[13438-13470]:VariableDeclarationStatement[13405-13437]"
    }, {
      "left" : "getLog().info(\"Configured with file: \" + json);",
      "right" : "getLog().info(\"Configured with file: \" + json);",
      "info" : "ExpressionStatement[13479-13526]:ExpressionStatement[13446-13493]"
    }, {
      "left" : "if (json == null)",
      "right" : "if (json == null)",
      "info" : "IfStatement[13535-13651]:IfStatement[13502-13618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13553-13651]:Block[13520-13618]"
    }, {
      "left" : "throw new MojoExecutionException(\"No kubernetes json file is specified!\");",
      "right" : "throw new MojoExecutionException(\"No kubernetes json file is specified!\");",
      "info" : "ThrowStatement[13567-13641]:ThrowStatement[13534-13608]"
    }, {
      "left" : "if (shouldGenerateForThisProject())",
      "right" : "if (shouldGenerateForThisProject())",
      "info" : "IfStatement[13660-14364]:IfStatement[13627-14331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13696-14364]:Block[13663-14331]"
    }, {
      "left" : "if (!isIgnoreProject() || combineDependencies)",
      "right" : "if (!isIgnoreProject() || combineDependencies)",
      "info" : "IfStatement[13710-14354]:IfStatement[13677-14321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13757-14354]:Block[13724-14321]"
    }, {
      "left" : "if (combineDependencies)",
      "right" : "if (combineDependencies)",
      "info" : "IfStatement[13775-14144]:IfStatement[13742-14111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13800-13872]:Block[13767-13839]"
    }, {
      "left" : "combineDependentJsonFiles(json);",
      "right" : "combineDependentJsonFiles(json);",
      "info" : "ExpressionStatement[13822-13854]:ExpressionStatement[13789-13821]"
    }, {
      "left" : "if (generateJson)",
      "right" : "if (generateJson)",
      "info" : "IfStatement[13878-14144]:IfStatement[13845-14111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13896-14144]:Block[13863-14111]"
    }, {
      "left" : "generateKubernetesJson(json);",
      "right" : "generateKubernetesJson(json);",
      "info" : "ExpressionStatement[13918-13947]:ExpressionStatement[13885-13914]"
    }, {
      "left" : "if (kubernetesExtraJson != null && kubernetesExtraJson.exists())",
      "right" : "if (kubernetesExtraJson != null && kubernetesExtraJson.exists())",
      "info" : "IfStatement[13969-14126]:IfStatement[13936-14093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14034-14126]:Block[14001-14093]"
    }, {
      "left" : "combineJsonFiles(json, kubernetesExtraJson);",
      "right" : "combineJsonFiles(json, kubernetesExtraJson);",
      "info" : "ExpressionStatement[14060-14104]:ExpressionStatement[14027-14071]"
    }, {
      "left" : "if (json.exists() && json.isFile())",
      "right" : "if (json.exists() && json.isFile())",
      "info" : "IfStatement[14161-14340]:IfStatement[14128-14307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14197-14340]:Block[14164-14307]"
    }, {
      "left" : "if (useDeploymentConfig)",
      "right" : "if (useDeploymentConfig)",
      "info" : "IfStatement[14219-14322]:IfStatement[14186-14289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14244-14322]:Block[14211-14289]"
    }, {
      "left" : "wrapInDeploymentConfigs(json);",
      "right" : "wrapInDeploymentConfigs(json);",
      "info" : "ExpressionStatement[14270-14300]:ExpressionStatement[14237-14267]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14376-14385]:MarkerAnnotation[14343-14352]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14390-14399]:Modifier[14357-14366]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[14400-14407]:PrimitiveType[14367-14374]"
    }, {
      "left" : "shouldGenerateForThisProject",
      "right" : "shouldGenerateForThisProject",
      "info" : "SimpleName[14408-14436]:SimpleName[14375-14403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14439-14522]:Block[14406-14489]"
    }, {
      "left" : "return super.shouldGenerateForThisProject() || combineDependencies;",
      "right" : "return super.shouldGenerateForThisProject() || combineDependencies;",
      "info" : "ReturnStatement[14449-14516]:ReturnStatement[14416-14483]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14528-14537]:Modifier[14495-14504]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14538-14542]:PrimitiveType[14505-14509]"
    }, {
      "left" : "combineDependentJsonFiles",
      "right" : "combineDependentJsonFiles",
      "info" : "SimpleName[14543-14568]:SimpleName[14510-14535]"
    }, {
      "left" : "File json",
      "right" : "File json",
      "info" : "SingleVariableDeclaration[14569-14578]:SingleVariableDeclaration[14536-14545]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[14587-14609]:SimpleType[14554-14576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14610-17459]:Block[14577-17426]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14620-17453]:TryStatement[14587-17420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14624-17267]:Block[14591-17234]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[14638-14674]:VariableDeclarationStatement[14605-14641]"
    }, {
      "left" : "Set<File> jsonFiles = new LinkedHashSet<>();",
      "right" : "Set<File> jsonFiles = new LinkedHashSet<>();",
      "info" : "VariableDeclarationStatement[14687-14731]:VariableDeclarationStatement[14654-14698]"
    }, {
      "left" : "Set<Artifact> dependencyArtifacts = project.getDependencyArtifacts();",
      "right" : "Set<Artifact> dependencyArtifacts = project.getDependencyArtifacts();",
      "info" : "VariableDeclarationStatement[14744-14813]:VariableDeclarationStatement[14711-14780]"
    }, {
      "left" : "for (Artifact artifact : dependencyArtifacts)",
      "right" : "for (Artifact artifact : dependencyArtifacts)",
      "info" : "EnhancedForStatement[14826-16017]:EnhancedForStatement[14793-15984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14872-16017]:Block[14839-15984]"
    }, {
      "left" : "String classifier = artifact.getClassifier();",
      "right" : "String classifier = artifact.getClassifier();",
      "info" : "VariableDeclarationStatement[14890-14935]:VariableDeclarationStatement[14857-14902]"
    }, {
      "left" : "String type = artifact.getType();",
      "right" : "String type = artifact.getType();",
      "info" : "VariableDeclarationStatement[14952-14985]:VariableDeclarationStatement[14919-14952]"
    }, {
      "left" : "File file = artifact.getFile();",
      "right" : "File file = artifact.getFile();",
      "info" : "VariableDeclarationStatement[15002-15033]:VariableDeclarationStatement[14969-15000]"
    }, {
      "left" : "if (isKubernetesJsonArtifact(classifier, type))",
      "right" : "if (isKubernetesJsonArtifact(classifier, type))",
      "info" : "IfStatement[15051-16003]:IfStatement[15018-15970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15099-16003]:Block[15066-15970]"
    }, {
      "left" : "if (file != null)",
      "right" : "if (file != null)",
      "info" : "IfStatement[15121-15985]:IfStatement[15088-15952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15139-15300]:Block[15106-15267]"
    }, {
      "left" : "System.out.println(\"Found kubernetes JSON dependency: \" + artifact);",
      "right" : "System.out.println(\"Found kubernetes JSON dependency: \" + artifact);",
      "info" : "ExpressionStatement[15165-15233]:ExpressionStatement[15132-15200]"
    }, {
      "left" : "jsonFiles.add(file);",
      "right" : "jsonFiles.add(file);",
      "info" : "ExpressionStatement[15258-15278]:ExpressionStatement[15225-15245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15306-15985]:Block[15273-15952]"
    }, {
      "left" : "Set<Artifact> artifacts = resolveArtifacts(artifact);",
      "right" : "Set<Artifact> artifacts = resolveArtifacts(artifact);",
      "info" : "VariableDeclarationStatement[15332-15385]:VariableDeclarationStatement[15299-15352]"
    }, {
      "left" : "for (Artifact resolvedArtifact : artifacts)",
      "right" : "for (Artifact resolvedArtifact : artifacts)",
      "info" : "EnhancedForStatement[15410-15963]:EnhancedForStatement[15377-15930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15454-15963]:Block[15421-15930]"
    }, {
      "left" : "classifier = resolvedArtifact.getClassifier();",
      "right" : "classifier = resolvedArtifact.getClassifier();",
      "info" : "ExpressionStatement[15484-15530]:ExpressionStatement[15451-15497]"
    }, {
      "left" : "type = resolvedArtifact.getType();",
      "right" : "type = resolvedArtifact.getType();",
      "info" : "ExpressionStatement[15559-15593]:ExpressionStatement[15526-15560]"
    }, {
      "left" : "file = resolvedArtifact.getFile();",
      "right" : "file = resolvedArtifact.getFile();",
      "info" : "ExpressionStatement[15622-15656]:ExpressionStatement[15589-15623]"
    }, {
      "left" : "if (isKubernetesJsonArtifact(classifier, type) && file != null)",
      "right" : "if (isKubernetesJsonArtifact(classifier, type) && file != null)",
      "info" : "IfStatement[15685-15937]:IfStatement[15652-15904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15749-15937]:Block[15716-15904]"
    }, {
      "left" : "System.out.println(\"Resolved kubernetes JSON dependency: \" + artifact);",
      "right" : "System.out.println(\"Resolved kubernetes JSON dependency: \" + artifact);",
      "info" : "ExpressionStatement[15783-15854]:ExpressionStatement[15750-15821]"
    }, {
      "left" : "jsonFiles.add(file);",
      "right" : "jsonFiles.add(file);",
      "info" : "ExpressionStatement[15887-15907]:ExpressionStatement[15854-15874]"
    }, {
      "left" : "List<Object> jsonObjectList = new ArrayList<>();",
      "right" : "List<Object> jsonObjectList = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[16030-16078]:VariableDeclarationStatement[15997-16045]"
    }, {
      "left" : "for (File file : jsonFiles)",
      "right" : "for (File file : jsonFiles)",
      "info" : "EnhancedForStatement[16091-16201]:EnhancedForStatement[16058-16168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16119-16201]:Block[16086-16168]"
    }, {
      "left" : "addKubernetesJsonFileToList(jsonObjectList, file);",
      "right" : "addKubernetesJsonFileToList(jsonObjectList, file);",
      "info" : "ExpressionStatement[16137-16187]:ExpressionStatement[16104-16154]"
    }, {
      "left" : "if (jsonObjectList.isEmpty())",
      "right" : "if (jsonObjectList.isEmpty())",
      "info" : "IfStatement[16214-16574]:IfStatement[16181-16541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16244-16574]:Block[16211-16541]"
    }, {
      "left" : "if (failOnMissingJsonFiles)",
      "right" : "if (failOnMissingJsonFiles)",
      "info" : "IfStatement[16262-16560]:IfStatement[16229-16527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16290-16418]:Block[16257-16385]"
    }, {
      "left" : "throw new MojoExecutionException(\"Could not find any dependent kubernetes JSON files!\");",
      "right" : "throw new MojoExecutionException(\"Could not find any dependent kubernetes JSON files!\");",
      "info" : "ThrowStatement[16312-16400]:ThrowStatement[16279-16367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16424-16560]:Block[16391-16527]"
    }, {
      "left" : "getLog().warn(\"Could not find any dependent kubernetes JSON files\");",
      "right" : "getLog().warn(\"Could not find any dependent kubernetes JSON files\");",
      "info" : "ExpressionStatement[16446-16514]:ExpressionStatement[16413-16481]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[16535-16542]:ReturnStatement[16502-16509]"
    }, {
      "left" : "Object combinedJson;",
      "right" : "Object combinedJson;",
      "info" : "VariableDeclarationStatement[16587-16607]:VariableDeclarationStatement[16554-16574]"
    }, {
      "left" : "if (jsonObjectList.size() == 1)",
      "right" : "if (jsonObjectList.size() == 1)",
      "info" : "IfStatement[16620-16829]:IfStatement[16587-16796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16652-16721]:Block[16619-16688]"
    }, {
      "left" : "combinedJson = jsonObjectList.get(0);",
      "right" : "combinedJson = jsonObjectList.get(0);",
      "info" : "ExpressionStatement[16670-16707]:ExpressionStatement[16637-16674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16727-16829]:Block[16694-16796]"
    }, {
      "left" : "combinedJson = KubernetesHelper.combineJson(jsonObjectList.toArray());",
      "right" : "combinedJson = KubernetesHelper.combineJson(jsonObjectList.toArray());",
      "info" : "ExpressionStatement[16745-16815]:ExpressionStatement[16712-16782]"
    }, {
      "left" : "if (combinedJson instanceof Template)",
      "right" : "if (combinedJson instanceof Template)",
      "info" : "IfStatement[16842-17089]:IfStatement[16809-17056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16880-17089]:Block[16847-17056]"
    }, {
      "left" : "Template template = (Template) combinedJson;",
      "right" : "Template template = (Template) combinedJson;",
      "info" : "VariableDeclarationStatement[16898-16942]:VariableDeclarationStatement[16865-16909]"
    }, {
      "left" : "setName(template, getKubernetesName());",
      "right" : "setName(template, getKubernetesName());",
      "info" : "ExpressionStatement[16959-16998]:ExpressionStatement[16926-16965]"
    }, {
      "left" : "configureTemplateDescriptionAndIcon(template, getIconUrl());",
      "right" : "configureTemplateDescriptionAndIcon(template, getIconUrl());",
      "info" : "ExpressionStatement[17015-17075]:ExpressionStatement[16982-17042]"
    }, {
      "left" : "json.getParentFile().mkdirs();",
      "right" : "json.getParentFile().mkdirs();",
      "info" : "ExpressionStatement[17102-17132]:ExpressionStatement[17069-17099]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, combinedJson);",
      "right" : "KubernetesHelper.saveJson(json, combinedJson);",
      "info" : "ExpressionStatement[17145-17191]:ExpressionStatement[17112-17158]"
    }, {
      "left" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "right" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "info" : "ExpressionStatement[17204-17257]:ExpressionStatement[17171-17224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17288-17453]:Block[17255-17420]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "info" : "ThrowStatement[17302-17443]:ThrowStatement[17269-17410]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17465-17472]:Modifier[17432-17439]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17473-17477]:PrimitiveType[17440-17444]"
    }, {
      "left" : "addKubernetesJsonFileToList",
      "right" : "addKubernetesJsonFileToList",
      "info" : "SimpleName[17478-17505]:SimpleName[17445-17472]"
    }, {
      "left" : "List<Object> list",
      "right" : "List<Object> list",
      "info" : "SingleVariableDeclaration[17506-17523]:SingleVariableDeclaration[17473-17490]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[17525-17534]:SingleVariableDeclaration[17492-17501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17536-18090]:Block[17503-18057]"
    }, {
      "left" : "if (file.exists() && file.isFile())",
      "right" : "if (file.exists() && file.isFile())",
      "info" : "IfStatement[17546-18084]:IfStatement[17513-18051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17582-18007]:Block[17549-17974]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17596-17996]:TryStatement[17563-17963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17600-17870]:Block[17567-17837]"
    }, {
      "left" : "Object jsonObject = loadJsonFile(file);",
      "right" : "Object jsonObject = loadJsonFile(file);",
      "info" : "VariableDeclarationStatement[17618-17657]:VariableDeclarationStatement[17585-17624]"
    }, {
      "left" : "if (jsonObject != null)",
      "right" : "if (jsonObject != null)",
      "info" : "IfStatement[17674-17856]:IfStatement[17641-17823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17698-17759]:Block[17665-17726]"
    }, {
      "left" : "list.add(jsonObject);",
      "right" : "list.add(jsonObject);",
      "info" : "ExpressionStatement[17720-17741]:ExpressionStatement[17687-17708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17765-17856]:Block[17732-17823]"
    }, {
      "left" : "getLog().warn(\"No object found for file: \" + file);",
      "right" : "getLog().warn(\"No object found for file: \" + file);",
      "info" : "ExpressionStatement[17787-17838]:ExpressionStatement[17754-17805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17904-17996]:Block[17871-17963]"
    }, {
      "left" : "getLog().warn(\"Failed to parse file \" + file + \". \" + e, e);",
      "right" : "getLog().warn(\"Failed to parse file \" + file + \". \" + e, e);",
      "info" : "ExpressionStatement[17922-17982]:ExpressionStatement[17889-17949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18013-18084]:Block[17980-18051]"
    }, {
      "left" : "getLog().warn(\"Ignoring missing file \" + file);",
      "right" : "getLog().warn(\"Ignoring missing file \" + file);",
      "info" : "ExpressionStatement[18027-18074]:ExpressionStatement[17994-18041]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18096-18105]:Modifier[18063-18072]"
    }, {
      "left" : "Set<Artifact>",
      "right" : "Set<Artifact>",
      "info" : "ParameterizedType[18106-18119]:ParameterizedType[18073-18086]"
    }, {
      "left" : "resolveArtifacts",
      "right" : "resolveArtifacts",
      "info" : "SimpleName[18120-18136]:SimpleName[18087-18103]"
    }, {
      "left" : "Artifact artifact",
      "right" : "Artifact artifact",
      "info" : "SingleVariableDeclaration[18137-18154]:SingleVariableDeclaration[18104-18121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18156-18501]:Block[18123-18468]"
    }, {
      "left" : "ArtifactResolutionRequest request = new ArtifactResolutionRequest();",
      "right" : "ArtifactResolutionRequest request = new ArtifactResolutionRequest();",
      "info" : "VariableDeclarationStatement[18166-18234]:VariableDeclarationStatement[18133-18201]"
    }, {
      "left" : "request.setArtifact(artifact);",
      "right" : "request.setArtifact(artifact);",
      "info" : "ExpressionStatement[18243-18273]:ExpressionStatement[18210-18240]"
    }, {
      "left" : "request.setRemoteRepositories(remoteRepositories);",
      "right" : "request.setRemoteRepositories(remoteRepositories);",
      "info" : "ExpressionStatement[18282-18332]:ExpressionStatement[18249-18299]"
    }, {
      "left" : "request.setLocalRepository(localRepository);",
      "right" : "request.setLocalRepository(localRepository);",
      "info" : "ExpressionStatement[18341-18385]:ExpressionStatement[18308-18352]"
    }, {
      "left" : "ArtifactResolutionResult resolve = resolver.resolve(request);",
      "right" : "ArtifactResolutionResult resolve = resolver.resolve(request);",
      "info" : "VariableDeclarationStatement[18395-18456]:VariableDeclarationStatement[18362-18423]"
    }, {
      "left" : "return resolve.getArtifacts();",
      "right" : "return resolve.getArtifacts();",
      "info" : "ReturnStatement[18465-18495]:ReturnStatement[18432-18462]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18507-18516]:Modifier[18474-18483]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18517-18521]:PrimitiveType[18484-18488]"
    }, {
      "left" : "combineJsonFiles",
      "right" : "combineJsonFiles",
      "info" : "SimpleName[18522-18538]:SimpleName[18489-18505]"
    }, {
      "left" : "File json",
      "right" : "File json",
      "info" : "SingleVariableDeclaration[18539-18548]:SingleVariableDeclaration[18506-18515]"
    }, {
      "left" : "File kubernetesExtraJson",
      "right" : "File kubernetesExtraJson",
      "info" : "SingleVariableDeclaration[18550-18574]:SingleVariableDeclaration[18517-18541]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[18583-18605]:SimpleType[18550-18572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18606-19284]:Block[18573-19251]"
    }, {
      "left" : "getLog().info(\"Combining generated json \" + json + \" with extra json \" + kubernetesExtraJson);",
      "right" : "getLog().info(\"Combining generated json \" + json + \" with extra json \" + kubernetesExtraJson);",
      "info" : "ExpressionStatement[18660-18754]:ExpressionStatement[18627-18721]"
    }, {
      "left" : "Object extra = loadJsonFile(kubernetesExtraJson);",
      "right" : "Object extra = loadJsonFile(kubernetesExtraJson);",
      "info" : "VariableDeclarationStatement[18763-18812]:VariableDeclarationStatement[18730-18779]"
    }, {
      "left" : "Object generated = loadJsonFile(json);",
      "right" : "Object generated = loadJsonFile(json);",
      "info" : "VariableDeclarationStatement[18821-18859]:VariableDeclarationStatement[18788-18826]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[18868-19278]:TryStatement[18835-19245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18872-19090]:Block[18839-19057]"
    }, {
      "left" : "Object combinedJson = KubernetesHelper.combineJson(generated, extra);",
      "right" : "Object combinedJson = KubernetesHelper.combineJson(generated, extra);",
      "info" : "VariableDeclarationStatement[18886-18955]:VariableDeclarationStatement[18853-18922]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, combinedJson);",
      "right" : "KubernetesHelper.saveJson(json, combinedJson);",
      "info" : "ExpressionStatement[18968-19014]:ExpressionStatement[18935-18981]"
    }, {
      "left" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "right" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "info" : "ExpressionStatement[19027-19080]:ExpressionStatement[18994-19047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19113-19278]:Block[19080-19245]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "info" : "ThrowStatement[19127-19268]:ThrowStatement[19094-19235]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19290-19299]:Modifier[19257-19266]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19300-19304]:PrimitiveType[19267-19271]"
    }, {
      "left" : "wrapInDeploymentConfigs",
      "right" : "wrapInDeploymentConfigs",
      "info" : "SimpleName[19305-19328]:SimpleName[19272-19295]"
    }, {
      "left" : "File json",
      "right" : "File json",
      "info" : "SingleVariableDeclaration[19329-19338]:SingleVariableDeclaration[19296-19305]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[19347-19369]:SimpleType[19314-19336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19370-20622]:Block[19337-20589]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[19380-20616]:TryStatement[19347-20583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19384-20428]:Block[19351-20395]"
    }, {
      "left" : "Object dto = loadJsonFile(json);",
      "right" : "Object dto = loadJsonFile(json);",
      "info" : "VariableDeclarationStatement[19398-19430]:VariableDeclarationStatement[19365-19397]"
    }, {
      "left" : "if (dto instanceof KubernetesList)",
      "right" : "if (dto instanceof KubernetesList)",
      "info" : "IfStatement[19443-20418]:IfStatement[19410-20385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19478-19882]:Block[19445-19849]"
    }, {
      "left" : "KubernetesList container = (KubernetesList) dto;",
      "right" : "KubernetesList container = (KubernetesList) dto;",
      "info" : "VariableDeclarationStatement[19496-19544]:VariableDeclarationStatement[19463-19511]"
    }, {
      "left" : "List<HasMetadata> items = container.getItems();",
      "right" : "List<HasMetadata> items = container.getItems();",
      "info" : "VariableDeclarationStatement[19561-19608]:VariableDeclarationStatement[19528-19575]"
    }, {
      "left" : "items = wrapInDeploymentConfigs(items);",
      "right" : "items = wrapInDeploymentConfigs(items);",
      "info" : "ExpressionStatement[19625-19664]:ExpressionStatement[19592-19631]"
    }, {
      "left" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "right" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "info" : "ExpressionStatement[19681-19728]:ExpressionStatement[19648-19695]"
    }, {
      "left" : "printSummary(items);",
      "right" : "printSummary(items);",
      "info" : "ExpressionStatement[19745-19765]:ExpressionStatement[19712-19732]"
    }, {
      "left" : "container.setItems(items);",
      "right" : "container.setItems(items);",
      "info" : "ExpressionStatement[19782-19808]:ExpressionStatement[19749-19775]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, container);",
      "right" : "KubernetesHelper.saveJson(json, container);",
      "info" : "ExpressionStatement[19825-19868]:ExpressionStatement[19792-19835]"
    }, {
      "left" : "if (dto instanceof Template)",
      "right" : "if (dto instanceof Template)",
      "info" : "IfStatement[19888-20418]:IfStatement[19855-20385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19917-20418]:Block[19884-20385]"
    }, {
      "left" : "Template container = (Template) dto;",
      "right" : "Template container = (Template) dto;",
      "info" : "VariableDeclarationStatement[19935-19971]:VariableDeclarationStatement[19902-19938]"
    }, {
      "left" : "List<HasMetadata> items = container.getObjects();",
      "right" : "List<HasMetadata> items = container.getObjects();",
      "info" : "VariableDeclarationStatement[19988-20037]:VariableDeclarationStatement[19955-20004]"
    }, {
      "left" : "items = wrapInDeploymentConfigs(items);",
      "right" : "items = wrapInDeploymentConfigs(items);",
      "info" : "ExpressionStatement[20054-20093]:ExpressionStatement[20021-20060]"
    }, {
      "left" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "right" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "info" : "ExpressionStatement[20110-20157]:ExpressionStatement[20077-20124]"
    }, {
      "left" : "printSummary(items);",
      "right" : "printSummary(items);",
      "info" : "ExpressionStatement[20174-20194]:ExpressionStatement[20141-20161]"
    }, {
      "left" : "container.setObjects(items);",
      "right" : "container.setObjects(items);",
      "info" : "ExpressionStatement[20211-20239]:ExpressionStatement[20178-20206]"
    }, {
      "left" : "getLog().info(\"Template is now:\");",
      "right" : "getLog().info(\"Template is now:\");",
      "info" : "ExpressionStatement[20256-20290]:ExpressionStatement[20223-20257]"
    }, {
      "left" : "printSummary(container.getObjects());",
      "right" : "printSummary(container.getObjects());",
      "info" : "ExpressionStatement[20307-20344]:ExpressionStatement[20274-20311]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, container);",
      "right" : "KubernetesHelper.saveJson(json, container);",
      "info" : "ExpressionStatement[20361-20404]:ExpressionStatement[20328-20371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20451-20616]:Block[20418-20583]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "info" : "ThrowStatement[20465-20606]:ThrowStatement[20432-20573]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[20628-20637]:Modifier[20595-20604]"
    }, {
      "left" : "List<HasMetadata>",
      "right" : "List<HasMetadata>",
      "info" : "ParameterizedType[20638-20655]:ParameterizedType[20605-20622]"
    }, {
      "left" : "wrapInDeploymentConfigs",
      "right" : "wrapInDeploymentConfigs",
      "info" : "SimpleName[20656-20679]:SimpleName[20623-20646]"
    }, {
      "left" : "List<HasMetadata> items",
      "right" : "List<HasMetadata> items",
      "info" : "SingleVariableDeclaration[20680-20703]:SingleVariableDeclaration[20647-20670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20705-21130]:Block[20672-21097]"
    }, {
      "left" : "List<HasMetadata> answer = new ArrayList<>();",
      "right" : "List<HasMetadata> answer = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[20715-20760]:VariableDeclarationStatement[20682-20727]"
    }, {
      "left" : "for (HasMetadata item : items)",
      "right" : "for (HasMetadata item : items)",
      "info" : "EnhancedForStatement[20769-21101]:EnhancedForStatement[20736-21068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20800-21101]:Block[20767-21068]"
    }, {
      "left" : "if (item instanceof ReplicationController)",
      "right" : "if (item instanceof ReplicationController)",
      "info" : "IfStatement[20814-21091]:IfStatement[20781-21058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20857-21036]:Block[20824-21003]"
    }, {
      "left" : "ReplicationController replicationController = (ReplicationController) item;",
      "right" : "ReplicationController replicationController = (ReplicationController) item;",
      "info" : "VariableDeclarationStatement[20875-20950]:VariableDeclarationStatement[20842-20917]"
    }, {
      "left" : "wrapInDeploymentConfigs(answer, replicationController);",
      "right" : "wrapInDeploymentConfigs(answer, replicationController);",
      "info" : "ExpressionStatement[20967-21022]:ExpressionStatement[20934-20989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21042-21091]:Block[21009-21058]"
    }, {
      "left" : "answer.add(item);",
      "right" : "answer.add(item);",
      "info" : "ExpressionStatement[21060-21077]:ExpressionStatement[21027-21044]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[21110-21124]:ReturnStatement[21077-21091]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21311-21320]:Modifier[21278-21287]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21321-21325]:PrimitiveType[21288-21292]"
    }, {
      "left" : "wrapInDeploymentConfigs",
      "right" : "wrapInDeploymentConfigs",
      "info" : "SimpleName[21326-21349]:SimpleName[21293-21316]"
    }, {
      "left" : "List<HasMetadata> list",
      "right" : "List<HasMetadata> list",
      "info" : "SingleVariableDeclaration[21350-21372]:SingleVariableDeclaration[21317-21339]"
    }, {
      "left" : "ReplicationController replicationController",
      "right" : "ReplicationController replicationController",
      "info" : "SingleVariableDeclaration[21374-21417]:SingleVariableDeclaration[21341-21384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21419-23894]:Block[21386-23861]"
    }, {
      "left" : "DeploymentConfigBuilder builder = new DeploymentConfigBuilder();",
      "right" : "DeploymentConfigBuilder builder = new DeploymentConfigBuilder();",
      "info" : "VariableDeclarationStatement[21429-21493]:VariableDeclarationStatement[21396-21460]"
    }, {
      "left" : "String name = getName(replicationController);",
      "right" : "String name = getName(replicationController);",
      "info" : "VariableDeclarationStatement[21503-21548]:VariableDeclarationStatement[21470-21515]"
    }, {
      "left" : "if (Strings.isNotBlank(name))",
      "right" : "if (Strings.isNotBlank(name))",
      "info" : "IfStatement[21557-21659]:IfStatement[21524-21626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21587-21659]:Block[21554-21626]"
    }, {
      "left" : "name = Strings.stripSuffix(name, \"-controller\");",
      "right" : "name = Strings.stripSuffix(name, \"-controller\");",
      "info" : "ExpressionStatement[21601-21649]:ExpressionStatement[21568-21616]"
    }, {
      "left" : "if (Strings.isNullOrBlank(name))",
      "right" : "if (Strings.isNullOrBlank(name))",
      "info" : "IfStatement[21668-21761]:IfStatement[21635-21728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21701-21761]:Block[21668-21728]"
    }, {
      "left" : "name = getProject().getArtifactId();",
      "right" : "name = getProject().getArtifactId();",
      "info" : "ExpressionStatement[21715-21751]:ExpressionStatement[21682-21718]"
    }, {
      "left" : "String deploymentName = name;",
      "right" : "String deploymentName = name;",
      "info" : "VariableDeclarationStatement[21770-21799]:VariableDeclarationStatement[21737-21766]"
    }, {
      "left" : "String imageStream = name;",
      "right" : "String imageStream = name;",
      "info" : "VariableDeclarationStatement[21808-21834]:VariableDeclarationStatement[21775-21801]"
    }, {
      "left" : "Map<String, String> labels = KubernetesHelper.getLabels(replicationController);",
      "right" : "Map<String, String> labels = KubernetesHelper.getLabels(replicationController);",
      "info" : "VariableDeclarationStatement[21845-21924]:VariableDeclarationStatement[21812-21891]"
    }, {
      "left" : "builder = builder.withNewMetadata().withName(deploymentName).withLabels(labels).endMetadata();",
      "right" : "builder = builder.withNewMetadata().withName(deploymentName).withLabels(labels).endMetadata();",
      "info" : "ExpressionStatement[21933-22027]:ExpressionStatement[21900-21994]"
    }, {
      "left" : "ReplicationControllerSpec spec = replicationController.getSpec();",
      "right" : "ReplicationControllerSpec spec = replicationController.getSpec();",
      "info" : "VariableDeclarationStatement[22037-22102]:VariableDeclarationStatement[22004-22069]"
    }, {
      "left" : "if (spec != null)",
      "right" : "if (spec != null)",
      "info" : "IfStatement[22111-23811]:IfStatement[22078-23778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22129-23811]:Block[22096-23778]"
    }, {
      "left" : "List<String> containerNames = new ArrayList<>();",
      "right" : "List<String> containerNames = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[22143-22191]:VariableDeclarationStatement[22110-22158]"
    }, {
      "left" : "PodTemplateSpec podTemplateSpec = spec.getTemplate();",
      "right" : "PodTemplateSpec podTemplateSpec = spec.getTemplate();",
      "info" : "VariableDeclarationStatement[22204-22257]:VariableDeclarationStatement[22171-22224]"
    }, {
      "left" : "if (podTemplateSpec != null)",
      "right" : "if (podTemplateSpec != null)",
      "info" : "IfStatement[22270-22903]:IfStatement[22237-22870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22299-22903]:Block[22266-22870]"
    }, {
      "left" : "PodSpec podSpec = podTemplateSpec.getSpec();",
      "right" : "PodSpec podSpec = podTemplateSpec.getSpec();",
      "info" : "VariableDeclarationStatement[22317-22361]:VariableDeclarationStatement[22284-22328]"
    }, {
      "left" : "if (podSpec != null)",
      "right" : "if (podSpec != null)",
      "info" : "IfStatement[22378-22889]:IfStatement[22345-22856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22399-22889]:Block[22366-22856]"
    }, {
      "left" : "List<Container> containers = podSpec.getContainers();",
      "right" : "List<Container> containers = podSpec.getContainers();",
      "info" : "VariableDeclarationStatement[22421-22474]:VariableDeclarationStatement[22388-22441]"
    }, {
      "left" : "if (containers != null)",
      "right" : "if (containers != null)",
      "info" : "IfStatement[22495-22871]:IfStatement[22462-22838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22519-22871]:Block[22486-22838]"
    }, {
      "left" : "for (Container container : containers)",
      "right" : "for (Container container : containers)",
      "info" : "EnhancedForStatement[22545-22849]:EnhancedForStatement[22512-22816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22584-22849]:Block[22551-22816]"
    }, {
      "left" : "String containerName = container.getName();",
      "right" : "String containerName = container.getName();",
      "info" : "VariableDeclarationStatement[22614-22657]:VariableDeclarationStatement[22581-22624]"
    }, {
      "left" : "if (Strings.isNotBlank(containerName))",
      "right" : "if (Strings.isNotBlank(containerName))",
      "info" : "IfStatement[22686-22823]:IfStatement[22653-22790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22725-22823]:Block[22692-22790]"
    }, {
      "left" : "containerNames.add(containerName);",
      "right" : "containerNames.add(containerName);",
      "info" : "ExpressionStatement[22759-22793]:ExpressionStatement[22726-22760]"
    }, {
      "left" : "getOrAddImageStream(list, imageStream, labels);",
      "right" : "getOrAddImageStream(list, imageStream, labels);",
      "info" : "ExpressionStatement[22916-22963]:ExpressionStatement[22883-22930]"
    }, {
      "left" : "builder = builder.withNewSpec().\n                    withTemplate(podTemplateSpec).withReplicas(spec.getReplicas()).withSelector(spec.getSelector()).\n                    withNewStrategy().\n                        withType(deploymentStrategy).\n                        endStrategy().\n                    addNewTrigger().\n                        withType(\"ImageChange\").\n                        withNewImageChangeParams().\n                            withAutomatic(true).\n                            withContainerNames(containerNames).\n                            withNewFrom().withName(imageStream + \":\" + lastTriggeredImageTag).endFrom().\n                            withLastTriggeredImage(lastTriggeredImageTag).\n                        endImageChangeParams().\n                    endTrigger().\n                    endSpec();",
      "right" : "builder = builder.withNewSpec().\n                    withTemplate(podTemplateSpec).withReplicas(spec.getReplicas()).withSelector(spec.getSelector()).\n                    withNewStrategy().\n                        withType(deploymentStrategy).\n                        endStrategy().\n                    addNewTrigger().\n                        withType(\"ImageChange\").\n                        withNewImageChangeParams().\n                            withAutomatic(true).\n                            withContainerNames(containerNames).\n                            withNewFrom().withName(imageStream + \":\" + lastTriggeredImageTag).endFrom().\n                            withLastTriggeredImage(lastTriggeredImageTag).\n                        endImageChangeParams().\n                    endTrigger().\n                    endSpec();",
      "info" : "ExpressionStatement[22976-23801]:ExpressionStatement[22943-23768]"
    }, {
      "left" : "DeploymentConfig config = builder.build();",
      "right" : "DeploymentConfig config = builder.build();",
      "info" : "VariableDeclarationStatement[23820-23862]:VariableDeclarationStatement[23787-23829]"
    }, {
      "left" : "list.add(config);",
      "right" : "list.add(config);",
      "info" : "ExpressionStatement[23871-23888]:ExpressionStatement[23838-23855]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[23900-23909]:Modifier[23867-23876]"
    }, {
      "left" : "ImageStream",
      "right" : "ImageStream",
      "info" : "SimpleType[23910-23921]:SimpleType[23877-23888]"
    }, {
      "left" : "getOrAddImageStream",
      "right" : "getOrAddImageStream",
      "info" : "SimpleName[23922-23941]:SimpleName[23889-23908]"
    }, {
      "left" : "List<HasMetadata> list",
      "right" : "List<HasMetadata> list",
      "info" : "SingleVariableDeclaration[23942-23964]:SingleVariableDeclaration[23909-23931]"
    }, {
      "left" : "String imageStreamName",
      "right" : "String imageStreamName",
      "info" : "SingleVariableDeclaration[23966-23988]:SingleVariableDeclaration[23933-23955]"
    }, {
      "left" : "Map<String, String> labels",
      "right" : "Map<String, String> labels",
      "info" : "SingleVariableDeclaration[23990-24016]:SingleVariableDeclaration[23957-23983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24018-24521]:Block[23985-24488]"
    }, {
      "left" : "for (HasMetadata item : list)",
      "right" : "for (HasMetadata item : list)",
      "info" : "EnhancedForStatement[24028-24311]:EnhancedForStatement[23995-24278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24058-24311]:Block[24025-24278]"
    }, {
      "left" : "if (item instanceof ImageStream)",
      "right" : "if (item instanceof ImageStream)",
      "info" : "IfStatement[24072-24301]:IfStatement[24039-24268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24105-24301]:Block[24072-24268]"
    }, {
      "left" : "ImageStream stream = (ImageStream) item;",
      "right" : "ImageStream stream = (ImageStream) item;",
      "info" : "VariableDeclarationStatement[24123-24163]:VariableDeclarationStatement[24090-24130]"
    }, {
      "left" : "if (Objects.equal(imageStreamName, getName(stream)))",
      "right" : "if (Objects.equal(imageStreamName, getName(stream)))",
      "info" : "IfStatement[24180-24287]:IfStatement[24147-24254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24233-24287]:Block[24200-24254]"
    }, {
      "left" : "return stream;",
      "right" : "return stream;",
      "info" : "ReturnStatement[24255-24269]:ReturnStatement[24222-24236]"
    }, {
      "left" : "ImageStream imageStream = new ImageStreamBuilder().withNewMetadata().withName(imageStreamName).withLabels(labels).endMetadata().build();",
      "right" : "ImageStream imageStream = new ImageStreamBuilder().withNewMetadata().withName(imageStreamName).withLabels(labels).endMetadata().build();",
      "info" : "VariableDeclarationStatement[24320-24456]:VariableDeclarationStatement[24287-24423]"
    }, {
      "left" : "list.add(imageStream);",
      "right" : "list.add(imageStream);",
      "info" : "ExpressionStatement[24465-24487]:ExpressionStatement[24432-24454]"
    }, {
      "left" : "return imageStream;",
      "right" : "return imageStream;",
      "info" : "ReturnStatement[24496-24515]:ReturnStatement[24463-24482]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24527-24536]:Modifier[24494-24503]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24537-24543]:Modifier[24504-24510]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[24544-24550]:SimpleType[24511-24517]"
    }, {
      "left" : "loadJsonFile",
      "right" : "loadJsonFile",
      "info" : "SimpleName[24551-24563]:SimpleName[24518-24530]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[24564-24573]:SingleVariableDeclaration[24531-24540]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[24582-24604]:SimpleType[24549-24571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24605-24814]:Block[24572-24781]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[24615-24808]:TryStatement[24582-24775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24619-24682]:Block[24586-24649]"
    }, {
      "left" : "return KubernetesHelper.loadJson(file);",
      "right" : "return KubernetesHelper.loadJson(file);",
      "info" : "ReturnStatement[24633-24672]:ReturnStatement[24600-24639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24705-24808]:Block[24672-24775]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to parse JSON \" + file + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to parse JSON \" + file + \". \" + e, e);",
      "info" : "ThrowStatement[24719-24798]:ThrowStatement[24686-24765]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24820-24829]:Modifier[24787-24796]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24830-24834]:PrimitiveType[24797-24801]"
    }, {
      "left" : "generateKubernetesJson",
      "right" : "generateKubernetesJson",
      "info" : "SimpleName[24835-24857]:SimpleName[24802-24824]"
    }, {
      "left" : "File kubernetesJson",
      "right" : "File kubernetesJson",
      "info" : "SingleVariableDeclaration[24858-24877]:SingleVariableDeclaration[24825-24844]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[24886-24908]:SimpleType[24853-24875]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24909-28982]:Block[24876-28949]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[24969-25005]:VariableDeclarationStatement[24936-24972]"
    }, {
      "left" : "Map<String, String> labelMap = getLabels();",
      "right" : "Map<String, String> labelMap = getLabels();",
      "info" : "VariableDeclarationStatement[25014-25057]:VariableDeclarationStatement[24981-25024]"
    }, {
      "left" : "String name = getKubernetesName();",
      "right" : "String name = getKubernetesName();",
      "info" : "VariableDeclarationStatement[25066-25100]:VariableDeclarationStatement[25033-25067]"
    }, {
      "left" : "if (labelMap.isEmpty() && Strings.isNotBlank(name))",
      "right" : "if (labelMap.isEmpty() && Strings.isNotBlank(name))",
      "info" : "IfStatement[25109-25257]:IfStatement[25076-25224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25161-25257]:Block[25128-25224]"
    }, {
      "left" : "labelMap.put(\"component\", name);",
      "right" : "labelMap.put(\"component\", name);",
      "info" : "ExpressionStatement[25215-25247]:ExpressionStatement[25182-25214]"
    }, {
      "left" : "if (!labelMap.containsKey(\"provider\") && Strings.isNotBlank(provider))",
      "right" : "if (!labelMap.containsKey(\"provider\") && Strings.isNotBlank(provider))",
      "info" : "IfStatement[25266-25396]:IfStatement[25233-25363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25337-25396]:Block[25304-25363]"
    }, {
      "left" : "labelMap.put(\"provider\", provider);",
      "right" : "labelMap.put(\"provider\", provider);",
      "info" : "ExpressionStatement[25351-25386]:ExpressionStatement[25318-25353]"
    }, {
      "left" : "KubernetesListBuilder builder = new KubernetesListBuilder()\n                .addNewReplicationControllerItem()\n                .withNewMetadata()\n                .withName(KubernetesHelper.validateKubernetesId(replicationControllerName, \"fabric8.replicationController.name\"))\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withReplicas(replicaCount)\n                .withSelector(labelMap)\n                .withNewTemplate()\n                .withNewMetadata()\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withServiceAccount(serviceAccount)\n                .addNewContainer()\n                .withName(getKubernetesContainerName())\n                .withImage(getDockerImage())\n                .withImagePullPolicy(getImagePullPolicy())\n                .withEnv(getEnvironmentVariables())\n                .withNewSecurityContext()\n                .withPrivileged(getContainerPrivileged())\n                .endSecurityContext()\n                .withPorts(getContainerPorts())\n                .withVolumeMounts(getVolumeMounts())\n                .withLivenessProbe(getLivenessProbe())\n                .withReadinessProbe(getReadinessProbe())\n                .endContainer()\n                .withVolumes(getVolumes())\n                .endSpec()\n                .endTemplate()\n                .endSpec()\n                .endReplicationControllerItem();",
      "right" : "KubernetesListBuilder builder = new KubernetesListBuilder()\n                .addNewReplicationControllerItem()\n                .withNewMetadata()\n                .withName(KubernetesHelper.validateKubernetesId(replicationControllerName, \"fabric8.replicationController.name\"))\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withReplicas(replicaCount)\n                .withSelector(labelMap)\n                .withNewTemplate()\n                .withNewMetadata()\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withServiceAccount(serviceAccount)\n                .addNewContainer()\n                .withName(getKubernetesContainerName())\n                .withImage(getDockerImage())\n                .withImagePullPolicy(getImagePullPolicy())\n                .withEnv(getEnvironmentVariables())\n                .withNewSecurityContext()\n                .withPrivileged(getContainerPrivileged())\n                .endSecurityContext()\n                .withPorts(getContainerPorts())\n                .withVolumeMounts(getVolumeMounts())\n                .withLivenessProbe(getLivenessProbe())\n                .withReadinessProbe(getReadinessProbe())\n                .endContainer()\n                .withVolumes(getVolumes())\n                .endSpec()\n                .endTemplate()\n                .endSpec()\n                .endReplicationControllerItem();",
      "info" : "VariableDeclarationStatement[25406-26894]:VariableDeclarationStatement[25373-26861]"
    }, {
      "left" : "if (serviceName != null)",
      "right" : "if (serviceName != null)",
      "info" : "IfStatement[26967-27946]:IfStatement[26934-27913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26992-27946]:Block[26959-27913]"
    }, {
      "left" : "ServiceBuilder serviceBuilder = new ServiceBuilder()\n                    .withNewMetadata()\n                    .withName(serviceName)\n                    .withLabels(labelMap)\n                    .endMetadata();",
      "right" : "ServiceBuilder serviceBuilder = new ServiceBuilder()\n                    .withNewMetadata()\n                    .withName(serviceName)\n                    .withLabels(labelMap)\n                    .endMetadata();",
      "info" : "VariableDeclarationStatement[27006-27218]:VariableDeclarationStatement[26973-27185]"
    }, {
      "left" : "ServiceFluent<ServiceBuilder>.SpecNested<ServiceBuilder> serviceSpecBuilder = serviceBuilder.withNewSpec().withSelector(labelMap);",
      "right" : "ServiceFluent<ServiceBuilder>.SpecNested<ServiceBuilder> serviceSpecBuilder = serviceBuilder.withNewSpec().withSelector(labelMap);",
      "info" : "VariableDeclarationStatement[27232-27362]:VariableDeclarationStatement[27199-27329]"
    }, {
      "left" : "List<ServicePort> servicePorts = getServicePorts();",
      "right" : "List<ServicePort> servicePorts = getServicePorts();",
      "info" : "VariableDeclarationStatement[27376-27427]:VariableDeclarationStatement[27343-27394]"
    }, {
      "left" : "System.out.println(\"Generated ports: \" + servicePorts);",
      "right" : "System.out.println(\"Generated ports: \" + servicePorts);",
      "info" : "ExpressionStatement[27440-27495]:ExpressionStatement[27407-27462]"
    }, {
      "left" : "boolean hasPorts = servicePorts != null & !servicePorts.isEmpty();",
      "right" : "boolean hasPorts = servicePorts != null & !servicePorts.isEmpty();",
      "info" : "VariableDeclarationStatement[27508-27574]:VariableDeclarationStatement[27475-27541]"
    }, {
      "left" : "if (hasPorts)",
      "right" : "if (hasPorts)",
      "info" : "IfStatement[27587-27754]:IfStatement[27554-27721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27601-27676]:Block[27568-27643]"
    }, {
      "left" : "serviceSpecBuilder.withPorts(servicePorts);",
      "right" : "serviceSpecBuilder.withPorts(servicePorts);",
      "info" : "ExpressionStatement[27619-27662]:ExpressionStatement[27586-27629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27682-27754]:Block[27649-27721]"
    }, {
      "left" : "serviceSpecBuilder.withPortalIP(\"None\");",
      "right" : "serviceSpecBuilder.withPortalIP(\"None\");",
      "info" : "ExpressionStatement[27700-27740]:ExpressionStatement[27667-27707]"
    }, {
      "left" : "serviceSpecBuilder.endSpec();",
      "right" : "serviceSpecBuilder.endSpec();",
      "info" : "ExpressionStatement[27767-27796]:ExpressionStatement[27734-27763]"
    }, {
      "left" : "if (headlessServices || hasPorts)",
      "right" : "if (headlessServices || hasPorts)",
      "info" : "IfStatement[27810-27936]:IfStatement[27777-27903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27844-27936]:Block[27811-27903]"
    }, {
      "left" : "builder = builder.addToServiceItems(serviceBuilder.build());",
      "right" : "builder = builder.addToServiceItems(serviceBuilder.build());",
      "info" : "ExpressionStatement[27862-27922]:ExpressionStatement[27829-27889]"
    }, {
      "left" : "Template template = getTemplate();",
      "right" : "Template template = getTemplate();",
      "info" : "VariableDeclarationStatement[27956-27990]:VariableDeclarationStatement[27923-27957]"
    }, {
      "left" : "String iconUrl = getIconUrl();",
      "right" : "String iconUrl = getIconUrl();",
      "info" : "VariableDeclarationStatement[27999-28029]:VariableDeclarationStatement[27966-27996]"
    }, {
      "left" : "if (!template.getParameters().isEmpty() || Strings.isNotBlank(iconUrl))",
      "right" : "if (!template.getParameters().isEmpty() || Strings.isNotBlank(iconUrl))",
      "info" : "IfStatement[28038-28249]:IfStatement[28005-28216]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28110-28249]:Block[28077-28216]"
    }, {
      "left" : "configureTemplateDescriptionAndIcon(template, iconUrl);",
      "right" : "configureTemplateDescriptionAndIcon(template, iconUrl);",
      "info" : "ExpressionStatement[28124-28179]:ExpressionStatement[28091-28146]"
    }, {
      "left" : "builder = builder.addToTemplateItems(template);",
      "right" : "builder = builder.addToTemplateItems(template);",
      "info" : "ExpressionStatement[28192-28239]:ExpressionStatement[28159-28206]"
    }, {
      "left" : "KubernetesList kubernetesList = builder.build();",
      "right" : "KubernetesList kubernetesList = builder.build();",
      "info" : "VariableDeclarationStatement[28259-28307]:VariableDeclarationStatement[28226-28274]"
    }, {
      "left" : "Object result = Templates.combineTemplates(kubernetesList);",
      "right" : "Object result = Templates.combineTemplates(kubernetesList);",
      "info" : "VariableDeclarationStatement[28317-28376]:VariableDeclarationStatement[28284-28343]"
    }, {
      "left" : "if (result instanceof Template)",
      "right" : "if (result instanceof Template)",
      "info" : "IfStatement[28385-28559]:IfStatement[28352-28526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28417-28559]:Block[28384-28526]"
    }, {
      "left" : "Template resultTemplate = (Template) result;",
      "right" : "Template resultTemplate = (Template) result;",
      "info" : "VariableDeclarationStatement[28431-28475]:VariableDeclarationStatement[28398-28442]"
    }, {
      "left" : "configureTemplateDescriptionAndIcon(resultTemplate, iconUrl);",
      "right" : "configureTemplateDescriptionAndIcon(resultTemplate, iconUrl);",
      "info" : "ExpressionStatement[28488-28549]:ExpressionStatement[28455-28516]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28569-28976]:TryStatement[28536-28943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28573-28852]:Block[28540-28819]"
    }, {
      "left" : "ObjectMapper mapper = new ObjectMapper()\n                    .enable(SerializationFeature.INDENT_OUTPUT);",
      "right" : "ObjectMapper mapper = new ObjectMapper()\n                    .enable(SerializationFeature.INDENT_OUTPUT);",
      "info" : "VariableDeclarationStatement[28587-28692]:VariableDeclarationStatement[28554-28659]"
    }, {
      "left" : "String generated = mapper.writeValueAsString(result);",
      "right" : "String generated = mapper.writeValueAsString(result);",
      "info" : "VariableDeclarationStatement[28705-28758]:VariableDeclarationStatement[28672-28725]"
    }, {
      "left" : "Files.writeToFile(kubernetesJson, generated, Charset.defaultCharset());",
      "right" : "Files.writeToFile(kubernetesJson, generated, Charset.defaultCharset());",
      "info" : "ExpressionStatement[28771-28842]:ExpressionStatement[28738-28809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28875-28976]:Block[28842-28943]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to generate Kubernetes JSON.\", e);",
      "right" : "throw new IllegalArgumentException(\"Failed to generate Kubernetes JSON.\", e);",
      "info" : "ThrowStatement[28889-28966]:ThrowStatement[28856-28933]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[28988-28997]:Modifier[28955-28964]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28998-29002]:PrimitiveType[28965-28969]"
    }, {
      "left" : "configureTemplateDescriptionAndIcon",
      "right" : "configureTemplateDescriptionAndIcon",
      "info" : "SimpleName[29003-29038]:SimpleName[28970-29005]"
    }, {
      "left" : "Template template",
      "right" : "Template template",
      "info" : "SingleVariableDeclaration[29039-29056]:SingleVariableDeclaration[29006-29023]"
    }, {
      "left" : "String iconUrl",
      "right" : "String iconUrl",
      "info" : "SingleVariableDeclaration[29058-29072]:SingleVariableDeclaration[29025-29039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29074-29376]:Block[29041-29343]"
    }, {
      "left" : "Map<String, String> annotations = KubernetesHelper.getOrCreateAnnotations(template);",
      "right" : "Map<String, String> annotations = KubernetesHelper.getOrCreateAnnotations(template);",
      "info" : "VariableDeclarationStatement[29084-29168]:VariableDeclarationStatement[29051-29135]"
    }, {
      "left" : "addDocumentationAnnotations(template, annotations);",
      "right" : "addDocumentationAnnotations(template, annotations);",
      "info" : "ExpressionStatement[29177-29228]:ExpressionStatement[29144-29195]"
    }, {
      "left" : "if (Strings.isNotBlank(iconUrl))",
      "right" : "if (Strings.isNotBlank(iconUrl))",
      "info" : "IfStatement[29237-29370]:IfStatement[29204-29337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29270-29370]:Block[29237-29337]"
    }, {
      "left" : "annotations.put(getTemplateKey(template, AnnotationKeys.ICON_URL), iconUrl);",
      "right" : "annotations.put(getTemplateKey(template, AnnotationKeys.ICON_URL), iconUrl);",
      "info" : "ExpressionStatement[29284-29360]:ExpressionStatement[29251-29327]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29382-29391]:Modifier[29349-29358]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[29392-29398]:SimpleType[29359-29365]"
    }, {
      "left" : "getTemplateKey",
      "right" : "getTemplateKey",
      "info" : "SimpleName[29399-29413]:SimpleName[29366-29380]"
    }, {
      "left" : "Template template",
      "right" : "Template template",
      "info" : "SingleVariableDeclaration[29414-29431]:SingleVariableDeclaration[29381-29398]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[29433-29443]:SingleVariableDeclaration[29400-29410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29445-29652]:Block[29412-29619]"
    }, {
      "left" : "String name = getName(template);",
      "right" : "String name = getName(template);",
      "info" : "VariableDeclarationStatement[29455-29487]:VariableDeclarationStatement[29422-29454]"
    }, {
      "left" : "if (Strings.isNullOrBlank(name))",
      "right" : "if (Strings.isNullOrBlank(name))",
      "info" : "IfStatement[29496-29589]:IfStatement[29463-29556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29529-29589]:Block[29496-29556]"
    }, {
      "left" : "name = getProject().getArtifactId();",
      "right" : "name = getProject().getArtifactId();",
      "info" : "ExpressionStatement[29543-29579]:ExpressionStatement[29510-29546]"
    }, {
      "left" : "return AnnotationKeys.PREFIX + name + \"/\" + key;",
      "right" : "return AnnotationKeys.PREFIX + name + \"/\" + key;",
      "info" : "ReturnStatement[29598-29646]:ReturnStatement[29565-29613]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29658-29667]:Modifier[29625-29634]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29668-29672]:PrimitiveType[29635-29639]"
    }, {
      "left" : "addDocumentationAnnotations",
      "right" : "addDocumentationAnnotations",
      "info" : "SimpleName[29673-29700]:SimpleName[29640-29667]"
    }, {
      "left" : "Template template",
      "right" : "Template template",
      "info" : "SingleVariableDeclaration[29701-29718]:SingleVariableDeclaration[29668-29685]"
    }, {
      "left" : "Map<String, String> annotations",
      "right" : "Map<String, String> annotations",
      "info" : "SingleVariableDeclaration[29720-29751]:SingleVariableDeclaration[29687-29718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29753-31018]:Block[29720-30985]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[29809-30013]:TryStatement[29776-29980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29813-29911]:Block[29780-29878]"
    }, {
      "left" : "copySummaryText(templateTempDir);",
      "right" : "copySummaryText(templateTempDir);",
      "info" : "ExpressionStatement[29827-29860]:ExpressionStatement[29794-29827]"
    }, {
      "left" : "copyReadMe(templateTempDir);",
      "right" : "copyReadMe(templateTempDir);",
      "info" : "ExpressionStatement[29873-29901]:ExpressionStatement[29840-29868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29934-30013]:Block[29901-29980]"
    }, {
      "left" : "getLog().warn(\"Failed to copy documentation: \" + e, e);",
      "right" : "getLog().warn(\"Failed to copy documentation: \" + e, e);",
      "info" : "ExpressionStatement[29948-30003]:ExpressionStatement[29915-29970]"
    }, {
      "left" : "File summary = new File(templateTempDir, \"Summary.md\");",
      "right" : "File summary = new File(templateTempDir, \"Summary.md\");",
      "info" : "VariableDeclarationStatement[30023-30078]:VariableDeclarationStatement[29990-30045]"
    }, {
      "left" : "if (summary.exists() && summary.isFile())",
      "right" : "if (summary.exists() && summary.isFile())",
      "info" : "IfStatement[30087-30428]:IfStatement[30054-30395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30129-30428]:Block[30096-30395]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[30143-30418]:TryStatement[30110-30385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30147-30306]:Block[30114-30273]"
    }, {
      "left" : "String text = Files.toString(summary);",
      "right" : "String text = Files.toString(summary);",
      "info" : "VariableDeclarationStatement[30165-30203]:VariableDeclarationStatement[30132-30170]"
    }, {
      "left" : "annotations.put(getTemplateKey(template, AnnotationKeys.SUMMARY), text);",
      "right" : "annotations.put(getTemplateKey(template, AnnotationKeys.SUMMARY), text);",
      "info" : "ExpressionStatement[30220-30292]:ExpressionStatement[30187-30259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30329-30418]:Block[30296-30385]"
    }, {
      "left" : "getLog().warn(\"Failed to load \" + summary + \". \" + e, e);",
      "right" : "getLog().warn(\"Failed to load \" + summary + \". \" + e, e);",
      "info" : "ExpressionStatement[30347-30404]:ExpressionStatement[30314-30371]"
    }, {
      "left" : "String description = null;",
      "right" : "String description = null;",
      "info" : "VariableDeclarationStatement[30438-30464]:VariableDeclarationStatement[30405-30431]"
    }, {
      "left" : "File readme = new File(templateTempDir, \"ReadMe.md\");",
      "right" : "File readme = new File(templateTempDir, \"ReadMe.md\");",
      "info" : "VariableDeclarationStatement[30473-30526]:VariableDeclarationStatement[30440-30493]"
    }, {
      "left" : "if (readme.exists() && readme.isFile())",
      "right" : "if (readme.exists() && readme.isFile())",
      "info" : "IfStatement[30535-30783]:IfStatement[30502-30750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30575-30783]:Block[30542-30750]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[30589-30773]:TryStatement[30556-30740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30593-30662]:Block[30560-30629]"
    }, {
      "left" : "description = Files.toString(readme);",
      "right" : "description = Files.toString(readme);",
      "info" : "ExpressionStatement[30611-30648]:ExpressionStatement[30578-30615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30685-30773]:Block[30652-30740]"
    }, {
      "left" : "getLog().warn(\"Failed to load \" + readme + \". \" + e, e);",
      "right" : "getLog().warn(\"Failed to load \" + readme + \". \" + e, e);",
      "info" : "ExpressionStatement[30703-30759]:ExpressionStatement[30670-30726]"
    }, {
      "left" : "if (description == null)",
      "right" : "if (description == null)",
      "info" : "IfStatement[30792-30885]:IfStatement[30759-30852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30817-30885]:Block[30784-30852]"
    }, {
      "left" : "description = getProject().getDescription();",
      "right" : "description = getProject().getDescription();",
      "info" : "ExpressionStatement[30831-30875]:ExpressionStatement[30798-30842]"
    }, {
      "left" : "if (Strings.isNotBlank(description))",
      "right" : "if (Strings.isNotBlank(description))",
      "info" : "IfStatement[30894-31012]:IfStatement[30861-30979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30931-31012]:Block[30898-30979]"
    }, {
      "left" : "annotations.put(AnnotationKeys.DESCRIPTION, description);",
      "right" : "annotations.put(AnnotationKeys.DESCRIPTION, description);",
      "info" : "ExpressionStatement[30945-31002]:ExpressionStatement[30912-30969]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31244-31253]:Modifier[31211-31220]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31254-31260]:SimpleType[31221-31227]"
    }, {
      "left" : "getIconUrl",
      "right" : "getIconUrl",
      "info" : "SimpleName[31261-31271]:SimpleName[31228-31238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31274-32939]:Block[31241-32906]"
    }, {
      "left" : "String answer = iconUrl;",
      "right" : "String answer = iconUrl;",
      "info" : "VariableDeclarationStatement[31284-31308]:VariableDeclarationStatement[31251-31275]"
    }, {
      "left" : "if (Strings.isNullOrBlank(answer))",
      "right" : "if (Strings.isNullOrBlank(answer))",
      "info" : "IfStatement[31317-32360]:IfStatement[31284-32327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31352-32360]:Block[31319-32327]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[31366-32350]:TryStatement[31333-32317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31370-32246]:Block[31337-32213]"
    }, {
      "left" : "if (templateTempDir != null)",
      "right" : "if (templateTempDir != null)",
      "info" : "IfStatement[31388-32232]:IfStatement[31355-32199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31417-32232]:Block[31384-32199]"
    }, {
      "left" : "templateTempDir.mkdirs();",
      "right" : "templateTempDir.mkdirs();",
      "info" : "ExpressionStatement[31439-31464]:ExpressionStatement[31406-31431]"
    }, {
      "left" : "File iconFile = copyIconToFolder(templateTempDir);",
      "right" : "File iconFile = copyIconToFolder(templateTempDir);",
      "info" : "VariableDeclarationStatement[31485-31535]:VariableDeclarationStatement[31452-31502]"
    }, {
      "left" : "if (iconFile == null)",
      "right" : "if (iconFile == null)",
      "info" : "IfStatement[31556-32083]:IfStatement[31523-32050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31578-32083]:Block[31545-32050]"
    }, {
      "left" : "copyAppConfigFiles(templateTempDir, appConfigDir);",
      "right" : "copyAppConfigFiles(templateTempDir, appConfigDir);",
      "info" : "ExpressionStatement[31604-31654]:ExpressionStatement[31571-31621]"
    }, {
      "left" : "for (String ext : ICON_EXTENSIONS)",
      "right" : "for (String ext : ICON_EXTENSIONS)",
      "info" : "EnhancedForStatement[31734-32061]:EnhancedForStatement[31701-32028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31769-32061]:Block[31736-32028]"
    }, {
      "left" : "File file = new File(templateTempDir, \"icon\" + ext);",
      "right" : "File file = new File(templateTempDir, \"icon\" + ext);",
      "info" : "VariableDeclarationStatement[31799-31851]:VariableDeclarationStatement[31766-31818]"
    }, {
      "left" : "if (file.exists() && file.isFile())",
      "right" : "if (file.exists() && file.isFile())",
      "info" : "IfStatement[31880-32035]:IfStatement[31847-32002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31916-32035]:Block[31883-32002]"
    }, {
      "left" : "iconFile = file;",
      "right" : "iconFile = file;",
      "info" : "ExpressionStatement[31950-31966]:ExpressionStatement[31917-31933]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31999-32005]:BreakStatement[31966-31972]"
    }, {
      "left" : "if (iconFile != null)",
      "right" : "if (iconFile != null)",
      "info" : "IfStatement[32104-32214]:IfStatement[32071-32181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32126-32214]:Block[32093-32181]"
    }, {
      "left" : "answer = convertIconFileToURL(iconFile);",
      "right" : "answer = convertIconFileToURL(iconFile);",
      "info" : "ExpressionStatement[32152-32192]:ExpressionStatement[32119-32159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32267-32350]:Block[32234-32317]"
    }, {
      "left" : "getLog().warn(\"Failed to load icon file: \" + e, e);",
      "right" : "getLog().warn(\"Failed to load icon file: \" + e, e);",
      "info" : "ExpressionStatement[32285-32336]:ExpressionStatement[32252-32303]"
    }, {
      "left" : "if (Strings.isNullOrBlank(answer))",
      "right" : "if (Strings.isNullOrBlank(answer))",
      "info" : "IfStatement[32370-32719]:IfStatement[32337-32686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32405-32719]:Block[32372-32686]"
    }, {
      "left" : "String commonRef = asCommonIconRef(iconRef);",
      "right" : "String commonRef = asCommonIconRef(iconRef);",
      "info" : "VariableDeclarationStatement[32458-32502]:VariableDeclarationStatement[32425-32469]"
    }, {
      "left" : "if (commonRef != null)",
      "right" : "if (commonRef != null)",
      "info" : "IfStatement[32515-32709]:IfStatement[32482-32676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32538-32709]:Block[32505-32676]"
    }, {
      "left" : "answer = URLUtils.pathJoin(\"https://cdn.rawgit.com/fabric8io/fabric8\", iconBranch, \"/fabric8-maven-plugin/src/main/resources/\", commonRef);",
      "right" : "answer = URLUtils.pathJoin(\"https://cdn.rawgit.com/fabric8io/fabric8\", iconBranch, \"/fabric8-maven-plugin/src/main/resources/\", commonRef);",
      "info" : "ExpressionStatement[32556-32695]:ExpressionStatement[32523-32662]"
    }, {
      "left" : "if (Strings.isNullOrBlank(answer))",
      "right" : "if (Strings.isNullOrBlank(answer))",
      "info" : "IfStatement[32729-32909]:IfStatement[32696-32876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32764-32842]:Block[32731-32809]"
    }, {
      "left" : "getLog().warn(\"No icon file found for this project!\");",
      "right" : "getLog().warn(\"No icon file found for this project!\");",
      "info" : "ExpressionStatement[32778-32832]:ExpressionStatement[32745-32799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32848-32909]:Block[32815-32876]"
    }, {
      "left" : "getLog().info(\"Icon URL: \" + answer);",
      "right" : "getLog().info(\"Icon URL: \" + answer);",
      "info" : "ExpressionStatement[32862-32899]:ExpressionStatement[32829-32866]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[32919-32933]:ReturnStatement[32886-32900]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32945-32954]:Modifier[32912-32921]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32955-32961]:SimpleType[32922-32928]"
    }, {
      "left" : "convertIconFileToURL",
      "right" : "convertIconFileToURL",
      "info" : "SimpleName[32962-32982]:SimpleName[32929-32949]"
    }, {
      "left" : "File iconFile",
      "right" : "File iconFile",
      "info" : "SingleVariableDeclaration[32983-32996]:SingleVariableDeclaration[32950-32963]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[33005-33016]:SimpleType[32972-32983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33017-36185]:Block[32984-36152]"
    }, {
      "left" : "long length = iconFile.length();",
      "right" : "long length = iconFile.length();",
      "info" : "VariableDeclarationStatement[33027-33059]:VariableDeclarationStatement[32994-33026]"
    }, {
      "left" : "int sizeK = Math.round(length / 1024);",
      "right" : "int sizeK = Math.round(length / 1024);",
      "info" : "VariableDeclarationStatement[33069-33107]:VariableDeclarationStatement[33036-33074]"
    }, {
      "left" : "byte[] bytes = Files.readBytes(iconFile);",
      "right" : "byte[] bytes = Files.readBytes(iconFile);",
      "info" : "VariableDeclarationStatement[33117-33158]:VariableDeclarationStatement[33084-33125]"
    }, {
      "left" : "byte[] encoded = Base64Encoder.encode(bytes);",
      "right" : "byte[] encoded = Base64Encoder.encode(bytes);",
      "info" : "VariableDeclarationStatement[33167-33212]:VariableDeclarationStatement[33134-33179]"
    }, {
      "left" : "int base64SizeK = Math.round(encoded.length / 1024);",
      "right" : "int base64SizeK = Math.round(encoded.length / 1024);",
      "info" : "VariableDeclarationStatement[33222-33274]:VariableDeclarationStatement[33189-33241]"
    }, {
      "left" : "getLog().info(\"found icon file: \" + iconFile +\n                \" which is \" + sizeK + \"K\" +\n                \" base64 encoded \" + base64SizeK + \"K\");",
      "right" : "getLog().info(\"found icon file: \" + iconFile +\n                \" which is \" + sizeK + \"K\" +\n                \" base64 encoded \" + base64SizeK + \"K\");",
      "info" : "ExpressionStatement[33284-33432]:ExpressionStatement[33251-33399]"
    }, {
      "left" : "if (base64SizeK < maximumDataUrlSizeK)",
      "right" : "if (base64SizeK < maximumDataUrlSizeK)",
      "info" : "IfStatement[33442-36158]:IfStatement[33409-36125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33481-33636]:Block[33448-33603]"
    }, {
      "left" : "String mimeType = guessMediaType(iconFile);",
      "right" : "String mimeType = guessMediaType(iconFile);",
      "info" : "VariableDeclarationStatement[33495-33538]:VariableDeclarationStatement[33462-33505]"
    }, {
      "left" : "return \"data:\" + mimeType + \";charset=UTF-8;base64,\" + new String(encoded);",
      "right" : "return \"data:\" + mimeType + \";charset=UTF-8;base64,\" + new String(encoded);",
      "info" : "ReturnStatement[33551-33626]:ReturnStatement[33518-33593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33642-36158]:Block[33609-36125]"
    }, {
      "left" : "File iconSourceFile = new File(appConfigDir, iconFile.getName());",
      "right" : "File iconSourceFile = new File(appConfigDir, iconFile.getName());",
      "info" : "VariableDeclarationStatement[33656-33721]:VariableDeclarationStatement[33623-33688]"
    }, {
      "left" : "if (iconSourceFile.exists())",
      "right" : "if (iconSourceFile.exists())",
      "info" : "IfStatement[33734-36148]:IfStatement[33701-36115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33763-35699]:Block[33730-35666]"
    }, {
      "left" : "File rootProjectFolder = getRootProjectFolder();",
      "right" : "File rootProjectFolder = getRootProjectFolder();",
      "info" : "VariableDeclarationStatement[33781-33829]:VariableDeclarationStatement[33748-33796]"
    }, {
      "left" : "if (rootProjectFolder != null)",
      "right" : "if (rootProjectFolder != null)",
      "info" : "IfStatement[33846-35685]:IfStatement[33813-35652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33877-35685]:Block[33844-35652]"
    }, {
      "left" : "String relativePath = Files.getRelativePath(rootProjectFolder, iconSourceFile);",
      "right" : "String relativePath = Files.getRelativePath(rootProjectFolder, iconSourceFile);",
      "info" : "VariableDeclarationStatement[33899-33978]:VariableDeclarationStatement[33866-33945]"
    }, {
      "left" : "String relativeParentPath = Files.getRelativePath(rootProjectFolder, getProject().getBasedir());",
      "right" : "String relativeParentPath = Files.getRelativePath(rootProjectFolder, getProject().getBasedir());",
      "info" : "VariableDeclarationStatement[33999-34095]:VariableDeclarationStatement[33966-34062]"
    }, {
      "left" : "String urlPrefix = iconUrlPrefix;",
      "right" : "String urlPrefix = iconUrlPrefix;",
      "info" : "VariableDeclarationStatement[34116-34149]:VariableDeclarationStatement[34083-34116]"
    }, {
      "left" : "if (Strings.isNullOrBlank(urlPrefix))",
      "right" : "if (Strings.isNullOrBlank(urlPrefix))",
      "info" : "IfStatement[34170-35221]:IfStatement[34137-35188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34208-35221]:Block[34175-35188]"
    }, {
      "left" : "Scm scm = getProject().getScm();",
      "right" : "Scm scm = getProject().getScm();",
      "info" : "VariableDeclarationStatement[34234-34266]:VariableDeclarationStatement[34201-34233]"
    }, {
      "left" : "if (scm != null)",
      "right" : "if (scm != null)",
      "info" : "IfStatement[34291-35199]:IfStatement[34258-35166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34308-35199]:Block[34275-35166]"
    }, {
      "left" : "String url = scm.getUrl();",
      "right" : "String url = scm.getUrl();",
      "info" : "VariableDeclarationStatement[34338-34364]:VariableDeclarationStatement[34305-34331]"
    }, {
      "left" : "if (url != null)",
      "right" : "if (url != null)",
      "info" : "IfStatement[34393-35173]:IfStatement[34360-35140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34410-35173]:Block[34377-35140]"
    }, {
      "left" : "String[] prefixes = {\"http://github.com/\", \"https://github.com/\"};",
      "right" : "String[] prefixes = {\"http://github.com/\", \"https://github.com/\"};",
      "info" : "VariableDeclarationStatement[34444-34510]:VariableDeclarationStatement[34411-34477]"
    }, {
      "left" : "for (String prefix : prefixes)",
      "right" : "for (String prefix : prefixes)",
      "info" : "EnhancedForStatement[34543-34884]:EnhancedForStatement[34510-34851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34574-34884]:Block[34541-34851]"
    }, {
      "left" : "if (url.startsWith(prefix))",
      "right" : "if (url.startsWith(prefix))",
      "info" : "IfStatement[34612-34850]:IfStatement[34579-34817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34640-34850]:Block[34607-34817]"
    }, {
      "left" : "url = URLUtils.pathJoin(\"https://cdn.rawgit.com/\", url.substring(prefix.length()));",
      "right" : "url = URLUtils.pathJoin(\"https://cdn.rawgit.com/\", url.substring(prefix.length()));",
      "info" : "ExpressionStatement[34682-34765]:ExpressionStatement[34649-34732]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[34806-34812]:BreakStatement[34773-34779]"
    }, {
      "left" : "if (url.endsWith(relativeParentPath))",
      "right" : "if (url.endsWith(relativeParentPath))",
      "info" : "IfStatement[34917-35094]:IfStatement[34884-35061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34955-35094]:Block[34922-35061]"
    }, {
      "left" : "url = url.substring(0, url.length() - relativeParentPath.length());",
      "right" : "url = url.substring(0, url.length() - relativeParentPath.length());",
      "info" : "ExpressionStatement[34993-35060]:ExpressionStatement[34960-35027]"
    }, {
      "left" : "urlPrefix = url;",
      "right" : "urlPrefix = url;",
      "info" : "ExpressionStatement[35127-35143]:ExpressionStatement[35094-35110]"
    }, {
      "left" : "if (Strings.isNullOrBlank(urlPrefix))",
      "right" : "if (Strings.isNullOrBlank(urlPrefix))",
      "info" : "IfStatement[35242-35667]:IfStatement[35209-35634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35280-35438]:Block[35247-35405]"
    }, {
      "left" : "getLog().warn(\"No iconUrlPrefix defined or could be found via SCM in the pom.xml so cannot add an icon URL!\");",
      "right" : "getLog().warn(\"No iconUrlPrefix defined or could be found via SCM in the pom.xml so cannot add an icon URL!\");",
      "info" : "ExpressionStatement[35306-35416]:ExpressionStatement[35273-35383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35444-35667]:Block[35411-35634]"
    }, {
      "left" : "String answer = URLUtils.pathJoin(urlPrefix, iconBranch, relativePath);",
      "right" : "String answer = URLUtils.pathJoin(urlPrefix, iconBranch, relativePath);",
      "info" : "VariableDeclarationStatement[35470-35541]:VariableDeclarationStatement[35437-35508]"
    }, {
      "left" : "getLog().info(\"icon url is: \" + answer);",
      "right" : "getLog().info(\"icon url is: \" + answer);",
      "info" : "ExpressionStatement[35566-35606]:ExpressionStatement[35533-35573]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[35631-35645]:ReturnStatement[35598-35612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35705-36148]:Block[35672-36115]"
    }, {
      "left" : "String commonRef = asCommonIconRef(iconRef);",
      "right" : "String commonRef = asCommonIconRef(iconRef);",
      "info" : "VariableDeclarationStatement[35723-35767]:VariableDeclarationStatement[35690-35734]"
    }, {
      "left" : "if (commonRef != null)",
      "right" : "if (commonRef != null)",
      "info" : "IfStatement[35784-36134]:IfStatement[35751-36101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35807-36028]:Block[35774-35995]"
    }, {
      "left" : "String answer = URLUtils.pathJoin(\"https://cdn.rawgit.com/fabric8io/fabric8\", iconBranch, \"/fabric8-maven-plugin/src/main/resources/\", commonRef);",
      "right" : "String answer = URLUtils.pathJoin(\"https://cdn.rawgit.com/fabric8io/fabric8\", iconBranch, \"/fabric8-maven-plugin/src/main/resources/\", commonRef);",
      "info" : "VariableDeclarationStatement[35829-35975]:VariableDeclarationStatement[35796-35942]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[35996-36010]:ReturnStatement[35963-35977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36034-36134]:Block[36001-36101]"
    }, {
      "left" : "getLog().warn(\"Cannot find url for icon to use \" + iconUrl);",
      "right" : "getLog().warn(\"Cannot find url for icon to use \" + iconUrl);",
      "info" : "ExpressionStatement[36056-36116]:ExpressionStatement[36023-36083]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[36167-36179]:ReturnStatement[36134-36146]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[36191-36200]:Modifier[36158-36167]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36201-36207]:SimpleType[36168-36174]"
    }, {
      "left" : "asCommonIconRef",
      "right" : "asCommonIconRef",
      "info" : "SimpleName[36208-36223]:SimpleName[36175-36190]"
    }, {
      "left" : "String iconRef",
      "right" : "String iconRef",
      "info" : "SingleVariableDeclaration[36224-36238]:SingleVariableDeclaration[36191-36205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36240-37402]:Block[36207-37369]"
    }, {
      "left" : "if (iconRef == null)",
      "right" : "if (iconRef == null)",
      "info" : "IfStatement[36250-36307]:IfStatement[36217-36274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36271-36307]:Block[36238-36274]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[36285-36297]:ReturnStatement[36252-36264]"
    }, {
      "left" : "if (iconRef.startsWith(\"icons/\"))",
      "right" : "if (iconRef.startsWith(\"icons/\"))",
      "info" : "IfStatement[36317-36406]:IfStatement[36284-36373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36351-36406]:Block[36318-36373]"
    }, {
      "left" : "iconRef = iconRef.substring(6);",
      "right" : "iconRef = iconRef.substring(6);",
      "info" : "ExpressionStatement[36365-36396]:ExpressionStatement[36332-36363]"
    }, {
      "left" : "if (iconRef.contains(\"activemq\"))",
      "right" : "if (iconRef.contains(\"activemq\"))",
      "info" : "IfStatement[36416-37374]:IfStatement[36383-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36450-36502]:Block[36417-36469]"
    }, {
      "left" : "return \"icons/activemq.svg\";",
      "right" : "return \"icons/activemq.svg\";",
      "info" : "ReturnStatement[36464-36492]:ReturnStatement[36431-36459]"
    }, {
      "left" : "if (iconRef.contains(\"camel\"))",
      "right" : "if (iconRef.contains(\"camel\"))",
      "info" : "IfStatement[36508-37374]:IfStatement[36475-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36539-36588]:Block[36506-36555]"
    }, {
      "left" : "return \"icons/camel.svg\";",
      "right" : "return \"icons/camel.svg\";",
      "info" : "ReturnStatement[36553-36578]:ReturnStatement[36520-36545]"
    }, {
      "left" : "if (iconRef.contains(\"java\"))",
      "right" : "if (iconRef.contains(\"java\"))",
      "info" : "IfStatement[36594-37374]:IfStatement[36561-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36624-36672]:Block[36591-36639]"
    }, {
      "left" : "return \"icons/java.svg\";",
      "right" : "return \"icons/java.svg\";",
      "info" : "ReturnStatement[36638-36662]:ReturnStatement[36605-36629]"
    }, {
      "left" : "if (iconRef.contains(\"jetty\"))",
      "right" : "if (iconRef.contains(\"jetty\"))",
      "info" : "IfStatement[36678-37374]:IfStatement[36645-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36709-36758]:Block[36676-36725]"
    }, {
      "left" : "return \"icons/jetty.svg\";",
      "right" : "return \"icons/jetty.svg\";",
      "info" : "ReturnStatement[36723-36748]:ReturnStatement[36690-36715]"
    }, {
      "left" : "if (iconRef.contains(\"karaf\"))",
      "right" : "if (iconRef.contains(\"karaf\"))",
      "info" : "IfStatement[36764-37374]:IfStatement[36731-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36795-36844]:Block[36762-36811]"
    }, {
      "left" : "return \"icons/karaf.svg\";",
      "right" : "return \"icons/karaf.svg\";",
      "info" : "ReturnStatement[36809-36834]:ReturnStatement[36776-36801]"
    }, {
      "left" : "if (iconRef.contains(\"mule\"))",
      "right" : "if (iconRef.contains(\"mule\"))",
      "info" : "IfStatement[36850-37374]:IfStatement[36817-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36880-36928]:Block[36847-36895]"
    }, {
      "left" : "return \"icons/mule.svg\";",
      "right" : "return \"icons/mule.svg\";",
      "info" : "ReturnStatement[36894-36918]:ReturnStatement[36861-36885]"
    }, {
      "left" : "if (iconRef.contains(\"spring-boot\"))",
      "right" : "if (iconRef.contains(\"spring-boot\"))",
      "info" : "IfStatement[36934-37374]:IfStatement[36901-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36971-37026]:Block[36938-36993]"
    }, {
      "left" : "return \"icons/spring-boot.svg\";",
      "right" : "return \"icons/spring-boot.svg\";",
      "info" : "ReturnStatement[36985-37016]:ReturnStatement[36952-36983]"
    }, {
      "left" : "if (iconRef.contains(\"tomcat\"))",
      "right" : "if (iconRef.contains(\"tomcat\"))",
      "info" : "IfStatement[37032-37374]:IfStatement[36999-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37064-37114]:Block[37031-37081]"
    }, {
      "left" : "return \"icons/tomcat.svg\";",
      "right" : "return \"icons/tomcat.svg\";",
      "info" : "ReturnStatement[37078-37104]:ReturnStatement[37045-37071]"
    }, {
      "left" : "if (iconRef.contains(\"tomee\"))",
      "right" : "if (iconRef.contains(\"tomee\"))",
      "info" : "IfStatement[37120-37374]:IfStatement[37087-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37151-37200]:Block[37118-37167]"
    }, {
      "left" : "return \"icons/tomee.svg\";",
      "right" : "return \"icons/tomee.svg\";",
      "info" : "ReturnStatement[37165-37190]:ReturnStatement[37132-37157]"
    }, {
      "left" : "if (iconRef.contains(\"weld\"))",
      "right" : "if (iconRef.contains(\"weld\"))",
      "info" : "IfStatement[37206-37374]:IfStatement[37173-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37236-37284]:Block[37203-37251]"
    }, {
      "left" : "return \"icons/weld.svg\";",
      "right" : "return \"icons/weld.svg\";",
      "info" : "ReturnStatement[37250-37274]:ReturnStatement[37217-37241]"
    }, {
      "left" : "if (iconRef.contains(\"wildfly\"))",
      "right" : "if (iconRef.contains(\"wildfly\"))",
      "info" : "IfStatement[37290-37374]:IfStatement[37257-37341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37323-37374]:Block[37290-37341]"
    }, {
      "left" : "return \"icons/wildfly.svg\";",
      "right" : "return \"icons/wildfly.svg\";",
      "info" : "ReturnStatement[37337-37364]:ReturnStatement[37304-37331]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[37384-37396]:ReturnStatement[37351-37363]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37408-37417]:Modifier[37375-37384]"
    }, {
      "left" : "Probe",
      "right" : "Probe",
      "info" : "SimpleType[37418-37423]:SimpleType[37385-37390]"
    }, {
      "left" : "getLivenessProbe",
      "right" : "getLivenessProbe",
      "info" : "SimpleName[37424-37440]:SimpleName[37391-37407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37443-37500]:Block[37410-37467]"
    }, {
      "left" : "return getProbe(\"fabric8.livenessProbe\");",
      "right" : "return getProbe(\"fabric8.livenessProbe\");",
      "info" : "ReturnStatement[37453-37494]:ReturnStatement[37420-37461]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37506-37515]:Modifier[37473-37482]"
    }, {
      "left" : "Probe",
      "right" : "Probe",
      "info" : "SimpleType[37516-37521]:SimpleType[37483-37488]"
    }, {
      "left" : "getReadinessProbe",
      "right" : "getReadinessProbe",
      "info" : "SimpleName[37522-37539]:SimpleName[37489-37506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37542-37600]:Block[37509-37567]"
    }, {
      "left" : "return getProbe(\"fabric8.readinessProbe\");",
      "right" : "return getProbe(\"fabric8.readinessProbe\");",
      "info" : "ReturnStatement[37552-37594]:ReturnStatement[37519-37561]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[37606-37615]:Modifier[37573-37582]"
    }, {
      "left" : "Probe",
      "right" : "Probe",
      "info" : "SimpleType[37616-37621]:SimpleType[37583-37588]"
    }, {
      "left" : "getProbe",
      "right" : "getProbe",
      "info" : "SimpleName[37622-37630]:SimpleName[37589-37597]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[37631-37644]:SingleVariableDeclaration[37598-37611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37646-38966]:Block[37613-38734]"
    }, {
      "left" : "Probe answer = new Probe();",
      "right" : "Probe probe = new Probe();",
      "info" : "VariableDeclarationStatement[37656-37683]:VariableDeclarationStatement[37623-37649]"
    }, {
      "left" : "answer",
      "right" : "probe",
      "info" : "SimpleName[37662-37668]:SimpleName[37629-37634]"
    }, {
      "left" : "Properties properties = getProject().getProperties();",
      "right" : "Properties properties = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[37723-37776]:VariableDeclarationStatement[37658-37711]"
    }, {
      "left" : "String httpGetPath = properties.getProperty(prefix + \".httpGet.path\");",
      "right" : "String httpGetPath = properties.getProperty(prefix + \".httpGet.path\");",
      "info" : "VariableDeclarationStatement[37785-37855]:VariableDeclarationStatement[38864-38934]"
    }, {
      "left" : "String httpGetPort = properties.getProperty(prefix + \".httpGet.port\");",
      "right" : "String httpGetPort = properties.getProperty(prefix + \".httpGet.port\");",
      "info" : "VariableDeclarationStatement[37864-37934]:VariableDeclarationStatement[38943-39013]"
    }, {
      "left" : "String httpGetHost = properties.getProperty(prefix + \".httpGet.host\");",
      "right" : "String httpGetHost = properties.getProperty(prefix + \".httpGet.host\");",
      "info" : "VariableDeclarationStatement[37943-38013]:VariableDeclarationStatement[39022-39092]"
    }, {
      "left" : "if (Strings.isNotBlank(httpGetPath))",
      "right" : "if (Strings.isNotBlank(httpGetPath))",
      "info" : "IfStatement[38022-38501]:IfStatement[39101-39496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38059-38501]:Block[39138-39496]"
    }, {
      "left" : "HTTPGetAction httpGet = new HTTPGetAction();",
      "right" : "HTTPGetAction action = null;",
      "info" : "VariableDeclarationStatement[38099-38143]:VariableDeclarationStatement[38827-38855]"
    }, {
      "left" : "httpGet",
      "right" : "action",
      "info" : "SimpleName[38113-38120]:SimpleName[38841-38847]"
    }, {
      "left" : "httpGet",
      "right" : "action",
      "info" : "SimpleName[38113-38120]:SimpleName[39152-39158]"
    }, {
      "left" : "new HTTPGetAction()",
      "right" : "new HTTPGetAction()",
      "info" : "ClassInstanceCreation[38123-38142]:ClassInstanceCreation[39161-39180]"
    }, {
      "left" : "httpGet",
      "right" : "action",
      "info" : "SimpleName[38156-38163]:SimpleName[39194-39200]"
    }, {
      "left" : "httpGet.setPath(httpGetPath);",
      "right" : "action.setPath(httpGetPath);",
      "info" : "ExpressionStatement[38156-38185]:ExpressionStatement[39194-39222]"
    }, {
      "left" : "httpGet",
      "right" : "action",
      "info" : "SimpleName[38198-38205]:SimpleName[39235-39241]"
    }, {
      "left" : "httpGet.setHost(httpGetHost);",
      "right" : "action.setHost(httpGetHost);",
      "info" : "ExpressionStatement[38198-38227]:ExpressionStatement[39235-39263]"
    }, {
      "left" : "if (Strings.isNotBlank(httpGetPort))",
      "right" : "if (Strings.isNotBlank(httpGetPort))",
      "info" : "IfStatement[38240-38451]:IfStatement[39276-39486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38277-38451]:Block[39313-39486]"
    }, {
      "left" : "IntOrString httpGetPortIntOrString = KubernetesHelper.createIntOrString(httpGetPort);",
      "right" : "IntOrString httpGetPortIntOrString = KubernetesHelper.createIntOrString(httpGetPort);",
      "info" : "VariableDeclarationStatement[38295-38380]:VariableDeclarationStatement[39331-39416]"
    }, {
      "left" : "httpGet",
      "right" : "action",
      "info" : "SimpleName[38397-38404]:SimpleName[39433-39439]"
    }, {
      "left" : "httpGet.setPort(httpGetPortIntOrString);",
      "right" : "action.setPort(httpGetPortIntOrString);",
      "info" : "ExpressionStatement[38397-38437]:ExpressionStatement[39433-39472]"
    }, {
      "left" : "answer",
      "right" : "probe",
      "info" : "SimpleName[38464-38470]:SimpleName[38256-38261]"
    }, {
      "left" : "answer.setHttpGet(httpGet);",
      "right" : "probe.setHttpGet(httpGetAction);",
      "info" : "ExpressionStatement[38464-38491]:ExpressionStatement[38256-38288]"
    }, {
      "left" : "httpGet",
      "right" : "httpGetAction",
      "info" : "SimpleName[38482-38489]:SimpleName[38273-38286]"
    }, {
      "left" : "Long initialDelaySeconds = PropertiesHelper.getLong(properties, prefix + \".initialDelaySeconds\");",
      "right" : "Long initialDelaySeconds = PropertiesHelper.getLong(properties, prefix + \".initialDelaySeconds\");",
      "info" : "VariableDeclarationStatement[38510-38607]:VariableDeclarationStatement[37720-37817]"
    }, {
      "left" : "if (initialDelaySeconds != null)",
      "right" : "if (initialDelaySeconds != null)",
      "info" : "IfStatement[38616-38724]:IfStatement[37826-37933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38649-38724]:Block[37859-37933]"
    }, {
      "left" : "answer",
      "right" : "probe",
      "info" : "SimpleName[38663-38669]:SimpleName[37873-37878]"
    }, {
      "left" : "answer.setInitialDelaySeconds(initialDelaySeconds);",
      "right" : "probe.setInitialDelaySeconds(initialDelaySeconds);",
      "info" : "ExpressionStatement[38663-38714]:ExpressionStatement[37873-37923]"
    }, {
      "left" : "Long timeoutSeconds = PropertiesHelper.getLong(properties, prefix + \".timeoutSeconds\");",
      "right" : "Long timeoutSeconds = PropertiesHelper.getLong(properties, prefix + \".timeoutSeconds\");",
      "info" : "VariableDeclarationStatement[38733-38820]:VariableDeclarationStatement[37942-38029]"
    }, {
      "left" : "if (timeoutSeconds != null)",
      "right" : "if (timeoutSeconds != null)",
      "info" : "IfStatement[38829-38922]:IfStatement[38038-38130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38857-38922]:Block[38066-38130]"
    }, {
      "left" : "answer",
      "right" : "probe",
      "info" : "SimpleName[38871-38877]:SimpleName[38080-38085]"
    }, {
      "left" : "answer.setTimeoutSeconds(timeoutSeconds);",
      "right" : "probe.setTimeoutSeconds(timeoutSeconds);",
      "info" : "ExpressionStatement[38871-38912]:ExpressionStatement[38080-38120]"
    }, {
      "left" : "return added ? answer : null;",
      "right" : "return null;",
      "info" : "ReturnStatement[38931-38960]:ReturnStatement[38716-38728]"
    }, {
      "left" : "null",
      "right" : "null",
      "info" : "NullLiteral[38955-38959]:NullLiteral[38723-38727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38972-38978]:Modifier[40596-40602]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[38979-38986]:SimpleType[40603-40610]"
    }, {
      "left" : "getContainerPrivileged",
      "right" : "getContainerPrivileged",
      "info" : "SimpleName[38987-39009]:SimpleName[40611-40633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39012-39055]:Block[40636-40679]"
    }, {
      "left" : "return containerPrivileged;",
      "right" : "return containerPrivileged;",
      "info" : "ReturnStatement[39022-39049]:ReturnStatement[40646-40673]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39061-39067]:Modifier[40685-40691]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39068-39074]:SimpleType[40692-40698]"
    }, {
      "left" : "getImagePullPolicy",
      "right" : "getImagePullPolicy",
      "info" : "SimpleName[39075-39093]:SimpleName[40699-40717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39096-39581]:Block[40720-41205]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[39106-39142]:VariableDeclarationStatement[40730-40766]"
    }, {
      "left" : "String pullPolicy = imagePullPolicy;",
      "right" : "String pullPolicy = imagePullPolicy;",
      "info" : "VariableDeclarationStatement[39151-39187]:VariableDeclarationStatement[40775-40811]"
    }, {
      "left" : "if (project != null)",
      "right" : "if (project != null)",
      "info" : "IfStatement[39196-39548]:IfStatement[40820-41172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39217-39548]:Block[40841-41172]"
    }, {
      "left" : "String version = project.getVersion();",
      "right" : "String version = project.getVersion();",
      "info" : "VariableDeclarationStatement[39231-39269]:VariableDeclarationStatement[40855-40893]"
    }, {
      "left" : "if (Strings.isNullOrBlank(pullPolicy))",
      "right" : "if (Strings.isNullOrBlank(pullPolicy))",
      "info" : "IfStatement[39282-39538]:IfStatement[40906-41162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39321-39538]:Block[40945-41162]"
    }, {
      "left" : "if (version != null && version.endsWith(\"SNAPSHOT\"))",
      "right" : "if (version != null && version.endsWith(\"SNAPSHOT\"))",
      "info" : "IfStatement[39339-39524]:IfStatement[40963-41148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39392-39524]:Block[41016-41148]"
    }, {
      "left" : "pullPolicy = imagePullPolicySnapshot;",
      "right" : "pullPolicy = imagePullPolicySnapshot;",
      "info" : "ExpressionStatement[39469-39506]:ExpressionStatement[41093-41130]"
    }, {
      "left" : "return pullPolicy;",
      "right" : "return pullPolicy;",
      "info" : "ReturnStatement[39557-39575]:ReturnStatement[41181-41199]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39587-39593]:Modifier[41211-41217]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[39594-39600]:SimpleType[41218-41224]"
    }, {
      "left" : "getKubernetesContainerName",
      "right" : "getKubernetesContainerName",
      "info" : "SimpleName[39601-39627]:SimpleName[41225-41251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39630-40594]:Block[41254-42218]"
    }, {
      "left" : "if (Strings.isNullOrBlank(kubernetesContainerName))",
      "right" : "if (Strings.isNullOrBlank(kubernetesContainerName))",
      "info" : "IfStatement[39640-40548]:IfStatement[41264-42172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39692-40548]:Block[41316-42172]"
    }, {
      "left" : "String groupPrefix = null;",
      "right" : "String groupPrefix = null;",
      "info" : "VariableDeclarationStatement[39788-39814]:VariableDeclarationStatement[41412-41438]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[39827-39863]:VariableDeclarationStatement[41451-41487]"
    }, {
      "left" : "String imageName = project.getProperties().getProperty(\"docker.image\");",
      "right" : "String imageName = project.getProperties().getProperty(\"docker.image\");",
      "info" : "VariableDeclarationStatement[39876-39947]:VariableDeclarationStatement[41500-41571]"
    }, {
      "left" : "if (Strings.isNotBlank(imageName))",
      "right" : "if (Strings.isNotBlank(imageName))",
      "info" : "IfStatement[39960-40335]:IfStatement[41584-41959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39995-40335]:Block[41619-41959]"
    }, {
      "left" : "String[] paths = imageName.split(\"/\");",
      "right" : "String[] paths = imageName.split(\"/\");",
      "info" : "VariableDeclarationStatement[40013-40051]:VariableDeclarationStatement[41637-41675]"
    }, {
      "left" : "if (paths != null)",
      "right" : "if (paths != null)",
      "info" : "IfStatement[40068-40321]:IfStatement[41692-41945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40087-40321]:Block[41711-41945]"
    }, {
      "left" : "if (paths.length == 2)",
      "right" : "if (paths.length == 2)",
      "info" : "IfStatement[40109-40303]:IfStatement[41733-41927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40132-40203]:Block[41756-41827]"
    }, {
      "left" : "groupPrefix = paths[0];",
      "right" : "groupPrefix = paths[0];",
      "info" : "ExpressionStatement[40158-40181]:ExpressionStatement[41782-41805]"
    }, {
      "left" : "if (paths.length == 3)",
      "right" : "if (paths.length == 3)",
      "info" : "IfStatement[40209-40303]:IfStatement[41833-41927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40232-40303]:Block[41856-41927]"
    }, {
      "left" : "groupPrefix = paths[1];",
      "right" : "groupPrefix = paths[1];",
      "info" : "ExpressionStatement[40258-40281]:ExpressionStatement[41882-41905]"
    }, {
      "left" : "if (Strings.isNullOrBlank(groupPrefix))",
      "right" : "if (Strings.isNullOrBlank(groupPrefix))",
      "info" : "IfStatement[40348-40455]:IfStatement[41972-42079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40388-40455]:Block[42012-42079]"
    }, {
      "left" : "groupPrefix = project.getGroupId();",
      "right" : "groupPrefix = project.getGroupId();",
      "info" : "ExpressionStatement[40406-40441]:ExpressionStatement[42030-42065]"
    }, {
      "left" : "kubernetesContainerName = groupPrefix + \"-\" + project.getArtifactId();",
      "right" : "kubernetesContainerName = groupPrefix + \"-\" + project.getArtifactId();",
      "info" : "ExpressionStatement[40468-40538]:ExpressionStatement[42092-42162]"
    }, {
      "left" : "return kubernetesContainerName;",
      "right" : "return kubernetesContainerName;",
      "info" : "ReturnStatement[40557-40588]:ReturnStatement[42181-42212]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40600-40606]:Modifier[42224-42230]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40607-40611]:PrimitiveType[42231-42235]"
    }, {
      "left" : "setKubernetesContainerName",
      "right" : "setKubernetesContainerName",
      "info" : "SimpleName[40612-40638]:SimpleName[42236-42262]"
    }, {
      "left" : "String kubernetesContainerName",
      "right" : "String kubernetesContainerName",
      "info" : "SingleVariableDeclaration[40639-40669]:SingleVariableDeclaration[42263-42293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40671-40742]:Block[42295-42366]"
    }, {
      "left" : "this.kubernetesContainerName = kubernetesContainerName;",
      "right" : "this.kubernetesContainerName = kubernetesContainerName;",
      "info" : "ExpressionStatement[40681-40736]:ExpressionStatement[42305-42360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40748-40754]:Modifier[42372-42378]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[40755-40761]:SimpleType[42379-42385]"
    }, {
      "left" : "getKubernetesName",
      "right" : "getKubernetesName",
      "info" : "SimpleName[40762-40779]:SimpleName[42386-42403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40782-40820]:Block[42406-42444]"
    }, {
      "left" : "return kubernetesName;",
      "right" : "return kubernetesName;",
      "info" : "ReturnStatement[40792-40814]:ReturnStatement[42416-42438]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40826-40832]:Modifier[42450-42456]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40833-40837]:PrimitiveType[42457-42461]"
    }, {
      "left" : "setKubernetesName",
      "right" : "setKubernetesName",
      "info" : "SimpleName[40838-40855]:SimpleName[42462-42479]"
    }, {
      "left" : "String kubernetesName",
      "right" : "String kubernetesName",
      "info" : "SingleVariableDeclaration[40856-40877]:SingleVariableDeclaration[42480-42501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40879-40932]:Block[42503-42556]"
    }, {
      "left" : "this.kubernetesName = kubernetesName;",
      "right" : "this.kubernetesName = kubernetesName;",
      "info" : "ExpressionStatement[40889-40926]:ExpressionStatement[42513-42550]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40938-40944]:Modifier[42562-42568]"
    }, {
      "left" : "Map<String, Integer>",
      "right" : "Map<String, Integer>",
      "info" : "ParameterizedType[40945-40965]:ParameterizedType[42569-42589]"
    }, {
      "left" : "getDefaultContainerPortMap",
      "right" : "getDefaultContainerPortMap",
      "info" : "SimpleName[40966-40992]:SimpleName[42590-42616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40995-41369]:Block[42619-42993]"
    }, {
      "left" : "if (defaultContainerPortMap == null)",
      "right" : "if (defaultContainerPortMap == null)",
      "info" : "IfStatement[41005-41108]:IfStatement[42629-42732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41042-41108]:Block[42666-42732]"
    }, {
      "left" : "defaultContainerPortMap = new HashMap<>();",
      "right" : "defaultContainerPortMap = new HashMap<>();",
      "info" : "ExpressionStatement[41056-41098]:ExpressionStatement[42680-42722]"
    }, {
      "left" : "if (defaultContainerPortMap.isEmpty())",
      "right" : "if (defaultContainerPortMap.isEmpty())",
      "info" : "IfStatement[41117-41323]:IfStatement[42741-42947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41156-41323]:Block[42780-42947]"
    }, {
      "left" : "defaultContainerPortMap.put(\"jolokia\", 8778);",
      "right" : "defaultContainerPortMap.put(\"jolokia\", 8778);",
      "info" : "ExpressionStatement[41214-41259]:ExpressionStatement[42838-42883]"
    }, {
      "left" : "defaultContainerPortMap.put(\"web\", 8080);",
      "right" : "defaultContainerPortMap.put(\"web\", 8080);",
      "info" : "ExpressionStatement[41272-41313]:ExpressionStatement[42896-42937]"
    }, {
      "left" : "return defaultContainerPortMap;",
      "right" : "return defaultContainerPortMap;",
      "info" : "ReturnStatement[41332-41363]:ReturnStatement[42956-42987]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41375-41381]:Modifier[42999-43005]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41382-41386]:PrimitiveType[43006-43010]"
    }, {
      "left" : "setDefaultContainerPortMap",
      "right" : "setDefaultContainerPortMap",
      "info" : "SimpleName[41387-41413]:SimpleName[43011-43037]"
    }, {
      "left" : "Map<String, Integer> defaultContainerPortMap",
      "right" : "Map<String, Integer> defaultContainerPortMap",
      "info" : "SingleVariableDeclaration[41414-41458]:SingleVariableDeclaration[43038-43082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41460-41531]:Block[43084-43155]"
    }, {
      "left" : "this.defaultContainerPortMap = defaultContainerPortMap;",
      "right" : "this.defaultContainerPortMap = defaultContainerPortMap;",
      "info" : "ExpressionStatement[41470-41525]:ExpressionStatement[43094-43149]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41537-41543]:Modifier[43161-43167]"
    }, {
      "left" : "List<ContainerPort>",
      "right" : "List<ContainerPort>",
      "info" : "ParameterizedType[41544-41563]:ParameterizedType[43168-43187]"
    }, {
      "left" : "getContainerPorts",
      "right" : "getContainerPorts",
      "info" : "SimpleName[41564-41581]:SimpleName[43188-43205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41584-43696]:Block[43208-45320]"
    }, {
      "left" : "if (containerPorts == null)",
      "right" : "if (containerPorts == null)",
      "info" : "IfStatement[41594-41681]:IfStatement[43218-43305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41622-41681]:Block[43246-43305]"
    }, {
      "left" : "containerPorts = new ArrayList<>();",
      "right" : "containerPorts = new ArrayList<>();",
      "info" : "ExpressionStatement[41636-41671]:ExpressionStatement[43260-43295]"
    }, {
      "left" : "if (containerPorts.isEmpty())",
      "right" : "if (containerPorts.isEmpty())",
      "info" : "IfStatement[41690-43659]:IfStatement[43314-45283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41720-43659]:Block[43344-45283]"
    }, {
      "left" : "Map<String, ContainerPort> portMap = new HashMap<>();",
      "right" : "Map<String, ContainerPort> portMap = new HashMap<>();",
      "info" : "VariableDeclarationStatement[41734-41787]:VariableDeclarationStatement[43358-43411]"
    }, {
      "left" : "Properties properties1 = getProject().getProperties();",
      "right" : "Properties properties1 = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[41800-41854]:VariableDeclarationStatement[43424-43478]"
    }, {
      "left" : "Map<String, String> hostPorts = findPropertiesWithPrefix(properties1, FABRIC8_PORT_HOST_PREFIX);",
      "right" : "Map<String, String> hostPorts = findPropertiesWithPrefix(properties1, FABRIC8_PORT_HOST_PREFIX);",
      "info" : "VariableDeclarationStatement[41867-41963]:VariableDeclarationStatement[43491-43587]"
    }, {
      "left" : "Properties properties = getProject().getProperties();",
      "right" : "Properties properties = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[41976-42029]:VariableDeclarationStatement[43600-43653]"
    }, {
      "left" : "Map<String, String> containerPortsMap = findPropertiesWithPrefix(properties, FABRIC8_PORT_CONTAINER_PREFIX);",
      "right" : "Map<String, String> containerPortsMap = findPropertiesWithPrefix(properties, FABRIC8_PORT_CONTAINER_PREFIX);",
      "info" : "VariableDeclarationStatement[42042-42150]:VariableDeclarationStatement[43666-43774]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : containerPortsMap.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : containerPortsMap.entrySet())",
      "info" : "EnhancedForStatement[42164-42670]:EnhancedForStatement[43788-44294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42233-42670]:Block[43857-44294]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[42251-42280]:VariableDeclarationStatement[43875-43904]"
    }, {
      "left" : "String portText = entry.getValue();",
      "right" : "String portText = entry.getValue();",
      "info" : "VariableDeclarationStatement[42297-42332]:VariableDeclarationStatement[43921-43956]"
    }, {
      "left" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_CONTAINER_PREFIX + name);",
      "right" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_CONTAINER_PREFIX + name);",
      "info" : "VariableDeclarationStatement[42349-42428]:VariableDeclarationStatement[43973-44052]"
    }, {
      "left" : "if (portNumber != null)",
      "right" : "if (portNumber != null)",
      "info" : "IfStatement[42445-42656]:IfStatement[44069-44280]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42469-42656]:Block[44093-44280]"
    }, {
      "left" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "right" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "info" : "VariableDeclarationStatement[42491-42543]:VariableDeclarationStatement[44115-44167]"
    }, {
      "left" : "port.setContainerPort(portNumber);",
      "right" : "port.setContainerPort(portNumber);",
      "info" : "ExpressionStatement[42564-42598]:ExpressionStatement[44188-44222]"
    }, {
      "left" : "port.setName(name);",
      "right" : "port.setName(name);",
      "info" : "ExpressionStatement[42619-42638]:ExpressionStatement[44243-44262]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : hostPorts.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : hostPorts.entrySet())",
      "info" : "EnhancedForStatement[42683-43393]:EnhancedForStatement[44307-45017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42744-43393]:Block[44368-45017]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[42762-42791]:VariableDeclarationStatement[44386-44415]"
    }, {
      "left" : "String portText = entry.getValue();",
      "right" : "String portText = entry.getValue();",
      "info" : "VariableDeclarationStatement[42808-42843]:VariableDeclarationStatement[44432-44467]"
    }, {
      "left" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_HOST_PREFIX + name);",
      "right" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_HOST_PREFIX + name);",
      "info" : "VariableDeclarationStatement[42860-42934]:VariableDeclarationStatement[44484-44558]"
    }, {
      "left" : "if (portNumber != null)",
      "right" : "if (portNumber != null)",
      "info" : "IfStatement[42951-43379]:IfStatement[44575-45003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42975-43379]:Block[44599-45003]"
    }, {
      "left" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "right" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "info" : "VariableDeclarationStatement[42997-43049]:VariableDeclarationStatement[44621-44673]"
    }, {
      "left" : "port.setHostPort(portNumber);",
      "right" : "port.setHostPort(portNumber);",
      "info" : "ExpressionStatement[43070-43099]:ExpressionStatement[44694-44723]"
    }, {
      "left" : "if (port.getContainerPort() == null)",
      "right" : "if (port.getContainerPort() == null)",
      "info" : "IfStatement[43214-43361]:IfStatement[44838-44985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43251-43361]:Block[44875-44985]"
    }, {
      "left" : "port.setContainerPort(getDefaultContainerPortMap().get(name));",
      "right" : "port.setContainerPort(getDefaultContainerPortMap().get(name));",
      "info" : "ExpressionStatement[43277-43339]:ExpressionStatement[44901-44963]"
    }, {
      "left" : "getLog().info(\"Generated port mappings: \" + portMap);",
      "right" : "getLog().info(\"Generated port mappings: \" + portMap);",
      "info" : "ExpressionStatement[43406-43459]:ExpressionStatement[45030-45083]"
    }, {
      "left" : "getLog().debug(\"from host ports: \" + hostPorts);",
      "right" : "getLog().debug(\"from host ports: \" + hostPorts);",
      "info" : "ExpressionStatement[43472-43520]:ExpressionStatement[45096-45144]"
    }, {
      "left" : "getLog().debug(\"from containerPorts ports: \" + containerPorts);",
      "right" : "getLog().debug(\"from containerPorts ports: \" + containerPorts);",
      "info" : "ExpressionStatement[43533-43596]:ExpressionStatement[45157-45220]"
    }, {
      "left" : "containerPorts.addAll(portMap.values());",
      "right" : "containerPorts.addAll(portMap.values());",
      "info" : "ExpressionStatement[43609-43649]:ExpressionStatement[45233-45273]"
    }, {
      "left" : "return containerPorts;",
      "right" : "return containerPorts;",
      "info" : "ReturnStatement[43668-43690]:ReturnStatement[45292-45314]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[43702-43711]:Modifier[45326-45335]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[43712-43718]:Modifier[45336-45342]"
    }, {
      "left" : "ContainerPort",
      "right" : "ContainerPort",
      "info" : "SimpleType[43719-43732]:SimpleType[45343-45356]"
    }, {
      "left" : "getOrCreatePort",
      "right" : "getOrCreatePort",
      "info" : "SimpleName[43733-43748]:SimpleName[45357-45372]"
    }, {
      "left" : "Map<String, ContainerPort> portMap",
      "right" : "Map<String, ContainerPort> portMap",
      "info" : "SingleVariableDeclaration[43749-43783]:SingleVariableDeclaration[45373-45407]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[43785-43796]:SingleVariableDeclaration[45409-45420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43798-44034]:Block[45422-45658]"
    }, {
      "left" : "ContainerPort answer = portMap.get(name);",
      "right" : "ContainerPort answer = portMap.get(name);",
      "info" : "VariableDeclarationStatement[43808-43849]:VariableDeclarationStatement[45432-45473]"
    }, {
      "left" : "if (answer == null)",
      "right" : "if (answer == null)",
      "info" : "IfStatement[43858-44005]:IfStatement[45482-45629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43878-44005]:Block[45502-45629]"
    }, {
      "left" : "answer = new ContainerPort();",
      "right" : "answer = new ContainerPort();",
      "info" : "ExpressionStatement[43892-43921]:ExpressionStatement[45516-45545]"
    }, {
      "left" : "portMap.put(name, answer);",
      "right" : "portMap.put(name, answer);",
      "info" : "ExpressionStatement[43934-43960]:ExpressionStatement[45558-45584]"
    }, {
      "left" : "answer.setName(name);",
      "right" : "answer.setName(name);",
      "info" : "ExpressionStatement[43974-43995]:ExpressionStatement[45598-45619]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[44014-44028]:ReturnStatement[45638-45652]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44040-44046]:Modifier[45664-45670]"
    }, {
      "left" : "List<ServicePort>",
      "right" : "List<ServicePort>",
      "info" : "ParameterizedType[44047-44064]:ParameterizedType[45671-45688]"
    }, {
      "left" : "getServicePorts",
      "right" : "getServicePorts",
      "info" : "SimpleName[44065-44080]:SimpleName[45689-45704]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[44090-44112]:SimpleType[45714-45736]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44113-47574]:Block[45737-49198]"
    }, {
      "left" : "if (servicePorts == null)",
      "right" : "if (servicePorts == null)",
      "info" : "IfStatement[44123-44206]:IfStatement[45747-45830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44149-44206]:Block[45773-45830]"
    }, {
      "left" : "servicePorts = new ArrayList<>();",
      "right" : "servicePorts = new ArrayList<>();",
      "info" : "ExpressionStatement[44163-44196]:ExpressionStatement[45787-45820]"
    }, {
      "left" : "if (servicePorts.isEmpty())",
      "right" : "if (servicePorts.isEmpty())",
      "info" : "IfStatement[44215-47539]:IfStatement[45839-49163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44243-47539]:Block[45867-49163]"
    }, {
      "left" : "Properties properties1 = getProject().getProperties();",
      "right" : "Properties properties1 = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[44257-44311]:VariableDeclarationStatement[45881-45935]"
    }, {
      "left" : "Map<String, String> servicePortProperties = findPropertiesWithPrefix(properties1, FABRIC8_PORT_SERVICE_PREFIX);",
      "right" : "Map<String, String> servicePortProperties = findPropertiesWithPrefix(properties1, FABRIC8_PORT_SERVICE_PREFIX);",
      "info" : "VariableDeclarationStatement[44324-44435]:VariableDeclarationStatement[45948-46059]"
    }, {
      "left" : "Map<String, String> serviceContainerPortProperties = findPropertiesWithPrefix(properties1, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX);",
      "right" : "Map<String, String> serviceContainerPortProperties = findPropertiesWithPrefix(properties1, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX);",
      "info" : "VariableDeclarationStatement[44448-44578]:VariableDeclarationStatement[46072-46202]"
    }, {
      "left" : "Map<String, String> serviceProtocolProperties = findPropertiesWithPrefix(properties1, FABRIC8_PROTOCOL_SERVICE_PREFIX);",
      "right" : "Map<String, String> serviceProtocolProperties = findPropertiesWithPrefix(properties1, FABRIC8_PROTOCOL_SERVICE_PREFIX);",
      "info" : "VariableDeclarationStatement[44591-44710]:VariableDeclarationStatement[46215-46334]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : servicePortProperties.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : servicePortProperties.entrySet())",
      "info" : "EnhancedForStatement[44724-46458]:EnhancedForStatement[46348-48082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44797-46458]:Block[46421-48082]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[44815-44844]:VariableDeclarationStatement[46439-46468]"
    }, {
      "left" : "String servicePortText = entry.getValue();",
      "right" : "String servicePortText = entry.getValue();",
      "info" : "VariableDeclarationStatement[44861-44903]:VariableDeclarationStatement[46485-46527]"
    }, {
      "left" : "Integer servicePortNumber = parsePort(servicePortText, FABRIC8_PORT_SERVICE_PREFIX + name);",
      "right" : "Integer servicePortNumber = parsePort(servicePortText, FABRIC8_PORT_SERVICE_PREFIX + name);",
      "info" : "VariableDeclarationStatement[44920-45011]:VariableDeclarationStatement[46544-46635]"
    }, {
      "left" : "if (servicePortNumber != null)",
      "right" : "if (servicePortNumber != null)",
      "info" : "IfStatement[45028-46444]:IfStatement[46652-48068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45059-46444]:Block[46683-48068]"
    }, {
      "left" : "String containerPort = serviceContainerPortProperties.get(name);",
      "right" : "String containerPort = serviceContainerPortProperties.get(name);",
      "info" : "VariableDeclarationStatement[45081-45145]:VariableDeclarationStatement[46705-46769]"
    }, {
      "left" : "if (Strings.isNullOrBlank(containerPort))",
      "right" : "if (Strings.isNullOrBlank(containerPort))",
      "info" : "IfStatement[45166-46426]:IfStatement[46790-48050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45208-45388]:Block[46832-47012]"
    }, {
      "left" : "getLog().warn(\"Missing container port for service - need to specify \" + FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name + \" property\");",
      "right" : "getLog().warn(\"Missing container port for service - need to specify \" + FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name + \" property\");",
      "info" : "ExpressionStatement[45234-45366]:ExpressionStatement[46858-46990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45394-46426]:Block[47018-48050]"
    }, {
      "left" : "ServicePort servicePort = new ServicePort();",
      "right" : "ServicePort servicePort = new ServicePort();",
      "info" : "VariableDeclarationStatement[45420-45464]:VariableDeclarationStatement[47044-47088]"
    }, {
      "left" : "servicePort.setName(name);",
      "right" : "servicePort.setName(name);",
      "info" : "ExpressionStatement[45489-45515]:ExpressionStatement[47113-47139]"
    }, {
      "left" : "servicePort.setPort(servicePortNumber);",
      "right" : "servicePort.setPort(servicePortNumber);",
      "info" : "ExpressionStatement[45540-45579]:ExpressionStatement[47164-47203]"
    }, {
      "left" : "IntOrString containerPortSpec = new IntOrString();",
      "right" : "IntOrString containerPortSpec = new IntOrString();",
      "info" : "VariableDeclarationStatement[45605-45655]:VariableDeclarationStatement[47229-47279]"
    }, {
      "left" : "Integer containerPortNumber = parsePort(containerPort, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name);",
      "right" : "Integer containerPortNumber = parsePort(containerPort, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name);",
      "info" : "VariableDeclarationStatement[45680-45781]:VariableDeclarationStatement[47304-47405]"
    }, {
      "left" : "if (containerPortNumber != null)",
      "right" : "if (containerPortNumber != null)",
      "info" : "IfStatement[45806-46049]:IfStatement[47430-47673]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45839-45944]:Block[47463-47568]"
    }, {
      "left" : "containerPortSpec.setIntVal(containerPortNumber);",
      "right" : "containerPortSpec.setIntVal(containerPortNumber);",
      "info" : "ExpressionStatement[45869-45918]:ExpressionStatement[47493-47542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45950-46049]:Block[47574-47673]"
    }, {
      "left" : "containerPortSpec.setStrVal(containerPort);",
      "right" : "containerPortSpec.setStrVal(containerPort);",
      "info" : "ExpressionStatement[45980-46023]:ExpressionStatement[47604-47647]"
    }, {
      "left" : "servicePort.setTargetPort(containerPortSpec);",
      "right" : "servicePort.setTargetPort(containerPortSpec);",
      "info" : "ExpressionStatement[46074-46119]:ExpressionStatement[47698-47743]"
    }, {
      "left" : "String portProtocol = serviceProtocolProperties.get(name);",
      "right" : "String portProtocol = serviceProtocolProperties.get(name);",
      "info" : "VariableDeclarationStatement[46145-46203]:VariableDeclarationStatement[47769-47827]"
    }, {
      "left" : "if (portProtocol != null)",
      "right" : "if (portProtocol != null)",
      "info" : "IfStatement[46228-46348]:IfStatement[47852-47972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46254-46348]:Block[47878-47972]"
    }, {
      "left" : "servicePort.setProtocol(portProtocol);",
      "right" : "servicePort.setProtocol(portProtocol);",
      "info" : "ExpressionStatement[46284-46322]:ExpressionStatement[47908-47946]"
    }, {
      "left" : "servicePorts.add(servicePort);",
      "right" : "servicePorts.add(servicePort);",
      "info" : "ExpressionStatement[46374-46404]:ExpressionStatement[47998-48028]"
    }, {
      "left" : "if (serviceContainerPort != null && servicePort != null)",
      "right" : "if (serviceContainerPort != null && servicePort != null)",
      "info" : "IfStatement[46472-47528]:IfStatement[48096-49152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46529-47528]:Block[48153-49152]"
    }, {
      "left" : "if (servicePorts.size() > 0)",
      "right" : "if (servicePorts.size() > 0)",
      "info" : "IfStatement[46548-46735]:IfStatement[48172-48359]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46577-46735]:Block[48201-48359]"
    }, {
      "left" : "throw new MojoExecutionException(\"Multi-port services must use the \" + FABRIC8_PORT_SERVICE_PREFIX + \"<name> format\");",
      "right" : "throw new MojoExecutionException(\"Multi-port services must use the \" + FABRIC8_PORT_SERVICE_PREFIX + \"<name> format\");",
      "info" : "ThrowStatement[46599-46717]:ThrowStatement[48223-48341]"
    }, {
      "left" : "ServicePort actualServicePort = new ServicePort();",
      "right" : "ServicePort actualServicePort = new ServicePort();",
      "info" : "VariableDeclarationStatement[46753-46803]:VariableDeclarationStatement[48377-48427]"
    }, {
      "left" : "Integer containerPortNumber = parsePort(serviceContainerPort, FABRIC8_CONTAINER_PORT_SERVICE);",
      "right" : "Integer containerPortNumber = parsePort(serviceContainerPort, FABRIC8_CONTAINER_PORT_SERVICE);",
      "info" : "VariableDeclarationStatement[46820-46914]:VariableDeclarationStatement[48444-48538]"
    }, {
      "left" : "IntOrString containerPort = new IntOrString();",
      "right" : "IntOrString containerPort = new IntOrString();",
      "info" : "VariableDeclarationStatement[46931-46977]:VariableDeclarationStatement[48555-48601]"
    }, {
      "left" : "if (containerPortNumber != null)",
      "right" : "if (containerPortNumber != null)",
      "info" : "IfStatement[46994-47204]:IfStatement[48618-48828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47027-47112]:Block[48651-48736]"
    }, {
      "left" : "containerPort.setIntVal(containerPortNumber);",
      "right" : "containerPort.setIntVal(containerPortNumber);",
      "info" : "ExpressionStatement[47049-47094]:ExpressionStatement[48673-48718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47118-47204]:Block[48742-48828]"
    }, {
      "left" : "containerPort.setStrVal(serviceContainerPort);",
      "right" : "containerPort.setStrVal(serviceContainerPort);",
      "info" : "ExpressionStatement[47140-47186]:ExpressionStatement[48764-48810]"
    }, {
      "left" : "actualServicePort.setTargetPort(containerPort);",
      "right" : "actualServicePort.setTargetPort(containerPort);",
      "info" : "ExpressionStatement[47221-47268]:ExpressionStatement[48845-48892]"
    }, {
      "left" : "actualServicePort.setPort(servicePort);",
      "right" : "actualServicePort.setPort(servicePort);",
      "info" : "ExpressionStatement[47285-47324]:ExpressionStatement[48909-48948]"
    }, {
      "left" : "if (serviceProtocol != null)",
      "right" : "if (serviceProtocol != null)",
      "info" : "IfStatement[47341-47514]:IfStatement[48965-49138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47370-47514]:Block[48994-49138]"
    }, {
      "left" : "actualServicePort.setProtocol(serviceProtocol);",
      "right" : "actualServicePort.setProtocol(serviceProtocol);",
      "info" : "ExpressionStatement[47392-47439]:ExpressionStatement[49016-49063]"
    }, {
      "left" : "servicePorts.add(actualServicePort);",
      "right" : "servicePorts.add(actualServicePort);",
      "info" : "ExpressionStatement[47460-47496]:ExpressionStatement[49084-49120]"
    }, {
      "left" : "return servicePorts;",
      "right" : "return servicePorts;",
      "info" : "ReturnStatement[47548-47568]:ReturnStatement[49172-49192]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47580-47589]:Modifier[49204-49213]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[47590-47596]:Modifier[49214-49220]"
    }, {
      "left" : "EnvVar",
      "right" : "EnvVar",
      "info" : "SimpleType[47597-47603]:SimpleType[49221-49227]"
    }, {
      "left" : "getOrCreateEnv",
      "right" : "getOrCreateEnv",
      "info" : "SimpleName[47604-47618]:SimpleName[49228-49242]"
    }, {
      "left" : "Map<String, EnvVar> envMap",
      "right" : "Map<String, EnvVar> envMap",
      "info" : "SingleVariableDeclaration[47619-47645]:SingleVariableDeclaration[49243-49269]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[47647-47658]:SingleVariableDeclaration[49271-49282]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47660-47845]:Block[49284-49469]"
    }, {
      "left" : "EnvVar answer = envMap.get(name);",
      "right" : "EnvVar answer = envMap.get(name);",
      "info" : "VariableDeclarationStatement[47670-47703]:VariableDeclarationStatement[49294-49327]"
    }, {
      "left" : "if (answer == null)",
      "right" : "if (answer == null)",
      "info" : "IfStatement[47712-47816]:IfStatement[49336-49440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47732-47816]:Block[49356-49440]"
    }, {
      "left" : "answer = new EnvVar();",
      "right" : "answer = new EnvVar();",
      "info" : "ExpressionStatement[47746-47768]:ExpressionStatement[49370-49392]"
    }, {
      "left" : "envMap.put(name, answer);",
      "right" : "envMap.put(name, answer);",
      "info" : "ExpressionStatement[47781-47806]:ExpressionStatement[49405-49430]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[47825-47839]:ReturnStatement[49449-49463]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[47851-47860]:Modifier[49475-49484]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[47861-47868]:SimpleType[49485-49492]"
    }, {
      "left" : "parsePort",
      "right" : "parsePort",
      "info" : "SimpleName[47869-47878]:SimpleName[49493-49502]"
    }, {
      "left" : "String portText",
      "right" : "String portText",
      "info" : "SingleVariableDeclaration[47879-47894]:SingleVariableDeclaration[49503-49518]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[47896-47915]:SingleVariableDeclaration[49520-49539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47917-48259]:Block[49541-49883]"
    }, {
      "left" : "if (Strings.isNotBlank(portText))",
      "right" : "if (Strings.isNotBlank(portText))",
      "info" : "IfStatement[47927-48232]:IfStatement[49551-49856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47961-48232]:Block[49585-49856]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[47975-48222]:TryStatement[49599-49846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47979-48045]:Block[49603-49669]"
    }, {
      "left" : "return Integer.parseInt(portText);",
      "right" : "return Integer.parseInt(portText);",
      "info" : "ReturnStatement[47997-48031]:ReturnStatement[49621-49655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48078-48222]:Block[49702-49846]"
    }, {
      "left" : "getLog().debug(\"Failed to parse port text: \" + portText + \" from maven property \" + propertyName + \". \" + e, e);",
      "right" : "getLog().debug(\"Failed to parse port text: \" + portText + \" from maven property \" + propertyName + \". \" + e, e);",
      "info" : "ExpressionStatement[48096-48208]:ExpressionStatement[49720-49832]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[48241-48253]:ReturnStatement[49865-49877]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48265-48271]:Modifier[49889-49895]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48272-48276]:PrimitiveType[49896-49900]"
    }, {
      "left" : "setContainerPorts",
      "right" : "setContainerPorts",
      "info" : "SimpleName[48277-48294]:SimpleName[49901-49918]"
    }, {
      "left" : "List<ContainerPort> ports",
      "right" : "List<ContainerPort> ports",
      "info" : "SingleVariableDeclaration[48295-48320]:SingleVariableDeclaration[49919-49944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48322-48366]:Block[49946-49990]"
    }, {
      "left" : "this.containerPorts = ports;",
      "right" : "this.containerPorts = ports;",
      "info" : "ExpressionStatement[48332-48360]:ExpressionStatement[49956-49984]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48372-48378]:Modifier[49996-50002]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48379-48383]:PrimitiveType[50003-50007]"
    }, {
      "left" : "setServicePorts",
      "right" : "setServicePorts",
      "info" : "SimpleName[48384-48399]:SimpleName[50008-50023]"
    }, {
      "left" : "List<ServicePort> ports",
      "right" : "List<ServicePort> ports",
      "info" : "SingleVariableDeclaration[48400-48423]:SingleVariableDeclaration[50024-50047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48425-48467]:Block[50049-50091]"
    }, {
      "left" : "this.servicePorts = ports;",
      "right" : "this.servicePorts = ports;",
      "info" : "ExpressionStatement[48435-48461]:ExpressionStatement[50059-50085]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48473-48479]:Modifier[50097-50103]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[48480-48499]:ParameterizedType[50104-50123]"
    }, {
      "left" : "getLabels",
      "right" : "getLabels",
      "info" : "SimpleName[48500-48509]:SimpleName[50124-50133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48512-48788]:Block[50136-50412]"
    }, {
      "left" : "if (labels == null)",
      "right" : "if (labels == null)",
      "info" : "IfStatement[48522-48591]:IfStatement[50146-50215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48542-48591]:Block[50166-50215]"
    }, {
      "left" : "labels = new HashMap<>();",
      "right" : "labels = new HashMap<>();",
      "info" : "ExpressionStatement[48556-48581]:ExpressionStatement[50180-50205]"
    }, {
      "left" : "if (labels.isEmpty())",
      "right" : "if (labels.isEmpty())",
      "info" : "IfStatement[48600-48759]:IfStatement[50224-50383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48622-48759]:Block[50246-50383]"
    }, {
      "left" : "labels = findPropertiesWithPrefix(getProject().getProperties(), \"fabric8.label.\", Strings.toLowerCaseFunction());",
      "right" : "labels = findPropertiesWithPrefix(getProject().getProperties(), \"fabric8.label.\", Strings.toLowerCaseFunction());",
      "info" : "ExpressionStatement[48636-48749]:ExpressionStatement[50260-50373]"
    }, {
      "left" : "return labels;",
      "right" : "return labels;",
      "info" : "ReturnStatement[48768-48782]:ReturnStatement[50392-50406]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48794-48800]:Modifier[50418-50424]"
    }, {
      "left" : "List<EnvVar>",
      "right" : "List<EnvVar>",
      "info" : "ParameterizedType[48801-48813]:ParameterizedType[50425-50437]"
    }, {
      "left" : "getEnvironmentVariables",
      "right" : "getEnvironmentVariables",
      "info" : "SimpleName[48814-48837]:SimpleName[50438-50461]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[48847-48869]:SimpleType[50471-50493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48870-50235]:Block[50494-51859]"
    }, {
      "left" : "if (environmentVariables == null)",
      "right" : "if (environmentVariables == null)",
      "info" : "IfStatement[48880-48985]:IfStatement[50504-50609]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48914-48985]:Block[50538-50609]"
    }, {
      "left" : "environmentVariables = new ArrayList<EnvVar>();",
      "right" : "environmentVariables = new ArrayList<EnvVar>();",
      "info" : "ExpressionStatement[48928-48975]:ExpressionStatement[50552-50599]"
    }, {
      "left" : "if (environmentVariables.isEmpty())",
      "right" : "if (environmentVariables.isEmpty())",
      "info" : "IfStatement[48994-49800]:IfStatement[50618-51424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49030-49800]:Block[50654-51424]"
    }, {
      "left" : "Map<String, EnvVar> envMap = new HashMap<>();",
      "right" : "Map<String, EnvVar> envMap = new HashMap<>();",
      "info" : "VariableDeclarationStatement[49044-49089]:VariableDeclarationStatement[50668-50713]"
    }, {
      "left" : "Map<String, String> envs = getExportedEnvironmentVariables();",
      "right" : "Map<String, String> envs = getExportedEnvironmentVariables();",
      "info" : "VariableDeclarationStatement[49102-49163]:VariableDeclarationStatement[50726-50787]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : envs.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : envs.entrySet())",
      "info" : "EnhancedForStatement[49177-49618]:EnhancedForStatement[50801-51242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49233-49618]:Block[50857-51242]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[49251-49280]:VariableDeclarationStatement[50875-50904]"
    }, {
      "left" : "String value = entry.getValue();",
      "right" : "String value = entry.getValue();",
      "info" : "VariableDeclarationStatement[49297-49329]:VariableDeclarationStatement[50921-50953]"
    }, {
      "left" : "if (name != null)",
      "right" : "if (name != null)",
      "info" : "IfStatement[49347-49604]:IfStatement[50971-51228]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49365-49604]:Block[50989-51228]"
    }, {
      "left" : "EnvVar env = getOrCreateEnv(envMap, name);",
      "right" : "EnvVar env = getOrCreateEnv(envMap, name);",
      "info" : "VariableDeclarationStatement[49387-49429]:VariableDeclarationStatement[51011-51053]"
    }, {
      "left" : "env.setName(name);",
      "right" : "env.setName(name);",
      "info" : "ExpressionStatement[49450-49468]:ExpressionStatement[51074-51092]"
    }, {
      "left" : "if (env.getValue() == null)",
      "right" : "if (env.getValue() == null)",
      "info" : "IfStatement[49490-49586]:IfStatement[51114-51210]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49518-49586]:Block[51142-51210]"
    }, {
      "left" : "env.setValue(value);",
      "right" : "env.setValue(value);",
      "info" : "ExpressionStatement[49544-49564]:ExpressionStatement[51168-51188]"
    }, {
      "left" : "getLog().info(\"Generated env mappings: \" + envMap);",
      "right" : "getLog().info(\"Generated env mappings: \" + envMap);",
      "info" : "ExpressionStatement[49631-49682]:ExpressionStatement[51255-51306]"
    }, {
      "left" : "getLog().debug(\"from envs: \" + envs);",
      "right" : "getLog().debug(\"from envs: \" + envs);",
      "info" : "ExpressionStatement[49695-49732]:ExpressionStatement[51319-51356]"
    }, {
      "left" : "environmentVariables.addAll(envMap.values());",
      "right" : "environmentVariables.addAll(envMap.values());",
      "info" : "ExpressionStatement[49745-49790]:ExpressionStatement[51369-51414]"
    }, {
      "left" : "if (includeNamespaceEnvVar)",
      "right" : "if (includeNamespaceEnvVar)",
      "info" : "IfStatement[49810-50191]:IfStatement[51434-51815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49838-50191]:Block[51462-51815]"
    }, {
      "left" : "environmentVariables.add(\n                    new EnvVarBuilder().withName(kubernetesNamespaceEnvVar).\n                            withNewValueFrom().withNewFieldRef().\n                            withFieldPath(\"metadata.namespace\").endFieldRef().\n                            endValueFrom().\n                            build());",
      "right" : "environmentVariables.add(\n                    new EnvVarBuilder().withName(kubernetesNamespaceEnvVar).\n                            withNewValueFrom().withNewFieldRef().\n                            withFieldPath(\"metadata.namespace\").endFieldRef().\n                            endValueFrom().\n                            build());",
      "info" : "ExpressionStatement[49852-50181]:ExpressionStatement[51476-51805]"
    }, {
      "left" : "return environmentVariables;",
      "right" : "return environmentVariables;",
      "info" : "ReturnStatement[50201-50229]:ReturnStatement[51825-51853]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50241-50247]:Modifier[51865-51871]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[50248-50267]:ParameterizedType[51872-51891]"
    }, {
      "left" : "getExportedEnvironmentVariables",
      "right" : "getExportedEnvironmentVariables",
      "info" : "SimpleName[50268-50299]:SimpleName[51892-51923]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[50309-50331]:SimpleType[51933-51955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50332-51488]:Block[51956-53112]"
    }, {
      "left" : "if (includeAllEnvironmentVariables)",
      "right" : "if (includeAllEnvironmentVariables)",
      "info" : "IfStatement[50342-51482]:IfStatement[51966-53106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50378-51410]:Block[52002-53034]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[50392-51400]:TryStatement[52016-53024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50396-51246]:Block[52020-52870]"
    }, {
      "left" : "JsonSchema schema = getEnvironmentVariableJsonSchema();",
      "right" : "JsonSchema schema = getEnvironmentVariableJsonSchema();",
      "info" : "VariableDeclarationStatement[50414-50469]:VariableDeclarationStatement[52038-52093]"
    }, {
      "left" : "Map<String, String> answer = new TreeMap<>();",
      "right" : "Map<String, String> answer = new TreeMap<>();",
      "info" : "VariableDeclarationStatement[50486-50531]:VariableDeclarationStatement[52110-52155]"
    }, {
      "left" : "Map<String, JsonSchemaProperty> properties = schema.getProperties();",
      "right" : "Map<String, JsonSchemaProperty> properties = schema.getProperties();",
      "info" : "VariableDeclarationStatement[50548-50616]:VariableDeclarationStatement[52172-52240]"
    }, {
      "left" : "Set<Map.Entry<String, JsonSchemaProperty>> entries = properties.entrySet();",
      "right" : "Set<Map.Entry<String, JsonSchemaProperty>> entries = properties.entrySet();",
      "info" : "VariableDeclarationStatement[50633-50708]:VariableDeclarationStatement[52257-52332]"
    }, {
      "left" : "for (Map.Entry<String, JsonSchemaProperty> entry : entries)",
      "right" : "for (Map.Entry<String, JsonSchemaProperty> entry : entries)",
      "info" : "EnhancedForStatement[50725-51069]:EnhancedForStatement[52349-52693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50785-51069]:Block[52409-52693]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[50807-50836]:VariableDeclarationStatement[52431-52460]"
    }, {
      "left" : "String value = entry.getValue().getDefaultValue();",
      "right" : "String value = entry.getValue().getDefaultValue();",
      "info" : "VariableDeclarationStatement[50857-50907]:VariableDeclarationStatement[52481-52531]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[50928-51006]:IfStatement[52552-52630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50947-51006]:Block[52571-52630]"
    }, {
      "left" : "value = \"\";",
      "right" : "value = \"\";",
      "info" : "ExpressionStatement[50973-50984]:ExpressionStatement[52597-52608]"
    }, {
      "left" : "answer.put(name, value);",
      "right" : "answer.put(name, value);",
      "info" : "ExpressionStatement[51027-51051]:ExpressionStatement[52651-52675]"
    }, {
      "left" : "Map<String, String> mavenEnvVars = getEnvironmentVariableProperties();",
      "right" : "Map<String, String> mavenEnvVars = getEnvironmentVariableProperties();",
      "info" : "VariableDeclarationStatement[51086-51156]:VariableDeclarationStatement[52710-52780]"
    }, {
      "left" : "answer.putAll(mavenEnvVars);",
      "right" : "answer.putAll(mavenEnvVars);",
      "info" : "ExpressionStatement[51173-51201]:ExpressionStatement[52797-52825]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[51218-51232]:ReturnStatement[52842-52856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51269-51400]:Block[52893-53024]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to load environment variable json schema files: \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to load environment variable json schema files: \" + e, e);",
      "info" : "ThrowStatement[51287-51386]:ThrowStatement[52911-53010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51416-51482]:Block[53040-53106]"
    }, {
      "left" : "return getEnvironmentVariableProperties();",
      "right" : "return getEnvironmentVariableProperties();",
      "info" : "ReturnStatement[51430-51472]:ReturnStatement[53054-53096]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51494-51500]:Modifier[53118-53124]"
    }, {
      "left" : "List<VolumeMount>",
      "right" : "List<VolumeMount>",
      "info" : "ParameterizedType[51501-51518]:ParameterizedType[53125-53142]"
    }, {
      "left" : "getVolumeMounts",
      "right" : "getVolumeMounts",
      "info" : "SimpleName[51519-51534]:SimpleName[53143-53158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51537-52505]:Block[53161-54129]"
    }, {
      "left" : "List<VolumeMount> volumeMount = new ArrayList<>();",
      "right" : "List<VolumeMount> volumeMount = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[51547-51597]:VariableDeclarationStatement[53171-53221]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[51606-51642]:VariableDeclarationStatement[53230-53266]"
    }, {
      "left" : "for (Map.Entry<Object, Object> entry : project.getProperties().entrySet())",
      "right" : "for (Map.Entry<Object, Object> entry : project.getProperties().entrySet())",
      "info" : "EnhancedForStatement[51651-52471]:EnhancedForStatement[53275-54095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51726-52471]:Block[53350-54095]"
    }, {
      "left" : "Object key = entry.getKey();",
      "right" : "Object key = entry.getKey();",
      "info" : "VariableDeclarationStatement[51740-51768]:VariableDeclarationStatement[53364-53392]"
    }, {
      "left" : "if (key instanceof String)",
      "right" : "if (key instanceof String)",
      "info" : "IfStatement[51781-52461]:IfStatement[53405-54085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51808-52461]:Block[53432-54085]"
    }, {
      "left" : "String s = (String) key;",
      "right" : "String s = (String) key;",
      "info" : "VariableDeclarationStatement[51826-51850]:VariableDeclarationStatement[53450-53474]"
    }, {
      "left" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "right" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "info" : "VariableDeclarationStatement[51867-51905]:VariableDeclarationStatement[53491-53529]"
    }, {
      "left" : "if (m.matches())",
      "right" : "if (m.matches())",
      "info" : "IfStatement[51922-52447]:IfStatement[53546-54071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51939-52447]:Block[53563-54071]"
    }, {
      "left" : "String name = m.group(NAME);",
      "right" : "String name = m.group(NAME);",
      "info" : "VariableDeclarationStatement[51961-51989]:VariableDeclarationStatement[53585-53613]"
    }, {
      "left" : "String type = m.group(ATTRIBUTE_TYPE);",
      "right" : "String type = m.group(ATTRIBUTE_TYPE);",
      "info" : "VariableDeclarationStatement[52010-52048]:VariableDeclarationStatement[53634-53672]"
    }, {
      "left" : "if (type.equals(VOLUME_MOUNT_PATH))",
      "right" : "if (type.equals(VOLUME_MOUNT_PATH))",
      "info" : "IfStatement[52069-52429]:IfStatement[53693-54053]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52105-52429]:Block[53729-54053]"
    }, {
      "left" : "String path = String.valueOf(entry.getValue());",
      "right" : "String path = String.valueOf(entry.getValue());",
      "info" : "VariableDeclarationStatement[52131-52178]:VariableDeclarationStatement[53755-53802]"
    }, {
      "left" : "volumeMount.add(new VolumeMountBuilder()\n                                .withName(name)\n                                .withMountPath(path)\n                                .withReadOnly(false).build());",
      "right" : "volumeMount.add(new VolumeMountBuilder()\n                                .withName(name)\n                                .withMountPath(path)\n                                .withReadOnly(false).build());",
      "info" : "ExpressionStatement[52203-52407]:ExpressionStatement[53827-54031]"
    }, {
      "left" : "return volumeMount;",
      "right" : "return volumeMount;",
      "info" : "ReturnStatement[52480-52499]:ReturnStatement[54104-54123]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52511-52517]:Modifier[54135-54141]"
    }, {
      "left" : "List<Volume>",
      "right" : "List<Volume>",
      "info" : "ParameterizedType[52518-52530]:ParameterizedType[54142-54154]"
    }, {
      "left" : "getVolumes",
      "right" : "getVolumes",
      "info" : "SimpleName[52531-52541]:SimpleName[54155-54165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52544-53383]:Block[54168-55007]"
    }, {
      "left" : "List<Volume> volumes = new ArrayList<>();",
      "right" : "List<Volume> volumes = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[52554-52595]:VariableDeclarationStatement[54178-54219]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[52604-52640]:VariableDeclarationStatement[54228-54264]"
    }, {
      "left" : "Properties properties = project.getProperties();",
      "right" : "Properties properties = project.getProperties();",
      "info" : "VariableDeclarationStatement[52649-52697]:VariableDeclarationStatement[54273-54321]"
    }, {
      "left" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "right" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "info" : "EnhancedForStatement[52707-53353]:EnhancedForStatement[54331-54977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52769-53353]:Block[54393-54977]"
    }, {
      "left" : "Object key = entry.getKey();",
      "right" : "Object key = entry.getKey();",
      "info" : "VariableDeclarationStatement[52783-52811]:VariableDeclarationStatement[54407-54435]"
    }, {
      "left" : "if (key instanceof String)",
      "right" : "if (key instanceof String)",
      "info" : "IfStatement[52824-53343]:IfStatement[54448-54967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52851-53343]:Block[54475-54967]"
    }, {
      "left" : "String s = (String) key;",
      "right" : "String s = (String) key;",
      "info" : "VariableDeclarationStatement[52869-52893]:VariableDeclarationStatement[54493-54517]"
    }, {
      "left" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "right" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "info" : "VariableDeclarationStatement[52910-52948]:VariableDeclarationStatement[54534-54572]"
    }, {
      "left" : "if (m.matches())",
      "right" : "if (m.matches())",
      "info" : "IfStatement[52965-53329]:IfStatement[54589-54953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52982-53329]:Block[54606-54953]"
    }, {
      "left" : "String name = m.group(NAME);",
      "right" : "String name = m.group(NAME);",
      "info" : "VariableDeclarationStatement[53004-53032]:VariableDeclarationStatement[54628-54656]"
    }, {
      "left" : "String type = m.group(ATTRIBUTE_TYPE);",
      "right" : "String type = m.group(ATTRIBUTE_TYPE);",
      "info" : "VariableDeclarationStatement[53053-53091]:VariableDeclarationStatement[54677-54715]"
    }, {
      "left" : "VolumeType volumeType = VolumeType.typeFor(type);",
      "right" : "VolumeType volumeType = VolumeType.typeFor(type);",
      "info" : "VariableDeclarationStatement[53112-53161]:VariableDeclarationStatement[54736-54785]"
    }, {
      "left" : "if (volumeType != null)",
      "right" : "if (volumeType != null)",
      "info" : "IfStatement[53182-53311]:IfStatement[54806-54935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53206-53311]:Block[54830-54935]"
    }, {
      "left" : "volumes.add(volumeType.fromProperties(name, properties));",
      "right" : "volumes.add(volumeType.fromProperties(name, properties));",
      "info" : "ExpressionStatement[53232-53289]:ExpressionStatement[54856-54913]"
    }, {
      "left" : "return volumes;",
      "right" : "return volumes;",
      "info" : "ReturnStatement[53362-53377]:ReturnStatement[54986-55001]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53389-53395]:Modifier[55013-55019]"
    }, {
      "left" : "Template",
      "right" : "Template",
      "info" : "SimpleType[53396-53404]:SimpleType[55020-55028]"
    }, {
      "left" : "getTemplate",
      "right" : "getTemplate",
      "info" : "SimpleName[53405-53416]:SimpleName[55029-55040]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[53426-53448]:SimpleType[55050-55072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53449-55338]:Block[55073-56962]"
    }, {
      "left" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters = new ArrayList<>();",
      "right" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[53459-53546]:VariableDeclarationStatement[55083-55170]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[53555-53591]:VariableDeclarationStatement[55179-55215]"
    }, {
      "left" : "Properties projectProperties = project.getProperties();",
      "right" : "Properties projectProperties = project.getProperties();",
      "info" : "VariableDeclarationStatement[53600-53655]:VariableDeclarationStatement[55224-55279]"
    }, {
      "left" : "Set<String> paramNames = new HashSet<>();",
      "right" : "Set<String> paramNames = new HashSet<>();",
      "info" : "VariableDeclarationStatement[53664-53705]:VariableDeclarationStatement[55288-55329]"
    }, {
      "left" : "if (templateParametersPropertiesFile != null && templateParametersPropertiesFile.isFile() && templateParametersPropertiesFile.exists())",
      "right" : "if (templateParametersPropertiesFile != null && templateParametersPropertiesFile.isFile() && templateParametersPropertiesFile.exists())",
      "info" : "IfStatement[53714-54926]:IfStatement[55338-56550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53850-54926]:Block[55474-56550]"
    }, {
      "left" : "final String valuePostfix = \".value\";",
      "right" : "final String valuePostfix = \".value\";",
      "info" : "VariableDeclarationStatement[53864-53901]:VariableDeclarationStatement[55488-55525]"
    }, {
      "left" : "final String descriptionPostfix = \".description\";",
      "right" : "final String descriptionPostfix = \".description\";",
      "info" : "VariableDeclarationStatement[53914-53963]:VariableDeclarationStatement[55538-55587]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[53976-54916]:TryStatement[55600-56540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53980-54725]:Block[55604-56349]"
    }, {
      "left" : "Properties properties = new Properties();",
      "right" : "Properties properties = new Properties();",
      "info" : "VariableDeclarationStatement[53998-54039]:VariableDeclarationStatement[55622-55663]"
    }, {
      "left" : "properties.load(new FileInputStream(templateParametersPropertiesFile));",
      "right" : "properties.load(new FileInputStream(templateParametersPropertiesFile));",
      "info" : "ExpressionStatement[54056-54127]:ExpressionStatement[55680-55751]"
    }, {
      "left" : "Set<Object> keys = properties.keySet();",
      "right" : "Set<Object> keys = properties.keySet();",
      "info" : "VariableDeclarationStatement[54186-54225]:VariableDeclarationStatement[55810-55849]"
    }, {
      "left" : "Properties prefixedProperties = new Properties();",
      "right" : "Properties prefixedProperties = new Properties();",
      "info" : "VariableDeclarationStatement[54242-54291]:VariableDeclarationStatement[55866-55915]"
    }, {
      "left" : "for (Object key : keys)",
      "right" : "for (Object key : keys)",
      "info" : "EnhancedForStatement[54308-54621]:EnhancedForStatement[55932-56245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54332-54621]:Block[55956-56245]"
    }, {
      "left" : "if (key != null)",
      "right" : "if (key != null)",
      "info" : "IfStatement[54354-54603]:IfStatement[55978-56227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54371-54603]:Block[55995-56227]"
    }, {
      "left" : "String name = key.toString();",
      "right" : "String name = key.toString();",
      "info" : "VariableDeclarationStatement[54397-54426]:VariableDeclarationStatement[56021-56050]"
    }, {
      "left" : "String value = properties.getProperty(name);",
      "right" : "String value = properties.getProperty(name);",
      "info" : "VariableDeclarationStatement[54451-54495]:VariableDeclarationStatement[56075-56119]"
    }, {
      "left" : "prefixedProperties.put(PARAMETER_PREFIX + \".\" + name, value);",
      "right" : "prefixedProperties.put(PARAMETER_PREFIX + \".\" + name, value);",
      "info" : "ExpressionStatement[54520-54581]:ExpressionStatement[56144-56205]"
    }, {
      "left" : "loadParametersFromProperties(prefixedProperties, parameters, paramNames);",
      "right" : "loadParametersFromProperties(prefixedProperties, parameters, paramNames);",
      "info" : "ExpressionStatement[54638-54711]:ExpressionStatement[56262-56335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54748-54916]:Block[56372-56540]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to load templateParameters properties file \" + templateParametersPropertiesFile + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to load templateParameters properties file \" + templateParametersPropertiesFile + \". \" + e, e);",
      "info" : "ThrowStatement[54766-54902]:ThrowStatement[56390-56526]"
    }, {
      "left" : "loadParametersFromProperties(projectProperties, parameters, paramNames);",
      "right" : "loadParametersFromProperties(projectProperties, parameters, paramNames);",
      "info" : "ExpressionStatement[54935-55007]:ExpressionStatement[56559-56631]"
    }, {
      "left" : "String templateName = projectProperties.containsKey(TEMPLATE_NAME) ?\n                String.valueOf(projectProperties.getProperty(TEMPLATE_NAME)) :\n                project.getArtifactId();",
      "right" : "String templateName = projectProperties.containsKey(TEMPLATE_NAME) ?\n                String.valueOf(projectProperties.getProperty(TEMPLATE_NAME)) :\n                project.getArtifactId();",
      "info" : "VariableDeclarationStatement[55016-55204]:VariableDeclarationStatement[56640-56828]"
    }, {
      "left" : "return new TemplateBuilder().withNewMetadata().withName(templateName).endMetadata().withParameters(parameters).build();",
      "right" : "return new TemplateBuilder().withNewMetadata().withName(templateName).endMetadata().withParameters(parameters).build();",
      "info" : "ReturnStatement[55213-55332]:ReturnStatement[56837-56956]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[55344-55353]:Modifier[56968-56977]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55354-55358]:PrimitiveType[56978-56982]"
    }, {
      "left" : "loadParametersFromProperties",
      "right" : "loadParametersFromProperties",
      "info" : "SimpleName[55359-55387]:SimpleName[56983-57011]"
    }, {
      "left" : "Properties properties",
      "right" : "Properties properties",
      "info" : "SingleVariableDeclaration[55388-55409]:SingleVariableDeclaration[57012-57033]"
    }, {
      "left" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters",
      "right" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters",
      "info" : "SingleVariableDeclaration[55411-55477]:SingleVariableDeclaration[57035-57101]"
    }, {
      "left" : "Set<String> paramNames",
      "right" : "Set<String> paramNames",
      "info" : "SingleVariableDeclaration[55479-55501]:SingleVariableDeclaration[57103-57125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55503-57464]:Block[57127-59088]"
    }, {
      "left" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "right" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "info" : "EnhancedForStatement[55513-57458]:EnhancedForStatement[57137-59082]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55575-57458]:Block[57199-59082]"
    }, {
      "left" : "Object key = entry.getKey();",
      "right" : "Object key = entry.getKey();",
      "info" : "VariableDeclarationStatement[55589-55617]:VariableDeclarationStatement[57213-57241]"
    }, {
      "left" : "if (key instanceof String)",
      "right" : "if (key instanceof String)",
      "info" : "IfStatement[55630-57448]:IfStatement[57254-59072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55657-57448]:Block[57281-59072]"
    }, {
      "left" : "String s = (String) key;",
      "right" : "String s = (String) key;",
      "info" : "VariableDeclarationStatement[55675-55699]:VariableDeclarationStatement[57299-57323]"
    }, {
      "left" : "Matcher m = PARAM_PATTERN.matcher(s);",
      "right" : "Matcher m = PARAM_PATTERN.matcher(s);",
      "info" : "VariableDeclarationStatement[55716-55753]:VariableDeclarationStatement[57340-57377]"
    }, {
      "left" : "if (m.matches())",
      "right" : "if (m.matches())",
      "info" : "IfStatement[55770-57434]:IfStatement[57394-59058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55787-57434]:Block[57411-59058]"
    }, {
      "left" : "String name = m.group(NAME);",
      "right" : "String name = m.group(NAME);",
      "info" : "VariableDeclarationStatement[55809-55837]:VariableDeclarationStatement[57433-57461]"
    }, {
      "left" : "if (paramNames.add(name))",
      "right" : "if (paramNames.add(name))",
      "info" : "IfStatement[55858-57416]:IfStatement[57482-59040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55884-57416]:Block[57508-59040]"
    }, {
      "left" : "String value = properties.getProperty(String.format(PARAMETER_PROPERTY, name, VALUE));",
      "right" : "String value = properties.getProperty(String.format(PARAMETER_PROPERTY, name, VALUE));",
      "info" : "VariableDeclarationStatement[55910-55996]:VariableDeclarationStatement[57534-57620]"
    }, {
      "left" : "String from = properties.getProperty(String.format(PARAMETER_PROPERTY, name, FROM));",
      "right" : "String from = properties.getProperty(String.format(PARAMETER_PROPERTY, name, FROM));",
      "info" : "VariableDeclarationStatement[56021-56105]:VariableDeclarationStatement[57645-57729]"
    }, {
      "left" : "String description = properties.getProperty(String.format(PARAMETER_PROPERTY, name, DESCRIPTION));",
      "right" : "String description = properties.getProperty(String.format(PARAMETER_PROPERTY, name, DESCRIPTION));",
      "info" : "VariableDeclarationStatement[56130-56228]:VariableDeclarationStatement[57754-57852]"
    }, {
      "left" : "String generate = properties.getProperty(String.format(PARAMETER_PROPERTY, name, GENERATE));",
      "right" : "String generate = properties.getProperty(String.format(PARAMETER_PROPERTY, name, GENERATE));",
      "info" : "VariableDeclarationStatement[56253-56345]:VariableDeclarationStatement[57877-57969]"
    }, {
      "left" : "if (Strings.isNullOrBlank(value) && Strings.isNullOrBlank(from))",
      "right" : "if (Strings.isNullOrBlank(value) && Strings.isNullOrBlank(from))",
      "info" : "IfStatement[56464-56660]:IfStatement[58088-58284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56529-56660]:Block[58153-58284]"
    }, {
      "left" : "value = properties.getProperty(String.format(PARAMETER_NAME_PREFIX, name));",
      "right" : "value = properties.getProperty(String.format(PARAMETER_NAME_PREFIX, name));",
      "info" : "ExpressionStatement[56559-56634]:ExpressionStatement[58183-58258]"
    }, {
      "left" : "getLog().info(\"Found Template parameter: \" + name +\n                                labelValueOrBlank(\"value\", value) +\n                                labelValueOrBlank(\"from\", from) +\n                                labelValueOrBlank(\"generate\", generate) +\n                                labelValueOrBlank(\"description\", description));",
      "right" : "getLog().info(\"Found Template parameter: \" + name +\n                                labelValueOrBlank(\"value\", value) +\n                                labelValueOrBlank(\"from\", from) +\n                                labelValueOrBlank(\"generate\", generate) +\n                                labelValueOrBlank(\"description\", description));",
      "info" : "ExpressionStatement[56685-57024]:ExpressionStatement[58309-58648]"
    }, {
      "left" : "parameters.add(new ParameterBuilder()\n                                .withName(name)\n                                .withFrom(from)\n                                .withValue(value)\n                                .withGenerate(generate)\n                                .withDescription(description)\n                                .build());",
      "right" : "parameters.add(new ParameterBuilder()\n                                .withName(name)\n                                .withFrom(from)\n                                .withValue(value)\n                                .withGenerate(generate)\n                                .withDescription(description)\n                                .build());",
      "info" : "ExpressionStatement[57050-57394]:ExpressionStatement[58674-59018]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57470-57477]:Modifier[59094-59101]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[57478-57484]:SimpleType[59102-59108]"
    }, {
      "left" : "labelValueOrBlank",
      "right" : "labelValueOrBlank",
      "info" : "SimpleName[57485-57502]:SimpleName[59109-59126]"
    }, {
      "left" : "String label",
      "right" : "String label",
      "info" : "SingleVariableDeclaration[57503-57515]:SingleVariableDeclaration[59127-59139]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[57517-57529]:SingleVariableDeclaration[59141-59153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57531-57676]:Block[59155-59300]"
    }, {
      "left" : "if (Strings.isNotBlank(value))",
      "right" : "if (Strings.isNotBlank(value))",
      "info" : "IfStatement[57541-57670]:IfStatement[59165-59294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57572-57630]:Block[59196-59254]"
    }, {
      "left" : "return \" \" + label + \": \" + value;",
      "right" : "return \" \" + label + \": \" + value;",
      "info" : "ReturnStatement[57586-57620]:ReturnStatement[59210-59244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57636-57670]:Block[59260-59294]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[57650-57660]:ReturnStatement[59274-59284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57682-57688]:Modifier[59306-59312]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57689-57693]:PrimitiveType[59313-59317]"
    }, {
      "left" : "setLabels",
      "right" : "setLabels",
      "info" : "SimpleName[57694-57703]:SimpleName[59318-59327]"
    }, {
      "left" : "Map<String, String> labels",
      "right" : "Map<String, String> labels",
      "info" : "SingleVariableDeclaration[57704-57730]:SingleVariableDeclaration[59328-59354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57732-57769]:Block[59356-59393]"
    }, {
      "left" : "this.labels = labels;",
      "right" : "this.labels = labels;",
      "info" : "ExpressionStatement[57742-57763]:ExpressionStatement[59366-59387]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[57775-57784]:Modifier[59399-59408]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[57785-57791]:Modifier[59409-59415]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57792-57796]:PrimitiveType[59416-59420]"
    }, {
      "left" : "addIfNotDefined",
      "right" : "addIfNotDefined",
      "info" : "SimpleName[57797-57812]:SimpleName[59421-59436]"
    }, {
      "left" : "Map<String, Object> variables",
      "right" : "Map<String, Object> variables",
      "info" : "SingleVariableDeclaration[57813-57842]:SingleVariableDeclaration[59437-59466]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[57844-57854]:SingleVariableDeclaration[59468-59478]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[57856-57868]:SingleVariableDeclaration[59480-59492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57870-57969]:Block[59494-59593]"
    }, {
      "left" : "if (!variables.containsKey(key))",
      "right" : "if (!variables.containsKey(key))",
      "info" : "IfStatement[57880-57963]:IfStatement[59504-59587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57913-57963]:Block[59537-59587]"
    }, {
      "left" : "variables.put(key, value);",
      "right" : "variables.put(key, value);",
      "info" : "ExpressionStatement[57927-57953]:ExpressionStatement[59551-59577]"
    } ]
  },
  "interFileMappings" : { }
}