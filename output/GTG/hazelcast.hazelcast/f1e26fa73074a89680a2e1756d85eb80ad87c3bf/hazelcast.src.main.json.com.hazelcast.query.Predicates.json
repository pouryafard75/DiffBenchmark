{
  "matchedElements" : [ {
    "left" : "class : Predicates",
    "right" : "class : Predicates",
    "info" : "TypeDeclaration[1449-29088]:TypeDeclaration[1371-3560]"
  }, {
    "left" : "private Predicates()",
    "right" : "private Predicates()",
    "info" : "MethodDeclaration[1624-1652]:MethodDeclaration[1546-1574]"
  }, {
    "left" : "public instanceOf(klass ) : ",
    "right" : "public instanceOf(klass ) : ",
    "info" : "MethodDeclaration[1658-1766]:MethodDeclaration[1580-1688]"
  }, {
    "left" : "public and() : ",
    "right" : "public and() : ",
    "info" : "MethodDeclaration[2087-2192]:MethodDeclaration[1694-1799]"
  }, {
    "left" : "public not(predicate ) : ",
    "right" : "public not(predicate ) : ",
    "info" : "MethodDeclaration[2198-2298]:MethodDeclaration[1805-1905]"
  }, {
    "left" : "public or() : ",
    "right" : "public or() : ",
    "info" : "MethodDeclaration[2304-2490]:MethodDeclaration[1911-2097]"
  }, {
    "left" : "public notEqual(attribute , y ) : ",
    "right" : "public notEqual(attribute , y ) : ",
    "info" : "MethodDeclaration[2496-2620]:MethodDeclaration[2103-2227]"
  }, {
    "left" : "public equal(attribute , y ) : ",
    "right" : "public equal(attribute , y ) : ",
    "info" : "MethodDeclaration[2626-2744]:MethodDeclaration[2233-2351]"
  }, {
    "left" : "public like(attribute , pattern ) : ",
    "right" : "public like(attribute , pattern ) : ",
    "info" : "MethodDeclaration[2750-2874]:MethodDeclaration[2357-2481]"
  }, {
    "left" : "public ilike(attribute , pattern ) : ",
    "right" : "public ilike(attribute , pattern ) : ",
    "info" : "MethodDeclaration[2880-3006]:MethodDeclaration[2487-2613]"
  }, {
    "left" : "public regex(attribute , pattern ) : ",
    "right" : "public regex(attribute , pattern ) : ",
    "info" : "MethodDeclaration[3012-3138]:MethodDeclaration[2619-2745]"
  }, {
    "left" : "public greaterThan(x , y ) : ",
    "right" : "public greaterThan(x , y ) : ",
    "info" : "MethodDeclaration[3144-3272]:MethodDeclaration[2751-2879]"
  }, {
    "left" : "public greaterEqual(x , y ) : ",
    "right" : "public greaterEqual(x , y ) : ",
    "info" : "MethodDeclaration[3278-3406]:MethodDeclaration[2885-3013]"
  }, {
    "left" : "public lessThan(x , y ) : ",
    "right" : "public lessThan(x , y ) : ",
    "info" : "MethodDeclaration[3412-3536]:MethodDeclaration[3019-3143]"
  }, {
    "left" : "public lessEqual(x , y ) : ",
    "right" : "public lessEqual(x , y ) : ",
    "info" : "MethodDeclaration[3542-3666]:MethodDeclaration[3149-3273]"
  }, {
    "left" : "public between(attribute , from , to ) : ",
    "right" : "public between(attribute , from , to ) : ",
    "info" : "MethodDeclaration[3672-3819]:MethodDeclaration[3279-3426]"
  }, {
    "left" : "public in(attribute , ) : ",
    "right" : "public in(attribute , ) : ",
    "info" : "MethodDeclaration[3825-3950]:MethodDeclaration[3432-3557]"
  } ],
  "mappings" : [ {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1645-1652]:Block[1567-1574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1712-1766]:Block[1634-1688]"
  }, {
    "left" : "return new InstanceOfPredicate(klass);",
    "right" : "return new InstanceOfPredicate(klass);",
    "info" : "ReturnStatement[1722-1760]:ReturnStatement[1644-1682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2140-2192]:Block[1747-1799]"
  }, {
    "left" : "return new AndPredicate(predicates);",
    "right" : "return new AndPredicate(predicates);",
    "info" : "ReturnStatement[2150-2186]:ReturnStatement[1757-1793]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2247-2298]:Block[1854-1905]"
  }, {
    "left" : "return new NotPredicate(predicate);",
    "right" : "return new NotPredicate(predicate);",
    "info" : "ReturnStatement[2257-2292]:ReturnStatement[1864-1899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2439-2490]:Block[2046-2097]"
  }, {
    "left" : "return new OrPredicate(predicates);",
    "right" : "return new OrPredicate(predicates);",
    "info" : "ReturnStatement[2449-2484]:ReturnStatement[2056-2091]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2561-2620]:Block[2168-2227]"
  }, {
    "left" : "return new NotEqualPredicate(attribute, y);",
    "right" : "return new NotEqualPredicate(attribute, y);",
    "info" : "ReturnStatement[2571-2614]:ReturnStatement[2178-2221]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2688-2744]:Block[2295-2351]"
  }, {
    "left" : "return new EqualPredicate(attribute, y);",
    "right" : "return new EqualPredicate(attribute, y);",
    "info" : "ReturnStatement[2698-2738]:ReturnStatement[2305-2345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2813-2874]:Block[2420-2481]"
  }, {
    "left" : "return new LikePredicate(attribute, pattern);",
    "right" : "return new LikePredicate(attribute, pattern);",
    "info" : "ReturnStatement[2823-2868]:ReturnStatement[2430-2475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2944-3006]:Block[2551-2613]"
  }, {
    "left" : "return new ILikePredicate(attribute, pattern);",
    "right" : "return new ILikePredicate(attribute, pattern);",
    "info" : "ReturnStatement[2954-3000]:ReturnStatement[2561-2607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3076-3138]:Block[2683-2745]"
  }, {
    "left" : "return new RegexPredicate(attribute, pattern);",
    "right" : "return new RegexPredicate(attribute, pattern);",
    "info" : "ReturnStatement[3086-3132]:ReturnStatement[2693-2739]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3204-3272]:Block[2811-2879]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, false, false);",
    "right" : "return new GreaterLessPredicate(x, y, false, false);",
    "info" : "ReturnStatement[3214-3266]:ReturnStatement[2821-2873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3339-3406]:Block[2946-3013]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, true, false);",
    "right" : "return new GreaterLessPredicate(x, y, true, false);",
    "info" : "ReturnStatement[3349-3400]:ReturnStatement[2956-3007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3469-3536]:Block[3076-3143]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, false, true);",
    "right" : "return new GreaterLessPredicate(x, y, false, true);",
    "info" : "ReturnStatement[3479-3530]:ReturnStatement[3086-3137]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3600-3666]:Block[3207-3273]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, true, true);",
    "right" : "return new GreaterLessPredicate(x, y, true, true);",
    "info" : "ReturnStatement[3610-3660]:ReturnStatement[3217-3267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3754-3819]:Block[3361-3426]"
  }, {
    "left" : "return new BetweenPredicate(attribute, from, to);",
    "right" : "return new BetweenPredicate(attribute, from, to);",
    "info" : "ReturnStatement[3764-3813]:ReturnStatement[3371-3420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3892-3950]:Block[3499-3557]"
  }, {
    "left" : "return new InPredicate(attribute, values);",
    "right" : "return new InPredicate(attribute, values);",
    "info" : "ReturnStatement[3902-3944]:ReturnStatement[3509-3551]"
  } ]
}