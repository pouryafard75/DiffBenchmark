{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new NameBasedCandidateFilter(new FinalMockCandidateFilter()));",
      "right" : "private final MockCandidateFilter mockCandidateFilter = new TypeBasedCandidateFilter(new NameBasedCandidateFilter(new FinalMockCandidateFilter()));",
      "info" : "FieldDeclaration[2440-2587]:FieldDeclaration[2440-2587]"
    }, {
      "left" : "private final ListUtil.Filter<Field> notFinalOrStatic = new ListUtil.Filter<Field>() {\n        public boolean isOut(Field object) {\n            return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());\n        }\n    };",
      "right" : "private final ListUtil.Filter<Field> notFinalOrStatic = new ListUtil.Filter<Field>() {\n        public boolean isOut(Field object) {\n            return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());\n        }\n    };",
      "info" : "FieldDeclaration[2593-2845]:FieldDeclaration[2593-2845]"
    }, {
      "left" : "public boolean isOut(Field object)",
      "right" : "public boolean isOut(Field object)",
      "info" : "MethodDeclaration[2688-2838]:MethodDeclaration[2688-2838]"
    }, {
      "left" : "public boolean processInjection(Field injectMocksField, Object injectMocksFieldOwner, Set<Object> mockCandidates)",
      "right" : "public boolean processInjection(Field injectMocksField, Object injectMocksFieldOwner, Set<Object> mockCandidates)",
      "info" : "MethodDeclaration[2852-3656]:MethodDeclaration[2852-3656]"
    }, {
      "left" : "private FieldInitializationReport initializeInjectMocksField(Field field, Object fieldOwner)",
      "right" : "private FieldInitializationReport initializeInjectMocksField(Field field, Object fieldOwner)",
      "info" : "MethodDeclaration[3662-4304]:MethodDeclaration[3662-4304]"
    }, {
      "left" : "private boolean injectMockCandidates(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object instance)",
      "right" : "private boolean injectMockCandidates(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object instance)",
      "info" : "MethodDeclaration[4311-4868]:MethodDeclaration[4311-4868]"
    }, {
      "left" : "private List<Field> orderedInstanceFieldsFrom(Class<?> awaitingInjectionClazz)",
      "right" : "private List<Field> orderedInstanceFieldsFrom(Class<?> awaitingInjectionClazz)",
      "info" : "MethodDeclaration[5463-5786]:MethodDeclaration[5486-5809]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2723-2838]:Block[2723-2838]"
    }, {
      "left" : "return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());",
      "right" : "return Modifier.isFinal(object.getModifiers()) || Modifier.isStatic(object.getModifiers());",
      "info" : "ReturnStatement[2737-2828]:ReturnStatement[2737-2828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2966-3656]:Block[2966-3656]"
    }, {
      "left" : "FieldInitializationReport report = initializeInjectMocksField(injectMocksField, injectMocksFieldOwner);",
      "right" : "FieldInitializationReport report = initializeInjectMocksField(injectMocksField, injectMocksFieldOwner);",
      "info" : "VariableDeclarationStatement[3056-3159]:VariableDeclarationStatement[3056-3159]"
    }, {
      "left" : "boolean injectionOccurred = false;",
      "right" : "boolean injectionOccurred = false;",
      "info" : "VariableDeclarationStatement[3218-3252]:VariableDeclarationStatement[3218-3252]"
    }, {
      "left" : "Class<?> fieldClass = report.fieldClass();",
      "right" : "Class<?> fieldClass = report.fieldClass();",
      "info" : "VariableDeclarationStatement[3261-3303]:VariableDeclarationStatement[3261-3303]"
    }, {
      "left" : "Object fieldInstanceNeedingInjection = report.fieldInstance();",
      "right" : "Object fieldInstanceNeedingInjection = report.fieldInstance();",
      "info" : "VariableDeclarationStatement[3312-3374]:VariableDeclarationStatement[3312-3374]"
    }, {
      "left" : "while (fieldClass != Object.class)",
      "right" : "while (fieldClass != Object.class)",
      "info" : "WhileStatement[3383-3616]:WhileStatement[3383-3616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3418-3616]:Block[3418-3616]"
    }, {
      "left" : "injectionOccurred |= injectMockCandidates(fieldClass, newMockSafeHashSet(mockCandidates), fieldInstanceNeedingInjection);",
      "right" : "injectionOccurred |= injectMockCandidates(fieldClass, newMockSafeHashSet(mockCandidates), fieldInstanceNeedingInjection);",
      "info" : "ExpressionStatement[3432-3553]:ExpressionStatement[3432-3553]"
    }, {
      "left" : "fieldClass = fieldClass.getSuperclass();",
      "right" : "fieldClass = fieldClass.getSuperclass();",
      "info" : "ExpressionStatement[3566-3606]:ExpressionStatement[3566-3606]"
    }, {
      "left" : "return injectionOccurred;",
      "right" : "return injectionOccurred;",
      "info" : "ReturnStatement[3625-3650]:ReturnStatement[3625-3650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3755-4304]:Block[3755-4304]"
    }, {
      "left" : "FieldInitializationReport report = null;",
      "right" : "FieldInitializationReport report = null;",
      "info" : "VariableDeclarationStatement[3765-3805]:VariableDeclarationStatement[3765-3805]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3814-4261]:TryStatement[3814-4261]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3818-3904]:Block[3818-3904]"
    }, {
      "left" : "report = new FieldInitializer(fieldOwner, field).initialize();",
      "right" : "report = new FieldInitializer(fieldOwner, field).initialize();",
      "info" : "ExpressionStatement[3832-3894]:ExpressionStatement[3832-3894]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3932-4261]:Block[3932-4261]"
    }, {
      "left" : "if(e.getCause() instanceof InvocationTargetException)",
      "right" : "if(e.getCause() instanceof InvocationTargetException)",
      "info" : "IfStatement[3946-4162]:IfStatement[3946-4162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4000-4162]:Block[4000-4162]"
    }, {
      "left" : "Throwable realCause = e.getCause().getCause();",
      "right" : "Throwable realCause = e.getCause().getCause();",
      "info" : "VariableDeclarationStatement[4018-4064]:VariableDeclarationStatement[4018-4064]"
    }, {
      "left" : "new Reporter().fieldInitialisationThrewException(field, realCause);",
      "right" : "new Reporter().fieldInitialisationThrewException(field, realCause);",
      "info" : "ExpressionStatement[4081-4148]:ExpressionStatement[4081-4148]"
    }, {
      "left" : "new Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(), e);",
      "right" : "new Reporter().cannotInitializeForInjectMocksAnnotation(field.getName(), e);",
      "info" : "ExpressionStatement[4175-4251]:ExpressionStatement[4175-4251]"
    }, {
      "left" : "return report;",
      "right" : "return report;",
      "info" : "ReturnStatement[4270-4284]:ReturnStatement[4270-4284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4417-4868]:Block[4417-4868]"
    }, {
      "left" : "boolean injectionOccurred = false;",
      "right" : "boolean injectionOccurred = false;",
      "info" : "VariableDeclarationStatement[4427-4461]:VariableDeclarationStatement[4427-4461]"
    }, {
      "left" : "List<Field> orderedInstanceFields = orderedInstanceFieldsFrom(awaitingInjectionClazz);",
      "right" : "List<Field> orderedInstanceFields = orderedInstanceFieldsFrom(awaitingInjectionClazz);",
      "info" : "VariableDeclarationStatement[4470-4556]:VariableDeclarationStatement[4470-4556]"
    }, {
      "left" : "injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",
      "right" : "injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",
      "info" : "ExpressionStatement[4583-4692]:ExpressionStatement[4583-4692]"
    }, {
      "left" : "injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",
      "right" : "injectionOccurred |= injectMockCandidatesOnFields(mocks, instance, injectionOccurred, orderedInstanceFields);",
      "info" : "ExpressionStatement[4719-4828]:ExpressionStatement[4719-4828]"
    }, {
      "left" : "return injectionOccurred;",
      "right" : "return injectionOccurred;",
      "info" : "ReturnStatement[4837-4862]:ReturnStatement[4837-4862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5542-5786]:Block[5565-5809]"
    }, {
      "left" : "List<Field> declaredFields = Arrays.asList(awaitingInjectionClazz.getDeclaredFields());",
      "right" : "List<Field> declaredFields = Arrays.asList(awaitingInjectionClazz.getDeclaredFields());",
      "info" : "VariableDeclarationStatement[5552-5639]:VariableDeclarationStatement[5575-5662]"
    }, {
      "left" : "declaredFields = ListUtil.filter(declaredFields, notFinalOrStatic);",
      "right" : "declaredFields = ListUtil.filter(declaredFields, notFinalOrStatic);",
      "info" : "ExpressionStatement[5648-5715]:ExpressionStatement[5671-5738]"
    }, {
      "left" : "return new SuperTypesLastSorter().sort(declaredFields);",
      "right" : "return new SuperTypesLastSorter().sort(declaredFields);",
      "info" : "ReturnStatement[5725-5780]:ReturnStatement[5748-5803]"
    } ]
  },
  "interFileMappings" : { }
}