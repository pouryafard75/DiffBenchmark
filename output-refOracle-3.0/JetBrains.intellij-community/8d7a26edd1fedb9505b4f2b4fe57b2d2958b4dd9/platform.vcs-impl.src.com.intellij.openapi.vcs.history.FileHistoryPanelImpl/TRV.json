{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final Logger LOG = Logger.getInstance(\"#com.intellij.cvsSupport2.ui.FileHistoryDialog\");",
      "right" : "private static final Logger LOG = Logger.getInstance(\"#com.intellij.cvsSupport2.ui.FileHistoryDialog\");",
      "info" : "FieldDeclaration[4231-4334]:FieldDeclaration[4231-4334]"
    }, {
      "left" : "@NotNull private final Project myProject;",
      "right" : "@NotNull private final Project myProject;",
      "info" : "FieldDeclaration[4338-4379]:FieldDeclaration[4338-4379]"
    }, {
      "left" : "private final JEditorPane myComments;",
      "right" : "private final JEditorPane myComments;",
      "info" : "FieldDeclaration[4382-4419]:FieldDeclaration[4382-4419]"
    }, {
      "left" : "private JComponent myAdditionalDetails;",
      "right" : "private JComponent myAdditionalDetails;",
      "info" : "FieldDeclaration[4422-4461]:FieldDeclaration[4422-4461]"
    }, {
      "left" : "private Consumer<VcsFileRevision> myListener;",
      "right" : "private Consumer<VcsFileRevision> myListener;",
      "info" : "FieldDeclaration[4464-4509]:FieldDeclaration[4464-4509]"
    }, {
      "left" : "private String myOriginalComment = \"\";",
      "right" : "private String myOriginalComment = \"\";",
      "info" : "FieldDeclaration[4512-4550]:FieldDeclaration[4512-4550]"
    }, {
      "left" : "private final DefaultActionGroup myPopupActions;",
      "right" : "private final DefaultActionGroup myPopupActions;",
      "info" : "FieldDeclaration[4553-4601]:FieldDeclaration[4553-4601]"
    }, {
      "left" : "private final AbstractVcs myVcs;",
      "right" : "private final AbstractVcs myVcs;",
      "info" : "FieldDeclaration[4605-4637]:FieldDeclaration[4605-4637]"
    }, {
      "left" : "private final VcsHistoryProvider myProvider;",
      "right" : "private final VcsHistoryProvider myProvider;",
      "info" : "FieldDeclaration[4640-4684]:FieldDeclaration[4640-4684]"
    }, {
      "left" : "private final AnnotationProvider myAnnotationProvider;",
      "right" : "private final AnnotationProvider myAnnotationProvider;",
      "info" : "FieldDeclaration[4687-4741]:FieldDeclaration[4687-4741]"
    }, {
      "left" : "private VcsHistorySession myHistorySession;",
      "right" : "private VcsHistorySession myHistorySession;",
      "info" : "FieldDeclaration[4744-4787]:FieldDeclaration[4744-4787]"
    }, {
      "left" : "@NotNull private final FilePath myFilePath;",
      "right" : "@NotNull private final FilePath myFilePath;",
      "info" : "FieldDeclaration[4790-4833]:FieldDeclaration[4790-4833]"
    }, {
      "left" : "@NotNull private final FileHistoryRefresherI myRefresherI;",
      "right" : "@NotNull private final FileHistoryRefresherI myRefresherI;",
      "info" : "FieldDeclaration[4836-4894]:FieldDeclaration[4836-4894]"
    }, {
      "left" : "private VcsFileRevision myBottomRevisionForShowDiff;",
      "right" : "private VcsFileRevision myBottomRevisionForShowDiff;",
      "info" : "FieldDeclaration[4897-4949]:FieldDeclaration[4897-4949]"
    }, {
      "left" : "private final DualView myDualView;",
      "right" : "private final DualView myDualView;",
      "info" : "FieldDeclaration[4952-4986]:FieldDeclaration[4952-4986]"
    }, {
      "left" : "@NotNull private final DiffFromHistoryHandler myDiffHandler;",
      "right" : "@NotNull private final DiffFromHistoryHandler myDiffHandler;",
      "info" : "FieldDeclaration[4990-5050]:FieldDeclaration[4990-5050]"
    }, {
      "left" : "private final Alarm myUpdateAlarm;",
      "right" : "private final Alarm myUpdateAlarm;",
      "info" : "FieldDeclaration[5054-5088]:FieldDeclaration[5054-5088]"
    }, {
      "left" : "private volatile boolean myInRefresh;",
      "right" : "private volatile boolean myInRefresh;",
      "info" : "FieldDeclaration[5092-5129]:FieldDeclaration[5092-5129]"
    }, {
      "left" : "private List<Object> myTargetSelection;",
      "right" : "private List<Object> myTargetSelection;",
      "info" : "FieldDeclaration[5132-5171]:FieldDeclaration[5132-5171]"
    }, {
      "left" : "private final AsynchConsumer<VcsHistorySession> myHistoryPanelRefresh;",
      "right" : "private final AsynchConsumer<VcsHistorySession> myHistoryPanelRefresh;",
      "info" : "FieldDeclaration[5174-5244]:FieldDeclaration[5174-5244]"
    }, {
      "left" : "private static final String COMMIT_MESSAGE_TITLE = VcsBundle.message(\"label.selected.revision.commit.message\");",
      "right" : "private static final String COMMIT_MESSAGE_TITLE = VcsBundle.message(\"label.selected.revision.commit.message\");",
      "info" : "FieldDeclaration[5248-5359]:FieldDeclaration[5248-5359]"
    }, {
      "left" : "@NonNls private static final String VCS_HISTORY_ACTIONS_GROUP = \"VcsHistoryActionsGroup\";",
      "right" : "@NonNls private static final String VCS_HISTORY_ACTIONS_GROUP = \"VcsHistoryActionsGroup\";",
      "info" : "FieldDeclaration[5362-5451]:FieldDeclaration[5362-5451]"
    }, {
      "left" : "private final Map<VcsRevisionNumber, Integer> myRevisionsOrder;",
      "right" : "private final Map<VcsRevisionNumber, Integer> myRevisionsOrder;",
      "info" : "FieldDeclaration[5455-5518]:FieldDeclaration[5455-5518]"
    }, {
      "left" : "private boolean myIsStaticAndEmbedded;",
      "right" : "private boolean myIsStaticAndEmbedded;",
      "info" : "FieldDeclaration[5521-5559]:FieldDeclaration[5521-5559]"
    }, {
      "left" : "private final Splitter myDetailsSplitter = new Splitter(false, 0.5f);",
      "right" : "private final Splitter myDetailsSplitter = new Splitter(false, 0.5f);",
      "info" : "FieldDeclaration[5562-5631]:FieldDeclaration[5562-5631]"
    }, {
      "left" : "private final Comparator<VcsFileRevision> myRevisionsInOrderComparator = new Comparator<VcsFileRevision>() {\n    @Override\n    public int compare(VcsFileRevision o1, VcsFileRevision o2) {\n      // descending\n      return Comparing.compare(myRevisionsOrder.get(o2.getRevisionNumber()), myRevisionsOrder.get(o1.getRevisionNumber()));\n    }\n  };",
      "right" : "private final Comparator<VcsFileRevision> myRevisionsInOrderComparator = new Comparator<VcsFileRevision>() {\n    @Override\n    public int compare(VcsFileRevision o1, VcsFileRevision o2) {\n      // descending\n      return Comparing.compare(myRevisionsOrder.get(o2.getRevisionNumber()), myRevisionsOrder.get(o1.getRevisionNumber()));\n    }\n  };",
      "info" : "FieldDeclaration[5635-5977]:FieldDeclaration[5635-5977]"
    }, {
      "left" : "public int compare(VcsFileRevision o1, VcsFileRevision o2)",
      "right" : "public int compare(VcsFileRevision o1, VcsFileRevision o2)",
      "info" : "MethodDeclaration[5748-5972]:MethodDeclaration[5748-5972]"
    }, {
      "left" : "private final DualViewColumnInfo REVISION =\n    new VcsColumnInfo<VcsRevisionNumber>(VcsBundle.message(\"column.name.revision.version\")) {\n      protected VcsRevisionNumber getDataOf(VcsFileRevision object) {\n        return object.getRevisionNumber();\n      }\n\n      @Override\n      public Comparator<VcsFileRevision> getComparator() {\n        return myRevisionsInOrderComparator;\n      }\n\n      public String valueOf(VcsFileRevision object) {\n        final VcsRevisionNumber revisionNumber = object.getRevisionNumber();\n        return revisionNumber instanceof ShortVcsRevisionNumber ? ((ShortVcsRevisionNumber)revisionNumber).toShortString() : revisionNumber.asString();\n      }\n\n      @Override\n      public String getPreferredStringValue() {\n        return \"123.4567\";\n      }\n\n    };",
      "right" : "private final DualViewColumnInfo REVISION =\n    new VcsColumnInfo<VcsRevisionNumber>(VcsBundle.message(\"column.name.revision.version\")) {\n      protected VcsRevisionNumber getDataOf(VcsFileRevision object) {\n        return object.getRevisionNumber();\n      }\n\n      @Override\n      public Comparator<VcsFileRevision> getComparator() {\n        return myRevisionsInOrderComparator;\n      }\n\n      public String valueOf(VcsFileRevision object) {\n        final VcsRevisionNumber revisionNumber = object.getRevisionNumber();\n        return revisionNumber instanceof ShortVcsRevisionNumber ? ((ShortVcsRevisionNumber)revisionNumber).toShortString() : revisionNumber.asString();\n      }\n\n      @Override\n      public String getPreferredStringValue() {\n        return \"123.4567\";\n      }\n\n    };",
      "info" : "FieldDeclaration[5981-6768]:FieldDeclaration[5981-6768]"
    }, {
      "left" : "protected VcsRevisionNumber getDataOf(VcsFileRevision object)",
      "right" : "protected VcsRevisionNumber getDataOf(VcsFileRevision object)",
      "info" : "MethodDeclaration[6125-6239]:MethodDeclaration[6125-6239]"
    }, {
      "left" : "public Comparator<VcsFileRevision> getComparator()",
      "right" : "public Comparator<VcsFileRevision> getComparator()",
      "info" : "MethodDeclaration[6247-6368]:MethodDeclaration[6247-6368]"
    }, {
      "left" : "public String valueOf(VcsFileRevision object)",
      "right" : "public String valueOf(VcsFileRevision object)",
      "info" : "MethodDeclaration[6376-6660]:MethodDeclaration[6376-6660]"
    }, {
      "left" : "public String getPreferredStringValue()",
      "right" : "public String getPreferredStringValue()",
      "info" : "MethodDeclaration[6668-6760]:MethodDeclaration[6668-6760]"
    }, {
      "left" : "private final DualViewColumnInfo DATE = new VcsColumnInfo<String>(VcsBundle.message(\"column.name.revision.date\")) {\n    protected String getDataOf(VcsFileRevision object) {\n      Date date = object.getRevisionDate();\n      if (date == null) return \"\";\n      return DateFormatUtil.formatPrettyDateTime(date);\n    }\n\n    public int compare(VcsFileRevision o1, VcsFileRevision o2) {\n      return Comparing.compare(o1.getRevisionDate(), o2.getRevisionDate());\n    }\n\n    @Override\n    public String getPreferredStringValue() {\n      return DateFormatUtil.formatPrettyDateTime(Clock.getTime());\n    }\n\n  };",
      "right" : "private final DualViewColumnInfo DATE = new VcsColumnInfo<String>(VcsBundle.message(\"column.name.revision.date\")) {\n    protected String getDataOf(VcsFileRevision object) {\n      Date date = object.getRevisionDate();\n      if (date == null) return \"\";\n      return DateFormatUtil.formatPrettyDateTime(date);\n    }\n\n    public int compare(VcsFileRevision o1, VcsFileRevision o2) {\n      return Comparing.compare(o1.getRevisionDate(), o2.getRevisionDate());\n    }\n\n    @Override\n    public String getPreferredStringValue() {\n      return DateFormatUtil.formatPrettyDateTime(Clock.getTime());\n    }\n\n  };",
      "info" : "FieldDeclaration[6772-7373]:FieldDeclaration[6772-7373]"
    }, {
      "left" : "protected String getDataOf(VcsFileRevision object)",
      "right" : "protected String getDataOf(VcsFileRevision object)",
      "info" : "MethodDeclaration[6892-7085]:MethodDeclaration[6892-7085]"
    }, {
      "left" : "public int compare(VcsFileRevision o1, VcsFileRevision o2)",
      "right" : "public int compare(VcsFileRevision o1, VcsFileRevision o2)",
      "info" : "MethodDeclaration[7091-7233]:MethodDeclaration[7091-7233]"
    }, {
      "left" : "public String getPreferredStringValue()",
      "right" : "public String getPreferredStringValue()",
      "info" : "MethodDeclaration[7239-7367]:MethodDeclaration[7239-7367]"
    }, {
      "left" : "private boolean myColumnSizesSet;",
      "right" : "private boolean myColumnSizesSet;",
      "info" : "FieldDeclaration[7376-7409]:FieldDeclaration[7376-7409]"
    }, {
      "left" : "public void scheduleRefresh(final boolean canUseLastRevision)",
      "right" : "public void scheduleRefresh(final boolean canUseLastRevision)",
      "info" : "MethodDeclaration[7413-7648]:MethodDeclaration[7413-7648]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[7552-7636]:MethodDeclaration[7552-7636]"
    }, {
      "left" : "AuthorCellRenderer",
      "right" : "AuthorCellRenderer",
      "info" : "TypeDeclaration[7652-8510]:TypeDeclaration[7652-8510]"
    }, {
      "left" : "private String myTooltipText;",
      "right" : "private String myTooltipText;",
      "info" : "FieldDeclaration[7731-7760]:FieldDeclaration[7731-7760]"
    }, {
      "left" : "public void setTooltipText(final String text)",
      "right" : "public void setTooltipText(final String text)",
      "info" : "MethodDeclaration[7766-7847]:MethodDeclaration[7766-7847]"
    }, {
      "left" : "public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)",
      "right" : "public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)",
      "info" : "MethodDeclaration[7853-8506]:MethodDeclaration[7853-8506]"
    }, {
      "left" : "private static final TableCellRenderer AUTHOR_RENDERER = new AuthorCellRenderer();",
      "right" : "private static final TableCellRenderer AUTHOR_RENDERER = new AuthorCellRenderer();",
      "info" : "FieldDeclaration[8514-8596]:FieldDeclaration[8514-8596]"
    }, {
      "left" : "private final DualViewColumnInfo AUTHOR = new VcsColumnInfo<String>(VcsBundle.message(\"column.name.revision.list.author\")) {\n    protected String getDataOf(VcsFileRevision object) {\n      VcsFileRevision rev = object;\n      if (object instanceof TreeNodeOnVcsRevision) {\n        rev = ((TreeNodeOnVcsRevision)object).getRevision();\n      }\n\n      if (rev instanceof VcsFileRevisionEx) {\n        if (!rev.getAuthor().equals(((VcsFileRevisionEx)rev).getCommitterName())) return object.getAuthor() + \"*\";\n      }\n\n      return object.getAuthor();\n    }\n\n    @Override\n    public TableCellRenderer getRenderer(VcsFileRevision revision) {\n      return AUTHOR_RENDERER;\n    }\n\n    @Override\n    public TableCellRenderer getCustomizedRenderer(VcsFileRevision value, TableCellRenderer renderer) {\n      if (renderer instanceof AuthorCellRenderer) {\n        VcsFileRevision revision = value;\n        if (value instanceof TreeNodeOnVcsRevision) {\n          revision = ((TreeNodeOnVcsRevision)value).getRevision();\n        }\n\n        if (revision instanceof VcsFileRevisionEx) {\n          final VcsFileRevisionEx ex = (VcsFileRevisionEx)revision;\n          final StringBuilder sb = new StringBuilder(ex.getAuthor());\n          if (ex.getAuthorEmail() != null) sb.append(\" &lt;\").append(ex.getAuthorEmail()).append(\"&gt;\");\n          if (ex.getCommitterName() != null && !ex.getAuthor().equals(ex.getCommitterName())) {\n            sb.append(\", via \").append(ex.getCommitterName());\n            if (ex.getCommitterEmail() != null) sb.append(\" &lt;\").append(ex.getCommitterEmail()).append(\"&gt;\");\n          }\n          ((AuthorCellRenderer)renderer).setTooltipText(sb.toString());\n        }\n      }\n\n      return renderer;\n    }\n\n    @Override\n    @NonNls\n    public String getPreferredStringValue() {\n      return \"author_author\";\n    }\n\n };",
      "right" : "private final DualViewColumnInfo AUTHOR = new VcsColumnInfo<String>(VcsBundle.message(\"column.name.revision.list.author\")) {\n    protected String getDataOf(VcsFileRevision object) {\n      VcsFileRevision rev = object;\n      if (object instanceof TreeNodeOnVcsRevision) {\n        rev = ((TreeNodeOnVcsRevision)object).getRevision();\n      }\n\n      if (rev instanceof VcsFileRevisionEx) {\n        if (!rev.getAuthor().equals(((VcsFileRevisionEx)rev).getCommitterName())) return object.getAuthor() + \"*\";\n      }\n\n      return object.getAuthor();\n    }\n\n    @Override\n    public TableCellRenderer getRenderer(VcsFileRevision revision) {\n      return AUTHOR_RENDERER;\n    }\n\n    @Override\n    public TableCellRenderer getCustomizedRenderer(VcsFileRevision value, TableCellRenderer renderer) {\n      if (renderer instanceof AuthorCellRenderer) {\n        VcsFileRevision revision = value;\n        if (value instanceof TreeNodeOnVcsRevision) {\n          revision = ((TreeNodeOnVcsRevision)value).getRevision();\n        }\n\n        if (revision instanceof VcsFileRevisionEx) {\n          final VcsFileRevisionEx ex = (VcsFileRevisionEx)revision;\n          final StringBuilder sb = new StringBuilder(ex.getAuthor());\n          if (ex.getAuthorEmail() != null) sb.append(\" &lt;\").append(ex.getAuthorEmail()).append(\"&gt;\");\n          if (ex.getCommitterName() != null && !ex.getAuthor().equals(ex.getCommitterName())) {\n            sb.append(\", via \").append(ex.getCommitterName());\n            if (ex.getCommitterEmail() != null) sb.append(\" &lt;\").append(ex.getCommitterEmail()).append(\"&gt;\");\n          }\n          ((AuthorCellRenderer)renderer).setTooltipText(sb.toString());\n        }\n      }\n\n      return renderer;\n    }\n\n    @Override\n    @NonNls\n    public String getPreferredStringValue() {\n      return \"author_author\";\n    }\n\n };",
      "info" : "FieldDeclaration[8600-10430]:FieldDeclaration[8600-10430]"
    }, {
      "left" : "protected String getDataOf(VcsFileRevision object)",
      "right" : "protected String getDataOf(VcsFileRevision object)",
      "info" : "MethodDeclaration[8729-9149]:MethodDeclaration[8729-9149]"
    }, {
      "left" : "public TableCellRenderer getRenderer(VcsFileRevision revision)",
      "right" : "public TableCellRenderer getRenderer(VcsFileRevision revision)",
      "info" : "MethodDeclaration[9155-9269]:MethodDeclaration[9155-9269]"
    }, {
      "left" : "public TableCellRenderer getCustomizedRenderer(VcsFileRevision value, TableCellRenderer renderer)",
      "right" : "public TableCellRenderer getCustomizedRenderer(VcsFileRevision value, TableCellRenderer renderer)",
      "info" : "MethodDeclaration[9275-10316]:MethodDeclaration[9275-10316]"
    }, {
      "left" : "public String getPreferredStringValue()",
      "right" : "public String getPreferredStringValue()",
      "info" : "MethodDeclaration[10322-10425]:MethodDeclaration[10322-10425]"
    }, {
      "left" : "private Splitter mySplitter;",
      "right" : "private Splitter mySplitter;",
      "info" : "FieldDeclaration[10434-10462]:FieldDeclaration[10434-10462]"
    }, {
      "left" : "MessageRenderer",
      "right" : "MessageRenderer",
      "info" : "TypeDeclaration[10467-11026]:TypeDeclaration[10467-11026]"
    }, {
      "left" : "private final IssueLinkRenderer myIssueLinkRenderer;",
      "right" : "private final IssueLinkRenderer myIssueLinkRenderer;",
      "info" : "FieldDeclaration[10543-10595]:FieldDeclaration[10543-10595]"
    }, {
      "left" : "public MessageRenderer(Project project)",
      "right" : "public MessageRenderer(Project project)",
      "info" : "MethodDeclaration[10601-10714]:MethodDeclaration[10601-10714]"
    }, {
      "left" : "protected void customizeCellRenderer(JTable table, Object value, boolean selected, boolean hasFocus, int row, int column)",
      "right" : "protected void customizeCellRenderer(JTable table, Object value, boolean selected, boolean hasFocus, int row, int column)",
      "info" : "MethodDeclaration[10720-11020]:MethodDeclaration[10720-11020]"
    }, {
      "left" : "MessageColumnInfo",
      "right" : "MessageColumnInfo",
      "info" : "TypeDeclaration[11030-12090]:TypeDeclaration[11030-12090]"
    }, {
      "left" : "private final MessageRenderer myRenderer;",
      "right" : "private final MessageRenderer myRenderer;",
      "info" : "FieldDeclaration[11105-11146]:FieldDeclaration[11105-11146]"
    }, {
      "left" : "public MessageColumnInfo(Project project)",
      "right" : "public MessageColumnInfo(Project project)",
      "info" : "MethodDeclaration[11152-11306]:MethodDeclaration[11152-11306]"
    }, {
      "left" : "protected String getDataOf(VcsFileRevision object)",
      "right" : "protected String getDataOf(VcsFileRevision object)",
      "info" : "MethodDeclaration[11312-11875]:MethodDeclaration[11312-11875]"
    }, {
      "left" : "public String getPreferredStringValue()",
      "right" : "public String getPreferredStringValue()",
      "info" : "MethodDeclaration[11881-11990]:MethodDeclaration[11881-11990]"
    }, {
      "left" : "public TableCellRenderer getRenderer(VcsFileRevision p0)",
      "right" : "public TableCellRenderer getRenderer(VcsFileRevision p0)",
      "info" : "MethodDeclaration[11996-12085]:MethodDeclaration[11996-12085]"
    }, {
      "left" : "private static int getSuitableIndex(int index10, int index13)",
      "right" : "private static int getSuitableIndex(int index10, int index13)",
      "info" : "MethodDeclaration[12094-12326]:MethodDeclaration[12094-12326]"
    }, {
      "left" : "private final Map<VcsFileRevision, VirtualFile> myRevisionToVirtualFile = new HashMap<VcsFileRevision, VirtualFile>();",
      "right" : "private final Map<VcsFileRevision, VirtualFile> myRevisionToVirtualFile = new HashMap<VcsFileRevision, VirtualFile>();",
      "info" : "FieldDeclaration[12331-12449]:FieldDeclaration[12331-12449]"
    }, {
      "left" : "public FileHistoryPanelImpl(AbstractVcs vcs,\n                              FilePath filePath, VcsHistorySession session,\n                              VcsHistoryProvider provider,\n                              ContentManager contentManager, final FileHistoryRefresherI refresherI)",
      "right" : "public FileHistoryPanelImpl(AbstractVcs vcs,\n                              FilePath filePath, VcsHistorySession session,\n                              VcsHistoryProvider provider,\n                              ContentManager contentManager, final FileHistoryRefresherI refresherI)",
      "info" : "MethodDeclaration[12453-12818]:MethodDeclaration[12453-12818]"
    }, {
      "left" : "public FileHistoryPanelImpl(AbstractVcs vcs,\n                              @NotNull FilePath filePath,\n                              VcsHistorySession session,\n                              VcsHistoryProvider provider,\n                              ContentManager contentManager,\n                              @NotNull FileHistoryRefresherI refresherI,\n                              final boolean isStaticEmbedded)",
      "right" : "public FileHistoryPanelImpl(AbstractVcs vcs,\n                              @NotNull FilePath filePath,\n                              VcsHistorySession session,\n                              VcsHistoryProvider provider,\n                              ContentManager contentManager,\n                              @NotNull FileHistoryRefresherI refresherI,\n                              final boolean isStaticEmbedded)",
      "info" : "MethodDeclaration[12822-16922]:MethodDeclaration[12822-16922]"
    }, {
      "left" : "public void finished()",
      "right" : "public void finished()",
      "info" : "MethodDeclaration[15680-16193]:MethodDeclaration[15680-16193]"
    }, {
      "left" : "public void consume(VcsHistorySession vcsHistorySession)",
      "right" : "public void consume(VcsHistorySession vcsHistorySession)",
      "info" : "MethodDeclaration[16200-16328]:MethodDeclaration[16200-16328]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[16417-16871]:MethodDeclaration[16417-16871]"
    }, {
      "left" : "private void replaceTransferable()",
      "right" : "private void replaceTransferable()",
      "info" : "MethodDeclaration[16926-18875]:MethodDeclaration[16926-18875]"
    }, {
      "left" : "public void exportAsDrag(final JComponent comp, final InputEvent e, final int action)",
      "right" : "public void exportAsDrag(final JComponent comp, final InputEvent e, final int action)",
      "info" : "MethodDeclaration[17124-17298]:MethodDeclaration[17124-17298]"
    }, {
      "left" : "public void exportToClipboard(final JComponent comp, final Clipboard clip, final int action) throws IllegalStateException",
      "right" : "public void exportToClipboard(final JComponent comp, final Clipboard clip, final int action) throws IllegalStateException",
      "info" : "MethodDeclaration[17306-18163]:MethodDeclaration[17306-18163]"
    }, {
      "left" : "public boolean importData(final JComponent comp, final Transferable t)",
      "right" : "public boolean importData(final JComponent comp, final Transferable t)",
      "info" : "MethodDeclaration[18171-18327]:MethodDeclaration[18171-18327]"
    }, {
      "left" : "public boolean canImport(final JComponent comp, final DataFlavor[] transferFlavors)",
      "right" : "public boolean canImport(final JComponent comp, final DataFlavor[] transferFlavors)",
      "info" : "MethodDeclaration[18335-18517]:MethodDeclaration[18335-18517]"
    }, {
      "left" : "public int getSourceActions(final JComponent c)",
      "right" : "public int getSourceActions(final JComponent c)",
      "info" : "MethodDeclaration[18525-18658]:MethodDeclaration[18525-18658]"
    }, {
      "left" : "public Icon getVisualRepresentation(final Transferable t)",
      "right" : "public Icon getVisualRepresentation(final Transferable t)",
      "info" : "MethodDeclaration[18666-18816]:MethodDeclaration[18666-18816]"
    }, {
      "left" : "private DualViewColumnInfo[] createColumnList(Project project, VcsHistoryProvider provider, final VcsHistorySession session)",
      "right" : "private DualViewColumnInfo[] createColumnList(Project project, VcsHistoryProvider provider, final VcsHistorySession session)",
      "info" : "MethodDeclaration[18879-19662]:MethodDeclaration[18879-19662]"
    }, {
      "left" : "private Collection<DualViewColumnInfo> wrapAdditionalColumns(ColumnInfo[] additionalColumns)",
      "right" : "private Collection<DualViewColumnInfo> wrapAdditionalColumns(ColumnInfo[] additionalColumns)",
      "info" : "MethodDeclaration[19666-20035]:MethodDeclaration[19666-20035]"
    }, {
      "left" : "private static List<TreeItem<VcsFileRevision>> wrapWithTreeElements(List<VcsFileRevision> revisions)",
      "right" : "private static List<TreeItem<VcsFileRevision>> wrapWithTreeElements(List<VcsFileRevision> revisions)",
      "info" : "MethodDeclaration[20039-20378]:MethodDeclaration[20039-20378]"
    }, {
      "left" : "private void refresh(final VcsHistorySession session)",
      "right" : "private void refresh(final VcsHistorySession session)",
      "info" : "MethodDeclaration[20382-21115]:MethodDeclaration[20382-21115]"
    }, {
      "left" : "private void columnSizesOnce()",
      "right" : "private void columnSizesOnce()",
      "info" : "MethodDeclaration[21119-21274]:MethodDeclaration[21119-21274]"
    }, {
      "left" : "private void adjustEmptyText()",
      "right" : "private void adjustEmptyText()",
      "info" : "MethodDeclaration[21278-21702]:MethodDeclaration[21278-21702]"
    }, {
      "left" : "private void setEmptyText(@NotNull String emptyText)",
      "right" : "private void setEmptyText(@NotNull String emptyText)",
      "info" : "MethodDeclaration[21706-21804]:MethodDeclaration[21706-21804]"
    }, {
      "left" : "protected void addActionsTo(DefaultActionGroup group)",
      "right" : "protected void addActionsTo(DefaultActionGroup group)",
      "info" : "MethodDeclaration[21808-21897]:MethodDeclaration[21808-21897]"
    }, {
      "left" : "private void createDualView()",
      "right" : "private void createDualView()",
      "info" : "MethodDeclaration[21901-23705]:MethodDeclaration[21901-23705]"
    }, {
      "left" : "public void invokePopup(Component comp, int x, int y)",
      "right" : "public void invokePopup(Component comp, int x, int y)",
      "info" : "MethodDeclaration[22040-22295]:MethodDeclaration[22040-22295]"
    }, {
      "left" : "public void invokePopup(Component comp, int x, int y)",
      "right" : "public void invokePopup(Component comp, int x, int y)",
      "info" : "MethodDeclaration[22378-22633]:MethodDeclaration[22378-22633]"
    }, {
      "left" : "public void valueChanged(ListSelectionEvent e)",
      "right" : "public void valueChanged(ListSelectionEvent e)",
      "info" : "MethodDeclaration[22751-22832]:MethodDeclaration[22751-22832]"
    }, {
      "left" : "public VcsHistorySession get()",
      "right" : "public VcsHistorySession get()",
      "info" : "MethodDeclaration[23092-23165]:MethodDeclaration[23092-23165]"
    }, {
      "left" : "private static void makeBold(Component component)",
      "right" : "private static void makeBold(Component component)",
      "info" : "MethodDeclaration[23709-24217]:MethodDeclaration[23709-24217]"
    }, {
      "left" : "private void updateMessage()",
      "right" : "private void updateMessage()",
      "info" : "MethodDeclaration[24221-24900]:MethodDeclaration[24221-24900]"
    }, {
      "left" : "protected JComponent createCenterPanel()",
      "right" : "protected JComponent createCenterPanel()",
      "info" : "MethodDeclaration[24905-26094]:MethodDeclaration[24905-26094]"
    }, {
      "left" : "public void propertyChange(PropertyChangeEvent evt)",
      "right" : "public void propertyChange(PropertyChangeEvent evt)",
      "info" : "MethodDeclaration[25224-25426]:MethodDeclaration[25224-25426]"
    }, {
      "left" : "private void setupDetails()",
      "right" : "private void setupDetails()",
      "info" : "MethodDeclaration[26098-26532]:MethodDeclaration[26098-26532]"
    }, {
      "left" : "private void chooseView()",
      "right" : "private void chooseView()",
      "info" : "MethodDeclaration[26536-26692]:MethodDeclaration[26536-26692]"
    }, {
      "left" : "private boolean showTree()",
      "right" : "private boolean showTree()",
      "info" : "MethodDeclaration[26696-26785]:MethodDeclaration[26696-26785]"
    }, {
      "left" : "private void setSplitterProportionTo(Float newProportion)",
      "right" : "private void setSplitterProportionTo(Float newProportion)",
      "info" : "MethodDeclaration[26789-26938]:MethodDeclaration[26789-26938]"
    }, {
      "left" : "protected float getSplitterProportion()",
      "right" : "protected float getSplitterProportion()",
      "info" : "MethodDeclaration[26942-27051]:MethodDeclaration[26942-27051]"
    }, {
      "left" : "private VcsConfiguration getConfiguration()",
      "right" : "private VcsConfiguration getConfiguration()",
      "info" : "MethodDeclaration[27055-27165]:MethodDeclaration[27055-27165]"
    }, {
      "left" : "private DefaultActionGroup createPopupActions()",
      "right" : "private DefaultActionGroup createPopupActions()",
      "info" : "MethodDeclaration[27169-27289]:MethodDeclaration[27169-27289]"
    }, {
      "left" : "private DefaultActionGroup addToGroup(boolean popup, DefaultActionGroup result)",
      "right" : "private DefaultActionGroup addToGroup(boolean popup, DefaultActionGroup result)",
      "info" : "MethodDeclaration[27293-29195]:MethodDeclaration[27293-29195]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[28647-28701]:MethodDeclaration[28647-28701]"
    }, {
      "left" : "private void refreshImpl(final boolean useLastRevision)",
      "right" : "private void refreshImpl(final boolean useLastRevision)",
      "info" : "MethodDeclaration[29199-29662]:MethodDeclaration[29199-29662]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[29338-29642]:MethodDeclaration[29338-29642]"
    }, {
      "left" : "public AsynchConsumer<VcsHistorySession> getHistoryPanelRefresh()",
      "right" : "public AsynchConsumer<VcsHistorySession> getHistoryPanelRefresh()",
      "info" : "MethodDeclaration[29666-29771]:MethodDeclaration[29666-29771]"
    }, {
      "left" : "private boolean supportsTree()",
      "right" : "private boolean supportsTree()",
      "info" : "MethodDeclaration[29775-29903]:MethodDeclaration[29775-29903]"
    }, {
      "left" : "MyShowAsTreeAction",
      "right" : "MyShowAsTreeAction",
      "info" : "TypeDeclaration[29907-30401]:TypeDeclaration[29907-30401]"
    }, {
      "left" : "public MyShowAsTreeAction()",
      "right" : "public MyShowAsTreeAction()",
      "info" : "MethodDeclaration[29988-30133]:MethodDeclaration[29988-30133]"
    }, {
      "left" : "public boolean isSelected(AnActionEvent e)",
      "right" : "public boolean isSelected(AnActionEvent e)",
      "info" : "MethodDeclaration[30139-30248]:MethodDeclaration[30139-30248]"
    }, {
      "left" : "public void setSelected(AnActionEvent e, boolean state)",
      "right" : "public void setSelected(AnActionEvent e, boolean state)",
      "info" : "MethodDeclaration[30254-30397]:MethodDeclaration[30254-30397]"
    }, {
      "left" : "MyDiffAction",
      "right" : "MyDiffAction",
      "info" : "TypeDeclaration[30405-32570]:TypeDeclaration[30405-32570]"
    }, {
      "left" : "public MyDiffAction()",
      "right" : "public MyDiffAction()",
      "info" : "MethodDeclaration[30477-30660]:MethodDeclaration[30477-30660]"
    }, {
      "left" : "protected void executeAction(AnActionEvent e)",
      "right" : "protected void executeAction(AnActionEvent e)",
      "info" : "MethodDeclaration[30666-31781]:MethodDeclaration[30666-31781]"
    }, {
      "left" : "public void update(final AnActionEvent e)",
      "right" : "public void update(final AnActionEvent e)",
      "info" : "MethodDeclaration[31787-31986]:MethodDeclaration[31787-31986]"
    }, {
      "left" : "public boolean isEnabled()",
      "right" : "public boolean isEnabled()",
      "info" : "MethodDeclaration[31992-32339]:MethodDeclaration[31992-32339]"
    }, {
      "left" : "private boolean isDiffEnabled()",
      "right" : "private boolean isDiffEnabled()",
      "info" : "MethodDeclaration[32345-32566]:MethodDeclaration[32345-32566]"
    }, {
      "left" : "public MyGetVersionAction()",
      "right" : "public MyGetVersionAction()",
      "info" : "MethodDeclaration[32652-32890]:MethodDeclaration[32652-32890]"
    }, {
      "left" : "public boolean isEnabled()",
      "right" : "public boolean isEnabled()",
      "info" : "MethodDeclaration[32896-33115]:MethodDeclaration[32896-33115]"
    }, {
      "left" : "private void refreshFile(VcsFileRevision revision)",
      "right" : "private void refreshFile(VcsFileRevision revision)",
      "info" : "MethodDeclaration[33655-34557]:MethodDeclaration[33695-34597]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[34013-34208]:MethodDeclaration[34053-34248]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[34104-34176]:MethodDeclaration[34144-34216]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[34292-34361]:MethodDeclaration[34332-34401]"
    }, {
      "left" : "private void getVersion(final VcsFileRevision revision)",
      "right" : "private void getVersion(final VcsFileRevision revision)",
      "info" : "MethodDeclaration[34563-37515]:MethodDeclaration[34603-37555]"
    }, {
      "left" : "public void run(@NotNull ProgressIndicator indicator)",
      "right" : "public void run(@NotNull ProgressIndicator indicator)",
      "info" : "MethodDeclaration[34817-37492]:MethodDeclaration[34857-37532]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[35301-35602]:MethodDeclaration[35341-35642]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[35798-36099]:MethodDeclaration[35838-36139]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[36306-37468]:MethodDeclaration[36346-37508]"
    }, {
      "left" : "protected void run() throws Throwable",
      "right" : "protected void run() throws Throwable",
      "info" : "MethodDeclaration[36443-37205]:MethodDeclaration[36483-37245]"
    }, {
      "left" : "private LocalHistoryAction startLocalHistoryAction(final VcsFileRevision revision)",
      "right" : "private LocalHistoryAction startLocalHistoryAction(final VcsFileRevision revision)",
      "info" : "MethodDeclaration[37521-37696]:MethodDeclaration[37561-37736]"
    }, {
      "left" : "private String createGetActionTitle(final VcsFileRevision revision)",
      "right" : "private String createGetActionTitle(final VcsFileRevision revision)",
      "info" : "MethodDeclaration[37702-37906]:MethodDeclaration[37742-37946]"
    }, {
      "left" : "private File getIOFile()",
      "right" : "private File getIOFile()",
      "info" : "MethodDeclaration[37912-37981]:MethodDeclaration[37952-38021]"
    }, {
      "left" : "private void writeContentToIOFile(byte[] revisionContent) throws IOException",
      "right" : "private void writeContentToIOFile(byte[] revisionContent) throws IOException",
      "info" : "MethodDeclaration[38587-38863]:MethodDeclaration[38596-38872]"
    }, {
      "left" : "private void writeContentToDocument(final Document document, byte[] revisionContent) throws IOException",
      "right" : "private void writeContentToDocument(final Document document, byte[] revisionContent) throws IOException",
      "info" : "MethodDeclaration[39007-39506]:MethodDeclaration[38878-39377]"
    }, {
      "left" : "public void run()",
      "right" : "public void run()",
      "info" : "MethodDeclaration[39335-39436]:MethodDeclaration[39206-39307]"
    }, {
      "left" : "public MyAnnotateAction()",
      "right" : "public MyAnnotateAction()",
      "info" : "MethodDeclaration[39608-39864]:MethodDeclaration[39479-39735]"
    }, {
      "left" : "protected AbstractVcs getVcs(@NotNull AnActionEvent e)",
      "right" : "protected AbstractVcs getVcs(@NotNull AnActionEvent e)",
      "info" : "MethodDeclaration[39870-39980]:MethodDeclaration[39741-39851]"
    }, {
      "left" : "protected VcsFileRevision getFileRevision(@NotNull AnActionEvent e)",
      "right" : "protected VcsFileRevision getFileRevision(@NotNull AnActionEvent e)",
      "info" : "MethodDeclaration[40529-40803]:MethodDeclaration[40298-40572]"
    }, {
      "left" : "private Change[] getChanges()",
      "right" : "private Change[] getChanges()",
      "info" : "MethodDeclaration[43174-44167]:MethodDeclaration[42902-43895]"
    }, {
      "left" : "public int compare(final VcsFileRevision o1, final VcsFileRevision o2)",
      "right" : "public int compare(final VcsFileRevision o1, final VcsFileRevision o2)",
      "info" : "MethodDeclaration[43388-43545]:MethodDeclaration[43116-43273]"
    }, {
      "left" : "LoadedContentRevision",
      "right" : "LoadedContentRevision",
      "info" : "TypeDeclaration[44171-45092]:TypeDeclaration[43899-44820]"
    }, {
      "left" : "private final FilePath myFile;",
      "right" : "private final FilePath myFile;",
      "info" : "FieldDeclaration[44247-44277]:FieldDeclaration[43975-44005]"
    }, {
      "left" : "private final VcsFileRevision myRevision;",
      "right" : "private final VcsFileRevision myRevision;",
      "info" : "FieldDeclaration[44282-44323]:FieldDeclaration[44010-44051]"
    }, {
      "left" : "private final Project myProject;",
      "right" : "private final Project myProject;",
      "info" : "FieldDeclaration[44328-44360]:FieldDeclaration[44056-44088]"
    }, {
      "left" : "private LoadedContentRevision(final FilePath file, final VcsFileRevision revision, final Project project)",
      "right" : "private LoadedContentRevision(final FilePath file, final VcsFileRevision revision, final Project project)",
      "info" : "MethodDeclaration[44366-44556]:MethodDeclaration[44094-44284]"
    }, {
      "left" : "public String getContent() throws VcsException",
      "right" : "public String getContent() throws VcsException",
      "info" : "MethodDeclaration[44562-44899]:MethodDeclaration[44290-44627]"
    }, {
      "left" : "public FilePath getFile()",
      "right" : "public FilePath getFile()",
      "info" : "MethodDeclaration[44905-44972]:MethodDeclaration[44633-44700]"
    }, {
      "left" : "public VcsRevisionNumber getRevisionNumber()",
      "right" : "public VcsRevisionNumber getRevisionNumber()",
      "info" : "MethodDeclaration[44978-45088]:MethodDeclaration[44706-44816]"
    }, {
      "left" : "private VirtualFile createVirtualFileForRevision(VcsFileRevision revision)",
      "right" : "private VirtualFile createVirtualFileForRevision(VcsFileRevision revision)",
      "info" : "MethodDeclaration[45096-45727]:MethodDeclaration[44824-45455]"
    }, {
      "left" : "private List<TreeNodeOnVcsRevision> getSelection()",
      "right" : "private List<TreeNodeOnVcsRevision> getSelection()",
      "info" : "MethodDeclaration[45731-45854]:MethodDeclaration[45459-45582]"
    }, {
      "left" : "private VcsFileRevision getFirstSelectedRevision()",
      "right" : "private VcsFileRevision getFirstSelectedRevision()",
      "info" : "MethodDeclaration[45858-46070]:MethodDeclaration[45586-45798]"
    }, {
      "left" : "public VcsFileRevision[] getSelectedRevisions()",
      "right" : "public VcsFileRevision[] getSelectedRevisions()",
      "info" : "MethodDeclaration[46074-46374]:MethodDeclaration[45802-46102]"
    }, {
      "left" : "TreeNodeOnVcsRevision",
      "right" : "TreeNodeOnVcsRevision",
      "info" : "TypeDeclaration[46378-48447]:TypeDeclaration[46106-48175]"
    }, {
      "left" : "private final VcsFileRevision myRevision;",
      "right" : "private final VcsFileRevision myRevision;",
      "info" : "FieldDeclaration[46494-46535]:FieldDeclaration[46222-46263]"
    }, {
      "left" : "public TreeNodeOnVcsRevision(VcsFileRevision revision, List<TreeItem<VcsFileRevision>> roots)",
      "right" : "public TreeNodeOnVcsRevision(VcsFileRevision revision, List<TreeItem<VcsFileRevision>> roots)",
      "info" : "MethodDeclaration[46541-46856]:MethodDeclaration[46269-46584]"
    }, {
      "left" : "public RepositoryLocation getChangedRepositoryPath()",
      "right" : "public RepositoryLocation getChangedRepositoryPath()",
      "info" : "MethodDeclaration[46862-47002]:MethodDeclaration[46590-46730]"
    }, {
      "left" : "public VcsFileRevision getRevision()",
      "right" : "public VcsFileRevision getRevision()",
      "info" : "MethodDeclaration[47008-47077]:MethodDeclaration[46736-46805]"
    }, {
      "left" : "public String getAuthor()",
      "right" : "public String getAuthor()",
      "info" : "MethodDeclaration[47083-47153]:MethodDeclaration[46811-46881]"
    }, {
      "left" : "public String getCommitMessage()",
      "right" : "public String getCommitMessage()",
      "info" : "MethodDeclaration[47159-47243]:MethodDeclaration[46887-46971]"
    }, {
      "left" : "public byte[] loadContent() throws IOException, VcsException",
      "right" : "public byte[] loadContent() throws IOException, VcsException",
      "info" : "MethodDeclaration[47249-47356]:MethodDeclaration[46977-47084]"
    }, {
      "left" : "public VcsRevisionNumber getRevisionNumber()",
      "right" : "public VcsRevisionNumber getRevisionNumber()",
      "info" : "MethodDeclaration[47362-47459]:MethodDeclaration[47090-47187]"
    }, {
      "left" : "public Date getRevisionDate()",
      "right" : "public Date getRevisionDate()",
      "info" : "MethodDeclaration[47465-47545]:MethodDeclaration[47193-47273]"
    }, {
      "left" : "public String getBranchName()",
      "right" : "public String getBranchName()",
      "info" : "MethodDeclaration[47551-47629]:MethodDeclaration[47279-47357]"
    }, {
      "left" : "public byte[] getContent() throws IOException, VcsException",
      "right" : "public byte[] getContent() throws IOException, VcsException",
      "info" : "MethodDeclaration[47635-47740]:MethodDeclaration[47363-47468]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[47746-47823]:MethodDeclaration[47474-47551]"
    }, {
      "left" : "public boolean shouldBeInTheFlatView()",
      "right" : "public boolean shouldBeInTheFlatView()",
      "info" : "MethodDeclaration[47829-47924]:MethodDeclaration[47557-47652]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[47930-48313]:MethodDeclaration[47658-48041]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[48319-48443]:MethodDeclaration[48047-48171]"
    }, {
      "left" : "public void dispose()",
      "right" : "public void dispose()",
      "info" : "MethodDeclaration[48451-48554]:MethodDeclaration[48179-48282]"
    }, {
      "left" : "AbstractActionForSomeSelection",
      "right" : "AbstractActionForSomeSelection",
      "info" : "TypeDeclaration[48558-49769]:TypeDeclaration[48286-49497]"
    }, {
      "left" : "private final int mySuitableSelectedElements;",
      "right" : "private final int mySuitableSelectedElements;",
      "info" : "FieldDeclaration[48648-48693]:FieldDeclaration[48376-48421]"
    }, {
      "left" : "private final FileHistoryPanelImpl mySelectionProvider;",
      "right" : "private final FileHistoryPanelImpl mySelectionProvider;",
      "info" : "FieldDeclaration[48698-48753]:FieldDeclaration[48426-48481]"
    }, {
      "left" : "public AbstractActionForSomeSelection(String name,\n                                          String description,\n                                          @NonNls String iconName,\n                                          int suitableSelectionSize,\n                                          FileHistoryPanelImpl tableProvider)",
      "right" : "public AbstractActionForSomeSelection(String name,\n                                          String description,\n                                          @NonNls String iconName,\n                                          int suitableSelectionSize,\n                                          FileHistoryPanelImpl tableProvider)",
      "info" : "MethodDeclaration[48759-49279]:MethodDeclaration[48487-49007]"
    }, {
      "left" : "protected abstract void executeAction(AnActionEvent e);",
      "right" : "protected abstract void executeAction(AnActionEvent e);",
      "info" : "MethodDeclaration[49285-49340]:MethodDeclaration[49013-49068]"
    }, {
      "left" : "public boolean isEnabled()",
      "right" : "public boolean isEnabled()",
      "info" : "MethodDeclaration[49346-49466]:MethodDeclaration[49074-49194]"
    }, {
      "left" : "public void actionPerformed(AnActionEvent e)",
      "right" : "public void actionPerformed(AnActionEvent e)",
      "info" : "MethodDeclaration[49472-49580]:MethodDeclaration[49200-49308]"
    }, {
      "left" : "public void update(AnActionEvent e)",
      "right" : "public void update(AnActionEvent e)",
      "info" : "MethodDeclaration[49586-49765]:MethodDeclaration[49314-49493]"
    }, {
      "left" : "VcsColumnInfo",
      "right" : "VcsColumnInfo",
      "info" : "TypeDeclaration[49773-50788]:TypeDeclaration[49501-50516]"
    }, {
      "left" : "public VcsColumnInfo(String name)",
      "right" : "public VcsColumnInfo(String name)",
      "info" : "MethodDeclaration[49932-49992]:MethodDeclaration[49660-49720]"
    }, {
      "left" : "protected abstract T getDataOf(VcsFileRevision o);",
      "right" : "protected abstract T getDataOf(VcsFileRevision o);",
      "info" : "MethodDeclaration[49998-50048]:MethodDeclaration[49726-49776]"
    }, {
      "left" : "public Comparator<VcsFileRevision> getComparator()",
      "right" : "public Comparator<VcsFileRevision> getComparator()",
      "info" : "MethodDeclaration[50054-50131]:MethodDeclaration[49782-49859]"
    }, {
      "left" : "public String valueOf(VcsFileRevision object)",
      "right" : "public String valueOf(VcsFileRevision object)",
      "info" : "MethodDeclaration[50137-50280]:MethodDeclaration[49865-50008]"
    }, {
      "left" : "public int compare(VcsFileRevision o1, VcsFileRevision o2)",
      "right" : "public int compare(VcsFileRevision o1, VcsFileRevision o2)",
      "info" : "MethodDeclaration[50286-50411]:MethodDeclaration[50014-50139]"
    }, {
      "left" : "private static int compareObjects(Comparable data1, Comparable data2)",
      "right" : "private static int compareObjects(Comparable data1, Comparable data2)",
      "info" : "MethodDeclaration[50417-50638]:MethodDeclaration[50145-50366]"
    }, {
      "left" : "public boolean shouldBeShownIsTheTree()",
      "right" : "public boolean shouldBeShownIsTheTree()",
      "info" : "MethodDeclaration[50644-50710]:MethodDeclaration[50372-50438]"
    }, {
      "left" : "public boolean shouldBeShownIsTheTable()",
      "right" : "public boolean shouldBeShownIsTheTable()",
      "info" : "MethodDeclaration[50716-50783]:MethodDeclaration[50444-50511]"
    }, {
      "left" : "MyColumnWrapper",
      "right" : "MyColumnWrapper",
      "info" : "TypeDeclaration[50792-53200]:TypeDeclaration[50520-52928]"
    }, {
      "left" : "private final ColumnInfo<VcsFileRevision, T> myBaseColumn;",
      "right" : "private final ColumnInfo<VcsFileRevision, T> myBaseColumn;",
      "info" : "FieldDeclaration[50889-50947]:FieldDeclaration[50617-50675]"
    }, {
      "left" : "public Comparator<TreeNodeOnVcsRevision> getComparator()",
      "right" : "public Comparator<TreeNodeOnVcsRevision> getComparator()",
      "info" : "MethodDeclaration[50953-51606]:MethodDeclaration[50681-51334]"
    }, {
      "left" : "public int compare(TreeNodeOnVcsRevision o1, TreeNodeOnVcsRevision o2)",
      "right" : "public int compare(TreeNodeOnVcsRevision o1, TreeNodeOnVcsRevision o2)",
      "info" : "MethodDeclaration[51184-51591]:MethodDeclaration[50912-51319]"
    }, {
      "left" : "public String getName()",
      "right" : "public String getName()",
      "info" : "MethodDeclaration[51612-51680]:MethodDeclaration[51340-51408]"
    }, {
      "left" : "public Class getColumnClass()",
      "right" : "public Class getColumnClass()",
      "info" : "MethodDeclaration[51686-51767]:MethodDeclaration[51414-51495]"
    }, {
      "left" : "public boolean isCellEditable(TreeNodeOnVcsRevision o)",
      "right" : "public boolean isCellEditable(TreeNodeOnVcsRevision o)",
      "info" : "MethodDeclaration[51773-51891]:MethodDeclaration[51501-51619]"
    }, {
      "left" : "public void setValue(TreeNodeOnVcsRevision o, Object aValue)",
      "right" : "public void setValue(TreeNodeOnVcsRevision o, Object aValue)",
      "info" : "MethodDeclaration[51897-52050]:MethodDeclaration[51625-51778]"
    }, {
      "left" : "public TableCellRenderer getRenderer(TreeNodeOnVcsRevision p0)",
      "right" : "public TableCellRenderer getRenderer(TreeNodeOnVcsRevision p0)",
      "info" : "MethodDeclaration[52056-52180]:MethodDeclaration[51784-51908]"
    }, {
      "left" : "public TableCellEditor getEditor(TreeNodeOnVcsRevision item)",
      "right" : "public TableCellEditor getEditor(TreeNodeOnVcsRevision item)",
      "info" : "MethodDeclaration[52186-52308]:MethodDeclaration[51914-52036]"
    }, {
      "left" : "public String getMaxStringValue()",
      "right" : "public String getMaxStringValue()",
      "info" : "MethodDeclaration[52314-52520]:MethodDeclaration[52042-52248]"
    }, {
      "left" : "public int getAdditionalWidth()",
      "right" : "public int getAdditionalWidth()",
      "info" : "MethodDeclaration[52526-52613]:MethodDeclaration[52254-52341]"
    }, {
      "left" : "public int getWidth(JTable table)",
      "right" : "public int getWidth(JTable table)",
      "info" : "MethodDeclaration[52619-52703]:MethodDeclaration[52347-52431]"
    }, {
      "left" : "public void setName(String s)",
      "right" : "public void setName(String s)",
      "info" : "MethodDeclaration[52709-52777]:MethodDeclaration[52437-52505]"
    }, {
      "left" : "public MyColumnWrapper(ColumnInfo<VcsFileRevision, T> additionalColunm)",
      "right" : "public MyColumnWrapper(ColumnInfo<VcsFileRevision, T> additionalColunm)",
      "info" : "MethodDeclaration[52783-52942]:MethodDeclaration[52511-52670]"
    }, {
      "left" : "public boolean shouldBeShownIsTheTree()",
      "right" : "public boolean shouldBeShownIsTheTree()",
      "info" : "MethodDeclaration[52948-53014]:MethodDeclaration[52676-52742]"
    }, {
      "left" : "public boolean shouldBeShownIsTheTable()",
      "right" : "public boolean shouldBeShownIsTheTable()",
      "info" : "MethodDeclaration[53020-53087]:MethodDeclaration[52748-52815]"
    }, {
      "left" : "public Object valueOf(TreeNodeOnVcsRevision o)",
      "right" : "public Object valueOf(TreeNodeOnVcsRevision o)",
      "info" : "MethodDeclaration[53093-53196]:MethodDeclaration[52821-52924]"
    }, {
      "left" : "public FileHistoryRefresherI getRefresher()",
      "right" : "public FileHistoryRefresherI getRefresher()",
      "info" : "MethodDeclaration[53204-53289]:MethodDeclaration[52932-53017]"
    }, {
      "left" : "public FilePath getFilePath()",
      "right" : "public FilePath getFilePath()",
      "info" : "MethodDeclaration[53293-53362]:MethodDeclaration[53021-53090]"
    }, {
      "left" : "private VirtualFile getVirtualParent()",
      "right" : "private VirtualFile getVirtualParent()",
      "info" : "MethodDeclaration[53451-53541]:MethodDeclaration[53191-53281]"
    }, {
      "left" : "private String getMaxValue(String name)",
      "right" : "private String getMaxValue(String name)",
      "info" : "MethodDeclaration[53545-54679]:MethodDeclaration[53285-54419]"
    }, {
      "left" : "MyTreeCellRenderer",
      "right" : "MyTreeCellRenderer",
      "info" : "TypeDeclaration[54683-56469]:TypeDeclaration[54423-56209]"
    }, {
      "left" : "private final TreeCellRenderer myDefaultCellRenderer;",
      "right" : "private final TreeCellRenderer myDefaultCellRenderer;",
      "info" : "FieldDeclaration[54750-54803]:FieldDeclaration[54490-54543]"
    }, {
      "left" : "private final Getter<VcsHistorySession> myHistorySession;",
      "right" : "private final Getter<VcsHistorySession> myHistorySession;",
      "info" : "FieldDeclaration[54808-54865]:FieldDeclaration[54548-54605]"
    }, {
      "left" : "public MyTreeCellRenderer(final TreeCellRenderer defaultCellRenderer, final Getter<VcsHistorySession> historySession)",
      "right" : "public MyTreeCellRenderer(final TreeCellRenderer defaultCellRenderer, final Getter<VcsHistorySession> historySession)",
      "info" : "MethodDeclaration[54871-55088]:MethodDeclaration[54611-54828]"
    }, {
      "left" : "public Component getTreeCellRendererComponent(JTree tree,\n                                                  Object value,\n                                                  boolean selected,\n                                                  boolean expanded,\n                                                  boolean leaf,\n                                                  int row,\n                                                  boolean hasFocus)",
      "right" : "public Component getTreeCellRendererComponent(JTree tree,\n                                                  Object value,\n                                                  boolean selected,\n                                                  boolean expanded,\n                                                  boolean leaf,\n                                                  int row,\n                                                  boolean hasFocus)",
      "info" : "MethodDeclaration[55094-56465]:MethodDeclaration[54834-56205]"
    }, {
      "left" : "MyCellWrapper",
      "right" : "MyCellWrapper",
      "info" : "TypeDeclaration[56473-57240]:TypeDeclaration[56213-56980]"
    }, {
      "left" : "private final Getter<VcsHistorySession> myHistorySession;",
      "right" : "private final Getter<VcsHistorySession> myHistorySession;",
      "info" : "FieldDeclaration[56537-56594]:FieldDeclaration[56277-56334]"
    }, {
      "left" : "public MyCellWrapper(final Getter<VcsHistorySession> historySession)",
      "right" : "public MyCellWrapper(final Getter<VcsHistorySession> historySession)",
      "info" : "MethodDeclaration[56600-56717]:MethodDeclaration[56340-56457]"
    }, {
      "left" : "public void wrap(Component component,\n                     JTable table,\n                     Object value,\n                     boolean isSelected,\n                     boolean hasFocus,\n                     int row,\n                     int column,\n                     Object treeNode)",
      "right" : "public void wrap(Component component,\n                     JTable table,\n                     Object value,\n                     boolean isSelected,\n                     boolean hasFocus,\n                     int row,\n                     int column,\n                     Object treeNode)",
      "info" : "MethodDeclaration[56723-57236]:MethodDeclaration[56463-56976]"
    }, {
      "left" : "RefreshFileHistoryAction",
      "right" : "RefreshFileHistoryAction",
      "info" : "TypeDeclaration[57244-57756]:TypeDeclaration[56984-57496]"
    }, {
      "left" : "public RefreshFileHistoryAction()",
      "right" : "public RefreshFileHistoryAction()",
      "info" : "MethodDeclaration[57327-57498]:MethodDeclaration[57067-57238]"
    }, {
      "left" : "public void actionPerformed(AnActionEvent e)",
      "right" : "public void actionPerformed(AnActionEvent e)",
      "info" : "MethodDeclaration[57504-57613]:MethodDeclaration[57244-57353]"
    }, {
      "left" : "public void update(AnActionEvent e)",
      "right" : "public void update(AnActionEvent e)",
      "info" : "MethodDeclaration[57619-57752]:MethodDeclaration[57359-57492]"
    }, {
      "left" : "private void refreshRevisionsOrder()",
      "right" : "private void refreshRevisionsOrder()",
      "info" : "MethodDeclaration[57760-58052]:MethodDeclaration[57500-57792]"
    }, {
      "left" : "public void setIsStaticAndEmbedded(boolean isStaticAndEmbedded)",
      "right" : "public void setIsStaticAndEmbedded(boolean isStaticAndEmbedded)",
      "info" : "MethodDeclaration[58056-58645]:MethodDeclaration[57796-58385]"
    }, {
      "left" : "public void setBottomRevisionForShowDiff(VcsFileRevision bottomRevisionForShowDiff)",
      "right" : "public void setBottomRevisionForShowDiff(VcsFileRevision bottomRevisionForShowDiff)",
      "info" : "MethodDeclaration[58649-58799]:MethodDeclaration[58389-58539]"
    }, {
      "left" : "FolderPatchCreationTask",
      "right" : "FolderPatchCreationTask",
      "info" : "TypeDeclaration[58803-60645]:TypeDeclaration[58543-60385]"
    }, {
      "left" : "@Nullable private final AbstractVcs myVcs;",
      "right" : "@Nullable private final AbstractVcs myVcs;",
      "info" : "FieldDeclaration[58882-58924]:FieldDeclaration[58622-58664]"
    }, {
      "left" : "private final TreeNodeOnVcsRevision myRevision;",
      "right" : "private final TreeNodeOnVcsRevision myRevision;",
      "info" : "FieldDeclaration[58929-58976]:FieldDeclaration[58669-58716]"
    }, {
      "left" : "private CommittedChangeList myList;",
      "right" : "private CommittedChangeList myList;",
      "info" : "FieldDeclaration[58981-59016]:FieldDeclaration[58721-58756]"
    }, {
      "left" : "private VcsException myException;",
      "right" : "private VcsException myException;",
      "info" : "FieldDeclaration[59021-59054]:FieldDeclaration[58761-58794]"
    }, {
      "left" : "private FolderPatchCreationTask(@Nullable AbstractVcs vcs, final TreeNodeOnVcsRevision revision)",
      "right" : "private FolderPatchCreationTask(@Nullable AbstractVcs vcs, final TreeNodeOnVcsRevision revision)",
      "info" : "MethodDeclaration[59060-59309]:MethodDeclaration[58800-59049]"
    }, {
      "left" : "public void run(@NotNull ProgressIndicator indicator)",
      "right" : "public void run(@NotNull ProgressIndicator indicator)",
      "info" : "MethodDeclaration[59315-60080]:MethodDeclaration[59055-59820]"
    }, {
      "left" : "public void onSuccess()",
      "right" : "public void onSuccess()",
      "info" : "MethodDeclaration[60086-60641]:MethodDeclaration[59826-60381]"
    }, {
      "left" : "MyCreatePatch",
      "right" : "MyCreatePatch",
      "info" : "TypeDeclaration[60649-62190]:TypeDeclaration[60389-61930]"
    }, {
      "left" : "private final CreatePatchFromChangesAction myUsualDelegate;",
      "right" : "private final CreatePatchFromChangesAction myUsualDelegate;",
      "info" : "FieldDeclaration[60706-60765]:FieldDeclaration[60446-60505]"
    }, {
      "left" : "public MyCreatePatch()",
      "right" : "public MyCreatePatch()",
      "info" : "MethodDeclaration[60771-61067]:MethodDeclaration[60511-60807]"
    }, {
      "left" : "public void actionPerformed(AnActionEvent e)",
      "right" : "public void actionPerformed(AnActionEvent e)",
      "info" : "MethodDeclaration[61073-61454]:MethodDeclaration[60813-61194]"
    }, {
      "left" : "public void update(AnActionEvent e)",
      "right" : "public void update(AnActionEvent e)",
      "info" : "MethodDeclaration[61460-62186]:MethodDeclaration[61200-61926]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[62194-62376]:MethodDeclaration[61934-62116]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[62380-62513]:MethodDeclaration[62120-62253]"
    }, {
      "left" : "MyToggleAction",
      "right" : "MyToggleAction",
      "info" : "TypeDeclaration[62517-63004]:TypeDeclaration[62257-62744]"
    }, {
      "left" : "public MyToggleAction()",
      "right" : "public MyToggleAction()",
      "info" : "MethodDeclaration[62595-62706]:MethodDeclaration[62335-62446]"
    }, {
      "left" : "public boolean isSelected(AnActionEvent e)",
      "right" : "public boolean isSelected(AnActionEvent e)",
      "info" : "MethodDeclaration[62712-62835]:MethodDeclaration[62452-62575]"
    }, {
      "left" : "public void setSelected(AnActionEvent e, boolean state)",
      "right" : "public void setSelected(AnActionEvent e, boolean state)",
      "info" : "MethodDeclaration[62841-63000]:MethodDeclaration[62581-62740]"
    } ],
    "mappings" : [
 {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5748-5757]:MarkerAnnotation[5748-5757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5762-5768]:Modifier[5762-5768]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5769-5772]:PrimitiveType[5769-5772]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[5773-5780]:SimpleName[5773-5780]"
    }, {
      "left" : "VcsFileRevision o1",
      "right" : "VcsFileRevision o1",
      "info" : "SingleVariableDeclaration[5781-5799]:SingleVariableDeclaration[5781-5799]"
    }, {
      "left" : "VcsFileRevision o2",
      "right" : "VcsFileRevision o2",
      "info" : "SingleVariableDeclaration[5801-5819]:SingleVariableDeclaration[5801-5819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5821-5972]:Block[5821-5972]"
    }, {
      "left" : "return Comparing.compare(myRevisionsOrder.get(o2.getRevisionNumber()), myRevisionsOrder.get(o1.getRevisionNumber()));",
      "right" : "return Comparing.compare(myRevisionsOrder.get(o2.getRevisionNumber()), myRevisionsOrder.get(o1.getRevisionNumber()));",
      "info" : "ReturnStatement[5849-5966]:ReturnStatement[5849-5966]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6125-6134]:Modifier[6125-6134]"
    }, {
      "left" : "VcsRevisionNumber",
      "right" : "VcsRevisionNumber",
      "info" : "SimpleType[6135-6152]:SimpleType[6135-6152]"
    }, {
      "left" : "getDataOf",
      "right" : "getDataOf",
      "info" : "SimpleName[6153-6162]:SimpleName[6153-6162]"
    }, {
      "left" : "VcsFileRevision object",
      "right" : "VcsFileRevision object",
      "info" : "SingleVariableDeclaration[6163-6185]:SingleVariableDeclaration[6163-6185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6187-6239]:Block[6187-6239]"
    }, {
      "left" : "return object.getRevisionNumber();",
      "right" : "return object.getRevisionNumber();",
      "info" : "ReturnStatement[6197-6231]:ReturnStatement[6197-6231]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6247-6256]:MarkerAnnotation[6247-6256]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6263-6269]:Modifier[6263-6269]"
    }, {
      "left" : "Comparator<VcsFileRevision>",
      "right" : "Comparator<VcsFileRevision>",
      "info" : "ParameterizedType[6270-6297]:ParameterizedType[6270-6297]"
    }, {
      "left" : "getComparator",
      "right" : "getComparator",
      "info" : "SimpleName[6298-6311]:SimpleName[6298-6311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6314-6368]:Block[6314-6368]"
    }, {
      "left" : "return myRevisionsInOrderComparator;",
      "right" : "return myRevisionsInOrderComparator;",
      "info" : "ReturnStatement[6324-6360]:ReturnStatement[6324-6360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6376-6382]:Modifier[6376-6382]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6383-6389]:SimpleType[6383-6389]"
    }, {
      "left" : "valueOf",
      "right" : "valueOf",
      "info" : "SimpleName[6390-6397]:SimpleName[6390-6397]"
    }, {
      "left" : "VcsFileRevision object",
      "right" : "VcsFileRevision object",
      "info" : "SingleVariableDeclaration[6398-6420]:SingleVariableDeclaration[6398-6420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6422-6660]:Block[6422-6660]"
    }, {
      "left" : "final VcsRevisionNumber revisionNumber = object.getRevisionNumber();",
      "right" : "final VcsRevisionNumber revisionNumber = object.getRevisionNumber();",
      "info" : "VariableDeclarationStatement[6432-6500]:VariableDeclarationStatement[6432-6500]"
    }, {
      "left" : "return revisionNumber instanceof ShortVcsRevisionNumber ? ((ShortVcsRevisionNumber)revisionNumber).toShortString() : revisionNumber.asString();",
      "right" : "return revisionNumber instanceof ShortVcsRevisionNumber ? ((ShortVcsRevisionNumber)revisionNumber).toShortString() : revisionNumber.asString();",
      "info" : "ReturnStatement[6509-6652]:ReturnStatement[6509-6652]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6668-6677]:MarkerAnnotation[6668-6677]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6684-6690]:Modifier[6684-6690]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6691-6697]:SimpleType[6691-6697]"
    }, {
      "left" : "getPreferredStringValue",
      "right" : "getPreferredStringValue",
      "info" : "SimpleName[6698-6721]:SimpleName[6698-6721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6724-6760]:Block[6724-6760]"
    }, {
      "left" : "return \"123.4567\";",
      "right" : "return \"123.4567\";",
      "info" : "ReturnStatement[6734-6752]:ReturnStatement[6734-6752]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6892-6901]:Modifier[6892-6901]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[6902-6908]:SimpleType[6902-6908]"
    }, {
      "left" : "getDataOf",
      "right" : "getDataOf",
      "info" : "SimpleName[6909-6918]:SimpleName[6909-6918]"
    }, {
      "left" : "VcsFileRevision object",
      "right" : "VcsFileRevision object",
      "info" : "SingleVariableDeclaration[6919-6941]:SingleVariableDeclaration[6919-6941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6943-7085]:Block[6943-7085]"
    }, {
      "left" : "Date date = object.getRevisionDate();",
      "right" : "Date date = object.getRevisionDate();",
      "info" : "VariableDeclarationStatement[6951-6988]:VariableDeclarationStatement[6951-6988]"
    }, {
      "left" : "if (date == null)",
      "right" : "if (date == null)",
      "info" : "IfStatement[6995-7023]:IfStatement[6995-7023]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[7013-7023]:ReturnStatement[7013-7023]"
    }, {
      "left" : "return DateFormatUtil.formatPrettyDateTime(date);",
      "right" : "return DateFormatUtil.formatPrettyDateTime(date);",
      "info" : "ReturnStatement[7030-7079]:ReturnStatement[7030-7079]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7091-7097]:Modifier[7091-7097]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[7098-7101]:PrimitiveType[7098-7101]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[7102-7109]:SimpleName[7102-7109]"
    }, {
      "left" : "VcsFileRevision o1",
      "right" : "VcsFileRevision o1",
      "info" : "SingleVariableDeclaration[7110-7128]:SingleVariableDeclaration[7110-7128]"
    }, {
      "left" : "VcsFileRevision o2",
      "right" : "VcsFileRevision o2",
      "info" : "SingleVariableDeclaration[7130-7148]:SingleVariableDeclaration[7130-7148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7150-7233]:Block[7150-7233]"
    }, {
      "left" : "return Comparing.compare(o1.getRevisionDate(), o2.getRevisionDate());",
      "right" : "return Comparing.compare(o1.getRevisionDate(), o2.getRevisionDate());",
      "info" : "ReturnStatement[7158-7227]:ReturnStatement[7158-7227]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7239-7248]:MarkerAnnotation[7239-7248]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7253-7259]:Modifier[7253-7259]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7260-7266]:SimpleType[7260-7266]"
    }, {
      "left" : "getPreferredStringValue",
      "right" : "getPreferredStringValue",
      "info" : "SimpleName[7267-7290]:SimpleName[7267-7290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7293-7367]:Block[7293-7367]"
    }, {
      "left" : "return DateFormatUtil.formatPrettyDateTime(Clock.getTime());",
      "right" : "return DateFormatUtil.formatPrettyDateTime(Clock.getTime());",
      "info" : "ReturnStatement[7301-7361]:ReturnStatement[7301-7361]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7413-7419]:Modifier[7413-7419]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7420-7424]:PrimitiveType[7420-7424]"
    }, {
      "left" : "scheduleRefresh",
      "right" : "scheduleRefresh",
      "info" : "SimpleName[7425-7440]:SimpleName[7425-7440]"
    }, {
      "left" : "final boolean canUseLastRevision",
      "right" : "final boolean canUseLastRevision",
      "info" : "SingleVariableDeclaration[7441-7473]:SingleVariableDeclaration[7441-7473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7475-7648]:Block[7475-7648]"
    }, {
      "left" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n      @Override\n      public void run() {\n        refreshImpl(canUseLastRevision);\n      }\n    });",
      "right" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n      @Override\n      public void run() {\n        refreshImpl(canUseLastRevision);\n      }\n    });",
      "info" : "ExpressionStatement[7481-7644]:ExpressionStatement[7481-7644]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7552-7561]:MarkerAnnotation[7552-7561]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7568-7574]:Modifier[7568-7574]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7575-7579]:PrimitiveType[7575-7579]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[7580-7583]:SimpleName[7580-7583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7586-7636]:Block[7586-7636]"
    }, {
      "left" : "refreshImpl(canUseLastRevision);",
      "right" : "refreshImpl(canUseLastRevision);",
      "info" : "ExpressionStatement[7596-7628]:ExpressionStatement[7596-7628]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7652-7659]:Modifier[7652-7659]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7660-7666]:Modifier[7660-7666]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[7667-7672]:TYPE_DECLARATION_KIND[7667-7672]"
    }, {
      "left" : "AuthorCellRenderer",
      "right" : "AuthorCellRenderer",
      "info" : "SimpleName[7673-7691]:SimpleName[7673-7691]"
    }, {
      "left" : "DefaultTableCellRenderer",
      "right" : "DefaultTableCellRenderer",
      "info" : "SimpleType[7700-7724]:SimpleType[7700-7724]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7766-7772]:Modifier[7766-7772]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7773-7777]:PrimitiveType[7773-7777]"
    }, {
      "left" : "setTooltipText",
      "right" : "setTooltipText",
      "info" : "SimpleName[7778-7792]:SimpleName[7778-7792]"
    }, {
      "left" : "final String text",
      "right" : "final String text",
      "info" : "SingleVariableDeclaration[7793-7810]:SingleVariableDeclaration[7793-7810]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7812-7847]:Block[7812-7847]"
    }, {
      "left" : "myTooltipText = text;",
      "right" : "myTooltipText = text;",
      "info" : "ExpressionStatement[7820-7841]:ExpressionStatement[7820-7841]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7853-7862]:MarkerAnnotation[7853-7862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7867-7873]:Modifier[7867-7873]"
    }, {
      "left" : "Component",
      "right" : "Component",
      "info" : "SimpleType[7874-7883]:SimpleType[7874-7883]"
    }, {
      "left" : "getTableCellRendererComponent",
      "right" : "getTableCellRendererComponent",
      "info" : "SimpleName[7884-7913]:SimpleName[7884-7913]"
    }, {
      "left" : "JTable table",
      "right" : "JTable table",
      "info" : "SingleVariableDeclaration[7914-7926]:SingleVariableDeclaration[7914-7926]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[7928-7940]:SingleVariableDeclaration[7928-7940]"
    }, {
      "left" : "boolean isSelected",
      "right" : "boolean isSelected",
      "info" : "SingleVariableDeclaration[7942-7960]:SingleVariableDeclaration[7942-7960]"
    }, {
      "left" : "boolean hasFocus",
      "right" : "boolean hasFocus",
      "info" : "SingleVariableDeclaration[7962-7978]:SingleVariableDeclaration[7962-7978]"
    }, {
      "left" : "int row",
      "right" : "int row",
      "info" : "SingleVariableDeclaration[7980-7987]:SingleVariableDeclaration[7980-7987]"
    }, {
      "left" : "int column",
      "right" : "int column",
      "info" : "SingleVariableDeclaration[7989-7999]:SingleVariableDeclaration[7989-7999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8001-8506]:Block[8001-8506]"
    }, {
      "left" : "final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);",
      "right" : "final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);",
      "info" : "VariableDeclarationStatement[8009-8114]:VariableDeclarationStatement[8009-8114]"
    }, {
      "left" : "if (c instanceof JComponent)",
      "right" : "if (c instanceof JComponent)",
      "info" : "IfStatement[8121-8214]:IfStatement[8121-8214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8150-8214]:Block[8150-8214]"
    }, {
      "left" : "((JComponent)c).setToolTipText(myTooltipText);",
      "right" : "((JComponent)c).setToolTipText(myTooltipText);",
      "info" : "ExpressionStatement[8160-8206]:ExpressionStatement[8160-8206]"
    }, {
      "left" : "if (isSelected || hasFocus)",
      "right" : "if (isSelected || hasFocus)",
      "info" : "IfStatement[8221-8483]:IfStatement[8221-8483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8249-8372]:Block[8249-8372]"
    }, {
      "left" : "c.setBackground(table.getSelectionBackground());",
      "right" : "c.setBackground(table.getSelectionBackground());",
      "info" : "ExpressionStatement[8259-8307]:ExpressionStatement[8259-8307]"
    }, {
      "left" : "c.setForeground(table.getSelectionForeground());",
      "right" : "c.setForeground(table.getSelectionForeground());",
      "info" : "ExpressionStatement[8316-8364]:ExpressionStatement[8316-8364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8378-8483]:Block[8378-8483]"
    }, {
      "left" : "c.setBackground(table.getBackground());",
      "right" : "c.setBackground(table.getBackground());",
      "info" : "ExpressionStatement[8388-8427]:ExpressionStatement[8388-8427]"
    }, {
      "left" : "c.setForeground(table.getForeground());",
      "right" : "c.setForeground(table.getForeground());",
      "info" : "ExpressionStatement[8436-8475]:ExpressionStatement[8436-8475]"
    }, {
      "left" : "return c;",
      "right" : "return c;",
      "info" : "ReturnStatement[8491-8500]:ReturnStatement[8491-8500]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8729-8738]:Modifier[8729-8738]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8739-8745]:SimpleType[8739-8745]"
    }, {
      "left" : "getDataOf",
      "right" : "getDataOf",
      "info" : "SimpleName[8746-8755]:SimpleName[8746-8755]"
    }, {
      "left" : "VcsFileRevision object",
      "right" : "VcsFileRevision object",
      "info" : "SingleVariableDeclaration[8756-8778]:SingleVariableDeclaration[8756-8778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8780-9149]:Block[8780-9149]"
    }, {
      "left" : "VcsFileRevision rev = object;",
      "right" : "VcsFileRevision rev = object;",
      "info" : "VariableDeclarationStatement[8788-8817]:VariableDeclarationStatement[8788-8817]"
    }, {
      "left" : "if (object instanceof TreeNodeOnVcsRevision)",
      "right" : "if (object instanceof TreeNodeOnVcsRevision)",
      "info" : "IfStatement[8824-8939]:IfStatement[8824-8939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8869-8939]:Block[8869-8939]"
    }, {
      "left" : "rev = ((TreeNodeOnVcsRevision)object).getRevision();",
      "right" : "rev = ((TreeNodeOnVcsRevision)object).getRevision();",
      "info" : "ExpressionStatement[8879-8931]:ExpressionStatement[8879-8931]"
    }, {
      "left" : "if (rev instanceof VcsFileRevisionEx)",
      "right" : "if (rev instanceof VcsFileRevisionEx)",
      "info" : "IfStatement[8947-9109]:IfStatement[8947-9109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8985-9109]:Block[8985-9109]"
    }, {
      "left" : "if (!rev.getAuthor().equals(((VcsFileRevisionEx)rev).getCommitterName()))",
      "right" : "if (!rev.getAuthor().equals(((VcsFileRevisionEx)rev).getCommitterName()))",
      "info" : "IfStatement[8995-9101]:IfStatement[8995-9101]"
    }, {
      "left" : "return object.getAuthor() + \"*\";",
      "right" : "return object.getAuthor() + \"*\";",
      "info" : "ReturnStatement[9069-9101]:ReturnStatement[9069-9101]"
    }, {
      "left" : "return object.getAuthor();",
      "right" : "return object.getAuthor();",
      "info" : "ReturnStatement[9117-9143]:ReturnStatement[9117-9143]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9155-9164]:MarkerAnnotation[9155-9164]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9169-9175]:Modifier[9169-9175]"
    }, {
      "left" : "TableCellRenderer",
      "right" : "TableCellRenderer",
      "info" : "SimpleType[9176-9193]:SimpleType[9176-9193]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[9194-9205]:SimpleName[9194-9205]"
    }, {
      "left" : "VcsFileRevision revision",
      "right" : "VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[9206-9230]:SingleVariableDeclaration[9206-9230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9232-9269]:Block[9232-9269]"
    }, {
      "left" : "return AUTHOR_RENDERER;",
      "right" : "return AUTHOR_RENDERER;",
      "info" : "ReturnStatement[9240-9263]:ReturnStatement[9240-9263]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9275-9284]:MarkerAnnotation[9275-9284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9289-9295]:Modifier[9289-9295]"
    }, {
      "left" : "TableCellRenderer",
      "right" : "TableCellRenderer",
      "info" : "SimpleType[9296-9313]:SimpleType[9296-9313]"
    }, {
      "left" : "getCustomizedRenderer",
      "right" : "getCustomizedRenderer",
      "info" : "SimpleName[9314-9335]:SimpleName[9314-9335]"
    }, {
      "left" : "VcsFileRevision value",
      "right" : "VcsFileRevision value",
      "info" : "SingleVariableDeclaration[9336-9357]:SingleVariableDeclaration[9336-9357]"
    }, {
      "left" : "TableCellRenderer renderer",
      "right" : "TableCellRenderer renderer",
      "info" : "SingleVariableDeclaration[9359-9385]:SingleVariableDeclaration[9359-9385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9387-10316]:Block[9387-10316]"
    }, {
      "left" : "if (renderer instanceof AuthorCellRenderer)",
      "right" : "if (renderer instanceof AuthorCellRenderer)",
      "info" : "IfStatement[9395-10286]:IfStatement[9395-10286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9439-10286]:Block[9439-10286]"
    }, {
      "left" : "VcsFileRevision revision = value;",
      "right" : "VcsFileRevision revision = value;",
      "info" : "VariableDeclarationStatement[9449-9482]:VariableDeclarationStatement[9449-9482]"
    }, {
      "left" : "if (value instanceof TreeNodeOnVcsRevision)",
      "right" : "if (value instanceof TreeNodeOnVcsRevision)",
      "info" : "IfStatement[9491-9613]:IfStatement[9491-9613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9535-9613]:Block[9535-9613]"
    }, {
      "left" : "revision = ((TreeNodeOnVcsRevision)value).getRevision();",
      "right" : "revision = ((TreeNodeOnVcsRevision)value).getRevision();",
      "info" : "ExpressionStatement[9547-9603]:ExpressionStatement[9547-9603]"
    }, {
      "left" : "if (revision instanceof VcsFileRevisionEx)",
      "right" : "if (revision instanceof VcsFileRevisionEx)",
      "info" : "IfStatement[9623-10278]:IfStatement[9623-10278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9666-10278]:Block[9666-10278]"
    }, {
      "left" : "final VcsFileRevisionEx ex = (VcsFileRevisionEx)revision;",
      "right" : "final VcsFileRevisionEx ex = (VcsFileRevisionEx)revision;",
      "info" : "VariableDeclarationStatement[9678-9735]:VariableDeclarationStatement[9678-9735]"
    }, {
      "left" : "final StringBuilder sb = new StringBuilder(ex.getAuthor());",
      "right" : "final StringBuilder sb = new StringBuilder(ex.getAuthor());",
      "info" : "VariableDeclarationStatement[9746-9805]:VariableDeclarationStatement[9746-9805]"
    }, {
      "left" : "if (ex.getAuthorEmail() != null)",
      "right" : "if (ex.getAuthorEmail() != null)",
      "info" : "IfStatement[9816-9911]:IfStatement[9816-9911]"
    }, {
      "left" : "sb.append(\" &lt;\").append(ex.getAuthorEmail()).append(\"&gt;\");",
      "right" : "sb.append(\" &lt;\").append(ex.getAuthorEmail()).append(\"&gt;\");",
      "info" : "ExpressionStatement[9849-9911]:ExpressionStatement[9849-9911]"
    }, {
      "left" : "if (ex.getCommitterName() != null && !ex.getAuthor().equals(ex.getCommitterName()))",
      "right" : "if (ex.getCommitterName() != null && !ex.getAuthor().equals(ex.getCommitterName()))",
      "info" : "IfStatement[9922-10196]:IfStatement[9922-10196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10006-10196]:Block[10006-10196]"
    }, {
      "left" : "sb.append(\", via \").append(ex.getCommitterName());",
      "right" : "sb.append(\", via \").append(ex.getCommitterName());",
      "info" : "ExpressionStatement[10020-10070]:ExpressionStatement[10020-10070]"
    }, {
      "left" : "if (ex.getCommitterEmail() != null)",
      "right" : "if (ex.getCommitterEmail() != null)",
      "info" : "IfStatement[10083-10184]:IfStatement[10083-10184]"
    }, {
      "left" : "sb.append(\" &lt;\").append(ex.getCommitterEmail()).append(\"&gt;\");",
      "right" : "sb.append(\" &lt;\").append(ex.getCommitterEmail()).append(\"&gt;\");",
      "info" : "ExpressionStatement[10119-10184]:ExpressionStatement[10119-10184]"
    }, {
      "left" : "((AuthorCellRenderer)renderer).setTooltipText(sb.toString());",
      "right" : "((AuthorCellRenderer)renderer).setTooltipText(sb.toString());",
      "info" : "ExpressionStatement[10207-10268]:ExpressionStatement[10207-10268]"
    }, {
      "left" : "return renderer;",
      "right" : "return renderer;",
      "info" : "ReturnStatement[10294-10310]:ReturnStatement[10294-10310]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10322-10331]:MarkerAnnotation[10322-10331]"
    }, {
      "left" : "@NonNls",
      "right" : "@NonNls",
      "info" : "MarkerAnnotation[10336-10343]:MarkerAnnotation[10336-10343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10348-10354]:Modifier[10348-10354]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10355-10361]:SimpleType[10355-10361]"
    }, {
      "left" : "getPreferredStringValue",
      "right" : "getPreferredStringValue",
      "info" : "SimpleName[10362-10385]:SimpleName[10362-10385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10388-10425]:Block[10388-10425]"
    }, {
      "left" : "return \"author_author\";",
      "right" : "return \"author_author\";",
      "info" : "ReturnStatement[10396-10419]:ReturnStatement[10396-10419]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[10467-10474]:Modifier[10467-10474]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10475-10481]:Modifier[10475-10481]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[10482-10487]:TYPE_DECLARATION_KIND[10482-10487]"
    }, {
      "left" : "MessageRenderer",
      "right" : "MessageRenderer",
      "info" : "SimpleName[10488-10503]:SimpleName[10488-10503]"
    }, {
      "left" : "ColoredTableCellRenderer",
      "right" : "ColoredTableCellRenderer",
      "info" : "SimpleType[10512-10536]:SimpleType[10512-10536]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10601-10607]:Modifier[10601-10607]"
    }, {
      "left" : "MessageRenderer",
      "right" : "MessageRenderer",
      "info" : "SimpleName[10608-10623]:SimpleName[10608-10623]"
    }, {
      "left" : "Project project",
      "right" : "Project project",
      "info" : "SingleVariableDeclaration[10624-10639]:SingleVariableDeclaration[10624-10639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10641-10714]:Block[10641-10714]"
    }, {
      "left" : "myIssueLinkRenderer = new IssueLinkRenderer(project, this);",
      "right" : "myIssueLinkRenderer = new IssueLinkRenderer(project, this);",
      "info" : "ExpressionStatement[10649-10708]:ExpressionStatement[10649-10708]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10720-10729]:Modifier[10720-10729]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10730-10734]:PrimitiveType[10730-10734]"
    }, {
      "left" : "customizeCellRenderer",
      "right" : "customizeCellRenderer",
      "info" : "SimpleName[10735-10756]:SimpleName[10735-10756]"
    }, {
      "left" : "JTable table",
      "right" : "JTable table",
      "info" : "SingleVariableDeclaration[10757-10769]:SingleVariableDeclaration[10757-10769]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[10771-10783]:SingleVariableDeclaration[10771-10783]"
    }, {
      "left" : "boolean selected",
      "right" : "boolean selected",
      "info" : "SingleVariableDeclaration[10785-10801]:SingleVariableDeclaration[10785-10801]"
    }, {
      "left" : "boolean hasFocus",
      "right" : "boolean hasFocus",
      "info" : "SingleVariableDeclaration[10803-10819]:SingleVariableDeclaration[10803-10819]"
    }, {
      "left" : "int row",
      "right" : "int row",
      "info" : "SingleVariableDeclaration[10821-10828]:SingleVariableDeclaration[10821-10828]"
    }, {
      "left" : "int column",
      "right" : "int column",
      "info" : "SingleVariableDeclaration[10830-10840]:SingleVariableDeclaration[10830-10840]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10842-11020]:Block[10842-11020]"
    }, {
      "left" : "setOpaque(selected);",
      "right" : "setOpaque(selected);",
      "info" : "ExpressionStatement[10850-10870]:ExpressionStatement[10850-10870]"
    }, {
      "left" : "if (value instanceof String)",
      "right" : "if (value instanceof String)",
      "info" : "IfStatement[10877-11014]:IfStatement[10877-11014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10906-11014]:Block[10906-11014]"
    }, {
      "left" : "String message = (String) value;",
      "right" : "String message = (String) value;",
      "info" : "VariableDeclarationStatement[10916-10948]:VariableDeclarationStatement[10916-10948]"
    }, {
      "left" : "myIssueLinkRenderer.appendTextWithLinks(message);",
      "right" : "myIssueLinkRenderer.appendTextWithLinks(message);",
      "info" : "ExpressionStatement[10957-11006]:ExpressionStatement[10957-11006]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[11030-11037]:Modifier[11030-11037]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11038-11044]:Modifier[11038-11044]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[11045-11050]:TYPE_DECLARATION_KIND[11045-11050]"
    }, {
      "left" : "MessageColumnInfo",
      "right" : "MessageColumnInfo",
      "info" : "SimpleName[11051-11068]:SimpleName[11051-11068]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11152-11158]:Modifier[11152-11158]"
    }, {
      "left" : "MessageColumnInfo",
      "right" : "MessageColumnInfo",
      "info" : "SimpleName[11159-11176]:SimpleName[11159-11176]"
    }, {
      "left" : "Project project",
      "right" : "Project project",
      "info" : "SingleVariableDeclaration[11177-11192]:SingleVariableDeclaration[11177-11192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11194-11306]:Block[11194-11306]"
    }, {
      "left" : "super(FileHistoryPanelImpl.COMMIT_MESSAGE_TITLE);",
      "right" : "super(FileHistoryPanelImpl.COMMIT_MESSAGE_TITLE);",
      "info" : "SuperConstructorInvocation[11202-11251]:SuperConstructorInvocation[11202-11251]"
    }, {
      "left" : "myRenderer = new MessageRenderer(project);",
      "right" : "myRenderer = new MessageRenderer(project);",
      "info" : "ExpressionStatement[11258-11300]:ExpressionStatement[11258-11300]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[11312-11321]:Modifier[11312-11321]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11322-11328]:SimpleType[11322-11328]"
    }, {
      "left" : "getDataOf",
      "right" : "getDataOf",
      "info" : "SimpleName[11329-11338]:SimpleName[11329-11338]"
    }, {
      "left" : "VcsFileRevision object",
      "right" : "VcsFileRevision object",
      "info" : "SingleVariableDeclaration[11339-11361]:SingleVariableDeclaration[11339-11361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11363-11875]:Block[11363-11875]"
    }, {
      "left" : "final String originalMessage = object.getCommitMessage();",
      "right" : "final String originalMessage = object.getCommitMessage();",
      "info" : "VariableDeclarationStatement[11371-11428]:VariableDeclarationStatement[11371-11428]"
    }, {
      "left" : "if (originalMessage != null)",
      "right" : "if (originalMessage != null)",
      "info" : "IfStatement[11435-11869]:IfStatement[11435-11869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11464-11829]:Block[11464-11829]"
    }, {
      "left" : "String commitMessage = originalMessage.trim();",
      "right" : "String commitMessage = originalMessage.trim();",
      "info" : "VariableDeclarationStatement[11474-11520]:VariableDeclarationStatement[11474-11520]"
    }, {
      "left" : "int index13 = commitMessage.indexOf('\\r');",
      "right" : "int index13 = commitMessage.indexOf('\\r');",
      "info" : "VariableDeclarationStatement[11529-11571]:VariableDeclarationStatement[11529-11571]"
    }, {
      "left" : "int index10 = commitMessage.indexOf('\\n');",
      "right" : "int index10 = commitMessage.indexOf('\\n');",
      "info" : "VariableDeclarationStatement[11580-11622]:VariableDeclarationStatement[11580-11622]"
    }, {
      "left" : "if (index10 < 0 && index13 < 0)",
      "right" : "if (index10 < 0 && index13 < 0)",
      "info" : "IfStatement[11632-11821]:IfStatement[11632-11821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11664-11707]:Block[11664-11707]"
    }, {
      "left" : "return commitMessage;",
      "right" : "return commitMessage;",
      "info" : "ReturnStatement[11676-11697]:ReturnStatement[11676-11697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11721-11821]:Block[11721-11821]"
    }, {
      "left" : "return commitMessage.substring(0, getSuitableIndex(index10, index13)) + \"...\";",
      "right" : "return commitMessage.substring(0, getSuitableIndex(index10, index13)) + \"...\";",
      "info" : "ReturnStatement[11733-11811]:ReturnStatement[11733-11811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11841-11869]:Block[11841-11869]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[11851-11861]:ReturnStatement[11851-11861]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11881-11890]:MarkerAnnotation[11881-11890]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11895-11901]:Modifier[11895-11901]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11902-11908]:SimpleType[11902-11908]"
    }, {
      "left" : "getPreferredStringValue",
      "right" : "getPreferredStringValue",
      "info" : "SimpleName[11909-11932]:SimpleName[11909-11932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11935-11990]:Block[11935-11990]"
    }, {
      "left" : "return StringUtil.repeatSymbol('a', 125);",
      "right" : "return StringUtil.repeatSymbol('a', 125);",
      "info" : "ReturnStatement[11943-11984]:ReturnStatement[11943-11984]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11996-12002]:Modifier[11996-12002]"
    }, {
      "left" : "TableCellRenderer",
      "right" : "TableCellRenderer",
      "info" : "SimpleType[12003-12020]:SimpleType[12003-12020]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[12021-12032]:SimpleName[12021-12032]"
    }, {
      "left" : "VcsFileRevision p0",
      "right" : "VcsFileRevision p0",
      "info" : "SingleVariableDeclaration[12033-12051]:SingleVariableDeclaration[12033-12051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12053-12085]:Block[12053-12085]"
    }, {
      "left" : "return myRenderer;",
      "right" : "return myRenderer;",
      "info" : "ReturnStatement[12061-12079]:ReturnStatement[12061-12079]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[12094-12101]:Modifier[12094-12101]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12102-12108]:Modifier[12102-12108]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12109-12112]:PrimitiveType[12109-12112]"
    }, {
      "left" : "getSuitableIndex",
      "right" : "getSuitableIndex",
      "info" : "SimpleName[12113-12129]:SimpleName[12113-12129]"
    }, {
      "left" : "int index10",
      "right" : "int index10",
      "info" : "SingleVariableDeclaration[12130-12141]:SingleVariableDeclaration[12130-12141]"
    }, {
      "left" : "int index13",
      "right" : "int index13",
      "info" : "SingleVariableDeclaration[12143-12154]:SingleVariableDeclaration[12143-12154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12156-12326]:Block[12156-12326]"
    }, {
      "left" : "if (index10 < 0)",
      "right" : "if (index10 < 0)",
      "info" : "IfStatement[12162-12322]:IfStatement[12162-12322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12179-12208]:Block[12179-12208]"
    }, {
      "left" : "return index13;",
      "right" : "return index13;",
      "info" : "ReturnStatement[12187-12202]:ReturnStatement[12187-12202]"
    }, {
      "left" : "if (index13 < 0)",
      "right" : "if (index13 < 0)",
      "info" : "IfStatement[12218-12322]:IfStatement[12218-12322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12235-12264]:Block[12235-12264]"
    }, {
      "left" : "return index10;",
      "right" : "return index10;",
      "info" : "ReturnStatement[12243-12258]:ReturnStatement[12243-12258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12274-12322]:Block[12274-12322]"
    }, {
      "left" : "return Math.min(index10, index13);",
      "right" : "return Math.min(index10, index13);",
      "info" : "ReturnStatement[12282-12316]:ReturnStatement[12282-12316]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12453-12459]:Modifier[12453-12459]"
    }, {
      "left" : "FileHistoryPanelImpl",
      "right" : "FileHistoryPanelImpl",
      "info" : "SimpleName[12460-12480]:SimpleName[12460-12480]"
    }, {
      "left" : "AbstractVcs vcs",
      "right" : "AbstractVcs vcs",
      "info" : "SingleVariableDeclaration[12481-12496]:SingleVariableDeclaration[12481-12496]"
    }, {
      "left" : "FilePath filePath",
      "right" : "FilePath filePath",
      "info" : "SingleVariableDeclaration[12528-12545]:SingleVariableDeclaration[12528-12545]"
    }, {
      "left" : "VcsHistorySession session",
      "right" : "VcsHistorySession session",
      "info" : "SingleVariableDeclaration[12547-12572]:SingleVariableDeclaration[12547-12572]"
    }, {
      "left" : "VcsHistoryProvider provider",
      "right" : "VcsHistoryProvider provider",
      "info" : "SingleVariableDeclaration[12604-12631]:SingleVariableDeclaration[12604-12631]"
    }, {
      "left" : "ContentManager contentManager",
      "right" : "ContentManager contentManager",
      "info" : "SingleVariableDeclaration[12663-12692]:SingleVariableDeclaration[12663-12692]"
    }, {
      "left" : "final FileHistoryRefresherI refresherI",
      "right" : "final FileHistoryRefresherI refresherI",
      "info" : "SingleVariableDeclaration[12694-12732]:SingleVariableDeclaration[12694-12732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12734-12818]:Block[12734-12818]"
    }, {
      "left" : "this(vcs, filePath, session, provider, contentManager, refresherI, false);",
      "right" : "this(vcs, filePath, session, provider, contentManager, refresherI, false);",
      "info" : "ConstructorInvocation[12740-12814]:ConstructorInvocation[12740-12814]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12822-12828]:Modifier[12822-12828]"
    }, {
      "left" : "FileHistoryPanelImpl",
      "right" : "FileHistoryPanelImpl",
      "info" : "SimpleName[12829-12849]:SimpleName[12829-12849]"
    }, {
      "left" : "AbstractVcs vcs",
      "right" : "AbstractVcs vcs",
      "info" : "SingleVariableDeclaration[12850-12865]:SingleVariableDeclaration[12850-12865]"
    }, {
      "left" : "@NotNull FilePath filePath",
      "right" : "@NotNull FilePath filePath",
      "info" : "SingleVariableDeclaration[12897-12923]:SingleVariableDeclaration[12897-12923]"
    }, {
      "left" : "VcsHistorySession session",
      "right" : "VcsHistorySession session",
      "info" : "SingleVariableDeclaration[12955-12980]:SingleVariableDeclaration[12955-12980]"
    }, {
      "left" : "VcsHistoryProvider provider",
      "right" : "VcsHistoryProvider provider",
      "info" : "SingleVariableDeclaration[13012-13039]:SingleVariableDeclaration[13012-13039]"
    }, {
      "left" : "ContentManager contentManager",
      "right" : "ContentManager contentManager",
      "info" : "SingleVariableDeclaration[13071-13100]:SingleVariableDeclaration[13071-13100]"
    }, {
      "left" : "@NotNull FileHistoryRefresherI refresherI",
      "right" : "@NotNull FileHistoryRefresherI refresherI",
      "info" : "SingleVariableDeclaration[13132-13173]:SingleVariableDeclaration[13132-13173]"
    }, {
      "left" : "final boolean isStaticEmbedded",
      "right" : "final boolean isStaticEmbedded",
      "info" : "SingleVariableDeclaration[13205-13235]:SingleVariableDeclaration[13205-13235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13237-16922]:Block[13237-16922]"
    }, {
      "left" : "super(contentManager, provider.getHelpId() != null ? provider.getHelpId() : \"reference.versionControl.toolwindow.history\", ! isStaticEmbedded);",
      "right" : "super(contentManager, provider.getHelpId() != null ? provider.getHelpId() : \"reference.versionControl.toolwindow.history\", ! isStaticEmbedded);",
      "info" : "SuperConstructorInvocation[13243-13386]:SuperConstructorInvocation[13243-13386]"
    }, {
      "left" : "myProject = vcs.getProject();",
      "right" : "myProject = vcs.getProject();",
      "info" : "ExpressionStatement[13391-13420]:ExpressionStatement[13391-13420]"
    }, {
      "left" : "myIsStaticAndEmbedded = false;",
      "right" : "myIsStaticAndEmbedded = false;",
      "info" : "ExpressionStatement[13425-13455]:ExpressionStatement[13425-13455]"
    }, {
      "left" : "myVcs = vcs;",
      "right" : "myVcs = vcs;",
      "info" : "ExpressionStatement[13460-13472]:ExpressionStatement[13460-13472]"
    }, {
      "left" : "myProvider = provider;",
      "right" : "myProvider = provider;",
      "info" : "ExpressionStatement[13477-13499]:ExpressionStatement[13477-13499]"
    }, {
      "left" : "myAnnotationProvider = myVcs.getCachingAnnotationProvider();",
      "right" : "myAnnotationProvider = myVcs.getCachingAnnotationProvider();",
      "info" : "ExpressionStatement[13504-13564]:ExpressionStatement[13504-13564]"
    }, {
      "left" : "myRefresherI = refresherI;",
      "right" : "myRefresherI = refresherI;",
      "info" : "ExpressionStatement[13569-13595]:ExpressionStatement[13569-13595]"
    }, {
      "left" : "myHistorySession = session;",
      "right" : "myHistorySession = session;",
      "info" : "ExpressionStatement[13600-13627]:ExpressionStatement[13600-13627]"
    }, {
      "left" : "myFilePath = filePath;",
      "right" : "myFilePath = filePath;",
      "info" : "ExpressionStatement[13632-13654]:ExpressionStatement[13632-13654]"
    }, {
      "left" : "DiffFromHistoryHandler customDiffHandler = provider.getHistoryDiffHandler();",
      "right" : "DiffFromHistoryHandler customDiffHandler = provider.getHistoryDiffHandler();",
      "info" : "VariableDeclarationStatement[13660-13736]:VariableDeclarationStatement[13660-13736]"
    }, {
      "left" : "myDiffHandler = customDiffHandler == null ? new StandardDiffFromHistoryHandler() : customDiffHandler;",
      "right" : "myDiffHandler = customDiffHandler == null ? new StandardDiffFromHistoryHandler() : customDiffHandler;",
      "info" : "ExpressionStatement[13741-13842]:ExpressionStatement[13741-13842]"
    }, {
      "left" : "final DualViewColumnInfo[] columns = createColumnList(myVcs.getProject(), provider, session);",
      "right" : "final DualViewColumnInfo[] columns = createColumnList(myVcs.getProject(), provider, session);",
      "info" : "VariableDeclarationStatement[13848-13941]:VariableDeclarationStatement[13848-13941]"
    }, {
      "left" : "myComments = new JEditorPane(UIUtil.HTML_MIME, \"\");",
      "right" : "myComments = new JEditorPane(UIUtil.HTML_MIME, \"\");",
      "info" : "ExpressionStatement[13947-13998]:ExpressionStatement[13947-13998]"
    }, {
      "left" : "myComments.setPreferredSize(new Dimension(150, 100));",
      "right" : "myComments.setPreferredSize(new Dimension(150, 100));",
      "info" : "ExpressionStatement[14003-14056]:ExpressionStatement[14003-14056]"
    }, {
      "left" : "myComments.setEditable(false);",
      "right" : "myComments.setEditable(false);",
      "info" : "ExpressionStatement[14061-14091]:ExpressionStatement[14061-14091]"
    }, {
      "left" : "myComments.setBackground(UIUtil.getComboBoxDisabledBackground());",
      "right" : "myComments.setBackground(UIUtil.getComboBoxDisabledBackground());",
      "info" : "ExpressionStatement[14096-14161]:ExpressionStatement[14096-14161]"
    }, {
      "left" : "myComments.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE);",
      "right" : "myComments.addHyperlinkListener(BrowserHyperlinkListener.INSTANCE);",
      "info" : "ExpressionStatement[14166-14233]:ExpressionStatement[14166-14233]"
    }, {
      "left" : "myRevisionsOrder = new HashMap<VcsRevisionNumber, Integer>();",
      "right" : "myRevisionsOrder = new HashMap<VcsRevisionNumber, Integer>();",
      "info" : "ExpressionStatement[14239-14300]:ExpressionStatement[14239-14300]"
    }, {
      "left" : "refreshRevisionsOrder();",
      "right" : "refreshRevisionsOrder();",
      "info" : "ExpressionStatement[14305-14329]:ExpressionStatement[14305-14329]"
    }, {
      "left" : "replaceTransferable();",
      "right" : "replaceTransferable();",
      "info" : "ExpressionStatement[14335-14357]:ExpressionStatement[14335-14357]"
    }, {
      "left" : "myUpdateAlarm = new Alarm(Alarm.ThreadToUse.POOLED_THREAD, myProject);",
      "right" : "myUpdateAlarm = new Alarm(Alarm.ThreadToUse.POOLED_THREAD, myProject);",
      "info" : "ExpressionStatement[14363-14433]:ExpressionStatement[14363-14433]"
    }, {
      "left" : "final HistoryAsTreeProvider treeHistoryProvider = myHistorySession.getHistoryAsTreeProvider();",
      "right" : "final HistoryAsTreeProvider treeHistoryProvider = myHistorySession.getHistoryAsTreeProvider();",
      "info" : "VariableDeclarationStatement[14439-14533]:VariableDeclarationStatement[14439-14533]"
    }, {
      "left" : "@NonNls String storageKey = \"FileHistory.\" + provider.getClass().getName();",
      "right" : "@NonNls String storageKey = \"FileHistory.\" + provider.getClass().getName();",
      "info" : "VariableDeclarationStatement[14539-14614]:VariableDeclarationStatement[14539-14614]"
    }, {
      "left" : "if (treeHistoryProvider != null)",
      "right" : "if (treeHistoryProvider != null)",
      "info" : "IfStatement[14619-15122]:IfStatement[14619-15122]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14652-14868]:Block[14652-14868]"
    }, {
      "left" : "myDualView = new DualView(new TreeNodeOnVcsRevision(null, treeHistoryProvider.createTreeOn(myHistorySession.getRevisionList())),\n                                columns, storageKey, myVcs.getProject());",
      "right" : "myDualView = new DualView(new TreeNodeOnVcsRevision(null, treeHistoryProvider.createTreeOn(myHistorySession.getRevisionList())),\n                                columns, storageKey, myVcs.getProject());",
      "info" : "ExpressionStatement[14660-14862]:ExpressionStatement[14660-14862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14878-15122]:Block[14878-15122]"
    }, {
      "left" : "myDualView = new DualView(new TreeNodeOnVcsRevision(null, wrapWithTreeElements(myHistorySession.getRevisionList())), columns,\n                                storageKey, myVcs.getProject());",
      "right" : "myDualView = new DualView(new TreeNodeOnVcsRevision(null, wrapWithTreeElements(myHistorySession.getRevisionList())), columns,\n                                storageKey, myVcs.getProject());",
      "info" : "ExpressionStatement[14886-15076]:ExpressionStatement[14886-15076]"
    }, {
      "left" : "myDualView.switchToTheFlatMode();",
      "right" : "myDualView.switchToTheFlatMode();",
      "info" : "ExpressionStatement[15083-15116]:ExpressionStatement[15083-15116]"
    }, {
      "left" : "new TableSpeedSearch(myDualView.getFlatView()).setComparator(new SpeedSearchComparator(false));",
      "right" : "new TableSpeedSearch(myDualView.getFlatView()).setComparator(new SpeedSearchComparator(false));",
      "info" : "ExpressionStatement[15127-15222]:ExpressionStatement[15127-15222]"
    }, {
      "left" : "final TableLinkMouseListener listener = new TableLinkMouseListener();",
      "right" : "final TableLinkMouseListener listener = new TableLinkMouseListener();",
      "info" : "VariableDeclarationStatement[15227-15296]:VariableDeclarationStatement[15227-15296]"
    }, {
      "left" : "listener.installOn(myDualView.getFlatView());",
      "right" : "listener.installOn(myDualView.getFlatView());",
      "info" : "ExpressionStatement[15301-15346]:ExpressionStatement[15301-15346]"
    }, {
      "left" : "listener.installOn(myDualView.getTreeView());",
      "right" : "listener.installOn(myDualView.getTreeView());",
      "info" : "ExpressionStatement[15351-15396]:ExpressionStatement[15351-15396]"
    }, {
      "left" : "setEmptyText(CommonBundle.getLoadingTreeNodeText());",
      "right" : "setEmptyText(CommonBundle.getLoadingTreeNodeText());",
      "info" : "ExpressionStatement[15401-15453]:ExpressionStatement[15401-15453]"
    }, {
      "left" : "createDualView();",
      "right" : "createDualView();",
      "info" : "ExpressionStatement[15459-15476]:ExpressionStatement[15459-15476]"
    }, {
      "left" : "if (isStaticEmbedded)",
      "right" : "if (isStaticEmbedded)",
      "info" : "IfStatement[15481-15558]:IfStatement[15481-15558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15503-15558]:Block[15503-15558]"
    }, {
      "left" : "setIsStaticAndEmbedded(isStaticEmbedded);",
      "right" : "setIsStaticAndEmbedded(isStaticEmbedded);",
      "info" : "ExpressionStatement[15511-15552]:ExpressionStatement[15511-15552]"
    }, {
      "left" : "myPopupActions = createPopupActions();",
      "right" : "myPopupActions = createPopupActions();",
      "info" : "ExpressionStatement[15564-15602]:ExpressionStatement[15564-15602]"
    }, {
      "left" : "myHistoryPanelRefresh = new AsynchConsumer<VcsHistorySession>() {\n      public void finished() {\n        if (treeHistoryProvider != null) {\n          // scroll tree view to most recent change\n          final TreeTableView treeView = myDualView.getTreeView();\n          final int lastRow = treeView.getRowCount() - 1;\n          if (lastRow >= 0) {\n            treeView.scrollRectToVisible(treeView.getCellRect(lastRow, 0, true));\n          }\n        }\n        myInRefresh = false;\n        myTargetSelection = null;\n\n        mySplitter.revalidate();\n        mySplitter.repaint();\n      }\n      public void consume(VcsHistorySession vcsHistorySession) {\n        FileHistoryPanelImpl.this.refresh(vcsHistorySession);\n      }\n    };",
      "right" : "myHistoryPanelRefresh = new AsynchConsumer<VcsHistorySession>() {\n      public void finished() {\n        if (treeHistoryProvider != null) {\n          // scroll tree view to most recent change\n          final TreeTableView treeView = myDualView.getTreeView();\n          final int lastRow = treeView.getRowCount() - 1;\n          if (lastRow >= 0) {\n            treeView.scrollRectToVisible(treeView.getCellRect(lastRow, 0, true));\n          }\n        }\n        myInRefresh = false;\n        myTargetSelection = null;\n\n        mySplitter.revalidate();\n        mySplitter.repaint();\n      }\n      public void consume(VcsHistorySession vcsHistorySession) {\n        FileHistoryPanelImpl.this.refresh(vcsHistorySession);\n      }\n    };",
      "info" : "ExpressionStatement[15608-16335]:ExpressionStatement[15608-16335]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15680-15686]:Modifier[15680-15686]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[15687-15691]:PrimitiveType[15687-15691]"
    }, {
      "left" : "finished",
      "right" : "finished",
      "info" : "SimpleName[15692-15700]:SimpleName[15692-15700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15703-16193]:Block[15703-16193]"
    }, {
      "left" : "if (treeHistoryProvider != null)",
      "right" : "if (treeHistoryProvider != null)",
      "info" : "IfStatement[15713-16058]:IfStatement[15713-16058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15746-16058]:Block[15746-16058]"
    }, {
      "left" : "final TreeTableView treeView = myDualView.getTreeView();",
      "right" : "final TreeTableView treeView = myDualView.getTreeView();",
      "info" : "VariableDeclarationStatement[15810-15866]:VariableDeclarationStatement[15810-15866]"
    }, {
      "left" : "final int lastRow = treeView.getRowCount() - 1;",
      "right" : "final int lastRow = treeView.getRowCount() - 1;",
      "info" : "VariableDeclarationStatement[15877-15924]:VariableDeclarationStatement[15877-15924]"
    }, {
      "left" : "if (lastRow >= 0)",
      "right" : "if (lastRow >= 0)",
      "info" : "IfStatement[15935-16048]:IfStatement[15935-16048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15953-16048]:Block[15953-16048]"
    }, {
      "left" : "treeView.scrollRectToVisible(treeView.getCellRect(lastRow, 0, true));",
      "right" : "treeView.scrollRectToVisible(treeView.getCellRect(lastRow, 0, true));",
      "info" : "ExpressionStatement[15967-16036]:ExpressionStatement[15967-16036]"
    }, {
      "left" : "myInRefresh = false;",
      "right" : "myInRefresh = false;",
      "info" : "ExpressionStatement[16067-16087]:ExpressionStatement[16067-16087]"
    }, {
      "left" : "myTargetSelection = null;",
      "right" : "myTargetSelection = null;",
      "info" : "ExpressionStatement[16096-16121]:ExpressionStatement[16096-16121]"
    }, {
      "left" : "mySplitter.revalidate();",
      "right" : "mySplitter.revalidate();",
      "info" : "ExpressionStatement[16131-16155]:ExpressionStatement[16131-16155]"
    }, {
      "left" : "mySplitter.repaint();",
      "right" : "mySplitter.repaint();",
      "info" : "ExpressionStatement[16164-16185]:ExpressionStatement[16164-16185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16200-16206]:Modifier[16200-16206]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16207-16211]:PrimitiveType[16207-16211]"
    }, {
      "left" : "consume",
      "right" : "consume",
      "info" : "SimpleName[16212-16219]:SimpleName[16212-16219]"
    }, {
      "left" : "VcsHistorySession vcsHistorySession",
      "right" : "VcsHistorySession vcsHistorySession",
      "info" : "SingleVariableDeclaration[16220-16255]:SingleVariableDeclaration[16220-16255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16257-16328]:Block[16257-16328]"
    }, {
      "left" : "FileHistoryPanelImpl.this.refresh(vcsHistorySession);",
      "right" : "FileHistoryPanelImpl.this.refresh(vcsHistorySession);",
      "info" : "ExpressionStatement[16267-16320]:ExpressionStatement[16267-16320]"
    }, {
      "left" : "myUpdateAlarm.addRequest(new Runnable() {\n      public void run() {\n        if (myVcs.getProject().isDisposed()) {\n          return;\n        }\n        boolean refresh = ApplicationManager.getApplication().isActive()\n          && !myInRefresh\n          && myHistorySession.shouldBeRefreshed();\n\n        myUpdateAlarm.cancelAllRequests();\n        if (myUpdateAlarm.isDisposed()) return;\n        myUpdateAlarm.addRequest(this, 20000);\n\n        if (refresh) {\n          refreshImpl(true);\n        }\n      }\n    }, 20000);",
      "right" : "myUpdateAlarm.addRequest(new Runnable() {\n      public void run() {\n        if (myVcs.getProject().isDisposed()) {\n          return;\n        }\n        boolean refresh = ApplicationManager.getApplication().isActive()\n          && !myInRefresh\n          && myHistorySession.shouldBeRefreshed();\n\n        myUpdateAlarm.cancelAllRequests();\n        if (myUpdateAlarm.isDisposed()) return;\n        myUpdateAlarm.addRequest(this, 20000);\n\n        if (refresh) {\n          refreshImpl(true);\n        }\n      }\n    }, 20000);",
      "info" : "ExpressionStatement[16369-16886]:ExpressionStatement[16369-16886]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16417-16423]:Modifier[16417-16423]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16424-16428]:PrimitiveType[16424-16428]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[16429-16432]:SimpleName[16429-16432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16435-16871]:Block[16435-16871]"
    }, {
      "left" : "if (myVcs.getProject().isDisposed())",
      "right" : "if (myVcs.getProject().isDisposed())",
      "info" : "IfStatement[16445-16511]:IfStatement[16445-16511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16482-16511]:Block[16482-16511]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[16494-16501]:ReturnStatement[16494-16501]"
    }, {
      "left" : "boolean refresh = ApplicationManager.getApplication().isActive()\n          && !myInRefresh\n          && myHistorySession.shouldBeRefreshed();",
      "right" : "boolean refresh = ApplicationManager.getApplication().isActive()\n          && !myInRefresh\n          && myHistorySession.shouldBeRefreshed();",
      "info" : "VariableDeclarationStatement[16520-16661]:VariableDeclarationStatement[16520-16661]"
    }, {
      "left" : "myUpdateAlarm.cancelAllRequests();",
      "right" : "myUpdateAlarm.cancelAllRequests();",
      "info" : "ExpressionStatement[16671-16705]:ExpressionStatement[16671-16705]"
    }, {
      "left" : "if (myUpdateAlarm.isDisposed())",
      "right" : "if (myUpdateAlarm.isDisposed())",
      "info" : "IfStatement[16714-16753]:IfStatement[16714-16753]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[16746-16753]:ReturnStatement[16746-16753]"
    }, {
      "left" : "myUpdateAlarm.addRequest(this, 20000);",
      "right" : "myUpdateAlarm.addRequest(this, 20000);",
      "info" : "ExpressionStatement[16762-16800]:ExpressionStatement[16762-16800]"
    }, {
      "left" : "if (refresh)",
      "right" : "if (refresh)",
      "info" : "IfStatement[16810-16863]:IfStatement[16810-16863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16823-16863]:Block[16823-16863]"
    }, {
      "left" : "refreshImpl(true);",
      "right" : "refreshImpl(true);",
      "info" : "ExpressionStatement[16835-16853]:ExpressionStatement[16835-16853]"
    }, {
      "left" : "init();",
      "right" : "init();",
      "info" : "ExpressionStatement[16892-16899]:ExpressionStatement[16892-16899]"
    }, {
      "left" : "chooseView();",
      "right" : "chooseView();",
      "info" : "ExpressionStatement[16905-16918]:ExpressionStatement[16905-16918]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16926-16933]:Modifier[16926-16933]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16934-16938]:PrimitiveType[16934-16938]"
    }, {
      "left" : "replaceTransferable",
      "right" : "replaceTransferable",
      "info" : "SimpleName[16939-16958]:SimpleName[16939-16958]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16961-18875]:Block[16961-18875]"
    }, {
      "left" : "final TransferHandler originalTransferHandler = myComments.getTransferHandler();",
      "right" : "final TransferHandler originalTransferHandler = myComments.getTransferHandler();",
      "info" : "VariableDeclarationStatement[16967-17047]:VariableDeclarationStatement[16967-17047]"
    }, {
      "left" : "final TransferHandler newHandler = new TransferHandler(\"copy\") {\n      @Override\n      public void exportAsDrag(final JComponent comp, final InputEvent e, final int action) {\n        originalTransferHandler.exportAsDrag(comp, e, action);\n      }\n\n      @Override\n      public void exportToClipboard(final JComponent comp, final Clipboard clip, final int action) throws IllegalStateException {\n        if ((action == COPY || action == MOVE)\n                && (getSourceActions(comp) & action) != 0) {\n\n          String selectedText = myComments.getSelectedText();\n          final Transferable t;\n          if (selectedText == null) {\n            t = new TextTransferable(myComments.getText(), myOriginalComment);\n          }\n          else {\n            t = new TextTransferable(selectedText);\n          }\n          try {\n            clip.setContents(t, null);\n            exportDone(comp, t, action);\n            return;\n          }\n          catch (IllegalStateException ise) {\n            exportDone(comp, t, NONE);\n            throw ise;\n          }\n        }\n\n        exportDone(comp, null, NONE);\n      }\n\n      @Override\n      public boolean importData(final JComponent comp, final Transferable t) {\n        return originalTransferHandler.importData(comp, t);\n      }\n\n      @Override\n      public boolean canImport(final JComponent comp, final DataFlavor[] transferFlavors) {\n        return originalTransferHandler.canImport(comp, transferFlavors);\n      }\n\n      @Override\n      public int getSourceActions(final JComponent c) {\n        return originalTransferHandler.getSourceActions(c);\n      }\n\n      @Override\n      public Icon getVisualRepresentation(final Transferable t) {\n        return originalTransferHandler.getVisualRepresentation(t);\n      }\n    };",
      "right" : "final TransferHandler newHandler = new TransferHandler(\"copy\") {\n      @Override\n      public void exportAsDrag(final JComponent comp, final InputEvent e, final int action) {\n        originalTransferHandler.exportAsDrag(comp, e, action);\n      }\n\n      @Override\n      public void exportToClipboard(final JComponent comp, final Clipboard clip, final int action) throws IllegalStateException {\n        if ((action == COPY || action == MOVE)\n                && (getSourceActions(comp) & action) != 0) {\n\n          String selectedText = myComments.getSelectedText();\n          final Transferable t;\n          if (selectedText == null) {\n            t = new TextTransferable(myComments.getText(), myOriginalComment);\n          }\n          else {\n            t = new TextTransferable(selectedText);\n          }\n          try {\n            clip.setContents(t, null);\n            exportDone(comp, t, action);\n            return;\n          }\n          catch (IllegalStateException ise) {\n            exportDone(comp, t, NONE);\n            throw ise;\n          }\n        }\n\n        exportDone(comp, null, NONE);\n      }\n\n      @Override\n      public boolean importData(final JComponent comp, final Transferable t) {\n        return originalTransferHandler.importData(comp, t);\n      }\n\n      @Override\n      public boolean canImport(final JComponent comp, final DataFlavor[] transferFlavors) {\n        return originalTransferHandler.canImport(comp, transferFlavors);\n      }\n\n      @Override\n      public int getSourceActions(final JComponent c) {\n        return originalTransferHandler.getSourceActions(c);\n      }\n\n      @Override\n      public Icon getVisualRepresentation(final Transferable t) {\n        return originalTransferHandler.getVisualRepresentation(t);\n      }\n    };",
      "info" : "VariableDeclarationStatement[17053-18823]:VariableDeclarationStatement[17053-18823]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17124-17133]:MarkerAnnotation[17124-17133]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17140-17146]:Modifier[17140-17146]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17147-17151]:PrimitiveType[17147-17151]"
    }, {
      "left" : "exportAsDrag",
      "right" : "exportAsDrag",
      "info" : "SimpleName[17152-17164]:SimpleName[17152-17164]"
    }, {
      "left" : "final JComponent comp",
      "right" : "final JComponent comp",
      "info" : "SingleVariableDeclaration[17165-17186]:SingleVariableDeclaration[17165-17186]"
    }, {
      "left" : "final InputEvent e",
      "right" : "final InputEvent e",
      "info" : "SingleVariableDeclaration[17188-17206]:SingleVariableDeclaration[17188-17206]"
    }, {
      "left" : "final int action",
      "right" : "final int action",
      "info" : "SingleVariableDeclaration[17208-17224]:SingleVariableDeclaration[17208-17224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17226-17298]:Block[17226-17298]"
    }, {
      "left" : "originalTransferHandler.exportAsDrag(comp, e, action);",
      "right" : "originalTransferHandler.exportAsDrag(comp, e, action);",
      "info" : "ExpressionStatement[17236-17290]:ExpressionStatement[17236-17290]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17306-17315]:MarkerAnnotation[17306-17315]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17322-17328]:Modifier[17322-17328]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17329-17333]:PrimitiveType[17329-17333]"
    }, {
      "left" : "exportToClipboard",
      "right" : "exportToClipboard",
      "info" : "SimpleName[17334-17351]:SimpleName[17334-17351]"
    }, {
      "left" : "final JComponent comp",
      "right" : "final JComponent comp",
      "info" : "SingleVariableDeclaration[17352-17373]:SingleVariableDeclaration[17352-17373]"
    }, {
      "left" : "final Clipboard clip",
      "right" : "final Clipboard clip",
      "info" : "SingleVariableDeclaration[17375-17395]:SingleVariableDeclaration[17375-17395]"
    }, {
      "left" : "final int action",
      "right" : "final int action",
      "info" : "SingleVariableDeclaration[17397-17413]:SingleVariableDeclaration[17397-17413]"
    }, {
      "left" : "IllegalStateException",
      "right" : "IllegalStateException",
      "info" : "SimpleType[17422-17443]:SimpleType[17422-17443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17444-18163]:Block[17444-18163]"
    }, {
      "left" : "if ((action == COPY || action == MOVE)\n                && (getSourceActions(comp) & action) != 0)",
      "right" : "if ((action == COPY || action == MOVE)\n                && (getSourceActions(comp) & action) != 0)",
      "info" : "IfStatement[17454-18116]:IfStatement[17454-18116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17552-18116]:Block[17552-18116]"
    }, {
      "left" : "String selectedText = myComments.getSelectedText();",
      "right" : "String selectedText = myComments.getSelectedText();",
      "info" : "VariableDeclarationStatement[17565-17616]:VariableDeclarationStatement[17565-17616]"
    }, {
      "left" : "final Transferable t;",
      "right" : "final Transferable t;",
      "info" : "VariableDeclarationStatement[17627-17648]:VariableDeclarationStatement[17627-17648]"
    }, {
      "left" : "if (selectedText == null)",
      "right" : "if (selectedText == null)",
      "info" : "IfStatement[17659-17858]:IfStatement[17659-17858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17685-17777]:Block[17685-17777]"
    }, {
      "left" : "t = new TextTransferable(myComments.getText(), myOriginalComment);",
      "right" : "t = new TextTransferable(myComments.getText(), myOriginalComment);",
      "info" : "ExpressionStatement[17699-17765]:ExpressionStatement[17699-17765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17793-17858]:Block[17793-17858]"
    }, {
      "left" : "t = new TextTransferable(selectedText);",
      "right" : "t = new TextTransferable(selectedText);",
      "info" : "ExpressionStatement[17807-17846]:ExpressionStatement[17807-17846]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17869-18106]:TryStatement[17869-18106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17873-17986]:Block[17873-17986]"
    }, {
      "left" : "clip.setContents(t, null);",
      "right" : "clip.setContents(t, null);",
      "info" : "ExpressionStatement[17887-17913]:ExpressionStatement[17887-17913]"
    }, {
      "left" : "exportDone(comp, t, action);",
      "right" : "exportDone(comp, t, action);",
      "info" : "ExpressionStatement[17926-17954]:ExpressionStatement[17926-17954]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[17967-17974]:ReturnStatement[17967-17974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18031-18106]:Block[18031-18106]"
    }, {
      "left" : "exportDone(comp, t, NONE);",
      "right" : "exportDone(comp, t, NONE);",
      "info" : "ExpressionStatement[18045-18071]:ExpressionStatement[18045-18071]"
    }, {
      "left" : "throw ise;",
      "right" : "throw ise;",
      "info" : "ThrowStatement[18084-18094]:ThrowStatement[18084-18094]"
    }, {
      "left" : "exportDone(comp, null, NONE);",
      "right" : "exportDone(comp, null, NONE);",
      "info" : "ExpressionStatement[18126-18155]:ExpressionStatement[18126-18155]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18171-18180]:MarkerAnnotation[18171-18180]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18187-18193]:Modifier[18187-18193]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18194-18201]:PrimitiveType[18194-18201]"
    }, {
      "left" : "importData",
      "right" : "importData",
      "info" : "SimpleName[18202-18212]:SimpleName[18202-18212]"
    }, {
      "left" : "final JComponent comp",
      "right" : "final JComponent comp",
      "info" : "SingleVariableDeclaration[18213-18234]:SingleVariableDeclaration[18213-18234]"
    }, {
      "left" : "final Transferable t",
      "right" : "final Transferable t",
      "info" : "SingleVariableDeclaration[18236-18256]:SingleVariableDeclaration[18236-18256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18258-18327]:Block[18258-18327]"
    }, {
      "left" : "return originalTransferHandler.importData(comp, t);",
      "right" : "return originalTransferHandler.importData(comp, t);",
      "info" : "ReturnStatement[18268-18319]:ReturnStatement[18268-18319]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18335-18344]:MarkerAnnotation[18335-18344]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18351-18357]:Modifier[18351-18357]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18358-18365]:PrimitiveType[18358-18365]"
    }, {
      "left" : "canImport",
      "right" : "canImport",
      "info" : "SimpleName[18366-18375]:SimpleName[18366-18375]"
    }, {
      "left" : "final JComponent comp",
      "right" : "final JComponent comp",
      "info" : "SingleVariableDeclaration[18376-18397]:SingleVariableDeclaration[18376-18397]"
    }, {
      "left" : "final DataFlavor[] transferFlavors",
      "right" : "final DataFlavor[] transferFlavors",
      "info" : "SingleVariableDeclaration[18399-18433]:SingleVariableDeclaration[18399-18433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18435-18517]:Block[18435-18517]"
    }, {
      "left" : "return originalTransferHandler.canImport(comp, transferFlavors);",
      "right" : "return originalTransferHandler.canImport(comp, transferFlavors);",
      "info" : "ReturnStatement[18445-18509]:ReturnStatement[18445-18509]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18525-18534]:MarkerAnnotation[18525-18534]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18541-18547]:Modifier[18541-18547]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[18548-18551]:PrimitiveType[18548-18551]"
    }, {
      "left" : "getSourceActions",
      "right" : "getSourceActions",
      "info" : "SimpleName[18552-18568]:SimpleName[18552-18568]"
    }, {
      "left" : "final JComponent c",
      "right" : "final JComponent c",
      "info" : "SingleVariableDeclaration[18569-18587]:SingleVariableDeclaration[18569-18587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18589-18658]:Block[18589-18658]"
    }, {
      "left" : "return originalTransferHandler.getSourceActions(c);",
      "right" : "return originalTransferHandler.getSourceActions(c);",
      "info" : "ReturnStatement[18599-18650]:ReturnStatement[18599-18650]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[18666-18675]:MarkerAnnotation[18666-18675]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18682-18688]:Modifier[18682-18688]"
    }, {
      "left" : "Icon",
      "right" : "Icon",
      "info" : "SimpleType[18689-18693]:SimpleType[18689-18693]"
    }, {
      "left" : "getVisualRepresentation",
      "right" : "getVisualRepresentation",
      "info" : "SimpleName[18694-18717]:SimpleName[18694-18717]"
    }, {
      "left" : "final Transferable t",
      "right" : "final Transferable t",
      "info" : "SingleVariableDeclaration[18718-18738]:SingleVariableDeclaration[18718-18738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18740-18816]:Block[18740-18816]"
    }, {
      "left" : "return originalTransferHandler.getVisualRepresentation(t);",
      "right" : "return originalTransferHandler.getVisualRepresentation(t);",
      "info" : "ReturnStatement[18750-18808]:ReturnStatement[18750-18808]"
    }, {
      "left" : "myComments.setTransferHandler(newHandler);",
      "right" : "myComments.setTransferHandler(newHandler);",
      "info" : "ExpressionStatement[18829-18871]:ExpressionStatement[18829-18871]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[18879-18886]:Modifier[18879-18886]"
    }, {
      "left" : "DualViewColumnInfo[]",
      "right" : "DualViewColumnInfo[]",
      "info" : "ArrayType[18887-18907]:ArrayType[18887-18907]"
    }, {
      "left" : "createColumnList",
      "right" : "createColumnList",
      "info" : "SimpleName[18908-18924]:SimpleName[18908-18924]"
    }, {
      "left" : "Project project",
      "right" : "Project project",
      "info" : "SingleVariableDeclaration[18925-18940]:SingleVariableDeclaration[18925-18940]"
    }, {
      "left" : "VcsHistoryProvider provider",
      "right" : "VcsHistoryProvider provider",
      "info" : "SingleVariableDeclaration[18942-18969]:SingleVariableDeclaration[18942-18969]"
    }, {
      "left" : "final VcsHistorySession session",
      "right" : "final VcsHistorySession session",
      "info" : "SingleVariableDeclaration[18971-19002]:SingleVariableDeclaration[18971-19002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19004-19662]:Block[19004-19662]"
    }, {
      "left" : "final VcsDependentHistoryComponents components = provider.getUICustomization(session, this);",
      "right" : "final VcsDependentHistoryComponents components = provider.getUICustomization(session, this);",
      "info" : "VariableDeclarationStatement[19010-19102]:VariableDeclarationStatement[19010-19102]"
    }, {
      "left" : "myAdditionalDetails = components.getDetailsComponent();",
      "right" : "myAdditionalDetails = components.getDetailsComponent();",
      "info" : "ExpressionStatement[19107-19162]:ExpressionStatement[19107-19162]"
    }, {
      "left" : "myListener = components.getRevisionListener();",
      "right" : "myListener = components.getRevisionListener();",
      "info" : "ExpressionStatement[19167-19213]:ExpressionStatement[19167-19213]"
    }, {
      "left" : "ArrayList<DualViewColumnInfo> columns = new ArrayList<DualViewColumnInfo>();",
      "right" : "ArrayList<DualViewColumnInfo> columns = new ArrayList<DualViewColumnInfo>();",
      "info" : "VariableDeclarationStatement[19219-19295]:VariableDeclarationStatement[19219-19295]"
    }, {
      "left" : "if (provider.isDateOmittable())",
      "right" : "if (provider.isDateOmittable())",
      "info" : "IfStatement[19300-19472]:IfStatement[19300-19472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19332-19394]:Block[19332-19394]"
    }, {
      "left" : "columns.addAll(Arrays.asList(REVISION, AUTHOR));",
      "right" : "columns.addAll(Arrays.asList(REVISION, AUTHOR));",
      "info" : "ExpressionStatement[19340-19388]:ExpressionStatement[19340-19388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19404-19472]:Block[19404-19472]"
    }, {
      "left" : "columns.addAll(Arrays.asList(REVISION, DATE, AUTHOR));",
      "right" : "columns.addAll(Arrays.asList(REVISION, DATE, AUTHOR));",
      "info" : "ExpressionStatement[19412-19466]:ExpressionStatement[19412-19466]"
    }, {
      "left" : "columns.addAll(wrapAdditionalColumns(components.getColumns()));",
      "right" : "columns.addAll(wrapAdditionalColumns(components.getColumns()));",
      "info" : "ExpressionStatement[19478-19541]:ExpressionStatement[19478-19541]"
    }, {
      "left" : "columns.add(new MessageColumnInfo(project));",
      "right" : "columns.add(new MessageColumnInfo(project));",
      "info" : "ExpressionStatement[19546-19590]:ExpressionStatement[19546-19590]"
    }, {
      "left" : "return columns.toArray(new DualViewColumnInfo[columns.size()]);",
      "right" : "return columns.toArray(new DualViewColumnInfo[columns.size()]);",
      "info" : "ReturnStatement[19595-19658]:ReturnStatement[19595-19658]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19666-19673]:Modifier[19666-19673]"
    }, {
      "left" : "Collection<DualViewColumnInfo>",
      "right" : "Collection<DualViewColumnInfo>",
      "info" : "ParameterizedType[19674-19704]:ParameterizedType[19674-19704]"
    }, {
      "left" : "wrapAdditionalColumns",
      "right" : "wrapAdditionalColumns",
      "info" : "SimpleName[19705-19726]:SimpleName[19705-19726]"
    }, {
      "left" : "ColumnInfo[] additionalColumns",
      "right" : "ColumnInfo[] additionalColumns",
      "info" : "SingleVariableDeclaration[19727-19757]:SingleVariableDeclaration[19727-19757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19759-20035]:Block[19759-20035]"
    }, {
      "left" : "ArrayList<DualViewColumnInfo> result = new ArrayList<DualViewColumnInfo>();",
      "right" : "ArrayList<DualViewColumnInfo> result = new ArrayList<DualViewColumnInfo>();",
      "info" : "VariableDeclarationStatement[19765-19840]:VariableDeclarationStatement[19765-19840]"
    }, {
      "left" : "if (additionalColumns != null)",
      "right" : "if (additionalColumns != null)",
      "info" : "IfStatement[19845-20012]:IfStatement[19845-20012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19876-20012]:Block[19876-20012]"
    }, {
      "left" : "for (ColumnInfo additionalColumn : additionalColumns)",
      "right" : "for (ColumnInfo additionalColumn : additionalColumns)",
      "info" : "EnhancedForStatement[19884-20006]:EnhancedForStatement[19884-20006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19938-20006]:Block[19938-20006]"
    }, {
      "left" : "result.add(new MyColumnWrapper(additionalColumn));",
      "right" : "result.add(new MyColumnWrapper(additionalColumn));",
      "info" : "ExpressionStatement[19948-19998]:ExpressionStatement[19948-19998]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[20017-20031]:ReturnStatement[20017-20031]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20039-20046]:Modifier[20039-20046]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[20047-20053]:Modifier[20047-20053]"
    }, {
      "left" : "List<TreeItem<VcsFileRevision>>",
      "right" : "List<TreeItem<VcsFileRevision>>",
      "info" : "ParameterizedType[20054-20085]:ParameterizedType[20054-20085]"
    }, {
      "left" : "wrapWithTreeElements",
      "right" : "wrapWithTreeElements",
      "info" : "SimpleName[20086-20106]:SimpleName[20086-20106]"
    }, {
      "left" : "List<VcsFileRevision> revisions",
      "right" : "List<VcsFileRevision> revisions",
      "info" : "SingleVariableDeclaration[20107-20138]:SingleVariableDeclaration[20107-20138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20140-20378]:Block[20140-20378]"
    }, {
      "left" : "ArrayList<TreeItem<VcsFileRevision>> result = new ArrayList<TreeItem<VcsFileRevision>>();",
      "right" : "ArrayList<TreeItem<VcsFileRevision>> result = new ArrayList<TreeItem<VcsFileRevision>>();",
      "info" : "VariableDeclarationStatement[20146-20235]:VariableDeclarationStatement[20146-20235]"
    }, {
      "left" : "for (final VcsFileRevision revision : revisions)",
      "right" : "for (final VcsFileRevision revision : revisions)",
      "info" : "EnhancedForStatement[20240-20355]:EnhancedForStatement[20240-20355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20289-20355]:Block[20289-20355]"
    }, {
      "left" : "result.add(new TreeItem<VcsFileRevision>(revision));",
      "right" : "result.add(new TreeItem<VcsFileRevision>(revision));",
      "info" : "ExpressionStatement[20297-20349]:ExpressionStatement[20297-20349]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[20360-20374]:ReturnStatement[20360-20374]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20382-20389]:Modifier[20382-20389]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20390-20394]:PrimitiveType[20390-20394]"
    }, {
      "left" : "refresh",
      "right" : "refresh",
      "info" : "SimpleName[20395-20402]:SimpleName[20395-20402]"
    }, {
      "left" : "final VcsHistorySession session",
      "right" : "final VcsHistorySession session",
      "info" : "SingleVariableDeclaration[20403-20434]:SingleVariableDeclaration[20403-20434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20436-21115]:Block[20436-21115]"
    }, {
      "left" : "myHistorySession = session;",
      "right" : "myHistorySession = session;",
      "info" : "ExpressionStatement[20442-20469]:ExpressionStatement[20442-20469]"
    }, {
      "left" : "refreshRevisionsOrder();",
      "right" : "refreshRevisionsOrder();",
      "info" : "ExpressionStatement[20474-20498]:ExpressionStatement[20474-20498]"
    }, {
      "left" : "HistoryAsTreeProvider treeHistoryProvider = session.getHistoryAsTreeProvider();",
      "right" : "HistoryAsTreeProvider treeHistoryProvider = session.getHistoryAsTreeProvider();",
      "info" : "VariableDeclarationStatement[20503-20582]:VariableDeclarationStatement[20503-20582]"
    }, {
      "left" : "if (myHistorySession.getRevisionList().isEmpty())",
      "right" : "if (myHistorySession.getRevisionList().isEmpty())",
      "info" : "IfStatement[20588-20670]:IfStatement[20588-20670]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20638-20670]:Block[20638-20670]"
    }, {
      "left" : "adjustEmptyText();",
      "right" : "adjustEmptyText();",
      "info" : "ExpressionStatement[20646-20664]:ExpressionStatement[20646-20664]"
    }, {
      "left" : "if (treeHistoryProvider != null)",
      "right" : "if (treeHistoryProvider != null)",
      "info" : "IfStatement[20676-21033]:IfStatement[20676-21033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20709-20872]:Block[20709-20872]"
    }, {
      "left" : "myDualView.setRoot(new TreeNodeOnVcsRevision(null,\n        treeHistoryProvider.createTreeOn(myHistorySession.getRevisionList())), myTargetSelection);",
      "right" : "myDualView.setRoot(new TreeNodeOnVcsRevision(null,\n        treeHistoryProvider.createTreeOn(myHistorySession.getRevisionList())), myTargetSelection);",
      "info" : "ExpressionStatement[20717-20866]:ExpressionStatement[20717-20866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20882-21033]:Block[20882-21033]"
    }, {
      "left" : "myDualView.setRoot(new TreeNodeOnVcsRevision(null,\n        wrapWithTreeElements(myHistorySession.getRevisionList())), myTargetSelection);",
      "right" : "myDualView.setRoot(new TreeNodeOnVcsRevision(null,\n        wrapWithTreeElements(myHistorySession.getRevisionList())), myTargetSelection);",
      "info" : "ExpressionStatement[20890-21027]:ExpressionStatement[20890-21027]"
    }, {
      "left" : "columnSizesOnce();",
      "right" : "columnSizesOnce();",
      "info" : "ExpressionStatement[21039-21057]:ExpressionStatement[21039-21057]"
    }, {
      "left" : "myDualView.expandAll();",
      "right" : "myDualView.expandAll();",
      "info" : "ExpressionStatement[21062-21085]:ExpressionStatement[21062-21085]"
    }, {
      "left" : "myDualView.repaint();",
      "right" : "myDualView.repaint();",
      "info" : "ExpressionStatement[21090-21111]:ExpressionStatement[21090-21111]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21119-21126]:Modifier[21119-21126]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21127-21131]:PrimitiveType[21127-21131]"
    }, {
      "left" : "columnSizesOnce",
      "right" : "columnSizesOnce",
      "info" : "SimpleName[21132-21147]:SimpleName[21132-21147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21150-21274]:Block[21150-21274]"
    }, {
      "left" : "if (! myColumnSizesSet)",
      "right" : "if (! myColumnSizesSet)",
      "info" : "IfStatement[21156-21270]:IfStatement[21156-21270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21180-21270]:Block[21180-21270]"
    }, {
      "left" : "myDualView.getFlatView().updateColumnSizes();",
      "right" : "myDualView.getFlatView().updateColumnSizes();",
      "info" : "ExpressionStatement[21188-21233]:ExpressionStatement[21188-21233]"
    }, {
      "left" : "myColumnSizesSet = true;",
      "right" : "myColumnSizesSet = true;",
      "info" : "ExpressionStatement[21240-21264]:ExpressionStatement[21240-21264]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21278-21285]:Modifier[21278-21285]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21286-21290]:PrimitiveType[21286-21290]"
    }, {
      "left" : "adjustEmptyText",
      "right" : "adjustEmptyText",
      "info" : "SimpleName[21291-21306]:SimpleName[21291-21306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21309-21702]:Block[21309-21702]"
    }, {
      "left" : "VirtualFile virtualFile = myFilePath.getVirtualFile();",
      "right" : "VirtualFile virtualFile = myFilePath.getVirtualFile();",
      "info" : "VariableDeclarationStatement[21315-21369]:VariableDeclarationStatement[21315-21369]"
    }, {
      "left" : "if ((virtualFile == null || !virtualFile.isValid()) && !myFilePath.getIOFile().exists())",
      "right" : "if ((virtualFile == null || !virtualFile.isValid()) && !myFilePath.getIOFile().exists())",
      "info" : "IfStatement[21374-21698]:IfStatement[21374-21698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21463-21537]:Block[21463-21537]"
    }, {
      "left" : "setEmptyText(\"File \" + myFilePath.getName() + \" not found\");",
      "right" : "setEmptyText(\"File \" + myFilePath.getName() + \" not found\");",
      "info" : "ExpressionStatement[21471-21531]:ExpressionStatement[21471-21531]"
    }, {
      "left" : "if (myInRefresh)",
      "right" : "if (myInRefresh)",
      "info" : "IfStatement[21547-21698]:IfStatement[21547-21698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21564-21630]:Block[21564-21630]"
    }, {
      "left" : "setEmptyText(CommonBundle.getLoadingTreeNodeText());",
      "right" : "setEmptyText(CommonBundle.getLoadingTreeNodeText());",
      "info" : "ExpressionStatement[21572-21624]:ExpressionStatement[21572-21624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21640-21698]:Block[21640-21698]"
    }, {
      "left" : "setEmptyText(StatusText.DEFAULT_EMPTY_TEXT);",
      "right" : "setEmptyText(StatusText.DEFAULT_EMPTY_TEXT);",
      "info" : "ExpressionStatement[21648-21692]:ExpressionStatement[21648-21692]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21706-21713]:Modifier[21706-21713]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21714-21718]:PrimitiveType[21714-21718]"
    }, {
      "left" : "setEmptyText",
      "right" : "setEmptyText",
      "info" : "SimpleName[21719-21731]:SimpleName[21719-21731]"
    }, {
      "left" : "@NotNull String emptyText",
      "right" : "@NotNull String emptyText",
      "info" : "SingleVariableDeclaration[21732-21757]:SingleVariableDeclaration[21732-21757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21759-21804]:Block[21759-21804]"
    }, {
      "left" : "myDualView.setEmptyText(emptyText);",
      "right" : "myDualView.setEmptyText(emptyText);",
      "info" : "ExpressionStatement[21765-21800]:ExpressionStatement[21765-21800]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21808-21817]:Modifier[21808-21817]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21818-21822]:PrimitiveType[21818-21822]"
    }, {
      "left" : "addActionsTo",
      "right" : "addActionsTo",
      "info" : "SimpleName[21823-21835]:SimpleName[21823-21835]"
    }, {
      "left" : "DefaultActionGroup group",
      "right" : "DefaultActionGroup group",
      "info" : "SingleVariableDeclaration[21836-21860]:SingleVariableDeclaration[21836-21860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21862-21897]:Block[21862-21897]"
    }, {
      "left" : "addToGroup(false, group);",
      "right" : "addToGroup(false, group);",
      "info" : "ExpressionStatement[21868-21893]:ExpressionStatement[21868-21893]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[21901-21908]:Modifier[21901-21908]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21909-21913]:PrimitiveType[21909-21913]"
    }, {
      "left" : "createDualView",
      "right" : "createDualView",
      "info" : "SimpleName[21914-21928]:SimpleName[21914-21928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21931-23705]:Block[21931-23705]"
    }, {
      "left" : "myDualView.setShowGrid(true);",
      "right" : "myDualView.setShowGrid(true);",
      "info" : "ExpressionStatement[21937-21966]:ExpressionStatement[21937-21966]"
    }, {
      "left" : "myDualView.getTreeView().addMouseListener(new PopupHandler() {\n      public void invokePopup(Component comp, int x, int y) {\n        ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);\n        popupMenu.getComponent().show(comp, x, y);\n      }\n    });",
      "right" : "myDualView.getTreeView().addMouseListener(new PopupHandler() {\n      public void invokePopup(Component comp, int x, int y) {\n        ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);\n        popupMenu.getComponent().show(comp, x, y);\n      }\n    });",
      "info" : "ExpressionStatement[21971-22303]:ExpressionStatement[21971-22303]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22040-22046]:Modifier[22040-22046]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22047-22051]:PrimitiveType[22047-22051]"
    }, {
      "left" : "invokePopup",
      "right" : "invokePopup",
      "info" : "SimpleName[22052-22063]:SimpleName[22052-22063]"
    }, {
      "left" : "Component comp",
      "right" : "Component comp",
      "info" : "SingleVariableDeclaration[22064-22078]:SingleVariableDeclaration[22064-22078]"
    }, {
      "left" : "int x",
      "right" : "int x",
      "info" : "SingleVariableDeclaration[22080-22085]:SingleVariableDeclaration[22080-22085]"
    }, {
      "left" : "int y",
      "right" : "int y",
      "info" : "SingleVariableDeclaration[22087-22092]:SingleVariableDeclaration[22087-22092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22094-22295]:Block[22094-22295]"
    }, {
      "left" : "ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);",
      "right" : "ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);",
      "info" : "VariableDeclarationStatement[22104-22236]:VariableDeclarationStatement[22104-22236]"
    }, {
      "left" : "popupMenu.getComponent().show(comp, x, y);",
      "right" : "popupMenu.getComponent().show(comp, x, y);",
      "info" : "ExpressionStatement[22245-22287]:ExpressionStatement[22245-22287]"
    }, {
      "left" : "myDualView.getFlatView().addMouseListener(new PopupHandler() {\n      public void invokePopup(Component comp, int x, int y) {\n        ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);\n        popupMenu.getComponent().show(comp, x, y);\n      }\n    });",
      "right" : "myDualView.getFlatView().addMouseListener(new PopupHandler() {\n      public void invokePopup(Component comp, int x, int y) {\n        ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);\n        popupMenu.getComponent().show(comp, x, y);\n      }\n    });",
      "info" : "ExpressionStatement[22309-22641]:ExpressionStatement[22309-22641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22378-22384]:Modifier[22378-22384]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22385-22389]:PrimitiveType[22385-22389]"
    }, {
      "left" : "invokePopup",
      "right" : "invokePopup",
      "info" : "SimpleName[22390-22401]:SimpleName[22390-22401]"
    }, {
      "left" : "Component comp",
      "right" : "Component comp",
      "info" : "SingleVariableDeclaration[22402-22416]:SingleVariableDeclaration[22402-22416]"
    }, {
      "left" : "int x",
      "right" : "int x",
      "info" : "SingleVariableDeclaration[22418-22423]:SingleVariableDeclaration[22418-22423]"
    }, {
      "left" : "int y",
      "right" : "int y",
      "info" : "SingleVariableDeclaration[22425-22430]:SingleVariableDeclaration[22425-22430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22432-22633]:Block[22432-22633]"
    }, {
      "left" : "ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);",
      "right" : "ActionPopupMenu popupMenu = ActionManager.getInstance()\n          .createActionPopupMenu(ActionPlaces.UPDATE_POPUP, myPopupActions);",
      "info" : "VariableDeclarationStatement[22442-22574]:VariableDeclarationStatement[22442-22574]"
    }, {
      "left" : "popupMenu.getComponent().show(comp, x, y);",
      "right" : "popupMenu.getComponent().show(comp, x, y);",
      "info" : "ExpressionStatement[22583-22625]:ExpressionStatement[22583-22625]"
    }, {
      "left" : "myDualView.requestFocus();",
      "right" : "myDualView.requestFocus();",
      "info" : "ExpressionStatement[22647-22673]:ExpressionStatement[22647-22673]"
    }, {
      "left" : "myDualView.addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(ListSelectionEvent e) {\n        updateMessage();\n      }\n    });",
      "right" : "myDualView.addListSelectionListener(new ListSelectionListener() {\n      public void valueChanged(ListSelectionEvent e) {\n        updateMessage();\n      }\n    });",
      "info" : "ExpressionStatement[22679-22840]:ExpressionStatement[22679-22840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22751-22757]:Modifier[22751-22757]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22758-22762]:PrimitiveType[22758-22762]"
    }, {
      "left" : "valueChanged",
      "right" : "valueChanged",
      "info" : "SimpleName[22763-22775]:SimpleName[22763-22775]"
    }, {
      "left" : "ListSelectionEvent e",
      "right" : "ListSelectionEvent e",
      "info" : "SingleVariableDeclaration[22776-22796]:SingleVariableDeclaration[22776-22796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22798-22832]:Block[22798-22832]"
    }, {
      "left" : "updateMessage();",
      "right" : "updateMessage();",
      "info" : "ExpressionStatement[22808-22824]:ExpressionStatement[22808-22824]"
    }, {
      "left" : "myDualView.setRootVisible(false);",
      "right" : "myDualView.setRootVisible(false);",
      "info" : "ExpressionStatement[22846-22879]:ExpressionStatement[22846-22879]"
    }, {
      "left" : "myDualView.expandAll();",
      "right" : "myDualView.expandAll();",
      "info" : "ExpressionStatement[22885-22908]:ExpressionStatement[22885-22908]"
    }, {
      "left" : "final TreeCellRenderer defaultCellRenderer = myDualView.getTree().getCellRenderer();",
      "right" : "final TreeCellRenderer defaultCellRenderer = myDualView.getTree().getCellRenderer();",
      "info" : "VariableDeclarationStatement[22914-22998]:VariableDeclarationStatement[22914-22998]"
    }, {
      "left" : "final Getter<VcsHistorySession> sessionGetter = new Getter<VcsHistorySession>() {\n      public VcsHistorySession get() {\n        return myHistorySession;\n      }\n    };",
      "right" : "final Getter<VcsHistorySession> sessionGetter = new Getter<VcsHistorySession>() {\n      public VcsHistorySession get() {\n        return myHistorySession;\n      }\n    };",
      "info" : "VariableDeclarationStatement[23004-23172]:VariableDeclarationStatement[23004-23172]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23092-23098]:Modifier[23092-23098]"
    }, {
      "left" : "VcsHistorySession",
      "right" : "VcsHistorySession",
      "info" : "SimpleType[23099-23116]:SimpleType[23099-23116]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[23117-23120]:SimpleName[23117-23120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23123-23165]:Block[23123-23165]"
    }, {
      "left" : "return myHistorySession;",
      "right" : "return myHistorySession;",
      "info" : "ReturnStatement[23133-23157]:ReturnStatement[23133-23157]"
    }, {
      "left" : "myDualView.setTreeCellRenderer(new MyTreeCellRenderer(defaultCellRenderer, sessionGetter));",
      "right" : "myDualView.setTreeCellRenderer(new MyTreeCellRenderer(defaultCellRenderer, sessionGetter));",
      "info" : "ExpressionStatement[23177-23268]:ExpressionStatement[23177-23268]"
    }, {
      "left" : "myDualView.setCellWrapper(new MyCellWrapper(sessionGetter));",
      "right" : "myDualView.setCellWrapper(new MyCellWrapper(sessionGetter));",
      "info" : "ExpressionStatement[23274-23334]:ExpressionStatement[23274-23334]"
    }, {
      "left" : "final TableView flatView = myDualView.getFlatView();",
      "right" : "final TableView flatView = myDualView.getFlatView();",
      "info" : "VariableDeclarationStatement[23340-23392]:VariableDeclarationStatement[23340-23392]"
    }, {
      "left" : "TableViewModel sortableModel = flatView.getTableViewModel();",
      "right" : "TableViewModel sortableModel = flatView.getTableViewModel();",
      "info" : "VariableDeclarationStatement[23397-23457]:VariableDeclarationStatement[23397-23457]"
    }, {
      "left" : "sortableModel.setSortable(true);",
      "right" : "sortableModel.setSortable(true);",
      "info" : "ExpressionStatement[23462-23494]:ExpressionStatement[23462-23494]"
    }, {
      "left" : "final RowSorter<? extends TableModel> rowSorter = flatView.getRowSorter();",
      "right" : "final RowSorter<? extends TableModel> rowSorter = flatView.getRowSorter();",
      "info" : "VariableDeclarationStatement[23500-23574]:VariableDeclarationStatement[23500-23574]"
    }, {
      "left" : "if (rowSorter != null)",
      "right" : "if (rowSorter != null)",
      "info" : "IfStatement[23579-23701]:IfStatement[23579-23701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23602-23701]:Block[23602-23701]"
    }, {
      "left" : "rowSorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.DESCENDING)));",
      "right" : "rowSorter.setSortKeys(Arrays.asList(new RowSorter.SortKey(0, SortOrder.DESCENDING)));",
      "info" : "ExpressionStatement[23610-23695]:ExpressionStatement[23610-23695]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[23709-23716]:Modifier[23709-23716]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23717-23723]:Modifier[23717-23723]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[23724-23728]:PrimitiveType[23724-23728]"
    }, {
      "left" : "makeBold",
      "right" : "makeBold",
      "info" : "SimpleName[23729-23737]:SimpleName[23729-23737]"
    }, {
      "left" : "Component component",
      "right" : "Component component",
      "info" : "SingleVariableDeclaration[23738-23757]:SingleVariableDeclaration[23738-23757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23759-24217]:Block[23759-24217]"
    }, {
      "left" : "if (component instanceof JComponent)",
      "right" : "if (component instanceof JComponent)",
      "info" : "IfStatement[23765-24212]:IfStatement[23765-24212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23802-23992]:Block[23802-23992]"
    }, {
      "left" : "JComponent jComponent = (JComponent)component;",
      "right" : "JComponent jComponent = (JComponent)component;",
      "info" : "VariableDeclarationStatement[23810-23856]:VariableDeclarationStatement[23810-23856]"
    }, {
      "left" : "Font font = jComponent.getFont();",
      "right" : "Font font = jComponent.getFont();",
      "info" : "VariableDeclarationStatement[23863-23896]:VariableDeclarationStatement[23863-23896]"
    }, {
      "left" : "if (font != null)",
      "right" : "if (font != null)",
      "info" : "IfStatement[23903-23986]:IfStatement[23903-23986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23921-23986]:Block[23921-23986]"
    }, {
      "left" : "jComponent.setFont(font.deriveFont(Font.BOLD));",
      "right" : "jComponent.setFont(font.deriveFont(Font.BOLD));",
      "info" : "ExpressionStatement[23931-23978]:ExpressionStatement[23931-23978]"
    }, {
      "left" : "if (component instanceof Container)",
      "right" : "if (component instanceof Container)",
      "info" : "IfStatement[24002-24212]:IfStatement[24002-24212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24038-24212]:Block[24038-24212]"
    }, {
      "left" : "Container container = (Container)component;",
      "right" : "Container container = (Container)component;",
      "info" : "VariableDeclarationStatement[24046-24089]:VariableDeclarationStatement[24046-24089]"
    }, {
      "left" : "for (int i = 0; i < container.getComponentCount(); i++)",
      "right" : "for (int i = 0; i < container.getComponentCount(); i++)",
      "info" : "ForStatement[24096-24206]:ForStatement[24096-24206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24152-24206]:Block[24152-24206]"
    }, {
      "left" : "makeBold(container.getComponent(i));",
      "right" : "makeBold(container.getComponent(i));",
      "info" : "ExpressionStatement[24162-24198]:ExpressionStatement[24162-24198]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[24221-24228]:Modifier[24221-24228]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[24229-24233]:PrimitiveType[24229-24233]"
    }, {
      "left" : "updateMessage",
      "right" : "updateMessage",
      "info" : "SimpleName[24234-24247]:SimpleName[24234-24247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24250-24900]:Block[24250-24900]"
    }, {
      "left" : "List selection = getSelection();",
      "right" : "List selection = getSelection();",
      "info" : "VariableDeclarationStatement[24256-24288]:VariableDeclarationStatement[24256-24288]"
    }, {
      "left" : "final VcsFileRevision revision;",
      "right" : "final VcsFileRevision revision;",
      "info" : "VariableDeclarationStatement[24293-24324]:VariableDeclarationStatement[24293-24324]"
    }, {
      "left" : "if (selection.size() != 1)",
      "right" : "if (selection.size() != 1)",
      "info" : "IfStatement[24329-24824]:IfStatement[24329-24824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24356-24446]:Block[24356-24446]"
    }, {
      "left" : "revision = null;",
      "right" : "revision = null;",
      "info" : "ExpressionStatement[24364-24380]:ExpressionStatement[24364-24380]"
    }, {
      "left" : "myComments.setText(\"\");",
      "right" : "myComments.setText(\"\");",
      "info" : "ExpressionStatement[24387-24410]:ExpressionStatement[24387-24410]"
    }, {
      "left" : "myOriginalComment = \"\";",
      "right" : "myOriginalComment = \"\";",
      "info" : "ExpressionStatement[24417-24440]:ExpressionStatement[24417-24440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24456-24824]:Block[24456-24824]"
    }, {
      "left" : "revision = getFirstSelectedRevision();",
      "right" : "revision = getFirstSelectedRevision();",
      "info" : "ExpressionStatement[24464-24502]:ExpressionStatement[24464-24502]"
    }, {
      "left" : "if (revision != null)",
      "right" : "if (revision != null)",
      "info" : "IfStatement[24509-24818]:IfStatement[24509-24818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24531-24818]:Block[24531-24818]"
    }, {
      "left" : "final String message = revision.getCommitMessage();",
      "right" : "final String message = revision.getCommitMessage();",
      "info" : "VariableDeclarationStatement[24541-24592]:VariableDeclarationStatement[24541-24592]"
    }, {
      "left" : "myOriginalComment = message;",
      "right" : "myOriginalComment = message;",
      "info" : "ExpressionStatement[24601-24629]:ExpressionStatement[24601-24629]"
    }, {
      "left" : "@NonNls final String text = IssueLinkHtmlRenderer.formatTextIntoHtml(myVcs.getProject(), message);",
      "right" : "@NonNls final String text = IssueLinkHtmlRenderer.formatTextIntoHtml(myVcs.getProject(), message);",
      "info" : "VariableDeclarationStatement[24638-24736]:VariableDeclarationStatement[24638-24736]"
    }, {
      "left" : "myComments.setText(text);",
      "right" : "myComments.setText(text);",
      "info" : "ExpressionStatement[24745-24770]:ExpressionStatement[24745-24770]"
    }, {
      "left" : "myComments.setCaretPosition(0);",
      "right" : "myComments.setCaretPosition(0);",
      "info" : "ExpressionStatement[24779-24810]:ExpressionStatement[24779-24810]"
    }, {
      "left" : "if (myListener != null)",
      "right" : "if (myListener != null)",
      "info" : "IfStatement[24829-24896]:IfStatement[24829-24896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24853-24896]:Block[24853-24896]"
    }, {
      "left" : "myListener.consume(revision);",
      "right" : "myListener.consume(revision);",
      "info" : "ExpressionStatement[24861-24890]:ExpressionStatement[24861-24890]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24905-24914]:Modifier[24905-24914]"
    }, {
      "left" : "JComponent",
      "right" : "JComponent",
      "info" : "SimpleType[24915-24925]:SimpleType[24915-24925]"
    }, {
      "left" : "createCenterPanel",
      "right" : "createCenterPanel",
      "info" : "SimpleName[24926-24943]:SimpleName[24926-24943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24946-26094]:Block[24946-26094]"
    }, {
      "left" : "mySplitter = new Splitter(true, getSplitterProportion());",
      "right" : "mySplitter = new Splitter(true, getSplitterProportion());",
      "info" : "ExpressionStatement[24952-25009]:ExpressionStatement[24952-25009]"
    }, {
      "left" : "mySplitter.setDividerWidth(4);",
      "right" : "mySplitter.setDividerWidth(4);",
      "info" : "ExpressionStatement[25014-25044]:ExpressionStatement[25014-25044]"
    }, {
      "left" : "mySplitter.addPropertyChangeListener(new PropertyChangeListener() {\n      public void propertyChange(PropertyChangeEvent evt) {\n        if (Splitter.PROP_PROPORTION.equals(evt.getPropertyName())) {\n          setSplitterProportionTo((Float)evt.getNewValue());\n        }\n      }\n    });",
      "right" : "mySplitter.addPropertyChangeListener(new PropertyChangeListener() {\n      public void propertyChange(PropertyChangeEvent evt) {\n        if (Splitter.PROP_PROPORTION.equals(evt.getPropertyName())) {\n          setSplitterProportionTo((Float)evt.getNewValue());\n        }\n      }\n    });",
      "info" : "ExpressionStatement[25150-25434]:ExpressionStatement[25150-25434]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25224-25230]:Modifier[25224-25230]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25231-25235]:PrimitiveType[25231-25235]"
    }, {
      "left" : "propertyChange",
      "right" : "propertyChange",
      "info" : "SimpleName[25236-25250]:SimpleName[25236-25250]"
    }, {
      "left" : "PropertyChangeEvent evt",
      "right" : "PropertyChangeEvent evt",
      "info" : "SingleVariableDeclaration[25251-25274]:SingleVariableDeclaration[25251-25274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25276-25426]:Block[25276-25426]"
    }, {
      "left" : "if (Splitter.PROP_PROPORTION.equals(evt.getPropertyName()))",
      "right" : "if (Splitter.PROP_PROPORTION.equals(evt.getPropertyName()))",
      "info" : "IfStatement[25286-25418]:IfStatement[25286-25418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25346-25418]:Block[25346-25418]"
    }, {
      "left" : "setSplitterProportionTo((Float)evt.getNewValue());",
      "right" : "setSplitterProportionTo((Float)evt.getNewValue());",
      "info" : "ExpressionStatement[25358-25408]:ExpressionStatement[25358-25408]"
    }, {
      "left" : "JPanel commentGroup = new JPanel(new BorderLayout());",
      "right" : "JPanel commentGroup = new JPanel(new BorderLayout());",
      "info" : "VariableDeclarationStatement[25440-25493]:VariableDeclarationStatement[25440-25493]"
    }, {
      "left" : "final JLabel commentLabel = new JLabel(COMMIT_MESSAGE_TITLE + \":\");",
      "right" : "final JLabel commentLabel = new JLabel(COMMIT_MESSAGE_TITLE + \":\");",
      "info" : "VariableDeclarationStatement[25498-25565]:VariableDeclarationStatement[25498-25565]"
    }, {
      "left" : "commentGroup.add(commentLabel, BorderLayout.NORTH);",
      "right" : "commentGroup.add(commentLabel, BorderLayout.NORTH);",
      "info" : "ExpressionStatement[25570-25621]:ExpressionStatement[25570-25621]"
    }, {
      "left" : "JScrollPane pane = ScrollPaneFactory.createScrollPane(myComments);",
      "right" : "JScrollPane pane = ScrollPaneFactory.createScrollPane(myComments);",
      "info" : "VariableDeclarationStatement[25626-25692]:VariableDeclarationStatement[25626-25692]"
    }, {
      "left" : "pane.setBorder(IdeBorderFactory.createBorder(SideBorder.TOP | SideBorder.LEFT | (myAdditionalDetails == null ? 0 : SideBorder.RIGHT)));",
      "right" : "pane.setBorder(IdeBorderFactory.createBorder(SideBorder.TOP | SideBorder.LEFT | (myAdditionalDetails == null ? 0 : SideBorder.RIGHT)));",
      "info" : "ExpressionStatement[25697-25832]:ExpressionStatement[25697-25832]"
    }, {
      "left" : "commentGroup.add(pane, BorderLayout.CENTER);",
      "right" : "commentGroup.add(pane, BorderLayout.CENTER);",
      "info" : "ExpressionStatement[25838-25882]:ExpressionStatement[25838-25882]"
    }, {
      "left" : "myDetailsSplitter.setFirstComponent(commentGroup);",
      "right" : "myDetailsSplitter.setFirstComponent(commentGroup);",
      "info" : "ExpressionStatement[25887-25937]:ExpressionStatement[25887-25937]"
    }, {
      "left" : "myDetailsSplitter.setSecondComponent(myAdditionalDetails);",
      "right" : "myDetailsSplitter.setSecondComponent(myAdditionalDetails);",
      "info" : "ExpressionStatement[25942-26000]:ExpressionStatement[25942-26000]"
    }, {
      "left" : "mySplitter.setFirstComponent(myDualView);",
      "right" : "mySplitter.setFirstComponent(myDualView);",
      "info" : "ExpressionStatement[26006-26047]:ExpressionStatement[26006-26047]"
    }, {
      "left" : "setupDetails();",
      "right" : "setupDetails();",
      "info" : "ExpressionStatement[26052-26067]:ExpressionStatement[26052-26067]"
    }, {
      "left" : "return mySplitter;",
      "right" : "return mySplitter;",
      "info" : "ReturnStatement[26072-26090]:ReturnStatement[26072-26090]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26098-26105]:Modifier[26098-26105]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26106-26110]:PrimitiveType[26106-26110]"
    }, {
      "left" : "setupDetails",
      "right" : "setupDetails",
      "info" : "SimpleName[26111-26123]:SimpleName[26111-26123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26126-26532]:Block[26126-26532]"
    }, {
      "left" : "boolean showDetails = ! myIsStaticAndEmbedded && getConfiguration().SHOW_FILE_HISTORY_DETAILS;",
      "right" : "boolean showDetails = ! myIsStaticAndEmbedded && getConfiguration().SHOW_FILE_HISTORY_DETAILS;",
      "info" : "VariableDeclarationStatement[26132-26226]:VariableDeclarationStatement[26132-26226]"
    }, {
      "left" : "if (showDetails)",
      "right" : "if (showDetails)",
      "info" : "IfStatement[26231-26452]:IfStatement[26231-26452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26248-26355]:Block[26248-26355]"
    }, {
      "left" : "myDualView.setViewBorder(IdeBorderFactory.createBorder(SideBorder.LEFT | SideBorder.BOTTOM));",
      "right" : "myDualView.setViewBorder(IdeBorderFactory.createBorder(SideBorder.LEFT | SideBorder.BOTTOM));",
      "info" : "ExpressionStatement[26256-26349]:ExpressionStatement[26256-26349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26365-26452]:Block[26365-26452]"
    }, {
      "left" : "myDualView.setViewBorder(IdeBorderFactory.createBorder(SideBorder.LEFT));",
      "right" : "myDualView.setViewBorder(IdeBorderFactory.createBorder(SideBorder.LEFT));",
      "info" : "ExpressionStatement[26373-26446]:ExpressionStatement[26373-26446]"
    }, {
      "left" : "mySplitter.setSecondComponent(showDetails ? myDetailsSplitter : null);",
      "right" : "mySplitter.setSecondComponent(showDetails ? myDetailsSplitter : null);",
      "info" : "ExpressionStatement[26458-26528]:ExpressionStatement[26458-26528]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26536-26543]:Modifier[26536-26543]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26544-26548]:PrimitiveType[26544-26548]"
    }, {
      "left" : "chooseView",
      "right" : "chooseView",
      "info" : "SimpleName[26549-26559]:SimpleName[26549-26559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26562-26692]:Block[26562-26692]"
    }, {
      "left" : "if (showTree())",
      "right" : "if (showTree())",
      "info" : "IfStatement[26568-26688]:IfStatement[26568-26688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26584-26631]:Block[26584-26631]"
    }, {
      "left" : "myDualView.switchToTheTreeMode();",
      "right" : "myDualView.switchToTheTreeMode();",
      "info" : "ExpressionStatement[26592-26625]:ExpressionStatement[26592-26625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26641-26688]:Block[26641-26688]"
    }, {
      "left" : "myDualView.switchToTheFlatMode();",
      "right" : "myDualView.switchToTheFlatMode();",
      "info" : "ExpressionStatement[26649-26682]:ExpressionStatement[26649-26682]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26696-26703]:Modifier[26696-26703]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[26704-26711]:PrimitiveType[26704-26711]"
    }, {
      "left" : "showTree",
      "right" : "showTree",
      "info" : "SimpleName[26712-26720]:SimpleName[26712-26720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26723-26785]:Block[26723-26785]"
    }, {
      "left" : "return getConfiguration().SHOW_FILE_HISTORY_AS_TREE;",
      "right" : "return getConfiguration().SHOW_FILE_HISTORY_AS_TREE;",
      "info" : "ReturnStatement[26729-26781]:ReturnStatement[26729-26781]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[26789-26796]:Modifier[26789-26796]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26797-26801]:PrimitiveType[26797-26801]"
    }, {
      "left" : "setSplitterProportionTo",
      "right" : "setSplitterProportionTo",
      "info" : "SimpleName[26802-26825]:SimpleName[26802-26825]"
    }, {
      "left" : "Float newProportion",
      "right" : "Float newProportion",
      "info" : "SingleVariableDeclaration[26826-26845]:SingleVariableDeclaration[26826-26845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26847-26938]:Block[26847-26938]"
    }, {
      "left" : "getConfiguration().FILE_HISTORY_SPLITTER_PROPORTION = newProportion.floatValue();",
      "right" : "getConfiguration().FILE_HISTORY_SPLITTER_PROPORTION = newProportion.floatValue();",
      "info" : "ExpressionStatement[26853-26934]:ExpressionStatement[26853-26934]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[26942-26951]:Modifier[26942-26951]"
    }, {
      "left" : "float",
      "right" : "float",
      "info" : "PrimitiveType[26952-26957]:PrimitiveType[26952-26957]"
    }, {
      "left" : "getSplitterProportion",
      "right" : "getSplitterProportion",
      "info" : "SimpleName[26958-26979]:SimpleName[26958-26979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26982-27051]:Block[26982-27051]"
    }, {
      "left" : "return getConfiguration().FILE_HISTORY_SPLITTER_PROPORTION;",
      "right" : "return getConfiguration().FILE_HISTORY_SPLITTER_PROPORTION;",
      "info" : "ReturnStatement[26988-27047]:ReturnStatement[26988-27047]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27055-27062]:Modifier[27055-27062]"
    }, {
      "left" : "VcsConfiguration",
      "right" : "VcsConfiguration",
      "info" : "SimpleType[27063-27079]:SimpleType[27063-27079]"
    }, {
      "left" : "getConfiguration",
      "right" : "getConfiguration",
      "info" : "SimpleName[27080-27096]:SimpleName[27080-27096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27099-27165]:Block[27099-27165]"
    }, {
      "left" : "return VcsConfiguration.getInstance(myVcs.getProject());",
      "right" : "return VcsConfiguration.getInstance(myVcs.getProject());",
      "info" : "ReturnStatement[27105-27161]:ReturnStatement[27105-27161]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27169-27176]:Modifier[27169-27176]"
    }, {
      "left" : "DefaultActionGroup",
      "right" : "DefaultActionGroup",
      "info" : "SimpleType[27177-27195]:SimpleType[27177-27195]"
    }, {
      "left" : "createPopupActions",
      "right" : "createPopupActions",
      "info" : "SimpleName[27196-27214]:SimpleName[27196-27214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27217-27289]:Block[27217-27289]"
    }, {
      "left" : "return addToGroup(true, new DefaultActionGroup(null, false));",
      "right" : "return addToGroup(true, new DefaultActionGroup(null, false));",
      "info" : "ReturnStatement[27223-27284]:ReturnStatement[27223-27284]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27293-27300]:Modifier[27293-27300]"
    }, {
      "left" : "DefaultActionGroup",
      "right" : "DefaultActionGroup",
      "info" : "SimpleType[27301-27319]:SimpleType[27301-27319]"
    }, {
      "left" : "addToGroup",
      "right" : "addToGroup",
      "info" : "SimpleName[27320-27330]:SimpleName[27320-27330]"
    }, {
      "left" : "boolean popup",
      "right" : "boolean popup",
      "info" : "SingleVariableDeclaration[27331-27344]:SingleVariableDeclaration[27331-27344]"
    }, {
      "left" : "DefaultActionGroup result",
      "right" : "DefaultActionGroup result",
      "info" : "SingleVariableDeclaration[27346-27371]:SingleVariableDeclaration[27346-27371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27373-29195]:Block[27373-29195]"
    }, {
      "left" : "if (popup)",
      "right" : "if (popup)",
      "info" : "IfStatement[27379-27485]:IfStatement[27379-27485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27390-27485]:Block[27390-27485]"
    }, {
      "left" : "result.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE));",
      "right" : "result.add(ActionManager.getInstance().getAction(IdeActions.ACTION_EDIT_SOURCE));",
      "info" : "ExpressionStatement[27398-27479]:ExpressionStatement[27398-27479]"
    }, {
      "left" : "final MyDiffAction diffAction = new MyDiffAction();",
      "right" : "final MyDiffAction diffAction = new MyDiffAction();",
      "info" : "VariableDeclarationStatement[27491-27542]:VariableDeclarationStatement[27491-27542]"
    }, {
      "left" : "result.add(diffAction);",
      "right" : "result.add(diffAction);",
      "info" : "ExpressionStatement[27547-27570]:ExpressionStatement[27547-27570]"
    }, {
      "left" : "if (!popup)",
      "right" : "if (!popup)",
      "info" : "IfStatement[27575-28209]:IfStatement[27575-28209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27587-28115]:Block[27587-28115]"
    }, {
      "left" : "List<Shortcut> shortcuts = new SmartList<Shortcut>();",
      "right" : "List<Shortcut> shortcuts = new SmartList<Shortcut>();",
      "info" : "VariableDeclarationStatement[27595-27648]:VariableDeclarationStatement[27595-27648]"
    }, {
      "left" : "ContainerUtil.addAll(shortcuts, CommonShortcuts.getDiff().getShortcuts());",
      "right" : "ContainerUtil.addAll(shortcuts, CommonShortcuts.getDiff().getShortcuts());",
      "info" : "ExpressionStatement[27655-27729]:ExpressionStatement[27655-27729]"
    }, {
      "left" : "ContainerUtil.addAll(shortcuts, CommonShortcuts.DOUBLE_CLICK_1.getShortcuts());",
      "right" : "ContainerUtil.addAll(shortcuts, CommonShortcuts.DOUBLE_CLICK_1.getShortcuts());",
      "info" : "ExpressionStatement[27736-27815]:ExpressionStatement[27736-27815]"
    }, {
      "left" : "CustomShortcutSet shortcutSet = new CustomShortcutSet(ContainerUtil.toArray(shortcuts, new Shortcut[shortcuts.size()]));",
      "right" : "CustomShortcutSet shortcutSet = new CustomShortcutSet(ContainerUtil.toArray(shortcuts, new Shortcut[shortcuts.size()]));",
      "info" : "VariableDeclarationStatement[27822-27942]:VariableDeclarationStatement[27822-27942]"
    }, {
      "left" : "diffAction.registerCustomShortcutSet(shortcutSet, myDualView.getFlatView());",
      "right" : "diffAction.registerCustomShortcutSet(shortcutSet, myDualView.getFlatView());",
      "info" : "ExpressionStatement[27950-28026]:ExpressionStatement[27950-28026]"
    }, {
      "left" : "diffAction.registerCustomShortcutSet(shortcutSet, myDualView.getTreeView());",
      "right" : "diffAction.registerCustomShortcutSet(shortcutSet, myDualView.getTreeView());",
      "info" : "ExpressionStatement[28033-28109]:ExpressionStatement[28033-28109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28125-28209]:Block[28125-28209]"
    }, {
      "left" : "diffAction.registerCustomShortcutSet(CommonShortcuts.getDiff(), this);",
      "right" : "diffAction.registerCustomShortcutSet(CommonShortcuts.getDiff(), this);",
      "info" : "ExpressionStatement[28133-28203]:ExpressionStatement[28133-28203]"
    }, {
      "left" : "result.add(ActionManager.getInstance().getAction(\"Vcs.ShowDiffWithLocal\"));",
      "right" : "result.add(ActionManager.getInstance().getAction(\"Vcs.ShowDiffWithLocal\"));",
      "info" : "ExpressionStatement[28214-28289]:ExpressionStatement[28214-28289]"
    }, {
      "left" : "final AnAction diffGroup = ActionManager.getInstance().getAction(VCS_HISTORY_ACTIONS_GROUP);",
      "right" : "final AnAction diffGroup = ActionManager.getInstance().getAction(VCS_HISTORY_ACTIONS_GROUP);",
      "info" : "VariableDeclarationStatement[28295-28387]:VariableDeclarationStatement[28295-28387]"
    }, {
      "left" : "if (diffGroup != null)",
      "right" : "if (diffGroup != null)",
      "info" : "IfStatement[28392-28437]:IfStatement[28392-28437]"
    }, {
      "left" : "result.add(diffGroup);",
      "right" : "result.add(diffGroup);",
      "info" : "ExpressionStatement[28415-28437]:ExpressionStatement[28415-28437]"
    }, {
      "left" : "result.add(new MyCreatePatch());",
      "right" : "result.add(new MyCreatePatch());",
      "info" : "ExpressionStatement[28442-28474]:ExpressionStatement[28442-28474]"
    }, {
      "left" : "result.add(new MyGetVersionAction());",
      "right" : "result.add(new MyGetVersionAction());",
      "info" : "ExpressionStatement[28479-28516]:ExpressionStatement[28479-28516]"
    }, {
      "left" : "result.add(new MyAnnotateAction());",
      "right" : "result.add(new MyAnnotateAction());",
      "info" : "ExpressionStatement[28521-28556]:ExpressionStatement[28521-28556]"
    }, {
      "left" : "AnAction[] additionalActions = myProvider.getAdditionalActions(new Runnable() {\n      public void run() {\n        refreshImpl(true);\n      }\n    });",
      "right" : "AnAction[] additionalActions = myProvider.getAdditionalActions(new Runnable() {\n      public void run() {\n        refreshImpl(true);\n      }\n    });",
      "info" : "VariableDeclarationStatement[28561-28709]:VariableDeclarationStatement[28561-28709]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28647-28653]:Modifier[28647-28653]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[28654-28658]:PrimitiveType[28654-28658]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[28659-28662]:SimpleName[28659-28662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28665-28701]:Block[28665-28701]"
    }, {
      "left" : "refreshImpl(true);",
      "right" : "refreshImpl(true);",
      "info" : "ExpressionStatement[28675-28693]:ExpressionStatement[28675-28693]"
    }, {
      "left" : "if (additionalActions != null)",
      "right" : "if (additionalActions != null)",
      "info" : "IfStatement[28714-28955]:IfStatement[28714-28955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28745-28955]:Block[28745-28955]"
    }, {
      "left" : "for (AnAction additionalAction : additionalActions)",
      "right" : "for (AnAction additionalAction : additionalActions)",
      "info" : "EnhancedForStatement[28753-28949]:EnhancedForStatement[28753-28949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28805-28949]:Block[28805-28949]"
    }, {
      "left" : "if (popup || additionalAction.getTemplatePresentation().getIcon() != null)",
      "right" : "if (popup || additionalAction.getTemplatePresentation().getIcon() != null)",
      "info" : "IfStatement[28815-28941]:IfStatement[28815-28941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28890-28941]:Block[28890-28941]"
    }, {
      "left" : "result.add(additionalAction);",
      "right" : "result.add(additionalAction);",
      "info" : "ExpressionStatement[28902-28931]:ExpressionStatement[28902-28931]"
    }, {
      "left" : "result.add(new RefreshFileHistoryAction());",
      "right" : "result.add(new RefreshFileHistoryAction());",
      "info" : "ExpressionStatement[28960-29003]:ExpressionStatement[28960-29003]"
    }, {
      "left" : "if (! myIsStaticAndEmbedded)",
      "right" : "if (! myIsStaticAndEmbedded)",
      "info" : "IfStatement[29008-29084]:IfStatement[29008-29084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29037-29084]:Block[29037-29084]"
    }, {
      "left" : "result.add(new MyToggleAction());",
      "right" : "result.add(new MyToggleAction());",
      "info" : "ExpressionStatement[29045-29078]:ExpressionStatement[29045-29078]"
    }, {
      "left" : "if (!popup && supportsTree())",
      "right" : "if (!popup && supportsTree())",
      "info" : "IfStatement[29090-29171]:IfStatement[29090-29171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29120-29171]:Block[29120-29171]"
    }, {
      "left" : "result.add(new MyShowAsTreeAction());",
      "right" : "result.add(new MyShowAsTreeAction());",
      "info" : "ExpressionStatement[29128-29165]:ExpressionStatement[29128-29165]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[29177-29191]:ReturnStatement[29177-29191]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[29199-29206]:Modifier[29199-29206]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29207-29211]:PrimitiveType[29207-29211]"
    }, {
      "left" : "refreshImpl",
      "right" : "refreshImpl",
      "info" : "SimpleName[29212-29223]:SimpleName[29212-29223]"
    }, {
      "left" : "final boolean useLastRevision",
      "right" : "final boolean useLastRevision",
      "info" : "SingleVariableDeclaration[29224-29253]:SingleVariableDeclaration[29224-29253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29255-29662]:Block[29255-29662]"
    }, {
      "left" : "new AbstractCalledLater(myVcs.getProject(), ModalityState.NON_MODAL) {\n      public void run() {\n        if (myInRefresh) return;\n        myInRefresh = true;\n        myTargetSelection = myDualView.getFlatView().getSelectedObjects();\n\n        mySplitter.revalidate();\n        mySplitter.repaint();\n\n        myRefresherI.run(true, useLastRevision);\n        columnSizesOnce();\n      }\n    }.callMe();",
      "right" : "new AbstractCalledLater(myVcs.getProject(), ModalityState.NON_MODAL) {\n      public void run() {\n        if (myInRefresh) return;\n        myInRefresh = true;\n        myTargetSelection = myDualView.getFlatView().getSelectedObjects();\n\n        mySplitter.revalidate();\n        mySplitter.repaint();\n\n        myRefresherI.run(true, useLastRevision);\n        columnSizesOnce();\n      }\n    }.callMe();",
      "info" : "ExpressionStatement[29261-29658]:ExpressionStatement[29261-29658]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29338-29344]:Modifier[29338-29344]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29345-29349]:PrimitiveType[29345-29349]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[29350-29353]:SimpleName[29350-29353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29356-29642]:Block[29356-29642]"
    }, {
      "left" : "if (myInRefresh)",
      "right" : "if (myInRefresh)",
      "info" : "IfStatement[29366-29390]:IfStatement[29366-29390]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[29383-29390]:ReturnStatement[29383-29390]"
    }, {
      "left" : "myInRefresh = true;",
      "right" : "myInRefresh = true;",
      "info" : "ExpressionStatement[29399-29418]:ExpressionStatement[29399-29418]"
    }, {
      "left" : "myTargetSelection = myDualView.getFlatView().getSelectedObjects();",
      "right" : "myTargetSelection = myDualView.getFlatView().getSelectedObjects();",
      "info" : "ExpressionStatement[29427-29493]:ExpressionStatement[29427-29493]"
    }, {
      "left" : "mySplitter.revalidate();",
      "right" : "mySplitter.revalidate();",
      "info" : "ExpressionStatement[29503-29527]:ExpressionStatement[29503-29527]"
    }, {
      "left" : "mySplitter.repaint();",
      "right" : "mySplitter.repaint();",
      "info" : "ExpressionStatement[29536-29557]:ExpressionStatement[29536-29557]"
    }, {
      "left" : "myRefresherI.run(true, useLastRevision);",
      "right" : "myRefresherI.run(true, useLastRevision);",
      "info" : "ExpressionStatement[29567-29607]:ExpressionStatement[29567-29607]"
    }, {
      "left" : "columnSizesOnce();",
      "right" : "columnSizesOnce();",
      "info" : "ExpressionStatement[29616-29634]:ExpressionStatement[29616-29634]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29666-29672]:Modifier[29666-29672]"
    }, {
      "left" : "AsynchConsumer<VcsHistorySession>",
      "right" : "AsynchConsumer<VcsHistorySession>",
      "info" : "ParameterizedType[29673-29706]:ParameterizedType[29673-29706]"
    }, {
      "left" : "getHistoryPanelRefresh",
      "right" : "getHistoryPanelRefresh",
      "info" : "SimpleName[29707-29729]:SimpleName[29707-29729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29732-29771]:Block[29732-29771]"
    }, {
      "left" : "return myHistoryPanelRefresh;",
      "right" : "return myHistoryPanelRefresh;",
      "info" : "ReturnStatement[29738-29767]:ReturnStatement[29738-29767]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[29775-29782]:Modifier[29775-29782]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[29783-29790]:PrimitiveType[29783-29790]"
    }, {
      "left" : "supportsTree",
      "right" : "supportsTree",
      "info" : "SimpleName[29791-29803]:SimpleName[29791-29803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29806-29903]:Block[29806-29903]"
    }, {
      "left" : "return myHistorySession != null && myHistorySession.getHistoryAsTreeProvider() != null;",
      "right" : "return myHistorySession != null && myHistorySession.getHistoryAsTreeProvider() != null;",
      "info" : "ReturnStatement[29812-29899]:ReturnStatement[29812-29899]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[29907-29914]:Modifier[29907-29914]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[29915-29920]:TYPE_DECLARATION_KIND[29915-29920]"
    }, {
      "left" : "MyShowAsTreeAction",
      "right" : "MyShowAsTreeAction",
      "info" : "SimpleName[29921-29939]:SimpleName[29921-29939]"
    }, {
      "left" : "ToggleAction",
      "right" : "ToggleAction",
      "info" : "SimpleType[29948-29960]:SimpleType[29948-29960]"
    }, {
      "left" : "DumbAware",
      "right" : "DumbAware",
      "info" : "SimpleType[29972-29981]:SimpleType[29972-29981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29988-29994]:Modifier[29988-29994]"
    }, {
      "left" : "MyShowAsTreeAction",
      "right" : "MyShowAsTreeAction",
      "info" : "SimpleName[29995-30013]:SimpleName[29995-30013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30016-30133]:Block[30016-30133]"
    }, {
      "left" : "super(VcsBundle.message(\"action.name.show.files.as.tree\"), null, PlatformIcons.SMALL_VCS_CONFIGURABLE);",
      "right" : "super(VcsBundle.message(\"action.name.show.files.as.tree\"), null, PlatformIcons.SMALL_VCS_CONFIGURABLE);",
      "info" : "SuperConstructorInvocation[30024-30127]:SuperConstructorInvocation[30024-30127]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30139-30145]:Modifier[30139-30145]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[30146-30153]:PrimitiveType[30146-30153]"
    }, {
      "left" : "isSelected",
      "right" : "isSelected",
      "info" : "SimpleName[30154-30164]:SimpleName[30154-30164]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[30165-30180]:SingleVariableDeclaration[30165-30180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30182-30248]:Block[30182-30248]"
    }, {
      "left" : "return getConfiguration().SHOW_FILE_HISTORY_AS_TREE;",
      "right" : "return getConfiguration().SHOW_FILE_HISTORY_AS_TREE;",
      "info" : "ReturnStatement[30190-30242]:ReturnStatement[30190-30242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30254-30260]:Modifier[30254-30260]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30261-30265]:PrimitiveType[30261-30265]"
    }, {
      "left" : "setSelected",
      "right" : "setSelected",
      "info" : "SimpleName[30266-30277]:SimpleName[30266-30277]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[30278-30293]:SingleVariableDeclaration[30278-30293]"
    }, {
      "left" : "boolean state",
      "right" : "boolean state",
      "info" : "SingleVariableDeclaration[30295-30308]:SingleVariableDeclaration[30295-30308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30310-30397]:Block[30310-30397]"
    }, {
      "left" : "getConfiguration().SHOW_FILE_HISTORY_AS_TREE = state;",
      "right" : "getConfiguration().SHOW_FILE_HISTORY_AS_TREE = state;",
      "info" : "ExpressionStatement[30318-30371]:ExpressionStatement[30318-30371]"
    }, {
      "left" : "chooseView();",
      "right" : "chooseView();",
      "info" : "ExpressionStatement[30378-30391]:ExpressionStatement[30378-30391]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30405-30412]:Modifier[30405-30412]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[30413-30418]:TYPE_DECLARATION_KIND[30413-30418]"
    }, {
      "left" : "MyDiffAction",
      "right" : "MyDiffAction",
      "info" : "SimpleName[30419-30431]:SimpleName[30419-30431]"
    }, {
      "left" : "AbstractActionForSomeSelection",
      "right" : "AbstractActionForSomeSelection",
      "info" : "SimpleType[30440-30470]:SimpleType[30440-30470]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30477-30483]:Modifier[30477-30483]"
    }, {
      "left" : "MyDiffAction",
      "right" : "MyDiffAction",
      "info" : "SimpleName[30484-30496]:SimpleName[30484-30496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30499-30660]:Block[30499-30660]"
    }, {
      "left" : "super(VcsBundle.message(\"action.name.compare\"), VcsBundle.message(\"action.description.compare\"), \"diff\", 2,\n            FileHistoryPanelImpl.this);",
      "right" : "super(VcsBundle.message(\"action.name.compare\"), VcsBundle.message(\"action.description.compare\"), \"diff\", 2,\n            FileHistoryPanelImpl.this);",
      "info" : "SuperConstructorInvocation[30507-30654]:SuperConstructorInvocation[30507-30654]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30666-30675]:Modifier[30666-30675]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30676-30680]:PrimitiveType[30676-30680]"
    }, {
      "left" : "executeAction",
      "right" : "executeAction",
      "info" : "SimpleName[30681-30694]:SimpleName[30681-30694]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[30695-30710]:SingleVariableDeclaration[30695-30710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30712-31781]:Block[30712-31781]"
    }, {
      "left" : "List<TreeNodeOnVcsRevision> sel = getSelection();",
      "right" : "List<TreeNodeOnVcsRevision> sel = getSelection();",
      "info" : "VariableDeclarationStatement[30720-30769]:VariableDeclarationStatement[30720-30769]"
    }, {
      "left" : "int selectionSize = sel.size();",
      "right" : "int selectionSize = sel.size();",
      "info" : "VariableDeclarationStatement[30777-30808]:VariableDeclarationStatement[30777-30808]"
    }, {
      "left" : "if (selectionSize > 1)",
      "right" : "if (selectionSize > 1)",
      "info" : "IfStatement[30815-31775]:IfStatement[30815-31775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30838-31005]:Block[30838-31005]"
    }, {
      "left" : "myDiffHandler.showDiffForTwo(e.getRequiredData(CommonDataKeys.PROJECT), myFilePath, sel.get(0).getRevision(), sel.get(sel.size() - 1).getRevision());",
      "right" : "myDiffHandler.showDiffForTwo(e.getRequiredData(CommonDataKeys.PROJECT), myFilePath, sel.get(0).getRevision(), sel.get(sel.size() - 1).getRevision());",
      "info" : "ExpressionStatement[30848-30997]:ExpressionStatement[30848-30997]"
    }, {
      "left" : "if (selectionSize == 1)",
      "right" : "if (selectionSize == 1)",
      "info" : "IfStatement[31017-31775]:IfStatement[31017-31775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31041-31775]:Block[31041-31775]"
    }, {
      "left" : "final TableView<TreeNodeOnVcsRevision> flatView = myDualView.getFlatView();",
      "right" : "final TableView<TreeNodeOnVcsRevision> flatView = myDualView.getFlatView();",
      "info" : "VariableDeclarationStatement[31051-31126]:VariableDeclarationStatement[31051-31126]"
    }, {
      "left" : "final int selectedRow = flatView.getSelectedRow();",
      "right" : "final int selectedRow = flatView.getSelectedRow();",
      "info" : "VariableDeclarationStatement[31135-31185]:VariableDeclarationStatement[31135-31185]"
    }, {
      "left" : "VcsFileRevision revision = getFirstSelectedRevision();",
      "right" : "VcsFileRevision revision = getFirstSelectedRevision();",
      "info" : "VariableDeclarationStatement[31194-31248]:VariableDeclarationStatement[31194-31248]"
    }, {
      "left" : "VcsFileRevision previousRevision;",
      "right" : "VcsFileRevision previousRevision;",
      "info" : "VariableDeclarationStatement[31258-31291]:VariableDeclarationStatement[31258-31291]"
    }, {
      "left" : "if (selectedRow == (flatView.getRowCount() - 1))",
      "right" : "if (selectedRow == (flatView.getRowCount() - 1))",
      "info" : "IfStatement[31300-31598]:IfStatement[31300-31598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31349-31504]:Block[31349-31504]"
    }, {
      "left" : "previousRevision = myBottomRevisionForShowDiff != null ? myBottomRevisionForShowDiff : VcsFileRevision.NULL;",
      "right" : "previousRevision = myBottomRevisionForShowDiff != null ? myBottomRevisionForShowDiff : VcsFileRevision.NULL;",
      "info" : "ExpressionStatement[31386-31494]:ExpressionStatement[31386-31494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31510-31598]:Block[31510-31598]"
    }, {
      "left" : "previousRevision = flatView.getRow(selectedRow + 1).getRevision();",
      "right" : "previousRevision = flatView.getRow(selectedRow + 1).getRevision();",
      "info" : "ExpressionStatement[31522-31588]:ExpressionStatement[31522-31588]"
    }, {
      "left" : "if (revision != null)",
      "right" : "if (revision != null)",
      "info" : "IfStatement[31608-31767]:IfStatement[31608-31767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31630-31767]:Block[31630-31767]"
    }, {
      "left" : "myDiffHandler.showDiffForOne(e, e.getRequiredData(CommonDataKeys.PROJECT), myFilePath, previousRevision, revision);",
      "right" : "myDiffHandler.showDiffForOne(e, e.getRequiredData(CommonDataKeys.PROJECT), myFilePath, previousRevision, revision);",
      "info" : "ExpressionStatement[31642-31757]:ExpressionStatement[31642-31757]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31787-31793]:Modifier[31787-31793]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31794-31798]:PrimitiveType[31794-31798]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[31799-31805]:SimpleName[31799-31805]"
    }, {
      "left" : "final AnActionEvent e",
      "right" : "final AnActionEvent e",
      "info" : "SingleVariableDeclaration[31806-31827]:SingleVariableDeclaration[31806-31827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31829-31986]:Block[31829-31986]"
    }, {
      "left" : "super.update(e);",
      "right" : "super.update(e);",
      "info" : "ExpressionStatement[31837-31853]:ExpressionStatement[31837-31853]"
    }, {
      "left" : "final int selectionSize = getSelection().size();",
      "right" : "final int selectionSize = getSelection().size();",
      "info" : "VariableDeclarationStatement[31860-31908]:VariableDeclarationStatement[31860-31908]"
    }, {
      "left" : "e.getPresentation().setEnabled(selectionSize > 0 && isEnabled());",
      "right" : "e.getPresentation().setEnabled(selectionSize > 0 && isEnabled());",
      "info" : "ExpressionStatement[31915-31980]:ExpressionStatement[31915-31980]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31992-31998]:Modifier[31992-31998]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[31999-32006]:PrimitiveType[31999-32006]"
    }, {
      "left" : "isEnabled",
      "right" : "isEnabled",
      "info" : "SimpleName[32007-32016]:SimpleName[32007-32016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32019-32339]:Block[32019-32339]"
    }, {
      "left" : "final int selectionSize = getSelection().size();",
      "right" : "final int selectionSize = getSelection().size();",
      "info" : "VariableDeclarationStatement[32027-32075]:VariableDeclarationStatement[32027-32075]"
    }, {
      "left" : "if (selectionSize == 1)",
      "right" : "if (selectionSize == 1)",
      "info" : "IfStatement[32082-32313]:IfStatement[32082-32313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32106-32237]:Block[32106-32237]"
    }, {
      "left" : "List<TreeNodeOnVcsRevision> sel = getSelection();",
      "right" : "List<TreeNodeOnVcsRevision> sel = getSelection();",
      "info" : "VariableDeclarationStatement[32116-32165]:VariableDeclarationStatement[32116-32165]"
    }, {
      "left" : "return myHistorySession.isContentAvailable(sel.get(0));",
      "right" : "return myHistorySession.isContentAvailable(sel.get(0));",
      "info" : "ReturnStatement[32174-32229]:ReturnStatement[32174-32229]"
    }, {
      "left" : "if (selectionSize > 1)",
      "right" : "if (selectionSize > 1)",
      "info" : "IfStatement[32249-32313]:IfStatement[32249-32313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32272-32313]:Block[32272-32313]"
    }, {
      "left" : "return isDiffEnabled();",
      "right" : "return isDiffEnabled();",
      "info" : "ReturnStatement[32282-32305]:ReturnStatement[32282-32305]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[32320-32333]:ReturnStatement[32320-32333]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[32345-32352]:Modifier[32345-32352]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32353-32360]:PrimitiveType[32353-32360]"
    }, {
      "left" : "isDiffEnabled",
      "right" : "isDiffEnabled",
      "info" : "SimpleName[32361-32374]:SimpleName[32361-32374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32377-32566]:Block[32377-32566]"
    }, {
      "left" : "List<TreeNodeOnVcsRevision> sel = getSelection();",
      "right" : "List<TreeNodeOnVcsRevision> sel = getSelection();",
      "info" : "VariableDeclarationStatement[32385-32434]:VariableDeclarationStatement[32385-32434]"
    }, {
      "left" : "return myHistorySession.isContentAvailable(sel.get(0)) && myHistorySession.isContentAvailable(sel.get(sel.size() - 1));",
      "right" : "return myHistorySession.isContentAvailable(sel.get(0)) && myHistorySession.isContentAvailable(sel.get(sel.size() - 1));",
      "info" : "ReturnStatement[32441-32560]:ReturnStatement[32441-32560]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32652-32658]:Modifier[32652-32658]"
    }, {
      "left" : "MyGetVersionAction",
      "right" : "MyGetVersionAction",
      "info" : "SimpleName[32659-32677]:SimpleName[32659-32677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32680-32890]:Block[32680-32890]"
    }, {
      "left" : "super(VcsBundle.message(\"action.name.get.file.content.from.repository\"),\n            VcsBundle.message(\"action.description.get.file.content.from.repository\"), \"get\", 1, FileHistoryPanelImpl.this);",
      "right" : "super(VcsBundle.message(\"action.name.get.file.content.from.repository\"),\n            VcsBundle.message(\"action.description.get.file.content.from.repository\"), \"get\", 1, FileHistoryPanelImpl.this);",
      "info" : "SuperConstructorInvocation[32688-32884]:SuperConstructorInvocation[32688-32884]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[32896-32905]:MarkerAnnotation[32896-32905]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32910-32916]:Modifier[32910-32916]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[32917-32924]:PrimitiveType[32917-32924]"
    }, {
      "left" : "isEnabled",
      "right" : "isEnabled",
      "info" : "SimpleName[32925-32934]:SimpleName[32925-32934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32937-33115]:Block[32937-33115]"
    }, {
      "left" : "return super.isEnabled() && getVirtualParent() != null &&\n             myHistorySession.isContentAvailable(getFirstSelectedRevision()) && !myFilePath.isDirectory();",
      "right" : "return super.isEnabled() && getVirtualParent() != null &&\n             myHistorySession.isContentAvailable(getFirstSelectedRevision()) && !myFilePath.isDirectory();",
      "info" : "ReturnStatement[32945-33109]:ReturnStatement[32945-33109]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[33655-33662]:Modifier[33695-33702]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33663-33667]:PrimitiveType[33703-33707]"
    }, {
      "left" : "refreshFile",
      "right" : "refreshFile",
      "info" : "SimpleName[33668-33679]:SimpleName[33708-33719]"
    }, {
      "left" : "VcsFileRevision revision",
      "right" : "VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[33680-33704]:SingleVariableDeclaration[33720-33744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33706-34557]:Block[33746-34597]"
    }, {
      "left" : "Runnable refresh = null;",
      "right" : "Runnable refresh = null;",
      "info" : "VariableDeclarationStatement[33714-33738]:VariableDeclarationStatement[33754-33778]"
    }, {
      "left" : "final VirtualFile vf = getVirtualFile();",
      "right" : "final VirtualFile vf = getVirtualFile();",
      "info" : "VariableDeclarationStatement[33745-33785]:VariableDeclarationStatement[33785-33825]"
    }, {
      "left" : "if (vf == null)",
      "right" : "if (vf == null)",
      "info" : "IfStatement[33792-34380]:IfStatement[33832-34420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33808-34239]:Block[33848-34279]"
    }, {
      "left" : "final LocalHistoryAction action = startLocalHistoryAction(revision);",
      "right" : "final LocalHistoryAction action = startLocalHistoryAction(revision);",
      "info" : "VariableDeclarationStatement[33818-33886]:VariableDeclarationStatement[33858-33926]"
    }, {
      "left" : "final VirtualFile vp = getVirtualParent();",
      "right" : "final VirtualFile vp = getVirtualParent();",
      "info" : "VariableDeclarationStatement[33895-33937]:VariableDeclarationStatement[33935-33977]"
    }, {
      "left" : "if (vp != null)",
      "right" : "if (vp != null)",
      "info" : "IfStatement[33946-34231]:IfStatement[33986-34271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33962-34231]:Block[34002-34271]"
    }, {
      "left" : "refresh = new Runnable() {\n            public void run() {\n              vp.refresh(false, true, new Runnable() {\n                public void run() {\n                  action.finish();\n                }\n              });\n            }\n          };",
      "right" : "refresh = new Runnable() {\n            public void run() {\n              vp.refresh(false, true, new Runnable() {\n                public void run() {\n                  action.finish();\n                }\n              });\n            }\n          };",
      "info" : "ExpressionStatement[33974-34221]:ExpressionStatement[34014-34261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34013-34019]:Modifier[34053-34059]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34020-34024]:PrimitiveType[34060-34064]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[34025-34028]:SimpleName[34065-34068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34031-34208]:Block[34071-34248]"
    }, {
      "left" : "vp.refresh(false, true, new Runnable() {\n                public void run() {\n                  action.finish();\n                }\n              });",
      "right" : "vp.refresh(false, true, new Runnable() {\n                public void run() {\n                  action.finish();\n                }\n              });",
      "info" : "ExpressionStatement[34047-34194]:ExpressionStatement[34087-34234]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34104-34110]:Modifier[34144-34150]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34111-34115]:PrimitiveType[34151-34155]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[34116-34119]:SimpleName[34156-34159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34122-34176]:Block[34162-34216]"
    }, {
      "left" : "action.finish();",
      "right" : "action.finish();",
      "info" : "ExpressionStatement[34142-34158]:ExpressionStatement[34182-34198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34245-34380]:Block[34285-34420]"
    }, {
      "left" : "refresh = new Runnable() {\n          public void run() {\n            vf.refresh(false, false);\n          }\n        };",
      "right" : "refresh = new Runnable() {\n          public void run() {\n            vf.refresh(false, false);\n          }\n        };",
      "info" : "ExpressionStatement[34255-34372]:ExpressionStatement[34295-34412]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34292-34298]:Modifier[34332-34338]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34299-34303]:PrimitiveType[34339-34343]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[34304-34307]:SimpleName[34344-34347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34310-34361]:Block[34350-34401]"
    }, {
      "left" : "vf.refresh(false, false);",
      "right" : "vf.refresh(false, false);",
      "info" : "ExpressionStatement[34324-34349]:ExpressionStatement[34364-34389]"
    }, {
      "left" : "if (refresh != null)",
      "right" : "if (refresh != null)",
      "info" : "IfStatement[34387-34551]:IfStatement[34427-34591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34408-34551]:Block[34448-34591]"
    }, {
      "left" : "ProgressManager.getInstance().runProcessWithProgressSynchronously(refresh, \"Refreshing files...\", false, myVcs.getProject());",
      "right" : "ProgressManager.getInstance().runProcessWithProgressSynchronously(refresh, \"Refreshing files...\", false, myVcs.getProject());",
      "info" : "ExpressionStatement[34418-34543]:ExpressionStatement[34458-34583]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[34563-34570]:Modifier[34603-34610]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34571-34575]:PrimitiveType[34611-34615]"
    }, {
      "left" : "getVersion",
      "right" : "getVersion",
      "info" : "SimpleName[34576-34586]:SimpleName[34616-34626]"
    }, {
      "left" : "final VcsFileRevision revision",
      "right" : "final VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[34587-34617]:SingleVariableDeclaration[34627-34657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34619-37515]:Block[34659-37555]"
    }, {
      "left" : "final VirtualFile file = getVirtualFile();",
      "right" : "final VirtualFile file = getVirtualFile();",
      "info" : "VariableDeclarationStatement[34627-34669]:VariableDeclarationStatement[34667-34709]"
    }, {
      "left" : "final Project project = myVcs.getProject();",
      "right" : "final Project project = myVcs.getProject();",
      "info" : "VariableDeclarationStatement[34676-34719]:VariableDeclarationStatement[34716-34759]"
    }, {
      "left" : "new Task.Backgroundable(project, VcsBundle.message(\"show.diff.progress.title\")) {\n        @Override\n        public void run(@NotNull ProgressIndicator indicator) {\n          final LocalHistoryAction action = file != null ? startLocalHistoryAction(revision) : LocalHistoryAction.NULL;\n          final byte[] revisionContent;\n          try {\n            revisionContent = VcsHistoryUtil.loadRevisionContent(revision);\n          } catch (final IOException e) {\n            LOG.info(e);\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });\n            return;\n          } catch (final VcsException e) {\n            LOG.info(e);\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });\n            return;\n          } catch (ProcessCanceledException ex) {\n            return;\n          }\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              try {\n                new WriteCommandAction.Simple(project) {\n                  @Override\n                  protected void run() throws Throwable {\n                    if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles()) {\n                      return;\n                    }\n\n                    try {\n                      write(revisionContent);\n                    }\n                    catch (IOException e) {\n                      Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());\n                    }\n                  }\n                }.execute();\n                if (file != null) {\n                  VcsDirtyScopeManager.getInstance(project).fileDirty(file);\n                }\n              }\n              finally {\n                action.finish();\n              }\n            }\n          });\n        }\n      }.queue();",
      "right" : "new Task.Backgroundable(project, VcsBundle.message(\"show.diff.progress.title\")) {\n        @Override\n        public void run(@NotNull ProgressIndicator indicator) {\n          final LocalHistoryAction action = file != null ? startLocalHistoryAction(revision) : LocalHistoryAction.NULL;\n          final byte[] revisionContent;\n          try {\n            revisionContent = VcsHistoryUtil.loadRevisionContent(revision);\n          } catch (final IOException e) {\n            LOG.info(e);\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });\n            return;\n          } catch (final VcsException e) {\n            LOG.info(e);\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });\n            return;\n          } catch (ProcessCanceledException ex) {\n            return;\n          }\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              try {\n                new WriteCommandAction.Simple(project) {\n                  @Override\n                  protected void run() throws Throwable {\n                    if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles()) {\n                      return;\n                    }\n\n                    try {\n                      write(revisionContent);\n                    }\n                    catch (IOException e) {\n                      Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());\n                    }\n                  }\n                }.execute();\n                if (file != null) {\n                  VcsDirtyScopeManager.getInstance(project).fileDirty(file);\n                }\n              }\n              finally {\n                action.finish();\n              }\n            }\n          });\n        }\n      }.queue();",
      "info" : "ExpressionStatement[34727-37509]:ExpressionStatement[34767-37549]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[34817-34826]:MarkerAnnotation[34857-34866]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34835-34841]:Modifier[34875-34881]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34842-34846]:PrimitiveType[34882-34886]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[34847-34850]:SimpleName[34887-34890]"
    }, {
      "left" : "@NotNull ProgressIndicator indicator",
      "right" : "@NotNull ProgressIndicator indicator",
      "info" : "SingleVariableDeclaration[34851-34887]:SingleVariableDeclaration[34891-34927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34889-37492]:Block[34929-37532]"
    }, {
      "left" : "final LocalHistoryAction action = file != null ? startLocalHistoryAction(revision) : LocalHistoryAction.NULL;",
      "right" : "final LocalHistoryAction action = file != null ? startLocalHistoryAction(revision) : LocalHistoryAction.NULL;",
      "info" : "VariableDeclarationStatement[34901-35010]:VariableDeclarationStatement[34941-35050]"
    }, {
      "left" : "final byte[] revisionContent;",
      "right" : "final byte[] revisionContent;",
      "info" : "VariableDeclarationStatement[35021-35050]:VariableDeclarationStatement[35061-35090]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[35061-36217]:TryStatement[35101-36257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35065-35154]:Block[35105-35194]"
    }, {
      "left" : "revisionContent = VcsHistoryUtil.loadRevisionContent(revision);",
      "right" : "revisionContent = VcsHistoryUtil.loadRevisionContent(revision);",
      "info" : "ExpressionStatement[35079-35142]:ExpressionStatement[35119-35182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35183-35650]:Block[35223-35690]"
    }, {
      "left" : "LOG.info(e);",
      "right" : "LOG.info(e);",
      "info" : "ExpressionStatement[35197-35209]:ExpressionStatement[35237-35249]"
    }, {
      "left" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });",
      "right" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });",
      "info" : "ExpressionStatement[35222-35618]:ExpressionStatement[35262-35658]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35301-35310]:MarkerAnnotation[35341-35350]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35311-35317]:Modifier[35351-35357]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35318-35322]:PrimitiveType[35358-35362]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[35323-35326]:SimpleName[35363-35366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35329-35602]:Block[35369-35642]"
    }, {
      "left" : "Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());",
      "right" : "Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());",
      "info" : "ExpressionStatement[35347-35586]:ExpressionStatement[35387-35626]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[35631-35638]:ReturnStatement[35671-35678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35680-36147]:Block[35720-36187]"
    }, {
      "left" : "LOG.info(e);",
      "right" : "LOG.info(e);",
      "info" : "ExpressionStatement[35694-35706]:ExpressionStatement[35734-35746]"
    }, {
      "left" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });",
      "right" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n              @Override public void run() {\n                Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());\n              }\n            });",
      "info" : "ExpressionStatement[35719-36115]:ExpressionStatement[35759-36155]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[35798-35807]:MarkerAnnotation[35838-35847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35808-35814]:Modifier[35848-35854]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35815-35819]:PrimitiveType[35855-35859]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[35820-35823]:SimpleName[35860-35863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35826-36099]:Block[35866-36139]"
    }, {
      "left" : "Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());",
      "right" : "Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()),\n                                           VcsBundle.message(\"message.title.get.revision.content\"), Messages.getInformationIcon());",
      "info" : "ExpressionStatement[35844-36083]:ExpressionStatement[35884-36123]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36128-36135]:ReturnStatement[36168-36175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36184-36217]:Block[36224-36257]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36198-36205]:ReturnStatement[36238-36245]"
    }, {
      "left" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              try {\n                new WriteCommandAction.Simple(project) {\n                  @Override\n                  protected void run() throws Throwable {\n                    if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles()) {\n                      return;\n                    }\n\n                    try {\n                      write(revisionContent);\n                    }\n                    catch (IOException e) {\n                      Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());\n                    }\n                  }\n                }.execute();\n                if (file != null) {\n                  VcsDirtyScopeManager.getInstance(project).fileDirty(file);\n                }\n              }\n              finally {\n                action.finish();\n              }\n            }\n          });",
      "right" : "ApplicationManager.getApplication().invokeLater(new Runnable() {\n            @Override\n            public void run() {\n              try {\n                new WriteCommandAction.Simple(project) {\n                  @Override\n                  protected void run() throws Throwable {\n                    if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles()) {\n                      return;\n                    }\n\n                    try {\n                      write(revisionContent);\n                    }\n                    catch (IOException e) {\n                      Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());\n                    }\n                  }\n                }.execute();\n                if (file != null) {\n                  VcsDirtyScopeManager.getInstance(project).fileDirty(file);\n                }\n              }\n              finally {\n                action.finish();\n              }\n            }\n          });",
      "info" : "ExpressionStatement[36229-37482]:ExpressionStatement[36269-37522]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36306-36315]:MarkerAnnotation[36346-36355]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36328-36334]:Modifier[36368-36374]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36335-36339]:PrimitiveType[36375-36379]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[36340-36343]:SimpleName[36380-36383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36346-37468]:Block[36386-37508]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[36362-37454]:TryStatement[36402-37494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36366-37381]:Block[36406-37421]"
    }, {
      "left" : "new WriteCommandAction.Simple(project) {\n                  @Override\n                  protected void run() throws Throwable {\n                    if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles()) {\n                      return;\n                    }\n\n                    try {\n                      write(revisionContent);\n                    }\n                    catch (IOException e) {\n                      Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());\n                    }\n                  }\n                }.execute();",
      "right" : "new WriteCommandAction.Simple(project) {\n                  @Override\n                  protected void run() throws Throwable {\n                    if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles()) {\n                      return;\n                    }\n\n                    try {\n                      write(revisionContent);\n                    }\n                    catch (IOException e) {\n                      Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());\n                    }\n                  }\n                }.execute();",
      "info" : "ExpressionStatement[36384-37234]:ExpressionStatement[36424-37274]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[36443-36452]:MarkerAnnotation[36483-36492]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[36471-36480]:Modifier[36511-36520]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[36481-36485]:PrimitiveType[36521-36525]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[36486-36489]:SimpleName[36526-36529]"
    }, {
      "left" : "Throwable",
      "right" : "Throwable",
      "info" : "SimpleType[36499-36508]:SimpleType[36539-36548]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36509-37205]:Block[36549-37245]"
    }, {
      "left" : "if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles())",
      "right" : "if (file != null &&\n                        !file.isWritable() &&\n                        ReadonlyStatusHandler.getInstance(project).ensureFilesWritable(file).hasReadonlyFiles())",
      "info" : "IfStatement[36531-36763]:IfStatement[36571-36803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36710-36763]:Block[36750-36803]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[36734-36741]:ReturnStatement[36774-36781]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[36785-37185]:TryStatement[36825-37225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36789-36858]:Block[36829-36898]"
    }, {
      "left" : "write(revisionContent);",
      "right" : "write(revisionContent);",
      "info" : "ExpressionStatement[36813-36836]:ExpressionStatement[36853-36876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36901-37185]:Block[36941-37225]"
    }, {
      "left" : "Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());",
      "right" : "Messages.showMessageDialog(VcsBundle.message(\"message.text.cannot.save.content\", e.getLocalizedMessage()),\n                                                 VcsBundle.message(\"message.title.get.revision.content\"), Messages.getErrorIcon());",
      "info" : "ExpressionStatement[36925-37163]:ExpressionStatement[36965-37203]"
    }, {
      "left" : "if (file != null)",
      "right" : "if (file != null)",
      "info" : "IfStatement[37251-37365]:IfStatement[37291-37405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37269-37365]:Block[37309-37405]"
    }, {
      "left" : "VcsDirtyScopeManager.getInstance(project).fileDirty(file);",
      "right" : "VcsDirtyScopeManager.getInstance(project).fileDirty(file);",
      "info" : "ExpressionStatement[37289-37347]:ExpressionStatement[37329-37387]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37404-37454]:Block[37444-37494]"
    }, {
      "left" : "action.finish();",
      "right" : "action.finish();",
      "info" : "ExpressionStatement[37422-37438]:ExpressionStatement[37462-37478]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37521-37528]:Modifier[37561-37568]"
    }, {
      "left" : "LocalHistoryAction",
      "right" : "LocalHistoryAction",
      "info" : "SimpleType[37529-37547]:SimpleType[37569-37587]"
    }, {
      "left" : "startLocalHistoryAction",
      "right" : "startLocalHistoryAction",
      "info" : "SimpleName[37548-37571]:SimpleName[37588-37611]"
    }, {
      "left" : "final VcsFileRevision revision",
      "right" : "final VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[37572-37602]:SingleVariableDeclaration[37612-37642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37604-37696]:Block[37644-37736]"
    }, {
      "left" : "return LocalHistory.getInstance().startAction(createGetActionTitle(revision));",
      "right" : "return LocalHistory.getInstance().startAction(createGetActionTitle(revision));",
      "info" : "ReturnStatement[37612-37690]:ReturnStatement[37652-37730]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37702-37709]:Modifier[37742-37749]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[37710-37716]:SimpleType[37750-37756]"
    }, {
      "left" : "createGetActionTitle",
      "right" : "createGetActionTitle",
      "info" : "SimpleName[37717-37737]:SimpleName[37757-37777]"
    }, {
      "left" : "final VcsFileRevision revision",
      "right" : "final VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[37738-37768]:SingleVariableDeclaration[37778-37808]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37770-37906]:Block[37810-37946]"
    }, {
      "left" : "return VcsBundle.message(\"action.name.for.file.get.version\", getIOFile().getAbsolutePath(), revision.getRevisionNumber());",
      "right" : "return VcsBundle.message(\"action.name.for.file.get.version\", getIOFile().getAbsolutePath(), revision.getRevisionNumber());",
      "info" : "ReturnStatement[37778-37900]:ReturnStatement[37818-37940]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[37912-37919]:Modifier[37952-37959]"
    }, {
      "left" : "File",
      "right" : "File",
      "info" : "SimpleType[37920-37924]:SimpleType[37960-37964]"
    }, {
      "left" : "getIOFile",
      "right" : "getIOFile",
      "info" : "SimpleName[37925-37934]:SimpleName[37965-37974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37937-37981]:Block[37977-38021]"
    }, {
      "left" : "return myFilePath.getIOFile();",
      "right" : "return myFilePath.getIOFile();",
      "info" : "ReturnStatement[37945-37975]:ReturnStatement[37985-38015]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[38587-38594]:Modifier[38596-38603]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38595-38599]:PrimitiveType[38604-38608]"
    }, {
      "left" : "writeContentToIOFile",
      "right" : "writeContentToIOFile",
      "info" : "SimpleName[38600-38620]:SimpleName[38609-38629]"
    }, {
      "left" : "byte[] revisionContent",
      "right" : "byte[] revisionContent",
      "info" : "SingleVariableDeclaration[38621-38643]:SingleVariableDeclaration[38630-38652]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[38652-38663]:SimpleType[38661-38672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38664-38863]:Block[38673-38872]"
    }, {
      "left" : "FileOutputStream outputStream = new FileOutputStream(getIOFile());",
      "right" : "FileOutputStream outputStream = new FileOutputStream(getIOFile());",
      "info" : "VariableDeclarationStatement[38672-38738]:VariableDeclarationStatement[38681-38747]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[38745-38857]:TryStatement[38754-38866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38749-38803]:Block[38758-38812]"
    }, {
      "left" : "outputStream.write(revisionContent);",
      "right" : "outputStream.write(revisionContent);",
      "info" : "ExpressionStatement[38759-38795]:ExpressionStatement[38768-38804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38818-38857]:Block[38827-38866]"
    }, {
      "left" : "outputStream.close();",
      "right" : "outputStream.close();",
      "info" : "ExpressionStatement[38828-38849]:ExpressionStatement[38837-38858]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[39007-39014]:Modifier[38878-38885]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39015-39019]:PrimitiveType[38886-38890]"
    }, {
      "left" : "writeContentToDocument",
      "right" : "writeContentToDocument",
      "info" : "SimpleName[39020-39042]:SimpleName[38891-38913]"
    }, {
      "left" : "final Document document",
      "right" : "final Document document",
      "info" : "SingleVariableDeclaration[39043-39066]:SingleVariableDeclaration[38914-38937]"
    }, {
      "left" : "byte[] revisionContent",
      "right" : "byte[] revisionContent",
      "info" : "SingleVariableDeclaration[39068-39090]:SingleVariableDeclaration[38939-38961]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[39099-39110]:SimpleType[38970-38981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39111-39506]:Block[38982-39377]"
    }, {
      "left" : "final String content = StringUtil.convertLineSeparators(new String(revisionContent, myFilePath.getCharset().name()));",
      "right" : "final String content = StringUtil.convertLineSeparators(new String(revisionContent, myFilePath.getCharset().name()));",
      "info" : "VariableDeclarationStatement[39119-39236]:VariableDeclarationStatement[38990-39107]"
    }, {
      "left" : "CommandProcessor.getInstance().executeCommand(myVcs.getProject(), new Runnable() {\n        public void run() {\n          document.replaceString(0, document.getTextLength(), content);\n        }\n      }, VcsBundle.message(\"message.title.get.version\"), null);",
      "right" : "CommandProcessor.getInstance().executeCommand(myVcs.getProject(), new Runnable() {\n        public void run() {\n          document.replaceString(0, document.getTextLength(), content);\n        }\n      }, VcsBundle.message(\"message.title.get.version\"), null);",
      "info" : "ExpressionStatement[39244-39500]:ExpressionStatement[39115-39371]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39335-39341]:Modifier[39206-39212]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[39342-39346]:PrimitiveType[39213-39217]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[39347-39350]:SimpleName[39218-39221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39353-39436]:Block[39224-39307]"
    }, {
      "left" : "document.replaceString(0, document.getTextLength(), content);",
      "right" : "document.replaceString(0, document.getTextLength(), content);",
      "info" : "ExpressionStatement[39365-39426]:ExpressionStatement[39236-39297]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39608-39614]:Modifier[39479-39485]"
    }, {
      "left" : "MyAnnotateAction",
      "right" : "MyAnnotateAction",
      "info" : "SimpleName[39615-39631]:SimpleName[39486-39502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39634-39864]:Block[39505-39735]"
    }, {
      "left" : "super(VcsBundle.message(\"annotate.action.name\"), VcsBundle.message(\"annotate.action.description\"), AllIcons.Actions.Annotate);",
      "right" : "super(VcsBundle.message(\"annotate.action.name\"), VcsBundle.message(\"annotate.action.description\"), AllIcons.Actions.Annotate);",
      "info" : "SuperConstructorInvocation[39642-39768]:SuperConstructorInvocation[39513-39639]"
    }, {
      "left" : "setShortcutSet(ActionManager.getInstance().getAction(\"Annotate\").getShortcutSet());",
      "right" : "setShortcutSet(ActionManager.getInstance().getAction(\"Annotate\").getShortcutSet());",
      "info" : "ExpressionStatement[39775-39858]:ExpressionStatement[39646-39729]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[39870-39879]:MarkerAnnotation[39741-39750]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[39884-39893]:MarkerAnnotation[39755-39764]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[39898-39907]:Modifier[39769-39778]"
    }, {
      "left" : "AbstractVcs",
      "right" : "AbstractVcs",
      "info" : "SimpleType[39908-39919]:SimpleType[39779-39790]"
    }, {
      "left" : "getVcs",
      "right" : "getVcs",
      "info" : "SimpleName[39920-39926]:SimpleName[39791-39797]"
    }, {
      "left" : "@NotNull AnActionEvent e",
      "right" : "@NotNull AnActionEvent e",
      "info" : "SingleVariableDeclaration[39927-39951]:SingleVariableDeclaration[39798-39822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39953-39980]:Block[39824-39851]"
    }, {
      "left" : "return myVcs;",
      "right" : "return myVcs;",
      "info" : "ReturnStatement[39961-39974]:ReturnStatement[39832-39845]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[40529-40538]:MarkerAnnotation[40298-40307]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[40543-40552]:MarkerAnnotation[40312-40321]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[40557-40566]:Modifier[40326-40335]"
    }, {
      "left" : "VcsFileRevision",
      "right" : "VcsFileRevision",
      "info" : "SimpleType[40567-40582]:SimpleType[40336-40351]"
    }, {
      "left" : "getFileRevision",
      "right" : "getFileRevision",
      "info" : "SimpleName[40583-40598]:SimpleName[40352-40367]"
    }, {
      "left" : "@NotNull AnActionEvent e",
      "right" : "@NotNull AnActionEvent e",
      "info" : "SingleVariableDeclaration[40599-40623]:SingleVariableDeclaration[40368-40392]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40625-40803]:Block[40394-40572]"
    }, {
      "left" : "VcsFileRevision revision = e.getData(VcsDataKeys.VCS_FILE_REVISION);",
      "right" : "VcsFileRevision revision = e.getData(VcsDataKeys.VCS_FILE_REVISION);",
      "info" : "VariableDeclarationStatement[40633-40701]:VariableDeclarationStatement[40402-40470]"
    }, {
      "left" : "if (!myHistorySession.isContentAvailable(revision))",
      "right" : "if (!myHistorySession.isContentAvailable(revision))",
      "info" : "IfStatement[40709-40773]:IfStatement[40478-40542]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[40761-40773]:ReturnStatement[40530-40542]"
    }, {
      "left" : "return revision;",
      "right" : "return revision;",
      "info" : "ReturnStatement[40781-40797]:ReturnStatement[40550-40566]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[43174-43183]:MarkerAnnotation[42902-42911]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[43186-43193]:Modifier[42914-42921]"
    }, {
      "left" : "Change[]",
      "right" : "Change[]",
      "info" : "ArrayType[43194-43202]:ArrayType[42922-42930]"
    }, {
      "left" : "getChanges",
      "right" : "getChanges",
      "info" : "SimpleName[43203-43213]:SimpleName[42931-42941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43216-44167]:Block[42944-43895]"
    }, {
      "left" : "final VcsFileRevision[] revisions = getSelectedRevisions();",
      "right" : "final VcsFileRevision[] revisions = getSelectedRevisions();",
      "info" : "VariableDeclarationStatement[43222-43281]:VariableDeclarationStatement[42950-43009]"
    }, {
      "left" : "if (revisions.length > 0)",
      "right" : "if (revisions.length > 0)",
      "info" : "IfStatement[43287-44146]:IfStatement[43015-43874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43313-44146]:Block[43041-43874]"
    }, {
      "left" : "Arrays.sort(revisions, new Comparator<VcsFileRevision>() {\n        public int compare(final VcsFileRevision o1, final VcsFileRevision o2) {\n          return o1.getRevisionNumber().compareTo(o2.getRevisionNumber());\n        }\n      });",
      "right" : "Arrays.sort(revisions, new Comparator<VcsFileRevision>() {\n        public int compare(final VcsFileRevision o1, final VcsFileRevision o2) {\n          return o1.getRevisionNumber().compareTo(o2.getRevisionNumber());\n        }\n      });",
      "info" : "ExpressionStatement[43321-43555]:ExpressionStatement[43049-43283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43388-43394]:Modifier[43116-43122]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[43395-43398]:PrimitiveType[43123-43126]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[43399-43406]:SimpleName[43127-43134]"
    }, {
      "left" : "final VcsFileRevision o1",
      "right" : "final VcsFileRevision o1",
      "info" : "SingleVariableDeclaration[43407-43431]:SingleVariableDeclaration[43135-43159]"
    }, {
      "left" : "final VcsFileRevision o2",
      "right" : "final VcsFileRevision o2",
      "info" : "SingleVariableDeclaration[43433-43457]:SingleVariableDeclaration[43161-43185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43459-43545]:Block[43187-43273]"
    }, {
      "left" : "return o1.getRevisionNumber().compareTo(o2.getRevisionNumber());",
      "right" : "return o1.getRevisionNumber().compareTo(o2.getRevisionNumber());",
      "info" : "ReturnStatement[43471-43535]:ReturnStatement[43199-43263]"
    }, {
      "left" : "for (VcsFileRevision revision : revisions)",
      "right" : "for (VcsFileRevision revision : revisions)",
      "info" : "EnhancedForStatement[43563-43711]:EnhancedForStatement[43291-43439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43606-43711]:Block[43334-43439]"
    }, {
      "left" : "if (! myHistorySession.isContentAvailable(revision))",
      "right" : "if (! myHistorySession.isContentAvailable(revision))",
      "info" : "IfStatement[43616-43703]:IfStatement[43344-43431]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43669-43703]:Block[43397-43431]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[43681-43693]:ReturnStatement[43409-43421]"
    }, {
      "left" : "final ContentRevision startRevision = new LoadedContentRevision(myFilePath, revisions[0], myVcs.getProject());",
      "right" : "final ContentRevision startRevision = new LoadedContentRevision(myFilePath, revisions[0], myVcs.getProject());",
      "info" : "VariableDeclarationStatement[43719-43829]:VariableDeclarationStatement[43447-43557]"
    }, {
      "left" : "final ContentRevision endRevision = (revisions.length == 1) ? new CurrentContentRevision(myFilePath) :\n                                          new LoadedContentRevision(myFilePath, revisions[revisions.length - 1], myVcs.getProject());",
      "right" : "final ContentRevision endRevision = (revisions.length == 1) ? new CurrentContentRevision(myFilePath) :\n                                          new LoadedContentRevision(myFilePath, revisions[revisions.length - 1], myVcs.getProject());",
      "info" : "VariableDeclarationStatement[43836-44072]:VariableDeclarationStatement[43564-43800]"
    }, {
      "left" : "return new Change[]{new Change(startRevision, endRevision)};",
      "right" : "return new Change[]{new Change(startRevision, endRevision)};",
      "info" : "ReturnStatement[44080-44140]:ReturnStatement[43808-43868]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[44151-44163]:ReturnStatement[43879-43891]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[44171-44178]:Modifier[43899-43906]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[44179-44185]:Modifier[43907-43913]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[44186-44191]:TYPE_DECLARATION_KIND[43914-43919]"
    }, {
      "left" : "LoadedContentRevision",
      "right" : "LoadedContentRevision",
      "info" : "SimpleName[44192-44213]:SimpleName[43920-43941]"
    }, {
      "left" : "ContentRevision",
      "right" : "ContentRevision",
      "info" : "SimpleType[44225-44240]:SimpleType[43953-43968]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[44366-44373]:Modifier[44094-44101]"
    }, {
      "left" : "LoadedContentRevision",
      "right" : "LoadedContentRevision",
      "info" : "SimpleName[44374-44395]:SimpleName[44102-44123]"
    }, {
      "left" : "final FilePath file",
      "right" : "final FilePath file",
      "info" : "SingleVariableDeclaration[44396-44415]:SingleVariableDeclaration[44124-44143]"
    }, {
      "left" : "final VcsFileRevision revision",
      "right" : "final VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[44417-44447]:SingleVariableDeclaration[44145-44175]"
    }, {
      "left" : "final Project project",
      "right" : "final Project project",
      "info" : "SingleVariableDeclaration[44449-44470]:SingleVariableDeclaration[44177-44198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44472-44556]:Block[44200-44284]"
    }, {
      "left" : "myFile = file;",
      "right" : "myFile = file;",
      "info" : "ExpressionStatement[44480-44494]:ExpressionStatement[44208-44222]"
    }, {
      "left" : "myRevision = revision;",
      "right" : "myRevision = revision;",
      "info" : "ExpressionStatement[44501-44523]:ExpressionStatement[44229-44251]"
    }, {
      "left" : "myProject = project;",
      "right" : "myProject = project;",
      "info" : "ExpressionStatement[44530-44550]:ExpressionStatement[44258-44278]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44562-44568]:Modifier[44290-44296]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[44569-44575]:SimpleType[44297-44303]"
    }, {
      "left" : "getContent",
      "right" : "getContent",
      "info" : "SimpleName[44576-44586]:SimpleName[44304-44314]"
    }, {
      "left" : "VcsException",
      "right" : "VcsException",
      "info" : "SimpleType[44596-44608]:SimpleType[44324-44336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44609-44899]:Block[44337-44627]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[44617-44893]:TryStatement[44345-44621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44621-44742]:Block[44349-44470]"
    }, {
      "left" : "return VcsHistoryUtil.loadRevisionContentGuessEncoding(myRevision, myFile.getVirtualFile(), myProject);",
      "right" : "return VcsHistoryUtil.loadRevisionContentGuessEncoding(myRevision, myFile.getVirtualFile(), myProject);",
      "info" : "ReturnStatement[44631-44734]:ReturnStatement[44359-44462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44771-44893]:Block[44499-44621]"
    }, {
      "left" : "throw new VcsException(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()));",
      "right" : "throw new VcsException(VcsBundle.message(\"message.text.cannot.load.revision\", e.getLocalizedMessage()));",
      "info" : "ThrowStatement[44781-44885]:ThrowStatement[44509-44613]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[44905-44913]:MarkerAnnotation[44633-44641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44918-44924]:Modifier[44646-44652]"
    }, {
      "left" : "FilePath",
      "right" : "FilePath",
      "info" : "SimpleType[44925-44933]:SimpleType[44653-44661]"
    }, {
      "left" : "getFile",
      "right" : "getFile",
      "info" : "SimpleName[44934-44941]:SimpleName[44662-44669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44944-44972]:Block[44672-44700]"
    }, {
      "left" : "return myFile;",
      "right" : "return myFile;",
      "info" : "ReturnStatement[44952-44966]:ReturnStatement[44680-44694]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[44978-44986]:MarkerAnnotation[44706-44714]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44991-44997]:Modifier[44719-44725]"
    }, {
      "left" : "VcsRevisionNumber",
      "right" : "VcsRevisionNumber",
      "info" : "SimpleType[44998-45015]:SimpleType[44726-44743]"
    }, {
      "left" : "getRevisionNumber",
      "right" : "getRevisionNumber",
      "info" : "SimpleName[45016-45033]:SimpleName[44744-44761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45036-45088]:Block[44764-44816]"
    }, {
      "left" : "return myRevision.getRevisionNumber();",
      "right" : "return myRevision.getRevisionNumber();",
      "info" : "ReturnStatement[45044-45082]:ReturnStatement[44772-44810]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[45096-45103]:Modifier[44824-44831]"
    }, {
      "left" : "VirtualFile",
      "right" : "VirtualFile",
      "info" : "SimpleType[45104-45115]:SimpleType[44832-44843]"
    }, {
      "left" : "createVirtualFileForRevision",
      "right" : "createVirtualFileForRevision",
      "info" : "SimpleName[45116-45144]:SimpleName[44844-44872]"
    }, {
      "left" : "VcsFileRevision revision",
      "right" : "VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[45145-45169]:SingleVariableDeclaration[44873-44897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45171-45727]:Block[44899-45455]"
    }, {
      "left" : "if (!myRevisionToVirtualFile.containsKey(revision))",
      "right" : "if (!myRevisionToVirtualFile.containsKey(revision))",
      "info" : "IfStatement[45177-45673]:IfStatement[44905-45401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45229-45673]:Block[44957-45401]"
    }, {
      "left" : "FilePath filePath = (revision instanceof VcsFileRevisionEx ? ((VcsFileRevisionEx)revision).getPath() : myFilePath);",
      "right" : "FilePath filePath = (revision instanceof VcsFileRevisionEx ? ((VcsFileRevisionEx)revision).getPath() : myFilePath);",
      "info" : "VariableDeclarationStatement[45237-45352]:VariableDeclarationStatement[44965-45080]"
    }, {
      "left" : "myRevisionToVirtualFile.put(revision, filePath.isDirectory()\n                                            ? new VcsVirtualFolder(filePath.getPath(), null, VcsFileSystem.getInstance())\n                                            : new VcsVirtualFile(filePath.getPath(), revision, VcsFileSystem.getInstance()));",
      "right" : "myRevisionToVirtualFile.put(revision, filePath.isDirectory()\n                                            ? new VcsVirtualFolder(filePath.getPath(), null, VcsFileSystem.getInstance())\n                                            : new VcsVirtualFile(filePath.getPath(), revision, VcsFileSystem.getInstance()));",
      "info" : "ExpressionStatement[45359-45667]:ExpressionStatement[45087-45395]"
    }, {
      "left" : "return myRevisionToVirtualFile.get(revision);",
      "right" : "return myRevisionToVirtualFile.get(revision);",
      "info" : "ReturnStatement[45678-45723]:ReturnStatement[45406-45451]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[45731-45738]:Modifier[45459-45466]"
    }, {
      "left" : "List<TreeNodeOnVcsRevision>",
      "right" : "List<TreeNodeOnVcsRevision>",
      "info" : "ParameterizedType[45739-45766]:ParameterizedType[45467-45494]"
    }, {
      "left" : "getSelection",
      "right" : "getSelection",
      "info" : "SimpleName[45767-45779]:SimpleName[45495-45507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45782-45854]:Block[45510-45582]"
    }, {
      "left" : "return myDualView.getSelection();",
      "right" : "return myDualView.getSelection();",
      "info" : "ReturnStatement[45817-45850]:ReturnStatement[45545-45578]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[45858-45867]:MarkerAnnotation[45586-45595]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[45870-45877]:Modifier[45598-45605]"
    }, {
      "left" : "VcsFileRevision",
      "right" : "VcsFileRevision",
      "info" : "SimpleType[45878-45893]:SimpleType[45606-45621]"
    }, {
      "left" : "getFirstSelectedRevision",
      "right" : "getFirstSelectedRevision",
      "info" : "SimpleName[45894-45918]:SimpleName[45622-45646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45921-46070]:Block[45649-45798]"
    }, {
      "left" : "List selection = getSelection();",
      "right" : "List selection = getSelection();",
      "info" : "VariableDeclarationStatement[45927-45959]:VariableDeclarationStatement[45655-45687]"
    }, {
      "left" : "if (selection.isEmpty())",
      "right" : "if (selection.isEmpty())",
      "info" : "IfStatement[45964-46001]:IfStatement[45692-45729]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45989-46001]:ReturnStatement[45717-45729]"
    }, {
      "left" : "return ((TreeNodeOnVcsRevision)selection.get(0)).myRevision;",
      "right" : "return ((TreeNodeOnVcsRevision)selection.get(0)).myRevision;",
      "info" : "ReturnStatement[46006-46066]:ReturnStatement[45734-45794]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46074-46080]:Modifier[45802-45808]"
    }, {
      "left" : "VcsFileRevision[]",
      "right" : "VcsFileRevision[]",
      "info" : "ArrayType[46081-46098]:ArrayType[45809-45826]"
    }, {
      "left" : "getSelectedRevisions",
      "right" : "getSelectedRevisions",
      "info" : "SimpleName[46099-46119]:SimpleName[45827-45847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46122-46374]:Block[45850-46102]"
    }, {
      "left" : "List<TreeNodeOnVcsRevision> selection = getSelection();",
      "right" : "List<TreeNodeOnVcsRevision> selection = getSelection();",
      "info" : "VariableDeclarationStatement[46128-46183]:VariableDeclarationStatement[45856-45911]"
    }, {
      "left" : "VcsFileRevision[] result = new VcsFileRevision[selection.size()];",
      "right" : "VcsFileRevision[] result = new VcsFileRevision[selection.size()];",
      "info" : "VariableDeclarationStatement[46188-46253]:VariableDeclarationStatement[45916-45981]"
    }, {
      "left" : "for(int i=0; i<selection.size(); i++)",
      "right" : "for(int i=0; i<selection.size(); i++)",
      "info" : "ForStatement[46258-46351]:ForStatement[45986-46079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46296-46351]:Block[46024-46079]"
    }, {
      "left" : "result [i] = selection.get(i).myRevision;",
      "right" : "result [i] = selection.get(i).myRevision;",
      "info" : "ExpressionStatement[46304-46345]:ExpressionStatement[46032-46073]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[46356-46370]:ReturnStatement[46084-46098]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[46378-46384]:Modifier[46106-46112]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[46385-46390]:TYPE_DECLARATION_KIND[46113-46118]"
    }, {
      "left" : "TreeNodeOnVcsRevision",
      "right" : "TreeNodeOnVcsRevision",
      "info" : "SimpleName[46391-46412]:SimpleName[46119-46140]"
    }, {
      "left" : "DefaultMutableTreeNode",
      "right" : "DefaultMutableTreeNode",
      "info" : "SimpleType[46421-46443]:SimpleType[46149-46171]"
    }, {
      "left" : "VcsFileRevision",
      "right" : "VcsFileRevision",
      "info" : "SimpleType[46455-46470]:SimpleType[46183-46198]"
    }, {
      "left" : "DualTreeElement",
      "right" : "DualTreeElement",
      "info" : "SimpleType[46472-46487]:SimpleType[46200-46215]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46541-46547]:Modifier[46269-46275]"
    }, {
      "left" : "TreeNodeOnVcsRevision",
      "right" : "TreeNodeOnVcsRevision",
      "info" : "SimpleName[46548-46569]:SimpleName[46276-46297]"
    }, {
      "left" : "VcsFileRevision revision",
      "right" : "VcsFileRevision revision",
      "info" : "SingleVariableDeclaration[46570-46594]:SingleVariableDeclaration[46298-46322]"
    }, {
      "left" : "List<TreeItem<VcsFileRevision>> roots",
      "right" : "List<TreeItem<VcsFileRevision>> roots",
      "info" : "SingleVariableDeclaration[46596-46633]:SingleVariableDeclaration[46324-46361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46635-46856]:Block[46363-46584]"
    }, {
      "left" : "myRevision = revision == null ? VcsFileRevision.NULL : revision;",
      "right" : "myRevision = revision == null ? VcsFileRevision.NULL : revision;",
      "info" : "ExpressionStatement[46643-46707]:ExpressionStatement[46371-46435]"
    }, {
      "left" : "for (final TreeItem<VcsFileRevision> root : roots)",
      "right" : "for (final TreeItem<VcsFileRevision> root : roots)",
      "info" : "EnhancedForStatement[46714-46850]:EnhancedForStatement[46442-46578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46765-46850]:Block[46493-46578]"
    }, {
      "left" : "add(new TreeNodeOnVcsRevision(root.getData(), root.getChildren()));",
      "right" : "add(new TreeNodeOnVcsRevision(root.getData(), root.getChildren()));",
      "info" : "ExpressionStatement[46775-46842]:ExpressionStatement[46503-46570]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[46862-46871]:MarkerAnnotation[46590-46599]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[46876-46885]:MarkerAnnotation[46604-46613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46890-46896]:Modifier[46618-46624]"
    }, {
      "left" : "RepositoryLocation",
      "right" : "RepositoryLocation",
      "info" : "SimpleType[46897-46915]:SimpleType[46625-46643]"
    }, {
      "left" : "getChangedRepositoryPath",
      "right" : "getChangedRepositoryPath",
      "info" : "SimpleName[46916-46940]:SimpleName[46644-46668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46943-47002]:Block[46671-46730]"
    }, {
      "left" : "return myRevision.getChangedRepositoryPath();",
      "right" : "return myRevision.getChangedRepositoryPath();",
      "info" : "ReturnStatement[46951-46996]:ReturnStatement[46679-46724]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47008-47014]:Modifier[46736-46742]"
    }, {
      "left" : "VcsFileRevision",
      "right" : "VcsFileRevision",
      "info" : "SimpleType[47015-47030]:SimpleType[46743-46758]"
    }, {
      "left" : "getRevision",
      "right" : "getRevision",
      "info" : "SimpleName[47031-47042]:SimpleName[46759-46770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47045-47077]:Block[46773-46805]"
    }, {
      "left" : "return myRevision;",
      "right" : "return myRevision;",
      "info" : "ReturnStatement[47053-47071]:ReturnStatement[46781-46799]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47083-47089]:Modifier[46811-46817]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[47090-47096]:SimpleType[46818-46824]"
    }, {
      "left" : "getAuthor",
      "right" : "getAuthor",
      "info" : "SimpleName[47097-47106]:SimpleName[46825-46834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47109-47153]:Block[46837-46881]"
    }, {
      "left" : "return myRevision.getAuthor();",
      "right" : "return myRevision.getAuthor();",
      "info" : "ReturnStatement[47117-47147]:ReturnStatement[46845-46875]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47159-47165]:Modifier[46887-46893]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[47166-47172]:SimpleType[46894-46900]"
    }, {
      "left" : "getCommitMessage",
      "right" : "getCommitMessage",
      "info" : "SimpleName[47173-47189]:SimpleName[46901-46917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47192-47243]:Block[46920-46971]"
    }, {
      "left" : "return myRevision.getCommitMessage();",
      "right" : "return myRevision.getCommitMessage();",
      "info" : "ReturnStatement[47200-47237]:ReturnStatement[46928-46965]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47249-47255]:Modifier[46977-46983]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[47256-47262]:ArrayType[46984-46990]"
    }, {
      "left" : "loadContent",
      "right" : "loadContent",
      "info" : "SimpleName[47263-47274]:SimpleName[46991-47002]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[47284-47295]:SimpleType[47012-47023]"
    }, {
      "left" : "VcsException",
      "right" : "VcsException",
      "info" : "SimpleType[47297-47309]:SimpleType[47025-47037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47310-47356]:Block[47038-47084]"
    }, {
      "left" : "return myRevision.loadContent();",
      "right" : "return myRevision.loadContent();",
      "info" : "ReturnStatement[47318-47350]:ReturnStatement[47046-47078]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47362-47368]:Modifier[47090-47096]"
    }, {
      "left" : "VcsRevisionNumber",
      "right" : "VcsRevisionNumber",
      "info" : "SimpleType[47369-47386]:SimpleType[47097-47114]"
    }, {
      "left" : "getRevisionNumber",
      "right" : "getRevisionNumber",
      "info" : "SimpleName[47387-47404]:SimpleName[47115-47132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47407-47459]:Block[47135-47187]"
    }, {
      "left" : "return myRevision.getRevisionNumber();",
      "right" : "return myRevision.getRevisionNumber();",
      "info" : "ReturnStatement[47415-47453]:ReturnStatement[47143-47181]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47465-47471]:Modifier[47193-47199]"
    }, {
      "left" : "Date",
      "right" : "Date",
      "info" : "SimpleType[47472-47476]:SimpleType[47200-47204]"
    }, {
      "left" : "getRevisionDate",
      "right" : "getRevisionDate",
      "info" : "SimpleName[47477-47492]:SimpleName[47205-47220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47495-47545]:Block[47223-47273]"
    }, {
      "left" : "return myRevision.getRevisionDate();",
      "right" : "return myRevision.getRevisionDate();",
      "info" : "ReturnStatement[47503-47539]:ReturnStatement[47231-47267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47551-47557]:Modifier[47279-47285]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[47558-47564]:SimpleType[47286-47292]"
    }, {
      "left" : "getBranchName",
      "right" : "getBranchName",
      "info" : "SimpleName[47565-47578]:SimpleName[47293-47306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47581-47629]:Block[47309-47357]"
    }, {
      "left" : "return myRevision.getBranchName();",
      "right" : "return myRevision.getBranchName();",
      "info" : "ReturnStatement[47589-47623]:ReturnStatement[47317-47351]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47635-47641]:Modifier[47363-47369]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[47642-47648]:ArrayType[47370-47376]"
    }, {
      "left" : "getContent",
      "right" : "getContent",
      "info" : "SimpleName[47649-47659]:SimpleName[47377-47387]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[47669-47680]:SimpleType[47397-47408]"
    }, {
      "left" : "VcsException",
      "right" : "VcsException",
      "info" : "SimpleType[47682-47694]:SimpleType[47410-47422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47695-47740]:Block[47423-47468]"
    }, {
      "left" : "return myRevision.getContent();",
      "right" : "return myRevision.getContent();",
      "info" : "ReturnStatement[47703-47734]:ReturnStatement[47431-47462]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47746-47752]:Modifier[47474-47480]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[47753-47759]:SimpleType[47481-47487]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[47760-47768]:SimpleName[47488-47496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47771-47823]:Block[47499-47551]"
    }, {
      "left" : "return getRevisionNumber().asString();",
      "right" : "return getRevisionNumber().asString();",
      "info" : "ReturnStatement[47779-47817]:ReturnStatement[47507-47545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47829-47835]:Modifier[47557-47563]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[47836-47843]:PrimitiveType[47564-47571]"
    }, {
      "left" : "shouldBeInTheFlatView",
      "right" : "shouldBeInTheFlatView",
      "info" : "SimpleName[47844-47865]:SimpleName[47572-47593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47868-47924]:Block[47596-47652]"
    }, {
      "left" : "return myRevision != VcsFileRevision.NULL;",
      "right" : "return myRevision != VcsFileRevision.NULL;",
      "info" : "ReturnStatement[47876-47918]:ReturnStatement[47604-47646]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[47930-47939]:MarkerAnnotation[47658-47667]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47944-47950]:Modifier[47672-47678]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[47951-47958]:PrimitiveType[47679-47686]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[47959-47965]:SimpleName[47687-47693]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[47966-47974]:SingleVariableDeclaration[47694-47702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47976-48313]:Block[47704-48041]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[47984-48011]:IfStatement[47712-47739]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[47999-48011]:ReturnStatement[47727-47739]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[48018-48076]:IfStatement[47746-47804]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[48063-48076]:ReturnStatement[47791-47804]"
    }, {
      "left" : "TreeNodeOnVcsRevision that = (TreeNodeOnVcsRevision)o;",
      "right" : "TreeNodeOnVcsRevision that = (TreeNodeOnVcsRevision)o;",
      "info" : "VariableDeclarationStatement[48084-48138]:VariableDeclarationStatement[47812-47866]"
    }, {
      "left" : "if (myRevision != null ? !myRevision.getRevisionNumber().equals(that.myRevision.getRevisionNumber()) : that.myRevision != null)",
      "right" : "if (myRevision != null ? !myRevision.getRevisionNumber().equals(that.myRevision.getRevisionNumber()) : that.myRevision != null)",
      "info" : "IfStatement[48146-48287]:IfStatement[47874-48015]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[48274-48287]:ReturnStatement[48002-48015]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[48295-48307]:ReturnStatement[48023-48035]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[48319-48328]:MarkerAnnotation[48047-48056]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48333-48339]:Modifier[48061-48067]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[48340-48343]:PrimitiveType[48068-48071]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[48344-48352]:SimpleName[48072-48080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48355-48443]:Block[48083-48171]"
    }, {
      "left" : "return myRevision != null ? myRevision.getRevisionNumber().hashCode() : 0;",
      "right" : "return myRevision != null ? myRevision.getRevisionNumber().hashCode() : 0;",
      "info" : "ReturnStatement[48363-48437]:ReturnStatement[48091-48165]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48451-48457]:Modifier[48179-48185]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48458-48462]:PrimitiveType[48186-48190]"
    }, {
      "left" : "dispose",
      "right" : "dispose",
      "info" : "SimpleName[48463-48470]:SimpleName[48191-48198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48473-48554]:Block[48201-48282]"
    }, {
      "left" : "super.dispose();",
      "right" : "super.dispose();",
      "info" : "ExpressionStatement[48479-48495]:ExpressionStatement[48207-48223]"
    }, {
      "left" : "myDualView.dispose();",
      "right" : "myDualView.dispose();",
      "info" : "ExpressionStatement[48500-48521]:ExpressionStatement[48228-48249]"
    }, {
      "left" : "myUpdateAlarm.dispose();",
      "right" : "myUpdateAlarm.dispose();",
      "info" : "ExpressionStatement[48526-48550]:ExpressionStatement[48254-48278]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[48558-48566]:Modifier[48286-48294]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[48567-48572]:TYPE_DECLARATION_KIND[48295-48300]"
    }, {
      "left" : "AbstractActionForSomeSelection",
      "right" : "AbstractActionForSomeSelection",
      "info" : "SimpleName[48573-48603]:SimpleName[48301-48331]"
    }, {
      "left" : "AnAction",
      "right" : "AnAction",
      "info" : "SimpleType[48612-48620]:SimpleType[48340-48348]"
    }, {
      "left" : "DumbAware",
      "right" : "DumbAware",
      "info" : "SimpleType[48632-48641]:SimpleType[48360-48369]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48759-48765]:Modifier[48487-48493]"
    }, {
      "left" : "AbstractActionForSomeSelection",
      "right" : "AbstractActionForSomeSelection",
      "info" : "SimpleName[48766-48796]:SimpleName[48494-48524]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[48797-48808]:SingleVariableDeclaration[48525-48536]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[48852-48870]:SingleVariableDeclaration[48580-48598]"
    }, {
      "left" : "@NonNls String iconName",
      "right" : "@NonNls String iconName",
      "info" : "SingleVariableDeclaration[48914-48937]:SingleVariableDeclaration[48642-48665]"
    }, {
      "left" : "int suitableSelectionSize",
      "right" : "int suitableSelectionSize",
      "info" : "SingleVariableDeclaration[48981-49006]:SingleVariableDeclaration[48709-48734]"
    }, {
      "left" : "FileHistoryPanelImpl tableProvider",
      "right" : "FileHistoryPanelImpl tableProvider",
      "info" : "SingleVariableDeclaration[49050-49084]:SingleVariableDeclaration[48778-48812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49086-49279]:Block[48814-49007]"
    }, {
      "left" : "super(name, description, IconLoader.getIcon(\"/actions/\" + iconName + \".png\"));",
      "right" : "super(name, description, IconLoader.getIcon(\"/actions/\" + iconName + \".png\"));",
      "info" : "SuperConstructorInvocation[49094-49172]:SuperConstructorInvocation[48822-48900]"
    }, {
      "left" : "mySuitableSelectedElements = suitableSelectionSize;",
      "right" : "mySuitableSelectedElements = suitableSelectionSize;",
      "info" : "ExpressionStatement[49179-49230]:ExpressionStatement[48907-48958]"
    }, {
      "left" : "mySelectionProvider = tableProvider;",
      "right" : "mySelectionProvider = tableProvider;",
      "info" : "ExpressionStatement[49237-49273]:ExpressionStatement[48965-49001]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[49285-49294]:Modifier[49013-49022]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[49295-49303]:Modifier[49023-49031]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[49304-49308]:PrimitiveType[49032-49036]"
    }, {
      "left" : "executeAction",
      "right" : "executeAction",
      "info" : "SimpleName[49309-49322]:SimpleName[49037-49050]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[49323-49338]:SingleVariableDeclaration[49051-49066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49346-49352]:Modifier[49074-49080]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[49353-49360]:PrimitiveType[49081-49088]"
    }, {
      "left" : "isEnabled",
      "right" : "isEnabled",
      "info" : "SimpleName[49361-49370]:SimpleName[49089-49098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49373-49466]:Block[49101-49194]"
    }, {
      "left" : "return mySelectionProvider.getSelection().size() == mySuitableSelectedElements;",
      "right" : "return mySelectionProvider.getSelection().size() == mySuitableSelectedElements;",
      "info" : "ReturnStatement[49381-49460]:ReturnStatement[49109-49188]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49472-49478]:Modifier[49200-49206]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[49479-49483]:PrimitiveType[49207-49211]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[49484-49499]:SimpleName[49212-49227]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[49500-49515]:SingleVariableDeclaration[49228-49243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49517-49580]:Block[49245-49308]"
    }, {
      "left" : "if (!isEnabled())",
      "right" : "if (!isEnabled())",
      "info" : "IfStatement[49525-49550]:IfStatement[49253-49278]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[49543-49550]:ReturnStatement[49271-49278]"
    }, {
      "left" : "executeAction(e);",
      "right" : "executeAction(e);",
      "info" : "ExpressionStatement[49557-49574]:ExpressionStatement[49285-49302]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49586-49592]:Modifier[49314-49320]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[49593-49597]:PrimitiveType[49321-49325]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[49598-49604]:SimpleName[49326-49332]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[49605-49620]:SingleVariableDeclaration[49333-49348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49622-49765]:Block[49350-49493]"
    }, {
      "left" : "Presentation presentation = e.getPresentation();",
      "right" : "Presentation presentation = e.getPresentation();",
      "info" : "VariableDeclarationStatement[49630-49678]:VariableDeclarationStatement[49358-49406]"
    }, {
      "left" : "presentation.setVisible(true);",
      "right" : "presentation.setVisible(true);",
      "info" : "ExpressionStatement[49685-49715]:ExpressionStatement[49413-49443]"
    }, {
      "left" : "presentation.setEnabled(isEnabled());",
      "right" : "presentation.setEnabled(isEnabled());",
      "info" : "ExpressionStatement[49722-49759]:ExpressionStatement[49450-49487]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[49773-49781]:Modifier[49501-49509]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[49782-49788]:Modifier[49510-49516]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[49789-49794]:TYPE_DECLARATION_KIND[49517-49522]"
    }, {
      "left" : "VcsColumnInfo",
      "right" : "VcsColumnInfo",
      "info" : "SimpleName[49795-49808]:SimpleName[49523-49536]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49932-49938]:Modifier[49660-49666]"
    }, {
      "left" : "VcsColumnInfo",
      "right" : "VcsColumnInfo",
      "info" : "SimpleName[49939-49952]:SimpleName[49667-49680]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[49953-49964]:SingleVariableDeclaration[49681-49692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49966-49992]:Block[49694-49720]"
    }, {
      "left" : "super(name);",
      "right" : "super(name);",
      "info" : "SuperConstructorInvocation[49974-49986]:SuperConstructorInvocation[49702-49714]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[49998-50007]:Modifier[49726-49735]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[50008-50016]:Modifier[49736-49744]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[50017-50018]:SimpleType[49745-49746]"
    }, {
      "left" : "getDataOf",
      "right" : "getDataOf",
      "info" : "SimpleName[50019-50028]:SimpleName[49747-49756]"
    }, {
      "left" : "VcsFileRevision o",
      "right" : "VcsFileRevision o",
      "info" : "SingleVariableDeclaration[50029-50046]:SingleVariableDeclaration[49757-49774]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50054-50060]:Modifier[49782-49788]"
    }, {
      "left" : "Comparator<VcsFileRevision>",
      "right" : "Comparator<VcsFileRevision>",
      "info" : "ParameterizedType[50061-50088]:ParameterizedType[49789-49816]"
    }, {
      "left" : "getComparator",
      "right" : "getComparator",
      "info" : "SimpleName[50089-50102]:SimpleName[49817-49830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50105-50131]:Block[49833-49859]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[50113-50125]:ReturnStatement[49841-49853]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50137-50143]:Modifier[49865-49871]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[50144-50150]:SimpleType[49872-49878]"
    }, {
      "left" : "valueOf",
      "right" : "valueOf",
      "info" : "SimpleName[50151-50158]:SimpleName[49879-49886]"
    }, {
      "left" : "VcsFileRevision object",
      "right" : "VcsFileRevision object",
      "info" : "SingleVariableDeclaration[50159-50181]:SingleVariableDeclaration[49887-49909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50183-50280]:Block[49911-50008]"
    }, {
      "left" : "T result = getDataOf(object);",
      "right" : "T result = getDataOf(object);",
      "info" : "VariableDeclarationStatement[50191-50220]:VariableDeclarationStatement[49919-49948]"
    }, {
      "left" : "return result == null ? \"\" : result.toString();",
      "right" : "return result == null ? \"\" : result.toString();",
      "info" : "ReturnStatement[50227-50274]:ReturnStatement[49955-50002]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50286-50292]:Modifier[50014-50020]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[50293-50296]:PrimitiveType[50021-50024]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[50297-50304]:SimpleName[50025-50032]"
    }, {
      "left" : "VcsFileRevision o1",
      "right" : "VcsFileRevision o1",
      "info" : "SingleVariableDeclaration[50305-50323]:SingleVariableDeclaration[50033-50051]"
    }, {
      "left" : "VcsFileRevision o2",
      "right" : "VcsFileRevision o2",
      "info" : "SingleVariableDeclaration[50325-50343]:SingleVariableDeclaration[50053-50071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50345-50411]:Block[50073-50139]"
    }, {
      "left" : "return compareObjects(getDataOf(o1), getDataOf(o2));",
      "right" : "return compareObjects(getDataOf(o1), getDataOf(o2));",
      "info" : "ReturnStatement[50353-50405]:ReturnStatement[50081-50133]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[50417-50424]:Modifier[50145-50152]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[50425-50431]:Modifier[50153-50159]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[50432-50435]:PrimitiveType[50160-50163]"
    }, {
      "left" : "compareObjects",
      "right" : "compareObjects",
      "info" : "SimpleName[50436-50450]:SimpleName[50164-50178]"
    }, {
      "left" : "Comparable data1",
      "right" : "Comparable data1",
      "info" : "SingleVariableDeclaration[50451-50467]:SingleVariableDeclaration[50179-50195]"
    }, {
      "left" : "Comparable data2",
      "right" : "Comparable data2",
      "info" : "SingleVariableDeclaration[50469-50485]:SingleVariableDeclaration[50197-50213]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50487-50638]:Block[50215-50366]"
    }, {
      "left" : "if (data1 == data2)",
      "right" : "if (data1 == data2)",
      "info" : "IfStatement[50495-50524]:IfStatement[50223-50252]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[50515-50524]:ReturnStatement[50243-50252]"
    }, {
      "left" : "if (data1 == null)",
      "right" : "if (data1 == null)",
      "info" : "IfStatement[50531-50560]:IfStatement[50259-50288]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[50550-50560]:ReturnStatement[50278-50288]"
    }, {
      "left" : "if (data2 == null)",
      "right" : "if (data2 == null)",
      "info" : "IfStatement[50567-50595]:IfStatement[50295-50323]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[50586-50595]:ReturnStatement[50314-50323]"
    }, {
      "left" : "return data1.compareTo(data2);",
      "right" : "return data1.compareTo(data2);",
      "info" : "ReturnStatement[50602-50632]:ReturnStatement[50330-50360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50644-50650]:Modifier[50372-50378]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50651-50658]:PrimitiveType[50379-50386]"
    }, {
      "left" : "shouldBeShownIsTheTree",
      "right" : "shouldBeShownIsTheTree",
      "info" : "SimpleName[50659-50681]:SimpleName[50387-50409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50684-50710]:Block[50412-50438]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[50692-50704]:ReturnStatement[50420-50432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50716-50722]:Modifier[50444-50450]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50723-50730]:PrimitiveType[50451-50458]"
    }, {
      "left" : "shouldBeShownIsTheTable",
      "right" : "shouldBeShownIsTheTable",
      "info" : "SimpleName[50731-50754]:SimpleName[50459-50482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50757-50783]:Block[50485-50511]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[50765-50777]:ReturnStatement[50493-50505]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[50792-50799]:Modifier[50520-50527]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[50800-50805]:TYPE_DECLARATION_KIND[50528-50533]"
    }, {
      "left" : "MyColumnWrapper",
      "right" : "MyColumnWrapper",
      "info" : "SimpleName[50806-50821]:SimpleName[50534-50549]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50953-50959]:Modifier[50681-50687]"
    }, {
      "left" : "Comparator<TreeNodeOnVcsRevision>",
      "right" : "Comparator<TreeNodeOnVcsRevision>",
      "info" : "ParameterizedType[50960-50993]:ParameterizedType[50688-50721]"
    }, {
      "left" : "getComparator",
      "right" : "getComparator",
      "info" : "SimpleName[50994-51007]:SimpleName[50722-50735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51010-51606]:Block[50738-51334]"
    }, {
      "left" : "final Comparator comparator = myBaseColumn.getComparator();",
      "right" : "final Comparator comparator = myBaseColumn.getComparator();",
      "info" : "VariableDeclarationStatement[51018-51077]:VariableDeclarationStatement[50746-50805]"
    }, {
      "left" : "if (comparator == null)",
      "right" : "if (comparator == null)",
      "info" : "IfStatement[51084-51120]:IfStatement[50812-50848]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[51108-51120]:ReturnStatement[50836-50848]"
    }, {
      "left" : "return new Comparator<TreeNodeOnVcsRevision>() {\n        public int compare(TreeNodeOnVcsRevision o1, TreeNodeOnVcsRevision o2) {\n          if (o1 == null) return -1;\n          if (o2 == null) return 1;\n          VcsFileRevision revision1 = o1.myRevision;\n          VcsFileRevision revision2 = o2.myRevision;\n          if (revision1 == null) return -1;\n          if (revision2 == null) return 1;\n          return comparator.compare(revision1, revision2);\n        }\n      };",
      "right" : "return new Comparator<TreeNodeOnVcsRevision>() {\n        public int compare(TreeNodeOnVcsRevision o1, TreeNodeOnVcsRevision o2) {\n          if (o1 == null) return -1;\n          if (o2 == null) return 1;\n          VcsFileRevision revision1 = o1.myRevision;\n          VcsFileRevision revision2 = o2.myRevision;\n          if (revision1 == null) return -1;\n          if (revision2 == null) return 1;\n          return comparator.compare(revision1, revision2);\n        }\n      };",
      "info" : "ReturnStatement[51127-51600]:ReturnStatement[50855-51328]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51184-51190]:Modifier[50912-50918]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[51191-51194]:PrimitiveType[50919-50922]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[51195-51202]:SimpleName[50923-50930]"
    }, {
      "left" : "TreeNodeOnVcsRevision o1",
      "right" : "TreeNodeOnVcsRevision o1",
      "info" : "SingleVariableDeclaration[51203-51227]:SingleVariableDeclaration[50931-50955]"
    }, {
      "left" : "TreeNodeOnVcsRevision o2",
      "right" : "TreeNodeOnVcsRevision o2",
      "info" : "SingleVariableDeclaration[51229-51253]:SingleVariableDeclaration[50957-50981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51255-51591]:Block[50983-51319]"
    }, {
      "left" : "if (o1 == null)",
      "right" : "if (o1 == null)",
      "info" : "IfStatement[51267-51293]:IfStatement[50995-51021]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[51283-51293]:ReturnStatement[51011-51021]"
    }, {
      "left" : "if (o2 == null)",
      "right" : "if (o2 == null)",
      "info" : "IfStatement[51304-51329]:IfStatement[51032-51057]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[51320-51329]:ReturnStatement[51048-51057]"
    }, {
      "left" : "VcsFileRevision revision1 = o1.myRevision;",
      "right" : "VcsFileRevision revision1 = o1.myRevision;",
      "info" : "VariableDeclarationStatement[51340-51382]:VariableDeclarationStatement[51068-51110]"
    }, {
      "left" : "VcsFileRevision revision2 = o2.myRevision;",
      "right" : "VcsFileRevision revision2 = o2.myRevision;",
      "info" : "VariableDeclarationStatement[51393-51435]:VariableDeclarationStatement[51121-51163]"
    }, {
      "left" : "if (revision1 == null)",
      "right" : "if (revision1 == null)",
      "info" : "IfStatement[51446-51479]:IfStatement[51174-51207]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[51469-51479]:ReturnStatement[51197-51207]"
    }, {
      "left" : "if (revision2 == null)",
      "right" : "if (revision2 == null)",
      "info" : "IfStatement[51490-51522]:IfStatement[51218-51250]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[51513-51522]:ReturnStatement[51241-51250]"
    }, {
      "left" : "return comparator.compare(revision1, revision2);",
      "right" : "return comparator.compare(revision1, revision2);",
      "info" : "ReturnStatement[51533-51581]:ReturnStatement[51261-51309]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51612-51618]:Modifier[51340-51346]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[51619-51625]:SimpleType[51347-51353]"
    }, {
      "left" : "getName",
      "right" : "getName",
      "info" : "SimpleName[51626-51633]:SimpleName[51354-51361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51636-51680]:Block[51364-51408]"
    }, {
      "left" : "return myBaseColumn.getName();",
      "right" : "return myBaseColumn.getName();",
      "info" : "ReturnStatement[51644-51674]:ReturnStatement[51372-51402]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51686-51692]:Modifier[51414-51420]"
    }, {
      "left" : "Class",
      "right" : "Class",
      "info" : "SimpleType[51693-51698]:SimpleType[51421-51426]"
    }, {
      "left" : "getColumnClass",
      "right" : "getColumnClass",
      "info" : "SimpleName[51699-51713]:SimpleName[51427-51441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51716-51767]:Block[51444-51495]"
    }, {
      "left" : "return myBaseColumn.getColumnClass();",
      "right" : "return myBaseColumn.getColumnClass();",
      "info" : "ReturnStatement[51724-51761]:ReturnStatement[51452-51489]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51773-51779]:Modifier[51501-51507]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[51780-51787]:PrimitiveType[51508-51515]"
    }, {
      "left" : "isCellEditable",
      "right" : "isCellEditable",
      "info" : "SimpleName[51788-51802]:SimpleName[51516-51530]"
    }, {
      "left" : "TreeNodeOnVcsRevision o",
      "right" : "TreeNodeOnVcsRevision o",
      "info" : "SingleVariableDeclaration[51803-51826]:SingleVariableDeclaration[51531-51554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51828-51891]:Block[51556-51619]"
    }, {
      "left" : "return myBaseColumn.isCellEditable(o.myRevision);",
      "right" : "return myBaseColumn.isCellEditable(o.myRevision);",
      "info" : "ReturnStatement[51836-51885]:ReturnStatement[51564-51613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51897-51903]:Modifier[51625-51631]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51904-51908]:PrimitiveType[51632-51636]"
    }, {
      "left" : "setValue",
      "right" : "setValue",
      "info" : "SimpleName[51909-51917]:SimpleName[51637-51645]"
    }, {
      "left" : "TreeNodeOnVcsRevision o",
      "right" : "TreeNodeOnVcsRevision o",
      "info" : "SingleVariableDeclaration[51918-51941]:SingleVariableDeclaration[51646-51669]"
    }, {
      "left" : "Object aValue",
      "right" : "Object aValue",
      "info" : "SingleVariableDeclaration[51943-51956]:SingleVariableDeclaration[51671-51684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51958-52050]:Block[51686-51778]"
    }, {
      "left" : "myBaseColumn.setValue(o.myRevision, (T)aValue);",
      "right" : "myBaseColumn.setValue(o.myRevision, (T)aValue);",
      "info" : "ExpressionStatement[51997-52044]:ExpressionStatement[51725-51772]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52056-52062]:Modifier[51784-51790]"
    }, {
      "left" : "TableCellRenderer",
      "right" : "TableCellRenderer",
      "info" : "SimpleType[52063-52080]:SimpleType[51791-51808]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[52081-52092]:SimpleName[51809-51820]"
    }, {
      "left" : "TreeNodeOnVcsRevision p0",
      "right" : "TreeNodeOnVcsRevision p0",
      "info" : "SingleVariableDeclaration[52093-52117]:SingleVariableDeclaration[51821-51845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52119-52180]:Block[51847-51908]"
    }, {
      "left" : "return myBaseColumn.getRenderer(p0.myRevision);",
      "right" : "return myBaseColumn.getRenderer(p0.myRevision);",
      "info" : "ReturnStatement[52127-52174]:ReturnStatement[51855-51902]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52186-52192]:Modifier[51914-51920]"
    }, {
      "left" : "TableCellEditor",
      "right" : "TableCellEditor",
      "info" : "SimpleType[52193-52208]:SimpleType[51921-51936]"
    }, {
      "left" : "getEditor",
      "right" : "getEditor",
      "info" : "SimpleName[52209-52218]:SimpleName[51937-51946]"
    }, {
      "left" : "TreeNodeOnVcsRevision item",
      "right" : "TreeNodeOnVcsRevision item",
      "info" : "SingleVariableDeclaration[52219-52245]:SingleVariableDeclaration[51947-51973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52247-52308]:Block[51975-52036]"
    }, {
      "left" : "return myBaseColumn.getEditor(item.myRevision);",
      "right" : "return myBaseColumn.getEditor(item.myRevision);",
      "info" : "ReturnStatement[52255-52302]:ReturnStatement[51983-52030]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52314-52320]:Modifier[52042-52048]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[52321-52327]:SimpleType[52049-52055]"
    }, {
      "left" : "getMaxStringValue",
      "right" : "getMaxStringValue",
      "info" : "SimpleName[52328-52345]:SimpleName[52056-52073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52348-52520]:Block[52076-52248]"
    }, {
      "left" : "final String superValue = myBaseColumn.getMaxStringValue();",
      "right" : "final String superValue = myBaseColumn.getMaxStringValue();",
      "info" : "VariableDeclarationStatement[52356-52415]:VariableDeclarationStatement[52084-52143]"
    }, {
      "left" : "if (superValue != null)",
      "right" : "if (superValue != null)",
      "info" : "IfStatement[52422-52464]:IfStatement[52150-52192]"
    }, {
      "left" : "return superValue;",
      "right" : "return superValue;",
      "info" : "ReturnStatement[52446-52464]:ReturnStatement[52174-52192]"
    }, {
      "left" : "return getMaxValue(myBaseColumn.getName());",
      "right" : "return getMaxValue(myBaseColumn.getName());",
      "info" : "ReturnStatement[52471-52514]:ReturnStatement[52199-52242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52526-52532]:Modifier[52254-52260]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[52533-52536]:PrimitiveType[52261-52264]"
    }, {
      "left" : "getAdditionalWidth",
      "right" : "getAdditionalWidth",
      "info" : "SimpleName[52537-52555]:SimpleName[52265-52283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52558-52613]:Block[52286-52341]"
    }, {
      "left" : "return myBaseColumn.getAdditionalWidth();",
      "right" : "return myBaseColumn.getAdditionalWidth();",
      "info" : "ReturnStatement[52566-52607]:ReturnStatement[52294-52335]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52619-52625]:Modifier[52347-52353]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[52626-52629]:PrimitiveType[52354-52357]"
    }, {
      "left" : "getWidth",
      "right" : "getWidth",
      "info" : "SimpleName[52630-52638]:SimpleName[52358-52366]"
    }, {
      "left" : "JTable table",
      "right" : "JTable table",
      "info" : "SingleVariableDeclaration[52639-52651]:SingleVariableDeclaration[52367-52379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52653-52703]:Block[52381-52431]"
    }, {
      "left" : "return myBaseColumn.getWidth(table);",
      "right" : "return myBaseColumn.getWidth(table);",
      "info" : "ReturnStatement[52661-52697]:ReturnStatement[52389-52425]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52709-52715]:Modifier[52437-52443]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[52716-52720]:PrimitiveType[52444-52448]"
    }, {
      "left" : "setName",
      "right" : "setName",
      "info" : "SimpleName[52721-52728]:SimpleName[52449-52456]"
    }, {
      "left" : "String s",
      "right" : "String s",
      "info" : "SingleVariableDeclaration[52729-52737]:SingleVariableDeclaration[52457-52465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52739-52777]:Block[52467-52505]"
    }, {
      "left" : "myBaseColumn.setName(s);",
      "right" : "myBaseColumn.setName(s);",
      "info" : "ExpressionStatement[52747-52771]:ExpressionStatement[52475-52499]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52783-52789]:Modifier[52511-52517]"
    }, {
      "left" : "MyColumnWrapper",
      "right" : "MyColumnWrapper",
      "info" : "SimpleName[52790-52805]:SimpleName[52518-52533]"
    }, {
      "left" : "ColumnInfo<VcsFileRevision, T> additionalColunm",
      "right" : "ColumnInfo<VcsFileRevision, T> additionalColunm",
      "info" : "SingleVariableDeclaration[52806-52853]:SingleVariableDeclaration[52534-52581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52855-52942]:Block[52583-52670]"
    }, {
      "left" : "super(additionalColunm.getName());",
      "right" : "super(additionalColunm.getName());",
      "info" : "SuperConstructorInvocation[52863-52897]:SuperConstructorInvocation[52591-52625]"
    }, {
      "left" : "myBaseColumn = additionalColunm;",
      "right" : "myBaseColumn = additionalColunm;",
      "info" : "ExpressionStatement[52904-52936]:ExpressionStatement[52632-52664]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52948-52954]:Modifier[52676-52682]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52955-52962]:PrimitiveType[52683-52690]"
    }, {
      "left" : "shouldBeShownIsTheTree",
      "right" : "shouldBeShownIsTheTree",
      "info" : "SimpleName[52963-52985]:SimpleName[52691-52713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52988-53014]:Block[52716-52742]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[52996-53008]:ReturnStatement[52724-52736]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53020-53026]:Modifier[52748-52754]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[53027-53034]:PrimitiveType[52755-52762]"
    }, {
      "left" : "shouldBeShownIsTheTable",
      "right" : "shouldBeShownIsTheTable",
      "info" : "SimpleName[53035-53058]:SimpleName[52763-52786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53061-53087]:Block[52789-52815]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53069-53081]:ReturnStatement[52797-52809]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53093-53099]:Modifier[52821-52827]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[53100-53106]:SimpleType[52828-52834]"
    }, {
      "left" : "valueOf",
      "right" : "valueOf",
      "info" : "SimpleName[53107-53114]:SimpleName[52835-52842]"
    }, {
      "left" : "TreeNodeOnVcsRevision o",
      "right" : "TreeNodeOnVcsRevision o",
      "info" : "SingleVariableDeclaration[53115-53138]:SingleVariableDeclaration[52843-52866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53140-53196]:Block[52868-52924]"
    }, {
      "left" : "return myBaseColumn.valueOf(o.myRevision);",
      "right" : "return myBaseColumn.valueOf(o.myRevision);",
      "info" : "ReturnStatement[53148-53190]:ReturnStatement[52876-52918]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[53204-53212]:MarkerAnnotation[52932-52940]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53215-53221]:Modifier[52943-52949]"
    }, {
      "left" : "FileHistoryRefresherI",
      "right" : "FileHistoryRefresherI",
      "info" : "SimpleType[53222-53243]:SimpleType[52950-52971]"
    }, {
      "left" : "getRefresher",
      "right" : "getRefresher",
      "info" : "SimpleName[53244-53256]:SimpleName[52972-52984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53259-53289]:Block[52987-53017]"
    }, {
      "left" : "return myRefresherI;",
      "right" : "return myRefresherI;",
      "info" : "ReturnStatement[53265-53285]:ReturnStatement[52993-53013]"
    }, {
      "left" : "@NotNull",
      "right" : "@NotNull",
      "info" : "MarkerAnnotation[53293-53301]:MarkerAnnotation[53021-53029]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53304-53310]:Modifier[53032-53038]"
    }, {
      "left" : "FilePath",
      "right" : "FilePath",
      "info" : "SimpleType[53311-53319]:SimpleType[53039-53047]"
    }, {
      "left" : "getFilePath",
      "right" : "getFilePath",
      "info" : "SimpleName[53320-53331]:SimpleName[53048-53059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53334-53362]:Block[53062-53090]"
    }, {
      "left" : "return myFilePath;",
      "right" : "return myFilePath;",
      "info" : "ReturnStatement[53340-53358]:ReturnStatement[53068-53086]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53451-53458]:Modifier[53191-53198]"
    }, {
      "left" : "VirtualFile",
      "right" : "VirtualFile",
      "info" : "SimpleType[53459-53470]:SimpleType[53199-53210]"
    }, {
      "left" : "getVirtualParent",
      "right" : "getVirtualParent",
      "info" : "SimpleName[53471-53487]:SimpleName[53211-53227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53490-53541]:Block[53230-53281]"
    }, {
      "left" : "return myFilePath.getVirtualFileParent();",
      "right" : "return myFilePath.getVirtualFileParent();",
      "info" : "ReturnStatement[53496-53537]:ReturnStatement[53236-53277]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[53545-53552]:Modifier[53285-53292]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[53553-53559]:SimpleType[53293-53299]"
    }, {
      "left" : "getMaxValue",
      "right" : "getMaxValue",
      "info" : "SimpleName[53560-53571]:SimpleName[53300-53311]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[53572-53583]:SingleVariableDeclaration[53312-53323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53585-54679]:Block[53325-54419]"
    }, {
      "left" : "if (myDualView == null)",
      "right" : "if (myDualView == null)",
      "info" : "IfStatement[53591-53627]:IfStatement[53331-53367]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53615-53627]:ReturnStatement[53355-53367]"
    }, {
      "left" : "TableView table = myDualView.getFlatView();",
      "right" : "TableView table = myDualView.getFlatView();",
      "info" : "VariableDeclarationStatement[53632-53675]:VariableDeclarationStatement[53372-53415]"
    }, {
      "left" : "if (table.getRowCount() == 0)",
      "right" : "if (table.getRowCount() == 0)",
      "info" : "IfStatement[53680-53722]:IfStatement[53420-53462]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[53710-53722]:ReturnStatement[53450-53462]"
    }, {
      "left" : "final Enumeration<TableColumn> columns = table.getColumnModel().getColumns();",
      "right" : "final Enumeration<TableColumn> columns = table.getColumnModel().getColumns();",
      "info" : "VariableDeclarationStatement[53727-53804]:VariableDeclarationStatement[53467-53544]"
    }, {
      "left" : "int idx = 0;",
      "right" : "int idx = 0;",
      "info" : "VariableDeclarationStatement[53809-53821]:VariableDeclarationStatement[53549-53561]"
    }, {
      "left" : "while (columns.hasMoreElements())",
      "right" : "while (columns.hasMoreElements())",
      "info" : "WhileStatement[53826-54004]:WhileStatement[53566-53744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53860-54004]:Block[53600-53744]"
    }, {
      "left" : "TableColumn column = columns.nextElement();",
      "right" : "TableColumn column = columns.nextElement();",
      "info" : "VariableDeclarationStatement[53868-53911]:VariableDeclarationStatement[53608-53651]"
    }, {
      "left" : "if (name.equals(column.getHeaderValue()))",
      "right" : "if (name.equals(column.getHeaderValue()))",
      "info" : "IfStatement[53918-53984]:IfStatement[53658-53724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53960-53984]:Block[53700-53724]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[53970-53976]:BreakStatement[53710-53716]"
    }, {
      "left" : "++ idx;",
      "right" : "++ idx;",
      "info" : "ExpressionStatement[53991-53998]:ExpressionStatement[53731-53738]"
    }, {
      "left" : "if (idx >= table.getColumnModel().getColumnCount() - 1)",
      "right" : "if (idx >= table.getColumnModel().getColumnCount() - 1)",
      "info" : "IfStatement[54009-54077]:IfStatement[53749-53817]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[54065-54077]:ReturnStatement[53805-53817]"
    }, {
      "left" : "final FontMetrics fm = table.getFontMetrics(table.getFont().deriveFont(Font.BOLD));",
      "right" : "final FontMetrics fm = table.getFontMetrics(table.getFont().deriveFont(Font.BOLD));",
      "info" : "VariableDeclarationStatement[54082-54165]:VariableDeclarationStatement[53822-53905]"
    }, {
      "left" : "final Object header = table.getColumnModel().getColumn(idx).getHeaderValue();",
      "right" : "final Object header = table.getColumnModel().getColumn(idx).getHeaderValue();",
      "info" : "VariableDeclarationStatement[54170-54247]:VariableDeclarationStatement[53910-53987]"
    }, {
      "left" : "double maxValue = fm.stringWidth((String)header);",
      "right" : "double maxValue = fm.stringWidth((String)header);",
      "info" : "VariableDeclarationStatement[54252-54301]:VariableDeclarationStatement[53992-54041]"
    }, {
      "left" : "String value = (String)header;",
      "right" : "String value = (String)header;",
      "info" : "VariableDeclarationStatement[54306-54336]:VariableDeclarationStatement[54046-54076]"
    }, {
      "left" : "for (int i = 0; i < table.getRowCount(); i++)",
      "right" : "for (int i = 0; i < table.getRowCount(); i++)",
      "info" : "ForStatement[54341-54650]:ForStatement[54081-54390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54387-54650]:Block[54127-54390]"
    }, {
      "left" : "final Object at = table.getValueAt(i, idx);",
      "right" : "final Object at = table.getValueAt(i, idx);",
      "info" : "VariableDeclarationStatement[54395-54438]:VariableDeclarationStatement[54135-54178]"
    }, {
      "left" : "if (at instanceof String)",
      "right" : "if (at instanceof String)",
      "info" : "IfStatement[54445-54644]:IfStatement[54185-54384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54471-54644]:Block[54211-54384]"
    }, {
      "left" : "final int newWidth = fm.stringWidth((String)at);",
      "right" : "final int newWidth = fm.stringWidth((String)at);",
      "info" : "VariableDeclarationStatement[54481-54529]:VariableDeclarationStatement[54221-54269]"
    }, {
      "left" : "if (newWidth > maxValue)",
      "right" : "if (newWidth > maxValue)",
      "info" : "IfStatement[54538-54636]:IfStatement[54278-54376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54563-54636]:Block[54303-54376]"
    }, {
      "left" : "maxValue = newWidth;",
      "right" : "maxValue = newWidth;",
      "info" : "ExpressionStatement[54575-54595]:ExpressionStatement[54315-54335]"
    }, {
      "left" : "value = (String) at;",
      "right" : "value = (String) at;",
      "info" : "ExpressionStatement[54606-54626]:ExpressionStatement[54346-54366]"
    }, {
      "left" : "return value + \"ww\";",
      "right" : "return value + \"ww\";",
      "info" : "ReturnStatement[54655-54675]:ReturnStatement[54395-54415]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54683-54690]:Modifier[54423-54430]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[54691-54696]:TYPE_DECLARATION_KIND[54431-54436]"
    }, {
      "left" : "MyTreeCellRenderer",
      "right" : "MyTreeCellRenderer",
      "info" : "SimpleName[54697-54715]:SimpleName[54437-54455]"
    }, {
      "left" : "TreeCellRenderer",
      "right" : "TreeCellRenderer",
      "info" : "SimpleType[54727-54743]:SimpleType[54467-54483]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54871-54877]:Modifier[54611-54617]"
    }, {
      "left" : "MyTreeCellRenderer",
      "right" : "MyTreeCellRenderer",
      "info" : "SimpleName[54878-54896]:SimpleName[54618-54636]"
    }, {
      "left" : "final TreeCellRenderer defaultCellRenderer",
      "right" : "final TreeCellRenderer defaultCellRenderer",
      "info" : "SingleVariableDeclaration[54897-54939]:SingleVariableDeclaration[54637-54679]"
    }, {
      "left" : "final Getter<VcsHistorySession> historySession",
      "right" : "final Getter<VcsHistorySession> historySession",
      "info" : "SingleVariableDeclaration[54941-54987]:SingleVariableDeclaration[54681-54727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54989-55088]:Block[54729-54828]"
    }, {
      "left" : "myDefaultCellRenderer = defaultCellRenderer;",
      "right" : "myDefaultCellRenderer = defaultCellRenderer;",
      "info" : "ExpressionStatement[54997-55041]:ExpressionStatement[54737-54781]"
    }, {
      "left" : "myHistorySession = historySession;",
      "right" : "myHistorySession = historySession;",
      "info" : "ExpressionStatement[55048-55082]:ExpressionStatement[54788-54822]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55094-55100]:Modifier[54834-54840]"
    }, {
      "left" : "Component",
      "right" : "Component",
      "info" : "SimpleType[55101-55110]:SimpleType[54841-54850]"
    }, {
      "left" : "getTreeCellRendererComponent",
      "right" : "getTreeCellRendererComponent",
      "info" : "SimpleName[55111-55139]:SimpleName[54851-54879]"
    }, {
      "left" : "JTree tree",
      "right" : "JTree tree",
      "info" : "SingleVariableDeclaration[55140-55150]:SingleVariableDeclaration[54880-54890]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[55202-55214]:SingleVariableDeclaration[54942-54954]"
    }, {
      "left" : "boolean selected",
      "right" : "boolean selected",
      "info" : "SingleVariableDeclaration[55266-55282]:SingleVariableDeclaration[55006-55022]"
    }, {
      "left" : "boolean expanded",
      "right" : "boolean expanded",
      "info" : "SingleVariableDeclaration[55334-55350]:SingleVariableDeclaration[55074-55090]"
    }, {
      "left" : "boolean leaf",
      "right" : "boolean leaf",
      "info" : "SingleVariableDeclaration[55402-55414]:SingleVariableDeclaration[55142-55154]"
    }, {
      "left" : "int row",
      "right" : "int row",
      "info" : "SingleVariableDeclaration[55466-55473]:SingleVariableDeclaration[55206-55213]"
    }, {
      "left" : "boolean hasFocus",
      "right" : "boolean hasFocus",
      "info" : "SingleVariableDeclaration[55525-55541]:SingleVariableDeclaration[55265-55281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55543-56465]:Block[55283-56205]"
    }, {
      "left" : "final Component result = myDefaultCellRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);",
      "right" : "final Component result = myDefaultCellRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);",
      "info" : "VariableDeclarationStatement[55551-55681]:VariableDeclarationStatement[55291-55421]"
    }, {
      "left" : "final TreePath path = tree.getPathForRow(row);",
      "right" : "final TreePath path = tree.getPathForRow(row);",
      "info" : "VariableDeclarationStatement[55689-55735]:VariableDeclarationStatement[55429-55475]"
    }, {
      "left" : "if (path == null)",
      "right" : "if (path == null)",
      "info" : "IfStatement[55742-55774]:IfStatement[55482-55514]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[55760-55774]:ReturnStatement[55500-55514]"
    }, {
      "left" : "final VcsFileRevision revision = row >= 0 ? (VcsFileRevision)path.getLastPathComponent() : null;",
      "right" : "final VcsFileRevision revision = row >= 0 ? (VcsFileRevision)path.getLastPathComponent() : null;",
      "info" : "VariableDeclarationStatement[55781-55877]:VariableDeclarationStatement[55521-55617]"
    }, {
      "left" : "if (revision != null)",
      "right" : "if (revision != null)",
      "info" : "IfStatement[55885-56437]:IfStatement[55625-56177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55907-56254]:Block[55647-55994]"
    }, {
      "left" : "if (myHistorySession.get().isCurrentRevision(revision.getRevisionNumber()))",
      "right" : "if (myHistorySession.get().isCurrentRevision(revision.getRevisionNumber()))",
      "info" : "IfStatement[55917-56032]:IfStatement[55657-55772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55993-56032]:Block[55733-55772]"
    }, {
      "left" : "makeBold(result);",
      "right" : "makeBold(result);",
      "info" : "ExpressionStatement[56005-56022]:ExpressionStatement[55745-55762]"
    }, {
      "left" : "if (!selected && myHistorySession.get().isCurrentRevision(revision.getRevisionNumber()))",
      "right" : "if (!selected && myHistorySession.get().isCurrentRevision(revision.getRevisionNumber()))",
      "info" : "IfStatement[56041-56199]:IfStatement[55781-55939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56130-56199]:Block[55870-55939]"
    }, {
      "left" : "result.setBackground(new Color(188, 227, 231));",
      "right" : "result.setBackground(new Color(188, 227, 231));",
      "info" : "ExpressionStatement[56142-56189]:ExpressionStatement[55882-55929]"
    }, {
      "left" : "((JComponent)result).setOpaque(false);",
      "right" : "((JComponent)result).setOpaque(false);",
      "info" : "ExpressionStatement[56208-56246]:ExpressionStatement[55948-55986]"
    }, {
      "left" : "if (selected)",
      "right" : "if (selected)",
      "info" : "IfStatement[56266-56437]:IfStatement[56006-56177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56280-56357]:Block[56020-56097]"
    }, {
      "left" : "result.setBackground(UIUtil.getTableSelectionBackground());",
      "right" : "result.setBackground(UIUtil.getTableSelectionBackground());",
      "info" : "ExpressionStatement[56290-56349]:ExpressionStatement[56030-56089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56369-56437]:Block[56109-56177]"
    }, {
      "left" : "result.setBackground(UIUtil.getTableBackground());",
      "right" : "result.setBackground(UIUtil.getTableBackground());",
      "info" : "ExpressionStatement[56379-56429]:ExpressionStatement[56119-56169]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[56445-56459]:ReturnStatement[56185-56199]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[56473-56480]:Modifier[56213-56220]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[56481-56487]:Modifier[56221-56227]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[56488-56493]:TYPE_DECLARATION_KIND[56228-56233]"
    }, {
      "left" : "MyCellWrapper",
      "right" : "MyCellWrapper",
      "info" : "SimpleName[56494-56507]:SimpleName[56234-56247]"
    }, {
      "left" : "CellWrapper",
      "right" : "CellWrapper",
      "info" : "SimpleType[56519-56530]:SimpleType[56259-56270]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56600-56606]:Modifier[56340-56346]"
    }, {
      "left" : "MyCellWrapper",
      "right" : "MyCellWrapper",
      "info" : "SimpleName[56607-56620]:SimpleName[56347-56360]"
    }, {
      "left" : "final Getter<VcsHistorySession> historySession",
      "right" : "final Getter<VcsHistorySession> historySession",
      "info" : "SingleVariableDeclaration[56621-56667]:SingleVariableDeclaration[56361-56407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56669-56717]:Block[56409-56457]"
    }, {
      "left" : "myHistorySession = historySession;",
      "right" : "myHistorySession = historySession;",
      "info" : "ExpressionStatement[56677-56711]:ExpressionStatement[56417-56451]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56723-56729]:Modifier[56463-56469]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56730-56734]:PrimitiveType[56470-56474]"
    }, {
      "left" : "wrap",
      "right" : "wrap",
      "info" : "SimpleName[56735-56739]:SimpleName[56475-56479]"
    }, {
      "left" : "Component component",
      "right" : "Component component",
      "info" : "SingleVariableDeclaration[56740-56759]:SingleVariableDeclaration[56480-56499]"
    }, {
      "left" : "JTable table",
      "right" : "JTable table",
      "info" : "SingleVariableDeclaration[56782-56794]:SingleVariableDeclaration[56522-56534]"
    }, {
      "left" : "Object value",
      "right" : "Object value",
      "info" : "SingleVariableDeclaration[56817-56829]:SingleVariableDeclaration[56557-56569]"
    }, {
      "left" : "boolean isSelected",
      "right" : "boolean isSelected",
      "info" : "SingleVariableDeclaration[56852-56870]:SingleVariableDeclaration[56592-56610]"
    }, {
      "left" : "boolean hasFocus",
      "right" : "boolean hasFocus",
      "info" : "SingleVariableDeclaration[56893-56909]:SingleVariableDeclaration[56633-56649]"
    }, {
      "left" : "int row",
      "right" : "int row",
      "info" : "SingleVariableDeclaration[56932-56939]:SingleVariableDeclaration[56672-56679]"
    }, {
      "left" : "int column",
      "right" : "int column",
      "info" : "SingleVariableDeclaration[56962-56972]:SingleVariableDeclaration[56702-56712]"
    }, {
      "left" : "Object treeNode",
      "right" : "Object treeNode",
      "info" : "SingleVariableDeclaration[56995-57010]:SingleVariableDeclaration[56735-56750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57012-57236]:Block[56752-56976]"
    }, {
      "left" : "VcsFileRevision revision = (VcsFileRevision)treeNode;",
      "right" : "VcsFileRevision revision = (VcsFileRevision)treeNode;",
      "info" : "VariableDeclarationStatement[57020-57073]:VariableDeclarationStatement[56760-56813]"
    }, {
      "left" : "if (revision == null)",
      "right" : "if (revision == null)",
      "info" : "IfStatement[57080-57109]:IfStatement[56820-56849]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[57102-57109]:ReturnStatement[56842-56849]"
    }, {
      "left" : "if (myHistorySession.get().isCurrentRevision(revision.getRevisionNumber()))",
      "right" : "if (myHistorySession.get().isCurrentRevision(revision.getRevisionNumber()))",
      "info" : "IfStatement[57116-57230]:IfStatement[56856-56970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57192-57230]:Block[56932-56970]"
    }, {
      "left" : "makeBold(component);",
      "right" : "makeBold(component);",
      "info" : "ExpressionStatement[57202-57222]:ExpressionStatement[56942-56962]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57244-57251]:Modifier[56984-56991]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[57252-57257]:TYPE_DECLARATION_KIND[56992-56997]"
    }, {
      "left" : "RefreshFileHistoryAction",
      "right" : "RefreshFileHistoryAction",
      "info" : "SimpleName[57258-57282]:SimpleName[56998-57022]"
    }, {
      "left" : "AnAction",
      "right" : "AnAction",
      "info" : "SimpleType[57291-57299]:SimpleType[57031-57039]"
    }, {
      "left" : "DumbAware",
      "right" : "DumbAware",
      "info" : "SimpleType[57311-57320]:SimpleType[57051-57060]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57327-57333]:Modifier[57067-57073]"
    }, {
      "left" : "RefreshFileHistoryAction",
      "right" : "RefreshFileHistoryAction",
      "info" : "SimpleName[57334-57358]:SimpleName[57074-57098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57361-57498]:Block[57101-57238]"
    }, {
      "left" : "super(VcsBundle.message(\"action.name.refresh\"), VcsBundle.message(\"action.desctiption.refresh\"), AllIcons.Actions.Refresh);",
      "right" : "super(VcsBundle.message(\"action.name.refresh\"), VcsBundle.message(\"action.desctiption.refresh\"), AllIcons.Actions.Refresh);",
      "info" : "SuperConstructorInvocation[57369-57492]:SuperConstructorInvocation[57109-57232]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57504-57510]:Modifier[57244-57250]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57511-57515]:PrimitiveType[57251-57255]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[57516-57531]:SimpleName[57256-57271]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[57532-57547]:SingleVariableDeclaration[57272-57287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57549-57613]:Block[57289-57353]"
    }, {
      "left" : "if (myInRefresh)",
      "right" : "if (myInRefresh)",
      "info" : "IfStatement[57557-57581]:IfStatement[57297-57321]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[57574-57581]:ReturnStatement[57314-57321]"
    }, {
      "left" : "refreshImpl(false);",
      "right" : "refreshImpl(false);",
      "info" : "ExpressionStatement[57588-57607]:ExpressionStatement[57328-57347]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[57619-57628]:MarkerAnnotation[57359-57368]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57633-57639]:Modifier[57373-57379]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57640-57644]:PrimitiveType[57380-57384]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[57645-57651]:SimpleName[57385-57391]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[57652-57667]:SingleVariableDeclaration[57392-57407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57669-57752]:Block[57409-57492]"
    }, {
      "left" : "super.update(e);",
      "right" : "super.update(e);",
      "info" : "ExpressionStatement[57677-57693]:ExpressionStatement[57417-57433]"
    }, {
      "left" : "e.getPresentation().setEnabled(! myInRefresh);",
      "right" : "e.getPresentation().setEnabled(! myInRefresh);",
      "info" : "ExpressionStatement[57700-57746]:ExpressionStatement[57440-57486]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[57760-57767]:Modifier[57500-57507]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57768-57772]:PrimitiveType[57508-57512]"
    }, {
      "left" : "refreshRevisionsOrder",
      "right" : "refreshRevisionsOrder",
      "info" : "SimpleName[57773-57794]:SimpleName[57513-57534]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57797-58052]:Block[57537-57792]"
    }, {
      "left" : "final List<VcsFileRevision> list = myHistorySession.getRevisionList();",
      "right" : "final List<VcsFileRevision> list = myHistorySession.getRevisionList();",
      "info" : "VariableDeclarationStatement[57803-57873]:VariableDeclarationStatement[57543-57613]"
    }, {
      "left" : "myRevisionsOrder.clear();",
      "right" : "myRevisionsOrder.clear();",
      "info" : "ExpressionStatement[57878-57903]:ExpressionStatement[57618-57643]"
    }, {
      "left" : "int cnt = 0;",
      "right" : "int cnt = 0;",
      "info" : "VariableDeclarationStatement[57909-57921]:VariableDeclarationStatement[57649-57661]"
    }, {
      "left" : "for (VcsFileRevision revision : list)",
      "right" : "for (VcsFileRevision revision : list)",
      "info" : "EnhancedForStatement[57926-58048]:EnhancedForStatement[57666-57788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57964-58048]:Block[57704-57788]"
    }, {
      "left" : "myRevisionsOrder.put(revision.getRevisionNumber(), cnt);",
      "right" : "myRevisionsOrder.put(revision.getRevisionNumber(), cnt);",
      "info" : "ExpressionStatement[57972-58028]:ExpressionStatement[57712-57768]"
    }, {
      "left" : "++ cnt;",
      "right" : "++ cnt;",
      "info" : "ExpressionStatement[58035-58042]:ExpressionStatement[57775-57782]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58056-58062]:Modifier[57796-57802]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[58063-58067]:PrimitiveType[57803-57807]"
    }, {
      "left" : "setIsStaticAndEmbedded",
      "right" : "setIsStaticAndEmbedded",
      "info" : "SimpleName[58068-58090]:SimpleName[57808-57830]"
    }, {
      "left" : "boolean isStaticAndEmbedded",
      "right" : "boolean isStaticAndEmbedded",
      "info" : "SingleVariableDeclaration[58091-58118]:SingleVariableDeclaration[57831-57858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58120-58645]:Block[57860-58385]"
    }, {
      "left" : "myIsStaticAndEmbedded = isStaticAndEmbedded;",
      "right" : "myIsStaticAndEmbedded = isStaticAndEmbedded;",
      "info" : "ExpressionStatement[58126-58170]:ExpressionStatement[57866-57910]"
    }, {
      "left" : "myDualView.setZipByHeight(isStaticAndEmbedded);",
      "right" : "myDualView.setZipByHeight(isStaticAndEmbedded);",
      "info" : "ExpressionStatement[58175-58222]:ExpressionStatement[57915-57962]"
    }, {
      "left" : "myDualView.getFlatView().updateColumnSizes();",
      "right" : "myDualView.getFlatView().updateColumnSizes();",
      "info" : "ExpressionStatement[58227-58272]:ExpressionStatement[57967-58012]"
    }, {
      "left" : "if (myIsStaticAndEmbedded)",
      "right" : "if (myIsStaticAndEmbedded)",
      "info" : "IfStatement[58277-58641]:IfStatement[58017-58381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58304-58641]:Block[58044-58381]"
    }, {
      "left" : "disableClose();",
      "right" : "disableClose();",
      "info" : "ExpressionStatement[58312-58327]:ExpressionStatement[58052-58067]"
    }, {
      "left" : "myDualView.getFlatView().getTableHeader().setBorder(IdeBorderFactory.createBorder(SideBorder.TOP));",
      "right" : "myDualView.getFlatView().getTableHeader().setBorder(IdeBorderFactory.createBorder(SideBorder.TOP));",
      "info" : "ExpressionStatement[58334-58433]:ExpressionStatement[58074-58173]"
    }, {
      "left" : "myDualView.getTreeView().getTableHeader().setBorder(IdeBorderFactory.createBorder(SideBorder.TOP));",
      "right" : "myDualView.getTreeView().getTableHeader().setBorder(IdeBorderFactory.createBorder(SideBorder.TOP));",
      "info" : "ExpressionStatement[58440-58539]:ExpressionStatement[58180-58279]"
    }, {
      "left" : "myDualView.getFlatView().setBorder(null);",
      "right" : "myDualView.getFlatView().setBorder(null);",
      "info" : "ExpressionStatement[58546-58587]:ExpressionStatement[58286-58327]"
    }, {
      "left" : "myDualView.getTreeView().setBorder(null);",
      "right" : "myDualView.getTreeView().setBorder(null);",
      "info" : "ExpressionStatement[58594-58635]:ExpressionStatement[58334-58375]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58649-58655]:Modifier[58389-58395]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[58656-58660]:PrimitiveType[58396-58400]"
    }, {
      "left" : "setBottomRevisionForShowDiff",
      "right" : "setBottomRevisionForShowDiff",
      "info" : "SimpleName[58661-58689]:SimpleName[58401-58429]"
    }, {
      "left" : "VcsFileRevision bottomRevisionForShowDiff",
      "right" : "VcsFileRevision bottomRevisionForShowDiff",
      "info" : "SingleVariableDeclaration[58690-58731]:SingleVariableDeclaration[58430-58471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58733-58799]:Block[58473-58539]"
    }, {
      "left" : "myBottomRevisionForShowDiff = bottomRevisionForShowDiff;",
      "right" : "myBottomRevisionForShowDiff = bottomRevisionForShowDiff;",
      "info" : "ExpressionStatement[58739-58795]:ExpressionStatement[58479-58535]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[58803-58810]:Modifier[58543-58550]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[58811-58817]:Modifier[58551-58557]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[58818-58823]:TYPE_DECLARATION_KIND[58558-58563]"
    }, {
      "left" : "FolderPatchCreationTask",
      "right" : "FolderPatchCreationTask",
      "info" : "SimpleName[58824-58847]:SimpleName[58564-58587]"
    }, {
      "left" : "Task.Backgroundable",
      "right" : "Task.Backgroundable",
      "info" : "SimpleType[58856-58875]:SimpleType[58596-58615]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[59060-59067]:Modifier[58800-58807]"
    }, {
      "left" : "FolderPatchCreationTask",
      "right" : "FolderPatchCreationTask",
      "info" : "SimpleName[59068-59091]:SimpleName[58808-58831]"
    }, {
      "left" : "@Nullable AbstractVcs vcs",
      "right" : "@Nullable AbstractVcs vcs",
      "info" : "SingleVariableDeclaration[59092-59117]:SingleVariableDeclaration[58832-58857]"
    }, {
      "left" : "final TreeNodeOnVcsRevision revision",
      "right" : "final TreeNodeOnVcsRevision revision",
      "info" : "SingleVariableDeclaration[59119-59155]:SingleVariableDeclaration[58859-58895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59157-59309]:Block[58897-59049]"
    }, {
      "left" : "super(vcs.getProject(), VcsBundle.message(\"create.patch.loading.content.progress\"), true);",
      "right" : "super(vcs.getProject(), VcsBundle.message(\"create.patch.loading.content.progress\"), true);",
      "info" : "SuperConstructorInvocation[59165-59255]:SuperConstructorInvocation[58905-58995]"
    }, {
      "left" : "myVcs = vcs;",
      "right" : "myVcs = vcs;",
      "info" : "ExpressionStatement[59262-59274]:ExpressionStatement[59002-59014]"
    }, {
      "left" : "myRevision = revision;",
      "right" : "myRevision = revision;",
      "info" : "ExpressionStatement[59281-59303]:ExpressionStatement[59021-59043]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[59315-59324]:MarkerAnnotation[59055-59064]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59329-59335]:Modifier[59069-59075]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[59336-59340]:PrimitiveType[59076-59080]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[59341-59344]:SimpleName[59081-59084]"
    }, {
      "left" : "@NotNull ProgressIndicator indicator",
      "right" : "@NotNull ProgressIndicator indicator",
      "info" : "SingleVariableDeclaration[59345-59381]:SingleVariableDeclaration[59085-59121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59383-60080]:Block[59123-59820]"
    }, {
      "left" : "final CommittedChangesProvider provider = myVcs.getCommittedChangesProvider();",
      "right" : "final CommittedChangesProvider provider = myVcs.getCommittedChangesProvider();",
      "info" : "VariableDeclarationStatement[59391-59469]:VariableDeclarationStatement[59131-59209]"
    }, {
      "left" : "if (provider == null)",
      "right" : "if (provider == null)",
      "info" : "IfStatement[59476-59505]:IfStatement[59216-59245]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[59498-59505]:ReturnStatement[59238-59245]"
    }, {
      "left" : "final RepositoryLocation changedRepositoryPath = myRevision.getChangedRepositoryPath();",
      "right" : "final RepositoryLocation changedRepositoryPath = myRevision.getChangedRepositoryPath();",
      "info" : "VariableDeclarationStatement[59512-59599]:VariableDeclarationStatement[59252-59339]"
    }, {
      "left" : "if (changedRepositoryPath == null)",
      "right" : "if (changedRepositoryPath == null)",
      "info" : "IfStatement[59606-59648]:IfStatement[59346-59388]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[59641-59648]:ReturnStatement[59381-59388]"
    }, {
      "left" : "final VcsVirtualFile vf =\n        new VcsVirtualFile(changedRepositoryPath.toPresentableString(), myRevision.getRevision(), VcsFileSystem.getInstance());",
      "right" : "final VcsVirtualFile vf =\n        new VcsVirtualFile(changedRepositoryPath.toPresentableString(), myRevision.getRevision(), VcsFileSystem.getInstance());",
      "info" : "VariableDeclarationStatement[59655-59808]:VariableDeclarationStatement[59395-59548]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[59815-60074]:TryStatement[59555-59814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59819-60008]:Block[59559-59748]"
    }, {
      "left" : "myList = ShowAllAffectedGenericAction.getRemoteList(myVcs, myRevision.getRevisionNumber(), vf);",
      "right" : "myList = ShowAllAffectedGenericAction.getRemoteList(myVcs, myRevision.getRevisionNumber(), vf);",
      "info" : "ExpressionStatement[59829-59924]:ExpressionStatement[59569-59664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60039-60074]:Block[59779-59814]"
    }, {
      "left" : "myException = e1;",
      "right" : "myException = e1;",
      "info" : "ExpressionStatement[60049-60066]:ExpressionStatement[59789-59806]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[60086-60095]:MarkerAnnotation[59826-59835]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60100-60106]:Modifier[59840-59846]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60107-60111]:PrimitiveType[59847-59851]"
    }, {
      "left" : "onSuccess",
      "right" : "onSuccess",
      "info" : "SimpleName[60112-60121]:SimpleName[59852-59861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60124-60641]:Block[59864-60381]"
    }, {
      "left" : "final AbstractVcsHelper helper = AbstractVcsHelper.getInstance(myProject);",
      "right" : "final AbstractVcsHelper helper = AbstractVcsHelper.getInstance(myProject);",
      "info" : "VariableDeclarationStatement[60132-60206]:VariableDeclarationStatement[59872-59946]"
    }, {
      "left" : "if (myException != null)",
      "right" : "if (myException != null)",
      "info" : "IfStatement[60213-60635]:IfStatement[59953-60375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60238-60359]:Block[59978-60099]"
    }, {
      "left" : "helper.showError(myException, VcsBundle.message(\"create.patch.error.title\", myException.getMessage()));",
      "right" : "helper.showError(myException, VcsBundle.message(\"create.patch.error.title\", myException.getMessage()));",
      "info" : "ExpressionStatement[60248-60351]:ExpressionStatement[59988-60091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60365-60635]:Block[60105-60375]"
    }, {
      "left" : "if (myList == null)",
      "right" : "if (myList == null)",
      "info" : "IfStatement[60375-60501]:IfStatement[60115-60241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60395-60501]:Block[60135-60241]"
    }, {
      "left" : "helper.showError(myException, \"Can not load changelist contents\");",
      "right" : "helper.showError(myException, \"Can not load changelist contents\");",
      "info" : "ExpressionStatement[60407-60473]:ExpressionStatement[60147-60213]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[60484-60491]:ReturnStatement[60224-60231]"
    }, {
      "left" : "CreatePatchFromChangesAction.createPatch(myProject, myList.getComment(), new ArrayList<Change>(myList.getChanges()));",
      "right" : "CreatePatchFromChangesAction.createPatch(myProject, myList.getComment(), new ArrayList<Change>(myList.getChanges()));",
      "info" : "ExpressionStatement[60510-60627]:ExpressionStatement[60250-60367]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60649-60655]:Modifier[60389-60395]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[60656-60661]:TYPE_DECLARATION_KIND[60396-60401]"
    }, {
      "left" : "MyCreatePatch",
      "right" : "MyCreatePatch",
      "info" : "SimpleName[60662-60675]:SimpleName[60402-60415]"
    }, {
      "left" : "DumbAwareAction",
      "right" : "DumbAwareAction",
      "info" : "SimpleType[60684-60699]:SimpleType[60424-60439]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60771-60777]:Modifier[60511-60517]"
    }, {
      "left" : "MyCreatePatch",
      "right" : "MyCreatePatch",
      "info" : "SimpleName[60778-60791]:SimpleName[60518-60531]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60794-61067]:Block[60534-60807]"
    }, {
      "left" : "super(VcsBundle.message(\"action.name.create.patch.for.selected.revisions\"),\n                VcsBundle.message(\"action.description.create.patch.for.selected.revisions\"), AllIcons.Actions.CreatePatch);",
      "right" : "super(VcsBundle.message(\"action.name.create.patch.for.selected.revisions\"),\n                VcsBundle.message(\"action.description.create.patch.for.selected.revisions\"), AllIcons.Actions.CreatePatch);",
      "info" : "SuperConstructorInvocation[60802-61001]:SuperConstructorInvocation[60542-60741]"
    }, {
      "left" : "myUsualDelegate = new CreatePatchFromChangesAction();",
      "right" : "myUsualDelegate = new CreatePatchFromChangesAction();",
      "info" : "ExpressionStatement[61008-61061]:ExpressionStatement[60748-60801]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[61073-61082]:MarkerAnnotation[60813-60822]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61087-61093]:Modifier[60827-60833]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[61094-61098]:PrimitiveType[60834-60838]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[61099-61114]:SimpleName[60839-60854]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[61115-61130]:SingleVariableDeclaration[60855-60870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61132-61454]:Block[60872-61194]"
    }, {
      "left" : "if (myFilePath.isDirectory())",
      "right" : "if (myFilePath.isDirectory())",
      "info" : "IfStatement[61140-61448]:IfStatement[60880-61188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61170-61389]:Block[60910-61129]"
    }, {
      "left" : "final List<TreeNodeOnVcsRevision> selection = getSelection();",
      "right" : "final List<TreeNodeOnVcsRevision> selection = getSelection();",
      "info" : "VariableDeclarationStatement[61180-61241]:VariableDeclarationStatement[60920-60981]"
    }, {
      "left" : "if (selection.size() != 1)",
      "right" : "if (selection.size() != 1)",
      "info" : "IfStatement[61250-61284]:IfStatement[60990-61024]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[61277-61284]:ReturnStatement[61017-61024]"
    }, {
      "left" : "ProgressManager.getInstance().run(new FolderPatchCreationTask(myVcs, selection.get(0)));",
      "right" : "ProgressManager.getInstance().run(new FolderPatchCreationTask(myVcs, selection.get(0)));",
      "info" : "ExpressionStatement[61293-61381]:ExpressionStatement[61033-61121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61395-61448]:Block[61135-61188]"
    }, {
      "left" : "myUsualDelegate.actionPerformed(e);",
      "right" : "myUsualDelegate.actionPerformed(e);",
      "info" : "ExpressionStatement[61405-61440]:ExpressionStatement[61145-61180]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[61460-61469]:MarkerAnnotation[61200-61209]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61474-61480]:Modifier[61214-61220]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[61481-61485]:PrimitiveType[61221-61225]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[61486-61492]:SimpleName[61226-61232]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[61493-61508]:SingleVariableDeclaration[61233-61248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61510-62186]:Block[61250-61926]"
    }, {
      "left" : "e.getPresentation().setVisible(true);",
      "right" : "e.getPresentation().setVisible(true);",
      "info" : "ExpressionStatement[61518-61555]:ExpressionStatement[61258-61295]"
    }, {
      "left" : "if (myFilePath.isNonLocal())",
      "right" : "if (myFilePath.isNonLocal())",
      "info" : "IfStatement[61562-61663]:IfStatement[61302-61403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61591-61663]:Block[61331-61403]"
    }, {
      "left" : "e.getPresentation().setEnabled(false);",
      "right" : "e.getPresentation().setEnabled(false);",
      "info" : "ExpressionStatement[61601-61639]:ExpressionStatement[61341-61379]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[61648-61655]:ReturnStatement[61388-61395]"
    }, {
      "left" : "boolean enabled = (! myFilePath.isDirectory()) || myProvider.supportsHistoryForDirectories();",
      "right" : "boolean enabled = (! myFilePath.isDirectory()) || myProvider.supportsHistoryForDirectories();",
      "info" : "VariableDeclarationStatement[61670-61763]:VariableDeclarationStatement[61410-61503]"
    }, {
      "left" : "final int selectionSize = getSelection().size();",
      "right" : "final int selectionSize = getSelection().size();",
      "info" : "VariableDeclarationStatement[61770-61818]:VariableDeclarationStatement[61510-61558]"
    }, {
      "left" : "if (enabled && (! myFilePath.isDirectory()))",
      "right" : "if (enabled && (! myFilePath.isDirectory()))",
      "info" : "IfStatement[61825-62133]:IfStatement[61565-61873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61870-62007]:Block[61610-61747]"
    }, {
      "left" : "enabled = (selectionSize > 0) && (selectionSize < 3);",
      "right" : "enabled = (selectionSize > 0) && (selectionSize < 3);",
      "info" : "ExpressionStatement[61946-61999]:ExpressionStatement[61686-61739]"
    }, {
      "left" : "if (enabled)",
      "right" : "if (enabled)",
      "info" : "IfStatement[62013-62133]:IfStatement[61753-61873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62026-62133]:Block[61766-61873]"
    }, {
      "left" : "enabled = selectionSize == 1 && getSelection().get(0).getChangedRepositoryPath() != null;",
      "right" : "enabled = selectionSize == 1 && getSelection().get(0).getChangedRepositoryPath() != null;",
      "info" : "ExpressionStatement[62036-62125]:ExpressionStatement[61776-61865]"
    }, {
      "left" : "e.getPresentation().setEnabled(enabled);",
      "right" : "e.getPresentation().setEnabled(enabled);",
      "info" : "ExpressionStatement[62140-62180]:ExpressionStatement[61880-61920]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62194-62203]:MarkerAnnotation[61934-61943]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62206-62212]:Modifier[61946-61952]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62213-62220]:PrimitiveType[61953-61960]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[62221-62227]:SimpleName[61961-61967]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[62228-62238]:SingleVariableDeclaration[61968-61978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62240-62376]:Block[61980-62116]"
    }, {
      "left" : "return obj instanceof FileHistoryPanelImpl && Comparing.equal(((FileHistoryPanelImpl)obj).getVirtualFile(), getVirtualFile());",
      "right" : "return obj instanceof FileHistoryPanelImpl && Comparing.equal(((FileHistoryPanelImpl)obj).getVirtualFile(), getVirtualFile());",
      "info" : "ReturnStatement[62246-62372]:ReturnStatement[61986-62112]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62380-62389]:MarkerAnnotation[62120-62129]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62392-62398]:Modifier[62132-62138]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[62399-62402]:PrimitiveType[62139-62142]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[62403-62411]:SimpleName[62143-62151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62414-62513]:Block[62154-62253]"
    }, {
      "left" : "final VirtualFile file = getVirtualFile();",
      "right" : "final VirtualFile file = getVirtualFile();",
      "info" : "VariableDeclarationStatement[62420-62462]:VariableDeclarationStatement[62160-62202]"
    }, {
      "left" : "return file == null ? 0 : file.hashCode();",
      "right" : "return file == null ? 0 : file.hashCode();",
      "info" : "ReturnStatement[62467-62509]:ReturnStatement[62207-62249]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[62517-62524]:Modifier[62257-62264]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[62525-62530]:TYPE_DECLARATION_KIND[62265-62270]"
    }, {
      "left" : "MyToggleAction",
      "right" : "MyToggleAction",
      "info" : "SimpleName[62531-62545]:SimpleName[62271-62285]"
    }, {
      "left" : "ToggleAction",
      "right" : "ToggleAction",
      "info" : "SimpleType[62554-62566]:SimpleType[62294-62306]"
    }, {
      "left" : "DumbAware",
      "right" : "DumbAware",
      "info" : "SimpleType[62578-62587]:SimpleType[62318-62327]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62595-62601]:Modifier[62335-62341]"
    }, {
      "left" : "MyToggleAction",
      "right" : "MyToggleAction",
      "info" : "SimpleName[62602-62616]:SimpleName[62342-62356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62619-62706]:Block[62359-62446]"
    }, {
      "left" : "super(\"Show Details\", \"Display details panel\", AllIcons.Actions.Preview);",
      "right" : "super(\"Show Details\", \"Display details panel\", AllIcons.Actions.Preview);",
      "info" : "SuperConstructorInvocation[62627-62700]:SuperConstructorInvocation[62367-62440]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62712-62721]:MarkerAnnotation[62452-62461]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62726-62732]:Modifier[62466-62472]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[62733-62740]:PrimitiveType[62473-62480]"
    }, {
      "left" : "isSelected",
      "right" : "isSelected",
      "info" : "SimpleName[62741-62751]:SimpleName[62481-62491]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[62752-62767]:SingleVariableDeclaration[62492-62507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62769-62835]:Block[62509-62575]"
    }, {
      "left" : "return getConfiguration().SHOW_FILE_HISTORY_DETAILS;",
      "right" : "return getConfiguration().SHOW_FILE_HISTORY_DETAILS;",
      "info" : "ReturnStatement[62777-62829]:ReturnStatement[62517-62569]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[62841-62850]:MarkerAnnotation[62581-62590]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62855-62861]:Modifier[62595-62601]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[62862-62866]:PrimitiveType[62602-62606]"
    }, {
      "left" : "setSelected",
      "right" : "setSelected",
      "info" : "SimpleName[62867-62878]:SimpleName[62607-62618]"
    }, {
      "left" : "AnActionEvent e",
      "right" : "AnActionEvent e",
      "info" : "SingleVariableDeclaration[62879-62894]:SingleVariableDeclaration[62619-62634]"
    }, {
      "left" : "boolean state",
      "right" : "boolean state",
      "info" : "SingleVariableDeclaration[62896-62909]:SingleVariableDeclaration[62636-62649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62911-63000]:Block[62651-62740]"
    }, {
      "left" : "getConfiguration().SHOW_FILE_HISTORY_DETAILS = state;",
      "right" : "getConfiguration().SHOW_FILE_HISTORY_DETAILS = state;",
      "info" : "ExpressionStatement[62919-62972]:ExpressionStatement[62659-62712]"
    }, {
      "left" : "setupDetails();",
      "right" : "setupDetails();",
      "info" : "ExpressionStatement[62979-62994]:ExpressionStatement[62719-62734]"
    } ]
  },
  "interFileMappings" : { }
}