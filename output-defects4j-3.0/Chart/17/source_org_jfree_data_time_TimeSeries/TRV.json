{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = -5032960206869675528L;",
      "right" : "private static final long serialVersionUID = -5032960206869675528L;",
      "info" : "FieldDeclaration[4666-4764]:FieldDeclaration[4666-4764]"
    }, {
      "left" : "protected static final String DEFAULT_DOMAIN_DESCRIPTION = \"Time\";",
      "right" : "protected static final String DEFAULT_DOMAIN_DESCRIPTION = \"Time\";",
      "info" : "FieldDeclaration[4776-4896]:FieldDeclaration[4776-4896]"
    }, {
      "left" : "protected static final String DEFAULT_RANGE_DESCRIPTION = \"Value\";",
      "right" : "protected static final String DEFAULT_RANGE_DESCRIPTION = \"Value\";",
      "info" : "FieldDeclaration[4904-5023]:FieldDeclaration[4904-5023]"
    }, {
      "left" : "private String domain;",
      "right" : "private String domain;",
      "info" : "FieldDeclaration[5031-5094]:FieldDeclaration[5031-5094]"
    }, {
      "left" : "private String range;",
      "right" : "private String range;",
      "info" : "FieldDeclaration[5102-5163]:FieldDeclaration[5102-5163]"
    }, {
      "left" : "protected Class timePeriodClass;",
      "right" : "protected Class timePeriodClass;",
      "info" : "FieldDeclaration[5171-5248]:FieldDeclaration[5171-5248]"
    }, {
      "left" : "protected List data;",
      "right" : "protected List data;",
      "info" : "FieldDeclaration[5256-5326]:FieldDeclaration[5256-5326]"
    }, {
      "left" : "private int maximumItemCount;",
      "right" : "private int maximumItemCount;",
      "info" : "FieldDeclaration[5334-5419]:FieldDeclaration[5334-5419]"
    }, {
      "left" : "private long maximumItemAge;",
      "right" : "private long maximumItemAge;",
      "info" : "FieldDeclaration[5427-5571]:FieldDeclaration[5427-5571]"
    }, {
      "left" : "public TimeSeries(Comparable name)",
      "right" : "public TimeSeries(Comparable name)",
      "info" : "MethodDeclaration[5583-6010]:MethodDeclaration[5583-6010]"
    }, {
      "left" : "public TimeSeries(Comparable name, Class timePeriodClass)",
      "right" : "public TimeSeries(Comparable name, Class timePeriodClass)",
      "info" : "MethodDeclaration[6018-6531]:MethodDeclaration[6018-6531]"
    }, {
      "left" : "public TimeSeries(Comparable name, String domain, String range, \r\n                      Class timePeriodClass)",
      "right" : "public TimeSeries(Comparable name, String domain, String range, \r\n                      Class timePeriodClass)",
      "info" : "MethodDeclaration[6539-7616]:MethodDeclaration[6539-7616]"
    }, {
      "left" : "public String getDomainDescription()",
      "right" : "public String getDomainDescription()",
      "info" : "MethodDeclaration[7624-7885]:MethodDeclaration[7624-7885]"
    }, {
      "left" : "public void setDomainDescription(String description)",
      "right" : "public void setDomainDescription(String description)",
      "info" : "MethodDeclaration[7893-8417]:MethodDeclaration[7893-8417]"
    }, {
      "left" : "public String getRangeDescription()",
      "right" : "public String getRangeDescription()",
      "info" : "MethodDeclaration[8425-8681]:MethodDeclaration[8425-8681]"
    }, {
      "left" : "public void setRangeDescription(String description)",
      "right" : "public void setRangeDescription(String description)",
      "info" : "MethodDeclaration[8689-9182]:MethodDeclaration[8689-9182]"
    }, {
      "left" : "public int getItemCount()",
      "right" : "public int getItemCount()",
      "info" : "MethodDeclaration[9190-9367]:MethodDeclaration[9190-9367]"
    }, {
      "left" : "public List getItems()",
      "right" : "public List getItems()",
      "info" : "MethodDeclaration[9375-9668]:MethodDeclaration[9375-9668]"
    }, {
      "left" : "public int getMaximumItemCount()",
      "right" : "public int getMaximumItemCount()",
      "info" : "MethodDeclaration[9676-10012]:MethodDeclaration[9676-10012]"
    }, {
      "left" : "public void setMaximumItemCount(int maximum)",
      "right" : "public void setMaximumItemCount(int maximum)",
      "info" : "MethodDeclaration[10020-10820]:MethodDeclaration[10020-10820]"
    }, {
      "left" : "public long getMaximumItemAge()",
      "right" : "public long getMaximumItemAge()",
      "info" : "MethodDeclaration[10828-11087]:MethodDeclaration[10828-11087]"
    }, {
      "left" : "public void setMaximumItemAge(long periods)",
      "right" : "public void setMaximumItemAge(long periods)",
      "info" : "MethodDeclaration[11095-11931]:MethodDeclaration[11095-11931]"
    }, {
      "left" : "public Class getTimePeriodClass()",
      "right" : "public Class getTimePeriodClass()",
      "info" : "MethodDeclaration[11939-12421]:MethodDeclaration[11939-12421]"
    }, {
      "left" : "public TimeSeriesDataItem getDataItem(int index)",
      "right" : "public TimeSeriesDataItem getDataItem(int index)",
      "info" : "MethodDeclaration[12429-12759]:MethodDeclaration[12429-12759]"
    }, {
      "left" : "public TimeSeriesDataItem getDataItem(RegularTimePeriod period)",
      "right" : "public TimeSeriesDataItem getDataItem(RegularTimePeriod period)",
      "info" : "MethodDeclaration[12767-13359]:MethodDeclaration[12767-13359]"
    }, {
      "left" : "public RegularTimePeriod getTimePeriod(int index)",
      "right" : "public RegularTimePeriod getTimePeriod(int index)",
      "info" : "MethodDeclaration[13367-13646]:MethodDeclaration[13367-13646]"
    }, {
      "left" : "public RegularTimePeriod getNextTimePeriod()",
      "right" : "public RegularTimePeriod getNextTimePeriod()",
      "info" : "MethodDeclaration[13654-13973]:MethodDeclaration[13654-13973]"
    }, {
      "left" : "public Collection getTimePeriods()",
      "right" : "public Collection getTimePeriods()",
      "info" : "MethodDeclaration[13981-14363]:MethodDeclaration[13981-14363]"
    }, {
      "left" : "public Collection getTimePeriodsUniqueToOtherSeries(TimeSeries series)",
      "right" : "public Collection getTimePeriodsUniqueToOtherSeries(TimeSeries series)",
      "info" : "MethodDeclaration[14371-15078]:MethodDeclaration[14371-15078]"
    }, {
      "left" : "public int getIndex(RegularTimePeriod period)",
      "right" : "public int getIndex(RegularTimePeriod period)",
      "info" : "MethodDeclaration[15086-15649]:MethodDeclaration[15086-15649]"
    }, {
      "left" : "public Number getValue(int index)",
      "right" : "public Number getValue(int index)",
      "info" : "MethodDeclaration[15657-15926]:MethodDeclaration[15657-15926]"
    }, {
      "left" : "public Number getValue(RegularTimePeriod period)",
      "right" : "public Number getValue(RegularTimePeriod period)",
      "info" : "MethodDeclaration[15934-16472]:MethodDeclaration[15934-16472]"
    }, {
      "left" : "public void add(TimeSeriesDataItem item)",
      "right" : "public void add(TimeSeriesDataItem item)",
      "info" : "MethodDeclaration[16480-16835]:MethodDeclaration[16480-16835]"
    }, {
      "left" : "public void add(TimeSeriesDataItem item, boolean notify)",
      "right" : "public void add(TimeSeriesDataItem item, boolean notify)",
      "info" : "MethodDeclaration[16851-19718]:MethodDeclaration[16851-19718]"
    }, {
      "left" : "public void add(RegularTimePeriod period, double value)",
      "right" : "public void add(RegularTimePeriod period, double value)",
      "info" : "MethodDeclaration[19726-20115]:MethodDeclaration[19726-20115]"
    }, {
      "left" : "public void add(RegularTimePeriod period, double value, boolean notify)",
      "right" : "public void add(RegularTimePeriod period, double value, boolean notify)",
      "info" : "MethodDeclaration[20123-20636]:MethodDeclaration[20123-20636]"
    }, {
      "left" : "public void add(RegularTimePeriod period, Number value)",
      "right" : "public void add(RegularTimePeriod period, Number value)",
      "info" : "MethodDeclaration[20644-21096]:MethodDeclaration[20644-21096]"
    }, {
      "left" : "public void add(RegularTimePeriod period, Number value, boolean notify)",
      "right" : "public void add(RegularTimePeriod period, Number value, boolean notify)",
      "info" : "MethodDeclaration[21104-21680]:MethodDeclaration[21104-21680]"
    }, {
      "left" : "public void update(RegularTimePeriod period, Number value)",
      "right" : "public void update(RegularTimePeriod period, Number value)",
      "info" : "MethodDeclaration[21688-22535]:MethodDeclaration[21688-22535]"
    }, {
      "left" : "public void update(int index, Number value)",
      "right" : "public void update(int index, Number value)",
      "info" : "MethodDeclaration[22543-22906]:MethodDeclaration[22543-22906]"
    }, {
      "left" : "public TimeSeries addAndOrUpdate(TimeSeries series)",
      "right" : "public TimeSeries addAndOrUpdate(TimeSeries series)",
      "info" : "MethodDeclaration[22914-23770]:MethodDeclaration[22914-23770]"
    }, {
      "left" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period, \r\n                                          double value)",
      "right" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period, \r\n                                          double value)",
      "info" : "MethodDeclaration[23778-24435]:MethodDeclaration[23778-24435]"
    }, {
      "left" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period, \r\n                                          Number value)",
      "right" : "public TimeSeriesDataItem addOrUpdate(RegularTimePeriod period, \r\n                                          Number value)",
      "info" : "MethodDeclaration[24447-26453]:MethodDeclaration[24447-26453]"
    }, {
      "left" : "public void removeAgedItems(boolean notify)",
      "right" : "public void removeAgedItems(boolean notify)",
      "info" : "MethodDeclaration[26461-27469]:MethodDeclaration[26461-27469]"
    }, {
      "left" : "public void removeAgedItems(long latest, boolean notify)",
      "right" : "public void removeAgedItems(long latest, boolean notify)",
      "info" : "MethodDeclaration[27477-29336]:MethodDeclaration[27477-29336]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[29344-29627]:MethodDeclaration[29344-29627]"
    }, {
      "left" : "public void delete(RegularTimePeriod period)",
      "right" : "public void delete(RegularTimePeriod period)",
      "info" : "MethodDeclaration[29635-30197]:MethodDeclaration[29635-30197]"
    }, {
      "left" : "public void delete(int start, int end)",
      "right" : "public void delete(int start, int end)",
      "info" : "MethodDeclaration[30205-30711]:MethodDeclaration[30205-30711]"
    }, {
      "left" : "public TimeSeries createCopy(int start, int end) \r\n        throws CloneNotSupportedException",
      "right" : "public TimeSeries createCopy(int start, int end) \r\n        throws CloneNotSupportedException",
      "info" : "MethodDeclaration[31359-32753]:MethodDeclaration[31423-32817]"
    }, {
      "left" : "public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\r\n        throws CloneNotSupportedException",
      "right" : "public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\r\n        throws CloneNotSupportedException",
      "info" : "MethodDeclaration[32761-34621]:MethodDeclaration[32825-34685]"
    }, {
      "left" : "public boolean equals(Object object)",
      "right" : "public boolean equals(Object object)",
      "info" : "MethodDeclaration[34629-36003]:MethodDeclaration[34693-36067]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[36011-37241]:MethodDeclaration[36075-37305]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5862-5868]:Modifier[5862-5868]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleName[5869-5879]:SimpleName[5869-5879]"
    }, {
      "left" : "Comparable name",
      "right" : "Comparable name",
      "info" : "SingleVariableDeclaration[5880-5895]:SingleVariableDeclaration[5880-5895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5897-6010]:Block[5897-6010]"
    }, {
      "left" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, \r\n                Day.class);",
      "right" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, \r\n                Day.class);",
      "info" : "ConstructorInvocation[5908-6003]:ConstructorInvocation[5908-6003]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6354-6360]:Modifier[6354-6360]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleName[6361-6371]:SimpleName[6361-6371]"
    }, {
      "left" : "Comparable name",
      "right" : "Comparable name",
      "info" : "SingleVariableDeclaration[6372-6387]:SingleVariableDeclaration[6372-6387]"
    }, {
      "left" : "Class timePeriodClass",
      "right" : "Class timePeriodClass",
      "info" : "SingleVariableDeclaration[6389-6410]:SingleVariableDeclaration[6389-6410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6412-6531]:Block[6412-6531]"
    }, {
      "left" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, \r\n                timePeriodClass);",
      "right" : "this(name, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION, \r\n                timePeriodClass);",
      "info" : "ConstructorInvocation[6423-6524]:ConstructorInvocation[6423-6524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7219-7225]:Modifier[7219-7225]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleName[7226-7236]:SimpleName[7226-7236]"
    }, {
      "left" : "Comparable name",
      "right" : "Comparable name",
      "info" : "SingleVariableDeclaration[7237-7252]:SingleVariableDeclaration[7237-7252]"
    }, {
      "left" : "String domain",
      "right" : "String domain",
      "info" : "SingleVariableDeclaration[7254-7267]:SingleVariableDeclaration[7254-7267]"
    }, {
      "left" : "String range",
      "right" : "String range",
      "info" : "SingleVariableDeclaration[7269-7281]:SingleVariableDeclaration[7269-7281]"
    }, {
      "left" : "Class timePeriodClass",
      "right" : "Class timePeriodClass",
      "info" : "SingleVariableDeclaration[7307-7328]:SingleVariableDeclaration[7307-7328]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7330-7616]:Block[7330-7616]"
    }, {
      "left" : "super(name);",
      "right" : "super(name);",
      "info" : "SuperConstructorInvocation[7341-7353]:SuperConstructorInvocation[7341-7353]"
    }, {
      "left" : "this.domain = domain;",
      "right" : "this.domain = domain;",
      "info" : "ExpressionStatement[7363-7384]:ExpressionStatement[7363-7384]"
    }, {
      "left" : "this.range = range;",
      "right" : "this.range = range;",
      "info" : "ExpressionStatement[7394-7413]:ExpressionStatement[7394-7413]"
    }, {
      "left" : "this.timePeriodClass = timePeriodClass;",
      "right" : "this.timePeriodClass = timePeriodClass;",
      "info" : "ExpressionStatement[7423-7462]:ExpressionStatement[7423-7462]"
    }, {
      "left" : "this.data = new java.util.ArrayList();",
      "right" : "this.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[7472-7510]:ExpressionStatement[7472-7510]"
    }, {
      "left" : "this.maximumItemCount = Integer.MAX_VALUE;",
      "right" : "this.maximumItemCount = Integer.MAX_VALUE;",
      "info" : "ExpressionStatement[7520-7562]:ExpressionStatement[7520-7562]"
    }, {
      "left" : "this.maximumItemAge = Long.MAX_VALUE;",
      "right" : "this.maximumItemAge = Long.MAX_VALUE;",
      "info" : "ExpressionStatement[7572-7609]:ExpressionStatement[7572-7609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7811-7817]:Modifier[7811-7817]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[7818-7824]:SimpleType[7818-7824]"
    }, {
      "left" : "getDomainDescription",
      "right" : "getDomainDescription",
      "info" : "SimpleName[7825-7845]:SimpleName[7825-7845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7848-7885]:Block[7848-7885]"
    }, {
      "left" : "return this.domain;",
      "right" : "return this.domain;",
      "info" : "ReturnStatement[7859-7878]:ReturnStatement[7859-7878]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8228-8234]:Modifier[8228-8234]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8235-8239]:PrimitiveType[8235-8239]"
    }, {
      "left" : "setDomainDescription",
      "right" : "setDomainDescription",
      "info" : "SimpleName[8240-8260]:SimpleName[8240-8260]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[8261-8279]:SingleVariableDeclaration[8261-8279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8281-8417]:Block[8281-8417]"
    }, {
      "left" : "String old = this.domain;",
      "right" : "String old = this.domain;",
      "info" : "VariableDeclarationStatement[8292-8317]:VariableDeclarationStatement[8292-8317]"
    }, {
      "left" : "this.domain = description;",
      "right" : "this.domain = description;",
      "info" : "ExpressionStatement[8327-8353]:ExpressionStatement[8327-8353]"
    }, {
      "left" : "firePropertyChange(\"Domain\", old, description);",
      "right" : "firePropertyChange(\"Domain\", old, description);",
      "info" : "ExpressionStatement[8363-8410]:ExpressionStatement[8363-8410]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8609-8615]:Modifier[8609-8615]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[8616-8622]:SimpleType[8616-8622]"
    }, {
      "left" : "getRangeDescription",
      "right" : "getRangeDescription",
      "info" : "SimpleName[8623-8642]:SimpleName[8623-8642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8645-8681]:Block[8645-8681]"
    }, {
      "left" : "return this.range;",
      "right" : "return this.range;",
      "info" : "ReturnStatement[8656-8674]:ReturnStatement[8656-8674]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8997-9003]:Modifier[8997-9003]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9004-9008]:PrimitiveType[9004-9008]"
    }, {
      "left" : "setRangeDescription",
      "right" : "setRangeDescription",
      "info" : "SimpleName[9009-9028]:SimpleName[9009-9028]"
    }, {
      "left" : "String description",
      "right" : "String description",
      "info" : "SingleVariableDeclaration[9029-9047]:SingleVariableDeclaration[9029-9047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9049-9182]:Block[9049-9182]"
    }, {
      "left" : "String old = this.range;",
      "right" : "String old = this.range;",
      "info" : "VariableDeclarationStatement[9060-9084]:VariableDeclarationStatement[9060-9084]"
    }, {
      "left" : "this.range = description;",
      "right" : "this.range = description;",
      "info" : "ExpressionStatement[9094-9119]:ExpressionStatement[9094-9119]"
    }, {
      "left" : "firePropertyChange(\"Range\", old, description);",
      "right" : "firePropertyChange(\"Range\", old, description);",
      "info" : "ExpressionStatement[9129-9175]:ExpressionStatement[9129-9175]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9299-9305]:Modifier[9299-9305]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9306-9309]:PrimitiveType[9306-9309]"
    }, {
      "left" : "getItemCount",
      "right" : "getItemCount",
      "info" : "SimpleName[9310-9322]:SimpleName[9310-9322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9325-9367]:Block[9325-9367]"
    }, {
      "left" : "return this.data.size();",
      "right" : "return this.data.size();",
      "info" : "ReturnStatement[9336-9360]:ReturnStatement[9336-9360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9580-9586]:Modifier[9580-9586]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[9587-9591]:SimpleType[9587-9591]"
    }, {
      "left" : "getItems",
      "right" : "getItems",
      "info" : "SimpleName[9592-9600]:SimpleName[9592-9600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9603-9668]:Block[9603-9668]"
    }, {
      "left" : "return Collections.unmodifiableList(this.data);",
      "right" : "return Collections.unmodifiableList(this.data);",
      "info" : "ReturnStatement[9614-9661]:ReturnStatement[9614-9661]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9932-9938]:Modifier[9932-9938]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9939-9942]:PrimitiveType[9939-9942]"
    }, {
      "left" : "getMaximumItemCount",
      "right" : "getMaximumItemCount",
      "info" : "SimpleName[9943-9962]:SimpleName[9943-9962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9965-10012]:Block[9965-10012]"
    }, {
      "left" : "return this.maximumItemCount;",
      "right" : "return this.maximumItemCount;",
      "info" : "ReturnStatement[9976-10005]:ReturnStatement[9976-10005]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10478-10484]:Modifier[10478-10484]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10485-10489]:PrimitiveType[10485-10489]"
    }, {
      "left" : "setMaximumItemCount",
      "right" : "setMaximumItemCount",
      "info" : "SimpleName[10490-10509]:SimpleName[10490-10509]"
    }, {
      "left" : "int maximum",
      "right" : "int maximum",
      "info" : "SingleVariableDeclaration[10510-10521]:SingleVariableDeclaration[10510-10521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10523-10820]:Block[10523-10820]"
    }, {
      "left" : "if (maximum < 0)",
      "right" : "if (maximum < 0)",
      "info" : "IfStatement[10534-10644]:IfStatement[10534-10644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10551-10644]:Block[10551-10644]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Negative 'maximum' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Negative 'maximum' argument.\");",
      "info" : "ThrowStatement[10566-10633]:ThrowStatement[10566-10633]"
    }, {
      "left" : "this.maximumItemCount = maximum;",
      "right" : "this.maximumItemCount = maximum;",
      "info" : "ExpressionStatement[10654-10686]:ExpressionStatement[10654-10686]"
    }, {
      "left" : "int count = this.data.size();",
      "right" : "int count = this.data.size();",
      "info" : "VariableDeclarationStatement[10696-10725]:VariableDeclarationStatement[10696-10725]"
    }, {
      "left" : "if (count > maximum)",
      "right" : "if (count > maximum)",
      "info" : "IfStatement[10735-10813]:IfStatement[10735-10813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10756-10813]:Block[10756-10813]"
    }, {
      "left" : "delete(0, count - maximum - 1);",
      "right" : "delete(0, count - maximum - 1);",
      "info" : "ExpressionStatement[10771-10802]:ExpressionStatement[10771-10802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11010-11016]:Modifier[11010-11016]"
    }, {
      "left" : "long",
      "right" : "long",
      "info" : "PrimitiveType[11017-11021]:PrimitiveType[11017-11021]"
    }, {
      "left" : "getMaximumItemAge",
      "right" : "getMaximumItemAge",
      "info" : "SimpleName[11022-11039]:SimpleName[11022-11039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11042-11087]:Block[11042-11087]"
    }, {
      "left" : "return this.maximumItemAge;",
      "right" : "return this.maximumItemAge;",
      "info" : "ReturnStatement[11053-11080]:ReturnStatement[11053-11080]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11642-11648]:Modifier[11642-11648]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11649-11653]:PrimitiveType[11649-11653]"
    }, {
      "left" : "setMaximumItemAge",
      "right" : "setMaximumItemAge",
      "info" : "SimpleName[11654-11671]:SimpleName[11654-11671]"
    }, {
      "left" : "long periods",
      "right" : "long periods",
      "info" : "SingleVariableDeclaration[11672-11684]:SingleVariableDeclaration[11672-11684]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11686-11931]:Block[11686-11931]"
    }, {
      "left" : "if (periods < 0)",
      "right" : "if (periods < 0)",
      "info" : "IfStatement[11697-11807]:IfStatement[11697-11807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11714-11807]:Block[11714-11807]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Negative 'periods' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Negative 'periods' argument.\");",
      "info" : "ThrowStatement[11729-11796]:ThrowStatement[11729-11796]"
    }, {
      "left" : "this.maximumItemAge = periods;",
      "right" : "this.maximumItemAge = periods;",
      "info" : "ExpressionStatement[11817-11847]:ExpressionStatement[11817-11847]"
    }, {
      "left" : "removeAgedItems(true);",
      "right" : "removeAgedItems(true);",
      "info" : "ExpressionStatement[11857-11879]:ExpressionStatement[11857-11879]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12341-12347]:Modifier[12341-12347]"
    }, {
      "left" : "Class",
      "right" : "Class",
      "info" : "SimpleType[12348-12353]:SimpleType[12348-12353]"
    }, {
      "left" : "getTimePeriodClass",
      "right" : "getTimePeriodClass",
      "info" : "SimpleName[12354-12372]:SimpleName[12354-12372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12375-12421]:Block[12375-12421]"
    }, {
      "left" : "return this.timePeriodClass;",
      "right" : "return this.timePeriodClass;",
      "info" : "ReturnStatement[12386-12414]:ReturnStatement[12386-12414]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12643-12649]:Modifier[12643-12649]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[12650-12668]:SimpleType[12650-12668]"
    }, {
      "left" : "getDataItem",
      "right" : "getDataItem",
      "info" : "SimpleName[12669-12680]:SimpleName[12669-12680]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[12681-12690]:SingleVariableDeclaration[12681-12690]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12692-12759]:Block[12692-12759]"
    }, {
      "left" : "return (TimeSeriesDataItem) this.data.get(index);",
      "right" : "return (TimeSeriesDataItem) this.data.get(index);",
      "info" : "ReturnStatement[12703-12752]:ReturnStatement[12703-12752]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13094-13100]:Modifier[13094-13100]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[13101-13119]:SimpleType[13101-13119]"
    }, {
      "left" : "getDataItem",
      "right" : "getDataItem",
      "info" : "SimpleName[13120-13131]:SimpleName[13120-13131]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[13132-13156]:SingleVariableDeclaration[13132-13156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13158-13359]:Block[13158-13359]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[13169-13198]:VariableDeclarationStatement[13169-13198]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[13208-13352]:IfStatement[13208-13352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13224-13299]:Block[13224-13299]"
    }, {
      "left" : "return (TimeSeriesDataItem) this.data.get(index);",
      "right" : "return (TimeSeriesDataItem) this.data.get(index);",
      "info" : "ReturnStatement[13239-13288]:ReturnStatement[13239-13288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13314-13352]:Block[13314-13352]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[13329-13341]:ReturnStatement[13329-13341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13540-13546]:Modifier[13540-13546]"
    }, {
      "left" : "RegularTimePeriod",
      "right" : "RegularTimePeriod",
      "info" : "SimpleType[13547-13564]:SimpleType[13547-13564]"
    }, {
      "left" : "getTimePeriod",
      "right" : "getTimePeriod",
      "info" : "SimpleName[13565-13578]:SimpleName[13565-13578]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[13579-13588]:SingleVariableDeclaration[13579-13588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13590-13646]:Block[13590-13646]"
    }, {
      "left" : "return getDataItem(index).getPeriod();",
      "right" : "return getDataItem(index).getPeriod();",
      "info" : "ReturnStatement[13601-13639]:ReturnStatement[13601-13639]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13822-13828]:Modifier[13822-13828]"
    }, {
      "left" : "RegularTimePeriod",
      "right" : "RegularTimePeriod",
      "info" : "SimpleType[13829-13846]:SimpleType[13829-13846]"
    }, {
      "left" : "getNextTimePeriod",
      "right" : "getNextTimePeriod",
      "info" : "SimpleName[13847-13864]:SimpleName[13847-13864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13867-13973]:Block[13867-13973]"
    }, {
      "left" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "right" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "info" : "VariableDeclarationStatement[13878-13937]:VariableDeclarationStatement[13878-13937]"
    }, {
      "left" : "return last.next();",
      "right" : "return last.next();",
      "info" : "ReturnStatement[13947-13966]:ReturnStatement[13947-13966]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14134-14140]:Modifier[14134-14140]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[14141-14151]:SimpleType[14141-14151]"
    }, {
      "left" : "getTimePeriods",
      "right" : "getTimePeriods",
      "info" : "SimpleName[14152-14166]:SimpleName[14152-14166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14169-14363]:Block[14169-14363]"
    }, {
      "left" : "Collection result = new java.util.ArrayList();",
      "right" : "Collection result = new java.util.ArrayList();",
      "info" : "VariableDeclarationStatement[14180-14226]:VariableDeclarationStatement[14180-14226]"
    }, {
      "left" : "for (int i = 0; i < getItemCount(); i++)",
      "right" : "for (int i = 0; i < getItemCount(); i++)",
      "info" : "ForStatement[14236-14332]:ForStatement[14236-14332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14277-14332]:Block[14277-14332]"
    }, {
      "left" : "result.add(getTimePeriod(i));",
      "right" : "result.add(getTimePeriod(i));",
      "info" : "ExpressionStatement[14292-14321]:ExpressionStatement[14292-14321]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[14342-14356]:ReturnStatement[14342-14356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14655-14661]:Modifier[14655-14661]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[14662-14672]:SimpleType[14662-14672]"
    }, {
      "left" : "getTimePeriodsUniqueToOtherSeries",
      "right" : "getTimePeriodsUniqueToOtherSeries",
      "info" : "SimpleName[14673-14706]:SimpleName[14673-14706]"
    }, {
      "left" : "TimeSeries series",
      "right" : "TimeSeries series",
      "info" : "SingleVariableDeclaration[14707-14724]:SingleVariableDeclaration[14707-14724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14726-15078]:Block[14726-15078]"
    }, {
      "left" : "Collection result = new java.util.ArrayList();",
      "right" : "Collection result = new java.util.ArrayList();",
      "info" : "VariableDeclarationStatement[14739-14785]:VariableDeclarationStatement[14739-14785]"
    }, {
      "left" : "for (int i = 0; i < series.getItemCount(); i++)",
      "right" : "for (int i = 0; i < series.getItemCount(); i++)",
      "info" : "ForStatement[14795-15045]:ForStatement[14795-15045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14843-15045]:Block[14843-15045]"
    }, {
      "left" : "RegularTimePeriod period = series.getTimePeriod(i);",
      "right" : "RegularTimePeriod period = series.getTimePeriod(i);",
      "info" : "VariableDeclarationStatement[14858-14909]:VariableDeclarationStatement[14858-14909]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[14923-14952]:VariableDeclarationStatement[14923-14952]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[14966-15034]:IfStatement[14966-15034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14981-15034]:Block[14981-15034]"
    }, {
      "left" : "result.add(period);",
      "right" : "result.add(period);",
      "info" : "ExpressionStatement[15000-15019]:ExpressionStatement[15000-15019]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[15055-15069]:ReturnStatement[15055-15069]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15313-15319]:Modifier[15313-15319]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[15320-15323]:PrimitiveType[15320-15323]"
    }, {
      "left" : "getIndex",
      "right" : "getIndex",
      "info" : "SimpleName[15324-15332]:SimpleName[15324-15332]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[15333-15357]:SingleVariableDeclaration[15333-15357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15359-15649]:Block[15359-15649]"
    }, {
      "left" : "if (period == null)",
      "right" : "if (period == null)",
      "info" : "IfStatement[15370-15478]:IfStatement[15370-15478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15390-15478]:Block[15390-15478]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "info" : "ThrowStatement[15405-15467]:ThrowStatement[15405-15467]"
    }, {
      "left" : "TimeSeriesDataItem dummy = new TimeSeriesDataItem(\r\n              period, Integer.MIN_VALUE);",
      "right" : "TimeSeriesDataItem dummy = new TimeSeriesDataItem(\r\n              period, Integer.MIN_VALUE);",
      "info" : "VariableDeclarationStatement[15489-15582]:VariableDeclarationStatement[15489-15582]"
    }, {
      "left" : "return Collections.binarySearch(this.data, dummy);",
      "right" : "return Collections.binarySearch(this.data, dummy);",
      "info" : "ReturnStatement[15592-15642]:ReturnStatement[15592-15642]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15837-15843]:Modifier[15837-15843]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[15844-15850]:SimpleType[15844-15850]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[15851-15859]:SimpleName[15851-15859]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[15860-15869]:SingleVariableDeclaration[15860-15869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15871-15926]:Block[15871-15926]"
    }, {
      "left" : "return getDataItem(index).getValue();",
      "right" : "return getDataItem(index).getValue();",
      "info" : "ReturnStatement[15882-15919]:ReturnStatement[15882-15919]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16244-16250]:Modifier[16244-16250]"
    }, {
      "left" : "Number",
      "right" : "Number",
      "info" : "SimpleType[16251-16257]:SimpleType[16251-16257]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[16258-16266]:SimpleName[16258-16266]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[16267-16291]:SingleVariableDeclaration[16267-16291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16293-16472]:Block[16293-16472]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[16306-16335]:VariableDeclarationStatement[16306-16335]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[16345-16463]:IfStatement[16345-16463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16361-16410]:Block[16361-16410]"
    }, {
      "left" : "return getValue(index);",
      "right" : "return getValue(index);",
      "info" : "ReturnStatement[16376-16399]:ReturnStatement[16376-16399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16425-16463]:Block[16425-16463]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[16440-16452]:ReturnStatement[16440-16452]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16760-16766]:Modifier[16760-16766]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[16767-16771]:PrimitiveType[16767-16771]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[16772-16775]:SimpleName[16772-16775]"
    }, {
      "left" : "TimeSeriesDataItem item",
      "right" : "TimeSeriesDataItem item",
      "info" : "SingleVariableDeclaration[16776-16799]:SingleVariableDeclaration[16776-16799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16801-16835]:Block[16801-16835]"
    }, {
      "left" : "add(item, true);",
      "right" : "add(item, true);",
      "info" : "ExpressionStatement[16812-16828]:ExpressionStatement[16812-16828]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17172-17178]:Modifier[17172-17178]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17179-17183]:PrimitiveType[17179-17183]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[17184-17187]:SimpleName[17184-17187]"
    }, {
      "left" : "TimeSeriesDataItem item",
      "right" : "TimeSeriesDataItem item",
      "info" : "SingleVariableDeclaration[17188-17211]:SingleVariableDeclaration[17188-17211]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[17213-17227]:SingleVariableDeclaration[17213-17227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17229-19718]:Block[17229-19718]"
    }, {
      "left" : "if (item == null)",
      "right" : "if (item == null)",
      "info" : "IfStatement[17240-17344]:IfStatement[17240-17344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17258-17344]:Block[17258-17344]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'item' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'item' argument.\");",
      "info" : "ThrowStatement[17273-17333]:ThrowStatement[17273-17333]"
    }, {
      "left" : "if (!item.getPeriod().getClass().equals(this.timePeriodClass))",
      "right" : "if (!item.getPeriod().getClass().equals(this.timePeriodClass))",
      "info" : "IfStatement[17354-17866]:IfStatement[17354-17866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17417-17866]:Block[17417-17866]"
    }, {
      "left" : "StringBuffer b = new StringBuffer();",
      "right" : "StringBuffer b = new StringBuffer();",
      "info" : "VariableDeclarationStatement[17432-17468]:VariableDeclarationStatement[17432-17468]"
    }, {
      "left" : "b.append(\"You are trying to add data where the time period class \");",
      "right" : "b.append(\"You are trying to add data where the time period class \");",
      "info" : "ExpressionStatement[17482-17550]:ExpressionStatement[17482-17550]"
    }, {
      "left" : "b.append(\"is \");",
      "right" : "b.append(\"is \");",
      "info" : "ExpressionStatement[17564-17580]:ExpressionStatement[17564-17580]"
    }, {
      "left" : "b.append(item.getPeriod().getClass().getName());",
      "right" : "b.append(item.getPeriod().getClass().getName());",
      "info" : "ExpressionStatement[17594-17642]:ExpressionStatement[17594-17642]"
    }, {
      "left" : "b.append(\", but the TimeSeries is expecting an instance of \");",
      "right" : "b.append(\", but the TimeSeries is expecting an instance of \");",
      "info" : "ExpressionStatement[17656-17718]:ExpressionStatement[17656-17718]"
    }, {
      "left" : "b.append(this.timePeriodClass.getName());",
      "right" : "b.append(this.timePeriodClass.getName());",
      "info" : "ExpressionStatement[17732-17773]:ExpressionStatement[17732-17773]"
    }, {
      "left" : "b.append(\".\");",
      "right" : "b.append(\".\");",
      "info" : "ExpressionStatement[17787-17801]:ExpressionStatement[17787-17801]"
    }, {
      "left" : "throw new SeriesException(b.toString());",
      "right" : "throw new SeriesException(b.toString());",
      "info" : "ThrowStatement[17815-17855]:ThrowStatement[17815-17855]"
    }, {
      "left" : "boolean added = false;",
      "right" : "boolean added = false;",
      "info" : "VariableDeclarationStatement[17947-17969]:VariableDeclarationStatement[17947-17969]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[17979-18006]:VariableDeclarationStatement[17979-18006]"
    }, {
      "left" : "if (count == 0)",
      "right" : "if (count == 0)",
      "info" : "IfStatement[18016-19190]:IfStatement[18016-19190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18032-18105]:Block[18032-18105]"
    }, {
      "left" : "this.data.add(item);",
      "right" : "this.data.add(item);",
      "info" : "ExpressionStatement[18047-18067]:ExpressionStatement[18047-18067]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[18081-18094]:ExpressionStatement[18081-18094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18120-19190]:Block[18120-19190]"
    }, {
      "left" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "right" : "RegularTimePeriod last = getTimePeriod(getItemCount() - 1);",
      "info" : "VariableDeclarationStatement[18135-18194]:VariableDeclarationStatement[18135-18194]"
    }, {
      "left" : "if (item.getPeriod().compareTo(last) > 0)",
      "right" : "if (item.getPeriod().compareTo(last) > 0)",
      "info" : "IfStatement[18208-19179]:IfStatement[18208-19179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18250-18335]:Block[18250-18335]"
    }, {
      "left" : "this.data.add(item);",
      "right" : "this.data.add(item);",
      "info" : "ExpressionStatement[18269-18289]:ExpressionStatement[18269-18289]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[18307-18320]:ExpressionStatement[18307-18320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18354-19179]:Block[18354-19179]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, item);",
      "right" : "int index = Collections.binarySearch(this.data, item);",
      "info" : "VariableDeclarationStatement[18373-18427]:VariableDeclarationStatement[18373-18427]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[18445-19164]:IfStatement[18445-19164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18460-18569]:Block[18460-18569]"
    }, {
      "left" : "this.data.add(-index - 1, item);",
      "right" : "this.data.add(-index - 1, item);",
      "info" : "ExpressionStatement[18483-18515]:ExpressionStatement[18483-18515]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[18537-18550]:ExpressionStatement[18537-18550]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18592-19164]:Block[18592-19164]"
    }, {
      "left" : "StringBuffer b = new StringBuffer();",
      "right" : "StringBuffer b = new StringBuffer();",
      "info" : "VariableDeclarationStatement[18615-18651]:VariableDeclarationStatement[18615-18651]"
    }, {
      "left" : "b.append(\"You are attempting to add an observation for \");",
      "right" : "b.append(\"You are attempting to add an observation for \");",
      "info" : "ExpressionStatement[18673-18731]:ExpressionStatement[18673-18731]"
    }, {
      "left" : "b.append(\"the time period \");",
      "right" : "b.append(\"the time period \");",
      "info" : "ExpressionStatement[18753-18782]:ExpressionStatement[18753-18782]"
    }, {
      "left" : "b.append(item.getPeriod().toString());",
      "right" : "b.append(item.getPeriod().toString());",
      "info" : "ExpressionStatement[18804-18842]:ExpressionStatement[18804-18842]"
    }, {
      "left" : "b.append(\" but the series already contains an observation\");",
      "right" : "b.append(\" but the series already contains an observation\");",
      "info" : "ExpressionStatement[18864-18924]:ExpressionStatement[18864-18924]"
    }, {
      "left" : "b.append(\" for that time period. Duplicates are not \");",
      "right" : "b.append(\" for that time period. Duplicates are not \");",
      "info" : "ExpressionStatement[18946-19001]:ExpressionStatement[18946-19001]"
    }, {
      "left" : "b.append(\"permitted.  Try using the addOrUpdate() method.\");",
      "right" : "b.append(\"permitted.  Try using the addOrUpdate() method.\");",
      "info" : "ExpressionStatement[19023-19083]:ExpressionStatement[19023-19083]"
    }, {
      "left" : "throw new SeriesException(b.toString());",
      "right" : "throw new SeriesException(b.toString());",
      "info" : "ThrowStatement[19105-19145]:ThrowStatement[19105-19145]"
    }, {
      "left" : "if (added)",
      "right" : "if (added)",
      "info" : "IfStatement[19200-19709]:IfStatement[19200-19709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19211-19709]:Block[19211-19709]"
    }, {
      "left" : "if (getItemCount() > this.maximumItemCount)",
      "right" : "if (getItemCount() > this.maximumItemCount)",
      "info" : "IfStatement[19303-19401]:IfStatement[19303-19401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19347-19401]:Block[19347-19401]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[19366-19386]:ExpressionStatement[19366-19386]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[19417-19440]:ExpressionStatement[19417-19440]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[19632-19698]:IfStatement[19632-19698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19644-19698]:Block[19644-19698]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[19663-19683]:ExpressionStatement[19663-19683]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19977-19983]:Modifier[19977-19983]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19984-19988]:PrimitiveType[19984-19988]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[19989-19992]:SimpleName[19989-19992]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[19993-20017]:SingleVariableDeclaration[19993-20017]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[20019-20031]:SingleVariableDeclaration[20019-20031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20033-20115]:Block[20033-20115]"
    }, {
      "left" : "add(period, value, true);",
      "right" : "add(period, value, true);",
      "info" : "ExpressionStatement[20083-20108]:ExpressionStatement[20083-20108]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20415-20421]:Modifier[20415-20421]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20422-20426]:PrimitiveType[20422-20426]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[20427-20430]:SimpleName[20427-20430]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[20431-20455]:SingleVariableDeclaration[20431-20455]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[20457-20469]:SingleVariableDeclaration[20457-20469]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[20471-20485]:SingleVariableDeclaration[20471-20485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20487-20636]:Block[20487-20636]"
    }, {
      "left" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[20537-20601]:VariableDeclarationStatement[20537-20601]"
    }, {
      "left" : "add(item, notify);",
      "right" : "add(item, notify);",
      "info" : "ExpressionStatement[20611-20629]:ExpressionStatement[20611-20629]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20958-20964]:Modifier[20958-20964]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[20965-20969]:PrimitiveType[20965-20969]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[20970-20973]:SimpleName[20970-20973]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[20974-20998]:SingleVariableDeclaration[20974-20998]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[21000-21012]:SingleVariableDeclaration[21000-21012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21014-21096]:Block[21014-21096]"
    }, {
      "left" : "add(period, value, true);",
      "right" : "add(period, value, true);",
      "info" : "ExpressionStatement[21064-21089]:ExpressionStatement[21064-21089]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21459-21465]:Modifier[21459-21465]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21466-21470]:PrimitiveType[21466-21470]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[21471-21474]:SimpleName[21471-21474]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[21475-21499]:SingleVariableDeclaration[21475-21499]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[21501-21513]:SingleVariableDeclaration[21501-21513]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[21515-21529]:SingleVariableDeclaration[21515-21529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21531-21680]:Block[21531-21680]"
    }, {
      "left" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem item = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[21581-21645]:VariableDeclarationStatement[21581-21645]"
    }, {
      "left" : "add(item, notify);",
      "right" : "add(item, notify);",
      "info" : "ExpressionStatement[21655-21673]:ExpressionStatement[21655-21673]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21974-21980]:Modifier[21974-21980]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21981-21985]:PrimitiveType[21981-21985]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[21986-21992]:SimpleName[21986-21992]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[21993-22017]:SingleVariableDeclaration[21993-22017]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[22019-22031]:SingleVariableDeclaration[22019-22031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22033-22535]:Block[22033-22535]"
    }, {
      "left" : "TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem temp = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[22044-22108]:VariableDeclarationStatement[22044-22108]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, temp);",
      "right" : "int index = Collections.binarySearch(this.data, temp);",
      "info" : "VariableDeclarationStatement[22118-22172]:VariableDeclarationStatement[22118-22172]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[22182-22526]:IfStatement[22182-22526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22198-22361]:Block[22198-22361]"
    }, {
      "left" : "TimeSeriesDataItem pair = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem pair = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[22213-22281]:VariableDeclarationStatement[22213-22281]"
    }, {
      "left" : "pair.setValue(value);",
      "right" : "pair.setValue(value);",
      "info" : "ExpressionStatement[22295-22316]:ExpressionStatement[22295-22316]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[22330-22350]:ExpressionStatement[22330-22350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22376-22526]:Block[22376-22526]"
    }, {
      "left" : "throw new SeriesException(\r\n                \"TimeSeries.update(TimePeriod, Number):  period does not exist.\"\r\n            );",
      "right" : "throw new SeriesException(\r\n                \"TimeSeries.update(TimePeriod, Number):  period does not exist.\"\r\n            );",
      "info" : "ThrowStatement[22391-22515]:ThrowStatement[22391-22515]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22738-22744]:Modifier[22738-22744]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[22745-22749]:PrimitiveType[22745-22749]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[22750-22756]:SimpleName[22750-22756]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[22757-22766]:SingleVariableDeclaration[22757-22766]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[22768-22780]:SingleVariableDeclaration[22768-22780]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22782-22906]:Block[22782-22906]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(index);",
      "right" : "TimeSeriesDataItem item = getDataItem(index);",
      "info" : "VariableDeclarationStatement[22793-22838]:VariableDeclarationStatement[22793-22838]"
    }, {
      "left" : "item.setValue(value);",
      "right" : "item.setValue(value);",
      "info" : "ExpressionStatement[22848-22869]:ExpressionStatement[22848-22869]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[22879-22899]:ExpressionStatement[22879-22899]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23206-23212]:Modifier[23206-23212]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleType[23213-23223]:SimpleType[23213-23223]"
    }, {
      "left" : "addAndOrUpdate",
      "right" : "addAndOrUpdate",
      "info" : "SimpleName[23224-23238]:SimpleName[23224-23238]"
    }, {
      "left" : "TimeSeries series",
      "right" : "TimeSeries series",
      "info" : "SingleVariableDeclaration[23239-23256]:SingleVariableDeclaration[23239-23256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23258-23770]:Block[23258-23770]"
    }, {
      "left" : "TimeSeries overwritten = new TimeSeries(\"Overwritten values from: \" \r\n                + getKey(), series.getTimePeriodClass());",
      "right" : "TimeSeries overwritten = new TimeSeries(\"Overwritten values from: \" \r\n                + getKey(), series.getTimePeriodClass());",
      "info" : "VariableDeclarationStatement[23269-23396]:VariableDeclarationStatement[23269-23396]"
    }, {
      "left" : "for (int i = 0; i < series.getItemCount(); i++)",
      "right" : "for (int i = 0; i < series.getItemCount(); i++)",
      "info" : "ForStatement[23406-23734]:ForStatement[23406-23734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23454-23734]:Block[23454-23734]"
    }, {
      "left" : "TimeSeriesDataItem item = series.getDataItem(i);",
      "right" : "TimeSeriesDataItem item = series.getDataItem(i);",
      "info" : "VariableDeclarationStatement[23469-23517]:VariableDeclarationStatement[23469-23517]"
    }, {
      "left" : "TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(), \r\n                    item.getValue());",
      "right" : "TimeSeriesDataItem oldItem = addOrUpdate(item.getPeriod(), \r\n                    item.getValue());",
      "info" : "VariableDeclarationStatement[23531-23629]:VariableDeclarationStatement[23531-23629]"
    }, {
      "left" : "if (oldItem != null)",
      "right" : "if (oldItem != null)",
      "info" : "IfStatement[23643-23723]:IfStatement[23643-23723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23664-23723]:Block[23664-23723]"
    }, {
      "left" : "overwritten.add(oldItem);",
      "right" : "overwritten.add(oldItem);",
      "info" : "ExpressionStatement[23683-23708]:ExpressionStatement[23683-23708]"
    }, {
      "left" : "return overwritten;",
      "right" : "return overwritten;",
      "info" : "ReturnStatement[23744-23763]:ReturnStatement[23744-23763]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24240-24246]:Modifier[24240-24246]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[24247-24265]:SimpleType[24247-24265]"
    }, {
      "left" : "addOrUpdate",
      "right" : "addOrUpdate",
      "info" : "SimpleName[24266-24277]:SimpleName[24266-24277]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[24278-24302]:SingleVariableDeclaration[24278-24302]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[24348-24360]:SingleVariableDeclaration[24348-24360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24362-24435]:Block[24362-24435]"
    }, {
      "left" : "return this.addOrUpdate(period, new Double(value));",
      "right" : "return this.addOrUpdate(period, new Double(value));",
      "info" : "ReturnStatement[24373-24424]:ReturnStatement[24373-24424]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[24939-24945]:Modifier[24939-24945]"
    }, {
      "left" : "TimeSeriesDataItem",
      "right" : "TimeSeriesDataItem",
      "info" : "SimpleType[24946-24964]:SimpleType[24946-24964]"
    }, {
      "left" : "addOrUpdate",
      "right" : "addOrUpdate",
      "info" : "SimpleName[24965-24976]:SimpleName[24965-24976]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[24977-25001]:SingleVariableDeclaration[24977-25001]"
    }, {
      "left" : "Number value",
      "right" : "Number value",
      "info" : "SingleVariableDeclaration[25047-25059]:SingleVariableDeclaration[25047-25059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25061-26453]:Block[25061-26453]"
    }, {
      "left" : "if (period == null)",
      "right" : "if (period == null)",
      "info" : "IfStatement[25074-25185]:IfStatement[25074-25185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25094-25185]:Block[25094-25185]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'period' argument.\");",
      "info" : "ThrowStatement[25109-25171]:ThrowStatement[25109-25171]"
    }, {
      "left" : "TimeSeriesDataItem overwritten = null;",
      "right" : "TimeSeriesDataItem overwritten = null;",
      "info" : "VariableDeclarationStatement[25195-25233]:VariableDeclarationStatement[25195-25233]"
    }, {
      "left" : "TimeSeriesDataItem key = new TimeSeriesDataItem(period, value);",
      "right" : "TimeSeriesDataItem key = new TimeSeriesDataItem(period, value);",
      "info" : "VariableDeclarationStatement[25245-25308]:VariableDeclarationStatement[25245-25308]"
    }, {
      "left" : "int index = Collections.binarySearch(this.data, key);",
      "right" : "int index = Collections.binarySearch(this.data, key);",
      "info" : "VariableDeclarationStatement[25318-25371]:VariableDeclarationStatement[25318-25371]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[25381-26415]:IfStatement[25381-26415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25397-25867]:Block[25397-25867]"
    }, {
      "left" : "TimeSeriesDataItem existing \r\n                = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem existing \r\n                = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[25412-25502]:VariableDeclarationStatement[25412-25502]"
    }, {
      "left" : "overwritten = (TimeSeriesDataItem) existing.clone();",
      "right" : "overwritten = (TimeSeriesDataItem) existing.clone();",
      "info" : "ExpressionStatement[25516-25568]:ExpressionStatement[25516-25568]"
    }, {
      "left" : "existing.setValue(value);",
      "right" : "existing.setValue(value);",
      "info" : "ExpressionStatement[25582-25607]:ExpressionStatement[25582-25607]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[25621-25644]:ExpressionStatement[25621-25644]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[25836-25856]:ExpressionStatement[25836-25856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25882-26415]:Block[25882-26415]"
    }, {
      "left" : "this.data.add(-index - 1, new TimeSeriesDataItem(period, value));",
      "right" : "this.data.add(-index - 1, new TimeSeriesDataItem(period, value));",
      "info" : "ExpressionStatement[25897-25962]:ExpressionStatement[25897-25962]"
    }, {
      "left" : "if (getItemCount() > this.maximumItemCount)",
      "right" : "if (getItemCount() > this.maximumItemCount)",
      "info" : "IfStatement[26055-26153]:IfStatement[26055-26153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26099-26153]:Block[26099-26153]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[26118-26138]:ExpressionStatement[26118-26138]"
    }, {
      "left" : "removeAgedItems(false);",
      "right" : "removeAgedItems(false);",
      "info" : "ExpressionStatement[26169-26192]:ExpressionStatement[26169-26192]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[26384-26404]:ExpressionStatement[26384-26404]"
    }, {
      "left" : "return overwritten;",
      "right" : "return overwritten;",
      "info" : "ReturnStatement[26425-26444]:ReturnStatement[26425-26444]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26863-26869]:Modifier[26863-26869]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26870-26874]:PrimitiveType[26870-26874]"
    }, {
      "left" : "removeAgedItems",
      "right" : "removeAgedItems",
      "info" : "SimpleName[26875-26890]:SimpleName[26875-26890]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[26891-26905]:SingleVariableDeclaration[26891-26905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26907-27469]:Block[26907-27469]"
    }, {
      "left" : "if (getItemCount() > 1)",
      "right" : "if (getItemCount() > 1)",
      "info" : "IfStatement[27020-27462]:IfStatement[27020-27462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27044-27462]:Block[27044-27462]"
    }, {
      "left" : "long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();",
      "right" : "long latest = getTimePeriod(getItemCount() - 1).getSerialIndex();",
      "info" : "VariableDeclarationStatement[27059-27124]:VariableDeclarationStatement[27059-27124]"
    }, {
      "left" : "boolean removed = false;",
      "right" : "boolean removed = false;",
      "info" : "VariableDeclarationStatement[27138-27162]:VariableDeclarationStatement[27138-27162]"
    }, {
      "left" : "while ((latest - getTimePeriod(0).getSerialIndex()) \r\n                    > this.maximumItemAge)",
      "right" : "while ((latest - getTimePeriod(0).getSerialIndex()) \r\n                    > this.maximumItemAge)",
      "info" : "WhileStatement[27176-27360]:WhileStatement[27176-27360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27273-27360]:Block[27273-27360]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[27292-27312]:ExpressionStatement[27292-27312]"
    }, {
      "left" : "removed = true;",
      "right" : "removed = true;",
      "info" : "ExpressionStatement[27330-27345]:ExpressionStatement[27330-27345]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[27374-27451]:IfStatement[27374-27451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27397-27451]:Block[27397-27451]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[27416-27436]:ExpressionStatement[27416-27436]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27982-27988]:Modifier[27982-27988]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27989-27993]:PrimitiveType[27989-27993]"
    }, {
      "left" : "removeAgedItems",
      "right" : "removeAgedItems",
      "info" : "SimpleName[27994-28009]:SimpleName[27994-28009]"
    }, {
      "left" : "long latest",
      "right" : "long latest",
      "info" : "SingleVariableDeclaration[28010-28021]:SingleVariableDeclaration[28010-28021]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[28023-28037]:SingleVariableDeclaration[28023-28037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28039-29336]:Block[28039-29336]"
    }, {
      "left" : "long index = Long.MAX_VALUE;",
      "right" : "long index = Long.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[28130-28158]:VariableDeclarationStatement[28130-28158]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28169-28905]:TryStatement[28169-28905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28173-28636]:Block[28173-28636]"
    }, {
      "left" : "Method m = RegularTimePeriod.class.getDeclaredMethod(\r\n                    \"createInstance\", new Class[] {Class.class, Date.class, \r\n                    TimeZone.class});",
      "right" : "Method m = RegularTimePeriod.class.getDeclaredMethod(\r\n                    \"createInstance\", new Class[] {Class.class, Date.class, \r\n                    TimeZone.class});",
      "info" : "VariableDeclarationStatement[28188-28358]:VariableDeclarationStatement[28188-28358]"
    }, {
      "left" : "RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\r\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\r\n                            new Date(latest), TimeZone.getDefault()});",
      "right" : "RegularTimePeriod newest = (RegularTimePeriod) m.invoke(\r\n                    this.timePeriodClass, new Object[] {this.timePeriodClass,\r\n                            new Date(latest), TimeZone.getDefault()});",
      "info" : "VariableDeclarationStatement[28372-28579]:VariableDeclarationStatement[28372-28579]"
    }, {
      "left" : "index = newest.getSerialIndex();",
      "right" : "index = newest.getSerialIndex();",
      "info" : "ExpressionStatement[28593-28625]:ExpressionStatement[28593-28625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28678-28724]:Block[28678-28724]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[28693-28713]:ExpressionStatement[28693-28713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28767-28813]:Block[28767-28813]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[28782-28802]:ExpressionStatement[28782-28802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28859-28905]:Block[28859-28905]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[28874-28894]:ExpressionStatement[28874-28894]"
    }, {
      "left" : "boolean removed = false;",
      "right" : "boolean removed = false;",
      "info" : "VariableDeclarationStatement[29027-29051]:VariableDeclarationStatement[29027-29051]"
    }, {
      "left" : "while (getItemCount() > 0 && (index \r\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge)",
      "right" : "while (getItemCount() > 0 && (index \r\n                - getTimePeriod(0).getSerialIndex()) > this.maximumItemAge)",
      "info" : "WhileStatement[29061-29250]:WhileStatement[29061-29250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29175-29250]:Block[29175-29250]"
    }, {
      "left" : "this.data.remove(0);",
      "right" : "this.data.remove(0);",
      "info" : "ExpressionStatement[29190-29210]:ExpressionStatement[29190-29210]"
    }, {
      "left" : "removed = true;",
      "right" : "removed = true;",
      "info" : "ExpressionStatement[29224-29239]:ExpressionStatement[29224-29239]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[29260-29329]:IfStatement[29260-29329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29283-29329]:Block[29283-29329]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[29298-29318]:ExpressionStatement[29298-29318]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29485-29491]:Modifier[29485-29491]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29492-29496]:PrimitiveType[29492-29496]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[29497-29502]:SimpleName[29497-29502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29505-29627]:Block[29505-29627]"
    }, {
      "left" : "if (this.data.size() > 0)",
      "right" : "if (this.data.size() > 0)",
      "info" : "IfStatement[29516-29620]:IfStatement[29516-29620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29542-29620]:Block[29542-29620]"
    }, {
      "left" : "this.data.clear();",
      "right" : "this.data.clear();",
      "info" : "ExpressionStatement[29557-29575]:ExpressionStatement[29557-29575]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[29589-29609]:ExpressionStatement[29589-29609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29995-30001]:Modifier[29995-30001]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30002-30006]:PrimitiveType[30002-30006]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[30007-30013]:SimpleName[30007-30013]"
    }, {
      "left" : "RegularTimePeriod period",
      "right" : "RegularTimePeriod period",
      "info" : "SingleVariableDeclaration[30014-30038]:SingleVariableDeclaration[30014-30038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30040-30197]:Block[30040-30197]"
    }, {
      "left" : "int index = getIndex(period);",
      "right" : "int index = getIndex(period);",
      "info" : "VariableDeclarationStatement[30051-30080]:VariableDeclarationStatement[30051-30080]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[30090-30190]:IfStatement[30090-30190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30106-30190]:Block[30106-30190]"
    }, {
      "left" : "this.data.remove(index);",
      "right" : "this.data.remove(index);",
      "info" : "ExpressionStatement[30121-30145]:ExpressionStatement[30121-30145]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[30159-30179]:ExpressionStatement[30159-30179]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30419-30425]:Modifier[30419-30425]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30426-30430]:PrimitiveType[30426-30430]"
    }, {
      "left" : "delete",
      "right" : "delete",
      "info" : "SimpleName[30431-30437]:SimpleName[30431-30437]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[30438-30447]:SingleVariableDeclaration[30438-30447]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[30449-30456]:SingleVariableDeclaration[30449-30456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30458-30711]:Block[30458-30711]"
    }, {
      "left" : "if (end < start)",
      "right" : "if (end < start)",
      "info" : "IfStatement[30469-30573]:IfStatement[30469-30573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30486-30573]:Block[30486-30573]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "info" : "ThrowStatement[30501-30562]:ThrowStatement[30501-30562]"
    }, {
      "left" : "for (int i = 0; i <= (end - start); i++)",
      "right" : "for (int i = 0; i <= (end - start); i++)",
      "info" : "ForStatement[30583-30674]:ForStatement[30583-30674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30624-30674]:Block[30624-30674]"
    }, {
      "left" : "this.data.remove(start);",
      "right" : "this.data.remove(start);",
      "info" : "ExpressionStatement[30639-30663]:ExpressionStatement[30639-30663]"
    }, {
      "left" : "fireSeriesChanged();",
      "right" : "fireSeriesChanged();",
      "info" : "ExpressionStatement[30684-30704]:ExpressionStatement[30684-30704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31801-31807]:Modifier[31865-31871]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleType[31808-31818]:SimpleType[31872-31882]"
    }, {
      "left" : "createCopy",
      "right" : "createCopy",
      "info" : "SimpleName[31819-31829]:SimpleName[31883-31893]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[31830-31839]:SingleVariableDeclaration[31894-31903]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[31841-31848]:SingleVariableDeclaration[31905-31912]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[31867-31893]:SimpleType[31931-31957]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31894-32753]:Block[31958-32817]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[31907-32007]:IfStatement[31971-32071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31922-32007]:Block[31986-32071]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start >= 0.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start >= 0.\");",
      "info" : "ThrowStatement[31937-31996]:ThrowStatement[32001-32060]"
    }, {
      "left" : "if (end < start)",
      "right" : "if (end < start)",
      "info" : "IfStatement[32017-32121]:IfStatement[32081-32185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32034-32121]:Block[32098-32185]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "right" : "throw new IllegalArgumentException(\"Requires start <= end.\");",
      "info" : "ThrowStatement[32049-32110]:ThrowStatement[32113-32174]"
    }, {
      "left" : "TimeSeries copy = (TimeSeries) super.clone();",
      "right" : "TimeSeries copy = (TimeSeries) super.clone();",
      "info" : "VariableDeclarationStatement[32131-32176]:VariableDeclarationStatement[32195-32240]"
    }, {
      "left" : "copy.data = new java.util.ArrayList();",
      "right" : "copy.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[32188-32226]:ExpressionStatement[32252-32290]"
    }, {
      "left" : "if (this.data.size() > 0)",
      "right" : "if (this.data.size() > 0)",
      "info" : "IfStatement[32236-32724]:IfStatement[32300-32788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32262-32724]:Block[32326-32788]"
    }, {
      "left" : "for (int index = start; index <= end; index++)",
      "right" : "for (int index = start; index <= end; index++)",
      "info" : "ForStatement[32277-32713]:ForStatement[32341-32777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32324-32713]:Block[32388-32777]"
    }, {
      "left" : "TimeSeriesDataItem item \r\n                    = (TimeSeriesDataItem) this.data.get(index);",
      "right" : "TimeSeriesDataItem item \r\n                    = (TimeSeriesDataItem) this.data.get(index);",
      "info" : "VariableDeclarationStatement[32343-32433]:VariableDeclarationStatement[32407-32497]"
    }, {
      "left" : "TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();",
      "right" : "TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();",
      "info" : "VariableDeclarationStatement[32451-32512]:VariableDeclarationStatement[32515-32576]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32530-32698]:TryStatement[32594-32762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32534-32592]:Block[32598-32656]"
    }, {
      "left" : "copy.add(clone);",
      "right" : "copy.add(clone);",
      "info" : "ExpressionStatement[32557-32573]:ExpressionStatement[32621-32637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32636-32698]:Block[32700-32762]"
    }, {
      "left" : "e.printStackTrace();",
      "right" : "e.printStackTrace();",
      "info" : "ExpressionStatement[32659-32679]:ExpressionStatement[32723-32743]"
    }, {
      "left" : "return copy;",
      "right" : "return copy;",
      "info" : "ReturnStatement[32734-32746]:ReturnStatement[32798-32810]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33183-33189]:Modifier[33247-33253]"
    }, {
      "left" : "TimeSeries",
      "right" : "TimeSeries",
      "info" : "SimpleType[33190-33200]:SimpleType[33254-33264]"
    }, {
      "left" : "createCopy",
      "right" : "createCopy",
      "info" : "SimpleName[33201-33211]:SimpleName[33265-33275]"
    }, {
      "left" : "RegularTimePeriod start",
      "right" : "RegularTimePeriod start",
      "info" : "SingleVariableDeclaration[33212-33235]:SingleVariableDeclaration[33276-33299]"
    }, {
      "left" : "RegularTimePeriod end",
      "right" : "RegularTimePeriod end",
      "info" : "SingleVariableDeclaration[33237-33258]:SingleVariableDeclaration[33301-33322]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[33276-33302]:SimpleType[33340-33366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33303-34621]:Block[33367-34685]"
    }, {
      "left" : "if (start == null)",
      "right" : "if (start == null)",
      "info" : "IfStatement[33316-33422]:IfStatement[33380-33486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33335-33422]:Block[33399-33486]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'start' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'start' argument.\");",
      "info" : "ThrowStatement[33350-33411]:ThrowStatement[33414-33475]"
    }, {
      "left" : "if (end == null)",
      "right" : "if (end == null)",
      "info" : "IfStatement[33432-33534]:IfStatement[33496-33598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33449-33534]:Block[33513-33598]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'end' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'end' argument.\");",
      "info" : "ThrowStatement[33464-33523]:ThrowStatement[33528-33587]"
    }, {
      "left" : "if (start.compareTo(end) > 0)",
      "right" : "if (start.compareTo(end) > 0)",
      "info" : "IfStatement[33544-33693]:IfStatement[33608-33757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33574-33693]:Block[33638-33757]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Requires start on or before end.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Requires start on or before end.\");",
      "info" : "ThrowStatement[33589-33682]:ThrowStatement[33653-33746]"
    }, {
      "left" : "boolean emptyRange = false;",
      "right" : "boolean emptyRange = false;",
      "info" : "VariableDeclarationStatement[33703-33730]:VariableDeclarationStatement[33767-33794]"
    }, {
      "left" : "int startIndex = getIndex(start);",
      "right" : "int startIndex = getIndex(start);",
      "info" : "VariableDeclarationStatement[33740-33773]:VariableDeclarationStatement[33804-33837]"
    }, {
      "left" : "if (startIndex < 0)",
      "right" : "if (startIndex < 0)",
      "info" : "IfStatement[33783-33996]:IfStatement[33847-34060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33803-33996]:Block[33867-34060]"
    }, {
      "left" : "startIndex = -(startIndex + 1);",
      "right" : "startIndex = -(startIndex + 1);",
      "info" : "ExpressionStatement[33818-33849]:ExpressionStatement[33882-33913]"
    }, {
      "left" : "if (startIndex == this.data.size())",
      "right" : "if (startIndex == this.data.size())",
      "info" : "IfStatement[33863-33985]:IfStatement[33927-34049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33899-33985]:Block[33963-34049]"
    }, {
      "left" : "emptyRange = true;",
      "right" : "emptyRange = true;",
      "info" : "ExpressionStatement[33918-33936]:ExpressionStatement[33982-34000]"
    }, {
      "left" : "int endIndex = getIndex(end);",
      "right" : "int endIndex = getIndex(end);",
      "info" : "VariableDeclarationStatement[34006-34035]:VariableDeclarationStatement[34070-34099]"
    }, {
      "left" : "if (endIndex < 0)",
      "right" : "if (endIndex < 0)",
      "info" : "IfStatement[34045-34284]:IfStatement[34109-34348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34063-34284]:Block[34127-34348]"
    }, {
      "left" : "endIndex = -(endIndex + 1);",
      "right" : "endIndex = -(endIndex + 1);",
      "info" : "ExpressionStatement[34130-34157]:ExpressionStatement[34194-34221]"
    }, {
      "left" : "endIndex = endIndex - 1;",
      "right" : "endIndex = endIndex - 1;",
      "info" : "ExpressionStatement[34210-34234]:ExpressionStatement[34274-34298]"
    }, {
      "left" : "if (endIndex < 0)",
      "right" : "if (endIndex < 0)",
      "info" : "IfStatement[34294-34356]:IfStatement[34358-34420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34312-34356]:Block[34376-34420]"
    }, {
      "left" : "emptyRange = true;",
      "right" : "emptyRange = true;",
      "info" : "ExpressionStatement[34327-34345]:ExpressionStatement[34391-34409]"
    }, {
      "left" : "if (emptyRange)",
      "right" : "if (emptyRange)",
      "info" : "IfStatement[34366-34612]:IfStatement[34430-34676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34382-34531]:Block[34446-34595]"
    }, {
      "left" : "TimeSeries copy = (TimeSeries) super.clone();",
      "right" : "TimeSeries copy = (TimeSeries) super.clone();",
      "info" : "VariableDeclarationStatement[34397-34442]:VariableDeclarationStatement[34461-34506]"
    }, {
      "left" : "copy.data = new java.util.ArrayList();",
      "right" : "copy.data = new java.util.ArrayList();",
      "info" : "ExpressionStatement[34456-34494]:ExpressionStatement[34520-34558]"
    }, {
      "left" : "return copy;",
      "right" : "return copy;",
      "info" : "ReturnStatement[34508-34520]:ReturnStatement[34572-34584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34546-34612]:Block[34610-34676]"
    }, {
      "left" : "return createCopy(startIndex, endIndex);",
      "right" : "return createCopy(startIndex, endIndex);",
      "info" : "ReturnStatement[34561-34601]:ReturnStatement[34625-34665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34835-34841]:Modifier[34899-34905]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[34842-34849]:PrimitiveType[34906-34913]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[34850-34856]:SimpleName[34914-34920]"
    }, {
      "left" : "Object object",
      "right" : "Object object",
      "info" : "SingleVariableDeclaration[34857-34870]:SingleVariableDeclaration[34921-34934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34872-36003]:Block[34936-36067]"
    }, {
      "left" : "if (object == this)",
      "right" : "if (object == this)",
      "info" : "IfStatement[34883-34941]:IfStatement[34947-35005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34903-34941]:Block[34967-35005]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[34918-34930]:ReturnStatement[34982-34994]"
    }, {
      "left" : "if (!(object instanceof TimeSeries) || !super.equals(object))",
      "right" : "if (!(object instanceof TimeSeries) || !super.equals(object))",
      "info" : "IfStatement[34951-35052]:IfStatement[35015-35116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35013-35052]:Block[35077-35116]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35028-35041]:ReturnStatement[35092-35105]"
    }, {
      "left" : "TimeSeries s = (TimeSeries) object;",
      "right" : "TimeSeries s = (TimeSeries) object;",
      "info" : "VariableDeclarationStatement[35062-35097]:VariableDeclarationStatement[35126-35161]"
    }, {
      "left" : "if (!ObjectUtilities.equal(\r\n            getDomainDescription(), s.getDomainDescription()\r\n        ))",
      "right" : "if (!ObjectUtilities.equal(\r\n            getDomainDescription(), s.getDomainDescription()\r\n        ))",
      "info" : "IfStatement[35107-35248]:IfStatement[35171-35312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35209-35248]:Block[35273-35312]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35224-35237]:ReturnStatement[35288-35301]"
    }, {
      "left" : "if (!ObjectUtilities.equal(\r\n            getRangeDescription(), s.getRangeDescription()\r\n        ))",
      "right" : "if (!ObjectUtilities.equal(\r\n            getRangeDescription(), s.getRangeDescription()\r\n        ))",
      "info" : "IfStatement[35260-35399]:IfStatement[35324-35463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35360-35399]:Block[35424-35463]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35375-35388]:ReturnStatement[35439-35452]"
    }, {
      "left" : "if (!getClass().equals(s.getClass()))",
      "right" : "if (!getClass().equals(s.getClass()))",
      "info" : "IfStatement[35411-35488]:IfStatement[35475-35552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35449-35488]:Block[35513-35552]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35464-35477]:ReturnStatement[35528-35541]"
    }, {
      "left" : "if (getMaximumItemAge() != s.getMaximumItemAge())",
      "right" : "if (getMaximumItemAge() != s.getMaximumItemAge())",
      "info" : "IfStatement[35500-35589]:IfStatement[35564-35653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35550-35589]:Block[35614-35653]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35565-35578]:ReturnStatement[35629-35642]"
    }, {
      "left" : "if (getMaximumItemCount() != s.getMaximumItemCount())",
      "right" : "if (getMaximumItemCount() != s.getMaximumItemCount())",
      "info" : "IfStatement[35601-35694]:IfStatement[35665-35758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35655-35694]:Block[35719-35758]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35670-35683]:ReturnStatement[35734-35747]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[35706-35733]:VariableDeclarationStatement[35770-35797]"
    }, {
      "left" : "if (count != s.getItemCount())",
      "right" : "if (count != s.getItemCount())",
      "info" : "IfStatement[35743-35813]:IfStatement[35807-35877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35774-35813]:Block[35838-35877]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35789-35802]:ReturnStatement[35853-35866]"
    }, {
      "left" : "for (int i = 0; i < count; i++)",
      "right" : "for (int i = 0; i < count; i++)",
      "info" : "ForStatement[35823-35974]:ForStatement[35887-36038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35855-35974]:Block[35919-36038]"
    }, {
      "left" : "if (!getDataItem(i).equals(s.getDataItem(i)))",
      "right" : "if (!getDataItem(i).equals(s.getDataItem(i)))",
      "info" : "IfStatement[35870-35963]:IfStatement[35934-36027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35916-35963]:Block[35980-36027]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[35935-35948]:ReturnStatement[35999-36012]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[35984-35996]:ReturnStatement[36048-36060]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36116-36122]:Modifier[36180-36186]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[36123-36126]:PrimitiveType[36187-36190]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[36127-36135]:SimpleName[36191-36199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36138-37241]:Block[36202-37305]"
    }, {
      "left" : "int result = super.hashCode();",
      "right" : "int result = super.hashCode();",
      "info" : "VariableDeclarationStatement[36149-36179]:VariableDeclarationStatement[36213-36243]"
    }, {
      "left" : "result = 29 * result + (this.domain != null ? this.domain.hashCode() \r\n                : 0);",
      "right" : "result = 29 * result + (this.domain != null ? this.domain.hashCode() \r\n                : 0);",
      "info" : "ExpressionStatement[36189-36281]:ExpressionStatement[36253-36345]"
    }, {
      "left" : "result = 29 * result + (this.range != null ? this.range.hashCode() : 0);",
      "right" : "result = 29 * result + (this.range != null ? this.range.hashCode() : 0);",
      "info" : "ExpressionStatement[36291-36363]:ExpressionStatement[36355-36427]"
    }, {
      "left" : "result = 29 * result + (this.timePeriodClass != null \r\n                ? this.timePeriodClass.hashCode() : 0);",
      "right" : "result = 29 * result + (this.timePeriodClass != null \r\n                ? this.timePeriodClass.hashCode() : 0);",
      "info" : "ExpressionStatement[36373-36483]:ExpressionStatement[36437-36547]"
    }, {
      "left" : "int count = getItemCount();",
      "right" : "int count = getItemCount();",
      "info" : "VariableDeclarationStatement[36618-36645]:VariableDeclarationStatement[36682-36709]"
    }, {
      "left" : "if (count > 0)",
      "right" : "if (count > 0)",
      "info" : "IfStatement[36655-36790]:IfStatement[36719-36854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36670-36790]:Block[36734-36854]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(0);",
      "right" : "TimeSeriesDataItem item = getDataItem(0);",
      "info" : "VariableDeclarationStatement[36685-36726]:VariableDeclarationStatement[36749-36790]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[36740-36779]:ExpressionStatement[36804-36843]"
    }, {
      "left" : "if (count > 1)",
      "right" : "if (count > 1)",
      "info" : "IfStatement[36800-36943]:IfStatement[36864-37007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36815-36943]:Block[36879-37007]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(count - 1);",
      "right" : "TimeSeriesDataItem item = getDataItem(count - 1);",
      "info" : "VariableDeclarationStatement[36830-36879]:VariableDeclarationStatement[36894-36943]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[36893-36932]:ExpressionStatement[36957-36996]"
    }, {
      "left" : "if (count > 2)",
      "right" : "if (count > 2)",
      "info" : "IfStatement[36953-37096]:IfStatement[37017-37160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36968-37096]:Block[37032-37160]"
    }, {
      "left" : "TimeSeriesDataItem item = getDataItem(count / 2);",
      "right" : "TimeSeriesDataItem item = getDataItem(count / 2);",
      "info" : "VariableDeclarationStatement[36983-37032]:VariableDeclarationStatement[37047-37096]"
    }, {
      "left" : "result = 29 * result + item.hashCode();",
      "right" : "result = 29 * result + item.hashCode();",
      "info" : "ExpressionStatement[37046-37085]:ExpressionStatement[37110-37149]"
    }, {
      "left" : "result = 29 * result + this.maximumItemCount;",
      "right" : "result = 29 * result + this.maximumItemCount;",
      "info" : "ExpressionStatement[37106-37151]:ExpressionStatement[37170-37215]"
    }, {
      "left" : "result = 29 * result + (int) this.maximumItemAge;",
      "right" : "result = 29 * result + (int) this.maximumItemAge;",
      "info" : "ExpressionStatement[37161-37210]:ExpressionStatement[37225-37274]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[37220-37234]:ReturnStatement[37284-37298]"
    } ]
  },
  "interFileMappings" : { }
}