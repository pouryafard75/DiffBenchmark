{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1307-1355]:FieldDeclaration[1307-1355]"
    }, {
      "left" : "protected final Class<T> _handledType;",
      "right" : "protected final Class<T> _handledType;",
      "info" : "FieldDeclaration[1361-1517]:FieldDeclaration[1361-1517]"
    }, {
      "left" : "protected StdSerializer(Class<T> t)",
      "right" : "protected StdSerializer(Class<T> t)",
      "info" : "MethodDeclaration[1689-1758]:MethodDeclaration[1689-1758]"
    }, {
      "left" : "protected StdSerializer(JavaType type)",
      "right" : "protected StdSerializer(JavaType type)",
      "info" : "MethodDeclaration[1764-1899]:MethodDeclaration[1764-1899]"
    }, {
      "left" : "protected StdSerializer(Class<?> t, boolean dummy)",
      "right" : "protected StdSerializer(Class<?> t, boolean dummy)",
      "info" : "MethodDeclaration[1909-2160]:MethodDeclaration[1909-2160]"
    }, {
      "left" : "public Class<T> handledType()",
      "right" : "public Class<T> handledType()",
      "info" : "MethodDeclaration[2330-2398]:MethodDeclaration[2330-2398]"
    }, {
      "left" : "public abstract void serialize(T value, JsonGenerator jgen, SerializerProvider provider)\n        throws IOException, JsonGenerationException;",
      "right" : "public abstract void serialize(T value, JsonGenerator jgen, SerializerProvider provider)\n        throws IOException, JsonGenerationException;",
      "info" : "MethodDeclaration[2573-2728]:MethodDeclaration[2573-2728]"
    }, {
      "left" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)\n        throws JsonMappingException",
      "right" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[2931-3231]:MethodDeclaration[2931-3231]"
    }, {
      "left" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint, boolean isOptional)\n        throws JsonMappingException",
      "right" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint, boolean isOptional)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[3241-3684]:MethodDeclaration[3241-3684]"
    }, {
      "left" : "protected ObjectNode createObjectNode()",
      "right" : "protected ObjectNode createObjectNode()",
      "info" : "MethodDeclaration[3694-3795]:MethodDeclaration[3694-3795]"
    }, {
      "left" : "protected ObjectNode createSchemaNode(String type)",
      "right" : "protected ObjectNode createSchemaNode(String type)",
      "info" : "MethodDeclaration[3805-3972]:MethodDeclaration[3805-3972]"
    }, {
      "left" : "protected ObjectNode createSchemaNode(String type, boolean isOptional)",
      "right" : "protected ObjectNode createSchemaNode(String type, boolean isOptional)",
      "info" : "MethodDeclaration[3982-4297]:MethodDeclaration[3982-4297]"
    }, {
      "left" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint)\n        throws JsonMappingException",
      "right" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4307-4632]:MethodDeclaration[4307-4632]"
    }, {
      "left" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, String fieldName)\n        throws IOException",
      "right" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, String fieldName)\n        throws IOException",
      "info" : "MethodDeclaration[4843-6662]:MethodDeclaration[4843-6662]"
    }, {
      "left" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, int index)\n        throws IOException",
      "right" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, int index)\n        throws IOException",
      "info" : "MethodDeclaration[6668-7711]:MethodDeclaration[6668-7711]"
    }, {
      "left" : "protected boolean isDefaultSerializer(JsonSerializer<?> serializer)",
      "right" : "protected boolean isDefaultSerializer(JsonSerializer<?> serializer)",
      "info" : "MethodDeclaration[7894-8330]:MethodDeclaration[7894-8330]"
    }, {
      "left" : "protected PropertyFilter findPropertyFilter(SerializerProvider provider,\n            Object filterId, Object valueToFilter)\n        throws JsonMappingException",
      "right" : "protected PropertyFilter findPropertyFilter(SerializerProvider provider,\n            Object filterId, Object valueToFilter)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[10072-10931]:MethodDeclaration[10115-10974]"
    } ],
    "mappings" : [
 {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1689-1698]:Modifier[1689-1698]"
    }, {
      "left" : "StdSerializer",
      "right" : "StdSerializer",
      "info" : "SimpleName[1699-1712]:SimpleName[1699-1712]"
    }, {
      "left" : "Class<T> t",
      "right" : "Class<T> t",
      "info" : "SingleVariableDeclaration[1713-1723]:SingleVariableDeclaration[1713-1723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1725-1758]:Block[1725-1758]"
    }, {
      "left" : "_handledType = t;",
      "right" : "_handledType = t;",
      "info" : "ExpressionStatement[1735-1752]:ExpressionStatement[1735-1752]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[1764-1794]:SingleMemberAnnotation[1764-1794]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1799-1808]:Modifier[1799-1808]"
    }, {
      "left" : "StdSerializer",
      "right" : "StdSerializer",
      "info" : "SimpleName[1809-1822]:SimpleName[1809-1822]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[1823-1836]:SingleVariableDeclaration[1823-1836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1838-1899]:Block[1838-1899]"
    }, {
      "left" : "_handledType = (Class<T>) type.getRawClass();",
      "right" : "_handledType = (Class<T>) type.getRawClass();",
      "info" : "ExpressionStatement[1848-1893]:ExpressionStatement[1848-1893]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[2030-2060]:SingleMemberAnnotation[2030-2060]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2065-2074]:Modifier[2065-2074]"
    }, {
      "left" : "StdSerializer",
      "right" : "StdSerializer",
      "info" : "SimpleName[2075-2088]:SimpleName[2075-2088]"
    }, {
      "left" : "Class<?> t",
      "right" : "Class<?> t",
      "info" : "SingleVariableDeclaration[2089-2099]:SingleVariableDeclaration[2089-2099]"
    }, {
      "left" : "boolean dummy",
      "right" : "boolean dummy",
      "info" : "SingleVariableDeclaration[2101-2114]:SingleVariableDeclaration[2101-2114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2116-2160]:Block[2116-2160]"
    }, {
      "left" : "_handledType = (Class<T>) t;",
      "right" : "_handledType = (Class<T>) t;",
      "info" : "ExpressionStatement[2126-2154]:ExpressionStatement[2126-2154]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2330-2339]:MarkerAnnotation[2330-2339]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2344-2350]:Modifier[2344-2350]"
    }, {
      "left" : "Class<T>",
      "right" : "Class<T>",
      "info" : "ParameterizedType[2351-2359]:ParameterizedType[2351-2359]"
    }, {
      "left" : "handledType",
      "right" : "handledType",
      "info" : "SimpleName[2360-2371]:SimpleName[2360-2371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2374-2398]:Block[2374-2398]"
    }, {
      "left" : "return _handledType;",
      "right" : "return _handledType;",
      "info" : "ReturnStatement[2376-2396]:ReturnStatement[2376-2396]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2573-2582]:MarkerAnnotation[2573-2582]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2587-2593]:Modifier[2587-2593]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2594-2602]:Modifier[2594-2602]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2603-2607]:PrimitiveType[2603-2607]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[2608-2617]:SimpleName[2608-2617]"
    }, {
      "left" : "T value",
      "right" : "T value",
      "info" : "SingleVariableDeclaration[2618-2625]:SingleVariableDeclaration[2618-2625]"
    }, {
      "left" : "JsonGenerator jgen",
      "right" : "JsonGenerator jgen",
      "info" : "SingleVariableDeclaration[2627-2645]:SingleVariableDeclaration[2627-2645]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[2647-2674]:SingleVariableDeclaration[2647-2674]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2691-2702]:SimpleType[2691-2702]"
    }, {
      "left" : "JsonGenerationException",
      "right" : "JsonGenerationException",
      "info" : "SimpleType[2704-2727]:SimpleType[2704-2727]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3057-3066]:MarkerAnnotation[3057-3066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3071-3077]:Modifier[3071-3077]"
    }, {
      "left" : "JsonNode",
      "right" : "JsonNode",
      "info" : "SimpleType[3078-3086]:SimpleType[3078-3086]"
    }, {
      "left" : "getSchema",
      "right" : "getSchema",
      "info" : "SimpleName[3087-3096]:SimpleName[3087-3096]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[3097-3124]:SingleVariableDeclaration[3097-3124]"
    }, {
      "left" : "Type typeHint",
      "right" : "Type typeHint",
      "info" : "SingleVariableDeclaration[3126-3139]:SingleVariableDeclaration[3126-3139]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[3156-3176]:SimpleType[3156-3176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3181-3231]:Block[3181-3231]"
    }, {
      "left" : "return createSchemaNode(\"string\");",
      "right" : "return createSchemaNode(\"string\");",
      "info" : "ReturnStatement[3191-3225]:ReturnStatement[3191-3225]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3367-3376]:MarkerAnnotation[3367-3376]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3381-3387]:Modifier[3381-3387]"
    }, {
      "left" : "JsonNode",
      "right" : "JsonNode",
      "info" : "SimpleType[3388-3396]:SimpleType[3388-3396]"
    }, {
      "left" : "getSchema",
      "right" : "getSchema",
      "info" : "SimpleName[3397-3406]:SimpleName[3397-3406]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[3407-3434]:SingleVariableDeclaration[3407-3434]"
    }, {
      "left" : "Type typeHint",
      "right" : "Type typeHint",
      "info" : "SingleVariableDeclaration[3436-3449]:SingleVariableDeclaration[3436-3449]"
    }, {
      "left" : "boolean isOptional",
      "right" : "boolean isOptional",
      "info" : "SingleVariableDeclaration[3451-3469]:SingleVariableDeclaration[3451-3469]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[3486-3506]:SimpleType[3486-3506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3511-3684]:Block[3511-3684]"
    }, {
      "left" : "ObjectNode schema = (ObjectNode) getSchema(provider, typeHint);",
      "right" : "ObjectNode schema = (ObjectNode) getSchema(provider, typeHint);",
      "info" : "VariableDeclarationStatement[3518-3581]:VariableDeclarationStatement[3518-3581]"
    }, {
      "left" : "if (!isOptional)",
      "right" : "if (!isOptional)",
      "info" : "IfStatement[3587-3655]:IfStatement[3587-3655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3604-3655]:Block[3604-3655]"
    }, {
      "left" : "schema.put(\"required\", !isOptional);",
      "right" : "schema.put(\"required\", !isOptional);",
      "info" : "ExpressionStatement[3612-3648]:ExpressionStatement[3612-3648]"
    }, {
      "left" : "return schema;",
      "right" : "return schema;",
      "info" : "ReturnStatement[3664-3678]:ReturnStatement[3664-3678]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3694-3703]:Modifier[3694-3703]"
    }, {
      "left" : "ObjectNode",
      "right" : "ObjectNode",
      "info" : "SimpleType[3704-3714]:SimpleType[3704-3714]"
    }, {
      "left" : "createObjectNode",
      "right" : "createObjectNode",
      "info" : "SimpleName[3715-3731]:SimpleName[3715-3731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3734-3795]:Block[3734-3795]"
    }, {
      "left" : "return JsonNodeFactory.instance.objectNode();",
      "right" : "return JsonNodeFactory.instance.objectNode();",
      "info" : "ReturnStatement[3744-3789]:ReturnStatement[3744-3789]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3805-3814]:Modifier[3805-3814]"
    }, {
      "left" : "ObjectNode",
      "right" : "ObjectNode",
      "info" : "SimpleType[3815-3825]:SimpleType[3815-3825]"
    }, {
      "left" : "createSchemaNode",
      "right" : "createSchemaNode",
      "info" : "SimpleName[3826-3842]:SimpleName[3826-3842]"
    }, {
      "left" : "String type",
      "right" : "String type",
      "info" : "SingleVariableDeclaration[3843-3854]:SingleVariableDeclaration[3843-3854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3860-3972]:Block[3860-3972]"
    }, {
      "left" : "ObjectNode schema = createObjectNode();",
      "right" : "ObjectNode schema = createObjectNode();",
      "info" : "VariableDeclarationStatement[3870-3909]:VariableDeclarationStatement[3870-3909]"
    }, {
      "left" : "schema.put(\"type\", type);",
      "right" : "schema.put(\"type\", type);",
      "info" : "ExpressionStatement[3918-3943]:ExpressionStatement[3918-3943]"
    }, {
      "left" : "return schema;",
      "right" : "return schema;",
      "info" : "ReturnStatement[3952-3966]:ReturnStatement[3952-3966]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3982-3991]:Modifier[3982-3991]"
    }, {
      "left" : "ObjectNode",
      "right" : "ObjectNode",
      "info" : "SimpleType[3992-4002]:SimpleType[3992-4002]"
    }, {
      "left" : "createSchemaNode",
      "right" : "createSchemaNode",
      "info" : "SimpleName[4003-4019]:SimpleName[4003-4019]"
    }, {
      "left" : "String type",
      "right" : "String type",
      "info" : "SingleVariableDeclaration[4020-4031]:SingleVariableDeclaration[4020-4031]"
    }, {
      "left" : "boolean isOptional",
      "right" : "boolean isOptional",
      "info" : "SingleVariableDeclaration[4033-4051]:SingleVariableDeclaration[4033-4051]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4297]:Block[4057-4297]"
    }, {
      "left" : "ObjectNode schema = createSchemaNode(type);",
      "right" : "ObjectNode schema = createSchemaNode(type);",
      "info" : "VariableDeclarationStatement[4067-4110]:VariableDeclarationStatement[4067-4110]"
    }, {
      "left" : "if (!isOptional)",
      "right" : "if (!isOptional)",
      "info" : "IfStatement[4191-4268]:IfStatement[4191-4268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4208-4268]:Block[4208-4268]"
    }, {
      "left" : "schema.put(\"required\", !isOptional);",
      "right" : "schema.put(\"required\", !isOptional);",
      "info" : "ExpressionStatement[4222-4258]:ExpressionStatement[4222-4258]"
    }, {
      "left" : "return schema;",
      "right" : "return schema;",
      "info" : "ReturnStatement[4277-4291]:ReturnStatement[4277-4291]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4439-4448]:MarkerAnnotation[4439-4448]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4453-4459]:Modifier[4453-4459]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4460-4464]:PrimitiveType[4460-4464]"
    }, {
      "left" : "acceptJsonFormatVisitor",
      "right" : "acceptJsonFormatVisitor",
      "info" : "SimpleName[4465-4488]:SimpleName[4465-4488]"
    }, {
      "left" : "JsonFormatVisitorWrapper visitor",
      "right" : "JsonFormatVisitorWrapper visitor",
      "info" : "SingleVariableDeclaration[4489-4521]:SingleVariableDeclaration[4489-4521]"
    }, {
      "left" : "JavaType typeHint",
      "right" : "JavaType typeHint",
      "info" : "SingleVariableDeclaration[4523-4540]:SingleVariableDeclaration[4523-4540]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[4557-4577]:SimpleType[4557-4577]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4582-4632]:Block[4582-4632]"
    }, {
      "left" : "visitor.expectAnyFormat(typeHint);",
      "right" : "visitor.expectAnyFormat(typeHint);",
      "info" : "ExpressionStatement[4592-4626]:ExpressionStatement[4592-4626]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5372-5378]:Modifier[5372-5378]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5379-5383]:PrimitiveType[5379-5383]"
    }, {
      "left" : "wrapAndThrow",
      "right" : "wrapAndThrow",
      "info" : "SimpleName[5384-5396]:SimpleName[5384-5396]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[5397-5424]:SingleVariableDeclaration[5397-5424]"
    }, {
      "left" : "Throwable t",
      "right" : "Throwable t",
      "info" : "SingleVariableDeclaration[5438-5449]:SingleVariableDeclaration[5438-5449]"
    }, {
      "left" : "Object bean",
      "right" : "Object bean",
      "info" : "SingleVariableDeclaration[5451-5462]:SingleVariableDeclaration[5451-5462]"
    }, {
      "left" : "String fieldName",
      "right" : "String fieldName",
      "info" : "SingleVariableDeclaration[5464-5480]:SingleVariableDeclaration[5464-5480]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[5497-5508]:SimpleType[5497-5508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5513-6662]:Block[5513-6662]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[5738-5850]:WhileStatement[5738-5850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5809-5850]:Block[5809-5850]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[5823-5840]:ExpressionStatement[5823-5840]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[5921-5985]:IfStatement[5921-5985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5945-5985]:Block[5945-5985]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[5959-5975]:ThrowStatement[5959-5975]"
    }, {
      "left" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "right" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "info" : "VariableDeclarationStatement[6062-6156]:VariableDeclarationStatement[6062-6156]"
    }, {
      "left" : "if (t instanceof IOException)",
      "right" : "if (t instanceof IOException)",
      "info" : "IfStatement[6165-6529]:IfStatement[6165-6529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6195-6324]:Block[6195-6324]"
    }, {
      "left" : "if (!wrap || !(t instanceof JsonMappingException))",
      "right" : "if (!wrap || !(t instanceof JsonMappingException))",
      "info" : "IfStatement[6209-6314]:IfStatement[6209-6314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6260-6314]:Block[6260-6314]"
    }, {
      "left" : "throw (IOException) t;",
      "right" : "throw (IOException) t;",
      "info" : "ThrowStatement[6278-6300]:ThrowStatement[6278-6300]"
    }, {
      "left" : "if (!wrap)",
      "right" : "if (!wrap)",
      "info" : "IfStatement[6330-6529]:IfStatement[6330-6529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6341-6529]:Block[6341-6529]"
    }, {
      "left" : "if (t instanceof RuntimeException)",
      "right" : "if (t instanceof RuntimeException)",
      "info" : "IfStatement[6425-6519]:IfStatement[6425-6519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6460-6519]:Block[6460-6519]"
    }, {
      "left" : "throw (RuntimeException) t;",
      "right" : "throw (RuntimeException) t;",
      "info" : "ThrowStatement[6478-6505]:ThrowStatement[6478-6505]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, bean, fieldName);",
      "right" : "throw JsonMappingException.wrapWithPath(t, bean, fieldName);",
      "info" : "ThrowStatement[6596-6656]:ThrowStatement[6596-6656]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6668-6674]:Modifier[6668-6674]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6675-6679]:PrimitiveType[6675-6679]"
    }, {
      "left" : "wrapAndThrow",
      "right" : "wrapAndThrow",
      "info" : "SimpleName[6680-6692]:SimpleName[6680-6692]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[6693-6720]:SingleVariableDeclaration[6693-6720]"
    }, {
      "left" : "Throwable t",
      "right" : "Throwable t",
      "info" : "SingleVariableDeclaration[6734-6745]:SingleVariableDeclaration[6734-6745]"
    }, {
      "left" : "Object bean",
      "right" : "Object bean",
      "info" : "SingleVariableDeclaration[6747-6758]:SingleVariableDeclaration[6747-6758]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[6760-6769]:SingleVariableDeclaration[6760-6769]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[6786-6797]:SimpleType[6786-6797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6802-7711]:Block[6802-7711]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[6812-6924]:WhileStatement[6812-6924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6883-6924]:Block[6883-6924]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[6897-6914]:ExpressionStatement[6897-6914]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[6974-7038]:IfStatement[6974-7038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6998-7038]:Block[6998-7038]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[7012-7028]:ThrowStatement[7012-7028]"
    }, {
      "left" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "right" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "info" : "VariableDeclarationStatement[7115-7209]:VariableDeclarationStatement[7115-7209]"
    }, {
      "left" : "if (t instanceof IOException)",
      "right" : "if (t instanceof IOException)",
      "info" : "IfStatement[7218-7582]:IfStatement[7218-7582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7248-7377]:Block[7248-7377]"
    }, {
      "left" : "if (!wrap || !(t instanceof JsonMappingException))",
      "right" : "if (!wrap || !(t instanceof JsonMappingException))",
      "info" : "IfStatement[7262-7367]:IfStatement[7262-7367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7313-7367]:Block[7313-7367]"
    }, {
      "left" : "throw (IOException) t;",
      "right" : "throw (IOException) t;",
      "info" : "ThrowStatement[7331-7353]:ThrowStatement[7331-7353]"
    }, {
      "left" : "if (!wrap)",
      "right" : "if (!wrap)",
      "info" : "IfStatement[7383-7582]:IfStatement[7383-7582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7394-7582]:Block[7394-7582]"
    }, {
      "left" : "if (t instanceof RuntimeException)",
      "right" : "if (t instanceof RuntimeException)",
      "info" : "IfStatement[7478-7572]:IfStatement[7478-7572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7513-7572]:Block[7513-7572]"
    }, {
      "left" : "throw (RuntimeException) t;",
      "right" : "throw (RuntimeException) t;",
      "info" : "ThrowStatement[7531-7558]:ThrowStatement[7531-7558]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, bean, index);",
      "right" : "throw JsonMappingException.wrapWithPath(t, bean, index);",
      "info" : "ThrowStatement[7649-7705]:ThrowStatement[7649-7705]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[8200-8209]:Modifier[8200-8209]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8210-8217]:PrimitiveType[8210-8217]"
    }, {
      "left" : "isDefaultSerializer",
      "right" : "isDefaultSerializer",
      "info" : "SimpleName[8218-8237]:SimpleName[8218-8237]"
    }, {
      "left" : "JsonSerializer<?> serializer",
      "right" : "JsonSerializer<?> serializer",
      "info" : "SingleVariableDeclaration[8238-8266]:SingleVariableDeclaration[8238-8266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8268-8330]:Block[8268-8330]"
    }, {
      "left" : "return ClassUtil.isJacksonStdImpl(serializer);",
      "right" : "return ClassUtil.isJacksonStdImpl(serializer);",
      "info" : "ReturnStatement[8278-8324]:ReturnStatement[8278-8324]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10237-10246]:Modifier[10280-10289]"
    }, {
      "left" : "PropertyFilter",
      "right" : "PropertyFilter",
      "info" : "SimpleType[10247-10261]:SimpleType[10290-10304]"
    }, {
      "left" : "findPropertyFilter",
      "right" : "findPropertyFilter",
      "info" : "SimpleName[10262-10280]:SimpleName[10305-10323]"
    }, {
      "left" : "SerializerProvider provider",
      "right" : "SerializerProvider provider",
      "info" : "SingleVariableDeclaration[10281-10308]:SingleVariableDeclaration[10324-10351]"
    }, {
      "left" : "Object filterId",
      "right" : "Object filterId",
      "info" : "SingleVariableDeclaration[10322-10337]:SingleVariableDeclaration[10365-10380]"
    }, {
      "left" : "Object valueToFilter",
      "right" : "Object valueToFilter",
      "info" : "SingleVariableDeclaration[10339-10359]:SingleVariableDeclaration[10382-10402]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[10376-10396]:SimpleType[10419-10439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10401-10931]:Block[10444-10974]"
    }, {
      "left" : "FilterProvider filters = provider.getFilterProvider();",
      "right" : "FilterProvider filters = provider.getFilterProvider();",
      "info" : "VariableDeclarationStatement[10411-10465]:VariableDeclarationStatement[10454-10508]"
    }, {
      "left" : "if (filters == null)",
      "right" : "if (filters == null)",
      "info" : "IfStatement[10552-10715]:IfStatement[10595-10758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10573-10715]:Block[10616-10758]"
    }, {
      "left" : "throw new JsonMappingException(\"Can not resolve PropertyFilter with id '\"+filterId+\"'; no FilterProvider configured\");",
      "right" : "throw new JsonMappingException(\"Can not resolve PropertyFilter with id '\"+filterId+\"'; no FilterProvider configured\");",
      "info" : "ThrowStatement[10587-10705]:ThrowStatement[10630-10748]"
    }, {
      "left" : "PropertyFilter filter = filters.findPropertyFilter(filterId, valueToFilter);",
      "right" : "PropertyFilter filter = filters.findPropertyFilter(filterId, valueToFilter);",
      "info" : "VariableDeclarationStatement[10724-10800]:VariableDeclarationStatement[10767-10843]"
    }, {
      "left" : "return filter;",
      "right" : "return filter;",
      "info" : "ReturnStatement[10911-10925]:ReturnStatement[10954-10968]"
    } ]
  },
  "interFileMappings" : { }
}