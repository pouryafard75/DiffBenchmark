{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected static final Set<String> HOP_HEADERS;",
      "right" : "protected static final Set<String> HOP_HEADERS;",
      "info" : "FieldDeclaration[3608-3655]:FieldDeclaration[3608-3655]"
    }, {
      "left" : "private final Set<String> _whiteList = new HashSet<>();",
      "right" : "private final Set<String> _whiteList = new HashSet<>();",
      "info" : "FieldDeclaration[4155-4210]:FieldDeclaration[4155-4210]"
    }, {
      "left" : "private final Set<String> _blackList = new HashSet<>();",
      "right" : "private final Set<String> _blackList = new HashSet<>();",
      "info" : "FieldDeclaration[4215-4270]:FieldDeclaration[4215-4270]"
    }, {
      "left" : "protected Logger _log;",
      "right" : "protected Logger _log;",
      "info" : "FieldDeclaration[4275-4297]:FieldDeclaration[4275-4297]"
    }, {
      "left" : "private boolean _preserveHost;",
      "right" : "private boolean _preserveHost;",
      "info" : "FieldDeclaration[4302-4332]:FieldDeclaration[4302-4332]"
    }, {
      "left" : "private String _hostHeader;",
      "right" : "private String _hostHeader;",
      "info" : "FieldDeclaration[4337-4364]:FieldDeclaration[4337-4364]"
    }, {
      "left" : "private String _viaHost;",
      "right" : "private String _viaHost;",
      "info" : "FieldDeclaration[4369-4393]:FieldDeclaration[4369-4393]"
    }, {
      "left" : "private HttpClient _client;",
      "right" : "private HttpClient _client;",
      "info" : "FieldDeclaration[4398-4425]:FieldDeclaration[4398-4425]"
    }, {
      "left" : "private long _timeout;",
      "right" : "private long _timeout;",
      "info" : "FieldDeclaration[4430-4452]:FieldDeclaration[4430-4452]"
    }, {
      "left" : "public void init() throws ServletException",
      "right" : "public void init() throws ServletException",
      "info" : "MethodDeclaration[4458-5579]:MethodDeclaration[4458-5579]"
    }, {
      "left" : "public void destroy()",
      "right" : "public void destroy()",
      "info" : "MethodDeclaration[5585-5810]:MethodDeclaration[5585-5810]"
    }, {
      "left" : "public String getHostHeader()",
      "right" : "public String getHostHeader()",
      "info" : "MethodDeclaration[5816-5885]:MethodDeclaration[5816-5885]"
    }, {
      "left" : "public String getViaHost()",
      "right" : "public String getViaHost()",
      "info" : "MethodDeclaration[5891-5954]:MethodDeclaration[5891-5954]"
    }, {
      "left" : "private static String viaHost()",
      "right" : "private static String viaHost()",
      "info" : "MethodDeclaration[5960-6187]:MethodDeclaration[5960-6187]"
    }, {
      "left" : "public long getTimeout()",
      "right" : "public long getTimeout()",
      "info" : "MethodDeclaration[6193-6254]:MethodDeclaration[6193-6254]"
    }, {
      "left" : "public void setTimeout(long timeout)",
      "right" : "public void setTimeout(long timeout)",
      "info" : "MethodDeclaration[6260-6341]:MethodDeclaration[6260-6341]"
    }, {
      "left" : "public Set<String> getWhiteListHosts()",
      "right" : "public Set<String> getWhiteListHosts()",
      "info" : "MethodDeclaration[6347-6424]:MethodDeclaration[6347-6424]"
    }, {
      "left" : "public Set<String> getBlackListHosts()",
      "right" : "public Set<String> getBlackListHosts()",
      "info" : "MethodDeclaration[6430-6507]:MethodDeclaration[6430-6507]"
    }, {
      "left" : "protected Logger createLogger()",
      "right" : "protected Logger createLogger()",
      "info" : "MethodDeclaration[6513-7010]:MethodDeclaration[6513-7010]"
    }, {
      "left" : "protected HttpClient createHttpClient() throws ServletException",
      "right" : "protected HttpClient createHttpClient() throws ServletException",
      "info" : "MethodDeclaration[7016-11241]:MethodDeclaration[7016-11241]"
    }, {
      "left" : "protected HttpClient newHttpClient()",
      "right" : "protected HttpClient newHttpClient()",
      "info" : "MethodDeclaration[11247-11385]:MethodDeclaration[11247-11385]"
    }, {
      "left" : "protected HttpClient getHttpClient()",
      "right" : "protected HttpClient getHttpClient()",
      "info" : "MethodDeclaration[11391-11463]:MethodDeclaration[11391-11463]"
    }, {
      "left" : "private Set<String> parseList(String list)",
      "right" : "private Set<String> parseList(String list)",
      "info" : "MethodDeclaration[11469-11812]:MethodDeclaration[11469-11812]"
    }, {
      "left" : "public boolean validateDestination(String host, int port)",
      "right" : "public boolean validateDestination(String host, int port)",
      "info" : "MethodDeclaration[11818-12764]:MethodDeclaration[11818-12764]"
    }, {
      "left" : "protected String rewriteTarget(HttpServletRequest clientRequest)",
      "right" : "protected String rewriteTarget(HttpServletRequest clientRequest)",
      "info" : "MethodDeclaration[12770-13191]:MethodDeclaration[12770-13191]"
    }, {
      "left" : "protected void onProxyRewriteFailed(HttpServletRequest clientRequest, HttpServletResponse clientResponse)",
      "right" : "protected void onProxyRewriteFailed(HttpServletRequest clientRequest, HttpServletResponse clientResponse)",
      "info" : "MethodDeclaration[13197-13809]:MethodDeclaration[13197-13809]"
    }, {
      "left" : "protected boolean hasContent(HttpServletRequest clientRequest)",
      "right" : "protected boolean hasContent(HttpServletRequest clientRequest)",
      "info" : "MethodDeclaration[13815-14092]:MethodDeclaration[13815-14092]"
    }, {
      "left" : "protected void copyRequestHeaders(HttpServletRequest clientRequest, Request proxyRequest)",
      "right" : "protected void copyRequestHeaders(HttpServletRequest clientRequest, Request proxyRequest)",
      "info" : "MethodDeclaration[14098-15489]:MethodDeclaration[14098-15489]"
    }, {
      "left" : "protected Set<String> findConnectionHeaders(HttpServletRequest clientRequest)",
      "right" : "protected Set<String> findConnectionHeaders(HttpServletRequest clientRequest)",
      "info" : "MethodDeclaration[15495-16327]:MethodDeclaration[15495-16327]"
    }, {
      "left" : "protected void addProxyHeaders(HttpServletRequest clientRequest, Request proxyRequest)",
      "right" : "protected void addProxyHeaders(HttpServletRequest clientRequest, Request proxyRequest)",
      "info" : "MethodDeclaration[16333-16526]:MethodDeclaration[16333-16526]"
    }, {
      "left" : "protected void addViaHeader(Request proxyRequest)",
      "right" : "protected void addViaHeader(Request proxyRequest)",
      "info" : "MethodDeclaration[16532-16666]:MethodDeclaration[16532-16666]"
    }, {
      "left" : "protected void addXForwardedHeaders(HttpServletRequest clientRequest, Request proxyRequest)",
      "right" : "protected void addXForwardedHeaders(HttpServletRequest clientRequest, Request proxyRequest)",
      "info" : "MethodDeclaration[16672-17150]:MethodDeclaration[16672-17150]"
    }, {
      "left" : "protected void sendProxyRequest(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Request proxyRequest)",
      "right" : "protected void sendProxyRequest(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Request proxyRequest)",
      "info" : "MethodDeclaration[17156-18951]:MethodDeclaration[17156-18951]"
    }, {
      "left" : "protected abstract Response.CompleteListener newProxyResponseListener(HttpServletRequest clientRequest, HttpServletResponse proxyResponse);",
      "right" : "protected abstract Response.CompleteListener newProxyResponseListener(HttpServletRequest clientRequest, HttpServletResponse proxyResponse);",
      "info" : "MethodDeclaration[18957-19096]:MethodDeclaration[18957-19096]"
    }, {
      "left" : "protected void onClientRequestFailure(HttpServletRequest clientRequest, Request proxyRequest, HttpServletResponse proxyResponse, Throwable failure)",
      "right" : "protected void onClientRequestFailure(HttpServletRequest clientRequest, Request proxyRequest, HttpServletResponse proxyResponse, Throwable failure)",
      "info" : "MethodDeclaration[19102-19633]:MethodDeclaration[19102-19633]"
    }, {
      "left" : "protected void onServerResponseHeaders(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Response serverResponse)",
      "right" : "protected void onServerResponseHeaders(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Response serverResponse)",
      "info" : "MethodDeclaration[19639-21708]:MethodDeclaration[19639-21708]"
    }, {
      "left" : "protected String filterServerResponseHeader(HttpServletRequest clientRequest, Response serverResponse, String headerName, String headerValue)",
      "right" : "protected String filterServerResponseHeader(HttpServletRequest clientRequest, Response serverResponse, String headerName, String headerValue)",
      "info" : "MethodDeclaration[21714-21895]:MethodDeclaration[21714-21895]"
    }, {
      "left" : "protected void onProxyResponseSuccess(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Response serverResponse)",
      "right" : "protected void onProxyResponseSuccess(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Response serverResponse)",
      "info" : "MethodDeclaration[21901-22261]:MethodDeclaration[21901-22261]"
    }, {
      "left" : "protected void onProxyResponseFailure(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Response serverResponse, Throwable failure)",
      "right" : "protected void onProxyResponseFailure(HttpServletRequest clientRequest, HttpServletResponse proxyResponse, Response serverResponse, Throwable failure)",
      "info" : "MethodDeclaration[22267-23612]:MethodDeclaration[22267-23612]"
    }, {
      "left" : "protected int getRequestId(HttpServletRequest clientRequest)",
      "right" : "protected int getRequestId(HttpServletRequest clientRequest)",
      "info" : "MethodDeclaration[23618-23745]:MethodDeclaration[23618-23745]"
    }, {
      "left" : "private final ProxyServlet proxyServlet;",
      "right" : "private final ProxyServlet proxyServlet;",
      "info" : "FieldDeclaration[24434-24474]:FieldDeclaration[24434-24474]"
    }, {
      "left" : "private String _proxyTo;",
      "right" : "private String _proxyTo;",
      "info" : "FieldDeclaration[24483-24507]:FieldDeclaration[24483-24507]"
    }, {
      "left" : "private String _prefix;",
      "right" : "private String _prefix;",
      "info" : "FieldDeclaration[24516-24539]:FieldDeclaration[24516-24539]"
    }, {
      "left" : "protected TransparentDelegate(ProxyServlet proxyServlet)",
      "right" : "protected TransparentDelegate(ProxyServlet proxyServlet)",
      "info" : "MethodDeclaration[24549-24671]:MethodDeclaration[24549-24671]"
    }, {
      "left" : "protected void init(ServletConfig config) throws ServletException",
      "right" : "protected void init(ServletConfig config) throws ServletException",
      "info" : "MethodDeclaration[24681-25631]:MethodDeclaration[24681-25631]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4519-5579]:Block[4519-5579]"
    }, {
      "left" : "_log = createLogger();",
      "right" : "_log = createLogger();",
      "info" : "ExpressionStatement[4529-4551]:ExpressionStatement[4529-4551]"
    }, {
      "left" : "ServletConfig config = getServletConfig();",
      "right" : "ServletConfig config = getServletConfig();",
      "info" : "VariableDeclarationStatement[4561-4603]:VariableDeclarationStatement[4561-4603]"
    }, {
      "left" : "_preserveHost = Boolean.parseBoolean(config.getInitParameter(\"preserveHost\"));",
      "right" : "_preserveHost = Boolean.parseBoolean(config.getInitParameter(\"preserveHost\"));",
      "info" : "ExpressionStatement[4613-4691]:ExpressionStatement[4613-4691]"
    }, {
      "left" : "_hostHeader = config.getInitParameter(\"hostHeader\");",
      "right" : "_hostHeader = config.getInitParameter(\"hostHeader\");",
      "info" : "ExpressionStatement[4701-4753]:ExpressionStatement[4701-4753]"
    }, {
      "left" : "_viaHost = config.getInitParameter(\"viaHost\");",
      "right" : "_viaHost = config.getInitParameter(\"viaHost\");",
      "info" : "ExpressionStatement[4763-4809]:ExpressionStatement[4763-4809]"
    }, {
      "left" : "if (_viaHost == null)",
      "right" : "if (_viaHost == null)",
      "info" : "IfStatement[4818-4873]:IfStatement[4818-4873]"
    }, {
      "left" : "_viaHost = viaHost();",
      "right" : "_viaHost = viaHost();",
      "info" : "ExpressionStatement[4852-4873]:ExpressionStatement[4852-4873]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4883-5573]:TryStatement[4883-5573]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4895-5482]:Block[4895-5482]"
    }, {
      "left" : "_client = createHttpClient();",
      "right" : "_client = createHttpClient();",
      "info" : "ExpressionStatement[4909-4938]:ExpressionStatement[4909-4938]"
    }, {
      "left" : "getServletContext().setAttribute(config.getServletName() + \".HttpClient\", _client);",
      "right" : "getServletContext().setAttribute(config.getServletName() + \".HttpClient\", _client);",
      "info" : "ExpressionStatement[5047-5130]:ExpressionStatement[5047-5130]"
    }, {
      "left" : "String whiteList = config.getInitParameter(\"whiteList\");",
      "right" : "String whiteList = config.getInitParameter(\"whiteList\");",
      "info" : "VariableDeclarationStatement[5144-5200]:VariableDeclarationStatement[5144-5200]"
    }, {
      "left" : "if (whiteList != null)",
      "right" : "if (whiteList != null)",
      "info" : "IfStatement[5213-5301]:IfStatement[5213-5301]"
    }, {
      "left" : "getWhiteListHosts().addAll(parseList(whiteList));",
      "right" : "getWhiteListHosts().addAll(parseList(whiteList));",
      "info" : "ExpressionStatement[5252-5301]:ExpressionStatement[5252-5301]"
    }, {
      "left" : "String blackList = config.getInitParameter(\"blackList\");",
      "right" : "String blackList = config.getInitParameter(\"blackList\");",
      "info" : "VariableDeclarationStatement[5315-5371]:VariableDeclarationStatement[5315-5371]"
    }, {
      "left" : "if (blackList != null)",
      "right" : "if (blackList != null)",
      "info" : "IfStatement[5384-5472]:IfStatement[5384-5472]"
    }, {
      "left" : "getBlackListHosts().addAll(parseList(blackList));",
      "right" : "getBlackListHosts().addAll(parseList(blackList));",
      "info" : "ExpressionStatement[5423-5472]:ExpressionStatement[5423-5472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5519-5573]:Block[5519-5573]"
    }, {
      "left" : "throw new ServletException(e);",
      "right" : "throw new ServletException(e);",
      "info" : "ThrowStatement[5533-5563]:ThrowStatement[5533-5563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5625-5810]:Block[5625-5810]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5635-5804]:TryStatement[5635-5804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5647-5686]:Block[5647-5686]"
    }, {
      "left" : "_client.stop();",
      "right" : "_client.stop();",
      "info" : "ExpressionStatement[5661-5676]:ExpressionStatement[5661-5676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5723-5804]:Block[5723-5804]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[5737-5794]:IfStatement[5737-5794]"
    }, {
      "left" : "_log.debug(x);",
      "right" : "_log.debug(x);",
      "info" : "ExpressionStatement[5780-5794]:ExpressionStatement[5780-5794]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5850-5885]:Block[5850-5885]"
    }, {
      "left" : "return _hostHeader;",
      "right" : "return _hostHeader;",
      "info" : "ReturnStatement[5860-5879]:ReturnStatement[5860-5879]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5922-5954]:Block[5922-5954]"
    }, {
      "left" : "return _viaHost;",
      "right" : "return _viaHost;",
      "info" : "ReturnStatement[5932-5948]:ReturnStatement[5932-5948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5996-6187]:Block[5996-6187]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6006-6181]:TryStatement[6006-6181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6018-6090]:Block[6018-6090]"
    }, {
      "left" : "return InetAddress.getLocalHost().getHostName();",
      "right" : "return InetAddress.getLocalHost().getHostName();",
      "info" : "ReturnStatement[6032-6080]:ReturnStatement[6032-6080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6138-6181]:Block[6138-6181]"
    }, {
      "left" : "return \"localhost\";",
      "right" : "return \"localhost\";",
      "info" : "ReturnStatement[6152-6171]:ReturnStatement[6152-6171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6222-6254]:Block[6222-6254]"
    }, {
      "left" : "return _timeout;",
      "right" : "return _timeout;",
      "info" : "ReturnStatement[6232-6248]:ReturnStatement[6232-6248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6301-6341]:Block[6301-6341]"
    }, {
      "left" : "this._timeout = timeout;",
      "right" : "this._timeout = timeout;",
      "info" : "ExpressionStatement[6311-6335]:ExpressionStatement[6311-6335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6390-6424]:Block[6390-6424]"
    }, {
      "left" : "return _whiteList;",
      "right" : "return _whiteList;",
      "info" : "ReturnStatement[6400-6418]:ReturnStatement[6400-6418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6473-6507]:Block[6473-6507]"
    }, {
      "left" : "return _blackList;",
      "right" : "return _blackList;",
      "info" : "ReturnStatement[6483-6501]:ReturnStatement[6483-6501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6644-7010]:Block[6644-7010]"
    }, {
      "left" : "String servletName = getServletConfig().getServletName();",
      "right" : "String servletName = getServletConfig().getServletName();",
      "info" : "VariableDeclarationStatement[6654-6711]:VariableDeclarationStatement[6654-6711]"
    }, {
      "left" : "servletName = servletName.replace('-', '.');",
      "right" : "servletName = servletName.replace('-', '.');",
      "info" : "ExpressionStatement[6720-6764]:ExpressionStatement[6720-6764]"
    }, {
      "left" : "if ((getClass().getPackage() != null) && !servletName.startsWith(getClass().getPackage().getName()))",
      "right" : "if ((getClass().getPackage() != null) && !servletName.startsWith(getClass().getPackage().getName()))",
      "info" : "IfStatement[6773-6961]:IfStatement[6773-6961]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6882-6961]:Block[6882-6961]"
    }, {
      "left" : "servletName = getClass().getName() + \".\" + servletName;",
      "right" : "servletName = getClass().getName() + \".\" + servletName;",
      "info" : "ExpressionStatement[6896-6951]:ExpressionStatement[6896-6951]"
    }, {
      "left" : "return Log.getLogger(servletName);",
      "right" : "return Log.getLogger(servletName);",
      "info" : "ReturnStatement[6970-7004]:ReturnStatement[6970-7004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8845-11241]:Block[8845-11241]"
    }, {
      "left" : "ServletConfig config = getServletConfig();",
      "right" : "ServletConfig config = getServletConfig();",
      "info" : "VariableDeclarationStatement[8855-8897]:VariableDeclarationStatement[8855-8897]"
    }, {
      "left" : "HttpClient client = newHttpClient();",
      "right" : "HttpClient client = newHttpClient();",
      "info" : "VariableDeclarationStatement[8907-8943]:VariableDeclarationStatement[8907-8943]"
    }, {
      "left" : "client.setFollowRedirects(false);",
      "right" : "client.setFollowRedirects(false);",
      "info" : "ExpressionStatement[9011-9044]:ExpressionStatement[9011-9044]"
    }, {
      "left" : "client.setCookieStore(new HttpCookieStore.Empty());",
      "right" : "client.setCookieStore(new HttpCookieStore.Empty());",
      "info" : "ExpressionStatement[9138-9189]:ExpressionStatement[9138-9189]"
    }, {
      "left" : "Executor executor;",
      "right" : "Executor executor;",
      "info" : "VariableDeclarationStatement[9199-9217]:VariableDeclarationStatement[9199-9217]"
    }, {
      "left" : "String value = config.getInitParameter(\"maxThreads\");",
      "right" : "String value = config.getInitParameter(\"maxThreads\");",
      "info" : "VariableDeclarationStatement[9226-9279]:VariableDeclarationStatement[9226-9279]"
    }, {
      "left" : "if (value == null || \"-\".equals(value))",
      "right" : "if (value == null || \"-\".equals(value))",
      "info" : "IfStatement[9288-9940]:IfStatement[9288-9940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9336-9564]:Block[9336-9564]"
    }, {
      "left" : "executor = (Executor)getServletContext().getAttribute(\"org.eclipse.jetty.server.Executor\");",
      "right" : "executor = (Executor)getServletContext().getAttribute(\"org.eclipse.jetty.server.Executor\");",
      "info" : "ExpressionStatement[9350-9441]:ExpressionStatement[9350-9441]"
    }, {
      "left" : "if (executor==null)",
      "right" : "if (executor==null)",
      "info" : "IfStatement[9454-9554]:IfStatement[9454-9554]"
    }, {
      "left" : "throw new IllegalStateException(\"No server executor for proxy\");",
      "right" : "throw new IllegalStateException(\"No server executor for proxy\");",
      "info" : "ThrowStatement[9490-9554]:ThrowStatement[9490-9554]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9586-9940]:Block[9586-9940]"
    }, {
      "left" : "QueuedThreadPool qtp= new QueuedThreadPool(Integer.parseInt(value));",
      "right" : "QueuedThreadPool qtp= new QueuedThreadPool(Integer.parseInt(value));",
      "info" : "VariableDeclarationStatement[9600-9668]:VariableDeclarationStatement[9600-9668]"
    }, {
      "left" : "String servletName = config.getServletName();",
      "right" : "String servletName = config.getServletName();",
      "info" : "VariableDeclarationStatement[9681-9726]:VariableDeclarationStatement[9681-9726]"
    }, {
      "left" : "int dot = servletName.lastIndexOf('.');",
      "right" : "int dot = servletName.lastIndexOf('.');",
      "info" : "VariableDeclarationStatement[9739-9778]:VariableDeclarationStatement[9739-9778]"
    }, {
      "left" : "if (dot >= 0)",
      "right" : "if (dot >= 0)",
      "info" : "IfStatement[9791-9866]:IfStatement[9791-9866]"
    }, {
      "left" : "servletName = servletName.substring(dot + 1);",
      "right" : "servletName = servletName.substring(dot + 1);",
      "info" : "ExpressionStatement[9821-9866]:ExpressionStatement[9821-9866]"
    }, {
      "left" : "qtp.setName(servletName);",
      "right" : "qtp.setName(servletName);",
      "info" : "ExpressionStatement[9879-9904]:ExpressionStatement[9879-9904]"
    }, {
      "left" : "executor=qtp;",
      "right" : "executor=qtp;",
      "info" : "ExpressionStatement[9917-9930]:ExpressionStatement[9917-9930]"
    }, {
      "left" : "client.setExecutor(executor);",
      "right" : "client.setExecutor(executor);",
      "info" : "ExpressionStatement[9950-9979]:ExpressionStatement[9950-9979]"
    }, {
      "left" : "value = config.getInitParameter(\"maxConnections\");",
      "right" : "value = config.getInitParameter(\"maxConnections\");",
      "info" : "ExpressionStatement[9989-10039]:ExpressionStatement[9989-10039]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[10048-10093]:IfStatement[10048-10093]"
    }, {
      "left" : "value = \"256\";",
      "right" : "value = \"256\";",
      "info" : "ExpressionStatement[10079-10093]:ExpressionStatement[10079-10093]"
    }, {
      "left" : "client.setMaxConnectionsPerDestination(Integer.parseInt(value));",
      "right" : "client.setMaxConnectionsPerDestination(Integer.parseInt(value));",
      "info" : "ExpressionStatement[10102-10166]:ExpressionStatement[10102-10166]"
    }, {
      "left" : "value = config.getInitParameter(\"idleTimeout\");",
      "right" : "value = config.getInitParameter(\"idleTimeout\");",
      "info" : "ExpressionStatement[10176-10223]:ExpressionStatement[10176-10223]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[10232-10279]:IfStatement[10232-10279]"
    }, {
      "left" : "value = \"30000\";",
      "right" : "value = \"30000\";",
      "info" : "ExpressionStatement[10263-10279]:ExpressionStatement[10263-10279]"
    }, {
      "left" : "client.setIdleTimeout(Long.parseLong(value));",
      "right" : "client.setIdleTimeout(Long.parseLong(value));",
      "info" : "ExpressionStatement[10288-10333]:ExpressionStatement[10288-10333]"
    }, {
      "left" : "value = config.getInitParameter(\"timeout\");",
      "right" : "value = config.getInitParameter(\"timeout\");",
      "info" : "ExpressionStatement[10343-10386]:ExpressionStatement[10343-10386]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[10395-10442]:IfStatement[10395-10442]"
    }, {
      "left" : "value = \"60000\";",
      "right" : "value = \"60000\";",
      "info" : "ExpressionStatement[10426-10442]:ExpressionStatement[10426-10442]"
    }, {
      "left" : "_timeout = Long.parseLong(value);",
      "right" : "_timeout = Long.parseLong(value);",
      "info" : "ExpressionStatement[10451-10484]:ExpressionStatement[10451-10484]"
    }, {
      "left" : "value = config.getInitParameter(\"requestBufferSize\");",
      "right" : "value = config.getInitParameter(\"requestBufferSize\");",
      "info" : "ExpressionStatement[10494-10547]:ExpressionStatement[10494-10547]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[10556-10640]:IfStatement[10556-10640]"
    }, {
      "left" : "client.setRequestBufferSize(Integer.parseInt(value));",
      "right" : "client.setRequestBufferSize(Integer.parseInt(value));",
      "info" : "ExpressionStatement[10587-10640]:ExpressionStatement[10587-10640]"
    }, {
      "left" : "value = config.getInitParameter(\"responseBufferSize\");",
      "right" : "value = config.getInitParameter(\"responseBufferSize\");",
      "info" : "ExpressionStatement[10650-10704]:ExpressionStatement[10650-10704]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[10713-10798]:IfStatement[10713-10798]"
    }, {
      "left" : "client.setResponseBufferSize(Integer.parseInt(value));",
      "right" : "client.setResponseBufferSize(Integer.parseInt(value));",
      "info" : "ExpressionStatement[10744-10798]:ExpressionStatement[10744-10798]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10808-11235]:TryStatement[10808-11235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10820-11144]:Block[10820-11144]"
    }, {
      "left" : "client.start();",
      "right" : "client.start();",
      "info" : "ExpressionStatement[10834-10849]:ExpressionStatement[10834-10849]"
    }, {
      "left" : "client.getContentDecoderFactories().clear();",
      "right" : "client.getContentDecoderFactories().clear();",
      "info" : "ExpressionStatement[10943-10987]:ExpressionStatement[10943-10987]"
    }, {
      "left" : "client.getProtocolHandlers().clear();",
      "right" : "client.getProtocolHandlers().clear();",
      "info" : "ExpressionStatement[11069-11106]:ExpressionStatement[11069-11106]"
    }, {
      "left" : "return client;",
      "right" : "return client;",
      "info" : "ReturnStatement[11120-11134]:ReturnStatement[11120-11134]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11181-11235]:Block[11181-11235]"
    }, {
      "left" : "throw new ServletException(x);",
      "right" : "throw new ServletException(x);",
      "info" : "ThrowStatement[11195-11225]:ThrowStatement[11195-11225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11345-11385]:Block[11345-11385]"
    }, {
      "left" : "return new HttpClient();",
      "right" : "return new HttpClient();",
      "info" : "ReturnStatement[11355-11379]:ReturnStatement[11355-11379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11432-11463]:Block[11432-11463]"
    }, {
      "left" : "return _client;",
      "right" : "return _client;",
      "info" : "ReturnStatement[11442-11457]:ReturnStatement[11442-11457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11516-11812]:Block[11516-11812]"
    }, {
      "left" : "Set<String> result = new HashSet<>();",
      "right" : "Set<String> result = new HashSet<>();",
      "info" : "VariableDeclarationStatement[11526-11563]:VariableDeclarationStatement[11526-11563]"
    }, {
      "left" : "String[] hosts = list.split(\",\");",
      "right" : "String[] hosts = list.split(\",\");",
      "info" : "VariableDeclarationStatement[11572-11605]:VariableDeclarationStatement[11572-11605]"
    }, {
      "left" : "for (String host : hosts)",
      "right" : "for (String host : hosts)",
      "info" : "EnhancedForStatement[11614-11783]:EnhancedForStatement[11614-11783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11648-11783]:Block[11648-11783]"
    }, {
      "left" : "host = host.trim();",
      "right" : "host = host.trim();",
      "info" : "ExpressionStatement[11662-11681]:ExpressionStatement[11662-11681]"
    }, {
      "left" : "if (host.length() == 0)",
      "right" : "if (host.length() == 0)",
      "info" : "IfStatement[11694-11743]:IfStatement[11694-11743]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[11734-11743]:ContinueStatement[11734-11743]"
    }, {
      "left" : "result.add(host);",
      "right" : "result.add(host);",
      "info" : "ExpressionStatement[11756-11773]:ExpressionStatement[11756-11773]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11792-11806]:ReturnStatement[11792-11806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12140-12764]:Block[12140-12764]"
    }, {
      "left" : "String hostPort = host + \":\" + port;",
      "right" : "String hostPort = host + \":\" + port;",
      "info" : "VariableDeclarationStatement[12150-12186]:VariableDeclarationStatement[12150-12186]"
    }, {
      "left" : "if (!_whiteList.isEmpty())",
      "right" : "if (!_whiteList.isEmpty())",
      "info" : "IfStatement[12195-12464]:IfStatement[12195-12464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12230-12464]:Block[12230-12464]"
    }, {
      "left" : "if (!_whiteList.contains(hostPort))",
      "right" : "if (!_whiteList.contains(hostPort))",
      "info" : "IfStatement[12244-12454]:IfStatement[12244-12454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12292-12454]:Block[12292-12454]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[12310-12410]:IfStatement[12310-12410]"
    }, {
      "left" : "_log.debug(\"Host {}:{} not whitelisted\", host, port);",
      "right" : "_log.debug(\"Host {}:{} not whitelisted\", host, port);",
      "info" : "ExpressionStatement[12357-12410]:ExpressionStatement[12357-12410]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12427-12440]:ReturnStatement[12427-12440]"
    }, {
      "left" : "if (!_blackList.isEmpty())",
      "right" : "if (!_blackList.isEmpty())",
      "info" : "IfStatement[12473-12737]:IfStatement[12473-12737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12508-12737]:Block[12508-12737]"
    }, {
      "left" : "if (_blackList.contains(hostPort))",
      "right" : "if (_blackList.contains(hostPort))",
      "info" : "IfStatement[12522-12727]:IfStatement[12522-12727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12569-12727]:Block[12569-12727]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[12587-12683]:IfStatement[12587-12683]"
    }, {
      "left" : "_log.debug(\"Host {}:{} blacklisted\", host, port);",
      "right" : "_log.debug(\"Host {}:{} blacklisted\", host, port);",
      "info" : "ExpressionStatement[12634-12683]:ExpressionStatement[12634-12683]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[12700-12713]:ReturnStatement[12700-12713]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[12746-12758]:ReturnStatement[12746-12758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12839-13191]:Block[12839-13191]"
    }, {
      "left" : "if (!validateDestination(clientRequest.getServerName(), clientRequest.getServerPort()))",
      "right" : "if (!validateDestination(clientRequest.getServerName(), clientRequest.getServerPort()))",
      "info" : "IfStatement[12849-12961]:IfStatement[12849-12961]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12949-12961]:ReturnStatement[12949-12961]"
    }, {
      "left" : "StringBuffer target = clientRequest.getRequestURL();",
      "right" : "StringBuffer target = clientRequest.getRequestURL();",
      "info" : "VariableDeclarationStatement[12971-13023]:VariableDeclarationStatement[12971-13023]"
    }, {
      "left" : "String query = clientRequest.getQueryString();",
      "right" : "String query = clientRequest.getQueryString();",
      "info" : "VariableDeclarationStatement[13032-13078]:VariableDeclarationStatement[13032-13078]"
    }, {
      "left" : "if (query != null)",
      "right" : "if (query != null)",
      "info" : "IfStatement[13087-13151]:IfStatement[13087-13151]"
    }, {
      "left" : "target.append(\"?\").append(query);",
      "right" : "target.append(\"?\").append(query);",
      "info" : "ExpressionStatement[13118-13151]:ExpressionStatement[13118-13151]"
    }, {
      "left" : "return target.toString();",
      "right" : "return target.toString();",
      "info" : "ReturnStatement[13160-13185]:ReturnStatement[13160-13185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13734-13809]:Block[13734-13809]"
    }, {
      "left" : "clientResponse.setStatus(HttpServletResponse.SC_FORBIDDEN);",
      "right" : "clientResponse.setStatus(HttpServletResponse.SC_FORBIDDEN);",
      "info" : "ExpressionStatement[13744-13803]:ExpressionStatement[13744-13803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13882-14092]:Block[13882-14092]"
    }, {
      "left" : "return clientRequest.getContentLength() > 0 ||\n                clientRequest.getContentType() != null ||\n                clientRequest.getHeader(HttpHeader.TRANSFER_ENCODING.asString()) != null;",
      "right" : "return clientRequest.getContentLength() > 0 ||\n                clientRequest.getContentType() != null ||\n                clientRequest.getHeader(HttpHeader.TRANSFER_ENCODING.asString()) != null;",
      "info" : "ReturnStatement[13892-14086]:ReturnStatement[13892-14086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14192-15489]:Block[14192-15489]"
    }, {
      "left" : "proxyRequest.getHeaders().clear();",
      "right" : "proxyRequest.getHeaders().clear();",
      "info" : "ExpressionStatement[14307-14341]:ExpressionStatement[14307-14341]"
    }, {
      "left" : "Set<String> headersToRemove = findConnectionHeaders(clientRequest);",
      "right" : "Set<String> headersToRemove = findConnectionHeaders(clientRequest);",
      "info" : "VariableDeclarationStatement[14351-14418]:VariableDeclarationStatement[14351-14418]"
    }, {
      "left" : "for (Enumeration<String> headerNames = clientRequest.getHeaderNames(); headerNames.hasMoreElements())",
      "right" : "for (Enumeration<String> headerNames = clientRequest.getHeaderNames(); headerNames.hasMoreElements())",
      "info" : "ForStatement[14428-15339]:ForStatement[14428-15339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14539-15339]:Block[14539-15339]"
    }, {
      "left" : "String headerName = headerNames.nextElement();",
      "right" : "String headerName = headerNames.nextElement();",
      "info" : "VariableDeclarationStatement[14553-14599]:VariableDeclarationStatement[14553-14599]"
    }, {
      "left" : "String lowerHeaderName = headerName.toLowerCase(Locale.ENGLISH);",
      "right" : "String lowerHeaderName = headerName.toLowerCase(Locale.ENGLISH);",
      "info" : "VariableDeclarationStatement[14612-14676]:VariableDeclarationStatement[14612-14676]"
    }, {
      "left" : "if (HttpHeader.HOST.is(headerName) && !_preserveHost)",
      "right" : "if (HttpHeader.HOST.is(headerName) && !_preserveHost)",
      "info" : "IfStatement[14690-14769]:IfStatement[14690-14769]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[14760-14769]:ContinueStatement[14760-14769]"
    }, {
      "left" : "if (HOP_HEADERS.contains(lowerHeaderName))",
      "right" : "if (HOP_HEADERS.contains(lowerHeaderName))",
      "info" : "IfStatement[14825-14893]:IfStatement[14825-14893]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[14884-14893]:ContinueStatement[14884-14893]"
    }, {
      "left" : "if (headersToRemove != null && headersToRemove.contains(lowerHeaderName))",
      "right" : "if (headersToRemove != null && headersToRemove.contains(lowerHeaderName))",
      "info" : "IfStatement[14906-15005]:IfStatement[14906-15005]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[14996-15005]:ContinueStatement[14996-15005]"
    }, {
      "left" : "for (Enumeration<String> headerValues = clientRequest.getHeaders(headerName); headerValues.hasMoreElements())",
      "right" : "for (Enumeration<String> headerValues = clientRequest.getHeaders(headerName); headerValues.hasMoreElements())",
      "info" : "ForStatement[15019-15329]:ForStatement[15019-15329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15142-15329]:Block[15142-15329]"
    }, {
      "left" : "String headerValue = headerValues.nextElement();",
      "right" : "String headerValue = headerValues.nextElement();",
      "info" : "VariableDeclarationStatement[15160-15208]:VariableDeclarationStatement[15160-15208]"
    }, {
      "left" : "if (headerValue != null)",
      "right" : "if (headerValue != null)",
      "info" : "IfStatement[15225-15315]:IfStatement[15225-15315]"
    }, {
      "left" : "proxyRequest.header(headerName, headerValue);",
      "right" : "proxyRequest.header(headerName, headerValue);",
      "info" : "ExpressionStatement[15270-15315]:ExpressionStatement[15270-15315]"
    }, {
      "left" : "if (_hostHeader != null)",
      "right" : "if (_hostHeader != null)",
      "info" : "IfStatement[15396-15483]:IfStatement[15396-15483]"
    }, {
      "left" : "proxyRequest.header(HttpHeader.HOST, _hostHeader);",
      "right" : "proxyRequest.header(HttpHeader.HOST, _hostHeader);",
      "info" : "ExpressionStatement[15433-15483]:ExpressionStatement[15433-15483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15577-16327]:Block[15577-16327]"
    }, {
      "left" : "Set<String> hopHeaders = null;",
      "right" : "Set<String> hopHeaders = null;",
      "info" : "VariableDeclarationStatement[15717-15747]:VariableDeclarationStatement[15717-15747]"
    }, {
      "left" : "Enumeration<String> connectionHeaders = clientRequest.getHeaders(HttpHeader.CONNECTION.asString());",
      "right" : "Enumeration<String> connectionHeaders = clientRequest.getHeaders(HttpHeader.CONNECTION.asString());",
      "info" : "VariableDeclarationStatement[15756-15855]:VariableDeclarationStatement[15756-15855]"
    }, {
      "left" : "while (connectionHeaders.hasMoreElements())",
      "right" : "while (connectionHeaders.hasMoreElements())",
      "info" : "WhileStatement[15864-16294]:WhileStatement[15864-16294]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15916-16294]:Block[15916-16294]"
    }, {
      "left" : "String value = connectionHeaders.nextElement();",
      "right" : "String value = connectionHeaders.nextElement();",
      "info" : "VariableDeclarationStatement[15930-15977]:VariableDeclarationStatement[15930-15977]"
    }, {
      "left" : "String[] values = value.split(\",\");",
      "right" : "String[] values = value.split(\",\");",
      "info" : "VariableDeclarationStatement[15990-16025]:VariableDeclarationStatement[15990-16025]"
    }, {
      "left" : "for (String name : values)",
      "right" : "for (String name : values)",
      "info" : "EnhancedForStatement[16038-16284]:EnhancedForStatement[16038-16284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16077-16284]:Block[16077-16284]"
    }, {
      "left" : "name = name.trim().toLowerCase(Locale.ENGLISH);",
      "right" : "name = name.trim().toLowerCase(Locale.ENGLISH);",
      "info" : "ExpressionStatement[16095-16142]:ExpressionStatement[16095-16142]"
    }, {
      "left" : "if (hopHeaders == null)",
      "right" : "if (hopHeaders == null)",
      "info" : "IfStatement[16159-16232]:IfStatement[16159-16232]"
    }, {
      "left" : "hopHeaders = new HashSet<>();",
      "right" : "hopHeaders = new HashSet<>();",
      "info" : "ExpressionStatement[16203-16232]:ExpressionStatement[16203-16232]"
    }, {
      "left" : "hopHeaders.add(name);",
      "right" : "hopHeaders.add(name);",
      "info" : "ExpressionStatement[16249-16270]:ExpressionStatement[16249-16270]"
    }, {
      "left" : "return hopHeaders;",
      "right" : "return hopHeaders;",
      "info" : "ReturnStatement[16303-16321]:ReturnStatement[16303-16321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16424-16526]:Block[16424-16526]"
    }, {
      "left" : "addViaHeader(proxyRequest);",
      "right" : "addViaHeader(proxyRequest);",
      "info" : "ExpressionStatement[16434-16461]:ExpressionStatement[16434-16461]"
    }, {
      "left" : "addXForwardedHeaders(clientRequest, proxyRequest);",
      "right" : "addXForwardedHeaders(clientRequest, proxyRequest);",
      "info" : "ExpressionStatement[16470-16520]:ExpressionStatement[16470-16520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16586-16666]:Block[16586-16666]"
    }, {
      "left" : "proxyRequest.header(HttpHeader.VIA, \"http/1.1 \" + getViaHost());",
      "right" : "proxyRequest.header(HttpHeader.VIA, \"http/1.1 \" + getViaHost());",
      "info" : "ExpressionStatement[16596-16660]:ExpressionStatement[16596-16660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16768-17150]:Block[16768-17150]"
    }, {
      "left" : "proxyRequest.header(HttpHeader.X_FORWARDED_FOR, clientRequest.getRemoteAddr());",
      "right" : "proxyRequest.header(HttpHeader.X_FORWARDED_FOR, clientRequest.getRemoteAddr());",
      "info" : "ExpressionStatement[16778-16857]:ExpressionStatement[16778-16857]"
    }, {
      "left" : "proxyRequest.header(HttpHeader.X_FORWARDED_PROTO, clientRequest.getScheme());",
      "right" : "proxyRequest.header(HttpHeader.X_FORWARDED_PROTO, clientRequest.getScheme());",
      "info" : "ExpressionStatement[16866-16943]:ExpressionStatement[16866-16943]"
    }, {
      "left" : "proxyRequest.header(HttpHeader.X_FORWARDED_HOST, clientRequest.getHeader(HttpHeader.HOST.asString()));",
      "right" : "proxyRequest.header(HttpHeader.X_FORWARDED_HOST, clientRequest.getHeader(HttpHeader.HOST.asString()));",
      "info" : "ExpressionStatement[16952-17054]:ExpressionStatement[16952-17054]"
    }, {
      "left" : "proxyRequest.header(HttpHeader.X_FORWARDED_SERVER, clientRequest.getLocalName());",
      "right" : "proxyRequest.header(HttpHeader.X_FORWARDED_SERVER, clientRequest.getLocalName());",
      "info" : "ExpressionStatement[17063-17144]:ExpressionStatement[17063-17144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17283-18951]:Block[17283-18951]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[17293-18861]:IfStatement[17293-18861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17328-18861]:Block[17328-18861]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder(clientRequest.getMethod());",
      "right" : "StringBuilder builder = new StringBuilder(clientRequest.getMethod());",
      "info" : "VariableDeclarationStatement[17342-17411]:VariableDeclarationStatement[17342-17411]"
    }, {
      "left" : "builder.append(\" \").append(clientRequest.getRequestURI());",
      "right" : "builder.append(\" \").append(clientRequest.getRequestURI());",
      "info" : "ExpressionStatement[17424-17482]:ExpressionStatement[17424-17482]"
    }, {
      "left" : "String query = clientRequest.getQueryString();",
      "right" : "String query = clientRequest.getQueryString();",
      "info" : "VariableDeclarationStatement[17495-17541]:VariableDeclarationStatement[17495-17541]"
    }, {
      "left" : "if (query != null)",
      "right" : "if (query != null)",
      "info" : "IfStatement[17554-17623]:IfStatement[17554-17623]"
    }, {
      "left" : "builder.append(\"?\").append(query);",
      "right" : "builder.append(\"?\").append(query);",
      "info" : "ExpressionStatement[17589-17623]:ExpressionStatement[17589-17623]"
    }, {
      "left" : "builder.append(\" \").append(clientRequest.getProtocol()).append(System.lineSeparator());",
      "right" : "builder.append(\" \").append(clientRequest.getProtocol()).append(System.lineSeparator());",
      "info" : "ExpressionStatement[17636-17723]:ExpressionStatement[17636-17723]"
    }, {
      "left" : "for (Enumeration<String> headerNames = clientRequest.getHeaderNames(); headerNames.hasMoreElements())",
      "right" : "for (Enumeration<String> headerNames = clientRequest.getHeaderNames(); headerNames.hasMoreElements())",
      "info" : "ForStatement[17736-18473]:ForStatement[17736-18473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17851-18473]:Block[17851-18473]"
    }, {
      "left" : "String headerName = headerNames.nextElement();",
      "right" : "String headerName = headerNames.nextElement();",
      "info" : "VariableDeclarationStatement[17869-17915]:VariableDeclarationStatement[17869-17915]"
    }, {
      "left" : "builder.append(headerName).append(\": \");",
      "right" : "builder.append(headerName).append(\": \");",
      "info" : "ExpressionStatement[17932-17972]:ExpressionStatement[17932-17972]"
    }, {
      "left" : "for (Enumeration<String> headerValues = clientRequest.getHeaders(headerName); headerValues.hasMoreElements())",
      "right" : "for (Enumeration<String> headerValues = clientRequest.getHeaders(headerName); headerValues.hasMoreElements())",
      "info" : "ForStatement[17989-18403]:ForStatement[17989-18403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18116-18403]:Block[18116-18403]"
    }, {
      "left" : "String headerValue = headerValues.nextElement();",
      "right" : "String headerValue = headerValues.nextElement();",
      "info" : "VariableDeclarationStatement[18138-18186]:VariableDeclarationStatement[18138-18186]"
    }, {
      "left" : "if (headerValue != null)",
      "right" : "if (headerValue != null)",
      "info" : "IfStatement[18207-18284]:IfStatement[18207-18284]"
    }, {
      "left" : "builder.append(headerValue);",
      "right" : "builder.append(headerValue);",
      "info" : "ExpressionStatement[18256-18284]:ExpressionStatement[18256-18284]"
    }, {
      "left" : "if (headerValues.hasMoreElements())",
      "right" : "if (headerValues.hasMoreElements())",
      "info" : "IfStatement[18305-18385]:IfStatement[18305-18385]"
    }, {
      "left" : "builder.append(\",\");",
      "right" : "builder.append(\",\");",
      "info" : "ExpressionStatement[18365-18385]:ExpressionStatement[18365-18385]"
    }, {
      "left" : "builder.append(System.lineSeparator());",
      "right" : "builder.append(System.lineSeparator());",
      "info" : "ExpressionStatement[18420-18459]:ExpressionStatement[18420-18459]"
    }, {
      "left" : "builder.append(System.lineSeparator());",
      "right" : "builder.append(System.lineSeparator());",
      "info" : "ExpressionStatement[18486-18525]:ExpressionStatement[18486-18525]"
    }, {
      "left" : "_log.debug(\"{} proxying to upstream:{}{}{}{}\",\n                    getRequestId(clientRequest),\n                    System.lineSeparator(),\n                    builder,\n                    proxyRequest,\n                    System.lineSeparator(),\n                    proxyRequest.getHeaders().toString().trim());",
      "right" : "_log.debug(\"{} proxying to upstream:{}{}{}{}\",\n                    getRequestId(clientRequest),\n                    System.lineSeparator(),\n                    builder,\n                    proxyRequest,\n                    System.lineSeparator(),\n                    proxyRequest.getHeaders().toString().trim());",
      "info" : "ExpressionStatement[18539-18851]:ExpressionStatement[18539-18851]"
    }, {
      "left" : "proxyRequest.send(newProxyResponseListener(clientRequest, proxyResponse));",
      "right" : "proxyRequest.send(newProxyResponseListener(clientRequest, proxyResponse));",
      "info" : "ExpressionStatement[18871-18945]:ExpressionStatement[18871-18945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19254-19633]:Block[19254-19633]"
    }, {
      "left" : "boolean aborted = proxyRequest.abort(failure);",
      "right" : "boolean aborted = proxyRequest.abort(failure);",
      "info" : "VariableDeclarationStatement[19264-19310]:VariableDeclarationStatement[19264-19310]"
    }, {
      "left" : "if (!aborted)",
      "right" : "if (!aborted)",
      "info" : "IfStatement[19319-19627]:IfStatement[19319-19627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19341-19627]:Block[19341-19627]"
    }, {
      "left" : "int status = failure instanceof TimeoutException ?\n                    HttpStatus.REQUEST_TIMEOUT_408 :\n                    HttpStatus.INTERNAL_SERVER_ERROR_500;",
      "right" : "int status = failure instanceof TimeoutException ?\n                    HttpStatus.REQUEST_TIMEOUT_408 :\n                    HttpStatus.INTERNAL_SERVER_ERROR_500;",
      "info" : "VariableDeclarationStatement[19355-19516]:VariableDeclarationStatement[19355-19516]"
    }, {
      "left" : "proxyResponse.setStatus(status);",
      "right" : "proxyResponse.setStatus(status);",
      "info" : "ExpressionStatement[19529-19561]:ExpressionStatement[19529-19561]"
    }, {
      "left" : "clientRequest.getAsyncContext().complete();",
      "right" : "clientRequest.getAsyncContext().complete();",
      "info" : "ExpressionStatement[19574-19617]:ExpressionStatement[19574-19617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19776-21708]:Block[19776-21708]"
    }, {
      "left" : "for (HttpField field : serverResponse.getHeaders())",
      "right" : "for (HttpField field : serverResponse.getHeaders())",
      "info" : "EnhancedForStatement[19786-20361]:EnhancedForStatement[19786-20361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19846-20361]:Block[19846-20361]"
    }, {
      "left" : "String headerName = field.getName();",
      "right" : "String headerName = field.getName();",
      "info" : "VariableDeclarationStatement[19860-19896]:VariableDeclarationStatement[19860-19896]"
    }, {
      "left" : "String lowerHeaderName = headerName.toLowerCase(Locale.ENGLISH);",
      "right" : "String lowerHeaderName = headerName.toLowerCase(Locale.ENGLISH);",
      "info" : "VariableDeclarationStatement[19909-19973]:VariableDeclarationStatement[19909-19973]"
    }, {
      "left" : "if (HOP_HEADERS.contains(lowerHeaderName))",
      "right" : "if (HOP_HEADERS.contains(lowerHeaderName))",
      "info" : "IfStatement[19986-20054]:IfStatement[19986-20054]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[20045-20054]:ContinueStatement[20045-20054]"
    }, {
      "left" : "String newHeaderValue = filterServerResponseHeader(clientRequest, serverResponse, headerName, field.getValue());",
      "right" : "String newHeaderValue = filterServerResponseHeader(clientRequest, serverResponse, headerName, field.getValue());",
      "info" : "VariableDeclarationStatement[20068-20180]:VariableDeclarationStatement[20068-20180]"
    }, {
      "left" : "if (newHeaderValue == null || newHeaderValue.trim().length() == 0)",
      "right" : "if (newHeaderValue == null || newHeaderValue.trim().length() == 0)",
      "info" : "IfStatement[20193-20285]:IfStatement[20193-20285]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[20276-20285]:ContinueStatement[20276-20285]"
    }, {
      "left" : "proxyResponse.addHeader(headerName, newHeaderValue);",
      "right" : "proxyResponse.addHeader(headerName, newHeaderValue);",
      "info" : "ExpressionStatement[20299-20351]:ExpressionStatement[20299-20351]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[20371-21702]:IfStatement[20371-21702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20406-21702]:Block[20406-21702]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder(System.lineSeparator());",
      "right" : "StringBuilder builder = new StringBuilder(System.lineSeparator());",
      "info" : "VariableDeclarationStatement[20420-20486]:VariableDeclarationStatement[20420-20486]"
    }, {
      "left" : "builder.append(clientRequest.getProtocol()).append(\" \").append(proxyResponse.getStatus())\n                    .append(\" \").append(serverResponse.getReason()).append(System.lineSeparator());",
      "right" : "builder.append(clientRequest.getProtocol()).append(\" \").append(proxyResponse.getStatus())\n                    .append(\" \").append(serverResponse.getReason()).append(System.lineSeparator());",
      "info" : "ExpressionStatement[20499-20688]:ExpressionStatement[20499-20688]"
    }, {
      "left" : "for (String headerName : proxyResponse.getHeaderNames())",
      "right" : "for (String headerName : proxyResponse.getHeaderNames())",
      "info" : "EnhancedForStatement[20701-21315]:EnhancedForStatement[20701-21315]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20770-21315]:Block[20770-21315]"
    }, {
      "left" : "builder.append(headerName).append(\": \");",
      "right" : "builder.append(headerName).append(\": \");",
      "info" : "ExpressionStatement[20788-20828]:ExpressionStatement[20788-20828]"
    }, {
      "left" : "for (Iterator<String> headerValues = proxyResponse.getHeaders(headerName).iterator(); headerValues.hasNext())",
      "right" : "for (Iterator<String> headerValues = proxyResponse.getHeaders(headerName).iterator(); headerValues.hasNext())",
      "info" : "ForStatement[20845-21245]:ForStatement[20845-21245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20973-21245]:Block[20973-21245]"
    }, {
      "left" : "String headerValue = headerValues.next();",
      "right" : "String headerValue = headerValues.next();",
      "info" : "VariableDeclarationStatement[20995-21036]:VariableDeclarationStatement[20995-21036]"
    }, {
      "left" : "if (headerValue != null)",
      "right" : "if (headerValue != null)",
      "info" : "IfStatement[21057-21134]:IfStatement[21057-21134]"
    }, {
      "left" : "builder.append(headerValue);",
      "right" : "builder.append(headerValue);",
      "info" : "ExpressionStatement[21106-21134]:ExpressionStatement[21106-21134]"
    }, {
      "left" : "if (headerValues.hasNext())",
      "right" : "if (headerValues.hasNext())",
      "info" : "IfStatement[21155-21227]:IfStatement[21155-21227]"
    }, {
      "left" : "builder.append(\",\");",
      "right" : "builder.append(\",\");",
      "info" : "ExpressionStatement[21207-21227]:ExpressionStatement[21207-21227]"
    }, {
      "left" : "builder.append(System.lineSeparator());",
      "right" : "builder.append(System.lineSeparator());",
      "info" : "ExpressionStatement[21262-21301]:ExpressionStatement[21262-21301]"
    }, {
      "left" : "_log.debug(\"{} proxying to downstream:{}{}{}{}{}\",\n                    getRequestId(clientRequest),\n                    System.lineSeparator(),\n                    serverResponse,\n                    System.lineSeparator(),\n                    serverResponse.getHeaders().toString().trim(),\n                    System.lineSeparator(),\n                    builder);",
      "right" : "_log.debug(\"{} proxying to downstream:{}{}{}{}{}\",\n                    getRequestId(clientRequest),\n                    System.lineSeparator(),\n                    serverResponse,\n                    System.lineSeparator(),\n                    serverResponse.getHeaders().toString().trim(),\n                    System.lineSeparator(),\n                    builder);",
      "info" : "ExpressionStatement[21328-21692]:ExpressionStatement[21328-21692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21860-21895]:Block[21860-21895]"
    }, {
      "left" : "return headerValue;",
      "right" : "return headerValue;",
      "info" : "ReturnStatement[21870-21889]:ReturnStatement[21870-21889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22037-22261]:Block[22037-22261]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[22047-22152]:IfStatement[22047-22152]"
    }, {
      "left" : "_log.debug(\"{} proxying successful\", getRequestId(clientRequest));",
      "right" : "_log.debug(\"{} proxying successful\", getRequestId(clientRequest));",
      "info" : "ExpressionStatement[22086-22152]:ExpressionStatement[22086-22152]"
    }, {
      "left" : "AsyncContext asyncContext = clientRequest.getAsyncContext();",
      "right" : "AsyncContext asyncContext = clientRequest.getAsyncContext();",
      "info" : "VariableDeclarationStatement[22162-22222]:VariableDeclarationStatement[22162-22222]"
    }, {
      "left" : "asyncContext.complete();",
      "right" : "asyncContext.complete();",
      "info" : "ExpressionStatement[22231-22255]:ExpressionStatement[22231-22255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22422-23612]:Block[22422-23612]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[22432-22541]:IfStatement[22432-22541]"
    }, {
      "left" : "_log.debug(getRequestId(clientRequest) + \" proxying failed\", failure);",
      "right" : "_log.debug(getRequestId(clientRequest) + \" proxying failed\", failure);",
      "info" : "ExpressionStatement[22471-22541]:ExpressionStatement[22471-22541]"
    }, {
      "left" : "if (proxyResponse.isCommitted())",
      "right" : "if (proxyResponse.isCommitted())",
      "info" : "IfStatement[22551-23606]:IfStatement[22551-23606]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22592-23089]:Block[22592-23089]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[22606-23079]:TryStatement[22606-23079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22622-22868]:Block[22622-22868]"
    }, {
      "left" : "proxyResponse.sendError(-1);",
      "right" : "proxyResponse.sendError(-1);",
      "info" : "ExpressionStatement[22708-22736]:ExpressionStatement[22708-22736]"
    }, {
      "left" : "AsyncContext asyncContext = clientRequest.getAsyncContext();",
      "right" : "AsyncContext asyncContext = clientRequest.getAsyncContext();",
      "info" : "VariableDeclarationStatement[22753-22813]:VariableDeclarationStatement[22753-22813]"
    }, {
      "left" : "asyncContext.complete();",
      "right" : "asyncContext.complete();",
      "info" : "ExpressionStatement[22830-22854]:ExpressionStatement[22830-22854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22915-23079]:Block[22915-23079]"
    }, {
      "left" : "if (_log.isDebugEnabled())",
      "right" : "if (_log.isDebugEnabled())",
      "info" : "IfStatement[22933-23065]:IfStatement[22933-23065]"
    }, {
      "left" : "_log.debug(getRequestId(clientRequest) + \" could not close the connection\", failure);",
      "right" : "_log.debug(getRequestId(clientRequest) + \" could not close the connection\", failure);",
      "info" : "ExpressionStatement[22980-23065]:ExpressionStatement[22980-23065]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23111-23606]:Block[23111-23606]"
    }, {
      "left" : "proxyResponse.resetBuffer();",
      "right" : "proxyResponse.resetBuffer();",
      "info" : "ExpressionStatement[23125-23153]:ExpressionStatement[23125-23153]"
    }, {
      "left" : "if (failure instanceof TimeoutException)",
      "right" : "if (failure instanceof TimeoutException)",
      "info" : "IfStatement[23166-23381]:IfStatement[23166-23381]"
    }, {
      "left" : "proxyResponse.setStatus(HttpServletResponse.SC_GATEWAY_TIMEOUT);",
      "right" : "proxyResponse.setStatus(HttpServletResponse.SC_GATEWAY_TIMEOUT);",
      "info" : "ExpressionStatement[23223-23287]:ExpressionStatement[23223-23287]"
    }, {
      "left" : "proxyResponse.setStatus(HttpServletResponse.SC_BAD_GATEWAY);",
      "right" : "proxyResponse.setStatus(HttpServletResponse.SC_BAD_GATEWAY);",
      "info" : "ExpressionStatement[23321-23381]:ExpressionStatement[23321-23381]"
    }, {
      "left" : "proxyResponse.setHeader(HttpHeader.CONNECTION.asString(), HttpHeaderValue.CLOSE.asString());",
      "right" : "proxyResponse.setHeader(HttpHeader.CONNECTION.asString(), HttpHeaderValue.CLOSE.asString());",
      "info" : "ExpressionStatement[23394-23486]:ExpressionStatement[23394-23486]"
    }, {
      "left" : "AsyncContext asyncContext = clientRequest.getAsyncContext();",
      "right" : "AsyncContext asyncContext = clientRequest.getAsyncContext();",
      "info" : "VariableDeclarationStatement[23499-23559]:VariableDeclarationStatement[23499-23559]"
    }, {
      "left" : "asyncContext.complete();",
      "right" : "asyncContext.complete();",
      "info" : "ExpressionStatement[23572-23596]:ExpressionStatement[23572-23596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23683-23745]:Block[23683-23745]"
    }, {
      "left" : "return System.identityHashCode(clientRequest);",
      "right" : "return System.identityHashCode(clientRequest);",
      "info" : "ReturnStatement[23693-23739]:ReturnStatement[23693-23739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24614-24671]:Block[24614-24671]"
    }, {
      "left" : "this.proxyServlet = proxyServlet;",
      "right" : "this.proxyServlet = proxyServlet;",
      "info" : "ExpressionStatement[24628-24661]:ExpressionStatement[24628-24661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24755-25631]:Block[24755-25631]"
    }, {
      "left" : "_proxyTo = config.getInitParameter(\"proxyTo\");",
      "right" : "_proxyTo = config.getInitParameter(\"proxyTo\");",
      "info" : "ExpressionStatement[24769-24815]:ExpressionStatement[24769-24815]"
    }, {
      "left" : "if (_proxyTo == null)",
      "right" : "if (_proxyTo == null)",
      "info" : "IfStatement[24828-24938]:IfStatement[24828-24938]"
    }, {
      "left" : "throw new UnavailableException(\"Init parameter 'proxyTo' is required.\");",
      "right" : "throw new UnavailableException(\"Init parameter 'proxyTo' is required.\");",
      "info" : "ThrowStatement[24866-24938]:ThrowStatement[24866-24938]"
    }, {
      "left" : "String prefix = config.getInitParameter(\"prefix\");",
      "right" : "String prefix = config.getInitParameter(\"prefix\");",
      "info" : "VariableDeclarationStatement[24952-25002]:VariableDeclarationStatement[24952-25002]"
    }, {
      "left" : "if (prefix != null)",
      "right" : "if (prefix != null)",
      "info" : "IfStatement[25015-25243]:IfStatement[25015-25243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25047-25243]:Block[25047-25243]"
    }, {
      "left" : "if (!prefix.startsWith(\"/\"))",
      "right" : "if (!prefix.startsWith(\"/\"))",
      "info" : "IfStatement[25065-25195]:IfStatement[25065-25195]"
    }, {
      "left" : "throw new UnavailableException(\"Init parameter 'prefix' must start with a '/'.\");",
      "right" : "throw new UnavailableException(\"Init parameter 'prefix' must start with a '/'.\");",
      "info" : "ThrowStatement[25114-25195]:ThrowStatement[25114-25195]"
    }, {
      "left" : "_prefix = prefix;",
      "right" : "_prefix = prefix;",
      "info" : "ExpressionStatement[25212-25229]:ExpressionStatement[25212-25229]"
    }, {
      "left" : "String contextPath = config.getServletContext().getContextPath();",
      "right" : "String contextPath = config.getServletContext().getContextPath();",
      "info" : "VariableDeclarationStatement[25320-25385]:VariableDeclarationStatement[25320-25385]"
    }, {
      "left" : "_prefix = _prefix == null ? contextPath : (contextPath + _prefix);",
      "right" : "_prefix = _prefix == null ? contextPath : (contextPath + _prefix);",
      "info" : "ExpressionStatement[25398-25464]:ExpressionStatement[25398-25464]"
    }, {
      "left" : "if (proxyServlet._log.isDebugEnabled())",
      "right" : "if (proxyServlet._log.isDebugEnabled())",
      "info" : "IfStatement[25478-25621]:IfStatement[25478-25621]"
    }, {
      "left" : "proxyServlet._log.debug(config.getServletName() + \" @ \" + _prefix + \" to \" + _proxyTo);",
      "right" : "proxyServlet._log.debug(config.getServletName() + \" @ \" + _prefix + \" to \" + _proxyTo);",
      "info" : "ExpressionStatement[25534-25621]:ExpressionStatement[25534-25621]"
    } ]
  },
  "interFileMappings" : { }
}