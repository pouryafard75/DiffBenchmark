{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "XYPlot",
      "right" : "XYPlot",
      "info" : "TypeDeclaration[13852-180378]:TypeDeclaration[13852-180518]"
    }, {
      "left" : "private static final long serialVersionUID = 7044148245716569264L;",
      "right" : "private static final long serialVersionUID = 7044148245716569264L;",
      "info" : "FieldDeclaration[14475-14572]:FieldDeclaration[14475-14572]"
    }, {
      "left" : "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, \r\n            new float[] {2.0f, 2.0f}, 0.0f);",
      "right" : "public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\r\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, \r\n            new float[] {2.0f, 2.0f}, 0.0f);",
      "info" : "FieldDeclaration[14584-14812]:FieldDeclaration[14584-14812]"
    }, {
      "left" : "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
      "right" : "public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
      "info" : "FieldDeclaration[14820-14924]:FieldDeclaration[14820-14924]"
    }, {
      "left" : "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
      "right" : "public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
      "info" : "FieldDeclaration[14932-15040]:FieldDeclaration[14932-15040]"
    }, {
      "left" : "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            = DEFAULT_GRIDLINE_STROKE;",
      "right" : "public static final Stroke DEFAULT_CROSSHAIR_STROKE\r\n            = DEFAULT_GRIDLINE_STROKE;",
      "info" : "FieldDeclaration[15048-15181]:FieldDeclaration[15048-15181]"
    }, {
      "left" : "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
      "right" : "public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
      "info" : "FieldDeclaration[15189-15293]:FieldDeclaration[15189-15293]"
    }, {
      "left" : "protected static ResourceBundle localizationResources \r\n            = ResourceBundle.getBundle(\r\n                    \"org.jfree.chart.plot.LocalizationBundle\");",
      "right" : "protected static ResourceBundle localizationResources \r\n            = ResourceBundle.getBundle(\r\n                    \"org.jfree.chart.plot.LocalizationBundle\");",
      "info" : "FieldDeclaration[15301-15514]:FieldDeclaration[15301-15514]"
    }, {
      "left" : "private PlotOrientation orientation;",
      "right" : "private PlotOrientation orientation;",
      "info" : "FieldDeclaration[15522-15592]:FieldDeclaration[15522-15592]"
    }, {
      "left" : "private RectangleInsets axisOffset;",
      "right" : "private RectangleInsets axisOffset;",
      "info" : "FieldDeclaration[15600-15694]:FieldDeclaration[15600-15694]"
    }, {
      "left" : "private ObjectList domainAxes;",
      "right" : "private ObjectList domainAxes;",
      "info" : "FieldDeclaration[15702-15792]:FieldDeclaration[15702-15792]"
    }, {
      "left" : "private ObjectList domainAxisLocations;",
      "right" : "private ObjectList domainAxisLocations;",
      "info" : "FieldDeclaration[15800-15878]:FieldDeclaration[15800-15878]"
    }, {
      "left" : "private ObjectList rangeAxes;",
      "right" : "private ObjectList rangeAxes;",
      "info" : "FieldDeclaration[15886-15967]:FieldDeclaration[15886-15967]"
    }, {
      "left" : "private ObjectList rangeAxisLocations;",
      "right" : "private ObjectList rangeAxisLocations;",
      "info" : "FieldDeclaration[15975-16050]:FieldDeclaration[15975-16050]"
    }, {
      "left" : "private ObjectList datasets;",
      "right" : "private ObjectList datasets;",
      "info" : "FieldDeclaration[16058-16124]:FieldDeclaration[16058-16124]"
    }, {
      "left" : "private ObjectList renderers;",
      "right" : "private ObjectList renderers;",
      "info" : "FieldDeclaration[16132-16200]:FieldDeclaration[16132-16200]"
    }, {
      "left" : "private Map datasetToDomainAxisMap;",
      "right" : "private Map datasetToDomainAxisMap;",
      "info" : "FieldDeclaration[16208-16452]:FieldDeclaration[16208-16452]"
    }, {
      "left" : "private Map datasetToRangeAxisMap;",
      "right" : "private Map datasetToRangeAxisMap;",
      "info" : "FieldDeclaration[16460-16701]:FieldDeclaration[16460-16701]"
    }, {
      "left" : "private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);",
      "right" : "private transient Point2D quadrantOrigin = new Point2D.Double(0.0, 0.0);",
      "info" : "FieldDeclaration[16709-16840]:FieldDeclaration[16709-16840]"
    }, {
      "left" : "private transient Paint[] quadrantPaint\r\n            = new Paint[] {null, null, null, null};",
      "right" : "private transient Paint[] quadrantPaint\r\n            = new Paint[] {null, null, null, null};",
      "info" : "FieldDeclaration[16848-16986]:FieldDeclaration[16848-16986]"
    }, {
      "left" : "private boolean domainGridlinesVisible;",
      "right" : "private boolean domainGridlinesVisible;",
      "info" : "FieldDeclaration[16994-17109]:FieldDeclaration[16994-17109]"
    }, {
      "left" : "private transient Stroke domainGridlineStroke;",
      "right" : "private transient Stroke domainGridlineStroke;",
      "info" : "FieldDeclaration[17117-17222]:FieldDeclaration[17117-17222]"
    }, {
      "left" : "private transient Paint domainGridlinePaint;",
      "right" : "private transient Paint domainGridlinePaint;",
      "info" : "FieldDeclaration[17230-17332]:FieldDeclaration[17230-17332]"
    }, {
      "left" : "private boolean rangeGridlinesVisible;",
      "right" : "private boolean rangeGridlinesVisible;",
      "info" : "FieldDeclaration[17340-17453]:FieldDeclaration[17340-17453]"
    }, {
      "left" : "private transient Stroke rangeGridlineStroke;",
      "right" : "private transient Stroke rangeGridlineStroke;",
      "info" : "FieldDeclaration[17461-17564]:FieldDeclaration[17461-17564]"
    }, {
      "left" : "private transient Paint rangeGridlinePaint;",
      "right" : "private transient Paint rangeGridlinePaint;",
      "info" : "FieldDeclaration[17572-17672]:FieldDeclaration[17572-17672]"
    }, {
      "left" : "private boolean domainZeroBaselineVisible;",
      "right" : "private boolean domainZeroBaselineVisible;",
      "info" : "FieldDeclaration[17680-17877]:FieldDeclaration[17680-17877]"
    }, {
      "left" : "private transient Stroke domainZeroBaselineStroke;",
      "right" : "private transient Stroke domainZeroBaselineStroke;",
      "info" : "FieldDeclaration[17885-18056]:FieldDeclaration[17885-18056]"
    }, {
      "left" : "private transient Paint domainZeroBaselinePaint;",
      "right" : "private transient Paint domainZeroBaselinePaint;",
      "info" : "FieldDeclaration[18064-18232]:FieldDeclaration[18064-18232]"
    }, {
      "left" : "private boolean rangeZeroBaselineVisible;",
      "right" : "private boolean rangeZeroBaselineVisible;",
      "info" : "FieldDeclaration[18240-18405]:FieldDeclaration[18240-18405]"
    }, {
      "left" : "private transient Stroke rangeZeroBaselineStroke;",
      "right" : "private transient Stroke rangeZeroBaselineStroke;",
      "info" : "FieldDeclaration[18413-18536]:FieldDeclaration[18413-18536]"
    }, {
      "left" : "private transient Paint rangeZeroBaselinePaint;",
      "right" : "private transient Paint rangeZeroBaselinePaint;",
      "info" : "FieldDeclaration[18544-18664]:FieldDeclaration[18544-18664]"
    }, {
      "left" : "private boolean domainCrosshairVisible;",
      "right" : "private boolean domainCrosshairVisible;",
      "info" : "FieldDeclaration[18672-18788]:FieldDeclaration[18672-18788]"
    }, {
      "left" : "private double domainCrosshairValue;",
      "right" : "private double domainCrosshairValue;",
      "info" : "FieldDeclaration[18796-18872]:FieldDeclaration[18796-18872]"
    }, {
      "left" : "private transient Stroke domainCrosshairStroke;",
      "right" : "private transient Stroke domainCrosshairStroke;",
      "info" : "FieldDeclaration[18880-18990]:FieldDeclaration[18880-18990]"
    }, {
      "left" : "private transient Paint domainCrosshairPaint;",
      "right" : "private transient Paint domainCrosshairPaint;",
      "info" : "FieldDeclaration[18998-19102]:FieldDeclaration[18998-19102]"
    }, {
      "left" : "private boolean domainCrosshairLockedOnData = true;",
      "right" : "private boolean domainCrosshairLockedOnData = true;",
      "info" : "FieldDeclaration[19110-19276]:FieldDeclaration[19110-19276]"
    }, {
      "left" : "private boolean rangeCrosshairVisible;",
      "right" : "private boolean rangeCrosshairVisible;",
      "info" : "FieldDeclaration[19284-19398]:FieldDeclaration[19284-19398]"
    }, {
      "left" : "private double rangeCrosshairValue;",
      "right" : "private double rangeCrosshairValue;",
      "info" : "FieldDeclaration[19406-19480]:FieldDeclaration[19406-19480]"
    }, {
      "left" : "private transient Stroke rangeCrosshairStroke;",
      "right" : "private transient Stroke rangeCrosshairStroke;",
      "info" : "FieldDeclaration[19488-19597]:FieldDeclaration[19488-19597]"
    }, {
      "left" : "private transient Paint rangeCrosshairPaint;",
      "right" : "private transient Paint rangeCrosshairPaint;",
      "info" : "FieldDeclaration[19605-19708]:FieldDeclaration[19605-19708]"
    }, {
      "left" : "private boolean rangeCrosshairLockedOnData = true;",
      "right" : "private boolean rangeCrosshairLockedOnData = true;",
      "info" : "FieldDeclaration[19716-19881]:FieldDeclaration[19716-19881]"
    }, {
      "left" : "private Map foregroundDomainMarkers;",
      "right" : "private Map foregroundDomainMarkers;",
      "info" : "FieldDeclaration[19889-20006]:FieldDeclaration[19889-20006]"
    }, {
      "left" : "private Map backgroundDomainMarkers;",
      "right" : "private Map backgroundDomainMarkers;",
      "info" : "FieldDeclaration[20014-20131]:FieldDeclaration[20014-20131]"
    }, {
      "left" : "private Map foregroundRangeMarkers;",
      "right" : "private Map foregroundRangeMarkers;",
      "info" : "FieldDeclaration[20139-20254]:FieldDeclaration[20139-20254]"
    }, {
      "left" : "private Map backgroundRangeMarkers;",
      "right" : "private Map backgroundRangeMarkers;",
      "info" : "FieldDeclaration[20262-20377]:FieldDeclaration[20262-20377]"
    }, {
      "left" : "private List annotations;",
      "right" : "private List annotations;",
      "info" : "FieldDeclaration[20385-20601]:FieldDeclaration[20385-20601]"
    }, {
      "left" : "private transient Paint domainTickBandPaint;",
      "right" : "private transient Paint domainTickBandPaint;",
      "info" : "FieldDeclaration[20609-20716]:FieldDeclaration[20609-20716]"
    }, {
      "left" : "private transient Paint rangeTickBandPaint;",
      "right" : "private transient Paint rangeTickBandPaint;",
      "info" : "FieldDeclaration[20724-20829]:FieldDeclaration[20724-20829]"
    }, {
      "left" : "private AxisSpace fixedDomainAxisSpace;",
      "right" : "private AxisSpace fixedDomainAxisSpace;",
      "info" : "FieldDeclaration[20837-20917]:FieldDeclaration[20837-20917]"
    }, {
      "left" : "private AxisSpace fixedRangeAxisSpace;",
      "right" : "private AxisSpace fixedRangeAxisSpace;",
      "info" : "FieldDeclaration[20925-21003]:FieldDeclaration[20925-21003]"
    }, {
      "left" : "private DatasetRenderingOrder datasetRenderingOrder\r\n            = DatasetRenderingOrder.REVERSE;",
      "right" : "private DatasetRenderingOrder datasetRenderingOrder\r\n            = DatasetRenderingOrder.REVERSE;",
      "info" : "FieldDeclaration[21011-21251]:FieldDeclaration[21011-21251]"
    }, {
      "left" : "private SeriesRenderingOrder seriesRenderingOrder\r\n            = SeriesRenderingOrder.REVERSE;",
      "right" : "private SeriesRenderingOrder seriesRenderingOrder\r\n            = SeriesRenderingOrder.REVERSE;",
      "info" : "FieldDeclaration[21259-21494]:FieldDeclaration[21259-21494]"
    }, {
      "left" : "private int weight;",
      "right" : "private int weight;",
      "info" : "FieldDeclaration[21502-21637]:FieldDeclaration[21502-21637]"
    }, {
      "left" : "private LegendItemCollection fixedLegendItems;",
      "right" : "private LegendItemCollection fixedLegendItems;",
      "info" : "FieldDeclaration[21645-21817]:FieldDeclaration[21645-21817]"
    }, {
      "left" : "public XYPlot()",
      "right" : "public XYPlot()",
      "info" : "MethodDeclaration[21825-22062]:MethodDeclaration[21825-22062]"
    }, {
      "left" : "public XYPlot(XYDataset dataset,\r\n                  ValueAxis domainAxis,\r\n                  ValueAxis rangeAxis,\r\n                  XYItemRenderer renderer)",
      "right" : "public XYPlot(XYDataset dataset,\r\n                  ValueAxis domainAxis,\r\n                  ValueAxis rangeAxis,\r\n                  XYItemRenderer renderer)",
      "info" : "MethodDeclaration[22070-25846]:MethodDeclaration[22070-25846]"
    }, {
      "left" : "public String getPlotType()",
      "right" : "public String getPlotType()",
      "info" : "MethodDeclaration[25854-26079]:MethodDeclaration[25854-26079]"
    }, {
      "left" : "public PlotOrientation getOrientation()",
      "right" : "public PlotOrientation getOrientation()",
      "info" : "MethodDeclaration[26087-26354]:MethodDeclaration[26087-26354]"
    }, {
      "left" : "public void setOrientation(PlotOrientation orientation)",
      "right" : "public void setOrientation(PlotOrientation orientation)",
      "info" : "MethodDeclaration[26362-26948]:MethodDeclaration[26362-26948]"
    }, {
      "left" : "public RectangleInsets getAxisOffset()",
      "right" : "public RectangleInsets getAxisOffset()",
      "info" : "MethodDeclaration[26956-27208]:MethodDeclaration[26956-27208]"
    }, {
      "left" : "public void setAxisOffset(RectangleInsets offset)",
      "right" : "public void setAxisOffset(RectangleInsets offset)",
      "info" : "MethodDeclaration[27216-27733]:MethodDeclaration[27216-27733]"
    }, {
      "left" : "public ValueAxis getDomainAxis()",
      "right" : "public ValueAxis getDomainAxis()",
      "info" : "MethodDeclaration[27741-28191]:MethodDeclaration[27741-28191]"
    }, {
      "left" : "public ValueAxis getDomainAxis(int index)",
      "right" : "public ValueAxis getDomainAxis(int index)",
      "info" : "MethodDeclaration[28199-28926]:MethodDeclaration[28199-28926]"
    }, {
      "left" : "public void setDomainAxis(ValueAxis axis)",
      "right" : "public void setDomainAxis(ValueAxis axis)",
      "info" : "MethodDeclaration[28934-29306]:MethodDeclaration[28934-29306]"
    }, {
      "left" : "public void setDomainAxis(int index, ValueAxis axis)",
      "right" : "public void setDomainAxis(int index, ValueAxis axis)",
      "info" : "MethodDeclaration[29314-29728]:MethodDeclaration[29314-29728]"
    }, {
      "left" : "public void setDomainAxis(int index, ValueAxis axis, boolean notify)",
      "right" : "public void setDomainAxis(int index, ValueAxis axis, boolean notify)",
      "info" : "MethodDeclaration[29740-30552]:MethodDeclaration[29740-30552]"
    }, {
      "left" : "public void setDomainAxes(ValueAxis[] axes)",
      "right" : "public void setDomainAxes(ValueAxis[] axes)",
      "info" : "MethodDeclaration[30560-31007]:MethodDeclaration[30560-31007]"
    }, {
      "left" : "public AxisLocation getDomainAxisLocation()",
      "right" : "public AxisLocation getDomainAxisLocation()",
      "info" : "MethodDeclaration[31019-31333]:MethodDeclaration[31019-31333]"
    }, {
      "left" : "public void setDomainAxisLocation(AxisLocation location)",
      "right" : "public void setDomainAxisLocation(AxisLocation location)",
      "info" : "MethodDeclaration[31341-31754]:MethodDeclaration[31341-31754]"
    }, {
      "left" : "public void setDomainAxisLocation(AxisLocation location, boolean notify)",
      "right" : "public void setDomainAxisLocation(AxisLocation location, boolean notify)",
      "info" : "MethodDeclaration[31762-32240]:MethodDeclaration[31762-32240]"
    }, {
      "left" : "public RectangleEdge getDomainAxisEdge()",
      "right" : "public RectangleEdge getDomainAxisEdge()",
      "info" : "MethodDeclaration[32248-32643]:MethodDeclaration[32248-32643]"
    }, {
      "left" : "public int getDomainAxisCount()",
      "right" : "public int getDomainAxisCount()",
      "info" : "MethodDeclaration[32651-32875]:MethodDeclaration[32651-32875]"
    }, {
      "left" : "public void clearDomainAxes()",
      "right" : "public void clearDomainAxes()",
      "info" : "MethodDeclaration[32883-33394]:MethodDeclaration[32883-33394]"
    }, {
      "left" : "public void configureDomainAxes()",
      "right" : "public void configureDomainAxes()",
      "info" : "MethodDeclaration[33402-33719]:MethodDeclaration[33402-33719]"
    }, {
      "left" : "public AxisLocation getDomainAxisLocation(int index)",
      "right" : "public AxisLocation getDomainAxisLocation(int index)",
      "info" : "MethodDeclaration[33727-34484]:MethodDeclaration[33727-34484]"
    }, {
      "left" : "public void setDomainAxisLocation(int index, AxisLocation location)",
      "right" : "public void setDomainAxisLocation(int index, AxisLocation location)",
      "info" : "MethodDeclaration[34492-34975]:MethodDeclaration[34492-34975]"
    }, {
      "left" : "public void setDomainAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "right" : "public void setDomainAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "info" : "MethodDeclaration[34983-35888]:MethodDeclaration[34983-35888]"
    }, {
      "left" : "public RectangleEdge getDomainAxisEdge(int index)",
      "right" : "public RectangleEdge getDomainAxisEdge(int index)",
      "info" : "MethodDeclaration[35896-36447]:MethodDeclaration[35896-36447]"
    }, {
      "left" : "public ValueAxis getRangeAxis()",
      "right" : "public ValueAxis getRangeAxis()",
      "info" : "MethodDeclaration[36455-36868]:MethodDeclaration[36455-36868]"
    }, {
      "left" : "public void setRangeAxis(ValueAxis axis)",
      "right" : "public void setRangeAxis(ValueAxis axis)",
      "info" : "MethodDeclaration[36876-37686]:MethodDeclaration[36876-37686]"
    }, {
      "left" : "public AxisLocation getRangeAxisLocation()",
      "right" : "public AxisLocation getRangeAxisLocation()",
      "info" : "MethodDeclaration[37694-38004]:MethodDeclaration[37694-38004]"
    }, {
      "left" : "public void setRangeAxisLocation(AxisLocation location)",
      "right" : "public void setRangeAxisLocation(AxisLocation location)",
      "info" : "MethodDeclaration[38012-38420]:MethodDeclaration[38012-38420]"
    }, {
      "left" : "public void setRangeAxisLocation(AxisLocation location, boolean notify)",
      "right" : "public void setRangeAxisLocation(AxisLocation location, boolean notify)",
      "info" : "MethodDeclaration[38428-38910]:MethodDeclaration[38428-38910]"
    }, {
      "left" : "public RectangleEdge getRangeAxisEdge()",
      "right" : "public RectangleEdge getRangeAxisEdge()",
      "info" : "MethodDeclaration[38918-39266]:MethodDeclaration[38918-39266]"
    }, {
      "left" : "public ValueAxis getRangeAxis(int index)",
      "right" : "public ValueAxis getRangeAxis(int index)",
      "info" : "MethodDeclaration[39274-39946]:MethodDeclaration[39274-39946]"
    }, {
      "left" : "public void setRangeAxis(int index, ValueAxis axis)",
      "right" : "public void setRangeAxis(int index, ValueAxis axis)",
      "info" : "MethodDeclaration[39954-40321]:MethodDeclaration[39954-40321]"
    }, {
      "left" : "public void setRangeAxis(int index, ValueAxis axis, boolean notify)",
      "right" : "public void setRangeAxis(int index, ValueAxis axis, boolean notify)",
      "info" : "MethodDeclaration[40334-41172]:MethodDeclaration[40334-41172]"
    }, {
      "left" : "public void setRangeAxes(ValueAxis[] axes)",
      "right" : "public void setRangeAxes(ValueAxis[] axes)",
      "info" : "MethodDeclaration[41180-41625]:MethodDeclaration[41180-41625]"
    }, {
      "left" : "public int getRangeAxisCount()",
      "right" : "public int getRangeAxisCount()",
      "info" : "MethodDeclaration[41637-41859]:MethodDeclaration[41637-41859]"
    }, {
      "left" : "public void clearRangeAxes()",
      "right" : "public void clearRangeAxes()",
      "info" : "MethodDeclaration[41867-42374]:MethodDeclaration[41867-42374]"
    }, {
      "left" : "public void configureRangeAxes()",
      "right" : "public void configureRangeAxes()",
      "info" : "MethodDeclaration[42382-42739]:MethodDeclaration[42382-42739]"
    }, {
      "left" : "public AxisLocation getRangeAxisLocation(int index)",
      "right" : "public AxisLocation getRangeAxisLocation(int index)",
      "info" : "MethodDeclaration[42747-43497]:MethodDeclaration[42747-43497]"
    }, {
      "left" : "public void setRangeAxisLocation(int index, AxisLocation location)",
      "right" : "public void setRangeAxisLocation(int index, AxisLocation location)",
      "info" : "MethodDeclaration[43505-43956]:MethodDeclaration[43505-43956]"
    }, {
      "left" : "public void setRangeAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "right" : "public void setRangeAxisLocation(int index, AxisLocation location, \r\n            boolean notify)",
      "info" : "MethodDeclaration[43968-44866]:MethodDeclaration[43968-44866]"
    }, {
      "left" : "public RectangleEdge getRangeAxisEdge(int index)",
      "right" : "public RectangleEdge getRangeAxisEdge(int index)",
      "info" : "MethodDeclaration[44874-45455]:MethodDeclaration[44874-45455]"
    }, {
      "left" : "public XYDataset getDataset()",
      "right" : "public XYDataset getDataset()",
      "info" : "MethodDeclaration[45463-45749]:MethodDeclaration[45463-45749]"
    }, {
      "left" : "public XYDataset getDataset(int index)",
      "right" : "public XYDataset getDataset(int index)",
      "info" : "MethodDeclaration[45757-46188]:MethodDeclaration[45757-46188]"
    }, {
      "left" : "public void setDataset(XYDataset dataset)",
      "right" : "public void setDataset(XYDataset dataset)",
      "info" : "MethodDeclaration[46196-46552]:MethodDeclaration[46196-46552]"
    }, {
      "left" : "public void setDataset(int index, XYDataset dataset)",
      "right" : "public void setDataset(int index, XYDataset dataset)",
      "info" : "MethodDeclaration[46560-47267]:MethodDeclaration[46560-47267]"
    }, {
      "left" : "public int getDatasetCount()",
      "right" : "public int getDatasetCount()",
      "info" : "MethodDeclaration[47275-47456]:MethodDeclaration[47275-47456]"
    }, {
      "left" : "public int indexOf(XYDataset dataset)",
      "right" : "public int indexOf(XYDataset dataset)",
      "info" : "MethodDeclaration[47464-48004]:MethodDeclaration[47464-48004]"
    }, {
      "left" : "public void mapDatasetToDomainAxis(int index, int axisIndex)",
      "right" : "public void mapDatasetToDomainAxis(int index, int axisIndex)",
      "info" : "MethodDeclaration[48012-48648]:MethodDeclaration[48012-48648]"
    }, {
      "left" : "public void mapDatasetToRangeAxis(int index, int axisIndex)",
      "right" : "public void mapDatasetToRangeAxis(int index, int axisIndex)",
      "info" : "MethodDeclaration[48656-49290]:MethodDeclaration[48656-49290]"
    }, {
      "left" : "public XYItemRenderer getRenderer()",
      "right" : "public XYItemRenderer getRenderer()",
      "info" : "MethodDeclaration[49298-49569]:MethodDeclaration[49298-49569]"
    }, {
      "left" : "public XYItemRenderer getRenderer(int index)",
      "right" : "public XYItemRenderer getRenderer(int index)",
      "info" : "MethodDeclaration[49577-50075]:MethodDeclaration[49577-50075]"
    }, {
      "left" : "public void setRenderer(XYItemRenderer renderer)",
      "right" : "public void setRenderer(XYItemRenderer renderer)",
      "info" : "MethodDeclaration[50083-50511]:MethodDeclaration[50083-50511]"
    }, {
      "left" : "public void setRenderer(int index, XYItemRenderer renderer)",
      "right" : "public void setRenderer(int index, XYItemRenderer renderer)",
      "info" : "MethodDeclaration[50519-50867]:MethodDeclaration[50519-50867]"
    }, {
      "left" : "public void setRenderer(int index, XYItemRenderer renderer, \r\n                            boolean notify)",
      "right" : "public void setRenderer(int index, XYItemRenderer renderer, \r\n                            boolean notify)",
      "info" : "MethodDeclaration[50875-51717]:MethodDeclaration[50875-51717]"
    }, {
      "left" : "public void setRenderers(XYItemRenderer[] renderers)",
      "right" : "public void setRenderers(XYItemRenderer[] renderers)",
      "info" : "MethodDeclaration[51725-52148]:MethodDeclaration[51725-52148]"
    }, {
      "left" : "public DatasetRenderingOrder getDatasetRenderingOrder()",
      "right" : "public DatasetRenderingOrder getDatasetRenderingOrder()",
      "info" : "MethodDeclaration[52160-52463]:MethodDeclaration[52160-52463]"
    }, {
      "left" : "public void setDatasetRenderingOrder(DatasetRenderingOrder order)",
      "right" : "public void setDatasetRenderingOrder(DatasetRenderingOrder order)",
      "info" : "MethodDeclaration[52471-53164]:MethodDeclaration[52471-53164]"
    }, {
      "left" : "public SeriesRenderingOrder getSeriesRenderingOrder()",
      "right" : "public SeriesRenderingOrder getSeriesRenderingOrder()",
      "info" : "MethodDeclaration[53172-53469]:MethodDeclaration[53172-53469]"
    }, {
      "left" : "public void setSeriesRenderingOrder(SeriesRenderingOrder order)",
      "right" : "public void setSeriesRenderingOrder(SeriesRenderingOrder order)",
      "info" : "MethodDeclaration[53477-54150]:MethodDeclaration[53477-54150]"
    }, {
      "left" : "public int getIndexOf(XYItemRenderer renderer)",
      "right" : "public int getIndexOf(XYItemRenderer renderer)",
      "info" : "MethodDeclaration[54158-54528]:MethodDeclaration[54158-54528]"
    }, {
      "left" : "public XYItemRenderer getRendererForDataset(XYDataset dataset)",
      "right" : "public XYItemRenderer getRendererForDataset(XYDataset dataset)",
      "info" : "MethodDeclaration[54536-55380]:MethodDeclaration[54536-55380]"
    }, {
      "left" : "public int getWeight()",
      "right" : "public int getWeight()",
      "info" : "MethodDeclaration[55388-55642]:MethodDeclaration[55388-55642]"
    }, {
      "left" : "public void setWeight(int weight)",
      "right" : "public void setWeight(int weight)",
      "info" : "MethodDeclaration[55650-55957]:MethodDeclaration[55650-55957]"
    }, {
      "left" : "public boolean isDomainGridlinesVisible()",
      "right" : "public boolean isDomainGridlinesVisible()",
      "info" : "MethodDeclaration[55965-56313]:MethodDeclaration[55965-56313]"
    }, {
      "left" : "public void setDomainGridlinesVisible(boolean visible)",
      "right" : "public void setDomainGridlinesVisible(boolean visible)",
      "info" : "MethodDeclaration[56321-56876]:MethodDeclaration[56321-56876]"
    }, {
      "left" : "public Stroke getDomainGridlineStroke()",
      "right" : "public Stroke getDomainGridlineStroke()",
      "info" : "MethodDeclaration[56884-57206]:MethodDeclaration[56884-57206]"
    }, {
      "left" : "public void setDomainGridlineStroke(Stroke stroke)",
      "right" : "public void setDomainGridlineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[57214-57951]:MethodDeclaration[57214-57951]"
    }, {
      "left" : "public Paint getDomainGridlinePaint()",
      "right" : "public Paint getDomainGridlinePaint()",
      "info" : "MethodDeclaration[57959-58274]:MethodDeclaration[57959-58274]"
    }, {
      "left" : "public void setDomainGridlinePaint(Paint paint)",
      "right" : "public void setDomainGridlinePaint(Paint paint)",
      "info" : "MethodDeclaration[58282-58921]:MethodDeclaration[58282-58921]"
    }, {
      "left" : "public boolean isRangeGridlinesVisible()",
      "right" : "public boolean isRangeGridlinesVisible()",
      "info" : "MethodDeclaration[58929-59242]:MethodDeclaration[58929-59242]"
    }, {
      "left" : "public void setRangeGridlinesVisible(boolean visible)",
      "right" : "public void setRangeGridlinesVisible(boolean visible)",
      "info" : "MethodDeclaration[59250-59805]:MethodDeclaration[59250-59805]"
    }, {
      "left" : "public Stroke getRangeGridlineStroke()",
      "right" : "public Stroke getRangeGridlineStroke()",
      "info" : "MethodDeclaration[59813-60131]:MethodDeclaration[59813-60131]"
    }, {
      "left" : "public void setRangeGridlineStroke(Stroke stroke)",
      "right" : "public void setRangeGridlineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[60139-60678]:MethodDeclaration[60139-60678]"
    }, {
      "left" : "public Paint getRangeGridlinePaint()",
      "right" : "public Paint getRangeGridlinePaint()",
      "info" : "MethodDeclaration[60686-60997]:MethodDeclaration[60686-60997]"
    }, {
      "left" : "public void setRangeGridlinePaint(Paint paint)",
      "right" : "public void setRangeGridlinePaint(Paint paint)",
      "info" : "MethodDeclaration[61005-61532]:MethodDeclaration[61005-61532]"
    }, {
      "left" : "public boolean isDomainZeroBaselineVisible()",
      "right" : "public boolean isDomainZeroBaselineVisible()",
      "info" : "MethodDeclaration[61540-61895]:MethodDeclaration[61540-61895]"
    }, {
      "left" : "public void setDomainZeroBaselineVisible(boolean visible)",
      "right" : "public void setDomainZeroBaselineVisible(boolean visible)",
      "info" : "MethodDeclaration[61903-62375]:MethodDeclaration[61903-62375]"
    }, {
      "left" : "public Stroke getDomainZeroBaselineStroke()",
      "right" : "public Stroke getDomainZeroBaselineStroke()",
      "info" : "MethodDeclaration[62383-62730]:MethodDeclaration[62383-62730]"
    }, {
      "left" : "public void setDomainZeroBaselineStroke(Stroke stroke)",
      "right" : "public void setDomainZeroBaselineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[62738-63313]:MethodDeclaration[62738-63313]"
    }, {
      "left" : "public Paint getDomainZeroBaselinePaint()",
      "right" : "public Paint getDomainZeroBaselinePaint()",
      "info" : "MethodDeclaration[63321-63681]:MethodDeclaration[63321-63681]"
    }, {
      "left" : "public void setDomainZeroBaselinePaint(Paint paint)",
      "right" : "public void setDomainZeroBaselinePaint(Paint paint)",
      "info" : "MethodDeclaration[63689-64265]:MethodDeclaration[63689-64265]"
    }, {
      "left" : "public boolean isRangeZeroBaselineVisible()",
      "right" : "public boolean isRangeZeroBaselineVisible()",
      "info" : "MethodDeclaration[64277-64598]:MethodDeclaration[64277-64598]"
    }, {
      "left" : "public void setRangeZeroBaselineVisible(boolean visible)",
      "right" : "public void setRangeZeroBaselineVisible(boolean visible)",
      "info" : "MethodDeclaration[64606-65044]:MethodDeclaration[64606-65044]"
    }, {
      "left" : "public Stroke getRangeZeroBaselineStroke()",
      "right" : "public Stroke getRangeZeroBaselineStroke()",
      "info" : "MethodDeclaration[65052-65365]:MethodDeclaration[65052-65365]"
    }, {
      "left" : "public void setRangeZeroBaselineStroke(Stroke stroke)",
      "right" : "public void setRangeZeroBaselineStroke(Stroke stroke)",
      "info" : "MethodDeclaration[65373-65915]:MethodDeclaration[65373-65915]"
    }, {
      "left" : "public Paint getRangeZeroBaselinePaint()",
      "right" : "public Paint getRangeZeroBaselinePaint()",
      "info" : "MethodDeclaration[65923-66249]:MethodDeclaration[65923-66249]"
    }, {
      "left" : "public void setRangeZeroBaselinePaint(Paint paint)",
      "right" : "public void setRangeZeroBaselinePaint(Paint paint)",
      "info" : "MethodDeclaration[66257-66799]:MethodDeclaration[66257-66799]"
    }, {
      "left" : "public Paint getDomainTickBandPaint()",
      "right" : "public Paint getDomainTickBandPaint()",
      "info" : "MethodDeclaration[66807-67156]:MethodDeclaration[66807-67156]"
    }, {
      "left" : "public void setDomainTickBandPaint(Paint paint)",
      "right" : "public void setDomainTickBandPaint(Paint paint)",
      "info" : "MethodDeclaration[67164-67478]:MethodDeclaration[67164-67478]"
    }, {
      "left" : "public Paint getRangeTickBandPaint()",
      "right" : "public Paint getRangeTickBandPaint()",
      "info" : "MethodDeclaration[67486-67831]:MethodDeclaration[67486-67831]"
    }, {
      "left" : "public void setRangeTickBandPaint(Paint paint)",
      "right" : "public void setRangeTickBandPaint(Paint paint)",
      "info" : "MethodDeclaration[67839-68149]:MethodDeclaration[67839-68149]"
    }, {
      "left" : "public Point2D getQuadrantOrigin()",
      "right" : "public Point2D getQuadrantOrigin()",
      "info" : "MethodDeclaration[68157-68486]:MethodDeclaration[68157-68486]"
    }, {
      "left" : "public void setQuadrantOrigin(Point2D origin)",
      "right" : "public void setQuadrantOrigin(Point2D origin)",
      "info" : "MethodDeclaration[68494-68977]:MethodDeclaration[68494-68977]"
    }, {
      "left" : "public Paint getQuadrantPaint(int index)",
      "right" : "public Paint getQuadrantPaint(int index)",
      "info" : "MethodDeclaration[68985-69513]:MethodDeclaration[68985-69513]"
    }, {
      "left" : "public void setQuadrantPaint(int index, Paint paint)",
      "right" : "public void setQuadrantPaint(int index, Paint paint)",
      "info" : "MethodDeclaration[69521-70151]:MethodDeclaration[69521-70151]"
    }, {
      "left" : "public void addDomainMarker(Marker marker)",
      "right" : "public void addDomainMarker(Marker marker)",
      "info" : "MethodDeclaration[70159-70765]:MethodDeclaration[70159-70765]"
    }, {
      "left" : "public void addDomainMarker(Marker marker, Layer layer)",
      "right" : "public void addDomainMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[70773-71398]:MethodDeclaration[70773-71398]"
    }, {
      "left" : "public void clearDomainMarkers()",
      "right" : "public void clearDomainMarkers()",
      "info" : "MethodDeclaration[71406-72483]:MethodDeclaration[71406-72483]"
    }, {
      "left" : "public void clearDomainMarkers(int index)",
      "right" : "public void clearDomainMarkers(int index)",
      "info" : "MethodDeclaration[72491-73788]:MethodDeclaration[72491-73788]"
    }, {
      "left" : "public void addDomainMarker(int index, Marker marker, Layer layer)",
      "right" : "public void addDomainMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[73796-74524]:MethodDeclaration[73796-74524]"
    }, {
      "left" : "public void addDomainMarker(int index, Marker marker, Layer layer, \r\n    \t\tboolean notify)",
      "right" : "public void addDomainMarker(int index, Marker marker, Layer layer, \r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[74532-76377]:MethodDeclaration[74532-76377]"
    }, {
      "left" : "public boolean removeDomainMarker(Marker marker)",
      "right" : "public boolean removeDomainMarker(Marker marker)",
      "info" : "MethodDeclaration[76385-76823]:MethodDeclaration[76385-76823]"
    }, {
      "left" : "public boolean removeDomainMarker(Marker marker, Layer layer)",
      "right" : "public boolean removeDomainMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[76831-77388]:MethodDeclaration[76831-77388]"
    }, {
      "left" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer)",
      "right" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[77396-77975]:MethodDeclaration[77396-77975]"
    }, {
      "left" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "right" : "public boolean removeDomainMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[77983-79068]:MethodDeclaration[77983-79138]"
    }, {
      "left" : "public void addRangeMarker(Marker marker)",
      "right" : "public void addRangeMarker(Marker marker)",
      "info" : "MethodDeclaration[79080-79608]:MethodDeclaration[79150-79678]"
    }, {
      "left" : "public void addRangeMarker(Marker marker, Layer layer)",
      "right" : "public void addRangeMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[79616-80237]:MethodDeclaration[79686-80307]"
    }, {
      "left" : "public void clearRangeMarkers()",
      "right" : "public void clearRangeMarkers()",
      "info" : "MethodDeclaration[80245-81268]:MethodDeclaration[80315-81338]"
    }, {
      "left" : "public void addRangeMarker(int index, Marker marker, Layer layer)",
      "right" : "public void addRangeMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[81276-81960]:MethodDeclaration[81346-82030]"
    }, {
      "left" : "public void addRangeMarker(int index, Marker marker, Layer layer, \r\n    \t\tboolean notify)",
      "right" : "public void addRangeMarker(int index, Marker marker, Layer layer, \r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[81972-83525]:MethodDeclaration[82042-83595]"
    }, {
      "left" : "public void clearRangeMarkers(int index)",
      "right" : "public void clearRangeMarkers(int index)",
      "info" : "MethodDeclaration[83533-84779]:MethodDeclaration[83603-84849]"
    }, {
      "left" : "public boolean removeRangeMarker(Marker marker)",
      "right" : "public boolean removeRangeMarker(Marker marker)",
      "info" : "MethodDeclaration[84787-85221]:MethodDeclaration[84857-85291]"
    }, {
      "left" : "public boolean removeRangeMarker(Marker marker, Layer layer)",
      "right" : "public boolean removeRangeMarker(Marker marker, Layer layer)",
      "info" : "MethodDeclaration[85229-85783]:MethodDeclaration[85299-85853]"
    }, {
      "left" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer)",
      "right" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer)",
      "info" : "MethodDeclaration[85791-86368]:MethodDeclaration[85861-86438]"
    }, {
      "left" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "right" : "public boolean removeRangeMarker(int index, Marker marker, Layer layer,\r\n    \t\tboolean notify)",
      "info" : "MethodDeclaration[86380-87564]:MethodDeclaration[86450-87704]"
    }, {
      "left" : "public void addAnnotation(XYAnnotation annotation)",
      "right" : "public void addAnnotation(XYAnnotation annotation)",
      "info" : "MethodDeclaration[87572-87975]:MethodDeclaration[87712-88115]"
    }, {
      "left" : "public void addAnnotation(XYAnnotation annotation, boolean notify)",
      "right" : "public void addAnnotation(XYAnnotation annotation, boolean notify)",
      "info" : "MethodDeclaration[87987-88600]:MethodDeclaration[88127-88740]"
    }, {
      "left" : "public boolean removeAnnotation(XYAnnotation annotation)",
      "right" : "public boolean removeAnnotation(XYAnnotation annotation)",
      "info" : "MethodDeclaration[88608-89113]:MethodDeclaration[88748-89253]"
    }, {
      "left" : "public boolean removeAnnotation(XYAnnotation annotation, boolean notify)",
      "right" : "public boolean removeAnnotation(XYAnnotation annotation, boolean notify)",
      "info" : "MethodDeclaration[89121-89876]:MethodDeclaration[89261-90016]"
    }, {
      "left" : "public List getAnnotations()",
      "right" : "public List getAnnotations()",
      "info" : "MethodDeclaration[89884-90159]:MethodDeclaration[90024-90299]"
    }, {
      "left" : "public void clearAnnotations()",
      "right" : "public void clearAnnotations()",
      "info" : "MethodDeclaration[90167-90446]:MethodDeclaration[90307-90586]"
    }, {
      "left" : "protected AxisSpace calculateAxisSpace(Graphics2D g2,\r\n                                           Rectangle2D plotArea)",
      "right" : "protected AxisSpace calculateAxisSpace(Graphics2D g2,\r\n                                           Rectangle2D plotArea)",
      "info" : "MethodDeclaration[90458-90998]:MethodDeclaration[90598-91138]"
    }, {
      "left" : "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2,\r\n                                                 Rectangle2D plotArea,\r\n                                                 AxisSpace space)",
      "right" : "protected AxisSpace calculateDomainAxisSpace(Graphics2D g2,\r\n                                                 Rectangle2D plotArea,\r\n                                                 AxisSpace space)",
      "info" : "MethodDeclaration[91006-92805]:MethodDeclaration[91146-92945]"
    }, {
      "left" : "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2,\r\n                                                Rectangle2D plotArea,\r\n                                                AxisSpace space)",
      "right" : "protected AxisSpace calculateRangeAxisSpace(Graphics2D g2,\r\n                                                Rectangle2D plotArea,\r\n                                                AxisSpace space)",
      "info" : "MethodDeclaration[92813-94596]:MethodDeclaration[92953-94736]"
    }, {
      "left" : "public void draw(Graphics2D g2,\r\n                     Rectangle2D area,\r\n                     Point2D anchor,\r\n                     PlotState parentState,\r\n                     PlotRenderingInfo info)",
      "right" : "public void draw(Graphics2D g2,\r\n                     Rectangle2D area,\r\n                     Point2D anchor,\r\n                     PlotState parentState,\r\n                     PlotRenderingInfo info)",
      "info" : "MethodDeclaration[94604-105698]:MethodDeclaration[94744-105838]"
    }, {
      "left" : "public void drawBackground(Graphics2D g2, Rectangle2D area)",
      "right" : "public void drawBackground(Graphics2D g2, Rectangle2D area)",
      "info" : "MethodDeclaration[105706-106041]:MethodDeclaration[105846-106181]"
    }, {
      "left" : "protected void drawQuadrants(Graphics2D g2, Rectangle2D area)",
      "right" : "protected void drawQuadrants(Graphics2D g2, Rectangle2D area)",
      "info" : "MethodDeclaration[106049-110788]:MethodDeclaration[106189-110928]"
    }, {
      "left" : "public void drawDomainTickBands(Graphics2D g2, Rectangle2D dataArea,\r\n                                    List ticks)",
      "right" : "public void drawDomainTickBands(Graphics2D g2, Rectangle2D dataArea,\r\n                                    List ticks)",
      "info" : "MethodDeclaration[110796-112090]:MethodDeclaration[110936-112230]"
    }, {
      "left" : "public void drawRangeTickBands(Graphics2D g2, Rectangle2D dataArea,\r\n                                   List ticks)",
      "right" : "public void drawRangeTickBands(Graphics2D g2, Rectangle2D dataArea,\r\n                                   List ticks)",
      "info" : "MethodDeclaration[112098-113380]:MethodDeclaration[112238-113520]"
    }, {
      "left" : "protected Map drawAxes(Graphics2D g2,\r\n                           Rectangle2D plotArea,\r\n                           Rectangle2D dataArea,\r\n                           PlotRenderingInfo plotState)",
      "right" : "protected Map drawAxes(Graphics2D g2,\r\n                           Rectangle2D plotArea,\r\n                           Rectangle2D dataArea,\r\n                           PlotRenderingInfo plotState)",
      "info" : "MethodDeclaration[113388-116980]:MethodDeclaration[113528-117120]"
    }, {
      "left" : "public boolean render(Graphics2D g2,\r\n                          Rectangle2D dataArea,\r\n                          int index,\r\n                          PlotRenderingInfo info,\r\n                          CrosshairState crosshairState)",
      "right" : "public boolean render(Graphics2D g2,\r\n                          Rectangle2D dataArea,\r\n                          int index,\r\n                          PlotRenderingInfo info,\r\n                          CrosshairState crosshairState)",
      "info" : "MethodDeclaration[116988-121347]:MethodDeclaration[117128-121487]"
    }, {
      "left" : "public ValueAxis getDomainAxisForDataset(int index)",
      "right" : "public ValueAxis getDomainAxisForDataset(int index)",
      "info" : "MethodDeclaration[121355-122096]:MethodDeclaration[121495-122236]"
    }, {
      "left" : "public ValueAxis getRangeAxisForDataset(int index)",
      "right" : "public ValueAxis getRangeAxisForDataset(int index)",
      "info" : "MethodDeclaration[122104-122835]:MethodDeclaration[122244-122975]"
    }, {
      "left" : "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\r\n                                       List ticks)",
      "right" : "protected void drawDomainGridlines(Graphics2D g2, Rectangle2D dataArea,\r\n                                       List ticks)",
      "info" : "MethodDeclaration[122843-123906]:MethodDeclaration[122983-124046]"
    }, {
      "left" : "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\r\n                                      List ticks)",
      "right" : "protected void drawRangeGridlines(Graphics2D g2, Rectangle2D area,\r\n                                      List ticks)",
      "info" : "MethodDeclaration[123914-125250]:MethodDeclaration[124054-125390]"
    }, {
      "left" : "protected void drawZeroDomainBaseline(Graphics2D g2, Rectangle2D area)",
      "right" : "protected void drawZeroDomainBaseline(Graphics2D g2, Rectangle2D area)",
      "info" : "MethodDeclaration[125258-125885]:MethodDeclaration[125398-126025]"
    }, {
      "left" : "protected void drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)",
      "right" : "protected void drawZeroRangeBaseline(Graphics2D g2, Rectangle2D area)",
      "info" : "MethodDeclaration[125893-126425]:MethodDeclaration[126033-126565]"
    }, {
      "left" : "public void drawAnnotations(Graphics2D g2,\r\n                                Rectangle2D dataArea,\r\n                                PlotRenderingInfo info)",
      "right" : "public void drawAnnotations(Graphics2D g2,\r\n                                Rectangle2D dataArea,\r\n                                PlotRenderingInfo info)",
      "info" : "MethodDeclaration[126433-127143]:MethodDeclaration[126573-127283]"
    }, {
      "left" : "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\r\n                                     int index, Layer layer)",
      "right" : "protected void drawDomainMarkers(Graphics2D g2, Rectangle2D dataArea,\r\n                                     int index, Layer layer)",
      "info" : "MethodDeclaration[127151-128363]:MethodDeclaration[127291-128503]"
    }, {
      "left" : "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\r\n                                    int index, Layer layer)",
      "right" : "protected void drawRangeMarkers(Graphics2D g2, Rectangle2D dataArea,\r\n                                    int index, Layer layer)",
      "info" : "MethodDeclaration[128371-129574]:MethodDeclaration[128511-129714]"
    }, {
      "left" : "public Collection getDomainMarkers(Layer layer)",
      "right" : "public Collection getDomainMarkers(Layer layer)",
      "info" : "MethodDeclaration[129582-129946]:MethodDeclaration[129722-130086]"
    }, {
      "left" : "public Collection getRangeMarkers(Layer layer)",
      "right" : "public Collection getRangeMarkers(Layer layer)",
      "info" : "MethodDeclaration[129954-130315]:MethodDeclaration[130094-130455]"
    }, {
      "left" : "public Collection getDomainMarkers(int index, Layer layer)",
      "right" : "public Collection getDomainMarkers(int index, Layer layer)",
      "info" : "MethodDeclaration[130323-131181]:MethodDeclaration[130463-131321]"
    }, {
      "left" : "public Collection getRangeMarkers(int index, Layer layer)",
      "right" : "public Collection getRangeMarkers(int index, Layer layer)",
      "info" : "MethodDeclaration[131189-132044]:MethodDeclaration[131329-132184]"
    }, {
      "left" : "protected void drawHorizontalLine(Graphics2D g2, Rectangle2D dataArea,\r\n                                      double value, Stroke stroke,\r\n                                      Paint paint)",
      "right" : "protected void drawHorizontalLine(Graphics2D g2, Rectangle2D dataArea,\r\n                                      double value, Stroke stroke,\r\n                                      Paint paint)",
      "info" : "MethodDeclaration[132052-133106]:MethodDeclaration[132192-133246]"
    }, {
      "left" : "protected void drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "right" : "protected void drawDomainCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "info" : "MethodDeclaration[133118-134554]:MethodDeclaration[133258-134694]"
    }, {
      "left" : "protected void drawVerticalLine(Graphics2D g2, Rectangle2D dataArea,\r\n                                    double value, Stroke stroke, Paint paint)",
      "right" : "protected void drawVerticalLine(Graphics2D g2, Rectangle2D dataArea,\r\n                                    double value, Stroke stroke, Paint paint)",
      "info" : "MethodDeclaration[134562-135583]:MethodDeclaration[134702-135723]"
    }, {
      "left" : "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "right" : "protected void drawRangeCrosshair(Graphics2D g2, Rectangle2D dataArea, \r\n            PlotOrientation orientation, double value, ValueAxis axis, \r\n            Stroke stroke, Paint paint)",
      "info" : "MethodDeclaration[135591-137027]:MethodDeclaration[135731-137167]"
    }, {
      "left" : "public void handleClick(int x, int y, PlotRenderingInfo info)",
      "right" : "public void handleClick(int x, int y, PlotRenderingInfo info)",
      "info" : "MethodDeclaration[137035-138190]:MethodDeclaration[137175-138330]"
    }, {
      "left" : "private List getDatasetsMappedToDomainAxis(Integer axisIndex)",
      "right" : "private List getDatasetsMappedToDomainAxis(Integer axisIndex)",
      "info" : "MethodDeclaration[138198-139226]:MethodDeclaration[138338-139366]"
    }, {
      "left" : "private List getDatasetsMappedToRangeAxis(Integer axisIndex)",
      "right" : "private List getDatasetsMappedToRangeAxis(Integer axisIndex)",
      "info" : "MethodDeclaration[139234-140260]:MethodDeclaration[139374-140400]"
    }, {
      "left" : "public int getDomainAxisIndex(ValueAxis axis)",
      "right" : "public int getDomainAxisIndex(ValueAxis axis)",
      "info" : "MethodDeclaration[140268-140873]:MethodDeclaration[140408-141013]"
    }, {
      "left" : "public int getRangeAxisIndex(ValueAxis axis)",
      "right" : "public int getRangeAxisIndex(ValueAxis axis)",
      "info" : "MethodDeclaration[140881-141483]:MethodDeclaration[141021-141623]"
    }, {
      "left" : "public Range getDataRange(ValueAxis axis)",
      "right" : "public Range getDataRange(ValueAxis axis)",
      "info" : "MethodDeclaration[141491-143503]:MethodDeclaration[141631-143643]"
    }, {
      "left" : "public void datasetChanged(DatasetChangeEvent event)",
      "right" : "public void datasetChanged(DatasetChangeEvent event)",
      "info" : "MethodDeclaration[143511-144132]:MethodDeclaration[143651-144272]"
    }, {
      "left" : "public void rendererChanged(RendererChangeEvent event)",
      "right" : "public void rendererChanged(RendererChangeEvent event)",
      "info" : "MethodDeclaration[144140-144348]:MethodDeclaration[144280-144488]"
    }, {
      "left" : "public boolean isDomainCrosshairVisible()",
      "right" : "public boolean isDomainCrosshairVisible()",
      "info" : "MethodDeclaration[144356-144643]:MethodDeclaration[144496-144783]"
    }, {
      "left" : "public void setDomainCrosshairVisible(boolean flag)",
      "right" : "public void setDomainCrosshairVisible(boolean flag)",
      "info" : "MethodDeclaration[144651-145164]:MethodDeclaration[144791-145304]"
    }, {
      "left" : "public boolean isDomainCrosshairLockedOnData()",
      "right" : "public boolean isDomainCrosshairLockedOnData()",
      "info" : "MethodDeclaration[145172-145503]:MethodDeclaration[145312-145643]"
    }, {
      "left" : "public void setDomainCrosshairLockedOnData(boolean flag)",
      "right" : "public void setDomainCrosshairLockedOnData(boolean flag)",
      "info" : "MethodDeclaration[145511-146068]:MethodDeclaration[145651-146208]"
    }, {
      "left" : "public double getDomainCrosshairValue()",
      "right" : "public double getDomainCrosshairValue()",
      "info" : "MethodDeclaration[146076-146319]:MethodDeclaration[146216-146459]"
    }, {
      "left" : "public void setDomainCrosshairValue(double value)",
      "right" : "public void setDomainCrosshairValue(double value)",
      "info" : "MethodDeclaration[146327-146701]:MethodDeclaration[146467-146841]"
    }, {
      "left" : "public void setDomainCrosshairValue(double value, boolean notify)",
      "right" : "public void setDomainCrosshairValue(double value, boolean notify)",
      "info" : "MethodDeclaration[146709-147260]:MethodDeclaration[146849-147400]"
    }, {
      "left" : "public Stroke getDomainCrosshairStroke()",
      "right" : "public Stroke getDomainCrosshairStroke()",
      "info" : "MethodDeclaration[147268-147664]:MethodDeclaration[147408-147804]"
    }, {
      "left" : "public void setDomainCrosshairStroke(Stroke stroke)",
      "right" : "public void setDomainCrosshairStroke(Stroke stroke)",
      "info" : "MethodDeclaration[147672-148241]:MethodDeclaration[147812-148381]"
    }, {
      "left" : "public Paint getDomainCrosshairPaint()",
      "right" : "public Paint getDomainCrosshairPaint()",
      "info" : "MethodDeclaration[148249-148608]:MethodDeclaration[148389-148748]"
    }, {
      "left" : "public void setDomainCrosshairPaint(Paint paint)",
      "right" : "public void setDomainCrosshairPaint(Paint paint)",
      "info" : "MethodDeclaration[148616-149154]:MethodDeclaration[148756-149294]"
    }, {
      "left" : "public boolean isRangeCrosshairVisible()",
      "right" : "public boolean isRangeCrosshairVisible()",
      "info" : "MethodDeclaration[149162-149486]:MethodDeclaration[149302-149626]"
    }, {
      "left" : "public void setRangeCrosshairVisible(boolean flag)",
      "right" : "public void setRangeCrosshairVisible(boolean flag)",
      "info" : "MethodDeclaration[149494-150014]:MethodDeclaration[149634-150154]"
    }, {
      "left" : "public boolean isRangeCrosshairLockedOnData()",
      "right" : "public boolean isRangeCrosshairLockedOnData()",
      "info" : "MethodDeclaration[150022-150350]:MethodDeclaration[150162-150490]"
    }, {
      "left" : "public void setRangeCrosshairLockedOnData(boolean flag)",
      "right" : "public void setRangeCrosshairLockedOnData(boolean flag)",
      "info" : "MethodDeclaration[150358-150910]:MethodDeclaration[150498-151050]"
    }, {
      "left" : "public double getRangeCrosshairValue()",
      "right" : "public double getRangeCrosshairValue()",
      "info" : "MethodDeclaration[150918-151157]:MethodDeclaration[151058-151297]"
    }, {
      "left" : "public void setRangeCrosshairValue(double value)",
      "right" : "public void setRangeCrosshairValue(double value)",
      "info" : "MethodDeclaration[151165-151552]:MethodDeclaration[151305-151692]"
    }, {
      "left" : "public void setRangeCrosshairValue(double value, boolean notify)",
      "right" : "public void setRangeCrosshairValue(double value, boolean notify)",
      "info" : "MethodDeclaration[151560-152153]:MethodDeclaration[151700-152293]"
    }, {
      "left" : "public Stroke getRangeCrosshairStroke()",
      "right" : "public Stroke getRangeCrosshairStroke()",
      "info" : "MethodDeclaration[152161-152544]:MethodDeclaration[152301-152684]"
    }, {
      "left" : "public void setRangeCrosshairStroke(Stroke stroke)",
      "right" : "public void setRangeCrosshairStroke(Stroke stroke)",
      "info" : "MethodDeclaration[152552-153116]:MethodDeclaration[152692-153256]"
    }, {
      "left" : "public Paint getRangeCrosshairPaint()",
      "right" : "public Paint getRangeCrosshairPaint()",
      "info" : "MethodDeclaration[153124-153477]:MethodDeclaration[153264-153617]"
    }, {
      "left" : "public void setRangeCrosshairPaint(Paint paint)",
      "right" : "public void setRangeCrosshairPaint(Paint paint)",
      "info" : "MethodDeclaration[153485-154021]:MethodDeclaration[153625-154161]"
    }, {
      "left" : "public AxisSpace getFixedDomainAxisSpace()",
      "right" : "public AxisSpace getFixedDomainAxisSpace()",
      "info" : "MethodDeclaration[154029-154326]:MethodDeclaration[154169-154466]"
    }, {
      "left" : "public void setFixedDomainAxisSpace(AxisSpace space)",
      "right" : "public void setFixedDomainAxisSpace(AxisSpace space)",
      "info" : "MethodDeclaration[154334-154694]:MethodDeclaration[154474-154834]"
    }, {
      "left" : "public void setFixedDomainAxisSpace(AxisSpace space, boolean notify)",
      "right" : "public void setFixedDomainAxisSpace(AxisSpace space, boolean notify)",
      "info" : "MethodDeclaration[154702-155228]:MethodDeclaration[154842-155368]"
    }, {
      "left" : "public AxisSpace getFixedRangeAxisSpace()",
      "right" : "public AxisSpace getFixedRangeAxisSpace()",
      "info" : "MethodDeclaration[155236-155528]:MethodDeclaration[155376-155668]"
    }, {
      "left" : "public void setFixedRangeAxisSpace(AxisSpace space)",
      "right" : "public void setFixedRangeAxisSpace(AxisSpace space)",
      "info" : "MethodDeclaration[155536-155892]:MethodDeclaration[155676-156032]"
    }, {
      "left" : "public void setFixedRangeAxisSpace(AxisSpace space, boolean notify)",
      "right" : "public void setFixedRangeAxisSpace(AxisSpace space, boolean notify)",
      "info" : "MethodDeclaration[155900-156422]:MethodDeclaration[156040-156562]"
    }, {
      "left" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source)",
      "right" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source)",
      "info" : "MethodDeclaration[156430-156965]:MethodDeclaration[156570-157105]"
    }, {
      "left" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source, boolean useAnchor)",
      "right" : "public void zoomDomainAxes(double factor, PlotRenderingInfo info,\r\n                               Point2D source, boolean useAnchor)",
      "info" : "MethodDeclaration[156973-158465]:MethodDeclaration[157113-158605]"
    }, {
      "left" : "public void zoomDomainAxes(double lowerPercent, double upperPercent,\r\n                               PlotRenderingInfo info, Point2D source)",
      "right" : "public void zoomDomainAxes(double lowerPercent, double upperPercent,\r\n                               PlotRenderingInfo info, Point2D source)",
      "info" : "MethodDeclaration[158473-159625]:MethodDeclaration[158613-159765]"
    }, {
      "left" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source)",
      "right" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source)",
      "info" : "MethodDeclaration[159633-160160]:MethodDeclaration[159773-160300]"
    }, {
      "left" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source, boolean useAnchor)",
      "right" : "public void zoomRangeAxes(double factor, PlotRenderingInfo info,\r\n                              Point2D source, boolean useAnchor)",
      "info" : "MethodDeclaration[160172-161700]:MethodDeclaration[160312-161840]"
    }, {
      "left" : "public void zoomRangeAxes(double lowerPercent, double upperPercent,\r\n                              PlotRenderingInfo info, Point2D source)",
      "right" : "public void zoomRangeAxes(double lowerPercent, double upperPercent,\r\n                              PlotRenderingInfo info, Point2D source)",
      "info" : "MethodDeclaration[161708-162437]:MethodDeclaration[161848-162577]"
    }, {
      "left" : "public boolean isDomainZoomable()",
      "right" : "public boolean isDomainZoomable()",
      "info" : "MethodDeclaration[162445-162711]:MethodDeclaration[162585-162851]"
    }, {
      "left" : "public boolean isRangeZoomable()",
      "right" : "public boolean isRangeZoomable()",
      "info" : "MethodDeclaration[162719-162984]:MethodDeclaration[162859-163124]"
    }, {
      "left" : "public int getSeriesCount()",
      "right" : "public int getSeriesCount()",
      "info" : "MethodDeclaration[162992-163414]:MethodDeclaration[163132-163554]"
    }, {
      "left" : "public LegendItemCollection getFixedLegendItems()",
      "right" : "public LegendItemCollection getFixedLegendItems()",
      "info" : "MethodDeclaration[163422-163721]:MethodDeclaration[163562-163861]"
    }, {
      "left" : "public void setFixedLegendItems(LegendItemCollection items)",
      "right" : "public void setFixedLegendItems(LegendItemCollection items)",
      "info" : "MethodDeclaration[163729-164169]:MethodDeclaration[163869-164309]"
    }, {
      "left" : "public LegendItemCollection getLegendItems()",
      "right" : "public LegendItemCollection getLegendItems()",
      "info" : "MethodDeclaration[164177-165719]:MethodDeclaration[164317-165859]"
    }, {
      "left" : "public boolean equals(Object obj)",
      "right" : "public boolean equals(Object obj)",
      "info" : "MethodDeclaration[165727-172244]:MethodDeclaration[165867-172384]"
    }, {
      "left" : "public Object clone() throws CloneNotSupportedException",
      "right" : "public Object clone() throws CloneNotSupportedException",
      "info" : "MethodDeclaration[172252-175925]:MethodDeclaration[172392-176065]"
    }, {
      "left" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "right" : "private void writeObject(ObjectOutputStream stream) throws IOException",
      "info" : "MethodDeclaration[175933-177430]:MethodDeclaration[176073-177570]"
    }, {
      "left" : "private void readObject(ObjectInputStream stream)\r\n        throws IOException, ClassNotFoundException",
      "right" : "private void readObject(ObjectInputStream stream)\r\n        throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[177438-180373]:MethodDeclaration[177578-180513]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14323-14329]:Modifier[14323-14329]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[14330-14335]:TYPE_DECLARATION_KIND[14330-14335]"
    }, {
      "left" : "XYPlot",
      "right" : "XYPlot",
      "info" : "SimpleName[14336-14342]:SimpleName[14336-14342]"
    }, {
      "left" : "Plot",
      "right" : "Plot",
      "info" : "SimpleType[14351-14355]:SimpleType[14351-14355]"
    }, {
      "left" : "ValueAxisPlot",
      "right" : "ValueAxisPlot",
      "info" : "SimpleType[14367-14380]:SimpleType[14367-14380]"
    }, {
      "left" : "Zoomable",
      "right" : "Zoomable",
      "info" : "SimpleType[14382-14390]:SimpleType[14382-14390]"
    }, {
      "left" : "RendererChangeListener",
      "right" : "RendererChangeListener",
      "info" : "SimpleType[14401-14423]:SimpleType[14401-14423]"
    }, {
      "left" : "Cloneable",
      "right" : "Cloneable",
      "info" : "SimpleType[14425-14434]:SimpleType[14425-14434]"
    }, {
      "left" : "PublicCloneable",
      "right" : "PublicCloneable",
      "info" : "SimpleType[14436-14451]:SimpleType[14436-14451]"
    }, {
      "left" : "Serializable",
      "right" : "Serializable",
      "info" : "SimpleType[14453-14465]:SimpleType[14453-14465]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21999-22005]:Modifier[21999-22005]"
    }, {
      "left" : "XYPlot",
      "right" : "XYPlot",
      "info" : "SimpleName[22006-22012]:SimpleName[22006-22012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22015-22062]:Block[22015-22062]"
    }, {
      "left" : "this(null, null, null, null);",
      "right" : "this(null, null, null, null);",
      "info" : "ConstructorInvocation[22026-22055]:ConstructorInvocation[22026-22055]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22668-22674]:Modifier[22668-22674]"
    }, {
      "left" : "XYPlot",
      "right" : "XYPlot",
      "info" : "SimpleName[22675-22681]:SimpleName[22675-22681]"
    }, {
      "left" : "XYDataset dataset",
      "right" : "XYDataset dataset",
      "info" : "SingleVariableDeclaration[22682-22699]:SingleVariableDeclaration[22682-22699]"
    }, {
      "left" : "ValueAxis domainAxis",
      "right" : "ValueAxis domainAxis",
      "info" : "SingleVariableDeclaration[22720-22740]:SingleVariableDeclaration[22720-22740]"
    }, {
      "left" : "ValueAxis rangeAxis",
      "right" : "ValueAxis rangeAxis",
      "info" : "SingleVariableDeclaration[22761-22780]:SingleVariableDeclaration[22761-22780]"
    }, {
      "left" : "XYItemRenderer renderer",
      "right" : "XYItemRenderer renderer",
      "info" : "SingleVariableDeclaration[22801-22824]:SingleVariableDeclaration[22801-22824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22826-25846]:Block[22826-25846]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[22839-22847]:SuperConstructorInvocation[22839-22847]"
    }, {
      "left" : "this.orientation = PlotOrientation.VERTICAL;",
      "right" : "this.orientation = PlotOrientation.VERTICAL;",
      "info" : "ExpressionStatement[22859-22903]:ExpressionStatement[22859-22903]"
    }, {
      "left" : "this.weight = 1;",
      "right" : "this.weight = 1;",
      "info" : "ExpressionStatement[22913-22929]:ExpressionStatement[22913-22929]"
    }, {
      "left" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
      "right" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
      "info" : "ExpressionStatement[22980-23038]:ExpressionStatement[22980-23038]"
    }, {
      "left" : "this.domainAxes = new ObjectList();",
      "right" : "this.domainAxes = new ObjectList();",
      "info" : "ExpressionStatement[23127-23162]:ExpressionStatement[23127-23162]"
    }, {
      "left" : "this.domainAxisLocations = new ObjectList();",
      "right" : "this.domainAxisLocations = new ObjectList();",
      "info" : "ExpressionStatement[23172-23216]:ExpressionStatement[23172-23216]"
    }, {
      "left" : "this.foregroundDomainMarkers = new HashMap();",
      "right" : "this.foregroundDomainMarkers = new HashMap();",
      "info" : "ExpressionStatement[23226-23271]:ExpressionStatement[23226-23271]"
    }, {
      "left" : "this.backgroundDomainMarkers = new HashMap();",
      "right" : "this.backgroundDomainMarkers = new HashMap();",
      "info" : "ExpressionStatement[23281-23326]:ExpressionStatement[23281-23326]"
    }, {
      "left" : "this.rangeAxes = new ObjectList();",
      "right" : "this.rangeAxes = new ObjectList();",
      "info" : "ExpressionStatement[23338-23372]:ExpressionStatement[23338-23372]"
    }, {
      "left" : "this.rangeAxisLocations = new ObjectList();",
      "right" : "this.rangeAxisLocations = new ObjectList();",
      "info" : "ExpressionStatement[23382-23425]:ExpressionStatement[23382-23425]"
    }, {
      "left" : "this.foregroundRangeMarkers = new HashMap();",
      "right" : "this.foregroundRangeMarkers = new HashMap();",
      "info" : "ExpressionStatement[23435-23479]:ExpressionStatement[23435-23479]"
    }, {
      "left" : "this.backgroundRangeMarkers = new HashMap();",
      "right" : "this.backgroundRangeMarkers = new HashMap();",
      "info" : "ExpressionStatement[23489-23533]:ExpressionStatement[23489-23533]"
    }, {
      "left" : "this.datasets = new ObjectList();",
      "right" : "this.datasets = new ObjectList();",
      "info" : "ExpressionStatement[23545-23578]:ExpressionStatement[23545-23578]"
    }, {
      "left" : "this.renderers = new ObjectList();",
      "right" : "this.renderers = new ObjectList();",
      "info" : "ExpressionStatement[23588-23622]:ExpressionStatement[23588-23622]"
    }, {
      "left" : "this.datasetToDomainAxisMap = new TreeMap();",
      "right" : "this.datasetToDomainAxisMap = new TreeMap();",
      "info" : "ExpressionStatement[23634-23678]:ExpressionStatement[23634-23678]"
    }, {
      "left" : "this.datasetToRangeAxisMap = new TreeMap();",
      "right" : "this.datasetToRangeAxisMap = new TreeMap();",
      "info" : "ExpressionStatement[23688-23731]:ExpressionStatement[23688-23731]"
    }, {
      "left" : "this.datasets.set(0, dataset);",
      "right" : "this.datasets.set(0, dataset);",
      "info" : "ExpressionStatement[23743-23773]:ExpressionStatement[23743-23773]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[23783-23862]:IfStatement[23783-23862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23804-23862]:Block[23804-23862]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[23819-23851]:ExpressionStatement[23819-23851]"
    }, {
      "left" : "this.renderers.set(0, renderer);",
      "right" : "this.renderers.set(0, renderer);",
      "info" : "ExpressionStatement[23874-23906]:ExpressionStatement[23874-23906]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[23916-24034]:IfStatement[23916-24034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23938-24034]:Block[23938-24034]"
    }, {
      "left" : "renderer.setPlot(this);",
      "right" : "renderer.setPlot(this);",
      "info" : "ExpressionStatement[23953-23976]:ExpressionStatement[23953-23976]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[23990-24023]:ExpressionStatement[23990-24023]"
    }, {
      "left" : "this.domainAxes.set(0, domainAxis);",
      "right" : "this.domainAxes.set(0, domainAxis);",
      "info" : "ExpressionStatement[24046-24081]:ExpressionStatement[24046-24081]"
    }, {
      "left" : "this.mapDatasetToDomainAxis(0, 0);",
      "right" : "this.mapDatasetToDomainAxis(0, 0);",
      "info" : "ExpressionStatement[24091-24125]:ExpressionStatement[24091-24125]"
    }, {
      "left" : "if (domainAxis != null)",
      "right" : "if (domainAxis != null)",
      "info" : "IfStatement[24135-24259]:IfStatement[24135-24259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24159-24259]:Block[24159-24259]"
    }, {
      "left" : "domainAxis.setPlot(this);",
      "right" : "domainAxis.setPlot(this);",
      "info" : "ExpressionStatement[24174-24199]:ExpressionStatement[24174-24199]"
    }, {
      "left" : "domainAxis.addChangeListener(this);",
      "right" : "domainAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[24213-24248]:ExpressionStatement[24213-24248]"
    }, {
      "left" : "this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
      "right" : "this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
      "info" : "ExpressionStatement[24269-24330]:ExpressionStatement[24269-24330]"
    }, {
      "left" : "this.rangeAxes.set(0, rangeAxis);",
      "right" : "this.rangeAxes.set(0, rangeAxis);",
      "info" : "ExpressionStatement[24342-24375]:ExpressionStatement[24342-24375]"
    }, {
      "left" : "this.mapDatasetToRangeAxis(0, 0);",
      "right" : "this.mapDatasetToRangeAxis(0, 0);",
      "info" : "ExpressionStatement[24385-24418]:ExpressionStatement[24385-24418]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[24428-24549]:IfStatement[24428-24549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24451-24549]:Block[24451-24549]"
    }, {
      "left" : "rangeAxis.setPlot(this);",
      "right" : "rangeAxis.setPlot(this);",
      "info" : "ExpressionStatement[24466-24490]:ExpressionStatement[24466-24490]"
    }, {
      "left" : "rangeAxis.addChangeListener(this);",
      "right" : "rangeAxis.addChangeListener(this);",
      "info" : "ExpressionStatement[24504-24538]:ExpressionStatement[24504-24538]"
    }, {
      "left" : "this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
      "right" : "this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
      "info" : "ExpressionStatement[24559-24619]:ExpressionStatement[24559-24619]"
    }, {
      "left" : "configureDomainAxes();",
      "right" : "configureDomainAxes();",
      "info" : "ExpressionStatement[24631-24653]:ExpressionStatement[24631-24653]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[24663-24684]:ExpressionStatement[24663-24684]"
    }, {
      "left" : "this.domainGridlinesVisible = true;",
      "right" : "this.domainGridlinesVisible = true;",
      "info" : "ExpressionStatement[24696-24731]:ExpressionStatement[24696-24731]"
    }, {
      "left" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "right" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "info" : "ExpressionStatement[24741-24793]:ExpressionStatement[24741-24793]"
    }, {
      "left" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "right" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "info" : "ExpressionStatement[24803-24853]:ExpressionStatement[24803-24853]"
    }, {
      "left" : "this.domainZeroBaselineVisible = false;",
      "right" : "this.domainZeroBaselineVisible = false;",
      "info" : "ExpressionStatement[24865-24904]:ExpressionStatement[24865-24904]"
    }, {
      "left" : "this.domainZeroBaselinePaint = Color.black;",
      "right" : "this.domainZeroBaselinePaint = Color.black;",
      "info" : "ExpressionStatement[24914-24957]:ExpressionStatement[24914-24957]"
    }, {
      "left" : "this.domainZeroBaselineStroke = new BasicStroke(0.5f);",
      "right" : "this.domainZeroBaselineStroke = new BasicStroke(0.5f);",
      "info" : "ExpressionStatement[24967-25021]:ExpressionStatement[24967-25021]"
    }, {
      "left" : "this.rangeGridlinesVisible = true;",
      "right" : "this.rangeGridlinesVisible = true;",
      "info" : "ExpressionStatement[25033-25067]:ExpressionStatement[25033-25067]"
    }, {
      "left" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "right" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
      "info" : "ExpressionStatement[25077-25128]:ExpressionStatement[25077-25128]"
    }, {
      "left" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "right" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
      "info" : "ExpressionStatement[25138-25187]:ExpressionStatement[25138-25187]"
    }, {
      "left" : "this.rangeZeroBaselineVisible = false;",
      "right" : "this.rangeZeroBaselineVisible = false;",
      "info" : "ExpressionStatement[25199-25237]:ExpressionStatement[25199-25237]"
    }, {
      "left" : "this.rangeZeroBaselinePaint = Color.black;",
      "right" : "this.rangeZeroBaselinePaint = Color.black;",
      "info" : "ExpressionStatement[25247-25289]:ExpressionStatement[25247-25289]"
    }, {
      "left" : "this.rangeZeroBaselineStroke = new BasicStroke(0.5f);",
      "right" : "this.rangeZeroBaselineStroke = new BasicStroke(0.5f);",
      "info" : "ExpressionStatement[25299-25352]:ExpressionStatement[25299-25352]"
    }, {
      "left" : "this.domainCrosshairVisible = false;",
      "right" : "this.domainCrosshairVisible = false;",
      "info" : "ExpressionStatement[25364-25400]:ExpressionStatement[25364-25400]"
    }, {
      "left" : "this.domainCrosshairValue = 0.0;",
      "right" : "this.domainCrosshairValue = 0.0;",
      "info" : "ExpressionStatement[25410-25442]:ExpressionStatement[25410-25442]"
    }, {
      "left" : "this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "right" : "this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "info" : "ExpressionStatement[25452-25506]:ExpressionStatement[25452-25506]"
    }, {
      "left" : "this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "right" : "this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "info" : "ExpressionStatement[25516-25568]:ExpressionStatement[25516-25568]"
    }, {
      "left" : "this.rangeCrosshairVisible = false;",
      "right" : "this.rangeCrosshairVisible = false;",
      "info" : "ExpressionStatement[25580-25615]:ExpressionStatement[25580-25615]"
    }, {
      "left" : "this.rangeCrosshairValue = 0.0;",
      "right" : "this.rangeCrosshairValue = 0.0;",
      "info" : "ExpressionStatement[25625-25656]:ExpressionStatement[25625-25656]"
    }, {
      "left" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "right" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
      "info" : "ExpressionStatement[25666-25719]:ExpressionStatement[25666-25719]"
    }, {
      "left" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "right" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
      "info" : "ExpressionStatement[25729-25780]:ExpressionStatement[25729-25780]"
    }, {
      "left" : "this.annotations = new java.util.ArrayList();",
      "right" : "this.annotations = new java.util.ArrayList();",
      "info" : "ExpressionStatement[25792-25837]:ExpressionStatement[25792-25837]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[25983-25989]:Modifier[25983-25989]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[25990-25996]:SimpleType[25990-25996]"
    }, {
      "left" : "getPlotType",
      "right" : "getPlotType",
      "info" : "SimpleName[25997-26008]:SimpleName[25997-26008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26011-26079]:Block[26011-26079]"
    }, {
      "left" : "return localizationResources.getString(\"XY_Plot\");",
      "right" : "return localizationResources.getString(\"XY_Plot\");",
      "info" : "ReturnStatement[26022-26072]:ReturnStatement[26022-26072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26272-26278]:Modifier[26272-26278]"
    }, {
      "left" : "PlotOrientation",
      "right" : "PlotOrientation",
      "info" : "SimpleType[26279-26294]:SimpleType[26279-26294]"
    }, {
      "left" : "getOrientation",
      "right" : "getOrientation",
      "info" : "SimpleName[26295-26309]:SimpleName[26295-26309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26312-26354]:Block[26312-26354]"
    }, {
      "left" : "return this.orientation;",
      "right" : "return this.orientation;",
      "info" : "ReturnStatement[26323-26347]:ReturnStatement[26323-26347]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[26620-26626]:Modifier[26620-26626]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[26627-26631]:PrimitiveType[26627-26631]"
    }, {
      "left" : "setOrientation",
      "right" : "setOrientation",
      "info" : "SimpleName[26632-26646]:SimpleName[26632-26646]"
    }, {
      "left" : "PlotOrientation orientation",
      "right" : "PlotOrientation orientation",
      "info" : "SingleVariableDeclaration[26647-26674]:SingleVariableDeclaration[26647-26674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26676-26948]:Block[26676-26948]"
    }, {
      "left" : "if (orientation == null)",
      "right" : "if (orientation == null)",
      "info" : "IfStatement[26687-26805]:IfStatement[26687-26805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26712-26805]:Block[26712-26805]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
      "info" : "ThrowStatement[26727-26794]:ThrowStatement[26727-26794]"
    }, {
      "left" : "if (orientation != this.orientation)",
      "right" : "if (orientation != this.orientation)",
      "info" : "IfStatement[26815-26941]:IfStatement[26815-26941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26852-26941]:Block[26852-26941]"
    }, {
      "left" : "this.orientation = orientation;",
      "right" : "this.orientation = orientation;",
      "info" : "ExpressionStatement[26867-26898]:ExpressionStatement[26867-26898]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[26912-26930]:ExpressionStatement[26912-26930]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27128-27134]:Modifier[27128-27134]"
    }, {
      "left" : "RectangleInsets",
      "right" : "RectangleInsets",
      "info" : "SimpleType[27135-27150]:SimpleType[27135-27150]"
    }, {
      "left" : "getAxisOffset",
      "right" : "getAxisOffset",
      "info" : "SimpleName[27151-27164]:SimpleName[27151-27164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27167-27208]:Block[27167-27208]"
    }, {
      "left" : "return this.axisOffset;",
      "right" : "return this.axisOffset;",
      "info" : "ReturnStatement[27178-27201]:ReturnStatement[27178-27201]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27494-27500]:Modifier[27494-27500]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27501-27505]:PrimitiveType[27501-27505]"
    }, {
      "left" : "setAxisOffset",
      "right" : "setAxisOffset",
      "info" : "SimpleName[27506-27519]:SimpleName[27506-27519]"
    }, {
      "left" : "RectangleInsets offset",
      "right" : "RectangleInsets offset",
      "info" : "SingleVariableDeclaration[27520-27542]:SingleVariableDeclaration[27520-27542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27544-27733]:Block[27544-27733]"
    }, {
      "left" : "if (offset == null)",
      "right" : "if (offset == null)",
      "info" : "IfStatement[27555-27663]:IfStatement[27555-27663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27575-27663]:Block[27575-27663]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
      "info" : "ThrowStatement[27590-27652]:ThrowStatement[27590-27652]"
    }, {
      "left" : "this.axisOffset = offset;",
      "right" : "this.axisOffset = offset;",
      "info" : "ExpressionStatement[27673-27698]:ExpressionStatement[27673-27698]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[27708-27726]:ExpressionStatement[27708-27726]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28116-28122]:Modifier[28116-28122]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[28123-28132]:SimpleType[28123-28132]"
    }, {
      "left" : "getDomainAxis",
      "right" : "getDomainAxis",
      "info" : "SimpleName[28133-28146]:SimpleName[28133-28146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28149-28191]:Block[28149-28191]"
    }, {
      "left" : "return getDomainAxis(0);",
      "right" : "return getDomainAxis(0);",
      "info" : "ReturnStatement[28160-28184]:ReturnStatement[28160-28184]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28459-28465]:Modifier[28459-28465]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[28466-28475]:SimpleType[28466-28475]"
    }, {
      "left" : "getDomainAxis",
      "right" : "getDomainAxis",
      "info" : "SimpleName[28476-28489]:SimpleName[28476-28489]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[28490-28499]:SingleVariableDeclaration[28490-28499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28501-28926]:Block[28501-28926]"
    }, {
      "left" : "ValueAxis result = null;",
      "right" : "ValueAxis result = null;",
      "info" : "VariableDeclarationStatement[28512-28536]:VariableDeclarationStatement[28512-28536]"
    }, {
      "left" : "if (index < this.domainAxes.size())",
      "right" : "if (index < this.domainAxes.size())",
      "info" : "IfStatement[28546-28656]:IfStatement[28546-28656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28582-28656]:Block[28582-28656]"
    }, {
      "left" : "result = (ValueAxis) this.domainAxes.get(index);",
      "right" : "result = (ValueAxis) this.domainAxes.get(index);",
      "info" : "ExpressionStatement[28597-28645]:ExpressionStatement[28597-28645]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[28666-28895]:IfStatement[28666-28895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28686-28895]:Block[28686-28895]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[28701-28727]:VariableDeclarationStatement[28701-28727]"
    }, {
      "left" : "if (parent instanceof XYPlot)",
      "right" : "if (parent instanceof XYPlot)",
      "info" : "IfStatement[28741-28884]:IfStatement[28741-28884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28771-28884]:Block[28771-28884]"
    }, {
      "left" : "XYPlot xy = (XYPlot) parent;",
      "right" : "XYPlot xy = (XYPlot) parent;",
      "info" : "VariableDeclarationStatement[28790-28818]:VariableDeclarationStatement[28790-28818]"
    }, {
      "left" : "result = xy.getDomainAxis(index);",
      "right" : "result = xy.getDomainAxis(index);",
      "info" : "ExpressionStatement[28836-28869]:ExpressionStatement[28836-28869]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[28905-28919]:ReturnStatement[28905-28919]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29223-29229]:Modifier[29223-29229]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29230-29234]:PrimitiveType[29230-29234]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[29235-29248]:SimpleName[29235-29248]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[29249-29263]:SingleVariableDeclaration[29249-29263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29265-29306]:Block[29265-29306]"
    }, {
      "left" : "setDomainAxis(0, axis);",
      "right" : "setDomainAxis(0, axis);",
      "info" : "ExpressionStatement[29276-29299]:ExpressionStatement[29276-29299]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29624-29630]:Modifier[29624-29630]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29631-29635]:PrimitiveType[29631-29635]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[29636-29649]:SimpleName[29636-29649]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[29650-29659]:SingleVariableDeclaration[29650-29659]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[29661-29675]:SingleVariableDeclaration[29661-29675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29677-29728]:Block[29677-29728]"
    }, {
      "left" : "setDomainAxis(index, axis, true);",
      "right" : "setDomainAxis(index, axis, true);",
      "info" : "ExpressionStatement[29688-29721]:ExpressionStatement[29688-29721]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30033-30039]:Modifier[30033-30039]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30040-30044]:PrimitiveType[30040-30044]"
    }, {
      "left" : "setDomainAxis",
      "right" : "setDomainAxis",
      "info" : "SimpleName[30045-30058]:SimpleName[30045-30058]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[30059-30068]:SingleVariableDeclaration[30059-30068]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[30070-30084]:SingleVariableDeclaration[30070-30084]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[30086-30100]:SingleVariableDeclaration[30086-30100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30102-30552]:Block[30102-30552]"
    }, {
      "left" : "ValueAxis existing = getDomainAxis(index);",
      "right" : "ValueAxis existing = getDomainAxis(index);",
      "info" : "VariableDeclarationStatement[30113-30155]:VariableDeclarationStatement[30113-30155]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[30165-30249]:IfStatement[30165-30249]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30187-30249]:Block[30187-30249]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[30202-30238]:ExpressionStatement[30202-30238]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[30259-30322]:IfStatement[30259-30322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30277-30322]:Block[30277-30322]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[30292-30311]:ExpressionStatement[30292-30311]"
    }, {
      "left" : "this.domainAxes.set(index, axis);",
      "right" : "this.domainAxes.set(index, axis);",
      "info" : "ExpressionStatement[30332-30365]:ExpressionStatement[30332-30365]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[30375-30479]:IfStatement[30375-30479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30393-30479]:Block[30393-30479]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[30408-30425]:ExpressionStatement[30408-30425]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[30439-30468]:ExpressionStatement[30439-30468]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[30489-30545]:IfStatement[30489-30545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30501-30545]:Block[30501-30545]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[30516-30534]:ExpressionStatement[30516-30534]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30817-30823]:Modifier[30817-30823]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30824-30828]:PrimitiveType[30824-30828]"
    }, {
      "left" : "setDomainAxes",
      "right" : "setDomainAxes",
      "info" : "SimpleName[30829-30842]:SimpleName[30829-30842]"
    }, {
      "left" : "ValueAxis[] axes",
      "right" : "ValueAxis[] axes",
      "info" : "SingleVariableDeclaration[30843-30859]:SingleVariableDeclaration[30843-30859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30861-31007]:Block[30861-31007]"
    }, {
      "left" : "for (int i = 0; i < axes.length; i++)",
      "right" : "for (int i = 0; i < axes.length; i++)",
      "info" : "ForStatement[30872-30972]:ForStatement[30872-30972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30910-30972]:Block[30910-30972]"
    }, {
      "left" : "setDomainAxis(i, axes[i], false);",
      "right" : "setDomainAxis(i, axes[i], false);",
      "info" : "ExpressionStatement[30925-30958]:ExpressionStatement[30925-30958]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[30982-31000]:ExpressionStatement[30982-31000]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31217-31223]:Modifier[31217-31223]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[31224-31236]:SimpleType[31224-31236]"
    }, {
      "left" : "getDomainAxisLocation",
      "right" : "getDomainAxisLocation",
      "info" : "SimpleName[31237-31258]:SimpleName[31237-31258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31261-31333]:Block[31261-31333]"
    }, {
      "left" : "return (AxisLocation) this.domainAxisLocations.get(0);",
      "right" : "return (AxisLocation) this.domainAxisLocations.get(0);",
      "info" : "ReturnStatement[31272-31326]:ReturnStatement[31272-31326]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31614-31620]:Modifier[31614-31620]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31621-31625]:PrimitiveType[31621-31625]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[31626-31647]:SimpleName[31626-31647]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[31648-31669]:SingleVariableDeclaration[31648-31669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31671-31754]:Block[31671-31754]"
    }, {
      "left" : "setDomainAxisLocation(0, location, true);",
      "right" : "setDomainAxisLocation(0, location, true);",
      "info" : "ExpressionStatement[31706-31747]:ExpressionStatement[31706-31747]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32082-32088]:Modifier[32082-32088]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[32089-32093]:PrimitiveType[32089-32093]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[32094-32115]:SimpleName[32094-32115]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[32116-32137]:SingleVariableDeclaration[32116-32137]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[32139-32153]:SingleVariableDeclaration[32139-32153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32155-32240]:Block[32155-32240]"
    }, {
      "left" : "setDomainAxisLocation(0, location, notify);",
      "right" : "setDomainAxisLocation(0, location, notify);",
      "info" : "ExpressionStatement[32190-32233]:ExpressionStatement[32190-32233]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32485-32491]:Modifier[32485-32491]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[32492-32505]:SimpleType[32492-32505]"
    }, {
      "left" : "getDomainAxisEdge",
      "right" : "getDomainAxisEdge",
      "info" : "SimpleName[32506-32523]:SimpleName[32506-32523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32526-32643]:Block[32526-32643]"
    }, {
      "left" : "return Plot.resolveDomainAxisLocation(getDomainAxisLocation(), \r\n                this.orientation);",
      "right" : "return Plot.resolveDomainAxisLocation(getDomainAxisLocation(), \r\n                this.orientation);",
      "info" : "ReturnStatement[32537-32636]:ReturnStatement[32537-32636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32795-32801]:Modifier[32795-32801]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[32802-32805]:PrimitiveType[32802-32805]"
    }, {
      "left" : "getDomainAxisCount",
      "right" : "getDomainAxisCount",
      "info" : "SimpleName[32806-32824]:SimpleName[32806-32824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32827-32875]:Block[32827-32875]"
    }, {
      "left" : "return this.domainAxes.size();",
      "right" : "return this.domainAxes.size();",
      "info" : "ReturnStatement[32838-32868]:ReturnStatement[32838-32868]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33059-33065]:Modifier[33059-33065]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33066-33070]:PrimitiveType[33066-33070]"
    }, {
      "left" : "clearDomainAxes",
      "right" : "clearDomainAxes",
      "info" : "SimpleName[33071-33086]:SimpleName[33071-33086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33089-33394]:Block[33089-33394]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[33100-33325]:ForStatement[33100-33325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33149-33325]:Block[33149-33325]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[33164-33216]:VariableDeclarationStatement[33164-33216]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[33230-33314]:IfStatement[33230-33314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33248-33314]:Block[33248-33314]"
    }, {
      "left" : "axis.removeChangeListener(this);",
      "right" : "axis.removeChangeListener(this);",
      "info" : "ExpressionStatement[33267-33299]:ExpressionStatement[33267-33299]"
    }, {
      "left" : "this.domainAxes.clear();",
      "right" : "this.domainAxes.clear();",
      "info" : "ExpressionStatement[33335-33359]:ExpressionStatement[33335-33359]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[33369-33387]:ExpressionStatement[33369-33387]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33457-33463]:Modifier[33457-33463]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[33464-33468]:PrimitiveType[33464-33468]"
    }, {
      "left" : "configureDomainAxes",
      "right" : "configureDomainAxes",
      "info" : "SimpleName[33469-33488]:SimpleName[33469-33488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33491-33719]:Block[33491-33719]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[33502-33712]:ForStatement[33502-33712]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33551-33712]:Block[33551-33712]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[33566-33618]:VariableDeclarationStatement[33566-33618]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[33632-33701]:IfStatement[33632-33701]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33650-33701]:Block[33650-33701]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[33669-33686]:ExpressionStatement[33669-33686]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34106-34112]:Modifier[34106-34112]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[34113-34125]:SimpleType[34113-34125]"
    }, {
      "left" : "getDomainAxisLocation",
      "right" : "getDomainAxisLocation",
      "info" : "SimpleName[34126-34147]:SimpleName[34126-34147]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[34148-34157]:SingleVariableDeclaration[34148-34157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34159-34484]:Block[34159-34484]"
    }, {
      "left" : "AxisLocation result = null;",
      "right" : "AxisLocation result = null;",
      "info" : "VariableDeclarationStatement[34170-34197]:VariableDeclarationStatement[34170-34197]"
    }, {
      "left" : "if (index < this.domainAxisLocations.size())",
      "right" : "if (index < this.domainAxisLocations.size())",
      "info" : "IfStatement[34207-34338]:IfStatement[34207-34338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34252-34338]:Block[34252-34338]"
    }, {
      "left" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
      "right" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
      "info" : "ExpressionStatement[34267-34327]:ExpressionStatement[34267-34327]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[34348-34453]:IfStatement[34348-34453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34368-34453]:Block[34368-34453]"
    }, {
      "left" : "result = AxisLocation.getOpposite(getDomainAxisLocation());",
      "right" : "result = AxisLocation.getOpposite(getDomainAxisLocation());",
      "info" : "ExpressionStatement[34383-34442]:ExpressionStatement[34383-34442]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[34463-34477]:ReturnStatement[34463-34477]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[34820-34826]:Modifier[34820-34826]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[34827-34831]:PrimitiveType[34827-34831]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[34832-34853]:SimpleName[34832-34853]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[34854-34863]:SingleVariableDeclaration[34854-34863]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[34865-34886]:SingleVariableDeclaration[34865-34886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34888-34975]:Block[34888-34975]"
    }, {
      "left" : "setDomainAxisLocation(index, location, true);",
      "right" : "setDomainAxisLocation(index, location, true);",
      "info" : "ExpressionStatement[34923-34968]:ExpressionStatement[34923-34968]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35467-35473]:Modifier[35467-35473]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[35474-35478]:PrimitiveType[35474-35478]"
    }, {
      "left" : "setDomainAxisLocation",
      "right" : "setDomainAxisLocation",
      "info" : "SimpleName[35479-35500]:SimpleName[35479-35500]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[35501-35510]:SingleVariableDeclaration[35501-35510]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[35512-35533]:SingleVariableDeclaration[35512-35533]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[35549-35563]:SingleVariableDeclaration[35549-35563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35565-35888]:Block[35565-35888]"
    }, {
      "left" : "if (index == 0 && location == null)",
      "right" : "if (index == 0 && location == null)",
      "info" : "IfStatement[35586-35751]:IfStatement[35586-35751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35622-35751]:Block[35622-35751]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "info" : "ThrowStatement[35637-35740]:ThrowStatement[35637-35740]"
    }, {
      "left" : "this.domainAxisLocations.set(index, location);",
      "right" : "this.domainAxisLocations.set(index, location);",
      "info" : "ExpressionStatement[35761-35807]:ExpressionStatement[35761-35807]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[35817-35873]:IfStatement[35817-35873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35829-35873]:Block[35829-35873]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[35844-35862]:ExpressionStatement[35844-35862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36083-36089]:Modifier[36083-36089]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[36090-36103]:SimpleType[36090-36103]"
    }, {
      "left" : "getDomainAxisEdge",
      "right" : "getDomainAxisEdge",
      "info" : "SimpleName[36104-36121]:SimpleName[36104-36121]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[36122-36131]:SingleVariableDeclaration[36122-36131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36133-36447]:Block[36133-36447]"
    }, {
      "left" : "AxisLocation location = getDomainAxisLocation(index);",
      "right" : "AxisLocation location = getDomainAxisLocation(index);",
      "info" : "VariableDeclarationStatement[36144-36197]:VariableDeclarationStatement[36144-36197]"
    }, {
      "left" : "RectangleEdge result = Plot.resolveDomainAxisLocation(location, \r\n                this.orientation);",
      "right" : "RectangleEdge result = Plot.resolveDomainAxisLocation(location, \r\n                this.orientation);",
      "info" : "VariableDeclarationStatement[36207-36307]:VariableDeclarationStatement[36207-36307]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[36317-36416]:IfStatement[36317-36416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36337-36416]:Block[36337-36416]"
    }, {
      "left" : "result = RectangleEdge.opposite(getDomainAxisEdge());",
      "right" : "result = RectangleEdge.opposite(getDomainAxisEdge());",
      "info" : "ExpressionStatement[36352-36405]:ExpressionStatement[36352-36405]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[36426-36440]:ReturnStatement[36426-36440]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36795-36801]:Modifier[36795-36801]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[36802-36811]:SimpleType[36802-36811]"
    }, {
      "left" : "getRangeAxis",
      "right" : "getRangeAxis",
      "info" : "SimpleName[36812-36824]:SimpleName[36812-36824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36827-36868]:Block[36827-36868]"
    }, {
      "left" : "return getRangeAxis(0);",
      "right" : "return getRangeAxis(0);",
      "info" : "ReturnStatement[36838-36861]:ReturnStatement[36838-36861]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37157-37163]:Modifier[37157-37163]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[37164-37168]:PrimitiveType[37164-37168]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[37169-37181]:SimpleName[37169-37181]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[37182-37196]:SingleVariableDeclaration[37182-37196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37199-37686]:Block[37199-37686]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[37212-37275]:IfStatement[37212-37275]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37230-37275]:Block[37230-37275]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[37245-37264]:ExpressionStatement[37245-37264]"
    }, {
      "left" : "ValueAxis existing = getRangeAxis();",
      "right" : "ValueAxis existing = getRangeAxis();",
      "info" : "VariableDeclarationStatement[37365-37401]:VariableDeclarationStatement[37365-37401]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[37411-37495]:IfStatement[37411-37495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37433-37495]:Block[37433-37495]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[37448-37484]:ExpressionStatement[37448-37484]"
    }, {
      "left" : "this.rangeAxes.set(0, axis);",
      "right" : "this.rangeAxes.set(0, axis);",
      "info" : "ExpressionStatement[37507-37535]:ExpressionStatement[37507-37535]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[37545-37649]:IfStatement[37545-37649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37563-37649]:Block[37563-37649]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[37578-37595]:ExpressionStatement[37578-37595]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[37609-37638]:ExpressionStatement[37609-37638]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[37659-37677]:ExpressionStatement[37659-37677]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37890-37896]:Modifier[37890-37896]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[37897-37909]:SimpleType[37897-37909]"
    }, {
      "left" : "getRangeAxisLocation",
      "right" : "getRangeAxisLocation",
      "info" : "SimpleName[37910-37930]:SimpleName[37910-37930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37933-38004]:Block[37933-38004]"
    }, {
      "left" : "return (AxisLocation) this.rangeAxisLocations.get(0);",
      "right" : "return (AxisLocation) this.rangeAxisLocations.get(0);",
      "info" : "ReturnStatement[37944-37997]:ReturnStatement[37944-37997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38282-38288]:Modifier[38282-38288]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38289-38293]:PrimitiveType[38289-38293]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[38294-38314]:SimpleName[38294-38314]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[38315-38336]:SingleVariableDeclaration[38315-38336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38338-38420]:Block[38338-38420]"
    }, {
      "left" : "setRangeAxisLocation(0, location, true);",
      "right" : "setRangeAxisLocation(0, location, true);",
      "info" : "ExpressionStatement[38373-38413]:ExpressionStatement[38373-38413]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38754-38760]:Modifier[38754-38760]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38761-38765]:PrimitiveType[38761-38765]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[38766-38786]:SimpleName[38766-38786]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[38787-38808]:SingleVariableDeclaration[38787-38808]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[38810-38824]:SingleVariableDeclaration[38810-38824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38826-38910]:Block[38826-38910]"
    }, {
      "left" : "setRangeAxisLocation(0, location, notify);",
      "right" : "setRangeAxisLocation(0, location, notify);",
      "info" : "ExpressionStatement[38861-38903]:ExpressionStatement[38861-38903]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39111-39117]:Modifier[39111-39117]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[39118-39131]:SimpleType[39118-39131]"
    }, {
      "left" : "getRangeAxisEdge",
      "right" : "getRangeAxisEdge",
      "info" : "SimpleName[39132-39148]:SimpleName[39132-39148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39151-39266]:Block[39151-39266]"
    }, {
      "left" : "return Plot.resolveRangeAxisLocation(getRangeAxisLocation(), \r\n                this.orientation);",
      "right" : "return Plot.resolveRangeAxisLocation(getRangeAxisLocation(), \r\n                this.orientation);",
      "info" : "ReturnStatement[39162-39259]:ReturnStatement[39162-39259]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39483-39489]:Modifier[39483-39489]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[39490-39499]:SimpleType[39490-39499]"
    }, {
      "left" : "getRangeAxis",
      "right" : "getRangeAxis",
      "info" : "SimpleName[39500-39512]:SimpleName[39500-39512]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[39513-39522]:SingleVariableDeclaration[39513-39522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39524-39946]:Block[39524-39946]"
    }, {
      "left" : "ValueAxis result = null;",
      "right" : "ValueAxis result = null;",
      "info" : "VariableDeclarationStatement[39535-39559]:VariableDeclarationStatement[39535-39559]"
    }, {
      "left" : "if (index < this.rangeAxes.size())",
      "right" : "if (index < this.rangeAxes.size())",
      "info" : "IfStatement[39569-39677]:IfStatement[39569-39677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39604-39677]:Block[39604-39677]"
    }, {
      "left" : "result = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "result = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "ExpressionStatement[39619-39666]:ExpressionStatement[39619-39666]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[39687-39915]:IfStatement[39687-39915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39707-39915]:Block[39707-39915]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[39722-39748]:VariableDeclarationStatement[39722-39748]"
    }, {
      "left" : "if (parent instanceof XYPlot)",
      "right" : "if (parent instanceof XYPlot)",
      "info" : "IfStatement[39762-39904]:IfStatement[39762-39904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39792-39904]:Block[39792-39904]"
    }, {
      "left" : "XYPlot xy = (XYPlot) parent;",
      "right" : "XYPlot xy = (XYPlot) parent;",
      "info" : "VariableDeclarationStatement[39811-39839]:VariableDeclarationStatement[39811-39839]"
    }, {
      "left" : "result = xy.getRangeAxis(index);",
      "right" : "result = xy.getRangeAxis(index);",
      "info" : "ExpressionStatement[39857-39889]:ExpressionStatement[39857-39889]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[39925-39939]:ReturnStatement[39925-39939]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40219-40225]:Modifier[40219-40225]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40226-40230]:PrimitiveType[40226-40230]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[40231-40243]:SimpleName[40231-40243]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[40244-40253]:SingleVariableDeclaration[40244-40253]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[40255-40269]:SingleVariableDeclaration[40255-40269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40271-40321]:Block[40271-40321]"
    }, {
      "left" : "setRangeAxis(index, axis, true);",
      "right" : "setRangeAxis(index, axis, true);",
      "info" : "ExpressionStatement[40282-40314]:ExpressionStatement[40282-40314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40656-40662]:Modifier[40656-40662]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[40663-40667]:PrimitiveType[40663-40667]"
    }, {
      "left" : "setRangeAxis",
      "right" : "setRangeAxis",
      "info" : "SimpleName[40668-40680]:SimpleName[40668-40680]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[40681-40690]:SingleVariableDeclaration[40681-40690]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[40692-40706]:SingleVariableDeclaration[40692-40706]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[40708-40722]:SingleVariableDeclaration[40708-40722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40724-41172]:Block[40724-41172]"
    }, {
      "left" : "ValueAxis existing = getRangeAxis(index);",
      "right" : "ValueAxis existing = getRangeAxis(index);",
      "info" : "VariableDeclarationStatement[40735-40776]:VariableDeclarationStatement[40735-40776]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[40786-40870]:IfStatement[40786-40870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40808-40870]:Block[40808-40870]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[40823-40859]:ExpressionStatement[40823-40859]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[40880-40943]:IfStatement[40880-40943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40898-40943]:Block[40898-40943]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[40913-40932]:ExpressionStatement[40913-40932]"
    }, {
      "left" : "this.rangeAxes.set(index, axis);",
      "right" : "this.rangeAxes.set(index, axis);",
      "info" : "ExpressionStatement[40953-40985]:ExpressionStatement[40953-40985]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[40995-41099]:IfStatement[40995-41099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41013-41099]:Block[41013-41099]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[41028-41045]:ExpressionStatement[41028-41045]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[41059-41088]:ExpressionStatement[41059-41088]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[41109-41165]:IfStatement[41109-41165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41121-41165]:Block[41121-41165]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[41136-41154]:ExpressionStatement[41136-41154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41437-41443]:Modifier[41437-41443]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[41444-41448]:PrimitiveType[41444-41448]"
    }, {
      "left" : "setRangeAxes",
      "right" : "setRangeAxes",
      "info" : "SimpleName[41449-41461]:SimpleName[41449-41461]"
    }, {
      "left" : "ValueAxis[] axes",
      "right" : "ValueAxis[] axes",
      "info" : "SingleVariableDeclaration[41462-41478]:SingleVariableDeclaration[41462-41478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41480-41625]:Block[41480-41625]"
    }, {
      "left" : "for (int i = 0; i < axes.length; i++)",
      "right" : "for (int i = 0; i < axes.length; i++)",
      "info" : "ForStatement[41491-41590]:ForStatement[41491-41590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41529-41590]:Block[41529-41590]"
    }, {
      "left" : "setRangeAxis(i, axes[i], false);",
      "right" : "setRangeAxis(i, axes[i], false);",
      "info" : "ExpressionStatement[41544-41576]:ExpressionStatement[41544-41576]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[41600-41618]:ExpressionStatement[41600-41618]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41781-41787]:Modifier[41781-41787]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[41788-41791]:PrimitiveType[41788-41791]"
    }, {
      "left" : "getRangeAxisCount",
      "right" : "getRangeAxisCount",
      "info" : "SimpleName[41792-41809]:SimpleName[41792-41809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41812-41859]:Block[41812-41859]"
    }, {
      "left" : "return this.rangeAxes.size();",
      "right" : "return this.rangeAxes.size();",
      "info" : "ReturnStatement[41823-41852]:ReturnStatement[41823-41852]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42043-42049]:Modifier[42043-42049]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42050-42054]:PrimitiveType[42050-42054]"
    }, {
      "left" : "clearRangeAxes",
      "right" : "clearRangeAxes",
      "info" : "SimpleName[42055-42069]:SimpleName[42055-42069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42072-42374]:Block[42072-42374]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[42083-42306]:ForStatement[42083-42306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42131-42306]:Block[42131-42306]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[42146-42197]:VariableDeclarationStatement[42146-42197]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[42211-42295]:IfStatement[42211-42295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42229-42295]:Block[42229-42295]"
    }, {
      "left" : "axis.removeChangeListener(this);",
      "right" : "axis.removeChangeListener(this);",
      "info" : "ExpressionStatement[42248-42280]:ExpressionStatement[42248-42280]"
    }, {
      "left" : "this.rangeAxes.clear();",
      "right" : "this.rangeAxes.clear();",
      "info" : "ExpressionStatement[42316-42339]:ExpressionStatement[42316-42339]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[42349-42367]:ExpressionStatement[42349-42367]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42480-42486]:Modifier[42480-42486]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[42487-42491]:PrimitiveType[42487-42491]"
    }, {
      "left" : "configureRangeAxes",
      "right" : "configureRangeAxes",
      "info" : "SimpleName[42492-42510]:SimpleName[42492-42510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42513-42739]:Block[42513-42739]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[42524-42732]:ForStatement[42524-42732]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42572-42732]:Block[42572-42732]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[42587-42638]:VariableDeclarationStatement[42587-42638]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[42652-42721]:IfStatement[42652-42721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42670-42721]:Block[42670-42721]"
    }, {
      "left" : "axis.configure();",
      "right" : "axis.configure();",
      "info" : "ExpressionStatement[42689-42706]:ExpressionStatement[42689-42706]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43123-43129]:Modifier[43123-43129]"
    }, {
      "left" : "AxisLocation",
      "right" : "AxisLocation",
      "info" : "SimpleType[43130-43142]:SimpleType[43130-43142]"
    }, {
      "left" : "getRangeAxisLocation",
      "right" : "getRangeAxisLocation",
      "info" : "SimpleName[43143-43163]:SimpleName[43143-43163]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[43164-43173]:SingleVariableDeclaration[43164-43173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43175-43497]:Block[43175-43497]"
    }, {
      "left" : "AxisLocation result = null;",
      "right" : "AxisLocation result = null;",
      "info" : "VariableDeclarationStatement[43186-43213]:VariableDeclarationStatement[43186-43213]"
    }, {
      "left" : "if (index < this.rangeAxisLocations.size())",
      "right" : "if (index < this.rangeAxisLocations.size())",
      "info" : "IfStatement[43223-43352]:IfStatement[43223-43352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43267-43352]:Block[43267-43352]"
    }, {
      "left" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
      "right" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
      "info" : "ExpressionStatement[43282-43341]:ExpressionStatement[43282-43341]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[43362-43466]:IfStatement[43362-43466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43382-43466]:Block[43382-43466]"
    }, {
      "left" : "result = AxisLocation.getOpposite(getRangeAxisLocation());",
      "right" : "result = AxisLocation.getOpposite(getRangeAxisLocation());",
      "info" : "ExpressionStatement[43397-43455]:ExpressionStatement[43397-43455]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[43476-43490]:ReturnStatement[43476-43490]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43803-43809]:Modifier[43803-43809]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[43810-43814]:PrimitiveType[43810-43814]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[43815-43835]:SimpleName[43815-43835]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[43836-43845]:SingleVariableDeclaration[43836-43845]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[43847-43868]:SingleVariableDeclaration[43847-43868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43870-43956]:Block[43870-43956]"
    }, {
      "left" : "setRangeAxisLocation(index, location, true);",
      "right" : "setRangeAxisLocation(index, location, true);",
      "info" : "ExpressionStatement[43905-43949]:ExpressionStatement[43905-43949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[44452-44458]:Modifier[44452-44458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[44459-44463]:PrimitiveType[44459-44463]"
    }, {
      "left" : "setRangeAxisLocation",
      "right" : "setRangeAxisLocation",
      "info" : "SimpleName[44464-44484]:SimpleName[44464-44484]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[44485-44494]:SingleVariableDeclaration[44485-44494]"
    }, {
      "left" : "AxisLocation location",
      "right" : "AxisLocation location",
      "info" : "SingleVariableDeclaration[44496-44517]:SingleVariableDeclaration[44496-44517]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[44533-44547]:SingleVariableDeclaration[44533-44547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44549-44866]:Block[44549-44866]"
    }, {
      "left" : "if (index == 0 && location == null)",
      "right" : "if (index == 0 && location == null)",
      "info" : "IfStatement[44570-44735]:IfStatement[44570-44735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44606-44735]:Block[44606-44735]"
    }, {
      "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
      "info" : "ThrowStatement[44621-44724]:ThrowStatement[44621-44724]"
    }, {
      "left" : "this.rangeAxisLocations.set(index, location);",
      "right" : "this.rangeAxisLocations.set(index, location);",
      "info" : "ExpressionStatement[44745-44790]:ExpressionStatement[44745-44790]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[44800-44856]:IfStatement[44800-44856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44812-44856]:Block[44812-44856]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[44827-44845]:ExpressionStatement[44827-44845]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45095-45101]:Modifier[45095-45101]"
    }, {
      "left" : "RectangleEdge",
      "right" : "RectangleEdge",
      "info" : "SimpleType[45102-45115]:SimpleType[45102-45115]"
    }, {
      "left" : "getRangeAxisEdge",
      "right" : "getRangeAxisEdge",
      "info" : "SimpleName[45116-45132]:SimpleName[45116-45132]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[45133-45142]:SingleVariableDeclaration[45133-45142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45144-45455]:Block[45144-45455]"
    }, {
      "left" : "AxisLocation location = getRangeAxisLocation(index);",
      "right" : "AxisLocation location = getRangeAxisLocation(index);",
      "info" : "VariableDeclarationStatement[45155-45207]:VariableDeclarationStatement[45155-45207]"
    }, {
      "left" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location, \r\n                this.orientation);",
      "right" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location, \r\n                this.orientation);",
      "info" : "VariableDeclarationStatement[45217-45316]:VariableDeclarationStatement[45217-45316]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[45326-45424]:IfStatement[45326-45424]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45346-45424]:Block[45346-45424]"
    }, {
      "left" : "result = RectangleEdge.opposite(getRangeAxisEdge());",
      "right" : "result = RectangleEdge.opposite(getRangeAxisEdge());",
      "info" : "ExpressionStatement[45361-45413]:ExpressionStatement[45361-45413]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[45434-45448]:ReturnStatement[45434-45448]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45680-45686]:Modifier[45680-45686]"
    }, {
      "left" : "XYDataset",
      "right" : "XYDataset",
      "info" : "SimpleType[45687-45696]:SimpleType[45687-45696]"
    }, {
      "left" : "getDataset",
      "right" : "getDataset",
      "info" : "SimpleName[45697-45707]:SimpleName[45697-45707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45710-45749]:Block[45710-45749]"
    }, {
      "left" : "return getDataset(0);",
      "right" : "return getDataset(0);",
      "info" : "ReturnStatement[45721-45742]:ReturnStatement[45721-45742]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45967-45973]:Modifier[45967-45973]"
    }, {
      "left" : "XYDataset",
      "right" : "XYDataset",
      "info" : "SimpleType[45974-45983]:SimpleType[45974-45983]"
    }, {
      "left" : "getDataset",
      "right" : "getDataset",
      "info" : "SimpleName[45984-45994]:SimpleName[45984-45994]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[45995-46004]:SingleVariableDeclaration[45995-46004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46006-46188]:Block[46006-46188]"
    }, {
      "left" : "XYDataset result = null;",
      "right" : "XYDataset result = null;",
      "info" : "VariableDeclarationStatement[46017-46041]:VariableDeclarationStatement[46017-46041]"
    }, {
      "left" : "if (this.datasets.size() > index)",
      "right" : "if (this.datasets.size() > index)",
      "info" : "IfStatement[46051-46157]:IfStatement[46051-46157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46085-46157]:Block[46085-46157]"
    }, {
      "left" : "result = (XYDataset) this.datasets.get(index);",
      "right" : "result = (XYDataset) this.datasets.get(index);",
      "info" : "ExpressionStatement[46100-46146]:ExpressionStatement[46100-46146]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[46167-46181]:ReturnStatement[46167-46181]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46469-46475]:Modifier[46469-46475]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46476-46480]:PrimitiveType[46476-46480]"
    }, {
      "left" : "setDataset",
      "right" : "setDataset",
      "info" : "SimpleName[46481-46491]:SimpleName[46481-46491]"
    }, {
      "left" : "XYDataset dataset",
      "right" : "XYDataset dataset",
      "info" : "SingleVariableDeclaration[46492-46509]:SingleVariableDeclaration[46492-46509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46511-46552]:Block[46511-46552]"
    }, {
      "left" : "setDataset(0, dataset);",
      "right" : "setDataset(0, dataset);",
      "info" : "ExpressionStatement[46522-46545]:ExpressionStatement[46522-46545]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46770-46776]:Modifier[46770-46776]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[46777-46781]:PrimitiveType[46777-46781]"
    }, {
      "left" : "setDataset",
      "right" : "setDataset",
      "info" : "SimpleName[46782-46792]:SimpleName[46782-46792]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[46793-46802]:SingleVariableDeclaration[46793-46802]"
    }, {
      "left" : "XYDataset dataset",
      "right" : "XYDataset dataset",
      "info" : "SingleVariableDeclaration[46804-46821]:SingleVariableDeclaration[46804-46821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46823-47267]:Block[46823-47267]"
    }, {
      "left" : "XYDataset existing = getDataset(index);",
      "right" : "XYDataset existing = getDataset(index);",
      "info" : "VariableDeclarationStatement[46834-46873]:VariableDeclarationStatement[46834-46873]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[46883-46967]:IfStatement[46883-46967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46905-46967]:Block[46905-46967]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[46920-46956]:ExpressionStatement[46920-46956]"
    }, {
      "left" : "this.datasets.set(index, dataset);",
      "right" : "this.datasets.set(index, dataset);",
      "info" : "ExpressionStatement[46977-47011]:ExpressionStatement[46977-47011]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[47021-47100]:IfStatement[47021-47100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47042-47100]:Block[47042-47100]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[47057-47089]:ExpressionStatement[47057-47089]"
    }, {
      "left" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
      "right" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
      "info" : "VariableDeclarationStatement[47163-47228]:VariableDeclarationStatement[47163-47228]"
    }, {
      "left" : "datasetChanged(event);",
      "right" : "datasetChanged(event);",
      "info" : "ExpressionStatement[47238-47260]:ExpressionStatement[47238-47260]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47381-47387]:Modifier[47381-47387]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[47388-47391]:PrimitiveType[47388-47391]"
    }, {
      "left" : "getDatasetCount",
      "right" : "getDatasetCount",
      "info" : "SimpleName[47392-47407]:SimpleName[47392-47407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47410-47456]:Block[47410-47456]"
    }, {
      "left" : "return this.datasets.size();",
      "right" : "return this.datasets.size();",
      "info" : "ReturnStatement[47421-47449]:ReturnStatement[47421-47449]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47719-47725]:Modifier[47719-47725]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[47726-47729]:PrimitiveType[47726-47729]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[47730-47737]:SimpleName[47730-47737]"
    }, {
      "left" : "XYDataset dataset",
      "right" : "XYDataset dataset",
      "info" : "SingleVariableDeclaration[47738-47755]:SingleVariableDeclaration[47738-47755]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47757-48004]:Block[47757-48004]"
    }, {
      "left" : "int result = -1;",
      "right" : "int result = -1;",
      "info" : "VariableDeclarationStatement[47768-47784]:VariableDeclarationStatement[47768-47784]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[47794-47973]:ForStatement[47794-47973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47841-47973]:Block[47841-47973]"
    }, {
      "left" : "if (dataset == this.datasets.get(i))",
      "right" : "if (dataset == this.datasets.get(i))",
      "info" : "IfStatement[47856-47962]:IfStatement[47856-47962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47893-47962]:Block[47893-47962]"
    }, {
      "left" : "result = i;",
      "right" : "result = i;",
      "info" : "ExpressionStatement[47912-47923]:ExpressionStatement[47912-47923]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[47941-47947]:BreakStatement[47941-47947]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[47983-47997]:ReturnStatement[47983-47997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48343-48349]:Modifier[48343-48349]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48350-48354]:PrimitiveType[48350-48354]"
    }, {
      "left" : "mapDatasetToDomainAxis",
      "right" : "mapDatasetToDomainAxis",
      "info" : "SimpleName[48355-48377]:SimpleName[48355-48377]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[48378-48387]:SingleVariableDeclaration[48378-48387]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[48389-48402]:SingleVariableDeclaration[48389-48402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48404-48648]:Block[48404-48648]"
    }, {
      "left" : "this.datasetToDomainAxisMap.put(new Integer(index), \r\n                new Integer(axisIndex));",
      "right" : "this.datasetToDomainAxisMap.put(new Integer(index), \r\n                new Integer(axisIndex));",
      "info" : "ExpressionStatement[48415-48509]:ExpressionStatement[48415-48509]"
    }, {
      "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "info" : "ExpressionStatement[48577-48641]:ExpressionStatement[48577-48641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48987-48993]:Modifier[48987-48993]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[48994-48998]:PrimitiveType[48994-48998]"
    }, {
      "left" : "mapDatasetToRangeAxis",
      "right" : "mapDatasetToRangeAxis",
      "info" : "SimpleName[48999-49020]:SimpleName[48999-49020]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[49021-49030]:SingleVariableDeclaration[49021-49030]"
    }, {
      "left" : "int axisIndex",
      "right" : "int axisIndex",
      "info" : "SingleVariableDeclaration[49032-49045]:SingleVariableDeclaration[49032-49045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49047-49290]:Block[49047-49290]"
    }, {
      "left" : "this.datasetToRangeAxisMap.put(new Integer(index), \r\n                new Integer(axisIndex));",
      "right" : "this.datasetToRangeAxisMap.put(new Integer(index), \r\n                new Integer(axisIndex));",
      "info" : "ExpressionStatement[49058-49151]:ExpressionStatement[49058-49151]"
    }, {
      "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
      "info" : "ExpressionStatement[49219-49283]:ExpressionStatement[49219-49283]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49493-49499]:Modifier[49493-49499]"
    }, {
      "left" : "XYItemRenderer",
      "right" : "XYItemRenderer",
      "info" : "SimpleType[49500-49514]:SimpleType[49500-49514]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[49515-49526]:SimpleName[49515-49526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49529-49569]:Block[49529-49569]"
    }, {
      "left" : "return getRenderer(0);",
      "right" : "return getRenderer(0);",
      "info" : "ReturnStatement[49540-49562]:ReturnStatement[49540-49562]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49834-49840]:Modifier[49834-49840]"
    }, {
      "left" : "XYItemRenderer",
      "right" : "XYItemRenderer",
      "info" : "SimpleType[49841-49855]:SimpleType[49841-49855]"
    }, {
      "left" : "getRenderer",
      "right" : "getRenderer",
      "info" : "SimpleName[49856-49867]:SimpleName[49856-49867]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[49868-49877]:SingleVariableDeclaration[49868-49877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49879-50075]:Block[49879-50075]"
    }, {
      "left" : "XYItemRenderer result = null;",
      "right" : "XYItemRenderer result = null;",
      "info" : "VariableDeclarationStatement[49890-49919]:VariableDeclarationStatement[49890-49919]"
    }, {
      "left" : "if (this.renderers.size() > index)",
      "right" : "if (this.renderers.size() > index)",
      "info" : "IfStatement[49929-50042]:IfStatement[49929-50042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49964-50042]:Block[49964-50042]"
    }, {
      "left" : "result = (XYItemRenderer) this.renderers.get(index);",
      "right" : "result = (XYItemRenderer) this.renderers.get(index);",
      "info" : "ExpressionStatement[49979-50031]:ExpressionStatement[49979-50031]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[50052-50066]:ReturnStatement[50052-50066]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50419-50425]:Modifier[50419-50425]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[50426-50430]:PrimitiveType[50426-50430]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[50431-50442]:SimpleName[50431-50442]"
    }, {
      "left" : "XYItemRenderer renderer",
      "right" : "XYItemRenderer renderer",
      "info" : "SingleVariableDeclaration[50443-50466]:SingleVariableDeclaration[50443-50466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50468-50511]:Block[50468-50511]"
    }, {
      "left" : "setRenderer(0, renderer);",
      "right" : "setRenderer(0, renderer);",
      "info" : "ExpressionStatement[50479-50504]:ExpressionStatement[50479-50504]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50754-50760]:Modifier[50754-50760]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[50761-50765]:PrimitiveType[50761-50765]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[50766-50777]:SimpleName[50766-50777]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[50778-50787]:SingleVariableDeclaration[50778-50787]"
    }, {
      "left" : "XYItemRenderer renderer",
      "right" : "XYItemRenderer renderer",
      "info" : "SingleVariableDeclaration[50789-50812]:SingleVariableDeclaration[50789-50812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50814-50867]:Block[50814-50867]"
    }, {
      "left" : "setRenderer(index, renderer, true);",
      "right" : "setRenderer(index, renderer, true);",
      "info" : "ExpressionStatement[50825-50860]:ExpressionStatement[50825-50860]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51151-51157]:Modifier[51151-51157]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51158-51162]:PrimitiveType[51158-51162]"
    }, {
      "left" : "setRenderer",
      "right" : "setRenderer",
      "info" : "SimpleName[51163-51174]:SimpleName[51163-51174]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[51175-51184]:SingleVariableDeclaration[51175-51184]"
    }, {
      "left" : "XYItemRenderer renderer",
      "right" : "XYItemRenderer renderer",
      "info" : "SingleVariableDeclaration[51186-51209]:SingleVariableDeclaration[51186-51209]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[51241-51255]:SingleVariableDeclaration[51241-51255]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51257-51717]:Block[51257-51717]"
    }, {
      "left" : "XYItemRenderer existing = getRenderer(index);",
      "right" : "XYItemRenderer existing = getRenderer(index);",
      "info" : "VariableDeclarationStatement[51268-51313]:VariableDeclarationStatement[51268-51313]"
    }, {
      "left" : "if (existing != null)",
      "right" : "if (existing != null)",
      "info" : "IfStatement[51323-51407]:IfStatement[51323-51407]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51345-51407]:Block[51345-51407]"
    }, {
      "left" : "existing.removeChangeListener(this);",
      "right" : "existing.removeChangeListener(this);",
      "info" : "ExpressionStatement[51360-51396]:ExpressionStatement[51360-51396]"
    }, {
      "left" : "this.renderers.set(index, renderer);",
      "right" : "this.renderers.set(index, renderer);",
      "info" : "ExpressionStatement[51417-51453]:ExpressionStatement[51417-51453]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[51463-51581]:IfStatement[51463-51581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51485-51581]:Block[51485-51581]"
    }, {
      "left" : "renderer.setPlot(this);",
      "right" : "renderer.setPlot(this);",
      "info" : "ExpressionStatement[51500-51523]:ExpressionStatement[51500-51523]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[51537-51570]:ExpressionStatement[51537-51570]"
    }, {
      "left" : "configureDomainAxes();",
      "right" : "configureDomainAxes();",
      "info" : "ExpressionStatement[51591-51613]:ExpressionStatement[51591-51613]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[51623-51644]:ExpressionStatement[51623-51644]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[51654-51710]:IfStatement[51654-51710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51666-51710]:Block[51666-51710]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[51681-51699]:ExpressionStatement[51681-51699]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51941-51947]:Modifier[51941-51947]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[51948-51952]:PrimitiveType[51948-51952]"
    }, {
      "left" : "setRenderers",
      "right" : "setRenderers",
      "info" : "SimpleName[51953-51965]:SimpleName[51953-51965]"
    }, {
      "left" : "XYItemRenderer[] renderers",
      "right" : "XYItemRenderer[] renderers",
      "info" : "SingleVariableDeclaration[51966-51992]:SingleVariableDeclaration[51966-51992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51994-52148]:Block[51994-52148]"
    }, {
      "left" : "for (int i = 0; i < renderers.length; i++)",
      "right" : "for (int i = 0; i < renderers.length; i++)",
      "info" : "ForStatement[52005-52113]:ForStatement[52005-52113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52048-52113]:Block[52048-52113]"
    }, {
      "left" : "setRenderer(i, renderers[i], false);",
      "right" : "setRenderer(i, renderers[i], false);",
      "info" : "ExpressionStatement[52063-52099]:ExpressionStatement[52063-52099]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[52123-52141]:ExpressionStatement[52123-52141]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52355-52361]:Modifier[52355-52361]"
    }, {
      "left" : "DatasetRenderingOrder",
      "right" : "DatasetRenderingOrder",
      "info" : "SimpleType[52362-52383]:SimpleType[52362-52383]"
    }, {
      "left" : "getDatasetRenderingOrder",
      "right" : "getDatasetRenderingOrder",
      "info" : "SimpleName[52384-52408]:SimpleName[52384-52408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52411-52463]:Block[52411-52463]"
    }, {
      "left" : "return this.datasetRenderingOrder;",
      "right" : "return this.datasetRenderingOrder;",
      "info" : "ReturnStatement[52422-52456]:ReturnStatement[52422-52456]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52901-52907]:Modifier[52901-52907]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[52908-52912]:PrimitiveType[52908-52912]"
    }, {
      "left" : "setDatasetRenderingOrder",
      "right" : "setDatasetRenderingOrder",
      "info" : "SimpleName[52913-52937]:SimpleName[52913-52937]"
    }, {
      "left" : "DatasetRenderingOrder order",
      "right" : "DatasetRenderingOrder order",
      "info" : "SingleVariableDeclaration[52938-52965]:SingleVariableDeclaration[52938-52965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52967-53164]:Block[52967-53164]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[52978-53084]:IfStatement[52978-53084]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52997-53084]:Block[52997-53084]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[53012-53073]:ThrowStatement[53012-53073]"
    }, {
      "left" : "this.datasetRenderingOrder = order;",
      "right" : "this.datasetRenderingOrder = order;",
      "info" : "ExpressionStatement[53094-53129]:ExpressionStatement[53094-53129]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[53139-53157]:ExpressionStatement[53139-53157]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53364-53370]:Modifier[53364-53370]"
    }, {
      "left" : "SeriesRenderingOrder",
      "right" : "SeriesRenderingOrder",
      "info" : "SimpleType[53371-53391]:SimpleType[53371-53391]"
    }, {
      "left" : "getSeriesRenderingOrder",
      "right" : "getSeriesRenderingOrder",
      "info" : "SimpleName[53392-53415]:SimpleName[53392-53415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53418-53469]:Block[53418-53469]"
    }, {
      "left" : "return this.seriesRenderingOrder;",
      "right" : "return this.seriesRenderingOrder;",
      "info" : "ReturnStatement[53429-53462]:ReturnStatement[53429-53462]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[53890-53896]:Modifier[53890-53896]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[53897-53901]:PrimitiveType[53897-53901]"
    }, {
      "left" : "setSeriesRenderingOrder",
      "right" : "setSeriesRenderingOrder",
      "info" : "SimpleName[53902-53925]:SimpleName[53902-53925]"
    }, {
      "left" : "SeriesRenderingOrder order",
      "right" : "SeriesRenderingOrder order",
      "info" : "SingleVariableDeclaration[53926-53952]:SingleVariableDeclaration[53926-53952]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53954-54150]:Block[53954-54150]"
    }, {
      "left" : "if (order == null)",
      "right" : "if (order == null)",
      "info" : "IfStatement[53965-54071]:IfStatement[53965-54071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53984-54071]:Block[53984-54071]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
      "info" : "ThrowStatement[53999-54060]:ThrowStatement[53999-54060]"
    }, {
      "left" : "this.seriesRenderingOrder = order;",
      "right" : "this.seriesRenderingOrder = order;",
      "info" : "ExpressionStatement[54081-54115]:ExpressionStatement[54081-54115]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[54125-54143]:ExpressionStatement[54125-54143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54423-54429]:Modifier[54423-54429]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[54430-54433]:PrimitiveType[54430-54433]"
    }, {
      "left" : "getIndexOf",
      "right" : "getIndexOf",
      "info" : "SimpleName[54434-54444]:SimpleName[54434-54444]"
    }, {
      "left" : "XYItemRenderer renderer",
      "right" : "XYItemRenderer renderer",
      "info" : "SingleVariableDeclaration[54445-54468]:SingleVariableDeclaration[54445-54468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54470-54528]:Block[54470-54528]"
    }, {
      "left" : "return this.renderers.indexOf(renderer);",
      "right" : "return this.renderers.indexOf(renderer);",
      "info" : "ReturnStatement[54481-54521]:ReturnStatement[54481-54521]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54917-54923]:Modifier[54917-54923]"
    }, {
      "left" : "XYItemRenderer",
      "right" : "XYItemRenderer",
      "info" : "SimpleType[54924-54938]:SimpleType[54924-54938]"
    }, {
      "left" : "getRendererForDataset",
      "right" : "getRendererForDataset",
      "info" : "SimpleName[54939-54960]:SimpleName[54939-54960]"
    }, {
      "left" : "XYDataset dataset",
      "right" : "XYDataset dataset",
      "info" : "SingleVariableDeclaration[54961-54978]:SingleVariableDeclaration[54961-54978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54980-55380]:Block[54980-55380]"
    }, {
      "left" : "XYItemRenderer result = null;",
      "right" : "XYItemRenderer result = null;",
      "info" : "VariableDeclarationStatement[54991-55020]:VariableDeclarationStatement[54991-55020]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[55030-55349]:ForStatement[55030-55349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55077-55349]:Block[55077-55349]"
    }, {
      "left" : "if (this.datasets.get(i) == dataset)",
      "right" : "if (this.datasets.get(i) == dataset)",
      "info" : "IfStatement[55092-55338]:IfStatement[55092-55338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55129-55338]:Block[55129-55338]"
    }, {
      "left" : "result = (XYItemRenderer) this.renderers.get(i);",
      "right" : "result = (XYItemRenderer) this.renderers.get(i);",
      "info" : "ExpressionStatement[55148-55196]:ExpressionStatement[55148-55196]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[55214-55299]:IfStatement[55214-55299]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55234-55299]:Block[55234-55299]"
    }, {
      "left" : "result = getRenderer();",
      "right" : "result = getRenderer();",
      "info" : "ExpressionStatement[55257-55280]:ExpressionStatement[55257-55280]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[55317-55323]:BreakStatement[55317-55323]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[55359-55373]:ReturnStatement[55359-55373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55582-55588]:Modifier[55582-55588]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55589-55592]:PrimitiveType[55589-55592]"
    }, {
      "left" : "getWeight",
      "right" : "getWeight",
      "info" : "SimpleName[55593-55602]:SimpleName[55593-55602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55605-55642]:Block[55605-55642]"
    }, {
      "left" : "return this.weight;",
      "right" : "return this.weight;",
      "info" : "ReturnStatement[55616-55635]:ReturnStatement[55616-55635]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55856-55862]:Modifier[55856-55862]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55863-55867]:PrimitiveType[55863-55867]"
    }, {
      "left" : "setWeight",
      "right" : "setWeight",
      "info" : "SimpleName[55868-55877]:SimpleName[55868-55877]"
    }, {
      "left" : "int weight",
      "right" : "int weight",
      "info" : "SingleVariableDeclaration[55878-55888]:SingleVariableDeclaration[55878-55888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55890-55957]:Block[55890-55957]"
    }, {
      "left" : "this.weight = weight;",
      "right" : "this.weight = weight;",
      "info" : "ExpressionStatement[55901-55922]:ExpressionStatement[55901-55922]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[55932-55950]:ExpressionStatement[55932-55950]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56218-56224]:Modifier[56218-56224]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[56225-56232]:PrimitiveType[56225-56232]"
    }, {
      "left" : "isDomainGridlinesVisible",
      "right" : "isDomainGridlinesVisible",
      "info" : "SimpleName[56233-56257]:SimpleName[56233-56257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56260-56313]:Block[56260-56313]"
    }, {
      "left" : "return this.domainGridlinesVisible;",
      "right" : "return this.domainGridlinesVisible;",
      "info" : "ReturnStatement[56271-56306]:ReturnStatement[56271-56306]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[56663-56669]:Modifier[56663-56669]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[56670-56674]:PrimitiveType[56670-56674]"
    }, {
      "left" : "setDomainGridlinesVisible",
      "right" : "setDomainGridlinesVisible",
      "info" : "SimpleName[56675-56700]:SimpleName[56675-56700]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[56701-56716]:SingleVariableDeclaration[56701-56716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56718-56876]:Block[56718-56876]"
    }, {
      "left" : "if (this.domainGridlinesVisible != visible)",
      "right" : "if (this.domainGridlinesVisible != visible)",
      "info" : "IfStatement[56729-56869]:IfStatement[56729-56869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56773-56869]:Block[56773-56869]"
    }, {
      "left" : "this.domainGridlinesVisible = visible;",
      "right" : "this.domainGridlinesVisible = visible;",
      "info" : "ExpressionStatement[56788-56826]:ExpressionStatement[56788-56826]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[56840-56858]:ExpressionStatement[56840-56858]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57115-57121]:Modifier[57115-57121]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[57122-57128]:SimpleType[57122-57128]"
    }, {
      "left" : "getDomainGridlineStroke",
      "right" : "getDomainGridlineStroke",
      "info" : "SimpleName[57129-57152]:SimpleName[57129-57152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57155-57206]:Block[57155-57206]"
    }, {
      "left" : "return this.domainGridlineStroke;",
      "right" : "return this.domainGridlineStroke;",
      "info" : "ReturnStatement[57166-57199]:ReturnStatement[57166-57199]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57701-57707]:Modifier[57701-57707]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[57708-57712]:PrimitiveType[57708-57712]"
    }, {
      "left" : "setDomainGridlineStroke",
      "right" : "setDomainGridlineStroke",
      "info" : "SimpleName[57713-57736]:SimpleName[57713-57736]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[57737-57750]:SingleVariableDeclaration[57737-57750]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57752-57951]:Block[57752-57951]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[57763-57871]:IfStatement[57763-57871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57783-57871]:Block[57783-57871]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[57798-57860]:ThrowStatement[57798-57860]"
    }, {
      "left" : "this.domainGridlineStroke = stroke;",
      "right" : "this.domainGridlineStroke = stroke;",
      "info" : "ExpressionStatement[57881-57916]:ExpressionStatement[57881-57916]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[57926-57944]:ExpressionStatement[57926-57944]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58186-58192]:Modifier[58186-58192]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[58193-58198]:SimpleType[58193-58198]"
    }, {
      "left" : "getDomainGridlinePaint",
      "right" : "getDomainGridlinePaint",
      "info" : "SimpleName[58199-58221]:SimpleName[58199-58221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58224-58274]:Block[58224-58274]"
    }, {
      "left" : "return this.domainGridlinePaint;",
      "right" : "return this.domainGridlinePaint;",
      "info" : "ReturnStatement[58235-58267]:ReturnStatement[58235-58267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[58678-58684]:Modifier[58678-58684]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[58685-58689]:PrimitiveType[58685-58689]"
    }, {
      "left" : "setDomainGridlinePaint",
      "right" : "setDomainGridlinePaint",
      "info" : "SimpleName[58690-58712]:SimpleName[58690-58712]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[58713-58724]:SingleVariableDeclaration[58713-58724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58726-58921]:Block[58726-58921]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[58737-58843]:IfStatement[58737-58843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58756-58843]:Block[58756-58843]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[58771-58832]:ThrowStatement[58771-58832]"
    }, {
      "left" : "this.domainGridlinePaint = paint;",
      "right" : "this.domainGridlinePaint = paint;",
      "info" : "ExpressionStatement[58853-58886]:ExpressionStatement[58853-58886]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[58896-58914]:ExpressionStatement[58896-58914]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59149-59155]:Modifier[59149-59155]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[59156-59163]:PrimitiveType[59156-59163]"
    }, {
      "left" : "isRangeGridlinesVisible",
      "right" : "isRangeGridlinesVisible",
      "info" : "SimpleName[59164-59187]:SimpleName[59164-59187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59190-59242]:Block[59190-59242]"
    }, {
      "left" : "return this.rangeGridlinesVisible;",
      "right" : "return this.rangeGridlinesVisible;",
      "info" : "ReturnStatement[59201-59235]:ReturnStatement[59201-59235]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59595-59601]:Modifier[59595-59601]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[59602-59606]:PrimitiveType[59602-59606]"
    }, {
      "left" : "setRangeGridlinesVisible",
      "right" : "setRangeGridlinesVisible",
      "info" : "SimpleName[59607-59631]:SimpleName[59607-59631]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[59632-59647]:SingleVariableDeclaration[59632-59647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59649-59805]:Block[59649-59805]"
    }, {
      "left" : "if (this.rangeGridlinesVisible != visible)",
      "right" : "if (this.rangeGridlinesVisible != visible)",
      "info" : "IfStatement[59660-59798]:IfStatement[59660-59798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59703-59798]:Block[59703-59798]"
    }, {
      "left" : "this.rangeGridlinesVisible = visible;",
      "right" : "this.rangeGridlinesVisible = visible;",
      "info" : "ExpressionStatement[59718-59755]:ExpressionStatement[59718-59755]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[59769-59787]:ExpressionStatement[59769-59787]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60042-60048]:Modifier[60042-60048]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[60049-60055]:SimpleType[60049-60055]"
    }, {
      "left" : "getRangeGridlineStroke",
      "right" : "getRangeGridlineStroke",
      "info" : "SimpleName[60056-60078]:SimpleName[60056-60078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60081-60131]:Block[60081-60131]"
    }, {
      "left" : "return this.rangeGridlineStroke;",
      "right" : "return this.rangeGridlineStroke;",
      "info" : "ReturnStatement[60092-60124]:ReturnStatement[60092-60124]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60430-60436]:Modifier[60430-60436]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[60437-60441]:PrimitiveType[60437-60441]"
    }, {
      "left" : "setRangeGridlineStroke",
      "right" : "setRangeGridlineStroke",
      "info" : "SimpleName[60442-60464]:SimpleName[60442-60464]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[60465-60478]:SingleVariableDeclaration[60465-60478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60480-60678]:Block[60480-60678]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[60491-60599]:IfStatement[60491-60599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60511-60599]:Block[60511-60599]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[60526-60588]:ThrowStatement[60526-60588]"
    }, {
      "left" : "this.rangeGridlineStroke = stroke;",
      "right" : "this.rangeGridlineStroke = stroke;",
      "info" : "ExpressionStatement[60609-60643]:ExpressionStatement[60609-60643]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[60653-60671]:ExpressionStatement[60653-60671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60911-60917]:Modifier[60911-60917]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[60918-60923]:SimpleType[60918-60923]"
    }, {
      "left" : "getRangeGridlinePaint",
      "right" : "getRangeGridlinePaint",
      "info" : "SimpleName[60924-60945]:SimpleName[60924-60945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60948-60997]:Block[60948-60997]"
    }, {
      "left" : "return this.rangeGridlinePaint;",
      "right" : "return this.rangeGridlinePaint;",
      "info" : "ReturnStatement[60959-60990]:ReturnStatement[60959-60990]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61291-61297]:Modifier[61291-61297]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[61298-61302]:PrimitiveType[61298-61302]"
    }, {
      "left" : "setRangeGridlinePaint",
      "right" : "setRangeGridlinePaint",
      "info" : "SimpleName[61303-61324]:SimpleName[61303-61324]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[61325-61336]:SingleVariableDeclaration[61325-61336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61338-61532]:Block[61338-61532]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[61349-61455]:IfStatement[61349-61455]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61368-61455]:Block[61368-61455]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[61383-61444]:ThrowStatement[61383-61444]"
    }, {
      "left" : "this.rangeGridlinePaint = paint;",
      "right" : "this.rangeGridlinePaint = paint;",
      "info" : "ExpressionStatement[61465-61497]:ExpressionStatement[61465-61497]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[61507-61525]:ExpressionStatement[61507-61525]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[61794-61800]:Modifier[61794-61800]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[61801-61808]:PrimitiveType[61801-61808]"
    }, {
      "left" : "isDomainZeroBaselineVisible",
      "right" : "isDomainZeroBaselineVisible",
      "info" : "SimpleName[61809-61836]:SimpleName[61809-61836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61839-61895]:Block[61839-61895]"
    }, {
      "left" : "return this.domainZeroBaselineVisible;",
      "right" : "return this.domainZeroBaselineVisible;",
      "info" : "ReturnStatement[61850-61888]:ReturnStatement[61850-61888]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62230-62236]:Modifier[62230-62236]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[62237-62241]:PrimitiveType[62237-62241]"
    }, {
      "left" : "setDomainZeroBaselineVisible",
      "right" : "setDomainZeroBaselineVisible",
      "info" : "SimpleName[62242-62270]:SimpleName[62242-62270]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[62271-62286]:SingleVariableDeclaration[62271-62286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62288-62375]:Block[62288-62375]"
    }, {
      "left" : "this.domainZeroBaselineVisible = visible;",
      "right" : "this.domainZeroBaselineVisible = visible;",
      "info" : "ExpressionStatement[62299-62340]:ExpressionStatement[62299-62340]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[62350-62368]:ExpressionStatement[62350-62368]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62631-62637]:Modifier[62631-62637]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[62638-62644]:SimpleType[62638-62644]"
    }, {
      "left" : "getDomainZeroBaselineStroke",
      "right" : "getDomainZeroBaselineStroke",
      "info" : "SimpleName[62645-62672]:SimpleName[62645-62672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62675-62730]:Block[62675-62730]"
    }, {
      "left" : "return this.domainZeroBaselineStroke;",
      "right" : "return this.domainZeroBaselineStroke;",
      "info" : "ReturnStatement[62686-62723]:ReturnStatement[62686-62723]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63055-63061]:Modifier[63055-63061]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[63062-63066]:PrimitiveType[63062-63066]"
    }, {
      "left" : "setDomainZeroBaselineStroke",
      "right" : "setDomainZeroBaselineStroke",
      "info" : "SimpleName[63067-63094]:SimpleName[63067-63094]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[63095-63108]:SingleVariableDeclaration[63095-63108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63110-63313]:Block[63110-63313]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[63121-63229]:IfStatement[63121-63229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63141-63229]:Block[63141-63229]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[63156-63218]:ThrowStatement[63156-63218]"
    }, {
      "left" : "this.domainZeroBaselineStroke = stroke;",
      "right" : "this.domainZeroBaselineStroke = stroke;",
      "info" : "ExpressionStatement[63239-63278]:ExpressionStatement[63239-63278]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[63288-63306]:ExpressionStatement[63288-63306]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63585-63591]:Modifier[63585-63591]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[63592-63597]:SimpleType[63592-63597]"
    }, {
      "left" : "getDomainZeroBaselinePaint",
      "right" : "getDomainZeroBaselinePaint",
      "info" : "SimpleName[63598-63624]:SimpleName[63598-63624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63627-63681]:Block[63627-63681]"
    }, {
      "left" : "return this.domainZeroBaselinePaint;",
      "right" : "return this.domainZeroBaselinePaint;",
      "info" : "ReturnStatement[63638-63674]:ReturnStatement[63638-63674]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64014-64020]:Modifier[64014-64020]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[64021-64025]:PrimitiveType[64021-64025]"
    }, {
      "left" : "setDomainZeroBaselinePaint",
      "right" : "setDomainZeroBaselinePaint",
      "info" : "SimpleName[64026-64052]:SimpleName[64026-64052]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[64053-64064]:SingleVariableDeclaration[64053-64064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64066-64265]:Block[64066-64265]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[64077-64183]:IfStatement[64077-64183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64096-64183]:Block[64096-64183]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[64111-64172]:ThrowStatement[64111-64172]"
    }, {
      "left" : "this.domainZeroBaselinePaint = paint;",
      "right" : "this.domainZeroBaselinePaint = paint;",
      "info" : "ExpressionStatement[64193-64230]:ExpressionStatement[64193-64230]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[64240-64258]:ExpressionStatement[64240-64258]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64499-64505]:Modifier[64499-64505]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[64506-64513]:PrimitiveType[64506-64513]"
    }, {
      "left" : "isRangeZeroBaselineVisible",
      "right" : "isRangeZeroBaselineVisible",
      "info" : "SimpleName[64514-64540]:SimpleName[64514-64540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64543-64598]:Block[64543-64598]"
    }, {
      "left" : "return this.rangeZeroBaselineVisible;",
      "right" : "return this.rangeZeroBaselineVisible;",
      "info" : "ReturnStatement[64554-64591]:ReturnStatement[64554-64591]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[64901-64907]:Modifier[64901-64907]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[64908-64912]:PrimitiveType[64908-64912]"
    }, {
      "left" : "setRangeZeroBaselineVisible",
      "right" : "setRangeZeroBaselineVisible",
      "info" : "SimpleName[64913-64940]:SimpleName[64913-64940]"
    }, {
      "left" : "boolean visible",
      "right" : "boolean visible",
      "info" : "SingleVariableDeclaration[64941-64956]:SingleVariableDeclaration[64941-64956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64958-65044]:Block[64958-65044]"
    }, {
      "left" : "this.rangeZeroBaselineVisible = visible;",
      "right" : "this.rangeZeroBaselineVisible = visible;",
      "info" : "ExpressionStatement[64969-65009]:ExpressionStatement[64969-65009]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[65019-65037]:ExpressionStatement[65019-65037]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65268-65274]:Modifier[65268-65274]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[65275-65281]:SimpleType[65275-65281]"
    }, {
      "left" : "getRangeZeroBaselineStroke",
      "right" : "getRangeZeroBaselineStroke",
      "info" : "SimpleName[65282-65308]:SimpleName[65282-65308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65311-65365]:Block[65311-65365]"
    }, {
      "left" : "return this.rangeZeroBaselineStroke;",
      "right" : "return this.rangeZeroBaselineStroke;",
      "info" : "ReturnStatement[65322-65358]:ReturnStatement[65322-65358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65659-65665]:Modifier[65659-65665]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[65666-65670]:PrimitiveType[65666-65670]"
    }, {
      "left" : "setRangeZeroBaselineStroke",
      "right" : "setRangeZeroBaselineStroke",
      "info" : "SimpleName[65671-65697]:SimpleName[65671-65697]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[65698-65711]:SingleVariableDeclaration[65698-65711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65713-65915]:Block[65713-65915]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[65724-65832]:IfStatement[65724-65832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65744-65832]:Block[65744-65832]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[65759-65821]:ThrowStatement[65759-65821]"
    }, {
      "left" : "this.rangeZeroBaselineStroke = stroke;",
      "right" : "this.rangeZeroBaselineStroke = stroke;",
      "info" : "ExpressionStatement[65842-65880]:ExpressionStatement[65842-65880]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[65890-65908]:ExpressionStatement[65890-65908]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66155-66161]:Modifier[66155-66161]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[66162-66167]:SimpleType[66162-66167]"
    }, {
      "left" : "getRangeZeroBaselinePaint",
      "right" : "getRangeZeroBaselinePaint",
      "info" : "SimpleName[66168-66193]:SimpleName[66168-66193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66196-66249]:Block[66196-66249]"
    }, {
      "left" : "return this.rangeZeroBaselinePaint;",
      "right" : "return this.rangeZeroBaselinePaint;",
      "info" : "ReturnStatement[66207-66242]:ReturnStatement[66207-66242]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66550-66556]:Modifier[66550-66556]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[66557-66561]:PrimitiveType[66557-66561]"
    }, {
      "left" : "setRangeZeroBaselinePaint",
      "right" : "setRangeZeroBaselinePaint",
      "info" : "SimpleName[66562-66587]:SimpleName[66562-66587]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[66588-66599]:SingleVariableDeclaration[66588-66599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66601-66799]:Block[66601-66799]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[66612-66718]:IfStatement[66612-66718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66631-66718]:Block[66631-66718]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[66646-66707]:ThrowStatement[66646-66707]"
    }, {
      "left" : "this.rangeZeroBaselinePaint = paint;",
      "right" : "this.rangeZeroBaselinePaint = paint;",
      "info" : "ExpressionStatement[66728-66764]:ExpressionStatement[66728-66764]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[66774-66792]:ExpressionStatement[66774-66792]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67068-67074]:Modifier[67068-67074]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[67075-67080]:SimpleType[67075-67080]"
    }, {
      "left" : "getDomainTickBandPaint",
      "right" : "getDomainTickBandPaint",
      "info" : "SimpleName[67081-67103]:SimpleName[67081-67103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67106-67156]:Block[67106-67156]"
    }, {
      "left" : "return this.domainTickBandPaint;",
      "right" : "return this.domainTickBandPaint;",
      "info" : "ReturnStatement[67117-67149]:ReturnStatement[67117-67149]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67351-67357]:Modifier[67351-67357]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[67358-67362]:PrimitiveType[67358-67362]"
    }, {
      "left" : "setDomainTickBandPaint",
      "right" : "setDomainTickBandPaint",
      "info" : "SimpleName[67363-67385]:SimpleName[67363-67385]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[67386-67397]:SingleVariableDeclaration[67386-67397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67399-67478]:Block[67399-67478]"
    }, {
      "left" : "this.domainTickBandPaint = paint;",
      "right" : "this.domainTickBandPaint = paint;",
      "info" : "ExpressionStatement[67410-67443]:ExpressionStatement[67410-67443]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[67453-67471]:ExpressionStatement[67453-67471]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[67745-67751]:Modifier[67745-67751]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[67752-67757]:SimpleType[67752-67757]"
    }, {
      "left" : "getRangeTickBandPaint",
      "right" : "getRangeTickBandPaint",
      "info" : "SimpleName[67758-67779]:SimpleName[67758-67779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[67782-67831]:Block[67782-67831]"
    }, {
      "left" : "return this.rangeTickBandPaint;",
      "right" : "return this.rangeTickBandPaint;",
      "info" : "ReturnStatement[67793-67824]:ReturnStatement[67793-67824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68024-68030]:Modifier[68024-68030]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68031-68035]:PrimitiveType[68031-68035]"
    }, {
      "left" : "setRangeTickBandPaint",
      "right" : "setRangeTickBandPaint",
      "info" : "SimpleName[68036-68057]:SimpleName[68036-68057]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[68058-68069]:SingleVariableDeclaration[68058-68069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68071-68149]:Block[68071-68149]"
    }, {
      "left" : "this.rangeTickBandPaint = paint;",
      "right" : "this.rangeTickBandPaint = paint;",
      "info" : "ExpressionStatement[68082-68114]:ExpressionStatement[68082-68114]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[68124-68142]:ExpressionStatement[68124-68142]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68406-68412]:Modifier[68406-68412]"
    }, {
      "left" : "Point2D",
      "right" : "Point2D",
      "info" : "SimpleType[68413-68420]:SimpleType[68413-68420]"
    }, {
      "left" : "getQuadrantOrigin",
      "right" : "getQuadrantOrigin",
      "info" : "SimpleName[68421-68438]:SimpleName[68421-68438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68441-68486]:Block[68441-68486]"
    }, {
      "left" : "return this.quadrantOrigin;",
      "right" : "return this.quadrantOrigin;",
      "info" : "ReturnStatement[68452-68479]:ReturnStatement[68452-68479]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68738-68744]:Modifier[68738-68744]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[68745-68749]:PrimitiveType[68745-68749]"
    }, {
      "left" : "setQuadrantOrigin",
      "right" : "setQuadrantOrigin",
      "info" : "SimpleName[68750-68767]:SimpleName[68750-68767]"
    }, {
      "left" : "Point2D origin",
      "right" : "Point2D origin",
      "info" : "SingleVariableDeclaration[68768-68782]:SingleVariableDeclaration[68768-68782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68784-68977]:Block[68784-68977]"
    }, {
      "left" : "if (origin == null)",
      "right" : "if (origin == null)",
      "info" : "IfStatement[68795-68903]:IfStatement[68795-68903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68815-68903]:Block[68815-68903]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'origin' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'origin' argument.\");",
      "info" : "ThrowStatement[68830-68892]:ThrowStatement[68830-68892]"
    }, {
      "left" : "this.quadrantOrigin = origin;",
      "right" : "this.quadrantOrigin = origin;",
      "info" : "ExpressionStatement[68913-68942]:ExpressionStatement[68913-68942]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[68952-68970]:ExpressionStatement[68952-68970]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69234-69240]:Modifier[69234-69240]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[69241-69246]:SimpleType[69241-69246]"
    }, {
      "left" : "getQuadrantPaint",
      "right" : "getQuadrantPaint",
      "info" : "SimpleName[69247-69263]:SimpleName[69247-69263]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[69264-69273]:SingleVariableDeclaration[69264-69273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69275-69513]:Block[69275-69513]"
    }, {
      "left" : "if (index < 0 || index > 3)",
      "right" : "if (index < 0 || index > 3)",
      "info" : "IfStatement[69286-69463]:IfStatement[69286-69463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69314-69463]:Block[69314-69463]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The index value (\" + index \r\n                    + \") should be in the range 0 to 3.\");",
      "right" : "throw new IllegalArgumentException(\"The index value (\" + index \r\n                    + \") should be in the range 0 to 3.\");",
      "info" : "ThrowStatement[69329-69452]:ThrowStatement[69329-69452]"
    }, {
      "left" : "return this.quadrantPaint[index];",
      "right" : "return this.quadrantPaint[index];",
      "info" : "ReturnStatement[69473-69506]:ReturnStatement[69473-69506]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69831-69837]:Modifier[69831-69837]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[69838-69842]:PrimitiveType[69838-69842]"
    }, {
      "left" : "setQuadrantPaint",
      "right" : "setQuadrantPaint",
      "info" : "SimpleName[69843-69859]:SimpleName[69843-69859]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[69860-69869]:SingleVariableDeclaration[69860-69869]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[69871-69882]:SingleVariableDeclaration[69871-69882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69884-70151]:Block[69884-70151]"
    }, {
      "left" : "if (index < 0 || index > 3)",
      "right" : "if (index < 0 || index > 3)",
      "info" : "IfStatement[69895-70072]:IfStatement[69895-70072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69923-70072]:Block[69923-70072]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The index value (\" + index \r\n                    + \") should be in the range 0 to 3.\");",
      "right" : "throw new IllegalArgumentException(\"The index value (\" + index \r\n                    + \") should be in the range 0 to 3.\");",
      "info" : "ThrowStatement[69938-70061]:ThrowStatement[69938-70061]"
    }, {
      "left" : "this.quadrantPaint[index] = paint;",
      "right" : "this.quadrantPaint[index] = paint;",
      "info" : "ExpressionStatement[70082-70116]:ExpressionStatement[70082-70116]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[70126-70144]:ExpressionStatement[70126-70144]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[70623-70629]:Modifier[70623-70629]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[70630-70634]:PrimitiveType[70630-70634]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[70635-70650]:SimpleName[70635-70650]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[70651-70664]:SingleVariableDeclaration[70651-70664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70666-70765]:Block[70666-70765]"
    }, {
      "left" : "addDomainMarker(marker, Layer.FOREGROUND);",
      "right" : "addDomainMarker(marker, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[70716-70758]:ExpressionStatement[70716-70758]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71290-71296]:Modifier[71290-71296]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[71297-71301]:PrimitiveType[71297-71301]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[71302-71317]:SimpleName[71302-71317]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[71318-71331]:SingleVariableDeclaration[71318-71331]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[71333-71344]:SingleVariableDeclaration[71333-71344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71346-71398]:Block[71346-71398]"
    }, {
      "left" : "addDomainMarker(0, marker, layer);",
      "right" : "addDomainMarker(0, marker, layer);",
      "info" : "ExpressionStatement[71357-71391]:ExpressionStatement[71357-71391]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71622-71628]:Modifier[71622-71628]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[71629-71633]:PrimitiveType[71629-71633]"
    }, {
      "left" : "clearDomainMarkers",
      "right" : "clearDomainMarkers",
      "info" : "SimpleName[71634-71652]:SimpleName[71634-71652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71655-72483]:Block[71655-72483]"
    }, {
      "left" : "if (this.backgroundDomainMarkers != null)",
      "right" : "if (this.backgroundDomainMarkers != null)",
      "info" : "IfStatement[71666-72052]:IfStatement[71666-72052]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71708-72052]:Block[71708-72052]"
    }, {
      "left" : "Set keys = this.backgroundDomainMarkers.keySet();",
      "right" : "Set keys = this.backgroundDomainMarkers.keySet();",
      "info" : "VariableDeclarationStatement[71723-71772]:VariableDeclarationStatement[71723-71772]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[71786-71822]:VariableDeclarationStatement[71786-71822]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[71836-71990]:WhileStatement[71836-71990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71863-71990]:Block[71863-71990]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[71882-71922]:VariableDeclarationStatement[71882-71922]"
    }, {
      "left" : "clearDomainMarkers(key.intValue());",
      "right" : "clearDomainMarkers(key.intValue());",
      "info" : "ExpressionStatement[71940-71975]:ExpressionStatement[71940-71975]"
    }, {
      "left" : "this.backgroundDomainMarkers.clear();",
      "right" : "this.backgroundDomainMarkers.clear();",
      "info" : "ExpressionStatement[72004-72041]:ExpressionStatement[72004-72041]"
    }, {
      "left" : "if (this.foregroundDomainMarkers != null)",
      "right" : "if (this.foregroundDomainMarkers != null)",
      "info" : "IfStatement[72062-72448]:IfStatement[72062-72448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72104-72448]:Block[72104-72448]"
    }, {
      "left" : "Set keys = this.foregroundDomainMarkers.keySet();",
      "right" : "Set keys = this.foregroundDomainMarkers.keySet();",
      "info" : "VariableDeclarationStatement[72119-72168]:VariableDeclarationStatement[72119-72168]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[72182-72218]:VariableDeclarationStatement[72182-72218]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[72232-72386]:WhileStatement[72232-72386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72259-72386]:Block[72259-72386]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[72278-72318]:VariableDeclarationStatement[72278-72318]"
    }, {
      "left" : "clearDomainMarkers(key.intValue());",
      "right" : "clearDomainMarkers(key.intValue());",
      "info" : "ExpressionStatement[72336-72371]:ExpressionStatement[72336-72371]"
    }, {
      "left" : "this.foregroundDomainMarkers.clear();",
      "right" : "this.foregroundDomainMarkers.clear();",
      "info" : "ExpressionStatement[72400-72437]:ExpressionStatement[72400-72437]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[72458-72476]:ExpressionStatement[72458-72476]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[72702-72708]:Modifier[72702-72708]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[72709-72713]:PrimitiveType[72709-72713]"
    }, {
      "left" : "clearDomainMarkers",
      "right" : "clearDomainMarkers",
      "info" : "SimpleName[72714-72732]:SimpleName[72714-72732]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[72733-72742]:SingleVariableDeclaration[72733-72742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72744-73788]:Block[72744-73788]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[72755-72788]:VariableDeclarationStatement[72755-72788]"
    }, {
      "left" : "if (this.backgroundDomainMarkers != null)",
      "right" : "if (this.backgroundDomainMarkers != null)",
      "info" : "IfStatement[72798-73271]:IfStatement[72798-73271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72840-73271]:Block[72840-73271]"
    }, {
      "left" : "Collection markers\r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
      "right" : "Collection markers\r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
      "info" : "VariableDeclarationStatement[72855-72944]:VariableDeclarationStatement[72855-72944]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[72958-73260]:IfStatement[72958-73260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72979-73260]:Block[72979-73260]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[72998-73037]:VariableDeclarationStatement[72998-73037]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[73055-73211]:WhileStatement[73055-73211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73082-73211]:Block[73082-73211]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[73105-73141]:VariableDeclarationStatement[73105-73141]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[73163-73192]:ExpressionStatement[73163-73192]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[73229-73245]:ExpressionStatement[73229-73245]"
    }, {
      "left" : "if (this.foregroundRangeMarkers != null)",
      "right" : "if (this.foregroundRangeMarkers != null)",
      "info" : "IfStatement[73281-73753]:IfStatement[73281-73753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73322-73753]:Block[73322-73753]"
    }, {
      "left" : "Collection markers\r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
      "right" : "Collection markers\r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
      "info" : "VariableDeclarationStatement[73337-73426]:VariableDeclarationStatement[73337-73426]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[73440-73742]:IfStatement[73440-73742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73461-73742]:Block[73461-73742]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[73480-73519]:VariableDeclarationStatement[73480-73519]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[73537-73693]:WhileStatement[73537-73693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73564-73693]:Block[73564-73693]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[73587-73623]:VariableDeclarationStatement[73587-73623]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[73645-73674]:ExpressionStatement[73645-73674]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[73711-73727]:ExpressionStatement[73711-73727]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[73763-73781]:ExpressionStatement[73763-73781]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[74398-74404]:Modifier[74398-74404]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[74405-74409]:PrimitiveType[74405-74409]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[74410-74425]:SimpleName[74410-74425]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[74426-74435]:SingleVariableDeclaration[74426-74435]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[74437-74450]:SingleVariableDeclaration[74437-74450]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[74452-74463]:SingleVariableDeclaration[74452-74463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[74465-74524]:Block[74465-74524]"
    }, {
      "left" : "addDomainMarker(index, marker, layer, true);",
      "right" : "addDomainMarker(index, marker, layer, true);",
      "info" : "ExpressionStatement[74473-74517]:ExpressionStatement[74473-74517]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75125-75131]:Modifier[75125-75131]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[75132-75136]:PrimitiveType[75132-75136]"
    }, {
      "left" : "addDomainMarker",
      "right" : "addDomainMarker",
      "info" : "SimpleName[75137-75152]:SimpleName[75137-75152]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[75153-75162]:SingleVariableDeclaration[75153-75162]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[75164-75177]:SingleVariableDeclaration[75164-75177]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[75179-75190]:SingleVariableDeclaration[75179-75190]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[75200-75214]:SingleVariableDeclaration[75200-75214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75216-76377]:Block[75216-76377]"
    }, {
      "left" : "if (marker == null)",
      "right" : "if (marker == null)",
      "info" : "IfStatement[75227-75340]:IfStatement[75227-75340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75247-75340]:Block[75247-75340]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
      "info" : "ThrowStatement[75262-75329]:ThrowStatement[75262-75329]"
    }, {
      "left" : "if (layer == null)",
      "right" : "if (layer == null)",
      "info" : "IfStatement[75350-75461]:IfStatement[75350-75461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75369-75461]:Block[75369-75461]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
      "info" : "ThrowStatement[75384-75450]:ThrowStatement[75384-75450]"
    }, {
      "left" : "Collection markers;",
      "right" : "Collection markers;",
      "info" : "VariableDeclarationStatement[75471-75490]:VariableDeclarationStatement[75471-75490]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[75500-76263]:IfStatement[75500-76263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75531-75874]:Block[75531-75874]"
    }, {
      "left" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[75546-75644]:ExpressionStatement[75546-75644]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[75658-75829]:IfStatement[75658-75829]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75679-75829]:Block[75679-75829]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[75698-75734]:ExpressionStatement[75698-75734]"
    }, {
      "left" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
      "right" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[75752-75814]:ExpressionStatement[75752-75814]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[75843-75863]:ExpressionStatement[75843-75863]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[75889-76263]:IfStatement[75889-76263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75920-76263]:Block[75920-76263]"
    }, {
      "left" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[75935-76033]:ExpressionStatement[75935-76033]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[76047-76218]:IfStatement[76047-76218]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76068-76218]:Block[76068-76218]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[76087-76123]:ExpressionStatement[76087-76123]"
    }, {
      "left" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
      "right" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[76141-76203]:ExpressionStatement[76141-76203]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[76232-76252]:ExpressionStatement[76232-76252]"
    }, {
      "left" : "marker.addChangeListener(this);",
      "right" : "marker.addChangeListener(this);",
      "info" : "ExpressionStatement[76273-76304]:ExpressionStatement[76273-76304]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[76314-76370]:IfStatement[76314-76370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76326-76370]:Block[76326-76370]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[76341-76359]:ExpressionStatement[76341-76359]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[76704-76710]:Modifier[76704-76710]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[76711-76718]:PrimitiveType[76711-76718]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[76719-76737]:SimpleName[76719-76737]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[76738-76751]:SingleVariableDeclaration[76738-76751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76753-76823]:Block[76753-76823]"
    }, {
      "left" : "return removeDomainMarker(marker, Layer.FOREGROUND);",
      "right" : "return removeDomainMarker(marker, Layer.FOREGROUND);",
      "info" : "ReturnStatement[76764-76816]:ReturnStatement[76764-76816]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77264-77270]:Modifier[77264-77270]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[77271-77278]:PrimitiveType[77271-77278]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[77279-77297]:SimpleName[77279-77297]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[77298-77311]:SingleVariableDeclaration[77298-77311]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[77313-77324]:SingleVariableDeclaration[77313-77324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77326-77388]:Block[77326-77388]"
    }, {
      "left" : "return removeDomainMarker(0, marker, layer);",
      "right" : "return removeDomainMarker(0, marker, layer);",
      "info" : "ReturnStatement[77337-77381]:ReturnStatement[77337-77381]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77833-77839]:Modifier[77833-77839]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[77840-77847]:PrimitiveType[77840-77847]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[77848-77866]:SimpleName[77848-77866]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[77867-77876]:SingleVariableDeclaration[77867-77876]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[77878-77891]:SingleVariableDeclaration[77878-77891]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[77893-77904]:SingleVariableDeclaration[77893-77904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77906-77975]:Block[77906-77975]"
    }, {
      "left" : "return removeDomainMarker(index, marker, layer, true);",
      "right" : "return removeDomainMarker(index, marker, layer, true);",
      "info" : "ReturnStatement[77914-77968]:ReturnStatement[77914-77968]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78481-78487]:Modifier[78481-78487]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[78488-78495]:PrimitiveType[78488-78495]"
    }, {
      "left" : "removeDomainMarker",
      "right" : "removeDomainMarker",
      "info" : "SimpleName[78496-78514]:SimpleName[78496-78514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78577-79068]:Block[78577-79138]"
    }, {
      "left" : "ArrayList markers;",
      "right" : "ArrayList markers;",
      "info" : "VariableDeclarationStatement[78588-78606]:VariableDeclarationStatement[78588-78606]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[78616-78908]:IfStatement[78616-78908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78647-78770]:Block[78647-78770]"
    }, {
      "left" : "markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.foregroundDomainMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[78662-78759]:ExpressionStatement[78662-78759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78785-78908]:Block[78785-78908]"
    }, {
      "left" : "markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.backgroundDomainMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[78800-78897]:ExpressionStatement[78800-78897]"
    }, {
      "left" : "boolean removed = markers.remove(marker);",
      "right" : "boolean removed = markers.remove(marker);",
      "info" : "VariableDeclarationStatement[78918-78959]:VariableDeclarationStatement[78988-79029]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[78969-79036]:IfStatement[79039-79106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78992-79036]:Block[79062-79106]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[79007-79025]:ExpressionStatement[79077-79095]"
    }, {
      "left" : "return removed;",
      "right" : "return removed;",
      "info" : "ReturnStatement[79046-79061]:ReturnStatement[79116-79131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79507-79513]:Modifier[79577-79583]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[79514-79518]:PrimitiveType[79584-79588]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[79519-79533]:SimpleName[79589-79603]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[79534-79547]:SingleVariableDeclaration[79604-79617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79549-79608]:Block[79619-79678]"
    }, {
      "left" : "addRangeMarker(marker, Layer.FOREGROUND);",
      "right" : "addRangeMarker(marker, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[79560-79601]:ExpressionStatement[79630-79671]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80131-80137]:Modifier[80201-80207]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80138-80142]:PrimitiveType[80208-80212]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[80143-80157]:SimpleName[80213-80227]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[80158-80171]:SingleVariableDeclaration[80228-80241]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[80173-80184]:SingleVariableDeclaration[80243-80254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80186-80237]:Block[80256-80307]"
    }, {
      "left" : "addRangeMarker(0, marker, layer);",
      "right" : "addRangeMarker(0, marker, layer);",
      "info" : "ExpressionStatement[80197-80230]:ExpressionStatement[80267-80300]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[80416-80422]:Modifier[80486-80492]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[80423-80427]:PrimitiveType[80493-80497]"
    }, {
      "left" : "clearRangeMarkers",
      "right" : "clearRangeMarkers",
      "info" : "SimpleName[80428-80445]:SimpleName[80498-80515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80448-81268]:Block[80518-81338]"
    }, {
      "left" : "if (this.backgroundRangeMarkers != null)",
      "right" : "if (this.backgroundRangeMarkers != null)",
      "info" : "IfStatement[80459-80841]:IfStatement[80529-80911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80500-80841]:Block[80570-80911]"
    }, {
      "left" : "Set keys = this.backgroundRangeMarkers.keySet();",
      "right" : "Set keys = this.backgroundRangeMarkers.keySet();",
      "info" : "VariableDeclarationStatement[80515-80563]:VariableDeclarationStatement[80585-80633]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[80577-80613]:VariableDeclarationStatement[80647-80683]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[80627-80780]:WhileStatement[80697-80850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80654-80780]:Block[80724-80850]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[80673-80713]:VariableDeclarationStatement[80743-80783]"
    }, {
      "left" : "clearRangeMarkers(key.intValue());",
      "right" : "clearRangeMarkers(key.intValue());",
      "info" : "ExpressionStatement[80731-80765]:ExpressionStatement[80801-80835]"
    }, {
      "left" : "this.backgroundRangeMarkers.clear();",
      "right" : "this.backgroundRangeMarkers.clear();",
      "info" : "ExpressionStatement[80794-80830]:ExpressionStatement[80864-80900]"
    }, {
      "left" : "if (this.foregroundRangeMarkers != null)",
      "right" : "if (this.foregroundRangeMarkers != null)",
      "info" : "IfStatement[80851-81233]:IfStatement[80921-81303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80892-81233]:Block[80962-81303]"
    }, {
      "left" : "Set keys = this.foregroundRangeMarkers.keySet();",
      "right" : "Set keys = this.foregroundRangeMarkers.keySet();",
      "info" : "VariableDeclarationStatement[80907-80955]:VariableDeclarationStatement[80977-81025]"
    }, {
      "left" : "Iterator iterator = keys.iterator();",
      "right" : "Iterator iterator = keys.iterator();",
      "info" : "VariableDeclarationStatement[80969-81005]:VariableDeclarationStatement[81039-81075]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[81019-81172]:WhileStatement[81089-81242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81046-81172]:Block[81116-81242]"
    }, {
      "left" : "Integer key = (Integer) iterator.next();",
      "right" : "Integer key = (Integer) iterator.next();",
      "info" : "VariableDeclarationStatement[81065-81105]:VariableDeclarationStatement[81135-81175]"
    }, {
      "left" : "clearRangeMarkers(key.intValue());",
      "right" : "clearRangeMarkers(key.intValue());",
      "info" : "ExpressionStatement[81123-81157]:ExpressionStatement[81193-81227]"
    }, {
      "left" : "this.foregroundRangeMarkers.clear();",
      "right" : "this.foregroundRangeMarkers.clear();",
      "info" : "ExpressionStatement[81186-81222]:ExpressionStatement[81256-81292]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[81243-81261]:ExpressionStatement[81313-81331]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[81836-81842]:Modifier[81906-81912]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[81843-81847]:PrimitiveType[81913-81917]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[81848-81862]:SimpleName[81918-81932]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[81863-81872]:SingleVariableDeclaration[81933-81942]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[81874-81887]:SingleVariableDeclaration[81944-81957]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[81889-81900]:SingleVariableDeclaration[81959-81970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81902-81960]:Block[81972-82030]"
    }, {
      "left" : "addRangeMarker(index, marker, layer, true);",
      "right" : "addRangeMarker(index, marker, layer, true);",
      "info" : "ExpressionStatement[81910-81953]:ExpressionStatement[81980-82023]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[82522-82528]:Modifier[82592-82598]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[82529-82533]:PrimitiveType[82599-82603]"
    }, {
      "left" : "addRangeMarker",
      "right" : "addRangeMarker",
      "info" : "SimpleName[82534-82548]:SimpleName[82604-82618]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[82549-82558]:SingleVariableDeclaration[82619-82628]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[82560-82573]:SingleVariableDeclaration[82630-82643]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[82575-82586]:SingleVariableDeclaration[82645-82656]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[82596-82610]:SingleVariableDeclaration[82666-82680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82612-83525]:Block[82682-83595]"
    }, {
      "left" : "Collection markers;",
      "right" : "Collection markers;",
      "info" : "VariableDeclarationStatement[82623-82642]:VariableDeclarationStatement[82693-82712]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[82652-83411]:IfStatement[82722-83481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82683-83024]:Block[82753-83094]"
    }, {
      "left" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[82698-82795]:ExpressionStatement[82768-82865]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[82809-82979]:IfStatement[82879-83049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[82830-82979]:Block[82900-83049]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[82849-82885]:ExpressionStatement[82919-82955]"
    }, {
      "left" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
      "right" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[82903-82964]:ExpressionStatement[82973-83034]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[82993-83013]:ExpressionStatement[83063-83083]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[83039-83411]:IfStatement[83109-83481]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83070-83411]:Block[83140-83481]"
    }, {
      "left" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
      "right" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
      "info" : "ExpressionStatement[83085-83182]:ExpressionStatement[83155-83252]"
    }, {
      "left" : "if (markers == null)",
      "right" : "if (markers == null)",
      "info" : "IfStatement[83196-83366]:IfStatement[83266-83436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83217-83366]:Block[83287-83436]"
    }, {
      "left" : "markers = new java.util.ArrayList();",
      "right" : "markers = new java.util.ArrayList();",
      "info" : "ExpressionStatement[83236-83272]:ExpressionStatement[83306-83342]"
    }, {
      "left" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
      "right" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
      "info" : "ExpressionStatement[83290-83351]:ExpressionStatement[83360-83421]"
    }, {
      "left" : "markers.add(marker);",
      "right" : "markers.add(marker);",
      "info" : "ExpressionStatement[83380-83400]:ExpressionStatement[83450-83470]"
    }, {
      "left" : "marker.addChangeListener(this);",
      "right" : "marker.addChangeListener(this);",
      "info" : "ExpressionStatement[83421-83452]:ExpressionStatement[83491-83522]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[83462-83518]:IfStatement[83532-83588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83474-83518]:Block[83544-83588]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[83489-83507]:ExpressionStatement[83559-83577]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83697-83703]:Modifier[83767-83773]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[83704-83708]:PrimitiveType[83774-83778]"
    }, {
      "left" : "clearRangeMarkers",
      "right" : "clearRangeMarkers",
      "info" : "SimpleName[83709-83726]:SimpleName[83779-83796]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[83727-83736]:SingleVariableDeclaration[83797-83806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83738-84779]:Block[83808-84849]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[83749-83782]:VariableDeclarationStatement[83819-83852]"
    }, {
      "left" : "if (this.backgroundRangeMarkers != null)",
      "right" : "if (this.backgroundRangeMarkers != null)",
      "info" : "IfStatement[83792-84263]:IfStatement[83862-84333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83833-84263]:Block[83903-84333]"
    }, {
      "left" : "Collection markers\r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
      "right" : "Collection markers\r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
      "info" : "VariableDeclarationStatement[83848-83936]:VariableDeclarationStatement[83918-84006]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[83950-84252]:IfStatement[84020-84322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83971-84252]:Block[84041-84322]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[83990-84029]:VariableDeclarationStatement[84060-84099]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[84047-84203]:WhileStatement[84117-84273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84074-84203]:Block[84144-84273]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[84097-84133]:VariableDeclarationStatement[84167-84203]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[84155-84184]:ExpressionStatement[84225-84254]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[84221-84237]:ExpressionStatement[84291-84307]"
    }, {
      "left" : "if (this.foregroundRangeMarkers != null)",
      "right" : "if (this.foregroundRangeMarkers != null)",
      "info" : "IfStatement[84273-84744]:IfStatement[84343-84814]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84314-84744]:Block[84384-84814]"
    }, {
      "left" : "Collection markers\r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
      "right" : "Collection markers\r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
      "info" : "VariableDeclarationStatement[84329-84417]:VariableDeclarationStatement[84399-84487]"
    }, {
      "left" : "if (markers != null)",
      "right" : "if (markers != null)",
      "info" : "IfStatement[84431-84733]:IfStatement[84501-84803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84452-84733]:Block[84522-84803]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[84471-84510]:VariableDeclarationStatement[84541-84580]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[84528-84684]:WhileStatement[84598-84754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84555-84684]:Block[84625-84754]"
    }, {
      "left" : "Marker m = (Marker) iterator.next();",
      "right" : "Marker m = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[84578-84614]:VariableDeclarationStatement[84648-84684]"
    }, {
      "left" : "m.removeChangeListener(this);",
      "right" : "m.removeChangeListener(this);",
      "info" : "ExpressionStatement[84636-84665]:ExpressionStatement[84706-84735]"
    }, {
      "left" : "markers.clear();",
      "right" : "markers.clear();",
      "info" : "ExpressionStatement[84702-84718]:ExpressionStatement[84772-84788]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[84754-84772]:ExpressionStatement[84824-84842]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[85104-85110]:Modifier[85174-85180]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[85111-85118]:PrimitiveType[85181-85188]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[85119-85136]:SimpleName[85189-85206]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[85137-85150]:SingleVariableDeclaration[85207-85220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85152-85221]:Block[85222-85291]"
    }, {
      "left" : "return removeRangeMarker(marker, Layer.FOREGROUND);",
      "right" : "return removeRangeMarker(marker, Layer.FOREGROUND);",
      "info" : "ReturnStatement[85163-85214]:ReturnStatement[85233-85284]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[85661-85667]:Modifier[85731-85737]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[85668-85675]:PrimitiveType[85738-85745]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[85676-85693]:SimpleName[85746-85763]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[85694-85707]:SingleVariableDeclaration[85764-85777]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[85709-85720]:SingleVariableDeclaration[85779-85790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[85722-85783]:Block[85792-85853]"
    }, {
      "left" : "return removeRangeMarker(0, marker, layer);",
      "right" : "return removeRangeMarker(0, marker, layer);",
      "info" : "ReturnStatement[85733-85776]:ReturnStatement[85803-85846]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86228-86234]:Modifier[86298-86304]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[86235-86242]:PrimitiveType[86305-86312]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[86243-86260]:SimpleName[86313-86330]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[86261-86270]:SingleVariableDeclaration[86331-86340]"
    }, {
      "left" : "Marker marker",
      "right" : "Marker marker",
      "info" : "SingleVariableDeclaration[86272-86285]:SingleVariableDeclaration[86342-86355]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[86287-86298]:SingleVariableDeclaration[86357-86368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86300-86368]:Block[86370-86438]"
    }, {
      "left" : "return removeRangeMarker(index, marker, layer, true);",
      "right" : "return removeRangeMarker(index, marker, layer, true);",
      "info" : "ReturnStatement[86308-86361]:ReturnStatement[86378-86431]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86862-86868]:Modifier[86932-86938]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[86869-86876]:PrimitiveType[86939-86946]"
    }, {
      "left" : "removeRangeMarker",
      "right" : "removeRangeMarker",
      "info" : "SimpleName[86877-86894]:SimpleName[86947-86964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86957-87564]:Block[87027-87704]"
    }, {
      "left" : "if (marker == null)",
      "right" : "if (marker == null)",
      "info" : "IfStatement[86968-87076]:IfStatement[87038-87146]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86988-87076]:Block[87058-87146]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'marker' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'marker' argument.\");",
      "info" : "ThrowStatement[87003-87065]:ThrowStatement[87073-87135]"
    }, {
      "left" : "ArrayList markers;",
      "right" : "ArrayList markers;",
      "info" : "VariableDeclarationStatement[87086-87104]:VariableDeclarationStatement[87156-87174]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[87114-87404]:IfStatement[87184-87474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87145-87267]:Block[87215-87337]"
    }, {
      "left" : "markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.foregroundRangeMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[87160-87256]:ExpressionStatement[87230-87326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87282-87404]:Block[87352-87474]"
    }, {
      "left" : "markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(\r\n                    index));",
      "right" : "markers = (ArrayList) this.backgroundRangeMarkers.get(new Integer(\r\n                    index));",
      "info" : "ExpressionStatement[87297-87393]:ExpressionStatement[87367-87463]"
    }, {
      "left" : "boolean removed = markers.remove(marker);",
      "right" : "boolean removed = markers.remove(marker);",
      "info" : "VariableDeclarationStatement[87414-87455]:VariableDeclarationStatement[87554-87595]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[87465-87532]:IfStatement[87605-87672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87488-87532]:Block[87628-87672]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[87503-87521]:ExpressionStatement[87643-87661]"
    }, {
      "left" : "return removed;",
      "right" : "return removed;",
      "info" : "ReturnStatement[87542-87557]:ReturnStatement[87682-87697]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[87873-87879]:Modifier[88013-88019]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[87880-87884]:PrimitiveType[88020-88024]"
    }, {
      "left" : "addAnnotation",
      "right" : "addAnnotation",
      "info" : "SimpleName[87885-87898]:SimpleName[88025-88038]"
    }, {
      "left" : "XYAnnotation annotation",
      "right" : "XYAnnotation annotation",
      "info" : "SingleVariableDeclaration[87899-87922]:SingleVariableDeclaration[88039-88062]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87924-87975]:Block[88064-88115]"
    }, {
      "left" : "addAnnotation(annotation, true);",
      "right" : "addAnnotation(annotation, true);",
      "info" : "ExpressionStatement[87935-87967]:ExpressionStatement[88075-88107]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[88290-88296]:Modifier[88430-88436]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[88297-88301]:PrimitiveType[88437-88441]"
    }, {
      "left" : "addAnnotation",
      "right" : "addAnnotation",
      "info" : "SimpleName[88302-88315]:SimpleName[88442-88455]"
    }, {
      "left" : "XYAnnotation annotation",
      "right" : "XYAnnotation annotation",
      "info" : "SingleVariableDeclaration[88316-88339]:SingleVariableDeclaration[88456-88479]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[88341-88355]:SingleVariableDeclaration[88481-88495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88357-88600]:Block[88497-88740]"
    }, {
      "left" : "if (annotation == null)",
      "right" : "if (annotation == null)",
      "info" : "IfStatement[88368-88484]:IfStatement[88508-88624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88392-88484]:Block[88532-88624]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "info" : "ThrowStatement[88407-88473]:ThrowStatement[88547-88613]"
    }, {
      "left" : "this.annotations.add(annotation);",
      "right" : "this.annotations.add(annotation);",
      "info" : "ExpressionStatement[88494-88527]:ExpressionStatement[88634-88667]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[88537-88593]:IfStatement[88677-88733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[88549-88593]:Block[88689-88733]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[88564-88582]:ExpressionStatement[88704-88722]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[88999-89005]:Modifier[89139-89145]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[89006-89013]:PrimitiveType[89146-89153]"
    }, {
      "left" : "removeAnnotation",
      "right" : "removeAnnotation",
      "info" : "SimpleName[89014-89030]:SimpleName[89154-89170]"
    }, {
      "left" : "XYAnnotation annotation",
      "right" : "XYAnnotation annotation",
      "info" : "SingleVariableDeclaration[89031-89054]:SingleVariableDeclaration[89171-89194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89056-89113]:Block[89196-89253]"
    }, {
      "left" : "return removeAnnotation(annotation, true);",
      "right" : "return removeAnnotation(annotation, true);",
      "info" : "ReturnStatement[89064-89106]:ReturnStatement[89204-89246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89503-89509]:Modifier[89643-89649]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[89510-89517]:PrimitiveType[89650-89657]"
    }, {
      "left" : "removeAnnotation",
      "right" : "removeAnnotation",
      "info" : "SimpleName[89518-89534]:SimpleName[89658-89674]"
    }, {
      "left" : "XYAnnotation annotation",
      "right" : "XYAnnotation annotation",
      "info" : "SingleVariableDeclaration[89535-89558]:SingleVariableDeclaration[89675-89698]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[89560-89574]:SingleVariableDeclaration[89700-89714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89576-89876]:Block[89716-90016]"
    }, {
      "left" : "if (annotation == null)",
      "right" : "if (annotation == null)",
      "info" : "IfStatement[89587-89703]:IfStatement[89727-89843]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89611-89703]:Block[89751-89843]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
      "info" : "ThrowStatement[89626-89692]:ThrowStatement[89766-89832]"
    }, {
      "left" : "boolean removed = this.annotations.remove(annotation);",
      "right" : "boolean removed = this.annotations.remove(annotation);",
      "info" : "VariableDeclarationStatement[89713-89767]:VariableDeclarationStatement[89853-89907]"
    }, {
      "left" : "if (removed && notify)",
      "right" : "if (removed && notify)",
      "info" : "IfStatement[89777-89844]:IfStatement[89917-89984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89800-89844]:Block[89940-89984]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[89815-89833]:ExpressionStatement[89955-89973]"
    }, {
      "left" : "return removed;",
      "right" : "return removed;",
      "info" : "ReturnStatement[89854-89869]:ReturnStatement[89994-90009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90073-90079]:Modifier[90213-90219]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[90080-90084]:SimpleType[90220-90224]"
    }, {
      "left" : "getAnnotations",
      "right" : "getAnnotations",
      "info" : "SimpleName[90085-90099]:SimpleName[90225-90239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90102-90159]:Block[90242-90299]"
    }, {
      "left" : "return new ArrayList(this.annotations);",
      "right" : "return new ArrayList(this.annotations);",
      "info" : "ReturnStatement[90113-90152]:ReturnStatement[90253-90292]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90344-90350]:Modifier[90484-90490]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[90351-90355]:PrimitiveType[90491-90495]"
    }, {
      "left" : "clearAnnotations",
      "right" : "clearAnnotations",
      "info" : "SimpleName[90356-90372]:SimpleName[90496-90512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90375-90446]:Block[90515-90586]"
    }, {
      "left" : "this.annotations.clear();",
      "right" : "this.annotations.clear();",
      "info" : "ExpressionStatement[90386-90411]:ExpressionStatement[90526-90551]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[90421-90439]:ExpressionStatement[90561-90579]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[90676-90685]:Modifier[90816-90825]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[90686-90695]:SimpleType[90826-90835]"
    }, {
      "left" : "calculateAxisSpace",
      "right" : "calculateAxisSpace",
      "info" : "SimpleName[90696-90714]:SimpleName[90836-90854]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[90715-90728]:SingleVariableDeclaration[90855-90868]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[90774-90794]:SingleVariableDeclaration[90914-90934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90796-90998]:Block[90936-91138]"
    }, {
      "left" : "AxisSpace space = new AxisSpace();",
      "right" : "AxisSpace space = new AxisSpace();",
      "info" : "VariableDeclarationStatement[90807-90841]:VariableDeclarationStatement[90947-90981]"
    }, {
      "left" : "space = calculateDomainAxisSpace(g2, plotArea, space);",
      "right" : "space = calculateDomainAxisSpace(g2, plotArea, space);",
      "info" : "ExpressionStatement[90851-90905]:ExpressionStatement[90991-91045]"
    }, {
      "left" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
      "right" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
      "info" : "ExpressionStatement[90915-90968]:ExpressionStatement[91055-91108]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[90978-90991]:ReturnStatement[91118-91131]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[91298-91307]:Modifier[91438-91447]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[91308-91317]:SimpleType[91448-91457]"
    }, {
      "left" : "calculateDomainAxisSpace",
      "right" : "calculateDomainAxisSpace",
      "info" : "SimpleName[91318-91342]:SimpleName[91458-91482]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[91343-91356]:SingleVariableDeclaration[91483-91496]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[91408-91428]:SingleVariableDeclaration[91548-91568]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[91480-91495]:SingleVariableDeclaration[91620-91635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91497-92805]:Block[91637-92945]"
    }, {
      "left" : "if (space == null)",
      "right" : "if (space == null)",
      "info" : "IfStatement[91510-91579]:IfStatement[91650-91719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91529-91579]:Block[91669-91719]"
    }, {
      "left" : "space = new AxisSpace();",
      "right" : "space = new AxisSpace();",
      "info" : "ExpressionStatement[91544-91568]:ExpressionStatement[91684-91708]"
    }, {
      "left" : "if (this.fixedDomainAxisSpace != null)",
      "right" : "if (this.fixedDomainAxisSpace != null)",
      "info" : "IfStatement[91645-92771]:IfStatement[91785-92911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91684-92351]:Block[91824-92491]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[91699-92340]:IfStatement[91839-92480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91751-92011]:Block[91891-92151]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "info" : "ExpressionStatement[91770-91873]:ExpressionStatement[91910-92013]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "info" : "ExpressionStatement[91891-91996]:ExpressionStatement[92031-92136]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[92030-92340]:IfStatement[92170-92480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92080-92340]:Block[92220-92480]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "info" : "ExpressionStatement[92099-92200]:ExpressionStatement[92239-92340]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "info" : "ExpressionStatement[92218-92325]:ExpressionStatement[92358-92465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92366-92771]:Block[92506-92911]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[92434-92760]:ForStatement[92574-92900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92483-92760]:Block[92623-92900]"
    }, {
      "left" : "Axis axis = (Axis) this.domainAxes.get(i);",
      "right" : "Axis axis = (Axis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[92502-92544]:VariableDeclarationStatement[92642-92684]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[92562-92745]:IfStatement[92702-92885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92580-92745]:Block[92720-92885]"
    }, {
      "left" : "RectangleEdge edge = getDomainAxisEdge(i);",
      "right" : "RectangleEdge edge = getDomainAxisEdge(i);",
      "info" : "VariableDeclarationStatement[92603-92645]:VariableDeclarationStatement[92743-92785]"
    }, {
      "left" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
      "right" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
      "info" : "ExpressionStatement[92667-92726]:ExpressionStatement[92807-92866]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[92783-92796]:ReturnStatement[92923-92936]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[93104-93113]:Modifier[93244-93253]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[93114-93123]:SimpleType[93254-93263]"
    }, {
      "left" : "calculateRangeAxisSpace",
      "right" : "calculateRangeAxisSpace",
      "info" : "SimpleName[93124-93147]:SimpleName[93264-93287]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[93148-93161]:SingleVariableDeclaration[93288-93301]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[93212-93232]:SingleVariableDeclaration[93352-93372]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[93283-93298]:SingleVariableDeclaration[93423-93438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93300-94596]:Block[93440-94736]"
    }, {
      "left" : "if (space == null)",
      "right" : "if (space == null)",
      "info" : "IfStatement[93313-93382]:IfStatement[93453-93522]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93332-93382]:Block[93472-93522]"
    }, {
      "left" : "space = new AxisSpace();",
      "right" : "space = new AxisSpace();",
      "info" : "ExpressionStatement[93347-93371]:ExpressionStatement[93487-93511]"
    }, {
      "left" : "if (this.fixedRangeAxisSpace != null)",
      "right" : "if (this.fixedRangeAxisSpace != null)",
      "info" : "IfStatement[93447-94564]:IfStatement[93587-94704]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93485-94148]:Block[93625-94288]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[93500-94137]:IfStatement[93640-94277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93552-93810]:Block[93692-93950]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(), \r\n                        RectangleEdge.TOP);",
      "info" : "ExpressionStatement[93571-93671]:ExpressionStatement[93711-93811]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(), \r\n                        RectangleEdge.BOTTOM);",
      "info" : "ExpressionStatement[93689-93795]:ExpressionStatement[93829-93935]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[93829-94137]:IfStatement[93969-94277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93879-94137]:Block[94019-94277]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(), \r\n                        RectangleEdge.LEFT);",
      "info" : "ExpressionStatement[93898-94000]:ExpressionStatement[94038-94140]"
    }, {
      "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(), \r\n                        RectangleEdge.RIGHT);",
      "info" : "ExpressionStatement[94018-94122]:ExpressionStatement[94158-94262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94163-94564]:Block[94303-94704]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[94230-94553]:ForStatement[94370-94693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94278-94553]:Block[94418-94693]"
    }, {
      "left" : "Axis axis = (Axis) this.rangeAxes.get(i);",
      "right" : "Axis axis = (Axis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[94297-94338]:VariableDeclarationStatement[94437-94478]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[94356-94538]:IfStatement[94496-94678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[94374-94538]:Block[94514-94678]"
    }, {
      "left" : "RectangleEdge edge = getRangeAxisEdge(i);",
      "right" : "RectangleEdge edge = getRangeAxisEdge(i);",
      "info" : "VariableDeclarationStatement[94397-94438]:VariableDeclarationStatement[94537-94578]"
    }, {
      "left" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
      "right" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
      "info" : "ExpressionStatement[94460-94519]:ExpressionStatement[94600-94659]"
    }, {
      "left" : "return space;",
      "right" : "return space;",
      "info" : "ReturnStatement[94574-94587]:ReturnStatement[94714-94727]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[95147-95153]:Modifier[95287-95293]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[95154-95158]:PrimitiveType[95294-95298]"
    }, {
      "left" : "draw",
      "right" : "draw",
      "info" : "SimpleName[95159-95163]:SimpleName[95299-95303]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[95164-95177]:SingleVariableDeclaration[95304-95317]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[95201-95217]:SingleVariableDeclaration[95341-95357]"
    }, {
      "left" : "Point2D anchor",
      "right" : "Point2D anchor",
      "info" : "SingleVariableDeclaration[95241-95255]:SingleVariableDeclaration[95381-95395]"
    }, {
      "left" : "PlotState parentState",
      "right" : "PlotState parentState",
      "info" : "SingleVariableDeclaration[95279-95300]:SingleVariableDeclaration[95419-95440]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[95324-95346]:SingleVariableDeclaration[95464-95486]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95348-105698]:Block[95488-105838]"
    }, {
      "left" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
      "right" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
      "info" : "VariableDeclarationStatement[95419-95475]:VariableDeclarationStatement[95559-95615]"
    }, {
      "left" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
      "right" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
      "info" : "VariableDeclarationStatement[95485-95543]:VariableDeclarationStatement[95625-95683]"
    }, {
      "left" : "if (b1 || b2)",
      "right" : "if (b1 || b2)",
      "info" : "IfStatement[95553-95600]:IfStatement[95693-95740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95567-95600]:Block[95707-95740]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[95582-95589]:ReturnStatement[95722-95729]"
    }, {
      "left" : "if (info != null)",
      "right" : "if (info != null)",
      "info" : "IfStatement[95648-95715]:IfStatement[95788-95855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95666-95715]:Block[95806-95855]"
    }, {
      "left" : "info.setPlotArea(area);",
      "right" : "info.setPlotArea(area);",
      "info" : "ExpressionStatement[95681-95704]:ExpressionStatement[95821-95844]"
    }, {
      "left" : "RectangleInsets insets = getInsets();",
      "right" : "RectangleInsets insets = getInsets();",
      "info" : "VariableDeclarationStatement[95795-95832]:VariableDeclarationStatement[95935-95972]"
    }, {
      "left" : "insets.trim(area);",
      "right" : "insets.trim(area);",
      "info" : "ExpressionStatement[95842-95860]:ExpressionStatement[95982-96000]"
    }, {
      "left" : "AxisSpace space = calculateAxisSpace(g2, area);",
      "right" : "AxisSpace space = calculateAxisSpace(g2, area);",
      "info" : "VariableDeclarationStatement[95872-95919]:VariableDeclarationStatement[96012-96059]"
    }, {
      "left" : "Rectangle2D dataArea = space.shrink(area, null);",
      "right" : "Rectangle2D dataArea = space.shrink(area, null);",
      "info" : "VariableDeclarationStatement[95929-95977]:VariableDeclarationStatement[96069-96117]"
    }, {
      "left" : "this.axisOffset.trim(dataArea);",
      "right" : "this.axisOffset.trim(dataArea);",
      "info" : "ExpressionStatement[95987-96018]:ExpressionStatement[96127-96158]"
    }, {
      "left" : "if (info != null)",
      "right" : "if (info != null)",
      "info" : "IfStatement[96030-96101]:IfStatement[96170-96241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96048-96101]:Block[96188-96241]"
    }, {
      "left" : "info.setDataArea(dataArea);",
      "right" : "info.setDataArea(dataArea);",
      "info" : "ExpressionStatement[96063-96090]:ExpressionStatement[96203-96230]"
    }, {
      "left" : "drawBackground(g2, dataArea);",
      "right" : "drawBackground(g2, dataArea);",
      "info" : "ExpressionStatement[96162-96191]:ExpressionStatement[96302-96331]"
    }, {
      "left" : "Map axisStateMap = drawAxes(g2, area, dataArea, info);",
      "right" : "Map axisStateMap = drawAxes(g2, area, dataArea, info);",
      "info" : "VariableDeclarationStatement[96201-96255]:VariableDeclarationStatement[96341-96395]"
    }, {
      "left" : "PlotOrientation orient = getOrientation();",
      "right" : "PlotOrientation orient = getOrientation();",
      "info" : "VariableDeclarationStatement[96267-96309]:VariableDeclarationStatement[96407-96449]"
    }, {
      "left" : "if (anchor != null && !dataArea.contains(anchor))",
      "right" : "if (anchor != null && !dataArea.contains(anchor))",
      "info" : "IfStatement[96464-96554]:IfStatement[96604-96694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96514-96554]:Block[96654-96694]"
    }, {
      "left" : "anchor = null;",
      "right" : "anchor = null;",
      "info" : "ExpressionStatement[96529-96543]:ExpressionStatement[96669-96683]"
    }, {
      "left" : "CrosshairState crosshairState = new CrosshairState();",
      "right" : "CrosshairState crosshairState = new CrosshairState();",
      "info" : "VariableDeclarationStatement[96564-96617]:VariableDeclarationStatement[96704-96757]"
    }, {
      "left" : "crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);",
      "right" : "crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);",
      "info" : "ExpressionStatement[96627-96689]:ExpressionStatement[96767-96829]"
    }, {
      "left" : "crosshairState.setAnchor(anchor);",
      "right" : "crosshairState.setAnchor(anchor);",
      "info" : "ExpressionStatement[96699-96732]:ExpressionStatement[96839-96872]"
    }, {
      "left" : "crosshairState.setAnchorX(Double.NaN);",
      "right" : "crosshairState.setAnchorX(Double.NaN);",
      "info" : "ExpressionStatement[96752-96790]:ExpressionStatement[96892-96930]"
    }, {
      "left" : "crosshairState.setAnchorY(Double.NaN);",
      "right" : "crosshairState.setAnchorY(Double.NaN);",
      "info" : "ExpressionStatement[96800-96838]:ExpressionStatement[96940-96978]"
    }, {
      "left" : "if (anchor != null)",
      "right" : "if (anchor != null)",
      "info" : "IfStatement[96860-98015]:IfStatement[97000-98155]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96880-98015]:Block[97020-98155]"
    }, {
      "left" : "ValueAxis domainAxis = getDomainAxis();",
      "right" : "ValueAxis domainAxis = getDomainAxis();",
      "info" : "VariableDeclarationStatement[96895-96934]:VariableDeclarationStatement[97035-97074]"
    }, {
      "left" : "if (domainAxis != null)",
      "right" : "if (domainAxis != null)",
      "info" : "IfStatement[96948-97438]:IfStatement[97088-97578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96972-97438]:Block[97112-97578]"
    }, {
      "left" : "double x;",
      "right" : "double x;",
      "info" : "VariableDeclarationStatement[96991-97000]:VariableDeclarationStatement[97131-97140]"
    }, {
      "left" : "if (orient == PlotOrientation.VERTICAL)",
      "right" : "if (orient == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[97018-97376]:IfStatement[97158-97516]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97058-97205]:Block[97198-97345]"
    }, {
      "left" : "x = domainAxis.java2DToValue(anchor.getX(), dataArea, \r\n                            getDomainAxisEdge());",
      "right" : "x = domainAxis.java2DToValue(anchor.getX(), dataArea, \r\n                            getDomainAxisEdge());",
      "info" : "ExpressionStatement[97081-97186]:ExpressionStatement[97221-97326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97229-97376]:Block[97369-97516]"
    }, {
      "left" : "x = domainAxis.java2DToValue(anchor.getY(), dataArea, \r\n                            getDomainAxisEdge());",
      "right" : "x = domainAxis.java2DToValue(anchor.getY(), dataArea, \r\n                            getDomainAxisEdge());",
      "info" : "ExpressionStatement[97252-97357]:ExpressionStatement[97392-97497]"
    }, {
      "left" : "crosshairState.setAnchorX(x);",
      "right" : "crosshairState.setAnchorX(x);",
      "info" : "ExpressionStatement[97394-97423]:ExpressionStatement[97534-97563]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxis();",
      "right" : "ValueAxis rangeAxis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[97452-97489]:VariableDeclarationStatement[97592-97629]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[97503-98004]:IfStatement[97643-98144]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97526-98004]:Block[97666-98144]"
    }, {
      "left" : "double y;",
      "right" : "double y;",
      "info" : "VariableDeclarationStatement[97545-97554]:VariableDeclarationStatement[97685-97694]"
    }, {
      "left" : "if (orient == PlotOrientation.VERTICAL)",
      "right" : "if (orient == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[97572-97926]:IfStatement[97712-98066]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97612-97757]:Block[97752-97897]"
    }, {
      "left" : "y = rangeAxis.java2DToValue(anchor.getY(), dataArea, \r\n                            getRangeAxisEdge());",
      "right" : "y = rangeAxis.java2DToValue(anchor.getY(), dataArea, \r\n                            getRangeAxisEdge());",
      "info" : "ExpressionStatement[97635-97738]:ExpressionStatement[97775-97878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[97781-97926]:Block[97921-98066]"
    }, {
      "left" : "y = rangeAxis.java2DToValue(anchor.getX(), dataArea, \r\n                            getRangeAxisEdge());",
      "right" : "y = rangeAxis.java2DToValue(anchor.getX(), dataArea, \r\n                            getRangeAxisEdge());",
      "info" : "ExpressionStatement[97804-97907]:ExpressionStatement[97944-98047]"
    }, {
      "left" : "crosshairState.setAnchorY(y);",
      "right" : "crosshairState.setAnchorY(y);",
      "info" : "ExpressionStatement[97944-97973]:ExpressionStatement[98084-98113]"
    }, {
      "left" : "crosshairState.setCrosshairX(getDomainCrosshairValue());",
      "right" : "crosshairState.setCrosshairX(getDomainCrosshairValue());",
      "info" : "ExpressionStatement[98025-98081]:ExpressionStatement[98165-98221]"
    }, {
      "left" : "crosshairState.setCrosshairY(getRangeCrosshairValue());",
      "right" : "crosshairState.setCrosshairY(getRangeCrosshairValue());",
      "info" : "ExpressionStatement[98091-98146]:ExpressionStatement[98231-98286]"
    }, {
      "left" : "Shape originalClip = g2.getClip();",
      "right" : "Shape originalClip = g2.getClip();",
      "info" : "VariableDeclarationStatement[98156-98190]:VariableDeclarationStatement[98296-98330]"
    }, {
      "left" : "Composite originalComposite = g2.getComposite();",
      "right" : "Composite originalComposite = g2.getComposite();",
      "info" : "VariableDeclarationStatement[98200-98248]:VariableDeclarationStatement[98340-98388]"
    }, {
      "left" : "g2.clip(dataArea);",
      "right" : "g2.clip(dataArea);",
      "info" : "ExpressionStatement[98260-98278]:ExpressionStatement[98400-98418]"
    }, {
      "left" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \r\n                getForegroundAlpha()));",
      "right" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, \r\n                getForegroundAlpha()));",
      "info" : "ExpressionStatement[98288-98397]:ExpressionStatement[98428-98537]"
    }, {
      "left" : "AxisState domainAxisState = (AxisState) axisStateMap.get(\r\n                getDomainAxis());",
      "right" : "AxisState domainAxisState = (AxisState) axisStateMap.get(\r\n                getDomainAxis());",
      "info" : "VariableDeclarationStatement[98409-98501]:VariableDeclarationStatement[98549-98641]"
    }, {
      "left" : "if (domainAxisState == null)",
      "right" : "if (domainAxisState == null)",
      "info" : "IfStatement[98511-98736]:IfStatement[98651-98876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98540-98736]:Block[98680-98876]"
    }, {
      "left" : "if (parentState != null)",
      "right" : "if (parentState != null)",
      "info" : "IfStatement[98555-98725]:IfStatement[98695-98865]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98580-98725]:Block[98720-98865]"
    }, {
      "left" : "domainAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getDomainAxis());",
      "right" : "domainAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getDomainAxis());",
      "info" : "ExpressionStatement[98599-98710]:ExpressionStatement[98739-98850]"
    }, {
      "left" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
      "right" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
      "info" : "VariableDeclarationStatement[98748-98820]:VariableDeclarationStatement[98888-98960]"
    }, {
      "left" : "if (rangeAxisState == null)",
      "right" : "if (rangeAxisState == null)",
      "info" : "IfStatement[98830-99052]:IfStatement[98970-99192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98858-99052]:Block[98998-99192]"
    }, {
      "left" : "if (parentState != null)",
      "right" : "if (parentState != null)",
      "info" : "IfStatement[98873-99041]:IfStatement[99013-99181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98898-99041]:Block[99038-99181]"
    }, {
      "left" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
      "right" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
      "info" : "ExpressionStatement[98917-99026]:ExpressionStatement[99057-99166]"
    }, {
      "left" : "if (domainAxisState != null)",
      "right" : "if (domainAxisState != null)",
      "info" : "IfStatement[99062-99179]:IfStatement[99202-99319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99091-99179]:Block[99231-99319]"
    }, {
      "left" : "drawDomainTickBands(g2, dataArea, domainAxisState.getTicks());",
      "right" : "drawDomainTickBands(g2, dataArea, domainAxisState.getTicks());",
      "info" : "ExpressionStatement[99106-99168]:ExpressionStatement[99246-99308]"
    }, {
      "left" : "if (rangeAxisState != null)",
      "right" : "if (rangeAxisState != null)",
      "info" : "IfStatement[99189-99303]:IfStatement[99329-99443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99217-99303]:Block[99357-99443]"
    }, {
      "left" : "drawRangeTickBands(g2, dataArea, rangeAxisState.getTicks());",
      "right" : "drawRangeTickBands(g2, dataArea, rangeAxisState.getTicks());",
      "info" : "ExpressionStatement[99232-99292]:ExpressionStatement[99372-99432]"
    }, {
      "left" : "if (domainAxisState != null)",
      "right" : "if (domainAxisState != null)",
      "info" : "IfStatement[99313-99481]:IfStatement[99453-99621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99342-99481]:Block[99482-99621]"
    }, {
      "left" : "drawDomainGridlines(g2, dataArea, domainAxisState.getTicks());",
      "right" : "drawDomainGridlines(g2, dataArea, domainAxisState.getTicks());",
      "info" : "ExpressionStatement[99357-99419]:ExpressionStatement[99497-99559]"
    }, {
      "left" : "drawZeroDomainBaseline(g2, dataArea);",
      "right" : "drawZeroDomainBaseline(g2, dataArea);",
      "info" : "ExpressionStatement[99433-99470]:ExpressionStatement[99573-99610]"
    }, {
      "left" : "if (rangeAxisState != null)",
      "right" : "if (rangeAxisState != null)",
      "info" : "IfStatement[99491-99655]:IfStatement[99631-99795]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99519-99655]:Block[99659-99795]"
    }, {
      "left" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
      "right" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
      "info" : "ExpressionStatement[99534-99594]:ExpressionStatement[99674-99734]"
    }, {
      "left" : "drawZeroRangeBaseline(g2, dataArea);",
      "right" : "drawZeroRangeBaseline(g2, dataArea);",
      "info" : "ExpressionStatement[99608-99644]:ExpressionStatement[99748-99784]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[99744-99871]:ForStatement[99884-100011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99792-99871]:Block[99932-100011]"
    }, {
      "left" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "right" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[99807-99860]:ExpressionStatement[99947-100000]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[99881-100007]:ForStatement[100021-100147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99929-100007]:Block[100069-100147]"
    }, {
      "left" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "right" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
      "info" : "ExpressionStatement[99944-99996]:ExpressionStatement[100084-100136]"
    }, {
      "left" : "boolean foundData = false;",
      "right" : "boolean foundData = false;",
      "info" : "VariableDeclarationStatement[100077-100103]:VariableDeclarationStatement[100217-100243]"
    }, {
      "left" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
      "right" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
      "info" : "VariableDeclarationStatement[100113-100170]:VariableDeclarationStatement[100253-100310]"
    }, {
      "left" : "if (order == DatasetRenderingOrder.FORWARD)",
      "right" : "if (order == DatasetRenderingOrder.FORWARD)",
      "info" : "IfStatement[100180-103151]:IfStatement[100320-103291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100224-101503]:Block[100364-101643]"
    }, {
      "left" : "int rendererCount = this.renderers.size();",
      "right" : "int rendererCount = this.renderers.size();",
      "info" : "VariableDeclarationStatement[100285-100327]:VariableDeclarationStatement[100425-100467]"
    }, {
      "left" : "for (int i = 0; i < rendererCount; i++)",
      "right" : "for (int i = 0; i < rendererCount; i++)",
      "info" : "ForStatement[100341-100774]:ForStatement[100481-100914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100381-100774]:Block[100521-100914]"
    }, {
      "left" : "XYItemRenderer r = getRenderer(i);",
      "right" : "XYItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[100400-100434]:VariableDeclarationStatement[100540-100574]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[100452-100759]:IfStatement[100592-100899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100467-100759]:Block[100607-100899]"
    }, {
      "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[100490-100540]:VariableDeclarationStatement[100630-100680]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[100562-100610]:VariableDeclarationStatement[100702-100750]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
      "info" : "ExpressionStatement[100632-100740]:ExpressionStatement[100772-100880]"
    }, {
      "left" : "for (int i = 0; i < getDatasetCount(); i++)",
      "right" : "for (int i = 0; i < getDatasetCount(); i++)",
      "info" : "ForStatement[100827-100997]:ForStatement[100967-101137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[100871-100997]:Block[101011-101137]"
    }, {
      "left" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
      "right" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
      "info" : "ExpressionStatement[100890-100982]:ExpressionStatement[101030-101122]"
    }, {
      "left" : "for (int i = 0; i < rendererCount; i++)",
      "right" : "for (int i = 0; i < rendererCount; i++)",
      "info" : "ForStatement[101057-101490]:ForStatement[101197-101630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101097-101490]:Block[101237-101630]"
    }, {
      "left" : "XYItemRenderer r = getRenderer(i);",
      "right" : "XYItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[101116-101150]:VariableDeclarationStatement[101256-101290]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[101168-101475]:IfStatement[101308-101615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101183-101475]:Block[101323-101615]"
    }, {
      "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[101206-101256]:VariableDeclarationStatement[101346-101396]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[101278-101326]:VariableDeclarationStatement[101418-101466]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
      "info" : "ExpressionStatement[101348-101456]:ExpressionStatement[101488-101596]"
    }, {
      "left" : "if (order == DatasetRenderingOrder.REVERSE)",
      "right" : "if (order == DatasetRenderingOrder.REVERSE)",
      "info" : "IfStatement[101518-103151]:IfStatement[101658-103291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101562-103151]:Block[101702-103291]"
    }, {
      "left" : "int rendererCount = this.renderers.size();",
      "right" : "int rendererCount = this.renderers.size();",
      "info" : "VariableDeclarationStatement[101623-101665]:VariableDeclarationStatement[101763-101805]"
    }, {
      "left" : "for (int i = rendererCount - 1; i >= 0; i--)",
      "right" : "for (int i = rendererCount - 1; i >= 0; i--)",
      "info" : "ForStatement[101679-102283]:ForStatement[101819-102423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101724-102283]:Block[101864-102423]"
    }, {
      "left" : "XYItemRenderer r = getRenderer(i);",
      "right" : "XYItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[101743-101777]:VariableDeclarationStatement[101883-101917]"
    }, {
      "left" : "if (i >= getDatasetCount())",
      "right" : "if (i >= getDatasetCount())",
      "info" : "IfStatement[101795-101943]:IfStatement[101935-102083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101823-101943]:Block[101963-102083]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[101877-101886]:ContinueStatement[102017-102026]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[101961-102268]:IfStatement[102101-102408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101976-102268]:Block[102116-102408]"
    }, {
      "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[101999-102049]:VariableDeclarationStatement[102139-102189]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[102071-102119]:VariableDeclarationStatement[102211-102259]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
      "info" : "ExpressionStatement[102141-102249]:ExpressionStatement[102281-102389]"
    }, {
      "left" : "for (int i = getDatasetCount() - 1; i >= 0; i--)",
      "right" : "for (int i = getDatasetCount() - 1; i >= 0; i--)",
      "info" : "ForStatement[102299-102474]:ForStatement[102439-102614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102348-102474]:Block[102488-102614]"
    }, {
      "left" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
      "right" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
      "info" : "ExpressionStatement[102367-102459]:ExpressionStatement[102507-102599]"
    }, {
      "left" : "for (int i = rendererCount - 1; i >= 0; i--)",
      "right" : "for (int i = rendererCount - 1; i >= 0; i--)",
      "info" : "ForStatement[102534-103138]:ForStatement[102674-103278]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102579-103138]:Block[102719-103278]"
    }, {
      "left" : "XYItemRenderer r = getRenderer(i);",
      "right" : "XYItemRenderer r = getRenderer(i);",
      "info" : "VariableDeclarationStatement[102598-102632]:VariableDeclarationStatement[102738-102772]"
    }, {
      "left" : "if (i >= getDatasetCount())",
      "right" : "if (i >= getDatasetCount())",
      "info" : "IfStatement[102650-102798]:IfStatement[102790-102938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102678-102798]:Block[102818-102938]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[102732-102741]:ContinueStatement[102872-102881]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[102816-103123]:IfStatement[102956-103263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[102831-103123]:Block[102971-103263]"
    }, {
      "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[102854-102904]:VariableDeclarationStatement[102994-103044]"
    }, {
      "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
      "info" : "VariableDeclarationStatement[102926-102974]:VariableDeclarationStatement[103066-103114]"
    }, {
      "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
      "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
      "info" : "ExpressionStatement[102996-103104]:ExpressionStatement[103136-103244]"
    }, {
      "left" : "int xAxisIndex = crosshairState.getDomainAxisIndex();",
      "right" : "int xAxisIndex = crosshairState.getDomainAxisIndex();",
      "info" : "VariableDeclarationStatement[103212-103265]:VariableDeclarationStatement[103352-103405]"
    }, {
      "left" : "ValueAxis xAxis = getDomainAxis(xAxisIndex);",
      "right" : "ValueAxis xAxis = getDomainAxis(xAxisIndex);",
      "info" : "VariableDeclarationStatement[103275-103319]:VariableDeclarationStatement[103415-103459]"
    }, {
      "left" : "RectangleEdge xAxisEdge = getDomainAxisEdge(xAxisIndex);",
      "right" : "RectangleEdge xAxisEdge = getDomainAxisEdge(xAxisIndex);",
      "info" : "VariableDeclarationStatement[103329-103385]:VariableDeclarationStatement[103469-103525]"
    }, {
      "left" : "if (!this.domainCrosshairLockedOnData && anchor != null)",
      "right" : "if (!this.domainCrosshairLockedOnData && anchor != null)",
      "info" : "IfStatement[103395-103799]:IfStatement[103535-103939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103452-103799]:Block[103592-103939]"
    }, {
      "left" : "double xx;",
      "right" : "double xx;",
      "info" : "VariableDeclarationStatement[103467-103477]:VariableDeclarationStatement[103607-103617]"
    }, {
      "left" : "if (orient == PlotOrientation.VERTICAL)",
      "right" : "if (orient == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[103491-103741]:IfStatement[103631-103881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103531-103626]:Block[103671-103766]"
    }, {
      "left" : "xx = xAxis.java2DToValue(anchor.getX(), dataArea, xAxisEdge);",
      "right" : "xx = xAxis.java2DToValue(anchor.getX(), dataArea, xAxisEdge);",
      "info" : "ExpressionStatement[103550-103611]:ExpressionStatement[103690-103751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103646-103741]:Block[103786-103881]"
    }, {
      "left" : "xx = xAxis.java2DToValue(anchor.getY(), dataArea, xAxisEdge);",
      "right" : "xx = xAxis.java2DToValue(anchor.getY(), dataArea, xAxisEdge);",
      "info" : "ExpressionStatement[103665-103726]:ExpressionStatement[103805-103866]"
    }, {
      "left" : "crosshairState.setCrosshairX(xx);",
      "right" : "crosshairState.setCrosshairX(xx);",
      "info" : "ExpressionStatement[103755-103788]:ExpressionStatement[103895-103928]"
    }, {
      "left" : "setDomainCrosshairValue(crosshairState.getCrosshairX(), false);",
      "right" : "setDomainCrosshairValue(crosshairState.getCrosshairX(), false);",
      "info" : "ExpressionStatement[103809-103872]:ExpressionStatement[103949-104012]"
    }, {
      "left" : "if (isDomainCrosshairVisible())",
      "right" : "if (isDomainCrosshairVisible())",
      "info" : "IfStatement[103882-104169]:IfStatement[104022-104309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103914-104169]:Block[104054-104309]"
    }, {
      "left" : "double x = getDomainCrosshairValue();",
      "right" : "double x = getDomainCrosshairValue();",
      "info" : "VariableDeclarationStatement[103929-103966]:VariableDeclarationStatement[104069-104106]"
    }, {
      "left" : "Paint paint = getDomainCrosshairPaint();",
      "right" : "Paint paint = getDomainCrosshairPaint();",
      "info" : "VariableDeclarationStatement[103980-104020]:VariableDeclarationStatement[104120-104160]"
    }, {
      "left" : "Stroke stroke = getDomainCrosshairStroke();",
      "right" : "Stroke stroke = getDomainCrosshairStroke();",
      "info" : "VariableDeclarationStatement[104034-104077]:VariableDeclarationStatement[104174-104217]"
    }, {
      "left" : "drawDomainCrosshair(g2, dataArea, orient, x, xAxis, stroke, paint);",
      "right" : "drawDomainCrosshair(g2, dataArea, orient, x, xAxis, stroke, paint);",
      "info" : "ExpressionStatement[104091-104158]:ExpressionStatement[104231-104298]"
    }, {
      "left" : "int yAxisIndex = crosshairState.getRangeAxisIndex();",
      "right" : "int yAxisIndex = crosshairState.getRangeAxisIndex();",
      "info" : "VariableDeclarationStatement[104229-104281]:VariableDeclarationStatement[104369-104421]"
    }, {
      "left" : "ValueAxis yAxis = getRangeAxis(yAxisIndex);",
      "right" : "ValueAxis yAxis = getRangeAxis(yAxisIndex);",
      "info" : "VariableDeclarationStatement[104291-104334]:VariableDeclarationStatement[104431-104474]"
    }, {
      "left" : "RectangleEdge yAxisEdge = getRangeAxisEdge(yAxisIndex);",
      "right" : "RectangleEdge yAxisEdge = getRangeAxisEdge(yAxisIndex);",
      "info" : "VariableDeclarationStatement[104344-104399]:VariableDeclarationStatement[104484-104539]"
    }, {
      "left" : "if (!this.rangeCrosshairLockedOnData && anchor != null)",
      "right" : "if (!this.rangeCrosshairLockedOnData && anchor != null)",
      "info" : "IfStatement[104409-104798]:IfStatement[104549-104938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104465-104798]:Block[104605-104938]"
    }, {
      "left" : "double yy;",
      "right" : "double yy;",
      "info" : "VariableDeclarationStatement[104480-104490]:VariableDeclarationStatement[104620-104630]"
    }, {
      "left" : "if (orient == PlotOrientation.VERTICAL)",
      "right" : "if (orient == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[104504-104740]:IfStatement[104644-104880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104544-104639]:Block[104684-104779]"
    }, {
      "left" : "yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",
      "right" : "yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",
      "info" : "ExpressionStatement[104563-104624]:ExpressionStatement[104703-104764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104645-104740]:Block[104785-104880]"
    }, {
      "left" : "yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",
      "right" : "yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",
      "info" : "ExpressionStatement[104664-104725]:ExpressionStatement[104804-104865]"
    }, {
      "left" : "crosshairState.setCrosshairY(yy);",
      "right" : "crosshairState.setCrosshairY(yy);",
      "info" : "ExpressionStatement[104754-104787]:ExpressionStatement[104894-104927]"
    }, {
      "left" : "setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",
      "right" : "setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",
      "info" : "ExpressionStatement[104808-104870]:ExpressionStatement[104948-105010]"
    }, {
      "left" : "if (isRangeCrosshairVisible())",
      "right" : "if (isRangeCrosshairVisible())",
      "info" : "IfStatement[104880-105162]:IfStatement[105020-105302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104911-105162]:Block[105051-105302]"
    }, {
      "left" : "double y = getRangeCrosshairValue();",
      "right" : "double y = getRangeCrosshairValue();",
      "info" : "VariableDeclarationStatement[104926-104962]:VariableDeclarationStatement[105066-105102]"
    }, {
      "left" : "Paint paint = getRangeCrosshairPaint();",
      "right" : "Paint paint = getRangeCrosshairPaint();",
      "info" : "VariableDeclarationStatement[104976-105015]:VariableDeclarationStatement[105116-105155]"
    }, {
      "left" : "Stroke stroke = getRangeCrosshairStroke();",
      "right" : "Stroke stroke = getRangeCrosshairStroke();",
      "info" : "VariableDeclarationStatement[105029-105071]:VariableDeclarationStatement[105169-105211]"
    }, {
      "left" : "drawRangeCrosshair(g2, dataArea, orient, y, yAxis, stroke, paint);",
      "right" : "drawRangeCrosshair(g2, dataArea, orient, y, yAxis, stroke, paint);",
      "info" : "ExpressionStatement[105085-105151]:ExpressionStatement[105225-105291]"
    }, {
      "left" : "if (!foundData)",
      "right" : "if (!foundData)",
      "info" : "IfStatement[105174-105248]:IfStatement[105314-105388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105190-105248]:Block[105330-105388]"
    }, {
      "left" : "drawNoDataMessage(g2, dataArea);",
      "right" : "drawNoDataMessage(g2, dataArea);",
      "info" : "ExpressionStatement[105205-105237]:ExpressionStatement[105345-105377]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[105260-105387]:ForStatement[105400-105527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105308-105387]:Block[105448-105527]"
    }, {
      "left" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "right" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[105323-105376]:ExpressionStatement[105463-105516]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[105397-105523]:ForStatement[105537-105663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105445-105523]:Block[105585-105663]"
    }, {
      "left" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "right" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
      "info" : "ExpressionStatement[105460-105512]:ExpressionStatement[105600-105652]"
    }, {
      "left" : "drawAnnotations(g2, dataArea, info);",
      "right" : "drawAnnotations(g2, dataArea, info);",
      "info" : "ExpressionStatement[105535-105571]:ExpressionStatement[105675-105711]"
    }, {
      "left" : "g2.setClip(originalClip);",
      "right" : "g2.setClip(originalClip);",
      "info" : "ExpressionStatement[105581-105606]:ExpressionStatement[105721-105746]"
    }, {
      "left" : "g2.setComposite(originalComposite);",
      "right" : "g2.setComposite(originalComposite);",
      "info" : "ExpressionStatement[105616-105651]:ExpressionStatement[105756-105791]"
    }, {
      "left" : "drawOutline(g2, dataArea);",
      "right" : "drawOutline(g2, dataArea);",
      "info" : "ExpressionStatement[105663-105689]:ExpressionStatement[105803-105829]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[105846-105852]:Modifier[105986-105992]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[105853-105857]:PrimitiveType[105993-105997]"
    }, {
      "left" : "drawBackground",
      "right" : "drawBackground",
      "info" : "SimpleName[105858-105872]:SimpleName[105998-106012]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[105873-105886]:SingleVariableDeclaration[106013-106026]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[105888-105904]:SingleVariableDeclaration[106028-106044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105906-106041]:Block[106046-106181]"
    }, {
      "left" : "fillBackground(g2, area, this.orientation);",
      "right" : "fillBackground(g2, area, this.orientation);",
      "info" : "ExpressionStatement[105917-105960]:ExpressionStatement[106057-106100]"
    }, {
      "left" : "drawQuadrants(g2, area);",
      "right" : "drawQuadrants(g2, area);",
      "info" : "ExpressionStatement[105970-105994]:ExpressionStatement[106110-106134]"
    }, {
      "left" : "drawBackgroundImage(g2, area);",
      "right" : "drawBackgroundImage(g2, area);",
      "info" : "ExpressionStatement[106004-106034]:ExpressionStatement[106144-106174]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[106268-106277]:Modifier[106408-106417]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[106278-106282]:PrimitiveType[106418-106422]"
    }, {
      "left" : "drawQuadrants",
      "right" : "drawQuadrants",
      "info" : "SimpleName[106283-106296]:SimpleName[106423-106436]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[106297-106310]:SingleVariableDeclaration[106437-106450]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[106312-106328]:SingleVariableDeclaration[106452-106468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106330-110788]:Block[106470-110928]"
    }, {
      "left" : "boolean somethingToDraw = false;",
      "right" : "boolean somethingToDraw = false;",
      "info" : "VariableDeclarationStatement[106398-106430]:VariableDeclarationStatement[106538-106570]"
    }, {
      "left" : "ValueAxis xAxis = getDomainAxis();",
      "right" : "ValueAxis xAxis = getDomainAxis();",
      "info" : "VariableDeclarationStatement[106442-106476]:VariableDeclarationStatement[106582-106616]"
    }, {
      "left" : "double x = xAxis.getRange().constrain(this.quadrantOrigin.getX());",
      "right" : "double x = xAxis.getRange().constrain(this.quadrantOrigin.getX());",
      "info" : "VariableDeclarationStatement[106486-106552]:VariableDeclarationStatement[106626-106692]"
    }, {
      "left" : "double xx = xAxis.valueToJava2D(x, area, getDomainAxisEdge());",
      "right" : "double xx = xAxis.valueToJava2D(x, area, getDomainAxisEdge());",
      "info" : "VariableDeclarationStatement[106562-106624]:VariableDeclarationStatement[106702-106764]"
    }, {
      "left" : "ValueAxis yAxis = getRangeAxis();",
      "right" : "ValueAxis yAxis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[106636-106669]:VariableDeclarationStatement[106776-106809]"
    }, {
      "left" : "double y = yAxis.getRange().constrain(this.quadrantOrigin.getY());",
      "right" : "double y = yAxis.getRange().constrain(this.quadrantOrigin.getY());",
      "info" : "VariableDeclarationStatement[106679-106745]:VariableDeclarationStatement[106819-106885]"
    }, {
      "left" : "double yy = yAxis.valueToJava2D(y, area, getRangeAxisEdge());",
      "right" : "double yy = yAxis.valueToJava2D(y, area, getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[106755-106816]:VariableDeclarationStatement[106895-106956]"
    }, {
      "left" : "double xmin = xAxis.getLowerBound();",
      "right" : "double xmin = xAxis.getLowerBound();",
      "info" : "VariableDeclarationStatement[106828-106864]:VariableDeclarationStatement[106968-107004]"
    }, {
      "left" : "double xxmin = xAxis.valueToJava2D(xmin, area, getDomainAxisEdge());",
      "right" : "double xxmin = xAxis.valueToJava2D(xmin, area, getDomainAxisEdge());",
      "info" : "VariableDeclarationStatement[106874-106942]:VariableDeclarationStatement[107014-107082]"
    }, {
      "left" : "double xmax = xAxis.getUpperBound();",
      "right" : "double xmax = xAxis.getUpperBound();",
      "info" : "VariableDeclarationStatement[106954-106990]:VariableDeclarationStatement[107094-107130]"
    }, {
      "left" : "double xxmax = xAxis.valueToJava2D(xmax, area, getDomainAxisEdge());",
      "right" : "double xxmax = xAxis.valueToJava2D(xmax, area, getDomainAxisEdge());",
      "info" : "VariableDeclarationStatement[107000-107068]:VariableDeclarationStatement[107140-107208]"
    }, {
      "left" : "double ymin = yAxis.getLowerBound();",
      "right" : "double ymin = yAxis.getLowerBound();",
      "info" : "VariableDeclarationStatement[107080-107116]:VariableDeclarationStatement[107220-107256]"
    }, {
      "left" : "double yymin = yAxis.valueToJava2D(ymin, area, getRangeAxisEdge());",
      "right" : "double yymin = yAxis.valueToJava2D(ymin, area, getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[107126-107193]:VariableDeclarationStatement[107266-107333]"
    }, {
      "left" : "double ymax = yAxis.getUpperBound();",
      "right" : "double ymax = yAxis.getUpperBound();",
      "info" : "VariableDeclarationStatement[107205-107241]:VariableDeclarationStatement[107345-107381]"
    }, {
      "left" : "double yymax = yAxis.valueToJava2D(ymax, area, getRangeAxisEdge());",
      "right" : "double yymax = yAxis.valueToJava2D(ymax, area, getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[107251-107318]:VariableDeclarationStatement[107391-107458]"
    }, {
      "left" : "Rectangle2D[] r = new Rectangle2D[] {null, null, null, null};",
      "right" : "Rectangle2D[] r = new Rectangle2D[] {null, null, null, null};",
      "info" : "VariableDeclarationStatement[107330-107391]:VariableDeclarationStatement[107470-107531]"
    }, {
      "left" : "if (this.quadrantPaint[0] != null)",
      "right" : "if (this.quadrantPaint[0] != null)",
      "info" : "IfStatement[107401-108125]:IfStatement[107541-108265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107436-108125]:Block[107576-108265]"
    }, {
      "left" : "if (x > xmin && y < ymax)",
      "right" : "if (x > xmin && y < ymax)",
      "info" : "IfStatement[107451-108114]:IfStatement[107591-108254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107477-108114]:Block[107617-108254]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[107496-108058]:IfStatement[107636-108198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107548-107788]:Block[107688-107928]"
    }, {
      "left" : "r[0] = new Rectangle2D.Double(Math.min(yymax, yy), \r\n                            Math.min(xxmin, xx), Math.abs(yy - yymax), \r\n                            Math.abs(xx - xxmin)\r\n                    );",
      "right" : "r[0] = new Rectangle2D.Double(Math.min(yymax, yy), \r\n                            Math.min(xxmin, xx), Math.abs(yy - yymax), \r\n                            Math.abs(xx - xxmin)\r\n                    );",
      "info" : "ExpressionStatement[107571-107769]:ExpressionStatement[107711-107909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107811-108058]:Block[107951-108198]"
    }, {
      "left" : "r[0] = new Rectangle2D.Double(Math.min(xxmin, xx), \r\n                            Math.min(yymax, yy), Math.abs(xx - xxmin), \r\n                            Math.abs(yy - yymax));",
      "right" : "r[0] = new Rectangle2D.Double(Math.min(xxmin, xx), \r\n                            Math.min(yymax, yy), Math.abs(xx - xxmin), \r\n                            Math.abs(yy - yymax));",
      "info" : "ExpressionStatement[107863-108039]:ExpressionStatement[108003-108179]"
    }, {
      "left" : "somethingToDraw = true;",
      "right" : "somethingToDraw = true;",
      "info" : "ExpressionStatement[108076-108099]:ExpressionStatement[108216-108239]"
    }, {
      "left" : "if (this.quadrantPaint[1] != null)",
      "right" : "if (this.quadrantPaint[1] != null)",
      "info" : "IfStatement[108135-108837]:IfStatement[108275-108977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108170-108837]:Block[108310-108977]"
    }, {
      "left" : "if (x < xmax && y < ymax)",
      "right" : "if (x < xmax && y < ymax)",
      "info" : "IfStatement[108185-108826]:IfStatement[108325-108966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108211-108826]:Block[108351-108966]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[108230-108770]:IfStatement[108370-108910]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108282-108500]:Block[108422-108640]"
    }, {
      "left" : "r[1] = new Rectangle2D.Double(Math.min(yymax, yy), \r\n                            Math.min(xxmax, xx), Math.abs(yy - yymax), \r\n                            Math.abs(xx - xxmax));",
      "right" : "r[1] = new Rectangle2D.Double(Math.min(yymax, yy), \r\n                            Math.min(xxmax, xx), Math.abs(yy - yymax), \r\n                            Math.abs(xx - xxmax));",
      "info" : "ExpressionStatement[108305-108481]:ExpressionStatement[108445-108621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108523-108770]:Block[108663-108910]"
    }, {
      "left" : "r[1] = new Rectangle2D.Double(Math.min(xx, xxmax), \r\n                            Math.min(yymax, yy), Math.abs(xx - xxmax), \r\n                            Math.abs(yy - yymax));",
      "right" : "r[1] = new Rectangle2D.Double(Math.min(xx, xxmax), \r\n                            Math.min(yymax, yy), Math.abs(xx - xxmax), \r\n                            Math.abs(yy - yymax));",
      "info" : "ExpressionStatement[108575-108751]:ExpressionStatement[108715-108891]"
    }, {
      "left" : "somethingToDraw = true;",
      "right" : "somethingToDraw = true;",
      "info" : "ExpressionStatement[108788-108811]:ExpressionStatement[108928-108951]"
    }, {
      "left" : "if (this.quadrantPaint[2] != null)",
      "right" : "if (this.quadrantPaint[2] != null)",
      "info" : "IfStatement[108847-109549]:IfStatement[108987-109689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108882-109549]:Block[109022-109689]"
    }, {
      "left" : "if (x > xmin && y > ymin)",
      "right" : "if (x > xmin && y > ymin)",
      "info" : "IfStatement[108897-109538]:IfStatement[109037-109678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108923-109538]:Block[109063-109678]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[108942-109482]:IfStatement[109082-109622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[108994-109212]:Block[109134-109352]"
    }, {
      "left" : "r[2] = new Rectangle2D.Double(Math.min(yymin, yy), \r\n                            Math.min(xxmin, xx), Math.abs(yy - yymin), \r\n                            Math.abs(xx - xxmin));",
      "right" : "r[2] = new Rectangle2D.Double(Math.min(yymin, yy), \r\n                            Math.min(xxmin, xx), Math.abs(yy - yymin), \r\n                            Math.abs(xx - xxmin));",
      "info" : "ExpressionStatement[109017-109193]:ExpressionStatement[109157-109333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109235-109482]:Block[109375-109622]"
    }, {
      "left" : "r[2] = new Rectangle2D.Double(Math.min(xxmin, xx), \r\n                            Math.min(yymin, yy), Math.abs(xx - xxmin), \r\n                            Math.abs(yy - yymin));",
      "right" : "r[2] = new Rectangle2D.Double(Math.min(xxmin, xx), \r\n                            Math.min(yymin, yy), Math.abs(xx - xxmin), \r\n                            Math.abs(yy - yymin));",
      "info" : "ExpressionStatement[109287-109463]:ExpressionStatement[109427-109603]"
    }, {
      "left" : "somethingToDraw = true;",
      "right" : "somethingToDraw = true;",
      "info" : "ExpressionStatement[109500-109523]:ExpressionStatement[109640-109663]"
    }, {
      "left" : "if (this.quadrantPaint[3] != null)",
      "right" : "if (this.quadrantPaint[3] != null)",
      "info" : "IfStatement[109559-110261]:IfStatement[109699-110401]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109594-110261]:Block[109734-110401]"
    }, {
      "left" : "if (x < xmax && y > ymin)",
      "right" : "if (x < xmax && y > ymin)",
      "info" : "IfStatement[109609-110250]:IfStatement[109749-110390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109635-110250]:Block[109775-110390]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[109654-110194]:IfStatement[109794-110334]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109706-109924]:Block[109846-110064]"
    }, {
      "left" : "r[3] = new Rectangle2D.Double(Math.min(yymin, yy), \r\n                            Math.min(xxmax, xx), Math.abs(yy - yymin), \r\n                            Math.abs(xx - xxmax));",
      "right" : "r[3] = new Rectangle2D.Double(Math.min(yymin, yy), \r\n                            Math.min(xxmax, xx), Math.abs(yy - yymin), \r\n                            Math.abs(xx - xxmax));",
      "info" : "ExpressionStatement[109729-109905]:ExpressionStatement[109869-110045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109947-110194]:Block[110087-110334]"
    }, {
      "left" : "r[3] = new Rectangle2D.Double(Math.min(xx, xxmax), \r\n                            Math.min(yymin, yy), Math.abs(xx - xxmax), \r\n                            Math.abs(yy - yymin));",
      "right" : "r[3] = new Rectangle2D.Double(Math.min(xx, xxmax), \r\n                            Math.min(yymin, yy), Math.abs(xx - xxmax), \r\n                            Math.abs(yy - yymin));",
      "info" : "ExpressionStatement[109999-110175]:ExpressionStatement[110139-110315]"
    }, {
      "left" : "somethingToDraw = true;",
      "right" : "somethingToDraw = true;",
      "info" : "ExpressionStatement[110212-110235]:ExpressionStatement[110352-110375]"
    }, {
      "left" : "if (somethingToDraw)",
      "right" : "if (somethingToDraw)",
      "info" : "IfStatement[110271-110781]:IfStatement[110411-110921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110292-110781]:Block[110432-110921]"
    }, {
      "left" : "Composite originalComposite = g2.getComposite();",
      "right" : "Composite originalComposite = g2.getComposite();",
      "info" : "VariableDeclarationStatement[110307-110355]:VariableDeclarationStatement[110447-110495]"
    }, {
      "left" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\r\n                    getBackgroundAlpha()));",
      "right" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\r\n                    getBackgroundAlpha()));",
      "info" : "ExpressionStatement[110369-110481]:ExpressionStatement[110509-110621]"
    }, {
      "left" : "for (int i = 0; i < 4; i++)",
      "right" : "for (int i = 0; i < 4; i++)",
      "info" : "ForStatement[110495-110721]:ForStatement[110635-110861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110523-110721]:Block[110663-110861]"
    }, {
      "left" : "if (this.quadrantPaint[i] != null && r[i] != null)",
      "right" : "if (this.quadrantPaint[i] != null && r[i] != null)",
      "info" : "IfStatement[110542-110706]:IfStatement[110682-110846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110593-110706]:Block[110733-110846]"
    }, {
      "left" : "g2.setPaint(this.quadrantPaint[i]);",
      "right" : "g2.setPaint(this.quadrantPaint[i]);",
      "info" : "ExpressionStatement[110616-110651]:ExpressionStatement[110756-110791]"
    }, {
      "left" : "g2.fill(r[i]);",
      "right" : "g2.fill(r[i]);",
      "info" : "ExpressionStatement[110673-110687]:ExpressionStatement[110813-110827]"
    }, {
      "left" : "g2.setComposite(originalComposite);",
      "right" : "g2.setComposite(originalComposite);",
      "info" : "ExpressionStatement[110735-110770]:ExpressionStatement[110875-110910]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[111033-111039]:Modifier[111173-111179]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[111040-111044]:PrimitiveType[111180-111184]"
    }, {
      "left" : "drawDomainTickBands",
      "right" : "drawDomainTickBands",
      "info" : "SimpleName[111045-111064]:SimpleName[111185-111204]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[111065-111078]:SingleVariableDeclaration[111205-111218]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[111080-111100]:SingleVariableDeclaration[111220-111240]"
    }, {
      "left" : "List ticks",
      "right" : "List ticks",
      "info" : "SingleVariableDeclaration[111139-111149]:SingleVariableDeclaration[111279-111289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111151-112090]:Block[111291-112230]"
    }, {
      "left" : "Paint bandPaint = getDomainTickBandPaint();",
      "right" : "Paint bandPaint = getDomainTickBandPaint();",
      "info" : "VariableDeclarationStatement[111162-111205]:VariableDeclarationStatement[111302-111345]"
    }, {
      "left" : "if (bandPaint != null)",
      "right" : "if (bandPaint != null)",
      "info" : "IfStatement[111215-112083]:IfStatement[111355-112223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111238-112083]:Block[111378-112223]"
    }, {
      "left" : "boolean fillBand = false;",
      "right" : "boolean fillBand = false;",
      "info" : "VariableDeclarationStatement[111253-111278]:VariableDeclarationStatement[111393-111418]"
    }, {
      "left" : "ValueAxis xAxis = getDomainAxis();",
      "right" : "ValueAxis xAxis = getDomainAxis();",
      "info" : "VariableDeclarationStatement[111292-111326]:VariableDeclarationStatement[111432-111466]"
    }, {
      "left" : "double previous = xAxis.getLowerBound();",
      "right" : "double previous = xAxis.getLowerBound();",
      "info" : "VariableDeclarationStatement[111340-111380]:VariableDeclarationStatement[111480-111520]"
    }, {
      "left" : "Iterator iterator = ticks.iterator();",
      "right" : "Iterator iterator = ticks.iterator();",
      "info" : "VariableDeclarationStatement[111394-111431]:VariableDeclarationStatement[111534-111571]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[111445-111860]:WhileStatement[111585-112000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111472-111860]:Block[111612-112000]"
    }, {
      "left" : "ValueTick tick = (ValueTick) iterator.next();",
      "right" : "ValueTick tick = (ValueTick) iterator.next();",
      "info" : "VariableDeclarationStatement[111491-111536]:VariableDeclarationStatement[111631-111676]"
    }, {
      "left" : "double current = tick.getValue();",
      "right" : "double current = tick.getValue();",
      "info" : "VariableDeclarationStatement[111554-111587]:VariableDeclarationStatement[111694-111727]"
    }, {
      "left" : "if (fillBand)",
      "right" : "if (fillBand)",
      "info" : "IfStatement[111605-111769]:IfStatement[111745-111909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111619-111769]:Block[111759-111909]"
    }, {
      "left" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,\r\n                            previous, current);",
      "right" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,\r\n                            previous, current);",
      "info" : "ExpressionStatement[111642-111750]:ExpressionStatement[111782-111890]"
    }, {
      "left" : "previous = current;",
      "right" : "previous = current;",
      "info" : "ExpressionStatement[111787-111806]:ExpressionStatement[111927-111946]"
    }, {
      "left" : "fillBand = !fillBand;",
      "right" : "fillBand = !fillBand;",
      "info" : "ExpressionStatement[111824-111845]:ExpressionStatement[111964-111985]"
    }, {
      "left" : "double end = xAxis.getUpperBound();",
      "right" : "double end = xAxis.getUpperBound();",
      "info" : "VariableDeclarationStatement[111874-111909]:VariableDeclarationStatement[112014-112049]"
    }, {
      "left" : "if (fillBand)",
      "right" : "if (fillBand)",
      "info" : "IfStatement[111923-112072]:IfStatement[112063-112212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111937-112072]:Block[112077-112212]"
    }, {
      "left" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea, \r\n                        previous, end);",
      "right" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea, \r\n                        previous, end);",
      "info" : "ExpressionStatement[111956-112057]:ExpressionStatement[112096-112197]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[112333-112339]:Modifier[112473-112479]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[112340-112344]:PrimitiveType[112480-112484]"
    }, {
      "left" : "drawRangeTickBands",
      "right" : "drawRangeTickBands",
      "info" : "SimpleName[112345-112363]:SimpleName[112485-112503]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[112364-112377]:SingleVariableDeclaration[112504-112517]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[112379-112399]:SingleVariableDeclaration[112519-112539]"
    }, {
      "left" : "List ticks",
      "right" : "List ticks",
      "info" : "SingleVariableDeclaration[112437-112447]:SingleVariableDeclaration[112577-112587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112449-113380]:Block[112589-113520]"
    }, {
      "left" : "Paint bandPaint = getRangeTickBandPaint();",
      "right" : "Paint bandPaint = getRangeTickBandPaint();",
      "info" : "VariableDeclarationStatement[112460-112502]:VariableDeclarationStatement[112600-112642]"
    }, {
      "left" : "if (bandPaint != null)",
      "right" : "if (bandPaint != null)",
      "info" : "IfStatement[112512-113373]:IfStatement[112652-113513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112535-113373]:Block[112675-113513]"
    }, {
      "left" : "boolean fillBand = false;",
      "right" : "boolean fillBand = false;",
      "info" : "VariableDeclarationStatement[112550-112575]:VariableDeclarationStatement[112690-112715]"
    }, {
      "left" : "ValueAxis axis = getRangeAxis();",
      "right" : "ValueAxis axis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[112589-112621]:VariableDeclarationStatement[112729-112761]"
    }, {
      "left" : "double previous = axis.getLowerBound();",
      "right" : "double previous = axis.getLowerBound();",
      "info" : "VariableDeclarationStatement[112635-112674]:VariableDeclarationStatement[112775-112814]"
    }, {
      "left" : "Iterator iterator = ticks.iterator();",
      "right" : "Iterator iterator = ticks.iterator();",
      "info" : "VariableDeclarationStatement[112688-112725]:VariableDeclarationStatement[112828-112865]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[112739-113153]:WhileStatement[112879-113293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112766-113153]:Block[112906-113293]"
    }, {
      "left" : "ValueTick tick = (ValueTick) iterator.next();",
      "right" : "ValueTick tick = (ValueTick) iterator.next();",
      "info" : "VariableDeclarationStatement[112785-112830]:VariableDeclarationStatement[112925-112970]"
    }, {
      "left" : "double current = tick.getValue();",
      "right" : "double current = tick.getValue();",
      "info" : "VariableDeclarationStatement[112848-112881]:VariableDeclarationStatement[112988-113021]"
    }, {
      "left" : "if (fillBand)",
      "right" : "if (fillBand)",
      "info" : "IfStatement[112899-113062]:IfStatement[113039-113202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[112913-113062]:Block[113053-113202]"
    }, {
      "left" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea, \r\n                            previous, current);",
      "right" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea, \r\n                            previous, current);",
      "info" : "ExpressionStatement[112936-113043]:ExpressionStatement[113076-113183]"
    }, {
      "left" : "previous = current;",
      "right" : "previous = current;",
      "info" : "ExpressionStatement[113080-113099]:ExpressionStatement[113220-113239]"
    }, {
      "left" : "fillBand = !fillBand;",
      "right" : "fillBand = !fillBand;",
      "info" : "ExpressionStatement[113117-113138]:ExpressionStatement[113257-113278]"
    }, {
      "left" : "double end = axis.getUpperBound();",
      "right" : "double end = axis.getUpperBound();",
      "info" : "VariableDeclarationStatement[113167-113201]:VariableDeclarationStatement[113307-113341]"
    }, {
      "left" : "if (fillBand)",
      "right" : "if (fillBand)",
      "info" : "IfStatement[113215-113362]:IfStatement[113355-113502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113229-113362]:Block[113369-113502]"
    }, {
      "left" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea, \r\n                        previous, end);",
      "right" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea, \r\n                        previous, end);",
      "info" : "ExpressionStatement[113248-113347]:ExpressionStatement[113388-113487]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[113874-113883]:Modifier[114014-114023]"
    }, {
      "left" : "Map",
      "right" : "Map",
      "info" : "SimpleType[113884-113887]:SimpleType[114024-114027]"
    }, {
      "left" : "drawAxes",
      "right" : "drawAxes",
      "info" : "SimpleName[113888-113896]:SimpleName[114028-114036]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[113897-113910]:SingleVariableDeclaration[114037-114050]"
    }, {
      "left" : "Rectangle2D plotArea",
      "right" : "Rectangle2D plotArea",
      "info" : "SingleVariableDeclaration[113940-113960]:SingleVariableDeclaration[114080-114100]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[113990-114010]:SingleVariableDeclaration[114130-114150]"
    }, {
      "left" : "PlotRenderingInfo plotState",
      "right" : "PlotRenderingInfo plotState",
      "info" : "SingleVariableDeclaration[114040-114067]:SingleVariableDeclaration[114180-114207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114069-116980]:Block[114209-117120]"
    }, {
      "left" : "AxisCollection axisCollection = new AxisCollection();",
      "right" : "AxisCollection axisCollection = new AxisCollection();",
      "info" : "VariableDeclarationStatement[114082-114135]:VariableDeclarationStatement[114222-114275]"
    }, {
      "left" : "for (int index = 0; index < this.domainAxes.size(); index++)",
      "right" : "for (int index = 0; index < this.domainAxes.size(); index++)",
      "info" : "ForStatement[114187-114447]:ForStatement[114327-114587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114248-114447]:Block[114388-114587]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(index);",
      "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(index);",
      "info" : "VariableDeclarationStatement[114263-114319]:VariableDeclarationStatement[114403-114459]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[114333-114436]:IfStatement[114473-114576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114351-114436]:Block[114491-114576]"
    }, {
      "left" : "axisCollection.add(axis, getDomainAxisEdge(index));",
      "right" : "axisCollection.add(axis, getDomainAxisEdge(index));",
      "info" : "ExpressionStatement[114370-114421]:ExpressionStatement[114510-114561]"
    }, {
      "left" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
      "right" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
      "info" : "ForStatement[114498-114758]:ForStatement[114638-114898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114558-114758]:Block[114698-114898]"
    }, {
      "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
      "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
      "info" : "VariableDeclarationStatement[114573-114629]:VariableDeclarationStatement[114713-114769]"
    }, {
      "left" : "if (yAxis != null)",
      "right" : "if (yAxis != null)",
      "info" : "IfStatement[114643-114747]:IfStatement[114783-114887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[114662-114747]:Block[114802-114887]"
    }, {
      "left" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
      "right" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
      "info" : "ExpressionStatement[114681-114732]:ExpressionStatement[114821-114872]"
    }, {
      "left" : "Map axisStateMap = new HashMap();",
      "right" : "Map axisStateMap = new HashMap();",
      "info" : "VariableDeclarationStatement[114770-114803]:VariableDeclarationStatement[114910-114943]"
    }, {
      "left" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
      "right" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
      "info" : "VariableDeclarationStatement[114845-114957]:VariableDeclarationStatement[114985-115097]"
    }, {
      "left" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
      "right" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
      "info" : "VariableDeclarationStatement[114967-115028]:VariableDeclarationStatement[115107-115168]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[115038-115344]:WhileStatement[115178-115484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115065-115344]:Block[115205-115484]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "info" : "VariableDeclarationStatement[115080-115125]:VariableDeclarationStatement[115220-115265]"
    }, {
      "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.TOP, plotState);",
      "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.TOP, plotState);",
      "info" : "VariableDeclarationStatement[115139-115250]:VariableDeclarationStatement[115279-115390]"
    }, {
      "left" : "cursor = info.getCursor();",
      "right" : "cursor = info.getCursor();",
      "info" : "ExpressionStatement[115264-115290]:ExpressionStatement[115404-115430]"
    }, {
      "left" : "axisStateMap.put(axis, info);",
      "right" : "axisStateMap.put(axis, info);",
      "info" : "ExpressionStatement[115304-115333]:ExpressionStatement[115444-115473]"
    }, {
      "left" : "cursor = dataArea.getMaxY()\r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
      "right" : "cursor = dataArea.getMaxY()\r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
      "info" : "ExpressionStatement[115389-115497]:ExpressionStatement[115529-115637]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtBottom().iterator();",
      "right" : "iterator = axisCollection.getAxesAtBottom().iterator();",
      "info" : "ExpressionStatement[115507-115562]:ExpressionStatement[115647-115702]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[115572-115881]:WhileStatement[115712-116021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115599-115881]:Block[115739-116021]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "info" : "VariableDeclarationStatement[115614-115659]:VariableDeclarationStatement[115754-115799]"
    }, {
      "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.BOTTOM, plotState);",
      "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.BOTTOM, plotState);",
      "info" : "VariableDeclarationStatement[115673-115787]:VariableDeclarationStatement[115813-115927]"
    }, {
      "left" : "cursor = info.getCursor();",
      "right" : "cursor = info.getCursor();",
      "info" : "ExpressionStatement[115801-115827]:ExpressionStatement[115941-115967]"
    }, {
      "left" : "axisStateMap.put(axis, info);",
      "right" : "axisStateMap.put(axis, info);",
      "info" : "ExpressionStatement[115841-115870]:ExpressionStatement[115981-116010]"
    }, {
      "left" : "cursor = dataArea.getMinX()\r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
      "right" : "cursor = dataArea.getMinX()\r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
      "info" : "ExpressionStatement[115924-116029]:ExpressionStatement[116064-116169]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtLeft().iterator();",
      "right" : "iterator = axisCollection.getAxesAtLeft().iterator();",
      "info" : "ExpressionStatement[116039-116092]:ExpressionStatement[116179-116232]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[116102-116409]:WhileStatement[116242-116549]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116129-116409]:Block[116269-116549]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "info" : "VariableDeclarationStatement[116144-116189]:VariableDeclarationStatement[116284-116329]"
    }, {
      "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.LEFT, plotState);",
      "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.LEFT, plotState);",
      "info" : "VariableDeclarationStatement[116203-116315]:VariableDeclarationStatement[116343-116455]"
    }, {
      "left" : "cursor = info.getCursor();",
      "right" : "cursor = info.getCursor();",
      "info" : "ExpressionStatement[116329-116355]:ExpressionStatement[116469-116495]"
    }, {
      "left" : "axisStateMap.put(axis, info);",
      "right" : "axisStateMap.put(axis, info);",
      "info" : "ExpressionStatement[116369-116398]:ExpressionStatement[116509-116538]"
    }, {
      "left" : "cursor = dataArea.getMaxX()\r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
      "right" : "cursor = dataArea.getMaxX()\r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
      "info" : "ExpressionStatement[116453-116559]:ExpressionStatement[116593-116699]"
    }, {
      "left" : "iterator = axisCollection.getAxesAtRight().iterator();",
      "right" : "iterator = axisCollection.getAxesAtRight().iterator();",
      "info" : "ExpressionStatement[116569-116623]:ExpressionStatement[116709-116763]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[116633-116941]:WhileStatement[116773-117081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116660-116941]:Block[116800-117081]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
      "info" : "VariableDeclarationStatement[116675-116720]:VariableDeclarationStatement[116815-116860]"
    }, {
      "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.RIGHT, plotState);",
      "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea, \r\n                    RectangleEdge.RIGHT, plotState);",
      "info" : "VariableDeclarationStatement[116734-116847]:VariableDeclarationStatement[116874-116987]"
    }, {
      "left" : "cursor = info.getCursor();",
      "right" : "cursor = info.getCursor();",
      "info" : "ExpressionStatement[116861-116887]:ExpressionStatement[117001-117027]"
    }, {
      "left" : "axisStateMap.put(axis, info);",
      "right" : "axisStateMap.put(axis, info);",
      "info" : "ExpressionStatement[116901-116930]:ExpressionStatement[117041-117070]"
    }, {
      "left" : "return axisStateMap;",
      "right" : "return axisStateMap;",
      "info" : "ReturnStatement[116953-116973]:ReturnStatement[117093-117113]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[117678-117684]:Modifier[117818-117824]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[117685-117692]:PrimitiveType[117825-117832]"
    }, {
      "left" : "render",
      "right" : "render",
      "info" : "SimpleName[117693-117699]:SimpleName[117833-117839]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[117700-117713]:SingleVariableDeclaration[117840-117853]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[117742-117762]:SingleVariableDeclaration[117882-117902]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[117791-117800]:SingleVariableDeclaration[117931-117940]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[117829-117851]:SingleVariableDeclaration[117969-117991]"
    }, {
      "left" : "CrosshairState crosshairState",
      "right" : "CrosshairState crosshairState",
      "info" : "SingleVariableDeclaration[117880-117909]:SingleVariableDeclaration[118020-118049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117911-121347]:Block[118051-121487]"
    }, {
      "left" : "boolean foundData = false;",
      "right" : "boolean foundData = false;",
      "info" : "VariableDeclarationStatement[117924-117950]:VariableDeclarationStatement[118064-118090]"
    }, {
      "left" : "XYDataset dataset = getDataset(index);",
      "right" : "XYDataset dataset = getDataset(index);",
      "info" : "VariableDeclarationStatement[117960-117998]:VariableDeclarationStatement[118100-118138]"
    }, {
      "left" : "if (!DatasetUtilities.isEmptyOrNull(dataset))",
      "right" : "if (!DatasetUtilities.isEmptyOrNull(dataset))",
      "info" : "IfStatement[118008-121313]:IfStatement[118148-121453]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118054-121313]:Block[118194-121453]"
    }, {
      "left" : "foundData = true;",
      "right" : "foundData = true;",
      "info" : "ExpressionStatement[118069-118086]:ExpressionStatement[118209-118226]"
    }, {
      "left" : "ValueAxis xAxis = getDomainAxisForDataset(index);",
      "right" : "ValueAxis xAxis = getDomainAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[118100-118149]:VariableDeclarationStatement[118240-118289]"
    }, {
      "left" : "ValueAxis yAxis = getRangeAxisForDataset(index);",
      "right" : "ValueAxis yAxis = getRangeAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[118163-118211]:VariableDeclarationStatement[118303-118351]"
    }, {
      "left" : "XYItemRenderer renderer = getRenderer(index);",
      "right" : "XYItemRenderer renderer = getRenderer(index);",
      "info" : "VariableDeclarationStatement[118225-118270]:VariableDeclarationStatement[118365-118410]"
    }, {
      "left" : "if (renderer == null)",
      "right" : "if (renderer == null)",
      "info" : "IfStatement[118284-118497]:IfStatement[118424-118637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118306-118497]:Block[118446-118637]"
    }, {
      "left" : "renderer = getRenderer();",
      "right" : "renderer = getRenderer();",
      "info" : "ExpressionStatement[118325-118350]:ExpressionStatement[118465-118490]"
    }, {
      "left" : "if (renderer == null)",
      "right" : "if (renderer == null)",
      "info" : "IfStatement[118368-118482]:IfStatement[118508-118622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118390-118482]:Block[118530-118622]"
    }, {
      "left" : "return foundData;",
      "right" : "return foundData;",
      "info" : "ReturnStatement[118446-118463]:ReturnStatement[118586-118603]"
    }, {
      "left" : "XYItemRendererState state = renderer.initialise(g2, dataArea, this,\r\n                    dataset, info);",
      "right" : "XYItemRendererState state = renderer.initialise(g2, dataArea, this,\r\n                    dataset, info);",
      "info" : "VariableDeclarationStatement[118513-118617]:VariableDeclarationStatement[118653-118757]"
    }, {
      "left" : "int passCount = renderer.getPassCount();",
      "right" : "int passCount = renderer.getPassCount();",
      "info" : "VariableDeclarationStatement[118631-118671]:VariableDeclarationStatement[118771-118811]"
    }, {
      "left" : "SeriesRenderingOrder seriesOrder = getSeriesRenderingOrder();",
      "right" : "SeriesRenderingOrder seriesOrder = getSeriesRenderingOrder();",
      "info" : "VariableDeclarationStatement[118687-118748]:VariableDeclarationStatement[118827-118888]"
    }, {
      "left" : "if (seriesOrder == SeriesRenderingOrder.REVERSE)",
      "right" : "if (seriesOrder == SeriesRenderingOrder.REVERSE)",
      "info" : "IfStatement[118762-121302]:IfStatement[118902-121442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118811-120106]:Block[118951-120246]"
    }, {
      "left" : "for (int pass = 0; pass < passCount; pass++)",
      "right" : "for (int pass = 0; pass < passCount; pass++)",
      "info" : "ForStatement[118880-120091]:ForStatement[119020-120231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118925-120091]:Block[119065-120231]"
    }, {
      "left" : "int seriesCount = dataset.getSeriesCount();",
      "right" : "int seriesCount = dataset.getSeriesCount();",
      "info" : "VariableDeclarationStatement[118948-118991]:VariableDeclarationStatement[119088-119131]"
    }, {
      "left" : "for (int series = seriesCount - 1; series >= 0; series--)",
      "right" : "for (int series = seriesCount - 1; series >= 0; series--)",
      "info" : "ForStatement[119013-120072]:ForStatement[119153-120212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119071-120072]:Block[119211-120212]"
    }, {
      "left" : "int firstItem = 0;",
      "right" : "int firstItem = 0;",
      "info" : "VariableDeclarationStatement[119098-119116]:VariableDeclarationStatement[119238-119256]"
    }, {
      "left" : "int lastItem = dataset.getItemCount(series) - 1;",
      "right" : "int lastItem = dataset.getItemCount(series) - 1;",
      "info" : "VariableDeclarationStatement[119142-119190]:VariableDeclarationStatement[119282-119330]"
    }, {
      "left" : "if (lastItem == -1)",
      "right" : "if (lastItem == -1)",
      "info" : "IfStatement[119216-119303]:IfStatement[119356-119443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119236-119303]:Block[119376-119443]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[119267-119276]:ContinueStatement[119407-119416]"
    }, {
      "left" : "if (state.getProcessVisibleItemsOnly())",
      "right" : "if (state.getProcessVisibleItemsOnly())",
      "info" : "IfStatement[119329-119728]:IfStatement[119469-119868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119369-119728]:Block[119509-119868]"
    }, {
      "left" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(), \r\n                                    xAxis.getUpperBound());",
      "right" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(), \r\n                                    xAxis.getUpperBound());",
      "info" : "VariableDeclarationStatement[119400-119590]:VariableDeclarationStatement[119540-119730]"
    }, {
      "left" : "firstItem = itemBounds[0];",
      "right" : "firstItem = itemBounds[0];",
      "info" : "ExpressionStatement[119620-119646]:ExpressionStatement[119760-119786]"
    }, {
      "left" : "lastItem = itemBounds[1];",
      "right" : "lastItem = itemBounds[1];",
      "info" : "ExpressionStatement[119676-119701]:ExpressionStatement[119816-119841]"
    }, {
      "left" : "for (int item = firstItem; item <= lastItem; item++)",
      "right" : "for (int item = firstItem; item <= lastItem; item++)",
      "info" : "ForStatement[119754-120049]:ForStatement[119894-120189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119807-120049]:Block[119947-120189]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, info,\r\n                                    this, xAxis, yAxis, dataset, series, item,\r\n                                    crosshairState, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, info,\r\n                                    this, xAxis, yAxis, dataset, series, item,\r\n                                    crosshairState, pass);",
      "info" : "ExpressionStatement[119838-120022]:ExpressionStatement[119978-120162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120125-121302]:Block[120265-121442]"
    }, {
      "left" : "for (int pass = 0; pass < passCount; pass++)",
      "right" : "for (int pass = 0; pass < passCount; pass++)",
      "info" : "ForStatement[120194-121287]:ForStatement[120334-121427]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120239-121287]:Block[120379-121427]"
    }, {
      "left" : "int seriesCount = dataset.getSeriesCount();",
      "right" : "int seriesCount = dataset.getSeriesCount();",
      "info" : "VariableDeclarationStatement[120262-120305]:VariableDeclarationStatement[120402-120445]"
    }, {
      "left" : "for (int series = 0; series < seriesCount; series++)",
      "right" : "for (int series = 0; series < seriesCount; series++)",
      "info" : "ForStatement[120327-121268]:ForStatement[120467-121408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120380-121268]:Block[120520-121408]"
    }, {
      "left" : "int firstItem = 0;",
      "right" : "int firstItem = 0;",
      "info" : "VariableDeclarationStatement[120407-120425]:VariableDeclarationStatement[120547-120565]"
    }, {
      "left" : "int lastItem = dataset.getItemCount(series) - 1;",
      "right" : "int lastItem = dataset.getItemCount(series) - 1;",
      "info" : "VariableDeclarationStatement[120451-120499]:VariableDeclarationStatement[120591-120639]"
    }, {
      "left" : "if (state.getProcessVisibleItemsOnly())",
      "right" : "if (state.getProcessVisibleItemsOnly())",
      "info" : "IfStatement[120525-120924]:IfStatement[120665-121064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120565-120924]:Block[120705-121064]"
    }, {
      "left" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(), \r\n                                    xAxis.getUpperBound());",
      "right" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(), \r\n                                    xAxis.getUpperBound());",
      "info" : "VariableDeclarationStatement[120596-120786]:VariableDeclarationStatement[120736-120926]"
    }, {
      "left" : "firstItem = itemBounds[0];",
      "right" : "firstItem = itemBounds[0];",
      "info" : "ExpressionStatement[120816-120842]:ExpressionStatement[120956-120982]"
    }, {
      "left" : "lastItem = itemBounds[1];",
      "right" : "lastItem = itemBounds[1];",
      "info" : "ExpressionStatement[120872-120897]:ExpressionStatement[121012-121037]"
    }, {
      "left" : "for (int item = firstItem; item <= lastItem; item++)",
      "right" : "for (int item = firstItem; item <= lastItem; item++)",
      "info" : "ForStatement[120950-121245]:ForStatement[121090-121385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121003-121245]:Block[121143-121385]"
    }, {
      "left" : "renderer.drawItem(g2, state, dataArea, info,\r\n                                    this, xAxis, yAxis, dataset, series, item,\r\n                                    crosshairState, pass);",
      "right" : "renderer.drawItem(g2, state, dataArea, info,\r\n                                    this, xAxis, yAxis, dataset, series, item,\r\n                                    crosshairState, pass);",
      "info" : "ExpressionStatement[121034-121218]:ExpressionStatement[121174-121358]"
    }, {
      "left" : "return foundData;",
      "right" : "return foundData;",
      "info" : "ReturnStatement[121323-121340]:ReturnStatement[121463-121480]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[121503-121509]:Modifier[121643-121649]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[121510-121519]:SimpleType[121650-121659]"
    }, {
      "left" : "getDomainAxisForDataset",
      "right" : "getDomainAxisForDataset",
      "info" : "SimpleName[121520-121543]:SimpleName[121660-121683]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[121544-121553]:SingleVariableDeclaration[121684-121693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121555-122096]:Block[121695-122236]"
    }, {
      "left" : "if (index < 0 || index >= getDatasetCount())",
      "right" : "if (index < 0 || index >= getDatasetCount())",
      "info" : "IfStatement[121568-121734]:IfStatement[121708-121874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121613-121734]:Block[121753-121874]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Index \" + index \r\n                    + \" out of bounds.\");",
      "right" : "throw new IllegalArgumentException(\"Index \" + index \r\n                    + \" out of bounds.\");",
      "info" : "ThrowStatement[121628-121723]:ThrowStatement[121768-121863]"
    }, {
      "left" : "ValueAxis valueAxis = null;",
      "right" : "ValueAxis valueAxis = null;",
      "info" : "VariableDeclarationStatement[121746-121773]:VariableDeclarationStatement[121886-121913]"
    }, {
      "left" : "Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(\r\n                new Integer(index));",
      "right" : "Integer axisIndex = (Integer) this.datasetToDomainAxisMap.get(\r\n                new Integer(index));",
      "info" : "VariableDeclarationStatement[121783-121883]:VariableDeclarationStatement[121923-122023]"
    }, {
      "left" : "if (axisIndex != null)",
      "right" : "if (axisIndex != null)",
      "info" : "IfStatement[121893-122060]:IfStatement[122033-122200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[121916-121990]:Block[122056-122130]"
    }, {
      "left" : "valueAxis = getDomainAxis(axisIndex.intValue());",
      "right" : "valueAxis = getDomainAxis(axisIndex.intValue());",
      "info" : "ExpressionStatement[121931-121979]:ExpressionStatement[122071-122119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122005-122060]:Block[122145-122200]"
    }, {
      "left" : "valueAxis = getDomainAxis(0);",
      "right" : "valueAxis = getDomainAxis(0);",
      "info" : "ExpressionStatement[122020-122049]:ExpressionStatement[122160-122189]"
    }, {
      "left" : "return valueAxis;",
      "right" : "return valueAxis;",
      "info" : "ReturnStatement[122070-122087]:ReturnStatement[122210-122227]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122251-122257]:Modifier[122391-122397]"
    }, {
      "left" : "ValueAxis",
      "right" : "ValueAxis",
      "info" : "SimpleType[122258-122267]:SimpleType[122398-122407]"
    }, {
      "left" : "getRangeAxisForDataset",
      "right" : "getRangeAxisForDataset",
      "info" : "SimpleName[122268-122290]:SimpleName[122408-122430]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[122291-122300]:SingleVariableDeclaration[122431-122440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122302-122835]:Block[122442-122975]"
    }, {
      "left" : "if (index < 0 || index >= getDatasetCount())",
      "right" : "if (index < 0 || index >= getDatasetCount())",
      "info" : "IfStatement[122315-122481]:IfStatement[122455-122621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122360-122481]:Block[122500-122621]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Index \" + index \r\n                    + \" out of bounds.\");",
      "right" : "throw new IllegalArgumentException(\"Index \" + index \r\n                    + \" out of bounds.\");",
      "info" : "ThrowStatement[122375-122470]:ThrowStatement[122515-122610]"
    }, {
      "left" : "ValueAxis valueAxis = null;",
      "right" : "ValueAxis valueAxis = null;",
      "info" : "VariableDeclarationStatement[122493-122520]:VariableDeclarationStatement[122633-122660]"
    }, {
      "left" : "Integer axisIndex\r\n            = (Integer) this.datasetToRangeAxisMap.get(new Integer(index));",
      "right" : "Integer axisIndex\r\n            = (Integer) this.datasetToRangeAxisMap.get(new Integer(index));",
      "info" : "VariableDeclarationStatement[122530-122624]:VariableDeclarationStatement[122670-122764]"
    }, {
      "left" : "if (axisIndex != null)",
      "right" : "if (axisIndex != null)",
      "info" : "IfStatement[122634-122799]:IfStatement[122774-122939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122657-122730]:Block[122797-122870]"
    }, {
      "left" : "valueAxis = getRangeAxis(axisIndex.intValue());",
      "right" : "valueAxis = getRangeAxis(axisIndex.intValue());",
      "info" : "ExpressionStatement[122672-122719]:ExpressionStatement[122812-122859]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122745-122799]:Block[122885-122939]"
    }, {
      "left" : "valueAxis = getRangeAxis(0);",
      "right" : "valueAxis = getRangeAxis(0);",
      "info" : "ExpressionStatement[122760-122788]:ExpressionStatement[122900-122928]"
    }, {
      "left" : "return valueAxis;",
      "right" : "return valueAxis;",
      "info" : "ReturnStatement[122809-122826]:ReturnStatement[122949-122966]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[123118-123127]:Modifier[123258-123267]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[123128-123132]:PrimitiveType[123268-123272]"
    }, {
      "left" : "drawDomainGridlines",
      "right" : "drawDomainGridlines",
      "info" : "SimpleName[123133-123152]:SimpleName[123273-123292]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[123153-123166]:SingleVariableDeclaration[123293-123306]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[123168-123188]:SingleVariableDeclaration[123308-123328]"
    }, {
      "left" : "List ticks",
      "right" : "List ticks",
      "info" : "SingleVariableDeclaration[123230-123240]:SingleVariableDeclaration[123370-123380]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123242-123906]:Block[123382-124046]"
    }, {
      "left" : "if (getRenderer() == null)",
      "right" : "if (getRenderer() == null)",
      "info" : "IfStatement[123296-123356]:IfStatement[123436-123496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123323-123356]:Block[123463-123496]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[123338-123345]:ReturnStatement[123478-123485]"
    }, {
      "left" : "if (isDomainGridlinesVisible())",
      "right" : "if (isDomainGridlinesVisible())",
      "info" : "IfStatement[123418-123899]:IfStatement[123558-124039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123450-123899]:Block[123590-124039]"
    }, {
      "left" : "Stroke gridStroke = getDomainGridlineStroke();",
      "right" : "Stroke gridStroke = getDomainGridlineStroke();",
      "info" : "VariableDeclarationStatement[123465-123511]:VariableDeclarationStatement[123605-123651]"
    }, {
      "left" : "Paint gridPaint = getDomainGridlinePaint();",
      "right" : "Paint gridPaint = getDomainGridlinePaint();",
      "info" : "VariableDeclarationStatement[123525-123568]:VariableDeclarationStatement[123665-123708]"
    }, {
      "left" : "Iterator iterator = ticks.iterator();",
      "right" : "Iterator iterator = ticks.iterator();",
      "info" : "VariableDeclarationStatement[123582-123619]:VariableDeclarationStatement[123722-123759]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[123633-123888]:WhileStatement[123773-124028]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123660-123888]:Block[123800-124028]"
    }, {
      "left" : "ValueTick tick = (ValueTick) iterator.next();",
      "right" : "ValueTick tick = (ValueTick) iterator.next();",
      "info" : "VariableDeclarationStatement[123679-123724]:VariableDeclarationStatement[123819-123864]"
    }, {
      "left" : "getRenderer().drawDomainLine(g2, this, getDomainAxis(),\r\n                        dataArea, tick.getValue(), gridPaint, gridStroke);",
      "right" : "getRenderer().drawDomainLine(g2, this, getDomainAxis(),\r\n                        dataArea, tick.getValue(), gridPaint, gridStroke);",
      "info" : "ExpressionStatement[123742-123873]:ExpressionStatement[123882-124013]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[124215-124224]:Modifier[124355-124364]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[124225-124229]:PrimitiveType[124365-124369]"
    }, {
      "left" : "drawRangeGridlines",
      "right" : "drawRangeGridlines",
      "info" : "SimpleName[124230-124248]:SimpleName[124370-124388]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[124249-124262]:SingleVariableDeclaration[124389-124402]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[124264-124280]:SingleVariableDeclaration[124404-124420]"
    }, {
      "left" : "List ticks",
      "right" : "List ticks",
      "info" : "SingleVariableDeclaration[124321-124331]:SingleVariableDeclaration[124461-124471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124333-125250]:Block[124473-125390]"
    }, {
      "left" : "if (getRenderer() == null)",
      "right" : "if (getRenderer() == null)",
      "info" : "IfStatement[124387-124447]:IfStatement[124527-124587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124414-124447]:Block[124554-124587]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[124429-124436]:ReturnStatement[124569-124576]"
    }, {
      "left" : "if (isRangeGridlinesVisible())",
      "right" : "if (isRangeGridlinesVisible())",
      "info" : "IfStatement[124508-125243]:IfStatement[124648-125383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124539-125243]:Block[124679-125383]"
    }, {
      "left" : "Stroke gridStroke = getRangeGridlineStroke();",
      "right" : "Stroke gridStroke = getRangeGridlineStroke();",
      "info" : "VariableDeclarationStatement[124554-124599]:VariableDeclarationStatement[124694-124739]"
    }, {
      "left" : "Paint gridPaint = getRangeGridlinePaint();",
      "right" : "Paint gridPaint = getRangeGridlinePaint();",
      "info" : "VariableDeclarationStatement[124613-124655]:VariableDeclarationStatement[124753-124795]"
    }, {
      "left" : "ValueAxis axis = getRangeAxis();",
      "right" : "ValueAxis axis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[124669-124701]:VariableDeclarationStatement[124809-124841]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[124715-125232]:IfStatement[124855-125372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124733-125232]:Block[124873-125372]"
    }, {
      "left" : "Iterator iterator = ticks.iterator();",
      "right" : "Iterator iterator = ticks.iterator();",
      "info" : "VariableDeclarationStatement[124752-124789]:VariableDeclarationStatement[124892-124929]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[124807-125217]:WhileStatement[124947-125357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[124834-125217]:Block[124974-125357]"
    }, {
      "left" : "ValueTick tick = (ValueTick) iterator.next();",
      "right" : "ValueTick tick = (ValueTick) iterator.next();",
      "info" : "VariableDeclarationStatement[124857-124902]:VariableDeclarationStatement[124997-125042]"
    }, {
      "left" : "if (tick.getValue() != 0.0\r\n                            || !isRangeZeroBaselineVisible())",
      "right" : "if (tick.getValue() != 0.0\r\n                            || !isRangeZeroBaselineVisible())",
      "info" : "IfStatement[124924-125198]:IfStatement[125064-125338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125014-125198]:Block[125154-125338]"
    }, {
      "left" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(), \r\n                                area, tick.getValue(), gridPaint, gridStroke);",
      "right" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(), \r\n                                area, tick.getValue(), gridPaint, gridStroke);",
      "info" : "ExpressionStatement[125041-125175]:ExpressionStatement[125181-125315]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[125528-125537]:Modifier[125668-125677]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[125538-125542]:PrimitiveType[125678-125682]"
    }, {
      "left" : "drawZeroDomainBaseline",
      "right" : "drawZeroDomainBaseline",
      "info" : "SimpleName[125543-125565]:SimpleName[125683-125705]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[125566-125579]:SingleVariableDeclaration[125706-125719]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[125581-125597]:SingleVariableDeclaration[125721-125737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125599-125885]:Block[125739-126025]"
    }, {
      "left" : "if (isDomainZeroBaselineVisible())",
      "right" : "if (isDomainZeroBaselineVisible())",
      "info" : "IfStatement[125610-125878]:IfStatement[125750-126018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125645-125878]:Block[125785-126018]"
    }, {
      "left" : "XYItemRenderer r = getRenderer();",
      "right" : "XYItemRenderer r = getRenderer();",
      "info" : "VariableDeclarationStatement[125660-125693]:VariableDeclarationStatement[125800-125833]"
    }, {
      "left" : "r.drawDomainLine(g2, this, getDomainAxis(), area, 0.0, \r\n                    this.domainZeroBaselinePaint, \r\n                    this.domainZeroBaselineStroke);",
      "right" : "r.drawDomainLine(g2, this, getDomainAxis(), area, 0.0, \r\n                    this.domainZeroBaselinePaint, \r\n                    this.domainZeroBaselineStroke);",
      "info" : "ExpressionStatement[125707-125867]:ExpressionStatement[125847-126007]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[126131-126140]:Modifier[126271-126280]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[126141-126145]:PrimitiveType[126281-126285]"
    }, {
      "left" : "drawZeroRangeBaseline",
      "right" : "drawZeroRangeBaseline",
      "info" : "SimpleName[126146-126167]:SimpleName[126286-126307]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[126168-126181]:SingleVariableDeclaration[126308-126321]"
    }, {
      "left" : "Rectangle2D area",
      "right" : "Rectangle2D area",
      "info" : "SingleVariableDeclaration[126183-126199]:SingleVariableDeclaration[126323-126339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126201-126425]:Block[126341-126565]"
    }, {
      "left" : "if (isRangeZeroBaselineVisible())",
      "right" : "if (isRangeZeroBaselineVisible())",
      "info" : "IfStatement[126212-126418]:IfStatement[126352-126558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126246-126418]:Block[126386-126558]"
    }, {
      "left" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(), area, 0.0, \r\n                    this.rangeZeroBaselinePaint, this.rangeZeroBaselineStroke);",
      "right" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(), area, 0.0, \r\n                    this.rangeZeroBaselinePaint, this.rangeZeroBaselineStroke);",
      "info" : "ExpressionStatement[126261-126407]:ExpressionStatement[126401-126547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[126630-126636]:Modifier[126770-126776]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[126637-126641]:PrimitiveType[126777-126781]"
    }, {
      "left" : "drawAnnotations",
      "right" : "drawAnnotations",
      "info" : "SimpleName[126642-126657]:SimpleName[126782-126797]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[126658-126671]:SingleVariableDeclaration[126798-126811]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[126706-126726]:SingleVariableDeclaration[126846-126866]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[126761-126783]:SingleVariableDeclaration[126901-126923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126785-127143]:Block[126925-127283]"
    }, {
      "left" : "Iterator iterator = this.annotations.iterator();",
      "right" : "Iterator iterator = this.annotations.iterator();",
      "info" : "VariableDeclarationStatement[126798-126846]:VariableDeclarationStatement[126938-126986]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[126856-127134]:WhileStatement[126996-127274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126883-127134]:Block[127023-127274]"
    }, {
      "left" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
      "right" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
      "info" : "VariableDeclarationStatement[126898-126955]:VariableDeclarationStatement[127038-127095]"
    }, {
      "left" : "ValueAxis xAxis = getDomainAxis();",
      "right" : "ValueAxis xAxis = getDomainAxis();",
      "info" : "VariableDeclarationStatement[126969-127003]:VariableDeclarationStatement[127109-127143]"
    }, {
      "left" : "ValueAxis yAxis = getRangeAxis();",
      "right" : "ValueAxis yAxis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[127017-127050]:VariableDeclarationStatement[127157-127190]"
    }, {
      "left" : "annotation.draw(g2, this, dataArea, xAxis, yAxis, 0, info);",
      "right" : "annotation.draw(g2, this, dataArea, xAxis, yAxis, 0, info);",
      "info" : "ExpressionStatement[127064-127123]:ExpressionStatement[127204-127263]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[127496-127505]:Modifier[127636-127645]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[127506-127510]:PrimitiveType[127646-127650]"
    }, {
      "left" : "drawDomainMarkers",
      "right" : "drawDomainMarkers",
      "info" : "SimpleName[127511-127528]:SimpleName[127651-127668]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[127529-127542]:SingleVariableDeclaration[127669-127682]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[127544-127564]:SingleVariableDeclaration[127684-127704]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[127604-127613]:SingleVariableDeclaration[127744-127753]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[127615-127626]:SingleVariableDeclaration[127755-127766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127628-128363]:Block[127768-128503]"
    }, {
      "left" : "XYItemRenderer r = getRenderer(index);",
      "right" : "XYItemRenderer r = getRenderer(index);",
      "info" : "VariableDeclarationStatement[127641-127679]:VariableDeclarationStatement[127781-127819]"
    }, {
      "left" : "if (r == null)",
      "right" : "if (r == null)",
      "info" : "IfStatement[127689-127737]:IfStatement[127829-127877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127704-127737]:Block[127844-127877]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[127719-127726]:ReturnStatement[127859-127866]"
    }, {
      "left" : "if (index >= getDatasetCount())",
      "right" : "if (index >= getDatasetCount())",
      "info" : "IfStatement[127866-127931]:IfStatement[128006-128071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127898-127931]:Block[128038-128071]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[127913-127920]:ReturnStatement[128053-128060]"
    }, {
      "left" : "Collection markers = getDomainMarkers(index, layer);",
      "right" : "Collection markers = getDomainMarkers(index, layer);",
      "info" : "VariableDeclarationStatement[127945-127997]:VariableDeclarationStatement[128085-128137]"
    }, {
      "left" : "ValueAxis axis = getDomainAxisForDataset(index);",
      "right" : "ValueAxis axis = getDomainAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[128007-128055]:VariableDeclarationStatement[128147-128195]"
    }, {
      "left" : "if (markers != null && axis != null)",
      "right" : "if (markers != null && axis != null)",
      "info" : "IfStatement[128065-128354]:IfStatement[128205-128494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128102-128354]:Block[128242-128494]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[128117-128156]:VariableDeclarationStatement[128257-128296]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[128170-128343]:WhileStatement[128310-128483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128197-128343]:Block[128337-128483]"
    }, {
      "left" : "Marker marker = (Marker) iterator.next();",
      "right" : "Marker marker = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[128216-128257]:VariableDeclarationStatement[128356-128397]"
    }, {
      "left" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
      "right" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
      "info" : "ExpressionStatement[128275-128328]:ExpressionStatement[128415-128468]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[128718-128727]:Modifier[128858-128867]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[128728-128732]:PrimitiveType[128868-128872]"
    }, {
      "left" : "drawRangeMarkers",
      "right" : "drawRangeMarkers",
      "info" : "SimpleName[128733-128749]:SimpleName[128873-128889]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[128750-128763]:SingleVariableDeclaration[128890-128903]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[128765-128785]:SingleVariableDeclaration[128905-128925]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[128824-128833]:SingleVariableDeclaration[128964-128973]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[128835-128846]:SingleVariableDeclaration[128975-128986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128848-129574]:Block[128988-129714]"
    }, {
      "left" : "XYItemRenderer r = getRenderer(index);",
      "right" : "XYItemRenderer r = getRenderer(index);",
      "info" : "VariableDeclarationStatement[128861-128899]:VariableDeclarationStatement[129001-129039]"
    }, {
      "left" : "if (r == null)",
      "right" : "if (r == null)",
      "info" : "IfStatement[128909-128957]:IfStatement[129049-129097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128924-128957]:Block[129064-129097]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[128939-128946]:ReturnStatement[129079-129086]"
    }, {
      "left" : "if (index >= getDatasetCount())",
      "right" : "if (index >= getDatasetCount())",
      "info" : "IfStatement[129086-129151]:IfStatement[129226-129291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129118-129151]:Block[129258-129291]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[129133-129140]:ReturnStatement[129273-129280]"
    }, {
      "left" : "Collection markers = getRangeMarkers(index, layer);",
      "right" : "Collection markers = getRangeMarkers(index, layer);",
      "info" : "VariableDeclarationStatement[129161-129212]:VariableDeclarationStatement[129301-129352]"
    }, {
      "left" : "ValueAxis axis = getRangeAxisForDataset(index);",
      "right" : "ValueAxis axis = getRangeAxisForDataset(index);",
      "info" : "VariableDeclarationStatement[129222-129269]:VariableDeclarationStatement[129362-129409]"
    }, {
      "left" : "if (markers != null && axis != null)",
      "right" : "if (markers != null && axis != null)",
      "info" : "IfStatement[129279-129567]:IfStatement[129419-129707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129316-129567]:Block[129456-129707]"
    }, {
      "left" : "Iterator iterator = markers.iterator();",
      "right" : "Iterator iterator = markers.iterator();",
      "info" : "VariableDeclarationStatement[129331-129370]:VariableDeclarationStatement[129471-129510]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[129384-129556]:WhileStatement[129524-129696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129411-129556]:Block[129551-129696]"
    }, {
      "left" : "Marker marker = (Marker) iterator.next();",
      "right" : "Marker marker = (Marker) iterator.next();",
      "info" : "VariableDeclarationStatement[129430-129471]:VariableDeclarationStatement[129570-129611]"
    }, {
      "left" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
      "right" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
      "info" : "ExpressionStatement[129489-129541]:ExpressionStatement[129629-129681]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[129846-129852]:Modifier[129986-129992]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[129853-129863]:SimpleType[129993-130003]"
    }, {
      "left" : "getDomainMarkers",
      "right" : "getDomainMarkers",
      "info" : "SimpleName[129864-129880]:SimpleName[130004-130020]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[129881-129892]:SingleVariableDeclaration[130021-130032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129894-129946]:Block[130034-130086]"
    }, {
      "left" : "return getDomainMarkers(0, layer);",
      "right" : "return getDomainMarkers(0, layer);",
      "info" : "ReturnStatement[129905-129939]:ReturnStatement[130045-130079]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[130217-130223]:Modifier[130357-130363]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[130224-130234]:SimpleType[130364-130374]"
    }, {
      "left" : "getRangeMarkers",
      "right" : "getRangeMarkers",
      "info" : "SimpleName[130235-130250]:SimpleName[130375-130390]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[130251-130262]:SingleVariableDeclaration[130391-130402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130264-130315]:Block[130404-130455]"
    }, {
      "left" : "return getRangeMarkers(0, layer);",
      "right" : "return getRangeMarkers(0, layer);",
      "info" : "ReturnStatement[130275-130308]:ReturnStatement[130415-130448]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[130645-130651]:Modifier[130785-130791]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[130652-130662]:SimpleType[130792-130802]"
    }, {
      "left" : "getDomainMarkers",
      "right" : "getDomainMarkers",
      "info" : "SimpleName[130663-130679]:SimpleName[130803-130819]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[130680-130689]:SingleVariableDeclaration[130820-130829]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[130691-130702]:SingleVariableDeclaration[130831-130842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130704-131181]:Block[130844-131321]"
    }, {
      "left" : "Collection result = null;",
      "right" : "Collection result = null;",
      "info" : "VariableDeclarationStatement[130715-130740]:VariableDeclarationStatement[130855-130880]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[130750-130783]:VariableDeclarationStatement[130890-130923]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[130793-131042]:IfStatement[130933-131182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130824-130910]:Block[130964-131050]"
    }, {
      "left" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
      "right" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
      "info" : "ExpressionStatement[130839-130899]:ExpressionStatement[130979-131039]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[130925-131042]:IfStatement[131065-131182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130956-131042]:Block[131096-131182]"
    }, {
      "left" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
      "right" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
      "info" : "ExpressionStatement[130971-131031]:ExpressionStatement[131111-131171]"
    }, {
      "left" : "if (result != null)",
      "right" : "if (result != null)",
      "info" : "IfStatement[131052-131150]:IfStatement[131192-131290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131072-131150]:Block[131212-131290]"
    }, {
      "left" : "result = Collections.unmodifiableCollection(result);",
      "right" : "result = Collections.unmodifiableCollection(result);",
      "info" : "ExpressionStatement[131087-131139]:ExpressionStatement[131227-131279]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[131160-131174]:ReturnStatement[131300-131314]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[131511-131517]:Modifier[131651-131657]"
    }, {
      "left" : "Collection",
      "right" : "Collection",
      "info" : "SimpleType[131518-131528]:SimpleType[131658-131668]"
    }, {
      "left" : "getRangeMarkers",
      "right" : "getRangeMarkers",
      "info" : "SimpleName[131529-131544]:SimpleName[131669-131684]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[131545-131554]:SingleVariableDeclaration[131685-131694]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[131556-131567]:SingleVariableDeclaration[131696-131707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131569-132044]:Block[131709-132184]"
    }, {
      "left" : "Collection result = null;",
      "right" : "Collection result = null;",
      "info" : "VariableDeclarationStatement[131580-131605]:VariableDeclarationStatement[131720-131745]"
    }, {
      "left" : "Integer key = new Integer(index);",
      "right" : "Integer key = new Integer(index);",
      "info" : "VariableDeclarationStatement[131615-131648]:VariableDeclarationStatement[131755-131788]"
    }, {
      "left" : "if (layer == Layer.FOREGROUND)",
      "right" : "if (layer == Layer.FOREGROUND)",
      "info" : "IfStatement[131658-131905]:IfStatement[131798-132045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131689-131774]:Block[131829-131914]"
    }, {
      "left" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
      "right" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
      "info" : "ExpressionStatement[131704-131763]:ExpressionStatement[131844-131903]"
    }, {
      "left" : "if (layer == Layer.BACKGROUND)",
      "right" : "if (layer == Layer.BACKGROUND)",
      "info" : "IfStatement[131789-131905]:IfStatement[131929-132045]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131820-131905]:Block[131960-132045]"
    }, {
      "left" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
      "right" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
      "info" : "ExpressionStatement[131835-131894]:ExpressionStatement[131975-132034]"
    }, {
      "left" : "if (result != null)",
      "right" : "if (result != null)",
      "info" : "IfStatement[131915-132013]:IfStatement[132055-132153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131935-132013]:Block[132075-132153]"
    }, {
      "left" : "result = Collections.unmodifiableCollection(result);",
      "right" : "result = Collections.unmodifiableCollection(result);",
      "info" : "ExpressionStatement[131950-132002]:ExpressionStatement[132090-132142]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[132023-132037]:ReturnStatement[132163-132177]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[132397-132406]:Modifier[132537-132546]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[132407-132411]:PrimitiveType[132547-132551]"
    }, {
      "left" : "drawHorizontalLine",
      "right" : "drawHorizontalLine",
      "info" : "SimpleName[132412-132430]:SimpleName[132552-132570]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[132431-132444]:SingleVariableDeclaration[132571-132584]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[132446-132466]:SingleVariableDeclaration[132586-132606]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[132507-132519]:SingleVariableDeclaration[132647-132659]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[132521-132534]:SingleVariableDeclaration[132661-132674]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[132575-132586]:SingleVariableDeclaration[132715-132726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132588-133106]:Block[132728-133246]"
    }, {
      "left" : "ValueAxis axis = getRangeAxis();",
      "right" : "ValueAxis axis = getRangeAxis();",
      "info" : "VariableDeclarationStatement[132601-132633]:VariableDeclarationStatement[132741-132773]"
    }, {
      "left" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
      "right" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[132643-132744]:IfStatement[132783-132884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132695-132744]:Block[132835-132884]"
    }, {
      "left" : "axis = getDomainAxis();",
      "right" : "axis = getDomainAxis();",
      "info" : "ExpressionStatement[132710-132733]:ExpressionStatement[132850-132873]"
    }, {
      "left" : "if (axis.getRange().contains(value))",
      "right" : "if (axis.getRange().contains(value))",
      "info" : "IfStatement[132754-133097]:IfStatement[132894-133237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132791-133097]:Block[132931-133237]"
    }, {
      "left" : "double yy = axis.valueToJava2D(value, dataArea, RectangleEdge.LEFT);",
      "right" : "double yy = axis.valueToJava2D(value, dataArea, RectangleEdge.LEFT);",
      "info" : "VariableDeclarationStatement[132806-132874]:VariableDeclarationStatement[132946-133014]"
    }, {
      "left" : "Line2D line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                    dataArea.getMaxX(), yy);",
      "right" : "Line2D line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                    dataArea.getMaxX(), yy);",
      "info" : "VariableDeclarationStatement[132888-132990]:VariableDeclarationStatement[133028-133130]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[133004-133025]:ExpressionStatement[133144-133165]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[133039-133058]:ExpressionStatement[133179-133198]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[133072-133086]:ExpressionStatement[133212-133226]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[133581-133590]:Modifier[133721-133730]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[133591-133595]:PrimitiveType[133731-133735]"
    }, {
      "left" : "drawDomainCrosshair",
      "right" : "drawDomainCrosshair",
      "info" : "SimpleName[133596-133615]:SimpleName[133736-133755]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[133616-133629]:SingleVariableDeclaration[133756-133769]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[133631-133651]:SingleVariableDeclaration[133771-133791]"
    }, {
      "left" : "PlotOrientation orientation",
      "right" : "PlotOrientation orientation",
      "info" : "SingleVariableDeclaration[133667-133694]:SingleVariableDeclaration[133807-133834]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[133696-133708]:SingleVariableDeclaration[133836-133848]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[133710-133724]:SingleVariableDeclaration[133850-133864]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[133740-133753]:SingleVariableDeclaration[133880-133893]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[133755-133766]:SingleVariableDeclaration[133895-133906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133768-134554]:Block[133908-134694]"
    }, {
      "left" : "if (axis.getRange().contains(value))",
      "right" : "if (axis.getRange().contains(value))",
      "info" : "IfStatement[133789-134537]:IfStatement[133929-134677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133826-134537]:Block[133966-134677]"
    }, {
      "left" : "Line2D line = null;",
      "right" : "Line2D line = null;",
      "info" : "VariableDeclarationStatement[133841-133860]:VariableDeclarationStatement[133981-134000]"
    }, {
      "left" : "if (orientation == PlotOrientation.VERTICAL)",
      "right" : "if (orientation == PlotOrientation.VERTICAL)",
      "info" : "IfStatement[133874-134430]:IfStatement[134014-134570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133919-134166]:Block[134059-134306]"
    }, {
      "left" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.BOTTOM);",
      "right" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.BOTTOM);",
      "info" : "VariableDeclarationStatement[133938-134034]:VariableDeclarationStatement[134078-134174]"
    }, {
      "left" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                        dataArea.getMaxY());",
      "right" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                        dataArea.getMaxY());",
      "info" : "ExpressionStatement[134052-134151]:ExpressionStatement[134192-134291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134185-134430]:Block[134325-134570]"
    }, {
      "left" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.LEFT);",
      "right" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.LEFT);",
      "info" : "VariableDeclarationStatement[134204-134298]:VariableDeclarationStatement[134344-134438]"
    }, {
      "left" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                        dataArea.getMaxX(), yy);",
      "right" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                        dataArea.getMaxX(), yy);",
      "info" : "ExpressionStatement[134316-134415]:ExpressionStatement[134456-134555]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[134444-134465]:ExpressionStatement[134584-134605]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[134479-134498]:ExpressionStatement[134619-134638]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[134512-134526]:ExpressionStatement[134652-134666]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[134893-134902]:Modifier[135033-135042]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[134903-134907]:PrimitiveType[135043-135047]"
    }, {
      "left" : "drawVerticalLine",
      "right" : "drawVerticalLine",
      "info" : "SimpleName[134908-134924]:SimpleName[135048-135064]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[134925-134938]:SingleVariableDeclaration[135065-135078]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[134940-134960]:SingleVariableDeclaration[135080-135100]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[134999-135011]:SingleVariableDeclaration[135139-135151]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[135013-135026]:SingleVariableDeclaration[135153-135166]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[135028-135039]:SingleVariableDeclaration[135168-135179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135041-135583]:Block[135181-135723]"
    }, {
      "left" : "ValueAxis axis = getDomainAxis();",
      "right" : "ValueAxis axis = getDomainAxis();",
      "info" : "VariableDeclarationStatement[135054-135087]:VariableDeclarationStatement[135194-135227]"
    }, {
      "left" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
      "right" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[135097-135197]:IfStatement[135237-135337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135149-135197]:Block[135289-135337]"
    }, {
      "left" : "axis = getRangeAxis();",
      "right" : "axis = getRangeAxis();",
      "info" : "ExpressionStatement[135164-135186]:ExpressionStatement[135304-135326]"
    }, {
      "left" : "if (axis.getRange().contains(value))",
      "right" : "if (axis.getRange().contains(value))",
      "info" : "IfStatement[135207-135574]:IfStatement[135347-135714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135244-135574]:Block[135384-135714]"
    }, {
      "left" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.BOTTOM);",
      "right" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                    RectangleEdge.BOTTOM);",
      "info" : "VariableDeclarationStatement[135259-135351]:VariableDeclarationStatement[135399-135491]"
    }, {
      "left" : "Line2D line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                    dataArea.getMaxY());",
      "right" : "Line2D line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                    dataArea.getMaxY());",
      "info" : "VariableDeclarationStatement[135365-135467]:VariableDeclarationStatement[135505-135607]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[135481-135502]:ExpressionStatement[135621-135642]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[135516-135535]:ExpressionStatement[135656-135675]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[135549-135563]:ExpressionStatement[135689-135703]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[136053-136062]:Modifier[136193-136202]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[136063-136067]:PrimitiveType[136203-136207]"
    }, {
      "left" : "drawRangeCrosshair",
      "right" : "drawRangeCrosshair",
      "info" : "SimpleName[136068-136086]:SimpleName[136208-136226]"
    }, {
      "left" : "Graphics2D g2",
      "right" : "Graphics2D g2",
      "info" : "SingleVariableDeclaration[136087-136100]:SingleVariableDeclaration[136227-136240]"
    }, {
      "left" : "Rectangle2D dataArea",
      "right" : "Rectangle2D dataArea",
      "info" : "SingleVariableDeclaration[136102-136122]:SingleVariableDeclaration[136242-136262]"
    }, {
      "left" : "PlotOrientation orientation",
      "right" : "PlotOrientation orientation",
      "info" : "SingleVariableDeclaration[136138-136165]:SingleVariableDeclaration[136278-136305]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[136167-136179]:SingleVariableDeclaration[136307-136319]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[136181-136195]:SingleVariableDeclaration[136321-136335]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[136211-136224]:SingleVariableDeclaration[136351-136364]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[136226-136237]:SingleVariableDeclaration[136366-136377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136239-137027]:Block[136379-137167]"
    }, {
      "left" : "if (axis.getRange().contains(value))",
      "right" : "if (axis.getRange().contains(value))",
      "info" : "IfStatement[136260-137010]:IfStatement[136400-137150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136297-137010]:Block[136437-137150]"
    }, {
      "left" : "Line2D line = null;",
      "right" : "Line2D line = null;",
      "info" : "VariableDeclarationStatement[136312-136331]:VariableDeclarationStatement[136452-136471]"
    }, {
      "left" : "if (orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[136345-136903]:IfStatement[136485-137043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136392-136639]:Block[136532-136779]"
    }, {
      "left" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.BOTTOM);",
      "right" : "double xx = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.BOTTOM);",
      "info" : "VariableDeclarationStatement[136411-136507]:VariableDeclarationStatement[136551-136647]"
    }, {
      "left" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                        dataArea.getMaxY());",
      "right" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx, \r\n                        dataArea.getMaxY());",
      "info" : "ExpressionStatement[136525-136624]:ExpressionStatement[136665-136764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136658-136903]:Block[136798-137043]"
    }, {
      "left" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.LEFT);",
      "right" : "double yy = axis.valueToJava2D(value, dataArea, \r\n                        RectangleEdge.LEFT);",
      "info" : "VariableDeclarationStatement[136677-136771]:VariableDeclarationStatement[136817-136911]"
    }, {
      "left" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                        dataArea.getMaxX(), yy);",
      "right" : "line = new Line2D.Double(dataArea.getMinX(), yy, \r\n                        dataArea.getMaxX(), yy);",
      "info" : "ExpressionStatement[136789-136888]:ExpressionStatement[136929-137028]"
    }, {
      "left" : "g2.setStroke(stroke);",
      "right" : "g2.setStroke(stroke);",
      "info" : "ExpressionStatement[136917-136938]:ExpressionStatement[137057-137078]"
    }, {
      "left" : "g2.setPaint(paint);",
      "right" : "g2.setPaint(paint);",
      "info" : "ExpressionStatement[136952-136971]:ExpressionStatement[137092-137111]"
    }, {
      "left" : "g2.draw(line);",
      "right" : "g2.draw(line);",
      "info" : "ExpressionStatement[136985-136999]:ExpressionStatement[137125-137139]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[137366-137372]:Modifier[137506-137512]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[137373-137377]:PrimitiveType[137513-137517]"
    }, {
      "left" : "handleClick",
      "right" : "handleClick",
      "info" : "SimpleName[137378-137389]:SimpleName[137518-137529]"
    }, {
      "left" : "int x",
      "right" : "int x",
      "info" : "SingleVariableDeclaration[137390-137395]:SingleVariableDeclaration[137530-137535]"
    }, {
      "left" : "int y",
      "right" : "int y",
      "info" : "SingleVariableDeclaration[137397-137402]:SingleVariableDeclaration[137537-137542]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[137404-137426]:SingleVariableDeclaration[137544-137566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137428-138190]:Block[137568-138330]"
    }, {
      "left" : "Rectangle2D dataArea = info.getDataArea();",
      "right" : "Rectangle2D dataArea = info.getDataArea();",
      "info" : "VariableDeclarationStatement[137441-137483]:VariableDeclarationStatement[137581-137623]"
    }, {
      "left" : "if (dataArea.contains(x, y))",
      "right" : "if (dataArea.contains(x, y))",
      "info" : "IfStatement[137493-138183]:IfStatement[137633-138323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137522-138183]:Block[137662-138323]"
    }, {
      "left" : "ValueAxis da = getDomainAxis();",
      "right" : "ValueAxis da = getDomainAxis();",
      "info" : "VariableDeclarationStatement[137601-137632]:VariableDeclarationStatement[137741-137772]"
    }, {
      "left" : "if (da != null)",
      "right" : "if (da != null)",
      "info" : "IfStatement[137646-137849]:IfStatement[137786-137989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137662-137849]:Block[137802-137989]"
    }, {
      "left" : "double hvalue = da.java2DToValue(x, info.getDataArea(), \r\n                        getDomainAxisEdge());",
      "right" : "double hvalue = da.java2DToValue(x, info.getDataArea(), \r\n                        getDomainAxisEdge());",
      "info" : "VariableDeclarationStatement[137681-137784]:VariableDeclarationStatement[137821-137924]"
    }, {
      "left" : "setDomainCrosshairValue(hvalue);",
      "right" : "setDomainCrosshairValue(hvalue);",
      "info" : "ExpressionStatement[137802-137834]:ExpressionStatement[137942-137974]"
    }, {
      "left" : "ValueAxis ra = getRangeAxis();",
      "right" : "ValueAxis ra = getRangeAxis();",
      "info" : "VariableDeclarationStatement[137927-137957]:VariableDeclarationStatement[138067-138097]"
    }, {
      "left" : "if (ra != null)",
      "right" : "if (ra != null)",
      "info" : "IfStatement[137971-138172]:IfStatement[138111-138312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137987-138172]:Block[138127-138312]"
    }, {
      "left" : "double vvalue = ra.java2DToValue(y, info.getDataArea(), \r\n                        getRangeAxisEdge());",
      "right" : "double vvalue = ra.java2DToValue(y, info.getDataArea(), \r\n                        getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[138006-138108]:VariableDeclarationStatement[138146-138248]"
    }, {
      "left" : "setRangeCrosshairValue(vvalue);",
      "right" : "setRangeCrosshairValue(vvalue);",
      "info" : "ExpressionStatement[138126-138157]:ExpressionStatement[138266-138297]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[138447-138454]:Modifier[138587-138594]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[138455-138459]:SimpleType[138595-138599]"
    }, {
      "left" : "getDatasetsMappedToDomainAxis",
      "right" : "getDatasetsMappedToDomainAxis",
      "info" : "SimpleName[138460-138489]:SimpleName[138600-138629]"
    }, {
      "left" : "Integer axisIndex",
      "right" : "Integer axisIndex",
      "info" : "SingleVariableDeclaration[138490-138507]:SingleVariableDeclaration[138630-138647]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138509-139226]:Block[138649-139366]"
    }, {
      "left" : "if (axisIndex == null)",
      "right" : "if (axisIndex == null)",
      "info" : "IfStatement[138520-138634]:IfStatement[138660-138774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138543-138634]:Block[138683-138774]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
      "info" : "ThrowStatement[138558-138623]:ThrowStatement[138698-138763]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[138644-138674]:VariableDeclarationStatement[138784-138814]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[138684-139195]:ForStatement[138824-139335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138731-139195]:Block[138871-139335]"
    }, {
      "left" : "Integer mappedAxis = (Integer) this.datasetToDomainAxisMap.get(\r\n                    new Integer(i));",
      "right" : "Integer mappedAxis = (Integer) this.datasetToDomainAxisMap.get(\r\n                    new Integer(i));",
      "info" : "VariableDeclarationStatement[138746-138847]:VariableDeclarationStatement[138886-138987]"
    }, {
      "left" : "if (mappedAxis == null)",
      "right" : "if (mappedAxis == null)",
      "info" : "IfStatement[138861-139184]:IfStatement[139001-139324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138885-139022]:Block[139025-139162]"
    }, {
      "left" : "if (axisIndex.equals(ZERO))",
      "right" : "if (axisIndex.equals(ZERO))",
      "info" : "IfStatement[138904-139007]:IfStatement[139044-139147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138932-139007]:Block[139072-139147]"
    }, {
      "left" : "result.add(this.datasets.get(i));",
      "right" : "result.add(this.datasets.get(i));",
      "info" : "ExpressionStatement[138955-138988]:ExpressionStatement[139095-139128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139041-139184]:Block[139181-139324]"
    }, {
      "left" : "if (mappedAxis.equals(axisIndex))",
      "right" : "if (mappedAxis.equals(axisIndex))",
      "info" : "IfStatement[139060-139169]:IfStatement[139200-139309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139094-139169]:Block[139234-139309]"
    }, {
      "left" : "result.add(this.datasets.get(i));",
      "right" : "result.add(this.datasets.get(i));",
      "info" : "ExpressionStatement[139117-139150]:ExpressionStatement[139257-139290]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[139205-139219]:ReturnStatement[139345-139359]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[139483-139490]:Modifier[139623-139630]"
    }, {
      "left" : "List",
      "right" : "List",
      "info" : "SimpleType[139491-139495]:SimpleType[139631-139635]"
    }, {
      "left" : "getDatasetsMappedToRangeAxis",
      "right" : "getDatasetsMappedToRangeAxis",
      "info" : "SimpleName[139496-139524]:SimpleName[139636-139664]"
    }, {
      "left" : "Integer axisIndex",
      "right" : "Integer axisIndex",
      "info" : "SingleVariableDeclaration[139525-139542]:SingleVariableDeclaration[139665-139682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139544-140260]:Block[139684-140400]"
    }, {
      "left" : "if (axisIndex == null)",
      "right" : "if (axisIndex == null)",
      "info" : "IfStatement[139555-139669]:IfStatement[139695-139809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139578-139669]:Block[139718-139809]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
      "info" : "ThrowStatement[139593-139658]:ThrowStatement[139733-139798]"
    }, {
      "left" : "List result = new ArrayList();",
      "right" : "List result = new ArrayList();",
      "info" : "VariableDeclarationStatement[139679-139709]:VariableDeclarationStatement[139819-139849]"
    }, {
      "left" : "for (int i = 0; i < this.datasets.size(); i++)",
      "right" : "for (int i = 0; i < this.datasets.size(); i++)",
      "info" : "ForStatement[139719-140229]:ForStatement[139859-140369]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139766-140229]:Block[139906-140369]"
    }, {
      "left" : "Integer mappedAxis = (Integer) this.datasetToRangeAxisMap.get(\r\n                    new Integer(i));",
      "right" : "Integer mappedAxis = (Integer) this.datasetToRangeAxisMap.get(\r\n                    new Integer(i));",
      "info" : "VariableDeclarationStatement[139781-139881]:VariableDeclarationStatement[139921-140021]"
    }, {
      "left" : "if (mappedAxis == null)",
      "right" : "if (mappedAxis == null)",
      "info" : "IfStatement[139895-140218]:IfStatement[140035-140358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139919-140056]:Block[140059-140196]"
    }, {
      "left" : "if (axisIndex.equals(ZERO))",
      "right" : "if (axisIndex.equals(ZERO))",
      "info" : "IfStatement[139938-140041]:IfStatement[140078-140181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[139966-140041]:Block[140106-140181]"
    }, {
      "left" : "result.add(this.datasets.get(i));",
      "right" : "result.add(this.datasets.get(i));",
      "info" : "ExpressionStatement[139989-140022]:ExpressionStatement[140129-140162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140075-140218]:Block[140215-140358]"
    }, {
      "left" : "if (mappedAxis.equals(axisIndex))",
      "right" : "if (mappedAxis.equals(axisIndex))",
      "info" : "IfStatement[140094-140203]:IfStatement[140234-140343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140128-140203]:Block[140268-140343]"
    }, {
      "left" : "result.add(this.datasets.get(i));",
      "right" : "result.add(this.datasets.get(i));",
      "info" : "ExpressionStatement[140151-140184]:ExpressionStatement[140291-140324]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[140239-140253]:ReturnStatement[140379-140393]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[140469-140475]:Modifier[140609-140615]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[140476-140479]:PrimitiveType[140616-140619]"
    }, {
      "left" : "getDomainAxisIndex",
      "right" : "getDomainAxisIndex",
      "info" : "SimpleName[140480-140498]:SimpleName[140620-140638]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[140499-140513]:SingleVariableDeclaration[140639-140653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140515-140873]:Block[140655-141013]"
    }, {
      "left" : "int result = this.domainAxes.indexOf(axis);",
      "right" : "int result = this.domainAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[140526-140569]:VariableDeclarationStatement[140666-140709]"
    }, {
      "left" : "if (result < 0)",
      "right" : "if (result < 0)",
      "info" : "IfStatement[140579-140842]:IfStatement[140719-140982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140595-140842]:Block[140735-140982]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[140646-140672]:VariableDeclarationStatement[140786-140812]"
    }, {
      "left" : "if (parent instanceof XYPlot)",
      "right" : "if (parent instanceof XYPlot)",
      "info" : "IfStatement[140686-140831]:IfStatement[140826-140971]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140716-140831]:Block[140856-140971]"
    }, {
      "left" : "XYPlot p = (XYPlot) parent;",
      "right" : "XYPlot p = (XYPlot) parent;",
      "info" : "VariableDeclarationStatement[140735-140762]:VariableDeclarationStatement[140875-140902]"
    }, {
      "left" : "result = p.getDomainAxisIndex(axis);",
      "right" : "result = p.getDomainAxisIndex(axis);",
      "info" : "ExpressionStatement[140780-140816]:ExpressionStatement[140920-140956]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[140852-140866]:ReturnStatement[140992-141006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[141082-141088]:Modifier[141222-141228]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[141089-141092]:PrimitiveType[141229-141232]"
    }, {
      "left" : "getRangeAxisIndex",
      "right" : "getRangeAxisIndex",
      "info" : "SimpleName[141093-141110]:SimpleName[141233-141250]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[141111-141125]:SingleVariableDeclaration[141251-141265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141127-141483]:Block[141267-141623]"
    }, {
      "left" : "int result = this.rangeAxes.indexOf(axis);",
      "right" : "int result = this.rangeAxes.indexOf(axis);",
      "info" : "VariableDeclarationStatement[141138-141180]:VariableDeclarationStatement[141278-141320]"
    }, {
      "left" : "if (result < 0)",
      "right" : "if (result < 0)",
      "info" : "IfStatement[141190-141452]:IfStatement[141330-141592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141206-141452]:Block[141346-141592]"
    }, {
      "left" : "Plot parent = getParent();",
      "right" : "Plot parent = getParent();",
      "info" : "VariableDeclarationStatement[141257-141283]:VariableDeclarationStatement[141397-141423]"
    }, {
      "left" : "if (parent instanceof XYPlot)",
      "right" : "if (parent instanceof XYPlot)",
      "info" : "IfStatement[141297-141441]:IfStatement[141437-141581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141327-141441]:Block[141467-141581]"
    }, {
      "left" : "XYPlot p = (XYPlot) parent;",
      "right" : "XYPlot p = (XYPlot) parent;",
      "info" : "VariableDeclarationStatement[141346-141373]:VariableDeclarationStatement[141486-141513]"
    }, {
      "left" : "result = p.getRangeAxisIndex(axis);",
      "right" : "result = p.getRangeAxisIndex(axis);",
      "info" : "ExpressionStatement[141391-141426]:ExpressionStatement[141531-141566]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[141462-141476]:ReturnStatement[141602-141616]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[141633-141639]:Modifier[141773-141779]"
    }, {
      "left" : "Range",
      "right" : "Range",
      "info" : "SimpleType[141640-141645]:SimpleType[141780-141785]"
    }, {
      "left" : "getDataRange",
      "right" : "getDataRange",
      "info" : "SimpleName[141646-141658]:SimpleName[141786-141798]"
    }, {
      "left" : "ValueAxis axis",
      "right" : "ValueAxis axis",
      "info" : "SingleVariableDeclaration[141659-141673]:SingleVariableDeclaration[141799-141813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141675-143503]:Block[141815-143643]"
    }, {
      "left" : "Range result = null;",
      "right" : "Range result = null;",
      "info" : "VariableDeclarationStatement[141688-141708]:VariableDeclarationStatement[141828-141848]"
    }, {
      "left" : "List mappedDatasets = new ArrayList();",
      "right" : "List mappedDatasets = new ArrayList();",
      "info" : "VariableDeclarationStatement[141718-141756]:VariableDeclarationStatement[141858-141896]"
    }, {
      "left" : "boolean isDomainAxis = true;",
      "right" : "boolean isDomainAxis = true;",
      "info" : "VariableDeclarationStatement[141766-141794]:VariableDeclarationStatement[141906-141934]"
    }, {
      "left" : "int domainIndex = getDomainAxisIndex(axis);",
      "right" : "int domainIndex = getDomainAxisIndex(axis);",
      "info" : "VariableDeclarationStatement[141839-141882]:VariableDeclarationStatement[141979-142022]"
    }, {
      "left" : "if (domainIndex >= 0)",
      "right" : "if (domainIndex >= 0)",
      "info" : "IfStatement[141892-142075]:IfStatement[142032-142215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141914-142075]:Block[142054-142215]"
    }, {
      "left" : "isDomainAxis = true;",
      "right" : "isDomainAxis = true;",
      "info" : "ExpressionStatement[141929-141949]:ExpressionStatement[142069-142089]"
    }, {
      "left" : "mappedDatasets.addAll(getDatasetsMappedToDomainAxis(\r\n                    new Integer(domainIndex)));",
      "right" : "mappedDatasets.addAll(getDatasetsMappedToDomainAxis(\r\n                    new Integer(domainIndex)));",
      "info" : "ExpressionStatement[141963-142064]:ExpressionStatement[142103-142204]"
    }, {
      "left" : "int rangeIndex = getRangeAxisIndex(axis);",
      "right" : "int rangeIndex = getRangeAxisIndex(axis);",
      "info" : "VariableDeclarationStatement[142122-142163]:VariableDeclarationStatement[142262-142303]"
    }, {
      "left" : "if (rangeIndex >= 0)",
      "right" : "if (rangeIndex >= 0)",
      "info" : "IfStatement[142173-142354]:IfStatement[142313-142494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142194-142354]:Block[142334-142494]"
    }, {
      "left" : "isDomainAxis = false;",
      "right" : "isDomainAxis = false;",
      "info" : "ExpressionStatement[142209-142230]:ExpressionStatement[142349-142370]"
    }, {
      "left" : "mappedDatasets.addAll(getDatasetsMappedToRangeAxis(\r\n                    new Integer(rangeIndex)));",
      "right" : "mappedDatasets.addAll(getDatasetsMappedToRangeAxis(\r\n                    new Integer(rangeIndex)));",
      "info" : "ExpressionStatement[142244-142343]:ExpressionStatement[142384-142483]"
    }, {
      "left" : "Iterator iterator = mappedDatasets.iterator();",
      "right" : "Iterator iterator = mappedDatasets.iterator();",
      "info" : "VariableDeclarationStatement[142473-142519]:VariableDeclarationStatement[142613-142659]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[142529-143470]:WhileStatement[142669-143610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142556-143470]:Block[142696-143610]"
    }, {
      "left" : "XYDataset d = (XYDataset) iterator.next();",
      "right" : "XYDataset d = (XYDataset) iterator.next();",
      "info" : "VariableDeclarationStatement[142571-142613]:VariableDeclarationStatement[142711-142753]"
    }, {
      "left" : "if (d != null)",
      "right" : "if (d != null)",
      "info" : "IfStatement[142627-143459]:IfStatement[142767-143599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142642-143459]:Block[142782-143599]"
    }, {
      "left" : "XYItemRenderer r = getRendererForDataset(d);",
      "right" : "XYItemRenderer r = getRendererForDataset(d);",
      "info" : "VariableDeclarationStatement[142661-142705]:VariableDeclarationStatement[142801-142845]"
    }, {
      "left" : "if (isDomainAxis)",
      "right" : "if (isDomainAxis)",
      "info" : "IfStatement[142723-143444]:IfStatement[142863-143584]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142741-143082]:Block[142881-143222]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[142764-143063]:IfStatement[142904-143203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142779-142883]:Block[142919-143023]"
    }, {
      "left" : "result = Range.combine(result, r.findDomainBounds(d));",
      "right" : "result = Range.combine(result, r.findDomainBounds(d));",
      "info" : "ExpressionStatement[142806-142860]:ExpressionStatement[142946-143000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[142910-143063]:Block[143050-143203]"
    }, {
      "left" : "result = Range.combine(result, \r\n                                DatasetUtilities.findDomainBounds(d));",
      "right" : "result = Range.combine(result, \r\n                                DatasetUtilities.findDomainBounds(d));",
      "info" : "ExpressionStatement[142937-143040]:ExpressionStatement[143077-143180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143105-143444]:Block[143245-143584]"
    }, {
      "left" : "if (r != null)",
      "right" : "if (r != null)",
      "info" : "IfStatement[143128-143425]:IfStatement[143268-143565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143143-143246]:Block[143283-143386]"
    }, {
      "left" : "result = Range.combine(result, r.findRangeBounds(d));",
      "right" : "result = Range.combine(result, r.findRangeBounds(d));",
      "info" : "ExpressionStatement[143170-143223]:ExpressionStatement[143310-143363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143273-143425]:Block[143413-143565]"
    }, {
      "left" : "result = Range.combine(result, \r\n                                DatasetUtilities.findRangeBounds(d));",
      "right" : "result = Range.combine(result, \r\n                                DatasetUtilities.findRangeBounds(d));",
      "info" : "ExpressionStatement[143300-143402]:ExpressionStatement[143440-143542]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[143480-143494]:ReturnStatement[143620-143634]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[143731-143737]:Modifier[143871-143877]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[143738-143742]:PrimitiveType[143878-143882]"
    }, {
      "left" : "datasetChanged",
      "right" : "datasetChanged",
      "info" : "SimpleName[143743-143757]:SimpleName[143883-143897]"
    }, {
      "left" : "DatasetChangeEvent event",
      "right" : "DatasetChangeEvent event",
      "info" : "SingleVariableDeclaration[143758-143782]:SingleVariableDeclaration[143898-143922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143784-144132]:Block[143924-144272]"
    }, {
      "left" : "configureDomainAxes();",
      "right" : "configureDomainAxes();",
      "info" : "ExpressionStatement[143795-143817]:ExpressionStatement[143935-143957]"
    }, {
      "left" : "configureRangeAxes();",
      "right" : "configureRangeAxes();",
      "info" : "ExpressionStatement[143827-143848]:ExpressionStatement[143967-143988]"
    }, {
      "left" : "if (getParent() != null)",
      "right" : "if (getParent() != null)",
      "info" : "IfStatement[143858-144125]:IfStatement[143998-144265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143883-143943]:Block[144023-144083]"
    }, {
      "left" : "getParent().datasetChanged(event);",
      "right" : "getParent().datasetChanged(event);",
      "info" : "ExpressionStatement[143898-143932]:ExpressionStatement[144038-144072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143958-144125]:Block[144098-144265]"
    }, {
      "left" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "right" : "PlotChangeEvent e = new PlotChangeEvent(this);",
      "info" : "VariableDeclarationStatement[143973-144019]:VariableDeclarationStatement[144113-144159]"
    }, {
      "left" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
      "right" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
      "info" : "ExpressionStatement[144033-144081]:ExpressionStatement[144173-144221]"
    }, {
      "left" : "notifyListeners(e);",
      "right" : "notifyListeners(e);",
      "info" : "ExpressionStatement[144095-144114]:ExpressionStatement[144235-144254]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[144257-144263]:Modifier[144397-144403]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[144264-144268]:PrimitiveType[144404-144408]"
    }, {
      "left" : "rendererChanged",
      "right" : "rendererChanged",
      "info" : "SimpleName[144269-144284]:SimpleName[144409-144424]"
    }, {
      "left" : "RendererChangeEvent event",
      "right" : "RendererChangeEvent event",
      "info" : "SingleVariableDeclaration[144285-144310]:SingleVariableDeclaration[144425-144450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144312-144348]:Block[144452-144488]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[144323-144341]:ExpressionStatement[144463-144481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[144548-144554]:Modifier[144688-144694]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[144555-144562]:PrimitiveType[144695-144702]"
    }, {
      "left" : "isDomainCrosshairVisible",
      "right" : "isDomainCrosshairVisible",
      "info" : "SimpleName[144563-144587]:SimpleName[144703-144727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144590-144643]:Block[144730-144783]"
    }, {
      "left" : "return this.domainCrosshairVisible;",
      "right" : "return this.domainCrosshairVisible;",
      "info" : "ReturnStatement[144601-144636]:ReturnStatement[144741-144776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[144960-144966]:Modifier[145100-145106]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[144967-144971]:PrimitiveType[145107-145111]"
    }, {
      "left" : "setDomainCrosshairVisible",
      "right" : "setDomainCrosshairVisible",
      "info" : "SimpleName[144972-144997]:SimpleName[145112-145137]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[144998-145010]:SingleVariableDeclaration[145138-145150]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145012-145164]:Block[145152-145304]"
    }, {
      "left" : "if (this.domainCrosshairVisible != flag)",
      "right" : "if (this.domainCrosshairVisible != flag)",
      "info" : "IfStatement[145023-145157]:IfStatement[145163-145297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145064-145157]:Block[145204-145297]"
    }, {
      "left" : "this.domainCrosshairVisible = flag;",
      "right" : "this.domainCrosshairVisible = flag;",
      "info" : "ExpressionStatement[145079-145114]:ExpressionStatement[145219-145254]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[145128-145146]:ExpressionStatement[145268-145286]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[145398-145404]:Modifier[145538-145544]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[145405-145412]:PrimitiveType[145545-145552]"
    }, {
      "left" : "isDomainCrosshairLockedOnData",
      "right" : "isDomainCrosshairLockedOnData",
      "info" : "SimpleName[145413-145442]:SimpleName[145553-145582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145445-145503]:Block[145585-145643]"
    }, {
      "left" : "return this.domainCrosshairLockedOnData;",
      "right" : "return this.domainCrosshairLockedOnData;",
      "info" : "ReturnStatement[145456-145496]:ReturnStatement[145596-145636]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[145849-145855]:Modifier[145989-145995]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[145856-145860]:PrimitiveType[145996-146000]"
    }, {
      "left" : "setDomainCrosshairLockedOnData",
      "right" : "setDomainCrosshairLockedOnData",
      "info" : "SimpleName[145861-145891]:SimpleName[146001-146031]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[145892-145904]:SingleVariableDeclaration[146032-146044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145906-146068]:Block[146046-146208]"
    }, {
      "left" : "if (this.domainCrosshairLockedOnData != flag)",
      "right" : "if (this.domainCrosshairLockedOnData != flag)",
      "info" : "IfStatement[145917-146061]:IfStatement[146057-146201]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145963-146061]:Block[146103-146201]"
    }, {
      "left" : "this.domainCrosshairLockedOnData = flag;",
      "right" : "this.domainCrosshairLockedOnData = flag;",
      "info" : "ExpressionStatement[145978-146018]:ExpressionStatement[146118-146158]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[146032-146050]:ExpressionStatement[146172-146190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[146228-146234]:Modifier[146368-146374]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[146235-146241]:PrimitiveType[146375-146381]"
    }, {
      "left" : "getDomainCrosshairValue",
      "right" : "getDomainCrosshairValue",
      "info" : "SimpleName[146242-146265]:SimpleName[146382-146405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146268-146319]:Block[146408-146459]"
    }, {
      "left" : "return this.domainCrosshairValue;",
      "right" : "return this.domainCrosshairValue;",
      "info" : "ReturnStatement[146279-146312]:ReturnStatement[146419-146452]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[146596-146602]:Modifier[146736-146742]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[146603-146607]:PrimitiveType[146743-146747]"
    }, {
      "left" : "setDomainCrosshairValue",
      "right" : "setDomainCrosshairValue",
      "info" : "SimpleName[146608-146631]:SimpleName[146748-146771]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[146632-146644]:SingleVariableDeclaration[146772-146784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[146646-146701]:Block[146786-146841]"
    }, {
      "left" : "setDomainCrosshairValue(value, true);",
      "right" : "setDomainCrosshairValue(value, true);",
      "info" : "ExpressionStatement[146657-146694]:ExpressionStatement[146797-146834]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[147046-147052]:Modifier[147186-147192]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[147053-147057]:PrimitiveType[147193-147197]"
    }, {
      "left" : "setDomainCrosshairValue",
      "right" : "setDomainCrosshairValue",
      "info" : "SimpleName[147058-147081]:SimpleName[147198-147221]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[147082-147094]:SingleVariableDeclaration[147222-147234]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[147096-147110]:SingleVariableDeclaration[147236-147250]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147112-147260]:Block[147252-147400]"
    }, {
      "left" : "this.domainCrosshairValue = value;",
      "right" : "this.domainCrosshairValue = value;",
      "info" : "ExpressionStatement[147123-147157]:ExpressionStatement[147263-147297]"
    }, {
      "left" : "if (isDomainCrosshairVisible() && notify)",
      "right" : "if (isDomainCrosshairVisible() && notify)",
      "info" : "IfStatement[147167-147253]:IfStatement[147307-147393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147209-147253]:Block[147349-147393]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[147224-147242]:ExpressionStatement[147364-147382]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[147571-147577]:Modifier[147711-147717]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[147578-147584]:SimpleType[147718-147724]"
    }, {
      "left" : "getDomainCrosshairStroke",
      "right" : "getDomainCrosshairStroke",
      "info" : "SimpleName[147585-147609]:SimpleName[147725-147749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147612-147664]:Block[147752-147804]"
    }, {
      "left" : "return this.domainCrosshairStroke;",
      "right" : "return this.domainCrosshairStroke;",
      "info" : "ReturnStatement[147623-147657]:ReturnStatement[147763-147797]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[147988-147994]:Modifier[148128-148134]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[147995-147999]:PrimitiveType[148135-148139]"
    }, {
      "left" : "setDomainCrosshairStroke",
      "right" : "setDomainCrosshairStroke",
      "info" : "SimpleName[148000-148024]:SimpleName[148140-148164]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[148025-148038]:SingleVariableDeclaration[148165-148178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148040-148241]:Block[148180-148381]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[148051-148160]:IfStatement[148191-148300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148071-148160]:Block[148211-148300]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[148087-148149]:ThrowStatement[148227-148289]"
    }, {
      "left" : "this.domainCrosshairStroke = stroke;",
      "right" : "this.domainCrosshairStroke = stroke;",
      "info" : "ExpressionStatement[148170-148206]:ExpressionStatement[148310-148346]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[148216-148234]:ExpressionStatement[148356-148374]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[148518-148524]:Modifier[148658-148664]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[148525-148530]:SimpleType[148665-148670]"
    }, {
      "left" : "getDomainCrosshairPaint",
      "right" : "getDomainCrosshairPaint",
      "info" : "SimpleName[148531-148554]:SimpleName[148671-148694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148557-148608]:Block[148697-148748]"
    }, {
      "left" : "return this.domainCrosshairPaint;",
      "right" : "return this.domainCrosshairPaint;",
      "info" : "ReturnStatement[148568-148601]:ReturnStatement[148708-148741]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[148909-148915]:Modifier[149049-149055]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[148916-148920]:PrimitiveType[149056-149060]"
    }, {
      "left" : "setDomainCrosshairPaint",
      "right" : "setDomainCrosshairPaint",
      "info" : "SimpleName[148921-148944]:SimpleName[149061-149084]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[148945-148956]:SingleVariableDeclaration[149085-149096]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148958-149154]:Block[149098-149294]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[148969-149075]:IfStatement[149109-149215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148988-149075]:Block[149128-149215]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[149003-149064]:ThrowStatement[149143-149204]"
    }, {
      "left" : "this.domainCrosshairPaint = paint;",
      "right" : "this.domainCrosshairPaint = paint;",
      "info" : "ExpressionStatement[149085-149119]:ExpressionStatement[149225-149259]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[149129-149147]:ExpressionStatement[149269-149287]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[149393-149399]:Modifier[149533-149539]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[149400-149407]:PrimitiveType[149540-149547]"
    }, {
      "left" : "isRangeCrosshairVisible",
      "right" : "isRangeCrosshairVisible",
      "info" : "SimpleName[149408-149431]:SimpleName[149548-149571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149434-149486]:Block[149574-149626]"
    }, {
      "left" : "return this.rangeCrosshairVisible;",
      "right" : "return this.rangeCrosshairVisible;",
      "info" : "ReturnStatement[149445-149479]:ReturnStatement[149585-149619]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[149813-149819]:Modifier[149953-149959]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[149820-149824]:PrimitiveType[149960-149964]"
    }, {
      "left" : "setRangeCrosshairVisible",
      "right" : "setRangeCrosshairVisible",
      "info" : "SimpleName[149825-149849]:SimpleName[149965-149989]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[149850-149862]:SingleVariableDeclaration[149990-150002]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149864-150014]:Block[150004-150154]"
    }, {
      "left" : "if (this.rangeCrosshairVisible != flag)",
      "right" : "if (this.rangeCrosshairVisible != flag)",
      "info" : "IfStatement[149875-150007]:IfStatement[150015-150147]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149915-150007]:Block[150055-150147]"
    }, {
      "left" : "this.rangeCrosshairVisible = flag;",
      "right" : "this.rangeCrosshairVisible = flag;",
      "info" : "ExpressionStatement[149930-149964]:ExpressionStatement[150070-150104]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[149978-149996]:ExpressionStatement[150118-150136]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[150247-150253]:Modifier[150387-150393]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[150254-150261]:PrimitiveType[150394-150401]"
    }, {
      "left" : "isRangeCrosshairLockedOnData",
      "right" : "isRangeCrosshairLockedOnData",
      "info" : "SimpleName[150262-150290]:SimpleName[150402-150430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150293-150350]:Block[150433-150490]"
    }, {
      "left" : "return this.rangeCrosshairLockedOnData;",
      "right" : "return this.rangeCrosshairLockedOnData;",
      "info" : "ReturnStatement[150304-150343]:ReturnStatement[150444-150483]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[150694-150700]:Modifier[150834-150840]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[150701-150705]:PrimitiveType[150841-150845]"
    }, {
      "left" : "setRangeCrosshairLockedOnData",
      "right" : "setRangeCrosshairLockedOnData",
      "info" : "SimpleName[150706-150735]:SimpleName[150846-150875]"
    }, {
      "left" : "boolean flag",
      "right" : "boolean flag",
      "info" : "SingleVariableDeclaration[150736-150748]:SingleVariableDeclaration[150876-150888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150750-150910]:Block[150890-151050]"
    }, {
      "left" : "if (this.rangeCrosshairLockedOnData != flag)",
      "right" : "if (this.rangeCrosshairLockedOnData != flag)",
      "info" : "IfStatement[150761-150903]:IfStatement[150901-151043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150806-150903]:Block[150946-151043]"
    }, {
      "left" : "this.rangeCrosshairLockedOnData = flag;",
      "right" : "this.rangeCrosshairLockedOnData = flag;",
      "info" : "ExpressionStatement[150821-150860]:ExpressionStatement[150961-151000]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[150874-150892]:ExpressionStatement[151014-151032]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[151068-151074]:Modifier[151208-151214]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[151075-151081]:PrimitiveType[151215-151221]"
    }, {
      "left" : "getRangeCrosshairValue",
      "right" : "getRangeCrosshairValue",
      "info" : "SimpleName[151082-151104]:SimpleName[151222-151244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151107-151157]:Block[151247-151297]"
    }, {
      "left" : "return this.rangeCrosshairValue;",
      "right" : "return this.rangeCrosshairValue;",
      "info" : "ReturnStatement[151118-151150]:ReturnStatement[151258-151290]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[151449-151455]:Modifier[151589-151595]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[151456-151460]:PrimitiveType[151596-151600]"
    }, {
      "left" : "setRangeCrosshairValue",
      "right" : "setRangeCrosshairValue",
      "info" : "SimpleName[151461-151483]:SimpleName[151601-151623]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[151484-151496]:SingleVariableDeclaration[151624-151636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[151498-151552]:Block[151638-151692]"
    }, {
      "left" : "setRangeCrosshairValue(value, true);",
      "right" : "setRangeCrosshairValue(value, true);",
      "info" : "ExpressionStatement[151509-151545]:ExpressionStatement[151649-151685]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[151942-151948]:Modifier[152082-152088]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[151949-151953]:PrimitiveType[152089-152093]"
    }, {
      "left" : "setRangeCrosshairValue",
      "right" : "setRangeCrosshairValue",
      "info" : "SimpleName[151954-151976]:SimpleName[152094-152116]"
    }, {
      "left" : "double value",
      "right" : "double value",
      "info" : "SingleVariableDeclaration[151977-151989]:SingleVariableDeclaration[152117-152129]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[151991-152005]:SingleVariableDeclaration[152131-152145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152007-152153]:Block[152147-152293]"
    }, {
      "left" : "this.rangeCrosshairValue = value;",
      "right" : "this.rangeCrosshairValue = value;",
      "info" : "ExpressionStatement[152018-152051]:ExpressionStatement[152158-152191]"
    }, {
      "left" : "if (isRangeCrosshairVisible() && notify)",
      "right" : "if (isRangeCrosshairVisible() && notify)",
      "info" : "IfStatement[152061-152146]:IfStatement[152201-152286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152102-152146]:Block[152242-152286]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[152117-152135]:ExpressionStatement[152257-152275]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[152453-152459]:Modifier[152593-152599]"
    }, {
      "left" : "Stroke",
      "right" : "Stroke",
      "info" : "SimpleType[152460-152466]:SimpleType[152600-152606]"
    }, {
      "left" : "getRangeCrosshairStroke",
      "right" : "getRangeCrosshairStroke",
      "info" : "SimpleName[152467-152490]:SimpleName[152607-152630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152493-152544]:Block[152633-152684]"
    }, {
      "left" : "return this.rangeCrosshairStroke;",
      "right" : "return this.rangeCrosshairStroke;",
      "info" : "ReturnStatement[152504-152537]:ReturnStatement[152644-152677]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[152866-152872]:Modifier[153006-153012]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[152873-152877]:PrimitiveType[153013-153017]"
    }, {
      "left" : "setRangeCrosshairStroke",
      "right" : "setRangeCrosshairStroke",
      "info" : "SimpleName[152878-152901]:SimpleName[153018-153041]"
    }, {
      "left" : "Stroke stroke",
      "right" : "Stroke stroke",
      "info" : "SingleVariableDeclaration[152902-152915]:SingleVariableDeclaration[153042-153055]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152917-153116]:Block[153057-153256]"
    }, {
      "left" : "if (stroke == null)",
      "right" : "if (stroke == null)",
      "info" : "IfStatement[152928-153036]:IfStatement[153068-153176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152948-153036]:Block[153088-153176]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
      "info" : "ThrowStatement[152963-153025]:ThrowStatement[153103-153165]"
    }, {
      "left" : "this.rangeCrosshairStroke = stroke;",
      "right" : "this.rangeCrosshairStroke = stroke;",
      "info" : "ExpressionStatement[153046-153081]:ExpressionStatement[153186-153221]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[153091-153109]:ExpressionStatement[153231-153249]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[153389-153395]:Modifier[153529-153535]"
    }, {
      "left" : "Paint",
      "right" : "Paint",
      "info" : "SimpleType[153396-153401]:SimpleType[153536-153541]"
    }, {
      "left" : "getRangeCrosshairPaint",
      "right" : "getRangeCrosshairPaint",
      "info" : "SimpleName[153402-153424]:SimpleName[153542-153564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153427-153477]:Block[153567-153617]"
    }, {
      "left" : "return this.rangeCrosshairPaint;",
      "right" : "return this.rangeCrosshairPaint;",
      "info" : "ReturnStatement[153438-153470]:ReturnStatement[153578-153610]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[153778-153784]:Modifier[153918-153924]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[153785-153789]:PrimitiveType[153925-153929]"
    }, {
      "left" : "setRangeCrosshairPaint",
      "right" : "setRangeCrosshairPaint",
      "info" : "SimpleName[153790-153812]:SimpleName[153930-153952]"
    }, {
      "left" : "Paint paint",
      "right" : "Paint paint",
      "info" : "SingleVariableDeclaration[153813-153824]:SingleVariableDeclaration[153953-153964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153826-154021]:Block[153966-154161]"
    }, {
      "left" : "if (paint == null)",
      "right" : "if (paint == null)",
      "info" : "IfStatement[153837-153943]:IfStatement[153977-154083]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[153856-153943]:Block[153996-154083]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
      "info" : "ThrowStatement[153871-153932]:ThrowStatement[154011-154072]"
    }, {
      "left" : "this.rangeCrosshairPaint = paint;",
      "right" : "this.rangeCrosshairPaint = paint;",
      "info" : "ExpressionStatement[153953-153986]:ExpressionStatement[154093-154126]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[153996-154014]:ExpressionStatement[154136-154154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[154232-154238]:Modifier[154372-154378]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[154239-154248]:SimpleType[154379-154388]"
    }, {
      "left" : "getFixedDomainAxisSpace",
      "right" : "getFixedDomainAxisSpace",
      "info" : "SimpleName[154249-154272]:SimpleName[154389-154412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154275-154326]:Block[154415-154466]"
    }, {
      "left" : "return this.fixedDomainAxisSpace;",
      "right" : "return this.fixedDomainAxisSpace;",
      "info" : "ReturnStatement[154286-154319]:ReturnStatement[154426-154459]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[154586-154592]:Modifier[154726-154732]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[154593-154597]:PrimitiveType[154733-154737]"
    }, {
      "left" : "setFixedDomainAxisSpace",
      "right" : "setFixedDomainAxisSpace",
      "info" : "SimpleName[154598-154621]:SimpleName[154738-154761]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[154622-154637]:SingleVariableDeclaration[154762-154777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[154639-154694]:Block[154779-154834]"
    }, {
      "left" : "setFixedDomainAxisSpace(space, true);",
      "right" : "setFixedDomainAxisSpace(space, true);",
      "info" : "ExpressionStatement[154650-154687]:ExpressionStatement[154790-154827]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[155041-155047]:Modifier[155181-155187]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[155048-155052]:PrimitiveType[155188-155192]"
    }, {
      "left" : "setFixedDomainAxisSpace",
      "right" : "setFixedDomainAxisSpace",
      "info" : "SimpleName[155053-155076]:SimpleName[155193-155216]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[155077-155092]:SingleVariableDeclaration[155217-155232]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[155094-155108]:SingleVariableDeclaration[155234-155248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155110-155228]:Block[155250-155368]"
    }, {
      "left" : "this.fixedDomainAxisSpace = space;",
      "right" : "this.fixedDomainAxisSpace = space;",
      "info" : "ExpressionStatement[155121-155155]:ExpressionStatement[155261-155295]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[155165-155221]:IfStatement[155305-155361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155177-155221]:Block[155317-155361]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[155192-155210]:ExpressionStatement[155332-155350]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[155436-155442]:Modifier[155576-155582]"
    }, {
      "left" : "AxisSpace",
      "right" : "AxisSpace",
      "info" : "SimpleType[155443-155452]:SimpleType[155583-155592]"
    }, {
      "left" : "getFixedRangeAxisSpace",
      "right" : "getFixedRangeAxisSpace",
      "info" : "SimpleName[155453-155475]:SimpleName[155593-155615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155478-155528]:Block[155618-155668]"
    }, {
      "left" : "return this.fixedRangeAxisSpace;",
      "right" : "return this.fixedRangeAxisSpace;",
      "info" : "ReturnStatement[155489-155521]:ReturnStatement[155629-155661]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[155786-155792]:Modifier[155926-155932]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[155793-155797]:PrimitiveType[155933-155937]"
    }, {
      "left" : "setFixedRangeAxisSpace",
      "right" : "setFixedRangeAxisSpace",
      "info" : "SimpleName[155798-155820]:SimpleName[155938-155960]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[155821-155836]:SingleVariableDeclaration[155961-155976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155838-155892]:Block[155978-156032]"
    }, {
      "left" : "setFixedRangeAxisSpace(space, true);",
      "right" : "setFixedRangeAxisSpace(space, true);",
      "info" : "ExpressionStatement[155849-155885]:ExpressionStatement[155989-156025]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[156237-156243]:Modifier[156377-156383]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[156244-156248]:PrimitiveType[156384-156388]"
    }, {
      "left" : "setFixedRangeAxisSpace",
      "right" : "setFixedRangeAxisSpace",
      "info" : "SimpleName[156249-156271]:SimpleName[156389-156411]"
    }, {
      "left" : "AxisSpace space",
      "right" : "AxisSpace space",
      "info" : "SingleVariableDeclaration[156272-156287]:SingleVariableDeclaration[156412-156427]"
    }, {
      "left" : "boolean notify",
      "right" : "boolean notify",
      "info" : "SingleVariableDeclaration[156289-156303]:SingleVariableDeclaration[156429-156443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156305-156422]:Block[156445-156562]"
    }, {
      "left" : "this.fixedRangeAxisSpace = space;",
      "right" : "this.fixedRangeAxisSpace = space;",
      "info" : "ExpressionStatement[156316-156349]:ExpressionStatement[156456-156489]"
    }, {
      "left" : "if (notify)",
      "right" : "if (notify)",
      "info" : "IfStatement[156359-156415]:IfStatement[156499-156555]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156371-156415]:Block[156511-156555]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[156386-156404]:ExpressionStatement[156526-156544]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[156752-156758]:Modifier[156892-156898]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[156759-156763]:PrimitiveType[156899-156903]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[156764-156778]:SimpleName[156904-156918]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[156779-156792]:SingleVariableDeclaration[156919-156932]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[156794-156816]:SingleVariableDeclaration[156934-156956]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[156850-156864]:SingleVariableDeclaration[156990-157004]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[156866-156965]:Block[157006-157105]"
    }, {
      "left" : "zoomDomainAxes(factor, info, source, false);",
      "right" : "zoomDomainAxes(factor, info, source, false);",
      "info" : "ExpressionStatement[156914-156958]:ExpressionStatement[157054-157098]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[157393-157399]:Modifier[157533-157539]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[157400-157404]:PrimitiveType[157540-157544]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[157405-157419]:SimpleName[157545-157559]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[157420-157433]:SingleVariableDeclaration[157560-157573]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[157435-157457]:SingleVariableDeclaration[157575-157597]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[157491-157505]:SingleVariableDeclaration[157631-157645]"
    }, {
      "left" : "boolean useAnchor",
      "right" : "boolean useAnchor",
      "info" : "SingleVariableDeclaration[157507-157524]:SingleVariableDeclaration[157647-157664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157526-158465]:Block[157666-158605]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[157604-158458]:ForStatement[157744-158598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157653-158458]:Block[157793-158598]"
    }, {
      "left" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
      "right" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[157668-157726]:VariableDeclarationStatement[157808-157866]"
    }, {
      "left" : "if (domainAxis != null)",
      "right" : "if (domainAxis != null)",
      "info" : "IfStatement[157740-158447]:IfStatement[157880-158587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157764-158447]:Block[157904-158587]"
    }, {
      "left" : "if (useAnchor)",
      "right" : "if (useAnchor)",
      "info" : "IfStatement[157783-158432]:IfStatement[157923-158572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157798-158336]:Block[157938-158476]"
    }, {
      "left" : "double sourceX = source.getX();",
      "right" : "double sourceX = source.getX();",
      "info" : "VariableDeclarationStatement[157932-157963]:VariableDeclarationStatement[158072-158103]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[157985-158111]:IfStatement[158125-158251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158037-158111]:Block[158177-158251]"
    }, {
      "left" : "sourceX = source.getY();",
      "right" : "sourceX = source.getY();",
      "info" : "ExpressionStatement[158064-158088]:ExpressionStatement[158204-158228]"
    }, {
      "left" : "double anchorX = domainAxis.java2DToValue(sourceX, \r\n                            info.getDataArea(), getDomainAxisEdge());",
      "right" : "double anchorX = domainAxis.java2DToValue(sourceX, \r\n                            info.getDataArea(), getDomainAxisEdge());",
      "info" : "VariableDeclarationStatement[158133-158255]:VariableDeclarationStatement[158273-158395]"
    }, {
      "left" : "domainAxis.resizeRange(factor, anchorX);",
      "right" : "domainAxis.resizeRange(factor, anchorX);",
      "info" : "ExpressionStatement[158277-158317]:ExpressionStatement[158417-158457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158359-158432]:Block[158499-158572]"
    }, {
      "left" : "domainAxis.resizeRange(factor);",
      "right" : "domainAxis.resizeRange(factor);",
      "info" : "ExpressionStatement[158382-158413]:ExpressionStatement[158522-158553]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[159212-159218]:Modifier[159352-159358]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[159219-159223]:PrimitiveType[159359-159363]"
    }, {
      "left" : "zoomDomainAxes",
      "right" : "zoomDomainAxes",
      "info" : "SimpleName[159224-159238]:SimpleName[159364-159378]"
    }, {
      "left" : "double lowerPercent",
      "right" : "double lowerPercent",
      "info" : "SingleVariableDeclaration[159239-159258]:SingleVariableDeclaration[159379-159398]"
    }, {
      "left" : "double upperPercent",
      "right" : "double upperPercent",
      "info" : "SingleVariableDeclaration[159260-159279]:SingleVariableDeclaration[159400-159419]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[159313-159335]:SingleVariableDeclaration[159453-159475]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[159337-159351]:SingleVariableDeclaration[159477-159491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159353-159625]:Block[159493-159765]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[159364-159618]:ForStatement[159504-159758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159413-159618]:Block[159553-159758]"
    }, {
      "left" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
      "right" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[159428-159486]:VariableDeclarationStatement[159568-159626]"
    }, {
      "left" : "if (domainAxis != null)",
      "right" : "if (domainAxis != null)",
      "info" : "IfStatement[159500-159607]:IfStatement[159640-159747]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159524-159607]:Block[159664-159747]"
    }, {
      "left" : "domainAxis.zoomRange(lowerPercent, upperPercent);",
      "right" : "domainAxis.zoomRange(lowerPercent, upperPercent);",
      "info" : "ExpressionStatement[159543-159592]:ExpressionStatement[159683-159732]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[159946-159952]:Modifier[160086-160092]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[159953-159957]:PrimitiveType[160093-160097]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[159958-159971]:SimpleName[160098-160111]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[159972-159985]:SingleVariableDeclaration[160112-160125]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[159987-160009]:SingleVariableDeclaration[160127-160149]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[160042-160056]:SingleVariableDeclaration[160182-160196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160058-160160]:Block[160198-160300]"
    }, {
      "left" : "zoomRangeAxes(factor, info, source, false);",
      "right" : "zoomRangeAxes(factor, info, source, false);",
      "info" : "ExpressionStatement[160106-160149]:ExpressionStatement[160246-160289]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[160639-160645]:Modifier[160779-160785]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[160646-160650]:PrimitiveType[160786-160790]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[160651-160664]:SimpleName[160791-160804]"
    }, {
      "left" : "double factor",
      "right" : "double factor",
      "info" : "SingleVariableDeclaration[160665-160678]:SingleVariableDeclaration[160805-160818]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[160680-160702]:SingleVariableDeclaration[160820-160842]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[160735-160749]:SingleVariableDeclaration[160875-160889]"
    }, {
      "left" : "boolean useAnchor",
      "right" : "boolean useAnchor",
      "info" : "SingleVariableDeclaration[160751-160768]:SingleVariableDeclaration[160891-160908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160770-161700]:Block[160910-161840]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[160847-161693]:ForStatement[160987-161833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160895-161693]:Block[161035-161833]"
    }, {
      "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[160910-160966]:VariableDeclarationStatement[161050-161106]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[160980-161682]:IfStatement[161120-161822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161003-161682]:Block[161143-161822]"
    }, {
      "left" : "if (useAnchor)",
      "right" : "if (useAnchor)",
      "info" : "IfStatement[161022-161667]:IfStatement[161162-161807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161037-161572]:Block[161177-161712]"
    }, {
      "left" : "double sourceY = source.getY();",
      "right" : "double sourceY = source.getY();",
      "info" : "VariableDeclarationStatement[161171-161202]:VariableDeclarationStatement[161311-161342]"
    }, {
      "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
      "info" : "IfStatement[161224-161350]:IfStatement[161364-161490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161276-161350]:Block[161416-161490]"
    }, {
      "left" : "sourceY = source.getX();",
      "right" : "sourceY = source.getX();",
      "info" : "ExpressionStatement[161303-161327]:ExpressionStatement[161443-161467]"
    }, {
      "left" : "double anchorY = rangeAxis.java2DToValue(sourceY, \r\n                            info.getDataArea(), getRangeAxisEdge());",
      "right" : "double anchorY = rangeAxis.java2DToValue(sourceY, \r\n                            info.getDataArea(), getRangeAxisEdge());",
      "info" : "VariableDeclarationStatement[161372-161492]:VariableDeclarationStatement[161512-161632]"
    }, {
      "left" : "rangeAxis.resizeRange(factor, anchorY);",
      "right" : "rangeAxis.resizeRange(factor, anchorY);",
      "info" : "ExpressionStatement[161514-161553]:ExpressionStatement[161654-161693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161595-161667]:Block[161735-161807]"
    }, {
      "left" : "rangeAxis.resizeRange(factor);",
      "right" : "rangeAxis.resizeRange(factor);",
      "info" : "ExpressionStatement[161618-161648]:ExpressionStatement[161758-161788]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[162031-162037]:Modifier[162171-162177]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[162038-162042]:PrimitiveType[162178-162182]"
    }, {
      "left" : "zoomRangeAxes",
      "right" : "zoomRangeAxes",
      "info" : "SimpleName[162043-162056]:SimpleName[162183-162196]"
    }, {
      "left" : "double lowerPercent",
      "right" : "double lowerPercent",
      "info" : "SingleVariableDeclaration[162057-162076]:SingleVariableDeclaration[162197-162216]"
    }, {
      "left" : "double upperPercent",
      "right" : "double upperPercent",
      "info" : "SingleVariableDeclaration[162078-162097]:SingleVariableDeclaration[162218-162237]"
    }, {
      "left" : "PlotRenderingInfo info",
      "right" : "PlotRenderingInfo info",
      "info" : "SingleVariableDeclaration[162130-162152]:SingleVariableDeclaration[162270-162292]"
    }, {
      "left" : "Point2D source",
      "right" : "Point2D source",
      "info" : "SingleVariableDeclaration[162154-162168]:SingleVariableDeclaration[162294-162308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162170-162437]:Block[162310-162577]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[162181-162430]:ForStatement[162321-162570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162229-162430]:Block[162369-162570]"
    }, {
      "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[162244-162300]:VariableDeclarationStatement[162384-162440]"
    }, {
      "left" : "if (rangeAxis != null)",
      "right" : "if (rangeAxis != null)",
      "info" : "IfStatement[162314-162419]:IfStatement[162454-162559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162337-162419]:Block[162477-162559]"
    }, {
      "left" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
      "right" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
      "info" : "ExpressionStatement[162356-162404]:ExpressionStatement[162496-162544]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[162647-162653]:Modifier[162787-162793]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[162654-162661]:PrimitiveType[162794-162801]"
    }, {
      "left" : "isDomainZoomable",
      "right" : "isDomainZoomable",
      "info" : "SimpleName[162662-162678]:SimpleName[162802-162818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162681-162711]:Block[162821-162851]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[162692-162704]:ReturnStatement[162832-162844]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[162921-162927]:Modifier[163061-163067]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[162928-162935]:PrimitiveType[163068-163075]"
    }, {
      "left" : "isRangeZoomable",
      "right" : "isRangeZoomable",
      "info" : "SimpleName[162936-162951]:SimpleName[163076-163091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162954-162984]:Block[163094-163124]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[162965-162977]:ReturnStatement[163105-163117]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[163195-163201]:Modifier[163335-163341]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[163202-163205]:PrimitiveType[163342-163345]"
    }, {
      "left" : "getSeriesCount",
      "right" : "getSeriesCount",
      "info" : "SimpleName[163206-163220]:SimpleName[163346-163360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163223-163414]:Block[163363-163554]"
    }, {
      "left" : "int result = 0;",
      "right" : "int result = 0;",
      "info" : "VariableDeclarationStatement[163234-163249]:VariableDeclarationStatement[163374-163389]"
    }, {
      "left" : "XYDataset dataset = getDataset();",
      "right" : "XYDataset dataset = getDataset();",
      "info" : "VariableDeclarationStatement[163259-163292]:VariableDeclarationStatement[163399-163432]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[163302-163383]:IfStatement[163442-163523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163323-163383]:Block[163463-163523]"
    }, {
      "left" : "result = dataset.getSeriesCount();",
      "right" : "result = dataset.getSeriesCount();",
      "info" : "ExpressionStatement[163338-163372]:ExpressionStatement[163478-163512]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[163393-163407]:ReturnStatement[163533-163547]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[163624-163630]:Modifier[163764-163770]"
    }, {
      "left" : "LegendItemCollection",
      "right" : "LegendItemCollection",
      "info" : "SimpleType[163631-163651]:SimpleType[163771-163791]"
    }, {
      "left" : "getFixedLegendItems",
      "right" : "getFixedLegendItems",
      "info" : "SimpleName[163652-163671]:SimpleName[163792-163811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163674-163721]:Block[163814-163861]"
    }, {
      "left" : "return this.fixedLegendItems;",
      "right" : "return this.fixedLegendItems;",
      "info" : "ReturnStatement[163685-163714]:ReturnStatement[163825-163854]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164033-164039]:Modifier[164173-164179]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[164040-164044]:PrimitiveType[164180-164184]"
    }, {
      "left" : "setFixedLegendItems",
      "right" : "setFixedLegendItems",
      "info" : "SimpleName[164045-164064]:SimpleName[164185-164204]"
    }, {
      "left" : "LegendItemCollection items",
      "right" : "LegendItemCollection items",
      "info" : "SingleVariableDeclaration[164065-164091]:SingleVariableDeclaration[164205-164231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164093-164169]:Block[164233-164309]"
    }, {
      "left" : "this.fixedLegendItems = items;",
      "right" : "this.fixedLegendItems = items;",
      "info" : "ExpressionStatement[164104-164134]:ExpressionStatement[164244-164274]"
    }, {
      "left" : "fireChangeEvent();",
      "right" : "fireChangeEvent();",
      "info" : "ExpressionStatement[164144-164162]:ExpressionStatement[164284-164302]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[164432-164438]:Modifier[164572-164578]"
    }, {
      "left" : "LegendItemCollection",
      "right" : "LegendItemCollection",
      "info" : "SimpleType[164439-164459]:SimpleType[164579-164599]"
    }, {
      "left" : "getLegendItems",
      "right" : "getLegendItems",
      "info" : "SimpleName[164460-164474]:SimpleName[164600-164614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164477-165719]:Block[164617-165859]"
    }, {
      "left" : "if (this.fixedLegendItems != null)",
      "right" : "if (this.fixedLegendItems != null)",
      "info" : "IfStatement[164488-164578]:IfStatement[164628-164718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164523-164578]:Block[164663-164718]"
    }, {
      "left" : "return this.fixedLegendItems;",
      "right" : "return this.fixedLegendItems;",
      "info" : "ReturnStatement[164538-164567]:ReturnStatement[164678-164707]"
    }, {
      "left" : "LegendItemCollection result = new LegendItemCollection();",
      "right" : "LegendItemCollection result = new LegendItemCollection();",
      "info" : "VariableDeclarationStatement[164588-164645]:VariableDeclarationStatement[164728-164785]"
    }, {
      "left" : "int count = this.datasets.size();",
      "right" : "int count = this.datasets.size();",
      "info" : "VariableDeclarationStatement[164655-164688]:VariableDeclarationStatement[164795-164828]"
    }, {
      "left" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
      "right" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
      "info" : "ForStatement[164698-165688]:ForStatement[164838-165828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164763-165688]:Block[164903-165828]"
    }, {
      "left" : "XYDataset dataset = getDataset(datasetIndex);",
      "right" : "XYDataset dataset = getDataset(datasetIndex);",
      "info" : "VariableDeclarationStatement[164778-164823]:VariableDeclarationStatement[164918-164963]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[164837-165677]:IfStatement[164977-165817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164858-165677]:Block[164998-165817]"
    }, {
      "left" : "XYItemRenderer renderer = getRenderer(datasetIndex);",
      "right" : "XYItemRenderer renderer = getRenderer(datasetIndex);",
      "info" : "VariableDeclarationStatement[164877-164929]:VariableDeclarationStatement[165017-165069]"
    }, {
      "left" : "if (renderer == null)",
      "right" : "if (renderer == null)",
      "info" : "IfStatement[164947-165037]:IfStatement[165087-165177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[164969-165037]:Block[165109-165177]"
    }, {
      "left" : "renderer = getRenderer(0);",
      "right" : "renderer = getRenderer(0);",
      "info" : "ExpressionStatement[164992-165018]:ExpressionStatement[165132-165158]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[165055-165662]:IfStatement[165195-165802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165077-165662]:Block[165217-165802]"
    }, {
      "left" : "int seriesCount = dataset.getSeriesCount();",
      "right" : "int seriesCount = dataset.getSeriesCount();",
      "info" : "VariableDeclarationStatement[165100-165143]:VariableDeclarationStatement[165240-165283]"
    }, {
      "left" : "for (int i = 0; i < seriesCount; i++)",
      "right" : "for (int i = 0; i < seriesCount; i++)",
      "info" : "ForStatement[165165-165643]:ForStatement[165305-165783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165203-165643]:Block[165343-165783]"
    }, {
      "left" : "if (renderer.isSeriesVisible(i)\r\n                                && renderer.isSeriesVisibleInLegend(i))",
      "right" : "if (renderer.isSeriesVisible(i)\r\n                                && renderer.isSeriesVisibleInLegend(i))",
      "info" : "IfStatement[165230-165620]:IfStatement[165370-165760]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165335-165620]:Block[165475-165760]"
    }, {
      "left" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
      "right" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
      "info" : "VariableDeclarationStatement[165366-165462]:VariableDeclarationStatement[165506-165602]"
    }, {
      "left" : "if (item != null)",
      "right" : "if (item != null)",
      "info" : "IfStatement[165492-165593]:IfStatement[165632-165733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165510-165593]:Block[165650-165733]"
    }, {
      "left" : "result.add(item);",
      "right" : "result.add(item);",
      "info" : "ExpressionStatement[165545-165562]:ExpressionStatement[165685-165702]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[165698-165712]:ReturnStatement[165838-165852]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[165938-165944]:Modifier[166078-166084]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[165945-165952]:PrimitiveType[166085-166092]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[165953-165959]:SimpleName[166093-166099]"
    }, {
      "left" : "Object obj",
      "right" : "Object obj",
      "info" : "SingleVariableDeclaration[165960-165970]:SingleVariableDeclaration[166100-166110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165972-172244]:Block[166112-172384]"
    }, {
      "left" : "if (obj == this)",
      "right" : "if (obj == this)",
      "info" : "IfStatement[165985-166040]:IfStatement[166125-166180]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166002-166040]:Block[166142-166180]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[166017-166029]:ReturnStatement[166157-166169]"
    }, {
      "left" : "if (!(obj instanceof XYPlot))",
      "right" : "if (!(obj instanceof XYPlot))",
      "info" : "IfStatement[166050-166119]:IfStatement[166190-166259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166080-166119]:Block[166220-166259]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166095-166108]:ReturnStatement[166235-166248]"
    }, {
      "left" : "XYPlot that = (XYPlot) obj;",
      "right" : "XYPlot that = (XYPlot) obj;",
      "info" : "VariableDeclarationStatement[166131-166158]:VariableDeclarationStatement[166271-166298]"
    }, {
      "left" : "if (this.weight != that.weight)",
      "right" : "if (this.weight != that.weight)",
      "info" : "IfStatement[166168-166239]:IfStatement[166308-166379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166200-166239]:Block[166340-166379]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166215-166228]:ReturnStatement[166355-166368]"
    }, {
      "left" : "if (this.orientation != that.orientation)",
      "right" : "if (this.orientation != that.orientation)",
      "info" : "IfStatement[166249-166330]:IfStatement[166389-166470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166291-166330]:Block[166431-166470]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166306-166319]:ReturnStatement[166446-166459]"
    }, {
      "left" : "if (!this.domainAxes.equals(that.domainAxes))",
      "right" : "if (!this.domainAxes.equals(that.domainAxes))",
      "info" : "IfStatement[166340-166425]:IfStatement[166480-166565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166386-166425]:Block[166526-166565]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166401-166414]:ReturnStatement[166541-166554]"
    }, {
      "left" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
      "right" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
      "info" : "IfStatement[166435-166538]:IfStatement[166575-166678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166499-166538]:Block[166639-166678]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166514-166527]:ReturnStatement[166654-166667]"
    }, {
      "left" : "if (this.rangeCrosshairLockedOnData\r\n                != that.rangeCrosshairLockedOnData)",
      "right" : "if (this.rangeCrosshairLockedOnData\r\n                != that.rangeCrosshairLockedOnData)",
      "info" : "IfStatement[166548-166676]:IfStatement[166688-166816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166637-166676]:Block[166777-166816]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166652-166665]:ReturnStatement[166792-166805]"
    }, {
      "left" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
      "right" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
      "info" : "IfStatement[166686-166789]:IfStatement[166826-166929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166750-166789]:Block[166890-166929]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166765-166778]:ReturnStatement[166905-166918]"
    }, {
      "left" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
      "right" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
      "info" : "IfStatement[166799-166900]:IfStatement[166939-167040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166861-166900]:Block[167001-167040]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166876-166889]:ReturnStatement[167016-167029]"
    }, {
      "left" : "if (this.domainZeroBaselineVisible != that.domainZeroBaselineVisible)",
      "right" : "if (this.domainZeroBaselineVisible != that.domainZeroBaselineVisible)",
      "info" : "IfStatement[166910-167019]:IfStatement[167050-167159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166980-167019]:Block[167120-167159]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[166995-167008]:ReturnStatement[167135-167148]"
    }, {
      "left" : "if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible)",
      "right" : "if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible)",
      "info" : "IfStatement[167029-167136]:IfStatement[167169-167276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167097-167136]:Block[167237-167276]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167112-167125]:ReturnStatement[167252-167265]"
    }, {
      "left" : "if (this.domainCrosshairVisible != that.domainCrosshairVisible)",
      "right" : "if (this.domainCrosshairVisible != that.domainCrosshairVisible)",
      "info" : "IfStatement[167146-167249]:IfStatement[167286-167389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167210-167249]:Block[167350-167389]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167225-167238]:ReturnStatement[167365-167378]"
    }, {
      "left" : "if (this.domainCrosshairValue != that.domainCrosshairValue)",
      "right" : "if (this.domainCrosshairValue != that.domainCrosshairValue)",
      "info" : "IfStatement[167259-167358]:IfStatement[167399-167498]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167319-167358]:Block[167459-167498]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167334-167347]:ReturnStatement[167474-167487]"
    }, {
      "left" : "if (this.domainCrosshairLockedOnData\r\n                != that.domainCrosshairLockedOnData)",
      "right" : "if (this.domainCrosshairLockedOnData\r\n                != that.domainCrosshairLockedOnData)",
      "info" : "IfStatement[167368-167498]:IfStatement[167508-167638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167459-167498]:Block[167599-167638]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167474-167487]:ReturnStatement[167614-167627]"
    }, {
      "left" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
      "right" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
      "info" : "IfStatement[167508-167609]:IfStatement[167648-167749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167570-167609]:Block[167710-167749]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167585-167598]:ReturnStatement[167725-167738]"
    }, {
      "left" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
      "right" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
      "info" : "IfStatement[167619-167716]:IfStatement[167759-167856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167677-167716]:Block[167817-167856]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167692-167705]:ReturnStatement[167832-167845]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
      "right" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
      "info" : "IfStatement[167726-167827]:IfStatement[167866-167967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167788-167827]:Block[167928-167967]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167803-167816]:ReturnStatement[167943-167956]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
      "right" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
      "info" : "IfStatement[167837-167936]:IfStatement[167977-168076]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[167897-167936]:Block[168037-168076]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[167912-167925]:ReturnStatement[168052-168065]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeAxes, that.rangeAxes))",
      "right" : "if (!ObjectUtilities.equal(this.rangeAxes, that.rangeAxes))",
      "info" : "IfStatement[167946-168045]:IfStatement[168086-168185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168006-168045]:Block[168146-168185]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[168021-168034]:ReturnStatement[168161-168174]"
    }, {
      "left" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
      "right" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
      "info" : "IfStatement[168055-168156]:IfStatement[168195-168296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168117-168156]:Block[168257-168296]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[168132-168145]:ReturnStatement[168272-168285]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, \r\n                that.datasetToDomainAxisMap))",
      "right" : "if (!ObjectUtilities.equal(this.datasetToDomainAxisMap, \r\n                that.datasetToDomainAxisMap))",
      "info" : "IfStatement[168166-168309]:IfStatement[168306-168449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168270-168309]:Block[168410-168449]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[168285-168298]:ReturnStatement[168425-168438]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, \r\n                that.datasetToRangeAxisMap))",
      "right" : "if (!ObjectUtilities.equal(this.datasetToRangeAxisMap, \r\n                that.datasetToRangeAxisMap))",
      "info" : "IfStatement[168319-168460]:IfStatement[168459-168600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168421-168460]:Block[168561-168600]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[168436-168449]:ReturnStatement[168576-168589]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.domainGridlineStroke, \r\n                that.domainGridlineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.domainGridlineStroke, \r\n                that.domainGridlineStroke))",
      "info" : "IfStatement[168470-168609]:IfStatement[168610-168749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168570-168609]:Block[168710-168749]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[168585-168598]:ReturnStatement[168725-168738]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.domainGridlinePaint, \r\n                that.domainGridlinePaint))",
      "right" : "if (!PaintUtilities.equal(this.domainGridlinePaint, \r\n                that.domainGridlinePaint))",
      "info" : "IfStatement[168619-168755]:IfStatement[168759-168895]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168716-168755]:Block[168856-168895]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[168731-168744]:ReturnStatement[168871-168884]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke, \r\n                that.rangeGridlineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke, \r\n                that.rangeGridlineStroke))",
      "info" : "IfStatement[168765-168902]:IfStatement[168905-169042]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168863-168902]:Block[169003-169042]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[168878-168891]:ReturnStatement[169018-169031]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeGridlinePaint, \r\n                that.rangeGridlinePaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeGridlinePaint, \r\n                that.rangeGridlinePaint))",
      "info" : "IfStatement[168912-169046]:IfStatement[169052-169186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169007-169046]:Block[169147-169186]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[169022-169035]:ReturnStatement[169162-169175]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.domainZeroBaselinePaint, \r\n                that.domainZeroBaselinePaint))",
      "right" : "if (!PaintUtilities.equal(this.domainZeroBaselinePaint, \r\n                that.domainZeroBaselinePaint))",
      "info" : "IfStatement[169056-169200]:IfStatement[169196-169340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169161-169200]:Block[169301-169340]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[169176-169189]:ReturnStatement[169316-169329]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.domainZeroBaselineStroke, \r\n                that.domainZeroBaselineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.domainZeroBaselineStroke, \r\n                that.domainZeroBaselineStroke))",
      "info" : "IfStatement[169210-169357]:IfStatement[169350-169497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169318-169357]:Block[169458-169497]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[169333-169346]:ReturnStatement[169473-169486]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeZeroBaselinePaint, \r\n                that.rangeZeroBaselinePaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeZeroBaselinePaint, \r\n                that.rangeZeroBaselinePaint))",
      "info" : "IfStatement[169367-169509]:IfStatement[169507-169649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169470-169509]:Block[169610-169649]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[169485-169498]:ReturnStatement[169625-169638]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke, \r\n                that.rangeZeroBaselineStroke))",
      "right" : "if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke, \r\n                that.rangeZeroBaselineStroke))",
      "info" : "IfStatement[169519-169664]:IfStatement[169659-169804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169625-169664]:Block[169765-169804]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[169640-169653]:ReturnStatement[169780-169793]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.domainCrosshairStroke, \r\n                that.domainCrosshairStroke))",
      "right" : "if (!ObjectUtilities.equal(this.domainCrosshairStroke, \r\n                that.domainCrosshairStroke))",
      "info" : "IfStatement[169674-169815]:IfStatement[169814-169955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169776-169815]:Block[169916-169955]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[169791-169804]:ReturnStatement[169931-169944]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.domainCrosshairPaint, \r\n                that.domainCrosshairPaint))",
      "right" : "if (!PaintUtilities.equal(this.domainCrosshairPaint, \r\n                that.domainCrosshairPaint))",
      "info" : "IfStatement[169825-169963]:IfStatement[169965-170103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169924-169963]:Block[170064-170103]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[169939-169952]:ReturnStatement[170079-170092]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke, \r\n                that.rangeCrosshairStroke))",
      "right" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke, \r\n                that.rangeCrosshairStroke))",
      "info" : "IfStatement[169973-170112]:IfStatement[170113-170252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170073-170112]:Block[170213-170252]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[170088-170101]:ReturnStatement[170228-170241]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint, \r\n                that.rangeCrosshairPaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint, \r\n                that.rangeCrosshairPaint))",
      "info" : "IfStatement[170122-170258]:IfStatement[170262-170398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170219-170258]:Block[170359-170398]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[170234-170247]:ReturnStatement[170374-170387]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers, \r\n                that.foregroundDomainMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers, \r\n                that.foregroundDomainMarkers))",
      "info" : "IfStatement[170268-170413]:IfStatement[170408-170553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170374-170413]:Block[170514-170553]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[170389-170402]:ReturnStatement[170529-170542]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers, \r\n                that.backgroundDomainMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers, \r\n                that.backgroundDomainMarkers))",
      "info" : "IfStatement[170423-170568]:IfStatement[170563-170708]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170529-170568]:Block[170669-170708]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[170544-170557]:ReturnStatement[170684-170697]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "info" : "IfStatement[170578-170721]:IfStatement[170718-170861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170682-170721]:Block[170822-170861]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[170697-170710]:ReturnStatement[170837-170850]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "info" : "IfStatement[170731-170874]:IfStatement[170871-171014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170835-170874]:Block[170975-171014]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[170850-170863]:ReturnStatement[170990-171003]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers, \r\n                that.foregroundDomainMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers, \r\n                that.foregroundDomainMarkers))",
      "info" : "IfStatement[170884-171029]:IfStatement[171024-171169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170990-171029]:Block[171130-171169]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171005-171018]:ReturnStatement[171145-171158]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers, \r\n                that.backgroundDomainMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers, \r\n                that.backgroundDomainMarkers))",
      "info" : "IfStatement[171039-171184]:IfStatement[171179-171324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171145-171184]:Block[171285-171324]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171160-171173]:ReturnStatement[171300-171313]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers, \r\n                that.foregroundRangeMarkers))",
      "info" : "IfStatement[171194-171337]:IfStatement[171334-171477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171298-171337]:Block[171438-171477]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171313-171326]:ReturnStatement[171453-171466]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "right" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers, \r\n                that.backgroundRangeMarkers))",
      "info" : "IfStatement[171347-171490]:IfStatement[171487-171630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171451-171490]:Block[171591-171630]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171466-171479]:ReturnStatement[171606-171619]"
    }, {
      "left" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
      "right" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
      "info" : "IfStatement[171500-171603]:IfStatement[171640-171743]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171564-171603]:Block[171704-171743]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171579-171592]:ReturnStatement[171719-171732]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.domainTickBandPaint, \r\n                that.domainTickBandPaint))",
      "right" : "if (!PaintUtilities.equal(this.domainTickBandPaint, \r\n                that.domainTickBandPaint))",
      "info" : "IfStatement[171613-171749]:IfStatement[171753-171889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171710-171749]:Block[171850-171889]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171725-171738]:ReturnStatement[171865-171878]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.rangeTickBandPaint, \r\n                that.rangeTickBandPaint))",
      "right" : "if (!PaintUtilities.equal(this.rangeTickBandPaint, \r\n                that.rangeTickBandPaint))",
      "info" : "IfStatement[171759-171893]:IfStatement[171899-172033]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171854-171893]:Block[171994-172033]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171869-171882]:ReturnStatement[172009-172022]"
    }, {
      "left" : "if (!this.quadrantOrigin.equals(that.quadrantOrigin))",
      "right" : "if (!this.quadrantOrigin.equals(that.quadrantOrigin))",
      "info" : "IfStatement[171903-171996]:IfStatement[172043-172136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171957-171996]:Block[172097-172136]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[171972-171985]:ReturnStatement[172112-172125]"
    }, {
      "left" : "for (int i = 0; i < 4; i++)",
      "right" : "for (int i = 0; i < 4; i++)",
      "info" : "ForStatement[172006-172202]:ForStatement[172146-172342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172034-172202]:Block[172174-172342]"
    }, {
      "left" : "if (!PaintUtilities.equal(this.quadrantPaint[i], \r\n                    that.quadrantPaint[i]))",
      "right" : "if (!PaintUtilities.equal(this.quadrantPaint[i], \r\n                    that.quadrantPaint[i]))",
      "info" : "IfStatement[172049-172191]:IfStatement[172189-172331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172144-172191]:Block[172284-172331]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[172163-172176]:ReturnStatement[172303-172316]"
    }, {
      "left" : "return super.equals(obj);",
      "right" : "return super.equals(obj);",
      "info" : "ReturnStatement[172212-172237]:ReturnStatement[172352-172377]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[172471-172477]:Modifier[172611-172617]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[172478-172484]:SimpleType[172618-172624]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[172485-172490]:SimpleName[172625-172630]"
    }, {
      "left" : "CloneNotSupportedException",
      "right" : "CloneNotSupportedException",
      "info" : "SimpleType[172500-172526]:SimpleType[172640-172666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172527-175925]:Block[172667-176065]"
    }, {
      "left" : "XYPlot clone = (XYPlot) super.clone();",
      "right" : "XYPlot clone = (XYPlot) super.clone();",
      "info" : "VariableDeclarationStatement[172540-172578]:VariableDeclarationStatement[172680-172718]"
    }, {
      "left" : "clone.domainAxes = (ObjectList) ObjectUtilities.clone(this.domainAxes);",
      "right" : "clone.domainAxes = (ObjectList) ObjectUtilities.clone(this.domainAxes);",
      "info" : "ExpressionStatement[172588-172659]:ExpressionStatement[172728-172799]"
    }, {
      "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
      "info" : "ForStatement[172669-173062]:ForStatement[172809-173202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172718-173062]:Block[172858-173202]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[172733-172785]:VariableDeclarationStatement[172873-172925]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[172799-173051]:IfStatement[172939-173191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172817-173051]:Block[172957-173191]"
    }, {
      "left" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
      "right" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
      "info" : "VariableDeclarationStatement[172836-172884]:VariableDeclarationStatement[172976-173024]"
    }, {
      "left" : "clone.domainAxes.set(i, clonedAxis);",
      "right" : "clone.domainAxes.set(i, clonedAxis);",
      "info" : "ExpressionStatement[172902-172938]:ExpressionStatement[173042-173078]"
    }, {
      "left" : "clonedAxis.setPlot(clone);",
      "right" : "clonedAxis.setPlot(clone);",
      "info" : "ExpressionStatement[172956-172982]:ExpressionStatement[173096-173122]"
    }, {
      "left" : "clonedAxis.addChangeListener(clone);",
      "right" : "clonedAxis.addChangeListener(clone);",
      "info" : "ExpressionStatement[173000-173036]:ExpressionStatement[173140-173176]"
    }, {
      "left" : "clone.domainAxisLocations = (ObjectList) \r\n                this.domainAxisLocations.clone();",
      "right" : "clone.domainAxisLocations = (ObjectList) \r\n                this.domainAxisLocations.clone();",
      "info" : "ExpressionStatement[173072-173164]:ExpressionStatement[173212-173304]"
    }, {
      "left" : "clone.rangeAxes = (ObjectList) ObjectUtilities.clone(this.rangeAxes);",
      "right" : "clone.rangeAxes = (ObjectList) ObjectUtilities.clone(this.rangeAxes);",
      "info" : "ExpressionStatement[173176-173245]:ExpressionStatement[173316-173385]"
    }, {
      "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
      "info" : "ForStatement[173255-173645]:ForStatement[173395-173785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173303-173645]:Block[173443-173785]"
    }, {
      "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[173318-173369]:VariableDeclarationStatement[173458-173509]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[173383-173634]:IfStatement[173523-173774]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173401-173634]:Block[173541-173774]"
    }, {
      "left" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
      "right" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
      "info" : "VariableDeclarationStatement[173420-173468]:VariableDeclarationStatement[173560-173608]"
    }, {
      "left" : "clone.rangeAxes.set(i, clonedAxis);",
      "right" : "clone.rangeAxes.set(i, clonedAxis);",
      "info" : "ExpressionStatement[173486-173521]:ExpressionStatement[173626-173661]"
    }, {
      "left" : "clonedAxis.setPlot(clone);",
      "right" : "clonedAxis.setPlot(clone);",
      "info" : "ExpressionStatement[173539-173565]:ExpressionStatement[173679-173705]"
    }, {
      "left" : "clonedAxis.addChangeListener(clone);",
      "right" : "clonedAxis.addChangeListener(clone);",
      "info" : "ExpressionStatement[173583-173619]:ExpressionStatement[173723-173759]"
    }, {
      "left" : "clone.rangeAxisLocations = (ObjectList) ObjectUtilities.clone(\r\n                this.rangeAxisLocations);",
      "right" : "clone.rangeAxisLocations = (ObjectList) ObjectUtilities.clone(\r\n                this.rangeAxisLocations);",
      "info" : "ExpressionStatement[173655-173760]:ExpressionStatement[173795-173900]"
    }, {
      "left" : "clone.datasets = (ObjectList) ObjectUtilities.clone(this.datasets);",
      "right" : "clone.datasets = (ObjectList) ObjectUtilities.clone(this.datasets);",
      "info" : "ExpressionStatement[173847-173914]:ExpressionStatement[173987-174054]"
    }, {
      "left" : "for (int i = 0; i < clone.datasets.size(); ++i)",
      "right" : "for (int i = 0; i < clone.datasets.size(); ++i)",
      "info" : "ForStatement[173924-174116]:ForStatement[174064-174256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173972-174116]:Block[174112-174256]"
    }, {
      "left" : "XYDataset d = getDataset(i);",
      "right" : "XYDataset d = getDataset(i);",
      "info" : "VariableDeclarationStatement[173987-174015]:VariableDeclarationStatement[174127-174155]"
    }, {
      "left" : "if (d != null)",
      "right" : "if (d != null)",
      "info" : "IfStatement[174029-174105]:IfStatement[174169-174245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174044-174105]:Block[174184-174245]"
    }, {
      "left" : "d.addChangeListener(clone);",
      "right" : "d.addChangeListener(clone);",
      "info" : "ExpressionStatement[174063-174090]:ExpressionStatement[174203-174230]"
    }, {
      "left" : "clone.datasetToDomainAxisMap = new TreeMap();",
      "right" : "clone.datasetToDomainAxisMap = new TreeMap();",
      "info" : "ExpressionStatement[174128-174173]:ExpressionStatement[174268-174313]"
    }, {
      "left" : "clone.datasetToDomainAxisMap.putAll(this.datasetToDomainAxisMap);",
      "right" : "clone.datasetToDomainAxisMap.putAll(this.datasetToDomainAxisMap);",
      "info" : "ExpressionStatement[174183-174248]:ExpressionStatement[174323-174388]"
    }, {
      "left" : "clone.datasetToRangeAxisMap = new TreeMap();",
      "right" : "clone.datasetToRangeAxisMap = new TreeMap();",
      "info" : "ExpressionStatement[174258-174302]:ExpressionStatement[174398-174442]"
    }, {
      "left" : "clone.datasetToRangeAxisMap.putAll(this.datasetToRangeAxisMap);",
      "right" : "clone.datasetToRangeAxisMap.putAll(this.datasetToRangeAxisMap);",
      "info" : "ExpressionStatement[174312-174375]:ExpressionStatement[174452-174515]"
    }, {
      "left" : "clone.renderers = (ObjectList) ObjectUtilities.clone(this.renderers);",
      "right" : "clone.renderers = (ObjectList) ObjectUtilities.clone(this.renderers);",
      "info" : "ExpressionStatement[174387-174456]:ExpressionStatement[174527-174596]"
    }, {
      "left" : "for (int i = 0; i < this.renderers.size(); i++)",
      "right" : "for (int i = 0; i < this.renderers.size(); i++)",
      "info" : "ForStatement[174466-174798]:ForStatement[174606-174938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174514-174798]:Block[174654-174938]"
    }, {
      "left" : "XYItemRenderer renderer2 = (XYItemRenderer) this.renderers.get(i);",
      "right" : "XYItemRenderer renderer2 = (XYItemRenderer) this.renderers.get(i);",
      "info" : "VariableDeclarationStatement[174529-174595]:VariableDeclarationStatement[174669-174735]"
    }, {
      "left" : "if (renderer2 instanceof PublicCloneable)",
      "right" : "if (renderer2 instanceof PublicCloneable)",
      "info" : "IfStatement[174609-174787]:IfStatement[174749-174927]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174651-174787]:Block[174791-174927]"
    }, {
      "left" : "PublicCloneable pc = (PublicCloneable) renderer2;",
      "right" : "PublicCloneable pc = (PublicCloneable) renderer2;",
      "info" : "VariableDeclarationStatement[174670-174719]:VariableDeclarationStatement[174810-174859]"
    }, {
      "left" : "clone.renderers.set(i, pc.clone());",
      "right" : "clone.renderers.set(i, pc.clone());",
      "info" : "ExpressionStatement[174737-174772]:ExpressionStatement[174877-174912]"
    }, {
      "left" : "clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundDomainMarkers);",
      "right" : "clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundDomainMarkers);",
      "info" : "ExpressionStatement[174808-174916]:ExpressionStatement[174948-175056]"
    }, {
      "left" : "clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundDomainMarkers);",
      "right" : "clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundDomainMarkers);",
      "info" : "ExpressionStatement[174926-175034]:ExpressionStatement[175066-175174]"
    }, {
      "left" : "clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundRangeMarkers);",
      "right" : "clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundRangeMarkers);",
      "info" : "ExpressionStatement[175044-175150]:ExpressionStatement[175184-175290]"
    }, {
      "left" : "clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundRangeMarkers);",
      "right" : "clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundRangeMarkers);",
      "info" : "ExpressionStatement[175160-175266]:ExpressionStatement[175300-175406]"
    }, {
      "left" : "clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);",
      "right" : "clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);",
      "info" : "ExpressionStatement[175276-175347]:ExpressionStatement[175416-175487]"
    }, {
      "left" : "if (this.fixedDomainAxisSpace != null)",
      "right" : "if (this.fixedDomainAxisSpace != null)",
      "info" : "IfStatement[175357-175534]:IfStatement[175497-175674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175396-175534]:Block[175536-175674]"
    }, {
      "left" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
      "right" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
      "info" : "ExpressionStatement[175411-175523]:ExpressionStatement[175551-175663]"
    }, {
      "left" : "if (this.fixedRangeAxisSpace != null)",
      "right" : "if (this.fixedRangeAxisSpace != null)",
      "info" : "IfStatement[175544-175718]:IfStatement[175684-175858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175582-175718]:Block[175722-175858]"
    }, {
      "left" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
      "right" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
      "info" : "ExpressionStatement[175597-175707]:ExpressionStatement[175737-175847]"
    }, {
      "left" : "clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(\r\n                this.quadrantOrigin);",
      "right" : "clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(\r\n                this.quadrantOrigin);",
      "info" : "ExpressionStatement[175730-175824]:ExpressionStatement[175870-175964]"
    }, {
      "left" : "clone.quadrantPaint = (Paint[]) this.quadrantPaint.clone();",
      "right" : "clone.quadrantPaint = (Paint[]) this.quadrantPaint.clone();",
      "info" : "ExpressionStatement[175834-175893]:ExpressionStatement[175974-176033]"
    }, {
      "left" : "return clone;",
      "right" : "return clone;",
      "info" : "ReturnStatement[175903-175916]:ReturnStatement[176043-176056]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[176104-176111]:Modifier[176244-176251]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[176112-176116]:PrimitiveType[176252-176256]"
    }, {
      "left" : "writeObject",
      "right" : "writeObject",
      "info" : "SimpleName[176117-176128]:SimpleName[176257-176268]"
    }, {
      "left" : "ObjectOutputStream stream",
      "right" : "ObjectOutputStream stream",
      "info" : "SingleVariableDeclaration[176129-176154]:SingleVariableDeclaration[176269-176294]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[176163-176174]:SimpleType[176303-176314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176175-177430]:Block[176315-177570]"
    }, {
      "left" : "stream.defaultWriteObject();",
      "right" : "stream.defaultWriteObject();",
      "info" : "ExpressionStatement[176186-176214]:ExpressionStatement[176326-176354]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
      "info" : "ExpressionStatement[176224-176287]:ExpressionStatement[176364-176427]"
    }, {
      "left" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
      "info" : "ExpressionStatement[176297-176358]:ExpressionStatement[176437-176498]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
      "info" : "ExpressionStatement[176368-176430]:ExpressionStatement[176508-176570]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
      "info" : "ExpressionStatement[176440-176500]:ExpressionStatement[176580-176640]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",
      "info" : "ExpressionStatement[176510-176576]:ExpressionStatement[176650-176716]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",
      "info" : "ExpressionStatement[176586-176650]:ExpressionStatement[176726-176790]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",
      "info" : "ExpressionStatement[176660-176724]:ExpressionStatement[176800-176864]"
    }, {
      "left" : "SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",
      "info" : "ExpressionStatement[176734-176796]:ExpressionStatement[176874-176936]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
      "info" : "ExpressionStatement[176806-176869]:ExpressionStatement[176946-177009]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
      "info" : "ExpressionStatement[176879-176940]:ExpressionStatement[177019-177080]"
    }, {
      "left" : "SerialUtilities.writePaint(this.domainTickBandPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.domainTickBandPaint, stream);",
      "info" : "ExpressionStatement[176950-177011]:ExpressionStatement[177090-177151]"
    }, {
      "left" : "SerialUtilities.writePaint(this.rangeTickBandPaint, stream);",
      "right" : "SerialUtilities.writePaint(this.rangeTickBandPaint, stream);",
      "info" : "ExpressionStatement[177021-177081]:ExpressionStatement[177161-177221]"
    }, {
      "left" : "SerialUtilities.writePoint2D(this.quadrantOrigin, stream);",
      "right" : "SerialUtilities.writePoint2D(this.quadrantOrigin, stream);",
      "info" : "ExpressionStatement[177091-177149]:ExpressionStatement[177231-177289]"
    }, {
      "left" : "for (int i = 0; i < 4; i++)",
      "right" : "for (int i = 0; i < 4; i++)",
      "info" : "ForStatement[177159-177271]:ForStatement[177299-177411]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177187-177271]:Block[177327-177411]"
    }, {
      "left" : "SerialUtilities.writePaint(this.quadrantPaint[i], stream);",
      "right" : "SerialUtilities.writePaint(this.quadrantPaint[i], stream);",
      "info" : "ExpressionStatement[177202-177260]:ExpressionStatement[177342-177400]"
    }, {
      "left" : "SerialUtilities.writeStroke(this.domainZeroBaselineStroke, stream);",
      "right" : "SerialUtilities.writeStroke(this.domainZeroBaselineStroke, stream);",
      "info" : "ExpressionStatement[177281-177348]:ExpressionStatement[177421-177488]"
    }, {
      "left" : "SerialUtilities.writePaint(this.domainZeroBaselinePaint, stream);",
      "right" : "SerialUtilities.writePaint(this.domainZeroBaselinePaint, stream);",
      "info" : "ExpressionStatement[177358-177423]:ExpressionStatement[177498-177563]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[177681-177688]:Modifier[177821-177828]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[177689-177693]:PrimitiveType[177829-177833]"
    }, {
      "left" : "readObject",
      "right" : "readObject",
      "info" : "SimpleName[177694-177704]:SimpleName[177834-177844]"
    }, {
      "left" : "ObjectInputStream stream",
      "right" : "ObjectInputStream stream",
      "info" : "SingleVariableDeclaration[177705-177729]:SingleVariableDeclaration[177845-177869]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[177747-177758]:SimpleType[177887-177898]"
    }, {
      "left" : "ClassNotFoundException",
      "right" : "ClassNotFoundException",
      "info" : "SimpleType[177760-177782]:SimpleType[177900-177922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[177783-180373]:Block[177923-180513]"
    }, {
      "left" : "stream.defaultReadObject();",
      "right" : "stream.defaultReadObject();",
      "info" : "ExpressionStatement[177796-177823]:ExpressionStatement[177936-177963]"
    }, {
      "left" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[177833-177896]:ExpressionStatement[177973-178036]"
    }, {
      "left" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[177906-177967]:ExpressionStatement[178046-178107]"
    }, {
      "left" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[177977-178039]:ExpressionStatement[178117-178179]"
    }, {
      "left" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[178049-178109]:ExpressionStatement[178189-178249]"
    }, {
      "left" : "this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[178119-178185]:ExpressionStatement[178259-178325]"
    }, {
      "left" : "this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[178195-178259]:ExpressionStatement[178335-178399]"
    }, {
      "left" : "this.domainCrosshairStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.domainCrosshairStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[178269-178333]:ExpressionStatement[178409-178473]"
    }, {
      "left" : "this.domainCrosshairPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.domainCrosshairPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[178343-178405]:ExpressionStatement[178483-178545]"
    }, {
      "left" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[178415-178478]:ExpressionStatement[178555-178618]"
    }, {
      "left" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[178488-178549]:ExpressionStatement[178628-178689]"
    }, {
      "left" : "this.domainTickBandPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.domainTickBandPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[178559-178620]:ExpressionStatement[178699-178760]"
    }, {
      "left" : "this.rangeTickBandPaint = SerialUtilities.readPaint(stream);",
      "right" : "this.rangeTickBandPaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[178630-178690]:ExpressionStatement[178770-178830]"
    }, {
      "left" : "this.quadrantOrigin = SerialUtilities.readPoint2D(stream);",
      "right" : "this.quadrantOrigin = SerialUtilities.readPoint2D(stream);",
      "info" : "ExpressionStatement[178700-178758]:ExpressionStatement[178840-178898]"
    }, {
      "left" : "this.quadrantPaint = new Paint[4];",
      "right" : "this.quadrantPaint = new Paint[4];",
      "info" : "ExpressionStatement[178768-178802]:ExpressionStatement[178908-178942]"
    }, {
      "left" : "for (int i = 0; i < 4; i++)",
      "right" : "for (int i = 0; i < 4; i++)",
      "info" : "ForStatement[178812-178924]:ForStatement[178952-179064]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178840-178924]:Block[178980-179064]"
    }, {
      "left" : "this.quadrantPaint[i] = SerialUtilities.readPaint(stream);",
      "right" : "this.quadrantPaint[i] = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[178855-178913]:ExpressionStatement[178995-179053]"
    }, {
      "left" : "this.domainZeroBaselineStroke = SerialUtilities.readStroke(stream);",
      "right" : "this.domainZeroBaselineStroke = SerialUtilities.readStroke(stream);",
      "info" : "ExpressionStatement[178936-179003]:ExpressionStatement[179076-179143]"
    }, {
      "left" : "this.domainZeroBaselinePaint = SerialUtilities.readPaint(stream);",
      "right" : "this.domainZeroBaselinePaint = SerialUtilities.readPaint(stream);",
      "info" : "ExpressionStatement[179013-179078]:ExpressionStatement[179153-179218]"
    }, {
      "left" : "int domainAxisCount = this.domainAxes.size();",
      "right" : "int domainAxisCount = this.domainAxes.size();",
      "info" : "VariableDeclarationStatement[179189-179234]:VariableDeclarationStatement[179329-179374]"
    }, {
      "left" : "for (int i = 0; i < domainAxisCount; i++)",
      "right" : "for (int i = 0; i < domainAxisCount; i++)",
      "info" : "ForStatement[179244-179486]:ForStatement[179384-179626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179286-179486]:Block[179426-179626]"
    }, {
      "left" : "Axis axis = (Axis) this.domainAxes.get(i);",
      "right" : "Axis axis = (Axis) this.domainAxes.get(i);",
      "info" : "VariableDeclarationStatement[179301-179343]:VariableDeclarationStatement[179441-179483]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[179357-179475]:IfStatement[179497-179615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179375-179475]:Block[179515-179615]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[179394-179413]:ExpressionStatement[179534-179553]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[179431-179460]:ExpressionStatement[179571-179600]"
    }, {
      "left" : "int rangeAxisCount = this.rangeAxes.size();",
      "right" : "int rangeAxisCount = this.rangeAxes.size();",
      "info" : "VariableDeclarationStatement[179496-179539]:VariableDeclarationStatement[179636-179679]"
    }, {
      "left" : "for (int i = 0; i < rangeAxisCount; i++)",
      "right" : "for (int i = 0; i < rangeAxisCount; i++)",
      "info" : "ForStatement[179549-179789]:ForStatement[179689-179929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179590-179789]:Block[179730-179929]"
    }, {
      "left" : "Axis axis = (Axis) this.rangeAxes.get(i);",
      "right" : "Axis axis = (Axis) this.rangeAxes.get(i);",
      "info" : "VariableDeclarationStatement[179605-179646]:VariableDeclarationStatement[179745-179786]"
    }, {
      "left" : "if (axis != null)",
      "right" : "if (axis != null)",
      "info" : "IfStatement[179660-179778]:IfStatement[179800-179918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179678-179778]:Block[179818-179918]"
    }, {
      "left" : "axis.setPlot(this);",
      "right" : "axis.setPlot(this);",
      "info" : "ExpressionStatement[179697-179716]:ExpressionStatement[179837-179856]"
    }, {
      "left" : "axis.addChangeListener(this);",
      "right" : "axis.addChangeListener(this);",
      "info" : "ExpressionStatement[179734-179763]:ExpressionStatement[179874-179903]"
    }, {
      "left" : "int datasetCount = this.datasets.size();",
      "right" : "int datasetCount = this.datasets.size();",
      "info" : "VariableDeclarationStatement[179799-179839]:VariableDeclarationStatement[179939-179979]"
    }, {
      "left" : "for (int i = 0; i < datasetCount; i++)",
      "right" : "for (int i = 0; i < datasetCount; i++)",
      "info" : "ForStatement[179849-180064]:ForStatement[179989-180204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179888-180064]:Block[180028-180204]"
    }, {
      "left" : "Dataset dataset = (Dataset) this.datasets.get(i);",
      "right" : "Dataset dataset = (Dataset) this.datasets.get(i);",
      "info" : "VariableDeclarationStatement[179903-179952]:VariableDeclarationStatement[180043-180092]"
    }, {
      "left" : "if (dataset != null)",
      "right" : "if (dataset != null)",
      "info" : "IfStatement[179966-180053]:IfStatement[180106-180193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179987-180053]:Block[180127-180193]"
    }, {
      "left" : "dataset.addChangeListener(this);",
      "right" : "dataset.addChangeListener(this);",
      "info" : "ExpressionStatement[180006-180038]:ExpressionStatement[180146-180178]"
    }, {
      "left" : "int rendererCount = this.renderers.size();",
      "right" : "int rendererCount = this.renderers.size();",
      "info" : "VariableDeclarationStatement[180074-180116]:VariableDeclarationStatement[180214-180256]"
    }, {
      "left" : "for (int i = 0; i < rendererCount; i++)",
      "right" : "for (int i = 0; i < rendererCount; i++)",
      "info" : "ForStatement[180126-180360]:ForStatement[180266-180500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180166-180360]:Block[180306-180500]"
    }, {
      "left" : "XYItemRenderer renderer = (XYItemRenderer) this.renderers.get(i);",
      "right" : "XYItemRenderer renderer = (XYItemRenderer) this.renderers.get(i);",
      "info" : "VariableDeclarationStatement[180181-180246]:VariableDeclarationStatement[180321-180386]"
    }, {
      "left" : "if (renderer != null)",
      "right" : "if (renderer != null)",
      "info" : "IfStatement[180260-180349]:IfStatement[180400-180489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180282-180349]:Block[180422-180489]"
    }, {
      "left" : "renderer.addChangeListener(this);",
      "right" : "renderer.addChangeListener(this);",
      "info" : "ExpressionStatement[180301-180334]:ExpressionStatement[180441-180474]"
    } ]
  },
  "interFileMappings" : { }
}