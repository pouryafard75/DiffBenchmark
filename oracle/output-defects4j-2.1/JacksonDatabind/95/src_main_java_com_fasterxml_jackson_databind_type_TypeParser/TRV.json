{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[316-364]:FieldDeclaration[316-364]"
    }, {
      "left" : "protected final TypeFactory _factory;",
      "right" : "protected final TypeFactory _factory;",
      "info" : "FieldDeclaration[370-407]:FieldDeclaration[370-407]"
    }, {
      "left" : "public TypeParser(TypeFactory f)",
      "right" : "public TypeParser(TypeFactory f)",
      "info" : "MethodDeclaration[421-483]:MethodDeclaration[421-483]"
    }, {
      "left" : "public TypeParser withFactory(TypeFactory f)",
      "right" : "public TypeParser withFactory(TypeFactory f)",
      "info" : "MethodDeclaration[489-636]:MethodDeclaration[489-636]"
    }, {
      "left" : "public JavaType parse(String canonical) throws IllegalArgumentException",
      "right" : "public JavaType parse(String canonical) throws IllegalArgumentException",
      "info" : "MethodDeclaration[642-1006]:MethodDeclaration[642-1006]"
    }, {
      "left" : "protected List<JavaType> parseTypes(MyTokenizer tokens)\n        throws IllegalArgumentException",
      "right" : "protected List<JavaType> parseTypes(MyTokenizer tokens)\n        throws IllegalArgumentException",
      "info" : "MethodDeclaration[1857-2470]:MethodDeclaration[1881-2494]"
    }, {
      "left" : "protected Class<?> findClass(String className, MyTokenizer tokens)",
      "right" : "protected Class<?> findClass(String className, MyTokenizer tokens)",
      "info" : "MethodDeclaration[2476-2869]:MethodDeclaration[2500-2893]"
    }, {
      "left" : "protected IllegalArgumentException _problem(MyTokenizer tokens, String msg)",
      "right" : "protected IllegalArgumentException _problem(MyTokenizer tokens, String msg)",
      "info" : "MethodDeclaration[2875-3144]:MethodDeclaration[2899-3168]"
    }, {
      "left" : "MyTokenizer",
      "right" : "MyTokenizer",
      "info" : "TypeDeclaration[3150-4387]:TypeDeclaration[3174-4411]"
    }, {
      "left" : "protected final String _input;",
      "right" : "protected final String _input;",
      "info" : "FieldDeclaration[3219-3249]:FieldDeclaration[3243-3273]"
    }, {
      "left" : "protected int _index;",
      "right" : "protected int _index;",
      "info" : "FieldDeclaration[3259-3280]:FieldDeclaration[3283-3304]"
    }, {
      "left" : "protected String _pushbackToken;",
      "right" : "protected String _pushbackToken;",
      "info" : "FieldDeclaration[3290-3322]:FieldDeclaration[3314-3346]"
    }, {
      "left" : "public MyTokenizer(String str)",
      "right" : "public MyTokenizer(String str)",
      "info" : "MethodDeclaration[3332-3449]:MethodDeclaration[3356-3473]"
    }, {
      "left" : "public boolean hasMoreTokens()",
      "right" : "public boolean hasMoreTokens()",
      "info" : "MethodDeclaration[3459-3589]:MethodDeclaration[3483-3613]"
    }, {
      "left" : "public String nextToken()",
      "right" : "public String nextToken()",
      "info" : "MethodDeclaration[3607-3993]:MethodDeclaration[3631-4017]"
    }, {
      "left" : "public void pushBack(String token)",
      "right" : "public void pushBack(String token)",
      "info" : "MethodDeclaration[4003-4167]:MethodDeclaration[4027-4191]"
    }, {
      "left" : "public String getAllInput()",
      "right" : "public String getAllInput()",
      "info" : "MethodDeclaration[4177-4223]:MethodDeclaration[4201-4247]"
    }, {
      "left" : "public String getRemainingInput()",
      "right" : "public String getRemainingInput()",
      "info" : "MethodDeclaration[4311-4381]:MethodDeclaration[4335-4405]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[454-483]:Block[454-483]"
    }, {
      "left" : "_factory = f;",
      "right" : "_factory = f;",
      "info" : "ExpressionStatement[464-477]:ExpressionStatement[464-477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[570-636]:Block[570-636]"
    }, {
      "left" : "return (f == _factory) ? this : new TypeParser(f);",
      "right" : "return (f == _factory) ? this : new TypeParser(f);",
      "info" : "ReturnStatement[580-630]:ReturnStatement[580-630]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[718-1006]:Block[718-1006]"
    }, {
      "left" : "MyTokenizer tokens = new MyTokenizer(canonical.trim());",
      "right" : "MyTokenizer tokens = new MyTokenizer(canonical.trim());",
      "info" : "VariableDeclarationStatement[728-783]:VariableDeclarationStatement[728-783]"
    }, {
      "left" : "JavaType type = parseType(tokens);",
      "right" : "JavaType type = parseType(tokens);",
      "info" : "VariableDeclarationStatement[792-826]:VariableDeclarationStatement[792-826]"
    }, {
      "left" : "if (tokens.hasMoreTokens())",
      "right" : "if (tokens.hasMoreTokens())",
      "info" : "IfStatement[863-979]:IfStatement[863-979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[891-979]:Block[891-979]"
    }, {
      "left" : "throw _problem(tokens, \"Unexpected tokens after complete type\");",
      "right" : "throw _problem(tokens, \"Unexpected tokens after complete type\");",
      "info" : "ThrowStatement[905-969]:ThrowStatement[905-969]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[988-1000]:ReturnStatement[988-1000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1957-2470]:Block[1981-2494]"
    }, {
      "left" : "ArrayList<JavaType> types = new ArrayList<JavaType>();",
      "right" : "ArrayList<JavaType> types = new ArrayList<JavaType>();",
      "info" : "VariableDeclarationStatement[1967-2021]:VariableDeclarationStatement[1991-2045]"
    }, {
      "left" : "while (tokens.hasMoreTokens())",
      "right" : "while (tokens.hasMoreTokens())",
      "info" : "WhileStatement[2030-2404]:WhileStatement[2054-2428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2061-2404]:Block[2085-2428]"
    }, {
      "left" : "types.add(parseType(tokens));",
      "right" : "types.add(parseType(tokens));",
      "info" : "ExpressionStatement[2075-2104]:ExpressionStatement[2099-2128]"
    }, {
      "left" : "if (!tokens.hasMoreTokens())",
      "right" : "if (!tokens.hasMoreTokens())",
      "info" : "IfStatement[2117-2152]:IfStatement[2141-2176]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[2146-2152]:BreakStatement[2170-2176]"
    }, {
      "left" : "String token = tokens.nextToken();",
      "right" : "String token = tokens.nextToken();",
      "info" : "VariableDeclarationStatement[2165-2199]:VariableDeclarationStatement[2189-2223]"
    }, {
      "left" : "if (\">\".equals(token))",
      "right" : "if (\">\".equals(token))",
      "info" : "IfStatement[2212-2248]:IfStatement[2236-2272]"
    }, {
      "left" : "return types;",
      "right" : "return types;",
      "info" : "ReturnStatement[2235-2248]:ReturnStatement[2259-2272]"
    }, {
      "left" : "if (!\",\".equals(token))",
      "right" : "if (!\",\".equals(token))",
      "info" : "IfStatement[2261-2394]:IfStatement[2285-2418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2285-2394]:Block[2309-2418]"
    }, {
      "left" : "throw _problem(tokens, \"Unexpected token '\"+token+\"', expected ',' or '>')\");",
      "right" : "throw _problem(tokens, \"Unexpected token '\"+token+\"', expected ',' or '>')\");",
      "info" : "ThrowStatement[2303-2380]:ThrowStatement[2327-2404]"
    }, {
      "left" : "throw _problem(tokens, \"Unexpected end-of-string\");",
      "right" : "throw _problem(tokens, \"Unexpected end-of-string\");",
      "info" : "ThrowStatement[2413-2464]:ThrowStatement[2437-2488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2547-2869]:Block[2571-2893]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[2557-2863]:TryStatement[2581-2887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2561-2622]:Block[2585-2646]"
    }, {
      "left" : "return _factory.findClass(className);",
      "right" : "return _factory.findClass(className);",
      "info" : "ReturnStatement[2575-2612]:ReturnStatement[2599-2636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2643-2863]:Block[2667-2887]"
    }, {
      "left" : "if (e instanceof RuntimeException)",
      "right" : "if (e instanceof RuntimeException)",
      "info" : "IfStatement[2657-2751]:IfStatement[2681-2775]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2692-2751]:Block[2716-2775]"
    }, {
      "left" : "throw (RuntimeException) e;",
      "right" : "throw (RuntimeException) e;",
      "info" : "ThrowStatement[2710-2737]:ThrowStatement[2734-2761]"
    }, {
      "left" : "throw _problem(tokens, \"Can not locate class '\"+className+\"', problem: \"+e.getMessage());",
      "right" : "throw _problem(tokens, \"Can not locate class '\"+className+\"', problem: \"+e.getMessage());",
      "info" : "ThrowStatement[2764-2853]:ThrowStatement[2788-2877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2955-3144]:Block[2979-3168]"
    }, {
      "left" : "return new IllegalArgumentException(String.format(\"Failed to parse type '%s' (remaining: '%s'): %s\",\n                tokens.getAllInput(), tokens.getRemainingInput(), msg));",
      "right" : "return new IllegalArgumentException(String.format(\"Failed to parse type '%s' (remaining: '%s'): %s\",\n                tokens.getAllInput(), tokens.getRemainingInput(), msg));",
      "info" : "ReturnStatement[2965-3138]:ReturnStatement[2989-3162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3363-3449]:Block[3387-3473]"
    }, {
      "left" : "super(str, \"<,>\", true);",
      "right" : "super(str, \"<,>\", true);",
      "info" : "SuperConstructorInvocation[3389-3413]:SuperConstructorInvocation[3413-3437]"
    }, {
      "left" : "_input = str;",
      "right" : "_input = str;",
      "info" : "ExpressionStatement[3426-3439]:ExpressionStatement[3450-3463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3508-3589]:Block[3532-3613]"
    }, {
      "left" : "return (_pushbackToken != null) || super.hasMoreTokens();",
      "right" : "return (_pushbackToken != null) || super.hasMoreTokens();",
      "info" : "ReturnStatement[3522-3579]:ReturnStatement[3546-3603]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3651-3993]:Block[3675-4017]"
    }, {
      "left" : "String token;",
      "right" : "String token;",
      "info" : "VariableDeclarationStatement[3665-3678]:VariableDeclarationStatement[3689-3702]"
    }, {
      "left" : "if (_pushbackToken != null)",
      "right" : "if (_pushbackToken != null)",
      "info" : "IfStatement[3691-3957]:IfStatement[3715-3981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3719-3813]:Block[3743-3837]"
    }, {
      "left" : "token = _pushbackToken;",
      "right" : "token = _pushbackToken;",
      "info" : "ExpressionStatement[3737-3760]:ExpressionStatement[3761-3784]"
    }, {
      "left" : "_pushbackToken = null;",
      "right" : "_pushbackToken = null;",
      "info" : "ExpressionStatement[3777-3799]:ExpressionStatement[3801-3823]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3819-3957]:Block[3843-3981]"
    }, {
      "left" : "token = super.nextToken();",
      "right" : "token = super.nextToken();",
      "info" : "ExpressionStatement[3837-3863]:ExpressionStatement[3861-3887]"
    }, {
      "left" : "_index += token.length();",
      "right" : "_index += token.length();",
      "info" : "ExpressionStatement[3880-3905]:ExpressionStatement[3904-3929]"
    }, {
      "left" : "token = token.trim();",
      "right" : "token = token.trim();",
      "info" : "ExpressionStatement[3922-3943]:ExpressionStatement[3946-3967]"
    }, {
      "left" : "return token;",
      "right" : "return token;",
      "info" : "ReturnStatement[3970-3983]:ReturnStatement[3994-4007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4038-4167]:Block[4062-4191]"
    }, {
      "left" : "_pushbackToken = token;",
      "right" : "_pushbackToken = token;",
      "info" : "ExpressionStatement[4052-4075]:ExpressionStatement[4076-4099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4205-4223]:Block[4229-4247]"
    }, {
      "left" : "return _input;",
      "right" : "return _input;",
      "info" : "ReturnStatement[4207-4221]:ReturnStatement[4231-4245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4345-4381]:Block[4369-4405]"
    }, {
      "left" : "return _input.substring(_index);",
      "right" : "return _input.substring(_index);",
      "info" : "ReturnStatement[4347-4379]:ReturnStatement[4371-4403]"
    } ]
  },
  "interFileMappings" : { }
}