{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "EmbeddedRungeKuttaIntegrator",
      "right" : "EmbeddedRungeKuttaIntegrator",
      "info" : "TypeDeclaration[1095-13322]:TypeDeclaration[1095-13574]"
    }, {
      "left" : "private final boolean fsal;",
      "right" : "private final boolean fsal;",
      "info" : "FieldDeclaration[2503-2576]:FieldDeclaration[2503-2576]"
    }, {
      "left" : "private final double[] c;",
      "right" : "private final double[] c;",
      "info" : "FieldDeclaration[2582-2674]:FieldDeclaration[2582-2674]"
    }, {
      "left" : "private final double[][] a;",
      "right" : "private final double[][] a;",
      "info" : "FieldDeclaration[2680-2785]:FieldDeclaration[2680-2785]"
    }, {
      "left" : "private final double[] b;",
      "right" : "private final double[] b;",
      "info" : "FieldDeclaration[2791-2890]:FieldDeclaration[2791-2890]"
    }, {
      "left" : "private final RungeKuttaStepInterpolator prototype;",
      "right" : "private final RungeKuttaStepInterpolator prototype;",
      "info" : "FieldDeclaration[2896-2994]:FieldDeclaration[2896-2994]"
    }, {
      "left" : "private final double exp;",
      "right" : "private final double exp;",
      "info" : "FieldDeclaration[3000-3063]:FieldDeclaration[3000-3063]"
    }, {
      "left" : "private double safety;",
      "right" : "private double safety;",
      "info" : "FieldDeclaration[3069-3138]:FieldDeclaration[3069-3138]"
    }, {
      "left" : "private double minReduction;",
      "right" : "private double minReduction;",
      "info" : "FieldDeclaration[3144-3230]:FieldDeclaration[3144-3230]"
    }, {
      "left" : "private double maxGrowth;",
      "right" : "private double maxGrowth;",
      "info" : "FieldDeclaration[3236-3316]:FieldDeclaration[3236-3316]"
    }, {
      "left" : "protected EmbeddedRungeKuttaIntegrator(final String name, final boolean fsal,\n                                         final double[] c, final double[][] a, final double[] b,\n                                         final RungeKuttaStepInterpolator prototype,\n                                         final double minStep, final double maxStep,\n                                         final double scalAbsoluteTolerance,\n                                         final double scalRelativeTolerance)",
      "right" : "protected EmbeddedRungeKuttaIntegrator(final String name, final boolean fsal,\n                                         final double[] c, final double[][] a, final double[] b,\n                                         final RungeKuttaStepInterpolator prototype,\n                                         final double minStep, final double maxStep,\n                                         final double scalAbsoluteTolerance,\n                                         final double scalRelativeTolerance)",
      "info" : "MethodDeclaration[3320-5105]:MethodDeclaration[3320-5105]"
    }, {
      "left" : "protected EmbeddedRungeKuttaIntegrator(final String name, final boolean fsal,\n                                         final double[] c, final double[][] a, final double[] b,\n                                         final RungeKuttaStepInterpolator prototype,\n                                         final double   minStep, final double maxStep,\n                                         final double[] vecAbsoluteTolerance,\n                                         final double[] vecRelativeTolerance)",
      "right" : "protected EmbeddedRungeKuttaIntegrator(final String name, final boolean fsal,\n                                         final double[] c, final double[][] a, final double[] b,\n                                         final RungeKuttaStepInterpolator prototype,\n                                         final double   minStep, final double maxStep,\n                                         final double[] vecAbsoluteTolerance,\n                                         final double[] vecRelativeTolerance)",
      "info" : "MethodDeclaration[5109-6784]:MethodDeclaration[5109-6784]"
    }, {
      "left" : "public abstract int getOrder();",
      "right" : "public abstract int getOrder();",
      "info" : "MethodDeclaration[6788-6893]:MethodDeclaration[6788-6893]"
    }, {
      "left" : "public double getSafety()",
      "right" : "public double getSafety()",
      "info" : "MethodDeclaration[6897-7030]:MethodDeclaration[6897-7030]"
    }, {
      "left" : "public void setSafety(final double safety)",
      "right" : "public void setSafety(final double safety)",
      "info" : "MethodDeclaration[7034-7197]:MethodDeclaration[7034-7197]"
    }, {
      "left" : "public void integrate(final ExpandableStatefulODE equations, final double t)\n      throws MathIllegalStateException, MathIllegalArgumentException",
      "right" : "public void integrate(final ExpandableStatefulODE equations, final double t)\n      throws MathIllegalStateException, MathIllegalArgumentException",
      "info" : "MethodDeclaration[7201-12074]:MethodDeclaration[7201-12326]"
    }, {
      "left" : "public double getMinReduction()",
      "right" : "public double getMinReduction()",
      "info" : "MethodDeclaration[12078-12245]:MethodDeclaration[12330-12497]"
    }, {
      "left" : "public void setMinReduction(final double minReduction)",
      "right" : "public void setMinReduction(final double minReduction)",
      "info" : "MethodDeclaration[12249-12464]:MethodDeclaration[12501-12716]"
    }, {
      "left" : "public double getMaxGrowth()",
      "right" : "public double getMaxGrowth()",
      "info" : "MethodDeclaration[12468-12623]:MethodDeclaration[12720-12875]"
    }, {
      "left" : "public void setMaxGrowth(final double maxGrowth)",
      "right" : "public void setMaxGrowth(final double maxGrowth)",
      "info" : "MethodDeclaration[12627-12821]:MethodDeclaration[12879-13073]"
    }, {
      "left" : "protected abstract double estimateError(double[][] yDotK,\n                                          double[] y0, double[] y1,\n                                          double h);",
      "right" : "protected abstract double estimateError(double[][] yDotK,\n                                          double[] y0, double[] y1,\n                                          double h);",
      "info" : "MethodDeclaration[12825-13319]:MethodDeclaration[13077-13571]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2408-2414]:Modifier[2408-2414]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[2415-2423]:Modifier[2415-2423]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2424-2429]:TYPE_DECLARATION_KIND[2424-2429]"
    }, {
      "left" : "EmbeddedRungeKuttaIntegrator",
      "right" : "EmbeddedRungeKuttaIntegrator",
      "info" : "SimpleName[2430-2458]:SimpleName[2430-2458]"
    }, {
      "left" : "AdaptiveStepsizeIntegrator",
      "right" : "AdaptiveStepsizeIntegrator",
      "info" : "SimpleType[2469-2495]:SimpleType[2469-2495]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4219-4228]:Modifier[4219-4228]"
    }, {
      "left" : "EmbeddedRungeKuttaIntegrator",
      "right" : "EmbeddedRungeKuttaIntegrator",
      "info" : "SimpleName[4229-4257]:SimpleName[4229-4257]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[4258-4275]:SingleVariableDeclaration[4258-4275]"
    }, {
      "left" : "final boolean fsal",
      "right" : "final boolean fsal",
      "info" : "SingleVariableDeclaration[4277-4295]:SingleVariableDeclaration[4277-4295]"
    }, {
      "left" : "final double[] c",
      "right" : "final double[] c",
      "info" : "SingleVariableDeclaration[4338-4354]:SingleVariableDeclaration[4338-4354]"
    }, {
      "left" : "final double[][] a",
      "right" : "final double[][] a",
      "info" : "SingleVariableDeclaration[4356-4374]:SingleVariableDeclaration[4356-4374]"
    }, {
      "left" : "final double[] b",
      "right" : "final double[] b",
      "info" : "SingleVariableDeclaration[4376-4392]:SingleVariableDeclaration[4376-4392]"
    }, {
      "left" : "final RungeKuttaStepInterpolator prototype",
      "right" : "final RungeKuttaStepInterpolator prototype",
      "info" : "SingleVariableDeclaration[4435-4477]:SingleVariableDeclaration[4435-4477]"
    }, {
      "left" : "final double minStep",
      "right" : "final double minStep",
      "info" : "SingleVariableDeclaration[4520-4540]:SingleVariableDeclaration[4520-4540]"
    }, {
      "left" : "final double maxStep",
      "right" : "final double maxStep",
      "info" : "SingleVariableDeclaration[4542-4562]:SingleVariableDeclaration[4542-4562]"
    }, {
      "left" : "final double scalAbsoluteTolerance",
      "right" : "final double scalAbsoluteTolerance",
      "info" : "SingleVariableDeclaration[4605-4639]:SingleVariableDeclaration[4605-4639]"
    }, {
      "left" : "final double scalRelativeTolerance",
      "right" : "final double scalRelativeTolerance",
      "info" : "SingleVariableDeclaration[4682-4716]:SingleVariableDeclaration[4682-4716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4718-5105]:Block[4718-5105]"
    }, {
      "left" : "super(name, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);",
      "right" : "super(name, minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);",
      "info" : "SuperConstructorInvocation[4725-4801]:SuperConstructorInvocation[4725-4801]"
    }, {
      "left" : "this.fsal      = fsal;",
      "right" : "this.fsal      = fsal;",
      "info" : "ExpressionStatement[4807-4829]:ExpressionStatement[4807-4829]"
    }, {
      "left" : "this.c         = c;",
      "right" : "this.c         = c;",
      "info" : "ExpressionStatement[4834-4853]:ExpressionStatement[4834-4853]"
    }, {
      "left" : "this.a         = a;",
      "right" : "this.a         = a;",
      "info" : "ExpressionStatement[4858-4877]:ExpressionStatement[4858-4877]"
    }, {
      "left" : "this.b         = b;",
      "right" : "this.b         = b;",
      "info" : "ExpressionStatement[4882-4901]:ExpressionStatement[4882-4901]"
    }, {
      "left" : "this.prototype = prototype;",
      "right" : "this.prototype = prototype;",
      "info" : "ExpressionStatement[4906-4933]:ExpressionStatement[4906-4933]"
    }, {
      "left" : "exp = -1.0 / getOrder();",
      "right" : "exp = -1.0 / getOrder();",
      "info" : "ExpressionStatement[4939-4963]:ExpressionStatement[4939-4963]"
    }, {
      "left" : "setSafety(0.9);",
      "right" : "setSafety(0.9);",
      "info" : "ExpressionStatement[5035-5050]:ExpressionStatement[5035-5050]"
    }, {
      "left" : "setMinReduction(0.2);",
      "right" : "setMinReduction(0.2);",
      "info" : "ExpressionStatement[5055-5076]:ExpressionStatement[5055-5076]"
    }, {
      "left" : "setMaxGrowth(10.0);",
      "right" : "setMaxGrowth(10.0);",
      "info" : "ExpressionStatement[5081-5100]:ExpressionStatement[5081-5100]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5896-5905]:Modifier[5896-5905]"
    }, {
      "left" : "EmbeddedRungeKuttaIntegrator",
      "right" : "EmbeddedRungeKuttaIntegrator",
      "info" : "SimpleName[5906-5934]:SimpleName[5906-5934]"
    }, {
      "left" : "final String name",
      "right" : "final String name",
      "info" : "SingleVariableDeclaration[5935-5952]:SingleVariableDeclaration[5935-5952]"
    }, {
      "left" : "final boolean fsal",
      "right" : "final boolean fsal",
      "info" : "SingleVariableDeclaration[5954-5972]:SingleVariableDeclaration[5954-5972]"
    }, {
      "left" : "final double[] c",
      "right" : "final double[] c",
      "info" : "SingleVariableDeclaration[6015-6031]:SingleVariableDeclaration[6015-6031]"
    }, {
      "left" : "final double[][] a",
      "right" : "final double[][] a",
      "info" : "SingleVariableDeclaration[6033-6051]:SingleVariableDeclaration[6033-6051]"
    }, {
      "left" : "final double[] b",
      "right" : "final double[] b",
      "info" : "SingleVariableDeclaration[6053-6069]:SingleVariableDeclaration[6053-6069]"
    }, {
      "left" : "final RungeKuttaStepInterpolator prototype",
      "right" : "final RungeKuttaStepInterpolator prototype",
      "info" : "SingleVariableDeclaration[6112-6154]:SingleVariableDeclaration[6112-6154]"
    }, {
      "left" : "final double   minStep",
      "right" : "final double   minStep",
      "info" : "SingleVariableDeclaration[6197-6219]:SingleVariableDeclaration[6197-6219]"
    }, {
      "left" : "final double maxStep",
      "right" : "final double maxStep",
      "info" : "SingleVariableDeclaration[6221-6241]:SingleVariableDeclaration[6221-6241]"
    }, {
      "left" : "final double[] vecAbsoluteTolerance",
      "right" : "final double[] vecAbsoluteTolerance",
      "info" : "SingleVariableDeclaration[6284-6319]:SingleVariableDeclaration[6284-6319]"
    }, {
      "left" : "final double[] vecRelativeTolerance",
      "right" : "final double[] vecRelativeTolerance",
      "info" : "SingleVariableDeclaration[6362-6397]:SingleVariableDeclaration[6362-6397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6399-6784]:Block[6399-6784]"
    }, {
      "left" : "super(name, minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);",
      "right" : "super(name, minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);",
      "info" : "SuperConstructorInvocation[6406-6480]:SuperConstructorInvocation[6406-6480]"
    }, {
      "left" : "this.fsal      = fsal;",
      "right" : "this.fsal      = fsal;",
      "info" : "ExpressionStatement[6486-6508]:ExpressionStatement[6486-6508]"
    }, {
      "left" : "this.c         = c;",
      "right" : "this.c         = c;",
      "info" : "ExpressionStatement[6513-6532]:ExpressionStatement[6513-6532]"
    }, {
      "left" : "this.a         = a;",
      "right" : "this.a         = a;",
      "info" : "ExpressionStatement[6537-6556]:ExpressionStatement[6537-6556]"
    }, {
      "left" : "this.b         = b;",
      "right" : "this.b         = b;",
      "info" : "ExpressionStatement[6561-6580]:ExpressionStatement[6561-6580]"
    }, {
      "left" : "this.prototype = prototype;",
      "right" : "this.prototype = prototype;",
      "info" : "ExpressionStatement[6585-6612]:ExpressionStatement[6585-6612]"
    }, {
      "left" : "exp = -1.0 / getOrder();",
      "right" : "exp = -1.0 / getOrder();",
      "info" : "ExpressionStatement[6618-6642]:ExpressionStatement[6618-6642]"
    }, {
      "left" : "setSafety(0.9);",
      "right" : "setSafety(0.9);",
      "info" : "ExpressionStatement[6714-6729]:ExpressionStatement[6714-6729]"
    }, {
      "left" : "setMinReduction(0.2);",
      "right" : "setMinReduction(0.2);",
      "info" : "ExpressionStatement[6734-6755]:ExpressionStatement[6734-6755]"
    }, {
      "left" : "setMaxGrowth(10.0);",
      "right" : "setMaxGrowth(10.0);",
      "info" : "ExpressionStatement[6760-6779]:ExpressionStatement[6760-6779]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6862-6868]:Modifier[6862-6868]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[6869-6877]:Modifier[6869-6877]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6878-6881]:PrimitiveType[6878-6881]"
    }, {
      "left" : "getOrder",
      "right" : "getOrder",
      "info" : "SimpleName[6882-6890]:SimpleName[6882-6890]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6980-6986]:Modifier[6980-6986]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6987-6993]:PrimitiveType[6987-6993]"
    }, {
      "left" : "getSafety",
      "right" : "getSafety",
      "info" : "SimpleName[6994-7003]:SimpleName[6994-7003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7006-7030]:Block[7006-7030]"
    }, {
      "left" : "return safety;",
      "right" : "return safety;",
      "info" : "ReturnStatement[7012-7026]:ReturnStatement[7012-7026]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7123-7129]:Modifier[7123-7129]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7130-7134]:PrimitiveType[7130-7134]"
    }, {
      "left" : "setSafety",
      "right" : "setSafety",
      "info" : "SimpleName[7135-7144]:SimpleName[7135-7144]"
    }, {
      "left" : "final double safety",
      "right" : "final double safety",
      "info" : "SingleVariableDeclaration[7145-7164]:SingleVariableDeclaration[7145-7164]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7166-7197]:Block[7166-7197]"
    }, {
      "left" : "this.safety = safety;",
      "right" : "this.safety = safety;",
      "info" : "ExpressionStatement[7172-7193]:ExpressionStatement[7172-7193]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7236-7242]:Modifier[7236-7242]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7243-7247]:PrimitiveType[7243-7247]"
    }, {
      "left" : "integrate",
      "right" : "integrate",
      "info" : "SimpleName[7248-7257]:SimpleName[7248-7257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7382-12074]:Block[7382-12326]"
    }, {
      "left" : "sanityChecks(equations, t);",
      "right" : "sanityChecks(equations, t);",
      "info" : "ExpressionStatement[7389-7416]:ExpressionStatement[7389-7416]"
    }, {
      "left" : "setEquations(equations);",
      "right" : "setEquations(equations);",
      "info" : "ExpressionStatement[7421-7445]:ExpressionStatement[7421-7445]"
    }, {
      "left" : "final boolean forward = t > equations.getTime();",
      "right" : "final boolean forward = t > equations.getTime();",
      "info" : "VariableDeclarationStatement[7450-7498]:VariableDeclarationStatement[7450-7498]"
    }, {
      "left" : "final double[] y0  = equations.getCompleteState();",
      "right" : "final double[] y0  = equations.getCompleteState();",
      "info" : "VariableDeclarationStatement[7547-7597]:VariableDeclarationStatement[7547-7597]"
    }, {
      "left" : "final double[] y = y0.clone();",
      "right" : "final double[] y = y0.clone();",
      "info" : "VariableDeclarationStatement[7602-7632]:VariableDeclarationStatement[7602-7632]"
    }, {
      "left" : "final int stages = c.length + 1;",
      "right" : "final int stages = c.length + 1;",
      "info" : "VariableDeclarationStatement[7637-7669]:VariableDeclarationStatement[7637-7669]"
    }, {
      "left" : "final double[][] yDotK = new double[stages][y.length];",
      "right" : "final double[][] yDotK = new double[stages][y.length];",
      "info" : "VariableDeclarationStatement[7674-7728]:VariableDeclarationStatement[7674-7728]"
    }, {
      "left" : "final double[] yTmp    = y0.clone();",
      "right" : "final double[] yTmp    = y0.clone();",
      "info" : "VariableDeclarationStatement[7733-7769]:VariableDeclarationStatement[7733-7769]"
    }, {
      "left" : "final double[] yDotTmp = new double[y.length];",
      "right" : "final double[] yDotTmp = new double[y.length];",
      "info" : "VariableDeclarationStatement[7774-7820]:VariableDeclarationStatement[7774-7820]"
    }, {
      "left" : "final RungeKuttaStepInterpolator interpolator = (RungeKuttaStepInterpolator) prototype.copy();",
      "right" : "final RungeKuttaStepInterpolator interpolator = (RungeKuttaStepInterpolator) prototype.copy();",
      "info" : "VariableDeclarationStatement[7886-7980]:VariableDeclarationStatement[7886-7980]"
    }, {
      "left" : "interpolator.reinitialize(this, yTmp, yDotK, forward,\n                              equations.getPrimaryMapper(), equations.getSecondaryMappers());",
      "right" : "interpolator.reinitialize(this, yTmp, yDotK, forward,\n                              equations.getPrimaryMapper(), equations.getSecondaryMappers());",
      "info" : "ExpressionStatement[7985-8132]:ExpressionStatement[7985-8132]"
    }, {
      "left" : "interpolator.storeTime(equations.getTime());",
      "right" : "interpolator.storeTime(equations.getTime());",
      "info" : "ExpressionStatement[8137-8181]:ExpressionStatement[8137-8181]"
    }, {
      "left" : "stepStart         = equations.getTime();",
      "right" : "stepStart         = equations.getTime();",
      "info" : "ExpressionStatement[8229-8269]:ExpressionStatement[8229-8269]"
    }, {
      "left" : "double  hNew      = 0;",
      "right" : "double  hNew      = 0;",
      "info" : "VariableDeclarationStatement[8274-8296]:VariableDeclarationStatement[8274-8296]"
    }, {
      "left" : "boolean firstTime = true;",
      "right" : "boolean firstTime = true;",
      "info" : "VariableDeclarationStatement[8301-8326]:VariableDeclarationStatement[8301-8326]"
    }, {
      "left" : "initIntegration(equations.getTime(), y0, t);",
      "right" : "initIntegration(equations.getTime(), y0, t);",
      "info" : "ExpressionStatement[8331-8375]:ExpressionStatement[8331-8375]"
    }, {
      "left" : "isLastStep = false;",
      "right" : "isLastStep = false;",
      "info" : "ExpressionStatement[8410-8429]:ExpressionStatement[8410-8429]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[8434-11948]:DoStatement[8434-12200]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8437-11927]:Block[8437-12179]"
    }, {
      "left" : "interpolator.shift();",
      "right" : "interpolator.shift();",
      "info" : "ExpressionStatement[8446-8467]:ExpressionStatement[8446-8467]"
    }, {
      "left" : "double error = 10;",
      "right" : "double error = 10;",
      "info" : "VariableDeclarationStatement[8558-8576]:VariableDeclarationStatement[8558-8576]"
    }, {
      "left" : "while (error >= 1.0)",
      "right" : "while (error >= 1.0)",
      "info" : "WhileStatement[8583-10601]:WhileStatement[8583-10853]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8604-10601]:Block[8604-10853]"
    }, {
      "left" : "if (firstTime || !fsal)",
      "right" : "if (firstTime || !fsal)",
      "info" : "IfStatement[8615-8729]:IfStatement[8615-8729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8639-8729]:Block[8639-8729]"
    }, {
      "left" : "computeDerivatives(stepStart, y, yDotK[0]);",
      "right" : "computeDerivatives(stepStart, y, yDotK[0]);",
      "info" : "ExpressionStatement[8676-8719]:ExpressionStatement[8676-8719]"
    }, {
      "left" : "if (firstTime)",
      "right" : "if (firstTime)",
      "info" : "IfStatement[8739-9403]:IfStatement[8739-9403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8754-9403]:Block[8754-9403]"
    }, {
      "left" : "final double[] scale = new double[mainSetDimension];",
      "right" : "final double[] scale = new double[mainSetDimension];",
      "info" : "VariableDeclarationStatement[8766-8818]:VariableDeclarationStatement[8766-8818]"
    }, {
      "left" : "if (vecAbsoluteTolerance == null)",
      "right" : "if (vecAbsoluteTolerance == null)",
      "info" : "IfStatement[8829-9231]:IfStatement[8829-9231]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8863-9042]:Block[8863-9042]"
    }, {
      "left" : "for (int i = 0; i < scale.length; ++i)",
      "right" : "for (int i = 0; i < scale.length; ++i)",
      "info" : "ForStatement[8879-9030]:ForStatement[8879-9030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8918-9030]:Block[8918-9030]"
    }, {
      "left" : "scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]);",
      "right" : "scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]);",
      "info" : "ExpressionStatement[8936-9014]:ExpressionStatement[8936-9014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9048-9231]:Block[9048-9231]"
    }, {
      "left" : "for (int i = 0; i < scale.length; ++i)",
      "right" : "for (int i = 0; i < scale.length; ++i)",
      "info" : "ForStatement[9064-9219]:ForStatement[9064-9219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9103-9219]:Block[9103-9219]"
    }, {
      "left" : "scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]);",
      "right" : "scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * FastMath.abs(y[i]);",
      "info" : "ExpressionStatement[9121-9203]:ExpressionStatement[9121-9203]"
    }, {
      "left" : "hNew = initializeStep(forward, getOrder(), scale,\n                                stepStart, y, yDotK[0], yTmp, yDotK[1]);",
      "right" : "hNew = initializeStep(forward, getOrder(), scale,\n                                stepStart, y, yDotK[0], yTmp, yDotK[1]);",
      "info" : "ExpressionStatement[9242-9364]:ExpressionStatement[9242-9364]"
    }, {
      "left" : "firstTime = false;",
      "right" : "firstTime = false;",
      "info" : "ExpressionStatement[9375-9393]:ExpressionStatement[9375-9393]"
    }, {
      "left" : "stepSize = hNew;",
      "right" : "stepSize = hNew;",
      "info" : "ExpressionStatement[9413-9429]:ExpressionStatement[9413-9429]"
    }, {
      "left" : "for (int k = 1; k < stages; ++k)",
      "right" : "for (int k = 1; k < stages; ++k)",
      "info" : "ForStatement[9462-9843]:ForStatement[9714-10095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9495-9843]:Block[9747-10095]"
    }, {
      "left" : "for (int j = 0; j < y0.length; ++j)",
      "right" : "for (int j = 0; j < y0.length; ++j)",
      "info" : "ForStatement[9508-9754]:ForStatement[9760-10006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9544-9754]:Block[9796-10006]"
    }, {
      "left" : "double sum = a[k-1][0] * yDotK[0][j];",
      "right" : "double sum = a[k-1][0] * yDotK[0][j];",
      "info" : "VariableDeclarationStatement[9558-9595]:VariableDeclarationStatement[9810-9847]"
    }, {
      "left" : "for (int l = 1; l < k; ++l)",
      "right" : "for (int l = 1; l < k; ++l)",
      "info" : "ForStatement[9608-9697]:ForStatement[9860-9949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9636-9697]:Block[9888-9949]"
    }, {
      "left" : "sum += a[k-1][l] * yDotK[l][j];",
      "right" : "sum += a[k-1][l] * yDotK[l][j];",
      "info" : "ExpressionStatement[9652-9683]:ExpressionStatement[9904-9935]"
    }, {
      "left" : "yTmp[j] = y[j] + stepSize * sum;",
      "right" : "yTmp[j] = y[j] + stepSize * sum;",
      "info" : "ExpressionStatement[9710-9742]:ExpressionStatement[9962-9994]"
    }, {
      "left" : "computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);",
      "right" : "computeDerivatives(stepStart + c[k-1] * stepSize, yTmp, yDotK[k]);",
      "info" : "ExpressionStatement[9766-9832]:ExpressionStatement[10018-10084]"
    }, {
      "left" : "for (int j = 0; j < y0.length; ++j)",
      "right" : "for (int j = 0; j < y0.length; ++j)",
      "info" : "ForStatement[9906-10141]:ForStatement[10158-10393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9942-10141]:Block[10194-10393]"
    }, {
      "left" : "double sum    = b[0] * yDotK[0][j];",
      "right" : "double sum    = b[0] * yDotK[0][j];",
      "info" : "VariableDeclarationStatement[9954-9989]:VariableDeclarationStatement[10206-10241]"
    }, {
      "left" : "for (int l = 1; l < stages; ++l)",
      "right" : "for (int l = 1; l < stages; ++l)",
      "info" : "ForStatement[10000-10088]:ForStatement[10252-10340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10033-10088]:Block[10285-10340]"
    }, {
      "left" : "sum    += b[l] * yDotK[l][j];",
      "right" : "sum    += b[l] * yDotK[l][j];",
      "info" : "ExpressionStatement[10047-10076]:ExpressionStatement[10299-10328]"
    }, {
      "left" : "yTmp[j] = y[j] + stepSize * sum;",
      "right" : "yTmp[j] = y[j] + stepSize * sum;",
      "info" : "ExpressionStatement[10099-10131]:ExpressionStatement[10351-10383]"
    }, {
      "left" : "error = estimateError(yDotK, y, yTmp, stepSize);",
      "right" : "error = estimateError(yDotK, y, yTmp, stepSize);",
      "info" : "ExpressionStatement[10204-10252]:ExpressionStatement[10456-10504]"
    }, {
      "left" : "if (error >= 1.0)",
      "right" : "if (error >= 1.0)",
      "info" : "IfStatement[10261-10592]:IfStatement[10513-10844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10279-10592]:Block[10531-10844]"
    }, {
      "left" : "final double factor =\n              FastMath.min(maxGrowth,\n                           FastMath.max(minReduction, safety * FastMath.pow(error, exp)));",
      "right" : "final double factor =\n              FastMath.min(maxGrowth,\n                           FastMath.max(minReduction, safety * FastMath.pow(error, exp)));",
      "info" : "VariableDeclarationStatement[10368-10518]:VariableDeclarationStatement[10620-10770]"
    }, {
      "left" : "hNew = filterStep(stepSize * factor, forward, false);",
      "right" : "hNew = filterStep(stepSize * factor, forward, false);",
      "info" : "ExpressionStatement[10529-10582]:ExpressionStatement[10781-10834]"
    }, {
      "left" : "interpolator.storeTime(stepStart + stepSize);",
      "right" : "interpolator.storeTime(stepStart + stepSize);",
      "info" : "ExpressionStatement[10697-10742]:ExpressionStatement[10949-10994]"
    }, {
      "left" : "System.arraycopy(yTmp, 0, y, 0, y0.length);",
      "right" : "System.arraycopy(yTmp, 0, y, 0, y0.length);",
      "info" : "ExpressionStatement[10749-10792]:ExpressionStatement[11001-11044]"
    }, {
      "left" : "System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length);",
      "right" : "System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length);",
      "info" : "ExpressionStatement[10799-10861]:ExpressionStatement[11051-11113]"
    }, {
      "left" : "stepStart = acceptStep(interpolator, y, yDotTmp, t);",
      "right" : "stepStart = acceptStep(interpolator, y, yDotTmp, t);",
      "info" : "ExpressionStatement[10868-10920]:ExpressionStatement[11120-11172]"
    }, {
      "left" : "System.arraycopy(y, 0, yTmp, 0, y.length);",
      "right" : "System.arraycopy(y, 0, yTmp, 0, y.length);",
      "info" : "ExpressionStatement[10927-10969]:ExpressionStatement[11179-11221]"
    }, {
      "left" : "if (!isLastStep)",
      "right" : "if (!isLastStep)",
      "info" : "IfStatement[10977-11920]:IfStatement[11229-12172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10994-11920]:Block[11246-12172]"
    }, {
      "left" : "interpolator.storeTime(stepStart);",
      "right" : "interpolator.storeTime(stepStart);",
      "info" : "ExpressionStatement[11038-11072]:ExpressionStatement[11290-11324]"
    }, {
      "left" : "if (fsal)",
      "right" : "if (fsal)",
      "info" : "IfStatement[11084-11235]:IfStatement[11336-11487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11094-11235]:Block[11346-11487]"
    }, {
      "left" : "System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0.length);",
      "right" : "System.arraycopy(yDotTmp, 0, yDotK[0], 0, y0.length);",
      "info" : "ExpressionStatement[11170-11223]:ExpressionStatement[11422-11475]"
    }, {
      "left" : "final double factor =\n              FastMath.min(maxGrowth, FastMath.max(minReduction, safety * FastMath.pow(error, exp)));",
      "right" : "final double factor =\n              FastMath.min(maxGrowth, FastMath.max(minReduction, safety * FastMath.pow(error, exp)));",
      "info" : "VariableDeclarationStatement[11291-11414]:VariableDeclarationStatement[11543-11666]"
    }, {
      "left" : "final double  scaledH    = stepSize * factor;",
      "right" : "final double  scaledH    = stepSize * factor;",
      "info" : "VariableDeclarationStatement[11425-11470]:VariableDeclarationStatement[11677-11722]"
    }, {
      "left" : "final double  nextT      = stepStart + scaledH;",
      "right" : "final double  nextT      = stepStart + scaledH;",
      "info" : "VariableDeclarationStatement[11481-11528]:VariableDeclarationStatement[11733-11780]"
    }, {
      "left" : "final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);",
      "right" : "final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);",
      "info" : "VariableDeclarationStatement[11539-11604]:VariableDeclarationStatement[11791-11856]"
    }, {
      "left" : "hNew = filterStep(scaledH, forward, nextIsLast);",
      "right" : "hNew = filterStep(scaledH, forward, nextIsLast);",
      "info" : "ExpressionStatement[11615-11663]:ExpressionStatement[11867-11915]"
    }, {
      "left" : "final double  filteredNextT      = stepStart + hNew;",
      "right" : "final double  filteredNextT      = stepStart + hNew;",
      "info" : "VariableDeclarationStatement[11675-11727]:VariableDeclarationStatement[11927-11979]"
    }, {
      "left" : "final boolean filteredNextIsLast = forward ? (filteredNextT >= t) : (filteredNextT <= t);",
      "right" : "final boolean filteredNextIsLast = forward ? (filteredNextT >= t) : (filteredNextT <= t);",
      "info" : "VariableDeclarationStatement[11738-11827]:VariableDeclarationStatement[11990-12079]"
    }, {
      "left" : "if (filteredNextIsLast)",
      "right" : "if (filteredNextIsLast)",
      "info" : "IfStatement[11838-11911]:IfStatement[12090-12163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11862-11911]:Block[12114-12163]"
    }, {
      "left" : "hNew = t - stepStart;",
      "right" : "hNew = t - stepStart;",
      "info" : "ExpressionStatement[11878-11899]:ExpressionStatement[12130-12151]"
    }, {
      "left" : "equations.setTime(stepStart);",
      "right" : "equations.setTime(stepStart);",
      "info" : "ExpressionStatement[11978-12007]:ExpressionStatement[12230-12259]"
    }, {
      "left" : "equations.setCompleteState(y);",
      "right" : "equations.setCompleteState(y);",
      "info" : "ExpressionStatement[12012-12042]:ExpressionStatement[12264-12294]"
    }, {
      "left" : "resetInternalState();",
      "right" : "resetInternalState();",
      "info" : "ExpressionStatement[12048-12069]:ExpressionStatement[12300-12321]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12183-12189]:Modifier[12435-12441]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[12190-12196]:PrimitiveType[12442-12448]"
    }, {
      "left" : "getMinReduction",
      "right" : "getMinReduction",
      "info" : "SimpleName[12197-12212]:SimpleName[12449-12464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12215-12245]:Block[12467-12497]"
    }, {
      "left" : "return minReduction;",
      "right" : "return minReduction;",
      "info" : "ReturnStatement[12221-12241]:ReturnStatement[12473-12493]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12366-12372]:Modifier[12618-12624]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12373-12377]:PrimitiveType[12625-12629]"
    }, {
      "left" : "setMinReduction",
      "right" : "setMinReduction",
      "info" : "SimpleName[12378-12393]:SimpleName[12630-12645]"
    }, {
      "left" : "final double minReduction",
      "right" : "final double minReduction",
      "info" : "SingleVariableDeclaration[12394-12419]:SingleVariableDeclaration[12646-12671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12421-12464]:Block[12673-12716]"
    }, {
      "left" : "this.minReduction = minReduction;",
      "right" : "this.minReduction = minReduction;",
      "info" : "ExpressionStatement[12427-12460]:ExpressionStatement[12679-12712]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12567-12573]:Modifier[12819-12825]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[12574-12580]:PrimitiveType[12826-12832]"
    }, {
      "left" : "getMaxGrowth",
      "right" : "getMaxGrowth",
      "info" : "SimpleName[12581-12593]:SimpleName[12833-12845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12596-12623]:Block[12848-12875]"
    }, {
      "left" : "return maxGrowth;",
      "right" : "return maxGrowth;",
      "info" : "ReturnStatement[12602-12619]:ReturnStatement[12854-12871]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12735-12741]:Modifier[12987-12993]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12742-12746]:PrimitiveType[12994-12998]"
    }, {
      "left" : "setMaxGrowth",
      "right" : "setMaxGrowth",
      "info" : "SimpleName[12747-12759]:SimpleName[12999-13011]"
    }, {
      "left" : "final double maxGrowth",
      "right" : "final double maxGrowth",
      "info" : "SingleVariableDeclaration[12760-12782]:SingleVariableDeclaration[13012-13034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12784-12821]:Block[13036-13073]"
    }, {
      "left" : "this.maxGrowth = maxGrowth;",
      "right" : "this.maxGrowth = maxGrowth;",
      "info" : "ExpressionStatement[12790-12817]:ExpressionStatement[13042-13069]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[13141-13150]:Modifier[13393-13402]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[13151-13159]:Modifier[13403-13411]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[13160-13166]:PrimitiveType[13412-13418]"
    }, {
      "left" : "estimateError",
      "right" : "estimateError",
      "info" : "SimpleName[13167-13180]:SimpleName[13419-13432]"
    }, {
      "left" : "double[][] yDotK",
      "right" : "double[][] yDotK",
      "info" : "SingleVariableDeclaration[13181-13197]:SingleVariableDeclaration[13433-13449]"
    }, {
      "left" : "double[] y0",
      "right" : "double[] y0",
      "info" : "SingleVariableDeclaration[13241-13252]:SingleVariableDeclaration[13493-13504]"
    }, {
      "left" : "double[] y1",
      "right" : "double[] y1",
      "info" : "SingleVariableDeclaration[13254-13265]:SingleVariableDeclaration[13506-13517]"
    }, {
      "left" : "double h",
      "right" : "double h",
      "info" : "SingleVariableDeclaration[13309-13317]:SingleVariableDeclaration[13561-13569]"
    } ]
  },
  "interFileMappings" : { }
}