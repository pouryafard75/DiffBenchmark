{
  "matchedElements" : [
 {
    "left" : "class : Base64",
    "right" : "class : Base64",
    "info" : "TypeDeclaration[1073-40639]:TypeDeclaration[1073-40635]"
  }, {
    "left" : "DEFAULT_BUFFER_RESIZE_FACTOR",
    "right" : "DEFAULT_BUFFER_RESIZE_FACTOR",
    "info" : "FieldDeclaration[2206-2264]:FieldDeclaration[2206-2264]"
  }, {
    "left" : "DEFAULT_BUFFER_SIZE",
    "right" : "DEFAULT_BUFFER_SIZE",
    "info" : "FieldDeclaration[2270-2322]:FieldDeclaration[2270-2322]"
  }, {
    "left" : "CHUNK_SIZE",
    "right" : "CHUNK_SIZE",
    "info" : "FieldDeclaration[2328-2680]:FieldDeclaration[2328-2680]"
  }, {
    "left" : "CHUNK_SEPARATOR",
    "right" : "CHUNK_SEPARATOR",
    "info" : "FieldDeclaration[2686-3011]:FieldDeclaration[2686-3011]"
  }, {
    "left" : "STANDARD_ENCODE_TABLE",
    "right" : "STANDARD_ENCODE_TABLE",
    "info" : "FieldDeclaration[3017-3799]:FieldDeclaration[3017-3799]"
  }, {
    "left" : "URL_SAFE_ENCODE_TABLE",
    "right" : "URL_SAFE_ENCODE_TABLE",
    "info" : "FieldDeclaration[3805-4489]:FieldDeclaration[3805-4489]"
  }, {
    "left" : "PAD",
    "right" : "PAD",
    "info" : "FieldDeclaration[4495-4579]:FieldDeclaration[4495-4579]"
  }, {
    "left" : "DECODE_TABLE",
    "right" : "DECODE_TABLE",
    "info" : "FieldDeclaration[4585-5922]:FieldDeclaration[4585-5922]"
  }, {
    "left" : "MASK_6BITS",
    "right" : "MASK_6BITS",
    "info" : "FieldDeclaration[5928-6030]:FieldDeclaration[5928-6030]"
  }, {
    "left" : "MASK_8BITS",
    "right" : "MASK_8BITS",
    "info" : "FieldDeclaration[6036-6149]:FieldDeclaration[6036-6149]"
  }, {
    "left" : "encodeTable",
    "right" : "encodeTable",
    "info" : "FieldDeclaration[6419-6734]:FieldDeclaration[6419-6734]"
  }, {
    "left" : "lineLength",
    "right" : "lineLength",
    "info" : "FieldDeclaration[6740-6921]:FieldDeclaration[6740-6921]"
  }, {
    "left" : "lineSeparator",
    "right" : "lineSeparator",
    "info" : "FieldDeclaration[6927-7067]:FieldDeclaration[6927-7067]"
  }, {
    "left" : "decodeSize",
    "right" : "decodeSize",
    "info" : "FieldDeclaration[7073-7290]:FieldDeclaration[7073-7290]"
  }, {
    "left" : "encodeSize",
    "right" : "encodeSize",
    "info" : "FieldDeclaration[7296-7513]:FieldDeclaration[7296-7513]"
  }, {
    "left" : "buffer",
    "right" : "buffer",
    "info" : "FieldDeclaration[7519-7586]:FieldDeclaration[7519-7586]"
  }, {
    "left" : "pos",
    "right" : "pos",
    "info" : "FieldDeclaration[7592-7694]:FieldDeclaration[7592-7694]"
  }, {
    "left" : "readPos",
    "right" : "readPos",
    "info" : "FieldDeclaration[7700-7805]:FieldDeclaration[7700-7805]"
  }, {
    "left" : "currentLinePos",
    "right" : "currentLinePos",
    "info" : "FieldDeclaration[7811-8059]:FieldDeclaration[7811-8059]"
  }, {
    "left" : "modulus",
    "right" : "modulus",
    "info" : "FieldDeclaration[8065-8246]:FieldDeclaration[8065-8246]"
  }, {
    "left" : "eof",
    "right" : "eof",
    "info" : "FieldDeclaration[8252-8441]:FieldDeclaration[8252-8441]"
  }, {
    "left" : "x",
    "right" : "x",
    "info" : "FieldDeclaration[8447-8650]:FieldDeclaration[8447-8650]"
  }, {
    "left" : "public Base64()",
    "right" : "public Base64()",
    "info" : "MethodDeclaration[8656-9018]:MethodDeclaration[8656-9014]"
  }, {
    "left" : "public Base64(urlSafe boolean)",
    "right" : "public Base64(urlSafe boolean)",
    "info" : "MethodDeclaration[9024-9644]:MethodDeclaration[9020-9640]"
  }, {
    "left" : "public Base64(lineLength int)",
    "right" : "public Base64(lineLength int)",
    "info" : "MethodDeclaration[9650-10516]:MethodDeclaration[9646-10512]"
  }, {
    "left" : "public Base64(lineLength int, lineSeparator )",
    "right" : "public Base64(lineLength int, lineSeparator )",
    "info" : "MethodDeclaration[10522-11648]:MethodDeclaration[10518-11644]"
  }, {
    "left" : "public Base64(lineLength int, lineSeparator , urlSafe boolean)",
    "right" : "public Base64(lineLength int, lineSeparator , urlSafe boolean)",
    "info" : "MethodDeclaration[11654-13886]:MethodDeclaration[11650-13882]"
  }, {
    "left" : "public isUrlSafe() : boolean",
    "right" : "public isUrlSafe() : boolean",
    "info" : "MethodDeclaration[13892-14171]:MethodDeclaration[13888-14167]"
  }, {
    "left" : "package hasData() : boolean",
    "right" : "package hasData() : boolean",
    "info" : "MethodDeclaration[14177-14410]:MethodDeclaration[14173-14406]"
  }, {
    "left" : "package avail() : int",
    "right" : "package avail() : int",
    "info" : "MethodDeclaration[14416-14642]:MethodDeclaration[14412-14638]"
  }, {
    "left" : "private resizeBuffer() : void",
    "right" : "private resizeBuffer() : void",
    "info" : "MethodDeclaration[14648-15034]:MethodDeclaration[14644-15030]"
  }, {
    "left" : "package readResults(b , bPos int, bAvail int) : int",
    "right" : "package readResults(b , bPos int, bAvail int) : int",
    "info" : "MethodDeclaration[15040-16224]:MethodDeclaration[15036-16220]"
  }, {
    "left" : "package setInitialBuffer(out , outPos int, outAvail int) : void",
    "right" : "package setInitialBuffer(out , outPos int, outAvail int) : void",
    "info" : "MethodDeclaration[16230-17058]:MethodDeclaration[16226-17054]"
  }, {
    "left" : "package encode(in , inPos int, inAvail int) : void",
    "right" : "package encode(in , inPos int, inAvail int) : void",
    "info" : "MethodDeclaration[17064-20451]:MethodDeclaration[17060-20447]"
  }, {
    "left" : "package decode(in , inPos int, inAvail int) : void",
    "right" : "package decode(in , inPos int, inAvail int) : void",
    "info" : "MethodDeclaration[20457-23370]:MethodDeclaration[20453-23366]"
  }, {
    "left" : "public isBase64(octet byte) : boolean",
    "right" : "public isBase64(octet byte) : boolean",
    "info" : "MethodDeclaration[23376-23826]:MethodDeclaration[23372-23822]"
  }, {
    "left" : "public isArrayByteBase64(arrayOctet ) : boolean",
    "right" : "public isArrayByteBase64(arrayOctet ) : boolean",
    "info" : "MethodDeclaration[23832-24502]:MethodDeclaration[23828-24498]"
  }, {
    "left" : "private containsBase64Byte(arrayOctet ) : boolean",
    "right" : "private containsBase64Byte(arrayOctet ) : boolean",
    "info" : "MethodDeclaration[24508-25042]:MethodDeclaration[24504-25038]"
  }, {
    "left" : "public encodeBase64(binaryData ) : ",
    "right" : "public encodeBase64(binaryData ) : ",
    "info" : "MethodDeclaration[25048-25412]:MethodDeclaration[25044-25408]"
  }, {
    "left" : "public encodeBase64String(binaryData ) : ",
    "right" : "public encodeBase64String(binaryData ) : ",
    "info" : "MethodDeclaration[25418-25818]:MethodDeclaration[25414-25814]"
  }, {
    "left" : "public encodeBase64URLSafe(binaryData ) : ",
    "right" : "public encodeBase64URLSafe(binaryData ) : ",
    "info" : "MethodDeclaration[25828-26322]:MethodDeclaration[25824-26318]"
  }, {
    "left" : "public encodeBase64URLSafeString(binaryData ) : ",
    "right" : "public encodeBase64URLSafeString(binaryData ) : ",
    "info" : "MethodDeclaration[26328-26827]:MethodDeclaration[26324-26823]"
  }, {
    "left" : "public encodeBase64Chunked(binaryData ) : ",
    "right" : "public encodeBase64Chunked(binaryData ) : ",
    "info" : "MethodDeclaration[26837-27213]:MethodDeclaration[26833-27209]"
  }, {
    "left" : "public decode(pObject ) : ",
    "right" : "public decode(pObject ) : ",
    "info" : "MethodDeclaration[27219-28146]:MethodDeclaration[27215-28142]"
  }, {
    "left" : "public decode(pArray ) : ",
    "right" : "public decode(pArray ) : ",
    "info" : "MethodDeclaration[28152-28506]:MethodDeclaration[28148-28502]"
  }, {
    "left" : "public decode(pArray ) : ",
    "right" : "public decode(pArray ) : ",
    "info" : "MethodDeclaration[28512-29596]:MethodDeclaration[28508-29592]"
  }, {
    "left" : "public encodeBase64(binaryData , isChunked boolean) : ",
    "right" : "public encodeBase64(binaryData , isChunked boolean) : ",
    "info" : "MethodDeclaration[29602-30272]:MethodDeclaration[29598-30268]"
  }, {
    "left" : "public encodeBase64(binaryData , isChunked boolean, urlSafe boolean) : ",
    "right" : "public encodeBase64(binaryData , isChunked boolean, urlSafe boolean) : ",
    "info" : "MethodDeclaration[30278-31137]:MethodDeclaration[30274-31133]"
  }, {
    "left" : "public encodeBase64(binaryData , isChunked boolean, urlSafe boolean, maxResultSize int) : ",
    "right" : "public encodeBase64(binaryData , isChunked boolean, urlSafe boolean, maxResultSize int) : ",
    "info" : "MethodDeclaration[31143-32604]:MethodDeclaration[31139-32600]"
  }, {
    "left" : "public decodeBase64(base64String ) : ",
    "right" : "public decodeBase64(base64String ) : ",
    "info" : "MethodDeclaration[32610-32927]:MethodDeclaration[32606-32923]"
  }, {
    "left" : "public decodeBase64(base64Data ) : ",
    "right" : "public decodeBase64(base64Data ) : ",
    "info" : "MethodDeclaration[32933-33227]:MethodDeclaration[32929-33223]"
  }, {
    "left" : "package discardWhitespace(data ) : ",
    "right" : "package discardWhitespace(data ) : ",
    "info" : "MethodDeclaration[33233-34126]:MethodDeclaration[33229-34122]"
  }, {
    "left" : "private isWhiteSpace(byteToCheck byte) : boolean",
    "right" : "private isWhiteSpace(byteToCheck byte) : boolean",
    "info" : "MethodDeclaration[34132-34607]:MethodDeclaration[34128-34603]"
  }, {
    "left" : "public encode(pObject ) : ",
    "right" : "public encode(pObject ) : ",
    "info" : "MethodDeclaration[34661-35446]:MethodDeclaration[34657-35442]"
  }, {
    "left" : "public encodeToString(pArray ) : ",
    "right" : "public encodeToString(pArray ) : ",
    "info" : "MethodDeclaration[35452-35851]:MethodDeclaration[35448-35847]"
  }, {
    "left" : "public encode(pArray ) : ",
    "right" : "public encode(pArray ) : ",
    "info" : "MethodDeclaration[35857-37039]:MethodDeclaration[35853-37035]"
  }, {
    "left" : "private getEncodeLength(pArray , chunkSize int, chunkSeparator ) : long",
    "right" : "private getEncodeLength(pArray , chunkSize int, chunkSeparator ) : long",
    "info" : "MethodDeclaration[37045-38218]:MethodDeclaration[37041-38214]"
  }, {
    "left" : "public decodeInteger(pArray ) : ",
    "right" : "public decodeInteger(pArray ) : ",
    "info" : "MethodDeclaration[38282-38652]:MethodDeclaration[38278-38648]"
  }, {
    "left" : "public encodeInteger(bigInt ) : ",
    "right" : "public encodeInteger(bigInt ) : ",
    "info" : "MethodDeclaration[38658-39239]:MethodDeclaration[38654-39235]"
  }, {
    "left" : "package toIntegerBytes(bigInt ) : ",
    "right" : "package toIntegerBytes(bigInt ) : ",
    "info" : "MethodDeclaration[39245-40382]:MethodDeclaration[39241-40378]"
  }, {
    "left" : "private reset() : void",
    "right" : "private reset() : void",
    "info" : "MethodDeclaration[40388-40636]:MethodDeclaration[40384-40632]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8974-8980]:Modifier[8974-8980]"
  }, {
    "left" : "Base64",
    "right" : "Base64",
    "info" : "SimpleName[8981-8987]:SimpleName[8981-8987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8990-9018]:Block[8990-9014]"
  }, {
    "left" : "this(false);",
    "right" : "this(0);",
    "info" : "ConstructorInvocation[9000-9012]:ConstructorInvocation[9000-9008]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9554-9560]:Modifier[9550-9556]"
  }, {
    "left" : "Base64",
    "right" : "Base64",
    "info" : "SimpleName[9561-9567]:SimpleName[9557-9563]"
  }, {
    "left" : "boolean urlSafe",
    "right" : "boolean urlSafe",
    "info" : "SingleVariableDeclaration[9568-9583]:SingleVariableDeclaration[9564-9579]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9585-9644]:Block[9581-9640]"
  }, {
    "left" : "this(CHUNK_SIZE, CHUNK_SEPARATOR, urlSafe);",
    "right" : "this(CHUNK_SIZE, CHUNK_SEPARATOR, urlSafe);",
    "info" : "ConstructorInvocation[9595-9638]:ConstructorInvocation[9591-9634]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10436-10442]:Modifier[10432-10438]"
  }, {
    "left" : "Base64",
    "right" : "Base64",
    "info" : "SimpleName[10443-10449]:SimpleName[10439-10445]"
  }, {
    "left" : "int lineLength",
    "right" : "int lineLength",
    "info" : "SingleVariableDeclaration[10450-10464]:SingleVariableDeclaration[10446-10460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10466-10516]:Block[10462-10512]"
  }, {
    "left" : "this(lineLength, CHUNK_SEPARATOR);",
    "right" : "this(lineLength, CHUNK_SEPARATOR);",
    "info" : "ConstructorInvocation[10476-10510]:ConstructorInvocation[10472-10506]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11541-11547]:Modifier[11537-11543]"
  }, {
    "left" : "Base64",
    "right" : "Base64",
    "info" : "SimpleName[11548-11554]:SimpleName[11544-11550]"
  }, {
    "left" : "int lineLength",
    "right" : "int lineLength",
    "info" : "SingleVariableDeclaration[11555-11569]:SingleVariableDeclaration[11551-11565]"
  }, {
    "left" : "byte[] lineSeparator",
    "right" : "byte[] lineSeparator",
    "info" : "SingleVariableDeclaration[11571-11591]:SingleVariableDeclaration[11567-11587]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11593-11648]:Block[11589-11644]"
  }, {
    "left" : "this(lineLength, lineSeparator, false);",
    "right" : "this(lineLength, lineSeparator, false);",
    "info" : "ConstructorInvocation[11603-11642]:ConstructorInvocation[11599-11638]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12897-12903]:Modifier[12893-12899]"
  }, {
    "left" : "Base64",
    "right" : "Base64",
    "info" : "SimpleName[12904-12910]:SimpleName[12900-12906]"
  }, {
    "left" : "int lineLength",
    "right" : "int lineLength",
    "info" : "SingleVariableDeclaration[12911-12925]:SingleVariableDeclaration[12907-12921]"
  }, {
    "left" : "byte[] lineSeparator",
    "right" : "byte[] lineSeparator",
    "info" : "SingleVariableDeclaration[12927-12947]:SingleVariableDeclaration[12923-12943]"
  }, {
    "left" : "boolean urlSafe",
    "right" : "boolean urlSafe",
    "info" : "SingleVariableDeclaration[12949-12964]:SingleVariableDeclaration[12945-12960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12966-13886]:Block[12962-13882]"
  }, {
    "left" : "if (lineSeparator == null)",
    "right" : "if (lineSeparator == null)",
    "info" : "IfStatement[12976-13143]:IfStatement[12972-13139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13003-13143]:Block[12999-13139]"
  }, {
    "left" : "lineLength = 0;",
    "right" : "lineLength = 0;",
    "info" : "ExpressionStatement[13017-13032]:ExpressionStatement[13013-13028]"
  }, {
    "left" : "lineSeparator = CHUNK_SEPARATOR;",
    "right" : "lineSeparator = CHUNK_SEPARATOR;",
    "info" : "ExpressionStatement[13074-13106]:ExpressionStatement[13070-13102]"
  }, {
    "left" : "this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;",
    "right" : "this.lineLength = lineLength > 0 ? (lineLength / 4) * 4 : 0;",
    "info" : "ExpressionStatement[13152-13212]:ExpressionStatement[13148-13208]"
  }, {
    "left" : "this.lineSeparator = new byte[lineSeparator.length];",
    "right" : "this.lineSeparator = new byte[lineSeparator.length];",
    "info" : "ExpressionStatement[13221-13273]:ExpressionStatement[13217-13269]"
  }, {
    "left" : "System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);",
    "right" : "System.arraycopy(lineSeparator, 0, this.lineSeparator, 0, lineSeparator.length);",
    "info" : "ExpressionStatement[13282-13362]:ExpressionStatement[13278-13358]"
  }, {
    "left" : "if (lineLength > 0)",
    "right" : "if (lineLength > 0)",
    "info" : "IfStatement[13371-13508]:IfStatement[13367-13504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13391-13458]:Block[13387-13454]"
  }, {
    "left" : "this.encodeSize = 4 + lineSeparator.length;",
    "right" : "this.encodeSize = 4 + lineSeparator.length;",
    "info" : "ExpressionStatement[13405-13448]:ExpressionStatement[13401-13444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13464-13508]:Block[13460-13504]"
  }, {
    "left" : "this.encodeSize = 4;",
    "right" : "this.encodeSize = 4;",
    "info" : "ExpressionStatement[13478-13498]:ExpressionStatement[13474-13494]"
  }, {
    "left" : "this.decodeSize = this.encodeSize - 1;",
    "right" : "this.decodeSize = this.encodeSize - 1;",
    "info" : "ExpressionStatement[13517-13555]:ExpressionStatement[13513-13551]"
  }, {
    "left" : "if (containsBase64Byte(lineSeparator))",
    "right" : "if (containsBase64Byte(lineSeparator))",
    "info" : "IfStatement[13564-13796]:IfStatement[13560-13792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13603-13796]:Block[13599-13792]"
  }, {
    "left" : "String sep = StringUtils.newStringUtf8(lineSeparator);",
    "right" : "String sep = StringUtils.newStringUtf8(lineSeparator);",
    "info" : "VariableDeclarationStatement[13617-13671]:VariableDeclarationStatement[13613-13667]"
  }, {
    "left" : "throw new IllegalArgumentException(\"lineSeperator must not contain base64 characters: [
\" + sep + \"]\");",
    "right" : "throw new IllegalArgumentException(\"lineSeperator must not contain base64 characters: [
\" + sep + \"]\");",
    "info" : "ThrowStatement[13684-13786]:ThrowStatement[13680-13782]"
  }, {
    "left" : "this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;",
    "right" : "this.encodeTable = urlSafe ? URL_SAFE_ENCODE_TABLE : STANDARD_ENCODE_TABLE;",
    "info" : "ExpressionStatement[13805-13880]:ExpressionStatement[13801-13876]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14079-14085]:Modifier[14075-14081]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[14086-14093]:PrimitiveType[14082-14089]"
  }, {
    "left" : "isUrlSafe",
    "right" : "isUrlSafe",
    "info" : "SimpleName[14094-14103]:SimpleName[14090-14099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14106-14171]:Block[14102-14167]"
  }, {
    "left" : "return this.encodeTable == URL_SAFE_ENCODE_TABLE;",
    "right" : "return this.encodeTable == URL_SAFE_ENCODE_TABLE;",
    "info" : "ReturnStatement[14116-14165]:ReturnStatement[14112-14161]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[14349-14356]:PrimitiveType[14345-14352]"
  }, {
    "left" : "hasData",
    "right" : "hasData",
    "info" : "SimpleName[14357-14364]:SimpleName[14353-14360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14367-14410]:Block[14363-14406]"
  }, {
    "left" : "return this.buffer != null;",
    "right" : "return this.buffer != null;",
    "info" : "ReturnStatement[14377-14404]:ReturnStatement[14373-14400]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[14572-14575]:PrimitiveType[14568-14571]"
  }, {
    "left" : "avail",
    "right" : "avail",
    "info" : "SimpleName[14576-14581]:SimpleName[14572-14577]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14584-14642]:Block[14580-14638]"
  }, {
    "left" : "return buffer != null ? pos - readPos : 0;",
    "right" : "return buffer != null ? pos - readPos : 0;",
    "info" : "ReturnStatement[14594-14636]:ReturnStatement[14590-14632]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[14679-14686]:Modifier[14675-14682]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14687-14691]:PrimitiveType[14683-14687]"
  }, {
    "left" : "resizeBuffer",
    "right" : "resizeBuffer",
    "info" : "SimpleName[14692-14704]:SimpleName[14688-14700]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14707-15034]:Block[14703-15030]"
  }, {
    "left" : "if (buffer == null)",
    "right" : "if (buffer == null)",
    "info" : "IfStatement[14717-15028]:IfStatement[14713-15024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14737-14846]:Block[14733-14842]"
  }, {
    "left" : "buffer = new byte[DEFAULT_BUFFER_SIZE];",
    "right" : "buffer = new byte[DEFAULT_BUFFER_SIZE];",
    "info" : "ExpressionStatement[14751-14790]:ExpressionStatement[14747-14786]"
  }, {
    "left" : "pos = 0;",
    "right" : "pos = 0;",
    "info" : "ExpressionStatement[14803-14811]:ExpressionStatement[14799-14807]"
  }, {
    "left" : "readPos = 0;",
    "right" : "readPos = 0;",
    "info" : "ExpressionStatement[14824-14836]:ExpressionStatement[14820-14832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14852-15028]:Block[14848-15024]"
  }, {
    "left" : "byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];",
    "right" : "byte[] b = new byte[buffer.length * DEFAULT_BUFFER_RESIZE_FACTOR];",
    "info" : "VariableDeclarationStatement[14866-14932]:VariableDeclarationStatement[14862-14928]"
  }, {
    "left" : "System.arraycopy(buffer, 0, b, 0, buffer.length);",
    "right" : "System.arraycopy(buffer, 0, b, 0, buffer.length);",
    "info" : "ExpressionStatement[14945-14994]:ExpressionStatement[14941-14990]"
  }, {
    "left" : "buffer = b;",
    "right" : "buffer = b;",
    "info" : "ExpressionStatement[15007-15018]:ExpressionStatement[15003-15014]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[15627-15630]:PrimitiveType[15623-15626]"
  }, {
    "left" : "readResults",
    "right" : "readResults",
    "info" : "SimpleName[15631-15642]:SimpleName[15627-15638]"
  }, {
    "left" : "byte[] b",
    "right" : "byte[] b",
    "info" : "SingleVariableDeclaration[15643-15651]:SingleVariableDeclaration[15639-15647]"
  }, {
    "left" : "int bPos",
    "right" : "int bPos",
    "info" : "SingleVariableDeclaration[15653-15661]:SingleVariableDeclaration[15649-15657]"
  }, {
    "left" : "int bAvail",
    "right" : "int bAvail",
    "info" : "SingleVariableDeclaration[15663-15673]:SingleVariableDeclaration[15659-15669]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15675-16224]:Block[15671-16220]"
  }, {
    "left" : "if (buffer != null)",
    "right" : "if (buffer != null)",
    "info" : "IfStatement[15685-16189]:IfStatement[15681-16185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15705-16189]:Block[15701-16185]"
  }, {
    "left" : "int len = Math.min(avail(), bAvail);",
    "right" : "int len = Math.min(avail(), bAvail);",
    "info" : "VariableDeclarationStatement[15719-15755]:VariableDeclarationStatement[15715-15751]"
  }, {
    "left" : "if (buffer != b)",
    "right" : "if (buffer != b)",
    "info" : "IfStatement[15768-16155]:IfStatement[15764-16151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15785-15988]:Block[15781-15984]"
  }, {
    "left" : "System.arraycopy(buffer, readPos, b, bPos, len);",
    "right" : "System.arraycopy(buffer, readPos, b, bPos, len);",
    "info" : "ExpressionStatement[15803-15851]:ExpressionStatement[15799-15847]"
  }, {
    "left" : "readPos += len;",
    "right" : "readPos += len;",
    "info" : "ExpressionStatement[15868-15883]:ExpressionStatement[15864-15879]"
  }, {
    "left" : "if (readPos >= pos)",
    "right" : "if (readPos >= pos)",
    "info" : "IfStatement[15900-15974]:IfStatement[15896-15970]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15920-15974]:Block[15916-15970]"
  }, {
    "left" : "buffer = null;",
    "right" : "buffer = null;",
    "info" : "ExpressionStatement[15942-15956]:ExpressionStatement[15938-15952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15994-16155]:Block[15990-16151]"
  }, {
    "left" : "buffer = null;",
    "right" : "buffer = null;",
    "info" : "ExpressionStatement[16127-16141]:ExpressionStatement[16123-16137]"
  }, {
    "left" : "return len;",
    "right" : "return len;",
    "info" : "ReturnStatement[16168-16179]:ReturnStatement[16164-16175]"
  }, {
    "left" : "return eof ? -1 : 0;",
    "right" : "return eof ? -1 : 0;",
    "info" : "ReturnStatement[16198-16218]:ReturnStatement[16194-16214]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16713-16717]:PrimitiveType[16709-16713]"
  }, {
    "left" : "setInitialBuffer",
    "right" : "setInitialBuffer",
    "info" : "SimpleName[16718-16734]:SimpleName[16714-16730]"
  }, {
    "left" : "byte[] out",
    "right" : "byte[] out",
    "info" : "SingleVariableDeclaration[16735-16745]:SingleVariableDeclaration[16731-16741]"
  }, {
    "left" : "int outPos",
    "right" : "int outPos",
    "info" : "SingleVariableDeclaration[16747-16757]:SingleVariableDeclaration[16743-16753]"
  }, {
    "left" : "int outAvail",
    "right" : "int outAvail",
    "info" : "SingleVariableDeclaration[16759-16771]:SingleVariableDeclaration[16755-16767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16773-17058]:Block[16769-17054]"
  }, {
    "left" : "if (out != null && out.length == outAvail)",
    "right" : "if (out != null && out.length == outAvail)",
    "info" : "IfStatement[16916-17052]:IfStatement[16912-17048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16959-17052]:Block[16955-17048]"
  }, {
    "left" : "buffer = out;",
    "right" : "buffer = out;",
    "info" : "ExpressionStatement[16973-16986]:ExpressionStatement[16969-16982]"
  }, {
    "left" : "pos = outPos;",
    "right" : "pos = outPos;",
    "info" : "ExpressionStatement[16999-17012]:ExpressionStatement[16995-17008]"
  }, {
    "left" : "readPos = outPos;",
    "right" : "readPos = outPos;",
    "info" : "ExpressionStatement[17025-17042]:ExpressionStatement[17021-17038]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17848-17852]:PrimitiveType[17844-17848]"
  }, {
    "left" : "encode",
    "right" : "encode",
    "info" : "SimpleName[17853-17859]:SimpleName[17849-17855]"
  }, {
    "left" : "byte[] in",
    "right" : "byte[] in",
    "info" : "SingleVariableDeclaration[17860-17869]:SingleVariableDeclaration[17856-17865]"
  }, {
    "left" : "int inPos",
    "right" : "int inPos",
    "info" : "SingleVariableDeclaration[17871-17880]:SingleVariableDeclaration[17867-17876]"
  }, {
    "left" : "int inAvail",
    "right" : "int inAvail",
    "info" : "SingleVariableDeclaration[17882-17893]:SingleVariableDeclaration[17878-17889]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17895-20451]:Block[17891-20447]"
  }, {
    "left" : "if (eof)",
    "right" : "if (eof)",
    "info" : "IfStatement[17905-17945]:IfStatement[17901-17941]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17914-17945]:Block[17910-17941]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[17928-17935]:ReturnStatement[17924-17931]"
  }, {
    "left" : "if (inAvail < 0)",
    "right" : "if (inAvail < 0)",
    "info" : "IfStatement[18056-20445]:IfStatement[18052-20441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18073-19381]:Block[18069-19377]"
  }, {
    "left" : "eof = true;",
    "right" : "eof = true;",
    "info" : "ExpressionStatement[18087-18098]:ExpressionStatement[18083-18094]"
  }, {
    "left" : "if (buffer == null || buffer.length - pos < encodeSize)",
    "right" : "if (buffer == null || buffer.length - pos < encodeSize)",
    "info" : "IfStatement[18111-18214]:IfStatement[18107-18210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18167-18214]:Block[18163-18210]"
  }, {
    "left" : "resizeBuffer();",
    "right" : "resizeBuffer();",
    "info" : "ExpressionStatement[18185-18200]:ExpressionStatement[18181-18196]"
  }, {
    "left" : "switch (modulus) {\n                case 1 :\n                    buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];\n                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];\n                    // URL-SAFE skips the padding to further reduce size.\n                    if (encodeTable == STANDARD_ENCODE_TABLE) {\n                        buffer[pos++] = PAD;\n                        buffer[pos++] = PAD;\n                    }\n                    break;\n\n                case 2 :\n                    buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];\n                    buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];\n                    buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];\n                    // URL-SAFE skips the padding to further reduce size.\n                    if (encodeTable == STANDARD_ENCODE_TABLE) {\n                        buffer[pos++] = PAD;\n                    }\n                    break;\n            }",
    "right" : "switch (modulus) {\n                case 1 :\n                    buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];\n                    buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];\n                    // URL-SAFE skips the padding to further reduce size.\n                    if (encodeTable == STANDARD_ENCODE_TABLE) {\n                        buffer[pos++] = PAD;\n                        buffer[pos++] = PAD;\n                    }\n                    break;\n\n                case 2 :\n                    buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];\n                    buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];\n                    buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];\n                    // URL-SAFE skips the padding to further reduce size.\n                    if (encodeTable == STANDARD_ENCODE_TABLE) {\n                        buffer[pos++] = PAD;\n                    }\n                    break;\n            }",
    "info" : "SwitchStatement[18227-19180]:SwitchStatement[18223-19176]"
  }, {
    "left" : "case 1 :",
    "right" : "case 1 :",
    "info" : "SwitchCase[18262-18270]:SwitchCase[18258-18266]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x >> 2) & MASK_6BITS];",
    "info" : "ExpressionStatement[18291-18342]:ExpressionStatement[18287-18338]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x << 4) & MASK_6BITS];",
    "info" : "ExpressionStatement[18363-18414]:ExpressionStatement[18359-18410]"
  }, {
    "left" : "if (encodeTable == STANDARD_ENCODE_TABLE)",
    "right" : "if (encodeTable == STANDARD_ENCODE_TABLE)",
    "info" : "IfStatement[18509-18664]:IfStatement[18505-18660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18551-18664]:Block[18547-18660]"
  }, {
    "left" : "buffer[pos++] = PAD;",
    "right" : "buffer[pos++] = PAD;",
    "info" : "ExpressionStatement[18577-18597]:ExpressionStatement[18573-18593]"
  }, {
    "left" : "buffer[pos++] = PAD;",
    "right" : "buffer[pos++] = PAD;",
    "info" : "ExpressionStatement[18622-18642]:ExpressionStatement[18618-18638]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[18685-18691]:BreakStatement[18681-18687]"
  }, {
    "left" : "case 2 :",
    "right" : "case 2 :",
    "info" : "SwitchCase[18709-18717]:SwitchCase[18705-18713]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];",
    "info" : "ExpressionStatement[18738-18790]:ExpressionStatement[18734-18786]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x >> 4) & MASK_6BITS];",
    "info" : "ExpressionStatement[18811-18862]:ExpressionStatement[18807-18858]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x << 2) & MASK_6BITS];",
    "info" : "ExpressionStatement[18883-18934]:ExpressionStatement[18879-18930]"
  }, {
    "left" : "if (encodeTable == STANDARD_ENCODE_TABLE)",
    "right" : "if (encodeTable == STANDARD_ENCODE_TABLE)",
    "info" : "IfStatement[19029-19139]:IfStatement[19025-19135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19071-19139]:Block[19067-19135]"
  }, {
    "left" : "buffer[pos++] = PAD;",
    "right" : "buffer[pos++] = PAD;",
    "info" : "ExpressionStatement[19097-19117]:ExpressionStatement[19093-19113]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[19160-19166]:BreakStatement[19156-19162]"
  }, {
    "left" : "if (lineLength > 0 && pos > 0)",
    "right" : "if (lineLength > 0 && pos > 0)",
    "info" : "IfStatement[19193-19371]:IfStatement[19189-19367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19224-19371]:Block[19220-19367]"
  }, {
    "left" : "System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);",
    "right" : "System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);",
    "info" : "ExpressionStatement[19242-19312]:ExpressionStatement[19238-19308]"
  }, {
    "left" : "pos += lineSeparator.length;",
    "right" : "pos += lineSeparator.length;",
    "info" : "ExpressionStatement[19329-19357]:ExpressionStatement[19325-19353]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19387-20445]:Block[19383-20441]"
  }, {
    "left" : "for (int i = 0; i < inAvail; i++)",
    "right" : "for (int i = 0; i < inAvail; i++)",
    "info" : "ForStatement[19401-20435]:ForStatement[19397-20431]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19435-20435]:Block[19431-20431]"
  }, {
    "left" : "if (buffer == null || buffer.length - pos < encodeSize)",
    "right" : "if (buffer == null || buffer.length - pos < encodeSize)",
    "info" : "IfStatement[19453-19564]:IfStatement[19449-19560]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19509-19564]:Block[19505-19560]"
  }, {
    "left" : "resizeBuffer();",
    "right" : "resizeBuffer();",
    "info" : "ExpressionStatement[19531-19546]:ExpressionStatement[19527-19542]"
  }, {
    "left" : "modulus = (++modulus) % 3;",
    "right" : "modulus = (++modulus) % 3;",
    "info" : "ExpressionStatement[19581-19607]:ExpressionStatement[19577-19603]"
  }, {
    "left" : "int b = in[inPos++];",
    "right" : "int b = in[inPos++];",
    "info" : "VariableDeclarationStatement[19624-19644]:VariableDeclarationStatement[19620-19640]"
  }, {
    "left" : "if (b < 0)",
    "right" : "if (b < 0)",
    "info" : "IfStatement[19661-19721]:IfStatement[19657-19717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19672-19721]:Block[19668-19717]"
  }, {
    "left" : "b += 256;",
    "right" : "b += 256;",
    "info" : "ExpressionStatement[19694-19703]:ExpressionStatement[19690-19699]"
  }, {
    "left" : "x = (x << 8) + b;",
    "right" : "x = (x << 8) + b;",
    "info" : "ExpressionStatement[19738-19755]:ExpressionStatement[19734-19751]"
  }, {
    "left" : "if (0 == modulus)",
    "right" : "if (0 == modulus)",
    "info" : "IfStatement[19772-20421]:IfStatement[19768-20417]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19790-20421]:Block[19786-20417]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];",
    "info" : "ExpressionStatement[19812-19864]:ExpressionStatement[19808-19860]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];",
    "info" : "ExpressionStatement[19885-19937]:ExpressionStatement[19881-19933]"
  }, {
    "left" : "buffer[pos++] = encodeTable[(x >> 6) & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[(x >> 6) & MASK_6BITS];",
    "info" : "ExpressionStatement[19958-20009]:ExpressionStatement[19954-20005]"
  }, {
    "left" : "buffer[pos++] = encodeTable[x & MASK_6BITS];",
    "right" : "buffer[pos++] = encodeTable[x & MASK_6BITS];",
    "info" : "ExpressionStatement[20030-20074]:ExpressionStatement[20026-20070]"
  }, {
    "left" : "currentLinePos += 4;",
    "right" : "currentLinePos += 4;",
    "info" : "ExpressionStatement[20095-20115]:ExpressionStatement[20091-20111]"
  }, {
    "left" : "if (lineLength > 0 && lineLength <= currentLinePos)",
    "right" : "if (lineLength > 0 && lineLength <= currentLinePos)",
    "info" : "IfStatement[20136-20403]:IfStatement[20132-20399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20188-20403]:Block[20184-20399]"
  }, {
    "left" : "System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);",
    "right" : "System.arraycopy(lineSeparator, 0, buffer, pos, lineSeparator.length);",
    "info" : "ExpressionStatement[20214-20284]:ExpressionStatement[20210-20280]"
  }, {
    "left" : "pos += lineSeparator.length;",
    "right" : "pos += lineSeparator.length;",
    "info" : "ExpressionStatement[20309-20337]:ExpressionStatement[20305-20333]"
  }, {
    "left" : "currentLinePos = 0;",
    "right" : "currentLinePos = 0;",
    "info" : "ExpressionStatement[20362-20381]:ExpressionStatement[20358-20377]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21596-21600]:PrimitiveType[21592-21596]"
  }, {
    "left" : "decode",
    "right" : "decode",
    "info" : "SimpleName[21601-21607]:SimpleName[21597-21603]"
  }, {
    "left" : "byte[] in",
    "right" : "byte[] in",
    "info" : "SingleVariableDeclaration[21608-21617]:SingleVariableDeclaration[21604-21613]"
  }, {
    "left" : "int inPos",
    "right" : "int inPos",
    "info" : "SingleVariableDeclaration[21619-21628]:SingleVariableDeclaration[21615-21624]"
  }, {
    "left" : "int inAvail",
    "right" : "int inAvail",
    "info" : "SingleVariableDeclaration[21630-21641]:SingleVariableDeclaration[21626-21637]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21643-23370]:Block[21639-23366]"
  }, {
    "left" : "if (eof)",
    "right" : "if (eof)",
    "info" : "IfStatement[21653-21693]:IfStatement[21649-21689]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21662-21693]:Block[21658-21689]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[21676-21683]:ReturnStatement[21672-21679]"
  }, {
    "left" : "if (inAvail < 0)",
    "right" : "if (inAvail < 0)",
    "info" : "IfStatement[21702-21754]:IfStatement[21698-21750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21719-21754]:Block[21715-21750]"
  }, {
    "left" : "eof = true;",
    "right" : "eof = true;",
    "info" : "ExpressionStatement[21733-21744]:ExpressionStatement[21729-21740]"
  }, {
    "left" : "for (int i = 0; i < inAvail; i++)",
    "right" : "for (int i = 0; i < inAvail; i++)",
    "info" : "ForStatement[21763-22679]:ForStatement[21759-22675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21797-22679]:Block[21793-22675]"
  }, {
    "left" : "if (buffer == null || buffer.length - pos < decodeSize)",
    "right" : "if (buffer == null || buffer.length - pos < decodeSize)",
    "info" : "IfStatement[21811-21914]:IfStatement[21807-21910]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21867-21914]:Block[21863-21910]"
  }, {
    "left" : "resizeBuffer();",
    "right" : "resizeBuffer();",
    "info" : "ExpressionStatement[21885-21900]:ExpressionStatement[21881-21896]"
  }, {
    "left" : "byte b = in[inPos++];",
    "right" : "byte b = in[inPos++];",
    "info" : "VariableDeclarationStatement[21927-21948]:VariableDeclarationStatement[21923-21944]"
  }, {
    "left" : "if (b == PAD)",
    "right" : "if (b == PAD)",
    "info" : "IfStatement[21961-22669]:IfStatement[21957-22665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21975-22072]:Block[21971-22068]"
  }, {
    "left" : "eof = true;",
    "right" : "eof = true;",
    "info" : "ExpressionStatement[22024-22035]:ExpressionStatement[22020-22031]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[22052-22058]:BreakStatement[22048-22054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22078-22669]:Block[22074-22665]"
  }, {
    "left" : "if (b >= 0 && b < DECODE_TABLE.length)",
    "right" : "if (b >= 0 && b < DECODE_TABLE.length)",
    "info" : "IfStatement[22096-22655]:IfStatement[22092-22651]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22135-22655]:Block[22131-22651]"
  }, {
    "left" : "int result = DECODE_TABLE[b];",
    "right" : "int result = DECODE_TABLE[b];",
    "info" : "VariableDeclarationStatement[22157-22186]:VariableDeclarationStatement[22153-22182]"
  }, {
    "left" : "if (result >= 0)",
    "right" : "if (result >= 0)",
    "info" : "IfStatement[22207-22637]:IfStatement[22203-22633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22224-22637]:Block[22220-22633]"
  }, {
    "left" : "modulus = (++modulus) % 4;",
    "right" : "modulus = (++modulus) % 4;",
    "info" : "ExpressionStatement[22250-22276]:ExpressionStatement[22246-22272]"
  }, {
    "left" : "x = (x << 6) + result;",
    "right" : "x = (x << 6) + result;",
    "info" : "ExpressionStatement[22301-22323]:ExpressionStatement[22297-22319]"
  }, {
    "left" : "if (modulus == 0)",
    "right" : "if (modulus == 0)",
    "info" : "IfStatement[22348-22615]:IfStatement[22344-22611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22366-22615]:Block[22362-22611]"
  }, {
    "left" : "buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);",
    "right" : "buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);",
    "info" : "ExpressionStatement[22396-22444]:ExpressionStatement[22392-22440]"
  }, {
    "left" : "buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);",
    "right" : "buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);",
    "info" : "ExpressionStatement[22473-22520]:ExpressionStatement[22469-22516]"
  }, {
    "left" : "buffer[pos++] = (byte) (x & MASK_8BITS);",
    "right" : "buffer[pos++] = (byte) (x & MASK_8BITS);",
    "info" : "ExpressionStatement[22549-22589]:ExpressionStatement[22545-22585]"
  }, {
    "left" : "if (eof && modulus != 0)",
    "right" : "if (eof && modulus != 0)",
    "info" : "IfStatement[22917-23364]:IfStatement[22913-23360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22942-23364]:Block[22938-23360]"
  }, {
    "left" : "x = x << 6;",
    "right" : "x = x << 6;",
    "info" : "ExpressionStatement[22956-22967]:ExpressionStatement[22952-22963]"
  }, {
    "left" : "switch (modulus) {\n                case 2 :\n                    x = x << 6;\n                    buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);\n                    break;\n                case 3 :\n                    buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);\n                    buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);\n                    break;\n            }",
    "right" : "switch (modulus) {\n                case 2 :\n                    x = x << 6;\n                    buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);\n                    break;\n                case 3 :\n                    buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);\n                    buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);\n                    break;\n            }",
    "info" : "SwitchStatement[22980-23354]:SwitchStatement[22976-23350]"
  }, {
    "left" : "case 2 :",
    "right" : "case 2 :",
    "info" : "SwitchCase[23015-23023]:SwitchCase[23011-23019]"
  }, {
    "left" : "x = x << 6;",
    "right" : "x = x << 6;",
    "info" : "ExpressionStatement[23044-23055]:ExpressionStatement[23040-23051]"
  }, {
    "left" : "buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);",
    "right" : "buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);",
    "info" : "ExpressionStatement[23076-23124]:ExpressionStatement[23072-23120]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23145-23151]:BreakStatement[23141-23147]"
  }, {
    "left" : "case 3 :",
    "right" : "case 3 :",
    "info" : "SwitchCase[23168-23176]:SwitchCase[23164-23172]"
  }, {
    "left" : "buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);",
    "right" : "buffer[pos++] = (byte) ((x >> 16) & MASK_8BITS);",
    "info" : "ExpressionStatement[23197-23245]:ExpressionStatement[23193-23241]"
  }, {
    "left" : "buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);",
    "right" : "buffer[pos++] = (byte) ((x >> 8) & MASK_8BITS);",
    "info" : "ExpressionStatement[23266-23313]:ExpressionStatement[23262-23309]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[23334-23340]:BreakStatement[23330-23336]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23671-23677]:Modifier[23667-23673]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23678-23684]:Modifier[23674-23680]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[23685-23692]:PrimitiveType[23681-23688]"
  }, {
    "left" : "isBase64",
    "right" : "isBase64",
    "info" : "SimpleName[23693-23701]:SimpleName[23689-23697]"
  }, {
    "left" : "byte octet",
    "right" : "byte octet",
    "info" : "SingleVariableDeclaration[23702-23712]:SingleVariableDeclaration[23698-23708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23714-23826]:Block[23710-23822]"
  }, {
    "left" : "return octet == PAD || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);",
    "right" : "return octet == PAD || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);",
    "info" : "ReturnStatement[23724-23820]:ReturnStatement[23720-23816]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24231-24237]:Modifier[24227-24233]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[24238-24244]:Modifier[24234-24240]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[24245-24252]:PrimitiveType[24241-24248]"
  }, {
    "left" : "isArrayByteBase64",
    "right" : "isArrayByteBase64",
    "info" : "SimpleName[24253-24270]:SimpleName[24249-24266]"
  }, {
    "left" : "byte[] arrayOctet",
    "right" : "byte[] arrayOctet",
    "info" : "SingleVariableDeclaration[24271-24288]:SingleVariableDeclaration[24267-24284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24290-24502]:Block[24286-24498]"
  }, {
    "left" : "for (int i = 0; i < arrayOctet.length; i++)",
    "right" : "for (int i = 0; i < arrayOctet.length; i++)",
    "info" : "ForStatement[24300-24475]:ForStatement[24296-24471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24344-24475]:Block[24340-24471]"
  }, {
    "left" : "if (!isBase64(arrayOctet[i]) && !isWhiteSpace(arrayOctet[i]))",
    "right" : "if (!isBase64(arrayOctet[i]) && !isWhiteSpace(arrayOctet[i]))",
    "info" : "IfStatement[24358-24465]:IfStatement[24354-24461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24420-24465]:Block[24416-24461]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[24438-24451]:ReturnStatement[24434-24447]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[24484-24496]:ReturnStatement[24480-24492]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[24802-24809]:Modifier[24798-24805]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[24810-24816]:Modifier[24806-24812]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[24817-24824]:PrimitiveType[24813-24820]"
  }, {
    "left" : "containsBase64Byte",
    "right" : "containsBase64Byte",
    "info" : "SimpleName[24825-24843]:SimpleName[24821-24839]"
  }, {
    "left" : "byte[] arrayOctet",
    "right" : "byte[] arrayOctet",
    "info" : "SingleVariableDeclaration[24844-24861]:SingleVariableDeclaration[24840-24857]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24863-25042]:Block[24859-25038]"
  }, {
    "left" : "for (int i = 0; i < arrayOctet.length; i++)",
    "right" : "for (int i = 0; i < arrayOctet.length; i++)",
    "info" : "ForStatement[24873-25014]:ForStatement[24869-25010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24917-25014]:Block[24913-25010]"
  }, {
    "left" : "if (isBase64(arrayOctet[i]))",
    "right" : "if (isBase64(arrayOctet[i]))",
    "info" : "IfStatement[24931-25004]:IfStatement[24927-25000]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24960-25004]:Block[24956-25000]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[24978-24990]:ReturnStatement[24974-24986]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[25023-25036]:ReturnStatement[25019-25032]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25304-25310]:Modifier[25300-25306]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[25311-25317]:Modifier[25307-25313]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[25318-25324]:ArrayType[25314-25320]"
  }, {
    "left" : "encodeBase64",
    "right" : "encodeBase64",
    "info" : "SimpleName[25325-25337]:SimpleName[25321-25333]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[25338-25355]:SingleVariableDeclaration[25334-25351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25357-25412]:Block[25353-25408]"
  }, {
    "left" : "return encodeBase64(binaryData, false);",
    "right" : "return encodeBase64(binaryData, false);",
    "info" : "ReturnStatement[25367-25406]:ReturnStatement[25363-25402]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25678-25684]:Modifier[25674-25680]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[25685-25691]:Modifier[25681-25687]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[25692-25698]:SimpleType[25688-25694]"
  }, {
    "left" : "encodeBase64String",
    "right" : "encodeBase64String",
    "info" : "SimpleName[25699-25717]:SimpleName[25695-25713]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[25718-25735]:SingleVariableDeclaration[25714-25731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25737-25818]:Block[25733-25814]"
  }, {
    "left" : "return StringUtils.newStringUtf8(encodeBase64(binaryData, true));",
    "right" : "return StringUtils.newStringUtf8(encodeBase64(binaryData, true));",
    "info" : "ReturnStatement[25747-25812]:ReturnStatement[25743-25808]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26201-26207]:Modifier[26197-26203]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[26208-26214]:Modifier[26204-26210]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[26215-26221]:ArrayType[26211-26217]"
  }, {
    "left" : "encodeBase64URLSafe",
    "right" : "encodeBase64URLSafe",
    "info" : "SimpleName[26222-26241]:SimpleName[26218-26237]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[26242-26259]:SingleVariableDeclaration[26238-26255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26261-26322]:Block[26257-26318]"
  }, {
    "left" : "return encodeBase64(binaryData, false, true);",
    "right" : "return encodeBase64(binaryData, false, true);",
    "info" : "ReturnStatement[26271-26316]:ReturnStatement[26267-26312]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26673-26679]:Modifier[26669-26675]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[26680-26686]:Modifier[26676-26682]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26687-26693]:SimpleType[26683-26689]"
  }, {
    "left" : "encodeBase64URLSafeString",
    "right" : "encodeBase64URLSafeString",
    "info" : "SimpleName[26694-26719]:SimpleName[26690-26715]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[26720-26737]:SingleVariableDeclaration[26716-26733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26739-26827]:Block[26735-26823]"
  }, {
    "left" : "return StringUtils.newStringUtf8(encodeBase64(binaryData, false, true));",
    "right" : "return StringUtils.newStringUtf8(encodeBase64(binaryData, false, true));",
    "info" : "ReturnStatement[26749-26821]:ReturnStatement[26745-26817]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27099-27105]:Modifier[27095-27101]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[27106-27112]:Modifier[27102-27108]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[27113-27119]:ArrayType[27109-27115]"
  }, {
    "left" : "encodeBase64Chunked",
    "right" : "encodeBase64Chunked",
    "info" : "SimpleName[27120-27139]:SimpleName[27116-27135]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[27140-27157]:SingleVariableDeclaration[27136-27153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27159-27213]:Block[27155-27209]"
  }, {
    "left" : "return encodeBase64(binaryData, true);",
    "right" : "return encodeBase64(binaryData, true);",
    "info" : "ReturnStatement[27169-27207]:ReturnStatement[27165-27203]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27757-27763]:Modifier[27753-27759]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[27764-27770]:SimpleType[27760-27766]"
  }, {
    "left" : "decode",
    "right" : "decode",
    "info" : "SimpleName[27771-27777]:SimpleName[27767-27773]"
  }, {
    "left" : "Object pObject",
    "right" : "Object pObject",
    "info" : "SingleVariableDeclaration[27778-27792]:SingleVariableDeclaration[27774-27788]"
  }, {
    "left" : "DecoderException",
    "right" : "DecoderException",
    "info" : "SimpleType[27801-27817]:SimpleType[27797-27813]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27818-28146]:Block[27814-28142]"
  }, {
    "left" : "if (pObject instanceof byte[])",
    "right" : "if (pObject instanceof byte[])",
    "info" : "IfStatement[27836-28140]:IfStatement[27832-28136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27867-27923]:Block[27863-27919]"
  }, {
    "left" : "return decode((byte[]) pObject);",
    "right" : "return decode((byte[]) pObject);",
    "info" : "ReturnStatement[27881-27913]:ReturnStatement[27877-27909]"
  }, {
    "left" : "if (pObject instanceof String)",
    "right" : "if (pObject instanceof String)",
    "info" : "IfStatement[27929-28140]:IfStatement[27925-28136]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27960-28016]:Block[27956-28012]"
  }, {
    "left" : "return decode((String) pObject);",
    "right" : "return decode((String) pObject);",
    "info" : "ReturnStatement[27974-28006]:ReturnStatement[27970-28002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28022-28140]:Block[28018-28136]"
  }, {
    "left" : "throw new DecoderException(\"Parameter supplied to Base64 decode is not a byte[] or a String\");",
    "right" : "throw new DecoderException(\"Parameter supplied to Base64 decode is not a byte[] or a String\");",
    "info" : "ThrowStatement[28036-28130]:ThrowStatement[28032-28126]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28406-28412]:Modifier[28402-28408]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[28413-28419]:ArrayType[28409-28415]"
  }, {
    "left" : "decode",
    "right" : "decode",
    "info" : "SimpleName[28420-28426]:SimpleName[28416-28422]"
  }, {
    "left" : "String pArray",
    "right" : "String pArray",
    "info" : "SingleVariableDeclaration[28427-28440]:SingleVariableDeclaration[28423-28436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28442-28506]:Block[28438-28502]"
  }, {
    "left" : "return decode(StringUtils.getBytesUtf8(pArray));",
    "right" : "return decode(StringUtils.getBytesUtf8(pArray));",
    "info" : "ReturnStatement[28452-28500]:ReturnStatement[28448-28496]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28753-28759]:Modifier[28749-28755]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[28760-28766]:ArrayType[28756-28762]"
  }, {
    "left" : "decode",
    "right" : "decode",
    "info" : "SimpleName[28767-28773]:SimpleName[28763-28769]"
  }, {
    "left" : "byte[] pArray",
    "right" : "byte[] pArray",
    "info" : "SingleVariableDeclaration[28774-28787]:SingleVariableDeclaration[28770-28783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28789-29596]:Block[28785-29592]"
  }, {
    "left" : "reset();",
    "right" : "reset();",
    "info" : "ExpressionStatement[28799-28807]:ExpressionStatement[28795-28803]"
  }, {
    "left" : "if (pArray == null || pArray.length == 0)",
    "right" : "if (pArray == null || pArray.length == 0)",
    "info" : "IfStatement[28816-28896]:IfStatement[28812-28892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28858-28896]:Block[28854-28892]"
  }, {
    "left" : "return pArray;",
    "right" : "return pArray;",
    "info" : "ReturnStatement[28872-28886]:ReturnStatement[28868-28882]"
  }, {
    "left" : "long len = (pArray.length * 3) / 4;",
    "right" : "long len = (pArray.length * 3) / 4;",
    "info" : "VariableDeclarationStatement[28905-28940]:VariableDeclarationStatement[28901-28936]"
  }, {
    "left" : "byte[] buf = new byte[(int) len];",
    "right" : "byte[] buf = new byte[(int) len];",
    "info" : "VariableDeclarationStatement[28949-28982]:VariableDeclarationStatement[28945-28978]"
  }, {
    "left" : "setInitialBuffer(buf, 0, buf.length);",
    "right" : "setInitialBuffer(buf, 0, buf.length);",
    "info" : "ExpressionStatement[28991-29028]:ExpressionStatement[28987-29024]"
  }, {
    "left" : "decode(pArray, 0, pArray.length);",
    "right" : "decode(pArray, 0, pArray.length);",
    "info" : "ExpressionStatement[29037-29070]:ExpressionStatement[29033-29066]"
  }, {
    "left" : "decode(pArray, 0, -1);",
    "right" : "decode(pArray, 0, -1);",
    "info" : "ExpressionStatement[29079-29101]:ExpressionStatement[29075-29097]"
  }, {
    "left" : "byte[] result = new byte[pos];",
    "right" : "byte[] result = new byte[pos];",
    "info" : "VariableDeclarationStatement[29490-29520]:VariableDeclarationStatement[29486-29516]"
  }, {
    "left" : "readResults(result, 0, result.length);",
    "right" : "readResults(result, 0, result.length);",
    "info" : "ExpressionStatement[29529-29567]:ExpressionStatement[29525-29563]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[29576-29590]:ReturnStatement[29572-29586]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30134-30140]:Modifier[30130-30136]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[30141-30147]:Modifier[30137-30143]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[30148-30154]:ArrayType[30144-30150]"
  }, {
    "left" : "encodeBase64",
    "right" : "encodeBase64",
    "info" : "SimpleName[30155-30167]:SimpleName[30151-30163]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[30168-30185]:SingleVariableDeclaration[30164-30181]"
  }, {
    "left" : "boolean isChunked",
    "right" : "boolean isChunked",
    "info" : "SingleVariableDeclaration[30187-30204]:SingleVariableDeclaration[30183-30200]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30206-30272]:Block[30202-30268]"
  }, {
    "left" : "return encodeBase64(binaryData, isChunked, false);",
    "right" : "return encodeBase64(binaryData, isChunked, false);",
    "info" : "ReturnStatement[30216-30266]:ReturnStatement[30212-30262]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30961-30967]:Modifier[30957-30963]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[30968-30974]:Modifier[30964-30970]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[30975-30981]:ArrayType[30971-30977]"
  }, {
    "left" : "encodeBase64",
    "right" : "encodeBase64",
    "info" : "SimpleName[30982-30994]:SimpleName[30978-30990]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[30995-31012]:SingleVariableDeclaration[30991-31008]"
  }, {
    "left" : "boolean isChunked",
    "right" : "boolean isChunked",
    "info" : "SingleVariableDeclaration[31014-31031]:SingleVariableDeclaration[31010-31027]"
  }, {
    "left" : "boolean urlSafe",
    "right" : "boolean urlSafe",
    "info" : "SingleVariableDeclaration[31033-31048]:SingleVariableDeclaration[31029-31044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31050-31137]:Block[31046-31133]"
  }, {
    "left" : "return encodeBase64(binaryData, isChunked, urlSafe, Integer.MAX_VALUE);",
    "right" : "return encodeBase64(binaryData, isChunked, urlSafe, Integer.MAX_VALUE);",
    "info" : "ReturnStatement[31060-31131]:ReturnStatement[31056-31127]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31895-31901]:Modifier[31891-31897]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[31902-31908]:Modifier[31898-31904]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[31909-31915]:ArrayType[31905-31911]"
  }, {
    "left" : "encodeBase64",
    "right" : "encodeBase64",
    "info" : "SimpleName[31916-31928]:SimpleName[31912-31924]"
  }, {
    "left" : "byte[] binaryData",
    "right" : "byte[] binaryData",
    "info" : "SingleVariableDeclaration[31929-31946]:SingleVariableDeclaration[31925-31942]"
  }, {
    "left" : "boolean isChunked",
    "right" : "boolean isChunked",
    "info" : "SingleVariableDeclaration[31948-31965]:SingleVariableDeclaration[31944-31961]"
  }, {
    "left" : "boolean urlSafe",
    "right" : "boolean urlSafe",
    "info" : "SingleVariableDeclaration[31967-31982]:SingleVariableDeclaration[31963-31978]"
  }, {
    "left" : "int maxResultSize",
    "right" : "int maxResultSize",
    "info" : "SingleVariableDeclaration[31984-32001]:SingleVariableDeclaration[31980-31997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32003-32604]:Block[31999-32600]"
  }, {
    "left" : "if (binaryData == null || binaryData.length == 0)",
    "right" : "if (binaryData == null || binaryData.length == 0)",
    "info" : "IfStatement[32013-32105]:IfStatement[32009-32101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32063-32105]:Block[32059-32101]"
  }, {
    "left" : "return binaryData;",
    "right" : "return binaryData;",
    "info" : "ReturnStatement[32077-32095]:ReturnStatement[32073-32091]"
  }, {
    "left" : "long len = getEncodeLength(binaryData, CHUNK_SIZE, CHUNK_SEPARATOR);",
    "right" : "long len = getEncodeLength(binaryData, CHUNK_SIZE, CHUNK_SEPARATOR);",
    "info" : "VariableDeclarationStatement[32115-32183]:VariableDeclarationStatement[32111-32179]"
  }, {
    "left" : "if (len > maxResultSize)",
    "right" : "if (len > maxResultSize)",
    "info" : "IfStatement[32192-32446]:IfStatement[32188-32442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32217-32446]:Block[32213-32442]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +\n                len +\n                \") than the specified maxium size of \" +\n                maxResultSize);",
    "right" : "throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +\n                len +\n                \") than the specified maxium size of \" +\n                maxResultSize);",
    "info" : "ThrowStatement[32231-32436]:ThrowStatement[32227-32432]"
  }, {
    "left" : "Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);",
    "right" : "Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);",
    "info" : "VariableDeclarationStatement[32472-32559]:VariableDeclarationStatement[32468-32555]"
  }, {
    "left" : "return b64.encode(binaryData);",
    "right" : "return b64.encode(binaryData);",
    "info" : "ReturnStatement[32568-32598]:ReturnStatement[32564-32594]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32815-32821]:Modifier[32811-32817]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[32822-32828]:Modifier[32818-32824]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[32829-32835]:ArrayType[32825-32831]"
  }, {
    "left" : "decodeBase64",
    "right" : "decodeBase64",
    "info" : "SimpleName[32836-32848]:SimpleName[32832-32844]"
  }, {
    "left" : "String base64String",
    "right" : "String base64String",
    "info" : "SingleVariableDeclaration[32849-32868]:SingleVariableDeclaration[32845-32864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32870-32927]:Block[32866-32923]"
  }, {
    "left" : "return new Base64().decode(base64String);",
    "right" : "return new Base64().decode(base64String);",
    "info" : "ReturnStatement[32880-32921]:ReturnStatement[32876-32917]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33119-33125]:Modifier[33115-33121]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[33126-33132]:Modifier[33122-33128]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[33133-33139]:ArrayType[33129-33135]"
  }, {
    "left" : "decodeBase64",
    "right" : "decodeBase64",
    "info" : "SimpleName[33140-33152]:SimpleName[33136-33148]"
  }, {
    "left" : "byte[] base64Data",
    "right" : "byte[] base64Data",
    "info" : "SingleVariableDeclaration[33153-33170]:SingleVariableDeclaration[33149-33166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33172-33227]:Block[33168-33223]"
  }, {
    "left" : "return new Base64().decode(base64Data);",
    "right" : "return new Base64().decode(base64Data);",
    "info" : "ReturnStatement[33182-33221]:ReturnStatement[33178-33217]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[33520-33526]:Modifier[33516-33522]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[33527-33533]:ArrayType[33523-33529]"
  }, {
    "left" : "discardWhitespace",
    "right" : "discardWhitespace",
    "info" : "SimpleName[33534-33551]:SimpleName[33530-33547]"
  }, {
    "left" : "byte[] data",
    "right" : "byte[] data",
    "info" : "SingleVariableDeclaration[33552-33563]:SingleVariableDeclaration[33548-33559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33565-34126]:Block[33561-34122]"
  }, {
    "left" : "byte groomedData[] = new byte[data.length];",
    "right" : "byte groomedData[] = new byte[data.length];",
    "info" : "VariableDeclarationStatement[33575-33618]:VariableDeclarationStatement[33571-33614]"
  }, {
    "left" : "int bytesCopied = 0;",
    "right" : "int bytesCopied = 0;",
    "info" : "VariableDeclarationStatement[33627-33647]:VariableDeclarationStatement[33623-33643]"
  }, {
    "left" : "for (int i = 0; i < data.length; i++)",
    "right" : "for (int i = 0; i < data.length; i++)",
    "info" : "ForStatement[33656-33972]:ForStatement[33652-33968]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33694-33972]:Block[33690-33968]"
  }, {
    "left" : "switch (data[i]) {\n                case ' ' :\n                case '\\n' :\n                case '\\r' :\n                case '\\t' :\n                    break;\n                default :\n                    groomedData[bytesCopied++] = data[i];\n            }",
    "right" : "switch (data[i]) {\n                case ' ' :\n                case '\\n' :\n                case '\\r' :\n                case '\\t' :\n                    break;\n                default :\n                    groomedData[bytesCopied++] = data[i];\n            }",
    "info" : "SwitchStatement[33708-33962]:SwitchStatement[33704-33958]"
  }, {
    "left" : "case ' ' :",
    "right" : "case ' ' :",
    "info" : "SwitchCase[33743-33753]:SwitchCase[33739-33749]"
  }, {
    "left" : "case '\\n' :",
    "right" : "case '\\n' :",
    "info" : "SwitchCase[33770-33781]:SwitchCase[33766-33777]"
  }, {
    "left" : "case '\\r' :",
    "right" : "case '\\r' :",
    "info" : "SwitchCase[33798-33809]:SwitchCase[33794-33805]"
  }, {
    "left" : "case '\\t' :",
    "right" : "case '\\t' :",
    "info" : "SwitchCase[33826-33837]:SwitchCase[33822-33833]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[33858-33864]:BreakStatement[33854-33860]"
  }, {
    "left" : "default :",
    "right" : "default :",
    "info" : "SwitchCase[33881-33890]:SwitchCase[33877-33886]"
  }, {
    "left" : "groomedData[bytesCopied++] = data[i];",
    "right" : "groomedData[bytesCopied++] = data[i];",
    "info" : "ExpressionStatement[33911-33948]:ExpressionStatement[33907-33944]"
  }, {
    "left" : "byte packedData[] = new byte[bytesCopied];",
    "right" : "byte packedData[] = new byte[bytesCopied];",
    "info" : "VariableDeclarationStatement[33981-34023]:VariableDeclarationStatement[33977-34019]"
  }, {
    "left" : "System.arraycopy(groomedData, 0, packedData, 0, bytesCopied);",
    "right" : "System.arraycopy(groomedData, 0, packedData, 0, bytesCopied);",
    "info" : "ExpressionStatement[34032-34093]:ExpressionStatement[34028-34089]"
  }, {
    "left" : "return packedData;",
    "right" : "return packedData;",
    "info" : "ReturnStatement[34102-34120]:ReturnStatement[34098-34116]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[34329-34336]:Modifier[34325-34332]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[34337-34343]:Modifier[34333-34339]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[34344-34351]:PrimitiveType[34340-34347]"
  }, {
    "left" : "isWhiteSpace",
    "right" : "isWhiteSpace",
    "info" : "SimpleName[34352-34364]:SimpleName[34348-34360]"
  }, {
    "left" : "byte byteToCheck",
    "right" : "byte byteToCheck",
    "info" : "SingleVariableDeclaration[34365-34381]:SingleVariableDeclaration[34361-34377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34383-34607]:Block[34379-34603]"
  }, {
    "left" : "switch (byteToCheck) {\n            case ' ' :\n            case '\\n' :\n            case '\\r' :\n            case '\\t' :\n                return true;\n            default :\n                return false;\n        }",
    "right" : "switch (byteToCheck) {\n            case ' ' :\n            case '\\n' :\n            case '\\r' :\n            case '\\t' :\n                return true;\n            default :\n                return false;\n        }",
    "info" : "SwitchStatement[34393-34601]:SwitchStatement[34389-34597]"
  }, {
    "left" : "case ' ' :",
    "right" : "case ' ' :",
    "info" : "SwitchCase[34428-34438]:SwitchCase[34424-34434]"
  }, {
    "left" : "case '\\n' :",
    "right" : "case '\\n' :",
    "info" : "SwitchCase[34451-34462]:SwitchCase[34447-34458]"
  }, {
    "left" : "case '\\r' :",
    "right" : "case '\\r' :",
    "info" : "SwitchCase[34475-34486]:SwitchCase[34471-34482]"
  }, {
    "left" : "case '\\t' :",
    "right" : "case '\\t' :",
    "info" : "SwitchCase[34499-34510]:SwitchCase[34495-34506]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[34527-34539]:ReturnStatement[34523-34535]"
  }, {
    "left" : "default :",
    "right" : "default :",
    "info" : "SwitchCase[34552-34561]:SwitchCase[34548-34557]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[34578-34591]:ReturnStatement[34574-34587]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35188-35194]:Modifier[35184-35190]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[35195-35201]:SimpleType[35191-35197]"
  }, {
    "left" : "encode",
    "right" : "encode",
    "info" : "SimpleName[35202-35208]:SimpleName[35198-35204]"
  }, {
    "left" : "Object pObject",
    "right" : "Object pObject",
    "info" : "SingleVariableDeclaration[35209-35223]:SingleVariableDeclaration[35205-35219]"
  }, {
    "left" : "EncoderException",
    "right" : "EncoderException",
    "info" : "SimpleType[35232-35248]:SimpleType[35228-35244]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35249-35446]:Block[35245-35442]"
  }, {
    "left" : "if (!(pObject instanceof byte[]))",
    "right" : "if (!(pObject instanceof byte[]))",
    "info" : "IfStatement[35259-35399]:IfStatement[35255-35395]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35293-35399]:Block[35289-35395]"
  }, {
    "left" : "throw new EncoderException(\"Parameter supplied to Base64 encode is not a byte[]\");",
    "right" : "throw new EncoderException(\"Parameter supplied to Base64 encode is not a byte[]\");",
    "info" : "ThrowStatement[35307-35389]:ThrowStatement[35303-35385]"
  }, {
    "left" : "return encode((byte[]) pObject);",
    "right" : "return encode((byte[]) pObject);",
    "info" : "ReturnStatement[35408-35440]:ReturnStatement[35404-35436]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35742-35748]:Modifier[35738-35744]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[35749-35755]:SimpleType[35745-35751]"
  }, {
    "left" : "encodeToString",
    "right" : "encodeToString",
    "info" : "SimpleName[35756-35770]:SimpleName[35752-35766]"
  }, {
    "left" : "byte[] pArray",
    "right" : "byte[] pArray",
    "info" : "SingleVariableDeclaration[35771-35784]:SingleVariableDeclaration[35767-35780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35786-35851]:Block[35782-35847]"
  }, {
    "left" : "return StringUtils.newStringUtf8(encode(pArray));",
    "right" : "return StringUtils.newStringUtf8(encode(pArray));",
    "info" : "ReturnStatement[35796-35845]:ReturnStatement[35792-35841]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36130-36136]:Modifier[36126-36132]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[36137-36143]:ArrayType[36133-36139]"
  }, {
    "left" : "encode",
    "right" : "encode",
    "info" : "SimpleName[36144-36150]:SimpleName[36140-36146]"
  }, {
    "left" : "byte[] pArray",
    "right" : "byte[] pArray",
    "info" : "SingleVariableDeclaration[36151-36164]:SingleVariableDeclaration[36147-36160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36166-37039]:Block[36162-37035]"
  }, {
    "left" : "reset();",
    "right" : "reset();",
    "info" : "ExpressionStatement[36176-36184]:ExpressionStatement[36172-36180]"
  }, {
    "left" : "if (pArray == null || pArray.length == 0)",
    "right" : "if (pArray == null || pArray.length == 0)",
    "info" : "IfStatement[36201-36281]:IfStatement[36197-36277]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36243-36281]:Block[36239-36277]"
  }, {
    "left" : "return pArray;",
    "right" : "return pArray;",
    "info" : "ReturnStatement[36257-36271]:ReturnStatement[36253-36267]"
  }, {
    "left" : "long len = getEncodeLength(pArray, lineLength, lineSeparator);",
    "right" : "long len = getEncodeLength(pArray, lineLength, lineSeparator);",
    "info" : "VariableDeclarationStatement[36290-36352]:VariableDeclarationStatement[36286-36348]"
  }, {
    "left" : "byte[] buf = new byte[(int) len];",
    "right" : "byte[] buf = new byte[(int) len];",
    "info" : "VariableDeclarationStatement[36361-36394]:VariableDeclarationStatement[36357-36390]"
  }, {
    "left" : "setInitialBuffer(buf, 0, buf.length);",
    "right" : "setInitialBuffer(buf, 0, buf.length);",
    "info" : "ExpressionStatement[36403-36440]:ExpressionStatement[36399-36436]"
  }, {
    "left" : "encode(pArray, 0, pArray.length);",
    "right" : "encode(pArray, 0, pArray.length);",
    "info" : "ExpressionStatement[36449-36482]:ExpressionStatement[36445-36478]"
  }, {
    "left" : "encode(pArray, 0, -1);",
    "right" : "encode(pArray, 0, -1);",
    "info" : "ExpressionStatement[36491-36513]:ExpressionStatement[36487-36509]"
  }, {
    "left" : "if (buffer != buf)",
    "right" : "if (buffer != buf)",
    "info" : "IfStatement[36619-36694]:IfStatement[36615-36690]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36638-36694]:Block[36634-36690]"
  }, {
    "left" : "readResults(buf, 0, buf.length);",
    "right" : "readResults(buf, 0, buf.length);",
    "info" : "ExpressionStatement[36652-36684]:ExpressionStatement[36648-36680]"
  }, {
    "left" : "if (isUrlSafe() && pos < buf.length)",
    "right" : "if (isUrlSafe() && pos < buf.length)",
    "info" : "IfStatement[36822-37005]:IfStatement[36818-37001]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36859-37005]:Block[36855-37001]"
  }, {
    "left" : "byte[] smallerBuf = new byte[pos];",
    "right" : "byte[] smallerBuf = new byte[pos];",
    "info" : "VariableDeclarationStatement[36873-36907]:VariableDeclarationStatement[36869-36903]"
  }, {
    "left" : "System.arraycopy(buf, 0, smallerBuf, 0, pos);",
    "right" : "System.arraycopy(buf, 0, smallerBuf, 0, pos);",
    "info" : "ExpressionStatement[36920-36965]:ExpressionStatement[36916-36961]"
  }, {
    "left" : "buf = smallerBuf;",
    "right" : "buf = smallerBuf;",
    "info" : "ExpressionStatement[36978-36995]:ExpressionStatement[36974-36991]"
  }, {
    "left" : "return buf;",
    "right" : "return buf;",
    "info" : "ReturnStatement[37014-37025]:ReturnStatement[37010-37021]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37611-37618]:Modifier[37607-37614]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37619-37625]:Modifier[37615-37621]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[37626-37630]:PrimitiveType[37622-37626]"
  }, {
    "left" : "getEncodeLength",
    "right" : "getEncodeLength",
    "info" : "SimpleName[37631-37646]:SimpleName[37627-37642]"
  }, {
    "left" : "byte[] pArray",
    "right" : "byte[] pArray",
    "info" : "SingleVariableDeclaration[37647-37660]:SingleVariableDeclaration[37643-37656]"
  }, {
    "left" : "int chunkSize",
    "right" : "int chunkSize",
    "info" : "SingleVariableDeclaration[37662-37675]:SingleVariableDeclaration[37658-37671]"
  }, {
    "left" : "byte[] chunkSeparator",
    "right" : "byte[] chunkSeparator",
    "info" : "SingleVariableDeclaration[37677-37698]:SingleVariableDeclaration[37673-37694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37700-38218]:Block[37696-38214]"
  }, {
    "left" : "chunkSize = (chunkSize / 4) * 4;",
    "right" : "chunkSize = (chunkSize / 4) * 4;",
    "info" : "ExpressionStatement[37762-37794]:ExpressionStatement[37758-37790]"
  }, {
    "left" : "long len = (pArray.length * 4) / 3;",
    "right" : "long len = (pArray.length * 4) / 3;",
    "info" : "VariableDeclarationStatement[37804-37839]:VariableDeclarationStatement[37800-37835]"
  }, {
    "left" : "long mod = len % 4;",
    "right" : "long mod = len % 4;",
    "info" : "VariableDeclarationStatement[37848-37867]:VariableDeclarationStatement[37844-37863]"
  }, {
    "left" : "if (mod != 0)",
    "right" : "if (mod != 0)",
    "info" : "IfStatement[37876-37929]:IfStatement[37872-37925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37890-37929]:Block[37886-37925]"
  }, {
    "left" : "len += 4 - mod;",
    "right" : "len += 4 - mod;",
    "info" : "ExpressionStatement[37904-37919]:ExpressionStatement[37900-37915]"
  }, {
    "left" : "if (chunkSize > 0)",
    "right" : "if (chunkSize > 0)",
    "info" : "IfStatement[37938-38192]:IfStatement[37934-38188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37957-38192]:Block[37953-38188]"
  }, {
    "left" : "boolean lenChunksPerfectly = len % chunkSize == 0;",
    "right" : "boolean lenChunksPerfectly = len % chunkSize == 0;",
    "info" : "VariableDeclarationStatement[37971-38021]:VariableDeclarationStatement[37967-38017]"
  }, {
    "left" : "len += (len / chunkSize) * chunkSeparator.length;",
    "right" : "len += (len / chunkSize) * chunkSeparator.length;",
    "info" : "ExpressionStatement[38034-38083]:ExpressionStatement[38030-38079]"
  }, {
    "left" : "if (!lenChunksPerfectly)",
    "right" : "if (!lenChunksPerfectly)",
    "info" : "IfStatement[38096-38182]:IfStatement[38092-38178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38121-38182]:Block[38117-38178]"
  }, {
    "left" : "len += chunkSeparator.length;",
    "right" : "len += chunkSeparator.length;",
    "info" : "ExpressionStatement[38139-38168]:ExpressionStatement[38135-38164]"
  }, {
    "left" : "return len;",
    "right" : "return len;",
    "info" : "ReturnStatement[38201-38212]:ReturnStatement[38197-38208]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38535-38541]:Modifier[38531-38537]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[38542-38548]:Modifier[38538-38544]"
  }, {
    "left" : "BigInteger",
    "right" : "BigInteger",
    "info" : "SimpleType[38549-38559]:SimpleType[38545-38555]"
  }, {
    "left" : "decodeInteger",
    "right" : "decodeInteger",
    "info" : "SimpleName[38560-38573]:SimpleName[38556-38569]"
  }, {
    "left" : "byte[] pArray",
    "right" : "byte[] pArray",
    "info" : "SingleVariableDeclaration[38574-38587]:SingleVariableDeclaration[38570-38583]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38589-38652]:Block[38585-38648]"
  }, {
    "left" : "return new BigInteger(1, decodeBase64(pArray));",
    "right" : "return new BigInteger(1, decodeBase64(pArray));",
    "info" : "ReturnStatement[38599-38646]:ReturnStatement[38595-38642]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38990-38996]:Modifier[38986-38992]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[38997-39003]:Modifier[38993-38999]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[39004-39010]:ArrayType[39000-39006]"
  }, {
    "left" : "encodeInteger",
    "right" : "encodeInteger",
    "info" : "SimpleName[39011-39024]:SimpleName[39007-39020]"
  }, {
    "left" : "BigInteger bigInt",
    "right" : "BigInteger bigInt",
    "info" : "SingleVariableDeclaration[39025-39042]:SingleVariableDeclaration[39021-39038]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39044-39239]:Block[39040-39235]"
  }, {
    "left" : "if (bigInt == null)",
    "right" : "if (bigInt == null)",
    "info" : "IfStatement[39054-39173]:IfStatement[39050-39169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39074-39173]:Block[39070-39169]"
  }, {
    "left" : "throw new NullPointerException(\"encodeInteger called with null parameter\");",
    "right" : "throw new NullPointerException(\"encodeInteger called with null parameter\");",
    "info" : "ThrowStatement[39088-39163]:ThrowStatement[39084-39159]"
  }, {
    "left" : "return encodeBase64(toIntegerBytes(bigInt), false);",
    "right" : "return encodeBase64(toIntegerBytes(bigInt), false);",
    "info" : "ReturnStatement[39182-39233]:ReturnStatement[39178-39229]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39509-39515]:Modifier[39505-39511]"
  }, {
    "left" : "byte[]",
    "right" : "byte[]",
    "info" : "ArrayType[39516-39522]:ArrayType[39512-39518]"
  }, {
    "left" : "toIntegerBytes",
    "right" : "toIntegerBytes",
    "info" : "SimpleName[39523-39537]:SimpleName[39519-39533]"
  }, {
    "left" : "BigInteger bigInt",
    "right" : "BigInteger bigInt",
    "info" : "SingleVariableDeclaration[39538-39555]:SingleVariableDeclaration[39534-39551]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39557-40382]:Block[39553-40378]"
  }, {
    "left" : "int bitlen = bigInt.bitLength();",
    "right" : "int bitlen = bigInt.bitLength();",
    "info" : "VariableDeclarationStatement[39567-39599]:VariableDeclarationStatement[39563-39595]"
  }, {
    "left" : "bitlen = ((bitlen + 7) >> 3) << 3;",
    "right" : "bitlen = ((bitlen + 7) >> 3) << 3;",
    "info" : "ExpressionStatement[39632-39666]:ExpressionStatement[39628-39662]"
  }, {
    "left" : "byte[] bigBytes = bigInt.toByteArray();",
    "right" : "byte[] bigBytes = bigInt.toByteArray();",
    "info" : "VariableDeclarationStatement[39675-39714]:VariableDeclarationStatement[39671-39710]"
  }, {
    "left" : "if (((bigInt.bitLength() % 8) != 0) && (((bigInt.bitLength() / 8) + 1) == (bitlen / 8)))",
    "right" : "if (((bigInt.bitLength() % 8) != 0) && (((bigInt.bitLength() / 8) + 1) == (bitlen / 8)))",
    "info" : "IfStatement[39724-39853]:IfStatement[39720-39849]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39813-39853]:Block[39809-39849]"
  }, {
    "left" : "return bigBytes;",
    "right" : "return bigBytes;",
    "info" : "ReturnStatement[39827-39843]:ReturnStatement[39823-39839]"
  }, {
    "left" : "int startSrc = 0;",
    "right" : "int startSrc = 0;",
    "info" : "VariableDeclarationStatement[39923-39940]:VariableDeclarationStatement[39919-39936]"
  }, {
    "left" : "int len = bigBytes.length;",
    "right" : "int len = bigBytes.length;",
    "info" : "VariableDeclarationStatement[39949-39975]:VariableDeclarationStatement[39945-39971]"
  }, {
    "left" : "if ((bigInt.bitLength() % 8) == 0)",
    "right" : "if ((bigInt.bitLength() % 8) == 0)",
    "info" : "IfStatement[40057-40148]:IfStatement[40053-40144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40092-40148]:Block[40088-40144]"
  }, {
    "left" : "startSrc = 1;",
    "right" : "startSrc = 1;",
    "info" : "ExpressionStatement[40106-40119]:ExpressionStatement[40102-40115]"
  }, {
    "left" : "len--;",
    "right" : "len--;",
    "info" : "ExpressionStatement[40132-40138]:ExpressionStatement[40128-40134]"
  }, {
    "left" : "int startDst = bitlen / 8 - len;",
    "right" : "int startDst = bitlen / 8 - len;",
    "info" : "VariableDeclarationStatement[40157-40189]:VariableDeclarationStatement[40153-40185]"
  }, {
    "left" : "byte[] resizedBytes = new byte[bitlen / 8];",
    "right" : "byte[] resizedBytes = new byte[bitlen / 8];",
    "info" : "VariableDeclarationStatement[40229-40272]:VariableDeclarationStatement[40225-40268]"
  }, {
    "left" : "System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len);",
    "right" : "System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len);",
    "info" : "ExpressionStatement[40281-40347]:ExpressionStatement[40277-40343]"
  }, {
    "left" : "return resizedBytes;",
    "right" : "return resizedBytes;",
    "info" : "ReturnStatement[40356-40376]:ReturnStatement[40352-40372]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[40477-40484]:Modifier[40473-40480]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40485-40489]:PrimitiveType[40481-40485]"
  }, {
    "left" : "reset",
    "right" : "reset",
    "info" : "SimpleName[40490-40495]:SimpleName[40486-40491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40498-40636]:Block[40494-40632]"
  }, {
    "left" : "buffer = null;",
    "right" : "buffer = null;",
    "info" : "ExpressionStatement[40508-40522]:ExpressionStatement[40504-40518]"
  }, {
    "left" : "pos = 0;",
    "right" : "pos = 0;",
    "info" : "ExpressionStatement[40531-40539]:ExpressionStatement[40527-40535]"
  }, {
    "left" : "readPos = 0;",
    "right" : "readPos = 0;",
    "info" : "ExpressionStatement[40548-40560]:ExpressionStatement[40544-40556]"
  }, {
    "left" : "currentLinePos = 0;",
    "right" : "currentLinePos = 0;",
    "info" : "ExpressionStatement[40569-40588]:ExpressionStatement[40565-40584]"
  }, {
    "left" : "modulus = 0;",
    "right" : "modulus = 0;",
    "info" : "ExpressionStatement[40597-40609]:ExpressionStatement[40593-40605]"
  }, {
    "left" : "eof = false;",
    "right" : "eof = false;",
    "info" : "ExpressionStatement[40618-40630]:ExpressionStatement[40614-40626]"
  } ]
}