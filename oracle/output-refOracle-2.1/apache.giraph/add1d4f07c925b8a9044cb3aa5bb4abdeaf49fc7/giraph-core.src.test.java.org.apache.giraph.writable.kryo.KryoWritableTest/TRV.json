{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TestClassA",
      "right" : "TestClassA",
      "info" : "TypeDeclaration[1306-1722]:TypeDeclaration[1410-1826]"
    }, {
      "left" : "final String testObject;",
      "right" : "final String testObject;",
      "info" : "FieldDeclaration[1364-1388]:FieldDeclaration[1468-1492]"
    }, {
      "left" : "final List list;",
      "right" : "final List list;",
      "info" : "FieldDeclaration[1393-1409]:FieldDeclaration[1497-1513]"
    }, {
      "left" : "final int something;",
      "right" : "final int something;",
      "info" : "FieldDeclaration[1414-1434]:FieldDeclaration[1518-1538]"
    }, {
      "left" : "public TestClassA(String testObject, List list, int something)",
      "right" : "public TestClassA(String testObject, List list, int something)",
      "info" : "MethodDeclaration[1440-1604]:MethodDeclaration[1544-1708]"
    }, {
      "left" : "public TestClassA()",
      "right" : "public TestClassA()",
      "info" : "MethodDeclaration[1610-1718]:MethodDeclaration[1714-1822]"
    }, {
      "left" : "public void testTestClassA() throws Exception",
      "right" : "public void testTestClassA() throws Exception",
      "info" : "MethodDeclaration[1726-2204]:MethodDeclaration[1830-2308]"
    }, {
      "left" : "LongKryoWritable",
      "right" : "LongKryoWritable",
      "info" : "TypeDeclaration[2208-2488]:TypeDeclaration[2312-2592]"
    }, {
      "left" : "private long value;",
      "right" : "private long value;",
      "info" : "FieldDeclaration[2272-2291]:FieldDeclaration[2376-2395]"
    }, {
      "left" : "public LongKryoWritable(long value)",
      "right" : "public LongKryoWritable(long value)",
      "info" : "MethodDeclaration[2297-2366]:MethodDeclaration[2401-2470]"
    }, {
      "left" : "public long get()",
      "right" : "public long get()",
      "info" : "MethodDeclaration[2372-2417]:MethodDeclaration[2476-2521]"
    }, {
      "left" : "public void set(long value)",
      "right" : "public void set(long value)",
      "info" : "MethodDeclaration[2423-2484]:MethodDeclaration[2527-2588]"
    }, {
      "left" : "int multiplier = 5000;",
      "right" : "int multiplier = 5000;",
      "info" : "FieldDeclaration[2493-2515]:FieldDeclaration[2597-2619]"
    }, {
      "left" : "int longTestTimes = 1000 * multiplier;",
      "right" : "int longTestTimes = 1000 * multiplier;",
      "info" : "FieldDeclaration[2544-2582]:FieldDeclaration[2648-2686]"
    }, {
      "left" : "public void testLongKryoWritable() throws Exception",
      "right" : "public void testLongKryoWritable() throws Exception",
      "info" : "MethodDeclaration[2586-2906]:MethodDeclaration[2690-3010]"
    }, {
      "left" : "public void testLongWritable() throws Exception",
      "right" : "public void testLongWritable() throws Exception",
      "info" : "MethodDeclaration[2910-3210]:MethodDeclaration[3014-3314]"
    }, {
      "left" : "LongListKryoWritable",
      "right" : "LongListKryoWritable",
      "info" : "TypeDeclaration[3214-3401]:TypeDeclaration[3318-3505]"
    }, {
      "left" : "public LongArrayList value;",
      "right" : "public LongArrayList value;",
      "info" : "FieldDeclaration[3282-3309]:FieldDeclaration[3386-3413]"
    }, {
      "left" : "public LongListKryoWritable(LongArrayList value)",
      "right" : "public LongListKryoWritable(LongArrayList value)",
      "info" : "MethodDeclaration[3315-3397]:MethodDeclaration[3419-3501]"
    }, {
      "left" : "int longListTestTimes = 1 * multiplier;",
      "right" : "int longListTestTimes = 1 * multiplier;",
      "info" : "FieldDeclaration[3405-3444]:FieldDeclaration[3509-3548]"
    }, {
      "left" : "int longListTestSize = 100000;",
      "right" : "int longListTestSize = 100000;",
      "info" : "FieldDeclaration[3447-3477]:FieldDeclaration[3551-3581]"
    }, {
      "left" : "public void testLongListKryoWritable() throws Exception",
      "right" : "public void testLongListKryoWritable() throws Exception",
      "info" : "MethodDeclaration[3481-3969]:MethodDeclaration[3585-4073]"
    }, {
      "left" : "public void testLongListWritable() throws Exception",
      "right" : "public void testLongListWritable() throws Exception",
      "info" : "MethodDeclaration[3973-4496]:MethodDeclaration[4077-4600]"
    }, {
      "left" : "NestedKryoWritable",
      "right" : "NestedKryoWritable",
      "info" : "TypeDeclaration[4500-4755]:TypeDeclaration[4604-4859]"
    }, {
      "left" : "public LongKryoWritable value1;",
      "right" : "public LongKryoWritable value1;",
      "info" : "FieldDeclaration[4569-4600]:FieldDeclaration[4673-4704]"
    }, {
      "left" : "public T value2;",
      "right" : "public T value2;",
      "info" : "FieldDeclaration[4605-4621]:FieldDeclaration[4709-4725]"
    }, {
      "left" : "public NestedKryoWritable(LongKryoWritable value1, T value2)",
      "right" : "public NestedKryoWritable(LongKryoWritable value1, T value2)",
      "info" : "MethodDeclaration[4627-4751]:MethodDeclaration[4731-4855]"
    }, {
      "left" : "public void testNestedKryoWritable() throws Exception",
      "right" : "public void testNestedKryoWritable() throws Exception",
      "info" : "MethodDeclaration[4759-5142]:MethodDeclaration[4863-5246]"
    }, {
      "left" : "public void testRecursiveKryoWritable() throws Exception",
      "right" : "public void testRecursiveKryoWritable() throws Exception",
      "info" : "MethodDeclaration[5146-5566]:MethodDeclaration[5250-5670]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1503-1604]:Block[1607-1708]"
    }, {
      "left" : "this.testObject = testObject;",
      "right" : "this.testObject = testObject;",
      "info" : "ExpressionStatement[1511-1540]:ExpressionStatement[1615-1644]"
    }, {
      "left" : "this.list = list;",
      "right" : "this.list = list;",
      "info" : "ExpressionStatement[1547-1564]:ExpressionStatement[1651-1668]"
    }, {
      "left" : "this.something = something;",
      "right" : "this.something = something;",
      "info" : "ExpressionStatement[1571-1598]:ExpressionStatement[1675-1702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1630-1718]:Block[1734-1822]"
    }, {
      "left" : "this.testObject = null;",
      "right" : "this.testObject = null;",
      "info" : "ExpressionStatement[1638-1661]:ExpressionStatement[1742-1765]"
    }, {
      "left" : "this.list = null;",
      "right" : "this.list = null;",
      "info" : "ExpressionStatement[1668-1685]:ExpressionStatement[1772-1789]"
    }, {
      "left" : "this.something = -1;",
      "right" : "this.something = -1;",
      "info" : "ExpressionStatement[1692-1712]:ExpressionStatement[1796-1816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1780-2204]:Block[1884-2308]"
    }, {
      "left" : "String testObject = \"Hello World!\";",
      "right" : "String testObject = \"Hello World!\";",
      "info" : "VariableDeclarationStatement[1786-1821]:VariableDeclarationStatement[1890-1925]"
    }, {
      "left" : "TestClassA res = new TestClassA();",
      "right" : "TestClassA res = new TestClassA();",
      "info" : "VariableDeclarationStatement[1826-1860]:VariableDeclarationStatement[1930-1964]"
    }, {
      "left" : "WritableUtils.copyInto(\n        new TestClassA(testObject, Arrays.asList(1, 2, 3), 5), res, true);",
      "right" : "WritableUtils.copyInto(\n        new TestClassA(testObject, Arrays.asList(1, 2, 3), 5), res, true);",
      "info" : "ExpressionStatement[1865-1963]:ExpressionStatement[1969-2067]"
    }, {
      "left" : "assertEquals(testObject, res.testObject);",
      "right" : "assertEquals(testObject, res.testObject);",
      "info" : "ExpressionStatement[1969-2010]:ExpressionStatement[2073-2114]"
    }, {
      "left" : "assertEquals(3, res.list.size());",
      "right" : "assertEquals(3, res.list.size());",
      "info" : "ExpressionStatement[2016-2049]:ExpressionStatement[2120-2153]"
    }, {
      "left" : "assertEquals(1, res.list.get(0));",
      "right" : "assertEquals(1, res.list.get(0));",
      "info" : "ExpressionStatement[2054-2087]:ExpressionStatement[2158-2191]"
    }, {
      "left" : "assertEquals(2, res.list.get(1));",
      "right" : "assertEquals(2, res.list.get(1));",
      "info" : "ExpressionStatement[2092-2125]:ExpressionStatement[2196-2229]"
    }, {
      "left" : "assertEquals(3, res.list.get(2));",
      "right" : "assertEquals(3, res.list.get(2));",
      "info" : "ExpressionStatement[2130-2163]:ExpressionStatement[2234-2267]"
    }, {
      "left" : "assertEquals(5, res.something);",
      "right" : "assertEquals(5, res.something);",
      "info" : "ExpressionStatement[2169-2200]:ExpressionStatement[2273-2304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2333-2366]:Block[2437-2470]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[2341-2360]:ExpressionStatement[2445-2464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2390-2417]:Block[2494-2521]"
    }, {
      "left" : "return value;",
      "right" : "return value;",
      "info" : "ReturnStatement[2398-2411]:ReturnStatement[2502-2515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2451-2484]:Block[2555-2588]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[2459-2478]:ExpressionStatement[2563-2582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2646-2906]:Block[2750-3010]"
    }, {
      "left" : "LongKryoWritable from = new LongKryoWritable(0);",
      "right" : "LongKryoWritable from = new LongKryoWritable(0);",
      "info" : "VariableDeclarationStatement[2652-2700]:VariableDeclarationStatement[2756-2804]"
    }, {
      "left" : "LongKryoWritable to = new LongKryoWritable(0);",
      "right" : "LongKryoWritable to = new LongKryoWritable(0);",
      "info" : "VariableDeclarationStatement[2705-2751]:VariableDeclarationStatement[2809-2855]"
    }, {
      "left" : "for (int i = 0; i < longTestTimes; i++)",
      "right" : "for (int i = 0; i < longTestTimes; i++)",
      "info" : "ForStatement[2757-2902]:ForStatement[2861-3006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2797-2902]:Block[2901-3006]"
    }, {
      "left" : "from.set(i);",
      "right" : "from.set(i);",
      "info" : "ExpressionStatement[2805-2817]:ExpressionStatement[2909-2921]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[2824-2863]:ExpressionStatement[2928-2967]"
    }, {
      "left" : "assertEquals(i, to.get());",
      "right" : "assertEquals(i, to.get());",
      "info" : "ExpressionStatement[2870-2896]:ExpressionStatement[2974-3000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2966-3210]:Block[3070-3314]"
    }, {
      "left" : "LongWritable from = new LongWritable(0);",
      "right" : "LongWritable from = new LongWritable(0);",
      "info" : "VariableDeclarationStatement[2972-3012]:VariableDeclarationStatement[3076-3116]"
    }, {
      "left" : "LongWritable to = new LongWritable(0);",
      "right" : "LongWritable to = new LongWritable(0);",
      "info" : "VariableDeclarationStatement[3017-3055]:VariableDeclarationStatement[3121-3159]"
    }, {
      "left" : "for (int i = 0; i < longTestTimes; i++)",
      "right" : "for (int i = 0; i < longTestTimes; i++)",
      "info" : "ForStatement[3061-3206]:ForStatement[3165-3310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3101-3206]:Block[3205-3310]"
    }, {
      "left" : "from.set(i);",
      "right" : "from.set(i);",
      "info" : "ExpressionStatement[3109-3121]:ExpressionStatement[3213-3225]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[3128-3167]:ExpressionStatement[3232-3271]"
    }, {
      "left" : "assertEquals(i, to.get());",
      "right" : "assertEquals(i, to.get());",
      "info" : "ExpressionStatement[3174-3200]:ExpressionStatement[3278-3304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3364-3397]:Block[3468-3501]"
    }, {
      "left" : "this.value = value;",
      "right" : "this.value = value;",
      "info" : "ExpressionStatement[3372-3391]:ExpressionStatement[3476-3495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3545-3969]:Block[3649-4073]"
    }, {
      "left" : "LongArrayList list = new LongArrayList(longListTestSize);",
      "right" : "LongArrayList list = new LongArrayList(longListTestSize);",
      "info" : "VariableDeclarationStatement[3551-3608]:VariableDeclarationStatement[3655-3712]"
    }, {
      "left" : "for (int i = 0; i < longListTestSize; i++)",
      "right" : "for (int i = 0; i < longListTestSize; i++)",
      "info" : "ForStatement[3613-3682]:ForStatement[3717-3786]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3656-3682]:Block[3760-3786]"
    }, {
      "left" : "list.add(i);",
      "right" : "list.add(i);",
      "info" : "ExpressionStatement[3664-3676]:ExpressionStatement[3768-3780]"
    }, {
      "left" : "LongListKryoWritable from = new LongListKryoWritable(list);",
      "right" : "LongListKryoWritable from = new LongListKryoWritable(list);",
      "info" : "VariableDeclarationStatement[3688-3747]:VariableDeclarationStatement[3792-3851]"
    }, {
      "left" : "LongListKryoWritable to = new LongListKryoWritable(null);",
      "right" : "LongListKryoWritable to = new LongListKryoWritable(null);",
      "info" : "VariableDeclarationStatement[3752-3809]:VariableDeclarationStatement[3856-3913]"
    }, {
      "left" : "for (int i = 0; i < longListTestTimes; i++)",
      "right" : "for (int i = 0; i < longListTestTimes; i++)",
      "info" : "ForStatement[3815-3965]:ForStatement[3919-4069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3859-3965]:Block[3963-4069]"
    }, {
      "left" : "from.value.set((2 * i) % longListTestSize, 0);",
      "right" : "from.value.set((2 * i) % longListTestSize, 0);",
      "info" : "ExpressionStatement[3867-3913]:ExpressionStatement[3971-4017]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[3920-3959]:ExpressionStatement[4024-4063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4033-4496]:Block[4137-4600]"
    }, {
      "left" : "BasicLongArrayList from = new BasicLongArrayList(longListTestSize);",
      "right" : "BasicLongArrayList from = new BasicLongArrayList(longListTestSize);",
      "info" : "VariableDeclarationStatement[4039-4106]:VariableDeclarationStatement[4143-4210]"
    }, {
      "left" : "LongWritable value = new LongWritable();",
      "right" : "LongWritable value = new LongWritable();",
      "info" : "VariableDeclarationStatement[4111-4151]:VariableDeclarationStatement[4215-4255]"
    }, {
      "left" : "for (int i = 0; i < longListTestSize; i++)",
      "right" : "for (int i = 0; i < longListTestSize; i++)",
      "info" : "ForStatement[4156-4249]:ForStatement[4260-4353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4199-4249]:Block[4303-4353]"
    }, {
      "left" : "value.set(i);",
      "right" : "value.set(i);",
      "info" : "ExpressionStatement[4207-4220]:ExpressionStatement[4311-4324]"
    }, {
      "left" : "from.add(value);",
      "right" : "from.add(value);",
      "info" : "ExpressionStatement[4227-4243]:ExpressionStatement[4331-4347]"
    }, {
      "left" : "BasicLongArrayList to = new BasicLongArrayList(longListTestSize);",
      "right" : "BasicLongArrayList to = new BasicLongArrayList(longListTestSize);",
      "info" : "VariableDeclarationStatement[4255-4320]:VariableDeclarationStatement[4359-4424]"
    }, {
      "left" : "value.set(0);",
      "right" : "value.set(0);",
      "info" : "ExpressionStatement[4325-4338]:ExpressionStatement[4429-4442]"
    }, {
      "left" : "for (int i = 0; i < longListTestTimes; i++)",
      "right" : "for (int i = 0; i < longListTestTimes; i++)",
      "info" : "ForStatement[4344-4492]:ForStatement[4448-4596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4388-4492]:Block[4492-4596]"
    }, {
      "left" : "from.set((2 * i) % longListTestSize, value);",
      "right" : "from.set((2 * i) % longListTestSize, value);",
      "info" : "ExpressionStatement[4396-4440]:ExpressionStatement[4500-4544]"
    }, {
      "left" : "WritableUtils.copyInto(from, to, true);",
      "right" : "WritableUtils.copyInto(from, to, true);",
      "info" : "ExpressionStatement[4447-4486]:ExpressionStatement[4551-4590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4688-4751]:Block[4792-4855]"
    }, {
      "left" : "this.value1 = value1;",
      "right" : "this.value1 = value1;",
      "info" : "ExpressionStatement[4696-4717]:ExpressionStatement[4800-4821]"
    }, {
      "left" : "this.value2 = value2;",
      "right" : "this.value2 = value2;",
      "info" : "ExpressionStatement[4724-4745]:ExpressionStatement[4828-4849]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4821-5142]:Block[4925-5246]"
    }, {
      "left" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "right" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "info" : "VariableDeclarationStatement[4827-4876]:VariableDeclarationStatement[4931-4980]"
    }, {
      "left" : "NestedKryoWritable<LongKryoWritable> res = new NestedKryoWritable<>(null, null);",
      "right" : "NestedKryoWritable<LongKryoWritable> res = new NestedKryoWritable<>(null, null);",
      "info" : "VariableDeclarationStatement[4881-4961]:VariableDeclarationStatement[4985-5065]"
    }, {
      "left" : "WritableUtils.copyInto(\n        new NestedKryoWritable<>(inner, inner), res, true);",
      "right" : "WritableUtils.copyInto(\n        new NestedKryoWritable<>(inner, inner), res, true);",
      "info" : "ExpressionStatement[4966-5049]:ExpressionStatement[5070-5153]"
    }, {
      "left" : "assertEquals(5, res.value1.get());",
      "right" : "assertEquals(5, res.value1.get());",
      "info" : "ExpressionStatement[5055-5089]:ExpressionStatement[5159-5193]"
    }, {
      "left" : "Assert.assertTrue(res.value1 == res.value2);",
      "right" : "Assert.assertTrue(res.value1 == res.value2);",
      "info" : "ExpressionStatement[5094-5138]:ExpressionStatement[5198-5242]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5211-5566]:Block[5315-5670]"
    }, {
      "left" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "right" : "LongKryoWritable inner = new LongKryoWritable(5);",
      "info" : "VariableDeclarationStatement[5217-5266]:VariableDeclarationStatement[5321-5370]"
    }, {
      "left" : "NestedKryoWritable wanted = new NestedKryoWritable<>(inner, null);",
      "right" : "NestedKryoWritable wanted = new NestedKryoWritable<>(inner, null);",
      "info" : "VariableDeclarationStatement[5271-5337]:VariableDeclarationStatement[5375-5441]"
    }, {
      "left" : "wanted.value2 = wanted;",
      "right" : "wanted.value2 = wanted;",
      "info" : "ExpressionStatement[5342-5365]:ExpressionStatement[5446-5469]"
    }, {
      "left" : "NestedKryoWritable res = new NestedKryoWritable<>(null, null);",
      "right" : "NestedKryoWritable res = new NestedKryoWritable<>(null, null);",
      "info" : "VariableDeclarationStatement[5371-5433]:VariableDeclarationStatement[5475-5537]"
    }, {
      "left" : "WritableUtils.copyInto(wanted, res, true);",
      "right" : "WritableUtils.copyInto(wanted, res, true);",
      "info" : "ExpressionStatement[5438-5480]:ExpressionStatement[5542-5584]"
    }, {
      "left" : "assertEquals(5, res.value1.get());",
      "right" : "assertEquals(5, res.value1.get());",
      "info" : "ExpressionStatement[5486-5520]:ExpressionStatement[5590-5624]"
    }, {
      "left" : "Assert.assertTrue(res == res.value2);",
      "right" : "Assert.assertTrue(res == res.value2);",
      "info" : "ExpressionStatement[5525-5562]:ExpressionStatement[5629-5666]"
    } ]
  },
  "interFileMappings" : { }
}