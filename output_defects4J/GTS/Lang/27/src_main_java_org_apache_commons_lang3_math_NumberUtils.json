{
  "matchedElements" : [
 {
    "left" : "class : NumberUtils",
    "right" : "class : NumberUtils",
    "info" : "TypeDeclaration[950-47761]:TypeDeclaration[950-47935]"
  }, {
    "left" : "LONG_ZERO",
    "right" : "LONG_ZERO",
    "info" : "FieldDeclaration[1486-1580]:FieldDeclaration[1486-1580]"
  }, {
    "left" : "LONG_ONE",
    "right" : "LONG_ONE",
    "info" : "FieldDeclaration[1585-1677]:FieldDeclaration[1585-1677]"
  }, {
    "left" : "LONG_MINUS_ONE",
    "right" : "LONG_MINUS_ONE",
    "info" : "FieldDeclaration[1682-1787]:FieldDeclaration[1682-1787]"
  }, {
    "left" : "INTEGER_ZERO",
    "right" : "INTEGER_ZERO",
    "info" : "FieldDeclaration[1792-1897]:FieldDeclaration[1792-1897]"
  }, {
    "left" : "INTEGER_ONE",
    "right" : "INTEGER_ONE",
    "info" : "FieldDeclaration[1902-2005]:FieldDeclaration[1902-2005]"
  }, {
    "left" : "INTEGER_MINUS_ONE",
    "right" : "INTEGER_MINUS_ONE",
    "info" : "FieldDeclaration[2010-2126]:FieldDeclaration[2010-2126]"
  }, {
    "left" : "SHORT_ZERO",
    "right" : "SHORT_ZERO",
    "info" : "FieldDeclaration[2131-2236]:FieldDeclaration[2131-2236]"
  }, {
    "left" : "SHORT_ONE",
    "right" : "SHORT_ONE",
    "info" : "FieldDeclaration[2241-2344]:FieldDeclaration[2241-2344]"
  }, {
    "left" : "SHORT_MINUS_ONE",
    "right" : "SHORT_MINUS_ONE",
    "info" : "FieldDeclaration[2349-2465]:FieldDeclaration[2349-2465]"
  }, {
    "left" : "BYTE_ZERO",
    "right" : "BYTE_ZERO",
    "info" : "FieldDeclaration[2470-2574]:FieldDeclaration[2470-2574]"
  }, {
    "left" : "BYTE_ONE",
    "right" : "BYTE_ONE",
    "info" : "FieldDeclaration[2579-2681]:FieldDeclaration[2579-2681]"
  }, {
    "left" : "BYTE_MINUS_ONE",
    "right" : "BYTE_MINUS_ONE",
    "info" : "FieldDeclaration[2686-2801]:FieldDeclaration[2686-2801]"
  }, {
    "left" : "DOUBLE_ZERO",
    "right" : "DOUBLE_ZERO",
    "info" : "FieldDeclaration[2806-2910]:FieldDeclaration[2806-2910]"
  }, {
    "left" : "DOUBLE_ONE",
    "right" : "DOUBLE_ONE",
    "info" : "FieldDeclaration[2915-3017]:FieldDeclaration[2915-3017]"
  }, {
    "left" : "DOUBLE_MINUS_ONE",
    "right" : "DOUBLE_MINUS_ONE",
    "info" : "FieldDeclaration[3022-3137]:FieldDeclaration[3022-3137]"
  }, {
    "left" : "FLOAT_ZERO",
    "right" : "FLOAT_ZERO",
    "info" : "FieldDeclaration[3142-3242]:FieldDeclaration[3142-3242]"
  }, {
    "left" : "FLOAT_ONE",
    "right" : "FLOAT_ONE",
    "info" : "FieldDeclaration[3247-3345]:FieldDeclaration[3247-3345]"
  }, {
    "left" : "FLOAT_MINUS_ONE",
    "right" : "FLOAT_MINUS_ONE",
    "info" : "FieldDeclaration[3350-3461]:FieldDeclaration[3350-3461]"
  }, {
    "left" : "public NumberUtils()",
    "right" : "public NumberUtils()",
    "info" : "MethodDeclaration[3467-3826]:MethodDeclaration[3467-3826]"
  }, {
    "left" : "public toInt(str ) : int",
    "right" : "public toInt(str ) : int",
    "info" : "MethodDeclaration[3910-4538]:MethodDeclaration[3910-4538]"
  }, {
    "left" : "public toInt(str , defaultValue int) : int",
    "right" : "public toInt(str , defaultValue int) : int",
    "info" : "MethodDeclaration[4544-5413]:MethodDeclaration[4544-5413]"
  }, {
    "left" : "public toLong(str ) : long",
    "right" : "public toLong(str ) : long",
    "info" : "MethodDeclaration[5419-6055]:MethodDeclaration[5419-6055]"
  }, {
    "left" : "public toLong(str , defaultValue long) : long",
    "right" : "public toLong(str , defaultValue long) : long",
    "info" : "MethodDeclaration[6061-6942]:MethodDeclaration[6061-6942]"
  }, {
    "left" : "public toFloat(str ) : float",
    "right" : "public toFloat(str ) : float",
    "info" : "MethodDeclaration[6948-7645]:MethodDeclaration[6948-7645]"
  }, {
    "left" : "public toFloat(str , defaultValue float) : float",
    "right" : "public toFloat(str , defaultValue float) : float",
    "info" : "MethodDeclaration[7651-8593]:MethodDeclaration[7651-8593]"
  }, {
    "left" : "public toDouble(str ) : double",
    "right" : "public toDouble(str ) : double",
    "info" : "MethodDeclaration[8599-9304]:MethodDeclaration[8599-9304]"
  }, {
    "left" : "public toDouble(str , defaultValue double) : double",
    "right" : "public toDouble(str , defaultValue double) : double",
    "info" : "MethodDeclaration[9310-10257]:MethodDeclaration[9310-10257]"
  }, {
    "left" : "public toByte(str ) : byte",
    "right" : "public toByte(str ) : byte",
    "info" : "MethodDeclaration[10343-10985]:MethodDeclaration[10343-10985]"
  }, {
    "left" : "public toByte(str , defaultValue byte) : byte",
    "right" : "public toByte(str , defaultValue byte) : byte",
    "info" : "MethodDeclaration[10991-11865]:MethodDeclaration[10991-11865]"
  }, {
    "left" : "public toShort(str ) : short",
    "right" : "public toShort(str ) : short",
    "info" : "MethodDeclaration[11871-12522]:MethodDeclaration[11871-12522]"
  }, {
    "left" : "public toShort(str , defaultValue short) : short",
    "right" : "public toShort(str , defaultValue short) : short",
    "info" : "MethodDeclaration[12528-13413]:MethodDeclaration[12528-13413]"
  }, {
    "left" : "public createNumber(str ) : ",
    "right" : "public createNumber(str ) : ",
    "info" : "MethodDeclaration[14658-21698]:MethodDeclaration[14658-21872]"
  }, {
    "left" : "private isAllZeros(str ) : boolean",
    "right" : "private isAllZeros(str ) : boolean",
    "info" : "MethodDeclaration[21704-22266]:MethodDeclaration[21878-22440]"
  }, {
    "left" : "public createFloat(str ) : ",
    "right" : "public createFloat(str ) : ",
    "info" : "MethodDeclaration[22350-22853]:MethodDeclaration[22524-23027]"
  }, {
    "left" : "public createDouble(str ) : ",
    "right" : "public createDouble(str ) : ",
    "info" : "MethodDeclaration[22859-23367]:MethodDeclaration[23033-23541]"
  }, {
    "left" : "public createInteger(str ) : ",
    "right" : "public createInteger(str ) : ",
    "info" : "MethodDeclaration[23373-23995]:MethodDeclaration[23547-24169]"
  }, {
    "left" : "public createLong(str ) : ",
    "right" : "public createLong(str ) : ",
    "info" : "MethodDeclaration[24001-24499]:MethodDeclaration[24175-24673]"
  }, {
    "left" : "public createBigInteger(str ) : ",
    "right" : "public createBigInteger(str ) : ",
    "info" : "MethodDeclaration[24505-25029]:MethodDeclaration[24679-25203]"
  }, {
    "left" : "public createBigDecimal(str ) : ",
    "right" : "public createBigDecimal(str ) : ",
    "info" : "MethodDeclaration[25035-25769]:MethodDeclaration[25209-25943]"
  }, {
    "left" : "public min(array ) : long",
    "right" : "public min(array ) : long",
    "info" : "MethodDeclaration[25870-26737]:MethodDeclaration[26044-26911]"
  }, {
    "left" : "public min(array ) : int",
    "right" : "public min(array ) : int",
    "info" : "MethodDeclaration[26743-27607]:MethodDeclaration[26917-27781]"
  }, {
    "left" : "public min(array ) : short",
    "right" : "public min(array ) : short",
    "info" : "MethodDeclaration[27613-28483]:MethodDeclaration[27787-28657]"
  }, {
    "left" : "public min(array ) : byte",
    "right" : "public min(array ) : byte",
    "info" : "MethodDeclaration[28489-29356]:MethodDeclaration[28663-29530]"
  }, {
    "left" : "public min(array ) : double",
    "right" : "public min(array ) : double",
    "info" : "MethodDeclaration[29363-30439]:MethodDeclaration[29537-30613]"
  }, {
    "left" : "public min(array ) : float",
    "right" : "public min(array ) : float",
    "info" : "MethodDeclaration[30445-31515]:MethodDeclaration[30619-31689]"
  }, {
    "left" : "public max(array ) : long",
    "right" : "public max(array ) : long",
    "info" : "MethodDeclaration[31616-32475]:MethodDeclaration[31790-32649]"
  }, {
    "left" : "public max(array ) : int",
    "right" : "public max(array ) : int",
    "info" : "MethodDeclaration[32481-33345]:MethodDeclaration[32655-33519]"
  }, {
    "left" : "public max(array ) : short",
    "right" : "public max(array ) : short",
    "info" : "MethodDeclaration[33351-34221]:MethodDeclaration[33525-34395]"
  }, {
    "left" : "public max(array ) : byte",
    "right" : "public max(array ) : byte",
    "info" : "MethodDeclaration[34227-35094]:MethodDeclaration[34401-35268]"
  }, {
    "left" : "public max(array ) : double",
    "right" : "public max(array ) : double",
    "info" : "MethodDeclaration[35100-36175]:MethodDeclaration[35274-36349]"
  }, {
    "left" : "public max(array ) : float",
    "right" : "public max(array ) : float",
    "info" : "MethodDeclaration[36181-37243]:MethodDeclaration[36355-37417]"
  }, {
    "left" : "public min(a long, b long, c long) : long",
    "right" : "public min(a long, b long, c long) : long",
    "info" : "MethodDeclaration[37351-37731]:MethodDeclaration[37525-37905]"
  }, {
    "left" : "public min(a int, b int, c int) : int",
    "right" : "public min(a int, b int, c int) : int",
    "info" : "MethodDeclaration[37737-38112]:MethodDeclaration[37911-38286]"
  }, {
    "left" : "public min(a short, b short, c short) : short",
    "right" : "public min(a short, b short, c short) : short",
    "info" : "MethodDeclaration[38118-38503]:MethodDeclaration[38292-38677]"
  }, {
    "left" : "public min(a byte, b byte, c byte) : byte",
    "right" : "public min(a byte, b byte, c byte) : byte",
    "info" : "MethodDeclaration[38509-38889]:MethodDeclaration[38683-39063]"
  }, {
    "left" : "public min(a double, b double, c double) : double",
    "right" : "public min(a double, b double, c double) : double",
    "info" : "MethodDeclaration[38895-39437]:MethodDeclaration[39069-39611]"
  }, {
    "left" : "public min(a float, b float, c float) : float",
    "right" : "public min(a float, b float, c float) : float",
    "info" : "MethodDeclaration[39443-39976]:MethodDeclaration[39617-40150]"
  }, {
    "left" : "public max(a long, b long, c long) : long",
    "right" : "public max(a long, b long, c long) : long",
    "info" : "MethodDeclaration[40079-40458]:MethodDeclaration[40253-40632]"
  }, {
    "left" : "public max(a int, b int, c int) : int",
    "right" : "public max(a int, b int, c int) : int",
    "info" : "MethodDeclaration[40464-40838]:MethodDeclaration[40638-41012]"
  }, {
    "left" : "public max(a short, b short, c short) : short",
    "right" : "public max(a short, b short, c short) : short",
    "info" : "MethodDeclaration[40844-41228]:MethodDeclaration[41018-41402]"
  }, {
    "left" : "public max(a byte, b byte, c byte) : byte",
    "right" : "public max(a byte, b byte, c byte) : byte",
    "info" : "MethodDeclaration[41234-41613]:MethodDeclaration[41408-41787]"
  }, {
    "left" : "public max(a double, b double, c double) : double",
    "right" : "public max(a double, b double, c double) : double",
    "info" : "MethodDeclaration[41619-42159]:MethodDeclaration[41793-42333]"
  }, {
    "left" : "public max(a float, b float, c float) : float",
    "right" : "public max(a float, b float, c float) : float",
    "info" : "MethodDeclaration[42165-42697]:MethodDeclaration[42339-42871]"
  }, {
    "left" : "public isDigits(str ) : boolean",
    "right" : "public isDigits(str ) : boolean",
    "info" : "MethodDeclaration[42781-43416]:MethodDeclaration[42955-43590]"
  }, {
    "left" : "public isNumber(str ) : boolean",
    "right" : "public isNumber(str ) : boolean",
    "info" : "MethodDeclaration[43422-47754]:MethodDeclaration[43596-47928]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1450-1456]:Modifier[1450-1456]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1457-1462]:TYPE_DECLARATION_KIND[1457-1462]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3781-3787]:Modifier[3781-3787]"
  }, {
    "left" : "NumberUtils",
    "right" : "NumberUtils",
    "info" : "SimpleName[3788-3799]:SimpleName[3788-3799]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3802-3826]:Block[3802-3826]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[3812-3820]:SuperConstructorInvocation[3812-3820]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4465-4471]:Modifier[4465-4471]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4472-4478]:Modifier[4472-4478]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4479-4482]:PrimitiveType[4479-4482]"
  }, {
    "left" : "toInt",
    "right" : "toInt",
    "info" : "SimpleName[4483-4488]:SimpleName[4483-4488]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[4489-4499]:SingleVariableDeclaration[4489-4499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4501-4538]:Block[4501-4538]"
  }, {
    "left" : "return toInt(str, 0);",
    "right" : "return toInt(str, 0);",
    "info" : "ReturnStatement[4511-4532]:ReturnStatement[4511-4532]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5138-5144]:Modifier[5138-5144]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5145-5151]:Modifier[5145-5151]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[5152-5155]:PrimitiveType[5152-5155]"
  }, {
    "left" : "toInt",
    "right" : "toInt",
    "info" : "SimpleName[5156-5161]:SimpleName[5156-5161]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[5162-5172]:SingleVariableDeclaration[5162-5172]"
  }, {
    "left" : "int defaultValue",
    "right" : "int defaultValue",
    "info" : "SingleVariableDeclaration[5174-5190]:SingleVariableDeclaration[5174-5190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5192-5413]:Block[5192-5413]"
  }, {
    "left" : "if(str == null)",
    "right" : "if(str == null)",
    "info" : "IfStatement[5202-5262]:IfStatement[5202-5262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5218-5262]:Block[5218-5262]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[5232-5252]:ReturnStatement[5232-5252]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[5271-5407]:TryStatement[5271-5407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5275-5328]:Block[5275-5328]"
  }, {
    "left" : "return Integer.parseInt(str);",
    "right" : "return Integer.parseInt(str);",
    "info" : "ReturnStatement[5289-5318]:ReturnStatement[5289-5318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5363-5407]:Block[5363-5407]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[5377-5397]:ReturnStatement[5377-5397]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5978-5984]:Modifier[5978-5984]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5985-5991]:Modifier[5985-5991]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[5992-5996]:PrimitiveType[5992-5996]"
  }, {
    "left" : "toLong",
    "right" : "toLong",
    "info" : "SimpleName[5997-6003]:SimpleName[5997-6003]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[6004-6014]:SingleVariableDeclaration[6004-6014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6016-6055]:Block[6016-6055]"
  }, {
    "left" : "return toLong(str, 0L);",
    "right" : "return toLong(str, 0L);",
    "info" : "ReturnStatement[6026-6049]:ReturnStatement[6026-6049]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6665-6671]:Modifier[6665-6671]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6672-6678]:Modifier[6672-6678]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[6679-6683]:PrimitiveType[6679-6683]"
  }, {
    "left" : "toLong",
    "right" : "toLong",
    "info" : "SimpleName[6684-6690]:SimpleName[6684-6690]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[6691-6701]:SingleVariableDeclaration[6691-6701]"
  }, {
    "left" : "long defaultValue",
    "right" : "long defaultValue",
    "info" : "SingleVariableDeclaration[6703-6720]:SingleVariableDeclaration[6703-6720]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6722-6942]:Block[6722-6942]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[6732-6793]:IfStatement[6732-6793]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6749-6793]:Block[6749-6793]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[6763-6783]:ReturnStatement[6763-6783]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[6802-6936]:TryStatement[6802-6936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6806-6857]:Block[6806-6857]"
  }, {
    "left" : "return Long.parseLong(str);",
    "right" : "return Long.parseLong(str);",
    "info" : "ReturnStatement[6820-6847]:ReturnStatement[6820-6847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6892-6936]:Block[6892-6936]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[6906-6926]:ReturnStatement[6906-6926]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7563-7569]:Modifier[7563-7569]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7570-7576]:Modifier[7570-7576]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[7577-7582]:PrimitiveType[7577-7582]"
  }, {
    "left" : "toFloat",
    "right" : "toFloat",
    "info" : "SimpleName[7583-7590]:SimpleName[7583-7590]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[7591-7601]:SingleVariableDeclaration[7591-7601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7603-7645]:Block[7603-7645]"
  }, {
    "left" : "return toFloat(str, 0.0f);",
    "right" : "return toFloat(str, 0.0f);",
    "info" : "ReturnStatement[7613-7639]:ReturnStatement[7613-7639]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8322-8328]:Modifier[8322-8328]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8329-8335]:Modifier[8329-8335]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[8336-8341]:PrimitiveType[8336-8341]"
  }, {
    "left" : "toFloat",
    "right" : "toFloat",
    "info" : "SimpleName[8342-8349]:SimpleName[8342-8349]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[8350-8360]:SingleVariableDeclaration[8350-8360]"
  }, {
    "left" : "float defaultValue",
    "right" : "float defaultValue",
    "info" : "SingleVariableDeclaration[8362-8380]:SingleVariableDeclaration[8362-8380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8382-8593]:Block[8382-8593]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[8390-8447]:IfStatement[8390-8447]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8407-8447]:Block[8407-8447]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[8419-8439]:ReturnStatement[8419-8439]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[8459-8587]:TryStatement[8459-8587]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8463-8512]:Block[8463-8512]"
  }, {
    "left" : "return Float.parseFloat(str);",
    "right" : "return Float.parseFloat(str);",
    "info" : "ReturnStatement[8475-8504]:ReturnStatement[8475-8504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8547-8587]:Block[8547-8587]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[8559-8579]:ReturnStatement[8559-8579]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9219-9225]:Modifier[9219-9225]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9226-9232]:Modifier[9226-9232]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[9233-9239]:PrimitiveType[9233-9239]"
  }, {
    "left" : "toDouble",
    "right" : "toDouble",
    "info" : "SimpleName[9240-9248]:SimpleName[9240-9248]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[9249-9259]:SingleVariableDeclaration[9249-9259]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9261-9304]:Block[9261-9304]"
  }, {
    "left" : "return toDouble(str, 0.0d);",
    "right" : "return toDouble(str, 0.0d);",
    "info" : "ReturnStatement[9271-9298]:ReturnStatement[9271-9298]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9986-9992]:Modifier[9986-9992]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9993-9999]:Modifier[9993-9999]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[10000-10006]:PrimitiveType[10000-10006]"
  }, {
    "left" : "toDouble",
    "right" : "toDouble",
    "info" : "SimpleName[10007-10015]:SimpleName[10007-10015]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[10016-10026]:SingleVariableDeclaration[10016-10026]"
  }, {
    "left" : "double defaultValue",
    "right" : "double defaultValue",
    "info" : "SingleVariableDeclaration[10028-10047]:SingleVariableDeclaration[10028-10047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10049-10257]:Block[10049-10257]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[10057-10114]:IfStatement[10057-10114]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10074-10114]:Block[10074-10114]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[10086-10106]:ReturnStatement[10086-10106]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[10121-10251]:TryStatement[10121-10251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10125-10176]:Block[10125-10176]"
  }, {
    "left" : "return Double.parseDouble(str);",
    "right" : "return Double.parseDouble(str);",
    "info" : "ReturnStatement[10137-10168]:ReturnStatement[10137-10168]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10211-10251]:Block[10211-10251]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[10223-10243]:ReturnStatement[10223-10243]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10902-10908]:Modifier[10902-10908]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10909-10915]:Modifier[10909-10915]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[10916-10920]:PrimitiveType[10916-10920]"
  }, {
    "left" : "toByte",
    "right" : "toByte",
    "info" : "SimpleName[10921-10927]:SimpleName[10921-10927]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[10928-10938]:SingleVariableDeclaration[10928-10938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10940-10985]:Block[10940-10985]"
  }, {
    "left" : "return toByte(str, (byte) 0);",
    "right" : "return toByte(str, (byte) 0);",
    "info" : "ReturnStatement[10950-10979]:ReturnStatement[10950-10979]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11589-11595]:Modifier[11589-11595]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11596-11602]:Modifier[11596-11602]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[11603-11607]:PrimitiveType[11603-11607]"
  }, {
    "left" : "toByte",
    "right" : "toByte",
    "info" : "SimpleName[11608-11614]:SimpleName[11608-11614]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[11615-11625]:SingleVariableDeclaration[11615-11625]"
  }, {
    "left" : "byte defaultValue",
    "right" : "byte defaultValue",
    "info" : "SingleVariableDeclaration[11627-11644]:SingleVariableDeclaration[11627-11644]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11646-11865]:Block[11646-11865]"
  }, {
    "left" : "if(str == null)",
    "right" : "if(str == null)",
    "info" : "IfStatement[11656-11716]:IfStatement[11656-11716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11672-11716]:Block[11672-11716]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[11686-11706]:ReturnStatement[11686-11706]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11725-11859]:TryStatement[11725-11859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11729-11780]:Block[11729-11780]"
  }, {
    "left" : "return Byte.parseByte(str);",
    "right" : "return Byte.parseByte(str);",
    "info" : "ReturnStatement[11743-11770]:ReturnStatement[11743-11770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11815-11859]:Block[11815-11859]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[11829-11849]:ReturnStatement[11829-11849]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12435-12441]:Modifier[12435-12441]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12442-12448]:Modifier[12442-12448]"
  }, {
    "left" : "short",
    "right" : "short",
    "info" : "PrimitiveType[12449-12454]:PrimitiveType[12449-12454]"
  }, {
    "left" : "toShort",
    "right" : "toShort",
    "info" : "SimpleName[12455-12462]:SimpleName[12455-12462]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[12463-12473]:SingleVariableDeclaration[12463-12473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12475-12522]:Block[12475-12522]"
  }, {
    "left" : "return toShort(str, (short) 0);",
    "right" : "return toShort(str, (short) 0);",
    "info" : "ReturnStatement[12485-12516]:ReturnStatement[12485-12516]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13132-13138]:Modifier[13132-13138]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13139-13145]:Modifier[13139-13145]"
  }, {
    "left" : "short",
    "right" : "short",
    "info" : "PrimitiveType[13146-13151]:PrimitiveType[13146-13151]"
  }, {
    "left" : "toShort",
    "right" : "toShort",
    "info" : "SimpleName[13152-13159]:SimpleName[13152-13159]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[13160-13170]:SingleVariableDeclaration[13160-13170]"
  }, {
    "left" : "short defaultValue",
    "right" : "short defaultValue",
    "info" : "SingleVariableDeclaration[13172-13190]:SingleVariableDeclaration[13172-13190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13192-13413]:Block[13192-13413]"
  }, {
    "left" : "if(str == null)",
    "right" : "if(str == null)",
    "info" : "IfStatement[13202-13262]:IfStatement[13202-13262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13218-13262]:Block[13218-13262]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[13232-13252]:ReturnStatement[13232-13252]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[13271-13407]:TryStatement[13271-13407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13275-13328]:Block[13275-13328]"
  }, {
    "left" : "return Short.parseShort(str);",
    "right" : "return Short.parseShort(str);",
    "info" : "ReturnStatement[13289-13318]:ReturnStatement[13289-13318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13363-13407]:Block[13363-13407]"
  }, {
    "left" : "return defaultValue;",
    "right" : "return defaultValue;",
    "info" : "ReturnStatement[13377-13397]:ReturnStatement[13377-13397]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15919-15925]:Modifier[15919-15925]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15926-15932]:Modifier[15926-15932]"
  }, {
    "left" : "Number",
    "right" : "Number",
    "info" : "SimpleType[15933-15939]:SimpleType[15933-15939]"
  }, {
    "left" : "createNumber",
    "right" : "createNumber",
    "info" : "SimpleName[15940-15952]:SimpleName[15940-15952]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[15953-15963]:SingleVariableDeclaration[15953-15963]"
  }, {
    "left" : "NumberFormatException",
    "right" : "NumberFormatException",
    "info" : "SimpleType[15972-15993]:SimpleType[15972-15993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15994-21698]:Block[15994-21872]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[16004-16057]:IfStatement[16004-16057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16021-16057]:Block[16021-16057]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[16035-16047]:ReturnStatement[16035-16047]"
  }, {
    "left" : "if (StringUtils.isBlank(str))",
    "right" : "if (StringUtils.isBlank(str))",
    "info" : "IfStatement[16066-16192]:IfStatement[16066-16192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16096-16192]:Block[16096-16192]"
  }, {
    "left" : "throw new NumberFormatException(\"A blank string is not a valid number\");",
    "right" : "throw new NumberFormatException(\"A blank string is not a valid number\");",
    "info" : "ThrowStatement[16110-16182]:ThrowStatement[16110-16182]"
  }, {
    "left" : "if (str.startsWith(\"--\"))",
    "right" : "if (str.startsWith(\"--\"))",
    "info" : "IfStatement[16203-16512]:IfStatement[16203-16512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16229-16512]:Block[16229-16512]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[16490-16502]:ReturnStatement[16490-16502]"
  }, {
    "left" : "if (str.startsWith(\"0x\") || str.startsWith(\"-0x\"))",
    "right" : "if (str.startsWith(\"0x\") || str.startsWith(\"-0x\"))",
    "info" : "IfStatement[16521-16622]:IfStatement[16521-16622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16572-16622]:Block[16572-16622]"
  }, {
    "left" : "return createInteger(str);",
    "right" : "return createInteger(str);",
    "info" : "ReturnStatement[16586-16612]:ReturnStatement[16586-16612]"
  }, {
    "left" : "char lastChar = str.charAt(str.length() - 1);",
    "right" : "char lastChar = str.charAt(str.length() - 1);",
    "info" : "VariableDeclarationStatement[16634-16679]:VariableDeclarationStatement[16634-16679]"
  }, {
    "left" : "String mant;",
    "right" : "String mant;",
    "info" : "VariableDeclarationStatement[16688-16700]:VariableDeclarationStatement[16688-16700]"
  }, {
    "left" : "String dec;",
    "right" : "String dec;",
    "info" : "VariableDeclarationStatement[16709-16720]:VariableDeclarationStatement[16709-16720]"
  }, {
    "left" : "String exp;",
    "right" : "String exp;",
    "info" : "VariableDeclarationStatement[16729-16740]:VariableDeclarationStatement[16729-16740]"
  }, {
    "left" : "int decPos = str.indexOf('.');",
    "right" : "int decPos = str.indexOf('.');",
    "info" : "VariableDeclarationStatement[16749-16779]:VariableDeclarationStatement[16749-16779]"
  }, {
    "left" : "int expPos = str.indexOf('e') + str.indexOf('E') + 1;",
    "right" : "int expPos = str.indexOf('e') + str.indexOf('E') + 1;",
    "info" : "VariableDeclarationStatement[16788-16841]:VariableDeclarationStatement[16788-16841]"
  }, {
    "left" : "if (decPos > -1)",
    "right" : "if (decPos > -1)",
    "info" : "IfStatement[16851-17424]:IfStatement[16851-17598]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16868-17240]:Block[16868-17265]"
  }, {
    "left" : "if (expPos > -1)",
    "right" : "if (expPos > -1)",
    "info" : "IfStatement[16883-17185]:IfStatement[16883-17210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16900-17115]:Block[16900-17140]"
  }, {
    "left" : "if (expPos < decPos)",
    "right" : "if (expPos < decPos || expPos > str.length())",
    "info" : "IfStatement[16918-17044]:IfStatement[16918-17069]"
  }, {
    "left" : "expPos < decPos",
    "right" : "expPos < decPos",
    "info" : "InfixExpression[16922-16937]:InfixExpression[16922-16937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16939-17044]:Block[16964-17069]"
  }, {
    "left" : "throw new NumberFormatException(str + \" is not a valid number.\");",
    "right" : "throw new NumberFormatException(str + \" is not a valid number.\");",
    "info" : "ThrowStatement[16961-17026]:ThrowStatement[16986-17051]"
  }, {
    "left" : "dec = str.substring(decPos + 1, expPos);",
    "right" : "dec = str.substring(decPos + 1, expPos);",
    "info" : "ExpressionStatement[17061-17101]:ExpressionStatement[17086-17126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17121-17185]:Block[17146-17210]"
  }, {
    "left" : "dec = str.substring(decPos + 1);",
    "right" : "dec = str.substring(decPos + 1);",
    "info" : "ExpressionStatement[17139-17171]:ExpressionStatement[17164-17196]"
  }, {
    "left" : "mant = str.substring(0, decPos);",
    "right" : "mant = str.substring(0, decPos);",
    "info" : "ExpressionStatement[17198-17230]:ExpressionStatement[17223-17255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17246-17424]:Block[17271-17598]"
  }, {
    "left" : "if (expPos > -1)",
    "right" : "if (expPos > -1)",
    "info" : "IfStatement[17260-17390]:IfStatement[17285-17564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17277-17341]:Block[17302-17515]"
  }, {
    "left" : "mant = str.substring(0, expPos);",
    "right" : "mant = str.substring(0, expPos);",
    "info" : "ExpressionStatement[17295-17327]:ExpressionStatement[17469-17501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17347-17390]:Block[17521-17564]"
  }, {
    "left" : "mant = str;",
    "right" : "mant = str;",
    "info" : "ExpressionStatement[17365-17376]:ExpressionStatement[17539-17550]"
  }, {
    "left" : "dec = null;",
    "right" : "dec = null;",
    "info" : "ExpressionStatement[17403-17414]:ExpressionStatement[17577-17588]"
  }, {
    "left" : "if (!Character.isDigit(lastChar) && lastChar != '.')",
    "right" : "if (!Character.isDigit(lastChar) && lastChar != '.')",
    "info" : "IfStatement[17433-21692]:IfStatement[17607-21866]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17486-19997]:Block[17660-20171]"
  }, {
    "left" : "if (expPos > -1 && expPos < str.length() - 1)",
    "right" : "if (expPos > -1 && expPos < str.length() - 1)",
    "info" : "IfStatement[17500-17677]:IfStatement[17674-17851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17546-17628]:Block[17720-17802]"
  }, {
    "left" : "exp = str.substring(expPos + 1, str.length() - 1);",
    "right" : "exp = str.substring(expPos + 1, str.length() - 1);",
    "info" : "ExpressionStatement[17564-17614]:ExpressionStatement[17738-17788]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17634-17677]:Block[17808-17851]"
  }, {
    "left" : "exp = null;",
    "right" : "exp = null;",
    "info" : "ExpressionStatement[17652-17663]:ExpressionStatement[17826-17837]"
  }, {
    "left" : "String numeric = str.substring(0, str.length() - 1);",
    "right" : "String numeric = str.substring(0, str.length() - 1);",
    "info" : "VariableDeclarationStatement[17733-17785]:VariableDeclarationStatement[17907-17959]"
  }, {
    "left" : "boolean allZeros = isAllZeros(mant) && isAllZeros(exp);",
    "right" : "boolean allZeros = isAllZeros(mant) && isAllZeros(exp);",
    "info" : "VariableDeclarationStatement[17798-17853]:VariableDeclarationStatement[17972-18027]"
  }, {
    "left" : "switch (lastChar) {\n                case 'l' :\n                case 'L' :\n                    if (dec == null\n                        && exp == null\n                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n                        try {\n                            return createLong(numeric);\n                        } catch (NumberFormatException nfe) {\n                            //Too big for a long\n                        }\n                        return createBigInteger(numeric);\n\n                    }\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n                case 'f' :\n                case 'F' :\n                    try {\n                        Float f = NumberUtils.createFloat(numeric);\n                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                            //If it's too big for a float or the float value = 0 and the string\n                            //has non-zeros in it, then float does not have the precision we want\n                            return f;\n                        }\n\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                case 'd' :\n                case 'D' :\n                    try {\n                        Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n                            return d;\n                        }\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad number\n                    }\n                    try {\n                        return createBigDecimal(numeric);\n                    } catch (NumberFormatException e) {\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                default :\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n\n            }",
    "right" : "switch (lastChar) {\n                case 'l' :\n                case 'L' :\n                    if (dec == null\n                        && exp == null\n                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n                        try {\n                            return createLong(numeric);\n                        } catch (NumberFormatException nfe) {\n                            //Too big for a long\n                        }\n                        return createBigInteger(numeric);\n\n                    }\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n                case 'f' :\n                case 'F' :\n                    try {\n                        Float f = NumberUtils.createFloat(numeric);\n                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                            //If it's too big for a float or the float value = 0 and the string\n                            //has non-zeros in it, then float does not have the precision we want\n                            return f;\n                        }\n\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                case 'd' :\n                case 'D' :\n                    try {\n                        Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n                            return d;\n                        }\n                    } catch (NumberFormatException nfe) {\n                        // ignore the bad number\n                    }\n                    try {\n                        return createBigDecimal(numeric);\n                    } catch (NumberFormatException e) {\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                default :\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n\n            }",
    "info" : "SwitchStatement[17866-19987]:SwitchStatement[18040-20161]"
  }, {
    "left" : "case 'l' :",
    "right" : "case 'l' :",
    "info" : "SwitchCase[17902-17912]:SwitchCase[18076-18086]"
  }, {
    "left" : "case 'L' :",
    "right" : "case 'L' :",
    "info" : "SwitchCase[17929-17939]:SwitchCase[18103-18113]"
  }, {
    "left" : "if (dec == null\n                        && exp == null\n                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)))",
    "right" : "if (dec == null\n                        && exp == null\n                        && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)))",
    "info" : "IfStatement[17960-18430]:IfStatement[18134-18604]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18125-18430]:Block[18299-18604]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[18151-18349]:TryStatement[18325-18523]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18155-18238]:Block[18329-18412]"
  }, {
    "left" : "return createLong(numeric);",
    "right" : "return createLong(numeric);",
    "info" : "ReturnStatement[18185-18212]:ReturnStatement[18359-18386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18273-18349]:Block[18447-18523]"
  }, {
    "left" : "return createBigInteger(numeric);",
    "right" : "return createBigInteger(numeric);",
    "info" : "ReturnStatement[18374-18407]:ReturnStatement[18548-18581]"
  }, {
    "left" : "throw new NumberFormatException(str + \" is not a valid number.\");",
    "right" : "throw new NumberFormatException(str + \" is not a valid number.\");",
    "info" : "ThrowStatement[18451-18516]:ThrowStatement[18625-18690]"
  }, {
    "left" : "case 'f' :",
    "right" : "case 'f' :",
    "info" : "SwitchCase[18533-18543]:SwitchCase[18707-18717]"
  }, {
    "left" : "case 'F' :",
    "right" : "case 'F' :",
    "info" : "SwitchCase[18560-18570]:SwitchCase[18734-18744]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[18591-19142]:TryStatement[18765-19316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18595-19035]:Block[18769-19209]"
  }, {
    "left" : "Float f = NumberUtils.createFloat(numeric);",
    "right" : "Float f = NumberUtils.createFloat(numeric);",
    "info" : "VariableDeclarationStatement[18621-18664]:VariableDeclarationStatement[18795-18838]"
  }, {
    "left" : "if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros)))",
    "right" : "if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros)))",
    "info" : "IfStatement[18689-19012]:IfStatement[18863-19186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18753-19012]:Block[18927-19186]"
  }, {
    "left" : "return f;",
    "right" : "return f;",
    "info" : "ReturnStatement[18977-18986]:ReturnStatement[19151-19160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19070-19142]:Block[19244-19316]"
  }, {
    "left" : "case 'd' :",
    "right" : "case 'd' :",
    "info" : "SwitchCase[19196-19206]:SwitchCase[19370-19380]"
  }, {
    "left" : "case 'D' :",
    "right" : "case 'D' :",
    "info" : "SwitchCase[19223-19233]:SwitchCase[19397-19407]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[19254-19612]:TryStatement[19428-19786]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19258-19505]:Block[19432-19679]"
  }, {
    "left" : "Double d = NumberUtils.createDouble(numeric);",
    "right" : "Double d = NumberUtils.createDouble(numeric);",
    "info" : "VariableDeclarationStatement[19284-19329]:VariableDeclarationStatement[19458-19503]"
  }, {
    "left" : "if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros)))",
    "right" : "if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros)))",
    "info" : "IfStatement[19354-19483]:IfStatement[19528-19657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19418-19483]:Block[19592-19657]"
  }, {
    "left" : "return d;",
    "right" : "return d;",
    "info" : "ReturnStatement[19448-19457]:ReturnStatement[19622-19631]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19540-19612]:Block[19714-19786]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[19633-19823]:TryStatement[19807-19997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19637-19718]:Block[19811-19892]"
  }, {
    "left" : "return createBigDecimal(numeric);",
    "right" : "return createBigDecimal(numeric);",
    "info" : "ReturnStatement[19663-19696]:ReturnStatement[19837-19870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19751-19823]:Block[19925-19997]"
  }, {
    "left" : "default :",
    "right" : "default :",
    "info" : "SwitchCase[19877-19886]:SwitchCase[20051-20060]"
  }, {
    "left" : "throw new NumberFormatException(str + \" is not a valid number.\");",
    "right" : "throw new NumberFormatException(str + \" is not a valid number.\");",
    "info" : "ThrowStatement[19907-19972]:ThrowStatement[20081-20146]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20003-21692]:Block[20177-21866]"
  }, {
    "left" : "if (expPos > -1 && expPos < str.length() - 1)",
    "right" : "if (expPos > -1 && expPos < str.length() - 1)",
    "info" : "IfStatement[20138-20311]:IfStatement[20312-20485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20184-20262]:Block[20358-20436]"
  }, {
    "left" : "exp = str.substring(expPos + 1, str.length());",
    "right" : "exp = str.substring(expPos + 1, str.length());",
    "info" : "ExpressionStatement[20202-20248]:ExpressionStatement[20376-20422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20268-20311]:Block[20442-20485]"
  }, {
    "left" : "exp = null;",
    "right" : "exp = null;",
    "info" : "ExpressionStatement[20286-20297]:ExpressionStatement[20460-20471]"
  }, {
    "left" : "if (dec == null && exp == null)",
    "right" : "if (dec == null && exp == null)",
    "info" : "IfStatement[20324-21682]:IfStatement[20498-21856]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20356-20832]:Block[20530-21006]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20419-20588]:TryStatement[20593-20762]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20423-20489]:Block[20597-20663]"
  }, {
    "left" : "return createInteger(str);",
    "right" : "return createInteger(str);",
    "info" : "ReturnStatement[20445-20471]:ReturnStatement[20619-20645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20524-20588]:Block[20698-20762]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20605-20771]:TryStatement[20779-20945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20609-20672]:Block[20783-20846]"
  }, {
    "left" : "return createLong(str);",
    "right" : "return createLong(str);",
    "info" : "ReturnStatement[20631-20654]:ReturnStatement[20805-20828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20707-20771]:Block[20881-20945]"
  }, {
    "left" : "return createBigInteger(str);",
    "right" : "return createBigInteger(str);",
    "info" : "ReturnStatement[20788-20817]:ReturnStatement[20962-20991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20838-21682]:Block[21012-21856]"
  }, {
    "left" : "boolean allZeros = isAllZeros(mant) && isAllZeros(exp);",
    "right" : "boolean allZeros = isAllZeros(mant) && isAllZeros(exp);",
    "info" : "VariableDeclarationStatement[20904-20959]:VariableDeclarationStatement[21078-21133]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20976-21288]:TryStatement[21150-21462]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20980-21189]:Block[21154-21363]"
  }, {
    "left" : "Float f = createFloat(str);",
    "right" : "Float f = createFloat(str);",
    "info" : "VariableDeclarationStatement[21002-21029]:VariableDeclarationStatement[21176-21203]"
  }, {
    "left" : "if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros)))",
    "right" : "if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros)))",
    "info" : "IfStatement[21050-21171]:IfStatement[21224-21345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21114-21171]:Block[21288-21345]"
  }, {
    "left" : "return f;",
    "right" : "return f;",
    "info" : "ReturnStatement[21140-21149]:ReturnStatement[21314-21323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21224-21288]:Block[21398-21462]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[21305-21620]:TryStatement[21479-21794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21309-21521]:Block[21483-21695]"
  }, {
    "left" : "Double d = createDouble(str);",
    "right" : "Double d = createDouble(str);",
    "info" : "VariableDeclarationStatement[21331-21360]:VariableDeclarationStatement[21505-21534]"
  }, {
    "left" : "if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros)))",
    "right" : "if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros)))",
    "info" : "IfStatement[21381-21503]:IfStatement[21555-21677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21446-21503]:Block[21620-21677]"
  }, {
    "left" : "return d;",
    "right" : "return d;",
    "info" : "ReturnStatement[21472-21481]:ReturnStatement[21646-21655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21556-21620]:Block[21730-21794]"
  }, {
    "left" : "return createBigDecimal(str);",
    "right" : "return createBigDecimal(str);",
    "info" : "ReturnStatement[21638-21667]:ReturnStatement[21812-21841]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21970-21977]:Modifier[22144-22151]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21978-21984]:Modifier[22152-22158]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[21985-21992]:PrimitiveType[22159-22166]"
  }, {
    "left" : "isAllZeros",
    "right" : "isAllZeros",
    "info" : "SimpleName[21993-22003]:SimpleName[22167-22177]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[22004-22014]:SingleVariableDeclaration[22178-22188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22016-22266]:Block[22190-22440]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[22026-22079]:IfStatement[22200-22253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22043-22079]:Block[22217-22253]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[22057-22069]:ReturnStatement[22231-22243]"
  }, {
    "left" : "for (int i = str.length() - 1; i >= 0; i--)",
    "right" : "for (int i = str.length() - 1; i >= 0; i--)",
    "info" : "ForStatement[22088-22227]:ForStatement[22262-22401]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22132-22227]:Block[22306-22401]"
  }, {
    "left" : "if (str.charAt(i) != '0')",
    "right" : "if (str.charAt(i) != '0')",
    "info" : "IfStatement[22146-22217]:IfStatement[22320-22391]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22172-22217]:Block[22346-22391]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[22190-22203]:ReturnStatement[22364-22377]"
  }, {
    "left" : "return str.length() > 0;",
    "right" : "return str.length() > 0;",
    "info" : "ReturnStatement[22236-22260]:ReturnStatement[22410-22434]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22705-22711]:Modifier[22879-22885]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[22712-22718]:Modifier[22886-22892]"
  }, {
    "left" : "Float",
    "right" : "Float",
    "info" : "SimpleType[22719-22724]:SimpleType[22893-22898]"
  }, {
    "left" : "createFloat",
    "right" : "createFloat",
    "info" : "SimpleName[22725-22736]:SimpleName[22899-22910]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[22737-22747]:SingleVariableDeclaration[22911-22921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22749-22853]:Block[22923-23027]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[22759-22812]:IfStatement[22933-22986]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22776-22812]:Block[22950-22986]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[22790-22802]:ReturnStatement[22964-22976]"
  }, {
    "left" : "return Float.valueOf(str);",
    "right" : "return Float.valueOf(str);",
    "info" : "ReturnStatement[22821-22847]:ReturnStatement[22995-23021]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23216-23222]:Modifier[23390-23396]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23223-23229]:Modifier[23397-23403]"
  }, {
    "left" : "Double",
    "right" : "Double",
    "info" : "SimpleType[23230-23236]:SimpleType[23404-23410]"
  }, {
    "left" : "createDouble",
    "right" : "createDouble",
    "info" : "SimpleName[23237-23249]:SimpleName[23411-23423]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[23250-23260]:SingleVariableDeclaration[23424-23434]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23262-23367]:Block[23436-23541]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[23272-23325]:IfStatement[23446-23499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23289-23325]:Block[23463-23499]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[23303-23315]:ReturnStatement[23477-23489]"
  }, {
    "left" : "return Double.valueOf(str);",
    "right" : "return Double.valueOf(str);",
    "info" : "ReturnStatement[23334-23361]:ReturnStatement[23508-23535]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23773-23779]:Modifier[23947-23953]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23780-23786]:Modifier[23954-23960]"
  }, {
    "left" : "Integer",
    "right" : "Integer",
    "info" : "SimpleType[23787-23794]:SimpleType[23961-23968]"
  }, {
    "left" : "createInteger",
    "right" : "createInteger",
    "info" : "SimpleName[23795-23808]:SimpleName[23969-23982]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[23809-23819]:SingleVariableDeclaration[23983-23993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23821-23995]:Block[23995-24169]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[23831-23884]:IfStatement[24005-24058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23848-23884]:Block[24022-24058]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[23862-23874]:ReturnStatement[24036-24048]"
  }, {
    "left" : "return Integer.decode(str);",
    "right" : "return Integer.decode(str);",
    "info" : "ReturnStatement[23962-23989]:ReturnStatement[24136-24163]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24354-24360]:Modifier[24528-24534]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[24361-24367]:Modifier[24535-24541]"
  }, {
    "left" : "Long",
    "right" : "Long",
    "info" : "SimpleType[24368-24372]:SimpleType[24542-24546]"
  }, {
    "left" : "createLong",
    "right" : "createLong",
    "info" : "SimpleName[24373-24383]:SimpleName[24547-24557]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[24384-24394]:SingleVariableDeclaration[24558-24568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24396-24499]:Block[24570-24673]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[24406-24459]:IfStatement[24580-24633]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24423-24459]:Block[24597-24633]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[24437-24449]:ReturnStatement[24611-24623]"
  }, {
    "left" : "return Long.valueOf(str);",
    "right" : "return Long.valueOf(str);",
    "info" : "ReturnStatement[24468-24493]:ReturnStatement[24642-24667]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24870-24876]:Modifier[25044-25050]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[24877-24883]:Modifier[25051-25057]"
  }, {
    "left" : "BigInteger",
    "right" : "BigInteger",
    "info" : "SimpleType[24884-24894]:SimpleType[25058-25068]"
  }, {
    "left" : "createBigInteger",
    "right" : "createBigInteger",
    "info" : "SimpleName[24895-24911]:SimpleName[25069-25085]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[24912-24922]:SingleVariableDeclaration[25086-25096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24924-25029]:Block[25098-25203]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[24934-24987]:IfStatement[25108-25161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24951-24987]:Block[25125-25161]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[24965-24977]:ReturnStatement[25139-25151]"
  }, {
    "left" : "return new BigInteger(str);",
    "right" : "return new BigInteger(str);",
    "info" : "ReturnStatement[24996-25023]:ReturnStatement[25170-25197]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25400-25406]:Modifier[25574-25580]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[25407-25413]:Modifier[25581-25587]"
  }, {
    "left" : "BigDecimal",
    "right" : "BigDecimal",
    "info" : "SimpleType[25414-25424]:SimpleType[25588-25598]"
  }, {
    "left" : "createBigDecimal",
    "right" : "createBigDecimal",
    "info" : "SimpleName[25425-25441]:SimpleName[25599-25615]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[25442-25452]:SingleVariableDeclaration[25616-25626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25454-25769]:Block[25628-25943]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[25464-25517]:IfStatement[25638-25691]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25481-25517]:Block[25655-25691]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[25495-25507]:ReturnStatement[25669-25681]"
  }, {
    "left" : "if (StringUtils.isBlank(str))",
    "right" : "if (StringUtils.isBlank(str))",
    "info" : "IfStatement[25599-25725]:IfStatement[25773-25899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25629-25725]:Block[25803-25899]"
  }, {
    "left" : "throw new NumberFormatException(\"A blank string is not a valid number\");",
    "right" : "throw new NumberFormatException(\"A blank string is not a valid number\");",
    "info" : "ThrowStatement[25643-25715]:ThrowStatement[25817-25889]"
  }, {
    "left" : "return new BigDecimal(str);",
    "right" : "return new BigDecimal(str);",
    "info" : "ReturnStatement[25736-25763]:ReturnStatement[25910-25937]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26204-26210]:Modifier[26378-26384]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[26211-26217]:Modifier[26385-26391]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[26218-26222]:PrimitiveType[26392-26396]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[26223-26226]:SimpleName[26397-26400]"
  }, {
    "left" : "long[] array",
    "right" : "long[] array",
    "info" : "SingleVariableDeclaration[26227-26239]:SingleVariableDeclaration[26401-26413]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26241-26737]:Block[26415-26911]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[26278-26500]:IfStatement[26452-26674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26297-26386]:Block[26471-26560]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[26311-26376]:ThrowStatement[26485-26550]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[26392-26500]:IfStatement[26566-26674]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26415-26500]:Block[26589-26674]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[26429-26490]:ThrowStatement[26603-26664]"
  }, {
    "left" : "long min = array[0];",
    "right" : "long min = array[0];",
    "info" : "VariableDeclarationStatement[26547-26567]:VariableDeclarationStatement[26721-26741]"
  }, {
    "left" : "for (int i = 1; i < array.length; i++)",
    "right" : "for (int i = 1; i < array.length; i++)",
    "info" : "ForStatement[26576-26706]:ForStatement[26750-26880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26615-26706]:Block[26789-26880]"
  }, {
    "left" : "if (array[i] < min)",
    "right" : "if (array[i] < min)",
    "info" : "IfStatement[26629-26696]:IfStatement[26803-26870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26649-26696]:Block[26823-26870]"
  }, {
    "left" : "min = array[i];",
    "right" : "min = array[i];",
    "info" : "ExpressionStatement[26667-26682]:ExpressionStatement[26841-26856]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[26720-26731]:ReturnStatement[26894-26905]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27077-27083]:Modifier[27251-27257]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[27084-27090]:Modifier[27258-27264]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[27091-27094]:PrimitiveType[27265-27268]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[27095-27098]:SimpleName[27269-27272]"
  }, {
    "left" : "int[] array",
    "right" : "int[] array",
    "info" : "SingleVariableDeclaration[27099-27110]:SingleVariableDeclaration[27273-27284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27112-27607]:Block[27286-27781]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[27149-27371]:IfStatement[27323-27545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27168-27257]:Block[27342-27431]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[27182-27247]:ThrowStatement[27356-27421]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[27263-27371]:IfStatement[27437-27545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27286-27371]:Block[27460-27545]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[27300-27361]:ThrowStatement[27474-27535]"
  }, {
    "left" : "int min = array[0];",
    "right" : "int min = array[0];",
    "info" : "VariableDeclarationStatement[27418-27437]:VariableDeclarationStatement[27592-27611]"
  }, {
    "left" : "for (int j = 1; j < array.length; j++)",
    "right" : "for (int j = 1; j < array.length; j++)",
    "info" : "ForStatement[27446-27576]:ForStatement[27620-27750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27485-27576]:Block[27659-27750]"
  }, {
    "left" : "if (array[j] < min)",
    "right" : "if (array[j] < min)",
    "info" : "IfStatement[27499-27566]:IfStatement[27673-27740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27519-27566]:Block[27693-27740]"
  }, {
    "left" : "min = array[j];",
    "right" : "min = array[j];",
    "info" : "ExpressionStatement[27537-27552]:ExpressionStatement[27711-27726]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[27590-27601]:ReturnStatement[27764-27775]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27947-27953]:Modifier[28121-28127]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[27954-27960]:Modifier[28128-28134]"
  }, {
    "left" : "short",
    "right" : "short",
    "info" : "PrimitiveType[27961-27966]:PrimitiveType[28135-28140]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[27967-27970]:SimpleName[28141-28144]"
  }, {
    "left" : "short[] array",
    "right" : "short[] array",
    "info" : "SingleVariableDeclaration[27971-27984]:SingleVariableDeclaration[28145-28158]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27986-28483]:Block[28160-28657]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[28023-28245]:IfStatement[28197-28419]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28042-28131]:Block[28216-28305]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[28056-28121]:ThrowStatement[28230-28295]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[28137-28245]:IfStatement[28311-28419]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28160-28245]:Block[28334-28419]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[28174-28235]:ThrowStatement[28348-28409]"
  }, {
    "left" : "short min = array[0];",
    "right" : "short min = array[0];",
    "info" : "VariableDeclarationStatement[28292-28313]:VariableDeclarationStatement[28466-28487]"
  }, {
    "left" : "for (int i = 1; i < array.length; i++)",
    "right" : "for (int i = 1; i < array.length; i++)",
    "info" : "ForStatement[28322-28452]:ForStatement[28496-28626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28361-28452]:Block[28535-28626]"
  }, {
    "left" : "if (array[i] < min)",
    "right" : "if (array[i] < min)",
    "info" : "IfStatement[28375-28442]:IfStatement[28549-28616]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28395-28442]:Block[28569-28616]"
  }, {
    "left" : "min = array[i];",
    "right" : "min = array[i];",
    "info" : "ExpressionStatement[28413-28428]:ExpressionStatement[28587-28602]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[28466-28477]:ReturnStatement[28640-28651]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28823-28829]:Modifier[28997-29003]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[28830-28836]:Modifier[29004-29010]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[28837-28841]:PrimitiveType[29011-29015]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[28842-28845]:SimpleName[29016-29019]"
  }, {
    "left" : "byte[] array",
    "right" : "byte[] array",
    "info" : "SingleVariableDeclaration[28846-28858]:SingleVariableDeclaration[29020-29032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28860-29356]:Block[29034-29530]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[28897-29119]:IfStatement[29071-29293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28916-29005]:Block[29090-29179]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[28930-28995]:ThrowStatement[29104-29169]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[29011-29119]:IfStatement[29185-29293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29034-29119]:Block[29208-29293]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[29048-29109]:ThrowStatement[29222-29283]"
  }, {
    "left" : "byte min = array[0];",
    "right" : "byte min = array[0];",
    "info" : "VariableDeclarationStatement[29166-29186]:VariableDeclarationStatement[29340-29360]"
  }, {
    "left" : "for (int i = 1; i < array.length; i++)",
    "right" : "for (int i = 1; i < array.length; i++)",
    "info" : "ForStatement[29195-29325]:ForStatement[29369-29499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29234-29325]:Block[29408-29499]"
  }, {
    "left" : "if (array[i] < min)",
    "right" : "if (array[i] < min)",
    "info" : "IfStatement[29248-29315]:IfStatement[29422-29489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29268-29315]:Block[29442-29489]"
  }, {
    "left" : "min = array[i];",
    "right" : "min = array[i];",
    "info" : "ExpressionStatement[29286-29301]:ExpressionStatement[29460-29475]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[29339-29350]:ReturnStatement[29513-29524]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29809-29815]:Modifier[29983-29989]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[29816-29822]:Modifier[29990-29996]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[29823-29829]:PrimitiveType[29997-30003]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[29830-29833]:SimpleName[30004-30007]"
  }, {
    "left" : "double[] array",
    "right" : "double[] array",
    "info" : "SingleVariableDeclaration[29834-29848]:SingleVariableDeclaration[30008-30022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29850-30439]:Block[30024-30613]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[29887-30109]:IfStatement[30061-30283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29906-29995]:Block[30080-30169]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[29920-29985]:ThrowStatement[30094-30159]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[30001-30109]:IfStatement[30175-30283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30024-30109]:Block[30198-30283]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[30038-30099]:ThrowStatement[30212-30273]"
  }, {
    "left" : "double min = array[0];",
    "right" : "double min = array[0];",
    "info" : "VariableDeclarationStatement[30156-30178]:VariableDeclarationStatement[30330-30352]"
  }, {
    "left" : "for (int i = 1; i < array.length; i++)",
    "right" : "for (int i = 1; i < array.length; i++)",
    "info" : "ForStatement[30187-30408]:ForStatement[30361-30582]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30226-30408]:Block[30400-30582]"
  }, {
    "left" : "if (Double.isNaN(array[i]))",
    "right" : "if (Double.isNaN(array[i]))",
    "info" : "IfStatement[30240-30318]:IfStatement[30414-30492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30268-30318]:Block[30442-30492]"
  }, {
    "left" : "return Double.NaN;",
    "right" : "return Double.NaN;",
    "info" : "ReturnStatement[30286-30304]:ReturnStatement[30460-30478]"
  }, {
    "left" : "if (array[i] < min)",
    "right" : "if (array[i] < min)",
    "info" : "IfStatement[30331-30398]:IfStatement[30505-30572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30351-30398]:Block[30525-30572]"
  }, {
    "left" : "min = array[i];",
    "right" : "min = array[i];",
    "info" : "ExpressionStatement[30369-30384]:ExpressionStatement[30543-30558]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[30422-30433]:ReturnStatement[30596-30607]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30890-30896]:Modifier[31064-31070]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[30897-30903]:Modifier[31071-31077]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[30904-30909]:PrimitiveType[31078-31083]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[30910-30913]:SimpleName[31084-31087]"
  }, {
    "left" : "float[] array",
    "right" : "float[] array",
    "info" : "SingleVariableDeclaration[30914-30927]:SingleVariableDeclaration[31088-31101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30929-31515]:Block[31103-31689]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[30966-31188]:IfStatement[31140-31362]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30985-31074]:Block[31159-31248]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[30999-31064]:ThrowStatement[31173-31238]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[31080-31188]:IfStatement[31254-31362]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31103-31188]:Block[31277-31362]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[31117-31178]:ThrowStatement[31291-31352]"
  }, {
    "left" : "float min = array[0];",
    "right" : "float min = array[0];",
    "info" : "VariableDeclarationStatement[31235-31256]:VariableDeclarationStatement[31409-31430]"
  }, {
    "left" : "for (int i = 1; i < array.length; i++)",
    "right" : "for (int i = 1; i < array.length; i++)",
    "info" : "ForStatement[31265-31484]:ForStatement[31439-31658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31304-31484]:Block[31478-31658]"
  }, {
    "left" : "if (Float.isNaN(array[i]))",
    "right" : "if (Float.isNaN(array[i]))",
    "info" : "IfStatement[31318-31394]:IfStatement[31492-31568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31345-31394]:Block[31519-31568]"
  }, {
    "left" : "return Float.NaN;",
    "right" : "return Float.NaN;",
    "info" : "ReturnStatement[31363-31380]:ReturnStatement[31537-31554]"
  }, {
    "left" : "if (array[i] < min)",
    "right" : "if (array[i] < min)",
    "info" : "IfStatement[31407-31474]:IfStatement[31581-31648]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31427-31474]:Block[31601-31648]"
  }, {
    "left" : "min = array[i];",
    "right" : "min = array[i];",
    "info" : "ExpressionStatement[31445-31460]:ExpressionStatement[31619-31634]"
  }, {
    "left" : "return min;",
    "right" : "return min;",
    "info" : "ReturnStatement[31498-31509]:ReturnStatement[31672-31683]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31950-31956]:Modifier[32124-32130]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[31957-31963]:Modifier[32131-32137]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[31964-31968]:PrimitiveType[32138-32142]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[31969-31972]:SimpleName[32143-32146]"
  }, {
    "left" : "long[] array",
    "right" : "long[] array",
    "info" : "SingleVariableDeclaration[31973-31985]:SingleVariableDeclaration[32147-32159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31987-32475]:Block[32161-32649]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[32024-32246]:IfStatement[32198-32420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32043-32132]:Block[32217-32306]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[32057-32122]:ThrowStatement[32231-32296]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[32138-32246]:IfStatement[32312-32420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32161-32246]:Block[32335-32420]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[32175-32236]:ThrowStatement[32349-32410]"
  }, {
    "left" : "long max = array[0];",
    "right" : "long max = array[0];",
    "info" : "VariableDeclarationStatement[32289-32309]:VariableDeclarationStatement[32463-32483]"
  }, {
    "left" : "for (int j = 1; j < array.length; j++)",
    "right" : "for (int j = 1; j < array.length; j++)",
    "info" : "ForStatement[32318-32448]:ForStatement[32492-32622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32357-32448]:Block[32531-32622]"
  }, {
    "left" : "if (array[j] > max)",
    "right" : "if (array[j] > max)",
    "info" : "IfStatement[32371-32438]:IfStatement[32545-32612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32391-32438]:Block[32565-32612]"
  }, {
    "left" : "max = array[j];",
    "right" : "max = array[j];",
    "info" : "ExpressionStatement[32409-32424]:ExpressionStatement[32583-32598]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[32458-32469]:ReturnStatement[32632-32643]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32815-32821]:Modifier[32989-32995]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[32822-32828]:Modifier[32996-33002]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[32829-32832]:PrimitiveType[33003-33006]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[32833-32836]:SimpleName[33007-33010]"
  }, {
    "left" : "int[] array",
    "right" : "int[] array",
    "info" : "SingleVariableDeclaration[32837-32848]:SingleVariableDeclaration[33011-33022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32850-33345]:Block[33024-33519]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[32887-33109]:IfStatement[33061-33283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32906-32995]:Block[33080-33169]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[32920-32985]:ThrowStatement[33094-33159]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[33001-33109]:IfStatement[33175-33283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33024-33109]:Block[33198-33283]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[33038-33099]:ThrowStatement[33212-33273]"
  }, {
    "left" : "int max = array[0];",
    "right" : "int max = array[0];",
    "info" : "VariableDeclarationStatement[33156-33175]:VariableDeclarationStatement[33330-33349]"
  }, {
    "left" : "for (int j = 1; j < array.length; j++)",
    "right" : "for (int j = 1; j < array.length; j++)",
    "info" : "ForStatement[33184-33314]:ForStatement[33358-33488]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33223-33314]:Block[33397-33488]"
  }, {
    "left" : "if (array[j] > max)",
    "right" : "if (array[j] > max)",
    "info" : "IfStatement[33237-33304]:IfStatement[33411-33478]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33257-33304]:Block[33431-33478]"
  }, {
    "left" : "max = array[j];",
    "right" : "max = array[j];",
    "info" : "ExpressionStatement[33275-33290]:ExpressionStatement[33449-33464]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[33328-33339]:ReturnStatement[33502-33513]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33685-33691]:Modifier[33859-33865]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[33692-33698]:Modifier[33866-33872]"
  }, {
    "left" : "short",
    "right" : "short",
    "info" : "PrimitiveType[33699-33704]:PrimitiveType[33873-33878]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[33705-33708]:SimpleName[33879-33882]"
  }, {
    "left" : "short[] array",
    "right" : "short[] array",
    "info" : "SingleVariableDeclaration[33709-33722]:SingleVariableDeclaration[33883-33896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33724-34221]:Block[33898-34395]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[33761-33983]:IfStatement[33935-34157]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33780-33869]:Block[33954-34043]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[33794-33859]:ThrowStatement[33968-34033]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[33875-33983]:IfStatement[34049-34157]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33898-33983]:Block[34072-34157]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[33912-33973]:ThrowStatement[34086-34147]"
  }, {
    "left" : "short max = array[0];",
    "right" : "short max = array[0];",
    "info" : "VariableDeclarationStatement[34030-34051]:VariableDeclarationStatement[34204-34225]"
  }, {
    "left" : "for (int i = 1; i < array.length; i++)",
    "right" : "for (int i = 1; i < array.length; i++)",
    "info" : "ForStatement[34060-34190]:ForStatement[34234-34364]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34099-34190]:Block[34273-34364]"
  }, {
    "left" : "if (array[i] > max)",
    "right" : "if (array[i] > max)",
    "info" : "IfStatement[34113-34180]:IfStatement[34287-34354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34133-34180]:Block[34307-34354]"
  }, {
    "left" : "max = array[i];",
    "right" : "max = array[i];",
    "info" : "ExpressionStatement[34151-34166]:ExpressionStatement[34325-34340]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[34204-34215]:ReturnStatement[34378-34389]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34561-34567]:Modifier[34735-34741]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[34568-34574]:Modifier[34742-34748]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[34575-34579]:PrimitiveType[34749-34753]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[34580-34583]:SimpleName[34754-34757]"
  }, {
    "left" : "byte[] array",
    "right" : "byte[] array",
    "info" : "SingleVariableDeclaration[34584-34596]:SingleVariableDeclaration[34758-34770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34598-35094]:Block[34772-35268]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[34635-34857]:IfStatement[34809-35031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34654-34743]:Block[34828-34917]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[34668-34733]:ThrowStatement[34842-34907]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[34749-34857]:IfStatement[34923-35031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34772-34857]:Block[34946-35031]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[34786-34847]:ThrowStatement[34960-35021]"
  }, {
    "left" : "byte max = array[0];",
    "right" : "byte max = array[0];",
    "info" : "VariableDeclarationStatement[34904-34924]:VariableDeclarationStatement[35078-35098]"
  }, {
    "left" : "for (int i = 1; i < array.length; i++)",
    "right" : "for (int i = 1; i < array.length; i++)",
    "info" : "ForStatement[34933-35063]:ForStatement[35107-35237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34972-35063]:Block[35146-35237]"
  }, {
    "left" : "if (array[i] > max)",
    "right" : "if (array[i] > max)",
    "info" : "IfStatement[34986-35053]:IfStatement[35160-35227]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35006-35053]:Block[35180-35227]"
  }, {
    "left" : "max = array[i];",
    "right" : "max = array[i];",
    "info" : "ExpressionStatement[35024-35039]:ExpressionStatement[35198-35213]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[35077-35088]:ReturnStatement[35251-35262]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35546-35552]:Modifier[35720-35726]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[35553-35559]:Modifier[35727-35733]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[35560-35566]:PrimitiveType[35734-35740]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[35567-35570]:SimpleName[35741-35744]"
  }, {
    "left" : "double[] array",
    "right" : "double[] array",
    "info" : "SingleVariableDeclaration[35571-35585]:SingleVariableDeclaration[35745-35759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35587-36175]:Block[35761-36349]"
  }, {
    "left" : "if (array== null)",
    "right" : "if (array== null)",
    "info" : "IfStatement[35624-35845]:IfStatement[35798-36019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35642-35731]:Block[35816-35905]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[35656-35721]:ThrowStatement[35830-35895]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[35737-35845]:IfStatement[35911-36019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35760-35845]:Block[35934-36019]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[35774-35835]:ThrowStatement[35948-36009]"
  }, {
    "left" : "double max = array[0];",
    "right" : "double max = array[0];",
    "info" : "VariableDeclarationStatement[35892-35914]:VariableDeclarationStatement[36066-36088]"
  }, {
    "left" : "for (int j = 1; j < array.length; j++)",
    "right" : "for (int j = 1; j < array.length; j++)",
    "info" : "ForStatement[35923-36144]:ForStatement[36097-36318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35962-36144]:Block[36136-36318]"
  }, {
    "left" : "if (Double.isNaN(array[j]))",
    "right" : "if (Double.isNaN(array[j]))",
    "info" : "IfStatement[35976-36054]:IfStatement[36150-36228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36004-36054]:Block[36178-36228]"
  }, {
    "left" : "return Double.NaN;",
    "right" : "return Double.NaN;",
    "info" : "ReturnStatement[36022-36040]:ReturnStatement[36196-36214]"
  }, {
    "left" : "if (array[j] > max)",
    "right" : "if (array[j] > max)",
    "info" : "IfStatement[36067-36134]:IfStatement[36241-36308]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36087-36134]:Block[36261-36308]"
  }, {
    "left" : "max = array[j];",
    "right" : "max = array[j];",
    "info" : "ExpressionStatement[36105-36120]:ExpressionStatement[36279-36294]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[36158-36169]:ReturnStatement[36332-36343]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36626-36632]:Modifier[36800-36806]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[36633-36639]:Modifier[36807-36813]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[36640-36645]:PrimitiveType[36814-36819]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[36646-36649]:SimpleName[36820-36823]"
  }, {
    "left" : "float[] array",
    "right" : "float[] array",
    "info" : "SingleVariableDeclaration[36650-36663]:SingleVariableDeclaration[36824-36837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36665-37243]:Block[36839-37417]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[36702-36924]:IfStatement[36876-37098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36721-36810]:Block[36895-36984]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The Array must not be null\");",
    "info" : "ThrowStatement[36735-36800]:ThrowStatement[36909-36974]"
  }, {
    "left" : "if (array.length == 0)",
    "right" : "if (array.length == 0)",
    "info" : "IfStatement[36816-36924]:IfStatement[36990-37098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36839-36924]:Block[37013-37098]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "right" : "throw new IllegalArgumentException(\"Array cannot be empty.\");",
    "info" : "ThrowStatement[36853-36914]:ThrowStatement[37027-37088]"
  }, {
    "left" : "float max = array[0];",
    "right" : "float max = array[0];",
    "info" : "VariableDeclarationStatement[36967-36988]:VariableDeclarationStatement[37141-37162]"
  }, {
    "left" : "for (int j = 1; j < array.length; j++)",
    "right" : "for (int j = 1; j < array.length; j++)",
    "info" : "ForStatement[36997-37216]:ForStatement[37171-37390]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37036-37216]:Block[37210-37390]"
  }, {
    "left" : "if (Float.isNaN(array[j]))",
    "right" : "if (Float.isNaN(array[j]))",
    "info" : "IfStatement[37050-37126]:IfStatement[37224-37300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37077-37126]:Block[37251-37300]"
  }, {
    "left" : "return Float.NaN;",
    "right" : "return Float.NaN;",
    "info" : "ReturnStatement[37095-37112]:ReturnStatement[37269-37286]"
  }, {
    "left" : "if (array[j] > max)",
    "right" : "if (array[j] > max)",
    "info" : "IfStatement[37139-37206]:IfStatement[37313-37380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37159-37206]:Block[37333-37380]"
  }, {
    "left" : "max = array[j];",
    "right" : "max = array[j];",
    "info" : "ExpressionStatement[37177-37192]:ExpressionStatement[37351-37366]"
  }, {
    "left" : "return max;",
    "right" : "return max;",
    "info" : "ReturnStatement[37226-37237]:ReturnStatement[37400-37411]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37559-37565]:Modifier[37733-37739]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37566-37572]:Modifier[37740-37746]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[37573-37577]:PrimitiveType[37747-37751]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[37578-37581]:SimpleName[37752-37755]"
  }, {
    "left" : "long a",
    "right" : "long a",
    "info" : "SingleVariableDeclaration[37582-37588]:SingleVariableDeclaration[37756-37762]"
  }, {
    "left" : "long b",
    "right" : "long b",
    "info" : "SingleVariableDeclaration[37590-37596]:SingleVariableDeclaration[37764-37770]"
  }, {
    "left" : "long c",
    "right" : "long c",
    "info" : "SingleVariableDeclaration[37598-37604]:SingleVariableDeclaration[37772-37778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37606-37731]:Block[37780-37905]"
  }, {
    "left" : "if (b < a)",
    "right" : "if (b < a)",
    "info" : "IfStatement[37616-37657]:IfStatement[37790-37831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37627-37657]:Block[37801-37831]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[37641-37647]:ExpressionStatement[37815-37821]"
  }, {
    "left" : "if (c < a)",
    "right" : "if (c < a)",
    "info" : "IfStatement[37666-37707]:IfStatement[37840-37881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37677-37707]:Block[37851-37881]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[37691-37697]:ExpressionStatement[37865-37871]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[37716-37725]:ReturnStatement[37890-37899]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37944-37950]:Modifier[38118-38124]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37951-37957]:Modifier[38125-38131]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[37958-37961]:PrimitiveType[38132-38135]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[37962-37965]:SimpleName[38136-38139]"
  }, {
    "left" : "int a",
    "right" : "int a",
    "info" : "SingleVariableDeclaration[37966-37971]:SingleVariableDeclaration[38140-38145]"
  }, {
    "left" : "int b",
    "right" : "int b",
    "info" : "SingleVariableDeclaration[37973-37978]:SingleVariableDeclaration[38147-38152]"
  }, {
    "left" : "int c",
    "right" : "int c",
    "info" : "SingleVariableDeclaration[37980-37985]:SingleVariableDeclaration[38154-38159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37987-38112]:Block[38161-38286]"
  }, {
    "left" : "if (b < a)",
    "right" : "if (b < a)",
    "info" : "IfStatement[37997-38038]:IfStatement[38171-38212]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38008-38038]:Block[38182-38212]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[38022-38028]:ExpressionStatement[38196-38202]"
  }, {
    "left" : "if (c < a)",
    "right" : "if (c < a)",
    "info" : "IfStatement[38047-38088]:IfStatement[38221-38262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38058-38088]:Block[38232-38262]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[38072-38078]:ExpressionStatement[38246-38252]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[38097-38106]:ReturnStatement[38271-38280]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38327-38333]:Modifier[38501-38507]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[38334-38340]:Modifier[38508-38514]"
  }, {
    "left" : "short",
    "right" : "short",
    "info" : "PrimitiveType[38341-38346]:PrimitiveType[38515-38520]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[38347-38350]:SimpleName[38521-38524]"
  }, {
    "left" : "short a",
    "right" : "short a",
    "info" : "SingleVariableDeclaration[38351-38358]:SingleVariableDeclaration[38525-38532]"
  }, {
    "left" : "short b",
    "right" : "short b",
    "info" : "SingleVariableDeclaration[38360-38367]:SingleVariableDeclaration[38534-38541]"
  }, {
    "left" : "short c",
    "right" : "short c",
    "info" : "SingleVariableDeclaration[38369-38376]:SingleVariableDeclaration[38543-38550]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38378-38503]:Block[38552-38677]"
  }, {
    "left" : "if (b < a)",
    "right" : "if (b < a)",
    "info" : "IfStatement[38388-38429]:IfStatement[38562-38603]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38399-38429]:Block[38573-38603]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[38413-38419]:ExpressionStatement[38587-38593]"
  }, {
    "left" : "if (c < a)",
    "right" : "if (c < a)",
    "info" : "IfStatement[38438-38479]:IfStatement[38612-38653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38449-38479]:Block[38623-38653]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[38463-38469]:ExpressionStatement[38637-38643]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[38488-38497]:ReturnStatement[38662-38671]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38717-38723]:Modifier[38891-38897]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[38724-38730]:Modifier[38898-38904]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[38731-38735]:PrimitiveType[38905-38909]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[38736-38739]:SimpleName[38910-38913]"
  }, {
    "left" : "byte a",
    "right" : "byte a",
    "info" : "SingleVariableDeclaration[38740-38746]:SingleVariableDeclaration[38914-38920]"
  }, {
    "left" : "byte b",
    "right" : "byte b",
    "info" : "SingleVariableDeclaration[38748-38754]:SingleVariableDeclaration[38922-38928]"
  }, {
    "left" : "byte c",
    "right" : "byte c",
    "info" : "SingleVariableDeclaration[38756-38762]:SingleVariableDeclaration[38930-38936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38764-38889]:Block[38938-39063]"
  }, {
    "left" : "if (b < a)",
    "right" : "if (b < a)",
    "info" : "IfStatement[38774-38815]:IfStatement[38948-38989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38785-38815]:Block[38959-38989]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[38799-38805]:ExpressionStatement[38973-38979]"
  }, {
    "left" : "if (c < a)",
    "right" : "if (c < a)",
    "info" : "IfStatement[38824-38865]:IfStatement[38998-39039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38835-38865]:Block[39009-39039]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[38849-38855]:ExpressionStatement[39023-39029]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[38874-38883]:ReturnStatement[39048-39057]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39331-39337]:Modifier[39505-39511]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39338-39344]:Modifier[39512-39518]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[39345-39351]:PrimitiveType[39519-39525]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[39352-39355]:SimpleName[39526-39529]"
  }, {
    "left" : "double a",
    "right" : "double a",
    "info" : "SingleVariableDeclaration[39356-39364]:SingleVariableDeclaration[39530-39538]"
  }, {
    "left" : "double b",
    "right" : "double b",
    "info" : "SingleVariableDeclaration[39366-39374]:SingleVariableDeclaration[39540-39548]"
  }, {
    "left" : "double c",
    "right" : "double c",
    "info" : "SingleVariableDeclaration[39376-39384]:SingleVariableDeclaration[39550-39558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39386-39437]:Block[39560-39611]"
  }, {
    "left" : "return Math.min(Math.min(a, b), c);",
    "right" : "return Math.min(Math.min(a, b), c);",
    "info" : "ReturnStatement[39396-39431]:ReturnStatement[39570-39605]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39874-39880]:Modifier[40048-40054]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39881-39887]:Modifier[40055-40061]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[39888-39893]:PrimitiveType[40062-40067]"
  }, {
    "left" : "min",
    "right" : "min",
    "info" : "SimpleName[39894-39897]:SimpleName[40068-40071]"
  }, {
    "left" : "float a",
    "right" : "float a",
    "info" : "SingleVariableDeclaration[39898-39905]:SingleVariableDeclaration[40072-40079]"
  }, {
    "left" : "float b",
    "right" : "float b",
    "info" : "SingleVariableDeclaration[39907-39914]:SingleVariableDeclaration[40081-40088]"
  }, {
    "left" : "float c",
    "right" : "float c",
    "info" : "SingleVariableDeclaration[39916-39923]:SingleVariableDeclaration[40090-40097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39925-39976]:Block[40099-40150]"
  }, {
    "left" : "return Math.min(Math.min(a, b), c);",
    "right" : "return Math.min(Math.min(a, b), c);",
    "info" : "ReturnStatement[39935-39970]:ReturnStatement[40109-40144]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40286-40292]:Modifier[40460-40466]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[40293-40299]:Modifier[40467-40473]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[40300-40304]:PrimitiveType[40474-40478]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[40305-40308]:SimpleName[40479-40482]"
  }, {
    "left" : "long a",
    "right" : "long a",
    "info" : "SingleVariableDeclaration[40309-40315]:SingleVariableDeclaration[40483-40489]"
  }, {
    "left" : "long b",
    "right" : "long b",
    "info" : "SingleVariableDeclaration[40317-40323]:SingleVariableDeclaration[40491-40497]"
  }, {
    "left" : "long c",
    "right" : "long c",
    "info" : "SingleVariableDeclaration[40325-40331]:SingleVariableDeclaration[40499-40505]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40333-40458]:Block[40507-40632]"
  }, {
    "left" : "if (b > a)",
    "right" : "if (b > a)",
    "info" : "IfStatement[40343-40384]:IfStatement[40517-40558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40354-40384]:Block[40528-40558]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[40368-40374]:ExpressionStatement[40542-40548]"
  }, {
    "left" : "if (c > a)",
    "right" : "if (c > a)",
    "info" : "IfStatement[40393-40434]:IfStatement[40567-40608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40404-40434]:Block[40578-40608]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[40418-40424]:ExpressionStatement[40592-40598]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[40443-40452]:ReturnStatement[40617-40626]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40670-40676]:Modifier[40844-40850]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[40677-40683]:Modifier[40851-40857]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[40684-40687]:PrimitiveType[40858-40861]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[40688-40691]:SimpleName[40862-40865]"
  }, {
    "left" : "int a",
    "right" : "int a",
    "info" : "SingleVariableDeclaration[40692-40697]:SingleVariableDeclaration[40866-40871]"
  }, {
    "left" : "int b",
    "right" : "int b",
    "info" : "SingleVariableDeclaration[40699-40704]:SingleVariableDeclaration[40873-40878]"
  }, {
    "left" : "int c",
    "right" : "int c",
    "info" : "SingleVariableDeclaration[40706-40711]:SingleVariableDeclaration[40880-40885]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40713-40838]:Block[40887-41012]"
  }, {
    "left" : "if (b > a)",
    "right" : "if (b > a)",
    "info" : "IfStatement[40723-40764]:IfStatement[40897-40938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40734-40764]:Block[40908-40938]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[40748-40754]:ExpressionStatement[40922-40928]"
  }, {
    "left" : "if (c > a)",
    "right" : "if (c > a)",
    "info" : "IfStatement[40773-40814]:IfStatement[40947-40988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40784-40814]:Block[40958-40988]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[40798-40804]:ExpressionStatement[40972-40978]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[40823-40832]:ReturnStatement[40997-41006]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41052-41058]:Modifier[41226-41232]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[41059-41065]:Modifier[41233-41239]"
  }, {
    "left" : "short",
    "right" : "short",
    "info" : "PrimitiveType[41066-41071]:PrimitiveType[41240-41245]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[41072-41075]:SimpleName[41246-41249]"
  }, {
    "left" : "short a",
    "right" : "short a",
    "info" : "SingleVariableDeclaration[41076-41083]:SingleVariableDeclaration[41250-41257]"
  }, {
    "left" : "short b",
    "right" : "short b",
    "info" : "SingleVariableDeclaration[41085-41092]:SingleVariableDeclaration[41259-41266]"
  }, {
    "left" : "short c",
    "right" : "short c",
    "info" : "SingleVariableDeclaration[41094-41101]:SingleVariableDeclaration[41268-41275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41103-41228]:Block[41277-41402]"
  }, {
    "left" : "if (b > a)",
    "right" : "if (b > a)",
    "info" : "IfStatement[41113-41154]:IfStatement[41287-41328]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41124-41154]:Block[41298-41328]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[41138-41144]:ExpressionStatement[41312-41318]"
  }, {
    "left" : "if (c > a)",
    "right" : "if (c > a)",
    "info" : "IfStatement[41163-41204]:IfStatement[41337-41378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41174-41204]:Block[41348-41378]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[41188-41194]:ExpressionStatement[41362-41368]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[41213-41222]:ReturnStatement[41387-41396]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41441-41447]:Modifier[41615-41621]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[41448-41454]:Modifier[41622-41628]"
  }, {
    "left" : "byte",
    "right" : "byte",
    "info" : "PrimitiveType[41455-41459]:PrimitiveType[41629-41633]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[41460-41463]:SimpleName[41634-41637]"
  }, {
    "left" : "byte a",
    "right" : "byte a",
    "info" : "SingleVariableDeclaration[41464-41470]:SingleVariableDeclaration[41638-41644]"
  }, {
    "left" : "byte b",
    "right" : "byte b",
    "info" : "SingleVariableDeclaration[41472-41478]:SingleVariableDeclaration[41646-41652]"
  }, {
    "left" : "byte c",
    "right" : "byte c",
    "info" : "SingleVariableDeclaration[41480-41486]:SingleVariableDeclaration[41654-41660]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41488-41613]:Block[41662-41787]"
  }, {
    "left" : "if (b > a)",
    "right" : "if (b > a)",
    "info" : "IfStatement[41498-41539]:IfStatement[41672-41713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41509-41539]:Block[41683-41713]"
  }, {
    "left" : "a = b;",
    "right" : "a = b;",
    "info" : "ExpressionStatement[41523-41529]:ExpressionStatement[41697-41703]"
  }, {
    "left" : "if (c > a)",
    "right" : "if (c > a)",
    "info" : "IfStatement[41548-41589]:IfStatement[41722-41763]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41559-41589]:Block[41733-41763]"
  }, {
    "left" : "a = c;",
    "right" : "a = c;",
    "info" : "ExpressionStatement[41573-41579]:ExpressionStatement[41747-41753]"
  }, {
    "left" : "return a;",
    "right" : "return a;",
    "info" : "ReturnStatement[41598-41607]:ReturnStatement[41772-41781]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42053-42059]:Modifier[42227-42233]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[42060-42066]:Modifier[42234-42240]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[42067-42073]:PrimitiveType[42241-42247]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[42074-42077]:SimpleName[42248-42251]"
  }, {
    "left" : "double a",
    "right" : "double a",
    "info" : "SingleVariableDeclaration[42078-42086]:SingleVariableDeclaration[42252-42260]"
  }, {
    "left" : "double b",
    "right" : "double b",
    "info" : "SingleVariableDeclaration[42088-42096]:SingleVariableDeclaration[42262-42270]"
  }, {
    "left" : "double c",
    "right" : "double c",
    "info" : "SingleVariableDeclaration[42098-42106]:SingleVariableDeclaration[42272-42280]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42108-42159]:Block[42282-42333]"
  }, {
    "left" : "return Math.max(Math.max(a, b), c);",
    "right" : "return Math.max(Math.max(a, b), c);",
    "info" : "ReturnStatement[42118-42153]:ReturnStatement[42292-42327]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42595-42601]:Modifier[42769-42775]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[42602-42608]:Modifier[42776-42782]"
  }, {
    "left" : "float",
    "right" : "float",
    "info" : "PrimitiveType[42609-42614]:PrimitiveType[42783-42788]"
  }, {
    "left" : "max",
    "right" : "max",
    "info" : "SimpleName[42615-42618]:SimpleName[42789-42792]"
  }, {
    "left" : "float a",
    "right" : "float a",
    "info" : "SingleVariableDeclaration[42619-42626]:SingleVariableDeclaration[42793-42800]"
  }, {
    "left" : "float b",
    "right" : "float b",
    "info" : "SingleVariableDeclaration[42628-42635]:SingleVariableDeclaration[42802-42809]"
  }, {
    "left" : "float c",
    "right" : "float c",
    "info" : "SingleVariableDeclaration[42637-42644]:SingleVariableDeclaration[42811-42818]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42646-42697]:Block[42820-42871]"
  }, {
    "left" : "return Math.max(Math.max(a, b), c);",
    "right" : "return Math.max(Math.max(a, b), c);",
    "info" : "ReturnStatement[42656-42691]:ReturnStatement[42830-42865]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43113-43119]:Modifier[43287-43293]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[43120-43126]:Modifier[43294-43300]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[43127-43134]:PrimitiveType[43301-43308]"
  }, {
    "left" : "isDigits",
    "right" : "isDigits",
    "info" : "SimpleName[43135-43143]:SimpleName[43309-43317]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[43144-43154]:SingleVariableDeclaration[43318-43328]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43156-43416]:Block[43330-43590]"
  }, {
    "left" : "if (StringUtils.isEmpty(str))",
    "right" : "if (StringUtils.isEmpty(str))",
    "info" : "IfStatement[43166-43233]:IfStatement[43340-43407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43196-43233]:Block[43370-43407]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[43210-43223]:ReturnStatement[43384-43397]"
  }, {
    "left" : "for (int i = 0; i < str.length(); i++)",
    "right" : "for (int i = 0; i < str.length(); i++)",
    "info" : "ForStatement[43242-43389]:ForStatement[43416-43563]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43281-43389]:Block[43455-43563]"
  }, {
    "left" : "if (!Character.isDigit(str.charAt(i)))",
    "right" : "if (!Character.isDigit(str.charAt(i)))",
    "info" : "IfStatement[43295-43379]:IfStatement[43469-43553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43334-43379]:Block[43508-43553]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[43352-43365]:ReturnStatement[43526-43539]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[43398-43410]:ReturnStatement[43572-43584]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43918-43924]:Modifier[44092-44098]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[43925-43931]:Modifier[44099-44105]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[43932-43939]:PrimitiveType[44106-44113]"
  }, {
    "left" : "isNumber",
    "right" : "isNumber",
    "info" : "SimpleName[43940-43948]:SimpleName[44114-44122]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[43949-43959]:SingleVariableDeclaration[44123-44133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43961-47754]:Block[44135-47928]"
  }, {
    "left" : "if (StringUtils.isEmpty(str))",
    "right" : "if (StringUtils.isEmpty(str))",
    "info" : "IfStatement[43971-44038]:IfStatement[44145-44212]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44001-44038]:Block[44175-44212]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[44015-44028]:ReturnStatement[44189-44202]"
  }, {
    "left" : "char[] chars = str.toCharArray();",
    "right" : "char[] chars = str.toCharArray();",
    "info" : "VariableDeclarationStatement[44047-44080]:VariableDeclarationStatement[44221-44254]"
  }, {
    "left" : "int sz = chars.length;",
    "right" : "int sz = chars.length;",
    "info" : "VariableDeclarationStatement[44089-44111]:VariableDeclarationStatement[44263-44285]"
  }, {
    "left" : "boolean hasExp = false;",
    "right" : "boolean hasExp = false;",
    "info" : "VariableDeclarationStatement[44120-44143]:VariableDeclarationStatement[44294-44317]"
  }, {
    "left" : "boolean hasDecPoint = false;",
    "right" : "boolean hasDecPoint = false;",
    "info" : "VariableDeclarationStatement[44152-44180]:VariableDeclarationStatement[44326-44354]"
  }, {
    "left" : "boolean allowSigns = false;",
    "right" : "boolean allowSigns = false;",
    "info" : "VariableDeclarationStatement[44189-44216]:VariableDeclarationStatement[44363-44390]"
  }, {
    "left" : "boolean foundDigit = false;",
    "right" : "boolean foundDigit = false;",
    "info" : "VariableDeclarationStatement[44225-44252]:VariableDeclarationStatement[44399-44426]"
  }, {
    "left" : "int start = (chars[0] == '-') ? 1 : 0;",
    "right" : "int start = (chars[0] == '-') ? 1 : 0;",
    "info" : "VariableDeclarationStatement[44309-44347]:VariableDeclarationStatement[44483-44521]"
  }, {
    "left" : "if (sz > start + 1)",
    "right" : "if (sz > start + 1)",
    "info" : "IfStatement[44356-45001]:IfStatement[44530-45175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44376-45001]:Block[44550-45175]"
  }, {
    "left" : "if (chars[start] == '0' && chars[start + 1] == 'x')",
    "right" : "if (chars[start] == '0' && chars[start + 1] == 'x')",
    "info" : "IfStatement[44390-44991]:IfStatement[44564-45165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44442-44991]:Block[44616-45165]"
  }, {
    "left" : "int i = start + 2;",
    "right" : "int i = start + 2;",
    "info" : "VariableDeclarationStatement[44460-44478]:VariableDeclarationStatement[44634-44652]"
  }, {
    "left" : "if (i == sz)",
    "right" : "if (i == sz)",
    "info" : "IfStatement[44495-44576]:IfStatement[44669-44750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44508-44576]:Block[44682-44750]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[44530-44543]:ReturnStatement[44704-44717]"
  }, {
    "left" : "for (; i < chars.length; i++)",
    "right" : "for (; i < chars.length; i++)",
    "info" : "ForStatement[44653-44948]:ForStatement[44827-45122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44683-44948]:Block[44857-45122]"
  }, {
    "left" : "if ((chars[i] < '0' || chars[i] > '9')\n                        && (chars[i] < 'a' || chars[i] > 'f')\n                        && (chars[i] < 'A' || chars[i] > 'F'))",
    "right" : "if ((chars[i] < '0' || chars[i] > '9')\n                        && (chars[i] < 'a' || chars[i] > 'f')\n                        && (chars[i] < 'A' || chars[i] > 'F'))",
    "info" : "IfStatement[44705-44930]:IfStatement[44879-45104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44869-44930]:Block[45043-45104]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[44895-44908]:ReturnStatement[45069-45082]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[44965-44977]:ReturnStatement[45139-45151]"
  }, {
    "left" : "sz--;",
    "right" : "sz--;",
    "info" : "ExpressionStatement[45010-45015]:ExpressionStatement[45184-45189]"
  }, {
    "left" : "int i = start;",
    "right" : "int i = start;",
    "info" : "VariableDeclarationStatement[45121-45135]:VariableDeclarationStatement[45295-45309]"
  }, {
    "left" : "while (i < sz || (i < sz + 1 && allowSigns && !foundDigit))",
    "right" : "while (i < sz || (i < sz + 1 && allowSigns && !foundDigit))",
    "info" : "WhileStatement[45293-46441]:WhileStatement[45467-46615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45353-46441]:Block[45527-46615]"
  }, {
    "left" : "if (chars[i] >= '0' && chars[i] <= '9')",
    "right" : "if (chars[i] >= '0' && chars[i] <= '9')",
    "info" : "IfStatement[45367-46414]:IfStatement[45541-46588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45407-45494]:Block[45581-45668]"
  }, {
    "left" : "foundDigit = true;",
    "right" : "foundDigit = true;",
    "info" : "ExpressionStatement[45425-45443]:ExpressionStatement[45599-45617]"
  }, {
    "left" : "allowSigns = false;",
    "right" : "allowSigns = false;",
    "info" : "ExpressionStatement[45460-45479]:ExpressionStatement[45634-45653]"
  }, {
    "left" : "if (chars[i] == '.')",
    "right" : "if (chars[i] == '.')",
    "info" : "IfStatement[45500-46414]:IfStatement[45674-46588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45521-45733]:Block[45695-45907]"
  }, {
    "left" : "if (hasDecPoint || hasExp)",
    "right" : "if (hasDecPoint || hasExp)",
    "info" : "IfStatement[45539-45683]:IfStatement[45713-45857]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45566-45683]:Block[45740-45857]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[45652-45665]:ReturnStatement[45826-45839]"
  }, {
    "left" : "hasDecPoint = true;",
    "right" : "hasDecPoint = true;",
    "info" : "ExpressionStatement[45700-45719]:ExpressionStatement[45874-45893]"
  }, {
    "left" : "if (chars[i] == 'e' || chars[i] == 'E')",
    "right" : "if (chars[i] == 'e' || chars[i] == 'E')",
    "info" : "IfStatement[45739-46414]:IfStatement[45913-46588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45779-46112]:Block[45953-46286]"
  }, {
    "left" : "if (hasExp)",
    "right" : "if (hasExp)",
    "info" : "IfStatement[45849-45945]:IfStatement[46023-46119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45861-45945]:Block[46035-46119]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[45914-45927]:ReturnStatement[46088-46101]"
  }, {
    "left" : "if (!foundDigit)",
    "right" : "if (!foundDigit)",
    "info" : "IfStatement[45962-46032]:IfStatement[46136-46206]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45979-46032]:Block[46153-46206]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[46001-46014]:ReturnStatement[46175-46188]"
  }, {
    "left" : "hasExp = true;",
    "right" : "hasExp = true;",
    "info" : "ExpressionStatement[46049-46063]:ExpressionStatement[46223-46237]"
  }, {
    "left" : "allowSigns = true;",
    "right" : "allowSigns = true;",
    "info" : "ExpressionStatement[46080-46098]:ExpressionStatement[46254-46272]"
  }, {
    "left" : "if (chars[i] == '+' || chars[i] == '-')",
    "right" : "if (chars[i] == '+' || chars[i] == '-')",
    "info" : "IfStatement[46118-46414]:IfStatement[46292-46588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46158-46363]:Block[46332-46537]"
  }, {
    "left" : "if (!allowSigns)",
    "right" : "if (!allowSigns)",
    "info" : "IfStatement[46176-46246]:IfStatement[46350-46420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46193-46246]:Block[46367-46420]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[46215-46228]:ReturnStatement[46389-46402]"
  }, {
    "left" : "allowSigns = false;",
    "right" : "allowSigns = false;",
    "info" : "ExpressionStatement[46263-46282]:ExpressionStatement[46437-46456]"
  }, {
    "left" : "foundDigit = false;",
    "right" : "foundDigit = false;",
    "info" : "ExpressionStatement[46299-46318]:ExpressionStatement[46473-46492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46369-46414]:Block[46543-46588]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[46387-46400]:ReturnStatement[46561-46574]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[46427-46431]:ExpressionStatement[46601-46605]"
  }, {
    "left" : "if (i < chars.length)",
    "right" : "if (i < chars.length)",
    "info" : "IfStatement[46450-47569]:IfStatement[46624-47743]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46472-47569]:Block[46646-47743]"
  }, {
    "left" : "if (chars[i] >= '0' && chars[i] <= '9')",
    "right" : "if (chars[i] >= '0' && chars[i] <= '9')",
    "info" : "IfStatement[46486-46611]:IfStatement[46660-46785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46526-46611]:Block[46700-46785]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[46585-46597]:ReturnStatement[46759-46771]"
  }, {
    "left" : "if (chars[i] == 'e' || chars[i] == 'E')",
    "right" : "if (chars[i] == 'e' || chars[i] == 'E')",
    "info" : "IfStatement[46624-46761]:IfStatement[46798-46935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46664-46761]:Block[46838-46935]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[46734-46747]:ReturnStatement[46908-46921]"
  }, {
    "left" : "if (chars[i] == '.')",
    "right" : "if (chars[i] == '.')",
    "info" : "IfStatement[46774-47077]:IfStatement[46948-47251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46795-47077]:Block[46969-47251]"
  }, {
    "left" : "if (hasDecPoint || hasExp)",
    "right" : "if (hasDecPoint || hasExp)",
    "info" : "IfStatement[46813-46954]:IfStatement[46987-47128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46840-46954]:Block[47014-47128]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[46923-46936]:ReturnStatement[47097-47110]"
  }, {
    "left" : "return foundDigit;",
    "right" : "return foundDigit;",
    "info" : "ReturnStatement[47045-47063]:ReturnStatement[47219-47237]"
  }, {
    "left" : "if (!allowSigns\n                && (chars[i] == 'd'\n                    || chars[i] == 'D'\n                    || chars[i] == 'f'\n                    || chars[i] == 'F'))",
    "right" : "if (!allowSigns\n                && (chars[i] == 'd'\n                    || chars[i] == 'D'\n                    || chars[i] == 'f'\n                    || chars[i] == 'F'))",
    "info" : "IfStatement[47090-47311]:IfStatement[47264-47485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47261-47311]:Block[47435-47485]"
  }, {
    "left" : "return foundDigit;",
    "right" : "return foundDigit;",
    "info" : "ReturnStatement[47279-47297]:ReturnStatement[47453-47471]"
  }, {
    "left" : "if (chars[i] == 'l'\n                || chars[i] == 'L')",
    "right" : "if (chars[i] == 'l'\n                || chars[i] == 'L')",
    "info" : "IfStatement[47324-47492]:IfStatement[47498-47666]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47380-47492]:Block[47554-47666]"
  }, {
    "left" : "return foundDigit && !hasExp;",
    "right" : "return foundDigit && !hasExp;",
    "info" : "ReturnStatement[47449-47478]:ReturnStatement[47623-47652]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[47546-47559]:ReturnStatement[47720-47733]"
  }, {
    "left" : "return !allowSigns && foundDigit;",
    "right" : "return !allowSigns && foundDigit;",
    "info" : "ReturnStatement[47715-47748]:ReturnStatement[47889-47922]"
  } ]
}