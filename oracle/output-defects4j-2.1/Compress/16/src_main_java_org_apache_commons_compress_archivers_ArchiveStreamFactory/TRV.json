{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final String AR = \"ar\";",
      "right" : "public static final String AR = \"ar\";",
      "info" : "FieldDeclaration[3071-3215]:FieldDeclaration[3071-3215]"
    }, {
      "left" : "public static final String CPIO = \"cpio\";",
      "right" : "public static final String CPIO = \"cpio\";",
      "info" : "FieldDeclaration[3220-3370]:FieldDeclaration[3220-3370]"
    }, {
      "left" : "public static final String DUMP = \"dump\";",
      "right" : "public static final String DUMP = \"dump\";",
      "info" : "FieldDeclaration[3375-3530]:FieldDeclaration[3375-3530]"
    }, {
      "left" : "public static final String JAR = \"jar\";",
      "right" : "public static final String JAR = \"jar\";",
      "info" : "FieldDeclaration[3535-3682]:FieldDeclaration[3535-3682]"
    }, {
      "left" : "public static final String TAR = \"tar\";",
      "right" : "public static final String TAR = \"tar\";",
      "info" : "FieldDeclaration[3687-3834]:FieldDeclaration[3687-3834]"
    }, {
      "left" : "public static final String ZIP = \"zip\";",
      "right" : "public static final String ZIP = \"zip\";",
      "info" : "FieldDeclaration[3839-3986]:FieldDeclaration[3839-3986]"
    }, {
      "left" : "public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException",
      "right" : "public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException",
      "info" : "MethodDeclaration[3992-5558]:MethodDeclaration[3992-5558]"
    }, {
      "left" : "public ArchiveOutputStream createArchiveOutputStream(\n            final String archiverName, final OutputStream out)\n            throws ArchiveException",
      "right" : "public ArchiveOutputStream createArchiveOutputStream(\n            final String archiverName, final OutputStream out)\n            throws ArchiveException",
      "info" : "MethodDeclaration[5564-7027]:MethodDeclaration[5564-7027]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4559-5558]:Block[4559-5558]"
    }, {
      "left" : "if (archiverName == null)",
      "right" : "if (archiverName == null)",
      "info" : "IfStatement[4570-4689]:IfStatement[4570-4689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4596-4689]:Block[4596-4689]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Archivername must not be null.\");",
      "right" : "throw new IllegalArgumentException(\"Archivername must not be null.\");",
      "info" : "ThrowStatement[4610-4679]:ThrowStatement[4610-4679]"
    }, {
      "left" : "if (in == null)",
      "right" : "if (in == null)",
      "info" : "IfStatement[4699-4807]:IfStatement[4699-4807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4715-4807]:Block[4715-4807]"
    }, {
      "left" : "throw new IllegalArgumentException(\"InputStream must not be null.\");",
      "right" : "throw new IllegalArgumentException(\"InputStream must not be null.\");",
      "info" : "ThrowStatement[4729-4797]:ThrowStatement[4729-4797]"
    }, {
      "left" : "if (AR.equalsIgnoreCase(archiverName))",
      "right" : "if (AR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[4817-4916]:IfStatement[4817-4916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4856-4916]:Block[4856-4916]"
    }, {
      "left" : "return new ArArchiveInputStream(in);",
      "right" : "return new ArArchiveInputStream(in);",
      "info" : "ReturnStatement[4870-4906]:ReturnStatement[4870-4906]"
    }, {
      "left" : "if (ZIP.equalsIgnoreCase(archiverName))",
      "right" : "if (ZIP.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[4925-5026]:IfStatement[4925-5026]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4965-5026]:Block[4965-5026]"
    }, {
      "left" : "return new ZipArchiveInputStream(in);",
      "right" : "return new ZipArchiveInputStream(in);",
      "info" : "ReturnStatement[4979-5016]:ReturnStatement[4979-5016]"
    }, {
      "left" : "if (TAR.equalsIgnoreCase(archiverName))",
      "right" : "if (TAR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[5035-5136]:IfStatement[5035-5136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5075-5136]:Block[5075-5136]"
    }, {
      "left" : "return new TarArchiveInputStream(in);",
      "right" : "return new TarArchiveInputStream(in);",
      "info" : "ReturnStatement[5089-5126]:ReturnStatement[5089-5126]"
    }, {
      "left" : "if (JAR.equalsIgnoreCase(archiverName))",
      "right" : "if (JAR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[5145-5246]:IfStatement[5145-5246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5185-5246]:Block[5185-5246]"
    }, {
      "left" : "return new JarArchiveInputStream(in);",
      "right" : "return new JarArchiveInputStream(in);",
      "info" : "ReturnStatement[5199-5236]:ReturnStatement[5199-5236]"
    }, {
      "left" : "if (CPIO.equalsIgnoreCase(archiverName))",
      "right" : "if (CPIO.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[5255-5358]:IfStatement[5255-5358]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5296-5358]:Block[5296-5358]"
    }, {
      "left" : "return new CpioArchiveInputStream(in);",
      "right" : "return new CpioArchiveInputStream(in);",
      "info" : "ReturnStatement[5310-5348]:ReturnStatement[5310-5348]"
    }, {
      "left" : "if (DUMP.equalsIgnoreCase(archiverName))",
      "right" : "if (DUMP.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[5367-5470]:IfStatement[5367-5470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5408-5470]:Block[5408-5470]"
    }, {
      "left" : "return new DumpArchiveInputStream(in);",
      "right" : "return new DumpArchiveInputStream(in);",
      "info" : "ReturnStatement[5422-5460]:ReturnStatement[5422-5460]"
    }, {
      "left" : "throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");",
      "right" : "throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");",
      "info" : "ThrowStatement[5480-5552]:ThrowStatement[5480-5552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6131-7027]:Block[6131-7027]"
    }, {
      "left" : "if (archiverName == null)",
      "right" : "if (archiverName == null)",
      "info" : "IfStatement[6141-6260]:IfStatement[6141-6260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6167-6260]:Block[6167-6260]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Archivername must not be null.\");",
      "right" : "throw new IllegalArgumentException(\"Archivername must not be null.\");",
      "info" : "ThrowStatement[6181-6250]:ThrowStatement[6181-6250]"
    }, {
      "left" : "if (out == null)",
      "right" : "if (out == null)",
      "info" : "IfStatement[6269-6379]:IfStatement[6269-6379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6286-6379]:Block[6286-6379]"
    }, {
      "left" : "throw new IllegalArgumentException(\"OutputStream must not be null.\");",
      "right" : "throw new IllegalArgumentException(\"OutputStream must not be null.\");",
      "info" : "ThrowStatement[6300-6369]:ThrowStatement[6300-6369]"
    }, {
      "left" : "if (AR.equalsIgnoreCase(archiverName))",
      "right" : "if (AR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[6389-6490]:IfStatement[6389-6490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6428-6490]:Block[6428-6490]"
    }, {
      "left" : "return new ArArchiveOutputStream(out);",
      "right" : "return new ArArchiveOutputStream(out);",
      "info" : "ReturnStatement[6442-6480]:ReturnStatement[6442-6480]"
    }, {
      "left" : "if (ZIP.equalsIgnoreCase(archiverName))",
      "right" : "if (ZIP.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[6499-6602]:IfStatement[6499-6602]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6539-6602]:Block[6539-6602]"
    }, {
      "left" : "return new ZipArchiveOutputStream(out);",
      "right" : "return new ZipArchiveOutputStream(out);",
      "info" : "ReturnStatement[6553-6592]:ReturnStatement[6553-6592]"
    }, {
      "left" : "if (TAR.equalsIgnoreCase(archiverName))",
      "right" : "if (TAR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[6611-6714]:IfStatement[6611-6714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6651-6714]:Block[6651-6714]"
    }, {
      "left" : "return new TarArchiveOutputStream(out);",
      "right" : "return new TarArchiveOutputStream(out);",
      "info" : "ReturnStatement[6665-6704]:ReturnStatement[6665-6704]"
    }, {
      "left" : "if (JAR.equalsIgnoreCase(archiverName))",
      "right" : "if (JAR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[6723-6826]:IfStatement[6723-6826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6763-6826]:Block[6763-6826]"
    }, {
      "left" : "return new JarArchiveOutputStream(out);",
      "right" : "return new JarArchiveOutputStream(out);",
      "info" : "ReturnStatement[6777-6816]:ReturnStatement[6777-6816]"
    }, {
      "left" : "if (CPIO.equalsIgnoreCase(archiverName))",
      "right" : "if (CPIO.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[6835-6940]:IfStatement[6835-6940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6876-6940]:Block[6876-6940]"
    }, {
      "left" : "return new CpioArchiveOutputStream(out);",
      "right" : "return new CpioArchiveOutputStream(out);",
      "info" : "ReturnStatement[6890-6930]:ReturnStatement[6890-6930]"
    }, {
      "left" : "throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");",
      "right" : "throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");",
      "info" : "ThrowStatement[6949-7021]:ThrowStatement[6949-7021]"
    } ]
  },
  "interFileMappings" : { }
}