{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static void testSimpleToken()",
      "right" : "public static void testSimpleToken()",
      "info" : "MethodDeclaration[323-775]:MethodDeclaration[405-857]"
    }, {
      "left" : "public static void testSimpleTokenMismatch()",
      "right" : "public static void testSimpleTokenMismatch()",
      "info" : "MethodDeclaration[781-1260]:MethodDeclaration[863-1342]"
    }, {
      "left" : "public static void testMD5Token()",
      "right" : "public static void testMD5Token()",
      "info" : "MethodDeclaration[1266-1825]:MethodDeclaration[1348-1907]"
    }, {
      "left" : "public static void testMD5TokenMismatch()",
      "right" : "public static void testMD5TokenMismatch()",
      "info" : "MethodDeclaration[1831-2405]:MethodDeclaration[1913-2487]"
    }, {
      "left" : "public static void testSHAToken()",
      "right" : "public static void testSHAToken()",
      "info" : "MethodDeclaration[2411-2970]:MethodDeclaration[2493-3052]"
    }, {
      "left" : "public static void testSHATokenMismatch()",
      "right" : "public static void testSHATokenMismatch()",
      "info" : "MethodDeclaration[2976-3550]:MethodDeclaration[3058-3632]"
    }, {
      "left" : "public static void testAuthHeader()",
      "right" : "public static void testAuthHeader()",
      "info" : "MethodDeclaration[3556-3996]:MethodDeclaration[3638-4078]"
    }, {
      "left" : "public static void testAuthHeaderDifferent()",
      "right" : "public static void testAuthHeaderDifferent()",
      "info" : "MethodDeclaration[4002-4533]:MethodDeclaration[4084-4615]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[513-519]:Modifier[595-601]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[520-526]:Modifier[602-608]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[527-531]:PrimitiveType[609-613]"
    }, {
      "left" : "testSimpleToken",
      "right" : "testSimpleToken",
      "info" : "SimpleName[532-547]:SimpleName[614-629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[550-775]:Block[632-857]"
    }, {
      "left" : "SimpleToken token1=new SimpleToken();",
      "right" : "SimpleToken token1=new SimpleToken();",
      "info" : "VariableDeclarationStatement[560-597]:VariableDeclarationStatement[642-679]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[606-635]:ExpressionStatement[688-717]"
    }, {
      "left" : "SimpleToken token2=new SimpleToken();",
      "right" : "SimpleToken token2=new SimpleToken();",
      "info" : "VariableDeclarationStatement[644-681]:VariableDeclarationStatement[726-763]"
    }, {
      "left" : "token2.setAuthValue(\"chris\");",
      "right" : "token2.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[690-719]:ExpressionStatement[772-801]"
    }, {
      "left" : "assert token1.authenticate(token2, null);",
      "right" : "assert token1.authenticate(token2, null);",
      "info" : "AssertStatement[728-769]:AssertStatement[810-851]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[984-990]:Modifier[1066-1072]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[991-997]:Modifier[1073-1079]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[998-1002]:PrimitiveType[1080-1084]"
    }, {
      "left" : "testSimpleTokenMismatch",
      "right" : "testSimpleTokenMismatch",
      "info" : "SimpleName[1003-1026]:SimpleName[1085-1108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1029-1260]:Block[1111-1342]"
    }, {
      "left" : "SimpleToken token1=new SimpleToken();",
      "right" : "SimpleToken token1=new SimpleToken();",
      "info" : "VariableDeclarationStatement[1039-1076]:VariableDeclarationStatement[1121-1158]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[1085-1114]:ExpressionStatement[1167-1196]"
    }, {
      "left" : "SimpleToken token2=new SimpleToken();",
      "right" : "SimpleToken token2=new SimpleToken();",
      "info" : "VariableDeclarationStatement[1123-1160]:VariableDeclarationStatement[1205-1242]"
    }, {
      "left" : "token2.setAuthValue(\"chrismills\");",
      "right" : "token2.setAuthValue(\"chrismills\");",
      "info" : "ExpressionStatement[1169-1203]:ExpressionStatement[1251-1285]"
    }, {
      "left" : "assert !token1.authenticate(token2, null);",
      "right" : "assert !token1.authenticate(token2, null);",
      "info" : "AssertStatement[1212-1254]:AssertStatement[1294-1336]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1506-1512]:Modifier[1588-1594]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1513-1519]:Modifier[1595-1601]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1520-1524]:PrimitiveType[1602-1606]"
    }, {
      "left" : "testMD5Token",
      "right" : "testMD5Token",
      "info" : "SimpleName[1525-1537]:SimpleName[1607-1619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1540-1825]:Block[1622-1907]"
    }, {
      "left" : "MD5Token token1=new MD5Token();",
      "right" : "MD5Token token1=new MD5Token();",
      "info" : "VariableDeclarationStatement[1550-1581]:VariableDeclarationStatement[1632-1663]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[1590-1619]:ExpressionStatement[1672-1701]"
    }, {
      "left" : "token1.setHashType(\"MD5\");",
      "right" : "token1.setHashType(\"MD5\");",
      "info" : "ExpressionStatement[1628-1654]:ExpressionStatement[1710-1736]"
    }, {
      "left" : "MD5Token token2=new MD5Token();",
      "right" : "MD5Token token2=new MD5Token();",
      "info" : "VariableDeclarationStatement[1664-1695]:VariableDeclarationStatement[1746-1777]"
    }, {
      "left" : "token2.setAuthValue(\"chris\");",
      "right" : "token2.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[1704-1733]:ExpressionStatement[1786-1815]"
    }, {
      "left" : "token2.setHashType(\"MD5\");",
      "right" : "token2.setHashType(\"MD5\");",
      "info" : "ExpressionStatement[1742-1768]:ExpressionStatement[1824-1850]"
    }, {
      "left" : "assert token1.authenticate(token2, null);",
      "right" : "assert token1.authenticate(token2, null);",
      "info" : "AssertStatement[1778-1819]:AssertStatement[1860-1901]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2072-2078]:Modifier[2154-2160]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2079-2085]:Modifier[2161-2167]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2086-2090]:PrimitiveType[2168-2172]"
    }, {
      "left" : "testMD5TokenMismatch",
      "right" : "testMD5TokenMismatch",
      "info" : "SimpleName[2091-2111]:SimpleName[2173-2193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2114-2405]:Block[2196-2487]"
    }, {
      "left" : "MD5Token token1=new MD5Token();",
      "right" : "MD5Token token1=new MD5Token();",
      "info" : "VariableDeclarationStatement[2124-2155]:VariableDeclarationStatement[2206-2237]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[2164-2193]:ExpressionStatement[2246-2275]"
    }, {
      "left" : "token1.setHashType(\"MD5\");",
      "right" : "token1.setHashType(\"MD5\");",
      "info" : "ExpressionStatement[2202-2228]:ExpressionStatement[2284-2310]"
    }, {
      "left" : "MD5Token token2=new MD5Token();",
      "right" : "MD5Token token2=new MD5Token();",
      "info" : "VariableDeclarationStatement[2238-2269]:VariableDeclarationStatement[2320-2351]"
    }, {
      "left" : "token2.setAuthValue(\"chrismills\");",
      "right" : "token2.setAuthValue(\"chrismills\");",
      "info" : "ExpressionStatement[2278-2312]:ExpressionStatement[2360-2394]"
    }, {
      "left" : "token2.setHashType(\"MD5\");",
      "right" : "token2.setHashType(\"MD5\");",
      "info" : "ExpressionStatement[2321-2347]:ExpressionStatement[2403-2429]"
    }, {
      "left" : "assert !token1.authenticate(token2, null);",
      "right" : "assert !token1.authenticate(token2, null);",
      "info" : "AssertStatement[2357-2399]:AssertStatement[2439-2481]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2651-2657]:Modifier[2733-2739]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2658-2664]:Modifier[2740-2746]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2665-2669]:PrimitiveType[2747-2751]"
    }, {
      "left" : "testSHAToken",
      "right" : "testSHAToken",
      "info" : "SimpleName[2670-2682]:SimpleName[2752-2764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2685-2970]:Block[2767-3052]"
    }, {
      "left" : "MD5Token token1=new MD5Token();",
      "right" : "MD5Token token1=new MD5Token();",
      "info" : "VariableDeclarationStatement[2695-2726]:VariableDeclarationStatement[2777-2808]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[2735-2764]:ExpressionStatement[2817-2846]"
    }, {
      "left" : "token1.setHashType(\"SHA\");",
      "right" : "token1.setHashType(\"SHA\");",
      "info" : "ExpressionStatement[2773-2799]:ExpressionStatement[2855-2881]"
    }, {
      "left" : "MD5Token token2=new MD5Token();",
      "right" : "MD5Token token2=new MD5Token();",
      "info" : "VariableDeclarationStatement[2809-2840]:VariableDeclarationStatement[2891-2922]"
    }, {
      "left" : "token2.setAuthValue(\"chris\");",
      "right" : "token2.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[2849-2878]:ExpressionStatement[2931-2960]"
    }, {
      "left" : "token2.setHashType(\"SHA\");",
      "right" : "token2.setHashType(\"SHA\");",
      "info" : "ExpressionStatement[2887-2913]:ExpressionStatement[2969-2995]"
    }, {
      "left" : "assert token1.authenticate(token2, null);",
      "right" : "assert token1.authenticate(token2, null);",
      "info" : "AssertStatement[2923-2964]:AssertStatement[3005-3046]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3217-3223]:Modifier[3299-3305]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3224-3230]:Modifier[3306-3312]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3231-3235]:PrimitiveType[3313-3317]"
    }, {
      "left" : "testSHATokenMismatch",
      "right" : "testSHATokenMismatch",
      "info" : "SimpleName[3236-3256]:SimpleName[3318-3338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3259-3550]:Block[3341-3632]"
    }, {
      "left" : "MD5Token token1=new MD5Token();",
      "right" : "MD5Token token1=new MD5Token();",
      "info" : "VariableDeclarationStatement[3269-3300]:VariableDeclarationStatement[3351-3382]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[3309-3338]:ExpressionStatement[3391-3420]"
    }, {
      "left" : "token1.setHashType(\"SHA\");",
      "right" : "token1.setHashType(\"SHA\");",
      "info" : "ExpressionStatement[3347-3373]:ExpressionStatement[3429-3455]"
    }, {
      "left" : "MD5Token token2=new MD5Token();",
      "right" : "MD5Token token2=new MD5Token();",
      "info" : "VariableDeclarationStatement[3383-3414]:VariableDeclarationStatement[3465-3496]"
    }, {
      "left" : "token2.setAuthValue(\"chrismills\");",
      "right" : "token2.setAuthValue(\"chrismills\");",
      "info" : "ExpressionStatement[3423-3457]:ExpressionStatement[3505-3539]"
    }, {
      "left" : "token2.setHashType(\"SHA\");",
      "right" : "token2.setHashType(\"SHA\");",
      "info" : "ExpressionStatement[3466-3492]:ExpressionStatement[3548-3574]"
    }, {
      "left" : "assert !token1.authenticate(token2, null);",
      "right" : "assert !token1.authenticate(token2, null);",
      "info" : "AssertStatement[3502-3544]:AssertStatement[3584-3626]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3746-3752]:Modifier[3828-3834]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3753-3759]:Modifier[3835-3841]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3760-3764]:PrimitiveType[3842-3846]"
    }, {
      "left" : "testAuthHeader",
      "right" : "testAuthHeader",
      "info" : "SimpleName[3765-3779]:SimpleName[3847-3861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3782-3996]:Block[3864-4078]"
    }, {
      "left" : "SimpleToken token1=new SimpleToken();",
      "right" : "SimpleToken token1=new SimpleToken();",
      "info" : "VariableDeclarationStatement[3792-3829]:VariableDeclarationStatement[3874-3911]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[3838-3867]:ExpressionStatement[3920-3949]"
    }, {
      "left" : "AuthHeader header=new AuthHeader();",
      "right" : "AuthHeader header=new AuthHeader();",
      "info" : "VariableDeclarationStatement[3877-3912]:VariableDeclarationStatement[3959-3994]"
    }, {
      "left" : "header.setToken(token1);",
      "right" : "header.setToken(token1);",
      "info" : "ExpressionStatement[3921-3945]:ExpressionStatement[4003-4027]"
    }, {
      "left" : "assert token1 == header.getToken();",
      "right" : "assert token1 == header.getToken();",
      "info" : "AssertStatement[3955-3990]:AssertStatement[4037-4072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4186-4192]:Modifier[4268-4274]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4193-4199]:Modifier[4275-4281]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4200-4204]:PrimitiveType[4282-4286]"
    }, {
      "left" : "testAuthHeaderDifferent",
      "right" : "testAuthHeaderDifferent",
      "info" : "SimpleName[4205-4228]:SimpleName[4287-4310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4231-4533]:Block[4313-4615]"
    }, {
      "left" : "SimpleToken token1=new SimpleToken();",
      "right" : "SimpleToken token1=new SimpleToken();",
      "info" : "VariableDeclarationStatement[4241-4278]:VariableDeclarationStatement[4323-4360]"
    }, {
      "left" : "token1.setAuthValue(\"chris\");",
      "right" : "token1.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[4287-4316]:ExpressionStatement[4369-4398]"
    }, {
      "left" : "SimpleToken token2=new SimpleToken();",
      "right" : "SimpleToken token2=new SimpleToken();",
      "info" : "VariableDeclarationStatement[4326-4363]:VariableDeclarationStatement[4408-4445]"
    }, {
      "left" : "token2.setAuthValue(\"chris\");",
      "right" : "token2.setAuthValue(\"chris\");",
      "info" : "ExpressionStatement[4372-4401]:ExpressionStatement[4454-4483]"
    }, {
      "left" : "AuthHeader header=new AuthHeader();",
      "right" : "AuthHeader header=new AuthHeader();",
      "info" : "VariableDeclarationStatement[4411-4446]:VariableDeclarationStatement[4493-4528]"
    }, {
      "left" : "header.setToken(token1);",
      "right" : "header.setToken(token1);",
      "info" : "ExpressionStatement[4455-4479]:ExpressionStatement[4537-4561]"
    }, {
      "left" : "assert !(token2 == header.getToken());",
      "right" : "assert !(token2 == header.getToken());",
      "info" : "AssertStatement[4489-4527]:AssertStatement[4571-4609]"
    } ]
  },
  "interFileMappings" : { }
}