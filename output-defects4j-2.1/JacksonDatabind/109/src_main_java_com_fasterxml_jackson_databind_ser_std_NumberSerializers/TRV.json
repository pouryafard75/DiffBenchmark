{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "protected NumberSerializers()",
      "right" : "protected NumberSerializers()",
      "info" : "MethodDeclaration[777-810]:MethodDeclaration[806-839]"
    }, {
      "left" : "public static void addAll(Map<String, JsonSerializer<?>> allDeserializers)",
      "right" : "public static void addAll(Map<String, JsonSerializer<?>> allDeserializers)",
      "info" : "MethodDeclaration[816-1951]:MethodDeclaration[845-1980]"
    }, {
      "left" : "protected final JsonParser.NumberType _numberType;",
      "right" : "protected final JsonParser.NumberType _numberType;",
      "info" : "FieldDeclaration[2760-2810]:FieldDeclaration[2789-2839]"
    }, {
      "left" : "protected final String _schemaType;",
      "right" : "protected final String _schemaType;",
      "info" : "FieldDeclaration[2819-2854]:FieldDeclaration[2848-2883]"
    }, {
      "left" : "protected final boolean _isInt;",
      "right" : "protected final boolean _isInt;",
      "info" : "FieldDeclaration[2863-2894]:FieldDeclaration[2892-2923]"
    }, {
      "left" : "protected Base(Class<?> cls, JsonParser.NumberType numberType,\n                String schemaType)",
      "right" : "protected Base(Class<?> cls, JsonParser.NumberType numberType,\n                String schemaType)",
      "info" : "MethodDeclaration[2904-3323]:MethodDeclaration[2933-3352]"
    }, {
      "left" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)",
      "right" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)",
      "info" : "MethodDeclaration[3333-3488]:MethodDeclaration[3362-3517]"
    }, {
      "left" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor,\n                JavaType typeHint) throws JsonMappingException",
      "right" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor,\n                JavaType typeHint) throws JsonMappingException",
      "info" : "MethodDeclaration[3498-3859]:MethodDeclaration[3527-3888]"
    }, {
      "left" : "ShortSerializer",
      "right" : "ShortSerializer",
      "info" : "TypeDeclaration[4576-5063]:TypeDeclaration[4781-5268]"
    }, {
      "left" : "final static ShortSerializer instance = new ShortSerializer();",
      "right" : "final static ShortSerializer instance = new ShortSerializer();",
      "info" : "FieldDeclaration[4663-4725]:FieldDeclaration[4868-4930]"
    }, {
      "left" : "public ShortSerializer()",
      "right" : "public ShortSerializer()",
      "info" : "MethodDeclaration[4735-4840]:MethodDeclaration[4940-5045]"
    }, {
      "left" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "right" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "info" : "MethodDeclaration[4850-5057]:MethodDeclaration[5055-5262]"
    }, {
      "left" : "IntegerSerializer",
      "right" : "IntegerSerializer",
      "info" : "TypeDeclaration[5069-6282]:TypeDeclaration[5274-6487]"
    }, {
      "left" : "public IntegerSerializer(Class<?> type)",
      "right" : "public IntegerSerializer(Class<?> type)",
      "info" : "MethodDeclaration[5573-5687]:MethodDeclaration[5778-5892]"
    }, {
      "left" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "right" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "info" : "MethodDeclaration[5697-5904]:MethodDeclaration[5902-6109]"
    }, {
      "left" : "public void serializeWithType(Object value, JsonGenerator gen,\n                SerializerProvider provider, TypeSerializer typeSer)\n                throws IOException",
      "right" : "public void serializeWithType(Object value, JsonGenerator gen,\n                SerializerProvider provider, TypeSerializer typeSer)\n                throws IOException",
      "info" : "MethodDeclaration[5979-6276]:MethodDeclaration[6184-6481]"
    }, {
      "left" : "IntLikeSerializer",
      "right" : "IntLikeSerializer",
      "info" : "TypeDeclaration[6288-6999]:TypeDeclaration[6493-7204]"
    }, {
      "left" : "final static IntLikeSerializer instance = new IntLikeSerializer();",
      "right" : "final static IntLikeSerializer instance = new IntLikeSerializer();",
      "info" : "FieldDeclaration[6592-6658]:FieldDeclaration[6797-6863]"
    }, {
      "left" : "public IntLikeSerializer()",
      "right" : "public IntLikeSerializer()",
      "info" : "MethodDeclaration[6668-6777]:MethodDeclaration[6873-6982]"
    }, {
      "left" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "right" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "info" : "MethodDeclaration[6787-6993]:MethodDeclaration[6992-7198]"
    }, {
      "left" : "LongSerializer",
      "right" : "LongSerializer",
      "info" : "TypeDeclaration[7005-7421]:TypeDeclaration[7210-7626]"
    }, {
      "left" : "public LongSerializer(Class<?> cls)",
      "right" : "public LongSerializer(Class<?> cls)",
      "info" : "MethodDeclaration[7091-7200]:MethodDeclaration[7296-7405]"
    }, {
      "left" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "right" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "info" : "MethodDeclaration[7210-7415]:MethodDeclaration[7415-7620]"
    }, {
      "left" : "FloatSerializer",
      "right" : "FloatSerializer",
      "info" : "TypeDeclaration[7427-7916]:TypeDeclaration[7632-8121]"
    }, {
      "left" : "final static FloatSerializer instance = new FloatSerializer();",
      "right" : "final static FloatSerializer instance = new FloatSerializer();",
      "info" : "FieldDeclaration[7514-7576]:FieldDeclaration[7719-7781]"
    }, {
      "left" : "public FloatSerializer()",
      "right" : "public FloatSerializer()",
      "info" : "MethodDeclaration[7586-7693]:MethodDeclaration[7791-7898]"
    }, {
      "left" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "right" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "info" : "MethodDeclaration[7703-7910]:MethodDeclaration[7908-8115]"
    }, {
      "left" : "DoubleSerializer",
      "right" : "DoubleSerializer",
      "info" : "TypeDeclaration[7922-9015]:TypeDeclaration[8127-9220]"
    }, {
      "left" : "public DoubleSerializer(Class<?> cls)",
      "right" : "public DoubleSerializer(Class<?> cls)",
      "info" : "MethodDeclaration[8305-8418]:MethodDeclaration[8510-8623]"
    }, {
      "left" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "right" : "public void serialize(Object value, JsonGenerator gen,\n                SerializerProvider provider) throws IOException",
      "info" : "MethodDeclaration[8428-8637]:MethodDeclaration[8633-8842]"
    }, {
      "left" : "public void serializeWithType(Object value, JsonGenerator gen,\n                SerializerProvider provider, TypeSerializer typeSer)\n                throws IOException",
      "right" : "public void serializeWithType(Object value, JsonGenerator gen,\n                SerializerProvider provider, TypeSerializer typeSer)\n                throws IOException",
      "info" : "MethodDeclaration[8712-9009]:MethodDeclaration[8917-9214]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[807-810]:Block[836-839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[891-1951]:Block[920-1980]"
    }, {
      "left" : "allDeserializers.put(Integer.class.getName(), new IntegerSerializer(Integer.class));",
      "right" : "allDeserializers.put(Integer.class.getName(), new IntegerSerializer(Integer.class));",
      "info" : "ExpressionStatement[901-985]:ExpressionStatement[930-1014]"
    }, {
      "left" : "allDeserializers.put(Integer.TYPE.getName(), new IntegerSerializer(Integer.TYPE));",
      "right" : "allDeserializers.put(Integer.TYPE.getName(), new IntegerSerializer(Integer.TYPE));",
      "info" : "ExpressionStatement[994-1076]:ExpressionStatement[1023-1105]"
    }, {
      "left" : "allDeserializers.put(Long.class.getName(), new LongSerializer(Long.class));",
      "right" : "allDeserializers.put(Long.class.getName(), new LongSerializer(Long.class));",
      "info" : "ExpressionStatement[1085-1160]:ExpressionStatement[1114-1189]"
    }, {
      "left" : "allDeserializers.put(Long.TYPE.getName(), new LongSerializer(Long.TYPE));",
      "right" : "allDeserializers.put(Long.TYPE.getName(), new LongSerializer(Long.TYPE));",
      "info" : "ExpressionStatement[1169-1242]:ExpressionStatement[1198-1271]"
    }, {
      "left" : "allDeserializers.put(Byte.class.getName(), IntLikeSerializer.instance);",
      "right" : "allDeserializers.put(Byte.class.getName(), IntLikeSerializer.instance);",
      "info" : "ExpressionStatement[1252-1323]:ExpressionStatement[1281-1352]"
    }, {
      "left" : "allDeserializers.put(Byte.TYPE.getName(), IntLikeSerializer.instance);",
      "right" : "allDeserializers.put(Byte.TYPE.getName(), IntLikeSerializer.instance);",
      "info" : "ExpressionStatement[1332-1402]:ExpressionStatement[1361-1431]"
    }, {
      "left" : "allDeserializers.put(Short.class.getName(), ShortSerializer.instance);",
      "right" : "allDeserializers.put(Short.class.getName(), ShortSerializer.instance);",
      "info" : "ExpressionStatement[1411-1481]:ExpressionStatement[1440-1510]"
    }, {
      "left" : "allDeserializers.put(Short.TYPE.getName(), ShortSerializer.instance);",
      "right" : "allDeserializers.put(Short.TYPE.getName(), ShortSerializer.instance);",
      "info" : "ExpressionStatement[1490-1559]:ExpressionStatement[1519-1588]"
    }, {
      "left" : "allDeserializers.put(Double.class.getName(), new DoubleSerializer(Double.class));",
      "right" : "allDeserializers.put(Double.class.getName(), new DoubleSerializer(Double.class));",
      "info" : "ExpressionStatement[1619-1700]:ExpressionStatement[1648-1729]"
    }, {
      "left" : "allDeserializers.put(Double.TYPE.getName(), new DoubleSerializer(Double.TYPE));",
      "right" : "allDeserializers.put(Double.TYPE.getName(), new DoubleSerializer(Double.TYPE));",
      "info" : "ExpressionStatement[1709-1788]:ExpressionStatement[1738-1817]"
    }, {
      "left" : "allDeserializers.put(Float.class.getName(), FloatSerializer.instance);",
      "right" : "allDeserializers.put(Float.class.getName(), FloatSerializer.instance);",
      "info" : "ExpressionStatement[1797-1867]:ExpressionStatement[1826-1896]"
    }, {
      "left" : "allDeserializers.put(Float.TYPE.getName(), FloatSerializer.instance);",
      "right" : "allDeserializers.put(Float.TYPE.getName(), FloatSerializer.instance);",
      "info" : "ExpressionStatement[1876-1945]:ExpressionStatement[1905-1974]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3002-3323]:Block[3031-3352]"
    }, {
      "left" : "super(cls, false);",
      "right" : "super(cls, false);",
      "info" : "SuperConstructorInvocation[3016-3034]:SuperConstructorInvocation[3045-3063]"
    }, {
      "left" : "_numberType = numberType;",
      "right" : "_numberType = numberType;",
      "info" : "ExpressionStatement[3047-3072]:ExpressionStatement[3076-3101]"
    }, {
      "left" : "_schemaType = schemaType;",
      "right" : "_schemaType = schemaType;",
      "info" : "ExpressionStatement[3085-3110]:ExpressionStatement[3114-3139]"
    }, {
      "left" : "_isInt = (numberType == JsonParser.NumberType.INT)\n                    || (numberType == JsonParser.NumberType.LONG)\n                    || (numberType == JsonParser.NumberType.BIG_INTEGER);",
      "right" : "_isInt = (numberType == JsonParser.NumberType.INT)\n                    || (numberType == JsonParser.NumberType.LONG)\n                    || (numberType == JsonParser.NumberType.BIG_INTEGER);",
      "info" : "ExpressionStatement[3123-3313]:ExpressionStatement[3152-3342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3421-3488]:Block[3450-3517]"
    }, {
      "left" : "return createSchemaNode(_schemaType, true);",
      "right" : "return createSchemaNode(_schemaType, true);",
      "info" : "ReturnStatement[3435-3478]:ReturnStatement[3464-3507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3657-3859]:Block[3686-3888]"
    }, {
      "left" : "if (_isInt)",
      "right" : "if (_isInt)",
      "info" : "IfStatement[3671-3849]:IfStatement[3700-3878]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3683-3762]:Block[3712-3791]"
    }, {
      "left" : "visitIntFormat(visitor, typeHint, _numberType);",
      "right" : "visitIntFormat(visitor, typeHint, _numberType);",
      "info" : "ExpressionStatement[3701-3748]:ExpressionStatement[3730-3777]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3768-3849]:Block[3797-3878]"
    }, {
      "left" : "visitFloatFormat(visitor, typeHint, _numberType);",
      "right" : "visitFloatFormat(visitor, typeHint, _numberType);",
      "info" : "ExpressionStatement[3786-3835]:ExpressionStatement[3815-3864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4760-4840]:Block[4965-5045]"
    }, {
      "left" : "super(Short.class, JsonParser.NumberType.INT, \"number\");",
      "right" : "super(Short.class, JsonParser.NumberType.INT, \"number\");",
      "info" : "SuperConstructorInvocation[4774-4830]:SuperConstructorInvocation[4979-5035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4987-5057]:Block[5192-5262]"
    }, {
      "left" : "gen.writeNumber(((Short) value).shortValue());",
      "right" : "gen.writeNumber(((Short) value).shortValue());",
      "info" : "ExpressionStatement[5001-5047]:ExpressionStatement[5206-5252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5613-5687]:Block[5818-5892]"
    }, {
      "left" : "super(type, JsonParser.NumberType.INT, \"integer\");",
      "right" : "super(type, JsonParser.NumberType.INT, \"integer\");",
      "info" : "SuperConstructorInvocation[5627-5677]:SuperConstructorInvocation[5832-5882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5834-5904]:Block[6039-6109]"
    }, {
      "left" : "gen.writeNumber(((Integer) value).intValue());",
      "right" : "gen.writeNumber(((Integer) value).intValue());",
      "info" : "ExpressionStatement[5848-5894]:ExpressionStatement[6053-6099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6164-6276]:Block[6369-6481]"
    }, {
      "left" : "serialize(value, gen, provider);",
      "right" : "serialize(value, gen, provider);",
      "info" : "ExpressionStatement[6234-6266]:ExpressionStatement[6439-6471]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6695-6777]:Block[6900-6982]"
    }, {
      "left" : "super(Number.class, JsonParser.NumberType.INT, \"integer\");",
      "right" : "super(Number.class, JsonParser.NumberType.INT, \"integer\");",
      "info" : "SuperConstructorInvocation[6709-6767]:SuperConstructorInvocation[6914-6972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6924-6993]:Block[7129-7198]"
    }, {
      "left" : "gen.writeNumber(((Number) value).intValue());",
      "right" : "gen.writeNumber(((Number) value).intValue());",
      "info" : "ExpressionStatement[6938-6983]:ExpressionStatement[7143-7188]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7127-7200]:Block[7332-7405]"
    }, {
      "left" : "super(cls, JsonParser.NumberType.LONG, \"number\");",
      "right" : "super(cls, JsonParser.NumberType.LONG, \"number\");",
      "info" : "SuperConstructorInvocation[7141-7190]:SuperConstructorInvocation[7346-7395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7347-7415]:Block[7552-7620]"
    }, {
      "left" : "gen.writeNumber(((Long) value).longValue());",
      "right" : "gen.writeNumber(((Long) value).longValue());",
      "info" : "ExpressionStatement[7361-7405]:ExpressionStatement[7566-7610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7611-7693]:Block[7816-7898]"
    }, {
      "left" : "super(Float.class, JsonParser.NumberType.FLOAT, \"number\");",
      "right" : "super(Float.class, JsonParser.NumberType.FLOAT, \"number\");",
      "info" : "SuperConstructorInvocation[7625-7683]:SuperConstructorInvocation[7830-7888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7840-7910]:Block[8045-8115]"
    }, {
      "left" : "gen.writeNumber(((Float) value).floatValue());",
      "right" : "gen.writeNumber(((Float) value).floatValue());",
      "info" : "ExpressionStatement[7854-7900]:ExpressionStatement[8059-8105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8343-8418]:Block[8548-8623]"
    }, {
      "left" : "super(cls, JsonParser.NumberType.DOUBLE, \"number\");",
      "right" : "super(cls, JsonParser.NumberType.DOUBLE, \"number\");",
      "info" : "SuperConstructorInvocation[8357-8408]:SuperConstructorInvocation[8562-8613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8565-8637]:Block[8770-8842]"
    }, {
      "left" : "gen.writeNumber(((Double) value).doubleValue());",
      "right" : "gen.writeNumber(((Double) value).doubleValue());",
      "info" : "ExpressionStatement[8579-8627]:ExpressionStatement[8784-8832]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8897-9009]:Block[9102-9214]"
    }, {
      "left" : "serialize(value, gen, provider);",
      "right" : "serialize(value, gen, provider);",
      "info" : "ExpressionStatement[8967-8999]:ExpressionStatement[9172-9204]"
    } ]
  },
  "interFileMappings" : { }
}