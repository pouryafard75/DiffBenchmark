{
  "matchedElements" : [
 {
    "left" : "class : $Gson$Types",
    "right" : "class : $Gson$Types",
    "info" : "TypeDeclaration[1138-21790]:TypeDeclaration[1138-21900]"
  }, {
    "left" : "EMPTY_TYPE_ARRAY",
    "right" : "EMPTY_TYPE_ARRAY",
    "info" : "FieldDeclaration[1269-1322]:FieldDeclaration[1269-1322]"
  }, {
    "left" : "private $Gson$Types()",
    "right" : "private $Gson$Types()",
    "info" : "MethodDeclaration[1326-1400]:MethodDeclaration[1326-1400]"
  }, {
    "left" : "public newParameterizedTypeWithOwner(ownerType , rawType , ) : ",
    "right" : "public newParameterizedTypeWithOwner(ownerType , rawType , ) : ",
    "info" : "MethodDeclaration[1404-1827]:MethodDeclaration[1404-1827]"
  }, {
    "left" : "public arrayOf(componentType ) : ",
    "right" : "public arrayOf(componentType ) : ",
    "info" : "MethodDeclaration[1831-2132]:MethodDeclaration[1831-2132]"
  }, {
    "left" : "public subtypeOf(bound ) : ",
    "right" : "public subtypeOf(bound ) : ",
    "info" : "MethodDeclaration[2136-2769]:MethodDeclaration[2136-2769]"
  }, {
    "left" : "public supertypeOf(bound ) : ",
    "right" : "public supertypeOf(bound ) : ",
    "info" : "MethodDeclaration[2773-3280]:MethodDeclaration[2773-3280]"
  }, {
    "left" : "public canonicalize(type ) : ",
    "right" : "public canonicalize(type ) : ",
    "info" : "MethodDeclaration[3284-4355]:MethodDeclaration[3284-4355]"
  }, {
    "left" : "public getRawType(type ) : ",
    "right" : "public getRawType(type ) : ",
    "info" : "MethodDeclaration[4359-5759]:MethodDeclaration[4359-5759]"
  }, {
    "left" : "package equal(a , b ) : boolean",
    "right" : "package equal(a , b ) : boolean",
    "info" : "MethodDeclaration[5763-5858]:MethodDeclaration[5763-5858]"
  }, {
    "left" : "public equals(a , b ) : boolean",
    "right" : "public equals(a , b ) : boolean",
    "info" : "MethodDeclaration[5862-7744]:MethodDeclaration[5862-7744]"
  }, {
    "left" : "package hashCodeOrZero(o ) : int",
    "right" : "package hashCodeOrZero(o ) : int",
    "info" : "MethodDeclaration[7748-7830]:MethodDeclaration[7748-7830]"
  }, {
    "left" : "public typeToString(type ) : ",
    "right" : "public typeToString(type ) : ",
    "info" : "MethodDeclaration[7834-7966]:MethodDeclaration[7834-7966]"
  }, {
    "left" : "package getGenericSupertype(context , rawType , toResolve ) : ",
    "right" : "package getGenericSupertype(context , rawType , toResolve ) : ",
    "info" : "MethodDeclaration[7970-9451]:MethodDeclaration[7970-9451]"
  }, {
    "left" : "package getSupertype(context , contextRawType , supertype ) : ",
    "right" : "package getSupertype(context , contextRawType , supertype ) : ",
    "info" : "MethodDeclaration[9455-10125]:MethodDeclaration[9455-10235]"
  }, {
    "left" : "public getArrayComponentType(array ) : ",
    "right" : "public getArrayComponentType(array ) : ",
    "info" : "MethodDeclaration[10129-10470]:MethodDeclaration[10239-10580]"
  }, {
    "left" : "public getCollectionElementType(context , contextRawType ) : ",
    "right" : "public getCollectionElementType(context , contextRawType ) : ",
    "info" : "MethodDeclaration[10474-11081]:MethodDeclaration[10584-11191]"
  }, {
    "left" : "public getMapKeyAndValueTypes(context , contextRawType ) : ",
    "right" : "public getMapKeyAndValueTypes(context , contextRawType ) : ",
    "info" : "MethodDeclaration[11085-11996]:MethodDeclaration[11195-12106]"
  }, {
    "left" : "public resolve(context , contextRawType , toResolve ) : ",
    "right" : "public resolve(context , contextRawType , toResolve ) : ",
    "info" : "MethodDeclaration[12000-12172]:MethodDeclaration[12110-12282]"
  }, {
    "left" : "private resolve(context , contextRawType , toResolve , visitedTypeVariables ...) : ",
    "right" : "private resolve(context , contextRawType , toResolve , visitedTypeVariables ...) : ",
    "info" : "MethodDeclaration[12176-15534]:MethodDeclaration[12286-15644]"
  }, {
    "left" : "package resolveTypeVariable(context , contextRawType , unknown ) : ",
    "right" : "package resolveTypeVariable(context , contextRawType , unknown ) : ",
    "info" : "MethodDeclaration[15538-16105]:MethodDeclaration[15648-16215]"
  }, {
    "left" : "private indexOf(array , toFind ) : int",
    "right" : "private indexOf(array , toFind ) : int",
    "info" : "MethodDeclaration[16109-16343]:MethodDeclaration[16219-16453]"
  }, {
    "left" : "private declaringClassOf(typeVariable ) : ",
    "right" : "private declaringClassOf(typeVariable ) : ",
    "info" : "MethodDeclaration[16347-16734]:MethodDeclaration[16457-16844]"
  }, {
    "left" : "package checkNotPrimitive(type ) : void",
    "right" : "package checkNotPrimitive(type ) : void",
    "info" : "MethodDeclaration[16738-16868]:MethodDeclaration[16848-16978]"
  }, {
    "left" : "class : ParameterizedTypeImpl",
    "right" : "class : ParameterizedTypeImpl",
    "info" : "TypeDeclaration[16872-19076]:TypeDeclaration[16982-19186]"
  }, {
    "left" : "ownerType",
    "right" : "ownerType",
    "info" : "FieldDeclaration[16970-16999]:FieldDeclaration[17080-17109]"
  }, {
    "left" : "rawType",
    "right" : "rawType",
    "info" : "FieldDeclaration[17004-17031]:FieldDeclaration[17114-17141]"
  }, {
    "left" : "typeArguments",
    "right" : "typeArguments",
    "info" : "FieldDeclaration[17036-17071]:FieldDeclaration[17146-17181]"
  }, {
    "left" : "public ParameterizedTypeImpl(ownerType , rawType , )",
    "right" : "public ParameterizedTypeImpl(ownerType , rawType , )",
    "info" : "MethodDeclaration[17077-17963]:MethodDeclaration[17187-18073]"
  }, {
    "left" : "public getActualTypeArguments() : ",
    "right" : "public getActualTypeArguments() : ",
    "info" : "MethodDeclaration[17969-18051]:MethodDeclaration[18079-18161]"
  }, {
    "left" : "public getRawType() : ",
    "right" : "public getRawType() : ",
    "info" : "MethodDeclaration[18057-18111]:MethodDeclaration[18167-18221]"
  }, {
    "left" : "public getOwnerType() : ",
    "right" : "public getOwnerType() : ",
    "info" : "MethodDeclaration[18117-18175]:MethodDeclaration[18227-18285]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[18181-18348]:MethodDeclaration[18291-18458]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[18354-18507]:MethodDeclaration[18464-18617]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[18513-19019]:MethodDeclaration[18623-19129]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[19025-19072]:FieldDeclaration[19135-19182]"
  }, {
    "left" : "class : GenericArrayTypeImpl",
    "right" : "class : GenericArrayTypeImpl",
    "info" : "TypeDeclaration[19080-19802]:TypeDeclaration[19190-19912]"
  }, {
    "left" : "componentType",
    "right" : "componentType",
    "info" : "FieldDeclaration[19176-19209]:FieldDeclaration[19286-19319]"
  }, {
    "left" : "public GenericArrayTypeImpl(componentType )",
    "right" : "public GenericArrayTypeImpl(componentType )",
    "info" : "MethodDeclaration[19215-19326]:MethodDeclaration[19325-19436]"
  }, {
    "left" : "public getGenericComponentType() : ",
    "right" : "public getGenericComponentType() : ",
    "info" : "MethodDeclaration[19332-19405]:MethodDeclaration[19442-19515]"
  }, {
    "left" : "public equals(o ) : boolean",
    "right" : "public equals(o ) : boolean",
    "info" : "MethodDeclaration[19411-19564]:MethodDeclaration[19521-19674]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[19570-19648]:MethodDeclaration[19680-19758]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[19654-19745]:MethodDeclaration[19764-19855]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[19751-19798]:FieldDeclaration[19861-19908]"
  }, {
    "left" : "class : WildcardTypeImpl",
    "right" : "class : WildcardTypeImpl",
    "info" : "TypeDeclaration[19806-21788]:TypeDeclaration[19916-21898]"
  }, {
    "left" : "upperBound",
    "right" : "upperBound",
    "info" : "FieldDeclaration[20137-20167]:FieldDeclaration[20247-20277]"
  }, {
    "left" : "lowerBound",
    "right" : "lowerBound",
    "info" : "FieldDeclaration[20172-20202]:FieldDeclaration[20282-20312]"
  }, {
    "left" : "public WildcardTypeImpl(upperBounds , lowerBounds ...)",
    "right" : "public WildcardTypeImpl(upperBounds , lowerBounds ...)",
    "info" : "MethodDeclaration[20208-20834]:MethodDeclaration[20318-20944]"
  }, {
    "left" : "public getUpperBounds() : ",
    "right" : "public getUpperBounds() : ",
    "info" : "MethodDeclaration[20840-20918]:MethodDeclaration[20950-21028]"
  }, {
    "left" : "public getLowerBounds() : ",
    "right" : "public getLowerBounds() : ",
    "info" : "MethodDeclaration[20924-21042]:MethodDeclaration[21034-21152]"
  }, {
    "left" : "public equals(other ) : boolean",
    "right" : "public equals(other ) : boolean",
    "info" : "MethodDeclaration[21048-21205]:MethodDeclaration[21158-21315]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[21211-21451]:MethodDeclaration[21321-21561]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[21457-21731]:MethodDeclaration[21567-21841]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[21737-21784]:FieldDeclaration[21847-21894]"
  } ],
  "mappings" : [
 {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1326-1333]:Modifier[1326-1333]"
  }, {
    "left" : "$Gson$Types",
    "right" : "$Gson$Types",
    "info" : "SimpleName[1334-1345]:SimpleName[1334-1345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1348-1400]:Block[1348-1400]"
  }, {
    "left" : "throw new UnsupportedOperationException();",
    "right" : "throw new UnsupportedOperationException();",
    "info" : "ThrowStatement[1354-1396]:ThrowStatement[1354-1396]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1627-1633]:Modifier[1627-1633]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1634-1640]:Modifier[1634-1640]"
  }, {
    "left" : "ParameterizedType",
    "right" : "ParameterizedType",
    "info" : "SimpleType[1641-1658]:SimpleType[1641-1658]"
  }, {
    "left" : "newParameterizedTypeWithOwner",
    "right" : "newParameterizedTypeWithOwner",
    "info" : "SimpleName[1659-1688]:SimpleName[1659-1688]"
  }, {
    "left" : "Type ownerType",
    "right" : "Type ownerType",
    "info" : "SingleVariableDeclaration[1696-1710]:SingleVariableDeclaration[1696-1710]"
  }, {
    "left" : "Type rawType",
    "right" : "Type rawType",
    "info" : "SingleVariableDeclaration[1712-1724]:SingleVariableDeclaration[1712-1724]"
  }, {
    "left" : "Type... typeArguments",
    "right" : "Type... typeArguments",
    "info" : "SingleVariableDeclaration[1726-1747]:SingleVariableDeclaration[1726-1747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1749-1827]:Block[1749-1827]"
  }, {
    "left" : "return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);",
    "right" : "return new ParameterizedTypeImpl(ownerType, rawType, typeArguments);",
    "info" : "ReturnStatement[1755-1823]:ReturnStatement[1755-1823]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2016-2022]:Modifier[2016-2022]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2023-2029]:Modifier[2023-2029]"
  }, {
    "left" : "GenericArrayType",
    "right" : "GenericArrayType",
    "info" : "SimpleType[2030-2046]:SimpleType[2030-2046]"
  }, {
    "left" : "arrayOf",
    "right" : "arrayOf",
    "info" : "SimpleName[2047-2054]:SimpleName[2047-2054]"
  }, {
    "left" : "Type componentType",
    "right" : "Type componentType",
    "info" : "SingleVariableDeclaration[2055-2073]:SingleVariableDeclaration[2055-2073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2075-2132]:Block[2075-2132]"
  }, {
    "left" : "return new GenericArrayTypeImpl(componentType);",
    "right" : "return new GenericArrayTypeImpl(componentType);",
    "info" : "ReturnStatement[2081-2128]:ReturnStatement[2081-2128]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2464-2470]:Modifier[2464-2470]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2471-2477]:Modifier[2471-2477]"
  }, {
    "left" : "WildcardType",
    "right" : "WildcardType",
    "info" : "SimpleType[2478-2490]:SimpleType[2478-2490]"
  }, {
    "left" : "subtypeOf",
    "right" : "subtypeOf",
    "info" : "SimpleName[2491-2500]:SimpleName[2491-2500]"
  }, {
    "left" : "Type bound",
    "right" : "Type bound",
    "info" : "SingleVariableDeclaration[2501-2511]:SingleVariableDeclaration[2501-2511]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2513-2769]:Block[2513-2769]"
  }, {
    "left" : "Type[] upperBounds;",
    "right" : "Type[] upperBounds;",
    "info" : "VariableDeclarationStatement[2519-2538]:VariableDeclarationStatement[2519-2538]"
  }, {
    "left" : "if (bound instanceof WildcardType)",
    "right" : "if (bound instanceof WildcardType)",
    "info" : "IfStatement[2543-2701]:IfStatement[2543-2701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2578-2646]:Block[2578-2646]"
  }, {
    "left" : "upperBounds = ((WildcardType) bound).getUpperBounds();",
    "right" : "upperBounds = ((WildcardType) bound).getUpperBounds();",
    "info" : "ExpressionStatement[2586-2640]:ExpressionStatement[2586-2640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2652-2701]:Block[2652-2701]"
  }, {
    "left" : "upperBounds = new Type[] { bound };",
    "right" : "upperBounds = new Type[] { bound };",
    "info" : "ExpressionStatement[2660-2695]:ExpressionStatement[2660-2695]"
  }, {
    "left" : "return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);",
    "right" : "return new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);",
    "info" : "ReturnStatement[2706-2765]:ReturnStatement[2706-2765]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2962-2968]:Modifier[2962-2968]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2969-2975]:Modifier[2969-2975]"
  }, {
    "left" : "WildcardType",
    "right" : "WildcardType",
    "info" : "SimpleType[2976-2988]:SimpleType[2976-2988]"
  }, {
    "left" : "supertypeOf",
    "right" : "supertypeOf",
    "info" : "SimpleName[2989-3000]:SimpleName[2989-3000]"
  }, {
    "left" : "Type bound",
    "right" : "Type bound",
    "info" : "SingleVariableDeclaration[3001-3011]:SingleVariableDeclaration[3001-3011]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3013-3280]:Block[3013-3280]"
  }, {
    "left" : "Type[] lowerBounds;",
    "right" : "Type[] lowerBounds;",
    "info" : "VariableDeclarationStatement[3019-3038]:VariableDeclarationStatement[3019-3038]"
  }, {
    "left" : "if (bound instanceof WildcardType)",
    "right" : "if (bound instanceof WildcardType)",
    "info" : "IfStatement[3043-3201]:IfStatement[3043-3201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3078-3146]:Block[3078-3146]"
  }, {
    "left" : "lowerBounds = ((WildcardType) bound).getLowerBounds();",
    "right" : "lowerBounds = ((WildcardType) bound).getLowerBounds();",
    "info" : "ExpressionStatement[3086-3140]:ExpressionStatement[3086-3140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3152-3201]:Block[3152-3201]"
  }, {
    "left" : "lowerBounds = new Type[] { bound };",
    "right" : "lowerBounds = new Type[] { bound };",
    "info" : "ExpressionStatement[3160-3195]:ExpressionStatement[3160-3195]"
  }, {
    "left" : "return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);",
    "right" : "return new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);",
    "info" : "ReturnStatement[3206-3276]:ReturnStatement[3206-3276]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3490-3496]:Modifier[3490-3496]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3497-3503]:Modifier[3497-3503]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[3504-3508]:SimpleType[3504-3508]"
  }, {
    "left" : "canonicalize",
    "right" : "canonicalize",
    "info" : "SimpleName[3509-3521]:SimpleName[3509-3521]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[3522-3531]:SingleVariableDeclaration[3522-3531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3533-4355]:Block[3533-4355]"
  }, {
    "left" : "if (type instanceof Class)",
    "right" : "if (type instanceof Class)",
    "info" : "IfStatement[3539-4351]:IfStatement[3539-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3566-3703]:Block[3566-3703]"
  }, {
    "left" : "Class<?> c = (Class<?>) type;",
    "right" : "Class<?> c = (Class<?>) type;",
    "info" : "VariableDeclarationStatement[3574-3603]:VariableDeclarationStatement[3574-3603]"
  }, {
    "left" : "return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;",
    "right" : "return c.isArray() ? new GenericArrayTypeImpl(canonicalize(c.getComponentType())) : c;",
    "info" : "ReturnStatement[3610-3696]:ReturnStatement[3610-3696]"
  }, {
    "left" : "if (type instanceof ParameterizedType)",
    "right" : "if (type instanceof ParameterizedType)",
    "info" : "IfStatement[3709-4351]:IfStatement[3709-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3748-3922]:Block[3748-3922]"
  }, {
    "left" : "ParameterizedType p = (ParameterizedType) type;",
    "right" : "ParameterizedType p = (ParameterizedType) type;",
    "info" : "VariableDeclarationStatement[3756-3803]:VariableDeclarationStatement[3756-3803]"
  }, {
    "left" : "return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());",
    "right" : "return new ParameterizedTypeImpl(p.getOwnerType(),\n          p.getRawType(), p.getActualTypeArguments());",
    "info" : "ReturnStatement[3810-3915]:ReturnStatement[3810-3915]"
  }, {
    "left" : "if (type instanceof GenericArrayType)",
    "right" : "if (type instanceof GenericArrayType)",
    "info" : "IfStatement[3928-4351]:IfStatement[3928-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3966-4094]:Block[3966-4094]"
  }, {
    "left" : "GenericArrayType g = (GenericArrayType) type;",
    "right" : "GenericArrayType g = (GenericArrayType) type;",
    "info" : "VariableDeclarationStatement[3974-4019]:VariableDeclarationStatement[3974-4019]"
  }, {
    "left" : "return new GenericArrayTypeImpl(g.getGenericComponentType());",
    "right" : "return new GenericArrayTypeImpl(g.getGenericComponentType());",
    "info" : "ReturnStatement[4026-4087]:ReturnStatement[4026-4087]"
  }, {
    "left" : "if (type instanceof WildcardType)",
    "right" : "if (type instanceof WildcardType)",
    "info" : "IfStatement[4100-4351]:IfStatement[4100-4351]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4134-4261]:Block[4134-4261]"
  }, {
    "left" : "WildcardType w = (WildcardType) type;",
    "right" : "WildcardType w = (WildcardType) type;",
    "info" : "VariableDeclarationStatement[4142-4179]:VariableDeclarationStatement[4142-4179]"
  }, {
    "left" : "return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());",
    "right" : "return new WildcardTypeImpl(w.getUpperBounds(), w.getLowerBounds());",
    "info" : "ReturnStatement[4186-4254]:ReturnStatement[4186-4254]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4267-4351]:Block[4267-4351]"
  }, {
    "left" : "return type;",
    "right" : "return type;",
    "info" : "ReturnStatement[4333-4345]:ReturnStatement[4333-4345]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4359-4365]:Modifier[4359-4365]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[4366-4372]:Modifier[4366-4372]"
  }, {
    "left" : "Class<?>",
    "right" : "Class<?>",
    "info" : "ParameterizedType[4373-4381]:ParameterizedType[4373-4381]"
  }, {
    "left" : "getRawType",
    "right" : "getRawType",
    "info" : "SimpleName[4382-4392]:SimpleName[4382-4392]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[4393-4402]:SingleVariableDeclaration[4393-4402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4404-5759]:Block[4404-5759]"
  }, {
    "left" : "if (type instanceof Class<?>)",
    "right" : "if (type instanceof Class<?>)",
    "info" : "IfStatement[4410-5755]:IfStatement[4410-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4440-4511]:Block[4440-4511]"
  }, {
    "left" : "return (Class<?>) type;",
    "right" : "return (Class<?>) type;",
    "info" : "ReturnStatement[4481-4504]:ReturnStatement[4481-4504]"
  }, {
    "left" : "if (type instanceof ParameterizedType)",
    "right" : "if (type instanceof ParameterizedType)",
    "info" : "IfStatement[4517-5755]:IfStatement[4517-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4556-4952]:Block[4556-4952]"
  }, {
    "left" : "ParameterizedType parameterizedType = (ParameterizedType) type;",
    "right" : "ParameterizedType parameterizedType = (ParameterizedType) type;",
    "info" : "VariableDeclarationStatement[4564-4627]:VariableDeclarationStatement[4564-4627]"
  }, {
    "left" : "Type rawType = parameterizedType.getRawType();",
    "right" : "Type rawType = parameterizedType.getRawType();",
    "info" : "VariableDeclarationStatement[4819-4865]:VariableDeclarationStatement[4819-4865]"
  }, {
    "left" : "checkArgument(rawType instanceof Class);",
    "right" : "checkArgument(rawType instanceof Class);",
    "info" : "ExpressionStatement[4872-4912]:ExpressionStatement[4872-4912]"
  }, {
    "left" : "return (Class<?>) rawType;",
    "right" : "return (Class<?>) rawType;",
    "info" : "ReturnStatement[4919-4945]:ReturnStatement[4919-4945]"
  }, {
    "left" : "if (type instanceof GenericArrayType)",
    "right" : "if (type instanceof GenericArrayType)",
    "info" : "IfStatement[4958-5755]:IfStatement[4958-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4996-5156]:Block[4996-5156]"
  }, {
    "left" : "Type componentType = ((GenericArrayType)type).getGenericComponentType();",
    "right" : "Type componentType = ((GenericArrayType)type).getGenericComponentType();",
    "info" : "VariableDeclarationStatement[5004-5076]:VariableDeclarationStatement[5004-5076]"
  }, {
    "left" : "return Array.newInstance(getRawType(componentType), 0).getClass();",
    "right" : "return Array.newInstance(getRawType(componentType), 0).getClass();",
    "info" : "ReturnStatement[5083-5149]:ReturnStatement[5083-5149]"
  }, {
    "left" : "if (type instanceof TypeVariable)",
    "right" : "if (type instanceof TypeVariable)",
    "info" : "IfStatement[5162-5755]:IfStatement[5162-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5196-5389]:Block[5196-5389]"
  }, {
    "left" : "return Object.class;",
    "right" : "return Object.class;",
    "info" : "ReturnStatement[5362-5382]:ReturnStatement[5362-5382]"
  }, {
    "left" : "if (type instanceof WildcardType)",
    "right" : "if (type instanceof WildcardType)",
    "info" : "IfStatement[5395-5755]:IfStatement[5395-5755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5429-5505]:Block[5429-5505]"
  }, {
    "left" : "return getRawType(((WildcardType) type).getUpperBounds()[0]);",
    "right" : "return getRawType(((WildcardType) type).getUpperBounds()[0]);",
    "info" : "ReturnStatement[5437-5498]:ReturnStatement[5437-5498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5511-5755]:Block[5511-5755]"
  }, {
    "left" : "String className = type == null ? \"null\" : type.getClass().getName();",
    "right" : "String className = type == null ? \"null\" : type.getClass().getName();",
    "info" : "VariableDeclarationStatement[5519-5588]:VariableDeclarationStatement[5519-5588]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);",
    "right" : "throw new IllegalArgumentException(\"Expected a Class, ParameterizedType, or \"\n          + \"GenericArrayType, but <\" + type + \"> is of type \" + className);",
    "info" : "ThrowStatement[5595-5749]:ThrowStatement[5595-5749]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5763-5769]:Modifier[5763-5769]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5770-5777]:PrimitiveType[5770-5777]"
  }, {
    "left" : "equal",
    "right" : "equal",
    "info" : "SimpleName[5778-5783]:SimpleName[5778-5783]"
  }, {
    "left" : "Object a",
    "right" : "Object a",
    "info" : "SingleVariableDeclaration[5784-5792]:SingleVariableDeclaration[5784-5792]"
  }, {
    "left" : "Object b",
    "right" : "Object b",
    "info" : "SingleVariableDeclaration[5794-5802]:SingleVariableDeclaration[5794-5802]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5804-5858]:Block[5804-5858]"
  }, {
    "left" : "return a == b || (a != null && a.equals(b));",
    "right" : "return a == b || (a != null && a.equals(b));",
    "info" : "ReturnStatement[5810-5854]:ReturnStatement[5810-5854]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5930-5936]:Modifier[5930-5936]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5937-5943]:Modifier[5937-5943]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[5944-5951]:PrimitiveType[5944-5951]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[5952-5958]:SimpleName[5952-5958]"
  }, {
    "left" : "Type a",
    "right" : "Type a",
    "info" : "SingleVariableDeclaration[5959-5965]:SingleVariableDeclaration[5959-5965]"
  }, {
    "left" : "Type b",
    "right" : "Type b",
    "info" : "SingleVariableDeclaration[5967-5973]:SingleVariableDeclaration[5967-5973]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5975-7744]:Block[5975-7744]"
  }, {
    "left" : "if (a == b)",
    "right" : "if (a == b)",
    "info" : "IfStatement[5981-7740]:IfStatement[5981-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5993-6067]:Block[5993-6067]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[6048-6060]:ReturnStatement[6048-6060]"
  }, {
    "left" : "if (a instanceof Class)",
    "right" : "if (a instanceof Class)",
    "info" : "IfStatement[6073-7740]:IfStatement[6073-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6097-6174]:Block[6097-6174]"
  }, {
    "left" : "return a.equals(b);",
    "right" : "return a.equals(b);",
    "info" : "ReturnStatement[6148-6167]:ReturnStatement[6148-6167]"
  }, {
    "left" : "if (a instanceof ParameterizedType)",
    "right" : "if (a instanceof ParameterizedType)",
    "info" : "IfStatement[6180-7740]:IfStatement[6180-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6216-6638]:Block[6216-6638]"
  }, {
    "left" : "if (!(b instanceof ParameterizedType))",
    "right" : "if (!(b instanceof ParameterizedType))",
    "info" : "IfStatement[6224-6294]:IfStatement[6224-6294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6263-6294]:Block[6263-6294]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6273-6286]:ReturnStatement[6273-6286]"
  }, {
    "left" : "ParameterizedType pa = (ParameterizedType) a;",
    "right" : "ParameterizedType pa = (ParameterizedType) a;",
    "info" : "VariableDeclarationStatement[6338-6383]:VariableDeclarationStatement[6338-6383]"
  }, {
    "left" : "ParameterizedType pb = (ParameterizedType) b;",
    "right" : "ParameterizedType pb = (ParameterizedType) b;",
    "info" : "VariableDeclarationStatement[6390-6435]:VariableDeclarationStatement[6390-6435]"
  }, {
    "left" : "return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());",
    "right" : "return equal(pa.getOwnerType(), pb.getOwnerType())\n          && pa.getRawType().equals(pb.getRawType())\n          && Arrays.equals(pa.getActualTypeArguments(), pb.getActualTypeArguments());",
    "info" : "ReturnStatement[6442-6631]:ReturnStatement[6442-6631]"
  }, {
    "left" : "if (a instanceof GenericArrayType)",
    "right" : "if (a instanceof GenericArrayType)",
    "info" : "IfStatement[6644-7740]:IfStatement[6644-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6679-6945]:Block[6679-6945]"
  }, {
    "left" : "if (!(b instanceof GenericArrayType))",
    "right" : "if (!(b instanceof GenericArrayType))",
    "info" : "IfStatement[6687-6756]:IfStatement[6687-6756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6725-6756]:Block[6725-6756]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[6735-6748]:ReturnStatement[6735-6748]"
  }, {
    "left" : "GenericArrayType ga = (GenericArrayType) a;",
    "right" : "GenericArrayType ga = (GenericArrayType) a;",
    "info" : "VariableDeclarationStatement[6764-6807]:VariableDeclarationStatement[6764-6807]"
  }, {
    "left" : "GenericArrayType gb = (GenericArrayType) b;",
    "right" : "GenericArrayType gb = (GenericArrayType) b;",
    "info" : "VariableDeclarationStatement[6814-6857]:VariableDeclarationStatement[6814-6857]"
  }, {
    "left" : "return equals(ga.getGenericComponentType(), gb.getGenericComponentType());",
    "right" : "return equals(ga.getGenericComponentType(), gb.getGenericComponentType());",
    "info" : "ReturnStatement[6864-6938]:ReturnStatement[6864-6938]"
  }, {
    "left" : "if (a instanceof WildcardType)",
    "right" : "if (a instanceof WildcardType)",
    "info" : "IfStatement[6951-7740]:IfStatement[6951-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6982-7286]:Block[6982-7286]"
  }, {
    "left" : "if (!(b instanceof WildcardType))",
    "right" : "if (!(b instanceof WildcardType))",
    "info" : "IfStatement[6990-7055]:IfStatement[6990-7055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7024-7055]:Block[7024-7055]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7034-7047]:ReturnStatement[7034-7047]"
  }, {
    "left" : "WildcardType wa = (WildcardType) a;",
    "right" : "WildcardType wa = (WildcardType) a;",
    "info" : "VariableDeclarationStatement[7063-7098]:VariableDeclarationStatement[7063-7098]"
  }, {
    "left" : "WildcardType wb = (WildcardType) b;",
    "right" : "WildcardType wb = (WildcardType) b;",
    "info" : "VariableDeclarationStatement[7105-7140]:VariableDeclarationStatement[7105-7140]"
  }, {
    "left" : "return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());",
    "right" : "return Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n          && Arrays.equals(wa.getLowerBounds(), wb.getLowerBounds());",
    "info" : "ReturnStatement[7147-7279]:ReturnStatement[7147-7279]"
  }, {
    "left" : "if (a instanceof TypeVariable)",
    "right" : "if (a instanceof TypeVariable)",
    "info" : "IfStatement[7292-7740]:IfStatement[7292-7740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7323-7617]:Block[7323-7617]"
  }, {
    "left" : "if (!(b instanceof TypeVariable))",
    "right" : "if (!(b instanceof TypeVariable))",
    "info" : "IfStatement[7331-7396]:IfStatement[7331-7396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7365-7396]:Block[7365-7396]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7375-7388]:ReturnStatement[7375-7388]"
  }, {
    "left" : "TypeVariable<?> va = (TypeVariable<?>) a;",
    "right" : "TypeVariable<?> va = (TypeVariable<?>) a;",
    "info" : "VariableDeclarationStatement[7403-7444]:VariableDeclarationStatement[7403-7444]"
  }, {
    "left" : "TypeVariable<?> vb = (TypeVariable<?>) b;",
    "right" : "TypeVariable<?> vb = (TypeVariable<?>) b;",
    "info" : "VariableDeclarationStatement[7451-7492]:VariableDeclarationStatement[7451-7492]"
  }, {
    "left" : "return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());",
    "right" : "return va.getGenericDeclaration() == vb.getGenericDeclaration()\n          && va.getName().equals(vb.getName());",
    "info" : "ReturnStatement[7499-7610]:ReturnStatement[7499-7610]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7623-7740]:Block[7623-7740]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[7721-7734]:ReturnStatement[7721-7734]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7748-7754]:Modifier[7748-7754]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[7755-7758]:PrimitiveType[7755-7758]"
  }, {
    "left" : "hashCodeOrZero",
    "right" : "hashCodeOrZero",
    "info" : "SimpleName[7759-7773]:SimpleName[7759-7773]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[7774-7782]:SingleVariableDeclaration[7774-7782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7784-7830]:Block[7784-7830]"
  }, {
    "left" : "return o != null ? o.hashCode() : 0;",
    "right" : "return o != null ? o.hashCode() : 0;",
    "info" : "ReturnStatement[7790-7826]:ReturnStatement[7790-7826]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7834-7840]:Modifier[7834-7840]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7841-7847]:Modifier[7841-7847]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[7848-7854]:SimpleType[7848-7854]"
  }, {
    "left" : "typeToString",
    "right" : "typeToString",
    "info" : "SimpleName[7855-7867]:SimpleName[7855-7867]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[7868-7877]:SingleVariableDeclaration[7868-7877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7879-7966]:Block[7879-7966]"
  }, {
    "left" : "return type instanceof Class ? ((Class<?>) type).getName() : type.toString();",
    "right" : "return type instanceof Class ? ((Class<?>) type).getName() : type.toString();",
    "info" : "ReturnStatement[7885-7962]:ReturnStatement[7885-7962]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8266-8272]:Modifier[8266-8272]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[8273-8277]:SimpleType[8273-8277]"
  }, {
    "left" : "getGenericSupertype",
    "right" : "getGenericSupertype",
    "info" : "SimpleName[8278-8297]:SimpleName[8278-8297]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[8298-8310]:SingleVariableDeclaration[8298-8310]"
  }, {
    "left" : "Class<?> rawType",
    "right" : "Class<?> rawType",
    "info" : "SingleVariableDeclaration[8312-8328]:SingleVariableDeclaration[8312-8328]"
  }, {
    "left" : "Class<?> toResolve",
    "right" : "Class<?> toResolve",
    "info" : "SingleVariableDeclaration[8330-8348]:SingleVariableDeclaration[8330-8348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8350-9451]:Block[8350-9451]"
  }, {
    "left" : "if (toResolve == rawType)",
    "right" : "if (toResolve == rawType)",
    "info" : "IfStatement[8356-8411]:IfStatement[8356-8411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8382-8411]:Block[8382-8411]"
  }, {
    "left" : "return context;",
    "right" : "return context;",
    "info" : "ReturnStatement[8390-8405]:ReturnStatement[8390-8405]"
  }, {
    "left" : "if (toResolve.isInterface())",
    "right" : "if (toResolve.isInterface())",
    "info" : "IfStatement[8488-8923]:IfStatement[8488-8923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8517-8923]:Block[8517-8923]"
  }, {
    "left" : "Class<?>[] interfaces = rawType.getInterfaces();",
    "right" : "Class<?>[] interfaces = rawType.getInterfaces();",
    "info" : "VariableDeclarationStatement[8525-8573]:VariableDeclarationStatement[8525-8573]"
  }, {
    "left" : "for (int i = 0, length = interfaces.length; i < length; i++)",
    "right" : "for (int i = 0, length = interfaces.length; i < length; i++)",
    "info" : "ForStatement[8580-8917]:ForStatement[8580-8917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8641-8917]:Block[8641-8917]"
  }, {
    "left" : "if (interfaces[i] == toResolve)",
    "right" : "if (interfaces[i] == toResolve)",
    "info" : "IfStatement[8651-8909]:IfStatement[8651-8909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8683-8746]:Block[8683-8746]"
  }, {
    "left" : "return rawType.getGenericInterfaces()[i];",
    "right" : "return rawType.getGenericInterfaces()[i];",
    "info" : "ReturnStatement[8695-8736]:ReturnStatement[8695-8736]"
  }, {
    "left" : "if (toResolve.isAssignableFrom(interfaces[i]))",
    "right" : "if (toResolve.isAssignableFrom(interfaces[i]))",
    "info" : "IfStatement[8752-8909]:IfStatement[8752-8909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8799-8909]:Block[8799-8909]"
  }, {
    "left" : "return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);",
    "right" : "return getGenericSupertype(rawType.getGenericInterfaces()[i], interfaces[i], toResolve);",
    "info" : "ReturnStatement[8811-8899]:ReturnStatement[8811-8899]"
  }, {
    "left" : "if (!rawType.isInterface())",
    "right" : "if (!rawType.isInterface())",
    "info" : "IfStatement[8957-9387]:IfStatement[8957-9387]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8985-9387]:Block[8985-9387]"
  }, {
    "left" : "while (rawType != Object.class)",
    "right" : "while (rawType != Object.class)",
    "info" : "WhileStatement[8993-9381]:WhileStatement[8993-9381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9025-9381]:Block[9025-9381]"
  }, {
    "left" : "Class<?> rawSupertype = rawType.getSuperclass();",
    "right" : "Class<?> rawSupertype = rawType.getSuperclass();",
    "info" : "VariableDeclarationStatement[9035-9083]:VariableDeclarationStatement[9035-9083]"
  }, {
    "left" : "if (rawSupertype == toResolve)",
    "right" : "if (rawSupertype == toResolve)",
    "info" : "IfStatement[9092-9341]:IfStatement[9092-9341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9123-9183]:Block[9123-9183]"
  }, {
    "left" : "return rawType.getGenericSuperclass();",
    "right" : "return rawType.getGenericSuperclass();",
    "info" : "ReturnStatement[9135-9173]:ReturnStatement[9135-9173]"
  }, {
    "left" : "if (toResolve.isAssignableFrom(rawSupertype))",
    "right" : "if (toResolve.isAssignableFrom(rawSupertype))",
    "info" : "IfStatement[9189-9341]:IfStatement[9189-9341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9235-9341]:Block[9235-9341]"
  }, {
    "left" : "return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);",
    "right" : "return getGenericSupertype(rawType.getGenericSuperclass(), rawSupertype, toResolve);",
    "info" : "ReturnStatement[9247-9331]:ReturnStatement[9247-9331]"
  }, {
    "left" : "rawType = rawSupertype;",
    "right" : "rawType = rawSupertype;",
    "info" : "ExpressionStatement[9350-9373]:ExpressionStatement[9350-9373]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[9430-9447]:ReturnStatement[9430-9447]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9737-9743]:Modifier[9737-9743]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[9744-9748]:SimpleType[9744-9748]"
  }, {
    "left" : "getSupertype",
    "right" : "getSupertype",
    "info" : "SimpleName[9749-9761]:SimpleName[9749-9761]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[9762-9774]:SingleVariableDeclaration[9762-9774]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[9776-9799]:SingleVariableDeclaration[9776-9799]"
  }, {
    "left" : "Class<?> supertype",
    "right" : "Class<?> supertype",
    "info" : "SingleVariableDeclaration[9801-9819]:SingleVariableDeclaration[9801-9819]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9821-10125]:Block[9821-10235]"
  }, {
    "left" : "checkArgument(supertype.isAssignableFrom(contextRawType));",
    "right" : "checkArgument(supertype.isAssignableFrom(contextRawType));",
    "info" : "ExpressionStatement[9941-9999]:ExpressionStatement[10051-10109]"
  }, {
    "left" : "return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
    "right" : "return resolve(context, contextRawType,\n        $Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
    "info" : "ReturnStatement[10004-10121]:ReturnStatement[10114-10231]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10255-10261]:Modifier[10365-10371]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10262-10268]:Modifier[10372-10378]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[10269-10273]:SimpleType[10379-10383]"
  }, {
    "left" : "getArrayComponentType",
    "right" : "getArrayComponentType",
    "info" : "SimpleName[10274-10295]:SimpleName[10384-10405]"
  }, {
    "left" : "Type array",
    "right" : "Type array",
    "info" : "SingleVariableDeclaration[10296-10306]:SingleVariableDeclaration[10406-10416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10308-10470]:Block[10418-10580]"
  }, {
    "left" : "return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();",
    "right" : "return array instanceof GenericArrayType\n        ? ((GenericArrayType) array).getGenericComponentType()\n        : ((Class<?>) array).getComponentType();",
    "info" : "ReturnStatement[10314-10466]:ReturnStatement[10424-10576]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10613-10619]:Modifier[10723-10729]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10620-10626]:Modifier[10730-10736]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[10627-10631]:SimpleType[10737-10741]"
  }, {
    "left" : "getCollectionElementType",
    "right" : "getCollectionElementType",
    "info" : "SimpleName[10632-10656]:SimpleName[10742-10766]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[10657-10669]:SingleVariableDeclaration[10767-10779]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[10671-10694]:SingleVariableDeclaration[10781-10804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10696-11081]:Block[10806-11191]"
  }, {
    "left" : "Type collectionType = getSupertype(context, contextRawType, Collection.class);",
    "right" : "Type collectionType = getSupertype(context, contextRawType, Collection.class);",
    "info" : "VariableDeclarationStatement[10702-10780]:VariableDeclarationStatement[10812-10890]"
  }, {
    "left" : "if (collectionType instanceof WildcardType)",
    "right" : "if (collectionType instanceof WildcardType)",
    "info" : "IfStatement[10786-10912]:IfStatement[10896-11022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10830-10912]:Block[10940-11022]"
  }, {
    "left" : "collectionType = ((WildcardType)collectionType).getUpperBounds()[0];",
    "right" : "collectionType = ((WildcardType)collectionType).getUpperBounds()[0];",
    "info" : "ExpressionStatement[10838-10906]:ExpressionStatement[10948-11016]"
  }, {
    "left" : "if (collectionType instanceof ParameterizedType)",
    "right" : "if (collectionType instanceof ParameterizedType)",
    "info" : "IfStatement[10917-11052]:IfStatement[11027-11162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10966-11052]:Block[11076-11162]"
  }, {
    "left" : "return ((ParameterizedType) collectionType).getActualTypeArguments()[0];",
    "right" : "return ((ParameterizedType) collectionType).getActualTypeArguments()[0];",
    "info" : "ReturnStatement[10974-11046]:ReturnStatement[11084-11156]"
  }, {
    "left" : "return Object.class;",
    "right" : "return Object.class;",
    "info" : "ReturnStatement[11057-11077]:ReturnStatement[11167-11187]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11212-11218]:Modifier[11322-11328]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11219-11225]:Modifier[11329-11335]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[11226-11232]:ArrayType[11336-11342]"
  }, {
    "left" : "getMapKeyAndValueTypes",
    "right" : "getMapKeyAndValueTypes",
    "info" : "SimpleName[11233-11255]:SimpleName[11343-11365]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[11256-11268]:SingleVariableDeclaration[11366-11378]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[11270-11293]:SingleVariableDeclaration[11380-11403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11295-11996]:Block[11405-12106]"
  }, {
    "left" : "if (context == Properties.class)",
    "right" : "if (context == Properties.class)",
    "info" : "IfStatement[11512-11648]:IfStatement[11622-11758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11545-11648]:Block[11655-11758]"
  }, {
    "left" : "return new Type[] { String.class, String.class };",
    "right" : "return new Type[] { String.class, String.class };",
    "info" : "ReturnStatement[11553-11602]:ReturnStatement[11663-11712]"
  }, {
    "left" : "Type mapType = getSupertype(context, contextRawType, Map.class);",
    "right" : "Type mapType = getSupertype(context, contextRawType, Map.class);",
    "info" : "VariableDeclarationStatement[11654-11718]:VariableDeclarationStatement[11764-11828]"
  }, {
    "left" : "if (mapType instanceof ParameterizedType)",
    "right" : "if (mapType instanceof ParameterizedType)",
    "info" : "IfStatement[11753-11938]:IfStatement[11863-12048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11795-11938]:Block[11905-12048]"
  }, {
    "left" : "ParameterizedType mapParameterizedType = (ParameterizedType) mapType;",
    "right" : "ParameterizedType mapParameterizedType = (ParameterizedType) mapType;",
    "info" : "VariableDeclarationStatement[11803-11872]:VariableDeclarationStatement[11913-11982]"
  }, {
    "left" : "return mapParameterizedType.getActualTypeArguments();",
    "right" : "return mapParameterizedType.getActualTypeArguments();",
    "info" : "ReturnStatement[11879-11932]:ReturnStatement[11989-12042]"
  }, {
    "left" : "return new Type[] { Object.class, Object.class };",
    "right" : "return new Type[] { Object.class, Object.class };",
    "info" : "ReturnStatement[11943-11992]:ReturnStatement[12053-12102]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12000-12006]:Modifier[12110-12116]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12007-12013]:Modifier[12117-12123]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[12014-12018]:SimpleType[12124-12128]"
  }, {
    "left" : "resolve",
    "right" : "resolve",
    "info" : "SimpleName[12019-12026]:SimpleName[12129-12136]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[12027-12039]:SingleVariableDeclaration[12137-12149]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[12041-12064]:SingleVariableDeclaration[12151-12174]"
  }, {
    "left" : "Type toResolve",
    "right" : "Type toResolve",
    "info" : "SingleVariableDeclaration[12066-12080]:SingleVariableDeclaration[12176-12190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12082-12172]:Block[12192-12282]"
  }, {
    "left" : "return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());",
    "right" : "return resolve(context, contextRawType, toResolve, new HashSet<TypeVariable>());",
    "info" : "ReturnStatement[12088-12168]:ReturnStatement[12198-12278]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[12176-12183]:Modifier[12286-12293]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12184-12190]:Modifier[12294-12300]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[12191-12195]:SimpleType[12301-12305]"
  }, {
    "left" : "resolve",
    "right" : "resolve",
    "info" : "SimpleName[12196-12203]:SimpleName[12306-12313]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[12204-12216]:SingleVariableDeclaration[12314-12326]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[12218-12241]:SingleVariableDeclaration[12328-12351]"
  }, {
    "left" : "Type toResolve",
    "right" : "Type toResolve",
    "info" : "SingleVariableDeclaration[12243-12257]:SingleVariableDeclaration[12353-12367]"
  }, {
    "left" : "Collection<TypeVariable> visitedTypeVariables",
    "right" : "Collection<TypeVariable> visitedTypeVariables",
    "info" : "SingleVariableDeclaration[12289-12334]:SingleVariableDeclaration[12399-12444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12336-15534]:Block[12446-15644]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[12442-15530]:WhileStatement[12552-15640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12455-15530]:Block[12565-15640]"
  }, {
    "left" : "if (toResolve instanceof TypeVariable)",
    "right" : "if (toResolve instanceof TypeVariable)",
    "info" : "IfStatement[12463-15524]:IfStatement[12573-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12502-12956]:Block[12612-13066]"
  }, {
    "left" : "TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;",
    "right" : "TypeVariable<?> typeVariable = (TypeVariable<?>) toResolve;",
    "info" : "VariableDeclarationStatement[12512-12571]:VariableDeclarationStatement[12622-12681]"
  }, {
    "left" : "if (visitedTypeVariables.contains(typeVariable))",
    "right" : "if (visitedTypeVariables.contains(typeVariable))",
    "info" : "IfStatement[12580-12788]:IfStatement[12690-12898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12629-12721]:Block[12739-12831]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[12694-12711]:ReturnStatement[12804-12821]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12727-12788]:Block[12837-12898]"
  }, {
    "left" : "visitedTypeVariables.add(typeVariable);",
    "right" : "visitedTypeVariables.add(typeVariable);",
    "info" : "ExpressionStatement[12739-12778]:ExpressionStatement[12849-12888]"
  }, {
    "left" : "toResolve = resolveTypeVariable(context, contextRawType, typeVariable);",
    "right" : "toResolve = resolveTypeVariable(context, contextRawType, typeVariable);",
    "info" : "ExpressionStatement[12797-12868]:ExpressionStatement[12907-12978]"
  }, {
    "left" : "if (toResolve == typeVariable)",
    "right" : "if (toResolve == typeVariable)",
    "info" : "IfStatement[12877-12947]:IfStatement[12987-13057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12908-12947]:Block[13018-13057]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[12920-12937]:ReturnStatement[13030-13047]"
  }, {
    "left" : "if (toResolve instanceof Class && ((Class<?>) toResolve).isArray())",
    "right" : "if (toResolve instanceof Class && ((Class<?>) toResolve).isArray())",
    "info" : "IfStatement[12962-15524]:IfStatement[13072-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13030-13364]:Block[13140-13474]"
  }, {
    "left" : "Class<?> original = (Class<?>) toResolve;",
    "right" : "Class<?> original = (Class<?>) toResolve;",
    "info" : "VariableDeclarationStatement[13040-13081]:VariableDeclarationStatement[13150-13191]"
  }, {
    "left" : "Type componentType = original.getComponentType();",
    "right" : "Type componentType = original.getComponentType();",
    "info" : "VariableDeclarationStatement[13090-13139]:VariableDeclarationStatement[13200-13249]"
  }, {
    "left" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "right" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[13148-13242]:VariableDeclarationStatement[13258-13352]"
  }, {
    "left" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "right" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "info" : "ReturnStatement[13251-13355]:ReturnStatement[13361-13465]"
  }, {
    "left" : "if (toResolve instanceof GenericArrayType)",
    "right" : "if (toResolve instanceof GenericArrayType)",
    "info" : "IfStatement[13370-15524]:IfStatement[13480-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13413-13770]:Block[13523-13880]"
  }, {
    "left" : "GenericArrayType original = (GenericArrayType) toResolve;",
    "right" : "GenericArrayType original = (GenericArrayType) toResolve;",
    "info" : "VariableDeclarationStatement[13423-13480]:VariableDeclarationStatement[13533-13590]"
  }, {
    "left" : "Type componentType = original.getGenericComponentType();",
    "right" : "Type componentType = original.getGenericComponentType();",
    "info" : "VariableDeclarationStatement[13489-13545]:VariableDeclarationStatement[13599-13655]"
  }, {
    "left" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "right" : "Type newComponentType = resolve(context, contextRawType, componentType, visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[13554-13648]:VariableDeclarationStatement[13664-13758]"
  }, {
    "left" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "right" : "return componentType == newComponentType\n            ? original\n            : arrayOf(newComponentType);",
    "info" : "ReturnStatement[13657-13761]:ReturnStatement[13767-13871]"
  }, {
    "left" : "if (toResolve instanceof ParameterizedType)",
    "right" : "if (toResolve instanceof ParameterizedType)",
    "info" : "IfStatement[13776-15524]:IfStatement[13886-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13820-14679]:Block[13930-14789]"
  }, {
    "left" : "ParameterizedType original = (ParameterizedType) toResolve;",
    "right" : "ParameterizedType original = (ParameterizedType) toResolve;",
    "info" : "VariableDeclarationStatement[13830-13889]:VariableDeclarationStatement[13940-13999]"
  }, {
    "left" : "Type ownerType = original.getOwnerType();",
    "right" : "Type ownerType = original.getOwnerType();",
    "info" : "VariableDeclarationStatement[13898-13939]:VariableDeclarationStatement[14008-14049]"
  }, {
    "left" : "Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);",
    "right" : "Type newOwnerType = resolve(context, contextRawType, ownerType, visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[13948-14034]:VariableDeclarationStatement[14058-14144]"
  }, {
    "left" : "boolean changed = newOwnerType != ownerType;",
    "right" : "boolean changed = newOwnerType != ownerType;",
    "info" : "VariableDeclarationStatement[14043-14087]:VariableDeclarationStatement[14153-14197]"
  }, {
    "left" : "Type[] args = original.getActualTypeArguments();",
    "right" : "Type[] args = original.getActualTypeArguments();",
    "info" : "VariableDeclarationStatement[14097-14145]:VariableDeclarationStatement[14207-14255]"
  }, {
    "left" : "for (int t = 0, length = args.length; t < length; t++)",
    "right" : "for (int t = 0, length = args.length; t < length; t++)",
    "info" : "ForStatement[14154-14535]:ForStatement[14264-14645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14209-14535]:Block[14319-14645]"
  }, {
    "left" : "Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);",
    "right" : "Type resolvedTypeArgument = resolve(context, contextRawType, args[t], visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[14221-14313]:VariableDeclarationStatement[14331-14423]"
  }, {
    "left" : "if (resolvedTypeArgument != args[t])",
    "right" : "if (resolvedTypeArgument != args[t])",
    "info" : "IfStatement[14324-14525]:IfStatement[14434-14635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14361-14525]:Block[14471-14635]"
  }, {
    "left" : "if (!changed)",
    "right" : "if (!changed)",
    "info" : "IfStatement[14375-14469]:IfStatement[14485-14579]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14389-14469]:Block[14499-14579]"
  }, {
    "left" : "args = args.clone();",
    "right" : "args = args.clone();",
    "info" : "ExpressionStatement[14405-14425]:ExpressionStatement[14515-14535]"
  }, {
    "left" : "changed = true;",
    "right" : "changed = true;",
    "info" : "ExpressionStatement[14440-14455]:ExpressionStatement[14550-14565]"
  }, {
    "left" : "args[t] = resolvedTypeArgument;",
    "right" : "args[t] = resolvedTypeArgument;",
    "info" : "ExpressionStatement[14482-14513]:ExpressionStatement[14592-14623]"
  }, {
    "left" : "return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;",
    "right" : "return changed\n            ? newParameterizedTypeWithOwner(newOwnerType, original.getRawType(), args)\n            : original;",
    "info" : "ReturnStatement[14545-14670]:ReturnStatement[14655-14780]"
  }, {
    "left" : "if (toResolve instanceof WildcardType)",
    "right" : "if (toResolve instanceof WildcardType)",
    "info" : "IfStatement[14685-15524]:IfStatement[14795-15634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14724-15483]:Block[14834-15593]"
  }, {
    "left" : "WildcardType original = (WildcardType) toResolve;",
    "right" : "WildcardType original = (WildcardType) toResolve;",
    "info" : "VariableDeclarationStatement[14734-14783]:VariableDeclarationStatement[14844-14893]"
  }, {
    "left" : "Type[] originalLowerBound = original.getLowerBounds();",
    "right" : "Type[] originalLowerBound = original.getLowerBounds();",
    "info" : "VariableDeclarationStatement[14792-14846]:VariableDeclarationStatement[14902-14956]"
  }, {
    "left" : "Type[] originalUpperBound = original.getUpperBounds();",
    "right" : "Type[] originalUpperBound = original.getUpperBounds();",
    "info" : "VariableDeclarationStatement[14855-14909]:VariableDeclarationStatement[14965-15019]"
  }, {
    "left" : "if (originalLowerBound.length == 1)",
    "right" : "if (originalLowerBound.length == 1)",
    "info" : "IfStatement[14919-15449]:IfStatement[15029-15559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14955-15182]:Block[15065-15292]"
  }, {
    "left" : "Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);",
    "right" : "Type lowerBound = resolve(context, contextRawType, originalLowerBound[0], visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[14967-15063]:VariableDeclarationStatement[15077-15173]"
  }, {
    "left" : "if (lowerBound != originalLowerBound[0])",
    "right" : "if (lowerBound != originalLowerBound[0])",
    "info" : "IfStatement[15074-15172]:IfStatement[15184-15282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15115-15172]:Block[15225-15282]"
  }, {
    "left" : "return supertypeOf(lowerBound);",
    "right" : "return supertypeOf(lowerBound);",
    "info" : "ReturnStatement[15129-15160]:ReturnStatement[15239-15270]"
  }, {
    "left" : "if (originalUpperBound.length == 1)",
    "right" : "if (originalUpperBound.length == 1)",
    "info" : "IfStatement[15188-15449]:IfStatement[15298-15559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15224-15449]:Block[15334-15559]"
  }, {
    "left" : "Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);",
    "right" : "Type upperBound = resolve(context, contextRawType, originalUpperBound[0], visitedTypeVariables);",
    "info" : "VariableDeclarationStatement[15236-15332]:VariableDeclarationStatement[15346-15442]"
  }, {
    "left" : "if (upperBound != originalUpperBound[0])",
    "right" : "if (upperBound != originalUpperBound[0])",
    "info" : "IfStatement[15343-15439]:IfStatement[15453-15549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15384-15439]:Block[15494-15549]"
  }, {
    "left" : "return subtypeOf(upperBound);",
    "right" : "return subtypeOf(upperBound);",
    "info" : "ReturnStatement[15398-15427]:ReturnStatement[15508-15537]"
  }, {
    "left" : "return original;",
    "right" : "return original;",
    "info" : "ReturnStatement[15458-15474]:ReturnStatement[15568-15584]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15489-15524]:Block[15599-15634]"
  }, {
    "left" : "return toResolve;",
    "right" : "return toResolve;",
    "info" : "ReturnStatement[15499-15516]:ReturnStatement[15609-15626]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15538-15544]:Modifier[15648-15654]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[15545-15549]:SimpleType[15655-15659]"
  }, {
    "left" : "resolveTypeVariable",
    "right" : "resolveTypeVariable",
    "info" : "SimpleName[15550-15569]:SimpleName[15660-15679]"
  }, {
    "left" : "Type context",
    "right" : "Type context",
    "info" : "SingleVariableDeclaration[15570-15582]:SingleVariableDeclaration[15680-15692]"
  }, {
    "left" : "Class<?> contextRawType",
    "right" : "Class<?> contextRawType",
    "info" : "SingleVariableDeclaration[15584-15607]:SingleVariableDeclaration[15694-15717]"
  }, {
    "left" : "TypeVariable<?> unknown",
    "right" : "TypeVariable<?> unknown",
    "info" : "SingleVariableDeclaration[15609-15632]:SingleVariableDeclaration[15719-15742]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15634-16105]:Block[15744-16215]"
  }, {
    "left" : "Class<?> declaredByRaw = declaringClassOf(unknown);",
    "right" : "Class<?> declaredByRaw = declaringClassOf(unknown);",
    "info" : "VariableDeclarationStatement[15640-15691]:VariableDeclarationStatement[15750-15801]"
  }, {
    "left" : "if (declaredByRaw == null)",
    "right" : "if (declaredByRaw == null)",
    "info" : "IfStatement[15733-15789]:IfStatement[15843-15899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15760-15789]:Block[15870-15899]"
  }, {
    "left" : "return unknown;",
    "right" : "return unknown;",
    "info" : "ReturnStatement[15768-15783]:ReturnStatement[15878-15893]"
  }, {
    "left" : "Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);",
    "right" : "Type declaredBy = getGenericSupertype(context, contextRawType, declaredByRaw);",
    "info" : "VariableDeclarationStatement[15795-15873]:VariableDeclarationStatement[15905-15983]"
  }, {
    "left" : "if (declaredBy instanceof ParameterizedType)",
    "right" : "if (declaredBy instanceof ParameterizedType)",
    "info" : "IfStatement[15878-16080]:IfStatement[15988-16190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15923-16080]:Block[16033-16190]"
  }, {
    "left" : "int index = indexOf(declaredByRaw.getTypeParameters(), unknown);",
    "right" : "int index = indexOf(declaredByRaw.getTypeParameters(), unknown);",
    "info" : "VariableDeclarationStatement[15931-15995]:VariableDeclarationStatement[16041-16105]"
  }, {
    "left" : "return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];",
    "right" : "return ((ParameterizedType) declaredBy).getActualTypeArguments()[index];",
    "info" : "ReturnStatement[16002-16074]:ReturnStatement[16112-16184]"
  }, {
    "left" : "return unknown;",
    "right" : "return unknown;",
    "info" : "ReturnStatement[16086-16101]:ReturnStatement[16196-16211]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16109-16116]:Modifier[16219-16226]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16117-16123]:Modifier[16227-16233]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[16124-16127]:PrimitiveType[16234-16237]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[16128-16135]:SimpleName[16238-16245]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[16136-16150]:SingleVariableDeclaration[16246-16260]"
  }, {
    "left" : "Object toFind",
    "right" : "Object toFind",
    "info" : "SingleVariableDeclaration[16152-16165]:SingleVariableDeclaration[16262-16275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16167-16343]:Block[16277-16453]"
  }, {
    "left" : "for (int i = 0, length = array.length; i < length; i++)",
    "right" : "for (int i = 0, length = array.length; i < length; i++)",
    "info" : "ForStatement[16173-16299]:ForStatement[16283-16409]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16229-16299]:Block[16339-16409]"
  }, {
    "left" : "if (toFind.equals(array[i]))",
    "right" : "if (toFind.equals(array[i]))",
    "info" : "IfStatement[16237-16293]:IfStatement[16347-16403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16266-16293]:Block[16376-16403]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[16276-16285]:ReturnStatement[16386-16395]"
  }, {
    "left" : "throw new NoSuchElementException();",
    "right" : "throw new NoSuchElementException();",
    "info" : "ThrowStatement[16304-16339]:ThrowStatement[16414-16449]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16473-16480]:Modifier[16583-16590]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16481-16487]:Modifier[16591-16597]"
  }, {
    "left" : "Class<?>",
    "right" : "Class<?>",
    "info" : "ParameterizedType[16488-16496]:ParameterizedType[16598-16606]"
  }, {
    "left" : "declaringClassOf",
    "right" : "declaringClassOf",
    "info" : "SimpleName[16497-16513]:SimpleName[16607-16623]"
  }, {
    "left" : "TypeVariable<?> typeVariable",
    "right" : "TypeVariable<?> typeVariable",
    "info" : "SingleVariableDeclaration[16514-16542]:SingleVariableDeclaration[16624-16652]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16544-16734]:Block[16654-16844]"
  }, {
    "left" : "GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();",
    "right" : "GenericDeclaration genericDeclaration = typeVariable.getGenericDeclaration();",
    "info" : "VariableDeclarationStatement[16550-16627]:VariableDeclarationStatement[16660-16737]"
  }, {
    "left" : "return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;",
    "right" : "return genericDeclaration instanceof Class\n        ? (Class<?>) genericDeclaration\n        : null;",
    "info" : "ReturnStatement[16632-16730]:ReturnStatement[16742-16840]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16738-16744]:Modifier[16848-16854]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16745-16749]:PrimitiveType[16855-16859]"
  }, {
    "left" : "checkNotPrimitive",
    "right" : "checkNotPrimitive",
    "info" : "SimpleName[16750-16767]:SimpleName[16860-16877]"
  }, {
    "left" : "Type type",
    "right" : "Type type",
    "info" : "SingleVariableDeclaration[16768-16777]:SingleVariableDeclaration[16878-16887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16779-16868]:Block[16889-16978]"
  }, {
    "left" : "checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());",
    "right" : "checkArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());",
    "info" : "ExpressionStatement[16785-16864]:ExpressionStatement[16895-16974]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16872-16879]:Modifier[16982-16989]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16880-16886]:Modifier[16990-16996]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[16887-16892]:Modifier[16997-17002]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[16893-16898]:TYPE_DECLARATION_KIND[17003-17008]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17077-17083]:Modifier[17187-17193]"
  }, {
    "left" : "ParameterizedTypeImpl",
    "right" : "ParameterizedTypeImpl",
    "info" : "SimpleName[17084-17105]:SimpleName[17194-17215]"
  }, {
    "left" : "Type ownerType",
    "right" : "Type ownerType",
    "info" : "SingleVariableDeclaration[17106-17120]:SingleVariableDeclaration[17216-17230]"
  }, {
    "left" : "Type rawType",
    "right" : "Type rawType",
    "info" : "SingleVariableDeclaration[17122-17134]:SingleVariableDeclaration[17232-17244]"
  }, {
    "left" : "Type... typeArguments",
    "right" : "Type... typeArguments",
    "info" : "SingleVariableDeclaration[17136-17157]:SingleVariableDeclaration[17246-17267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17159-17963]:Block[17269-18073]"
  }, {
    "left" : "if (rawType instanceof Class<?>)",
    "right" : "if (rawType instanceof Class<?>)",
    "info" : "IfStatement[17223-17538]:IfStatement[17333-17648]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17256-17538]:Block[17366-17648]"
  }, {
    "left" : "Class<?> rawTypeAsClass = (Class<?>) rawType;",
    "right" : "Class<?> rawTypeAsClass = (Class<?>) rawType;",
    "info" : "VariableDeclarationStatement[17266-17311]:VariableDeclarationStatement[17376-17421]"
  }, {
    "left" : "boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;",
    "right" : "boolean isStaticOrTopLevelClass = Modifier.isStatic(rawTypeAsClass.getModifiers())\n            || rawTypeAsClass.getEnclosingClass() == null;",
    "info" : "VariableDeclarationStatement[17320-17461]:VariableDeclarationStatement[17430-17571]"
  }, {
    "left" : "checkArgument(ownerType != null || isStaticOrTopLevelClass);",
    "right" : "checkArgument(ownerType != null || isStaticOrTopLevelClass);",
    "info" : "ExpressionStatement[17470-17530]:ExpressionStatement[17580-17640]"
  }, {
    "left" : "this.ownerType = ownerType == null ? null : canonicalize(ownerType);",
    "right" : "this.ownerType = ownerType == null ? null : canonicalize(ownerType);",
    "info" : "ExpressionStatement[17546-17614]:ExpressionStatement[17656-17724]"
  }, {
    "left" : "this.rawType = canonicalize(rawType);",
    "right" : "this.rawType = canonicalize(rawType);",
    "info" : "ExpressionStatement[17621-17658]:ExpressionStatement[17731-17768]"
  }, {
    "left" : "this.typeArguments = typeArguments.clone();",
    "right" : "this.typeArguments = typeArguments.clone();",
    "info" : "ExpressionStatement[17665-17708]:ExpressionStatement[17775-17818]"
  }, {
    "left" : "for (int t = 0, length = this.typeArguments.length; t < length; t++)",
    "right" : "for (int t = 0, length = this.typeArguments.length; t < length; t++)",
    "info" : "ForStatement[17715-17957]:ForStatement[17825-18067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17784-17957]:Block[17894-18067]"
  }, {
    "left" : "checkNotNull(this.typeArguments[t]);",
    "right" : "checkNotNull(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17794-17830]:ExpressionStatement[17904-17940]"
  }, {
    "left" : "checkNotPrimitive(this.typeArguments[t]);",
    "right" : "checkNotPrimitive(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17839-17880]:ExpressionStatement[17949-17990]"
  }, {
    "left" : "this.typeArguments[t] = canonicalize(this.typeArguments[t]);",
    "right" : "this.typeArguments[t] = canonicalize(this.typeArguments[t]);",
    "info" : "ExpressionStatement[17889-17949]:ExpressionStatement[17999-18059]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17969-17975]:Modifier[18079-18085]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[17976-17982]:ArrayType[18086-18092]"
  }, {
    "left" : "getActualTypeArguments",
    "right" : "getActualTypeArguments",
    "info" : "SimpleName[17983-18005]:SimpleName[18093-18115]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18008-18051]:Block[18118-18161]"
  }, {
    "left" : "return typeArguments.clone();",
    "right" : "return typeArguments.clone();",
    "info" : "ReturnStatement[18016-18045]:ReturnStatement[18126-18155]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18057-18063]:Modifier[18167-18173]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[18064-18068]:SimpleType[18174-18178]"
  }, {
    "left" : "getRawType",
    "right" : "getRawType",
    "info" : "SimpleName[18069-18079]:SimpleName[18179-18189]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18082-18111]:Block[18192-18221]"
  }, {
    "left" : "return rawType;",
    "right" : "return rawType;",
    "info" : "ReturnStatement[18090-18105]:ReturnStatement[18200-18215]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18117-18123]:Modifier[18227-18233]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[18124-18128]:SimpleType[18234-18238]"
  }, {
    "left" : "getOwnerType",
    "right" : "getOwnerType",
    "info" : "SimpleName[18129-18141]:SimpleName[18239-18251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18144-18175]:Block[18254-18285]"
  }, {
    "left" : "return ownerType;",
    "right" : "return ownerType;",
    "info" : "ReturnStatement[18152-18169]:ReturnStatement[18262-18279]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18181-18190]:MarkerAnnotation[18291-18300]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18191-18197]:Modifier[18301-18307]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[18198-18205]:PrimitiveType[18308-18315]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[18206-18212]:SimpleName[18316-18322]"
  }, {
    "left" : "Object other",
    "right" : "Object other",
    "info" : "SingleVariableDeclaration[18213-18225]:SingleVariableDeclaration[18323-18335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18227-18348]:Block[18337-18458]"
  }, {
    "left" : "return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);",
    "right" : "return other instanceof ParameterizedType\n          && $Gson$Types.equals(this, (ParameterizedType) other);",
    "info" : "ReturnStatement[18235-18342]:ReturnStatement[18345-18452]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18354-18363]:MarkerAnnotation[18464-18473]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18364-18370]:Modifier[18474-18480]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[18371-18374]:PrimitiveType[18481-18484]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[18375-18383]:SimpleName[18485-18493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18386-18507]:Block[18496-18617]"
  }, {
    "left" : "return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);",
    "right" : "return Arrays.hashCode(typeArguments)\n          ^ rawType.hashCode()\n          ^ hashCodeOrZero(ownerType);",
    "info" : "ReturnStatement[18394-18501]:ReturnStatement[18504-18611]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18513-18522]:MarkerAnnotation[18623-18632]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18523-18529]:Modifier[18633-18639]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[18530-18536]:SimpleType[18640-18646]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[18537-18545]:SimpleName[18647-18655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18548-19019]:Block[18658-19129]"
  }, {
    "left" : "int length = typeArguments.length;",
    "right" : "int length = typeArguments.length;",
    "info" : "VariableDeclarationStatement[18556-18590]:VariableDeclarationStatement[18666-18700]"
  }, {
    "left" : "if (length == 0)",
    "right" : "if (length == 0)",
    "info" : "IfStatement[18597-18661]:IfStatement[18707-18771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18614-18661]:Block[18724-18771]"
  }, {
    "left" : "return typeToString(rawType);",
    "right" : "return typeToString(rawType);",
    "info" : "ReturnStatement[18624-18653]:ReturnStatement[18734-18763]"
  }, {
    "left" : "StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));",
    "right" : "StringBuilder stringBuilder = new StringBuilder(30 * (length + 1));",
    "info" : "VariableDeclarationStatement[18669-18736]:VariableDeclarationStatement[18779-18846]"
  }, {
    "left" : "stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));",
    "right" : "stringBuilder.append(typeToString(rawType)).append(\"<\").append(typeToString(typeArguments[0]));",
    "info" : "ExpressionStatement[18743-18838]:ExpressionStatement[18853-18948]"
  }, {
    "left" : "for (int i = 1; i < length; i++)",
    "right" : "for (int i = 1; i < length; i++)",
    "info" : "ForStatement[18845-18962]:ForStatement[18955-19072]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18878-18962]:Block[18988-19072]"
  }, {
    "left" : "stringBuilder.append(\", \").append(typeToString(typeArguments[i]));",
    "right" : "stringBuilder.append(\", \").append(typeToString(typeArguments[i]));",
    "info" : "ExpressionStatement[18888-18954]:ExpressionStatement[18998-19064]"
  }, {
    "left" : "return stringBuilder.append(\">\").toString();",
    "right" : "return stringBuilder.append(\">\").toString();",
    "info" : "ReturnStatement[18969-19013]:ReturnStatement[19079-19123]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19080-19087]:Modifier[19190-19197]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19088-19094]:Modifier[19198-19204]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[19095-19100]:Modifier[19205-19210]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[19101-19106]:TYPE_DECLARATION_KIND[19211-19216]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19215-19221]:Modifier[19325-19331]"
  }, {
    "left" : "GenericArrayTypeImpl",
    "right" : "GenericArrayTypeImpl",
    "info" : "SimpleName[19222-19242]:SimpleName[19332-19352]"
  }, {
    "left" : "Type componentType",
    "right" : "Type componentType",
    "info" : "SingleVariableDeclaration[19243-19261]:SingleVariableDeclaration[19353-19371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19263-19326]:Block[19373-19436]"
  }, {
    "left" : "this.componentType = canonicalize(componentType);",
    "right" : "this.componentType = canonicalize(componentType);",
    "info" : "ExpressionStatement[19271-19320]:ExpressionStatement[19381-19430]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19332-19338]:Modifier[19442-19448]"
  }, {
    "left" : "Type",
    "right" : "Type",
    "info" : "SimpleType[19339-19343]:SimpleType[19449-19453]"
  }, {
    "left" : "getGenericComponentType",
    "right" : "getGenericComponentType",
    "info" : "SimpleName[19344-19367]:SimpleName[19454-19477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19370-19405]:Block[19480-19515]"
  }, {
    "left" : "return componentType;",
    "right" : "return componentType;",
    "info" : "ReturnStatement[19378-19399]:ReturnStatement[19488-19509]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19411-19420]:MarkerAnnotation[19521-19530]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19421-19427]:Modifier[19531-19537]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[19428-19435]:PrimitiveType[19538-19545]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[19436-19442]:SimpleName[19546-19552]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[19443-19451]:SingleVariableDeclaration[19553-19561]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19453-19564]:Block[19563-19674]"
  }, {
    "left" : "return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);",
    "right" : "return o instanceof GenericArrayType\n          && $Gson$Types.equals(this, (GenericArrayType) o);",
    "info" : "ReturnStatement[19461-19558]:ReturnStatement[19571-19668]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19570-19579]:MarkerAnnotation[19680-19689]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19580-19586]:Modifier[19690-19696]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[19587-19590]:PrimitiveType[19697-19700]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[19591-19599]:SimpleName[19701-19709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19602-19648]:Block[19712-19758]"
  }, {
    "left" : "return componentType.hashCode();",
    "right" : "return componentType.hashCode();",
    "info" : "ReturnStatement[19610-19642]:ReturnStatement[19720-19752]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19654-19663]:MarkerAnnotation[19764-19773]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19664-19670]:Modifier[19774-19780]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[19671-19677]:SimpleType[19781-19787]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[19678-19686]:SimpleName[19788-19796]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19689-19745]:Block[19799-19855]"
  }, {
    "left" : "return typeToString(componentType) + \"[]\";",
    "right" : "return typeToString(componentType) + \"[]\";",
    "info" : "ReturnStatement[19697-19739]:ReturnStatement[19807-19849]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20049-20056]:Modifier[20159-20166]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[20057-20063]:Modifier[20167-20173]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[20064-20069]:Modifier[20174-20179]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[20070-20075]:TYPE_DECLARATION_KIND[20180-20185]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20208-20214]:Modifier[20318-20324]"
  }, {
    "left" : "WildcardTypeImpl",
    "right" : "WildcardTypeImpl",
    "info" : "SimpleName[20215-20231]:SimpleName[20325-20341]"
  }, {
    "left" : "Type[] upperBounds",
    "right" : "Type[] upperBounds",
    "info" : "SingleVariableDeclaration[20232-20250]:SingleVariableDeclaration[20342-20360]"
  }, {
    "left" : "Type[] lowerBounds",
    "right" : "Type[] lowerBounds",
    "info" : "SingleVariableDeclaration[20252-20270]:SingleVariableDeclaration[20362-20380]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20272-20834]:Block[20382-20944]"
  }, {
    "left" : "checkArgument(lowerBounds.length <= 1);",
    "right" : "checkArgument(lowerBounds.length <= 1);",
    "info" : "ExpressionStatement[20280-20319]:ExpressionStatement[20390-20429]"
  }, {
    "left" : "checkArgument(upperBounds.length == 1);",
    "right" : "checkArgument(upperBounds.length == 1);",
    "info" : "ExpressionStatement[20326-20365]:ExpressionStatement[20436-20475]"
  }, {
    "left" : "if (lowerBounds.length == 1)",
    "right" : "if (lowerBounds.length == 1)",
    "info" : "IfStatement[20373-20828]:IfStatement[20483-20938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20402-20644]:Block[20512-20754]"
  }, {
    "left" : "checkNotNull(lowerBounds[0]);",
    "right" : "checkNotNull(lowerBounds[0]);",
    "info" : "ExpressionStatement[20412-20441]:ExpressionStatement[20522-20551]"
  }, {
    "left" : "checkNotPrimitive(lowerBounds[0]);",
    "right" : "checkNotPrimitive(lowerBounds[0]);",
    "info" : "ExpressionStatement[20450-20484]:ExpressionStatement[20560-20594]"
  }, {
    "left" : "checkArgument(upperBounds[0] == Object.class);",
    "right" : "checkArgument(upperBounds[0] == Object.class);",
    "info" : "ExpressionStatement[20493-20539]:ExpressionStatement[20603-20649]"
  }, {
    "left" : "this.lowerBound = canonicalize(lowerBounds[0]);",
    "right" : "this.lowerBound = canonicalize(lowerBounds[0]);",
    "info" : "ExpressionStatement[20548-20595]:ExpressionStatement[20658-20705]"
  }, {
    "left" : "this.upperBound = Object.class;",
    "right" : "this.upperBound = Object.class;",
    "info" : "ExpressionStatement[20604-20635]:ExpressionStatement[20714-20745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20650-20828]:Block[20760-20938]"
  }, {
    "left" : "checkNotNull(upperBounds[0]);",
    "right" : "checkNotNull(upperBounds[0]);",
    "info" : "ExpressionStatement[20660-20689]:ExpressionStatement[20770-20799]"
  }, {
    "left" : "checkNotPrimitive(upperBounds[0]);",
    "right" : "checkNotPrimitive(upperBounds[0]);",
    "info" : "ExpressionStatement[20698-20732]:ExpressionStatement[20808-20842]"
  }, {
    "left" : "this.lowerBound = null;",
    "right" : "this.lowerBound = null;",
    "info" : "ExpressionStatement[20741-20764]:ExpressionStatement[20851-20874]"
  }, {
    "left" : "this.upperBound = canonicalize(upperBounds[0]);",
    "right" : "this.upperBound = canonicalize(upperBounds[0]);",
    "info" : "ExpressionStatement[20773-20820]:ExpressionStatement[20883-20930]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20840-20846]:Modifier[20950-20956]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[20847-20853]:ArrayType[20957-20963]"
  }, {
    "left" : "getUpperBounds",
    "right" : "getUpperBounds",
    "info" : "SimpleName[20854-20868]:SimpleName[20964-20978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20871-20918]:Block[20981-21028]"
  }, {
    "left" : "return new Type[] { upperBound };",
    "right" : "return new Type[] { upperBound };",
    "info" : "ReturnStatement[20879-20912]:ReturnStatement[20989-21022]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20924-20930]:Modifier[21034-21040]"
  }, {
    "left" : "Type[]",
    "right" : "Type[]",
    "info" : "ArrayType[20931-20937]:ArrayType[21041-21047]"
  }, {
    "left" : "getLowerBounds",
    "right" : "getLowerBounds",
    "info" : "SimpleName[20938-20952]:SimpleName[21048-21062]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20955-21042]:Block[21065-21152]"
  }, {
    "left" : "return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;",
    "right" : "return lowerBound != null ? new Type[] { lowerBound } : EMPTY_TYPE_ARRAY;",
    "info" : "ReturnStatement[20963-21036]:ReturnStatement[21073-21146]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[21048-21057]:MarkerAnnotation[21158-21167]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21058-21064]:Modifier[21168-21174]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[21065-21072]:PrimitiveType[21175-21182]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[21073-21079]:SimpleName[21183-21189]"
  }, {
    "left" : "Object other",
    "right" : "Object other",
    "info" : "SingleVariableDeclaration[21080-21092]:SingleVariableDeclaration[21190-21202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21094-21205]:Block[21204-21315]"
  }, {
    "left" : "return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);",
    "right" : "return other instanceof WildcardType\n          && $Gson$Types.equals(this, (WildcardType) other);",
    "info" : "ReturnStatement[21102-21199]:ReturnStatement[21212-21309]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[21211-21220]:MarkerAnnotation[21321-21330]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21221-21227]:Modifier[21331-21337]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[21228-21231]:PrimitiveType[21338-21341]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[21232-21240]:SimpleName[21342-21350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21243-21451]:Block[21353-21561]"
  }, {
    "left" : "return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());",
    "right" : "return (lowerBound != null ? 31 + lowerBound.hashCode() : 1)\n          ^ (31 + upperBound.hashCode());",
    "info" : "ReturnStatement[21343-21445]:ReturnStatement[21453-21555]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[21457-21466]:MarkerAnnotation[21567-21576]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21467-21473]:Modifier[21577-21583]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[21474-21480]:SimpleType[21584-21590]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[21481-21489]:SimpleName[21591-21599]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21492-21731]:Block[21602-21841]"
  }, {
    "left" : "if (lowerBound != null)",
    "right" : "if (lowerBound != null)",
    "info" : "IfStatement[21500-21725]:IfStatement[21610-21835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21524-21587]:Block[21634-21697]"
  }, {
    "left" : "return \"? super \" + typeToString(lowerBound);",
    "right" : "return \"? super \" + typeToString(lowerBound);",
    "info" : "ReturnStatement[21534-21579]:ReturnStatement[21644-21689]"
  }, {
    "left" : "if (upperBound == Object.class)",
    "right" : "if (upperBound == Object.class)",
    "info" : "IfStatement[21593-21725]:IfStatement[21703-21835]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21625-21654]:Block[21735-21764]"
  }, {
    "left" : "return \"?\";",
    "right" : "return \"?\";",
    "info" : "ReturnStatement[21635-21646]:ReturnStatement[21745-21756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21660-21725]:Block[21770-21835]"
  }, {
    "left" : "return \"? extends \" + typeToString(upperBound);",
    "right" : "return \"? extends \" + typeToString(upperBound);",
    "info" : "ReturnStatement[21670-21717]:ReturnStatement[21780-21827]"
  } ]
}