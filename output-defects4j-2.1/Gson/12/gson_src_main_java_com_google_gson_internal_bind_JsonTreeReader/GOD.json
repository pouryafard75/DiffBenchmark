{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsonTreeReader",
      "right" : "JsonTreeReader",
      "info" : "TypeDeclaration[1001-9801]:TypeDeclaration[1001-9867]"
    }, {
      "left" : "private static final Reader UNREADABLE_READER = new Reader() {\n    @Override public int read(char[] buffer, int offset, int count) throws IOException {\n      throw new AssertionError();\n    }\n    @Override public void close() throws IOException {\n      throw new AssertionError();\n    }\n  };",
      "right" : "private static final Reader UNREADABLE_READER = new Reader() {\n    @Override public int read(char[] buffer, int offset, int count) throws IOException {\n      throw new AssertionError();\n    }\n    @Override public void close() throws IOException {\n      throw new AssertionError();\n    }\n  };",
      "info" : "FieldDeclaration[1192-1483]:FieldDeclaration[1192-1483]"
    }, {
      "left" : "public int read(char[] buffer, int offset, int count) throws IOException",
      "right" : "public int read(char[] buffer, int offset, int count) throws IOException",
      "info" : "MethodDeclaration[1259-1383]:MethodDeclaration[1259-1383]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[1388-1478]:MethodDeclaration[1388-1478]"
    }, {
      "left" : "private static final Object SENTINEL_CLOSED = new Object();",
      "right" : "private static final Object SENTINEL_CLOSED = new Object();",
      "info" : "FieldDeclaration[1486-1545]:FieldDeclaration[1486-1545]"
    }, {
      "left" : "private Object[] stack = new Object[32];",
      "right" : "private Object[] stack = new Object[32];",
      "info" : "FieldDeclaration[1641-1681]:FieldDeclaration[1641-1681]"
    }, {
      "left" : "private int stackSize = 0;",
      "right" : "private int stackSize = 0;",
      "info" : "FieldDeclaration[1684-1710]:FieldDeclaration[1684-1710]"
    }, {
      "left" : "private String[] pathNames = new String[32];",
      "right" : "private String[] pathNames = new String[32];",
      "info" : "FieldDeclaration[2177-2221]:FieldDeclaration[2177-2221]"
    }, {
      "left" : "private int[] pathIndices = new int[32];",
      "right" : "private int[] pathIndices = new int[32];",
      "info" : "FieldDeclaration[2224-2264]:FieldDeclaration[2224-2264]"
    }, {
      "left" : "public JsonTreeReader(JsonElement element)",
      "right" : "public JsonTreeReader(JsonElement element)",
      "info" : "MethodDeclaration[2268-2365]:MethodDeclaration[2268-2365]"
    }, {
      "left" : "public void beginArray() throws IOException",
      "right" : "public void beginArray() throws IOException",
      "info" : "MethodDeclaration[2369-2574]:MethodDeclaration[2369-2574]"
    }, {
      "left" : "public void endArray() throws IOException",
      "right" : "public void endArray() throws IOException",
      "info" : "MethodDeclaration[2578-2794]:MethodDeclaration[2578-2794]"
    }, {
      "left" : "public void beginObject() throws IOException",
      "right" : "public void beginObject() throws IOException",
      "info" : "MethodDeclaration[2798-2984]:MethodDeclaration[2798-2984]"
    }, {
      "left" : "public void endObject() throws IOException",
      "right" : "public void endObject() throws IOException",
      "info" : "MethodDeclaration[2988-3207]:MethodDeclaration[2988-3207]"
    }, {
      "left" : "public boolean hasNext() throws IOException",
      "right" : "public boolean hasNext() throws IOException",
      "info" : "MethodDeclaration[3211-3374]:MethodDeclaration[3211-3374]"
    }, {
      "left" : "public JsonToken peek() throws IOException",
      "right" : "public JsonToken peek() throws IOException",
      "info" : "MethodDeclaration[3378-4701]:MethodDeclaration[3378-4701]"
    }, {
      "left" : "private Object peekStack()",
      "right" : "private Object peekStack()",
      "info" : "MethodDeclaration[4705-4770]:MethodDeclaration[4705-4770]"
    }, {
      "left" : "private Object popStack()",
      "right" : "private Object popStack()",
      "info" : "MethodDeclaration[4774-4893]:MethodDeclaration[4774-4893]"
    }, {
      "left" : "private void expect(JsonToken expected) throws IOException",
      "right" : "private void expect(JsonToken expected) throws IOException",
      "info" : "MethodDeclaration[4897-5113]:MethodDeclaration[4897-5113]"
    }, {
      "left" : "public String nextName() throws IOException",
      "right" : "public String nextName() throws IOException",
      "info" : "MethodDeclaration[5117-5438]:MethodDeclaration[5117-5438]"
    }, {
      "left" : "public String nextString() throws IOException",
      "right" : "public String nextString() throws IOException",
      "info" : "MethodDeclaration[5442-5878]:MethodDeclaration[5442-5878]"
    }, {
      "left" : "public boolean nextBoolean() throws IOException",
      "right" : "public boolean nextBoolean() throws IOException",
      "info" : "MethodDeclaration[5882-6128]:MethodDeclaration[5882-6128]"
    }, {
      "left" : "public void nextNull() throws IOException",
      "right" : "public void nextNull() throws IOException",
      "info" : "MethodDeclaration[6132-6300]:MethodDeclaration[6132-6300]"
    }, {
      "left" : "public double nextDouble() throws IOException",
      "right" : "public double nextDouble() throws IOException",
      "info" : "MethodDeclaration[6304-6927]:MethodDeclaration[6304-6927]"
    }, {
      "left" : "public long nextLong() throws IOException",
      "right" : "public long nextLong() throws IOException",
      "info" : "MethodDeclaration[6931-7376]:MethodDeclaration[6931-7376]"
    }, {
      "left" : "public int nextInt() throws IOException",
      "right" : "public int nextInt() throws IOException",
      "info" : "MethodDeclaration[7380-7821]:MethodDeclaration[7380-7821]"
    }, {
      "left" : "public void close() throws IOException",
      "right" : "public void close() throws IOException",
      "info" : "MethodDeclaration[7825-7944]:MethodDeclaration[7825-7944]"
    }, {
      "left" : "public void skipValue() throws IOException",
      "right" : "public void skipValue() throws IOException",
      "info" : "MethodDeclaration[7948-8217]:MethodDeclaration[7948-8283]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[8221-8300]:MethodDeclaration[8287-8366]"
    }, {
      "left" : "public void promoteNameToValue() throws IOException",
      "right" : "public void promoteNameToValue() throws IOException",
      "info" : "MethodDeclaration[8304-8574]:MethodDeclaration[8370-8640]"
    }, {
      "left" : "private void push(Object newTop)",
      "right" : "private void push(Object newTop)",
      "info" : "MethodDeclaration[8578-9141]:MethodDeclaration[8644-9207]"
    }, {
      "left" : "public String getPath()",
      "right" : "public String getPath()",
      "info" : "MethodDeclaration[9145-9722]:MethodDeclaration[9211-9788]"
    }, {
      "left" : "private String locationString()",
      "right" : "private String locationString()",
      "info" : "MethodDeclaration[9726-9799]:MethodDeclaration[9792-9865]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1342-1383]:Block[1342-1383]"
    }, {
      "left" : "throw new AssertionError();",
      "right" : "throw new AssertionError();",
      "info" : "ThrowStatement[1350-1377]:ThrowStatement[1350-1377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1437-1478]:Block[1437-1478]"
    }, {
      "left" : "throw new AssertionError();",
      "right" : "throw new AssertionError();",
      "info" : "ThrowStatement[1445-1472]:ThrowStatement[1445-1472]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2311-2365]:Block[2311-2365]"
    }, {
      "left" : "super(UNREADABLE_READER);",
      "right" : "super(UNREADABLE_READER);",
      "info" : "SuperConstructorInvocation[2317-2342]:SuperConstructorInvocation[2317-2342]"
    }, {
      "left" : "push(element);",
      "right" : "push(element);",
      "info" : "ExpressionStatement[2347-2361]:ExpressionStatement[2347-2361]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2423-2574]:Block[2423-2574]"
    }, {
      "left" : "expect(JsonToken.BEGIN_ARRAY);",
      "right" : "expect(JsonToken.BEGIN_ARRAY);",
      "info" : "ExpressionStatement[2429-2459]:ExpressionStatement[2429-2459]"
    }, {
      "left" : "JsonArray array = (JsonArray) peekStack();",
      "right" : "JsonArray array = (JsonArray) peekStack();",
      "info" : "VariableDeclarationStatement[2464-2506]:VariableDeclarationStatement[2464-2506]"
    }, {
      "left" : "push(array.iterator());",
      "right" : "push(array.iterator());",
      "info" : "ExpressionStatement[2511-2534]:ExpressionStatement[2511-2534]"
    }, {
      "left" : "pathIndices[stackSize - 1] = 0;",
      "right" : "pathIndices[stackSize - 1] = 0;",
      "info" : "ExpressionStatement[2539-2570]:ExpressionStatement[2539-2570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2630-2794]:Block[2630-2794]"
    }, {
      "left" : "expect(JsonToken.END_ARRAY);",
      "right" : "expect(JsonToken.END_ARRAY);",
      "info" : "ExpressionStatement[2636-2664]:ExpressionStatement[2636-2664]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[2669-2680]:ExpressionStatement[2669-2680]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[2703-2714]:ExpressionStatement[2703-2714]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[2728-2790]:IfStatement[2728-2790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2747-2790]:Block[2747-2790]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[2755-2784]:ExpressionStatement[2755-2784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2853-2984]:Block[2853-2984]"
    }, {
      "left" : "expect(JsonToken.BEGIN_OBJECT);",
      "right" : "expect(JsonToken.BEGIN_OBJECT);",
      "info" : "ExpressionStatement[2859-2890]:ExpressionStatement[2859-2890]"
    }, {
      "left" : "JsonObject object = (JsonObject) peekStack();",
      "right" : "JsonObject object = (JsonObject) peekStack();",
      "info" : "VariableDeclarationStatement[2895-2940]:VariableDeclarationStatement[2895-2940]"
    }, {
      "left" : "push(object.entrySet().iterator());",
      "right" : "push(object.entrySet().iterator());",
      "info" : "ExpressionStatement[2945-2980]:ExpressionStatement[2945-2980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3041-3207]:Block[3041-3207]"
    }, {
      "left" : "expect(JsonToken.END_OBJECT);",
      "right" : "expect(JsonToken.END_OBJECT);",
      "info" : "ExpressionStatement[3047-3076]:ExpressionStatement[3047-3076]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[3081-3092]:ExpressionStatement[3081-3092]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[3115-3126]:ExpressionStatement[3115-3126]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[3141-3203]:IfStatement[3141-3203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3160-3203]:Block[3160-3203]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[3168-3197]:ExpressionStatement[3168-3197]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3265-3374]:Block[3265-3374]"
    }, {
      "left" : "JsonToken token = peek();",
      "right" : "JsonToken token = peek();",
      "info" : "VariableDeclarationStatement[3271-3296]:VariableDeclarationStatement[3271-3296]"
    }, {
      "left" : "return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;",
      "right" : "return token != JsonToken.END_OBJECT && token != JsonToken.END_ARRAY;",
      "info" : "ReturnStatement[3301-3370]:ReturnStatement[3301-3370]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3431-4701]:Block[3431-4701]"
    }, {
      "left" : "if (stackSize == 0)",
      "right" : "if (stackSize == 0)",
      "info" : "IfStatement[3437-3501]:IfStatement[3437-3501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3457-3501]:Block[3457-3501]"
    }, {
      "left" : "return JsonToken.END_DOCUMENT;",
      "right" : "return JsonToken.END_DOCUMENT;",
      "info" : "ReturnStatement[3465-3495]:ReturnStatement[3465-3495]"
    }, {
      "left" : "Object o = peekStack();",
      "right" : "Object o = peekStack();",
      "info" : "VariableDeclarationStatement[3507-3530]:VariableDeclarationStatement[3507-3530]"
    }, {
      "left" : "if (o instanceof Iterator)",
      "right" : "if (o instanceof Iterator)",
      "info" : "IfStatement[3535-4697]:IfStatement[3535-4697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3562-3951]:Block[3562-3951]"
    }, {
      "left" : "boolean isObject = stack[stackSize - 2] instanceof JsonObject;",
      "right" : "boolean isObject = stack[stackSize - 2] instanceof JsonObject;",
      "info" : "VariableDeclarationStatement[3570-3632]:VariableDeclarationStatement[3570-3632]"
    }, {
      "left" : "Iterator<?> iterator = (Iterator<?>) o;",
      "right" : "Iterator<?> iterator = (Iterator<?>) o;",
      "info" : "VariableDeclarationStatement[3639-3678]:VariableDeclarationStatement[3639-3678]"
    }, {
      "left" : "if (iterator.hasNext())",
      "right" : "if (iterator.hasNext())",
      "info" : "IfStatement[3685-3945]:IfStatement[3685-3945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3709-3860]:Block[3709-3860]"
    }, {
      "left" : "if (isObject)",
      "right" : "if (isObject)",
      "info" : "IfStatement[3719-3852]:IfStatement[3719-3852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3733-3777]:Block[3733-3777]"
    }, {
      "left" : "return JsonToken.NAME;",
      "right" : "return JsonToken.NAME;",
      "info" : "ReturnStatement[3745-3767]:ReturnStatement[3745-3767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3783-3852]:Block[3783-3852]"
    }, {
      "left" : "push(iterator.next());",
      "right" : "push(iterator.next());",
      "info" : "ExpressionStatement[3795-3817]:ExpressionStatement[3795-3817]"
    }, {
      "left" : "return peek();",
      "right" : "return peek();",
      "info" : "ReturnStatement[3828-3842]:ReturnStatement[3828-3842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3866-3945]:Block[3866-3945]"
    }, {
      "left" : "return isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;",
      "right" : "return isObject ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;",
      "info" : "ReturnStatement[3876-3937]:ReturnStatement[3876-3937]"
    }, {
      "left" : "if (o instanceof JsonObject)",
      "right" : "if (o instanceof JsonObject)",
      "info" : "IfStatement[3957-4697]:IfStatement[3957-4697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3986-4030]:Block[3986-4030]"
    }, {
      "left" : "return JsonToken.BEGIN_OBJECT;",
      "right" : "return JsonToken.BEGIN_OBJECT;",
      "info" : "ReturnStatement[3994-4024]:ReturnStatement[3994-4024]"
    }, {
      "left" : "if (o instanceof JsonArray)",
      "right" : "if (o instanceof JsonArray)",
      "info" : "IfStatement[4036-4697]:IfStatement[4036-4697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4064-4107]:Block[4064-4107]"
    }, {
      "left" : "return JsonToken.BEGIN_ARRAY;",
      "right" : "return JsonToken.BEGIN_ARRAY;",
      "info" : "ReturnStatement[4072-4101]:ReturnStatement[4072-4101]"
    }, {
      "left" : "if (o instanceof JsonPrimitive)",
      "right" : "if (o instanceof JsonPrimitive)",
      "info" : "IfStatement[4113-4697]:IfStatement[4113-4697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4145-4479]:Block[4145-4479]"
    }, {
      "left" : "JsonPrimitive primitive = (JsonPrimitive) o;",
      "right" : "JsonPrimitive primitive = (JsonPrimitive) o;",
      "info" : "VariableDeclarationStatement[4153-4197]:VariableDeclarationStatement[4153-4197]"
    }, {
      "left" : "if (primitive.isString())",
      "right" : "if (primitive.isString())",
      "info" : "IfStatement[4204-4473]:IfStatement[4204-4473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4230-4272]:Block[4230-4272]"
    }, {
      "left" : "return JsonToken.STRING;",
      "right" : "return JsonToken.STRING;",
      "info" : "ReturnStatement[4240-4264]:ReturnStatement[4240-4264]"
    }, {
      "left" : "if (primitive.isBoolean())",
      "right" : "if (primitive.isBoolean())",
      "info" : "IfStatement[4278-4473]:IfStatement[4278-4473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4305-4348]:Block[4305-4348]"
    }, {
      "left" : "return JsonToken.BOOLEAN;",
      "right" : "return JsonToken.BOOLEAN;",
      "info" : "ReturnStatement[4315-4340]:ReturnStatement[4315-4340]"
    }, {
      "left" : "if (primitive.isNumber())",
      "right" : "if (primitive.isNumber())",
      "info" : "IfStatement[4354-4473]:IfStatement[4354-4473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4380-4422]:Block[4380-4422]"
    }, {
      "left" : "return JsonToken.NUMBER;",
      "right" : "return JsonToken.NUMBER;",
      "info" : "ReturnStatement[4390-4414]:ReturnStatement[4390-4414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4428-4473]:Block[4428-4473]"
    }, {
      "left" : "throw new AssertionError();",
      "right" : "throw new AssertionError();",
      "info" : "ThrowStatement[4438-4465]:ThrowStatement[4438-4465]"
    }, {
      "left" : "if (o instanceof JsonNull)",
      "right" : "if (o instanceof JsonNull)",
      "info" : "IfStatement[4485-4697]:IfStatement[4485-4697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4512-4548]:Block[4512-4548]"
    }, {
      "left" : "return JsonToken.NULL;",
      "right" : "return JsonToken.NULL;",
      "info" : "ReturnStatement[4520-4542]:ReturnStatement[4520-4542]"
    }, {
      "left" : "if (o == SENTINEL_CLOSED)",
      "right" : "if (o == SENTINEL_CLOSED)",
      "info" : "IfStatement[4554-4697]:IfStatement[4554-4697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4580-4650]:Block[4580-4650]"
    }, {
      "left" : "throw new IllegalStateException(\"JsonReader is closed\");",
      "right" : "throw new IllegalStateException(\"JsonReader is closed\");",
      "info" : "ThrowStatement[4588-4644]:ThrowStatement[4588-4644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4656-4697]:Block[4656-4697]"
    }, {
      "left" : "throw new AssertionError();",
      "right" : "throw new AssertionError();",
      "info" : "ThrowStatement[4664-4691]:ThrowStatement[4664-4691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4732-4770]:Block[4732-4770]"
    }, {
      "left" : "return stack[stackSize - 1];",
      "right" : "return stack[stackSize - 1];",
      "info" : "ReturnStatement[4738-4766]:ReturnStatement[4738-4766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4800-4893]:Block[4800-4893]"
    }, {
      "left" : "Object result = stack[--stackSize];",
      "right" : "Object result = stack[--stackSize];",
      "info" : "VariableDeclarationStatement[4806-4841]:VariableDeclarationStatement[4806-4841]"
    }, {
      "left" : "stack[stackSize] = null;",
      "right" : "stack[stackSize] = null;",
      "info" : "ExpressionStatement[4846-4870]:ExpressionStatement[4846-4870]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[4875-4889]:ReturnStatement[4875-4889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4956-5113]:Block[4956-5113]"
    }, {
      "left" : "if (peek() != expected)",
      "right" : "if (peek() != expected)",
      "info" : "IfStatement[4962-5109]:IfStatement[4962-5109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4986-5109]:Block[4986-5109]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"Expected \" + expected + \" but was \" + peek() + locationString());",
      "right" : "throw new IllegalStateException(\n          \"Expected \" + expected + \" but was \" + peek() + locationString());",
      "info" : "ThrowStatement[4994-5103]:ThrowStatement[4994-5103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5171-5438]:Block[5171-5438]"
    }, {
      "left" : "expect(JsonToken.NAME);",
      "right" : "expect(JsonToken.NAME);",
      "info" : "ExpressionStatement[5177-5200]:ExpressionStatement[5177-5200]"
    }, {
      "left" : "Iterator<?> i = (Iterator<?>) peekStack();",
      "right" : "Iterator<?> i = (Iterator<?>) peekStack();",
      "info" : "VariableDeclarationStatement[5205-5247]:VariableDeclarationStatement[5205-5247]"
    }, {
      "left" : "Map.Entry<?, ?> entry = (Map.Entry<?, ?>) i.next();",
      "right" : "Map.Entry<?, ?> entry = (Map.Entry<?, ?>) i.next();",
      "info" : "VariableDeclarationStatement[5252-5303]:VariableDeclarationStatement[5252-5303]"
    }, {
      "left" : "String result = (String) entry.getKey();",
      "right" : "String result = (String) entry.getKey();",
      "info" : "VariableDeclarationStatement[5308-5348]:VariableDeclarationStatement[5308-5348]"
    }, {
      "left" : "pathNames[stackSize - 1] = result;",
      "right" : "pathNames[stackSize - 1] = result;",
      "info" : "ExpressionStatement[5353-5387]:ExpressionStatement[5353-5387]"
    }, {
      "left" : "push(entry.getValue());",
      "right" : "push(entry.getValue());",
      "info" : "ExpressionStatement[5392-5415]:ExpressionStatement[5392-5415]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[5420-5434]:ReturnStatement[5420-5434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5498-5878]:Block[5498-5878]"
    }, {
      "left" : "JsonToken token = peek();",
      "right" : "JsonToken token = peek();",
      "info" : "VariableDeclarationStatement[5504-5529]:VariableDeclarationStatement[5504-5529]"
    }, {
      "left" : "if (token != JsonToken.STRING && token != JsonToken.NUMBER)",
      "right" : "if (token != JsonToken.STRING && token != JsonToken.NUMBER)",
      "info" : "IfStatement[5534-5724]:IfStatement[5534-5724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5594-5724]:Block[5594-5724]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.STRING + \" but was \" + token + locationString());",
      "right" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.STRING + \" but was \" + token + locationString());",
      "info" : "ThrowStatement[5602-5718]:ThrowStatement[5602-5718]"
    }, {
      "left" : "String result = ((JsonPrimitive) popStack()).getAsString();",
      "right" : "String result = ((JsonPrimitive) popStack()).getAsString();",
      "info" : "VariableDeclarationStatement[5729-5788]:VariableDeclarationStatement[5729-5788]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[5793-5855]:IfStatement[5793-5855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5812-5855]:Block[5812-5855]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[5820-5849]:ExpressionStatement[5820-5849]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[5860-5874]:ReturnStatement[5860-5874]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5940-6128]:Block[5940-6128]"
    }, {
      "left" : "expect(JsonToken.BOOLEAN);",
      "right" : "expect(JsonToken.BOOLEAN);",
      "info" : "ExpressionStatement[5946-5972]:ExpressionStatement[5946-5972]"
    }, {
      "left" : "boolean result = ((JsonPrimitive) popStack()).getAsBoolean();",
      "right" : "boolean result = ((JsonPrimitive) popStack()).getAsBoolean();",
      "info" : "VariableDeclarationStatement[5977-6038]:VariableDeclarationStatement[5977-6038]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[6043-6105]:IfStatement[6043-6105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6062-6105]:Block[6062-6105]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[6070-6099]:ExpressionStatement[6070-6099]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[6110-6124]:ReturnStatement[6110-6124]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6184-6300]:Block[6184-6300]"
    }, {
      "left" : "expect(JsonToken.NULL);",
      "right" : "expect(JsonToken.NULL);",
      "info" : "ExpressionStatement[6190-6213]:ExpressionStatement[6190-6213]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[6218-6229]:ExpressionStatement[6218-6229]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[6234-6296]:IfStatement[6234-6296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6253-6296]:Block[6253-6296]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[6261-6290]:ExpressionStatement[6261-6290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6360-6927]:Block[6360-6927]"
    }, {
      "left" : "JsonToken token = peek();",
      "right" : "JsonToken token = peek();",
      "info" : "VariableDeclarationStatement[6366-6391]:VariableDeclarationStatement[6366-6391]"
    }, {
      "left" : "if (token != JsonToken.NUMBER && token != JsonToken.STRING)",
      "right" : "if (token != JsonToken.NUMBER && token != JsonToken.STRING)",
      "info" : "IfStatement[6396-6586]:IfStatement[6396-6586]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6456-6586]:Block[6456-6586]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.NUMBER + \" but was \" + token + locationString());",
      "right" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.NUMBER + \" but was \" + token + locationString());",
      "info" : "ThrowStatement[6464-6580]:ThrowStatement[6464-6580]"
    }, {
      "left" : "double result = ((JsonPrimitive) peekStack()).getAsDouble();",
      "right" : "double result = ((JsonPrimitive) peekStack()).getAsDouble();",
      "info" : "VariableDeclarationStatement[6591-6651]:VariableDeclarationStatement[6591-6651]"
    }, {
      "left" : "if (!isLenient() && (Double.isNaN(result) || Double.isInfinite(result)))",
      "right" : "if (!isLenient() && (Double.isNaN(result) || Double.isInfinite(result)))",
      "info" : "IfStatement[6656-6821]:IfStatement[6656-6821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6729-6821]:Block[6729-6821]"
    }, {
      "left" : "throw new NumberFormatException(\"JSON forbids NaN and infinities: \" + result);",
      "right" : "throw new NumberFormatException(\"JSON forbids NaN and infinities: \" + result);",
      "info" : "ThrowStatement[6737-6815]:ThrowStatement[6737-6815]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[6826-6837]:ExpressionStatement[6826-6837]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[6842-6904]:IfStatement[6842-6904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6861-6904]:Block[6861-6904]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[6869-6898]:ExpressionStatement[6869-6898]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[6909-6923]:ReturnStatement[6909-6923]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6983-7376]:Block[6983-7376]"
    }, {
      "left" : "JsonToken token = peek();",
      "right" : "JsonToken token = peek();",
      "info" : "VariableDeclarationStatement[6989-7014]:VariableDeclarationStatement[6989-7014]"
    }, {
      "left" : "if (token != JsonToken.NUMBER && token != JsonToken.STRING)",
      "right" : "if (token != JsonToken.NUMBER && token != JsonToken.STRING)",
      "info" : "IfStatement[7019-7209]:IfStatement[7019-7209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7079-7209]:Block[7079-7209]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.NUMBER + \" but was \" + token + locationString());",
      "right" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.NUMBER + \" but was \" + token + locationString());",
      "info" : "ThrowStatement[7087-7203]:ThrowStatement[7087-7203]"
    }, {
      "left" : "long result = ((JsonPrimitive) peekStack()).getAsLong();",
      "right" : "long result = ((JsonPrimitive) peekStack()).getAsLong();",
      "info" : "VariableDeclarationStatement[7214-7270]:VariableDeclarationStatement[7214-7270]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[7275-7286]:ExpressionStatement[7275-7286]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[7291-7353]:IfStatement[7291-7353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7310-7353]:Block[7310-7353]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[7318-7347]:ExpressionStatement[7318-7347]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7358-7372]:ReturnStatement[7358-7372]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7430-7821]:Block[7430-7821]"
    }, {
      "left" : "JsonToken token = peek();",
      "right" : "JsonToken token = peek();",
      "info" : "VariableDeclarationStatement[7436-7461]:VariableDeclarationStatement[7436-7461]"
    }, {
      "left" : "if (token != JsonToken.NUMBER && token != JsonToken.STRING)",
      "right" : "if (token != JsonToken.NUMBER && token != JsonToken.STRING)",
      "info" : "IfStatement[7466-7656]:IfStatement[7466-7656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7526-7656]:Block[7526-7656]"
    }, {
      "left" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.NUMBER + \" but was \" + token + locationString());",
      "right" : "throw new IllegalStateException(\n          \"Expected \" + JsonToken.NUMBER + \" but was \" + token + locationString());",
      "info" : "ThrowStatement[7534-7650]:ThrowStatement[7534-7650]"
    }, {
      "left" : "int result = ((JsonPrimitive) peekStack()).getAsInt();",
      "right" : "int result = ((JsonPrimitive) peekStack()).getAsInt();",
      "info" : "VariableDeclarationStatement[7661-7715]:VariableDeclarationStatement[7661-7715]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[7720-7731]:ExpressionStatement[7720-7731]"
    }, {
      "left" : "if (stackSize > 0)",
      "right" : "if (stackSize > 0)",
      "info" : "IfStatement[7736-7798]:IfStatement[7736-7798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7755-7798]:Block[7755-7798]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[7763-7792]:ExpressionStatement[7763-7792]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7803-7817]:ReturnStatement[7803-7817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7874-7944]:Block[7874-7944]"
    }, {
      "left" : "stack = new Object[] { SENTINEL_CLOSED };",
      "right" : "stack = new Object[] { SENTINEL_CLOSED };",
      "info" : "ExpressionStatement[7880-7921]:ExpressionStatement[7880-7921]"
    }, {
      "left" : "stackSize = 1;",
      "right" : "stackSize = 1;",
      "info" : "ExpressionStatement[7926-7940]:ExpressionStatement[7926-7940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8001-8217]:Block[8001-8283]"
    }, {
      "left" : "if (peek() == JsonToken.NAME)",
      "right" : "if (peek() == JsonToken.NAME)",
      "info" : "IfStatement[8007-8177]:IfStatement[8007-8212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8037-8103]:Block[8037-8103]"
    }, {
      "left" : "nextName();",
      "right" : "nextName();",
      "info" : "ExpressionStatement[8045-8056]:ExpressionStatement[8045-8056]"
    }, {
      "left" : "pathNames[stackSize - 2] = \"null\";",
      "right" : "pathNames[stackSize - 2] = \"null\";",
      "info" : "ExpressionStatement[8063-8097]:ExpressionStatement[8063-8097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8109-8177]:Block[8109-8212]"
    }, {
      "left" : "popStack();",
      "right" : "popStack();",
      "info" : "ExpressionStatement[8117-8128]:ExpressionStatement[8117-8128]"
    }, {
      "left" : "pathNames[stackSize - 1] = \"null\";",
      "right" : "pathNames[stackSize - 1] = \"null\";",
      "info" : "ExpressionStatement[8137-8171]:ExpressionStatement[8164-8198]"
    }, {
      "left" : "pathIndices[stackSize - 1]++;",
      "right" : "pathIndices[stackSize - 1]++;",
      "info" : "ExpressionStatement[8184-8213]:ExpressionStatement[8244-8273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8256-8300]:Block[8322-8366]"
    }, {
      "left" : "return getClass().getSimpleName();",
      "right" : "return getClass().getSimpleName();",
      "info" : "ReturnStatement[8262-8296]:ReturnStatement[8328-8362]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8356-8574]:Block[8422-8640]"
    }, {
      "left" : "expect(JsonToken.NAME);",
      "right" : "expect(JsonToken.NAME);",
      "info" : "ExpressionStatement[8362-8385]:ExpressionStatement[8428-8451]"
    }, {
      "left" : "Iterator<?> i = (Iterator<?>) peekStack();",
      "right" : "Iterator<?> i = (Iterator<?>) peekStack();",
      "info" : "VariableDeclarationStatement[8390-8432]:VariableDeclarationStatement[8456-8498]"
    }, {
      "left" : "Map.Entry<?, ?> entry = (Map.Entry<?, ?>) i.next();",
      "right" : "Map.Entry<?, ?> entry = (Map.Entry<?, ?>) i.next();",
      "info" : "VariableDeclarationStatement[8437-8488]:VariableDeclarationStatement[8503-8554]"
    }, {
      "left" : "push(entry.getValue());",
      "right" : "push(entry.getValue());",
      "info" : "ExpressionStatement[8493-8516]:ExpressionStatement[8559-8582]"
    }, {
      "left" : "push(new JsonPrimitive((String) entry.getKey()));",
      "right" : "push(new JsonPrimitive((String) entry.getKey()));",
      "info" : "ExpressionStatement[8521-8570]:ExpressionStatement[8587-8636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8611-9141]:Block[8677-9207]"
    }, {
      "left" : "if (stackSize == stack.length)",
      "right" : "if (stackSize == stack.length)",
      "info" : "IfStatement[8617-9104]:IfStatement[8683-9170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8648-9104]:Block[8714-9170]"
    }, {
      "left" : "Object[] newStack = new Object[stackSize * 2];",
      "right" : "Object[] newStack = new Object[stackSize * 2];",
      "info" : "VariableDeclarationStatement[8656-8702]:VariableDeclarationStatement[8722-8768]"
    }, {
      "left" : "int[] newPathIndices = new int[stackSize * 2];",
      "right" : "int[] newPathIndices = new int[stackSize * 2];",
      "info" : "VariableDeclarationStatement[8709-8755]:VariableDeclarationStatement[8775-8821]"
    }, {
      "left" : "String[] newPathNames = new String[stackSize * 2];",
      "right" : "String[] newPathNames = new String[stackSize * 2];",
      "info" : "VariableDeclarationStatement[8762-8812]:VariableDeclarationStatement[8828-8878]"
    }, {
      "left" : "System.arraycopy(stack, 0, newStack, 0, stackSize);",
      "right" : "System.arraycopy(stack, 0, newStack, 0, stackSize);",
      "info" : "ExpressionStatement[8819-8870]:ExpressionStatement[8885-8936]"
    }, {
      "left" : "System.arraycopy(pathIndices, 0, newPathIndices, 0, stackSize);",
      "right" : "System.arraycopy(pathIndices, 0, newPathIndices, 0, stackSize);",
      "info" : "ExpressionStatement[8877-8940]:ExpressionStatement[8943-9006]"
    }, {
      "left" : "System.arraycopy(pathNames, 0, newPathNames, 0, stackSize);",
      "right" : "System.arraycopy(pathNames, 0, newPathNames, 0, stackSize);",
      "info" : "ExpressionStatement[8947-9006]:ExpressionStatement[9013-9072]"
    }, {
      "left" : "stack = newStack;",
      "right" : "stack = newStack;",
      "info" : "ExpressionStatement[9013-9030]:ExpressionStatement[9079-9096]"
    }, {
      "left" : "pathIndices = newPathIndices;",
      "right" : "pathIndices = newPathIndices;",
      "info" : "ExpressionStatement[9037-9066]:ExpressionStatement[9103-9132]"
    }, {
      "left" : "pathNames = newPathNames;",
      "right" : "pathNames = newPathNames;",
      "info" : "ExpressionStatement[9073-9098]:ExpressionStatement[9139-9164]"
    }, {
      "left" : "stack[stackSize++] = newTop;",
      "right" : "stack[stackSize++] = newTop;",
      "info" : "ExpressionStatement[9109-9137]:ExpressionStatement[9175-9203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9179-9722]:Block[9245-9788]"
    }, {
      "left" : "StringBuilder result = new StringBuilder().append('$');",
      "right" : "StringBuilder result = new StringBuilder().append('$');",
      "info" : "VariableDeclarationStatement[9185-9240]:VariableDeclarationStatement[9251-9306]"
    }, {
      "left" : "for (int i = 0; i < stackSize; i++)",
      "right" : "for (int i = 0; i < stackSize; i++)",
      "info" : "ForStatement[9245-9688]:ForStatement[9311-9754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9281-9688]:Block[9347-9754]"
    }, {
      "left" : "if (stack[i] instanceof JsonArray)",
      "right" : "if (stack[i] instanceof JsonArray)",
      "info" : "IfStatement[9289-9682]:IfStatement[9355-9748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9324-9454]:Block[9390-9520]"
    }, {
      "left" : "if (stack[++i] instanceof Iterator)",
      "right" : "if (stack[++i] instanceof Iterator)",
      "info" : "IfStatement[9334-9446]:IfStatement[9400-9512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9370-9446]:Block[9436-9512]"
    }, {
      "left" : "result.append('[').append(pathIndices[i]).append(']');",
      "right" : "result.append('[').append(pathIndices[i]).append(']');",
      "info" : "ExpressionStatement[9382-9436]:ExpressionStatement[9448-9502]"
    }, {
      "left" : "if (stack[i] instanceof JsonObject)",
      "right" : "if (stack[i] instanceof JsonObject)",
      "info" : "IfStatement[9460-9682]:IfStatement[9526-9748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9496-9682]:Block[9562-9748]"
    }, {
      "left" : "if (stack[++i] instanceof Iterator)",
      "right" : "if (stack[++i] instanceof Iterator)",
      "info" : "IfStatement[9506-9674]:IfStatement[9572-9740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9542-9674]:Block[9608-9740]"
    }, {
      "left" : "result.append('.');",
      "right" : "result.append('.');",
      "info" : "ExpressionStatement[9554-9573]:ExpressionStatement[9620-9639]"
    }, {
      "left" : "if (pathNames[i] != null)",
      "right" : "if (pathNames[i] != null)",
      "info" : "IfStatement[9584-9664]:IfStatement[9650-9730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9610-9664]:Block[9676-9730]"
    }, {
      "left" : "result.append(pathNames[i]);",
      "right" : "result.append(pathNames[i]);",
      "info" : "ExpressionStatement[9624-9652]:ExpressionStatement[9690-9718]"
    }, {
      "left" : "return result.toString();",
      "right" : "return result.toString();",
      "info" : "ReturnStatement[9693-9718]:ReturnStatement[9759-9784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9758-9799]:Block[9824-9865]"
    }, {
      "left" : "return \" at path \" + getPath();",
      "right" : "return \" at path \" + getPath();",
      "info" : "ReturnStatement[9764-9795]:ReturnStatement[9830-9861]"
    } ]
  },
  "interFileMappings" : { }
}