{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CreateUser",
      "right" : "CreateUser",
      "info" : "TypeDeclaration[597-3242]:TypeDeclaration[597-3626]"
    }, {
      "left" : "private String userName;",
      "right" : "private String userName;",
      "info" : "FieldDeclaration[712-736]:FieldDeclaration[712-736]"
    }, {
      "left" : "private boolean admin;",
      "right" : "private boolean admin;",
      "info" : "FieldDeclaration[741-763]:FieldDeclaration[741-763]"
    }, {
      "left" : "private Expression password;",
      "right" : "private Expression password;",
      "info" : "FieldDeclaration[768-796]:FieldDeclaration[768-796]"
    }, {
      "left" : "private Expression salt;",
      "right" : "private Expression salt;",
      "info" : "FieldDeclaration[801-825]:FieldDeclaration[801-825]"
    }, {
      "left" : "private Expression hash;",
      "right" : "private Expression hash;",
      "info" : "FieldDeclaration[830-854]:FieldDeclaration[830-854]"
    }, {
      "left" : "private boolean ifNotExists;",
      "right" : "private boolean ifNotExists;",
      "info" : "FieldDeclaration[859-887]:FieldDeclaration[859-887]"
    }, {
      "left" : "private String comment;",
      "right" : "private String comment;",
      "info" : "FieldDeclaration[892-915]:FieldDeclaration[892-915]"
    }, {
      "left" : "public CreateUser(Session session)",
      "right" : "public CreateUser(Session session)",
      "info" : "MethodDeclaration[921-987]:MethodDeclaration[921-987]"
    }, {
      "left" : "public void setIfNotExists(boolean ifNotExists)",
      "right" : "public void setIfNotExists(boolean ifNotExists)",
      "info" : "MethodDeclaration[993-1088]:MethodDeclaration[993-1088]"
    }, {
      "left" : "public void setUserName(String userName)",
      "right" : "public void setUserName(String userName)",
      "info" : "MethodDeclaration[1094-1176]:MethodDeclaration[1094-1176]"
    }, {
      "left" : "public void setPassword(Expression password)",
      "right" : "public void setPassword(Expression password)",
      "info" : "MethodDeclaration[1182-1268]:MethodDeclaration[1182-1268]"
    }, {
      "left" : "private byte[] getByteArray(Expression e)",
      "right" : "private static byte[] getByteArray(Session session, Expression e)",
      "info" : "MethodDeclaration[1409-1555]:MethodDeclaration[1463-1681]"
    }, {
      "left" : "public int update()",
      "right" : "public int update()",
      "info" : "MethodDeclaration[1561-2882]:MethodDeclaration[2278-3252]"
    }, {
      "left" : "public void setSalt(Expression e)",
      "right" : "public void setSalt(Expression e)",
      "info" : "MethodDeclaration[2888-2947]:MethodDeclaration[3258-3317]"
    }, {
      "left" : "public void setHash(Expression e)",
      "right" : "public void setHash(Expression e)",
      "info" : "MethodDeclaration[2953-3012]:MethodDeclaration[3323-3382]"
    }, {
      "left" : "public void setAdmin(boolean b)",
      "right" : "public void setAdmin(boolean b)",
      "info" : "MethodDeclaration[3018-3076]:MethodDeclaration[3388-3446]"
    }, {
      "left" : "public void setComment(String comment)",
      "right" : "public void setComment(String comment)",
      "info" : "MethodDeclaration[3082-3160]:MethodDeclaration[3452-3530]"
    }, {
      "left" : "public int getType()",
      "right" : "public int getType()",
      "info" : "MethodDeclaration[3166-3239]:MethodDeclaration[3536-3623]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[659-665]:Modifier[659-665]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[666-671]:TYPE_DECLARATION_KIND[666-671]"
    }, {
      "left" : "CreateUser",
      "right" : "CreateUser",
      "info" : "SimpleName[672-682]:SimpleName[672-682]"
    }, {
      "left" : "DefineCommand",
      "right" : "DefineCommand",
      "info" : "SimpleType[691-704]:SimpleType[691-704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[921-927]:Modifier[921-927]"
    }, {
      "left" : "CreateUser",
      "right" : "CreateUser",
      "info" : "SimpleName[928-938]:SimpleName[928-938]"
    }, {
      "left" : "Session session",
      "right" : "Session session",
      "info" : "SingleVariableDeclaration[939-954]:SingleVariableDeclaration[939-954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[956-987]:Block[956-987]"
    }, {
      "left" : "super(session);",
      "right" : "super(session);",
      "info" : "SuperConstructorInvocation[966-981]:SuperConstructorInvocation[966-981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[993-999]:Modifier[993-999]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1000-1004]:PrimitiveType[1000-1004]"
    }, {
      "left" : "setIfNotExists",
      "right" : "setIfNotExists",
      "info" : "SimpleName[1005-1019]:SimpleName[1005-1019]"
    }, {
      "left" : "boolean ifNotExists",
      "right" : "boolean ifNotExists",
      "info" : "SingleVariableDeclaration[1020-1039]:SingleVariableDeclaration[1020-1039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1041-1088]:Block[1041-1088]"
    }, {
      "left" : "this.ifNotExists = ifNotExists;",
      "right" : "this.ifNotExists = ifNotExists;",
      "info" : "ExpressionStatement[1051-1082]:ExpressionStatement[1051-1082]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1094-1100]:Modifier[1094-1100]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1101-1105]:PrimitiveType[1101-1105]"
    }, {
      "left" : "setUserName",
      "right" : "setUserName",
      "info" : "SimpleName[1106-1117]:SimpleName[1106-1117]"
    }, {
      "left" : "String userName",
      "right" : "String userName",
      "info" : "SingleVariableDeclaration[1118-1133]:SingleVariableDeclaration[1118-1133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1135-1176]:Block[1135-1176]"
    }, {
      "left" : "this.userName = userName;",
      "right" : "this.userName = userName;",
      "info" : "ExpressionStatement[1145-1170]:ExpressionStatement[1145-1170]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1182-1188]:Modifier[1182-1188]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1189-1193]:PrimitiveType[1189-1193]"
    }, {
      "left" : "setPassword",
      "right" : "setPassword",
      "info" : "SimpleName[1194-1205]:SimpleName[1194-1205]"
    }, {
      "left" : "Expression password",
      "right" : "Expression password",
      "info" : "SingleVariableDeclaration[1206-1225]:SingleVariableDeclaration[1206-1225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1227-1268]:Block[1227-1268]"
    }, {
      "left" : "this.password = password;",
      "right" : "this.password = password;",
      "info" : "ExpressionStatement[1237-1262]:ExpressionStatement[1237-1262]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1409-1416]:Modifier[1463-1470]"
    }, {
      "left" : "getByteArray",
      "right" : "getByteArray",
      "info" : "SimpleName[1424-1436]:SimpleName[1485-1497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1451-1555]:Block[1529-1681]"
    }, {
      "left" : "e.optimize(session).getValue(session).getString()",
      "right" : "e.optimize(session).getValue(session).getString()",
      "info" : "MethodInvocation[1498-1547]:MethodInvocation[1550-1599]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1561-1567]:Modifier[2292-2298]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[1568-1571]:PrimitiveType[2299-2302]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[1572-1578]:SimpleName[2303-2309]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1581-2882]:Block[2312-3252]"
    }, {
      "left" : "session.getUser().checkAdmin();",
      "right" : "session.getUser().checkAdmin();",
      "info" : "ExpressionStatement[1591-1622]:ExpressionStatement[2322-2353]"
    }, {
      "left" : "session.commit(true);",
      "right" : "session.commit(true);",
      "info" : "ExpressionStatement[1631-1652]:ExpressionStatement[2362-2383]"
    }, {
      "left" : "Database db = session.getDatabase();",
      "right" : "Database db = session.getDatabase();",
      "info" : "VariableDeclarationStatement[1661-1697]:VariableDeclarationStatement[2392-2428]"
    }, {
      "left" : "if (db.findRole(userName) != null)",
      "right" : "if (db.findRole(userName) != null)",
      "info" : "IfStatement[1706-1830]:IfStatement[2437-2561]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1741-1830]:Block[2472-2561]"
    }, {
      "left" : "throw DbException.get(ErrorCode.ROLE_ALREADY_EXISTS_1, userName);",
      "right" : "throw DbException.get(ErrorCode.ROLE_ALREADY_EXISTS_1, userName);",
      "info" : "ThrowStatement[1755-1820]:ThrowStatement[2486-2551]"
    }, {
      "left" : "if (db.findUser(userName) != null)",
      "right" : "if (db.findUser(userName) != null)",
      "info" : "IfStatement[1839-2034]:IfStatement[2570-2765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1874-2034]:Block[2605-2765]"
    }, {
      "left" : "if (ifNotExists)",
      "right" : "if (ifNotExists)",
      "info" : "IfStatement[1888-1946]:IfStatement[2619-2677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1905-1946]:Block[2636-2677]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[1923-1932]:ReturnStatement[2654-2663]"
    }, {
      "left" : "throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, userName);",
      "right" : "throw DbException.get(ErrorCode.USER_ALREADY_EXISTS_1, userName);",
      "info" : "ThrowStatement[1959-2024]:ThrowStatement[2690-2755]"
    }, {
      "left" : "int id = getObjectId();",
      "right" : "int id = getObjectId();",
      "info" : "VariableDeclarationStatement[2043-2066]:VariableDeclarationStatement[2774-2797]"
    }, {
      "left" : "User user = new User(db, id, userName, false);",
      "right" : "User user = new User(db, id, userName, false);",
      "info" : "VariableDeclarationStatement[2075-2121]:VariableDeclarationStatement[2806-2852]"
    }, {
      "left" : "user.setAdmin(admin);",
      "right" : "user.setAdmin(admin);",
      "info" : "ExpressionStatement[2130-2151]:ExpressionStatement[2861-2882]"
    }, {
      "left" : "user.setComment(comment);",
      "right" : "user.setComment(comment);",
      "info" : "ExpressionStatement[2160-2185]:ExpressionStatement[2891-2916]"
    }, {
      "left" : "if (hash != null && salt != null)",
      "right" : "if (hash != null && salt != null)",
      "info" : "IfStatement[2194-2813]:IfStatement[2925-3183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2228-2312]:Block[2959-3025]"
    }, {
      "left" : "user.setSaltAndHash(getByteArray(salt), getByteArray(hash));",
      "right" : "user.setSaltAndHash(getByteArray(session, salt), getByteArray(session, hash));",
      "info" : "ExpressionStatement[2242-2302]:ExpressionStatement[1373-1451]"
    }, {
      "left" : "if (password != null)",
      "right" : "if (password != null)",
      "info" : "IfStatement[2318-2813]:IfStatement[3031-3183]"
    }, {
      "left" : "byte[] userPasswordHash;",
      "right" : "byte[] userPasswordHash;",
      "info" : "VariableDeclarationStatement[2413-2437]:VariableDeclarationStatement[1927-1951]"
    }, {
      "left" : "if (userName.length() == 0 && passwordChars.length == 0)",
      "right" : "if (userName.length() == 0 && passwordChars.length == 0)",
      "info" : "IfStatement[2450-2678]:IfStatement[2002-2214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2507-2570]:Block[2059-2114]"
    }, {
      "left" : "userPasswordHash = new byte[0];",
      "right" : "userPasswordHash = new byte[0];",
      "info" : "ExpressionStatement[2525-2556]:ExpressionStatement[2073-2104]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2576-2678]:Block[2120-2214]"
    }, {
      "left" : "userPasswordHash = SHA256.getKeyPasswordHash(userName, passwordChars);",
      "right" : "userPasswordHash = SHA256.getKeyPasswordHash(userName, passwordChars);",
      "info" : "ExpressionStatement[2594-2664]:ExpressionStatement[2134-2204]"
    }, {
      "left" : "user.setUserPasswordHash(userPasswordHash);",
      "right" : "user.setUserPasswordHash(userPasswordHash);",
      "info" : "ExpressionStatement[2691-2734]:ExpressionStatement[2223-2266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2750-2813]:Block[3053-3114]"
    }, {
      "left" : "throw DbException.throwInternalError();",
      "right" : "throw DbException.throwInternalError();",
      "info" : "ThrowStatement[2764-2803]:ThrowStatement[3134-3173]"
    }, {
      "left" : "db.addDatabaseObject(session, user);",
      "right" : "db.addDatabaseObject(session, user);",
      "info" : "ExpressionStatement[2822-2858]:ExpressionStatement[3192-3228]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[2867-2876]:ReturnStatement[3237-3246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2888-2894]:Modifier[3258-3264]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2895-2899]:PrimitiveType[3265-3269]"
    }, {
      "left" : "setSalt",
      "right" : "setSalt",
      "info" : "SimpleName[2900-2907]:SimpleName[3270-3277]"
    }, {
      "left" : "Expression e",
      "right" : "Expression e",
      "info" : "SingleVariableDeclaration[2908-2920]:SingleVariableDeclaration[3278-3290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2922-2947]:Block[3292-3317]"
    }, {
      "left" : "salt = e;",
      "right" : "salt = e;",
      "info" : "ExpressionStatement[2932-2941]:ExpressionStatement[3302-3311]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2953-2959]:Modifier[3323-3329]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2960-2964]:PrimitiveType[3330-3334]"
    }, {
      "left" : "setHash",
      "right" : "setHash",
      "info" : "SimpleName[2965-2972]:SimpleName[3335-3342]"
    }, {
      "left" : "Expression e",
      "right" : "Expression e",
      "info" : "SingleVariableDeclaration[2973-2985]:SingleVariableDeclaration[3343-3355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2987-3012]:Block[3357-3382]"
    }, {
      "left" : "hash = e;",
      "right" : "hash = e;",
      "info" : "ExpressionStatement[2997-3006]:ExpressionStatement[3367-3376]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3018-3024]:Modifier[3388-3394]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3025-3029]:PrimitiveType[3395-3399]"
    }, {
      "left" : "setAdmin",
      "right" : "setAdmin",
      "info" : "SimpleName[3030-3038]:SimpleName[3400-3408]"
    }, {
      "left" : "boolean b",
      "right" : "boolean b",
      "info" : "SingleVariableDeclaration[3039-3048]:SingleVariableDeclaration[3409-3418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3050-3076]:Block[3420-3446]"
    }, {
      "left" : "admin = b;",
      "right" : "admin = b;",
      "info" : "ExpressionStatement[3060-3070]:ExpressionStatement[3430-3440]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3082-3088]:Modifier[3452-3458]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3089-3093]:PrimitiveType[3459-3463]"
    }, {
      "left" : "setComment",
      "right" : "setComment",
      "info" : "SimpleName[3094-3104]:SimpleName[3464-3474]"
    }, {
      "left" : "String comment",
      "right" : "String comment",
      "info" : "SingleVariableDeclaration[3105-3119]:SingleVariableDeclaration[3475-3489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3121-3160]:Block[3491-3530]"
    }, {
      "left" : "this.comment = comment;",
      "right" : "this.comment = comment;",
      "info" : "ExpressionStatement[3131-3154]:ExpressionStatement[3501-3524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3166-3172]:Modifier[3550-3556]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3173-3176]:PrimitiveType[3557-3560]"
    }, {
      "left" : "getType",
      "right" : "getType",
      "info" : "SimpleName[3177-3184]:SimpleName[3561-3568]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3187-3239]:Block[3571-3623]"
    }, {
      "left" : "return CommandInterface.CREATE_USER;",
      "right" : "return CommandInterface.CREATE_USER;",
      "info" : "ReturnStatement[3197-3233]:ReturnStatement[3581-3617]"
    } ]
  },
  "interFileMappings" : {
    "Moved from File: lealone-sql/src/main/java/org/lealone/command/ddl/AlterUser.java" : {
      "matchedElements" : [
 ],
      "mappings" : [
 {
        "left" : "String name = newName == null ? user.getName() : newName;",
        "right" : "String userName = user.getName();",
        "info" : "VariableDeclarationStatement[2284-2341]:VariableDeclarationStatement[1960-1993]"
      } ]
    }
  }
}