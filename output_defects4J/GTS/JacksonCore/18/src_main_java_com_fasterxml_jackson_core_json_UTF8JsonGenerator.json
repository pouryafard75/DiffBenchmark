{
  "matchedElements" : [
 {
    "left" : "class : UTF8JsonGenerator",
    "right" : "class : UTF8JsonGenerator",
    "info" : "TypeDeclaration[197-73032]:TypeDeclaration[197-72799]"
  }, {
    "left" : "BYTE_u",
    "right" : "BYTE_u",
    "info" : "FieldDeclaration[264-310]:FieldDeclaration[264-310]"
  }, {
    "left" : "BYTE_0",
    "right" : "BYTE_0",
    "info" : "FieldDeclaration[316-362]:FieldDeclaration[316-362]"
  }, {
    "left" : "BYTE_LBRACKET",
    "right" : "BYTE_LBRACKET",
    "info" : "FieldDeclaration[368-421]:FieldDeclaration[368-421]"
  }, {
    "left" : "BYTE_RBRACKET",
    "right" : "BYTE_RBRACKET",
    "info" : "FieldDeclaration[426-479]:FieldDeclaration[426-479]"
  }, {
    "left" : "BYTE_LCURLY",
    "right" : "BYTE_LCURLY",
    "info" : "FieldDeclaration[484-535]:FieldDeclaration[484-535]"
  }, {
    "left" : "BYTE_RCURLY",
    "right" : "BYTE_RCURLY",
    "info" : "FieldDeclaration[540-591]:FieldDeclaration[540-591]"
  }, {
    "left" : "BYTE_BACKSLASH",
    "right" : "BYTE_BACKSLASH",
    "info" : "FieldDeclaration[597-652]:FieldDeclaration[597-652]"
  }, {
    "left" : "BYTE_COMMA",
    "right" : "BYTE_COMMA",
    "info" : "FieldDeclaration[657-707]:FieldDeclaration[657-707]"
  }, {
    "left" : "BYTE_COLON",
    "right" : "BYTE_COLON",
    "info" : "FieldDeclaration[712-762]:FieldDeclaration[712-762]"
  }, {
    "left" : "BYTE_QUOTE",
    "right" : "BYTE_QUOTE",
    "info" : "FieldDeclaration[767-817]:FieldDeclaration[767-817]"
  }, {
    "left" : "MAX_BYTES_TO_BUFFER",
    "right" : "MAX_BYTES_TO_BUFFER",
    "info" : "FieldDeclaration[884-935]:FieldDeclaration[884-935]"
  }, {
    "left" : "HEX_CHARS",
    "right" : "HEX_CHARS",
    "info" : "FieldDeclaration[941-1006]:FieldDeclaration[941-1006]"
  }, {
    "left" : "NULL_BYTES",
    "right" : "NULL_BYTES",
    "info" : "FieldDeclaration[1012-1076]:FieldDeclaration[1012-1076]"
  }, {
    "left" : "TRUE_BYTES",
    "right" : "TRUE_BYTES",
    "info" : "FieldDeclaration[1081-1145]:FieldDeclaration[1081-1145]"
  }, {
    "left" : "FALSE_BYTES",
    "right" : "FALSE_BYTES",
    "info" : "FieldDeclaration[1150-1220]:FieldDeclaration[1150-1220]"
  }, {
    "left" : "_outputStream",
    "right" : "_outputStream",
    "info" : "FieldDeclaration[1394-1516]:FieldDeclaration[1394-1516]"
  }, {
    "left" : "_outputBuffer",
    "right" : "_outputBuffer",
    "info" : "FieldDeclaration[1522-1685]:FieldDeclaration[1522-1685]"
  }, {
    "left" : "_outputTail",
    "right" : "_outputTail",
    "info" : "FieldDeclaration[1691-1850]:FieldDeclaration[1691-1850]"
  }, {
    "left" : "_outputEnd",
    "right" : "_outputEnd",
    "info" : "FieldDeclaration[1856-2002]:FieldDeclaration[1856-2002]"
  }, {
    "left" : "_outputMaxContiguous",
    "right" : "_outputMaxContiguous",
    "info" : "FieldDeclaration[2008-2181]:FieldDeclaration[2008-2181]"
  }, {
    "left" : "_charBuffer",
    "right" : "_charBuffer",
    "info" : "FieldDeclaration[2187-2331]:FieldDeclaration[2187-2331]"
  }, {
    "left" : "_charBufferLength",
    "right" : "_charBufferLength",
    "info" : "FieldDeclaration[2337-2433]:FieldDeclaration[2337-2433]"
  }, {
    "left" : "_entityBuffer",
    "right" : "_entityBuffer",
    "info" : "FieldDeclaration[2439-2584]:FieldDeclaration[2439-2584]"
  }, {
    "left" : "_bufferRecyclable",
    "right" : "_bufferRecyclable",
    "info" : "FieldDeclaration[2590-2779]:FieldDeclaration[2590-2779]"
  }, {
    "left" : "public UTF8JsonGenerator(ctxt , features int, codec , out )",
    "right" : "public UTF8JsonGenerator(ctxt , features int, codec , out )",
    "info" : "MethodDeclaration[2947-3837]:MethodDeclaration[2947-3837]"
  }, {
    "left" : "public UTF8JsonGenerator(ctxt , features int, codec , out , outputBuffer , outputOffset int, bufferRecyclable boolean)",
    "right" : "public UTF8JsonGenerator(ctxt , features int, codec , out , outputBuffer , outputOffset int, bufferRecyclable boolean)",
    "info" : "MethodDeclaration[3847-4489]:MethodDeclaration[3847-4489]"
  }, {
    "left" : "public getOutputTarget() : ",
    "right" : "public getOutputTarget() : ",
    "info" : "MethodDeclaration[4683-4766]:MethodDeclaration[4683-4766]"
  }, {
    "left" : "public getOutputBuffered() : int",
    "right" : "public getOutputBuffered() : int",
    "info" : "MethodDeclaration[4772-4912]:MethodDeclaration[4772-4912]"
  }, {
    "left" : "public writeFieldName(name ) : void",
    "right" : "public writeFieldName(name ) : void",
    "info" : "MethodDeclaration[5088-6830]:MethodDeclaration[5088-6830]"
  }, {
    "left" : "public writeFieldName(name ) : void",
    "right" : "public writeFieldName(name ) : void",
    "info" : "MethodDeclaration[6840-8071]:MethodDeclaration[6840-8071]"
  }, {
    "left" : "private _writeUnq(name ) : void",
    "right" : "private _writeUnq(name ) : void",
    "info" : "MethodDeclaration[8081-8358]:MethodDeclaration[8081-8358]"
  }, {
    "left" : "public writeStartArray() : void",
    "right" : "public writeStartArray() : void",
    "info" : "MethodDeclaration[8561-9021]:MethodDeclaration[8561-9021]"
  }, {
    "left" : "public writeEndArray() : void",
    "right" : "public writeEndArray() : void",
    "info" : "MethodDeclaration[9027-9604]:MethodDeclaration[9027-9604]"
  }, {
    "left" : "public writeStartObject() : void",
    "right" : "public writeStartObject() : void",
    "info" : "MethodDeclaration[9610-10072]:MethodDeclaration[9610-10072]"
  }, {
    "left" : "public writeEndObject() : void",
    "right" : "public writeEndObject() : void",
    "info" : "MethodDeclaration[10078-10657]:MethodDeclaration[10078-10657]"
  }, {
    "left" : "protected _writePPFieldName(name ) : void",
    "right" : "protected _writePPFieldName(name ) : void",
    "info" : "MethodDeclaration[10663-12245]:MethodDeclaration[10663-12245]"
  }, {
    "left" : "protected _writePPFieldName(name ) : void",
    "right" : "protected _writePPFieldName(name ) : void",
    "info" : "MethodDeclaration[12251-13243]:MethodDeclaration[12251-13243]"
  }, {
    "left" : "public writeString(text ) : void",
    "right" : "public writeString(text ) : void",
    "info" : "MethodDeclaration[13443-14262]:MethodDeclaration[13443-14262]"
  }, {
    "left" : "public writeString(text , offset int, len int) : void",
    "right" : "public writeString(text , offset int, len int) : void",
    "info" : "MethodDeclaration[14268-15055]:MethodDeclaration[14268-15055]"
  }, {
    "left" : "public writeString(text ) : void",
    "right" : "public writeString(text ) : void",
    "info" : "MethodDeclaration[15061-15658]:MethodDeclaration[15061-15658]"
  }, {
    "left" : "public writeRawUTF8String(text , offset int, length int) : void",
    "right" : "public writeRawUTF8String(text , offset int, length int) : void",
    "info" : "MethodDeclaration[15668-16124]:MethodDeclaration[15668-16124]"
  }, {
    "left" : "public writeUTF8String(text , offset int, len int) : void",
    "right" : "public writeUTF8String(text , offset int, len int) : void",
    "info" : "MethodDeclaration[16130-16745]:MethodDeclaration[16130-16745]"
  }, {
    "left" : "public writeRaw(text ) : void",
    "right" : "public writeRaw(text ) : void",
    "info" : "MethodDeclaration[16953-17280]:MethodDeclaration[16953-17280]"
  }, {
    "left" : "public writeRaw(text , offset int, len int) : void",
    "right" : "public writeRaw(text , offset int, len int) : void",
    "info" : "MethodDeclaration[17286-18675]:MethodDeclaration[17286-18675]"
  }, {
    "left" : "public writeRaw(text ) : void",
    "right" : "public writeRaw(text ) : void",
    "info" : "MethodDeclaration[18681-18885]:MethodDeclaration[18681-18885]"
  }, {
    "left" : "public writeRawValue(text ) : void",
    "right" : "public writeRawValue(text ) : void",
    "info" : "MethodDeclaration[18908-19151]:MethodDeclaration[18908-19151]"
  }, {
    "left" : "public writeRaw(cbuf , offset int, len int) : void",
    "right" : "public writeRaw(cbuf , offset int, len int) : void",
    "info" : "MethodDeclaration[19192-20673]:MethodDeclaration[19192-20673]"
  }, {
    "left" : "public writeRaw(ch char) : void",
    "right" : "public writeRaw(ch char) : void",
    "info" : "MethodDeclaration[20679-21214]:MethodDeclaration[20679-21214]"
  }, {
    "left" : "private _writeSegmentedRaw(cbuf , offset int, len int) : void",
    "right" : "private _writeSegmentedRaw(cbuf , offset int, len int) : void",
    "info" : "MethodDeclaration[21220-22597]:MethodDeclaration[21220-22597]"
  }, {
    "left" : "private _writeRawSegment(cbuf , offset int, end int) : void",
    "right" : "private _writeRawSegment(cbuf , offset int, end int) : void",
    "info" : "MethodDeclaration[22603-23789]:MethodDeclaration[22603-23789]"
  }, {
    "left" : "public writeBinary(b64variant , data , offset int, len int) : void",
    "right" : "public writeBinary(b64variant , data , offset int, len int) : void",
    "info" : "MethodDeclaration[23999-24590]:MethodDeclaration[23999-24590]"
  }, {
    "left" : "public writeBinary(b64variant , data , dataLength int) : int",
    "right" : "public writeBinary(b64variant , data , dataLength int) : int",
    "info" : "MethodDeclaration[24596-25785]:MethodDeclaration[24596-25785]"
  }, {
    "left" : "public writeNumber(s short) : void",
    "right" : "public writeNumber(s short) : void",
    "info" : "MethodDeclaration[25987-26417]:MethodDeclaration[25987-26417]"
  }, {
    "left" : "private _writeQuotedShort(s short) : void",
    "right" : "private _writeQuotedShort(s short) : void",
    "info" : "MethodDeclaration[26427-26763]:MethodDeclaration[26427-26763]"
  }, {
    "left" : "public writeNumber(i int) : void",
    "right" : "public writeNumber(i int) : void",
    "info" : "MethodDeclaration[26774-27202]:MethodDeclaration[26774-27202]"
  }, {
    "left" : "private _writeQuotedInt(i int) : void",
    "right" : "private _writeQuotedInt(i int) : void",
    "info" : "MethodDeclaration[27208-27545]:MethodDeclaration[27208-27545]"
  }, {
    "left" : "public writeNumber(l long) : void",
    "right" : "public writeNumber(l long) : void",
    "info" : "MethodDeclaration[27555-27978]:MethodDeclaration[27555-27978]"
  }, {
    "left" : "private _writeQuotedLong(l long) : void",
    "right" : "private _writeQuotedLong(l long) : void",
    "info" : "MethodDeclaration[27984-28324]:MethodDeclaration[27984-28324]"
  }, {
    "left" : "public writeNumber(value ) : void",
    "right" : "public writeNumber(value ) : void",
    "info" : "MethodDeclaration[28330-28669]:MethodDeclaration[28330-28669]"
  }, {
    "left" : "public writeNumber(d double) : void",
    "right" : "public writeNumber(d double) : void",
    "info" : "MethodDeclaration[28680-29138]:MethodDeclaration[28680-29138]"
  }, {
    "left" : "public writeNumber(f float) : void",
    "right" : "public writeNumber(f float) : void",
    "info" : "MethodDeclaration[29144-29617]:MethodDeclaration[29144-29617]"
  }, {
    "left" : "public writeNumber(value ) : void",
    "right" : "public writeNumber(value ) : void",
    "info" : "MethodDeclaration[29623-30271]:MethodDeclaration[29623-30038]"
  }, {
    "left" : "public writeNumber(encodedValue ) : void",
    "right" : "public writeNumber(encodedValue ) : void",
    "info" : "MethodDeclaration[30277-30561]:MethodDeclaration[30044-30328]"
  }, {
    "left" : "private _writeQuotedRaw(value ) : void",
    "right" : "private _writeQuotedRaw(value ) : void",
    "info" : "MethodDeclaration[30567-30931]:MethodDeclaration[30334-30698]"
  }, {
    "left" : "public writeBoolean(state boolean) : void",
    "right" : "public writeBoolean(state boolean) : void",
    "info" : "MethodDeclaration[30941-31344]:MethodDeclaration[30708-31111]"
  }, {
    "left" : "public writeNull() : void",
    "right" : "public writeNull() : void",
    "info" : "MethodDeclaration[31350-31479]:MethodDeclaration[31117-31246]"
  }, {
    "left" : "protected _verifyValueWrite(typeMsg ) : void",
    "right" : "protected _verifyValueWrite(typeMsg ) : void",
    "info" : "MethodDeclaration[31670-33035]:MethodDeclaration[31437-32802]"
  }, {
    "left" : "protected _verifyPrettyValueWrite(typeMsg , status int) : void",
    "right" : "protected _verifyPrettyValueWrite(typeMsg , status int) : void",
    "info" : "MethodDeclaration[33041-34067]:MethodDeclaration[32808-33834]"
  }, {
    "left" : "public flush() : void",
    "right" : "public flush() : void",
    "info" : "MethodDeclaration[34250-34499]:MethodDeclaration[34017-34266]"
  }, {
    "left" : "public close() : void",
    "right" : "public close() : void",
    "info" : "MethodDeclaration[34505-36104]:MethodDeclaration[34272-35871]"
  }, {
    "left" : "protected _releaseBuffers() : void",
    "right" : "protected _releaseBuffers() : void",
    "info" : "MethodDeclaration[36110-36507]:MethodDeclaration[35877-36274]"
  }, {
    "left" : "private _writeBytes(bytes ) : void",
    "right" : "private _writeBytes(bytes ) : void",
    "info" : "MethodDeclaration[36711-37175]:MethodDeclaration[36478-36942]"
  }, {
    "left" : "private _writeBytes(bytes , offset int, len int) : void",
    "right" : "private _writeBytes(bytes , offset int, len int) : void",
    "info" : "MethodDeclaration[37181-37638]:MethodDeclaration[36948-37405]"
  }, {
    "left" : "private _writeStringSegments(text , addQuotes boolean) : void",
    "right" : "private _writeStringSegments(text , addQuotes boolean) : void",
    "info" : "MethodDeclaration[37852-39032]:MethodDeclaration[37619-38799]"
  }, {
    "left" : "private _writeStringSegments(cbuf , offset int, totalLen int) : void",
    "right" : "private _writeStringSegments(cbuf , offset int, totalLen int) : void",
    "info" : "MethodDeclaration[39038-39764]:MethodDeclaration[38805-39531]"
  }, {
    "left" : "private _writeStringSegments(text , offset int, totalLen int) : void",
    "right" : "private _writeStringSegments(text , offset int, totalLen int) : void",
    "info" : "MethodDeclaration[39770-40229]:MethodDeclaration[39537-39996]"
  }, {
    "left" : "private _writeStringSegment(cbuf , offset int, len int) : void",
    "right" : "private _writeStringSegment(cbuf , offset int, len int) : void",
    "info" : "MethodDeclaration[40437-42087]:MethodDeclaration[40204-41854]"
  }, {
    "left" : "private _writeStringSegment(text , offset int, len int) : void",
    "right" : "private _writeStringSegment(text , offset int, len int) : void",
    "info" : "MethodDeclaration[42093-43256]:MethodDeclaration[41860-43023]"
  }, {
    "left" : "private _writeStringSegment2(cbuf , offset int, end int) : void",
    "right" : "private _writeStringSegment2(cbuf , offset int, end int) : void",
    "info" : "MethodDeclaration[43262-44884]:MethodDeclaration[43029-44651]"
  }, {
    "left" : "private _writeStringSegment2(text , offset int, end int) : void",
    "right" : "private _writeStringSegment2(text , offset int, end int) : void",
    "info" : "MethodDeclaration[44890-46299]:MethodDeclaration[44657-46066]"
  }, {
    "left" : "private _writeStringSegmentASCII2(cbuf , offset int, end int) : void",
    "right" : "private _writeStringSegmentASCII2(cbuf , offset int, end int) : void",
    "info" : "MethodDeclaration[46558-48466]:MethodDeclaration[46325-48233]"
  }, {
    "left" : "private _writeStringSegmentASCII2(text , offset int, end int) : void",
    "right" : "private _writeStringSegmentASCII2(text , offset int, end int) : void",
    "info" : "MethodDeclaration[48472-50245]:MethodDeclaration[48239-50012]"
  }, {
    "left" : "private _writeCustomStringSegment2(cbuf , offset int, end int) : void",
    "right" : "private _writeCustomStringSegment2(cbuf , offset int, end int) : void",
    "info" : "MethodDeclaration[50526-53366]:MethodDeclaration[50293-53133]"
  }, {
    "left" : "private _writeCustomStringSegment2(text , offset int, end int) : void",
    "right" : "private _writeCustomStringSegment2(text , offset int, end int) : void",
    "info" : "MethodDeclaration[53372-56069]:MethodDeclaration[53139-55836]"
  }, {
    "left" : "private _writeCustomEscape(outputBuffer , outputPtr int, esc , remainingChars int) : int",
    "right" : "private _writeCustomEscape(outputBuffer , outputPtr int, esc , remainingChars int) : int",
    "info" : "MethodDeclaration[56075-56715]:MethodDeclaration[55842-56482]"
  }, {
    "left" : "private _handleLongCustomEscape(outputBuffer , outputPtr int, outputEnd int, raw , remainingChars int) : int",
    "right" : "private _handleLongCustomEscape(outputBuffer , outputPtr int, outputEnd int, raw , remainingChars int) : int",
    "info" : "MethodDeclaration[56725-57614]:MethodDeclaration[56492-57381]"
  }, {
    "left" : "private _writeUTF8Segments(utf8 , offset int, totalLen int) : void",
    "right" : "private _writeUTF8Segments(utf8 , offset int, totalLen int) : void",
    "info" : "MethodDeclaration[57833-58390]:MethodDeclaration[57600-58157]"
  }, {
    "left" : "private _writeUTF8Segment(utf8 , offset int, len int) : void",
    "right" : "private _writeUTF8Segment(utf8 , offset int, len int) : void",
    "info" : "MethodDeclaration[58400-59331]:MethodDeclaration[58167-59098]"
  }, {
    "left" : "private _writeUTF8Segment2(utf8 , offset int, len int) : void",
    "right" : "private _writeUTF8Segment2(utf8 , offset int, len int) : void",
    "info" : "MethodDeclaration[59337-60520]:MethodDeclaration[59104-60287]"
  }, {
    "left" : "protected _writeBinary(b64variant , input , inputPtr int, inputEnd int) : void",
    "right" : "protected _writeBinary(b64variant , input , inputPtr int, inputEnd int) : void",
    "info" : "MethodDeclaration[60737-62643]:MethodDeclaration[60504-62410]"
  }, {
    "left" : "protected _writeBinary(b64variant , data , readBuffer , bytesLeft int) : int",
    "right" : "protected _writeBinary(b64variant , data , readBuffer , bytesLeft int) : int",
    "info" : "MethodDeclaration[62708-65184]:MethodDeclaration[62475-64951]"
  }, {
    "left" : "protected _writeBinary(b64variant , data , readBuffer ) : int",
    "right" : "protected _writeBinary(b64variant , data , readBuffer ) : int",
    "info" : "MethodDeclaration[65233-67571]:MethodDeclaration[65000-67338]"
  }, {
    "left" : "private _readMore(in , readBuffer , inputPtr int, inputEnd int, maxRead int) : int",
    "right" : "private _readMore(in , readBuffer , inputPtr int, inputEnd int, maxRead int) : int",
    "info" : "MethodDeclaration[67581-68374]:MethodDeclaration[67348-68141]"
  }, {
    "left" : "private _outputRawMultiByteChar(ch int, cbuf , inputOffset int, inputEnd int) : int",
    "right" : "private _outputRawMultiByteChar(ch int, cbuf , inputOffset int, inputEnd int) : int",
    "info" : "MethodDeclaration[68584-69734]:MethodDeclaration[68351-69501]"
  }, {
    "left" : "protected _outputSurrogates(surr1 int, surr2 int) : void",
    "right" : "protected _outputSurrogates(surr1 int, surr2 int) : void",
    "info" : "MethodDeclaration[69740-70252]:MethodDeclaration[69507-70019]"
  }, {
    "left" : "private _outputMultiByteChar(ch int, outputPtr int) : int",
    "right" : "private _outputMultiByteChar(ch int, outputPtr int) : int",
    "info" : "MethodDeclaration[70262-71599]:MethodDeclaration[70029-71366]"
  }, {
    "left" : "private _writeNull() : void",
    "right" : "private _writeNull() : void",
    "info" : "MethodDeclaration[71605-71850]:MethodDeclaration[71372-71617]"
  }, {
    "left" : "private _writeGenericEscape(charToEscape int, outputPtr int) : int",
    "right" : "private _writeGenericEscape(charToEscape int, outputPtr int) : int",
    "info" : "MethodDeclaration[71864-72809]:MethodDeclaration[71631-72576]"
  }, {
    "left" : "protected _flushBuffer() : void",
    "right" : "protected _flushBuffer() : void",
    "info" : "MethodDeclaration[72815-73030]:MethodDeclaration[72582-72797]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[197-203]:Modifier[197-203]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[204-209]:TYPE_DECLARATION_KIND[204-209]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2947-2953]:Modifier[2947-2953]"
  }, {
    "left" : "UTF8JsonGenerator",
    "right" : "UTF8JsonGenerator",
    "info" : "SimpleName[2954-2971]:SimpleName[2954-2971]"
  }, {
    "left" : "IOContext ctxt",
    "right" : "IOContext ctxt",
    "info" : "SingleVariableDeclaration[2972-2986]:SingleVariableDeclaration[2972-2986]"
  }, {
    "left" : "int features",
    "right" : "int features",
    "info" : "SingleVariableDeclaration[2988-3000]:SingleVariableDeclaration[2988-3000]"
  }, {
    "left" : "ObjectCodec codec",
    "right" : "ObjectCodec codec",
    "info" : "SingleVariableDeclaration[3002-3019]:SingleVariableDeclaration[3002-3019]"
  }, {
    "left" : "OutputStream out",
    "right" : "OutputStream out",
    "info" : "SingleVariableDeclaration[3033-3049]:SingleVariableDeclaration[3033-3049]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3055-3837]:Block[3055-3837]"
  }, {
    "left" : "super(ctxt, features, codec);",
    "right" : "super(ctxt, features, codec);",
    "info" : "SuperConstructorInvocation[3065-3094]:SuperConstructorInvocation[3065-3094]"
  }, {
    "left" : "_outputStream = out;",
    "right" : "_outputStream = out;",
    "info" : "ExpressionStatement[3103-3123]:ExpressionStatement[3103-3123]"
  }, {
    "left" : "_bufferRecyclable = true;",
    "right" : "_bufferRecyclable = true;",
    "info" : "ExpressionStatement[3132-3157]:ExpressionStatement[3132-3157]"
  }, {
    "left" : "_outputBuffer = ctxt.allocWriteEncodingBuffer();",
    "right" : "_outputBuffer = ctxt.allocWriteEncodingBuffer();",
    "info" : "ExpressionStatement[3166-3214]:ExpressionStatement[3166-3214]"
  }, {
    "left" : "_outputEnd = _outputBuffer.length;",
    "right" : "_outputEnd = _outputBuffer.length;",
    "info" : "ExpressionStatement[3223-3257]:ExpressionStatement[3223-3257]"
  }, {
    "left" : "_outputMaxContiguous = _outputEnd >> 3;",
    "right" : "_outputMaxContiguous = _outputEnd >> 3;",
    "info" : "ExpressionStatement[3517-3556]:ExpressionStatement[3517-3556]"
  }, {
    "left" : "_charBuffer = ctxt.allocConcatBuffer();",
    "right" : "_charBuffer = ctxt.allocConcatBuffer();",
    "info" : "ExpressionStatement[3565-3604]:ExpressionStatement[3565-3604]"
  }, {
    "left" : "_charBufferLength = _charBuffer.length;",
    "right" : "_charBufferLength = _charBuffer.length;",
    "info" : "ExpressionStatement[3613-3652]:ExpressionStatement[3613-3652]"
  }, {
    "left" : "if (isEnabled(Feature.ESCAPE_NON_ASCII))",
    "right" : "if (isEnabled(Feature.ESCAPE_NON_ASCII))",
    "info" : "IfStatement[3736-3831]:IfStatement[3736-3831]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3777-3831]:Block[3777-3831]"
  }, {
    "left" : "setHighestNonEscapedChar(127);",
    "right" : "setHighestNonEscapedChar(127);",
    "info" : "ExpressionStatement[3791-3821]:ExpressionStatement[3791-3821]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3847-3853]:Modifier[3847-3853]"
  }, {
    "left" : "UTF8JsonGenerator",
    "right" : "UTF8JsonGenerator",
    "info" : "SimpleName[3854-3871]:SimpleName[3854-3871]"
  }, {
    "left" : "IOContext ctxt",
    "right" : "IOContext ctxt",
    "info" : "SingleVariableDeclaration[3872-3886]:SingleVariableDeclaration[3872-3886]"
  }, {
    "left" : "int features",
    "right" : "int features",
    "info" : "SingleVariableDeclaration[3888-3900]:SingleVariableDeclaration[3888-3900]"
  }, {
    "left" : "ObjectCodec codec",
    "right" : "ObjectCodec codec",
    "info" : "SingleVariableDeclaration[3902-3919]:SingleVariableDeclaration[3902-3919]"
  }, {
    "left" : "OutputStream out",
    "right" : "OutputStream out",
    "info" : "SingleVariableDeclaration[3933-3949]:SingleVariableDeclaration[3933-3949]"
  }, {
    "left" : "byte[] outputBuffer",
    "right" : "byte[] outputBuffer",
    "info" : "SingleVariableDeclaration[3963-3982]:SingleVariableDeclaration[3963-3982]"
  }, {
    "left" : "int outputOffset",
    "right" : "int outputOffset",
    "info" : "SingleVariableDeclaration[3984-4000]:SingleVariableDeclaration[3984-4000]"
  }, {
    "left" : "boolean bufferRecyclable",
    "right" : "boolean bufferRecyclable",
    "info" : "SingleVariableDeclaration[4002-4026]:SingleVariableDeclaration[4002-4026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4032-4489]:Block[4032-4489]"
  }, {
    "left" : "super(ctxt, features, codec);",
    "right" : "super(ctxt, features, codec);",
    "info" : "SuperConstructorInvocation[4051-4080]:SuperConstructorInvocation[4051-4080]"
  }, {
    "left" : "_outputStream = out;",
    "right" : "_outputStream = out;",
    "info" : "ExpressionStatement[4089-4109]:ExpressionStatement[4089-4109]"
  }, {
    "left" : "_bufferRecyclable = bufferRecyclable;",
    "right" : "_bufferRecyclable = bufferRecyclable;",
    "info" : "ExpressionStatement[4118-4155]:ExpressionStatement[4118-4155]"
  }, {
    "left" : "_outputTail = outputOffset;",
    "right" : "_outputTail = outputOffset;",
    "info" : "ExpressionStatement[4164-4191]:ExpressionStatement[4164-4191]"
  }, {
    "left" : "_outputBuffer = outputBuffer;",
    "right" : "_outputBuffer = outputBuffer;",
    "info" : "ExpressionStatement[4200-4229]:ExpressionStatement[4200-4229]"
  }, {
    "left" : "_outputEnd = _outputBuffer.length;",
    "right" : "_outputEnd = _outputBuffer.length;",
    "info" : "ExpressionStatement[4238-4272]:ExpressionStatement[4238-4272]"
  }, {
    "left" : "_outputMaxContiguous = (_outputEnd >> 3);",
    "right" : "_outputMaxContiguous = (_outputEnd >> 3);",
    "info" : "ExpressionStatement[4346-4387]:ExpressionStatement[4346-4387]"
  }, {
    "left" : "_charBuffer = ctxt.allocConcatBuffer();",
    "right" : "_charBuffer = ctxt.allocConcatBuffer();",
    "info" : "ExpressionStatement[4396-4435]:ExpressionStatement[4396-4435]"
  }, {
    "left" : "_charBufferLength = _charBuffer.length;",
    "right" : "_charBufferLength = _charBuffer.length;",
    "info" : "ExpressionStatement[4444-4483]:ExpressionStatement[4444-4483]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4683-4692]:MarkerAnnotation[4683-4692]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4697-4703]:Modifier[4697-4703]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[4704-4710]:SimpleType[4704-4710]"
  }, {
    "left" : "getOutputTarget",
    "right" : "getOutputTarget",
    "info" : "SimpleName[4711-4726]:SimpleName[4711-4726]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4729-4766]:Block[4729-4766]"
  }, {
    "left" : "return _outputStream;",
    "right" : "return _outputStream;",
    "info" : "ReturnStatement[4739-4760]:ReturnStatement[4739-4760]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4772-4781]:MarkerAnnotation[4772-4781]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4786-4792]:Modifier[4786-4792]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4793-4796]:PrimitiveType[4793-4796]"
  }, {
    "left" : "getOutputBuffered",
    "right" : "getOutputBuffered",
    "info" : "SimpleName[4797-4814]:SimpleName[4797-4814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4817-4912]:Block[4817-4912]"
  }, {
    "left" : "return _outputTail;",
    "right" : "return _outputTail;",
    "info" : "ReturnStatement[4887-4906]:ReturnStatement[4887-4906]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[5088-5097]:MarkerAnnotation[5088-5097]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5102-5108]:Modifier[5102-5108]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5109-5113]:PrimitiveType[5109-5113]"
  }, {
    "left" : "writeFieldName",
    "right" : "writeFieldName",
    "info" : "SimpleName[5114-5128]:SimpleName[5114-5128]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[5129-5140]:SingleVariableDeclaration[5129-5140]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[5150-5161]:SimpleType[5150-5161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5166-6830]:Block[5166-6830]"
  }, {
    "left" : "if (_cfgPrettyPrinter != null)",
    "right" : "if (_cfgPrettyPrinter != null)",
    "info" : "IfStatement[5176-5275]:IfStatement[5176-5275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5207-5275]:Block[5207-5275]"
  }, {
    "left" : "_writePPFieldName(name);",
    "right" : "_writePPFieldName(name);",
    "info" : "ExpressionStatement[5221-5245]:ExpressionStatement[5221-5245]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[5258-5265]:ReturnStatement[5258-5265]"
  }, {
    "left" : "final int status = _writeContext.writeFieldName(name);",
    "right" : "final int status = _writeContext.writeFieldName(name);",
    "info" : "VariableDeclarationStatement[5284-5338]:VariableDeclarationStatement[5284-5338]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "info" : "IfStatement[5347-5485]:IfStatement[5347-5485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5399-5485]:Block[5399-5485]"
  }, {
    "left" : "_reportError(\"Can not write a field name, expecting a value\");",
    "right" : "_reportError(\"Can not write a field name, expecting a value\");",
    "info" : "ExpressionStatement[5413-5475]:ExpressionStatement[5413-5475]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
    "right" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
    "info" : "IfStatement[5494-5719]:IfStatement[5494-5719]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5548-5719]:Block[5548-5719]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[5576-5654]:IfStatement[5576-5654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5607-5654]:Block[5607-5654]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[5625-5640]:ExpressionStatement[5625-5640]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
    "info" : "ExpressionStatement[5667-5709]:ExpressionStatement[5667-5709]"
  }, {
    "left" : "if (_cfgUnqNames)",
    "right" : "if (_cfgUnqNames)",
    "info" : "IfStatement[5863-5959]:IfStatement[5863-5959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5881-5959]:Block[5881-5959]"
  }, {
    "left" : "_writeStringSegments(name, false);",
    "right" : "_writeStringSegments(name, false);",
    "info" : "ExpressionStatement[5895-5929]:ExpressionStatement[5895-5929]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[5942-5949]:ReturnStatement[5942-5949]"
  }, {
    "left" : "final int len = name.length();",
    "right" : "final int len = name.length();",
    "info" : "VariableDeclarationStatement[5968-5998]:VariableDeclarationStatement[5968-5998]"
  }, {
    "left" : "if (len > _charBufferLength)",
    "right" : "if (len > _charBufferLength)",
    "info" : "IfStatement[6041-6162]:IfStatement[6041-6162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6070-6162]:Block[6070-6162]"
  }, {
    "left" : "_writeStringSegments(name, true);",
    "right" : "_writeStringSegments(name, true);",
    "info" : "ExpressionStatement[6099-6132]:ExpressionStatement[6099-6132]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[6145-6152]:ReturnStatement[6145-6152]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[6171-6241]:IfStatement[6171-6241]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6202-6241]:Block[6202-6241]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[6216-6231]:ExpressionStatement[6216-6231]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[6250-6292]:ExpressionStatement[6250-6292]"
  }, {
    "left" : "if (len <= _outputMaxContiguous)",
    "right" : "if (len <= _outputMaxContiguous)",
    "info" : "IfStatement[6345-6634]:IfStatement[6345-6634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6378-6569]:Block[6378-6569]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[6392-6512]:IfStatement[6392-6512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6430-6512]:Block[6430-6512]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[6483-6498]:ExpressionStatement[6483-6498]"
  }, {
    "left" : "_writeStringSegment(name, 0, len);",
    "right" : "_writeStringSegment(name, 0, len);",
    "info" : "ExpressionStatement[6525-6559]:ExpressionStatement[6525-6559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6575-6634]:Block[6575-6634]"
  }, {
    "left" : "_writeStringSegments(name, 0, len);",
    "right" : "_writeStringSegments(name, 0, len);",
    "info" : "ExpressionStatement[6589-6624]:ExpressionStatement[6589-6624]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[6703-6773]:IfStatement[6703-6773]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6734-6773]:Block[6734-6773]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[6748-6763]:ExpressionStatement[6748-6763]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[6782-6824]:ExpressionStatement[6782-6824]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6840-6849]:MarkerAnnotation[6840-6849]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6854-6860]:Modifier[6854-6860]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6861-6865]:PrimitiveType[6861-6865]"
  }, {
    "left" : "writeFieldName",
    "right" : "writeFieldName",
    "info" : "SimpleName[6866-6880]:SimpleName[6866-6880]"
  }, {
    "left" : "SerializableString name",
    "right" : "SerializableString name",
    "info" : "SingleVariableDeclaration[6881-6904]:SingleVariableDeclaration[6881-6904]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[6913-6924]:SimpleType[6913-6924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6929-8071]:Block[6929-8071]"
  }, {
    "left" : "if (_cfgPrettyPrinter != null)",
    "right" : "if (_cfgPrettyPrinter != null)",
    "info" : "IfStatement[6939-7038]:IfStatement[6939-7038]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6970-7038]:Block[6970-7038]"
  }, {
    "left" : "_writePPFieldName(name);",
    "right" : "_writePPFieldName(name);",
    "info" : "ExpressionStatement[6984-7008]:ExpressionStatement[6984-7008]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[7021-7028]:ReturnStatement[7021-7028]"
  }, {
    "left" : "final int status = _writeContext.writeFieldName(name.getValue());",
    "right" : "final int status = _writeContext.writeFieldName(name.getValue());",
    "info" : "VariableDeclarationStatement[7047-7112]:VariableDeclarationStatement[7047-7112]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "info" : "IfStatement[7121-7259]:IfStatement[7121-7259]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7173-7259]:Block[7173-7259]"
  }, {
    "left" : "_reportError(\"Can not write a field name, expecting a value\");",
    "right" : "_reportError(\"Can not write a field name, expecting a value\");",
    "info" : "ExpressionStatement[7187-7249]:ExpressionStatement[7187-7249]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
    "right" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
    "info" : "IfStatement[7268-7479]:IfStatement[7268-7479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7322-7479]:Block[7322-7479]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[7336-7414]:IfStatement[7336-7414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7367-7414]:Block[7367-7414]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[7385-7400]:ExpressionStatement[7385-7400]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_COMMA;",
    "info" : "ExpressionStatement[7427-7469]:ExpressionStatement[7427-7469]"
  }, {
    "left" : "if (_cfgUnqNames)",
    "right" : "if (_cfgUnqNames)",
    "info" : "IfStatement[7488-7566]:IfStatement[7488-7566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7506-7566]:Block[7506-7566]"
  }, {
    "left" : "_writeUnq(name);",
    "right" : "_writeUnq(name);",
    "info" : "ExpressionStatement[7520-7536]:ExpressionStatement[7520-7536]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[7549-7556]:ReturnStatement[7549-7556]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[7575-7645]:IfStatement[7575-7645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7606-7645]:Block[7606-7645]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[7620-7635]:ExpressionStatement[7620-7635]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[7654-7696]:ExpressionStatement[7654-7696]"
  }, {
    "left" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
    "right" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
    "info" : "VariableDeclarationStatement[7705-7765]:VariableDeclarationStatement[7705-7765]"
  }, {
    "left" : "if (len < 0)",
    "right" : "if (len < 0)",
    "info" : "IfStatement[7774-7935]:IfStatement[7774-7935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7787-7886]:Block[7787-7886]"
  }, {
    "left" : "_writeBytes(name.asQuotedUTF8());",
    "right" : "_writeBytes(name.asQuotedUTF8());",
    "info" : "ExpressionStatement[7843-7876]:ExpressionStatement[7843-7876]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7892-7935]:Block[7892-7935]"
  }, {
    "left" : "_outputTail += len;",
    "right" : "_outputTail += len;",
    "info" : "ExpressionStatement[7906-7925]:ExpressionStatement[7906-7925]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[7944-8014]:IfStatement[7944-8014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7975-8014]:Block[7975-8014]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[7989-8004]:ExpressionStatement[7989-8004]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[8023-8065]:ExpressionStatement[8023-8065]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[8081-8088]:Modifier[8081-8088]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[8089-8094]:Modifier[8089-8094]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8095-8099]:PrimitiveType[8095-8099]"
  }, {
    "left" : "_writeUnq",
    "right" : "_writeUnq",
    "info" : "SimpleName[8100-8109]:SimpleName[8100-8109]"
  }, {
    "left" : "SerializableString name",
    "right" : "SerializableString name",
    "info" : "SingleVariableDeclaration[8110-8133]:SingleVariableDeclaration[8110-8133]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8142-8153]:SimpleType[8142-8153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8154-8358]:Block[8154-8358]"
  }, {
    "left" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
    "right" : "int len = name.appendQuotedUTF8(_outputBuffer, _outputTail);",
    "info" : "VariableDeclarationStatement[8164-8224]:VariableDeclarationStatement[8164-8224]"
  }, {
    "left" : "if (len < 0)",
    "right" : "if (len < 0)",
    "info" : "IfStatement[8233-8352]:IfStatement[8233-8352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8246-8303]:Block[8246-8303]"
  }, {
    "left" : "_writeBytes(name.asQuotedUTF8());",
    "right" : "_writeBytes(name.asQuotedUTF8());",
    "info" : "ExpressionStatement[8260-8293]:ExpressionStatement[8260-8293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8309-8352]:Block[8309-8352]"
  }, {
    "left" : "_outputTail += len;",
    "right" : "_outputTail += len;",
    "info" : "ExpressionStatement[8323-8342]:ExpressionStatement[8323-8342]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8561-8570]:MarkerAnnotation[8561-8570]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8575-8581]:Modifier[8575-8581]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[8582-8587]:Modifier[8582-8587]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8588-8592]:PrimitiveType[8588-8592]"
  }, {
    "left" : "writeStartArray",
    "right" : "writeStartArray",
    "info" : "SimpleName[8593-8608]:SimpleName[8593-8608]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[8618-8629]:SimpleType[8618-8629]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8634-9021]:Block[8634-9021]"
  }, {
    "left" : "_verifyValueWrite(\"start an array\");",
    "right" : "_verifyValueWrite(\"start an array\");",
    "info" : "ExpressionStatement[8644-8680]:ExpressionStatement[8644-8680]"
  }, {
    "left" : "_writeContext = _writeContext.createChildArrayContext();",
    "right" : "_writeContext = _writeContext.createChildArrayContext();",
    "info" : "ExpressionStatement[8689-8745]:ExpressionStatement[8689-8745]"
  }, {
    "left" : "if (_cfgPrettyPrinter != null)",
    "right" : "if (_cfgPrettyPrinter != null)",
    "info" : "IfStatement[8754-9015]:IfStatement[8754-9015]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8785-8849]:Block[8785-8849]"
  }, {
    "left" : "_cfgPrettyPrinter.writeStartArray(this);",
    "right" : "_cfgPrettyPrinter.writeStartArray(this);",
    "info" : "ExpressionStatement[8799-8839]:ExpressionStatement[8799-8839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8855-9015]:Block[8855-9015]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[8869-8947]:IfStatement[8869-8947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8900-8947]:Block[8900-8947]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[8918-8933]:ExpressionStatement[8918-8933]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_LBRACKET;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_LBRACKET;",
    "info" : "ExpressionStatement[8960-9005]:ExpressionStatement[8960-9005]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[9027-9036]:MarkerAnnotation[9027-9036]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9041-9047]:Modifier[9041-9047]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[9048-9053]:Modifier[9048-9053]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9054-9058]:PrimitiveType[9054-9058]"
  }, {
    "left" : "writeEndArray",
    "right" : "writeEndArray",
    "info" : "SimpleName[9059-9072]:SimpleName[9059-9072]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[9082-9093]:SimpleType[9082-9093]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9098-9604]:Block[9098-9604]"
  }, {
    "left" : "if (!_writeContext.inArray())",
    "right" : "if (!_writeContext.inArray())",
    "info" : "IfStatement[9108-9240]:IfStatement[9108-9240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9138-9240]:Block[9138-9240]"
  }, {
    "left" : "_reportError(\"Current context not an ARRAY but \"+_writeContext.getTypeDesc());",
    "right" : "_reportError(\"Current context not an ARRAY but \"+_writeContext.getTypeDesc());",
    "info" : "ExpressionStatement[9152-9230]:ExpressionStatement[9152-9230]"
  }, {
    "left" : "if (_cfgPrettyPrinter != null)",
    "right" : "if (_cfgPrettyPrinter != null)",
    "info" : "IfStatement[9249-9539]:IfStatement[9249-9539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9280-9373]:Block[9280-9373]"
  }, {
    "left" : "_cfgPrettyPrinter.writeEndArray(this, _writeContext.getEntryCount());",
    "right" : "_cfgPrettyPrinter.writeEndArray(this, _writeContext.getEntryCount());",
    "info" : "ExpressionStatement[9294-9363]:ExpressionStatement[9294-9363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9379-9539]:Block[9379-9539]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[9393-9471]:IfStatement[9393-9471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9424-9471]:Block[9424-9471]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[9442-9457]:ExpressionStatement[9442-9457]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_RBRACKET;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_RBRACKET;",
    "info" : "ExpressionStatement[9484-9529]:ExpressionStatement[9484-9529]"
  }, {
    "left" : "_writeContext = _writeContext.clearAndGetParent();",
    "right" : "_writeContext = _writeContext.clearAndGetParent();",
    "info" : "ExpressionStatement[9548-9598]:ExpressionStatement[9548-9598]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[9610-9619]:MarkerAnnotation[9610-9619]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9624-9630]:Modifier[9624-9630]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[9631-9636]:Modifier[9631-9636]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9637-9641]:PrimitiveType[9637-9641]"
  }, {
    "left" : "writeStartObject",
    "right" : "writeStartObject",
    "info" : "SimpleName[9642-9658]:SimpleName[9642-9658]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[9668-9679]:SimpleType[9668-9679]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9684-10072]:Block[9684-10072]"
  }, {
    "left" : "_verifyValueWrite(\"start an object\");",
    "right" : "_verifyValueWrite(\"start an object\");",
    "info" : "ExpressionStatement[9694-9731]:ExpressionStatement[9694-9731]"
  }, {
    "left" : "_writeContext = _writeContext.createChildObjectContext();",
    "right" : "_writeContext = _writeContext.createChildObjectContext();",
    "info" : "ExpressionStatement[9740-9797]:ExpressionStatement[9740-9797]"
  }, {
    "left" : "if (_cfgPrettyPrinter != null)",
    "right" : "if (_cfgPrettyPrinter != null)",
    "info" : "IfStatement[9806-10066]:IfStatement[9806-10066]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9837-9902]:Block[9837-9902]"
  }, {
    "left" : "_cfgPrettyPrinter.writeStartObject(this);",
    "right" : "_cfgPrettyPrinter.writeStartObject(this);",
    "info" : "ExpressionStatement[9851-9892]:ExpressionStatement[9851-9892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9908-10066]:Block[9908-10066]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[9922-10000]:IfStatement[9922-10000]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9953-10000]:Block[9953-10000]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[9971-9986]:ExpressionStatement[9971-9986]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_LCURLY;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_LCURLY;",
    "info" : "ExpressionStatement[10013-10056]:ExpressionStatement[10013-10056]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[10078-10087]:MarkerAnnotation[10078-10087]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10092-10098]:Modifier[10092-10098]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[10099-10104]:Modifier[10099-10104]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10105-10109]:PrimitiveType[10105-10109]"
  }, {
    "left" : "writeEndObject",
    "right" : "writeEndObject",
    "info" : "SimpleName[10110-10124]:SimpleName[10110-10124]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[10134-10145]:SimpleType[10134-10145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10150-10657]:Block[10150-10657]"
  }, {
    "left" : "if (!_writeContext.inObject())",
    "right" : "if (!_writeContext.inObject())",
    "info" : "IfStatement[10160-10294]:IfStatement[10160-10294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10191-10294]:Block[10191-10294]"
  }, {
    "left" : "_reportError(\"Current context not an object but \"+_writeContext.getTypeDesc());",
    "right" : "_reportError(\"Current context not an object but \"+_writeContext.getTypeDesc());",
    "info" : "ExpressionStatement[10205-10284]:ExpressionStatement[10205-10284]"
  }, {
    "left" : "if (_cfgPrettyPrinter != null)",
    "right" : "if (_cfgPrettyPrinter != null)",
    "info" : "IfStatement[10303-10592]:IfStatement[10303-10592]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10334-10428]:Block[10334-10428]"
  }, {
    "left" : "_cfgPrettyPrinter.writeEndObject(this, _writeContext.getEntryCount());",
    "right" : "_cfgPrettyPrinter.writeEndObject(this, _writeContext.getEntryCount());",
    "info" : "ExpressionStatement[10348-10418]:ExpressionStatement[10348-10418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10434-10592]:Block[10434-10592]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[10448-10526]:IfStatement[10448-10526]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10479-10526]:Block[10479-10526]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[10497-10512]:ExpressionStatement[10497-10512]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_RCURLY;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_RCURLY;",
    "info" : "ExpressionStatement[10539-10582]:ExpressionStatement[10539-10582]"
  }, {
    "left" : "_writeContext = _writeContext.clearAndGetParent();",
    "right" : "_writeContext = _writeContext.clearAndGetParent();",
    "info" : "ExpressionStatement[10601-10651]:ExpressionStatement[10601-10651]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[10824-10833]:Modifier[10824-10833]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[10834-10839]:Modifier[10834-10839]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[10840-10844]:PrimitiveType[10840-10844]"
  }, {
    "left" : "_writePPFieldName",
    "right" : "_writePPFieldName",
    "info" : "SimpleName[10845-10862]:SimpleName[10845-10862]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[10863-10874]:SingleVariableDeclaration[10863-10874]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[10883-10894]:SimpleType[10883-10894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10899-12245]:Block[10899-12245]"
  }, {
    "left" : "int status = _writeContext.writeFieldName(name);",
    "right" : "int status = _writeContext.writeFieldName(name);",
    "info" : "VariableDeclarationStatement[10909-10957]:VariableDeclarationStatement[10909-10957]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "info" : "IfStatement[10966-11104]:IfStatement[10966-11104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11018-11104]:Block[11018-11104]"
  }, {
    "left" : "_reportError(\"Can not write a field name, expecting a value\");",
    "right" : "_reportError(\"Can not write a field name, expecting a value\");",
    "info" : "ExpressionStatement[11032-11094]:ExpressionStatement[11032-11094]"
  }, {
    "left" : "if ((status == JsonWriteContext.STATUS_OK_AFTER_COMMA))",
    "right" : "if ((status == JsonWriteContext.STATUS_OK_AFTER_COMMA))",
    "info" : "IfStatement[11113-11317]:IfStatement[11113-11317]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11169-11243]:Block[11169-11243]"
  }, {
    "left" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
    "right" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
    "info" : "ExpressionStatement[11183-11233]:ExpressionStatement[11183-11233]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11249-11317]:Block[11249-11317]"
  }, {
    "left" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
    "right" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
    "info" : "ExpressionStatement[11263-11307]:ExpressionStatement[11263-11307]"
  }, {
    "left" : "if (_cfgUnqNames)",
    "right" : "if (_cfgUnqNames)",
    "info" : "IfStatement[11326-11422]:IfStatement[11326-11422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11344-11422]:Block[11344-11422]"
  }, {
    "left" : "_writeStringSegments(name, false);",
    "right" : "_writeStringSegments(name, false);",
    "info" : "ExpressionStatement[11358-11392]:ExpressionStatement[11358-11392]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[11405-11412]:ReturnStatement[11405-11412]"
  }, {
    "left" : "final int len = name.length();",
    "right" : "final int len = name.length();",
    "info" : "VariableDeclarationStatement[11431-11461]:VariableDeclarationStatement[11431-11461]"
  }, {
    "left" : "if (len > _charBufferLength)",
    "right" : "if (len > _charBufferLength)",
    "info" : "IfStatement[11470-11576]:IfStatement[11470-11576]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11499-11576]:Block[11499-11576]"
  }, {
    "left" : "_writeStringSegments(name, true);",
    "right" : "_writeStringSegments(name, true);",
    "info" : "ExpressionStatement[11513-11546]:ExpressionStatement[11513-11546]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[11559-11566]:ReturnStatement[11559-11566]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[11585-11655]:IfStatement[11585-11655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11616-11655]:Block[11616-11655]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[11630-11645]:ExpressionStatement[11630-11645]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[11664-11706]:ExpressionStatement[11664-11706]"
  }, {
    "left" : "name.getChars(0, len, _charBuffer, 0);",
    "right" : "name.getChars(0, len, _charBuffer, 0);",
    "info" : "ExpressionStatement[11715-11753]:ExpressionStatement[11715-11753]"
  }, {
    "left" : "if (len <= _outputMaxContiguous)",
    "right" : "if (len <= _outputMaxContiguous)",
    "info" : "IfStatement[11806-12109]:IfStatement[11806-12109]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11839-12037]:Block[11839-12037]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[11853-11973]:IfStatement[11853-11973]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11891-11973]:Block[11891-11973]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[11944-11959]:ExpressionStatement[11944-11959]"
  }, {
    "left" : "_writeStringSegment(_charBuffer, 0, len);",
    "right" : "_writeStringSegment(_charBuffer, 0, len);",
    "info" : "ExpressionStatement[11986-12027]:ExpressionStatement[11986-12027]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12043-12109]:Block[12043-12109]"
  }, {
    "left" : "_writeStringSegments(_charBuffer, 0, len);",
    "right" : "_writeStringSegments(_charBuffer, 0, len);",
    "info" : "ExpressionStatement[12057-12099]:ExpressionStatement[12057-12099]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[12118-12188]:IfStatement[12118-12188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12149-12188]:Block[12149-12188]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[12163-12178]:ExpressionStatement[12163-12178]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[12197-12239]:ExpressionStatement[12197-12239]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[12251-12260]:Modifier[12251-12260]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[12261-12266]:Modifier[12261-12266]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12267-12271]:PrimitiveType[12267-12271]"
  }, {
    "left" : "_writePPFieldName",
    "right" : "_writePPFieldName",
    "info" : "SimpleName[12272-12289]:SimpleName[12272-12289]"
  }, {
    "left" : "SerializableString name",
    "right" : "SerializableString name",
    "info" : "SingleVariableDeclaration[12290-12313]:SingleVariableDeclaration[12290-12313]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[12322-12333]:SimpleType[12322-12333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12338-13243]:Block[12338-13243]"
  }, {
    "left" : "final int status = _writeContext.writeFieldName(name.getValue());",
    "right" : "final int status = _writeContext.writeFieldName(name.getValue());",
    "info" : "VariableDeclarationStatement[12348-12413]:VariableDeclarationStatement[12348-12413]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "right" : "if (status == JsonWriteContext.STATUS_EXPECT_VALUE)",
    "info" : "IfStatement[12422-12560]:IfStatement[12422-12560]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12474-12560]:Block[12474-12560]"
  }, {
    "left" : "_reportError(\"Can not write a field name, expecting a value\");",
    "right" : "_reportError(\"Can not write a field name, expecting a value\");",
    "info" : "ExpressionStatement[12488-12550]:ExpressionStatement[12488-12550]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
    "right" : "if (status == JsonWriteContext.STATUS_OK_AFTER_COMMA)",
    "info" : "IfStatement[12569-12771]:IfStatement[12569-12771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12623-12697]:Block[12623-12697]"
  }, {
    "left" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
    "right" : "_cfgPrettyPrinter.writeObjectEntrySeparator(this);",
    "info" : "ExpressionStatement[12637-12687]:ExpressionStatement[12637-12687]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12703-12771]:Block[12703-12771]"
  }, {
    "left" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
    "right" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
    "info" : "ExpressionStatement[12717-12761]:ExpressionStatement[12717-12761]"
  }, {
    "left" : "final boolean addQuotes = !_cfgUnqNames;",
    "right" : "final boolean addQuotes = !_cfgUnqNames;",
    "info" : "VariableDeclarationStatement[12781-12821]:VariableDeclarationStatement[12781-12821]"
  }, {
    "left" : "if (addQuotes)",
    "right" : "if (addQuotes)",
    "info" : "IfStatement[12842-13014]:IfStatement[12842-13014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12857-13014]:Block[12857-13014]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[12871-12949]:IfStatement[12871-12949]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12902-12949]:Block[12902-12949]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[12920-12935]:ExpressionStatement[12920-12935]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[12962-13004]:ExpressionStatement[12962-13004]"
  }, {
    "left" : "_writeBytes(name.asQuotedUTF8());",
    "right" : "_writeBytes(name.asQuotedUTF8());",
    "info" : "ExpressionStatement[13023-13056]:ExpressionStatement[13023-13056]"
  }, {
    "left" : "if (addQuotes)",
    "right" : "if (addQuotes)",
    "info" : "IfStatement[13065-13237]:IfStatement[13065-13237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13080-13237]:Block[13080-13237]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[13094-13172]:IfStatement[13094-13172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13125-13172]:Block[13125-13172]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[13143-13158]:ExpressionStatement[13143-13158]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[13185-13227]:ExpressionStatement[13185-13227]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[13443-13452]:MarkerAnnotation[13443-13452]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13457-13463]:Modifier[13457-13463]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[13464-13468]:PrimitiveType[13464-13468]"
  }, {
    "left" : "writeString",
    "right" : "writeString",
    "info" : "SimpleName[13469-13480]:SimpleName[13469-13480]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[13481-13492]:SingleVariableDeclaration[13481-13492]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[13501-13512]:SimpleType[13501-13512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13517-14262]:Block[13517-14262]"
  }, {
    "left" : "_verifyValueWrite(WRITE_STRING);",
    "right" : "_verifyValueWrite(WRITE_STRING);",
    "info" : "ExpressionStatement[13527-13559]:ExpressionStatement[13527-13559]"
  }, {
    "left" : "if (text == null)",
    "right" : "if (text == null)",
    "info" : "IfStatement[13568-13643]:IfStatement[13568-13643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13586-13643]:Block[13586-13643]"
  }, {
    "left" : "_writeNull();",
    "right" : "_writeNull();",
    "info" : "ExpressionStatement[13600-13613]:ExpressionStatement[13600-13613]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[13626-13633]:ReturnStatement[13626-13633]"
  }, {
    "left" : "final int len = text.length();",
    "right" : "final int len = text.length();",
    "info" : "VariableDeclarationStatement[13736-13766]:VariableDeclarationStatement[13736-13766]"
  }, {
    "left" : "if (len > _outputMaxContiguous)",
    "right" : "if (len > _outputMaxContiguous)",
    "info" : "IfStatement[13775-13911]:IfStatement[13775-13911]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13807-13911]:Block[13807-13911]"
  }, {
    "left" : "_writeStringSegments(text, true);",
    "right" : "_writeStringSegments(text, true);",
    "info" : "ExpressionStatement[13848-13881]:ExpressionStatement[13848-13881]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[13894-13901]:ReturnStatement[13894-13901]"
  }, {
    "left" : "if ((_outputTail + len) >= _outputEnd)",
    "right" : "if ((_outputTail + len) >= _outputEnd)",
    "info" : "IfStatement[13920-13998]:IfStatement[13920-13998]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13959-13998]:Block[13959-13998]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[13973-13988]:ExpressionStatement[13973-13988]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[14007-14049]:ExpressionStatement[14007-14049]"
  }, {
    "left" : "_writeStringSegment(text, 0, len);",
    "right" : "_writeStringSegment(text, 0, len);",
    "info" : "ExpressionStatement[14058-14092]:ExpressionStatement[14058-14092]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[14135-14205]:IfStatement[14135-14205]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14166-14205]:Block[14166-14205]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[14180-14195]:ExpressionStatement[14180-14195]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[14214-14256]:ExpressionStatement[14214-14256]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[14268-14277]:MarkerAnnotation[14268-14277]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14282-14288]:Modifier[14282-14288]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[14289-14293]:PrimitiveType[14289-14293]"
  }, {
    "left" : "writeString",
    "right" : "writeString",
    "info" : "SimpleName[14294-14305]:SimpleName[14294-14305]"
  }, {
    "left" : "char[] text",
    "right" : "char[] text",
    "info" : "SingleVariableDeclaration[14306-14317]:SingleVariableDeclaration[14306-14317]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[14319-14329]:SingleVariableDeclaration[14319-14329]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[14331-14338]:SingleVariableDeclaration[14331-14338]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[14347-14358]:SimpleType[14347-14358]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14363-15055]:Block[14363-15055]"
  }, {
    "left" : "_verifyValueWrite(WRITE_STRING);",
    "right" : "_verifyValueWrite(WRITE_STRING);",
    "info" : "ExpressionStatement[14373-14405]:ExpressionStatement[14373-14405]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[14414-14484]:IfStatement[14414-14484]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14445-14484]:Block[14445-14484]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[14459-14474]:ExpressionStatement[14459-14474]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[14493-14535]:ExpressionStatement[14493-14535]"
  }, {
    "left" : "if (len <= _outputMaxContiguous)",
    "right" : "if (len <= _outputMaxContiguous)",
    "info" : "IfStatement[14581-14880]:IfStatement[14581-14880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14614-14810]:Block[14614-14810]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[14628-14748]:IfStatement[14628-14748]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14666-14748]:Block[14666-14748]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[14719-14734]:ExpressionStatement[14719-14734]"
  }, {
    "left" : "_writeStringSegment(text, offset, len);",
    "right" : "_writeStringSegment(text, offset, len);",
    "info" : "ExpressionStatement[14761-14800]:ExpressionStatement[14761-14800]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14816-14880]:Block[14816-14880]"
  }, {
    "left" : "_writeStringSegments(text, offset, len);",
    "right" : "_writeStringSegments(text, offset, len);",
    "info" : "ExpressionStatement[14830-14870]:ExpressionStatement[14830-14870]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[14928-14998]:IfStatement[14928-14998]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14959-14998]:Block[14959-14998]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[14973-14988]:ExpressionStatement[14973-14988]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[15007-15049]:ExpressionStatement[15007-15049]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15061-15070]:MarkerAnnotation[15061-15070]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15075-15081]:Modifier[15075-15081]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[15082-15087]:Modifier[15082-15087]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15088-15092]:PrimitiveType[15088-15092]"
  }, {
    "left" : "writeString",
    "right" : "writeString",
    "info" : "SimpleName[15093-15104]:SimpleName[15093-15104]"
  }, {
    "left" : "SerializableString text",
    "right" : "SerializableString text",
    "info" : "SingleVariableDeclaration[15105-15128]:SingleVariableDeclaration[15105-15128]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[15137-15148]:SimpleType[15137-15148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15153-15658]:Block[15153-15658]"
  }, {
    "left" : "_verifyValueWrite(WRITE_STRING);",
    "right" : "_verifyValueWrite(WRITE_STRING);",
    "info" : "ExpressionStatement[15163-15195]:ExpressionStatement[15163-15195]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[15204-15274]:IfStatement[15204-15274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15235-15274]:Block[15235-15274]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[15249-15264]:ExpressionStatement[15249-15264]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[15283-15325]:ExpressionStatement[15283-15325]"
  }, {
    "left" : "int len = text.appendQuotedUTF8(_outputBuffer, _outputTail);",
    "right" : "int len = text.appendQuotedUTF8(_outputBuffer, _outputTail);",
    "info" : "VariableDeclarationStatement[15334-15394]:VariableDeclarationStatement[15334-15394]"
  }, {
    "left" : "if (len < 0)",
    "right" : "if (len < 0)",
    "info" : "IfStatement[15403-15522]:IfStatement[15403-15522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15416-15473]:Block[15416-15473]"
  }, {
    "left" : "_writeBytes(text.asQuotedUTF8());",
    "right" : "_writeBytes(text.asQuotedUTF8());",
    "info" : "ExpressionStatement[15430-15463]:ExpressionStatement[15430-15463]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15479-15522]:Block[15479-15522]"
  }, {
    "left" : "_outputTail += len;",
    "right" : "_outputTail += len;",
    "info" : "ExpressionStatement[15493-15512]:ExpressionStatement[15493-15512]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[15531-15601]:IfStatement[15531-15601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15562-15601]:Block[15562-15601]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[15576-15591]:ExpressionStatement[15576-15591]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[15610-15652]:ExpressionStatement[15610-15652]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15668-15677]:MarkerAnnotation[15668-15677]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15682-15688]:Modifier[15682-15688]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15689-15693]:PrimitiveType[15689-15693]"
  }, {
    "left" : "writeRawUTF8String",
    "right" : "writeRawUTF8String",
    "info" : "SimpleName[15694-15712]:SimpleName[15694-15712]"
  }, {
    "left" : "byte[] text",
    "right" : "byte[] text",
    "info" : "SingleVariableDeclaration[15713-15724]:SingleVariableDeclaration[15713-15724]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[15726-15736]:SingleVariableDeclaration[15726-15736]"
  }, {
    "left" : "int length",
    "right" : "int length",
    "info" : "SingleVariableDeclaration[15738-15748]:SingleVariableDeclaration[15738-15748]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[15757-15768]:SimpleType[15757-15768]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15773-16124]:Block[15773-16124]"
  }, {
    "left" : "_verifyValueWrite(WRITE_STRING);",
    "right" : "_verifyValueWrite(WRITE_STRING);",
    "info" : "ExpressionStatement[15783-15815]:ExpressionStatement[15783-15815]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[15824-15894]:IfStatement[15824-15894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15855-15894]:Block[15855-15894]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[15869-15884]:ExpressionStatement[15869-15884]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[15903-15945]:ExpressionStatement[15903-15945]"
  }, {
    "left" : "_writeBytes(text, offset, length);",
    "right" : "_writeBytes(text, offset, length);",
    "info" : "ExpressionStatement[15954-15988]:ExpressionStatement[15954-15988]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[15997-16067]:IfStatement[15997-16067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16028-16067]:Block[16028-16067]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[16042-16057]:ExpressionStatement[16042-16057]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[16076-16118]:ExpressionStatement[16076-16118]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16130-16139]:MarkerAnnotation[16130-16139]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16144-16150]:Modifier[16144-16150]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16151-16155]:PrimitiveType[16151-16155]"
  }, {
    "left" : "writeUTF8String",
    "right" : "writeUTF8String",
    "info" : "SimpleName[16156-16171]:SimpleName[16156-16171]"
  }, {
    "left" : "byte[] text",
    "right" : "byte[] text",
    "info" : "SingleVariableDeclaration[16172-16183]:SingleVariableDeclaration[16172-16183]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[16185-16195]:SingleVariableDeclaration[16185-16195]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[16197-16204]:SingleVariableDeclaration[16197-16204]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[16213-16224]:SimpleType[16213-16224]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16229-16745]:Block[16229-16745]"
  }, {
    "left" : "_verifyValueWrite(WRITE_STRING);",
    "right" : "_verifyValueWrite(WRITE_STRING);",
    "info" : "ExpressionStatement[16239-16271]:ExpressionStatement[16239-16271]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[16280-16350]:IfStatement[16280-16350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16311-16350]:Block[16311-16350]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[16325-16340]:ExpressionStatement[16325-16340]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[16359-16401]:ExpressionStatement[16359-16401]"
  }, {
    "left" : "if (len <= _outputMaxContiguous)",
    "right" : "if (len <= _outputMaxContiguous)",
    "info" : "IfStatement[16447-16609]:IfStatement[16447-16609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16480-16541]:Block[16480-16541]"
  }, {
    "left" : "_writeUTF8Segment(text, offset, len);",
    "right" : "_writeUTF8Segment(text, offset, len);",
    "info" : "ExpressionStatement[16494-16531]:ExpressionStatement[16494-16531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16547-16609]:Block[16547-16609]"
  }, {
    "left" : "_writeUTF8Segments(text, offset, len);",
    "right" : "_writeUTF8Segments(text, offset, len);",
    "info" : "ExpressionStatement[16561-16599]:ExpressionStatement[16561-16599]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[16618-16688]:IfStatement[16618-16688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16649-16688]:Block[16649-16688]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[16663-16678]:ExpressionStatement[16663-16678]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[16697-16739]:ExpressionStatement[16697-16739]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16953-16962]:MarkerAnnotation[16953-16962]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16967-16973]:Modifier[16967-16973]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16974-16978]:PrimitiveType[16974-16978]"
  }, {
    "left" : "writeRaw",
    "right" : "writeRaw",
    "info" : "SimpleName[16979-16987]:SimpleName[16979-16987]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[16988-16999]:SingleVariableDeclaration[16988-16999]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[17008-17019]:SimpleType[17008-17019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17020-17280]:Block[17020-17280]"
  }, {
    "left" : "final int len = text.length();",
    "right" : "final int len = text.length();",
    "info" : "VariableDeclarationStatement[17030-17060]:VariableDeclarationStatement[17030-17060]"
  }, {
    "left" : "final char[] buf = _charBuffer;",
    "right" : "final char[] buf = _charBuffer;",
    "info" : "VariableDeclarationStatement[17069-17100]:VariableDeclarationStatement[17069-17100]"
  }, {
    "left" : "if (len <= buf.length)",
    "right" : "if (len <= buf.length)",
    "info" : "IfStatement[17109-17274]:IfStatement[17109-17274]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17132-17221]:Block[17132-17221]"
  }, {
    "left" : "text.getChars(0, len, buf, 0);",
    "right" : "text.getChars(0, len, buf, 0);",
    "info" : "ExpressionStatement[17146-17176]:ExpressionStatement[17146-17176]"
  }, {
    "left" : "writeRaw(buf, 0, len);",
    "right" : "writeRaw(buf, 0, len);",
    "info" : "ExpressionStatement[17189-17211]:ExpressionStatement[17189-17211]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17227-17274]:Block[17227-17274]"
  }, {
    "left" : "writeRaw(text, 0, len);",
    "right" : "writeRaw(text, 0, len);",
    "info" : "ExpressionStatement[17241-17264]:ExpressionStatement[17241-17264]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17286-17295]:MarkerAnnotation[17286-17295]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17300-17306]:Modifier[17300-17306]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17307-17311]:PrimitiveType[17307-17311]"
  }, {
    "left" : "writeRaw",
    "right" : "writeRaw",
    "info" : "SimpleName[17312-17320]:SimpleName[17312-17320]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[17321-17332]:SingleVariableDeclaration[17321-17332]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[17334-17344]:SingleVariableDeclaration[17334-17344]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[17346-17353]:SingleVariableDeclaration[17346-17353]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[17362-17373]:SimpleType[17362-17373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17378-18675]:Block[17378-18675]"
  }, {
    "left" : "final char[] buf = _charBuffer;",
    "right" : "final char[] buf = _charBuffer;",
    "info" : "VariableDeclarationStatement[17388-17419]:VariableDeclarationStatement[17388-17419]"
  }, {
    "left" : "if (len <= buf.length)",
    "right" : "if (len <= buf.length)",
    "info" : "IfStatement[17492-17636]:IfStatement[17492-17636]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17515-17636]:Block[17515-17636]"
  }, {
    "left" : "text.getChars(offset, offset+len, buf, 0);",
    "right" : "text.getChars(offset, offset+len, buf, 0);",
    "info" : "ExpressionStatement[17529-17571]:ExpressionStatement[17529-17571]"
  }, {
    "left" : "writeRaw(buf, 0, len);",
    "right" : "writeRaw(buf, 0, len);",
    "info" : "ExpressionStatement[17584-17606]:ExpressionStatement[17584-17606]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[17619-17626]:ReturnStatement[17619-17626]"
  }, {
    "left" : "final int maxChunk = (_outputEnd >> 2) + (_outputEnd >> 4);",
    "right" : "final int maxChunk = (_outputEnd >> 2) + (_outputEnd >> 4);",
    "info" : "VariableDeclarationStatement[17872-17931]:VariableDeclarationStatement[17872-17931]"
  }, {
    "left" : "final int maxBytes = maxChunk * 3;",
    "right" : "final int maxBytes = maxChunk * 3;",
    "info" : "VariableDeclarationStatement[17967-18001]:VariableDeclarationStatement[17967-18001]"
  }, {
    "left" : "while (len > 0)",
    "right" : "while (len > 0)",
    "info" : "WhileStatement[18011-18669]:WhileStatement[18011-18669]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18027-18669]:Block[18027-18669]"
  }, {
    "left" : "int len2 = Math.min(maxChunk, len);",
    "right" : "int len2 = Math.min(maxChunk, len);",
    "info" : "VariableDeclarationStatement[18041-18076]:VariableDeclarationStatement[18041-18076]"
  }, {
    "left" : "text.getChars(offset, offset+len2, buf, 0);",
    "right" : "text.getChars(offset, offset+len2, buf, 0);",
    "info" : "ExpressionStatement[18089-18132]:ExpressionStatement[18089-18132]"
  }, {
    "left" : "if ((_outputTail + maxBytes) > _outputEnd)",
    "right" : "if ((_outputTail + maxBytes) > _outputEnd)",
    "info" : "IfStatement[18145-18235]:IfStatement[18145-18235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18188-18235]:Block[18188-18235]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[18206-18221]:ExpressionStatement[18206-18221]"
  }, {
    "left" : "if (len > 0)",
    "right" : "if (len > 0)",
    "info" : "IfStatement[18384-18562]:IfStatement[18384-18562]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18397-18562]:Block[18397-18562]"
  }, {
    "left" : "char ch = buf[len2-1];",
    "right" : "char ch = buf[len2-1];",
    "info" : "VariableDeclarationStatement[18415-18437]:VariableDeclarationStatement[18415-18437]"
  }, {
    "left" : "if ((ch >= SURR1_FIRST) && (ch <= SURR1_LAST))",
    "right" : "if ((ch >= SURR1_FIRST) && (ch <= SURR1_LAST))",
    "info" : "IfStatement[18454-18548]:IfStatement[18454-18548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18501-18548]:Block[18501-18548]"
  }, {
    "left" : "--len2;",
    "right" : "--len2;",
    "info" : "ExpressionStatement[18523-18530]:ExpressionStatement[18523-18530]"
  }, {
    "left" : "_writeRawSegment(buf, 0, len2);",
    "right" : "_writeRawSegment(buf, 0, len2);",
    "info" : "ExpressionStatement[18575-18606]:ExpressionStatement[18575-18606]"
  }, {
    "left" : "offset += len2;",
    "right" : "offset += len2;",
    "info" : "ExpressionStatement[18619-18634]:ExpressionStatement[18619-18634]"
  }, {
    "left" : "len -= len2;",
    "right" : "len -= len2;",
    "info" : "ExpressionStatement[18647-18659]:ExpressionStatement[18647-18659]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18681-18690]:MarkerAnnotation[18681-18690]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18695-18701]:Modifier[18695-18701]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18702-18706]:PrimitiveType[18702-18706]"
  }, {
    "left" : "writeRaw",
    "right" : "writeRaw",
    "info" : "SimpleName[18707-18715]:SimpleName[18707-18715]"
  }, {
    "left" : "SerializableString text",
    "right" : "SerializableString text",
    "info" : "SingleVariableDeclaration[18716-18739]:SingleVariableDeclaration[18716-18739]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[18748-18759]:SimpleType[18748-18759]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18764-18885]:Block[18764-18885]"
  }, {
    "left" : "byte[] raw = text.asUnquotedUTF8();",
    "right" : "byte[] raw = text.asUnquotedUTF8();",
    "info" : "VariableDeclarationStatement[18774-18809]:VariableDeclarationStatement[18774-18809]"
  }, {
    "left" : "if (raw.length > 0)",
    "right" : "if (raw.length > 0)",
    "info" : "IfStatement[18818-18879]:IfStatement[18818-18879]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18838-18879]:Block[18838-18879]"
  }, {
    "left" : "_writeBytes(raw);",
    "right" : "_writeBytes(raw);",
    "info" : "ExpressionStatement[18852-18869]:ExpressionStatement[18852-18869]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18908-18917]:MarkerAnnotation[18908-18917]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18922-18928]:Modifier[18922-18928]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18929-18933]:PrimitiveType[18929-18933]"
  }, {
    "left" : "writeRawValue",
    "right" : "writeRawValue",
    "info" : "SimpleName[18934-18947]:SimpleName[18934-18947]"
  }, {
    "left" : "SerializableString text",
    "right" : "SerializableString text",
    "info" : "SingleVariableDeclaration[18948-18971]:SingleVariableDeclaration[18948-18971]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[18980-18991]:SimpleType[18980-18991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18992-19151]:Block[18992-19151]"
  }, {
    "left" : "_verifyValueWrite(WRITE_RAW);",
    "right" : "_verifyValueWrite(WRITE_RAW);",
    "info" : "ExpressionStatement[19002-19031]:ExpressionStatement[19002-19031]"
  }, {
    "left" : "byte[] raw = text.asUnquotedUTF8();",
    "right" : "byte[] raw = text.asUnquotedUTF8();",
    "info" : "VariableDeclarationStatement[19040-19075]:VariableDeclarationStatement[19040-19075]"
  }, {
    "left" : "if (raw.length > 0)",
    "right" : "if (raw.length > 0)",
    "info" : "IfStatement[19084-19145]:IfStatement[19084-19145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19104-19145]:Block[19104-19145]"
  }, {
    "left" : "_writeBytes(raw);",
    "right" : "_writeBytes(raw);",
    "info" : "ExpressionStatement[19118-19135]:ExpressionStatement[19118-19135]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[19192-19201]:MarkerAnnotation[19192-19201]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19206-19212]:Modifier[19206-19212]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[19213-19218]:Modifier[19213-19218]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19219-19223]:PrimitiveType[19219-19223]"
  }, {
    "left" : "writeRaw",
    "right" : "writeRaw",
    "info" : "SimpleName[19224-19232]:SimpleName[19224-19232]"
  }, {
    "left" : "char[] cbuf",
    "right" : "char[] cbuf",
    "info" : "SingleVariableDeclaration[19233-19244]:SingleVariableDeclaration[19233-19244]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[19246-19256]:SingleVariableDeclaration[19246-19256]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[19258-19265]:SingleVariableDeclaration[19258-19265]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[19274-19285]:SimpleType[19274-19285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19290-20673]:Block[19290-20673]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19379-19790]:Block[19379-19790]"
  }, {
    "left" : "int len3 = len+len+len;",
    "right" : "int len3 = len+len+len;",
    "info" : "VariableDeclarationStatement[19393-19416]:VariableDeclarationStatement[19393-19416]"
  }, {
    "left" : "if ((_outputTail + len3) > _outputEnd)",
    "right" : "if ((_outputTail + len3) > _outputEnd)",
    "info" : "IfStatement[19429-19780]:IfStatement[19429-19780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19468-19780]:Block[19468-19780]"
  }, {
    "left" : "if (_outputEnd < len3)",
    "right" : "if (_outputEnd < len3)",
    "info" : "IfStatement[19527-19681]:IfStatement[19527-19681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19550-19681]:Block[19550-19681]"
  }, {
    "left" : "_writeSegmentedRaw(cbuf, offset, len);",
    "right" : "_writeSegmentedRaw(cbuf, offset, len);",
    "info" : "ExpressionStatement[19597-19635]:ExpressionStatement[19597-19635]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[19656-19663]:ReturnStatement[19656-19663]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[19751-19766]:ExpressionStatement[19751-19766]"
  }, {
    "left" : "len += offset;",
    "right" : "len += offset;",
    "info" : "ExpressionStatement[19799-19813]:ExpressionStatement[19799-19813]"
  }, {
    "left" : "main_loop:\n        while (offset < len) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, len);\n            }\n        }",
    "right" : "main_loop:\n        while (offset < len) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, len);\n            }\n        }",
    "info" : "LabeledStatement[19928-20667]:LabeledStatement[19928-20667]"
  }, {
    "left" : "while (offset < len)",
    "right" : "while (offset < len)",
    "info" : "WhileStatement[19947-20667]:WhileStatement[19947-20667]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19968-20667]:Block[19968-20667]"
  }, {
    "left" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }",
    "right" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= len) {\n                    break main_loop;\n                }\n            }",
    "info" : "LabeledStatement[19982-20320]:LabeledStatement[19982-20320]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[20006-20320]:WhileStatement[20006-20320]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20019-20320]:Block[20019-20320]"
  }, {
    "left" : "int ch = (int) cbuf[offset];",
    "right" : "int ch = (int) cbuf[offset];",
    "info" : "VariableDeclarationStatement[20037-20065]:VariableDeclarationStatement[20037-20065]"
  }, {
    "left" : "if (ch > 0x7F)",
    "right" : "if (ch > 0x7F)",
    "info" : "IfStatement[20082-20154]:IfStatement[20082-20154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20097-20154]:Block[20097-20154]"
  }, {
    "left" : "break inner_loop;",
    "right" : "break inner_loop;",
    "info" : "BreakStatement[20119-20136]:BreakStatement[20119-20136]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = (byte) ch;",
    "right" : "_outputBuffer[_outputTail++] = (byte) ch;",
    "info" : "ExpressionStatement[20171-20212]:ExpressionStatement[20171-20212]"
  }, {
    "left" : "if (++offset >= len)",
    "right" : "if (++offset >= len)",
    "info" : "IfStatement[20229-20306]:IfStatement[20229-20306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20250-20306]:Block[20250-20306]"
  }, {
    "left" : "break main_loop;",
    "right" : "break main_loop;",
    "info" : "BreakStatement[20272-20288]:BreakStatement[20272-20288]"
  }, {
    "left" : "char ch = cbuf[offset++];",
    "right" : "char ch = cbuf[offset++];",
    "info" : "VariableDeclarationStatement[20333-20358]:VariableDeclarationStatement[20333-20358]"
  }, {
    "left" : "if (ch < 0x800)",
    "right" : "if (ch < 0x800)",
    "info" : "IfStatement[20371-20657]:IfStatement[20371-20657]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20387-20563]:Block[20387-20563]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "_outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[20416-20473]:ExpressionStatement[20416-20473]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "_outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[20490-20549]:ExpressionStatement[20490-20549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20569-20657]:Block[20569-20657]"
  }, {
    "left" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, len);",
    "right" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, len);",
    "info" : "ExpressionStatement[20587-20643]:ExpressionStatement[20587-20643]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20679-20688]:MarkerAnnotation[20679-20688]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20693-20699]:Modifier[20693-20699]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20700-20704]:PrimitiveType[20700-20704]"
  }, {
    "left" : "writeRaw",
    "right" : "writeRaw",
    "info" : "SimpleName[20705-20713]:SimpleName[20705-20713]"
  }, {
    "left" : "char ch",
    "right" : "char ch",
    "info" : "SingleVariableDeclaration[20714-20721]:SingleVariableDeclaration[20714-20721]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[20730-20741]:SimpleType[20730-20741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20746-21214]:Block[20746-21214]"
  }, {
    "left" : "if ((_outputTail + 3) >= _outputEnd)",
    "right" : "if ((_outputTail + 3) >= _outputEnd)",
    "info" : "IfStatement[20756-20832]:IfStatement[20756-20832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20793-20832]:Block[20793-20832]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[20807-20822]:ExpressionStatement[20807-20822]"
  }, {
    "left" : "final byte[] bbuf = _outputBuffer;",
    "right" : "final byte[] bbuf = _outputBuffer;",
    "info" : "VariableDeclarationStatement[20841-20875]:VariableDeclarationStatement[20841-20875]"
  }, {
    "left" : "if (ch <= 0x7F)",
    "right" : "if (ch <= 0x7F)",
    "info" : "IfStatement[20884-21208]:IfStatement[20884-21208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20900-20956]:Block[20900-20956]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) ch;",
    "right" : "bbuf[_outputTail++] = (byte) ch;",
    "info" : "ExpressionStatement[20914-20946]:ExpressionStatement[20914-20946]"
  }, {
    "left" : "if (ch < 0x800)",
    "right" : "if (ch < 0x800)",
    "info" : "IfStatement[20963-21208]:IfStatement[20963-21208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20979-21125]:Block[20979-21125]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[21004-21052]:ExpressionStatement[21004-21052]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[21065-21115]:ExpressionStatement[21065-21115]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21131-21208]:Block[21131-21208]"
  }, {
    "left" : "_outputRawMultiByteChar(ch, null, 0, 0);",
    "right" : "_outputRawMultiByteChar(ch, null, 0, 0);",
    "info" : "ExpressionStatement[21158-21198]:ExpressionStatement[21158-21198]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[21354-21361]:Modifier[21354-21361]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[21362-21367]:Modifier[21362-21367]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[21368-21372]:PrimitiveType[21368-21372]"
  }, {
    "left" : "_writeSegmentedRaw",
    "right" : "_writeSegmentedRaw",
    "info" : "SimpleName[21373-21391]:SimpleName[21373-21391]"
  }, {
    "left" : "char[] cbuf",
    "right" : "char[] cbuf",
    "info" : "SingleVariableDeclaration[21392-21403]:SingleVariableDeclaration[21392-21403]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[21405-21415]:SingleVariableDeclaration[21405-21415]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[21417-21424]:SingleVariableDeclaration[21417-21424]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[21433-21444]:SimpleType[21433-21444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21449-22597]:Block[21449-22597]"
  }, {
    "left" : "final int end = _outputEnd;",
    "right" : "final int end = _outputEnd;",
    "info" : "VariableDeclarationStatement[21459-21486]:VariableDeclarationStatement[21459-21486]"
  }, {
    "left" : "final byte[] bbuf = _outputBuffer;",
    "right" : "final byte[] bbuf = _outputBuffer;",
    "info" : "VariableDeclarationStatement[21495-21529]:VariableDeclarationStatement[21495-21529]"
  }, {
    "left" : "final int inputEnd = offset + len;",
    "right" : "final int inputEnd = offset + len;",
    "info" : "VariableDeclarationStatement[21538-21572]:VariableDeclarationStatement[21538-21572]"
  }, {
    "left" : "main_loop:\n        while (offset < inputEnd) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }\n            if ((_outputTail + 3) >= _outputEnd) {\n                _flushBuffer();\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);\n            }\n        }",
    "right" : "main_loop:\n        while (offset < inputEnd) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }\n            if ((_outputTail + 3) >= _outputEnd) {\n                _flushBuffer();\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);\n            }\n        }",
    "info" : "LabeledStatement[21590-22591]:LabeledStatement[21590-22591]"
  }, {
    "left" : "while (offset < inputEnd)",
    "right" : "while (offset < inputEnd)",
    "info" : "WhileStatement[21609-22591]:WhileStatement[21609-22591]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21635-22591]:Block[21635-22591]"
  }, {
    "left" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }",
    "right" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch >= 0x80) {\n                    break inner_loop;\n                }\n                // !!! TODO: fast(er) writes (roll input, output checks in one)\n                if (_outputTail >= end) {\n                    _flushBuffer();\n                }\n                bbuf[_outputTail++] = (byte) ch;\n                if (++offset >= inputEnd) {\n                    break main_loop;\n                }\n            }",
    "info" : "LabeledStatement[21649-22160]:LabeledStatement[21649-22160]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[21673-22160]:WhileStatement[21673-22160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21686-22160]:Block[21686-22160]"
  }, {
    "left" : "int ch = (int) cbuf[offset];",
    "right" : "int ch = (int) cbuf[offset];",
    "info" : "VariableDeclarationStatement[21704-21732]:VariableDeclarationStatement[21704-21732]"
  }, {
    "left" : "if (ch >= 0x80)",
    "right" : "if (ch >= 0x80)",
    "info" : "IfStatement[21749-21822]:IfStatement[21749-21822]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21765-21822]:Block[21765-21822]"
  }, {
    "left" : "break inner_loop;",
    "right" : "break inner_loop;",
    "info" : "BreakStatement[21787-21804]:BreakStatement[21787-21804]"
  }, {
    "left" : "if (_outputTail >= end)",
    "right" : "if (_outputTail >= end)",
    "info" : "IfStatement[21919-21998]:IfStatement[21919-21998]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21943-21998]:Block[21943-21998]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[21965-21980]:ExpressionStatement[21965-21980]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) ch;",
    "right" : "bbuf[_outputTail++] = (byte) ch;",
    "info" : "ExpressionStatement[22015-22047]:ExpressionStatement[22015-22047]"
  }, {
    "left" : "if (++offset >= inputEnd)",
    "right" : "if (++offset >= inputEnd)",
    "info" : "IfStatement[22064-22146]:IfStatement[22064-22146]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22090-22146]:Block[22090-22146]"
  }, {
    "left" : "break main_loop;",
    "right" : "break main_loop;",
    "info" : "BreakStatement[22112-22128]:BreakStatement[22112-22128]"
  }, {
    "left" : "if ((_outputTail + 3) >= _outputEnd)",
    "right" : "if ((_outputTail + 3) >= _outputEnd)",
    "info" : "IfStatement[22173-22257]:IfStatement[22173-22257]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22210-22257]:Block[22210-22257]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[22228-22243]:ExpressionStatement[22228-22243]"
  }, {
    "left" : "char ch = cbuf[offset++];",
    "right" : "char ch = cbuf[offset++];",
    "info" : "VariableDeclarationStatement[22270-22295]:VariableDeclarationStatement[22270-22295]"
  }, {
    "left" : "if (ch < 0x800)",
    "right" : "if (ch < 0x800)",
    "info" : "IfStatement[22308-22581]:IfStatement[22308-22581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22324-22482]:Block[22324-22482]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "bbuf[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[22353-22401]:ExpressionStatement[22353-22401]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[22418-22468]:ExpressionStatement[22418-22468]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22488-22581]:Block[22488-22581]"
  }, {
    "left" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);",
    "right" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);",
    "info" : "ExpressionStatement[22506-22567]:ExpressionStatement[22506-22567]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22947-22954]:Modifier[22947-22954]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[22955-22959]:PrimitiveType[22955-22959]"
  }, {
    "left" : "_writeRawSegment",
    "right" : "_writeRawSegment",
    "info" : "SimpleName[22960-22976]:SimpleName[22960-22976]"
  }, {
    "left" : "char[] cbuf",
    "right" : "char[] cbuf",
    "info" : "SingleVariableDeclaration[22977-22988]:SingleVariableDeclaration[22977-22988]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[22990-23000]:SingleVariableDeclaration[22990-23000]"
  }, {
    "left" : "int end",
    "right" : "int end",
    "info" : "SingleVariableDeclaration[23002-23009]:SingleVariableDeclaration[23002-23009]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[23018-23029]:SimpleType[23018-23029]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23034-23789]:Block[23034-23789]"
  }, {
    "left" : "main_loop:\n        while (offset < end) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= end) {\n                    break main_loop;\n                }\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, end);\n            }\n        }",
    "right" : "main_loop:\n        while (offset < end) {\n            inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= end) {\n                    break main_loop;\n                }\n            }\n            char ch = cbuf[offset++];\n            if (ch < 0x800) { // 2-byte?\n                _outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));\n                _outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));\n            } else {\n                offset = _outputRawMultiByteChar(ch, cbuf, offset, end);\n            }\n        }",
    "info" : "LabeledStatement[23044-23783]:LabeledStatement[23044-23783]"
  }, {
    "left" : "while (offset < end)",
    "right" : "while (offset < end)",
    "info" : "WhileStatement[23063-23783]:WhileStatement[23063-23783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23084-23783]:Block[23084-23783]"
  }, {
    "left" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= end) {\n                    break main_loop;\n                }\n            }",
    "right" : "inner_loop:\n            while (true) {\n                int ch = (int) cbuf[offset];\n                if (ch > 0x7F) {\n                    break inner_loop;\n                }\n                _outputBuffer[_outputTail++] = (byte) ch;\n                if (++offset >= end) {\n                    break main_loop;\n                }\n            }",
    "info" : "LabeledStatement[23098-23436]:LabeledStatement[23098-23436]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[23122-23436]:WhileStatement[23122-23436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23135-23436]:Block[23135-23436]"
  }, {
    "left" : "int ch = (int) cbuf[offset];",
    "right" : "int ch = (int) cbuf[offset];",
    "info" : "VariableDeclarationStatement[23153-23181]:VariableDeclarationStatement[23153-23181]"
  }, {
    "left" : "if (ch > 0x7F)",
    "right" : "if (ch > 0x7F)",
    "info" : "IfStatement[23198-23270]:IfStatement[23198-23270]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23213-23270]:Block[23213-23270]"
  }, {
    "left" : "break inner_loop;",
    "right" : "break inner_loop;",
    "info" : "BreakStatement[23235-23252]:BreakStatement[23235-23252]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = (byte) ch;",
    "right" : "_outputBuffer[_outputTail++] = (byte) ch;",
    "info" : "ExpressionStatement[23287-23328]:ExpressionStatement[23287-23328]"
  }, {
    "left" : "if (++offset >= end)",
    "right" : "if (++offset >= end)",
    "info" : "IfStatement[23345-23422]:IfStatement[23345-23422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23366-23422]:Block[23366-23422]"
  }, {
    "left" : "break main_loop;",
    "right" : "break main_loop;",
    "info" : "BreakStatement[23388-23404]:BreakStatement[23388-23404]"
  }, {
    "left" : "char ch = cbuf[offset++];",
    "right" : "char ch = cbuf[offset++];",
    "info" : "VariableDeclarationStatement[23449-23474]:VariableDeclarationStatement[23449-23474]"
  }, {
    "left" : "if (ch < 0x800)",
    "right" : "if (ch < 0x800)",
    "info" : "IfStatement[23487-23773]:IfStatement[23487-23773]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23503-23679]:Block[23503-23679]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "_outputBuffer[_outputTail++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[23532-23589]:ExpressionStatement[23532-23589]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "_outputBuffer[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[23606-23665]:ExpressionStatement[23606-23665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23685-23773]:Block[23685-23773]"
  }, {
    "left" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, end);",
    "right" : "offset = _outputRawMultiByteChar(ch, cbuf, offset, end);",
    "info" : "ExpressionStatement[23703-23759]:ExpressionStatement[23703-23759]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[23999-24008]:MarkerAnnotation[23999-24008]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24013-24019]:Modifier[24013-24019]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[24020-24024]:PrimitiveType[24020-24024]"
  }, {
    "left" : "writeBinary",
    "right" : "writeBinary",
    "info" : "SimpleName[24025-24036]:SimpleName[24025-24036]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[24037-24061]:SingleVariableDeclaration[24037-24061]"
  }, {
    "left" : "byte[] data",
    "right" : "byte[] data",
    "info" : "SingleVariableDeclaration[24075-24086]:SingleVariableDeclaration[24075-24086]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[24088-24098]:SingleVariableDeclaration[24088-24098]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[24100-24107]:SingleVariableDeclaration[24100-24107]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[24124-24135]:SimpleType[24124-24135]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[24137-24160]:SimpleType[24137-24160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24165-24590]:Block[24165-24590]"
  }, {
    "left" : "_verifyValueWrite(WRITE_BINARY);",
    "right" : "_verifyValueWrite(WRITE_BINARY);",
    "info" : "ExpressionStatement[24175-24207]:ExpressionStatement[24175-24207]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[24243-24313]:IfStatement[24243-24313]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24274-24313]:Block[24274-24313]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[24288-24303]:ExpressionStatement[24288-24303]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[24322-24364]:ExpressionStatement[24322-24364]"
  }, {
    "left" : "_writeBinary(b64variant, data, offset, offset+len);",
    "right" : "_writeBinary(b64variant, data, offset, offset+len);",
    "info" : "ExpressionStatement[24373-24424]:ExpressionStatement[24373-24424]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[24463-24533]:IfStatement[24463-24533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24494-24533]:Block[24494-24533]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[24508-24523]:ExpressionStatement[24508-24523]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[24542-24584]:ExpressionStatement[24542-24584]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[24596-24605]:MarkerAnnotation[24596-24605]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[24610-24616]:Modifier[24610-24616]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[24617-24620]:PrimitiveType[24617-24620]"
  }, {
    "left" : "writeBinary",
    "right" : "writeBinary",
    "info" : "SimpleName[24621-24632]:SimpleName[24621-24632]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[24633-24657]:SingleVariableDeclaration[24633-24657]"
  }, {
    "left" : "InputStream data",
    "right" : "InputStream data",
    "info" : "SingleVariableDeclaration[24671-24687]:SingleVariableDeclaration[24671-24687]"
  }, {
    "left" : "int dataLength",
    "right" : "int dataLength",
    "info" : "SingleVariableDeclaration[24689-24703]:SingleVariableDeclaration[24689-24703]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[24720-24731]:SimpleType[24720-24731]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[24733-24756]:SimpleType[24733-24756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24761-25785]:Block[24761-25785]"
  }, {
    "left" : "_verifyValueWrite(WRITE_BINARY);",
    "right" : "_verifyValueWrite(WRITE_BINARY);",
    "info" : "ExpressionStatement[24771-24803]:ExpressionStatement[24771-24803]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[24839-24909]:IfStatement[24839-24909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24870-24909]:Block[24870-24909]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[24884-24899]:ExpressionStatement[24884-24899]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[24918-24960]:ExpressionStatement[24918-24960]"
  }, {
    "left" : "byte[] encodingBuffer = _ioContext.allocBase64Buffer();",
    "right" : "byte[] encodingBuffer = _ioContext.allocBase64Buffer();",
    "info" : "VariableDeclarationStatement[24969-25024]:VariableDeclarationStatement[24969-25024]"
  }, {
    "left" : "int bytes;",
    "right" : "int bytes;",
    "info" : "VariableDeclarationStatement[25033-25043]:VariableDeclarationStatement[25033-25043]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[25052-25597]:TryStatement[25052-25597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25056-25517]:Block[25056-25517]"
  }, {
    "left" : "if (dataLength < 0)",
    "right" : "if (dataLength < 0)",
    "info" : "IfStatement[25070-25507]:IfStatement[25070-25507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25090-25195]:Block[25090-25195]"
  }, {
    "left" : "bytes = _writeBinary(b64variant, data, encodingBuffer);",
    "right" : "bytes = _writeBinary(b64variant, data, encodingBuffer);",
    "info" : "ExpressionStatement[25126-25181]:ExpressionStatement[25126-25181]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25201-25507]:Block[25201-25507]"
  }, {
    "left" : "int missing = _writeBinary(b64variant, data, encodingBuffer, dataLength);",
    "right" : "int missing = _writeBinary(b64variant, data, encodingBuffer, dataLength);",
    "info" : "VariableDeclarationStatement[25219-25292]:VariableDeclarationStatement[25219-25292]"
  }, {
    "left" : "if (missing > 0)",
    "right" : "if (missing > 0)",
    "info" : "IfStatement[25309-25457]:IfStatement[25309-25457]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25326-25457]:Block[25326-25457]"
  }, {
    "left" : "_reportError(\"Too few bytes available: missing \"+missing+\" bytes (out of \"+dataLength+\")\");",
    "right" : "_reportError(\"Too few bytes available: missing \"+missing+\" bytes (out of \"+dataLength+\")\");",
    "info" : "ExpressionStatement[25348-25439]:ExpressionStatement[25348-25439]"
  }, {
    "left" : "bytes = dataLength;",
    "right" : "bytes = dataLength;",
    "info" : "ExpressionStatement[25474-25493]:ExpressionStatement[25474-25493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25526-25597]:Block[25526-25597]"
  }, {
    "left" : "_ioContext.releaseBase64Buffer(encodingBuffer);",
    "right" : "_ioContext.releaseBase64Buffer(encodingBuffer);",
    "info" : "ExpressionStatement[25540-25587]:ExpressionStatement[25540-25587]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[25636-25706]:IfStatement[25636-25706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25667-25706]:Block[25667-25706]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[25681-25696]:ExpressionStatement[25681-25696]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[25715-25757]:ExpressionStatement[25715-25757]"
  }, {
    "left" : "return bytes;",
    "right" : "return bytes;",
    "info" : "ReturnStatement[25766-25779]:ReturnStatement[25766-25779]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[25987-25996]:MarkerAnnotation[25987-25996]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26001-26007]:Modifier[26001-26007]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26008-26012]:PrimitiveType[26008-26012]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[26013-26024]:SimpleName[26013-26024]"
  }, {
    "left" : "short s",
    "right" : "short s",
    "info" : "SingleVariableDeclaration[26025-26032]:SingleVariableDeclaration[26025-26032]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[26041-26052]:SimpleType[26041-26052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26057-26417]:Block[26057-26417]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[26067-26099]:ExpressionStatement[26067-26099]"
  }, {
    "left" : "if ((_outputTail + 6) >= _outputEnd)",
    "right" : "if ((_outputTail + 6) >= _outputEnd)",
    "info" : "IfStatement[26158-26234]:IfStatement[26158-26234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26195-26234]:Block[26195-26234]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[26209-26224]:ExpressionStatement[26209-26224]"
  }, {
    "left" : "if (_cfgNumbersAsStrings)",
    "right" : "if (_cfgNumbersAsStrings)",
    "info" : "IfStatement[26243-26334]:IfStatement[26243-26334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26269-26334]:Block[26269-26334]"
  }, {
    "left" : "_writeQuotedShort(s);",
    "right" : "_writeQuotedShort(s);",
    "info" : "ExpressionStatement[26283-26304]:ExpressionStatement[26283-26304]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[26317-26324]:ReturnStatement[26317-26324]"
  }, {
    "left" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
    "right" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[26343-26411]:ExpressionStatement[26343-26411]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26427-26434]:Modifier[26427-26434]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[26435-26440]:Modifier[26435-26440]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26441-26445]:PrimitiveType[26441-26445]"
  }, {
    "left" : "_writeQuotedShort",
    "right" : "_writeQuotedShort",
    "info" : "SimpleName[26446-26463]:SimpleName[26446-26463]"
  }, {
    "left" : "short s",
    "right" : "short s",
    "info" : "SingleVariableDeclaration[26464-26471]:SingleVariableDeclaration[26464-26471]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[26480-26491]:SimpleType[26480-26491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26492-26763]:Block[26492-26763]"
  }, {
    "left" : "if ((_outputTail + 8) >= _outputEnd)",
    "right" : "if ((_outputTail + 8) >= _outputEnd)",
    "info" : "IfStatement[26502-26578]:IfStatement[26502-26578]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26539-26578]:Block[26539-26578]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[26553-26568]:ExpressionStatement[26553-26568]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[26587-26629]:ExpressionStatement[26587-26629]"
  }, {
    "left" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
    "right" : "_outputTail = NumberOutput.outputInt(s, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[26638-26706]:ExpressionStatement[26638-26706]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[26715-26757]:ExpressionStatement[26715-26757]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[26774-26783]:MarkerAnnotation[26774-26783]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26788-26794]:Modifier[26788-26794]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[26795-26799]:PrimitiveType[26795-26799]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[26800-26811]:SimpleName[26800-26811]"
  }, {
    "left" : "int i",
    "right" : "int i",
    "info" : "SingleVariableDeclaration[26812-26817]:SingleVariableDeclaration[26812-26817]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[26826-26837]:SimpleType[26826-26837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26842-27202]:Block[26842-27202]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[26852-26884]:ExpressionStatement[26852-26884]"
  }, {
    "left" : "if ((_outputTail + 11) >= _outputEnd)",
    "right" : "if ((_outputTail + 11) >= _outputEnd)",
    "info" : "IfStatement[26944-27021]:IfStatement[26944-27021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26982-27021]:Block[26982-27021]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[26996-27011]:ExpressionStatement[26996-27011]"
  }, {
    "left" : "if (_cfgNumbersAsStrings)",
    "right" : "if (_cfgNumbersAsStrings)",
    "info" : "IfStatement[27030-27119]:IfStatement[27030-27119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27056-27119]:Block[27056-27119]"
  }, {
    "left" : "_writeQuotedInt(i);",
    "right" : "_writeQuotedInt(i);",
    "info" : "ExpressionStatement[27070-27089]:ExpressionStatement[27070-27089]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[27102-27109]:ReturnStatement[27102-27109]"
  }, {
    "left" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
    "right" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[27128-27196]:ExpressionStatement[27128-27196]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27208-27215]:Modifier[27208-27215]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[27216-27221]:Modifier[27216-27221]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[27222-27226]:PrimitiveType[27222-27226]"
  }, {
    "left" : "_writeQuotedInt",
    "right" : "_writeQuotedInt",
    "info" : "SimpleName[27227-27242]:SimpleName[27227-27242]"
  }, {
    "left" : "int i",
    "right" : "int i",
    "info" : "SingleVariableDeclaration[27243-27248]:SingleVariableDeclaration[27243-27248]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[27257-27268]:SimpleType[27257-27268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27273-27545]:Block[27273-27545]"
  }, {
    "left" : "if ((_outputTail + 13) >= _outputEnd)",
    "right" : "if ((_outputTail + 13) >= _outputEnd)",
    "info" : "IfStatement[27283-27360]:IfStatement[27283-27360]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27321-27360]:Block[27321-27360]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[27335-27350]:ExpressionStatement[27335-27350]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[27369-27411]:ExpressionStatement[27369-27411]"
  }, {
    "left" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
    "right" : "_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[27420-27488]:ExpressionStatement[27420-27488]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[27497-27539]:ExpressionStatement[27497-27539]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[27555-27564]:MarkerAnnotation[27555-27564]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27569-27575]:Modifier[27569-27575]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[27576-27580]:PrimitiveType[27576-27580]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[27581-27592]:SimpleName[27581-27592]"
  }, {
    "left" : "long l",
    "right" : "long l",
    "info" : "SingleVariableDeclaration[27593-27599]:SingleVariableDeclaration[27593-27599]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[27608-27619]:SimpleType[27608-27619]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27624-27978]:Block[27624-27978]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[27634-27666]:ExpressionStatement[27634-27666]"
  }, {
    "left" : "if (_cfgNumbersAsStrings)",
    "right" : "if (_cfgNumbersAsStrings)",
    "info" : "IfStatement[27675-27765]:IfStatement[27675-27765]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27701-27765]:Block[27701-27765]"
  }, {
    "left" : "_writeQuotedLong(l);",
    "right" : "_writeQuotedLong(l);",
    "info" : "ExpressionStatement[27715-27735]:ExpressionStatement[27715-27735]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[27748-27755]:ReturnStatement[27748-27755]"
  }, {
    "left" : "if ((_outputTail + 21) >= _outputEnd)",
    "right" : "if ((_outputTail + 21) >= _outputEnd)",
    "info" : "IfStatement[27774-27894]:IfStatement[27774-27894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27812-27894]:Block[27812-27894]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[27869-27884]:ExpressionStatement[27869-27884]"
  }, {
    "left" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
    "right" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[27903-27972]:ExpressionStatement[27903-27972]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27984-27991]:Modifier[27984-27991]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[27992-27997]:Modifier[27992-27997]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[27998-28002]:PrimitiveType[27998-28002]"
  }, {
    "left" : "_writeQuotedLong",
    "right" : "_writeQuotedLong",
    "info" : "SimpleName[28003-28019]:SimpleName[28003-28019]"
  }, {
    "left" : "long l",
    "right" : "long l",
    "info" : "SingleVariableDeclaration[28020-28026]:SingleVariableDeclaration[28020-28026]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[28035-28046]:SimpleType[28035-28046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28051-28324]:Block[28051-28324]"
  }, {
    "left" : "if ((_outputTail + 23) >= _outputEnd)",
    "right" : "if ((_outputTail + 23) >= _outputEnd)",
    "info" : "IfStatement[28061-28138]:IfStatement[28061-28138]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28099-28138]:Block[28099-28138]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[28113-28128]:ExpressionStatement[28113-28128]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[28147-28189]:ExpressionStatement[28147-28189]"
  }, {
    "left" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
    "right" : "_outputTail = NumberOutput.outputLong(l, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[28198-28267]:ExpressionStatement[28198-28267]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[28276-28318]:ExpressionStatement[28276-28318]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[28330-28339]:MarkerAnnotation[28330-28339]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28344-28350]:Modifier[28344-28350]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[28351-28355]:PrimitiveType[28351-28355]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[28356-28367]:SimpleName[28356-28367]"
  }, {
    "left" : "BigInteger value",
    "right" : "BigInteger value",
    "info" : "SingleVariableDeclaration[28368-28384]:SingleVariableDeclaration[28368-28384]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[28393-28404]:SimpleType[28393-28404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28409-28669]:Block[28409-28669]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[28419-28451]:ExpressionStatement[28419-28451]"
  }, {
    "left" : "if (value == null)",
    "right" : "if (value == null)",
    "info" : "IfStatement[28460-28663]:IfStatement[28460-28663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28479-28516]:Block[28479-28516]"
  }, {
    "left" : "_writeNull();",
    "right" : "_writeNull();",
    "info" : "ExpressionStatement[28493-28506]:ExpressionStatement[28493-28506]"
  }, {
    "left" : "if (_cfgNumbersAsStrings)",
    "right" : "if (_cfgNumbersAsStrings)",
    "info" : "IfStatement[28522-28663]:IfStatement[28522-28663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28548-28606]:Block[28548-28606]"
  }, {
    "left" : "_writeQuotedRaw(value.toString());",
    "right" : "_writeQuotedRaw(value.toString());",
    "info" : "ExpressionStatement[28562-28596]:ExpressionStatement[28562-28596]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28612-28663]:Block[28612-28663]"
  }, {
    "left" : "writeRaw(value.toString());",
    "right" : "writeRaw(value.toString());",
    "info" : "ExpressionStatement[28626-28653]:ExpressionStatement[28626-28653]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[28680-28689]:MarkerAnnotation[28680-28689]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28694-28700]:Modifier[28694-28700]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[28701-28705]:PrimitiveType[28701-28705]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[28706-28717]:SimpleName[28706-28717]"
  }, {
    "left" : "double d",
    "right" : "double d",
    "info" : "SingleVariableDeclaration[28718-28726]:SingleVariableDeclaration[28718-28726]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[28735-28746]:SimpleType[28735-28746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28751-29138]:Block[28751-29138]"
  }, {
    "left" : "if (_cfgNumbersAsStrings ||\n            (((Double.isNaN(d) || Double.isInfinite(d))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
    "right" : "if (_cfgNumbersAsStrings ||\n            (((Double.isNaN(d) || Double.isInfinite(d))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
    "info" : "IfStatement[28761-28997]:IfStatement[28761-28997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28922-28997]:Block[28922-28997]"
  }, {
    "left" : "writeString(String.valueOf(d));",
    "right" : "writeString(String.valueOf(d));",
    "info" : "ExpressionStatement[28936-28967]:ExpressionStatement[28936-28967]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[28980-28987]:ReturnStatement[28980-28987]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[29063-29095]:ExpressionStatement[29063-29095]"
  }, {
    "left" : "writeRaw(String.valueOf(d));",
    "right" : "writeRaw(String.valueOf(d));",
    "info" : "ExpressionStatement[29104-29132]:ExpressionStatement[29104-29132]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[29144-29153]:MarkerAnnotation[29144-29153]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29158-29164]:Modifier[29158-29164]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[29165-29169]:PrimitiveType[29165-29169]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[29170-29181]:SimpleName[29170-29181]"
  }, {
    "left" : "float f",
    "right" : "float f",
    "info" : "SingleVariableDeclaration[29182-29189]:SingleVariableDeclaration[29182-29189]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[29198-29209]:SimpleType[29198-29209]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29214-29617]:Block[29214-29617]"
  }, {
    "left" : "if (_cfgNumbersAsStrings ||\n            // [JACKSON-139]\n            (((Float.isNaN(f) || Float.isInfinite(f))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
    "right" : "if (_cfgNumbersAsStrings ||\n            // [JACKSON-139]\n            (((Float.isNaN(f) || Float.isInfinite(f))\n                && Feature.QUOTE_NON_NUMERIC_NUMBERS.enabledIn(_features))))",
    "info" : "IfStatement[29224-29487]:IfStatement[29224-29487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29412-29487]:Block[29412-29487]"
  }, {
    "left" : "writeString(String.valueOf(f));",
    "right" : "writeString(String.valueOf(f));",
    "info" : "ExpressionStatement[29426-29457]:ExpressionStatement[29426-29457]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[29470-29477]:ReturnStatement[29470-29477]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[29542-29574]:ExpressionStatement[29542-29574]"
  }, {
    "left" : "writeRaw(String.valueOf(f));",
    "right" : "writeRaw(String.valueOf(f));",
    "info" : "ExpressionStatement[29583-29611]:ExpressionStatement[29583-29611]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[29623-29632]:MarkerAnnotation[29623-29632]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29637-29643]:Modifier[29637-29643]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[29644-29648]:PrimitiveType[29644-29648]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[29649-29660]:SimpleName[29649-29660]"
  }, {
    "left" : "BigDecimal value",
    "right" : "BigDecimal value",
    "info" : "SingleVariableDeclaration[29661-29677]:SingleVariableDeclaration[29661-29677]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[29686-29697]:SimpleType[29686-29697]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29702-30271]:Block[29702-30038]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[29787-29819]:ExpressionStatement[29787-29819]"
  }, {
    "left" : "value == null",
    "right" : "value == null",
    "info" : "InfixExpression[29832-29845]:InfixExpression[29832-29845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29847-29884]:Block[29847-29884]"
  }, {
    "left" : "_writeNull();",
    "right" : "_writeNull();",
    "info" : "ExpressionStatement[29861-29874]:ExpressionStatement[29861-29874]"
  }, {
    "left" : "if (_cfgNumbersAsStrings)",
    "right" : "if (value == null)",
    "info" : "IfStatement[29891-30265]:IfStatement[29828-30032]"
  }, {
    "left" : "if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features))",
    "right" : "if (_cfgNumbersAsStrings)",
    "info" : "IfStatement[30092-30265]:IfStatement[29891-30032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30214-30265]:Block[29981-30032]"
  }, {
    "left" : "writeRaw(_asString(value));",
    "right" : "writeRaw(_asString(value));",
    "info" : "ExpressionStatement[30228-30255]:ExpressionStatement[29995-30022]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[30277-30286]:MarkerAnnotation[30044-30053]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30291-30297]:Modifier[30058-30064]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30298-30302]:PrimitiveType[30065-30069]"
  }, {
    "left" : "writeNumber",
    "right" : "writeNumber",
    "info" : "SimpleName[30303-30314]:SimpleName[30070-30081]"
  }, {
    "left" : "String encodedValue",
    "right" : "String encodedValue",
    "info" : "SingleVariableDeclaration[30315-30334]:SingleVariableDeclaration[30082-30101]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[30343-30354]:SimpleType[30110-30121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30359-30561]:Block[30126-30328]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NUMBER);",
    "right" : "_verifyValueWrite(WRITE_NUMBER);",
    "info" : "ExpressionStatement[30369-30401]:ExpressionStatement[30136-30168]"
  }, {
    "left" : "if (_cfgNumbersAsStrings)",
    "right" : "if (_cfgNumbersAsStrings)",
    "info" : "IfStatement[30410-30555]:IfStatement[30177-30322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30436-30502]:Block[30203-30269]"
  }, {
    "left" : "_writeQuotedRaw(encodedValue);",
    "right" : "_writeQuotedRaw(encodedValue);",
    "info" : "ExpressionStatement[30450-30480]:ExpressionStatement[30217-30247]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30508-30555]:Block[30275-30322]"
  }, {
    "left" : "writeRaw(encodedValue);",
    "right" : "writeRaw(encodedValue);",
    "info" : "ExpressionStatement[30522-30545]:ExpressionStatement[30289-30312]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[30567-30574]:Modifier[30334-30341]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[30575-30580]:Modifier[30342-30347]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30581-30585]:PrimitiveType[30348-30352]"
  }, {
    "left" : "_writeQuotedRaw",
    "right" : "_writeQuotedRaw",
    "info" : "SimpleName[30586-30601]:SimpleName[30353-30368]"
  }, {
    "left" : "String value",
    "right" : "String value",
    "info" : "SingleVariableDeclaration[30602-30614]:SingleVariableDeclaration[30369-30381]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[30623-30634]:SimpleType[30390-30401]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30639-30931]:Block[30406-30698]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[30649-30719]:IfStatement[30416-30486]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30680-30719]:Block[30447-30486]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[30694-30709]:ExpressionStatement[30461-30476]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[30728-30770]:ExpressionStatement[30495-30537]"
  }, {
    "left" : "writeRaw(value);",
    "right" : "writeRaw(value);",
    "info" : "ExpressionStatement[30779-30795]:ExpressionStatement[30546-30562]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[30804-30874]:IfStatement[30571-30641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30835-30874]:Block[30602-30641]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[30849-30864]:ExpressionStatement[30616-30631]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[30883-30925]:ExpressionStatement[30650-30692]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[30941-30950]:MarkerAnnotation[30708-30717]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30955-30961]:Modifier[30722-30728]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30962-30966]:PrimitiveType[30729-30733]"
  }, {
    "left" : "writeBoolean",
    "right" : "writeBoolean",
    "info" : "SimpleName[30967-30979]:SimpleName[30734-30746]"
  }, {
    "left" : "boolean state",
    "right" : "boolean state",
    "info" : "SingleVariableDeclaration[30980-30993]:SingleVariableDeclaration[30747-30760]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[31002-31013]:SimpleType[30769-30780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31018-31344]:Block[30785-31111]"
  }, {
    "left" : "_verifyValueWrite(WRITE_BOOLEAN);",
    "right" : "_verifyValueWrite(WRITE_BOOLEAN);",
    "info" : "ExpressionStatement[31028-31061]:ExpressionStatement[30795-30828]"
  }, {
    "left" : "if ((_outputTail + 5) >= _outputEnd)",
    "right" : "if ((_outputTail + 5) >= _outputEnd)",
    "info" : "IfStatement[31070-31146]:IfStatement[30837-30913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31107-31146]:Block[30874-30913]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[31121-31136]:ExpressionStatement[30888-30903]"
  }, {
    "left" : "byte[] keyword = state ? TRUE_BYTES : FALSE_BYTES;",
    "right" : "byte[] keyword = state ? TRUE_BYTES : FALSE_BYTES;",
    "info" : "VariableDeclarationStatement[31155-31205]:VariableDeclarationStatement[30922-30972]"
  }, {
    "left" : "int len = keyword.length;",
    "right" : "int len = keyword.length;",
    "info" : "VariableDeclarationStatement[31214-31239]:VariableDeclarationStatement[30981-31006]"
  }, {
    "left" : "System.arraycopy(keyword, 0, _outputBuffer, _outputTail, len);",
    "right" : "System.arraycopy(keyword, 0, _outputBuffer, _outputTail, len);",
    "info" : "ExpressionStatement[31248-31310]:ExpressionStatement[31015-31077]"
  }, {
    "left" : "_outputTail += len;",
    "right" : "_outputTail += len;",
    "info" : "ExpressionStatement[31319-31338]:ExpressionStatement[31086-31105]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[31350-31359]:MarkerAnnotation[31117-31126]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31364-31370]:Modifier[31131-31137]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31371-31375]:PrimitiveType[31138-31142]"
  }, {
    "left" : "writeNull",
    "right" : "writeNull",
    "info" : "SimpleName[31376-31385]:SimpleName[31143-31152]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[31395-31406]:SimpleType[31162-31173]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31411-31479]:Block[31178-31246]"
  }, {
    "left" : "_verifyValueWrite(WRITE_NULL);",
    "right" : "_verifyValueWrite(WRITE_NULL);",
    "info" : "ExpressionStatement[31421-31451]:ExpressionStatement[31188-31218]"
  }, {
    "left" : "_writeNull();",
    "right" : "_writeNull();",
    "info" : "ExpressionStatement[31460-31473]:ExpressionStatement[31227-31240]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[31670-31679]:MarkerAnnotation[31437-31446]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[31684-31693]:Modifier[31451-31460]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[31694-31699]:Modifier[31461-31466]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31700-31704]:PrimitiveType[31467-31471]"
  }, {
    "left" : "_verifyValueWrite",
    "right" : "_verifyValueWrite",
    "info" : "SimpleName[31705-31722]:SimpleName[31472-31489]"
  }, {
    "left" : "String typeMsg",
    "right" : "String typeMsg",
    "info" : "SingleVariableDeclaration[31723-31737]:SingleVariableDeclaration[31490-31504]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[31746-31757]:SimpleType[31513-31524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31762-33035]:Block[31529-32802]"
  }, {
    "left" : "int status = _writeContext.writeValue();",
    "right" : "int status = _writeContext.writeValue();",
    "info" : "VariableDeclarationStatement[31772-31812]:VariableDeclarationStatement[31539-31579]"
  }, {
    "left" : "if (status == JsonWriteContext.STATUS_EXPECT_NAME)",
    "right" : "if (status == JsonWriteContext.STATUS_EXPECT_NAME)",
    "info" : "IfStatement[31821-31954]:IfStatement[31588-31721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31872-31954]:Block[31639-31721]"
  }, {
    "left" : "_reportError(\"Can not \"+typeMsg+\", expecting field name\");",
    "right" : "_reportError(\"Can not \"+typeMsg+\", expecting field name\");",
    "info" : "ExpressionStatement[31886-31944]:ExpressionStatement[31653-31711]"
  }, {
    "left" : "if (_cfgPrettyPrinter == null)",
    "right" : "if (_cfgPrettyPrinter == null)",
    "info" : "IfStatement[31963-32922]:IfStatement[31730-32689]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31994-32922]:Block[31761-32689]"
  }, {
    "left" : "byte b;",
    "right" : "byte b;",
    "info" : "VariableDeclarationStatement[32008-32015]:VariableDeclarationStatement[31775-31782]"
  }, {
    "left" : "switch (status) {\n            case JsonWriteContext.STATUS_OK_AFTER_COMMA:\n                b = BYTE_COMMA;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_COLON:\n                b = BYTE_COLON;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_SPACE: // root-value separator\n                if (_rootValueSeparator != null) {\n                    byte[] raw = _rootValueSeparator.asUnquotedUTF8();\n                    if (raw.length > 0) {\n                        _writeBytes(raw);\n                    }\n                }\n                return;\n            case JsonWriteContext.STATUS_OK_AS_IS:\n            default:\n                return;\n            }",
    "right" : "switch (status) {\n            case JsonWriteContext.STATUS_OK_AFTER_COMMA:\n                b = BYTE_COMMA;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_COLON:\n                b = BYTE_COLON;\n                break;\n            case JsonWriteContext.STATUS_OK_AFTER_SPACE: // root-value separator\n                if (_rootValueSeparator != null) {\n                    byte[] raw = _rootValueSeparator.asUnquotedUTF8();\n                    if (raw.length > 0) {\n                        _writeBytes(raw);\n                    }\n                }\n                return;\n            case JsonWriteContext.STATUS_OK_AS_IS:\n            default:\n                return;\n            }",
    "info" : "SwitchStatement[32028-32730]:SwitchStatement[31795-32497]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
    "right" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
    "info" : "SwitchCase[32058-32102]:SwitchCase[31825-31869]"
  }, {
    "left" : "b = BYTE_COMMA;",
    "right" : "b = BYTE_COMMA;",
    "info" : "ExpressionStatement[32119-32134]:ExpressionStatement[31886-31901]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[32151-32157]:BreakStatement[31918-31924]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
    "right" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
    "info" : "SwitchCase[32170-32214]:SwitchCase[31937-31981]"
  }, {
    "left" : "b = BYTE_COLON;",
    "right" : "b = BYTE_COLON;",
    "info" : "ExpressionStatement[32231-32246]:ExpressionStatement[31998-32013]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[32263-32269]:BreakStatement[32030-32036]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
    "right" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
    "info" : "SwitchCase[32282-32326]:SwitchCase[32049-32093]"
  }, {
    "left" : "if (_rootValueSeparator != null)",
    "right" : "if (_rootValueSeparator != null)",
    "info" : "IfStatement[32367-32596]:IfStatement[32134-32363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32400-32596]:Block[32167-32363]"
  }, {
    "left" : "byte[] raw = _rootValueSeparator.asUnquotedUTF8();",
    "right" : "byte[] raw = _rootValueSeparator.asUnquotedUTF8();",
    "info" : "VariableDeclarationStatement[32422-32472]:VariableDeclarationStatement[32189-32239]"
  }, {
    "left" : "if (raw.length > 0)",
    "right" : "if (raw.length > 0)",
    "info" : "IfStatement[32493-32578]:IfStatement[32260-32345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32513-32578]:Block[32280-32345]"
  }, {
    "left" : "_writeBytes(raw);",
    "right" : "_writeBytes(raw);",
    "info" : "ExpressionStatement[32539-32556]:ExpressionStatement[32306-32323]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[32613-32620]:ReturnStatement[32380-32387]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AS_IS:",
    "right" : "case JsonWriteContext.STATUS_OK_AS_IS:",
    "info" : "SwitchCase[32633-32671]:SwitchCase[32400-32438]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[32684-32692]:SwitchCase[32451-32459]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[32709-32716]:ReturnStatement[32476-32483]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[32743-32821]:IfStatement[32510-32588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32774-32821]:Block[32541-32588]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[32792-32807]:ExpressionStatement[32559-32574]"
  }, {
    "left" : "_outputBuffer[_outputTail] = b;",
    "right" : "_outputBuffer[_outputTail] = b;",
    "info" : "ExpressionStatement[32834-32865]:ExpressionStatement[32601-32632]"
  }, {
    "left" : "++_outputTail;",
    "right" : "++_outputTail;",
    "info" : "ExpressionStatement[32878-32892]:ExpressionStatement[32645-32659]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[32905-32912]:ReturnStatement[32672-32679]"
  }, {
    "left" : "_verifyPrettyValueWrite(typeMsg, status);",
    "right" : "_verifyPrettyValueWrite(typeMsg, status);",
    "info" : "ExpressionStatement[32988-33029]:ExpressionStatement[32755-32796]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[33041-33050]:Modifier[32808-32817]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[33051-33056]:Modifier[32818-32823]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[33057-33061]:PrimitiveType[32824-32828]"
  }, {
    "left" : "_verifyPrettyValueWrite",
    "right" : "_verifyPrettyValueWrite",
    "info" : "SimpleName[33062-33085]:SimpleName[32829-32852]"
  }, {
    "left" : "String typeMsg",
    "right" : "String typeMsg",
    "info" : "SingleVariableDeclaration[33086-33100]:SingleVariableDeclaration[32853-32867]"
  }, {
    "left" : "int status",
    "right" : "int status",
    "info" : "SingleVariableDeclaration[33102-33112]:SingleVariableDeclaration[32869-32879]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[33121-33132]:SimpleType[32888-32899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33137-34067]:Block[32904-33834]"
  }, {
    "left" : "switch (status) {\n        case JsonWriteContext.STATUS_OK_AFTER_COMMA: // array\n            _cfgPrettyPrinter.writeArrayValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_COLON:\n            _cfgPrettyPrinter.writeObjectFieldValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_SPACE:\n            _cfgPrettyPrinter.writeRootValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AS_IS:\n            // First entry, but of which context?\n            if (_writeContext.inArray()) {\n                _cfgPrettyPrinter.beforeArrayValues(this);\n            } else if (_writeContext.inObject()) {\n                _cfgPrettyPrinter.beforeObjectEntries(this);\n            }\n            break;\n        default:\n            _throwInternal();\n            break;\n        }",
    "right" : "switch (status) {\n        case JsonWriteContext.STATUS_OK_AFTER_COMMA: // array\n            _cfgPrettyPrinter.writeArrayValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_COLON:\n            _cfgPrettyPrinter.writeObjectFieldValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AFTER_SPACE:\n            _cfgPrettyPrinter.writeRootValueSeparator(this);\n            break;\n        case JsonWriteContext.STATUS_OK_AS_IS:\n            // First entry, but of which context?\n            if (_writeContext.inArray()) {\n                _cfgPrettyPrinter.beforeArrayValues(this);\n            } else if (_writeContext.inObject()) {\n                _cfgPrettyPrinter.beforeObjectEntries(this);\n            }\n            break;\n        default:\n            _throwInternal();\n            break;\n        }",
    "info" : "SwitchStatement[33208-34061]:SwitchStatement[32975-33828]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
    "right" : "case JsonWriteContext.STATUS_OK_AFTER_COMMA:",
    "info" : "SwitchCase[33234-33278]:SwitchCase[33001-33045]"
  }, {
    "left" : "_cfgPrettyPrinter.writeArrayValueSeparator(this);",
    "right" : "_cfgPrettyPrinter.writeArrayValueSeparator(this);",
    "info" : "ExpressionStatement[33300-33349]:ExpressionStatement[33067-33116]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[33362-33368]:BreakStatement[33129-33135]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
    "right" : "case JsonWriteContext.STATUS_OK_AFTER_COLON:",
    "info" : "SwitchCase[33377-33421]:SwitchCase[33144-33188]"
  }, {
    "left" : "_cfgPrettyPrinter.writeObjectFieldValueSeparator(this);",
    "right" : "_cfgPrettyPrinter.writeObjectFieldValueSeparator(this);",
    "info" : "ExpressionStatement[33434-33489]:ExpressionStatement[33201-33256]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[33502-33508]:BreakStatement[33269-33275]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
    "right" : "case JsonWriteContext.STATUS_OK_AFTER_SPACE:",
    "info" : "SwitchCase[33517-33561]:SwitchCase[33284-33328]"
  }, {
    "left" : "_cfgPrettyPrinter.writeRootValueSeparator(this);",
    "right" : "_cfgPrettyPrinter.writeRootValueSeparator(this);",
    "info" : "ExpressionStatement[33574-33622]:ExpressionStatement[33341-33389]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[33635-33641]:BreakStatement[33402-33408]"
  }, {
    "left" : "case JsonWriteContext.STATUS_OK_AS_IS:",
    "right" : "case JsonWriteContext.STATUS_OK_AS_IS:",
    "info" : "SwitchCase[33650-33688]:SwitchCase[33417-33455]"
  }, {
    "left" : "if (_writeContext.inArray())",
    "right" : "if (_writeContext.inArray())",
    "info" : "IfStatement[33751-33966]:IfStatement[33518-33733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33780-33854]:Block[33547-33621]"
  }, {
    "left" : "_cfgPrettyPrinter.beforeArrayValues(this);",
    "right" : "_cfgPrettyPrinter.beforeArrayValues(this);",
    "info" : "ExpressionStatement[33798-33840]:ExpressionStatement[33565-33607]"
  }, {
    "left" : "if (_writeContext.inObject())",
    "right" : "if (_writeContext.inObject())",
    "info" : "IfStatement[33860-33966]:IfStatement[33627-33733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33890-33966]:Block[33657-33733]"
  }, {
    "left" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
    "right" : "_cfgPrettyPrinter.beforeObjectEntries(this);",
    "info" : "ExpressionStatement[33908-33952]:ExpressionStatement[33675-33719]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[33979-33985]:BreakStatement[33746-33752]"
  }, {
    "left" : "default:",
    "right" : "default:",
    "info" : "SwitchCase[33994-34002]:SwitchCase[33761-33769]"
  }, {
    "left" : "_throwInternal();",
    "right" : "_throwInternal();",
    "info" : "ExpressionStatement[34015-34032]:ExpressionStatement[33782-33799]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[34045-34051]:BreakStatement[33812-33818]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[34250-34259]:MarkerAnnotation[34017-34026]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34264-34270]:Modifier[34031-34037]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[34271-34275]:PrimitiveType[34038-34042]"
  }, {
    "left" : "flush",
    "right" : "flush",
    "info" : "SimpleName[34276-34281]:SimpleName[34043-34048]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[34291-34302]:SimpleType[34058-34069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34307-34499]:Block[34074-34266]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[34317-34332]:ExpressionStatement[34084-34099]"
  }, {
    "left" : "if (_outputStream != null)",
    "right" : "if (_outputStream != null)",
    "info" : "IfStatement[34341-34493]:IfStatement[34108-34260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34368-34493]:Block[34135-34260]"
  }, {
    "left" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
    "right" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
    "info" : "IfStatement[34382-34483]:IfStatement[34149-34250]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34429-34483]:Block[34196-34250]"
  }, {
    "left" : "_outputStream.flush();",
    "right" : "_outputStream.flush();",
    "info" : "ExpressionStatement[34447-34469]:ExpressionStatement[34214-34236]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[34505-34514]:MarkerAnnotation[34272-34281]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34519-34525]:Modifier[34286-34292]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[34526-34530]:PrimitiveType[34293-34297]"
  }, {
    "left" : "close",
    "right" : "close",
    "info" : "SimpleName[34531-34536]:SimpleName[34298-34303]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[34546-34557]:SimpleType[34313-34324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34562-36104]:Block[34329-35871]"
  }, {
    "left" : "super.close();",
    "right" : "super.close();",
    "info" : "ExpressionStatement[34572-34586]:ExpressionStatement[34339-34353]"
  }, {
    "left" : "if ((_outputBuffer != null)\n            && isEnabled(Feature.AUTO_CLOSE_JSON_CONTENT))",
    "right" : "if ((_outputBuffer != null)\n            && isEnabled(Feature.AUTO_CLOSE_JSON_CONTENT))",
    "info" : "IfStatement[34757-35186]:IfStatement[34524-34953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34844-35186]:Block[34611-34953]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[34858-35176]:WhileStatement[34625-34943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34871-35176]:Block[34638-34943]"
  }, {
    "left" : "JsonStreamContext ctxt = getOutputContext();",
    "right" : "JsonStreamContext ctxt = getOutputContext();",
    "info" : "VariableDeclarationStatement[34889-34933]:VariableDeclarationStatement[34656-34700]"
  }, {
    "left" : "if (ctxt.inArray())",
    "right" : "if (ctxt.inArray())",
    "info" : "IfStatement[34950-35162]:IfStatement[34717-34929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34970-35026]:Block[34737-34793]"
  }, {
    "left" : "writeEndArray();",
    "right" : "writeEndArray();",
    "info" : "ExpressionStatement[34992-35008]:ExpressionStatement[34759-34775]"
  }, {
    "left" : "if (ctxt.inObject())",
    "right" : "if (ctxt.inObject())",
    "info" : "IfStatement[35032-35162]:IfStatement[34799-34929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35053-35110]:Block[34820-34877]"
  }, {
    "left" : "writeEndObject();",
    "right" : "writeEndObject();",
    "info" : "ExpressionStatement[35075-35092]:ExpressionStatement[34842-34859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35116-35162]:Block[34883-34929]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[35138-35144]:BreakStatement[34905-34911]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[35195-35210]:ExpressionStatement[34962-34977]"
  }, {
    "left" : "_outputTail = 0;",
    "right" : "_outputTail = 0;",
    "info" : "ExpressionStatement[35219-35235]:ExpressionStatement[34986-35002]"
  }, {
    "left" : "if (_outputStream != null)",
    "right" : "if (_outputStream != null)",
    "info" : "IfStatement[35645-35999]:IfStatement[35412-35766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35672-35999]:Block[35439-35766]"
  }, {
    "left" : "if (_ioContext.isResourceManaged() || isEnabled(Feature.AUTO_CLOSE_TARGET))",
    "right" : "if (_ioContext.isResourceManaged() || isEnabled(Feature.AUTO_CLOSE_TARGET))",
    "info" : "IfStatement[35686-35989]:IfStatement[35453-35756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35762-35816]:Block[35529-35583]"
  }, {
    "left" : "_outputStream.close();",
    "right" : "_outputStream.close();",
    "info" : "ExpressionStatement[35780-35802]:ExpressionStatement[35547-35569]"
  }, {
    "left" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
    "right" : "if (isEnabled(Feature.FLUSH_PASSED_TO_STREAM))",
    "info" : "IfStatement[35822-35989]:IfStatement[35589-35756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35869-35989]:Block[35636-35756]"
  }, {
    "left" : "_outputStream.flush();",
    "right" : "_outputStream.flush();",
    "info" : "ExpressionStatement[35953-35975]:ExpressionStatement[35720-35742]"
  }, {
    "left" : "_releaseBuffers();",
    "right" : "_releaseBuffers();",
    "info" : "ExpressionStatement[36080-36098]:ExpressionStatement[35847-35865]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[36110-36119]:MarkerAnnotation[35877-35886]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[36124-36133]:Modifier[35891-35900]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[36134-36138]:PrimitiveType[35901-35905]"
  }, {
    "left" : "_releaseBuffers",
    "right" : "_releaseBuffers",
    "info" : "SimpleName[36139-36154]:SimpleName[35906-35921]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36161-36507]:Block[35928-36274]"
  }, {
    "left" : "byte[] buf = _outputBuffer;",
    "right" : "byte[] buf = _outputBuffer;",
    "info" : "VariableDeclarationStatement[36171-36198]:VariableDeclarationStatement[35938-35965]"
  }, {
    "left" : "if (buf != null && _bufferRecyclable)",
    "right" : "if (buf != null && _bufferRecyclable)",
    "info" : "IfStatement[36207-36346]:IfStatement[35974-36113]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36245-36346]:Block[36012-36113]"
  }, {
    "left" : "_outputBuffer = null;",
    "right" : "_outputBuffer = null;",
    "info" : "ExpressionStatement[36259-36280]:ExpressionStatement[36026-36047]"
  }, {
    "left" : "_ioContext.releaseWriteEncodingBuffer(buf);",
    "right" : "_ioContext.releaseWriteEncodingBuffer(buf);",
    "info" : "ExpressionStatement[36293-36336]:ExpressionStatement[36060-36103]"
  }, {
    "left" : "char[] cbuf = _charBuffer;",
    "right" : "char[] cbuf = _charBuffer;",
    "info" : "VariableDeclarationStatement[36355-36381]:VariableDeclarationStatement[36122-36148]"
  }, {
    "left" : "if (cbuf != null)",
    "right" : "if (cbuf != null)",
    "info" : "IfStatement[36390-36501]:IfStatement[36157-36268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36408-36501]:Block[36175-36268]"
  }, {
    "left" : "_charBuffer = null;",
    "right" : "_charBuffer = null;",
    "info" : "ExpressionStatement[36422-36441]:ExpressionStatement[36189-36208]"
  }, {
    "left" : "_ioContext.releaseConcatBuffer(cbuf);",
    "right" : "_ioContext.releaseConcatBuffer(cbuf);",
    "info" : "ExpressionStatement[36454-36491]:ExpressionStatement[36221-36258]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[36711-36718]:Modifier[36478-36485]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[36719-36724]:Modifier[36486-36491]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[36725-36729]:PrimitiveType[36492-36496]"
  }, {
    "left" : "_writeBytes",
    "right" : "_writeBytes",
    "info" : "SimpleName[36730-36741]:SimpleName[36497-36508]"
  }, {
    "left" : "byte[] bytes",
    "right" : "byte[] bytes",
    "info" : "SingleVariableDeclaration[36742-36754]:SingleVariableDeclaration[36509-36521]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[36763-36774]:SimpleType[36530-36541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36779-37175]:Block[36546-36942]"
  }, {
    "left" : "final int len = bytes.length;",
    "right" : "final int len = bytes.length;",
    "info" : "VariableDeclarationStatement[36789-36818]:VariableDeclarationStatement[36556-36585]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[36827-37072]:IfStatement[36594-36839]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36865-37072]:Block[36632-36839]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[36879-36894]:ExpressionStatement[36646-36661]"
  }, {
    "left" : "if (len > MAX_BYTES_TO_BUFFER)",
    "right" : "if (len > MAX_BYTES_TO_BUFFER)",
    "info" : "IfStatement[36940-37062]:IfStatement[36707-36829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36971-37062]:Block[36738-36829]"
  }, {
    "left" : "_outputStream.write(bytes, 0, len);",
    "right" : "_outputStream.write(bytes, 0, len);",
    "info" : "ExpressionStatement[36989-37024]:ExpressionStatement[36756-36791]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[37041-37048]:ReturnStatement[36808-36815]"
  }, {
    "left" : "System.arraycopy(bytes, 0, _outputBuffer, _outputTail, len);",
    "right" : "System.arraycopy(bytes, 0, _outputBuffer, _outputTail, len);",
    "info" : "ExpressionStatement[37081-37141]:ExpressionStatement[36848-36908]"
  }, {
    "left" : "_outputTail += len;",
    "right" : "_outputTail += len;",
    "info" : "ExpressionStatement[37150-37169]:ExpressionStatement[36917-36936]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37181-37188]:Modifier[36948-36955]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[37189-37194]:Modifier[36956-36961]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[37195-37199]:PrimitiveType[36962-36966]"
  }, {
    "left" : "_writeBytes",
    "right" : "_writeBytes",
    "info" : "SimpleName[37200-37211]:SimpleName[36967-36978]"
  }, {
    "left" : "byte[] bytes",
    "right" : "byte[] bytes",
    "info" : "SingleVariableDeclaration[37212-37224]:SingleVariableDeclaration[36979-36991]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[37226-37236]:SingleVariableDeclaration[36993-37003]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[37238-37245]:SingleVariableDeclaration[37005-37012]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[37254-37265]:SimpleType[37021-37032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37270-37638]:Block[37037-37405]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[37280-37530]:IfStatement[37047-37297]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37318-37530]:Block[37085-37297]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[37332-37347]:ExpressionStatement[37099-37114]"
  }, {
    "left" : "if (len > MAX_BYTES_TO_BUFFER)",
    "right" : "if (len > MAX_BYTES_TO_BUFFER)",
    "info" : "IfStatement[37393-37520]:IfStatement[37160-37287]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37424-37520]:Block[37191-37287]"
  }, {
    "left" : "_outputStream.write(bytes, offset, len);",
    "right" : "_outputStream.write(bytes, offset, len);",
    "info" : "ExpressionStatement[37442-37482]:ExpressionStatement[37209-37249]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[37499-37506]:ReturnStatement[37266-37273]"
  }, {
    "left" : "System.arraycopy(bytes, offset, _outputBuffer, _outputTail, len);",
    "right" : "System.arraycopy(bytes, offset, _outputBuffer, _outputTail, len);",
    "info" : "ExpressionStatement[37539-37604]:ExpressionStatement[37306-37371]"
  }, {
    "left" : "_outputTail += len;",
    "right" : "_outputTail += len;",
    "info" : "ExpressionStatement[37613-37632]:ExpressionStatement[37380-37399]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[38165-38172]:Modifier[37932-37939]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[38173-38178]:Modifier[37940-37945]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[38179-38183]:PrimitiveType[37946-37950]"
  }, {
    "left" : "_writeStringSegments",
    "right" : "_writeStringSegments",
    "info" : "SimpleName[38184-38204]:SimpleName[37951-37971]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[38205-38216]:SingleVariableDeclaration[37972-37983]"
  }, {
    "left" : "boolean addQuotes",
    "right" : "boolean addQuotes",
    "info" : "SingleVariableDeclaration[38218-38235]:SingleVariableDeclaration[37985-38002]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[38244-38255]:SimpleType[38011-38022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38260-39032]:Block[38027-38799]"
  }, {
    "left" : "if (addQuotes)",
    "right" : "if (addQuotes)",
    "info" : "IfStatement[38270-38450]:IfStatement[38037-38217]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38285-38450]:Block[38052-38217]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[38299-38377]:IfStatement[38066-38144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38330-38377]:Block[38097-38144]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[38348-38363]:ExpressionStatement[38115-38130]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[38390-38432]:ExpressionStatement[38157-38199]"
  }, {
    "left" : "int left = text.length();",
    "right" : "int left = text.length();",
    "info" : "VariableDeclarationStatement[38460-38485]:VariableDeclarationStatement[38227-38252]"
  }, {
    "left" : "int offset = 0;",
    "right" : "int offset = 0;",
    "info" : "VariableDeclarationStatement[38494-38509]:VariableDeclarationStatement[38261-38276]"
  }, {
    "left" : "while (left > 0)",
    "right" : "while (left > 0)",
    "info" : "WhileStatement[38519-38844]:WhileStatement[38286-38611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38536-38844]:Block[38303-38611]"
  }, {
    "left" : "int len = Math.min(_outputMaxContiguous, left);",
    "right" : "int len = Math.min(_outputMaxContiguous, left);",
    "info" : "VariableDeclarationStatement[38550-38597]:VariableDeclarationStatement[38317-38364]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[38610-38730]:IfStatement[38377-38497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38648-38730]:Block[38415-38497]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[38701-38716]:ExpressionStatement[38468-38483]"
  }, {
    "left" : "_writeStringSegment(text, offset, len);",
    "right" : "_writeStringSegment(text, offset, len);",
    "info" : "ExpressionStatement[38743-38782]:ExpressionStatement[38510-38549]"
  }, {
    "left" : "offset += len;",
    "right" : "offset += len;",
    "info" : "ExpressionStatement[38795-38809]:ExpressionStatement[38562-38576]"
  }, {
    "left" : "left -= len;",
    "right" : "left -= len;",
    "info" : "ExpressionStatement[38822-38834]:ExpressionStatement[38589-38601]"
  }, {
    "left" : "if (addQuotes)",
    "right" : "if (addQuotes)",
    "info" : "IfStatement[38854-39026]:IfStatement[38621-38793]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38869-39026]:Block[38636-38793]"
  }, {
    "left" : "if (_outputTail >= _outputEnd)",
    "right" : "if (_outputTail >= _outputEnd)",
    "info" : "IfStatement[38883-38961]:IfStatement[38650-38728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38914-38961]:Block[38681-38728]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[38932-38947]:ExpressionStatement[38699-38714]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "right" : "_outputBuffer[_outputTail++] = BYTE_QUOTE;",
    "info" : "ExpressionStatement[38974-39016]:ExpressionStatement[38741-38783]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[39305-39312]:Modifier[39072-39079]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[39313-39318]:Modifier[39080-39085]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[39319-39323]:PrimitiveType[39086-39090]"
  }, {
    "left" : "_writeStringSegments",
    "right" : "_writeStringSegments",
    "info" : "SimpleName[39324-39344]:SimpleName[39091-39111]"
  }, {
    "left" : "char[] cbuf",
    "right" : "char[] cbuf",
    "info" : "SingleVariableDeclaration[39345-39356]:SingleVariableDeclaration[39112-39123]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[39358-39368]:SingleVariableDeclaration[39125-39135]"
  }, {
    "left" : "int totalLen",
    "right" : "int totalLen",
    "info" : "SingleVariableDeclaration[39370-39382]:SingleVariableDeclaration[39137-39149]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[39391-39402]:SimpleType[39158-39169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39407-39764]:Block[39174-39531]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[39417-39758]:DoStatement[39184-39525]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39420-39736]:Block[39187-39503]"
  }, {
    "left" : "int len = Math.min(_outputMaxContiguous, totalLen);",
    "right" : "int len = Math.min(_outputMaxContiguous, totalLen);",
    "info" : "VariableDeclarationStatement[39434-39485]:VariableDeclarationStatement[39201-39252]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[39498-39618]:IfStatement[39265-39385]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39536-39618]:Block[39303-39385]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[39589-39604]:ExpressionStatement[39356-39371]"
  }, {
    "left" : "_writeStringSegment(cbuf, offset, len);",
    "right" : "_writeStringSegment(cbuf, offset, len);",
    "info" : "ExpressionStatement[39631-39670]:ExpressionStatement[39398-39437]"
  }, {
    "left" : "offset += len;",
    "right" : "offset += len;",
    "info" : "ExpressionStatement[39683-39697]:ExpressionStatement[39450-39464]"
  }, {
    "left" : "totalLen -= len;",
    "right" : "totalLen -= len;",
    "info" : "ExpressionStatement[39710-39726]:ExpressionStatement[39477-39493]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[39770-39777]:Modifier[39537-39544]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[39778-39783]:Modifier[39545-39550]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[39784-39788]:PrimitiveType[39551-39555]"
  }, {
    "left" : "_writeStringSegments",
    "right" : "_writeStringSegments",
    "info" : "SimpleName[39789-39809]:SimpleName[39556-39576]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[39810-39821]:SingleVariableDeclaration[39577-39588]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[39823-39833]:SingleVariableDeclaration[39590-39600]"
  }, {
    "left" : "int totalLen",
    "right" : "int totalLen",
    "info" : "SingleVariableDeclaration[39835-39847]:SingleVariableDeclaration[39602-39614]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[39856-39867]:SimpleType[39623-39634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39872-40229]:Block[39639-39996]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[39882-40223]:DoStatement[39649-39990]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39885-40201]:Block[39652-39968]"
  }, {
    "left" : "int len = Math.min(_outputMaxContiguous, totalLen);",
    "right" : "int len = Math.min(_outputMaxContiguous, totalLen);",
    "info" : "VariableDeclarationStatement[39899-39950]:VariableDeclarationStatement[39666-39717]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[39963-40083]:IfStatement[39730-39850]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40001-40083]:Block[39768-39850]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[40054-40069]:ExpressionStatement[39821-39836]"
  }, {
    "left" : "_writeStringSegment(text, offset, len);",
    "right" : "_writeStringSegment(text, offset, len);",
    "info" : "ExpressionStatement[40096-40135]:ExpressionStatement[39863-39902]"
  }, {
    "left" : "offset += len;",
    "right" : "offset += len;",
    "info" : "ExpressionStatement[40148-40162]:ExpressionStatement[39915-39929]"
  }, {
    "left" : "totalLen -= len;",
    "right" : "totalLen -= len;",
    "info" : "ExpressionStatement[40175-40191]:ExpressionStatement[39942-39958]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[40855-40862]:Modifier[40622-40629]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[40863-40868]:Modifier[40630-40635]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40869-40873]:PrimitiveType[40636-40640]"
  }, {
    "left" : "_writeStringSegment",
    "right" : "_writeStringSegment",
    "info" : "SimpleName[40874-40893]:SimpleName[40641-40660]"
  }, {
    "left" : "char[] cbuf",
    "right" : "char[] cbuf",
    "info" : "SingleVariableDeclaration[40894-40905]:SingleVariableDeclaration[40661-40672]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[40907-40917]:SingleVariableDeclaration[40674-40684]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[40919-40926]:SingleVariableDeclaration[40686-40693]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[40943-40954]:SimpleType[40710-40721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40959-42087]:Block[40726-41854]"
  }, {
    "left" : "len += offset;",
    "right" : "len += offset;",
    "info" : "ExpressionStatement[41126-41140]:ExpressionStatement[40893-40907]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[41178-41206]:VariableDeclarationStatement[40945-40973]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[41215-41257]:VariableDeclarationStatement[40982-41024]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[41266-41304]:VariableDeclarationStatement[41033-41071]"
  }, {
    "left" : "while (offset < len)",
    "right" : "while (offset < len)",
    "info" : "WhileStatement[41314-41635]:WhileStatement[41081-41402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41335-41635]:Block[41102-41402]"
  }, {
    "left" : "int ch = cbuf[offset];",
    "right" : "int ch = cbuf[offset];",
    "info" : "VariableDeclarationStatement[41349-41371]:VariableDeclarationStatement[41116-41138]"
  }, {
    "left" : "if (ch > 0x7F || escCodes[ch] != 0)",
    "right" : "if (ch > 0x7F || escCodes[ch] != 0)",
    "info" : "IfStatement[41478-41552]:IfStatement[41245-41319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41514-41552]:Block[41281-41319]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[41532-41538]:BreakStatement[41299-41305]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[41565-41603]:ExpressionStatement[41332-41370]"
  }, {
    "left" : "++offset;",
    "right" : "++offset;",
    "info" : "ExpressionStatement[41616-41625]:ExpressionStatement[41383-41392]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[41644-41668]:ExpressionStatement[41411-41435]"
  }, {
    "left" : "if (offset < len)",
    "right" : "if (offset < len)",
    "info" : "IfStatement[41677-42081]:IfStatement[41444-41848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41695-42081]:Block[41462-41848]"
  }, {
    "left" : "if (_characterEscapes != null)",
    "right" : "if (_characterEscapes != null)",
    "info" : "IfStatement[41738-42070]:IfStatement[41505-41837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41769-41876]:Block[41536-41643]"
  }, {
    "left" : "_writeCustomStringSegment2(cbuf, offset, len);",
    "right" : "_writeCustomStringSegment2(cbuf, offset, len);",
    "info" : "ExpressionStatement[41787-41833]:ExpressionStatement[41554-41600]"
  }, {
    "left" : "if (_maximumNonEscapedChar == 0)",
    "right" : "if (_maximumNonEscapedChar == 0)",
    "info" : "IfStatement[41882-42070]:IfStatement[41649-41837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41915-41987]:Block[41682-41754]"
  }, {
    "left" : "_writeStringSegment2(cbuf, offset, len);",
    "right" : "_writeStringSegment2(cbuf, offset, len);",
    "info" : "ExpressionStatement[41933-41973]:ExpressionStatement[41700-41740]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41993-42070]:Block[41760-41837]"
  }, {
    "left" : "_writeStringSegmentASCII2(cbuf, offset, len);",
    "right" : "_writeStringSegmentASCII2(cbuf, offset, len);",
    "info" : "ExpressionStatement[42011-42056]:ExpressionStatement[41778-41823]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[42093-42100]:Modifier[41860-41867]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[42101-42106]:Modifier[41868-41873]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42107-42111]:PrimitiveType[41874-41878]"
  }, {
    "left" : "_writeStringSegment",
    "right" : "_writeStringSegment",
    "info" : "SimpleName[42112-42131]:SimpleName[41879-41898]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[42132-42143]:SingleVariableDeclaration[41899-41910]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[42145-42155]:SingleVariableDeclaration[41912-41922]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[42157-42164]:SingleVariableDeclaration[41924-41931]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[42173-42184]:SimpleType[41940-41951]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42189-43256]:Block[41956-43023]"
  }, {
    "left" : "len += offset;",
    "right" : "len += offset;",
    "info" : "ExpressionStatement[42347-42361]:ExpressionStatement[42114-42128]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[42399-42427]:VariableDeclarationStatement[42166-42194]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[42436-42478]:VariableDeclarationStatement[42203-42245]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[42487-42525]:VariableDeclarationStatement[42254-42292]"
  }, {
    "left" : "while (offset < len)",
    "right" : "while (offset < len)",
    "info" : "WhileStatement[42535-42863]:WhileStatement[42302-42630]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42556-42863]:Block[42323-42630]"
  }, {
    "left" : "int ch = text.charAt(offset);",
    "right" : "int ch = text.charAt(offset);",
    "info" : "VariableDeclarationStatement[42570-42599]:VariableDeclarationStatement[42337-42366]"
  }, {
    "left" : "if (ch > 0x7F || escCodes[ch] != 0)",
    "right" : "if (ch > 0x7F || escCodes[ch] != 0)",
    "info" : "IfStatement[42706-42780]:IfStatement[42473-42547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42742-42780]:Block[42509-42547]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[42760-42766]:BreakStatement[42527-42533]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[42793-42831]:ExpressionStatement[42560-42598]"
  }, {
    "left" : "++offset;",
    "right" : "++offset;",
    "info" : "ExpressionStatement[42844-42853]:ExpressionStatement[42611-42620]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[42872-42896]:ExpressionStatement[42639-42663]"
  }, {
    "left" : "if (offset < len)",
    "right" : "if (offset < len)",
    "info" : "IfStatement[42905-43250]:IfStatement[42672-43017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42923-43250]:Block[42690-43017]"
  }, {
    "left" : "if (_characterEscapes != null)",
    "right" : "if (_characterEscapes != null)",
    "info" : "IfStatement[42937-43240]:IfStatement[42704-43007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42968-43046]:Block[42735-42813]"
  }, {
    "left" : "_writeCustomStringSegment2(text, offset, len);",
    "right" : "_writeCustomStringSegment2(text, offset, len);",
    "info" : "ExpressionStatement[42986-43032]:ExpressionStatement[42753-42799]"
  }, {
    "left" : "if (_maximumNonEscapedChar == 0)",
    "right" : "if (_maximumNonEscapedChar == 0)",
    "info" : "IfStatement[43052-43240]:IfStatement[42819-43007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43085-43157]:Block[42852-42924]"
  }, {
    "left" : "_writeStringSegment2(text, offset, len);",
    "right" : "_writeStringSegment2(text, offset, len);",
    "info" : "ExpressionStatement[43103-43143]:ExpressionStatement[42870-42910]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43163-43240]:Block[42930-43007]"
  }, {
    "left" : "_writeStringSegmentASCII2(text, offset, len);",
    "right" : "_writeStringSegmentASCII2(text, offset, len);",
    "info" : "ExpressionStatement[43181-43226]:ExpressionStatement[42948-42993]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[43396-43403]:Modifier[43163-43170]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[43404-43409]:Modifier[43171-43176]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[43410-43414]:PrimitiveType[43177-43181]"
  }, {
    "left" : "_writeStringSegment2",
    "right" : "_writeStringSegment2",
    "info" : "SimpleName[43415-43435]:SimpleName[43182-43202]"
  }, {
    "left" : "final char[] cbuf",
    "right" : "final char[] cbuf",
    "info" : "SingleVariableDeclaration[43436-43453]:SingleVariableDeclaration[43203-43220]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[43455-43465]:SingleVariableDeclaration[43222-43232]"
  }, {
    "left" : "final int end",
    "right" : "final int end",
    "info" : "SingleVariableDeclaration[43467-43480]:SingleVariableDeclaration[43234-43247]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[43489-43500]:SimpleType[43256-43267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43505-44884]:Block[43272-44651]"
  }, {
    "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "info" : "IfStatement[43601-43694]:IfStatement[43368-43461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43655-43694]:Block[43422-43461]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[43669-43684]:ExpressionStatement[43436-43451]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[43704-43732]:VariableDeclarationStatement[43471-43499]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[43742-43784]:VariableDeclarationStatement[43509-43551]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[43793-43831]:VariableDeclarationStatement[43560-43598]"
  }, {
    "left" : "while (offset < end)",
    "right" : "while (offset < end)",
    "info" : "WhileStatement[43849-44845]:WhileStatement[43616-44612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43870-44845]:Block[43637-44612]"
  }, {
    "left" : "int ch = cbuf[offset++];",
    "right" : "int ch = cbuf[offset++];",
    "info" : "VariableDeclarationStatement[43884-43908]:VariableDeclarationStatement[43651-43675]"
  }, {
    "left" : "if (ch <= 0x7F)",
    "right" : "if (ch <= 0x7F)",
    "info" : "IfStatement[43921-44526]:IfStatement[43688-44293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43937-44526]:Block[43704-44293]"
  }, {
    "left" : "if (escCodes[ch] == 0)",
    "right" : "if (escCodes[ch] == 0)",
    "info" : "IfStatement[43956-44090]:IfStatement[43723-43857]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43979-44090]:Block[43746-43857]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[44002-44040]:ExpressionStatement[43769-43807]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[44062-44071]:ContinueStatement[43829-43838]"
  }, {
    "left" : "int escape = escCodes[ch];",
    "right" : "int escape = escCodes[ch];",
    "info" : "VariableDeclarationStatement[44108-44134]:VariableDeclarationStatement[43875-43901]"
  }, {
    "left" : "if (escape > 0)",
    "right" : "if (escape > 0)",
    "info" : "IfStatement[44152-44486]:IfStatement[43919-44253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44168-44340]:Block[43935-44107]"
  }, {
    "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[44214-44257]:ExpressionStatement[43981-44024]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) escape;",
    "right" : "outputBuffer[outputPtr++] = (byte) escape;",
    "info" : "ExpressionStatement[44279-44321]:ExpressionStatement[44046-44088]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44346-44486]:Block[44113-44253]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[44421-44468]:ExpressionStatement[44188-44235]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[44503-44512]:ContinueStatement[44270-44279]"
  }, {
    "left" : "if (ch <= 0x7FF)",
    "right" : "if (ch <= 0x7FF)",
    "info" : "IfStatement[44539-44835]:IfStatement[44306-44602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44556-44749]:Block[44323-44516]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[44608-44662]:ExpressionStatement[44375-44429]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[44679-44735]:ExpressionStatement[44446-44502]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44755-44835]:Block[44522-44602]"
  }, {
    "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "info" : "ExpressionStatement[44773-44821]:ExpressionStatement[44540-44588]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[44854-44878]:ExpressionStatement[44621-44645]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[44890-44897]:Modifier[44657-44664]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[44898-44903]:Modifier[44665-44670]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[44904-44908]:PrimitiveType[44671-44675]"
  }, {
    "left" : "_writeStringSegment2",
    "right" : "_writeStringSegment2",
    "info" : "SimpleName[44909-44929]:SimpleName[44676-44696]"
  }, {
    "left" : "final String text",
    "right" : "final String text",
    "info" : "SingleVariableDeclaration[44930-44947]:SingleVariableDeclaration[44697-44714]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[44949-44959]:SingleVariableDeclaration[44716-44726]"
  }, {
    "left" : "final int end",
    "right" : "final int end",
    "info" : "SingleVariableDeclaration[44961-44974]:SingleVariableDeclaration[44728-44741]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[44983-44994]:SimpleType[44750-44761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44999-46299]:Block[44766-46066]"
  }, {
    "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "info" : "IfStatement[45009-45102]:IfStatement[44776-44869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45063-45102]:Block[44830-44869]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[45077-45092]:ExpressionStatement[44844-44859]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[45112-45140]:VariableDeclarationStatement[44879-44907]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[45150-45192]:VariableDeclarationStatement[44917-44959]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[45201-45239]:VariableDeclarationStatement[44968-45006]"
  }, {
    "left" : "while (offset < end)",
    "right" : "while (offset < end)",
    "info" : "WhileStatement[45257-46260]:WhileStatement[45024-46027]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45278-46260]:Block[45045-46027]"
  }, {
    "left" : "int ch = text.charAt(offset++);",
    "right" : "int ch = text.charAt(offset++);",
    "info" : "VariableDeclarationStatement[45292-45323]:VariableDeclarationStatement[45059-45090]"
  }, {
    "left" : "if (ch <= 0x7F)",
    "right" : "if (ch <= 0x7F)",
    "info" : "IfStatement[45336-45941]:IfStatement[45103-45708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45352-45941]:Block[45119-45708]"
  }, {
    "left" : "if (escCodes[ch] == 0)",
    "right" : "if (escCodes[ch] == 0)",
    "info" : "IfStatement[45371-45505]:IfStatement[45138-45272]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45394-45505]:Block[45161-45272]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[45417-45455]:ExpressionStatement[45184-45222]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[45477-45486]:ContinueStatement[45244-45253]"
  }, {
    "left" : "int escape = escCodes[ch];",
    "right" : "int escape = escCodes[ch];",
    "info" : "VariableDeclarationStatement[45523-45549]:VariableDeclarationStatement[45290-45316]"
  }, {
    "left" : "if (escape > 0)",
    "right" : "if (escape > 0)",
    "info" : "IfStatement[45567-45901]:IfStatement[45334-45668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45583-45755]:Block[45350-45522]"
  }, {
    "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[45629-45672]:ExpressionStatement[45396-45439]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) escape;",
    "right" : "outputBuffer[outputPtr++] = (byte) escape;",
    "info" : "ExpressionStatement[45694-45736]:ExpressionStatement[45461-45503]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45761-45901]:Block[45528-45668]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[45836-45883]:ExpressionStatement[45603-45650]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[45918-45927]:ContinueStatement[45685-45694]"
  }, {
    "left" : "if (ch <= 0x7FF)",
    "right" : "if (ch <= 0x7FF)",
    "info" : "IfStatement[45954-46250]:IfStatement[45721-46017]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45971-46164]:Block[45738-45931]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[46023-46077]:ExpressionStatement[45790-45844]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[46094-46150]:ExpressionStatement[45861-45917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46170-46250]:Block[45937-46017]"
  }, {
    "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "info" : "ExpressionStatement[46188-46236]:ExpressionStatement[45955-46003]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[46269-46293]:ExpressionStatement[46036-46060]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[46700-46707]:Modifier[46467-46474]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[46708-46713]:Modifier[46475-46480]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[46714-46718]:PrimitiveType[46481-46485]"
  }, {
    "left" : "_writeStringSegmentASCII2",
    "right" : "_writeStringSegmentASCII2",
    "info" : "SimpleName[46719-46744]:SimpleName[46486-46511]"
  }, {
    "left" : "final char[] cbuf",
    "right" : "final char[] cbuf",
    "info" : "SingleVariableDeclaration[46745-46762]:SingleVariableDeclaration[46512-46529]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[46764-46774]:SingleVariableDeclaration[46531-46541]"
  }, {
    "left" : "final int end",
    "right" : "final int end",
    "info" : "SingleVariableDeclaration[46776-46789]:SingleVariableDeclaration[46543-46556]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[46798-46809]:SimpleType[46565-46576]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46814-48466]:Block[46581-48233]"
  }, {
    "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "info" : "IfStatement[46910-47003]:IfStatement[46677-46770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46964-47003]:Block[46731-46770]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[46978-46993]:ExpressionStatement[46745-46760]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[47017-47045]:VariableDeclarationStatement[46784-46812]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[47059-47101]:VariableDeclarationStatement[46826-46868]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[47110-47148]:VariableDeclarationStatement[46877-46915]"
  }, {
    "left" : "final int maxUnescaped = _maximumNonEscapedChar;",
    "right" : "final int maxUnescaped = _maximumNonEscapedChar;",
    "info" : "VariableDeclarationStatement[47157-47205]:VariableDeclarationStatement[46924-46972]"
  }, {
    "left" : "while (offset < end)",
    "right" : "while (offset < end)",
    "info" : "WhileStatement[47223-48427]:WhileStatement[46990-48194]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47244-48427]:Block[47011-48194]"
  }, {
    "left" : "int ch = cbuf[offset++];",
    "right" : "int ch = cbuf[offset++];",
    "info" : "VariableDeclarationStatement[47258-47282]:VariableDeclarationStatement[47025-47049]"
  }, {
    "left" : "if (ch <= 0x7F)",
    "right" : "if (ch <= 0x7F)",
    "info" : "IfStatement[47295-47902]:IfStatement[47062-47669]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47311-47902]:Block[47078-47669]"
  }, {
    "left" : "if (escCodes[ch] == 0)",
    "right" : "if (escCodes[ch] == 0)",
    "info" : "IfStatement[47330-47464]:IfStatement[47097-47231]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47353-47464]:Block[47120-47231]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[47376-47414]:ExpressionStatement[47143-47181]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[47436-47445]:ContinueStatement[47203-47212]"
  }, {
    "left" : "int escape = escCodes[ch];",
    "right" : "int escape = escCodes[ch];",
    "info" : "VariableDeclarationStatement[47482-47508]:VariableDeclarationStatement[47249-47275]"
  }, {
    "left" : "if (escape > 0)",
    "right" : "if (escape > 0)",
    "info" : "IfStatement[47526-47861]:IfStatement[47293-47628]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47542-47714]:Block[47309-47481]"
  }, {
    "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[47588-47631]:ExpressionStatement[47355-47398]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) escape;",
    "right" : "outputBuffer[outputPtr++] = (byte) escape;",
    "info" : "ExpressionStatement[47653-47695]:ExpressionStatement[47420-47462]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47720-47861]:Block[47487-47628]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[47795-47842]:ExpressionStatement[47562-47609]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[47879-47888]:ContinueStatement[47646-47655]"
  }, {
    "left" : "if (ch > maxUnescaped)",
    "right" : "if (ch > maxUnescaped)",
    "info" : "IfStatement[47915-48108]:IfStatement[47682-47875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47938-48108]:Block[47705-47875]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[48021-48068]:ExpressionStatement[47788-47835]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[48085-48094]:ContinueStatement[47852-47861]"
  }, {
    "left" : "if (ch <= 0x7FF)",
    "right" : "if (ch <= 0x7FF)",
    "info" : "IfStatement[48121-48417]:IfStatement[47888-48184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48138-48331]:Block[47905-48098]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[48190-48244]:ExpressionStatement[47957-48011]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[48261-48317]:ExpressionStatement[48028-48084]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48337-48417]:Block[48104-48184]"
  }, {
    "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "info" : "ExpressionStatement[48355-48403]:ExpressionStatement[48122-48170]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[48436-48460]:ExpressionStatement[48203-48227]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[48472-48479]:Modifier[48239-48246]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[48480-48485]:Modifier[48247-48252]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[48486-48490]:PrimitiveType[48253-48257]"
  }, {
    "left" : "_writeStringSegmentASCII2",
    "right" : "_writeStringSegmentASCII2",
    "info" : "SimpleName[48491-48516]:SimpleName[48258-48283]"
  }, {
    "left" : "final String text",
    "right" : "final String text",
    "info" : "SingleVariableDeclaration[48517-48534]:SingleVariableDeclaration[48284-48301]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[48536-48546]:SingleVariableDeclaration[48303-48313]"
  }, {
    "left" : "final int end",
    "right" : "final int end",
    "info" : "SingleVariableDeclaration[48548-48561]:SingleVariableDeclaration[48315-48328]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[48570-48581]:SimpleType[48337-48348]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48586-50245]:Block[48353-50012]"
  }, {
    "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "info" : "IfStatement[48682-48775]:IfStatement[48449-48542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48736-48775]:Block[48503-48542]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[48750-48765]:ExpressionStatement[48517-48532]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[48789-48817]:VariableDeclarationStatement[48556-48584]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[48831-48873]:VariableDeclarationStatement[48598-48640]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[48882-48920]:VariableDeclarationStatement[48649-48687]"
  }, {
    "left" : "final int maxUnescaped = _maximumNonEscapedChar;",
    "right" : "final int maxUnescaped = _maximumNonEscapedChar;",
    "info" : "VariableDeclarationStatement[48929-48977]:VariableDeclarationStatement[48696-48744]"
  }, {
    "left" : "while (offset < end)",
    "right" : "while (offset < end)",
    "info" : "WhileStatement[48995-50206]:WhileStatement[48762-49973]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49016-50206]:Block[48783-49973]"
  }, {
    "left" : "int ch = text.charAt(offset++);",
    "right" : "int ch = text.charAt(offset++);",
    "info" : "VariableDeclarationStatement[49030-49061]:VariableDeclarationStatement[48797-48828]"
  }, {
    "left" : "if (ch <= 0x7F)",
    "right" : "if (ch <= 0x7F)",
    "info" : "IfStatement[49074-49681]:IfStatement[48841-49448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49090-49681]:Block[48857-49448]"
  }, {
    "left" : "if (escCodes[ch] == 0)",
    "right" : "if (escCodes[ch] == 0)",
    "info" : "IfStatement[49109-49243]:IfStatement[48876-49010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49132-49243]:Block[48899-49010]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[49155-49193]:ExpressionStatement[48922-48960]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[49215-49224]:ContinueStatement[48982-48991]"
  }, {
    "left" : "int escape = escCodes[ch];",
    "right" : "int escape = escCodes[ch];",
    "info" : "VariableDeclarationStatement[49261-49287]:VariableDeclarationStatement[49028-49054]"
  }, {
    "left" : "if (escape > 0)",
    "right" : "if (escape > 0)",
    "info" : "IfStatement[49305-49640]:IfStatement[49072-49407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49321-49493]:Block[49088-49260]"
  }, {
    "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[49367-49410]:ExpressionStatement[49134-49177]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) escape;",
    "right" : "outputBuffer[outputPtr++] = (byte) escape;",
    "info" : "ExpressionStatement[49432-49474]:ExpressionStatement[49199-49241]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49499-49640]:Block[49266-49407]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[49574-49621]:ExpressionStatement[49341-49388]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[49658-49667]:ContinueStatement[49425-49434]"
  }, {
    "left" : "if (ch > maxUnescaped)",
    "right" : "if (ch > maxUnescaped)",
    "info" : "IfStatement[49694-49887]:IfStatement[49461-49654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49717-49887]:Block[49484-49654]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[49800-49847]:ExpressionStatement[49567-49614]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[49864-49873]:ContinueStatement[49631-49640]"
  }, {
    "left" : "if (ch <= 0x7FF)",
    "right" : "if (ch <= 0x7FF)",
    "info" : "IfStatement[49900-50196]:IfStatement[49667-49963]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49917-50110]:Block[49684-49877]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[49969-50023]:ExpressionStatement[49736-49790]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[50040-50096]:ExpressionStatement[49807-49863]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50116-50196]:Block[49883-49963]"
  }, {
    "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "info" : "ExpressionStatement[50134-50182]:ExpressionStatement[49901-49949]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[50215-50239]:ExpressionStatement[49982-50006]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[50676-50683]:Modifier[50443-50450]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[50684-50689]:Modifier[50451-50456]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[50690-50694]:PrimitiveType[50457-50461]"
  }, {
    "left" : "_writeCustomStringSegment2",
    "right" : "_writeCustomStringSegment2",
    "info" : "SimpleName[50695-50721]:SimpleName[50462-50488]"
  }, {
    "left" : "final char[] cbuf",
    "right" : "final char[] cbuf",
    "info" : "SingleVariableDeclaration[50722-50739]:SingleVariableDeclaration[50489-50506]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[50741-50751]:SingleVariableDeclaration[50508-50518]"
  }, {
    "left" : "final int end",
    "right" : "final int end",
    "info" : "SingleVariableDeclaration[50753-50766]:SingleVariableDeclaration[50520-50533]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[50775-50786]:SimpleType[50542-50553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50791-53366]:Block[50558-53133]"
  }, {
    "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "info" : "IfStatement[50887-50980]:IfStatement[50654-50747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50941-50980]:Block[50708-50747]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[50955-50970]:ExpressionStatement[50722-50737]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[50989-51017]:VariableDeclarationStatement[50756-50784]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[51031-51073]:VariableDeclarationStatement[50798-50840]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[51082-51120]:VariableDeclarationStatement[50849-50887]"
  }, {
    "left" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
    "right" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
    "info" : "VariableDeclarationStatement[51171-51260]:VariableDeclarationStatement[50938-51027]"
  }, {
    "left" : "final CharacterEscapes customEscapes = _characterEscapes;",
    "right" : "final CharacterEscapes customEscapes = _characterEscapes;",
    "info" : "VariableDeclarationStatement[51269-51326]:VariableDeclarationStatement[51036-51093]"
  }, {
    "left" : "while (offset < end)",
    "right" : "while (offset < end)",
    "info" : "WhileStatement[51356-53327]:WhileStatement[51123-53094]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51377-53327]:Block[51144-53094]"
  }, {
    "left" : "int ch = cbuf[offset++];",
    "right" : "int ch = cbuf[offset++];",
    "info" : "VariableDeclarationStatement[51391-51415]:VariableDeclarationStatement[51158-51182]"
  }, {
    "left" : "if (ch <= 0x7F)",
    "right" : "if (ch <= 0x7F)",
    "info" : "IfStatement[51428-52567]:IfStatement[51195-52334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51444-52567]:Block[51211-52334]"
  }, {
    "left" : "if (escCodes[ch] == 0)",
    "right" : "if (escCodes[ch] == 0)",
    "info" : "IfStatement[51463-51597]:IfStatement[51230-51364]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51486-51597]:Block[51253-51364]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[51509-51547]:ExpressionStatement[51276-51314]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[51569-51578]:ContinueStatement[51336-51345]"
  }, {
    "left" : "int escape = escCodes[ch];",
    "right" : "int escape = escCodes[ch];",
    "info" : "VariableDeclarationStatement[51615-51641]:VariableDeclarationStatement[51382-51408]"
  }, {
    "left" : "if (escape > 0)",
    "right" : "if (escape > 0)",
    "info" : "IfStatement[51659-52526]:IfStatement[51426-52293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51675-51847]:Block[51442-51614]"
  }, {
    "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[51721-51764]:ExpressionStatement[51488-51531]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) escape;",
    "right" : "outputBuffer[outputPtr++] = (byte) escape;",
    "info" : "ExpressionStatement[51786-51828]:ExpressionStatement[51553-51595]"
  }, {
    "left" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
    "right" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
    "info" : "IfStatement[51853-52526]:IfStatement[51620-52293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51899-52379]:Block[51666-52146]"
  }, {
    "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "info" : "VariableDeclarationStatement[51922-51983]:VariableDeclarationStatement[51689-51750]"
  }, {
    "left" : "if (esc == null)",
    "right" : "if (esc == null)",
    "info" : "IfStatement[52005-52265]:IfStatement[51772-52032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52022-52265]:Block[51789-52032]"
  }, {
    "left" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
    "right" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
    "info" : "ExpressionStatement[52049-52242]:ExpressionStatement[51816-52009]"
  }, {
    "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "info" : "ExpressionStatement[52287-52360]:ExpressionStatement[52054-52127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52385-52526]:Block[52152-52293]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[52460-52507]:ExpressionStatement[52227-52274]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[52544-52553]:ContinueStatement[52311-52320]"
  }, {
    "left" : "if (ch > maxUnescaped)",
    "right" : "if (ch > maxUnescaped)",
    "info" : "IfStatement[52580-52773]:IfStatement[52347-52540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52603-52773]:Block[52370-52540]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[52686-52733]:ExpressionStatement[52453-52500]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[52750-52759]:ContinueStatement[52517-52526]"
  }, {
    "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "info" : "VariableDeclarationStatement[52786-52847]:VariableDeclarationStatement[52553-52614]"
  }, {
    "left" : "if (esc != null)",
    "right" : "if (esc != null)",
    "info" : "IfStatement[52860-53008]:IfStatement[52627-52775]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52877-53008]:Block[52644-52775]"
  }, {
    "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "info" : "ExpressionStatement[52895-52968]:ExpressionStatement[52662-52735]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[52985-52994]:ContinueStatement[52752-52761]"
  }, {
    "left" : "if (ch <= 0x7FF)",
    "right" : "if (ch <= 0x7FF)",
    "info" : "IfStatement[53021-53317]:IfStatement[52788-53084]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53038-53231]:Block[52805-52998]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[53090-53144]:ExpressionStatement[52857-52911]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[53161-53217]:ExpressionStatement[52928-52984]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53237-53317]:Block[53004-53084]"
  }, {
    "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "info" : "ExpressionStatement[53255-53303]:ExpressionStatement[53022-53070]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[53336-53360]:ExpressionStatement[53103-53127]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[53372-53379]:Modifier[53139-53146]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[53380-53385]:Modifier[53147-53152]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[53386-53390]:PrimitiveType[53153-53157]"
  }, {
    "left" : "_writeCustomStringSegment2",
    "right" : "_writeCustomStringSegment2",
    "info" : "SimpleName[53391-53417]:SimpleName[53158-53184]"
  }, {
    "left" : "final String text",
    "right" : "final String text",
    "info" : "SingleVariableDeclaration[53418-53435]:SingleVariableDeclaration[53185-53202]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[53437-53447]:SingleVariableDeclaration[53204-53214]"
  }, {
    "left" : "final int end",
    "right" : "final int end",
    "info" : "SingleVariableDeclaration[53449-53462]:SingleVariableDeclaration[53216-53229]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[53471-53482]:SimpleType[53238-53249]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53487-56069]:Block[53254-55836]"
  }, {
    "left" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "right" : "if ((_outputTail +  6 * (end - offset)) > _outputEnd)",
    "info" : "IfStatement[53583-53676]:IfStatement[53350-53443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53637-53676]:Block[53404-53443]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[53651-53666]:ExpressionStatement[53418-53433]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[53685-53713]:VariableDeclarationStatement[53452-53480]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[53727-53769]:VariableDeclarationStatement[53494-53536]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[53778-53816]:VariableDeclarationStatement[53545-53583]"
  }, {
    "left" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
    "right" : "final int maxUnescaped = (_maximumNonEscapedChar <= 0) ? 0xFFFF : _maximumNonEscapedChar;",
    "info" : "VariableDeclarationStatement[53867-53956]:VariableDeclarationStatement[53634-53723]"
  }, {
    "left" : "final CharacterEscapes customEscapes = _characterEscapes;",
    "right" : "final CharacterEscapes customEscapes = _characterEscapes;",
    "info" : "VariableDeclarationStatement[53965-54022]:VariableDeclarationStatement[53732-53789]"
  }, {
    "left" : "while (offset < end)",
    "right" : "while (offset < end)",
    "info" : "WhileStatement[54052-56030]:WhileStatement[53819-55797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54073-56030]:Block[53840-55797]"
  }, {
    "left" : "int ch = text.charAt(offset++);",
    "right" : "int ch = text.charAt(offset++);",
    "info" : "VariableDeclarationStatement[54087-54118]:VariableDeclarationStatement[53854-53885]"
  }, {
    "left" : "if (ch <= 0x7F)",
    "right" : "if (ch <= 0x7F)",
    "info" : "IfStatement[54131-55270]:IfStatement[53898-55037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54147-55270]:Block[53914-55037]"
  }, {
    "left" : "if (escCodes[ch] == 0)",
    "right" : "if (escCodes[ch] == 0)",
    "info" : "IfStatement[54166-54300]:IfStatement[53933-54067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54189-54300]:Block[53956-54067]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) ch;",
    "right" : "outputBuffer[outputPtr++] = (byte) ch;",
    "info" : "ExpressionStatement[54212-54250]:ExpressionStatement[53979-54017]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[54272-54281]:ContinueStatement[54039-54048]"
  }, {
    "left" : "int escape = escCodes[ch];",
    "right" : "int escape = escCodes[ch];",
    "info" : "VariableDeclarationStatement[54318-54344]:VariableDeclarationStatement[54085-54111]"
  }, {
    "left" : "if (escape > 0)",
    "right" : "if (escape > 0)",
    "info" : "IfStatement[54362-55229]:IfStatement[54129-54996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54378-54550]:Block[54145-54317]"
  }, {
    "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[54424-54467]:ExpressionStatement[54191-54234]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) escape;",
    "right" : "outputBuffer[outputPtr++] = (byte) escape;",
    "info" : "ExpressionStatement[54489-54531]:ExpressionStatement[54256-54298]"
  }, {
    "left" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
    "right" : "if (escape == CharacterEscapes.ESCAPE_CUSTOM)",
    "info" : "IfStatement[54556-55229]:IfStatement[54323-54996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54602-55082]:Block[54369-54849]"
  }, {
    "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "info" : "VariableDeclarationStatement[54625-54686]:VariableDeclarationStatement[54392-54453]"
  }, {
    "left" : "if (esc == null)",
    "right" : "if (esc == null)",
    "info" : "IfStatement[54708-54968]:IfStatement[54475-54735]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54725-54968]:Block[54492-54735]"
  }, {
    "left" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
    "right" : "_reportError(\"Invalid custom escape definitions; custom escape not found for character code 0x\"\n                                 +Integer.toHexString(ch)+\", although was supposed to have one\");",
    "info" : "ExpressionStatement[54752-54945]:ExpressionStatement[54519-54712]"
  }, {
    "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "info" : "ExpressionStatement[54990-55063]:ExpressionStatement[54757-54830]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55088-55229]:Block[54855-54996]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[55163-55210]:ExpressionStatement[54930-54977]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[55247-55256]:ContinueStatement[55014-55023]"
  }, {
    "left" : "if (ch > maxUnescaped)",
    "right" : "if (ch > maxUnescaped)",
    "info" : "IfStatement[55283-55476]:IfStatement[55050-55243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55306-55476]:Block[55073-55243]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[55389-55436]:ExpressionStatement[55156-55203]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[55453-55462]:ContinueStatement[55220-55229]"
  }, {
    "left" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "right" : "SerializableString esc = customEscapes.getEscapeSequence(ch);",
    "info" : "VariableDeclarationStatement[55489-55550]:VariableDeclarationStatement[55256-55317]"
  }, {
    "left" : "if (esc != null)",
    "right" : "if (esc != null)",
    "info" : "IfStatement[55563-55711]:IfStatement[55330-55478]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55580-55711]:Block[55347-55478]"
  }, {
    "left" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "right" : "outputPtr = _writeCustomEscape(outputBuffer, outputPtr, esc, end-offset);",
    "info" : "ExpressionStatement[55598-55671]:ExpressionStatement[55365-55438]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[55688-55697]:ContinueStatement[55455-55464]"
  }, {
    "left" : "if (ch <= 0x7FF)",
    "right" : "if (ch <= 0x7FF)",
    "info" : "IfStatement[55724-56020]:IfStatement[55491-55787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55741-55934]:Block[55508-55701]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0xc0 | (ch >> 6));",
    "info" : "ExpressionStatement[55793-55847]:ExpressionStatement[55560-55614]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "outputBuffer[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[55864-55920]:ExpressionStatement[55631-55687]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55940-56020]:Block[55707-55787]"
  }, {
    "left" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "right" : "outputPtr = _outputMultiByteChar(ch, outputPtr);",
    "info" : "ExpressionStatement[55958-56006]:ExpressionStatement[55725-55773]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[56039-56063]:ExpressionStatement[55806-55830]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[56075-56082]:Modifier[55842-55849]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[56083-56088]:Modifier[55850-55855]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[56089-56092]:PrimitiveType[55856-55859]"
  }, {
    "left" : "_writeCustomEscape",
    "right" : "_writeCustomEscape",
    "info" : "SimpleName[56093-56111]:SimpleName[55860-55878]"
  }, {
    "left" : "byte[] outputBuffer",
    "right" : "byte[] outputBuffer",
    "info" : "SingleVariableDeclaration[56112-56131]:SingleVariableDeclaration[55879-55898]"
  }, {
    "left" : "int outputPtr",
    "right" : "int outputPtr",
    "info" : "SingleVariableDeclaration[56133-56146]:SingleVariableDeclaration[55900-55913]"
  }, {
    "left" : "SerializableString esc",
    "right" : "SerializableString esc",
    "info" : "SingleVariableDeclaration[56148-56170]:SingleVariableDeclaration[55915-55937]"
  }, {
    "left" : "int remainingChars",
    "right" : "int remainingChars",
    "info" : "SingleVariableDeclaration[56172-56190]:SingleVariableDeclaration[55939-55957]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[56207-56218]:SimpleType[55974-55985]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[56220-56243]:SimpleType[55987-56010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56248-56715]:Block[56015-56482]"
  }, {
    "left" : "byte[] raw = esc.asUnquotedUTF8();",
    "right" : "byte[] raw = esc.asUnquotedUTF8();",
    "info" : "VariableDeclarationStatement[56258-56292]:VariableDeclarationStatement[56025-56059]"
  }, {
    "left" : "int len = raw.length;",
    "right" : "int len = raw.length;",
    "info" : "VariableDeclarationStatement[56358-56379]:VariableDeclarationStatement[56125-56146]"
  }, {
    "left" : "if (len > 6)",
    "right" : "if (len > 6)",
    "info" : "IfStatement[56388-56561]:IfStatement[56155-56328]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56401-56561]:Block[56168-56328]"
  }, {
    "left" : "return _handleLongCustomEscape(outputBuffer, outputPtr, _outputEnd, raw, remainingChars);",
    "right" : "return _handleLongCustomEscape(outputBuffer, outputPtr, _outputEnd, raw, remainingChars);",
    "info" : "ReturnStatement[56462-56551]:ReturnStatement[56229-56318]"
  }, {
    "left" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
    "right" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
    "info" : "ExpressionStatement[56620-56675]:ExpressionStatement[56387-56442]"
  }, {
    "left" : "return (outputPtr + len);",
    "right" : "return (outputPtr + len);",
    "info" : "ReturnStatement[56684-56709]:ReturnStatement[56451-56476]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[56725-56732]:Modifier[56492-56499]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[56733-56738]:Modifier[56500-56505]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[56739-56742]:PrimitiveType[56506-56509]"
  }, {
    "left" : "_handleLongCustomEscape",
    "right" : "_handleLongCustomEscape",
    "info" : "SimpleName[56743-56766]:SimpleName[56510-56533]"
  }, {
    "left" : "byte[] outputBuffer",
    "right" : "byte[] outputBuffer",
    "info" : "SingleVariableDeclaration[56767-56786]:SingleVariableDeclaration[56534-56553]"
  }, {
    "left" : "int outputPtr",
    "right" : "int outputPtr",
    "info" : "SingleVariableDeclaration[56788-56801]:SingleVariableDeclaration[56555-56568]"
  }, {
    "left" : "int outputEnd",
    "right" : "int outputEnd",
    "info" : "SingleVariableDeclaration[56803-56816]:SingleVariableDeclaration[56570-56583]"
  }, {
    "left" : "byte[] raw",
    "right" : "byte[] raw",
    "info" : "SingleVariableDeclaration[56818-56828]:SingleVariableDeclaration[56585-56595]"
  }, {
    "left" : "int remainingChars",
    "right" : "int remainingChars",
    "info" : "SingleVariableDeclaration[56842-56860]:SingleVariableDeclaration[56609-56627]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[56877-56888]:SimpleType[56644-56655]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[56890-56913]:SimpleType[56657-56680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56918-57614]:Block[56685-57381]"
  }, {
    "left" : "int len = raw.length;",
    "right" : "int len = raw.length;",
    "info" : "VariableDeclarationStatement[56928-56949]:VariableDeclarationStatement[56695-56716]"
  }, {
    "left" : "if ((outputPtr + len) > outputEnd)",
    "right" : "if ((outputPtr + len) > outputEnd)",
    "info" : "IfStatement[56958-57381]:IfStatement[56725-57148]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56993-57381]:Block[56760-57148]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[57007-57031]:ExpressionStatement[56774-56798]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[57044-57059]:ExpressionStatement[56811-56826]"
  }, {
    "left" : "outputPtr = _outputTail;",
    "right" : "outputPtr = _outputTail;",
    "info" : "ExpressionStatement[57072-57096]:ExpressionStatement[56839-56863]"
  }, {
    "left" : "if (len > outputBuffer.length)",
    "right" : "if (len > outputBuffer.length)",
    "info" : "IfStatement[57109-57273]:IfStatement[56876-57040]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57140-57273]:Block[56907-57040]"
  }, {
    "left" : "_outputStream.write(raw, 0, len);",
    "right" : "_outputStream.write(raw, 0, len);",
    "info" : "ExpressionStatement[57192-57225]:ExpressionStatement[56959-56992]"
  }, {
    "left" : "return outputPtr;",
    "right" : "return outputPtr;",
    "info" : "ReturnStatement[57242-57259]:ReturnStatement[57009-57026]"
  }, {
    "left" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
    "right" : "System.arraycopy(raw, 0, outputBuffer, outputPtr, len);",
    "info" : "ExpressionStatement[57286-57341]:ExpressionStatement[57053-57108]"
  }, {
    "left" : "outputPtr += len;",
    "right" : "outputPtr += len;",
    "info" : "ExpressionStatement[57354-57371]:ExpressionStatement[57121-57138]"
  }, {
    "left" : "if ((outputPtr +  6 * remainingChars) > outputEnd)",
    "right" : "if ((outputPtr +  6 * remainingChars) > outputEnd)",
    "info" : "IfStatement[57460-57582]:IfStatement[57227-57349]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57511-57582]:Block[57278-57349]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[57525-57540]:ExpressionStatement[57292-57307]"
  }, {
    "left" : "return _outputTail;",
    "right" : "return _outputTail;",
    "info" : "ReturnStatement[57553-57572]:ReturnStatement[57320-57339]"
  }, {
    "left" : "return outputPtr;",
    "right" : "return outputPtr;",
    "info" : "ReturnStatement[57591-57608]:ReturnStatement[57358-57375]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58035-58042]:Modifier[57802-57809]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[58043-58048]:Modifier[57810-57815]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[58049-58053]:PrimitiveType[57816-57820]"
  }, {
    "left" : "_writeUTF8Segments",
    "right" : "_writeUTF8Segments",
    "info" : "SimpleName[58054-58072]:SimpleName[57821-57839]"
  }, {
    "left" : "byte[] utf8",
    "right" : "byte[] utf8",
    "info" : "SingleVariableDeclaration[58073-58084]:SingleVariableDeclaration[57840-57851]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[58086-58096]:SingleVariableDeclaration[57853-57863]"
  }, {
    "left" : "int totalLen",
    "right" : "int totalLen",
    "info" : "SingleVariableDeclaration[58098-58110]:SingleVariableDeclaration[57865-57877]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[58127-58138]:SimpleType[57894-57905]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[58140-58163]:SimpleType[57907-57930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58168-58390]:Block[57935-58157]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[58178-58384]:DoStatement[57945-58151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58181-58362]:Block[57948-58129]"
  }, {
    "left" : "int len = Math.min(_outputMaxContiguous, totalLen);",
    "right" : "int len = Math.min(_outputMaxContiguous, totalLen);",
    "info" : "VariableDeclarationStatement[58195-58246]:VariableDeclarationStatement[57962-58013]"
  }, {
    "left" : "_writeUTF8Segment(utf8, offset, len);",
    "right" : "_writeUTF8Segment(utf8, offset, len);",
    "info" : "ExpressionStatement[58259-58296]:ExpressionStatement[58026-58063]"
  }, {
    "left" : "offset += len;",
    "right" : "offset += len;",
    "info" : "ExpressionStatement[58309-58323]:ExpressionStatement[58076-58090]"
  }, {
    "left" : "totalLen -= len;",
    "right" : "totalLen -= len;",
    "info" : "ExpressionStatement[58336-58352]:ExpressionStatement[58103-58119]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58400-58407]:Modifier[58167-58174]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[58408-58413]:Modifier[58175-58180]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[58414-58418]:PrimitiveType[58181-58185]"
  }, {
    "left" : "_writeUTF8Segment",
    "right" : "_writeUTF8Segment",
    "info" : "SimpleName[58419-58436]:SimpleName[58186-58203]"
  }, {
    "left" : "byte[] utf8",
    "right" : "byte[] utf8",
    "info" : "SingleVariableDeclaration[58437-58448]:SingleVariableDeclaration[58204-58215]"
  }, {
    "left" : "final int offset",
    "right" : "final int offset",
    "info" : "SingleVariableDeclaration[58450-58466]:SingleVariableDeclaration[58217-58233]"
  }, {
    "left" : "final int len",
    "right" : "final int len",
    "info" : "SingleVariableDeclaration[58468-58481]:SingleVariableDeclaration[58235-58248]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[58498-58509]:SimpleType[58265-58276]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[58511-58534]:SimpleType[58278-58301]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58539-59331]:Block[58306-59098]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[58622-58660]:VariableDeclarationStatement[58389-58427]"
  }, {
    "left" : "for (int ptr = offset, end = offset + len; ptr < end)",
    "right" : "for (int ptr = offset, end = offset + len; ptr < end)",
    "info" : "ForStatement[58670-58989]:ForStatement[58437-58756]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58726-58989]:Block[58493-58756]"
  }, {
    "left" : "int ch = utf8[ptr++];",
    "right" : "int ch = utf8[ptr++];",
    "info" : "VariableDeclarationStatement[58815-58836]:VariableDeclarationStatement[58582-58603]"
  }, {
    "left" : "if ((ch >= 0) && escCodes[ch] != 0)",
    "right" : "if ((ch >= 0) && escCodes[ch] != 0)",
    "info" : "IfStatement[58849-58979]:IfStatement[58616-58746]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58885-58979]:Block[58652-58746]"
  }, {
    "left" : "_writeUTF8Segment2(utf8, offset, len);",
    "right" : "_writeUTF8Segment2(utf8, offset, len);",
    "info" : "ExpressionStatement[58903-58941]:ExpressionStatement[58670-58708]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[58958-58965]:ReturnStatement[58725-58732]"
  }, {
    "left" : "if ((_outputTail + len) > _outputEnd)",
    "right" : "if ((_outputTail + len) > _outputEnd)",
    "info" : "IfStatement[59050-59224]:IfStatement[58817-58991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59088-59224]:Block[58855-58991]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[59135-59150]:ExpressionStatement[58902-58917]"
  }, {
    "left" : "System.arraycopy(utf8, offset, _outputBuffer, _outputTail, len);",
    "right" : "System.arraycopy(utf8, offset, _outputBuffer, _outputTail, len);",
    "info" : "ExpressionStatement[59233-59297]:ExpressionStatement[59000-59064]"
  }, {
    "left" : "_outputTail += len;",
    "right" : "_outputTail += len;",
    "info" : "ExpressionStatement[59306-59325]:ExpressionStatement[59073-59092]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[59337-59344]:Modifier[59104-59111]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[59345-59350]:Modifier[59112-59117]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[59351-59355]:PrimitiveType[59118-59122]"
  }, {
    "left" : "_writeUTF8Segment2",
    "right" : "_writeUTF8Segment2",
    "info" : "SimpleName[59356-59374]:SimpleName[59123-59141]"
  }, {
    "left" : "final byte[] utf8",
    "right" : "final byte[] utf8",
    "info" : "SingleVariableDeclaration[59375-59392]:SingleVariableDeclaration[59142-59159]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[59394-59404]:SingleVariableDeclaration[59161-59171]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[59406-59413]:SingleVariableDeclaration[59173-59180]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[59430-59441]:SimpleType[59197-59208]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[59443-59466]:SimpleType[59210-59233]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59471-60520]:Block[59238-60287]"
  }, {
    "left" : "int outputPtr = _outputTail;",
    "right" : "int outputPtr = _outputTail;",
    "info" : "VariableDeclarationStatement[59481-59509]:VariableDeclarationStatement[59248-59276]"
  }, {
    "left" : "if ((outputPtr + (len * 6)) > _outputEnd)",
    "right" : "if ((outputPtr + (len * 6)) > _outputEnd)",
    "info" : "IfStatement[59605-59723]:IfStatement[59372-59490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59647-59723]:Block[59414-59490]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[59661-59676]:ExpressionStatement[59428-59443]"
  }, {
    "left" : "outputPtr = _outputTail;",
    "right" : "outputPtr = _outputTail;",
    "info" : "ExpressionStatement[59689-59713]:ExpressionStatement[59456-59480]"
  }, {
    "left" : "final byte[] outputBuffer = _outputBuffer;",
    "right" : "final byte[] outputBuffer = _outputBuffer;",
    "info" : "VariableDeclarationStatement[59741-59783]:VariableDeclarationStatement[59508-59550]"
  }, {
    "left" : "final int[] escCodes = _outputEscapes;",
    "right" : "final int[] escCodes = _outputEscapes;",
    "info" : "VariableDeclarationStatement[59792-59830]:VariableDeclarationStatement[59559-59597]"
  }, {
    "left" : "len += offset;",
    "right" : "len += offset;",
    "info" : "ExpressionStatement[59839-59853]:ExpressionStatement[59606-59620]"
  }, {
    "left" : "while (offset < len)",
    "right" : "while (offset < len)",
    "info" : "WhileStatement[59897-60481]:WhileStatement[59664-60248]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59918-60481]:Block[59685-60248]"
  }, {
    "left" : "byte b = utf8[offset++];",
    "right" : "byte b = utf8[offset++];",
    "info" : "VariableDeclarationStatement[59932-59956]:VariableDeclarationStatement[59699-59723]"
  }, {
    "left" : "int ch = b;",
    "right" : "int ch = b;",
    "info" : "VariableDeclarationStatement[59969-59980]:VariableDeclarationStatement[59736-59747]"
  }, {
    "left" : "if (ch < 0 || escCodes[ch] == 0)",
    "right" : "if (ch < 0 || escCodes[ch] == 0)",
    "info" : "IfStatement[59993-60114]:IfStatement[59760-59881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60026-60114]:Block[59793-59881]"
  }, {
    "left" : "outputBuffer[outputPtr++] = b;",
    "right" : "outputBuffer[outputPtr++] = b;",
    "info" : "ExpressionStatement[60044-60074]:ExpressionStatement[59811-59841]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[60091-60100]:ContinueStatement[59858-59867]"
  }, {
    "left" : "int escape = escCodes[ch];",
    "right" : "int escape = escCodes[ch];",
    "info" : "VariableDeclarationStatement[60127-60153]:VariableDeclarationStatement[59894-59920]"
  }, {
    "left" : "if (escape > 0)",
    "right" : "if (escape > 0)",
    "info" : "IfStatement[60166-60471]:IfStatement[59933-60238]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60182-60339]:Block[59949-60106]"
  }, {
    "left" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "outputBuffer[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[60223-60266]:ExpressionStatement[59990-60033]"
  }, {
    "left" : "outputBuffer[outputPtr++] = (byte) escape;",
    "right" : "outputBuffer[outputPtr++] = (byte) escape;",
    "info" : "ExpressionStatement[60283-60325]:ExpressionStatement[60050-60092]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60345-60471]:Block[60112-60238]"
  }, {
    "left" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "right" : "outputPtr = _writeGenericEscape(ch, outputPtr);",
    "info" : "ExpressionStatement[60410-60457]:ExpressionStatement[60177-60224]"
  }, {
    "left" : "_outputTail = outputPtr;",
    "right" : "_outputTail = outputPtr;",
    "info" : "ExpressionStatement[60490-60514]:ExpressionStatement[60257-60281]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[60737-60746]:Modifier[60504-60513]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[60747-60752]:Modifier[60514-60519]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[60753-60757]:PrimitiveType[60520-60524]"
  }, {
    "left" : "_writeBinary",
    "right" : "_writeBinary",
    "info" : "SimpleName[60758-60770]:SimpleName[60525-60537]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[60771-60795]:SingleVariableDeclaration[60538-60562]"
  }, {
    "left" : "byte[] input",
    "right" : "byte[] input",
    "info" : "SingleVariableDeclaration[60809-60821]:SingleVariableDeclaration[60576-60588]"
  }, {
    "left" : "int inputPtr",
    "right" : "int inputPtr",
    "info" : "SingleVariableDeclaration[60823-60835]:SingleVariableDeclaration[60590-60602]"
  }, {
    "left" : "final int inputEnd",
    "right" : "final int inputEnd",
    "info" : "SingleVariableDeclaration[60837-60855]:SingleVariableDeclaration[60604-60622]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[60872-60883]:SimpleType[60639-60650]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[60885-60908]:SimpleType[60652-60675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60913-62643]:Block[60680-62410]"
  }, {
    "left" : "int safeInputEnd = inputEnd - 3;",
    "right" : "int safeInputEnd = inputEnd - 3;",
    "info" : "VariableDeclarationStatement[60988-61020]:VariableDeclarationStatement[60755-60787]"
  }, {
    "left" : "int safeOutputEnd = _outputEnd - 6;",
    "right" : "int safeOutputEnd = _outputEnd - 6;",
    "info" : "VariableDeclarationStatement[61109-61144]:VariableDeclarationStatement[60876-60911]"
  }, {
    "left" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "right" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "info" : "VariableDeclarationStatement[61153-61209]:VariableDeclarationStatement[60920-60976]"
  }, {
    "left" : "while (inputPtr <= safeInputEnd)",
    "right" : "while (inputPtr <= safeInputEnd)",
    "info" : "WhileStatement[61283-62037]:WhileStatement[61050-61804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61316-62037]:Block[61083-61804]"
  }, {
    "left" : "if (_outputTail > safeOutputEnd)",
    "right" : "if (_outputTail > safeOutputEnd)",
    "info" : "IfStatement[61330-61427]:IfStatement[61097-61194]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61363-61427]:Block[61130-61194]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[61398-61413]:ExpressionStatement[61165-61180]"
  }, {
    "left" : "int b24 = ((int) input[inputPtr++]) << 8;",
    "right" : "int b24 = ((int) input[inputPtr++]) << 8;",
    "info" : "VariableDeclarationStatement[61498-61539]:VariableDeclarationStatement[61265-61306]"
  }, {
    "left" : "b24 |= ((int) input[inputPtr++]) & 0xFF;",
    "right" : "b24 |= ((int) input[inputPtr++]) & 0xFF;",
    "info" : "ExpressionStatement[61552-61592]:ExpressionStatement[61319-61359]"
  }, {
    "left" : "b24 = (b24 << 8) | (((int) input[inputPtr++]) & 0xFF);",
    "right" : "b24 = (b24 << 8) | (((int) input[inputPtr++]) & 0xFF);",
    "info" : "ExpressionStatement[61605-61659]:ExpressionStatement[61372-61426]"
  }, {
    "left" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
    "right" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[61672-61748]:ExpressionStatement[61439-61515]"
  }, {
    "left" : "if (--chunksBeforeLF <= 0)",
    "right" : "if (--chunksBeforeLF <= 0)",
    "info" : "IfStatement[61761-62027]:IfStatement[61528-61794]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61788-62027]:Block[61555-61794]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = '\\\\';",
    "right" : "_outputBuffer[_outputTail++] = '\\\\';",
    "info" : "ExpressionStatement[61856-61892]:ExpressionStatement[61623-61659]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = 'n';",
    "right" : "_outputBuffer[_outputTail++] = 'n';",
    "info" : "ExpressionStatement[61909-61944]:ExpressionStatement[61676-61711]"
  }, {
    "left" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "right" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "info" : "ExpressionStatement[61961-62013]:ExpressionStatement[61728-61780]"
  }, {
    "left" : "int inputLeft = inputEnd - inputPtr;",
    "right" : "int inputLeft = inputEnd - inputPtr;",
    "info" : "VariableDeclarationStatement[62111-62147]:VariableDeclarationStatement[61878-61914]"
  }, {
    "left" : "if (inputLeft > 0)",
    "right" : "if (inputLeft > 0)",
    "info" : "IfStatement[62169-62637]:IfStatement[61936-62404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62188-62637]:Block[61955-62404]"
  }, {
    "left" : "if (_outputTail > safeOutputEnd)",
    "right" : "if (_outputTail > safeOutputEnd)",
    "info" : "IfStatement[62242-62358]:IfStatement[62009-62125]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62275-62358]:Block[62042-62125]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[62329-62344]:ExpressionStatement[62096-62111]"
  }, {
    "left" : "int b24 = ((int) input[inputPtr++]) << 16;",
    "right" : "int b24 = ((int) input[inputPtr++]) << 16;",
    "info" : "VariableDeclarationStatement[62371-62413]:VariableDeclarationStatement[62138-62180]"
  }, {
    "left" : "if (inputLeft == 2)",
    "right" : "if (inputLeft == 2)",
    "info" : "IfStatement[62426-62525]:IfStatement[62193-62292]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62446-62525]:Block[62213-62292]"
  }, {
    "left" : "b24 |= (((int) input[inputPtr++]) & 0xFF) << 8;",
    "right" : "b24 |= (((int) input[inputPtr++]) & 0xFF) << 8;",
    "info" : "ExpressionStatement[62464-62511]:ExpressionStatement[62231-62278]"
  }, {
    "left" : "_outputTail = b64variant.encodeBase64Partial(b24, inputLeft, _outputBuffer, _outputTail);",
    "right" : "_outputTail = b64variant.encodeBase64Partial(b24, inputLeft, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[62538-62627]:ExpressionStatement[62305-62394]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[62708-62717]:Modifier[62475-62484]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[62718-62723]:Modifier[62485-62490]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[62724-62727]:PrimitiveType[62491-62494]"
  }, {
    "left" : "_writeBinary",
    "right" : "_writeBinary",
    "info" : "SimpleName[62728-62740]:SimpleName[62495-62507]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[62741-62765]:SingleVariableDeclaration[62508-62532]"
  }, {
    "left" : "InputStream data",
    "right" : "InputStream data",
    "info" : "SingleVariableDeclaration[62779-62795]:SingleVariableDeclaration[62546-62562]"
  }, {
    "left" : "byte[] readBuffer",
    "right" : "byte[] readBuffer",
    "info" : "SingleVariableDeclaration[62797-62814]:SingleVariableDeclaration[62564-62581]"
  }, {
    "left" : "int bytesLeft",
    "right" : "int bytesLeft",
    "info" : "SingleVariableDeclaration[62816-62829]:SingleVariableDeclaration[62583-62596]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[62846-62857]:SimpleType[62613-62624]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[62859-62882]:SimpleType[62626-62649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62887-65184]:Block[62654-64951]"
  }, {
    "left" : "int inputPtr = 0;",
    "right" : "int inputPtr = 0;",
    "info" : "VariableDeclarationStatement[62897-62914]:VariableDeclarationStatement[62664-62681]"
  }, {
    "left" : "int inputEnd = 0;",
    "right" : "int inputEnd = 0;",
    "info" : "VariableDeclarationStatement[62923-62940]:VariableDeclarationStatement[62690-62707]"
  }, {
    "left" : "int lastFullOffset = -3;",
    "right" : "int lastFullOffset = -3;",
    "info" : "VariableDeclarationStatement[62949-62973]:VariableDeclarationStatement[62716-62740]"
  }, {
    "left" : "int safeOutputEnd = _outputEnd - 6;",
    "right" : "int safeOutputEnd = _outputEnd - 6;",
    "info" : "VariableDeclarationStatement[63078-63113]:VariableDeclarationStatement[62845-62880]"
  }, {
    "left" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "right" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "info" : "VariableDeclarationStatement[63122-63178]:VariableDeclarationStatement[62889-62945]"
  }, {
    "left" : "while (bytesLeft > 2)",
    "right" : "while (bytesLeft > 2)",
    "info" : "WhileStatement[63188-64251]:WhileStatement[62955-64018]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63210-64251]:Block[62977-64018]"
  }, {
    "left" : "if (inputPtr > lastFullOffset)",
    "right" : "if (inputPtr > lastFullOffset)",
    "info" : "IfStatement[63255-63596]:IfStatement[63022-63363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63286-63596]:Block[63053-63363]"
  }, {
    "left" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
    "right" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
    "info" : "ExpressionStatement[63304-63374]:ExpressionStatement[63071-63141]"
  }, {
    "left" : "inputPtr = 0;",
    "right" : "inputPtr = 0;",
    "info" : "ExpressionStatement[63391-63404]:ExpressionStatement[63158-63171]"
  }, {
    "left" : "if (inputEnd < 3)",
    "right" : "if (inputEnd < 3)",
    "info" : "IfStatement[63421-63537]:IfStatement[63188-63304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63439-63537]:Block[63206-63304]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[63513-63519]:BreakStatement[63280-63286]"
  }, {
    "left" : "lastFullOffset = inputEnd-3;",
    "right" : "lastFullOffset = inputEnd-3;",
    "info" : "ExpressionStatement[63554-63582]:ExpressionStatement[63321-63349]"
  }, {
    "left" : "if (_outputTail > safeOutputEnd)",
    "right" : "if (_outputTail > safeOutputEnd)",
    "info" : "IfStatement[63609-63706]:IfStatement[63376-63473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63642-63706]:Block[63409-63473]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[63677-63692]:ExpressionStatement[63444-63459]"
  }, {
    "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
    "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
    "info" : "VariableDeclarationStatement[63719-63765]:VariableDeclarationStatement[63486-63532]"
  }, {
    "left" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
    "right" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
    "info" : "ExpressionStatement[63778-63823]:ExpressionStatement[63545-63590]"
  }, {
    "left" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
    "right" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
    "info" : "ExpressionStatement[63836-63895]:ExpressionStatement[63603-63662]"
  }, {
    "left" : "bytesLeft -= 3;",
    "right" : "bytesLeft -= 3;",
    "info" : "ExpressionStatement[63908-63923]:ExpressionStatement[63675-63690]"
  }, {
    "left" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
    "right" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[63936-64012]:ExpressionStatement[63703-63779]"
  }, {
    "left" : "if (--chunksBeforeLF <= 0)",
    "right" : "if (--chunksBeforeLF <= 0)",
    "info" : "IfStatement[64025-64241]:IfStatement[63792-64008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64052-64241]:Block[63819-64008]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = '\\\\';",
    "right" : "_outputBuffer[_outputTail++] = '\\\\';",
    "info" : "ExpressionStatement[64070-64106]:ExpressionStatement[63837-63873]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = 'n';",
    "right" : "_outputBuffer[_outputTail++] = 'n';",
    "info" : "ExpressionStatement[64123-64158]:ExpressionStatement[63890-63925]"
  }, {
    "left" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "right" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "info" : "ExpressionStatement[64175-64227]:ExpressionStatement[63942-63994]"
  }, {
    "left" : "if (bytesLeft > 0)",
    "right" : "if (bytesLeft > 0)",
    "info" : "IfStatement[64333-65152]:IfStatement[64100-64919]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64352-65152]:Block[64119-64919]"
  }, {
    "left" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
    "right" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, bytesLeft);",
    "info" : "ExpressionStatement[64366-64436]:ExpressionStatement[64133-64203]"
  }, {
    "left" : "inputPtr = 0;",
    "right" : "inputPtr = 0;",
    "info" : "ExpressionStatement[64449-64462]:ExpressionStatement[64216-64229]"
  }, {
    "left" : "if (inputEnd > 0)",
    "right" : "if (inputEnd > 0)",
    "info" : "IfStatement[64475-65142]:IfStatement[64242-64909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64493-65142]:Block[64260-64909]"
  }, {
    "left" : "if (_outputTail > safeOutputEnd)",
    "right" : "if (_outputTail > safeOutputEnd)",
    "info" : "IfStatement[64551-64675]:IfStatement[64318-64442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64584-64675]:Block[64351-64442]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[64642-64657]:ExpressionStatement[64409-64424]"
  }, {
    "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
    "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
    "info" : "VariableDeclarationStatement[64692-64739]:VariableDeclarationStatement[64459-64506]"
  }, {
    "left" : "int amount;",
    "right" : "int amount;",
    "info" : "VariableDeclarationStatement[64756-64767]:VariableDeclarationStatement[64523-64534]"
  }, {
    "left" : "if (inputPtr < inputEnd)",
    "right" : "if (inputPtr < inputEnd)",
    "info" : "IfStatement[64784-64988]:IfStatement[64551-64755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64809-64931]:Block[64576-64698]"
  }, {
    "left" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
    "right" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
    "info" : "ExpressionStatement[64831-64881]:ExpressionStatement[64598-64648]"
  }, {
    "left" : "amount = 2;",
    "right" : "amount = 2;",
    "info" : "ExpressionStatement[64902-64913]:ExpressionStatement[64669-64680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64937-64988]:Block[64704-64755]"
  }, {
    "left" : "amount = 1;",
    "right" : "amount = 1;",
    "info" : "ExpressionStatement[64959-64970]:ExpressionStatement[64726-64737]"
  }, {
    "left" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
    "right" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[65005-65091]:ExpressionStatement[64772-64858]"
  }, {
    "left" : "bytesLeft -= amount;",
    "right" : "bytesLeft -= amount;",
    "info" : "ExpressionStatement[65108-65128]:ExpressionStatement[64875-64895]"
  }, {
    "left" : "return bytesLeft;",
    "right" : "return bytesLeft;",
    "info" : "ReturnStatement[65161-65178]:ReturnStatement[64928-64945]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[65233-65242]:Modifier[65000-65009]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[65243-65248]:Modifier[65010-65015]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[65249-65252]:PrimitiveType[65016-65019]"
  }, {
    "left" : "_writeBinary",
    "right" : "_writeBinary",
    "info" : "SimpleName[65253-65265]:SimpleName[65020-65032]"
  }, {
    "left" : "Base64Variant b64variant",
    "right" : "Base64Variant b64variant",
    "info" : "SingleVariableDeclaration[65266-65290]:SingleVariableDeclaration[65033-65057]"
  }, {
    "left" : "InputStream data",
    "right" : "InputStream data",
    "info" : "SingleVariableDeclaration[65304-65320]:SingleVariableDeclaration[65071-65087]"
  }, {
    "left" : "byte[] readBuffer",
    "right" : "byte[] readBuffer",
    "info" : "SingleVariableDeclaration[65322-65339]:SingleVariableDeclaration[65089-65106]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[65356-65367]:SimpleType[65123-65134]"
  }, {
    "left" : "JsonGenerationException",
    "right" : "JsonGenerationException",
    "info" : "SimpleType[65369-65392]:SimpleType[65136-65159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65397-67571]:Block[65164-67338]"
  }, {
    "left" : "int inputPtr = 0;",
    "right" : "int inputPtr = 0;",
    "info" : "VariableDeclarationStatement[65407-65424]:VariableDeclarationStatement[65174-65191]"
  }, {
    "left" : "int inputEnd = 0;",
    "right" : "int inputEnd = 0;",
    "info" : "VariableDeclarationStatement[65433-65450]:VariableDeclarationStatement[65200-65217]"
  }, {
    "left" : "int lastFullOffset = -3;",
    "right" : "int lastFullOffset = -3;",
    "info" : "VariableDeclarationStatement[65459-65483]:VariableDeclarationStatement[65226-65250]"
  }, {
    "left" : "int bytesDone = 0;",
    "right" : "int bytesDone = 0;",
    "info" : "VariableDeclarationStatement[65492-65510]:VariableDeclarationStatement[65259-65277]"
  }, {
    "left" : "int safeOutputEnd = _outputEnd - 6;",
    "right" : "int safeOutputEnd = _outputEnd - 6;",
    "info" : "VariableDeclarationStatement[65608-65643]:VariableDeclarationStatement[65375-65410]"
  }, {
    "left" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "right" : "int chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "info" : "VariableDeclarationStatement[65652-65708]:VariableDeclarationStatement[65419-65475]"
  }, {
    "left" : "while (true)",
    "right" : "while (true)",
    "info" : "WhileStatement[65782-66892]:WhileStatement[65549-66659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65795-66892]:Block[65562-66659]"
  }, {
    "left" : "if (inputPtr > lastFullOffset)",
    "right" : "if (inputPtr > lastFullOffset)",
    "info" : "IfStatement[65809-66179]:IfStatement[65576-65946]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65840-66179]:Block[65607-65946]"
  }, {
    "left" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, readBuffer.length);",
    "right" : "inputEnd = _readMore(data, readBuffer, inputPtr, inputEnd, readBuffer.length);",
    "info" : "ExpressionStatement[65879-65957]:ExpressionStatement[65646-65724]"
  }, {
    "left" : "inputPtr = 0;",
    "right" : "inputPtr = 0;",
    "info" : "ExpressionStatement[65974-65987]:ExpressionStatement[65741-65754]"
  }, {
    "left" : "if (inputEnd < 3)",
    "right" : "if (inputEnd < 3)",
    "info" : "IfStatement[66004-66120]:IfStatement[65771-65887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66022-66120]:Block[65789-65887]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[66096-66102]:BreakStatement[65863-65869]"
  }, {
    "left" : "lastFullOffset = inputEnd-3;",
    "right" : "lastFullOffset = inputEnd-3;",
    "info" : "ExpressionStatement[66137-66165]:ExpressionStatement[65904-65932]"
  }, {
    "left" : "if (_outputTail > safeOutputEnd)",
    "right" : "if (_outputTail > safeOutputEnd)",
    "info" : "IfStatement[66192-66289]:IfStatement[65959-66056]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66225-66289]:Block[65992-66056]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[66260-66275]:ExpressionStatement[66027-66042]"
  }, {
    "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
    "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 8;",
    "info" : "VariableDeclarationStatement[66360-66406]:VariableDeclarationStatement[66127-66173]"
  }, {
    "left" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
    "right" : "b24 |= ((int) readBuffer[inputPtr++]) & 0xFF;",
    "info" : "ExpressionStatement[66419-66464]:ExpressionStatement[66186-66231]"
  }, {
    "left" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
    "right" : "b24 = (b24 << 8) | (((int) readBuffer[inputPtr++]) & 0xFF);",
    "info" : "ExpressionStatement[66477-66536]:ExpressionStatement[66244-66303]"
  }, {
    "left" : "bytesDone += 3;",
    "right" : "bytesDone += 3;",
    "info" : "ExpressionStatement[66549-66564]:ExpressionStatement[66316-66331]"
  }, {
    "left" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
    "right" : "_outputTail = b64variant.encodeBase64Chunk(b24, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[66577-66653]:ExpressionStatement[66344-66420]"
  }, {
    "left" : "if (--chunksBeforeLF <= 0)",
    "right" : "if (--chunksBeforeLF <= 0)",
    "info" : "IfStatement[66666-66882]:IfStatement[66433-66649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66693-66882]:Block[66460-66649]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = '\\\\';",
    "right" : "_outputBuffer[_outputTail++] = '\\\\';",
    "info" : "ExpressionStatement[66711-66747]:ExpressionStatement[66478-66514]"
  }, {
    "left" : "_outputBuffer[_outputTail++] = 'n';",
    "right" : "_outputBuffer[_outputTail++] = 'n';",
    "info" : "ExpressionStatement[66764-66799]:ExpressionStatement[66531-66566]"
  }, {
    "left" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "right" : "chunksBeforeLF = b64variant.getMaxLineLength() >> 2;",
    "info" : "ExpressionStatement[66816-66868]:ExpressionStatement[66583-66635]"
  }, {
    "left" : "if (inputPtr < inputEnd)",
    "right" : "if (inputPtr < inputEnd)",
    "info" : "IfStatement[66966-67539]:IfStatement[66733-67306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66991-67539]:Block[66758-67306]"
  }, {
    "left" : "if (_outputTail > safeOutputEnd)",
    "right" : "if (_outputTail > safeOutputEnd)",
    "info" : "IfStatement[67045-67161]:IfStatement[66812-66928]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67078-67161]:Block[66845-66928]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[67132-67147]:ExpressionStatement[66899-66914]"
  }, {
    "left" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
    "right" : "int b24 = ((int) readBuffer[inputPtr++]) << 16;",
    "info" : "VariableDeclarationStatement[67174-67221]:VariableDeclarationStatement[66941-66988]"
  }, {
    "left" : "int amount = 1;",
    "right" : "int amount = 1;",
    "info" : "VariableDeclarationStatement[67234-67249]:VariableDeclarationStatement[67001-67016]"
  }, {
    "left" : "if (inputPtr < inputEnd)",
    "right" : "if (inputPtr < inputEnd)",
    "info" : "IfStatement[67262-67397]:IfStatement[67029-67164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67287-67397]:Block[67054-67164]"
  }, {
    "left" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
    "right" : "b24 |= (((int) readBuffer[inputPtr]) & 0xFF) << 8;",
    "info" : "ExpressionStatement[67305-67355]:ExpressionStatement[67072-67122]"
  }, {
    "left" : "amount = 2;",
    "right" : "amount = 2;",
    "info" : "ExpressionStatement[67372-67383]:ExpressionStatement[67139-67150]"
  }, {
    "left" : "bytesDone += amount;",
    "right" : "bytesDone += amount;",
    "info" : "ExpressionStatement[67410-67430]:ExpressionStatement[67177-67197]"
  }, {
    "left" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
    "right" : "_outputTail = b64variant.encodeBase64Partial(b24, amount, _outputBuffer, _outputTail);",
    "info" : "ExpressionStatement[67443-67529]:ExpressionStatement[67210-67296]"
  }, {
    "left" : "return bytesDone;",
    "right" : "return bytesDone;",
    "info" : "ReturnStatement[67548-67565]:ReturnStatement[67315-67332]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[67581-67588]:Modifier[67348-67355]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[67589-67594]:Modifier[67356-67361]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[67595-67598]:PrimitiveType[67362-67365]"
  }, {
    "left" : "_readMore",
    "right" : "_readMore",
    "info" : "SimpleName[67599-67608]:SimpleName[67366-67375]"
  }, {
    "left" : "InputStream in",
    "right" : "InputStream in",
    "info" : "SingleVariableDeclaration[67609-67623]:SingleVariableDeclaration[67376-67390]"
  }, {
    "left" : "byte[] readBuffer",
    "right" : "byte[] readBuffer",
    "info" : "SingleVariableDeclaration[67637-67654]:SingleVariableDeclaration[67404-67421]"
  }, {
    "left" : "int inputPtr",
    "right" : "int inputPtr",
    "info" : "SingleVariableDeclaration[67656-67668]:SingleVariableDeclaration[67423-67435]"
  }, {
    "left" : "int inputEnd",
    "right" : "int inputEnd",
    "info" : "SingleVariableDeclaration[67670-67682]:SingleVariableDeclaration[67437-67449]"
  }, {
    "left" : "int maxRead",
    "right" : "int maxRead",
    "info" : "SingleVariableDeclaration[67696-67707]:SingleVariableDeclaration[67463-67474]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[67716-67727]:SimpleType[67483-67494]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67732-68374]:Block[67499-68141]"
  }, {
    "left" : "int i = 0;",
    "right" : "int i = 0;",
    "info" : "VariableDeclarationStatement[67781-67791]:VariableDeclarationStatement[67548-67558]"
  }, {
    "left" : "while (inputPtr < inputEnd)",
    "right" : "while (inputPtr < inputEnd)",
    "info" : "WhileStatement[67800-67894]:WhileStatement[67567-67661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67828-67894]:Block[67595-67661]"
  }, {
    "left" : "readBuffer[i++]  = readBuffer[inputPtr++];",
    "right" : "readBuffer[i++]  = readBuffer[inputPtr++];",
    "info" : "ExpressionStatement[67842-67884]:ExpressionStatement[67609-67651]"
  }, {
    "left" : "inputPtr = 0;",
    "right" : "inputPtr = 0;",
    "info" : "ExpressionStatement[67903-67916]:ExpressionStatement[67670-67683]"
  }, {
    "left" : "inputEnd = i;",
    "right" : "inputEnd = i;",
    "info" : "ExpressionStatement[67925-67938]:ExpressionStatement[67692-67705]"
  }, {
    "left" : "maxRead = Math.min(maxRead, readBuffer.length);",
    "right" : "maxRead = Math.min(maxRead, readBuffer.length);",
    "info" : "ExpressionStatement[67947-67994]:ExpressionStatement[67714-67761]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[68012-68343]:DoStatement[67779-68110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68015-68321]:Block[67782-68088]"
  }, {
    "left" : "int length = maxRead - inputEnd;",
    "right" : "int length = maxRead - inputEnd;",
    "info" : "VariableDeclarationStatement[68029-68061]:VariableDeclarationStatement[67796-67828]"
  }, {
    "left" : "if (length == 0)",
    "right" : "if (length == 0)",
    "info" : "IfStatement[68074-68129]:IfStatement[67841-67896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68091-68129]:Block[67858-67896]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[68109-68115]:BreakStatement[67876-67882]"
  }, {
    "left" : "int count = in.read(readBuffer, inputEnd, length);",
    "right" : "int count = in.read(readBuffer, inputEnd, length);",
    "info" : "VariableDeclarationStatement[68142-68192]:VariableDeclarationStatement[67909-67959]"
  }, {
    "left" : "if (count < 0)",
    "right" : "if (count < 0)",
    "info" : "IfStatement[68217-68280]:IfStatement[67984-68047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68232-68280]:Block[67999-68047]"
  }, {
    "left" : "return inputEnd;",
    "right" : "return inputEnd;",
    "info" : "ReturnStatement[68250-68266]:ReturnStatement[68017-68033]"
  }, {
    "left" : "inputEnd += count;",
    "right" : "inputEnd += count;",
    "info" : "ExpressionStatement[68293-68311]:ExpressionStatement[68060-68078]"
  }, {
    "left" : "return inputEnd;",
    "right" : "return inputEnd;",
    "info" : "ReturnStatement[68352-68368]:ReturnStatement[68119-68135]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[68784-68791]:Modifier[68551-68558]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[68792-68797]:Modifier[68559-68564]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[68798-68801]:PrimitiveType[68565-68568]"
  }, {
    "left" : "_outputRawMultiByteChar",
    "right" : "_outputRawMultiByteChar",
    "info" : "SimpleName[68802-68825]:SimpleName[68569-68592]"
  }, {
    "left" : "int ch",
    "right" : "int ch",
    "info" : "SingleVariableDeclaration[68826-68832]:SingleVariableDeclaration[68593-68599]"
  }, {
    "left" : "char[] cbuf",
    "right" : "char[] cbuf",
    "info" : "SingleVariableDeclaration[68834-68845]:SingleVariableDeclaration[68601-68612]"
  }, {
    "left" : "int inputOffset",
    "right" : "int inputOffset",
    "info" : "SingleVariableDeclaration[68847-68862]:SingleVariableDeclaration[68614-68629]"
  }, {
    "left" : "int inputEnd",
    "right" : "int inputEnd",
    "info" : "SingleVariableDeclaration[68864-68876]:SingleVariableDeclaration[68631-68643]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[68893-68904]:SimpleType[68660-68671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68909-69734]:Block[68676-69501]"
  }, {
    "left" : "if (ch >= SURR1_FIRST)",
    "right" : "if (ch >= SURR1_FIRST)",
    "info" : "IfStatement[68985-69474]:IfStatement[68752-69241]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69008-69474]:Block[68775-69241]"
  }, {
    "left" : "if (ch <= SURR2_LAST)",
    "right" : "if (ch <= SURR2_LAST)",
    "info" : "IfStatement[69022-69464]:IfStatement[68789-69231]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69044-69464]:Block[68811-69231]"
  }, {
    "left" : "if (inputOffset >= inputEnd || cbuf == null)",
    "right" : "if (inputOffset >= inputEnd || cbuf == null)",
    "info" : "IfStatement[69128-69354]:IfStatement[68895-69121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69173-69354]:Block[68940-69121]"
  }, {
    "left" : "_reportError(String.format(\n\"Split surrogate on writeRaw() input (last character): first character 0x%4x\", ch));",
    "right" : "_reportError(String.format(\n\"Split surrogate on writeRaw() input (last character): first character 0x%4x\", ch));",
    "info" : "ExpressionStatement[69224-69336]:ExpressionStatement[68991-69103]"
  }, {
    "left" : "_outputSurrogates(ch, cbuf[inputOffset]);",
    "right" : "_outputSurrogates(ch, cbuf[inputOffset]);",
    "info" : "ExpressionStatement[69371-69412]:ExpressionStatement[69138-69179]"
  }, {
    "left" : "return inputOffset+1;",
    "right" : "return inputOffset+1;",
    "info" : "ReturnStatement[69429-69450]:ReturnStatement[69196-69217]"
  }, {
    "left" : "final byte[] bbuf = _outputBuffer;",
    "right" : "final byte[] bbuf = _outputBuffer;",
    "info" : "VariableDeclarationStatement[69483-69517]:VariableDeclarationStatement[69250-69284]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0xe0 | (ch >> 12));",
    "right" : "bbuf[_outputTail++] = (byte) (0xe0 | (ch >> 12));",
    "info" : "ExpressionStatement[69526-69575]:ExpressionStatement[69293-69342]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0x80 | ((ch >> 6) & 0x3f));",
    "right" : "bbuf[_outputTail++] = (byte) (0x80 | ((ch >> 6) & 0x3f));",
    "info" : "ExpressionStatement[69584-69641]:ExpressionStatement[69351-69408]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "bbuf[_outputTail++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[69650-69700]:ExpressionStatement[69417-69467]"
  }, {
    "left" : "return inputOffset;",
    "right" : "return inputOffset;",
    "info" : "ReturnStatement[69709-69728]:ReturnStatement[69476-69495]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[69740-69749]:Modifier[69507-69516]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[69750-69755]:Modifier[69517-69522]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[69756-69760]:PrimitiveType[69523-69527]"
  }, {
    "left" : "_outputSurrogates",
    "right" : "_outputSurrogates",
    "info" : "SimpleName[69761-69778]:SimpleName[69528-69545]"
  }, {
    "left" : "int surr1",
    "right" : "int surr1",
    "info" : "SingleVariableDeclaration[69779-69788]:SingleVariableDeclaration[69546-69555]"
  }, {
    "left" : "int surr2",
    "right" : "int surr2",
    "info" : "SingleVariableDeclaration[69790-69799]:SingleVariableDeclaration[69557-69566]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[69808-69819]:SimpleType[69575-69586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69824-70252]:Block[69591-70019]"
  }, {
    "left" : "int c = _decodeSurrogate(surr1, surr2);",
    "right" : "int c = _decodeSurrogate(surr1, surr2);",
    "info" : "VariableDeclarationStatement[69834-69873]:VariableDeclarationStatement[69601-69640]"
  }, {
    "left" : "if ((_outputTail + 4) > _outputEnd)",
    "right" : "if ((_outputTail + 4) > _outputEnd)",
    "info" : "IfStatement[69882-69957]:IfStatement[69649-69724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69918-69957]:Block[69685-69724]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[69932-69947]:ExpressionStatement[69699-69714]"
  }, {
    "left" : "final byte[] bbuf = _outputBuffer;",
    "right" : "final byte[] bbuf = _outputBuffer;",
    "info" : "VariableDeclarationStatement[69966-70000]:VariableDeclarationStatement[69733-69767]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0xf0 | (c >> 18));",
    "right" : "bbuf[_outputTail++] = (byte) (0xf0 | (c >> 18));",
    "info" : "ExpressionStatement[70009-70057]:ExpressionStatement[69776-69824]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 12) & 0x3f));",
    "right" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 12) & 0x3f));",
    "info" : "ExpressionStatement[70066-70123]:ExpressionStatement[69833-69890]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 6) & 0x3f));",
    "right" : "bbuf[_outputTail++] = (byte) (0x80 | ((c >> 6) & 0x3f));",
    "info" : "ExpressionStatement[70132-70188]:ExpressionStatement[69899-69955]"
  }, {
    "left" : "bbuf[_outputTail++] = (byte) (0x80 | (c & 0x3f));",
    "right" : "bbuf[_outputTail++] = (byte) (0x80 | (c & 0x3f));",
    "info" : "ExpressionStatement[70197-70246]:ExpressionStatement[69964-70013]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[70475-70482]:Modifier[70242-70249]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[70483-70488]:Modifier[70250-70255]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[70489-70492]:PrimitiveType[70256-70259]"
  }, {
    "left" : "_outputMultiByteChar",
    "right" : "_outputMultiByteChar",
    "info" : "SimpleName[70493-70513]:SimpleName[70260-70280]"
  }, {
    "left" : "int ch",
    "right" : "int ch",
    "info" : "SingleVariableDeclaration[70514-70520]:SingleVariableDeclaration[70281-70287]"
  }, {
    "left" : "int outputPtr",
    "right" : "int outputPtr",
    "info" : "SingleVariableDeclaration[70522-70535]:SingleVariableDeclaration[70289-70302]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[70544-70555]:SimpleType[70311-70322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70560-71599]:Block[70327-71366]"
  }, {
    "left" : "byte[] bbuf = _outputBuffer;",
    "right" : "byte[] bbuf = _outputBuffer;",
    "info" : "VariableDeclarationStatement[70570-70598]:VariableDeclarationStatement[70337-70365]"
  }, {
    "left" : "if (ch >= SURR1_FIRST && ch <= SURR2_LAST)",
    "right" : "if (ch >= SURR1_FIRST && ch <= SURR2_LAST)",
    "info" : "IfStatement[70607-71567]:IfStatement[70374-71334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70650-71361]:Block[70417-71128]"
  }, {
    "left" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[70976-71011]:ExpressionStatement[70743-70778]"
  }, {
    "left" : "bbuf[outputPtr++] = BYTE_u;",
    "right" : "bbuf[outputPtr++] = BYTE_u;",
    "info" : "ExpressionStatement[71028-71055]:ExpressionStatement[70795-70822]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 12) & 0xF];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 12) & 0xF];",
    "info" : "ExpressionStatement[71089-71137]:ExpressionStatement[70856-70904]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 8) & 0xF];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 8) & 0xF];",
    "info" : "ExpressionStatement[71154-71201]:ExpressionStatement[70921-70968]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 4) & 0xF];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[(ch >> 4) & 0xF];",
    "info" : "ExpressionStatement[71218-71265]:ExpressionStatement[70985-71032]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[ch & 0xF];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[ch & 0xF];",
    "info" : "ExpressionStatement[71282-71322]:ExpressionStatement[71049-71089]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71367-71567]:Block[71134-71334]"
  }, {
    "left" : "bbuf[outputPtr++] = (byte) (0xe0 | (ch >> 12));",
    "right" : "bbuf[outputPtr++] = (byte) (0xe0 | (ch >> 12));",
    "info" : "ExpressionStatement[71381-71428]:ExpressionStatement[71148-71195]"
  }, {
    "left" : "bbuf[outputPtr++] = (byte) (0x80 | ((ch >> 6) & 0x3f));",
    "right" : "bbuf[outputPtr++] = (byte) (0x80 | ((ch >> 6) & 0x3f));",
    "info" : "ExpressionStatement[71441-71496]:ExpressionStatement[71208-71263]"
  }, {
    "left" : "bbuf[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "right" : "bbuf[outputPtr++] = (byte) (0x80 | (ch & 0x3f));",
    "info" : "ExpressionStatement[71509-71557]:ExpressionStatement[71276-71324]"
  }, {
    "left" : "return outputPtr;",
    "right" : "return outputPtr;",
    "info" : "ReturnStatement[71576-71593]:ReturnStatement[71343-71360]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[71605-71612]:Modifier[71372-71379]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[71613-71618]:Modifier[71380-71385]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[71619-71623]:PrimitiveType[71386-71390]"
  }, {
    "left" : "_writeNull",
    "right" : "_writeNull",
    "info" : "SimpleName[71624-71634]:SimpleName[71391-71401]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[71644-71655]:SimpleType[71411-71422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71660-71850]:Block[71427-71617]"
  }, {
    "left" : "if ((_outputTail + 4) >= _outputEnd)",
    "right" : "if ((_outputTail + 4) >= _outputEnd)",
    "info" : "IfStatement[71670-71746]:IfStatement[71437-71513]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71707-71746]:Block[71474-71513]"
  }, {
    "left" : "_flushBuffer();",
    "right" : "_flushBuffer();",
    "info" : "ExpressionStatement[71721-71736]:ExpressionStatement[71488-71503]"
  }, {
    "left" : "System.arraycopy(NULL_BYTES, 0, _outputBuffer, _outputTail, 4);",
    "right" : "System.arraycopy(NULL_BYTES, 0, _outputBuffer, _outputTail, 4);",
    "info" : "ExpressionStatement[71755-71818]:ExpressionStatement[71522-71585]"
  }, {
    "left" : "_outputTail += 4;",
    "right" : "_outputTail += 4;",
    "info" : "ExpressionStatement[71827-71844]:ExpressionStatement[71594-71611]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[72043-72050]:Modifier[71810-71817]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[72051-72054]:PrimitiveType[71818-71821]"
  }, {
    "left" : "_writeGenericEscape",
    "right" : "_writeGenericEscape",
    "info" : "SimpleName[72055-72074]:SimpleName[71822-71841]"
  }, {
    "left" : "int charToEscape",
    "right" : "int charToEscape",
    "info" : "SingleVariableDeclaration[72075-72091]:SingleVariableDeclaration[71842-71858]"
  }, {
    "left" : "int outputPtr",
    "right" : "int outputPtr",
    "info" : "SingleVariableDeclaration[72093-72106]:SingleVariableDeclaration[71860-71873]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[72115-72126]:SimpleType[71882-71893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72131-72809]:Block[71898-72576]"
  }, {
    "left" : "final byte[] bbuf = _outputBuffer;",
    "right" : "final byte[] bbuf = _outputBuffer;",
    "info" : "VariableDeclarationStatement[72141-72175]:VariableDeclarationStatement[71908-71942]"
  }, {
    "left" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
    "right" : "bbuf[outputPtr++] = BYTE_BACKSLASH;",
    "info" : "ExpressionStatement[72184-72219]:ExpressionStatement[71951-71986]"
  }, {
    "left" : "bbuf[outputPtr++] = BYTE_u;",
    "right" : "bbuf[outputPtr++] = BYTE_u;",
    "info" : "ExpressionStatement[72228-72255]:ExpressionStatement[71995-72022]"
  }, {
    "left" : "if (charToEscape > 0xFF)",
    "right" : "if (charToEscape > 0xFF)",
    "info" : "IfStatement[72264-72585]:IfStatement[72031-72352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72289-72488]:Block[72056-72255]"
  }, {
    "left" : "int hi = (charToEscape >> 8) & 0xFF;",
    "right" : "int hi = (charToEscape >> 8) & 0xFF;",
    "info" : "VariableDeclarationStatement[72303-72339]:VariableDeclarationStatement[72070-72106]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[hi >> 4];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[hi >> 4];",
    "info" : "ExpressionStatement[72352-72391]:ExpressionStatement[72119-72158]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[hi & 0xF];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[hi & 0xF];",
    "info" : "ExpressionStatement[72404-72444]:ExpressionStatement[72171-72211]"
  }, {
    "left" : "charToEscape &= 0xFF;",
    "right" : "charToEscape &= 0xFF;",
    "info" : "ExpressionStatement[72457-72478]:ExpressionStatement[72224-72245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72494-72585]:Block[72261-72352]"
  }, {
    "left" : "bbuf[outputPtr++] = BYTE_0;",
    "right" : "bbuf[outputPtr++] = BYTE_0;",
    "info" : "ExpressionStatement[72508-72535]:ExpressionStatement[72275-72302]"
  }, {
    "left" : "bbuf[outputPtr++] = BYTE_0;",
    "right" : "bbuf[outputPtr++] = BYTE_0;",
    "info" : "ExpressionStatement[72548-72575]:ExpressionStatement[72315-72342]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape >> 4];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape >> 4];",
    "info" : "ExpressionStatement[72669-72718]:ExpressionStatement[72436-72485]"
  }, {
    "left" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape & 0xF];",
    "right" : "bbuf[outputPtr++] = HEX_CHARS[charToEscape & 0xF];",
    "info" : "ExpressionStatement[72727-72777]:ExpressionStatement[72494-72544]"
  }, {
    "left" : "return outputPtr;",
    "right" : "return outputPtr;",
    "info" : "ReturnStatement[72786-72803]:ReturnStatement[72553-72570]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[72815-72824]:Modifier[72582-72591]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[72825-72830]:Modifier[72592-72597]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[72831-72835]:PrimitiveType[72598-72602]"
  }, {
    "left" : "_flushBuffer",
    "right" : "_flushBuffer",
    "info" : "SimpleName[72836-72848]:SimpleName[72603-72615]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[72858-72869]:SimpleType[72625-72636]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72874-73030]:Block[72641-72797]"
  }, {
    "left" : "int len = _outputTail;",
    "right" : "int len = _outputTail;",
    "info" : "VariableDeclarationStatement[72884-72906]:VariableDeclarationStatement[72651-72673]"
  }, {
    "left" : "if (len > 0)",
    "right" : "if (len > 0)",
    "info" : "IfStatement[72915-73024]:IfStatement[72682-72791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72928-73024]:Block[72695-72791]"
  }, {
    "left" : "_outputTail = 0;",
    "right" : "_outputTail = 0;",
    "info" : "ExpressionStatement[72942-72958]:ExpressionStatement[72709-72725]"
  }, {
    "left" : "_outputStream.write(_outputBuffer, 0, len);",
    "right" : "_outputStream.write(_outputBuffer, 0, len);",
    "info" : "ExpressionStatement[72971-73014]:ExpressionStatement[72738-72781]"
  } ]
}