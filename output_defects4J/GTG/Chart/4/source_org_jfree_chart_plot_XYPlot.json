{
  "matchedElements" : [
 {
    "left" : "class : XYPlot",
    "right" : "class : XYPlot",
    "info" : "TypeDeclaration[15903-209490]:TypeDeclaration[15903-209543]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[16557-16654]:FieldDeclaration[16557-16654]"
  }, {
    "left" : "DEFAULT_GRIDLINE_STROKE",
    "right" : "DEFAULT_GRIDLINE_STROKE",
    "info" : "FieldDeclaration[16662-16889]:FieldDeclaration[16662-16889]"
  }, {
    "left" : "DEFAULT_GRIDLINE_PAINT",
    "right" : "DEFAULT_GRIDLINE_PAINT",
    "info" : "FieldDeclaration[16897-17001]:FieldDeclaration[16897-17001]"
  }, {
    "left" : "DEFAULT_CROSSHAIR_VISIBLE",
    "right" : "DEFAULT_CROSSHAIR_VISIBLE",
    "info" : "FieldDeclaration[17009-17117]:FieldDeclaration[17009-17117]"
  }, {
    "left" : "DEFAULT_CROSSHAIR_STROKE",
    "right" : "DEFAULT_CROSSHAIR_STROKE",
    "info" : "FieldDeclaration[17125-17258]:FieldDeclaration[17125-17258]"
  }, {
    "left" : "DEFAULT_CROSSHAIR_PAINT",
    "right" : "DEFAULT_CROSSHAIR_PAINT",
    "info" : "FieldDeclaration[17266-17370]:FieldDeclaration[17266-17370]"
  }, {
    "left" : "localizationResources",
    "right" : "localizationResources",
    "info" : "FieldDeclaration[17378-17597]:FieldDeclaration[17378-17597]"
  }, {
    "left" : "orientation",
    "right" : "orientation",
    "info" : "FieldDeclaration[17605-17675]:FieldDeclaration[17605-17675]"
  }, {
    "left" : "axisOffset",
    "right" : "axisOffset",
    "info" : "FieldDeclaration[17683-17777]:FieldDeclaration[17683-17777]"
  }, {
    "left" : "domainAxes",
    "right" : "domainAxes",
    "info" : "FieldDeclaration[17785-17875]:FieldDeclaration[17785-17875]"
  }, {
    "left" : "domainAxisLocations",
    "right" : "domainAxisLocations",
    "info" : "FieldDeclaration[17883-17961]:FieldDeclaration[17883-17961]"
  }, {
    "left" : "rangeAxes",
    "right" : "rangeAxes",
    "info" : "FieldDeclaration[17969-18050]:FieldDeclaration[17969-18050]"
  }, {
    "left" : "rangeAxisLocations",
    "right" : "rangeAxisLocations",
    "info" : "FieldDeclaration[18058-18133]:FieldDeclaration[18058-18133]"
  }, {
    "left" : "datasets",
    "right" : "datasets",
    "info" : "FieldDeclaration[18141-18207]:FieldDeclaration[18141-18207]"
  }, {
    "left" : "renderers",
    "right" : "renderers",
    "info" : "FieldDeclaration[18215-18283]:FieldDeclaration[18215-18283]"
  }, {
    "left" : "datasetToDomainAxesMap",
    "right" : "datasetToDomainAxesMap",
    "info" : "FieldDeclaration[18291-18748]:FieldDeclaration[18291-18748]"
  }, {
    "left" : "datasetToRangeAxesMap",
    "right" : "datasetToRangeAxesMap",
    "info" : "FieldDeclaration[18756-19211]:FieldDeclaration[18756-19211]"
  }, {
    "left" : "quadrantOrigin",
    "right" : "quadrantOrigin",
    "info" : "FieldDeclaration[19219-19350]:FieldDeclaration[19219-19350]"
  }, {
    "left" : "quadrantPaint",
    "right" : "quadrantPaint",
    "info" : "FieldDeclaration[19358-19496]:FieldDeclaration[19358-19496]"
  }, {
    "left" : "domainGridlinesVisible",
    "right" : "domainGridlinesVisible",
    "info" : "FieldDeclaration[19504-19619]:FieldDeclaration[19504-19619]"
  }, {
    "left" : "domainGridlineStroke",
    "right" : "domainGridlineStroke",
    "info" : "FieldDeclaration[19627-19732]:FieldDeclaration[19627-19732]"
  }, {
    "left" : "domainGridlinePaint",
    "right" : "domainGridlinePaint",
    "info" : "FieldDeclaration[19740-19842]:FieldDeclaration[19740-19842]"
  }, {
    "left" : "rangeGridlinesVisible",
    "right" : "rangeGridlinesVisible",
    "info" : "FieldDeclaration[19850-19963]:FieldDeclaration[19850-19963]"
  }, {
    "left" : "rangeGridlineStroke",
    "right" : "rangeGridlineStroke",
    "info" : "FieldDeclaration[19971-20074]:FieldDeclaration[19971-20074]"
  }, {
    "left" : "rangeGridlinePaint",
    "right" : "rangeGridlinePaint",
    "info" : "FieldDeclaration[20082-20182]:FieldDeclaration[20082-20182]"
  }, {
    "left" : "domainMinorGridlinesVisible",
    "right" : "domainMinorGridlinesVisible",
    "info" : "FieldDeclaration[20190-20360]:FieldDeclaration[20190-20360]"
  }, {
    "left" : "domainMinorGridlineStroke",
    "right" : "domainMinorGridlineStroke",
    "info" : "FieldDeclaration[20368-20528]:FieldDeclaration[20368-20528]"
  }, {
    "left" : "domainMinorGridlinePaint",
    "right" : "domainMinorGridlinePaint",
    "info" : "FieldDeclaration[20536-20693]:FieldDeclaration[20536-20693]"
  }, {
    "left" : "rangeMinorGridlinesVisible",
    "right" : "rangeMinorGridlinesVisible",
    "info" : "FieldDeclaration[20701-20869]:FieldDeclaration[20701-20869]"
  }, {
    "left" : "rangeMinorGridlineStroke",
    "right" : "rangeMinorGridlineStroke",
    "info" : "FieldDeclaration[20877-21035]:FieldDeclaration[20877-21035]"
  }, {
    "left" : "rangeMinorGridlinePaint",
    "right" : "rangeMinorGridlinePaint",
    "info" : "FieldDeclaration[21043-21198]:FieldDeclaration[21043-21198]"
  }, {
    "left" : "domainZeroBaselineVisible",
    "right" : "domainZeroBaselineVisible",
    "info" : "FieldDeclaration[21206-21401]:FieldDeclaration[21206-21401]"
  }, {
    "left" : "domainZeroBaselineStroke",
    "right" : "domainZeroBaselineStroke",
    "info" : "FieldDeclaration[21409-21577]:FieldDeclaration[21409-21577]"
  }, {
    "left" : "domainZeroBaselinePaint",
    "right" : "domainZeroBaselinePaint",
    "info" : "FieldDeclaration[21585-21750]:FieldDeclaration[21585-21750]"
  }, {
    "left" : "rangeZeroBaselineVisible",
    "right" : "rangeZeroBaselineVisible",
    "info" : "FieldDeclaration[21758-21922]:FieldDeclaration[21758-21922]"
  }, {
    "left" : "rangeZeroBaselineStroke",
    "right" : "rangeZeroBaselineStroke",
    "info" : "FieldDeclaration[21930-22053]:FieldDeclaration[21930-22053]"
  }, {
    "left" : "rangeZeroBaselinePaint",
    "right" : "rangeZeroBaselinePaint",
    "info" : "FieldDeclaration[22061-22181]:FieldDeclaration[22061-22181]"
  }, {
    "left" : "domainCrosshairVisible",
    "right" : "domainCrosshairVisible",
    "info" : "FieldDeclaration[22189-22305]:FieldDeclaration[22189-22305]"
  }, {
    "left" : "domainCrosshairValue",
    "right" : "domainCrosshairValue",
    "info" : "FieldDeclaration[22313-22389]:FieldDeclaration[22313-22389]"
  }, {
    "left" : "domainCrosshairStroke",
    "right" : "domainCrosshairStroke",
    "info" : "FieldDeclaration[22397-22507]:FieldDeclaration[22397-22507]"
  }, {
    "left" : "domainCrosshairPaint",
    "right" : "domainCrosshairPaint",
    "info" : "FieldDeclaration[22515-22619]:FieldDeclaration[22515-22619]"
  }, {
    "left" : "domainCrosshairLockedOnData",
    "right" : "domainCrosshairLockedOnData",
    "info" : "FieldDeclaration[22627-22793]:FieldDeclaration[22627-22793]"
  }, {
    "left" : "rangeCrosshairVisible",
    "right" : "rangeCrosshairVisible",
    "info" : "FieldDeclaration[22801-22915]:FieldDeclaration[22801-22915]"
  }, {
    "left" : "rangeCrosshairValue",
    "right" : "rangeCrosshairValue",
    "info" : "FieldDeclaration[22923-22997]:FieldDeclaration[22923-22997]"
  }, {
    "left" : "rangeCrosshairStroke",
    "right" : "rangeCrosshairStroke",
    "info" : "FieldDeclaration[23005-23114]:FieldDeclaration[23005-23114]"
  }, {
    "left" : "rangeCrosshairPaint",
    "right" : "rangeCrosshairPaint",
    "info" : "FieldDeclaration[23122-23225]:FieldDeclaration[23122-23225]"
  }, {
    "left" : "rangeCrosshairLockedOnData",
    "right" : "rangeCrosshairLockedOnData",
    "info" : "FieldDeclaration[23233-23398]:FieldDeclaration[23233-23398]"
  }, {
    "left" : "foregroundDomainMarkers",
    "right" : "foregroundDomainMarkers",
    "info" : "FieldDeclaration[23406-23523]:FieldDeclaration[23406-23523]"
  }, {
    "left" : "backgroundDomainMarkers",
    "right" : "backgroundDomainMarkers",
    "info" : "FieldDeclaration[23531-23648]:FieldDeclaration[23531-23648]"
  }, {
    "left" : "foregroundRangeMarkers",
    "right" : "foregroundRangeMarkers",
    "info" : "FieldDeclaration[23656-23771]:FieldDeclaration[23656-23771]"
  }, {
    "left" : "backgroundRangeMarkers",
    "right" : "backgroundRangeMarkers",
    "info" : "FieldDeclaration[23779-23894]:FieldDeclaration[23779-23894]"
  }, {
    "left" : "annotations",
    "right" : "annotations",
    "info" : "FieldDeclaration[23902-24116]:FieldDeclaration[23902-24116]"
  }, {
    "left" : "domainTickBandPaint",
    "right" : "domainTickBandPaint",
    "info" : "FieldDeclaration[24124-24231]:FieldDeclaration[24124-24231]"
  }, {
    "left" : "rangeTickBandPaint",
    "right" : "rangeTickBandPaint",
    "info" : "FieldDeclaration[24239-24344]:FieldDeclaration[24239-24344]"
  }, {
    "left" : "fixedDomainAxisSpace",
    "right" : "fixedDomainAxisSpace",
    "info" : "FieldDeclaration[24352-24432]:FieldDeclaration[24352-24432]"
  }, {
    "left" : "fixedRangeAxisSpace",
    "right" : "fixedRangeAxisSpace",
    "info" : "FieldDeclaration[24440-24518]:FieldDeclaration[24440-24518]"
  }, {
    "left" : "datasetRenderingOrder",
    "right" : "datasetRenderingOrder",
    "info" : "FieldDeclaration[24526-24766]:FieldDeclaration[24526-24766]"
  }, {
    "left" : "seriesRenderingOrder",
    "right" : "seriesRenderingOrder",
    "info" : "FieldDeclaration[24774-25009]:FieldDeclaration[24774-25009]"
  }, {
    "left" : "weight",
    "right" : "weight",
    "info" : "FieldDeclaration[25017-25152]:FieldDeclaration[25017-25152]"
  }, {
    "left" : "fixedLegendItems",
    "right" : "fixedLegendItems",
    "info" : "FieldDeclaration[25160-25332]:FieldDeclaration[25160-25332]"
  }, {
    "left" : "domainPannable",
    "right" : "domainPannable",
    "info" : "FieldDeclaration[25340-25516]:FieldDeclaration[25340-25516]"
  }, {
    "left" : "rangePannable",
    "right" : "rangePannable",
    "info" : "FieldDeclaration[25524-25698]:FieldDeclaration[25524-25698]"
  }, {
    "left" : "public XYPlot()",
    "right" : "public XYPlot()",
    "info" : "MethodDeclaration[25706-25943]:MethodDeclaration[25706-25943]"
  }, {
    "left" : "public XYPlot(dataset , domainAxis , rangeAxis , renderer )",
    "right" : "public XYPlot(dataset , domainAxis , rangeAxis , renderer )",
    "info" : "MethodDeclaration[25951-30072]:MethodDeclaration[25951-30072]"
  }, {
    "left" : "public getPlotType() : ",
    "right" : "public getPlotType() : ",
    "info" : "MethodDeclaration[30080-30305]:MethodDeclaration[30080-30305]"
  }, {
    "left" : "public getOrientation() : ",
    "right" : "public getOrientation() : ",
    "info" : "MethodDeclaration[30313-30579]:MethodDeclaration[30313-30579]"
  }, {
    "left" : "public setOrientation(orientation ) : void",
    "right" : "public setOrientation(orientation ) : void",
    "info" : "MethodDeclaration[30587-31172]:MethodDeclaration[30587-31172]"
  }, {
    "left" : "public getAxisOffset() : ",
    "right" : "public getAxisOffset() : ",
    "info" : "MethodDeclaration[31180-31431]:MethodDeclaration[31180-31431]"
  }, {
    "left" : "public setAxisOffset(offset ) : void",
    "right" : "public setAxisOffset(offset ) : void",
    "info" : "MethodDeclaration[31439-31955]:MethodDeclaration[31439-31955]"
  }, {
    "left" : "public getDomainAxis() : ",
    "right" : "public getDomainAxis() : ",
    "info" : "MethodDeclaration[31963-32411]:MethodDeclaration[31963-32411]"
  }, {
    "left" : "public getDomainAxis(index int) : ",
    "right" : "public getDomainAxis(index int) : ",
    "info" : "MethodDeclaration[32419-33145]:MethodDeclaration[32419-33145]"
  }, {
    "left" : "public setDomainAxis(axis ...) : void",
    "right" : "public setDomainAxis(axis ...) : void",
    "info" : "MethodDeclaration[33153-33524]:MethodDeclaration[33153-33524]"
  }, {
    "left" : "public setDomainAxis(index int, axis ...) : void",
    "right" : "public setDomainAxis(index int, axis ...) : void",
    "info" : "MethodDeclaration[33532-33945]:MethodDeclaration[33532-33945]"
  }, {
    "left" : "public setDomainAxis(index int, axis , notify boolean) : void",
    "right" : "public setDomainAxis(index int, axis , notify boolean) : void",
    "info" : "MethodDeclaration[33953-34764]:MethodDeclaration[33953-34764]"
  }, {
    "left" : "public setDomainAxes(axes ...) : void",
    "right" : "public setDomainAxes(axes ...) : void",
    "info" : "MethodDeclaration[34772-35214]:MethodDeclaration[34772-35214]"
  }, {
    "left" : "public getDomainAxisLocation() : ",
    "right" : "public getDomainAxisLocation() : ",
    "info" : "MethodDeclaration[35222-35535]:MethodDeclaration[35222-35535]"
  }, {
    "left" : "public setDomainAxisLocation(location ) : void",
    "right" : "public setDomainAxisLocation(location ) : void",
    "info" : "MethodDeclaration[35543-35954]:MethodDeclaration[35543-35954]"
  }, {
    "left" : "public setDomainAxisLocation(location , notify boolean) : void",
    "right" : "public setDomainAxisLocation(location , notify boolean) : void",
    "info" : "MethodDeclaration[35962-36439]:MethodDeclaration[35962-36439]"
  }, {
    "left" : "public getDomainAxisEdge() : ",
    "right" : "public getDomainAxisEdge() : ",
    "info" : "MethodDeclaration[36447-36840]:MethodDeclaration[36447-36840]"
  }, {
    "left" : "public getDomainAxisCount() : int",
    "right" : "public getDomainAxisCount() : int",
    "info" : "MethodDeclaration[36848-37071]:MethodDeclaration[36848-37071]"
  }, {
    "left" : "public clearDomainAxes() : void",
    "right" : "public clearDomainAxes() : void",
    "info" : "MethodDeclaration[37079-37589]:MethodDeclaration[37079-37589]"
  }, {
    "left" : "public configureDomainAxes() : void",
    "right" : "public configureDomainAxes() : void",
    "info" : "MethodDeclaration[37597-37913]:MethodDeclaration[37597-37913]"
  }, {
    "left" : "public getDomainAxisLocation(index int) : ",
    "right" : "public getDomainAxisLocation(index int) : ",
    "info" : "MethodDeclaration[37921-38677]:MethodDeclaration[37921-38677]"
  }, {
    "left" : "public setDomainAxisLocation(index int, location ) : void",
    "right" : "public setDomainAxisLocation(index int, location ) : void",
    "info" : "MethodDeclaration[38685-39167]:MethodDeclaration[38685-39167]"
  }, {
    "left" : "public setDomainAxisLocation(index int, location , notify boolean) : void",
    "right" : "public setDomainAxisLocation(index int, location , notify boolean) : void",
    "info" : "MethodDeclaration[39175-40059]:MethodDeclaration[39175-40059]"
  }, {
    "left" : "public getDomainAxisEdge(index int) : ",
    "right" : "public getDomainAxisEdge(index int) : ",
    "info" : "MethodDeclaration[40067-40616]:MethodDeclaration[40067-40616]"
  }, {
    "left" : "public getRangeAxis() : ",
    "right" : "public getRangeAxis() : ",
    "info" : "MethodDeclaration[40624-41035]:MethodDeclaration[40624-41035]"
  }, {
    "left" : "public setRangeAxis(axis ...) : void",
    "right" : "public setRangeAxis(axis ...) : void",
    "info" : "MethodDeclaration[41043-41853]:MethodDeclaration[41043-41853]"
  }, {
    "left" : "public getRangeAxisLocation() : ",
    "right" : "public getRangeAxisLocation() : ",
    "info" : "MethodDeclaration[41861-42170]:MethodDeclaration[41861-42170]"
  }, {
    "left" : "public setRangeAxisLocation(location ) : void",
    "right" : "public setRangeAxisLocation(location ) : void",
    "info" : "MethodDeclaration[42178-42585]:MethodDeclaration[42178-42585]"
  }, {
    "left" : "public setRangeAxisLocation(location , notify boolean) : void",
    "right" : "public setRangeAxisLocation(location , notify boolean) : void",
    "info" : "MethodDeclaration[42593-43074]:MethodDeclaration[42593-43074]"
  }, {
    "left" : "public getRangeAxisEdge() : ",
    "right" : "public getRangeAxisEdge() : ",
    "info" : "MethodDeclaration[43082-43428]:MethodDeclaration[43082-43428]"
  }, {
    "left" : "public getRangeAxis(index int) : ",
    "right" : "public getRangeAxis(index int) : ",
    "info" : "MethodDeclaration[43436-44107]:MethodDeclaration[43436-44107]"
  }, {
    "left" : "public setRangeAxis(index int, axis ...) : void",
    "right" : "public setRangeAxis(index int, axis ...) : void",
    "info" : "MethodDeclaration[44115-44481]:MethodDeclaration[44115-44481]"
  }, {
    "left" : "public setRangeAxis(index int, axis , notify boolean) : void",
    "right" : "public setRangeAxis(index int, axis , notify boolean) : void",
    "info" : "MethodDeclaration[44489-45325]:MethodDeclaration[44489-45325]"
  }, {
    "left" : "public setRangeAxes(axes ...) : void",
    "right" : "public setRangeAxes(axes ...) : void",
    "info" : "MethodDeclaration[45333-45773]:MethodDeclaration[45333-45773]"
  }, {
    "left" : "public getRangeAxisCount() : int",
    "right" : "public getRangeAxisCount() : int",
    "info" : "MethodDeclaration[45781-46002]:MethodDeclaration[45781-46002]"
  }, {
    "left" : "public clearRangeAxes() : void",
    "right" : "public clearRangeAxes() : void",
    "info" : "MethodDeclaration[46010-46516]:MethodDeclaration[46010-46516]"
  }, {
    "left" : "public configureRangeAxes() : void",
    "right" : "public configureRangeAxes() : void",
    "info" : "MethodDeclaration[46524-46880]:MethodDeclaration[46524-46880]"
  }, {
    "left" : "public getRangeAxisLocation(index int) : ",
    "right" : "public getRangeAxisLocation(index int) : ",
    "info" : "MethodDeclaration[46888-47637]:MethodDeclaration[46888-47637]"
  }, {
    "left" : "public setRangeAxisLocation(index int, location ) : void",
    "right" : "public setRangeAxisLocation(index int, location ) : void",
    "info" : "MethodDeclaration[47645-48095]:MethodDeclaration[47645-48095]"
  }, {
    "left" : "public setRangeAxisLocation(index int, location , notify boolean) : void",
    "right" : "public setRangeAxisLocation(index int, location , notify boolean) : void",
    "info" : "MethodDeclaration[48103-48985]:MethodDeclaration[48103-48985]"
  }, {
    "left" : "public getRangeAxisEdge(index int) : ",
    "right" : "public getRangeAxisEdge(index int) : ",
    "info" : "MethodDeclaration[48993-49572]:MethodDeclaration[48993-49572]"
  }, {
    "left" : "public getDataset() : ",
    "right" : "public getDataset() : ",
    "info" : "MethodDeclaration[49580-49865]:MethodDeclaration[49580-49865]"
  }, {
    "left" : "public getDataset(index int) : ",
    "right" : "public getDataset(index int) : ",
    "info" : "MethodDeclaration[49873-50303]:MethodDeclaration[49873-50303]"
  }, {
    "left" : "public setDataset(dataset ) : void",
    "right" : "public setDataset(dataset ) : void",
    "info" : "MethodDeclaration[50311-50666]:MethodDeclaration[50311-50666]"
  }, {
    "left" : "public setDataset(index int, dataset ) : void",
    "right" : "public setDataset(index int, dataset ) : void",
    "info" : "MethodDeclaration[50674-51380]:MethodDeclaration[50674-51380]"
  }, {
    "left" : "public getDatasetCount() : int",
    "right" : "public getDatasetCount() : int",
    "info" : "MethodDeclaration[51388-51569]:MethodDeclaration[51388-51569]"
  }, {
    "left" : "public indexOf(dataset ) : int",
    "right" : "public indexOf(dataset ) : int",
    "info" : "MethodDeclaration[51577-52117]:MethodDeclaration[51577-52117]"
  }, {
    "left" : "public mapDatasetToDomainAxis(index int, axisIndex int) : void",
    "right" : "public mapDatasetToDomainAxis(index int, axisIndex int) : void",
    "info" : "MethodDeclaration[52125-52683]:MethodDeclaration[52125-52683]"
  }, {
    "left" : "public mapDatasetToDomainAxes(index int, axisIndices ...) : void",
    "right" : "public mapDatasetToDomainAxes(index int, axisIndices ...) : void",
    "info" : "MethodDeclaration[52691-53540]:MethodDeclaration[52691-53540]"
  }, {
    "left" : "public mapDatasetToRangeAxis(index int, axisIndex int) : void",
    "right" : "public mapDatasetToRangeAxis(index int, axisIndex int) : void",
    "info" : "MethodDeclaration[53548-54104]:MethodDeclaration[53548-54104]"
  }, {
    "left" : "public mapDatasetToRangeAxes(index int, axisIndices ...) : void",
    "right" : "public mapDatasetToRangeAxes(index int, axisIndices ...) : void",
    "info" : "MethodDeclaration[54112-54959]:MethodDeclaration[54112-54959]"
  }, {
    "left" : "private checkAxisIndices(indices ...) : void",
    "right" : "private checkAxisIndices(indices ...) : void",
    "info" : "MethodDeclaration[54967-56115]:MethodDeclaration[54967-56115]"
  }, {
    "left" : "public getRendererCount() : int",
    "right" : "public getRendererCount() : int",
    "info" : "MethodDeclaration[56123-56362]:MethodDeclaration[56123-56362]"
  }, {
    "left" : "public getRenderer() : ",
    "right" : "public getRenderer() : ",
    "info" : "MethodDeclaration[56370-56640]:MethodDeclaration[56370-56640]"
  }, {
    "left" : "public getRenderer(index int) : ",
    "right" : "public getRenderer(index int) : ",
    "info" : "MethodDeclaration[56648-57145]:MethodDeclaration[56648-57145]"
  }, {
    "left" : "public setRenderer(renderer ) : void",
    "right" : "public setRenderer(renderer ) : void",
    "info" : "MethodDeclaration[57153-57580]:MethodDeclaration[57153-57580]"
  }, {
    "left" : "public setRenderer(index int, renderer ) : void",
    "right" : "public setRenderer(index int, renderer ) : void",
    "info" : "MethodDeclaration[57588-57935]:MethodDeclaration[57588-57935]"
  }, {
    "left" : "public setRenderer(index int, renderer , notify boolean) : void",
    "right" : "public setRenderer(index int, renderer , notify boolean) : void",
    "info" : "MethodDeclaration[57943-58783]:MethodDeclaration[57943-58783]"
  }, {
    "left" : "public setRenderers(renderers ...) : void",
    "right" : "public setRenderers(renderers ...) : void",
    "info" : "MethodDeclaration[58791-59210]:MethodDeclaration[58791-59210]"
  }, {
    "left" : "public getDatasetRenderingOrder() : ",
    "right" : "public getDatasetRenderingOrder() : ",
    "info" : "MethodDeclaration[59218-59520]:MethodDeclaration[59218-59520]"
  }, {
    "left" : "public setDatasetRenderingOrder(order ) : void",
    "right" : "public setDatasetRenderingOrder(order ) : void",
    "info" : "MethodDeclaration[59528-60220]:MethodDeclaration[59528-60220]"
  }, {
    "left" : "public getSeriesRenderingOrder() : ",
    "right" : "public getSeriesRenderingOrder() : ",
    "info" : "MethodDeclaration[60228-60524]:MethodDeclaration[60228-60524]"
  }, {
    "left" : "public setSeriesRenderingOrder(order ) : void",
    "right" : "public setSeriesRenderingOrder(order ) : void",
    "info" : "MethodDeclaration[60532-61204]:MethodDeclaration[60532-61204]"
  }, {
    "left" : "public getIndexOf(renderer ) : int",
    "right" : "public getIndexOf(renderer ) : int",
    "info" : "MethodDeclaration[61212-61582]:MethodDeclaration[61212-61582]"
  }, {
    "left" : "public getRendererForDataset(dataset ) : ",
    "right" : "public getRendererForDataset(dataset ) : ",
    "info" : "MethodDeclaration[61590-62434]:MethodDeclaration[61590-62434]"
  }, {
    "left" : "public getWeight() : int",
    "right" : "public getWeight() : int",
    "info" : "MethodDeclaration[62442-62695]:MethodDeclaration[62442-62695]"
  }, {
    "left" : "public setWeight(weight int) : void",
    "right" : "public setWeight(weight int) : void",
    "info" : "MethodDeclaration[62703-63009]:MethodDeclaration[62703-63009]"
  }, {
    "left" : "public isDomainGridlinesVisible() : boolean",
    "right" : "public isDomainGridlinesVisible() : boolean",
    "info" : "MethodDeclaration[63017-63364]:MethodDeclaration[63017-63364]"
  }, {
    "left" : "public setDomainGridlinesVisible(visible boolean) : void",
    "right" : "public setDomainGridlinesVisible(visible boolean) : void",
    "info" : "MethodDeclaration[63372-63926]:MethodDeclaration[63372-63926]"
  }, {
    "left" : "public isDomainMinorGridlinesVisible() : boolean",
    "right" : "public isDomainMinorGridlinesVisible() : boolean",
    "info" : "MethodDeclaration[63934-64332]:MethodDeclaration[63934-64332]"
  }, {
    "left" : "public setDomainMinorGridlinesVisible(visible boolean) : void",
    "right" : "public setDomainMinorGridlinesVisible(visible boolean) : void",
    "info" : "MethodDeclaration[64340-64950]:MethodDeclaration[64340-64950]"
  }, {
    "left" : "public getDomainGridlineStroke() : ",
    "right" : "public getDomainGridlineStroke() : ",
    "info" : "MethodDeclaration[64958-65279]:MethodDeclaration[64958-65279]"
  }, {
    "left" : "public setDomainGridlineStroke(stroke ) : void",
    "right" : "public setDomainGridlineStroke(stroke ) : void",
    "info" : "MethodDeclaration[65287-65935]:MethodDeclaration[65287-65935]"
  }, {
    "left" : "public getDomainMinorGridlineStroke() : ",
    "right" : "public getDomainMinorGridlineStroke() : ",
    "info" : "MethodDeclaration[65943-66317]:MethodDeclaration[65943-66317]"
  }, {
    "left" : "public setDomainMinorGridlineStroke(stroke ) : void",
    "right" : "public setDomainMinorGridlineStroke(stroke ) : void",
    "info" : "MethodDeclaration[66325-67024]:MethodDeclaration[66325-67024]"
  }, {
    "left" : "public getDomainGridlinePaint() : ",
    "right" : "public getDomainGridlinePaint() : ",
    "info" : "MethodDeclaration[67032-67346]:MethodDeclaration[67032-67346]"
  }, {
    "left" : "public setDomainGridlinePaint(paint ) : void",
    "right" : "public setDomainGridlinePaint(paint ) : void",
    "info" : "MethodDeclaration[67354-67990]:MethodDeclaration[67354-67990]"
  }, {
    "left" : "public getDomainMinorGridlinePaint() : ",
    "right" : "public getDomainMinorGridlinePaint() : ",
    "info" : "MethodDeclaration[67998-68363]:MethodDeclaration[67998-68363]"
  }, {
    "left" : "public setDomainMinorGridlinePaint(paint ) : void",
    "right" : "public setDomainMinorGridlinePaint(paint ) : void",
    "info" : "MethodDeclaration[68371-69058]:MethodDeclaration[68371-69058]"
  }, {
    "left" : "public isRangeGridlinesVisible() : boolean",
    "right" : "public isRangeGridlinesVisible() : boolean",
    "info" : "MethodDeclaration[69066-69378]:MethodDeclaration[69066-69378]"
  }, {
    "left" : "public setRangeGridlinesVisible(visible boolean) : void",
    "right" : "public setRangeGridlinesVisible(visible boolean) : void",
    "info" : "MethodDeclaration[69386-69940]:MethodDeclaration[69386-69940]"
  }, {
    "left" : "public getRangeGridlineStroke() : ",
    "right" : "public getRangeGridlineStroke() : ",
    "info" : "MethodDeclaration[69948-70265]:MethodDeclaration[69948-70265]"
  }, {
    "left" : "public setRangeGridlineStroke(stroke ) : void",
    "right" : "public setRangeGridlineStroke(stroke ) : void",
    "info" : "MethodDeclaration[70273-70811]:MethodDeclaration[70273-70811]"
  }, {
    "left" : "public getRangeGridlinePaint() : ",
    "right" : "public getRangeGridlinePaint() : ",
    "info" : "MethodDeclaration[70819-71129]:MethodDeclaration[70819-71129]"
  }, {
    "left" : "public setRangeGridlinePaint(paint ) : void",
    "right" : "public setRangeGridlinePaint(paint ) : void",
    "info" : "MethodDeclaration[71137-71663]:MethodDeclaration[71137-71663]"
  }, {
    "left" : "public isRangeMinorGridlinesVisible() : boolean",
    "right" : "public isRangeMinorGridlinesVisible() : boolean",
    "info" : "MethodDeclaration[71671-72034]:MethodDeclaration[71671-72034]"
  }, {
    "left" : "public setRangeMinorGridlinesVisible(visible boolean) : void",
    "right" : "public setRangeMinorGridlinesVisible(visible boolean) : void",
    "info" : "MethodDeclaration[72042-72652]:MethodDeclaration[72042-72652]"
  }, {
    "left" : "public getRangeMinorGridlineStroke() : ",
    "right" : "public getRangeMinorGridlineStroke() : ",
    "info" : "MethodDeclaration[72660-73028]:MethodDeclaration[72660-73028]"
  }, {
    "left" : "public setRangeMinorGridlineStroke(stroke ) : void",
    "right" : "public setRangeMinorGridlineStroke(stroke ) : void",
    "info" : "MethodDeclaration[73036-73625]:MethodDeclaration[73036-73625]"
  }, {
    "left" : "public getRangeMinorGridlinePaint() : ",
    "right" : "public getRangeMinorGridlinePaint() : ",
    "info" : "MethodDeclaration[73633-73994]:MethodDeclaration[73633-73994]"
  }, {
    "left" : "public setRangeMinorGridlinePaint(paint ) : void",
    "right" : "public setRangeMinorGridlinePaint(paint ) : void",
    "info" : "MethodDeclaration[74002-74579]:MethodDeclaration[74002-74579]"
  }, {
    "left" : "public isDomainZeroBaselineVisible() : boolean",
    "right" : "public isDomainZeroBaselineVisible() : boolean",
    "info" : "MethodDeclaration[74587-74940]:MethodDeclaration[74587-74940]"
  }, {
    "left" : "public setDomainZeroBaselineVisible(visible boolean) : void",
    "right" : "public setDomainZeroBaselineVisible(visible boolean) : void",
    "info" : "MethodDeclaration[74948-75418]:MethodDeclaration[74948-75418]"
  }, {
    "left" : "public getDomainZeroBaselineStroke() : ",
    "right" : "public getDomainZeroBaselineStroke() : ",
    "info" : "MethodDeclaration[75426-75771]:MethodDeclaration[75426-75771]"
  }, {
    "left" : "public setDomainZeroBaselineStroke(stroke ) : void",
    "right" : "public setDomainZeroBaselineStroke(stroke ) : void",
    "info" : "MethodDeclaration[75779-76352]:MethodDeclaration[75779-76352]"
  }, {
    "left" : "public getDomainZeroBaselinePaint() : ",
    "right" : "public getDomainZeroBaselinePaint() : ",
    "info" : "MethodDeclaration[76360-76718]:MethodDeclaration[76360-76718]"
  }, {
    "left" : "public setDomainZeroBaselinePaint(paint ) : void",
    "right" : "public setDomainZeroBaselinePaint(paint ) : void",
    "info" : "MethodDeclaration[76726-77300]:MethodDeclaration[76726-77300]"
  }, {
    "left" : "public isRangeZeroBaselineVisible() : boolean",
    "right" : "public isRangeZeroBaselineVisible() : boolean",
    "info" : "MethodDeclaration[77308-77628]:MethodDeclaration[77308-77628]"
  }, {
    "left" : "public setRangeZeroBaselineVisible(visible boolean) : void",
    "right" : "public setRangeZeroBaselineVisible(visible boolean) : void",
    "info" : "MethodDeclaration[77636-78073]:MethodDeclaration[77636-78073]"
  }, {
    "left" : "public getRangeZeroBaselineStroke() : ",
    "right" : "public getRangeZeroBaselineStroke() : ",
    "info" : "MethodDeclaration[78081-78393]:MethodDeclaration[78081-78393]"
  }, {
    "left" : "public setRangeZeroBaselineStroke(stroke ) : void",
    "right" : "public setRangeZeroBaselineStroke(stroke ) : void",
    "info" : "MethodDeclaration[78401-78942]:MethodDeclaration[78401-78942]"
  }, {
    "left" : "public getRangeZeroBaselinePaint() : ",
    "right" : "public getRangeZeroBaselinePaint() : ",
    "info" : "MethodDeclaration[78950-79275]:MethodDeclaration[78950-79275]"
  }, {
    "left" : "public setRangeZeroBaselinePaint(paint ) : void",
    "right" : "public setRangeZeroBaselinePaint(paint ) : void",
    "info" : "MethodDeclaration[79283-79824]:MethodDeclaration[79283-79824]"
  }, {
    "left" : "public getDomainTickBandPaint() : ",
    "right" : "public getDomainTickBandPaint() : ",
    "info" : "MethodDeclaration[79832-80180]:MethodDeclaration[79832-80180]"
  }, {
    "left" : "public setDomainTickBandPaint(paint ) : void",
    "right" : "public setDomainTickBandPaint(paint ) : void",
    "info" : "MethodDeclaration[80188-80501]:MethodDeclaration[80188-80501]"
  }, {
    "left" : "public getRangeTickBandPaint() : ",
    "right" : "public getRangeTickBandPaint() : ",
    "info" : "MethodDeclaration[80509-80853]:MethodDeclaration[80509-80853]"
  }, {
    "left" : "public setRangeTickBandPaint(paint ) : void",
    "right" : "public setRangeTickBandPaint(paint ) : void",
    "info" : "MethodDeclaration[80861-81170]:MethodDeclaration[80861-81170]"
  }, {
    "left" : "public getQuadrantOrigin() : ",
    "right" : "public getQuadrantOrigin() : ",
    "info" : "MethodDeclaration[81178-81506]:MethodDeclaration[81178-81506]"
  }, {
    "left" : "public setQuadrantOrigin(origin ) : void",
    "right" : "public setQuadrantOrigin(origin ) : void",
    "info" : "MethodDeclaration[81514-81996]:MethodDeclaration[81514-81996]"
  }, {
    "left" : "public getQuadrantPaint(index int) : ",
    "right" : "public getQuadrantPaint(index int) : ",
    "info" : "MethodDeclaration[82004-82530]:MethodDeclaration[82004-82530]"
  }, {
    "left" : "public setQuadrantPaint(index int, paint ) : void",
    "right" : "public setQuadrantPaint(index int, paint ) : void",
    "info" : "MethodDeclaration[82538-83166]:MethodDeclaration[82538-83166]"
  }, {
    "left" : "public addDomainMarker(marker ) : void",
    "right" : "public addDomainMarker(marker ) : void",
    "info" : "MethodDeclaration[83174-83779]:MethodDeclaration[83174-83779]"
  }, {
    "left" : "public addDomainMarker(marker , layer ) : void",
    "right" : "public addDomainMarker(marker , layer ) : void",
    "info" : "MethodDeclaration[83787-84411]:MethodDeclaration[83787-84411]"
  }, {
    "left" : "public clearDomainMarkers() : void",
    "right" : "public clearDomainMarkers() : void",
    "info" : "MethodDeclaration[84419-85495]:MethodDeclaration[84419-85495]"
  }, {
    "left" : "public clearDomainMarkers(index int) : void",
    "right" : "public clearDomainMarkers(index int) : void",
    "info" : "MethodDeclaration[85503-86799]:MethodDeclaration[85503-86799]"
  }, {
    "left" : "public addDomainMarker(index int, marker , layer ) : void",
    "right" : "public addDomainMarker(index int, marker , layer ) : void",
    "info" : "MethodDeclaration[86807-87536]:MethodDeclaration[86807-87536]"
  }, {
    "left" : "public addDomainMarker(index int, marker , layer , notify boolean) : void",
    "right" : "public addDomainMarker(index int, marker , layer , notify boolean) : void",
    "info" : "MethodDeclaration[87544-89392]:MethodDeclaration[87544-89392]"
  }, {
    "left" : "public removeDomainMarker(marker ) : boolean",
    "right" : "public removeDomainMarker(marker ) : boolean",
    "info" : "MethodDeclaration[89400-89836]:MethodDeclaration[89400-89836]"
  }, {
    "left" : "public removeDomainMarker(marker , layer ) : boolean",
    "right" : "public removeDomainMarker(marker , layer ) : boolean",
    "info" : "MethodDeclaration[89844-90400]:MethodDeclaration[89844-90400]"
  }, {
    "left" : "public removeDomainMarker(index int, marker , layer ) : boolean",
    "right" : "public removeDomainMarker(index int, marker , layer ) : boolean",
    "info" : "MethodDeclaration[90408-90989]:MethodDeclaration[90408-90989]"
  }, {
    "left" : "public removeDomainMarker(index int, marker , layer , notify boolean) : boolean",
    "right" : "public removeDomainMarker(index int, marker , layer , notify boolean) : boolean",
    "info" : "MethodDeclaration[90997-92156]:MethodDeclaration[90997-92156]"
  }, {
    "left" : "public addRangeMarker(marker ) : void",
    "right" : "public addRangeMarker(marker ) : void",
    "info" : "MethodDeclaration[92164-92691]:MethodDeclaration[92164-92691]"
  }, {
    "left" : "public addRangeMarker(marker , layer ) : void",
    "right" : "public addRangeMarker(marker , layer ) : void",
    "info" : "MethodDeclaration[92699-93319]:MethodDeclaration[92699-93319]"
  }, {
    "left" : "public clearRangeMarkers() : void",
    "right" : "public clearRangeMarkers() : void",
    "info" : "MethodDeclaration[93327-94349]:MethodDeclaration[93327-94349]"
  }, {
    "left" : "public addRangeMarker(index int, marker , layer ) : void",
    "right" : "public addRangeMarker(index int, marker , layer ) : void",
    "info" : "MethodDeclaration[94357-95042]:MethodDeclaration[94357-95042]"
  }, {
    "left" : "public addRangeMarker(index int, marker , layer , notify boolean) : void",
    "right" : "public addRangeMarker(index int, marker , layer , notify boolean) : void",
    "info" : "MethodDeclaration[95050-96607]:MethodDeclaration[95050-96607]"
  }, {
    "left" : "public clearRangeMarkers(index int) : void",
    "right" : "public clearRangeMarkers(index int) : void",
    "info" : "MethodDeclaration[96615-97861]:MethodDeclaration[96615-97861]"
  }, {
    "left" : "public removeRangeMarker(marker ) : boolean",
    "right" : "public removeRangeMarker(marker ) : boolean",
    "info" : "MethodDeclaration[97869-98301]:MethodDeclaration[97869-98301]"
  }, {
    "left" : "public removeRangeMarker(marker , layer ) : boolean",
    "right" : "public removeRangeMarker(marker , layer ) : boolean",
    "info" : "MethodDeclaration[98309-98862]:MethodDeclaration[98309-98862]"
  }, {
    "left" : "public removeRangeMarker(index int, marker , layer ) : boolean",
    "right" : "public removeRangeMarker(index int, marker , layer ) : boolean",
    "info" : "MethodDeclaration[98870-99449]:MethodDeclaration[98870-99449]"
  }, {
    "left" : "public removeRangeMarker(index int, marker , layer , notify boolean) : boolean",
    "right" : "public removeRangeMarker(index int, marker , layer , notify boolean) : boolean",
    "info" : "MethodDeclaration[99457-100716]:MethodDeclaration[99457-100716]"
  }, {
    "left" : "public addAnnotation(annotation ) : void",
    "right" : "public addAnnotation(annotation ) : void",
    "info" : "MethodDeclaration[100724-101124]:MethodDeclaration[100724-101124]"
  }, {
    "left" : "public addAnnotation(annotation , notify boolean) : void",
    "right" : "public addAnnotation(annotation , notify boolean) : void",
    "info" : "MethodDeclaration[101132-101743]:MethodDeclaration[101132-101743]"
  }, {
    "left" : "public removeAnnotation(annotation ) : boolean",
    "right" : "public removeAnnotation(annotation ) : boolean",
    "info" : "MethodDeclaration[101751-102258]:MethodDeclaration[101751-102258]"
  }, {
    "left" : "public removeAnnotation(annotation , notify boolean) : boolean",
    "right" : "public removeAnnotation(annotation , notify boolean) : boolean",
    "info" : "MethodDeclaration[102266-103019]:MethodDeclaration[102266-103019]"
  }, {
    "left" : "public getAnnotations() : ",
    "right" : "public getAnnotations() : ",
    "info" : "MethodDeclaration[103027-103300]:MethodDeclaration[103027-103300]"
  }, {
    "left" : "public clearAnnotations() : void",
    "right" : "public clearAnnotations() : void",
    "info" : "MethodDeclaration[103308-103586]:MethodDeclaration[103308-103586]"
  }, {
    "left" : "protected calculateAxisSpace(g2 , plotArea ) : ",
    "right" : "protected calculateAxisSpace(g2 , plotArea ) : ",
    "info" : "MethodDeclaration[103594-104202]:MethodDeclaration[103594-104202]"
  }, {
    "left" : "protected calculateDomainAxisSpace(g2 , plotArea , space ) : ",
    "right" : "protected calculateDomainAxisSpace(g2 , plotArea , space ) : ",
    "info" : "MethodDeclaration[104210-106005]:MethodDeclaration[104210-106005]"
  }, {
    "left" : "protected calculateRangeAxisSpace(g2 , plotArea , space ) : ",
    "right" : "protected calculateRangeAxisSpace(g2 , plotArea , space ) : ",
    "info" : "MethodDeclaration[106013-107792]:MethodDeclaration[106013-107792]"
  }, {
    "left" : "public draw(g2 , area , anchor , parentState , info ) : void",
    "right" : "public draw(g2 , area , anchor , parentState , info ) : void",
    "info" : "MethodDeclaration[107800-118852]:MethodDeclaration[107800-118852]"
  }, {
    "left" : "public drawBackground(g2 , area ) : void",
    "right" : "public drawBackground(g2 , area ) : void",
    "info" : "MethodDeclaration[118860-119195]:MethodDeclaration[118860-119195]"
  }, {
    "left" : "protected drawQuadrants(g2 , area ) : void",
    "right" : "protected drawQuadrants(g2 , area ) : void",
    "info" : "MethodDeclaration[119203-124129]:MethodDeclaration[119203-124129]"
  }, {
    "left" : "public drawDomainTickBands(g2 , dataArea , ticks ...) : void",
    "right" : "public drawDomainTickBands(g2 , dataArea , ticks ...) : void",
    "info" : "MethodDeclaration[124137-125429]:MethodDeclaration[124137-125429]"
  }, {
    "left" : "public drawRangeTickBands(g2 , dataArea , ticks ...) : void",
    "right" : "public drawRangeTickBands(g2 , dataArea , ticks ...) : void",
    "info" : "MethodDeclaration[125437-126716]:MethodDeclaration[125437-126716]"
  }, {
    "left" : "protected drawAxes(g2 , plotArea , dataArea , plotState ) : ",
    "right" : "protected drawAxes(g2 , plotArea , dataArea , plotState ) : ",
    "info" : "MethodDeclaration[126724-130312]:MethodDeclaration[126724-130312]"
  }, {
    "left" : "public render(g2 , dataArea , index int, info , crosshairState ) : boolean",
    "right" : "public render(g2 , dataArea , index int, info , crosshairState ) : boolean",
    "info" : "MethodDeclaration[130320-135944]:MethodDeclaration[130320-135944]"
  }, {
    "left" : "public getDomainAxisForDataset(index int) : ",
    "right" : "public getDomainAxisForDataset(index int) : ",
    "info" : "MethodDeclaration[135952-136877]:MethodDeclaration[135952-136877]"
  }, {
    "left" : "public getRangeAxisForDataset(index int) : ",
    "right" : "public getRangeAxisForDataset(index int) : ",
    "info" : "MethodDeclaration[136885-137805]:MethodDeclaration[136885-137805]"
  }, {
    "left" : "protected drawDomainGridlines(g2 , dataArea , ticks ...) : void",
    "right" : "protected drawDomainGridlines(g2 , dataArea , ticks ...) : void",
    "info" : "MethodDeclaration[137813-139754]:MethodDeclaration[137813-139754]"
  }, {
    "left" : "protected drawRangeGridlines(g2 , area , ticks ...) : void",
    "right" : "protected drawRangeGridlines(g2 , area , ticks ...) : void",
    "info" : "MethodDeclaration[139762-141844]:MethodDeclaration[139762-141844]"
  }, {
    "left" : "protected drawZeroDomainBaseline(g2 , area ) : void",
    "right" : "protected drawZeroDomainBaseline(g2 , area ) : void",
    "info" : "MethodDeclaration[141852-142475]:MethodDeclaration[141852-142475]"
  }, {
    "left" : "protected drawZeroRangeBaseline(g2 , area ) : void",
    "right" : "protected drawZeroRangeBaseline(g2 , area ) : void",
    "info" : "MethodDeclaration[142483-143013]:MethodDeclaration[142483-143013]"
  }, {
    "left" : "public drawAnnotations(g2 , dataArea , info ) : void",
    "right" : "public drawAnnotations(g2 , dataArea , info ) : void",
    "info" : "MethodDeclaration[143021-143731]:MethodDeclaration[143021-143731]"
  }, {
    "left" : "protected drawDomainMarkers(g2 , dataArea , index int, layer ) : void",
    "right" : "protected drawDomainMarkers(g2 , dataArea , index int, layer ) : void",
    "info" : "MethodDeclaration[143739-144947]:MethodDeclaration[143739-144947]"
  }, {
    "left" : "protected drawRangeMarkers(g2 , dataArea , index int, layer ) : void",
    "right" : "protected drawRangeMarkers(g2 , dataArea , index int, layer ) : void",
    "info" : "MethodDeclaration[144955-146158]:MethodDeclaration[144955-146158]"
  }, {
    "left" : "public getDomainMarkers(layer ) : ",
    "right" : "public getDomainMarkers(layer ) : ",
    "info" : "MethodDeclaration[146166-146529]:MethodDeclaration[146166-146529]"
  }, {
    "left" : "public getRangeMarkers(layer ) : ",
    "right" : "public getRangeMarkers(layer ) : ",
    "info" : "MethodDeclaration[146537-146897]:MethodDeclaration[146537-146897]"
  }, {
    "left" : "public getDomainMarkers(index int, layer ) : ",
    "right" : "public getDomainMarkers(index int, layer ) : ",
    "info" : "MethodDeclaration[146905-147762]:MethodDeclaration[146905-147762]"
  }, {
    "left" : "public getRangeMarkers(index int, layer ) : ",
    "right" : "public getRangeMarkers(index int, layer ) : ",
    "info" : "MethodDeclaration[147770-148624]:MethodDeclaration[147770-148624]"
  }, {
    "left" : "protected drawHorizontalLine(g2 , dataArea , value double, stroke , paint ) : void",
    "right" : "protected drawHorizontalLine(g2 , dataArea , value double, stroke , paint ) : void",
    "info" : "MethodDeclaration[148632-149685]:MethodDeclaration[148632-149685]"
  }, {
    "left" : "protected drawDomainCrosshair(g2 , dataArea , orientation , value double, axis , stroke , paint ) : void",
    "right" : "protected drawDomainCrosshair(g2 , dataArea , orientation , value double, axis , stroke , paint ) : void",
    "info" : "MethodDeclaration[149693-151105]:MethodDeclaration[149693-151105]"
  }, {
    "left" : "protected drawVerticalLine(g2 , dataArea , value double, stroke , paint ) : void",
    "right" : "protected drawVerticalLine(g2 , dataArea , value double, stroke , paint ) : void",
    "info" : "MethodDeclaration[151113-152132]:MethodDeclaration[151113-152132]"
  }, {
    "left" : "protected drawRangeCrosshair(g2 , dataArea , orientation , value double, axis , stroke , paint ) : void",
    "right" : "protected drawRangeCrosshair(g2 , dataArea , orientation , value double, axis , stroke , paint ) : void",
    "info" : "MethodDeclaration[152140-153552]:MethodDeclaration[152140-153552]"
  }, {
    "left" : "public handleClick(x int, y int, info ) : void",
    "right" : "public handleClick(x int, y int, info ) : void",
    "info" : "MethodDeclaration[153560-154731]:MethodDeclaration[153560-154731]"
  }, {
    "left" : "private getDatasetsMappedToDomainAxis(axisIndex ) : ",
    "right" : "private getDatasetsMappedToDomainAxis(axisIndex ) : ",
    "info" : "MethodDeclaration[154739-155763]:MethodDeclaration[154739-155763]"
  }, {
    "left" : "private getDatasetsMappedToRangeAxis(axisIndex ) : ",
    "right" : "private getDatasetsMappedToRangeAxis(axisIndex ) : ",
    "info" : "MethodDeclaration[155771-156793]:MethodDeclaration[155771-156793]"
  }, {
    "left" : "public getDomainAxisIndex(axis ...) : int",
    "right" : "public getDomainAxisIndex(axis ...) : int",
    "info" : "MethodDeclaration[156801-157405]:MethodDeclaration[156801-157405]"
  }, {
    "left" : "public getRangeAxisIndex(axis ...) : int",
    "right" : "public getRangeAxisIndex(axis ...) : int",
    "info" : "MethodDeclaration[157413-158014]:MethodDeclaration[157413-158014]"
  }, {
    "left" : "public getDataRange(axis ...) : ",
    "right" : "public getDataRange(axis ...) : ",
    "info" : "MethodDeclaration[158022-161870]:MethodDeclaration[158022-161923]"
  }, {
    "left" : "public datasetChanged(event ) : void",
    "right" : "public datasetChanged(event ) : void",
    "info" : "MethodDeclaration[161878-162499]:MethodDeclaration[161931-162552]"
  }, {
    "left" : "public rendererChanged(event ) : void",
    "right" : "public rendererChanged(event ) : void",
    "info" : "MethodDeclaration[162507-162974]:MethodDeclaration[162560-163027]"
  }, {
    "left" : "public isDomainCrosshairVisible() : boolean",
    "right" : "public isDomainCrosshairVisible() : boolean",
    "info" : "MethodDeclaration[162982-163268]:MethodDeclaration[163035-163321]"
  }, {
    "left" : "public setDomainCrosshairVisible(flag boolean) : void",
    "right" : "public setDomainCrosshairVisible(flag boolean) : void",
    "info" : "MethodDeclaration[163276-163786]:MethodDeclaration[163329-163839]"
  }, {
    "left" : "public isDomainCrosshairLockedOnData() : boolean",
    "right" : "public isDomainCrosshairLockedOnData() : boolean",
    "info" : "MethodDeclaration[163794-164124]:MethodDeclaration[163847-164177]"
  }, {
    "left" : "public setDomainCrosshairLockedOnData(flag boolean) : void",
    "right" : "public setDomainCrosshairLockedOnData(flag boolean) : void",
    "info" : "MethodDeclaration[164132-164688]:MethodDeclaration[164185-164741]"
  }, {
    "left" : "public getDomainCrosshairValue() : double",
    "right" : "public getDomainCrosshairValue() : double",
    "info" : "MethodDeclaration[164696-164938]:MethodDeclaration[164749-164991]"
  }, {
    "left" : "public setDomainCrosshairValue(value double) : void",
    "right" : "public setDomainCrosshairValue(value double) : void",
    "info" : "MethodDeclaration[164946-165319]:MethodDeclaration[164999-165372]"
  }, {
    "left" : "public setDomainCrosshairValue(value double, notify boolean) : void",
    "right" : "public setDomainCrosshairValue(value double, notify boolean) : void",
    "info" : "MethodDeclaration[165327-165877]:MethodDeclaration[165380-165930]"
  }, {
    "left" : "public getDomainCrosshairStroke() : ",
    "right" : "public getDomainCrosshairStroke() : ",
    "info" : "MethodDeclaration[165885-166280]:MethodDeclaration[165938-166333]"
  }, {
    "left" : "public setDomainCrosshairStroke(stroke ) : void",
    "right" : "public setDomainCrosshairStroke(stroke ) : void",
    "info" : "MethodDeclaration[166288-166850]:MethodDeclaration[166341-166903]"
  }, {
    "left" : "public getDomainCrosshairPaint() : ",
    "right" : "public getDomainCrosshairPaint() : ",
    "info" : "MethodDeclaration[166858-167216]:MethodDeclaration[166911-167269]"
  }, {
    "left" : "public setDomainCrosshairPaint(paint ) : void",
    "right" : "public setDomainCrosshairPaint(paint ) : void",
    "info" : "MethodDeclaration[167224-167760]:MethodDeclaration[167277-167813]"
  }, {
    "left" : "public isRangeCrosshairVisible() : boolean",
    "right" : "public isRangeCrosshairVisible() : boolean",
    "info" : "MethodDeclaration[167768-168091]:MethodDeclaration[167821-168144]"
  }, {
    "left" : "public setRangeCrosshairVisible(flag boolean) : void",
    "right" : "public setRangeCrosshairVisible(flag boolean) : void",
    "info" : "MethodDeclaration[168099-168618]:MethodDeclaration[168152-168671]"
  }, {
    "left" : "public isRangeCrosshairLockedOnData() : boolean",
    "right" : "public isRangeCrosshairLockedOnData() : boolean",
    "info" : "MethodDeclaration[168626-168953]:MethodDeclaration[168679-169006]"
  }, {
    "left" : "public setRangeCrosshairLockedOnData(flag boolean) : void",
    "right" : "public setRangeCrosshairLockedOnData(flag boolean) : void",
    "info" : "MethodDeclaration[168961-169512]:MethodDeclaration[169014-169565]"
  }, {
    "left" : "public getRangeCrosshairValue() : double",
    "right" : "public getRangeCrosshairValue() : double",
    "info" : "MethodDeclaration[169520-169758]:MethodDeclaration[169573-169811]"
  }, {
    "left" : "public setRangeCrosshairValue(value double) : void",
    "right" : "public setRangeCrosshairValue(value double) : void",
    "info" : "MethodDeclaration[169766-170152]:MethodDeclaration[169819-170205]"
  }, {
    "left" : "public setRangeCrosshairValue(value double, notify boolean) : void",
    "right" : "public setRangeCrosshairValue(value double, notify boolean) : void",
    "info" : "MethodDeclaration[170160-170737]:MethodDeclaration[170213-170790]"
  }, {
    "left" : "public getRangeCrosshairStroke() : ",
    "right" : "public getRangeCrosshairStroke() : ",
    "info" : "MethodDeclaration[170745-171127]:MethodDeclaration[170798-171180]"
  }, {
    "left" : "public setRangeCrosshairStroke(stroke ) : void",
    "right" : "public setRangeCrosshairStroke(stroke ) : void",
    "info" : "MethodDeclaration[171135-171696]:MethodDeclaration[171188-171749]"
  }, {
    "left" : "public getRangeCrosshairPaint() : ",
    "right" : "public getRangeCrosshairPaint() : ",
    "info" : "MethodDeclaration[171704-172056]:MethodDeclaration[171757-172109]"
  }, {
    "left" : "public setRangeCrosshairPaint(paint ) : void",
    "right" : "public setRangeCrosshairPaint(paint ) : void",
    "info" : "MethodDeclaration[172064-172598]:MethodDeclaration[172117-172651]"
  }, {
    "left" : "public getFixedDomainAxisSpace() : ",
    "right" : "public getFixedDomainAxisSpace() : ",
    "info" : "MethodDeclaration[172606-172902]:MethodDeclaration[172659-172955]"
  }, {
    "left" : "public setFixedDomainAxisSpace(space ) : void",
    "right" : "public setFixedDomainAxisSpace(space ) : void",
    "info" : "MethodDeclaration[172910-173269]:MethodDeclaration[172963-173322]"
  }, {
    "left" : "public setFixedDomainAxisSpace(space , notify boolean) : void",
    "right" : "public setFixedDomainAxisSpace(space , notify boolean) : void",
    "info" : "MethodDeclaration[173277-173800]:MethodDeclaration[173330-173853]"
  }, {
    "left" : "public getFixedRangeAxisSpace() : ",
    "right" : "public getFixedRangeAxisSpace() : ",
    "info" : "MethodDeclaration[173808-174099]:MethodDeclaration[173861-174152]"
  }, {
    "left" : "public setFixedRangeAxisSpace(space ) : void",
    "right" : "public setFixedRangeAxisSpace(space ) : void",
    "info" : "MethodDeclaration[174107-174462]:MethodDeclaration[174160-174515]"
  }, {
    "left" : "public setFixedRangeAxisSpace(space , notify boolean) : void",
    "right" : "public setFixedRangeAxisSpace(space , notify boolean) : void",
    "info" : "MethodDeclaration[174470-174989]:MethodDeclaration[174523-175042]"
  }, {
    "left" : "public isDomainPannable() : boolean",
    "right" : "public isDomainPannable() : boolean",
    "info" : "MethodDeclaration[174997-175278]:MethodDeclaration[175050-175331]"
  }, {
    "left" : "public setDomainPannable(pannable boolean) : void",
    "right" : "public setDomainPannable(pannable boolean) : void",
    "info" : "MethodDeclaration[175286-175582]:MethodDeclaration[175339-175635]"
  }, {
    "left" : "public isRangePannable() : boolean",
    "right" : "public isRangePannable() : boolean",
    "info" : "MethodDeclaration[175590-175868]:MethodDeclaration[175643-175921]"
  }, {
    "left" : "public setRangePannable(pannable boolean) : void",
    "right" : "public setRangePannable(pannable boolean) : void",
    "info" : "MethodDeclaration[175876-176169]:MethodDeclaration[175929-176222]"
  }, {
    "left" : "public panDomainAxes(percent double, info , source ) : void",
    "right" : "public panDomainAxes(percent double, info , source ) : void",
    "info" : "MethodDeclaration[176177-177009]:MethodDeclaration[176230-177062]"
  }, {
    "left" : "public panRangeAxes(percent double, info , source ) : void",
    "right" : "public panRangeAxes(percent double, info , source ) : void",
    "info" : "MethodDeclaration[177017-177842]:MethodDeclaration[177070-177895]"
  }, {
    "left" : "public zoomDomainAxes(factor double, info , source ) : void",
    "right" : "public zoomDomainAxes(factor double, info , source ) : void",
    "info" : "MethodDeclaration[177850-178384]:MethodDeclaration[177903-178437]"
  }, {
    "left" : "public zoomDomainAxes(factor double, info , source , useAnchor boolean) : void",
    "right" : "public zoomDomainAxes(factor double, info , source , useAnchor boolean) : void",
    "info" : "MethodDeclaration[178392-179865]:MethodDeclaration[178445-179918]"
  }, {
    "left" : "public zoomDomainAxes(lowerPercent double, upperPercent double, info , source ) : void",
    "right" : "public zoomDomainAxes(lowerPercent double, upperPercent double, info , source ) : void",
    "info" : "MethodDeclaration[179873-181024]:MethodDeclaration[179926-181077]"
  }, {
    "left" : "public zoomRangeAxes(factor double, info , source ) : void",
    "right" : "public zoomRangeAxes(factor double, info , source ) : void",
    "info" : "MethodDeclaration[181032-181554]:MethodDeclaration[181085-181607]"
  }, {
    "left" : "public zoomRangeAxes(factor double, info , source , useAnchor boolean) : void",
    "right" : "public zoomRangeAxes(factor double, info , source , useAnchor boolean) : void",
    "info" : "MethodDeclaration[181562-183071]:MethodDeclaration[181615-183124]"
  }, {
    "left" : "public zoomRangeAxes(lowerPercent double, upperPercent double, info , source ) : void",
    "right" : "public zoomRangeAxes(lowerPercent double, upperPercent double, info , source ) : void",
    "info" : "MethodDeclaration[183079-183807]:MethodDeclaration[183132-183860]"
  }, {
    "left" : "public isDomainZoomable() : boolean",
    "right" : "public isDomainZoomable() : boolean",
    "info" : "MethodDeclaration[183815-184080]:MethodDeclaration[183868-184133]"
  }, {
    "left" : "public isRangeZoomable() : boolean",
    "right" : "public isRangeZoomable() : boolean",
    "info" : "MethodDeclaration[184088-184352]:MethodDeclaration[184141-184405]"
  }, {
    "left" : "public getSeriesCount() : int",
    "right" : "public getSeriesCount() : int",
    "info" : "MethodDeclaration[184360-184782]:MethodDeclaration[184413-184835]"
  }, {
    "left" : "public getFixedLegendItems() : ",
    "right" : "public getFixedLegendItems() : ",
    "info" : "MethodDeclaration[184790-185088]:MethodDeclaration[184843-185141]"
  }, {
    "left" : "public setFixedLegendItems(items ...) : void",
    "right" : "public setFixedLegendItems(items ...) : void",
    "info" : "MethodDeclaration[185096-185535]:MethodDeclaration[185149-185588]"
  }, {
    "left" : "public getLegendItems() : ",
    "right" : "public getLegendItems() : ",
    "info" : "MethodDeclaration[185543-187085]:MethodDeclaration[185596-187138]"
  }, {
    "left" : "public equals(obj ) : boolean",
    "right" : "public equals(obj ) : boolean",
    "info" : "MethodDeclaration[187093-194621]:MethodDeclaration[187146-194674]"
  }, {
    "left" : "public clone() : ",
    "right" : "public clone() : ",
    "info" : "MethodDeclaration[194629-198469]:MethodDeclaration[194682-198522]"
  }, {
    "left" : "private writeObject(stream ) : void",
    "right" : "private writeObject(stream ) : void",
    "info" : "MethodDeclaration[198477-200280]:MethodDeclaration[198530-200333]"
  }, {
    "left" : "private readObject(stream ) : void",
    "right" : "private readObject(stream ) : void",
    "info" : "MethodDeclaration[200288-203524]:MethodDeclaration[200341-203577]"
  }, {
    "left" : "public canSelectByPoint() : boolean",
    "right" : "public canSelectByPoint() : boolean",
    "info" : "MethodDeclaration[203532-203883]:MethodDeclaration[203585-203936]"
  }, {
    "left" : "public canSelectByRegion() : boolean",
    "right" : "public canSelectByRegion() : boolean",
    "info" : "MethodDeclaration[203891-204151]:MethodDeclaration[203944-204204]"
  }, {
    "left" : "public select(x double, y double, dataArea , source ) : void",
    "right" : "public select(x double, y double, dataArea , source ) : void",
    "info" : "MethodDeclaration[204159-204394]:MethodDeclaration[204212-204447]"
  }, {
    "left" : "public select(region , dataArea , source ) : void",
    "right" : "public select(region , dataArea , source ) : void",
    "info" : "MethodDeclaration[204402-206236]:MethodDeclaration[204455-206289]"
  }, {
    "left" : "private findSelectionStateForDataset(dataset , source ) : ",
    "right" : "private findSelectionStateForDataset(dataset , source ) : ",
    "info" : "MethodDeclaration[206244-207018]:MethodDeclaration[206297-207071]"
  }, {
    "left" : "private convertToDataSpace(path , dataArea , dataset ) : ",
    "right" : "private convertToDataSpace(path , dataArea , dataset ) : ",
    "info" : "MethodDeclaration[207026-208627]:MethodDeclaration[207079-208680]"
  }, {
    "left" : "public clearSelection() : void",
    "right" : "public clearSelection() : void",
    "info" : "MethodDeclaration[208635-209485]:MethodDeclaration[208688-209538]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[25880-25886]:Modifier[25880-25886]"
  }, {
    "left" : "XYPlot",
    "right" : "XYPlot",
    "info" : "SimpleName[25887-25893]:SimpleName[25887-25893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25896-25943]:Block[25896-25943]"
  }, {
    "left" : "this(null, null, null, null);",
    "right" : "this(null, null, null, null);",
    "info" : "ConstructorInvocation[25907-25936]:ConstructorInvocation[25907-25936]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26549-26555]:Modifier[26549-26555]"
  }, {
    "left" : "XYPlot",
    "right" : "XYPlot",
    "info" : "SimpleName[26556-26562]:SimpleName[26556-26562]"
  }, {
    "left" : "XYDataset dataset",
    "right" : "XYDataset dataset",
    "info" : "SingleVariableDeclaration[26563-26580]:SingleVariableDeclaration[26563-26580]"
  }, {
    "left" : "ValueAxis domainAxis",
    "right" : "ValueAxis domainAxis",
    "info" : "SingleVariableDeclaration[26601-26621]:SingleVariableDeclaration[26601-26621]"
  }, {
    "left" : "ValueAxis rangeAxis",
    "right" : "ValueAxis rangeAxis",
    "info" : "SingleVariableDeclaration[26642-26661]:SingleVariableDeclaration[26642-26661]"
  }, {
    "left" : "XYItemRenderer renderer",
    "right" : "XYItemRenderer renderer",
    "info" : "SingleVariableDeclaration[26682-26705]:SingleVariableDeclaration[26682-26705]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26707-30072]:Block[26707-30072]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[26720-26728]:SuperConstructorInvocation[26720-26728]"
  }, {
    "left" : "this.orientation = PlotOrientation.VERTICAL;",
    "right" : "this.orientation = PlotOrientation.VERTICAL;",
    "info" : "ExpressionStatement[26740-26784]:ExpressionStatement[26740-26784]"
  }, {
    "left" : "this.weight = 1;",
    "right" : "this.weight = 1;",
    "info" : "ExpressionStatement[26794-26810]:ExpressionStatement[26794-26810]"
  }, {
    "left" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
    "right" : "this.axisOffset = new RectangleInsets(4.0, 4.0, 4.0, 4.0);",
    "info" : "ExpressionStatement[26861-26919]:ExpressionStatement[26861-26919]"
  }, {
    "left" : "this.domainAxes = new ObjectList();",
    "right" : "this.domainAxes = new ObjectList();",
    "info" : "ExpressionStatement[27008-27043]:ExpressionStatement[27008-27043]"
  }, {
    "left" : "this.domainAxisLocations = new ObjectList();",
    "right" : "this.domainAxisLocations = new ObjectList();",
    "info" : "ExpressionStatement[27053-27097]:ExpressionStatement[27053-27097]"
  }, {
    "left" : "this.foregroundDomainMarkers = new HashMap();",
    "right" : "this.foregroundDomainMarkers = new HashMap();",
    "info" : "ExpressionStatement[27107-27152]:ExpressionStatement[27107-27152]"
  }, {
    "left" : "this.backgroundDomainMarkers = new HashMap();",
    "right" : "this.backgroundDomainMarkers = new HashMap();",
    "info" : "ExpressionStatement[27162-27207]:ExpressionStatement[27162-27207]"
  }, {
    "left" : "this.rangeAxes = new ObjectList();",
    "right" : "this.rangeAxes = new ObjectList();",
    "info" : "ExpressionStatement[27219-27253]:ExpressionStatement[27219-27253]"
  }, {
    "left" : "this.rangeAxisLocations = new ObjectList();",
    "right" : "this.rangeAxisLocations = new ObjectList();",
    "info" : "ExpressionStatement[27263-27306]:ExpressionStatement[27263-27306]"
  }, {
    "left" : "this.foregroundRangeMarkers = new HashMap();",
    "right" : "this.foregroundRangeMarkers = new HashMap();",
    "info" : "ExpressionStatement[27316-27360]:ExpressionStatement[27316-27360]"
  }, {
    "left" : "this.backgroundRangeMarkers = new HashMap();",
    "right" : "this.backgroundRangeMarkers = new HashMap();",
    "info" : "ExpressionStatement[27370-27414]:ExpressionStatement[27370-27414]"
  }, {
    "left" : "this.datasets = new ObjectList();",
    "right" : "this.datasets = new ObjectList();",
    "info" : "ExpressionStatement[27426-27459]:ExpressionStatement[27426-27459]"
  }, {
    "left" : "this.renderers = new ObjectList();",
    "right" : "this.renderers = new ObjectList();",
    "info" : "ExpressionStatement[27469-27503]:ExpressionStatement[27469-27503]"
  }, {
    "left" : "this.datasetToDomainAxesMap = new TreeMap();",
    "right" : "this.datasetToDomainAxesMap = new TreeMap();",
    "info" : "ExpressionStatement[27515-27559]:ExpressionStatement[27515-27559]"
  }, {
    "left" : "this.datasetToRangeAxesMap = new TreeMap();",
    "right" : "this.datasetToRangeAxesMap = new TreeMap();",
    "info" : "ExpressionStatement[27569-27612]:ExpressionStatement[27569-27612]"
  }, {
    "left" : "this.annotations = new java.util.ArrayList();",
    "right" : "this.annotations = new java.util.ArrayList();",
    "info" : "ExpressionStatement[27624-27669]:ExpressionStatement[27624-27669]"
  }, {
    "left" : "this.datasets.set(0, dataset);",
    "right" : "this.datasets.set(0, dataset);",
    "info" : "ExpressionStatement[27681-27711]:ExpressionStatement[27681-27711]"
  }, {
    "left" : "if (dataset != null)",
    "right" : "if (dataset != null)",
    "info" : "IfStatement[27721-27800]:IfStatement[27721-27800]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27742-27800]:Block[27742-27800]"
  }, {
    "left" : "dataset.addChangeListener(this);",
    "right" : "dataset.addChangeListener(this);",
    "info" : "ExpressionStatement[27757-27789]:ExpressionStatement[27757-27789]"
  }, {
    "left" : "this.renderers.set(0, renderer);",
    "right" : "this.renderers.set(0, renderer);",
    "info" : "ExpressionStatement[27812-27844]:ExpressionStatement[27812-27844]"
  }, {
    "left" : "if (renderer != null)",
    "right" : "if (renderer != null)",
    "info" : "IfStatement[27854-27972]:IfStatement[27854-27972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27876-27972]:Block[27876-27972]"
  }, {
    "left" : "renderer.setPlot(this);",
    "right" : "renderer.setPlot(this);",
    "info" : "ExpressionStatement[27891-27914]:ExpressionStatement[27891-27914]"
  }, {
    "left" : "renderer.addChangeListener(this);",
    "right" : "renderer.addChangeListener(this);",
    "info" : "ExpressionStatement[27928-27961]:ExpressionStatement[27928-27961]"
  }, {
    "left" : "this.domainAxes.set(0, domainAxis);",
    "right" : "this.domainAxes.set(0, domainAxis);",
    "info" : "ExpressionStatement[27984-28019]:ExpressionStatement[27984-28019]"
  }, {
    "left" : "this.mapDatasetToDomainAxis(0, 0);",
    "right" : "this.mapDatasetToDomainAxis(0, 0);",
    "info" : "ExpressionStatement[28029-28063]:ExpressionStatement[28029-28063]"
  }, {
    "left" : "if (domainAxis != null)",
    "right" : "if (domainAxis != null)",
    "info" : "IfStatement[28073-28197]:IfStatement[28073-28197]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28097-28197]:Block[28097-28197]"
  }, {
    "left" : "domainAxis.setPlot(this);",
    "right" : "domainAxis.setPlot(this);",
    "info" : "ExpressionStatement[28112-28137]:ExpressionStatement[28112-28137]"
  }, {
    "left" : "domainAxis.addChangeListener(this);",
    "right" : "domainAxis.addChangeListener(this);",
    "info" : "ExpressionStatement[28151-28186]:ExpressionStatement[28151-28186]"
  }, {
    "left" : "this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
    "right" : "this.domainAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
    "info" : "ExpressionStatement[28207-28268]:ExpressionStatement[28207-28268]"
  }, {
    "left" : "this.rangeAxes.set(0, rangeAxis);",
    "right" : "this.rangeAxes.set(0, rangeAxis);",
    "info" : "ExpressionStatement[28280-28313]:ExpressionStatement[28280-28313]"
  }, {
    "left" : "this.mapDatasetToRangeAxis(0, 0);",
    "right" : "this.mapDatasetToRangeAxis(0, 0);",
    "info" : "ExpressionStatement[28323-28356]:ExpressionStatement[28323-28356]"
  }, {
    "left" : "if (rangeAxis != null)",
    "right" : "if (rangeAxis != null)",
    "info" : "IfStatement[28366-28487]:IfStatement[28366-28487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28389-28487]:Block[28389-28487]"
  }, {
    "left" : "rangeAxis.setPlot(this);",
    "right" : "rangeAxis.setPlot(this);",
    "info" : "ExpressionStatement[28404-28428]:ExpressionStatement[28404-28428]"
  }, {
    "left" : "rangeAxis.addChangeListener(this);",
    "right" : "rangeAxis.addChangeListener(this);",
    "info" : "ExpressionStatement[28442-28476]:ExpressionStatement[28442-28476]"
  }, {
    "left" : "this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
    "right" : "this.rangeAxisLocations.set(0, AxisLocation.BOTTOM_OR_LEFT);",
    "info" : "ExpressionStatement[28497-28557]:ExpressionStatement[28497-28557]"
  }, {
    "left" : "configureDomainAxes();",
    "right" : "configureDomainAxes();",
    "info" : "ExpressionStatement[28569-28591]:ExpressionStatement[28569-28591]"
  }, {
    "left" : "configureRangeAxes();",
    "right" : "configureRangeAxes();",
    "info" : "ExpressionStatement[28601-28622]:ExpressionStatement[28601-28622]"
  }, {
    "left" : "this.domainGridlinesVisible = true;",
    "right" : "this.domainGridlinesVisible = true;",
    "info" : "ExpressionStatement[28634-28669]:ExpressionStatement[28634-28669]"
  }, {
    "left" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "right" : "this.domainGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "info" : "ExpressionStatement[28679-28731]:ExpressionStatement[28679-28731]"
  }, {
    "left" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
    "right" : "this.domainGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
    "info" : "ExpressionStatement[28741-28791]:ExpressionStatement[28741-28791]"
  }, {
    "left" : "this.domainMinorGridlinesVisible = false;",
    "right" : "this.domainMinorGridlinesVisible = false;",
    "info" : "ExpressionStatement[28803-28844]:ExpressionStatement[28803-28844]"
  }, {
    "left" : "this.domainMinorGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "right" : "this.domainMinorGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "info" : "ExpressionStatement[28854-28911]:ExpressionStatement[28854-28911]"
  }, {
    "left" : "this.domainMinorGridlinePaint = Color.white;",
    "right" : "this.domainMinorGridlinePaint = Color.white;",
    "info" : "ExpressionStatement[28921-28965]:ExpressionStatement[28921-28965]"
  }, {
    "left" : "this.domainZeroBaselineVisible = false;",
    "right" : "this.domainZeroBaselineVisible = false;",
    "info" : "ExpressionStatement[28977-29016]:ExpressionStatement[28977-29016]"
  }, {
    "left" : "this.domainZeroBaselinePaint = Color.black;",
    "right" : "this.domainZeroBaselinePaint = Color.black;",
    "info" : "ExpressionStatement[29026-29069]:ExpressionStatement[29026-29069]"
  }, {
    "left" : "this.domainZeroBaselineStroke = new BasicStroke(0.5f);",
    "right" : "this.domainZeroBaselineStroke = new BasicStroke(0.5f);",
    "info" : "ExpressionStatement[29079-29133]:ExpressionStatement[29079-29133]"
  }, {
    "left" : "this.rangeGridlinesVisible = true;",
    "right" : "this.rangeGridlinesVisible = true;",
    "info" : "ExpressionStatement[29145-29179]:ExpressionStatement[29145-29179]"
  }, {
    "left" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "right" : "this.rangeGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "info" : "ExpressionStatement[29189-29240]:ExpressionStatement[29189-29240]"
  }, {
    "left" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
    "right" : "this.rangeGridlinePaint = DEFAULT_GRIDLINE_PAINT;",
    "info" : "ExpressionStatement[29250-29299]:ExpressionStatement[29250-29299]"
  }, {
    "left" : "this.rangeMinorGridlinesVisible = false;",
    "right" : "this.rangeMinorGridlinesVisible = false;",
    "info" : "ExpressionStatement[29311-29351]:ExpressionStatement[29311-29351]"
  }, {
    "left" : "this.rangeMinorGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "right" : "this.rangeMinorGridlineStroke = DEFAULT_GRIDLINE_STROKE;",
    "info" : "ExpressionStatement[29361-29417]:ExpressionStatement[29361-29417]"
  }, {
    "left" : "this.rangeMinorGridlinePaint = Color.white;",
    "right" : "this.rangeMinorGridlinePaint = Color.white;",
    "info" : "ExpressionStatement[29427-29470]:ExpressionStatement[29427-29470]"
  }, {
    "left" : "this.rangeZeroBaselineVisible = false;",
    "right" : "this.rangeZeroBaselineVisible = false;",
    "info" : "ExpressionStatement[29482-29520]:ExpressionStatement[29482-29520]"
  }, {
    "left" : "this.rangeZeroBaselinePaint = Color.black;",
    "right" : "this.rangeZeroBaselinePaint = Color.black;",
    "info" : "ExpressionStatement[29530-29572]:ExpressionStatement[29530-29572]"
  }, {
    "left" : "this.rangeZeroBaselineStroke = new BasicStroke(0.5f);",
    "right" : "this.rangeZeroBaselineStroke = new BasicStroke(0.5f);",
    "info" : "ExpressionStatement[29582-29635]:ExpressionStatement[29582-29635]"
  }, {
    "left" : "this.domainCrosshairVisible = false;",
    "right" : "this.domainCrosshairVisible = false;",
    "info" : "ExpressionStatement[29647-29683]:ExpressionStatement[29647-29683]"
  }, {
    "left" : "this.domainCrosshairValue = 0.0;",
    "right" : "this.domainCrosshairValue = 0.0;",
    "info" : "ExpressionStatement[29693-29725]:ExpressionStatement[29693-29725]"
  }, {
    "left" : "this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
    "right" : "this.domainCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
    "info" : "ExpressionStatement[29735-29789]:ExpressionStatement[29735-29789]"
  }, {
    "left" : "this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
    "right" : "this.domainCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
    "info" : "ExpressionStatement[29799-29851]:ExpressionStatement[29799-29851]"
  }, {
    "left" : "this.rangeCrosshairVisible = false;",
    "right" : "this.rangeCrosshairVisible = false;",
    "info" : "ExpressionStatement[29863-29898]:ExpressionStatement[29863-29898]"
  }, {
    "left" : "this.rangeCrosshairValue = 0.0;",
    "right" : "this.rangeCrosshairValue = 0.0;",
    "info" : "ExpressionStatement[29908-29939]:ExpressionStatement[29908-29939]"
  }, {
    "left" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
    "right" : "this.rangeCrosshairStroke = DEFAULT_CROSSHAIR_STROKE;",
    "info" : "ExpressionStatement[29949-30002]:ExpressionStatement[29949-30002]"
  }, {
    "left" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
    "right" : "this.rangeCrosshairPaint = DEFAULT_CROSSHAIR_PAINT;",
    "info" : "ExpressionStatement[30012-30063]:ExpressionStatement[30012-30063]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30209-30215]:Modifier[30209-30215]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[30216-30222]:SimpleType[30216-30222]"
  }, {
    "left" : "getPlotType",
    "right" : "getPlotType",
    "info" : "SimpleName[30223-30234]:SimpleName[30223-30234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30237-30305]:Block[30237-30305]"
  }, {
    "left" : "return localizationResources.getString(\"XY_Plot\");",
    "right" : "return localizationResources.getString(\"XY_Plot\");",
    "info" : "ReturnStatement[30248-30298]:ReturnStatement[30248-30298]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30497-30503]:Modifier[30497-30503]"
  }, {
    "left" : "PlotOrientation",
    "right" : "PlotOrientation",
    "info" : "SimpleType[30504-30519]:SimpleType[30504-30519]"
  }, {
    "left" : "getOrientation",
    "right" : "getOrientation",
    "info" : "SimpleName[30520-30534]:SimpleName[30520-30534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30537-30579]:Block[30537-30579]"
  }, {
    "left" : "return this.orientation;",
    "right" : "return this.orientation;",
    "info" : "ReturnStatement[30548-30572]:ReturnStatement[30548-30572]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30844-30850]:Modifier[30844-30850]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30851-30855]:PrimitiveType[30851-30855]"
  }, {
    "left" : "setOrientation",
    "right" : "setOrientation",
    "info" : "SimpleName[30856-30870]:SimpleName[30856-30870]"
  }, {
    "left" : "PlotOrientation orientation",
    "right" : "PlotOrientation orientation",
    "info" : "SingleVariableDeclaration[30871-30898]:SingleVariableDeclaration[30871-30898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30900-31172]:Block[30900-31172]"
  }, {
    "left" : "if (orientation == null)",
    "right" : "if (orientation == null)",
    "info" : "IfStatement[30911-31029]:IfStatement[30911-31029]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30936-31029]:Block[30936-31029]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'orientation' argument.\");",
    "info" : "ThrowStatement[30951-31018]:ThrowStatement[30951-31018]"
  }, {
    "left" : "if (orientation != this.orientation)",
    "right" : "if (orientation != this.orientation)",
    "info" : "IfStatement[31039-31165]:IfStatement[31039-31165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31076-31165]:Block[31076-31165]"
  }, {
    "left" : "this.orientation = orientation;",
    "right" : "this.orientation = orientation;",
    "info" : "ExpressionStatement[31091-31122]:ExpressionStatement[31091-31122]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[31136-31154]:ExpressionStatement[31136-31154]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31351-31357]:Modifier[31351-31357]"
  }, {
    "left" : "RectangleInsets",
    "right" : "RectangleInsets",
    "info" : "SimpleType[31358-31373]:SimpleType[31358-31373]"
  }, {
    "left" : "getAxisOffset",
    "right" : "getAxisOffset",
    "info" : "SimpleName[31374-31387]:SimpleName[31374-31387]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31390-31431]:Block[31390-31431]"
  }, {
    "left" : "return this.axisOffset;",
    "right" : "return this.axisOffset;",
    "info" : "ReturnStatement[31401-31424]:ReturnStatement[31401-31424]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31716-31722]:Modifier[31716-31722]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[31723-31727]:PrimitiveType[31723-31727]"
  }, {
    "left" : "setAxisOffset",
    "right" : "setAxisOffset",
    "info" : "SimpleName[31728-31741]:SimpleName[31728-31741]"
  }, {
    "left" : "RectangleInsets offset",
    "right" : "RectangleInsets offset",
    "info" : "SingleVariableDeclaration[31742-31764]:SingleVariableDeclaration[31742-31764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31766-31955]:Block[31766-31955]"
  }, {
    "left" : "if (offset == null)",
    "right" : "if (offset == null)",
    "info" : "IfStatement[31777-31885]:IfStatement[31777-31885]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31797-31885]:Block[31797-31885]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'offset' argument.\");",
    "info" : "ThrowStatement[31812-31874]:ThrowStatement[31812-31874]"
  }, {
    "left" : "this.axisOffset = offset;",
    "right" : "this.axisOffset = offset;",
    "info" : "ExpressionStatement[31895-31920]:ExpressionStatement[31895-31920]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[31930-31948]:ExpressionStatement[31930-31948]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32336-32342]:Modifier[32336-32342]"
  }, {
    "left" : "ValueAxis",
    "right" : "ValueAxis",
    "info" : "SimpleType[32343-32352]:SimpleType[32343-32352]"
  }, {
    "left" : "getDomainAxis",
    "right" : "getDomainAxis",
    "info" : "SimpleName[32353-32366]:SimpleName[32353-32366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32369-32411]:Block[32369-32411]"
  }, {
    "left" : "return getDomainAxis(0);",
    "right" : "return getDomainAxis(0);",
    "info" : "ReturnStatement[32380-32404]:ReturnStatement[32380-32404]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32678-32684]:Modifier[32678-32684]"
  }, {
    "left" : "ValueAxis",
    "right" : "ValueAxis",
    "info" : "SimpleType[32685-32694]:SimpleType[32685-32694]"
  }, {
    "left" : "getDomainAxis",
    "right" : "getDomainAxis",
    "info" : "SimpleName[32695-32708]:SimpleName[32695-32708]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[32709-32718]:SingleVariableDeclaration[32709-32718]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32720-33145]:Block[32720-33145]"
  }, {
    "left" : "ValueAxis result = null;",
    "right" : "ValueAxis result = null;",
    "info" : "VariableDeclarationStatement[32731-32755]:VariableDeclarationStatement[32731-32755]"
  }, {
    "left" : "if (index < this.domainAxes.size())",
    "right" : "if (index < this.domainAxes.size())",
    "info" : "IfStatement[32765-32875]:IfStatement[32765-32875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32801-32875]:Block[32801-32875]"
  }, {
    "left" : "result = (ValueAxis) this.domainAxes.get(index);",
    "right" : "result = (ValueAxis) this.domainAxes.get(index);",
    "info" : "ExpressionStatement[32816-32864]:ExpressionStatement[32816-32864]"
  }, {
    "left" : "if (result == null)",
    "right" : "if (result == null)",
    "info" : "IfStatement[32885-33114]:IfStatement[32885-33114]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32905-33114]:Block[32905-33114]"
  }, {
    "left" : "Plot parent = getParent();",
    "right" : "Plot parent = getParent();",
    "info" : "VariableDeclarationStatement[32920-32946]:VariableDeclarationStatement[32920-32946]"
  }, {
    "left" : "if (parent instanceof XYPlot)",
    "right" : "if (parent instanceof XYPlot)",
    "info" : "IfStatement[32960-33103]:IfStatement[32960-33103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32990-33103]:Block[32990-33103]"
  }, {
    "left" : "XYPlot xy = (XYPlot) parent;",
    "right" : "XYPlot xy = (XYPlot) parent;",
    "info" : "VariableDeclarationStatement[33009-33037]:VariableDeclarationStatement[33009-33037]"
  }, {
    "left" : "result = xy.getDomainAxis(index);",
    "right" : "result = xy.getDomainAxis(index);",
    "info" : "ExpressionStatement[33055-33088]:ExpressionStatement[33055-33088]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[33124-33138]:ReturnStatement[33124-33138]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33441-33447]:Modifier[33441-33447]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[33448-33452]:PrimitiveType[33448-33452]"
  }, {
    "left" : "setDomainAxis",
    "right" : "setDomainAxis",
    "info" : "SimpleName[33453-33466]:SimpleName[33453-33466]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[33467-33481]:SingleVariableDeclaration[33467-33481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33483-33524]:Block[33483-33524]"
  }, {
    "left" : "setDomainAxis(0, axis);",
    "right" : "setDomainAxis(0, axis);",
    "info" : "ExpressionStatement[33494-33517]:ExpressionStatement[33494-33517]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33841-33847]:Modifier[33841-33847]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[33848-33852]:PrimitiveType[33848-33852]"
  }, {
    "left" : "setDomainAxis",
    "right" : "setDomainAxis",
    "info" : "SimpleName[33853-33866]:SimpleName[33853-33866]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[33867-33876]:SingleVariableDeclaration[33867-33876]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[33878-33892]:SingleVariableDeclaration[33878-33892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33894-33945]:Block[33894-33945]"
  }, {
    "left" : "setDomainAxis(index, axis, true);",
    "right" : "setDomainAxis(index, axis, true);",
    "info" : "ExpressionStatement[33905-33938]:ExpressionStatement[33905-33938]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34245-34251]:Modifier[34245-34251]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[34252-34256]:PrimitiveType[34252-34256]"
  }, {
    "left" : "setDomainAxis",
    "right" : "setDomainAxis",
    "info" : "SimpleName[34257-34270]:SimpleName[34257-34270]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[34271-34280]:SingleVariableDeclaration[34271-34280]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[34282-34296]:SingleVariableDeclaration[34282-34296]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[34298-34312]:SingleVariableDeclaration[34298-34312]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34314-34764]:Block[34314-34764]"
  }, {
    "left" : "ValueAxis existing = getDomainAxis(index);",
    "right" : "ValueAxis existing = getDomainAxis(index);",
    "info" : "VariableDeclarationStatement[34325-34367]:VariableDeclarationStatement[34325-34367]"
  }, {
    "left" : "if (existing != null)",
    "right" : "if (existing != null)",
    "info" : "IfStatement[34377-34461]:IfStatement[34377-34461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34399-34461]:Block[34399-34461]"
  }, {
    "left" : "existing.removeChangeListener(this);",
    "right" : "existing.removeChangeListener(this);",
    "info" : "ExpressionStatement[34414-34450]:ExpressionStatement[34414-34450]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[34471-34534]:IfStatement[34471-34534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34489-34534]:Block[34489-34534]"
  }, {
    "left" : "axis.setPlot(this);",
    "right" : "axis.setPlot(this);",
    "info" : "ExpressionStatement[34504-34523]:ExpressionStatement[34504-34523]"
  }, {
    "left" : "this.domainAxes.set(index, axis);",
    "right" : "this.domainAxes.set(index, axis);",
    "info" : "ExpressionStatement[34544-34577]:ExpressionStatement[34544-34577]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[34587-34691]:IfStatement[34587-34691]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34605-34691]:Block[34605-34691]"
  }, {
    "left" : "axis.configure();",
    "right" : "axis.configure();",
    "info" : "ExpressionStatement[34620-34637]:ExpressionStatement[34620-34637]"
  }, {
    "left" : "axis.addChangeListener(this);",
    "right" : "axis.addChangeListener(this);",
    "info" : "ExpressionStatement[34651-34680]:ExpressionStatement[34651-34680]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[34701-34757]:IfStatement[34701-34757]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34713-34757]:Block[34713-34757]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[34728-34746]:ExpressionStatement[34728-34746]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35027-35033]:Modifier[35027-35033]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[35034-35038]:PrimitiveType[35034-35038]"
  }, {
    "left" : "setDomainAxes",
    "right" : "setDomainAxes",
    "info" : "SimpleName[35039-35052]:SimpleName[35039-35052]"
  }, {
    "left" : "ValueAxis[] axes",
    "right" : "ValueAxis[] axes",
    "info" : "SingleVariableDeclaration[35053-35069]:SingleVariableDeclaration[35053-35069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35071-35214]:Block[35071-35214]"
  }, {
    "left" : "for (int i = 0; i < axes.length; i++)",
    "right" : "for (int i = 0; i < axes.length; i++)",
    "info" : "ForStatement[35082-35179]:ForStatement[35082-35179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35120-35179]:Block[35120-35179]"
  }, {
    "left" : "setDomainAxis(i, axes[i], false);",
    "right" : "setDomainAxis(i, axes[i], false);",
    "info" : "ExpressionStatement[35135-35168]:ExpressionStatement[35135-35168]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[35189-35207]:ExpressionStatement[35189-35207]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35419-35425]:Modifier[35419-35425]"
  }, {
    "left" : "AxisLocation",
    "right" : "AxisLocation",
    "info" : "SimpleType[35426-35438]:SimpleType[35426-35438]"
  }, {
    "left" : "getDomainAxisLocation",
    "right" : "getDomainAxisLocation",
    "info" : "SimpleName[35439-35460]:SimpleName[35439-35460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35463-35535]:Block[35463-35535]"
  }, {
    "left" : "return (AxisLocation) this.domainAxisLocations.get(0);",
    "right" : "return (AxisLocation) this.domainAxisLocations.get(0);",
    "info" : "ReturnStatement[35474-35528]:ReturnStatement[35474-35528]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35814-35820]:Modifier[35814-35820]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[35821-35825]:PrimitiveType[35821-35825]"
  }, {
    "left" : "setDomainAxisLocation",
    "right" : "setDomainAxisLocation",
    "info" : "SimpleName[35826-35847]:SimpleName[35826-35847]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[35848-35869]:SingleVariableDeclaration[35848-35869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35871-35954]:Block[35871-35954]"
  }, {
    "left" : "setDomainAxisLocation(0, location, true);",
    "right" : "setDomainAxisLocation(0, location, true);",
    "info" : "ExpressionStatement[35906-35947]:ExpressionStatement[35906-35947]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36281-36287]:Modifier[36281-36287]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[36288-36292]:PrimitiveType[36288-36292]"
  }, {
    "left" : "setDomainAxisLocation",
    "right" : "setDomainAxisLocation",
    "info" : "SimpleName[36293-36314]:SimpleName[36293-36314]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[36315-36336]:SingleVariableDeclaration[36315-36336]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[36338-36352]:SingleVariableDeclaration[36338-36352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36354-36439]:Block[36354-36439]"
  }, {
    "left" : "setDomainAxisLocation(0, location, notify);",
    "right" : "setDomainAxisLocation(0, location, notify);",
    "info" : "ExpressionStatement[36389-36432]:ExpressionStatement[36389-36432]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36683-36689]:Modifier[36683-36689]"
  }, {
    "left" : "RectangleEdge",
    "right" : "RectangleEdge",
    "info" : "SimpleType[36690-36703]:SimpleType[36690-36703]"
  }, {
    "left" : "getDomainAxisEdge",
    "right" : "getDomainAxisEdge",
    "info" : "SimpleName[36704-36721]:SimpleName[36704-36721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36724-36840]:Block[36724-36840]"
  }, {
    "left" : "return Plot.resolveDomainAxisLocation(getDomainAxisLocation(),\r\n                this.orientation);",
    "right" : "return Plot.resolveDomainAxisLocation(getDomainAxisLocation(),\r\n                this.orientation);",
    "info" : "ReturnStatement[36735-36833]:ReturnStatement[36735-36833]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36991-36997]:Modifier[36991-36997]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[36998-37001]:PrimitiveType[36998-37001]"
  }, {
    "left" : "getDomainAxisCount",
    "right" : "getDomainAxisCount",
    "info" : "SimpleName[37002-37020]:SimpleName[37002-37020]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37023-37071]:Block[37023-37071]"
  }, {
    "left" : "return this.domainAxes.size();",
    "right" : "return this.domainAxes.size();",
    "info" : "ReturnStatement[37034-37064]:ReturnStatement[37034-37064]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37254-37260]:Modifier[37254-37260]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[37261-37265]:PrimitiveType[37261-37265]"
  }, {
    "left" : "clearDomainAxes",
    "right" : "clearDomainAxes",
    "info" : "SimpleName[37266-37281]:SimpleName[37266-37281]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37284-37589]:Block[37284-37589]"
  }, {
    "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "info" : "ForStatement[37295-37520]:ForStatement[37295-37520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37344-37520]:Block[37344-37520]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
    "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
    "info" : "VariableDeclarationStatement[37359-37411]:VariableDeclarationStatement[37359-37411]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[37425-37509]:IfStatement[37425-37509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37443-37509]:Block[37443-37509]"
  }, {
    "left" : "axis.removeChangeListener(this);",
    "right" : "axis.removeChangeListener(this);",
    "info" : "ExpressionStatement[37462-37494]:ExpressionStatement[37462-37494]"
  }, {
    "left" : "this.domainAxes.clear();",
    "right" : "this.domainAxes.clear();",
    "info" : "ExpressionStatement[37530-37554]:ExpressionStatement[37530-37554]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[37564-37582]:ExpressionStatement[37564-37582]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37651-37657]:Modifier[37651-37657]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[37658-37662]:PrimitiveType[37658-37662]"
  }, {
    "left" : "configureDomainAxes",
    "right" : "configureDomainAxes",
    "info" : "SimpleName[37663-37682]:SimpleName[37663-37682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37685-37913]:Block[37685-37913]"
  }, {
    "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "info" : "ForStatement[37696-37906]:ForStatement[37696-37906]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37745-37906]:Block[37745-37906]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
    "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
    "info" : "VariableDeclarationStatement[37760-37812]:VariableDeclarationStatement[37760-37812]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[37826-37895]:IfStatement[37826-37895]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37844-37895]:Block[37844-37895]"
  }, {
    "left" : "axis.configure();",
    "right" : "axis.configure();",
    "info" : "ExpressionStatement[37863-37880]:ExpressionStatement[37863-37880]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38299-38305]:Modifier[38299-38305]"
  }, {
    "left" : "AxisLocation",
    "right" : "AxisLocation",
    "info" : "SimpleType[38306-38318]:SimpleType[38306-38318]"
  }, {
    "left" : "getDomainAxisLocation",
    "right" : "getDomainAxisLocation",
    "info" : "SimpleName[38319-38340]:SimpleName[38319-38340]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[38341-38350]:SingleVariableDeclaration[38341-38350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38352-38677]:Block[38352-38677]"
  }, {
    "left" : "AxisLocation result = null;",
    "right" : "AxisLocation result = null;",
    "info" : "VariableDeclarationStatement[38363-38390]:VariableDeclarationStatement[38363-38390]"
  }, {
    "left" : "if (index < this.domainAxisLocations.size())",
    "right" : "if (index < this.domainAxisLocations.size())",
    "info" : "IfStatement[38400-38531]:IfStatement[38400-38531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38445-38531]:Block[38445-38531]"
  }, {
    "left" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
    "right" : "result = (AxisLocation) this.domainAxisLocations.get(index);",
    "info" : "ExpressionStatement[38460-38520]:ExpressionStatement[38460-38520]"
  }, {
    "left" : "if (result == null)",
    "right" : "if (result == null)",
    "info" : "IfStatement[38541-38646]:IfStatement[38541-38646]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38561-38646]:Block[38561-38646]"
  }, {
    "left" : "result = AxisLocation.getOpposite(getDomainAxisLocation());",
    "right" : "result = AxisLocation.getOpposite(getDomainAxisLocation());",
    "info" : "ExpressionStatement[38576-38635]:ExpressionStatement[38576-38635]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[38656-38670]:ReturnStatement[38656-38670]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39012-39018]:Modifier[39012-39018]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[39019-39023]:PrimitiveType[39019-39023]"
  }, {
    "left" : "setDomainAxisLocation",
    "right" : "setDomainAxisLocation",
    "info" : "SimpleName[39024-39045]:SimpleName[39024-39045]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[39046-39055]:SingleVariableDeclaration[39046-39055]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[39057-39078]:SingleVariableDeclaration[39057-39078]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39080-39167]:Block[39080-39167]"
  }, {
    "left" : "setDomainAxisLocation(index, location, true);",
    "right" : "setDomainAxisLocation(index, location, true);",
    "info" : "ExpressionStatement[39115-39160]:ExpressionStatement[39115-39160]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39655-39661]:Modifier[39655-39661]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[39662-39666]:PrimitiveType[39662-39666]"
  }, {
    "left" : "setDomainAxisLocation",
    "right" : "setDomainAxisLocation",
    "info" : "SimpleName[39667-39688]:SimpleName[39667-39688]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[39689-39698]:SingleVariableDeclaration[39689-39698]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[39700-39721]:SingleVariableDeclaration[39700-39721]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[39736-39750]:SingleVariableDeclaration[39736-39750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39752-40059]:Block[39752-40059]"
  }, {
    "left" : "if (index == 0 && location == null)",
    "right" : "if (index == 0 && location == null)",
    "info" : "IfStatement[39765-39930]:IfStatement[39765-39930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39801-39930]:Block[39801-39930]"
  }, {
    "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
    "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
    "info" : "ThrowStatement[39816-39919]:ThrowStatement[39816-39919]"
  }, {
    "left" : "this.domainAxisLocations.set(index, location);",
    "right" : "this.domainAxisLocations.set(index, location);",
    "info" : "ExpressionStatement[39940-39986]:ExpressionStatement[39940-39986]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[39996-40052]:IfStatement[39996-40052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40008-40052]:Block[40008-40052]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[40023-40041]:ExpressionStatement[40023-40041]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40253-40259]:Modifier[40253-40259]"
  }, {
    "left" : "RectangleEdge",
    "right" : "RectangleEdge",
    "info" : "SimpleType[40260-40273]:SimpleType[40260-40273]"
  }, {
    "left" : "getDomainAxisEdge",
    "right" : "getDomainAxisEdge",
    "info" : "SimpleName[40274-40291]:SimpleName[40274-40291]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[40292-40301]:SingleVariableDeclaration[40292-40301]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40303-40616]:Block[40303-40616]"
  }, {
    "left" : "AxisLocation location = getDomainAxisLocation(index);",
    "right" : "AxisLocation location = getDomainAxisLocation(index);",
    "info" : "VariableDeclarationStatement[40314-40367]:VariableDeclarationStatement[40314-40367]"
  }, {
    "left" : "RectangleEdge result = Plot.resolveDomainAxisLocation(location,\r\n                this.orientation);",
    "right" : "RectangleEdge result = Plot.resolveDomainAxisLocation(location,\r\n                this.orientation);",
    "info" : "VariableDeclarationStatement[40377-40476]:VariableDeclarationStatement[40377-40476]"
  }, {
    "left" : "if (result == null)",
    "right" : "if (result == null)",
    "info" : "IfStatement[40486-40585]:IfStatement[40486-40585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40506-40585]:Block[40506-40585]"
  }, {
    "left" : "result = RectangleEdge.opposite(getDomainAxisEdge());",
    "right" : "result = RectangleEdge.opposite(getDomainAxisEdge());",
    "info" : "ExpressionStatement[40521-40574]:ExpressionStatement[40521-40574]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[40595-40609]:ReturnStatement[40595-40609]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40962-40968]:Modifier[40962-40968]"
  }, {
    "left" : "ValueAxis",
    "right" : "ValueAxis",
    "info" : "SimpleType[40969-40978]:SimpleType[40969-40978]"
  }, {
    "left" : "getRangeAxis",
    "right" : "getRangeAxis",
    "info" : "SimpleName[40979-40991]:SimpleName[40979-40991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40994-41035]:Block[40994-41035]"
  }, {
    "left" : "return getRangeAxis(0);",
    "right" : "return getRangeAxis(0);",
    "info" : "ReturnStatement[41005-41028]:ReturnStatement[41005-41028]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[41324-41330]:Modifier[41324-41330]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[41331-41335]:PrimitiveType[41331-41335]"
  }, {
    "left" : "setRangeAxis",
    "right" : "setRangeAxis",
    "info" : "SimpleName[41336-41348]:SimpleName[41336-41348]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[41349-41363]:SingleVariableDeclaration[41349-41363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41366-41853]:Block[41366-41853]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[41379-41442]:IfStatement[41379-41442]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41397-41442]:Block[41397-41442]"
  }, {
    "left" : "axis.setPlot(this);",
    "right" : "axis.setPlot(this);",
    "info" : "ExpressionStatement[41412-41431]:ExpressionStatement[41412-41431]"
  }, {
    "left" : "ValueAxis existing = getRangeAxis();",
    "right" : "ValueAxis existing = getRangeAxis();",
    "info" : "VariableDeclarationStatement[41532-41568]:VariableDeclarationStatement[41532-41568]"
  }, {
    "left" : "if (existing != null)",
    "right" : "if (existing != null)",
    "info" : "IfStatement[41578-41662]:IfStatement[41578-41662]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41600-41662]:Block[41600-41662]"
  }, {
    "left" : "existing.removeChangeListener(this);",
    "right" : "existing.removeChangeListener(this);",
    "info" : "ExpressionStatement[41615-41651]:ExpressionStatement[41615-41651]"
  }, {
    "left" : "this.rangeAxes.set(0, axis);",
    "right" : "this.rangeAxes.set(0, axis);",
    "info" : "ExpressionStatement[41674-41702]:ExpressionStatement[41674-41702]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[41712-41816]:IfStatement[41712-41816]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41730-41816]:Block[41730-41816]"
  }, {
    "left" : "axis.configure();",
    "right" : "axis.configure();",
    "info" : "ExpressionStatement[41745-41762]:ExpressionStatement[41745-41762]"
  }, {
    "left" : "axis.addChangeListener(this);",
    "right" : "axis.addChangeListener(this);",
    "info" : "ExpressionStatement[41776-41805]:ExpressionStatement[41776-41805]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[41826-41844]:ExpressionStatement[41826-41844]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42056-42062]:Modifier[42056-42062]"
  }, {
    "left" : "AxisLocation",
    "right" : "AxisLocation",
    "info" : "SimpleType[42063-42075]:SimpleType[42063-42075]"
  }, {
    "left" : "getRangeAxisLocation",
    "right" : "getRangeAxisLocation",
    "info" : "SimpleName[42076-42096]:SimpleName[42076-42096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42099-42170]:Block[42099-42170]"
  }, {
    "left" : "return (AxisLocation) this.rangeAxisLocations.get(0);",
    "right" : "return (AxisLocation) this.rangeAxisLocations.get(0);",
    "info" : "ReturnStatement[42110-42163]:ReturnStatement[42110-42163]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42447-42453]:Modifier[42447-42453]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42454-42458]:PrimitiveType[42454-42458]"
  }, {
    "left" : "setRangeAxisLocation",
    "right" : "setRangeAxisLocation",
    "info" : "SimpleName[42459-42479]:SimpleName[42459-42479]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[42480-42501]:SingleVariableDeclaration[42480-42501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42503-42585]:Block[42503-42585]"
  }, {
    "left" : "setRangeAxisLocation(0, location, true);",
    "right" : "setRangeAxisLocation(0, location, true);",
    "info" : "ExpressionStatement[42538-42578]:ExpressionStatement[42538-42578]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42918-42924]:Modifier[42918-42924]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[42925-42929]:PrimitiveType[42925-42929]"
  }, {
    "left" : "setRangeAxisLocation",
    "right" : "setRangeAxisLocation",
    "info" : "SimpleName[42930-42950]:SimpleName[42930-42950]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[42951-42972]:SingleVariableDeclaration[42951-42972]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[42974-42988]:SingleVariableDeclaration[42974-42988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42990-43074]:Block[42990-43074]"
  }, {
    "left" : "setRangeAxisLocation(0, location, notify);",
    "right" : "setRangeAxisLocation(0, location, notify);",
    "info" : "ExpressionStatement[43025-43067]:ExpressionStatement[43025-43067]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43274-43280]:Modifier[43274-43280]"
  }, {
    "left" : "RectangleEdge",
    "right" : "RectangleEdge",
    "info" : "SimpleType[43281-43294]:SimpleType[43281-43294]"
  }, {
    "left" : "getRangeAxisEdge",
    "right" : "getRangeAxisEdge",
    "info" : "SimpleName[43295-43311]:SimpleName[43295-43311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43314-43428]:Block[43314-43428]"
  }, {
    "left" : "return Plot.resolveRangeAxisLocation(getRangeAxisLocation(),\r\n                this.orientation);",
    "right" : "return Plot.resolveRangeAxisLocation(getRangeAxisLocation(),\r\n                this.orientation);",
    "info" : "ReturnStatement[43325-43421]:ReturnStatement[43325-43421]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43644-43650]:Modifier[43644-43650]"
  }, {
    "left" : "ValueAxis",
    "right" : "ValueAxis",
    "info" : "SimpleType[43651-43660]:SimpleType[43651-43660]"
  }, {
    "left" : "getRangeAxis",
    "right" : "getRangeAxis",
    "info" : "SimpleName[43661-43673]:SimpleName[43661-43673]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[43674-43683]:SingleVariableDeclaration[43674-43683]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43685-44107]:Block[43685-44107]"
  }, {
    "left" : "ValueAxis result = null;",
    "right" : "ValueAxis result = null;",
    "info" : "VariableDeclarationStatement[43696-43720]:VariableDeclarationStatement[43696-43720]"
  }, {
    "left" : "if (index < this.rangeAxes.size())",
    "right" : "if (index < this.rangeAxes.size())",
    "info" : "IfStatement[43730-43838]:IfStatement[43730-43838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43765-43838]:Block[43765-43838]"
  }, {
    "left" : "result = (ValueAxis) this.rangeAxes.get(index);",
    "right" : "result = (ValueAxis) this.rangeAxes.get(index);",
    "info" : "ExpressionStatement[43780-43827]:ExpressionStatement[43780-43827]"
  }, {
    "left" : "if (result == null)",
    "right" : "if (result == null)",
    "info" : "IfStatement[43848-44076]:IfStatement[43848-44076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43868-44076]:Block[43868-44076]"
  }, {
    "left" : "Plot parent = getParent();",
    "right" : "Plot parent = getParent();",
    "info" : "VariableDeclarationStatement[43883-43909]:VariableDeclarationStatement[43883-43909]"
  }, {
    "left" : "if (parent instanceof XYPlot)",
    "right" : "if (parent instanceof XYPlot)",
    "info" : "IfStatement[43923-44065]:IfStatement[43923-44065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43953-44065]:Block[43953-44065]"
  }, {
    "left" : "XYPlot xy = (XYPlot) parent;",
    "right" : "XYPlot xy = (XYPlot) parent;",
    "info" : "VariableDeclarationStatement[43972-44000]:VariableDeclarationStatement[43972-44000]"
  }, {
    "left" : "result = xy.getRangeAxis(index);",
    "right" : "result = xy.getRangeAxis(index);",
    "info" : "ExpressionStatement[44018-44050]:ExpressionStatement[44018-44050]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[44086-44100]:ReturnStatement[44086-44100]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44379-44385]:Modifier[44379-44385]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[44386-44390]:PrimitiveType[44386-44390]"
  }, {
    "left" : "setRangeAxis",
    "right" : "setRangeAxis",
    "info" : "SimpleName[44391-44403]:SimpleName[44391-44403]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[44404-44413]:SingleVariableDeclaration[44404-44413]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[44415-44429]:SingleVariableDeclaration[44415-44429]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44431-44481]:Block[44431-44481]"
  }, {
    "left" : "setRangeAxis(index, axis, true);",
    "right" : "setRangeAxis(index, axis, true);",
    "info" : "ExpressionStatement[44442-44474]:ExpressionStatement[44442-44474]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[44809-44815]:Modifier[44809-44815]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[44816-44820]:PrimitiveType[44816-44820]"
  }, {
    "left" : "setRangeAxis",
    "right" : "setRangeAxis",
    "info" : "SimpleName[44821-44833]:SimpleName[44821-44833]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[44834-44843]:SingleVariableDeclaration[44834-44843]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[44845-44859]:SingleVariableDeclaration[44845-44859]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[44861-44875]:SingleVariableDeclaration[44861-44875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44877-45325]:Block[44877-45325]"
  }, {
    "left" : "ValueAxis existing = getRangeAxis(index);",
    "right" : "ValueAxis existing = getRangeAxis(index);",
    "info" : "VariableDeclarationStatement[44888-44929]:VariableDeclarationStatement[44888-44929]"
  }, {
    "left" : "if (existing != null)",
    "right" : "if (existing != null)",
    "info" : "IfStatement[44939-45023]:IfStatement[44939-45023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44961-45023]:Block[44961-45023]"
  }, {
    "left" : "existing.removeChangeListener(this);",
    "right" : "existing.removeChangeListener(this);",
    "info" : "ExpressionStatement[44976-45012]:ExpressionStatement[44976-45012]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[45033-45096]:IfStatement[45033-45096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45051-45096]:Block[45051-45096]"
  }, {
    "left" : "axis.setPlot(this);",
    "right" : "axis.setPlot(this);",
    "info" : "ExpressionStatement[45066-45085]:ExpressionStatement[45066-45085]"
  }, {
    "left" : "this.rangeAxes.set(index, axis);",
    "right" : "this.rangeAxes.set(index, axis);",
    "info" : "ExpressionStatement[45106-45138]:ExpressionStatement[45106-45138]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[45148-45252]:IfStatement[45148-45252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45166-45252]:Block[45166-45252]"
  }, {
    "left" : "axis.configure();",
    "right" : "axis.configure();",
    "info" : "ExpressionStatement[45181-45198]:ExpressionStatement[45181-45198]"
  }, {
    "left" : "axis.addChangeListener(this);",
    "right" : "axis.addChangeListener(this);",
    "info" : "ExpressionStatement[45212-45241]:ExpressionStatement[45212-45241]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[45262-45318]:IfStatement[45262-45318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45274-45318]:Block[45274-45318]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[45289-45307]:ExpressionStatement[45289-45307]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45588-45594]:Modifier[45588-45594]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[45595-45599]:PrimitiveType[45595-45599]"
  }, {
    "left" : "setRangeAxes",
    "right" : "setRangeAxes",
    "info" : "SimpleName[45600-45612]:SimpleName[45600-45612]"
  }, {
    "left" : "ValueAxis[] axes",
    "right" : "ValueAxis[] axes",
    "info" : "SingleVariableDeclaration[45613-45629]:SingleVariableDeclaration[45613-45629]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45631-45773]:Block[45631-45773]"
  }, {
    "left" : "for (int i = 0; i < axes.length; i++)",
    "right" : "for (int i = 0; i < axes.length; i++)",
    "info" : "ForStatement[45642-45738]:ForStatement[45642-45738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45680-45738]:Block[45680-45738]"
  }, {
    "left" : "setRangeAxis(i, axes[i], false);",
    "right" : "setRangeAxis(i, axes[i], false);",
    "info" : "ExpressionStatement[45695-45727]:ExpressionStatement[45695-45727]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[45748-45766]:ExpressionStatement[45748-45766]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45924-45930]:Modifier[45924-45930]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[45931-45934]:PrimitiveType[45931-45934]"
  }, {
    "left" : "getRangeAxisCount",
    "right" : "getRangeAxisCount",
    "info" : "SimpleName[45935-45952]:SimpleName[45935-45952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45955-46002]:Block[45955-46002]"
  }, {
    "left" : "return this.rangeAxes.size();",
    "right" : "return this.rangeAxes.size();",
    "info" : "ReturnStatement[45966-45995]:ReturnStatement[45966-45995]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46185-46191]:Modifier[46185-46191]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[46192-46196]:PrimitiveType[46192-46196]"
  }, {
    "left" : "clearRangeAxes",
    "right" : "clearRangeAxes",
    "info" : "SimpleName[46197-46211]:SimpleName[46197-46211]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46214-46516]:Block[46214-46516]"
  }, {
    "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "info" : "ForStatement[46225-46448]:ForStatement[46225-46448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46273-46448]:Block[46273-46448]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
    "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
    "info" : "VariableDeclarationStatement[46288-46339]:VariableDeclarationStatement[46288-46339]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[46353-46437]:IfStatement[46353-46437]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46371-46437]:Block[46371-46437]"
  }, {
    "left" : "axis.removeChangeListener(this);",
    "right" : "axis.removeChangeListener(this);",
    "info" : "ExpressionStatement[46390-46422]:ExpressionStatement[46390-46422]"
  }, {
    "left" : "this.rangeAxes.clear();",
    "right" : "this.rangeAxes.clear();",
    "info" : "ExpressionStatement[46458-46481]:ExpressionStatement[46458-46481]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[46491-46509]:ExpressionStatement[46491-46509]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46621-46627]:Modifier[46621-46627]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[46628-46632]:PrimitiveType[46628-46632]"
  }, {
    "left" : "configureRangeAxes",
    "right" : "configureRangeAxes",
    "info" : "SimpleName[46633-46651]:SimpleName[46633-46651]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46654-46880]:Block[46654-46880]"
  }, {
    "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "info" : "ForStatement[46665-46873]:ForStatement[46665-46873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46713-46873]:Block[46713-46873]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
    "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
    "info" : "VariableDeclarationStatement[46728-46779]:VariableDeclarationStatement[46728-46779]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[46793-46862]:IfStatement[46793-46862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46811-46862]:Block[46811-46862]"
  }, {
    "left" : "axis.configure();",
    "right" : "axis.configure();",
    "info" : "ExpressionStatement[46830-46847]:ExpressionStatement[46830-46847]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47263-47269]:Modifier[47263-47269]"
  }, {
    "left" : "AxisLocation",
    "right" : "AxisLocation",
    "info" : "SimpleType[47270-47282]:SimpleType[47270-47282]"
  }, {
    "left" : "getRangeAxisLocation",
    "right" : "getRangeAxisLocation",
    "info" : "SimpleName[47283-47303]:SimpleName[47283-47303]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[47304-47313]:SingleVariableDeclaration[47304-47313]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47315-47637]:Block[47315-47637]"
  }, {
    "left" : "AxisLocation result = null;",
    "right" : "AxisLocation result = null;",
    "info" : "VariableDeclarationStatement[47326-47353]:VariableDeclarationStatement[47326-47353]"
  }, {
    "left" : "if (index < this.rangeAxisLocations.size())",
    "right" : "if (index < this.rangeAxisLocations.size())",
    "info" : "IfStatement[47363-47492]:IfStatement[47363-47492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47407-47492]:Block[47407-47492]"
  }, {
    "left" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
    "right" : "result = (AxisLocation) this.rangeAxisLocations.get(index);",
    "info" : "ExpressionStatement[47422-47481]:ExpressionStatement[47422-47481]"
  }, {
    "left" : "if (result == null)",
    "right" : "if (result == null)",
    "info" : "IfStatement[47502-47606]:IfStatement[47502-47606]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47522-47606]:Block[47522-47606]"
  }, {
    "left" : "result = AxisLocation.getOpposite(getRangeAxisLocation());",
    "right" : "result = AxisLocation.getOpposite(getRangeAxisLocation());",
    "info" : "ExpressionStatement[47537-47595]:ExpressionStatement[47537-47595]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[47616-47630]:ReturnStatement[47616-47630]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47942-47948]:Modifier[47942-47948]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[47949-47953]:PrimitiveType[47949-47953]"
  }, {
    "left" : "setRangeAxisLocation",
    "right" : "setRangeAxisLocation",
    "info" : "SimpleName[47954-47974]:SimpleName[47954-47974]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[47975-47984]:SingleVariableDeclaration[47975-47984]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[47986-48007]:SingleVariableDeclaration[47986-48007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48009-48095]:Block[48009-48095]"
  }, {
    "left" : "setRangeAxisLocation(index, location, true);",
    "right" : "setRangeAxisLocation(index, location, true);",
    "info" : "ExpressionStatement[48044-48088]:ExpressionStatement[48044-48088]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48583-48589]:Modifier[48583-48589]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[48590-48594]:PrimitiveType[48590-48594]"
  }, {
    "left" : "setRangeAxisLocation",
    "right" : "setRangeAxisLocation",
    "info" : "SimpleName[48595-48615]:SimpleName[48595-48615]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[48616-48625]:SingleVariableDeclaration[48616-48625]"
  }, {
    "left" : "AxisLocation location",
    "right" : "AxisLocation location",
    "info" : "SingleVariableDeclaration[48627-48648]:SingleVariableDeclaration[48627-48648]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[48663-48677]:SingleVariableDeclaration[48663-48677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48679-48985]:Block[48679-48985]"
  }, {
    "left" : "if (index == 0 && location == null)",
    "right" : "if (index == 0 && location == null)",
    "info" : "IfStatement[48692-48857]:IfStatement[48692-48857]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48728-48857]:Block[48728-48857]"
  }, {
    "left" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
    "right" : "throw new IllegalArgumentException(\r\n                    \"Null 'location' for index 0 not permitted.\");",
    "info" : "ThrowStatement[48743-48846]:ThrowStatement[48743-48846]"
  }, {
    "left" : "this.rangeAxisLocations.set(index, location);",
    "right" : "this.rangeAxisLocations.set(index, location);",
    "info" : "ExpressionStatement[48867-48912]:ExpressionStatement[48867-48912]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[48922-48978]:IfStatement[48922-48978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48934-48978]:Block[48934-48978]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[48949-48967]:ExpressionStatement[48949-48967]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49213-49219]:Modifier[49213-49219]"
  }, {
    "left" : "RectangleEdge",
    "right" : "RectangleEdge",
    "info" : "SimpleType[49220-49233]:SimpleType[49220-49233]"
  }, {
    "left" : "getRangeAxisEdge",
    "right" : "getRangeAxisEdge",
    "info" : "SimpleName[49234-49250]:SimpleName[49234-49250]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[49251-49260]:SingleVariableDeclaration[49251-49260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49262-49572]:Block[49262-49572]"
  }, {
    "left" : "AxisLocation location = getRangeAxisLocation(index);",
    "right" : "AxisLocation location = getRangeAxisLocation(index);",
    "info" : "VariableDeclarationStatement[49273-49325]:VariableDeclarationStatement[49273-49325]"
  }, {
    "left" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location,\r\n                this.orientation);",
    "right" : "RectangleEdge result = Plot.resolveRangeAxisLocation(location,\r\n                this.orientation);",
    "info" : "VariableDeclarationStatement[49335-49433]:VariableDeclarationStatement[49335-49433]"
  }, {
    "left" : "if (result == null)",
    "right" : "if (result == null)",
    "info" : "IfStatement[49443-49541]:IfStatement[49443-49541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49463-49541]:Block[49463-49541]"
  }, {
    "left" : "result = RectangleEdge.opposite(getRangeAxisEdge());",
    "right" : "result = RectangleEdge.opposite(getRangeAxisEdge());",
    "info" : "ExpressionStatement[49478-49530]:ExpressionStatement[49478-49530]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[49551-49565]:ReturnStatement[49551-49565]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49796-49802]:Modifier[49796-49802]"
  }, {
    "left" : "XYDataset",
    "right" : "XYDataset",
    "info" : "SimpleType[49803-49812]:SimpleType[49803-49812]"
  }, {
    "left" : "getDataset",
    "right" : "getDataset",
    "info" : "SimpleName[49813-49823]:SimpleName[49813-49823]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49826-49865]:Block[49826-49865]"
  }, {
    "left" : "return getDataset(0);",
    "right" : "return getDataset(0);",
    "info" : "ReturnStatement[49837-49858]:ReturnStatement[49837-49858]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[50082-50088]:Modifier[50082-50088]"
  }, {
    "left" : "XYDataset",
    "right" : "XYDataset",
    "info" : "SimpleType[50089-50098]:SimpleType[50089-50098]"
  }, {
    "left" : "getDataset",
    "right" : "getDataset",
    "info" : "SimpleName[50099-50109]:SimpleName[50099-50109]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[50110-50119]:SingleVariableDeclaration[50110-50119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50121-50303]:Block[50121-50303]"
  }, {
    "left" : "XYDataset result = null;",
    "right" : "XYDataset result = null;",
    "info" : "VariableDeclarationStatement[50132-50156]:VariableDeclarationStatement[50132-50156]"
  }, {
    "left" : "if (this.datasets.size() > index)",
    "right" : "if (this.datasets.size() > index)",
    "info" : "IfStatement[50166-50272]:IfStatement[50166-50272]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50200-50272]:Block[50200-50272]"
  }, {
    "left" : "result = (XYDataset) this.datasets.get(index);",
    "right" : "result = (XYDataset) this.datasets.get(index);",
    "info" : "ExpressionStatement[50215-50261]:ExpressionStatement[50215-50261]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[50282-50296]:ReturnStatement[50282-50296]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[50583-50589]:Modifier[50583-50589]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[50590-50594]:PrimitiveType[50590-50594]"
  }, {
    "left" : "setDataset",
    "right" : "setDataset",
    "info" : "SimpleName[50595-50605]:SimpleName[50595-50605]"
  }, {
    "left" : "XYDataset dataset",
    "right" : "XYDataset dataset",
    "info" : "SingleVariableDeclaration[50606-50623]:SingleVariableDeclaration[50606-50623]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50625-50666]:Block[50625-50666]"
  }, {
    "left" : "setDataset(0, dataset);",
    "right" : "setDataset(0, dataset);",
    "info" : "ExpressionStatement[50636-50659]:ExpressionStatement[50636-50659]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[50883-50889]:Modifier[50883-50889]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[50890-50894]:PrimitiveType[50890-50894]"
  }, {
    "left" : "setDataset",
    "right" : "setDataset",
    "info" : "SimpleName[50895-50905]:SimpleName[50895-50905]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[50906-50915]:SingleVariableDeclaration[50906-50915]"
  }, {
    "left" : "XYDataset dataset",
    "right" : "XYDataset dataset",
    "info" : "SingleVariableDeclaration[50917-50934]:SingleVariableDeclaration[50917-50934]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50936-51380]:Block[50936-51380]"
  }, {
    "left" : "XYDataset existing = getDataset(index);",
    "right" : "XYDataset existing = getDataset(index);",
    "info" : "VariableDeclarationStatement[50947-50986]:VariableDeclarationStatement[50947-50986]"
  }, {
    "left" : "if (existing != null)",
    "right" : "if (existing != null)",
    "info" : "IfStatement[50996-51080]:IfStatement[50996-51080]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51018-51080]:Block[51018-51080]"
  }, {
    "left" : "existing.removeChangeListener(this);",
    "right" : "existing.removeChangeListener(this);",
    "info" : "ExpressionStatement[51033-51069]:ExpressionStatement[51033-51069]"
  }, {
    "left" : "this.datasets.set(index, dataset);",
    "right" : "this.datasets.set(index, dataset);",
    "info" : "ExpressionStatement[51090-51124]:ExpressionStatement[51090-51124]"
  }, {
    "left" : "if (dataset != null)",
    "right" : "if (dataset != null)",
    "info" : "IfStatement[51134-51213]:IfStatement[51134-51213]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51155-51213]:Block[51155-51213]"
  }, {
    "left" : "dataset.addChangeListener(this);",
    "right" : "dataset.addChangeListener(this);",
    "info" : "ExpressionStatement[51170-51202]:ExpressionStatement[51170-51202]"
  }, {
    "left" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
    "right" : "DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);",
    "info" : "VariableDeclarationStatement[51276-51341]:VariableDeclarationStatement[51276-51341]"
  }, {
    "left" : "datasetChanged(event);",
    "right" : "datasetChanged(event);",
    "info" : "ExpressionStatement[51351-51373]:ExpressionStatement[51351-51373]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[51494-51500]:Modifier[51494-51500]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[51501-51504]:PrimitiveType[51501-51504]"
  }, {
    "left" : "getDatasetCount",
    "right" : "getDatasetCount",
    "info" : "SimpleName[51505-51520]:SimpleName[51505-51520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51523-51569]:Block[51523-51569]"
  }, {
    "left" : "return this.datasets.size();",
    "right" : "return this.datasets.size();",
    "info" : "ReturnStatement[51534-51562]:ReturnStatement[51534-51562]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[51832-51838]:Modifier[51832-51838]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[51839-51842]:PrimitiveType[51839-51842]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[51843-51850]:SimpleName[51843-51850]"
  }, {
    "left" : "XYDataset dataset",
    "right" : "XYDataset dataset",
    "info" : "SingleVariableDeclaration[51851-51868]:SingleVariableDeclaration[51851-51868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51870-52117]:Block[51870-52117]"
  }, {
    "left" : "int result = -1;",
    "right" : "int result = -1;",
    "info" : "VariableDeclarationStatement[51881-51897]:VariableDeclarationStatement[51881-51897]"
  }, {
    "left" : "for (int i = 0; i < this.datasets.size(); i++)",
    "right" : "for (int i = 0; i < this.datasets.size(); i++)",
    "info" : "ForStatement[51907-52086]:ForStatement[51907-52086]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51954-52086]:Block[51954-52086]"
  }, {
    "left" : "if (dataset == this.datasets.get(i))",
    "right" : "if (dataset == this.datasets.get(i))",
    "info" : "IfStatement[51969-52075]:IfStatement[51969-52075]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52006-52075]:Block[52006-52075]"
  }, {
    "left" : "result = i;",
    "right" : "result = i;",
    "info" : "ExpressionStatement[52025-52036]:ExpressionStatement[52025-52036]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[52054-52060]:BreakStatement[52054-52060]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[52096-52110]:ReturnStatement[52096-52110]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[52455-52461]:Modifier[52455-52461]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[52462-52466]:PrimitiveType[52462-52466]"
  }, {
    "left" : "mapDatasetToDomainAxis",
    "right" : "mapDatasetToDomainAxis",
    "info" : "SimpleName[52467-52489]:SimpleName[52467-52489]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[52490-52499]:SingleVariableDeclaration[52490-52499]"
  }, {
    "left" : "int axisIndex",
    "right" : "int axisIndex",
    "info" : "SingleVariableDeclaration[52501-52514]:SingleVariableDeclaration[52501-52514]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52516-52683]:Block[52516-52683]"
  }, {
    "left" : "List axisIndices = new java.util.ArrayList(1);",
    "right" : "List axisIndices = new java.util.ArrayList(1);",
    "info" : "VariableDeclarationStatement[52527-52573]:VariableDeclarationStatement[52527-52573]"
  }, {
    "left" : "axisIndices.add(new Integer(axisIndex));",
    "right" : "axisIndices.add(new Integer(axisIndex));",
    "info" : "ExpressionStatement[52583-52623]:ExpressionStatement[52583-52623]"
  }, {
    "left" : "mapDatasetToDomainAxes(index, axisIndices);",
    "right" : "mapDatasetToDomainAxes(index, axisIndices);",
    "info" : "ExpressionStatement[52633-52676]:ExpressionStatement[52633-52676]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[53066-53072]:Modifier[53066-53072]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[53073-53077]:PrimitiveType[53073-53077]"
  }, {
    "left" : "mapDatasetToDomainAxes",
    "right" : "mapDatasetToDomainAxes",
    "info" : "SimpleName[53078-53100]:SimpleName[53078-53100]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[53101-53110]:SingleVariableDeclaration[53101-53110]"
  }, {
    "left" : "List axisIndices",
    "right" : "List axisIndices",
    "info" : "SingleVariableDeclaration[53112-53128]:SingleVariableDeclaration[53112-53128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53130-53540]:Block[53130-53540]"
  }, {
    "left" : "if (index < 0)",
    "right" : "if (index < 0)",
    "info" : "IfStatement[53141-53243]:IfStatement[53141-53243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53156-53243]:Block[53156-53243]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Requires 'index' >= 0.\");",
    "right" : "throw new IllegalArgumentException(\"Requires 'index' >= 0.\");",
    "info" : "ThrowStatement[53171-53232]:ThrowStatement[53171-53232]"
  }, {
    "left" : "checkAxisIndices(axisIndices);",
    "right" : "checkAxisIndices(axisIndices);",
    "info" : "ExpressionStatement[53253-53283]:ExpressionStatement[53253-53283]"
  }, {
    "left" : "Integer key = new Integer(index);",
    "right" : "Integer key = new Integer(index);",
    "info" : "VariableDeclarationStatement[53293-53326]:VariableDeclarationStatement[53293-53326]"
  }, {
    "left" : "this.datasetToDomainAxesMap.put(key, new ArrayList(axisIndices));",
    "right" : "this.datasetToDomainAxesMap.put(key, new ArrayList(axisIndices));",
    "info" : "ExpressionStatement[53336-53401]:ExpressionStatement[53336-53401]"
  }, {
    "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
    "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
    "info" : "ExpressionStatement[53469-53533]:ExpressionStatement[53469-53533]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[53878-53884]:Modifier[53878-53884]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[53885-53889]:PrimitiveType[53885-53889]"
  }, {
    "left" : "mapDatasetToRangeAxis",
    "right" : "mapDatasetToRangeAxis",
    "info" : "SimpleName[53890-53911]:SimpleName[53890-53911]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[53912-53921]:SingleVariableDeclaration[53912-53921]"
  }, {
    "left" : "int axisIndex",
    "right" : "int axisIndex",
    "info" : "SingleVariableDeclaration[53923-53936]:SingleVariableDeclaration[53923-53936]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53938-54104]:Block[53938-54104]"
  }, {
    "left" : "List axisIndices = new java.util.ArrayList(1);",
    "right" : "List axisIndices = new java.util.ArrayList(1);",
    "info" : "VariableDeclarationStatement[53949-53995]:VariableDeclarationStatement[53949-53995]"
  }, {
    "left" : "axisIndices.add(new Integer(axisIndex));",
    "right" : "axisIndices.add(new Integer(axisIndex));",
    "info" : "ExpressionStatement[54005-54045]:ExpressionStatement[54005-54045]"
  }, {
    "left" : "mapDatasetToRangeAxes(index, axisIndices);",
    "right" : "mapDatasetToRangeAxes(index, axisIndices);",
    "info" : "ExpressionStatement[54055-54097]:ExpressionStatement[54055-54097]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[54487-54493]:Modifier[54487-54493]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[54494-54498]:PrimitiveType[54494-54498]"
  }, {
    "left" : "mapDatasetToRangeAxes",
    "right" : "mapDatasetToRangeAxes",
    "info" : "SimpleName[54499-54520]:SimpleName[54499-54520]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[54521-54530]:SingleVariableDeclaration[54521-54530]"
  }, {
    "left" : "List axisIndices",
    "right" : "List axisIndices",
    "info" : "SingleVariableDeclaration[54532-54548]:SingleVariableDeclaration[54532-54548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54550-54959]:Block[54550-54959]"
  }, {
    "left" : "if (index < 0)",
    "right" : "if (index < 0)",
    "info" : "IfStatement[54561-54663]:IfStatement[54561-54663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54576-54663]:Block[54576-54663]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Requires 'index' >= 0.\");",
    "right" : "throw new IllegalArgumentException(\"Requires 'index' >= 0.\");",
    "info" : "ThrowStatement[54591-54652]:ThrowStatement[54591-54652]"
  }, {
    "left" : "checkAxisIndices(axisIndices);",
    "right" : "checkAxisIndices(axisIndices);",
    "info" : "ExpressionStatement[54673-54703]:ExpressionStatement[54673-54703]"
  }, {
    "left" : "Integer key = new Integer(index);",
    "right" : "Integer key = new Integer(index);",
    "info" : "VariableDeclarationStatement[54713-54746]:VariableDeclarationStatement[54713-54746]"
  }, {
    "left" : "this.datasetToRangeAxesMap.put(key, new ArrayList(axisIndices));",
    "right" : "this.datasetToRangeAxesMap.put(key, new ArrayList(axisIndices));",
    "info" : "ExpressionStatement[54756-54820]:ExpressionStatement[54756-54820]"
  }, {
    "left" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
    "right" : "datasetChanged(new DatasetChangeEvent(this, getDataset(index)));",
    "info" : "ExpressionStatement[54888-54952]:ExpressionStatement[54888-54952]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[55233-55240]:Modifier[55233-55240]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[55241-55245]:PrimitiveType[55241-55245]"
  }, {
    "left" : "checkAxisIndices",
    "right" : "checkAxisIndices",
    "info" : "SimpleName[55246-55262]:SimpleName[55246-55262]"
  }, {
    "left" : "List indices",
    "right" : "List indices",
    "info" : "SingleVariableDeclaration[55263-55275]:SingleVariableDeclaration[55263-55275]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55277-56115]:Block[55277-56115]"
  }, {
    "left" : "if (indices == null)",
    "right" : "if (indices == null)",
    "info" : "IfStatement[55418-55479]:IfStatement[55418-55479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55439-55479]:Block[55439-55479]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[55454-55461]:ReturnStatement[55454-55461]"
  }, {
    "left" : "int count = indices.size();",
    "right" : "int count = indices.size();",
    "info" : "VariableDeclarationStatement[55489-55516]:VariableDeclarationStatement[55489-55516]"
  }, {
    "left" : "if (count == 0)",
    "right" : "if (count == 0)",
    "info" : "IfStatement[55526-55632]:IfStatement[55526-55632]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55542-55632]:Block[55542-55632]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Empty list not permitted.\");",
    "right" : "throw new IllegalArgumentException(\"Empty list not permitted.\");",
    "info" : "ThrowStatement[55557-55621]:ThrowStatement[55557-55621]"
  }, {
    "left" : "HashSet set = new HashSet();",
    "right" : "HashSet set = new HashSet();",
    "info" : "VariableDeclarationStatement[55642-55670]:VariableDeclarationStatement[55642-55670]"
  }, {
    "left" : "for (int i = 0; i < count; i++)",
    "right" : "for (int i = 0; i < count; i++)",
    "info" : "ForStatement[55680-56108]:ForStatement[55680-56108]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55712-56108]:Block[55712-56108]"
  }, {
    "left" : "Object item = indices.get(i);",
    "right" : "Object item = indices.get(i);",
    "info" : "VariableDeclarationStatement[55727-55756]:VariableDeclarationStatement[55727-55756]"
  }, {
    "left" : "if (!(item instanceof Integer))",
    "right" : "if (!(item instanceof Integer))",
    "info" : "IfStatement[55770-55935]:IfStatement[55770-55935]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55802-55935]:Block[55802-55935]"
  }, {
    "left" : "throw new IllegalArgumentException(\r\n                        \"Indices must be Integer instances.\");",
    "right" : "throw new IllegalArgumentException(\r\n                        \"Indices must be Integer instances.\");",
    "info" : "ThrowStatement[55821-55920]:ThrowStatement[55821-55920]"
  }, {
    "left" : "if (set.contains(item))",
    "right" : "if (set.contains(item))",
    "info" : "IfStatement[55949-56069]:IfStatement[55949-56069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55973-56069]:Block[55973-56069]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Indices must be unique.\");",
    "right" : "throw new IllegalArgumentException(\"Indices must be unique.\");",
    "info" : "ThrowStatement[55992-56054]:ThrowStatement[55992-56054]"
  }, {
    "left" : "set.add(item);",
    "right" : "set.add(item);",
    "info" : "ExpressionStatement[56083-56097]:ExpressionStatement[56083-56097]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56285-56291]:Modifier[56285-56291]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[56292-56295]:PrimitiveType[56292-56295]"
  }, {
    "left" : "getRendererCount",
    "right" : "getRendererCount",
    "info" : "SimpleName[56296-56312]:SimpleName[56296-56312]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56315-56362]:Block[56315-56362]"
  }, {
    "left" : "return this.renderers.size();",
    "right" : "return this.renderers.size();",
    "info" : "ReturnStatement[56326-56355]:ReturnStatement[56326-56355]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56564-56570]:Modifier[56564-56570]"
  }, {
    "left" : "XYItemRenderer",
    "right" : "XYItemRenderer",
    "info" : "SimpleType[56571-56585]:SimpleType[56571-56585]"
  }, {
    "left" : "getRenderer",
    "right" : "getRenderer",
    "info" : "SimpleName[56586-56597]:SimpleName[56586-56597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56600-56640]:Block[56600-56640]"
  }, {
    "left" : "return getRenderer(0);",
    "right" : "return getRenderer(0);",
    "info" : "ReturnStatement[56611-56633]:ReturnStatement[56611-56633]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56904-56910]:Modifier[56904-56910]"
  }, {
    "left" : "XYItemRenderer",
    "right" : "XYItemRenderer",
    "info" : "SimpleType[56911-56925]:SimpleType[56911-56925]"
  }, {
    "left" : "getRenderer",
    "right" : "getRenderer",
    "info" : "SimpleName[56926-56937]:SimpleName[56926-56937]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[56938-56947]:SingleVariableDeclaration[56938-56947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56949-57145]:Block[56949-57145]"
  }, {
    "left" : "XYItemRenderer result = null;",
    "right" : "XYItemRenderer result = null;",
    "info" : "VariableDeclarationStatement[56960-56989]:VariableDeclarationStatement[56960-56989]"
  }, {
    "left" : "if (this.renderers.size() > index)",
    "right" : "if (this.renderers.size() > index)",
    "info" : "IfStatement[56999-57112]:IfStatement[56999-57112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57034-57112]:Block[57034-57112]"
  }, {
    "left" : "result = (XYItemRenderer) this.renderers.get(index);",
    "right" : "result = (XYItemRenderer) this.renderers.get(index);",
    "info" : "ExpressionStatement[57049-57101]:ExpressionStatement[57049-57101]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[57122-57136]:ReturnStatement[57122-57136]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57488-57494]:Modifier[57488-57494]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[57495-57499]:PrimitiveType[57495-57499]"
  }, {
    "left" : "setRenderer",
    "right" : "setRenderer",
    "info" : "SimpleName[57500-57511]:SimpleName[57500-57511]"
  }, {
    "left" : "XYItemRenderer renderer",
    "right" : "XYItemRenderer renderer",
    "info" : "SingleVariableDeclaration[57512-57535]:SingleVariableDeclaration[57512-57535]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57537-57580]:Block[57537-57580]"
  }, {
    "left" : "setRenderer(0, renderer);",
    "right" : "setRenderer(0, renderer);",
    "info" : "ExpressionStatement[57548-57573]:ExpressionStatement[57548-57573]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57822-57828]:Modifier[57822-57828]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[57829-57833]:PrimitiveType[57829-57833]"
  }, {
    "left" : "setRenderer",
    "right" : "setRenderer",
    "info" : "SimpleName[57834-57845]:SimpleName[57834-57845]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[57846-57855]:SingleVariableDeclaration[57846-57855]"
  }, {
    "left" : "XYItemRenderer renderer",
    "right" : "XYItemRenderer renderer",
    "info" : "SingleVariableDeclaration[57857-57880]:SingleVariableDeclaration[57857-57880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57882-57935]:Block[57882-57935]"
  }, {
    "left" : "setRenderer(index, renderer, true);",
    "right" : "setRenderer(index, renderer, true);",
    "info" : "ExpressionStatement[57893-57928]:ExpressionStatement[57893-57928]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[58218-58224]:Modifier[58218-58224]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[58225-58229]:PrimitiveType[58225-58229]"
  }, {
    "left" : "setRenderer",
    "right" : "setRenderer",
    "info" : "SimpleName[58230-58241]:SimpleName[58230-58241]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[58242-58251]:SingleVariableDeclaration[58242-58251]"
  }, {
    "left" : "XYItemRenderer renderer",
    "right" : "XYItemRenderer renderer",
    "info" : "SingleVariableDeclaration[58253-58276]:SingleVariableDeclaration[58253-58276]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[58307-58321]:SingleVariableDeclaration[58307-58321]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58323-58783]:Block[58323-58783]"
  }, {
    "left" : "XYItemRenderer existing = getRenderer(index);",
    "right" : "XYItemRenderer existing = getRenderer(index);",
    "info" : "VariableDeclarationStatement[58334-58379]:VariableDeclarationStatement[58334-58379]"
  }, {
    "left" : "if (existing != null)",
    "right" : "if (existing != null)",
    "info" : "IfStatement[58389-58473]:IfStatement[58389-58473]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58411-58473]:Block[58411-58473]"
  }, {
    "left" : "existing.removeChangeListener(this);",
    "right" : "existing.removeChangeListener(this);",
    "info" : "ExpressionStatement[58426-58462]:ExpressionStatement[58426-58462]"
  }, {
    "left" : "this.renderers.set(index, renderer);",
    "right" : "this.renderers.set(index, renderer);",
    "info" : "ExpressionStatement[58483-58519]:ExpressionStatement[58483-58519]"
  }, {
    "left" : "if (renderer != null)",
    "right" : "if (renderer != null)",
    "info" : "IfStatement[58529-58647]:IfStatement[58529-58647]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58551-58647]:Block[58551-58647]"
  }, {
    "left" : "renderer.setPlot(this);",
    "right" : "renderer.setPlot(this);",
    "info" : "ExpressionStatement[58566-58589]:ExpressionStatement[58566-58589]"
  }, {
    "left" : "renderer.addChangeListener(this);",
    "right" : "renderer.addChangeListener(this);",
    "info" : "ExpressionStatement[58603-58636]:ExpressionStatement[58603-58636]"
  }, {
    "left" : "configureDomainAxes();",
    "right" : "configureDomainAxes();",
    "info" : "ExpressionStatement[58657-58679]:ExpressionStatement[58657-58679]"
  }, {
    "left" : "configureRangeAxes();",
    "right" : "configureRangeAxes();",
    "info" : "ExpressionStatement[58689-58710]:ExpressionStatement[58689-58710]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[58720-58776]:IfStatement[58720-58776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58732-58776]:Block[58732-58776]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[58747-58765]:ExpressionStatement[58747-58765]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[59006-59012]:Modifier[59006-59012]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[59013-59017]:PrimitiveType[59013-59017]"
  }, {
    "left" : "setRenderers",
    "right" : "setRenderers",
    "info" : "SimpleName[59018-59030]:SimpleName[59018-59030]"
  }, {
    "left" : "XYItemRenderer[] renderers",
    "right" : "XYItemRenderer[] renderers",
    "info" : "SingleVariableDeclaration[59031-59057]:SingleVariableDeclaration[59031-59057]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59059-59210]:Block[59059-59210]"
  }, {
    "left" : "for (int i = 0; i < renderers.length; i++)",
    "right" : "for (int i = 0; i < renderers.length; i++)",
    "info" : "ForStatement[59070-59175]:ForStatement[59070-59175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59113-59175]:Block[59113-59175]"
  }, {
    "left" : "setRenderer(i, renderers[i], false);",
    "right" : "setRenderer(i, renderers[i], false);",
    "info" : "ExpressionStatement[59128-59164]:ExpressionStatement[59128-59164]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[59185-59203]:ExpressionStatement[59185-59203]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[59412-59418]:Modifier[59412-59418]"
  }, {
    "left" : "DatasetRenderingOrder",
    "right" : "DatasetRenderingOrder",
    "info" : "SimpleType[59419-59440]:SimpleType[59419-59440]"
  }, {
    "left" : "getDatasetRenderingOrder",
    "right" : "getDatasetRenderingOrder",
    "info" : "SimpleName[59441-59465]:SimpleName[59441-59465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59468-59520]:Block[59468-59520]"
  }, {
    "left" : "return this.datasetRenderingOrder;",
    "right" : "return this.datasetRenderingOrder;",
    "info" : "ReturnStatement[59479-59513]:ReturnStatement[59479-59513]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[59957-59963]:Modifier[59957-59963]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[59964-59968]:PrimitiveType[59964-59968]"
  }, {
    "left" : "setDatasetRenderingOrder",
    "right" : "setDatasetRenderingOrder",
    "info" : "SimpleName[59969-59993]:SimpleName[59969-59993]"
  }, {
    "left" : "DatasetRenderingOrder order",
    "right" : "DatasetRenderingOrder order",
    "info" : "SingleVariableDeclaration[59994-60021]:SingleVariableDeclaration[59994-60021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60023-60220]:Block[60023-60220]"
  }, {
    "left" : "if (order == null)",
    "right" : "if (order == null)",
    "info" : "IfStatement[60034-60140]:IfStatement[60034-60140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60053-60140]:Block[60053-60140]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
    "info" : "ThrowStatement[60068-60129]:ThrowStatement[60068-60129]"
  }, {
    "left" : "this.datasetRenderingOrder = order;",
    "right" : "this.datasetRenderingOrder = order;",
    "info" : "ExpressionStatement[60150-60185]:ExpressionStatement[60150-60185]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[60195-60213]:ExpressionStatement[60195-60213]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[60419-60425]:Modifier[60419-60425]"
  }, {
    "left" : "SeriesRenderingOrder",
    "right" : "SeriesRenderingOrder",
    "info" : "SimpleType[60426-60446]:SimpleType[60426-60446]"
  }, {
    "left" : "getSeriesRenderingOrder",
    "right" : "getSeriesRenderingOrder",
    "info" : "SimpleName[60447-60470]:SimpleName[60447-60470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60473-60524]:Block[60473-60524]"
  }, {
    "left" : "return this.seriesRenderingOrder;",
    "right" : "return this.seriesRenderingOrder;",
    "info" : "ReturnStatement[60484-60517]:ReturnStatement[60484-60517]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[60944-60950]:Modifier[60944-60950]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[60951-60955]:PrimitiveType[60951-60955]"
  }, {
    "left" : "setSeriesRenderingOrder",
    "right" : "setSeriesRenderingOrder",
    "info" : "SimpleName[60956-60979]:SimpleName[60956-60979]"
  }, {
    "left" : "SeriesRenderingOrder order",
    "right" : "SeriesRenderingOrder order",
    "info" : "SingleVariableDeclaration[60980-61006]:SingleVariableDeclaration[60980-61006]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61008-61204]:Block[61008-61204]"
  }, {
    "left" : "if (order == null)",
    "right" : "if (order == null)",
    "info" : "IfStatement[61019-61125]:IfStatement[61019-61125]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61038-61125]:Block[61038-61125]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'order' argument.\");",
    "info" : "ThrowStatement[61053-61114]:ThrowStatement[61053-61114]"
  }, {
    "left" : "this.seriesRenderingOrder = order;",
    "right" : "this.seriesRenderingOrder = order;",
    "info" : "ExpressionStatement[61135-61169]:ExpressionStatement[61135-61169]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[61179-61197]:ExpressionStatement[61179-61197]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61477-61483]:Modifier[61477-61483]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[61484-61487]:PrimitiveType[61484-61487]"
  }, {
    "left" : "getIndexOf",
    "right" : "getIndexOf",
    "info" : "SimpleName[61488-61498]:SimpleName[61488-61498]"
  }, {
    "left" : "XYItemRenderer renderer",
    "right" : "XYItemRenderer renderer",
    "info" : "SingleVariableDeclaration[61499-61522]:SingleVariableDeclaration[61499-61522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61524-61582]:Block[61524-61582]"
  }, {
    "left" : "return this.renderers.indexOf(renderer);",
    "right" : "return this.renderers.indexOf(renderer);",
    "info" : "ReturnStatement[61535-61575]:ReturnStatement[61535-61575]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61971-61977]:Modifier[61971-61977]"
  }, {
    "left" : "XYItemRenderer",
    "right" : "XYItemRenderer",
    "info" : "SimpleType[61978-61992]:SimpleType[61978-61992]"
  }, {
    "left" : "getRendererForDataset",
    "right" : "getRendererForDataset",
    "info" : "SimpleName[61993-62014]:SimpleName[61993-62014]"
  }, {
    "left" : "XYDataset dataset",
    "right" : "XYDataset dataset",
    "info" : "SingleVariableDeclaration[62015-62032]:SingleVariableDeclaration[62015-62032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62034-62434]:Block[62034-62434]"
  }, {
    "left" : "XYItemRenderer result = null;",
    "right" : "XYItemRenderer result = null;",
    "info" : "VariableDeclarationStatement[62045-62074]:VariableDeclarationStatement[62045-62074]"
  }, {
    "left" : "for (int i = 0; i < this.datasets.size(); i++)",
    "right" : "for (int i = 0; i < this.datasets.size(); i++)",
    "info" : "ForStatement[62084-62403]:ForStatement[62084-62403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62131-62403]:Block[62131-62403]"
  }, {
    "left" : "if (this.datasets.get(i) == dataset)",
    "right" : "if (this.datasets.get(i) == dataset)",
    "info" : "IfStatement[62146-62392]:IfStatement[62146-62392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62183-62392]:Block[62183-62392]"
  }, {
    "left" : "result = (XYItemRenderer) this.renderers.get(i);",
    "right" : "result = (XYItemRenderer) this.renderers.get(i);",
    "info" : "ExpressionStatement[62202-62250]:ExpressionStatement[62202-62250]"
  }, {
    "left" : "if (result == null)",
    "right" : "if (result == null)",
    "info" : "IfStatement[62268-62353]:IfStatement[62268-62353]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62288-62353]:Block[62288-62353]"
  }, {
    "left" : "result = getRenderer();",
    "right" : "result = getRenderer();",
    "info" : "ExpressionStatement[62311-62334]:ExpressionStatement[62311-62334]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[62371-62377]:BreakStatement[62371-62377]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[62413-62427]:ReturnStatement[62413-62427]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62635-62641]:Modifier[62635-62641]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[62642-62645]:PrimitiveType[62642-62645]"
  }, {
    "left" : "getWeight",
    "right" : "getWeight",
    "info" : "SimpleName[62646-62655]:SimpleName[62646-62655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62658-62695]:Block[62658-62695]"
  }, {
    "left" : "return this.weight;",
    "right" : "return this.weight;",
    "info" : "ReturnStatement[62669-62688]:ReturnStatement[62669-62688]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62908-62914]:Modifier[62908-62914]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[62915-62919]:PrimitiveType[62915-62919]"
  }, {
    "left" : "setWeight",
    "right" : "setWeight",
    "info" : "SimpleName[62920-62929]:SimpleName[62920-62929]"
  }, {
    "left" : "int weight",
    "right" : "int weight",
    "info" : "SingleVariableDeclaration[62930-62940]:SingleVariableDeclaration[62930-62940]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62942-63009]:Block[62942-63009]"
  }, {
    "left" : "this.weight = weight;",
    "right" : "this.weight = weight;",
    "info" : "ExpressionStatement[62953-62974]:ExpressionStatement[62953-62974]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[62984-63002]:ExpressionStatement[62984-63002]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[63269-63275]:Modifier[63269-63275]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[63276-63283]:PrimitiveType[63276-63283]"
  }, {
    "left" : "isDomainGridlinesVisible",
    "right" : "isDomainGridlinesVisible",
    "info" : "SimpleName[63284-63308]:SimpleName[63284-63308]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63311-63364]:Block[63311-63364]"
  }, {
    "left" : "return this.domainGridlinesVisible;",
    "right" : "return this.domainGridlinesVisible;",
    "info" : "ReturnStatement[63322-63357]:ReturnStatement[63322-63357]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[63713-63719]:Modifier[63713-63719]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[63720-63724]:PrimitiveType[63720-63724]"
  }, {
    "left" : "setDomainGridlinesVisible",
    "right" : "setDomainGridlinesVisible",
    "info" : "SimpleName[63725-63750]:SimpleName[63725-63750]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[63751-63766]:SingleVariableDeclaration[63751-63766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63768-63926]:Block[63768-63926]"
  }, {
    "left" : "if (this.domainGridlinesVisible != visible)",
    "right" : "if (this.domainGridlinesVisible != visible)",
    "info" : "IfStatement[63779-63919]:IfStatement[63779-63919]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63823-63919]:Block[63823-63919]"
  }, {
    "left" : "this.domainGridlinesVisible = visible;",
    "right" : "this.domainGridlinesVisible = visible;",
    "info" : "ExpressionStatement[63838-63876]:ExpressionStatement[63838-63876]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[63890-63908]:ExpressionStatement[63890-63908]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[64227-64233]:Modifier[64227-64233]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[64234-64241]:PrimitiveType[64234-64241]"
  }, {
    "left" : "isDomainMinorGridlinesVisible",
    "right" : "isDomainMinorGridlinesVisible",
    "info" : "SimpleName[64242-64271]:SimpleName[64242-64271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64274-64332]:Block[64274-64332]"
  }, {
    "left" : "return this.domainMinorGridlinesVisible;",
    "right" : "return this.domainMinorGridlinesVisible;",
    "info" : "ReturnStatement[64285-64325]:ReturnStatement[64285-64325]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[64722-64728]:Modifier[64722-64728]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[64729-64733]:PrimitiveType[64729-64733]"
  }, {
    "left" : "setDomainMinorGridlinesVisible",
    "right" : "setDomainMinorGridlinesVisible",
    "info" : "SimpleName[64734-64764]:SimpleName[64734-64764]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[64765-64780]:SingleVariableDeclaration[64765-64780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64782-64950]:Block[64782-64950]"
  }, {
    "left" : "if (this.domainMinorGridlinesVisible != visible)",
    "right" : "if (this.domainMinorGridlinesVisible != visible)",
    "info" : "IfStatement[64793-64943]:IfStatement[64793-64943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64842-64943]:Block[64842-64943]"
  }, {
    "left" : "this.domainMinorGridlinesVisible = visible;",
    "right" : "this.domainMinorGridlinesVisible = visible;",
    "info" : "ExpressionStatement[64857-64900]:ExpressionStatement[64857-64900]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[64914-64932]:ExpressionStatement[64914-64932]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[65188-65194]:Modifier[65188-65194]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[65195-65201]:SimpleType[65195-65201]"
  }, {
    "left" : "getDomainGridlineStroke",
    "right" : "getDomainGridlineStroke",
    "info" : "SimpleName[65202-65225]:SimpleName[65202-65225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65228-65279]:Block[65228-65279]"
  }, {
    "left" : "return this.domainGridlineStroke;",
    "right" : "return this.domainGridlineStroke;",
    "info" : "ReturnStatement[65239-65272]:ReturnStatement[65239-65272]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[65685-65691]:Modifier[65685-65691]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[65692-65696]:PrimitiveType[65692-65696]"
  }, {
    "left" : "setDomainGridlineStroke",
    "right" : "setDomainGridlineStroke",
    "info" : "SimpleName[65697-65720]:SimpleName[65697-65720]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[65721-65734]:SingleVariableDeclaration[65721-65734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65736-65935]:Block[65736-65935]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[65747-65855]:IfStatement[65747-65855]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65767-65855]:Block[65767-65855]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[65782-65844]:ThrowStatement[65782-65844]"
  }, {
    "left" : "this.domainGridlineStroke = stroke;",
    "right" : "this.domainGridlineStroke = stroke;",
    "info" : "ExpressionStatement[65865-65900]:ExpressionStatement[65865-65900]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[65910-65928]:ExpressionStatement[65910-65928]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[66216-66222]:Modifier[66216-66222]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[66223-66229]:SimpleType[66223-66229]"
  }, {
    "left" : "getDomainMinorGridlineStroke",
    "right" : "getDomainMinorGridlineStroke",
    "info" : "SimpleName[66230-66258]:SimpleName[66230-66258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66261-66317]:Block[66261-66317]"
  }, {
    "left" : "return this.domainMinorGridlineStroke;",
    "right" : "return this.domainMinorGridlineStroke;",
    "info" : "ReturnStatement[66272-66310]:ReturnStatement[66272-66310]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[66764-66770]:Modifier[66764-66770]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[66771-66775]:PrimitiveType[66771-66775]"
  }, {
    "left" : "setDomainMinorGridlineStroke",
    "right" : "setDomainMinorGridlineStroke",
    "info" : "SimpleName[66776-66804]:SimpleName[66776-66804]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[66805-66818]:SingleVariableDeclaration[66805-66818]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66820-67024]:Block[66820-67024]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[66831-66939]:IfStatement[66831-66939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[66851-66939]:Block[66851-66939]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[66866-66928]:ThrowStatement[66866-66928]"
  }, {
    "left" : "this.domainMinorGridlineStroke = stroke;",
    "right" : "this.domainMinorGridlineStroke = stroke;",
    "info" : "ExpressionStatement[66949-66989]:ExpressionStatement[66949-66989]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[66999-67017]:ExpressionStatement[66999-67017]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[67258-67264]:Modifier[67258-67264]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[67265-67270]:SimpleType[67265-67270]"
  }, {
    "left" : "getDomainGridlinePaint",
    "right" : "getDomainGridlinePaint",
    "info" : "SimpleName[67271-67293]:SimpleName[67271-67293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67296-67346]:Block[67296-67346]"
  }, {
    "left" : "return this.domainGridlinePaint;",
    "right" : "return this.domainGridlinePaint;",
    "info" : "ReturnStatement[67307-67339]:ReturnStatement[67307-67339]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[67747-67753]:Modifier[67747-67753]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[67754-67758]:PrimitiveType[67754-67758]"
  }, {
    "left" : "setDomainGridlinePaint",
    "right" : "setDomainGridlinePaint",
    "info" : "SimpleName[67759-67781]:SimpleName[67759-67781]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[67782-67793]:SingleVariableDeclaration[67782-67793]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67795-67990]:Block[67795-67990]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[67806-67912]:IfStatement[67806-67912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67825-67912]:Block[67825-67912]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[67840-67901]:ThrowStatement[67840-67901]"
  }, {
    "left" : "this.domainGridlinePaint = paint;",
    "right" : "this.domainGridlinePaint = paint;",
    "info" : "ExpressionStatement[67922-67955]:ExpressionStatement[67922-67955]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[67965-67983]:ExpressionStatement[67965-67983]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68265-68271]:Modifier[68265-68271]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[68272-68277]:SimpleType[68272-68277]"
  }, {
    "left" : "getDomainMinorGridlinePaint",
    "right" : "getDomainMinorGridlinePaint",
    "info" : "SimpleName[68278-68305]:SimpleName[68278-68305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68308-68363]:Block[68308-68363]"
  }, {
    "left" : "return this.domainMinorGridlinePaint;",
    "right" : "return this.domainMinorGridlinePaint;",
    "info" : "ReturnStatement[68319-68356]:ReturnStatement[68319-68356]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68805-68811]:Modifier[68805-68811]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[68812-68816]:PrimitiveType[68812-68816]"
  }, {
    "left" : "setDomainMinorGridlinePaint",
    "right" : "setDomainMinorGridlinePaint",
    "info" : "SimpleName[68817-68844]:SimpleName[68817-68844]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[68845-68856]:SingleVariableDeclaration[68845-68856]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68858-69058]:Block[68858-69058]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[68869-68975]:IfStatement[68869-68975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68888-68975]:Block[68888-68975]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[68903-68964]:ThrowStatement[68903-68964]"
  }, {
    "left" : "this.domainMinorGridlinePaint = paint;",
    "right" : "this.domainMinorGridlinePaint = paint;",
    "info" : "ExpressionStatement[68985-69023]:ExpressionStatement[68985-69023]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[69033-69051]:ExpressionStatement[69033-69051]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69285-69291]:Modifier[69285-69291]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[69292-69299]:PrimitiveType[69292-69299]"
  }, {
    "left" : "isRangeGridlinesVisible",
    "right" : "isRangeGridlinesVisible",
    "info" : "SimpleName[69300-69323]:SimpleName[69300-69323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69326-69378]:Block[69326-69378]"
  }, {
    "left" : "return this.rangeGridlinesVisible;",
    "right" : "return this.rangeGridlinesVisible;",
    "info" : "ReturnStatement[69337-69371]:ReturnStatement[69337-69371]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[69730-69736]:Modifier[69730-69736]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[69737-69741]:PrimitiveType[69737-69741]"
  }, {
    "left" : "setRangeGridlinesVisible",
    "right" : "setRangeGridlinesVisible",
    "info" : "SimpleName[69742-69766]:SimpleName[69742-69766]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[69767-69782]:SingleVariableDeclaration[69767-69782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69784-69940]:Block[69784-69940]"
  }, {
    "left" : "if (this.rangeGridlinesVisible != visible)",
    "right" : "if (this.rangeGridlinesVisible != visible)",
    "info" : "IfStatement[69795-69933]:IfStatement[69795-69933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69838-69933]:Block[69838-69933]"
  }, {
    "left" : "this.rangeGridlinesVisible = visible;",
    "right" : "this.rangeGridlinesVisible = visible;",
    "info" : "ExpressionStatement[69853-69890]:ExpressionStatement[69853-69890]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[69904-69922]:ExpressionStatement[69904-69922]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70176-70182]:Modifier[70176-70182]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[70183-70189]:SimpleType[70183-70189]"
  }, {
    "left" : "getRangeGridlineStroke",
    "right" : "getRangeGridlineStroke",
    "info" : "SimpleName[70190-70212]:SimpleName[70190-70212]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70215-70265]:Block[70215-70265]"
  }, {
    "left" : "return this.rangeGridlineStroke;",
    "right" : "return this.rangeGridlineStroke;",
    "info" : "ReturnStatement[70226-70258]:ReturnStatement[70226-70258]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70563-70569]:Modifier[70563-70569]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[70570-70574]:PrimitiveType[70570-70574]"
  }, {
    "left" : "setRangeGridlineStroke",
    "right" : "setRangeGridlineStroke",
    "info" : "SimpleName[70575-70597]:SimpleName[70575-70597]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[70598-70611]:SingleVariableDeclaration[70598-70611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70613-70811]:Block[70613-70811]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[70624-70732]:IfStatement[70624-70732]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70644-70732]:Block[70644-70732]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[70659-70721]:ThrowStatement[70659-70721]"
  }, {
    "left" : "this.rangeGridlineStroke = stroke;",
    "right" : "this.rangeGridlineStroke = stroke;",
    "info" : "ExpressionStatement[70742-70776]:ExpressionStatement[70742-70776]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[70786-70804]:ExpressionStatement[70786-70804]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71043-71049]:Modifier[71043-71049]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[71050-71055]:SimpleType[71050-71055]"
  }, {
    "left" : "getRangeGridlinePaint",
    "right" : "getRangeGridlinePaint",
    "info" : "SimpleName[71056-71077]:SimpleName[71056-71077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71080-71129]:Block[71080-71129]"
  }, {
    "left" : "return this.rangeGridlinePaint;",
    "right" : "return this.rangeGridlinePaint;",
    "info" : "ReturnStatement[71091-71122]:ReturnStatement[71091-71122]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71422-71428]:Modifier[71422-71428]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[71429-71433]:PrimitiveType[71429-71433]"
  }, {
    "left" : "setRangeGridlinePaint",
    "right" : "setRangeGridlinePaint",
    "info" : "SimpleName[71434-71455]:SimpleName[71434-71455]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[71456-71467]:SingleVariableDeclaration[71456-71467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71469-71663]:Block[71469-71663]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[71480-71586]:IfStatement[71480-71586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71499-71586]:Block[71499-71586]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[71514-71575]:ThrowStatement[71514-71575]"
  }, {
    "left" : "this.rangeGridlinePaint = paint;",
    "right" : "this.rangeGridlinePaint = paint;",
    "info" : "ExpressionStatement[71596-71628]:ExpressionStatement[71596-71628]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[71638-71656]:ExpressionStatement[71638-71656]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[71931-71937]:Modifier[71931-71937]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[71938-71945]:PrimitiveType[71938-71945]"
  }, {
    "left" : "isRangeMinorGridlinesVisible",
    "right" : "isRangeMinorGridlinesVisible",
    "info" : "SimpleName[71946-71974]:SimpleName[71946-71974]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71977-72034]:Block[71977-72034]"
  }, {
    "left" : "return this.rangeMinorGridlinesVisible;",
    "right" : "return this.rangeMinorGridlinesVisible;",
    "info" : "ReturnStatement[71988-72027]:ReturnStatement[71988-72027]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[72427-72433]:Modifier[72427-72433]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[72434-72438]:PrimitiveType[72434-72438]"
  }, {
    "left" : "setRangeMinorGridlinesVisible",
    "right" : "setRangeMinorGridlinesVisible",
    "info" : "SimpleName[72439-72468]:SimpleName[72439-72468]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[72469-72484]:SingleVariableDeclaration[72469-72484]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72486-72652]:Block[72486-72652]"
  }, {
    "left" : "if (this.rangeMinorGridlinesVisible != visible)",
    "right" : "if (this.rangeMinorGridlinesVisible != visible)",
    "info" : "IfStatement[72497-72645]:IfStatement[72497-72645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72545-72645]:Block[72545-72645]"
  }, {
    "left" : "this.rangeMinorGridlinesVisible = visible;",
    "right" : "this.rangeMinorGridlinesVisible = visible;",
    "info" : "ExpressionStatement[72560-72602]:ExpressionStatement[72560-72602]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[72616-72634]:ExpressionStatement[72616-72634]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[72929-72935]:Modifier[72929-72935]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[72936-72942]:SimpleType[72936-72942]"
  }, {
    "left" : "getRangeMinorGridlineStroke",
    "right" : "getRangeMinorGridlineStroke",
    "info" : "SimpleName[72943-72970]:SimpleName[72943-72970]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72973-73028]:Block[72973-73028]"
  }, {
    "left" : "return this.rangeMinorGridlineStroke;",
    "right" : "return this.rangeMinorGridlineStroke;",
    "info" : "ReturnStatement[72984-73021]:ReturnStatement[72984-73021]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[73367-73373]:Modifier[73367-73373]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[73374-73378]:PrimitiveType[73374-73378]"
  }, {
    "left" : "setRangeMinorGridlineStroke",
    "right" : "setRangeMinorGridlineStroke",
    "info" : "SimpleName[73379-73406]:SimpleName[73379-73406]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[73407-73420]:SingleVariableDeclaration[73407-73420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73422-73625]:Block[73422-73625]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[73433-73541]:IfStatement[73433-73541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73453-73541]:Block[73453-73541]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[73468-73530]:ThrowStatement[73468-73530]"
  }, {
    "left" : "this.rangeMinorGridlineStroke = stroke;",
    "right" : "this.rangeMinorGridlineStroke = stroke;",
    "info" : "ExpressionStatement[73551-73590]:ExpressionStatement[73551-73590]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[73600-73618]:ExpressionStatement[73600-73618]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[73898-73904]:Modifier[73898-73904]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[73905-73910]:SimpleType[73905-73910]"
  }, {
    "left" : "getRangeMinorGridlinePaint",
    "right" : "getRangeMinorGridlinePaint",
    "info" : "SimpleName[73911-73937]:SimpleName[73911-73937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[73940-73994]:Block[73940-73994]"
  }, {
    "left" : "return this.rangeMinorGridlinePaint;",
    "right" : "return this.rangeMinorGridlinePaint;",
    "info" : "ReturnStatement[73951-73987]:ReturnStatement[73951-73987]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[74328-74334]:Modifier[74328-74334]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[74335-74339]:PrimitiveType[74335-74339]"
  }, {
    "left" : "setRangeMinorGridlinePaint",
    "right" : "setRangeMinorGridlinePaint",
    "info" : "SimpleName[74340-74366]:SimpleName[74340-74366]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[74367-74378]:SingleVariableDeclaration[74367-74378]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74380-74579]:Block[74380-74579]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[74391-74497]:IfStatement[74391-74497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74410-74497]:Block[74410-74497]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[74425-74486]:ThrowStatement[74425-74486]"
  }, {
    "left" : "this.rangeMinorGridlinePaint = paint;",
    "right" : "this.rangeMinorGridlinePaint = paint;",
    "info" : "ExpressionStatement[74507-74544]:ExpressionStatement[74507-74544]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[74554-74572]:ExpressionStatement[74554-74572]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[74839-74845]:Modifier[74839-74845]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[74846-74853]:PrimitiveType[74846-74853]"
  }, {
    "left" : "isDomainZeroBaselineVisible",
    "right" : "isDomainZeroBaselineVisible",
    "info" : "SimpleName[74854-74881]:SimpleName[74854-74881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74884-74940]:Block[74884-74940]"
  }, {
    "left" : "return this.domainZeroBaselineVisible;",
    "right" : "return this.domainZeroBaselineVisible;",
    "info" : "ReturnStatement[74895-74933]:ReturnStatement[74895-74933]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[75273-75279]:Modifier[75273-75279]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[75280-75284]:PrimitiveType[75280-75284]"
  }, {
    "left" : "setDomainZeroBaselineVisible",
    "right" : "setDomainZeroBaselineVisible",
    "info" : "SimpleName[75285-75313]:SimpleName[75285-75313]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[75314-75329]:SingleVariableDeclaration[75314-75329]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75331-75418]:Block[75331-75418]"
  }, {
    "left" : "this.domainZeroBaselineVisible = visible;",
    "right" : "this.domainZeroBaselineVisible = visible;",
    "info" : "ExpressionStatement[75342-75383]:ExpressionStatement[75342-75383]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[75393-75411]:ExpressionStatement[75393-75411]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[75672-75678]:Modifier[75672-75678]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[75679-75685]:SimpleType[75679-75685]"
  }, {
    "left" : "getDomainZeroBaselineStroke",
    "right" : "getDomainZeroBaselineStroke",
    "info" : "SimpleName[75686-75713]:SimpleName[75686-75713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75716-75771]:Block[75716-75771]"
  }, {
    "left" : "return this.domainZeroBaselineStroke;",
    "right" : "return this.domainZeroBaselineStroke;",
    "info" : "ReturnStatement[75727-75764]:ReturnStatement[75727-75764]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[76094-76100]:Modifier[76094-76100]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[76101-76105]:PrimitiveType[76101-76105]"
  }, {
    "left" : "setDomainZeroBaselineStroke",
    "right" : "setDomainZeroBaselineStroke",
    "info" : "SimpleName[76106-76133]:SimpleName[76106-76133]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[76134-76147]:SingleVariableDeclaration[76134-76147]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76149-76352]:Block[76149-76352]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[76160-76268]:IfStatement[76160-76268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76180-76268]:Block[76180-76268]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[76195-76257]:ThrowStatement[76195-76257]"
  }, {
    "left" : "this.domainZeroBaselineStroke = stroke;",
    "right" : "this.domainZeroBaselineStroke = stroke;",
    "info" : "ExpressionStatement[76278-76317]:ExpressionStatement[76278-76317]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[76327-76345]:ExpressionStatement[76327-76345]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[76622-76628]:Modifier[76622-76628]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[76629-76634]:SimpleType[76629-76634]"
  }, {
    "left" : "getDomainZeroBaselinePaint",
    "right" : "getDomainZeroBaselinePaint",
    "info" : "SimpleName[76635-76661]:SimpleName[76635-76661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76664-76718]:Block[76664-76718]"
  }, {
    "left" : "return this.domainZeroBaselinePaint;",
    "right" : "return this.domainZeroBaselinePaint;",
    "info" : "ReturnStatement[76675-76711]:ReturnStatement[76675-76711]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[77049-77055]:Modifier[77049-77055]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[77056-77060]:PrimitiveType[77056-77060]"
  }, {
    "left" : "setDomainZeroBaselinePaint",
    "right" : "setDomainZeroBaselinePaint",
    "info" : "SimpleName[77061-77087]:SimpleName[77061-77087]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[77088-77099]:SingleVariableDeclaration[77088-77099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77101-77300]:Block[77101-77300]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[77112-77218]:IfStatement[77112-77218]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77131-77218]:Block[77131-77218]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[77146-77207]:ThrowStatement[77146-77207]"
  }, {
    "left" : "this.domainZeroBaselinePaint = paint;",
    "right" : "this.domainZeroBaselinePaint = paint;",
    "info" : "ExpressionStatement[77228-77265]:ExpressionStatement[77228-77265]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[77275-77293]:ExpressionStatement[77275-77293]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[77529-77535]:Modifier[77529-77535]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[77536-77543]:PrimitiveType[77536-77543]"
  }, {
    "left" : "isRangeZeroBaselineVisible",
    "right" : "isRangeZeroBaselineVisible",
    "info" : "SimpleName[77544-77570]:SimpleName[77544-77570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77573-77628]:Block[77573-77628]"
  }, {
    "left" : "return this.rangeZeroBaselineVisible;",
    "right" : "return this.rangeZeroBaselineVisible;",
    "info" : "ReturnStatement[77584-77621]:ReturnStatement[77584-77621]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[77930-77936]:Modifier[77930-77936]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[77937-77941]:PrimitiveType[77937-77941]"
  }, {
    "left" : "setRangeZeroBaselineVisible",
    "right" : "setRangeZeroBaselineVisible",
    "info" : "SimpleName[77942-77969]:SimpleName[77942-77969]"
  }, {
    "left" : "boolean visible",
    "right" : "boolean visible",
    "info" : "SingleVariableDeclaration[77970-77985]:SingleVariableDeclaration[77970-77985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77987-78073]:Block[77987-78073]"
  }, {
    "left" : "this.rangeZeroBaselineVisible = visible;",
    "right" : "this.rangeZeroBaselineVisible = visible;",
    "info" : "ExpressionStatement[77998-78038]:ExpressionStatement[77998-78038]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[78048-78066]:ExpressionStatement[78048-78066]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[78296-78302]:Modifier[78296-78302]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[78303-78309]:SimpleType[78303-78309]"
  }, {
    "left" : "getRangeZeroBaselineStroke",
    "right" : "getRangeZeroBaselineStroke",
    "info" : "SimpleName[78310-78336]:SimpleName[78310-78336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[78339-78393]:Block[78339-78393]"
  }, {
    "left" : "return this.rangeZeroBaselineStroke;",
    "right" : "return this.rangeZeroBaselineStroke;",
    "info" : "ReturnStatement[78350-78386]:ReturnStatement[78350-78386]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[78686-78692]:Modifier[78686-78692]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[78693-78697]:PrimitiveType[78693-78697]"
  }, {
    "left" : "setRangeZeroBaselineStroke",
    "right" : "setRangeZeroBaselineStroke",
    "info" : "SimpleName[78698-78724]:SimpleName[78698-78724]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[78725-78738]:SingleVariableDeclaration[78725-78738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[78740-78942]:Block[78740-78942]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[78751-78859]:IfStatement[78751-78859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[78771-78859]:Block[78771-78859]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[78786-78848]:ThrowStatement[78786-78848]"
  }, {
    "left" : "this.rangeZeroBaselineStroke = stroke;",
    "right" : "this.rangeZeroBaselineStroke = stroke;",
    "info" : "ExpressionStatement[78869-78907]:ExpressionStatement[78869-78907]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[78917-78935]:ExpressionStatement[78917-78935]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[79181-79187]:Modifier[79181-79187]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[79188-79193]:SimpleType[79188-79193]"
  }, {
    "left" : "getRangeZeroBaselinePaint",
    "right" : "getRangeZeroBaselinePaint",
    "info" : "SimpleName[79194-79219]:SimpleName[79194-79219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79222-79275]:Block[79222-79275]"
  }, {
    "left" : "return this.rangeZeroBaselinePaint;",
    "right" : "return this.rangeZeroBaselinePaint;",
    "info" : "ReturnStatement[79233-79268]:ReturnStatement[79233-79268]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[79575-79581]:Modifier[79575-79581]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[79582-79586]:PrimitiveType[79582-79586]"
  }, {
    "left" : "setRangeZeroBaselinePaint",
    "right" : "setRangeZeroBaselinePaint",
    "info" : "SimpleName[79587-79612]:SimpleName[79587-79612]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[79613-79624]:SingleVariableDeclaration[79613-79624]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79626-79824]:Block[79626-79824]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[79637-79743]:IfStatement[79637-79743]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79656-79743]:Block[79656-79743]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[79671-79732]:ThrowStatement[79671-79732]"
  }, {
    "left" : "this.rangeZeroBaselinePaint = paint;",
    "right" : "this.rangeZeroBaselinePaint = paint;",
    "info" : "ExpressionStatement[79753-79789]:ExpressionStatement[79753-79789]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[79799-79817]:ExpressionStatement[79799-79817]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[80092-80098]:Modifier[80092-80098]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[80099-80104]:SimpleType[80099-80104]"
  }, {
    "left" : "getDomainTickBandPaint",
    "right" : "getDomainTickBandPaint",
    "info" : "SimpleName[80105-80127]:SimpleName[80105-80127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[80130-80180]:Block[80130-80180]"
  }, {
    "left" : "return this.domainTickBandPaint;",
    "right" : "return this.domainTickBandPaint;",
    "info" : "ReturnStatement[80141-80173]:ReturnStatement[80141-80173]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[80374-80380]:Modifier[80374-80380]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[80381-80385]:PrimitiveType[80381-80385]"
  }, {
    "left" : "setDomainTickBandPaint",
    "right" : "setDomainTickBandPaint",
    "info" : "SimpleName[80386-80408]:SimpleName[80386-80408]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[80409-80420]:SingleVariableDeclaration[80409-80420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[80422-80501]:Block[80422-80501]"
  }, {
    "left" : "this.domainTickBandPaint = paint;",
    "right" : "this.domainTickBandPaint = paint;",
    "info" : "ExpressionStatement[80433-80466]:ExpressionStatement[80433-80466]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[80476-80494]:ExpressionStatement[80476-80494]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[80767-80773]:Modifier[80767-80773]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[80774-80779]:SimpleType[80774-80779]"
  }, {
    "left" : "getRangeTickBandPaint",
    "right" : "getRangeTickBandPaint",
    "info" : "SimpleName[80780-80801]:SimpleName[80780-80801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[80804-80853]:Block[80804-80853]"
  }, {
    "left" : "return this.rangeTickBandPaint;",
    "right" : "return this.rangeTickBandPaint;",
    "info" : "ReturnStatement[80815-80846]:ReturnStatement[80815-80846]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[81045-81051]:Modifier[81045-81051]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[81052-81056]:PrimitiveType[81052-81056]"
  }, {
    "left" : "setRangeTickBandPaint",
    "right" : "setRangeTickBandPaint",
    "info" : "SimpleName[81057-81078]:SimpleName[81057-81078]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[81079-81090]:SingleVariableDeclaration[81079-81090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81092-81170]:Block[81092-81170]"
  }, {
    "left" : "this.rangeTickBandPaint = paint;",
    "right" : "this.rangeTickBandPaint = paint;",
    "info" : "ExpressionStatement[81103-81135]:ExpressionStatement[81103-81135]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[81145-81163]:ExpressionStatement[81145-81163]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[81426-81432]:Modifier[81426-81432]"
  }, {
    "left" : "Point2D",
    "right" : "Point2D",
    "info" : "SimpleType[81433-81440]:SimpleType[81433-81440]"
  }, {
    "left" : "getQuadrantOrigin",
    "right" : "getQuadrantOrigin",
    "info" : "SimpleName[81441-81458]:SimpleName[81441-81458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81461-81506]:Block[81461-81506]"
  }, {
    "left" : "return this.quadrantOrigin;",
    "right" : "return this.quadrantOrigin;",
    "info" : "ReturnStatement[81472-81499]:ReturnStatement[81472-81499]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[81757-81763]:Modifier[81757-81763]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[81764-81768]:PrimitiveType[81764-81768]"
  }, {
    "left" : "setQuadrantOrigin",
    "right" : "setQuadrantOrigin",
    "info" : "SimpleName[81769-81786]:SimpleName[81769-81786]"
  }, {
    "left" : "Point2D origin",
    "right" : "Point2D origin",
    "info" : "SingleVariableDeclaration[81787-81801]:SingleVariableDeclaration[81787-81801]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81803-81996]:Block[81803-81996]"
  }, {
    "left" : "if (origin == null)",
    "right" : "if (origin == null)",
    "info" : "IfStatement[81814-81922]:IfStatement[81814-81922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81834-81922]:Block[81834-81922]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'origin' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'origin' argument.\");",
    "info" : "ThrowStatement[81849-81911]:ThrowStatement[81849-81911]"
  }, {
    "left" : "this.quadrantOrigin = origin;",
    "right" : "this.quadrantOrigin = origin;",
    "info" : "ExpressionStatement[81932-81961]:ExpressionStatement[81932-81961]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[81971-81989]:ExpressionStatement[81971-81989]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[82252-82258]:Modifier[82252-82258]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[82259-82264]:SimpleType[82259-82264]"
  }, {
    "left" : "getQuadrantPaint",
    "right" : "getQuadrantPaint",
    "info" : "SimpleName[82265-82281]:SimpleName[82265-82281]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[82282-82291]:SingleVariableDeclaration[82282-82291]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[82293-82530]:Block[82293-82530]"
  }, {
    "left" : "if (index < 0 || index > 3)",
    "right" : "if (index < 0 || index > 3)",
    "info" : "IfStatement[82304-82480]:IfStatement[82304-82480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[82332-82480]:Block[82332-82480]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The index value (\" + index\r\n                    + \") should be in the range 0 to 3.\");",
    "right" : "throw new IllegalArgumentException(\"The index value (\" + index\r\n                    + \") should be in the range 0 to 3.\");",
    "info" : "ThrowStatement[82347-82469]:ThrowStatement[82347-82469]"
  }, {
    "left" : "return this.quadrantPaint[index];",
    "right" : "return this.quadrantPaint[index];",
    "info" : "ReturnStatement[82490-82523]:ReturnStatement[82490-82523]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[82847-82853]:Modifier[82847-82853]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[82854-82858]:PrimitiveType[82854-82858]"
  }, {
    "left" : "setQuadrantPaint",
    "right" : "setQuadrantPaint",
    "info" : "SimpleName[82859-82875]:SimpleName[82859-82875]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[82876-82885]:SingleVariableDeclaration[82876-82885]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[82887-82898]:SingleVariableDeclaration[82887-82898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[82900-83166]:Block[82900-83166]"
  }, {
    "left" : "if (index < 0 || index > 3)",
    "right" : "if (index < 0 || index > 3)",
    "info" : "IfStatement[82911-83087]:IfStatement[82911-83087]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[82939-83087]:Block[82939-83087]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The index value (\" + index\r\n                    + \") should be in the range 0 to 3.\");",
    "right" : "throw new IllegalArgumentException(\"The index value (\" + index\r\n                    + \") should be in the range 0 to 3.\");",
    "info" : "ThrowStatement[82954-83076]:ThrowStatement[82954-83076]"
  }, {
    "left" : "this.quadrantPaint[index] = paint;",
    "right" : "this.quadrantPaint[index] = paint;",
    "info" : "ExpressionStatement[83097-83131]:ExpressionStatement[83097-83131]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[83141-83159]:ExpressionStatement[83141-83159]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[83637-83643]:Modifier[83637-83643]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[83644-83648]:PrimitiveType[83644-83648]"
  }, {
    "left" : "addDomainMarker",
    "right" : "addDomainMarker",
    "info" : "SimpleName[83649-83664]:SimpleName[83649-83664]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[83665-83678]:SingleVariableDeclaration[83665-83678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83680-83779]:Block[83680-83779]"
  }, {
    "left" : "addDomainMarker(marker, Layer.FOREGROUND);",
    "right" : "addDomainMarker(marker, Layer.FOREGROUND);",
    "info" : "ExpressionStatement[83730-83772]:ExpressionStatement[83730-83772]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[84303-84309]:Modifier[84303-84309]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[84310-84314]:PrimitiveType[84310-84314]"
  }, {
    "left" : "addDomainMarker",
    "right" : "addDomainMarker",
    "info" : "SimpleName[84315-84330]:SimpleName[84315-84330]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[84331-84344]:SingleVariableDeclaration[84331-84344]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[84346-84357]:SingleVariableDeclaration[84346-84357]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[84359-84411]:Block[84359-84411]"
  }, {
    "left" : "addDomainMarker(0, marker, layer);",
    "right" : "addDomainMarker(0, marker, layer);",
    "info" : "ExpressionStatement[84370-84404]:ExpressionStatement[84370-84404]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[84634-84640]:Modifier[84634-84640]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[84641-84645]:PrimitiveType[84641-84645]"
  }, {
    "left" : "clearDomainMarkers",
    "right" : "clearDomainMarkers",
    "info" : "SimpleName[84646-84664]:SimpleName[84646-84664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[84667-85495]:Block[84667-85495]"
  }, {
    "left" : "if (this.backgroundDomainMarkers != null)",
    "right" : "if (this.backgroundDomainMarkers != null)",
    "info" : "IfStatement[84678-85064]:IfStatement[84678-85064]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[84720-85064]:Block[84720-85064]"
  }, {
    "left" : "Set keys = this.backgroundDomainMarkers.keySet();",
    "right" : "Set keys = this.backgroundDomainMarkers.keySet();",
    "info" : "VariableDeclarationStatement[84735-84784]:VariableDeclarationStatement[84735-84784]"
  }, {
    "left" : "Iterator iterator = keys.iterator();",
    "right" : "Iterator iterator = keys.iterator();",
    "info" : "VariableDeclarationStatement[84798-84834]:VariableDeclarationStatement[84798-84834]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[84848-85002]:WhileStatement[84848-85002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[84875-85002]:Block[84875-85002]"
  }, {
    "left" : "Integer key = (Integer) iterator.next();",
    "right" : "Integer key = (Integer) iterator.next();",
    "info" : "VariableDeclarationStatement[84894-84934]:VariableDeclarationStatement[84894-84934]"
  }, {
    "left" : "clearDomainMarkers(key.intValue());",
    "right" : "clearDomainMarkers(key.intValue());",
    "info" : "ExpressionStatement[84952-84987]:ExpressionStatement[84952-84987]"
  }, {
    "left" : "this.backgroundDomainMarkers.clear();",
    "right" : "this.backgroundDomainMarkers.clear();",
    "info" : "ExpressionStatement[85016-85053]:ExpressionStatement[85016-85053]"
  }, {
    "left" : "if (this.foregroundDomainMarkers != null)",
    "right" : "if (this.foregroundDomainMarkers != null)",
    "info" : "IfStatement[85074-85460]:IfStatement[85074-85460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85116-85460]:Block[85116-85460]"
  }, {
    "left" : "Set keys = this.foregroundDomainMarkers.keySet();",
    "right" : "Set keys = this.foregroundDomainMarkers.keySet();",
    "info" : "VariableDeclarationStatement[85131-85180]:VariableDeclarationStatement[85131-85180]"
  }, {
    "left" : "Iterator iterator = keys.iterator();",
    "right" : "Iterator iterator = keys.iterator();",
    "info" : "VariableDeclarationStatement[85194-85230]:VariableDeclarationStatement[85194-85230]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[85244-85398]:WhileStatement[85244-85398]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85271-85398]:Block[85271-85398]"
  }, {
    "left" : "Integer key = (Integer) iterator.next();",
    "right" : "Integer key = (Integer) iterator.next();",
    "info" : "VariableDeclarationStatement[85290-85330]:VariableDeclarationStatement[85290-85330]"
  }, {
    "left" : "clearDomainMarkers(key.intValue());",
    "right" : "clearDomainMarkers(key.intValue());",
    "info" : "ExpressionStatement[85348-85383]:ExpressionStatement[85348-85383]"
  }, {
    "left" : "this.foregroundDomainMarkers.clear();",
    "right" : "this.foregroundDomainMarkers.clear();",
    "info" : "ExpressionStatement[85412-85449]:ExpressionStatement[85412-85449]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[85470-85488]:ExpressionStatement[85470-85488]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[85713-85719]:Modifier[85713-85719]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[85720-85724]:PrimitiveType[85720-85724]"
  }, {
    "left" : "clearDomainMarkers",
    "right" : "clearDomainMarkers",
    "info" : "SimpleName[85725-85743]:SimpleName[85725-85743]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[85744-85753]:SingleVariableDeclaration[85744-85753]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85755-86799]:Block[85755-86799]"
  }, {
    "left" : "Integer key = new Integer(index);",
    "right" : "Integer key = new Integer(index);",
    "info" : "VariableDeclarationStatement[85766-85799]:VariableDeclarationStatement[85766-85799]"
  }, {
    "left" : "if (this.backgroundDomainMarkers != null)",
    "right" : "if (this.backgroundDomainMarkers != null)",
    "info" : "IfStatement[85809-86282]:IfStatement[85809-86282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85851-86282]:Block[85851-86282]"
  }, {
    "left" : "Collection markers\r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
    "right" : "Collection markers\r\n                = (Collection) this.backgroundDomainMarkers.get(key);",
    "info" : "VariableDeclarationStatement[85866-85955]:VariableDeclarationStatement[85866-85955]"
  }, {
    "left" : "if (markers != null)",
    "right" : "if (markers != null)",
    "info" : "IfStatement[85969-86271]:IfStatement[85969-86271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85990-86271]:Block[85990-86271]"
  }, {
    "left" : "Iterator iterator = markers.iterator();",
    "right" : "Iterator iterator = markers.iterator();",
    "info" : "VariableDeclarationStatement[86009-86048]:VariableDeclarationStatement[86009-86048]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[86066-86222]:WhileStatement[86066-86222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[86093-86222]:Block[86093-86222]"
  }, {
    "left" : "Marker m = (Marker) iterator.next();",
    "right" : "Marker m = (Marker) iterator.next();",
    "info" : "VariableDeclarationStatement[86116-86152]:VariableDeclarationStatement[86116-86152]"
  }, {
    "left" : "m.removeChangeListener(this);",
    "right" : "m.removeChangeListener(this);",
    "info" : "ExpressionStatement[86174-86203]:ExpressionStatement[86174-86203]"
  }, {
    "left" : "markers.clear();",
    "right" : "markers.clear();",
    "info" : "ExpressionStatement[86240-86256]:ExpressionStatement[86240-86256]"
  }, {
    "left" : "if (this.foregroundRangeMarkers != null)",
    "right" : "if (this.foregroundRangeMarkers != null)",
    "info" : "IfStatement[86292-86764]:IfStatement[86292-86764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[86333-86764]:Block[86333-86764]"
  }, {
    "left" : "Collection markers\r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
    "right" : "Collection markers\r\n                = (Collection) this.foregroundDomainMarkers.get(key);",
    "info" : "VariableDeclarationStatement[86348-86437]:VariableDeclarationStatement[86348-86437]"
  }, {
    "left" : "if (markers != null)",
    "right" : "if (markers != null)",
    "info" : "IfStatement[86451-86753]:IfStatement[86451-86753]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[86472-86753]:Block[86472-86753]"
  }, {
    "left" : "Iterator iterator = markers.iterator();",
    "right" : "Iterator iterator = markers.iterator();",
    "info" : "VariableDeclarationStatement[86491-86530]:VariableDeclarationStatement[86491-86530]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[86548-86704]:WhileStatement[86548-86704]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[86575-86704]:Block[86575-86704]"
  }, {
    "left" : "Marker m = (Marker) iterator.next();",
    "right" : "Marker m = (Marker) iterator.next();",
    "info" : "VariableDeclarationStatement[86598-86634]:VariableDeclarationStatement[86598-86634]"
  }, {
    "left" : "m.removeChangeListener(this);",
    "right" : "m.removeChangeListener(this);",
    "info" : "ExpressionStatement[86656-86685]:ExpressionStatement[86656-86685]"
  }, {
    "left" : "markers.clear();",
    "right" : "markers.clear();",
    "info" : "ExpressionStatement[86722-86738]:ExpressionStatement[86722-86738]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[86774-86792]:ExpressionStatement[86774-86792]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[87407-87413]:Modifier[87407-87413]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[87414-87418]:PrimitiveType[87414-87418]"
  }, {
    "left" : "addDomainMarker",
    "right" : "addDomainMarker",
    "info" : "SimpleName[87419-87434]:SimpleName[87419-87434]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[87435-87444]:SingleVariableDeclaration[87435-87444]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[87446-87459]:SingleVariableDeclaration[87446-87459]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[87461-87472]:SingleVariableDeclaration[87461-87472]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[87474-87536]:Block[87474-87536]"
  }, {
    "left" : "addDomainMarker(index, marker, layer, true);",
    "right" : "addDomainMarker(index, marker, layer, true);",
    "info" : "ExpressionStatement[87485-87529]:ExpressionStatement[87485-87529]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[88135-88141]:Modifier[88135-88141]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[88142-88146]:PrimitiveType[88142-88146]"
  }, {
    "left" : "addDomainMarker",
    "right" : "addDomainMarker",
    "info" : "SimpleName[88147-88162]:SimpleName[88147-88162]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[88163-88172]:SingleVariableDeclaration[88163-88172]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[88174-88187]:SingleVariableDeclaration[88174-88187]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[88189-88200]:SingleVariableDeclaration[88189-88200]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[88215-88229]:SingleVariableDeclaration[88215-88229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88231-89392]:Block[88231-89392]"
  }, {
    "left" : "if (marker == null)",
    "right" : "if (marker == null)",
    "info" : "IfStatement[88242-88355]:IfStatement[88242-88355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88262-88355]:Block[88262-88355]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'marker' not permitted.\");",
    "info" : "ThrowStatement[88277-88344]:ThrowStatement[88277-88344]"
  }, {
    "left" : "if (layer == null)",
    "right" : "if (layer == null)",
    "info" : "IfStatement[88365-88476]:IfStatement[88365-88476]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88384-88476]:Block[88384-88476]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'layer' not permitted.\");",
    "info" : "ThrowStatement[88399-88465]:ThrowStatement[88399-88465]"
  }, {
    "left" : "Collection markers;",
    "right" : "Collection markers;",
    "info" : "VariableDeclarationStatement[88486-88505]:VariableDeclarationStatement[88486-88505]"
  }, {
    "left" : "if (layer == Layer.FOREGROUND)",
    "right" : "if (layer == Layer.FOREGROUND)",
    "info" : "IfStatement[88515-89278]:IfStatement[88515-89278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88546-88889]:Block[88546-88889]"
  }, {
    "left" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (Collection) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[88561-88659]:ExpressionStatement[88561-88659]"
  }, {
    "left" : "if (markers == null)",
    "right" : "if (markers == null)",
    "info" : "IfStatement[88673-88844]:IfStatement[88673-88844]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88694-88844]:Block[88694-88844]"
  }, {
    "left" : "markers = new java.util.ArrayList();",
    "right" : "markers = new java.util.ArrayList();",
    "info" : "ExpressionStatement[88713-88749]:ExpressionStatement[88713-88749]"
  }, {
    "left" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
    "right" : "this.foregroundDomainMarkers.put(new Integer(index), markers);",
    "info" : "ExpressionStatement[88767-88829]:ExpressionStatement[88767-88829]"
  }, {
    "left" : "markers.add(marker);",
    "right" : "markers.add(marker);",
    "info" : "ExpressionStatement[88858-88878]:ExpressionStatement[88858-88878]"
  }, {
    "left" : "if (layer == Layer.BACKGROUND)",
    "right" : "if (layer == Layer.BACKGROUND)",
    "info" : "IfStatement[88904-89278]:IfStatement[88904-89278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88935-89278]:Block[88935-89278]"
  }, {
    "left" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (Collection) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[88950-89048]:ExpressionStatement[88950-89048]"
  }, {
    "left" : "if (markers == null)",
    "right" : "if (markers == null)",
    "info" : "IfStatement[89062-89233]:IfStatement[89062-89233]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89083-89233]:Block[89083-89233]"
  }, {
    "left" : "markers = new java.util.ArrayList();",
    "right" : "markers = new java.util.ArrayList();",
    "info" : "ExpressionStatement[89102-89138]:ExpressionStatement[89102-89138]"
  }, {
    "left" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
    "right" : "this.backgroundDomainMarkers.put(new Integer(index), markers);",
    "info" : "ExpressionStatement[89156-89218]:ExpressionStatement[89156-89218]"
  }, {
    "left" : "markers.add(marker);",
    "right" : "markers.add(marker);",
    "info" : "ExpressionStatement[89247-89267]:ExpressionStatement[89247-89267]"
  }, {
    "left" : "marker.addChangeListener(this);",
    "right" : "marker.addChangeListener(this);",
    "info" : "ExpressionStatement[89288-89319]:ExpressionStatement[89288-89319]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[89329-89385]:IfStatement[89329-89385]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89341-89385]:Block[89341-89385]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[89356-89374]:ExpressionStatement[89356-89374]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[89717-89723]:Modifier[89717-89723]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[89724-89731]:PrimitiveType[89724-89731]"
  }, {
    "left" : "removeDomainMarker",
    "right" : "removeDomainMarker",
    "info" : "SimpleName[89732-89750]:SimpleName[89732-89750]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[89751-89764]:SingleVariableDeclaration[89751-89764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89766-89836]:Block[89766-89836]"
  }, {
    "left" : "return removeDomainMarker(marker, Layer.FOREGROUND);",
    "right" : "return removeDomainMarker(marker, Layer.FOREGROUND);",
    "info" : "ReturnStatement[89777-89829]:ReturnStatement[89777-89829]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[90276-90282]:Modifier[90276-90282]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[90283-90290]:PrimitiveType[90283-90290]"
  }, {
    "left" : "removeDomainMarker",
    "right" : "removeDomainMarker",
    "info" : "SimpleName[90291-90309]:SimpleName[90291-90309]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[90310-90323]:SingleVariableDeclaration[90310-90323]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[90325-90336]:SingleVariableDeclaration[90325-90336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[90338-90400]:Block[90338-90400]"
  }, {
    "left" : "return removeDomainMarker(0, marker, layer);",
    "right" : "return removeDomainMarker(0, marker, layer);",
    "info" : "ReturnStatement[90349-90393]:ReturnStatement[90349-90393]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[90844-90850]:Modifier[90844-90850]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[90851-90858]:PrimitiveType[90851-90858]"
  }, {
    "left" : "removeDomainMarker",
    "right" : "removeDomainMarker",
    "info" : "SimpleName[90859-90877]:SimpleName[90859-90877]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[90878-90887]:SingleVariableDeclaration[90878-90887]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[90889-90902]:SingleVariableDeclaration[90889-90902]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[90904-90915]:SingleVariableDeclaration[90904-90915]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[90917-90989]:Block[90917-90989]"
  }, {
    "left" : "return removeDomainMarker(index, marker, layer, true);",
    "right" : "return removeDomainMarker(index, marker, layer, true);",
    "info" : "ReturnStatement[90928-90982]:ReturnStatement[90928-90982]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[91493-91499]:Modifier[91493-91499]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[91500-91507]:PrimitiveType[91500-91507]"
  }, {
    "left" : "removeDomainMarker",
    "right" : "removeDomainMarker",
    "info" : "SimpleName[91508-91526]:SimpleName[91508-91526]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[91527-91536]:SingleVariableDeclaration[91527-91536]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[91538-91551]:SingleVariableDeclaration[91538-91551]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[91553-91564]:SingleVariableDeclaration[91553-91564]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[91579-91593]:SingleVariableDeclaration[91579-91593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91595-92156]:Block[91595-92156]"
  }, {
    "left" : "ArrayList markers;",
    "right" : "ArrayList markers;",
    "info" : "VariableDeclarationStatement[91606-91624]:VariableDeclarationStatement[91606-91624]"
  }, {
    "left" : "if (layer == Layer.FOREGROUND)",
    "right" : "if (layer == Layer.FOREGROUND)",
    "info" : "IfStatement[91634-91926]:IfStatement[91634-91926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91665-91788]:Block[91665-91788]"
  }, {
    "left" : "markers = (ArrayList) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (ArrayList) this.foregroundDomainMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[91680-91777]:ExpressionStatement[91680-91777]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91803-91926]:Block[91803-91926]"
  }, {
    "left" : "markers = (ArrayList) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (ArrayList) this.backgroundDomainMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[91818-91915]:ExpressionStatement[91818-91915]"
  }, {
    "left" : "if (markers == null)",
    "right" : "if (markers == null)",
    "info" : "IfStatement[91936-91996]:IfStatement[91936-91996]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91957-91996]:Block[91957-91996]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[91972-91985]:ReturnStatement[91972-91985]"
  }, {
    "left" : "boolean removed = markers.remove(marker);",
    "right" : "boolean removed = markers.remove(marker);",
    "info" : "VariableDeclarationStatement[92006-92047]:VariableDeclarationStatement[92006-92047]"
  }, {
    "left" : "if (removed && notify)",
    "right" : "if (removed && notify)",
    "info" : "IfStatement[92057-92124]:IfStatement[92057-92124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[92080-92124]:Block[92080-92124]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[92095-92113]:ExpressionStatement[92095-92113]"
  }, {
    "left" : "return removed;",
    "right" : "return removed;",
    "info" : "ReturnStatement[92134-92149]:ReturnStatement[92134-92149]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[92590-92596]:Modifier[92590-92596]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[92597-92601]:PrimitiveType[92597-92601]"
  }, {
    "left" : "addRangeMarker",
    "right" : "addRangeMarker",
    "info" : "SimpleName[92602-92616]:SimpleName[92602-92616]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[92617-92630]:SingleVariableDeclaration[92617-92630]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[92632-92691]:Block[92632-92691]"
  }, {
    "left" : "addRangeMarker(marker, Layer.FOREGROUND);",
    "right" : "addRangeMarker(marker, Layer.FOREGROUND);",
    "info" : "ExpressionStatement[92643-92684]:ExpressionStatement[92643-92684]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[93213-93219]:Modifier[93213-93219]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[93220-93224]:PrimitiveType[93220-93224]"
  }, {
    "left" : "addRangeMarker",
    "right" : "addRangeMarker",
    "info" : "SimpleName[93225-93239]:SimpleName[93225-93239]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[93240-93253]:SingleVariableDeclaration[93240-93253]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[93255-93266]:SingleVariableDeclaration[93255-93266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93268-93319]:Block[93268-93319]"
  }, {
    "left" : "addRangeMarker(0, marker, layer);",
    "right" : "addRangeMarker(0, marker, layer);",
    "info" : "ExpressionStatement[93279-93312]:ExpressionStatement[93279-93312]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[93497-93503]:Modifier[93497-93503]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[93504-93508]:PrimitiveType[93504-93508]"
  }, {
    "left" : "clearRangeMarkers",
    "right" : "clearRangeMarkers",
    "info" : "SimpleName[93509-93526]:SimpleName[93509-93526]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93529-94349]:Block[93529-94349]"
  }, {
    "left" : "if (this.backgroundRangeMarkers != null)",
    "right" : "if (this.backgroundRangeMarkers != null)",
    "info" : "IfStatement[93540-93922]:IfStatement[93540-93922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93581-93922]:Block[93581-93922]"
  }, {
    "left" : "Set keys = this.backgroundRangeMarkers.keySet();",
    "right" : "Set keys = this.backgroundRangeMarkers.keySet();",
    "info" : "VariableDeclarationStatement[93596-93644]:VariableDeclarationStatement[93596-93644]"
  }, {
    "left" : "Iterator iterator = keys.iterator();",
    "right" : "Iterator iterator = keys.iterator();",
    "info" : "VariableDeclarationStatement[93658-93694]:VariableDeclarationStatement[93658-93694]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[93708-93861]:WhileStatement[93708-93861]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93735-93861]:Block[93735-93861]"
  }, {
    "left" : "Integer key = (Integer) iterator.next();",
    "right" : "Integer key = (Integer) iterator.next();",
    "info" : "VariableDeclarationStatement[93754-93794]:VariableDeclarationStatement[93754-93794]"
  }, {
    "left" : "clearRangeMarkers(key.intValue());",
    "right" : "clearRangeMarkers(key.intValue());",
    "info" : "ExpressionStatement[93812-93846]:ExpressionStatement[93812-93846]"
  }, {
    "left" : "this.backgroundRangeMarkers.clear();",
    "right" : "this.backgroundRangeMarkers.clear();",
    "info" : "ExpressionStatement[93875-93911]:ExpressionStatement[93875-93911]"
  }, {
    "left" : "if (this.foregroundRangeMarkers != null)",
    "right" : "if (this.foregroundRangeMarkers != null)",
    "info" : "IfStatement[93932-94314]:IfStatement[93932-94314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93973-94314]:Block[93973-94314]"
  }, {
    "left" : "Set keys = this.foregroundRangeMarkers.keySet();",
    "right" : "Set keys = this.foregroundRangeMarkers.keySet();",
    "info" : "VariableDeclarationStatement[93988-94036]:VariableDeclarationStatement[93988-94036]"
  }, {
    "left" : "Iterator iterator = keys.iterator();",
    "right" : "Iterator iterator = keys.iterator();",
    "info" : "VariableDeclarationStatement[94050-94086]:VariableDeclarationStatement[94050-94086]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[94100-94253]:WhileStatement[94100-94253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[94127-94253]:Block[94127-94253]"
  }, {
    "left" : "Integer key = (Integer) iterator.next();",
    "right" : "Integer key = (Integer) iterator.next();",
    "info" : "VariableDeclarationStatement[94146-94186]:VariableDeclarationStatement[94146-94186]"
  }, {
    "left" : "clearRangeMarkers(key.intValue());",
    "right" : "clearRangeMarkers(key.intValue());",
    "info" : "ExpressionStatement[94204-94238]:ExpressionStatement[94204-94238]"
  }, {
    "left" : "this.foregroundRangeMarkers.clear();",
    "right" : "this.foregroundRangeMarkers.clear();",
    "info" : "ExpressionStatement[94267-94303]:ExpressionStatement[94267-94303]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[94324-94342]:ExpressionStatement[94324-94342]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[94915-94921]:Modifier[94915-94921]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[94922-94926]:PrimitiveType[94922-94926]"
  }, {
    "left" : "addRangeMarker",
    "right" : "addRangeMarker",
    "info" : "SimpleName[94927-94941]:SimpleName[94927-94941]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[94942-94951]:SingleVariableDeclaration[94942-94951]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[94953-94966]:SingleVariableDeclaration[94953-94966]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[94968-94979]:SingleVariableDeclaration[94968-94979]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[94981-95042]:Block[94981-95042]"
  }, {
    "left" : "addRangeMarker(index, marker, layer, true);",
    "right" : "addRangeMarker(index, marker, layer, true);",
    "info" : "ExpressionStatement[94992-95035]:ExpressionStatement[94992-95035]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[95599-95605]:Modifier[95599-95605]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[95606-95610]:PrimitiveType[95606-95610]"
  }, {
    "left" : "addRangeMarker",
    "right" : "addRangeMarker",
    "info" : "SimpleName[95611-95625]:SimpleName[95611-95625]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[95626-95635]:SingleVariableDeclaration[95626-95635]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[95637-95650]:SingleVariableDeclaration[95637-95650]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[95652-95663]:SingleVariableDeclaration[95652-95663]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[95678-95692]:SingleVariableDeclaration[95678-95692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[95694-96607]:Block[95694-96607]"
  }, {
    "left" : "Collection markers;",
    "right" : "Collection markers;",
    "info" : "VariableDeclarationStatement[95705-95724]:VariableDeclarationStatement[95705-95724]"
  }, {
    "left" : "if (layer == Layer.FOREGROUND)",
    "right" : "if (layer == Layer.FOREGROUND)",
    "info" : "IfStatement[95734-96493]:IfStatement[95734-96493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[95765-96106]:Block[95765-96106]"
  }, {
    "left" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (Collection) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[95780-95877]:ExpressionStatement[95780-95877]"
  }, {
    "left" : "if (markers == null)",
    "right" : "if (markers == null)",
    "info" : "IfStatement[95891-96061]:IfStatement[95891-96061]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[95912-96061]:Block[95912-96061]"
  }, {
    "left" : "markers = new java.util.ArrayList();",
    "right" : "markers = new java.util.ArrayList();",
    "info" : "ExpressionStatement[95931-95967]:ExpressionStatement[95931-95967]"
  }, {
    "left" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
    "right" : "this.foregroundRangeMarkers.put(new Integer(index), markers);",
    "info" : "ExpressionStatement[95985-96046]:ExpressionStatement[95985-96046]"
  }, {
    "left" : "markers.add(marker);",
    "right" : "markers.add(marker);",
    "info" : "ExpressionStatement[96075-96095]:ExpressionStatement[96075-96095]"
  }, {
    "left" : "if (layer == Layer.BACKGROUND)",
    "right" : "if (layer == Layer.BACKGROUND)",
    "info" : "IfStatement[96121-96493]:IfStatement[96121-96493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96152-96493]:Block[96152-96493]"
  }, {
    "left" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (Collection) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[96167-96264]:ExpressionStatement[96167-96264]"
  }, {
    "left" : "if (markers == null)",
    "right" : "if (markers == null)",
    "info" : "IfStatement[96278-96448]:IfStatement[96278-96448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96299-96448]:Block[96299-96448]"
  }, {
    "left" : "markers = new java.util.ArrayList();",
    "right" : "markers = new java.util.ArrayList();",
    "info" : "ExpressionStatement[96318-96354]:ExpressionStatement[96318-96354]"
  }, {
    "left" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
    "right" : "this.backgroundRangeMarkers.put(new Integer(index), markers);",
    "info" : "ExpressionStatement[96372-96433]:ExpressionStatement[96372-96433]"
  }, {
    "left" : "markers.add(marker);",
    "right" : "markers.add(marker);",
    "info" : "ExpressionStatement[96462-96482]:ExpressionStatement[96462-96482]"
  }, {
    "left" : "marker.addChangeListener(this);",
    "right" : "marker.addChangeListener(this);",
    "info" : "ExpressionStatement[96503-96534]:ExpressionStatement[96503-96534]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[96544-96600]:IfStatement[96544-96600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96556-96600]:Block[96556-96600]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[96571-96589]:ExpressionStatement[96571-96589]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[96779-96785]:Modifier[96779-96785]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[96786-96790]:PrimitiveType[96786-96790]"
  }, {
    "left" : "clearRangeMarkers",
    "right" : "clearRangeMarkers",
    "info" : "SimpleName[96791-96808]:SimpleName[96791-96808]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[96809-96818]:SingleVariableDeclaration[96809-96818]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96820-97861]:Block[96820-97861]"
  }, {
    "left" : "Integer key = new Integer(index);",
    "right" : "Integer key = new Integer(index);",
    "info" : "VariableDeclarationStatement[96831-96864]:VariableDeclarationStatement[96831-96864]"
  }, {
    "left" : "if (this.backgroundRangeMarkers != null)",
    "right" : "if (this.backgroundRangeMarkers != null)",
    "info" : "IfStatement[96874-97345]:IfStatement[96874-97345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96915-97345]:Block[96915-97345]"
  }, {
    "left" : "Collection markers\r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
    "right" : "Collection markers\r\n                = (Collection) this.backgroundRangeMarkers.get(key);",
    "info" : "VariableDeclarationStatement[96930-97018]:VariableDeclarationStatement[96930-97018]"
  }, {
    "left" : "if (markers != null)",
    "right" : "if (markers != null)",
    "info" : "IfStatement[97032-97334]:IfStatement[97032-97334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97053-97334]:Block[97053-97334]"
  }, {
    "left" : "Iterator iterator = markers.iterator();",
    "right" : "Iterator iterator = markers.iterator();",
    "info" : "VariableDeclarationStatement[97072-97111]:VariableDeclarationStatement[97072-97111]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[97129-97285]:WhileStatement[97129-97285]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97156-97285]:Block[97156-97285]"
  }, {
    "left" : "Marker m = (Marker) iterator.next();",
    "right" : "Marker m = (Marker) iterator.next();",
    "info" : "VariableDeclarationStatement[97179-97215]:VariableDeclarationStatement[97179-97215]"
  }, {
    "left" : "m.removeChangeListener(this);",
    "right" : "m.removeChangeListener(this);",
    "info" : "ExpressionStatement[97237-97266]:ExpressionStatement[97237-97266]"
  }, {
    "left" : "markers.clear();",
    "right" : "markers.clear();",
    "info" : "ExpressionStatement[97303-97319]:ExpressionStatement[97303-97319]"
  }, {
    "left" : "if (this.foregroundRangeMarkers != null)",
    "right" : "if (this.foregroundRangeMarkers != null)",
    "info" : "IfStatement[97355-97826]:IfStatement[97355-97826]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97396-97826]:Block[97396-97826]"
  }, {
    "left" : "Collection markers\r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
    "right" : "Collection markers\r\n                = (Collection) this.foregroundRangeMarkers.get(key);",
    "info" : "VariableDeclarationStatement[97411-97499]:VariableDeclarationStatement[97411-97499]"
  }, {
    "left" : "if (markers != null)",
    "right" : "if (markers != null)",
    "info" : "IfStatement[97513-97815]:IfStatement[97513-97815]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97534-97815]:Block[97534-97815]"
  }, {
    "left" : "Iterator iterator = markers.iterator();",
    "right" : "Iterator iterator = markers.iterator();",
    "info" : "VariableDeclarationStatement[97553-97592]:VariableDeclarationStatement[97553-97592]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[97610-97766]:WhileStatement[97610-97766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97637-97766]:Block[97637-97766]"
  }, {
    "left" : "Marker m = (Marker) iterator.next();",
    "right" : "Marker m = (Marker) iterator.next();",
    "info" : "VariableDeclarationStatement[97660-97696]:VariableDeclarationStatement[97660-97696]"
  }, {
    "left" : "m.removeChangeListener(this);",
    "right" : "m.removeChangeListener(this);",
    "info" : "ExpressionStatement[97718-97747]:ExpressionStatement[97718-97747]"
  }, {
    "left" : "markers.clear();",
    "right" : "markers.clear();",
    "info" : "ExpressionStatement[97784-97800]:ExpressionStatement[97784-97800]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[97836-97854]:ExpressionStatement[97836-97854]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[98184-98190]:Modifier[98184-98190]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[98191-98198]:PrimitiveType[98191-98198]"
  }, {
    "left" : "removeRangeMarker",
    "right" : "removeRangeMarker",
    "info" : "SimpleName[98199-98216]:SimpleName[98199-98216]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[98217-98230]:SingleVariableDeclaration[98217-98230]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98232-98301]:Block[98232-98301]"
  }, {
    "left" : "return removeRangeMarker(marker, Layer.FOREGROUND);",
    "right" : "return removeRangeMarker(marker, Layer.FOREGROUND);",
    "info" : "ReturnStatement[98243-98294]:ReturnStatement[98243-98294]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[98740-98746]:Modifier[98740-98746]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[98747-98754]:PrimitiveType[98747-98754]"
  }, {
    "left" : "removeRangeMarker",
    "right" : "removeRangeMarker",
    "info" : "SimpleName[98755-98772]:SimpleName[98755-98772]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[98773-98786]:SingleVariableDeclaration[98773-98786]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[98788-98799]:SingleVariableDeclaration[98788-98799]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98801-98862]:Block[98801-98862]"
  }, {
    "left" : "return removeRangeMarker(0, marker, layer);",
    "right" : "return removeRangeMarker(0, marker, layer);",
    "info" : "ReturnStatement[98812-98855]:ReturnStatement[98812-98855]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[99306-99312]:Modifier[99306-99312]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[99313-99320]:PrimitiveType[99313-99320]"
  }, {
    "left" : "removeRangeMarker",
    "right" : "removeRangeMarker",
    "info" : "SimpleName[99321-99338]:SimpleName[99321-99338]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[99339-99348]:SingleVariableDeclaration[99339-99348]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[99350-99363]:SingleVariableDeclaration[99350-99363]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[99365-99376]:SingleVariableDeclaration[99365-99376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[99378-99449]:Block[99378-99449]"
  }, {
    "left" : "return removeRangeMarker(index, marker, layer, true);",
    "right" : "return removeRangeMarker(index, marker, layer, true);",
    "info" : "ReturnStatement[99389-99442]:ReturnStatement[99389-99442]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[99938-99944]:Modifier[99938-99944]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[99945-99952]:PrimitiveType[99945-99952]"
  }, {
    "left" : "removeRangeMarker",
    "right" : "removeRangeMarker",
    "info" : "SimpleName[99953-99970]:SimpleName[99953-99970]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[99971-99980]:SingleVariableDeclaration[99971-99980]"
  }, {
    "left" : "Marker marker",
    "right" : "Marker marker",
    "info" : "SingleVariableDeclaration[99982-99995]:SingleVariableDeclaration[99982-99995]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[99997-100008]:SingleVariableDeclaration[99997-100008]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[100023-100037]:SingleVariableDeclaration[100023-100037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100039-100716]:Block[100039-100716]"
  }, {
    "left" : "if (marker == null)",
    "right" : "if (marker == null)",
    "info" : "IfStatement[100050-100158]:IfStatement[100050-100158]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100070-100158]:Block[100070-100158]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'marker' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'marker' argument.\");",
    "info" : "ThrowStatement[100085-100147]:ThrowStatement[100085-100147]"
  }, {
    "left" : "ArrayList markers;",
    "right" : "ArrayList markers;",
    "info" : "VariableDeclarationStatement[100168-100186]:VariableDeclarationStatement[100168-100186]"
  }, {
    "left" : "if (layer == Layer.FOREGROUND)",
    "right" : "if (layer == Layer.FOREGROUND)",
    "info" : "IfStatement[100196-100486]:IfStatement[100196-100486]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100227-100349]:Block[100227-100349]"
  }, {
    "left" : "markers = (ArrayList) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (ArrayList) this.foregroundRangeMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[100242-100338]:ExpressionStatement[100242-100338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100364-100486]:Block[100364-100486]"
  }, {
    "left" : "markers = (ArrayList) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
    "right" : "markers = (ArrayList) this.backgroundRangeMarkers.get(\r\n                    new Integer(index));",
    "info" : "ExpressionStatement[100379-100475]:ExpressionStatement[100379-100475]"
  }, {
    "left" : "if (markers == null)",
    "right" : "if (markers == null)",
    "info" : "IfStatement[100496-100556]:IfStatement[100496-100556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100517-100556]:Block[100517-100556]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[100532-100545]:ReturnStatement[100532-100545]"
  }, {
    "left" : "boolean removed = markers.remove(marker);",
    "right" : "boolean removed = markers.remove(marker);",
    "info" : "VariableDeclarationStatement[100566-100607]:VariableDeclarationStatement[100566-100607]"
  }, {
    "left" : "if (removed && notify)",
    "right" : "if (removed && notify)",
    "info" : "IfStatement[100617-100684]:IfStatement[100617-100684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100640-100684]:Block[100640-100684]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[100655-100673]:ExpressionStatement[100655-100673]"
  }, {
    "left" : "return removed;",
    "right" : "return removed;",
    "info" : "ReturnStatement[100694-100709]:ReturnStatement[100694-100709]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[101023-101029]:Modifier[101023-101029]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[101030-101034]:PrimitiveType[101030-101034]"
  }, {
    "left" : "addAnnotation",
    "right" : "addAnnotation",
    "info" : "SimpleName[101035-101048]:SimpleName[101035-101048]"
  }, {
    "left" : "XYAnnotation annotation",
    "right" : "XYAnnotation annotation",
    "info" : "SingleVariableDeclaration[101049-101072]:SingleVariableDeclaration[101049-101072]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101074-101124]:Block[101074-101124]"
  }, {
    "left" : "addAnnotation(annotation, true);",
    "right" : "addAnnotation(annotation, true);",
    "info" : "ExpressionStatement[101085-101117]:ExpressionStatement[101085-101117]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[101433-101439]:Modifier[101433-101439]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[101440-101444]:PrimitiveType[101440-101444]"
  }, {
    "left" : "addAnnotation",
    "right" : "addAnnotation",
    "info" : "SimpleName[101445-101458]:SimpleName[101445-101458]"
  }, {
    "left" : "XYAnnotation annotation",
    "right" : "XYAnnotation annotation",
    "info" : "SingleVariableDeclaration[101459-101482]:SingleVariableDeclaration[101459-101482]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[101484-101498]:SingleVariableDeclaration[101484-101498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101500-101743]:Block[101500-101743]"
  }, {
    "left" : "if (annotation == null)",
    "right" : "if (annotation == null)",
    "info" : "IfStatement[101511-101627]:IfStatement[101511-101627]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101535-101627]:Block[101535-101627]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
    "info" : "ThrowStatement[101550-101616]:ThrowStatement[101550-101616]"
  }, {
    "left" : "this.annotations.add(annotation);",
    "right" : "this.annotations.add(annotation);",
    "info" : "ExpressionStatement[101637-101670]:ExpressionStatement[101637-101670]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[101680-101736]:IfStatement[101680-101736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101692-101736]:Block[101692-101736]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[101707-101725]:ExpressionStatement[101707-101725]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[102141-102147]:Modifier[102141-102147]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[102148-102155]:PrimitiveType[102148-102155]"
  }, {
    "left" : "removeAnnotation",
    "right" : "removeAnnotation",
    "info" : "SimpleName[102156-102172]:SimpleName[102156-102172]"
  }, {
    "left" : "XYAnnotation annotation",
    "right" : "XYAnnotation annotation",
    "info" : "SingleVariableDeclaration[102173-102196]:SingleVariableDeclaration[102173-102196]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[102198-102258]:Block[102198-102258]"
  }, {
    "left" : "return removeAnnotation(annotation, true);",
    "right" : "return removeAnnotation(annotation, true);",
    "info" : "ReturnStatement[102209-102251]:ReturnStatement[102209-102251]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[102646-102652]:Modifier[102646-102652]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[102653-102660]:PrimitiveType[102653-102660]"
  }, {
    "left" : "removeAnnotation",
    "right" : "removeAnnotation",
    "info" : "SimpleName[102661-102677]:SimpleName[102661-102677]"
  }, {
    "left" : "XYAnnotation annotation",
    "right" : "XYAnnotation annotation",
    "info" : "SingleVariableDeclaration[102678-102701]:SingleVariableDeclaration[102678-102701]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[102703-102717]:SingleVariableDeclaration[102703-102717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[102719-103019]:Block[102719-103019]"
  }, {
    "left" : "if (annotation == null)",
    "right" : "if (annotation == null)",
    "info" : "IfStatement[102730-102846]:IfStatement[102730-102846]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[102754-102846]:Block[102754-102846]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'annotation' argument.\");",
    "info" : "ThrowStatement[102769-102835]:ThrowStatement[102769-102835]"
  }, {
    "left" : "boolean removed = this.annotations.remove(annotation);",
    "right" : "boolean removed = this.annotations.remove(annotation);",
    "info" : "VariableDeclarationStatement[102856-102910]:VariableDeclarationStatement[102856-102910]"
  }, {
    "left" : "if (removed && notify)",
    "right" : "if (removed && notify)",
    "info" : "IfStatement[102920-102987]:IfStatement[102920-102987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[102943-102987]:Block[102943-102987]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[102958-102976]:ExpressionStatement[102958-102976]"
  }, {
    "left" : "return removed;",
    "right" : "return removed;",
    "info" : "ReturnStatement[102997-103012]:ReturnStatement[102997-103012]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[103214-103220]:Modifier[103214-103220]"
  }, {
    "left" : "List",
    "right" : "List",
    "info" : "SimpleType[103221-103225]:SimpleType[103221-103225]"
  }, {
    "left" : "getAnnotations",
    "right" : "getAnnotations",
    "info" : "SimpleName[103226-103240]:SimpleName[103226-103240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[103243-103300]:Block[103243-103300]"
  }, {
    "left" : "return new ArrayList(this.annotations);",
    "right" : "return new ArrayList(this.annotations);",
    "info" : "ReturnStatement[103254-103293]:ReturnStatement[103254-103293]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[103484-103490]:Modifier[103484-103490]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[103491-103495]:PrimitiveType[103491-103495]"
  }, {
    "left" : "clearAnnotations",
    "right" : "clearAnnotations",
    "info" : "SimpleName[103496-103512]:SimpleName[103496-103512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[103515-103586]:Block[103515-103586]"
  }, {
    "left" : "this.annotations.clear();",
    "right" : "this.annotations.clear();",
    "info" : "ExpressionStatement[103526-103551]:ExpressionStatement[103526-103551]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[103561-103579]:ExpressionStatement[103561-103579]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[103812-103821]:Modifier[103812-103821]"
  }, {
    "left" : "AxisSpace",
    "right" : "AxisSpace",
    "info" : "SimpleType[103822-103831]:SimpleType[103822-103831]"
  }, {
    "left" : "calculateAxisSpace",
    "right" : "calculateAxisSpace",
    "info" : "SimpleName[103832-103850]:SimpleName[103832-103850]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[103851-103864]:SingleVariableDeclaration[103851-103864]"
  }, {
    "left" : "Rectangle2D plotArea",
    "right" : "Rectangle2D plotArea",
    "info" : "SingleVariableDeclaration[103910-103930]:SingleVariableDeclaration[103910-103930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[103932-104202]:Block[103932-104202]"
  }, {
    "left" : "AxisSpace space = new AxisSpace();",
    "right" : "AxisSpace space = new AxisSpace();",
    "info" : "VariableDeclarationStatement[103943-103977]:VariableDeclarationStatement[103943-103977]"
  }, {
    "left" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
    "right" : "space = calculateRangeAxisSpace(g2, plotArea, space);",
    "info" : "ExpressionStatement[103987-104040]:ExpressionStatement[103987-104040]"
  }, {
    "left" : "Rectangle2D revPlotArea = space.shrink(plotArea, null);",
    "right" : "Rectangle2D revPlotArea = space.shrink(plotArea, null);",
    "info" : "VariableDeclarationStatement[104050-104105]:VariableDeclarationStatement[104050-104105]"
  }, {
    "left" : "space = calculateDomainAxisSpace(g2, revPlotArea, space);",
    "right" : "space = calculateDomainAxisSpace(g2, revPlotArea, space);",
    "info" : "ExpressionStatement[104115-104172]:ExpressionStatement[104115-104172]"
  }, {
    "left" : "return space;",
    "right" : "return space;",
    "info" : "ReturnStatement[104182-104195]:ReturnStatement[104182-104195]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[104502-104511]:Modifier[104502-104511]"
  }, {
    "left" : "AxisSpace",
    "right" : "AxisSpace",
    "info" : "SimpleType[104512-104521]:SimpleType[104512-104521]"
  }, {
    "left" : "calculateDomainAxisSpace",
    "right" : "calculateDomainAxisSpace",
    "info" : "SimpleName[104522-104546]:SimpleName[104522-104546]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[104547-104560]:SingleVariableDeclaration[104547-104560]"
  }, {
    "left" : "Rectangle2D plotArea",
    "right" : "Rectangle2D plotArea",
    "info" : "SingleVariableDeclaration[104612-104632]:SingleVariableDeclaration[104612-104632]"
  }, {
    "left" : "AxisSpace space",
    "right" : "AxisSpace space",
    "info" : "SingleVariableDeclaration[104684-104699]:SingleVariableDeclaration[104684-104699]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104701-106005]:Block[104701-106005]"
  }, {
    "left" : "if (space == null)",
    "right" : "if (space == null)",
    "info" : "IfStatement[104714-104783]:IfStatement[104714-104783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104733-104783]:Block[104733-104783]"
  }, {
    "left" : "space = new AxisSpace();",
    "right" : "space = new AxisSpace();",
    "info" : "ExpressionStatement[104748-104772]:ExpressionStatement[104748-104772]"
  }, {
    "left" : "if (this.fixedDomainAxisSpace != null)",
    "right" : "if (this.fixedDomainAxisSpace != null)",
    "info" : "IfStatement[104849-105971]:IfStatement[104849-105971]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104888-105551]:Block[104888-105551]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[104903-105540]:IfStatement[104903-105540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104955-105213]:Block[104955-105213]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getLeft(),\r\n                        RectangleEdge.LEFT);",
    "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getLeft(),\r\n                        RectangleEdge.LEFT);",
    "info" : "ExpressionStatement[104974-105076]:ExpressionStatement[104974-105076]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(),\r\n                        RectangleEdge.RIGHT);",
    "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getRight(),\r\n                        RectangleEdge.RIGHT);",
    "info" : "ExpressionStatement[105094-105198]:ExpressionStatement[105094-105198]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
    "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
    "info" : "IfStatement[105232-105540]:IfStatement[105232-105540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105282-105540]:Block[105282-105540]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(),\r\n                        RectangleEdge.TOP);",
    "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getTop(),\r\n                        RectangleEdge.TOP);",
    "info" : "ExpressionStatement[105301-105401]:ExpressionStatement[105301-105401]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(),\r\n                        RectangleEdge.BOTTOM);",
    "right" : "space.ensureAtLeast(this.fixedDomainAxisSpace.getBottom(),\r\n                        RectangleEdge.BOTTOM);",
    "info" : "ExpressionStatement[105419-105525]:ExpressionStatement[105419-105525]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105566-105971]:Block[105566-105971]"
  }, {
    "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "info" : "ForStatement[105634-105960]:ForStatement[105634-105960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105683-105960]:Block[105683-105960]"
  }, {
    "left" : "Axis axis = (Axis) this.domainAxes.get(i);",
    "right" : "Axis axis = (Axis) this.domainAxes.get(i);",
    "info" : "VariableDeclarationStatement[105702-105744]:VariableDeclarationStatement[105702-105744]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[105762-105945]:IfStatement[105762-105945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[105780-105945]:Block[105780-105945]"
  }, {
    "left" : "RectangleEdge edge = getDomainAxisEdge(i);",
    "right" : "RectangleEdge edge = getDomainAxisEdge(i);",
    "info" : "VariableDeclarationStatement[105803-105845]:VariableDeclarationStatement[105803-105845]"
  }, {
    "left" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
    "right" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
    "info" : "ExpressionStatement[105867-105926]:ExpressionStatement[105867-105926]"
  }, {
    "left" : "return space;",
    "right" : "return space;",
    "info" : "ReturnStatement[105983-105996]:ReturnStatement[105983-105996]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[106304-106313]:Modifier[106304-106313]"
  }, {
    "left" : "AxisSpace",
    "right" : "AxisSpace",
    "info" : "SimpleType[106314-106323]:SimpleType[106314-106323]"
  }, {
    "left" : "calculateRangeAxisSpace",
    "right" : "calculateRangeAxisSpace",
    "info" : "SimpleName[106324-106347]:SimpleName[106324-106347]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[106348-106361]:SingleVariableDeclaration[106348-106361]"
  }, {
    "left" : "Rectangle2D plotArea",
    "right" : "Rectangle2D plotArea",
    "info" : "SingleVariableDeclaration[106412-106432]:SingleVariableDeclaration[106412-106432]"
  }, {
    "left" : "AxisSpace space",
    "right" : "AxisSpace space",
    "info" : "SingleVariableDeclaration[106483-106498]:SingleVariableDeclaration[106483-106498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[106500-107792]:Block[106500-107792]"
  }, {
    "left" : "if (space == null)",
    "right" : "if (space == null)",
    "info" : "IfStatement[106513-106582]:IfStatement[106513-106582]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[106532-106582]:Block[106532-106582]"
  }, {
    "left" : "space = new AxisSpace();",
    "right" : "space = new AxisSpace();",
    "info" : "ExpressionStatement[106547-106571]:ExpressionStatement[106547-106571]"
  }, {
    "left" : "if (this.fixedRangeAxisSpace != null)",
    "right" : "if (this.fixedRangeAxisSpace != null)",
    "info" : "IfStatement[106647-107760]:IfStatement[106647-107760]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[106685-107344]:Block[106685-107344]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[106700-107333]:IfStatement[106700-107333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[106752-107008]:Block[106752-107008]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(),\r\n                        RectangleEdge.TOP);",
    "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(),\r\n                        RectangleEdge.TOP);",
    "info" : "ExpressionStatement[106771-106870]:ExpressionStatement[106771-106870]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(),\r\n                        RectangleEdge.BOTTOM);",
    "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(),\r\n                        RectangleEdge.BOTTOM);",
    "info" : "ExpressionStatement[106888-106993]:ExpressionStatement[106888-106993]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.VERTICAL)",
    "right" : "if (this.orientation == PlotOrientation.VERTICAL)",
    "info" : "IfStatement[107027-107333]:IfStatement[107027-107333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[107077-107333]:Block[107077-107333]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(),\r\n                        RectangleEdge.LEFT);",
    "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(),\r\n                        RectangleEdge.LEFT);",
    "info" : "ExpressionStatement[107096-107197]:ExpressionStatement[107096-107197]"
  }, {
    "left" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(),\r\n                        RectangleEdge.RIGHT);",
    "right" : "space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(),\r\n                        RectangleEdge.RIGHT);",
    "info" : "ExpressionStatement[107215-107318]:ExpressionStatement[107215-107318]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[107359-107760]:Block[107359-107760]"
  }, {
    "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "info" : "ForStatement[107426-107749]:ForStatement[107426-107749]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[107474-107749]:Block[107474-107749]"
  }, {
    "left" : "Axis axis = (Axis) this.rangeAxes.get(i);",
    "right" : "Axis axis = (Axis) this.rangeAxes.get(i);",
    "info" : "VariableDeclarationStatement[107493-107534]:VariableDeclarationStatement[107493-107534]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[107552-107734]:IfStatement[107552-107734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[107570-107734]:Block[107570-107734]"
  }, {
    "left" : "RectangleEdge edge = getRangeAxisEdge(i);",
    "right" : "RectangleEdge edge = getRangeAxisEdge(i);",
    "info" : "VariableDeclarationStatement[107593-107634]:VariableDeclarationStatement[107593-107634]"
  }, {
    "left" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
    "right" : "space = axis.reserveSpace(g2, this, plotArea, edge, space);",
    "info" : "ExpressionStatement[107656-107715]:ExpressionStatement[107656-107715]"
  }, {
    "left" : "return space;",
    "right" : "return space;",
    "info" : "ReturnStatement[107770-107783]:ReturnStatement[107770-107783]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[108343-108349]:Modifier[108343-108349]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[108350-108354]:PrimitiveType[108350-108354]"
  }, {
    "left" : "draw",
    "right" : "draw",
    "info" : "SimpleName[108355-108359]:SimpleName[108355-108359]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[108360-108373]:SingleVariableDeclaration[108360-108373]"
  }, {
    "left" : "Rectangle2D area",
    "right" : "Rectangle2D area",
    "info" : "SingleVariableDeclaration[108375-108391]:SingleVariableDeclaration[108375-108391]"
  }, {
    "left" : "Point2D anchor",
    "right" : "Point2D anchor",
    "info" : "SingleVariableDeclaration[108393-108407]:SingleVariableDeclaration[108393-108407]"
  }, {
    "left" : "PlotState parentState",
    "right" : "PlotState parentState",
    "info" : "SingleVariableDeclaration[108422-108443]:SingleVariableDeclaration[108422-108443]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[108445-108467]:SingleVariableDeclaration[108445-108467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108469-118852]:Block[108469-118852]"
  }, {
    "left" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
    "right" : "boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);",
    "info" : "VariableDeclarationStatement[108540-108596]:VariableDeclarationStatement[108540-108596]"
  }, {
    "left" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
    "right" : "boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);",
    "info" : "VariableDeclarationStatement[108606-108664]:VariableDeclarationStatement[108606-108664]"
  }, {
    "left" : "if (b1 || b2)",
    "right" : "if (b1 || b2)",
    "info" : "IfStatement[108674-108721]:IfStatement[108674-108721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108688-108721]:Block[108688-108721]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[108703-108710]:ReturnStatement[108703-108710]"
  }, {
    "left" : "if (info != null)",
    "right" : "if (info != null)",
    "info" : "IfStatement[108769-108836]:IfStatement[108769-108836]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[108787-108836]:Block[108787-108836]"
  }, {
    "left" : "info.setPlotArea(area);",
    "right" : "info.setPlotArea(area);",
    "info" : "ExpressionStatement[108802-108825]:ExpressionStatement[108802-108825]"
  }, {
    "left" : "RectangleInsets insets = getInsets();",
    "right" : "RectangleInsets insets = getInsets();",
    "info" : "VariableDeclarationStatement[108916-108953]:VariableDeclarationStatement[108916-108953]"
  }, {
    "left" : "insets.trim(area);",
    "right" : "insets.trim(area);",
    "info" : "ExpressionStatement[108963-108981]:ExpressionStatement[108963-108981]"
  }, {
    "left" : "AxisSpace space = calculateAxisSpace(g2, area);",
    "right" : "AxisSpace space = calculateAxisSpace(g2, area);",
    "info" : "VariableDeclarationStatement[108993-109040]:VariableDeclarationStatement[108993-109040]"
  }, {
    "left" : "Rectangle2D dataArea = space.shrink(area, null);",
    "right" : "Rectangle2D dataArea = space.shrink(area, null);",
    "info" : "VariableDeclarationStatement[109050-109098]:VariableDeclarationStatement[109050-109098]"
  }, {
    "left" : "this.axisOffset.trim(dataArea);",
    "right" : "this.axisOffset.trim(dataArea);",
    "info" : "ExpressionStatement[109108-109139]:ExpressionStatement[109108-109139]"
  }, {
    "left" : "createAndAddEntity((Rectangle2D) dataArea.clone(), info, null, null);",
    "right" : "createAndAddEntity((Rectangle2D) dataArea.clone(), info, null, null);",
    "info" : "ExpressionStatement[109149-109218]:ExpressionStatement[109149-109218]"
  }, {
    "left" : "if (info != null)",
    "right" : "if (info != null)",
    "info" : "IfStatement[109228-109299]:IfStatement[109228-109299]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109246-109299]:Block[109246-109299]"
  }, {
    "left" : "info.setDataArea(dataArea);",
    "right" : "info.setDataArea(dataArea);",
    "info" : "ExpressionStatement[109261-109288]:ExpressionStatement[109261-109288]"
  }, {
    "left" : "drawBackground(g2, dataArea);",
    "right" : "drawBackground(g2, dataArea);",
    "info" : "ExpressionStatement[109360-109389]:ExpressionStatement[109360-109389]"
  }, {
    "left" : "Map axisStateMap = drawAxes(g2, area, dataArea, info);",
    "right" : "Map axisStateMap = drawAxes(g2, area, dataArea, info);",
    "info" : "VariableDeclarationStatement[109399-109453]:VariableDeclarationStatement[109399-109453]"
  }, {
    "left" : "PlotOrientation orient = getOrientation();",
    "right" : "PlotOrientation orient = getOrientation();",
    "info" : "VariableDeclarationStatement[109465-109507]:VariableDeclarationStatement[109465-109507]"
  }, {
    "left" : "if (anchor != null && !dataArea.contains(anchor))",
    "right" : "if (anchor != null && !dataArea.contains(anchor))",
    "info" : "IfStatement[109662-109752]:IfStatement[109662-109752]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109712-109752]:Block[109712-109752]"
  }, {
    "left" : "anchor = null;",
    "right" : "anchor = null;",
    "info" : "ExpressionStatement[109727-109741]:ExpressionStatement[109727-109741]"
  }, {
    "left" : "CrosshairState crosshairState = new CrosshairState();",
    "right" : "CrosshairState crosshairState = new CrosshairState();",
    "info" : "VariableDeclarationStatement[109762-109815]:VariableDeclarationStatement[109762-109815]"
  }, {
    "left" : "crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);",
    "right" : "crosshairState.setCrosshairDistance(Double.POSITIVE_INFINITY);",
    "info" : "ExpressionStatement[109825-109887]:ExpressionStatement[109825-109887]"
  }, {
    "left" : "crosshairState.setAnchor(anchor);",
    "right" : "crosshairState.setAnchor(anchor);",
    "info" : "ExpressionStatement[109897-109930]:ExpressionStatement[109897-109930]"
  }, {
    "left" : "crosshairState.setAnchorX(Double.NaN);",
    "right" : "crosshairState.setAnchorX(Double.NaN);",
    "info" : "ExpressionStatement[109942-109980]:ExpressionStatement[109942-109980]"
  }, {
    "left" : "crosshairState.setAnchorY(Double.NaN);",
    "right" : "crosshairState.setAnchorY(Double.NaN);",
    "info" : "ExpressionStatement[109990-110028]:ExpressionStatement[109990-110028]"
  }, {
    "left" : "if (anchor != null)",
    "right" : "if (anchor != null)",
    "info" : "IfStatement[110038-111171]:IfStatement[110038-111171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110058-111171]:Block[110058-111171]"
  }, {
    "left" : "ValueAxis domainAxis = getDomainAxis();",
    "right" : "ValueAxis domainAxis = getDomainAxis();",
    "info" : "VariableDeclarationStatement[110073-110112]:VariableDeclarationStatement[110073-110112]"
  }, {
    "left" : "if (domainAxis != null)",
    "right" : "if (domainAxis != null)",
    "info" : "IfStatement[110126-110613]:IfStatement[110126-110613]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110150-110613]:Block[110150-110613]"
  }, {
    "left" : "double x;",
    "right" : "double x;",
    "info" : "VariableDeclarationStatement[110169-110178]:VariableDeclarationStatement[110169-110178]"
  }, {
    "left" : "if (orient == PlotOrientation.VERTICAL)",
    "right" : "if (orient == PlotOrientation.VERTICAL)",
    "info" : "IfStatement[110196-110551]:IfStatement[110196-110551]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110236-110382]:Block[110236-110382]"
  }, {
    "left" : "x = domainAxis.java2DToValue(anchor.getX(), dataArea,\r\n                            getDomainAxisEdge());",
    "right" : "x = domainAxis.java2DToValue(anchor.getX(), dataArea,\r\n                            getDomainAxisEdge());",
    "info" : "ExpressionStatement[110259-110363]:ExpressionStatement[110259-110363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110405-110551]:Block[110405-110551]"
  }, {
    "left" : "x = domainAxis.java2DToValue(anchor.getY(), dataArea,\r\n                            getDomainAxisEdge());",
    "right" : "x = domainAxis.java2DToValue(anchor.getY(), dataArea,\r\n                            getDomainAxisEdge());",
    "info" : "ExpressionStatement[110428-110532]:ExpressionStatement[110428-110532]"
  }, {
    "left" : "crosshairState.setAnchorX(x);",
    "right" : "crosshairState.setAnchorX(x);",
    "info" : "ExpressionStatement[110569-110598]:ExpressionStatement[110569-110598]"
  }, {
    "left" : "ValueAxis rangeAxis = getRangeAxis();",
    "right" : "ValueAxis rangeAxis = getRangeAxis();",
    "info" : "VariableDeclarationStatement[110627-110664]:VariableDeclarationStatement[110627-110664]"
  }, {
    "left" : "if (rangeAxis != null)",
    "right" : "if (rangeAxis != null)",
    "info" : "IfStatement[110678-111160]:IfStatement[110678-111160]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110701-111160]:Block[110701-111160]"
  }, {
    "left" : "double y;",
    "right" : "double y;",
    "info" : "VariableDeclarationStatement[110720-110729]:VariableDeclarationStatement[110720-110729]"
  }, {
    "left" : "if (orient == PlotOrientation.VERTICAL)",
    "right" : "if (orient == PlotOrientation.VERTICAL)",
    "info" : "IfStatement[110747-111098]:IfStatement[110747-111098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110787-110931]:Block[110787-110931]"
  }, {
    "left" : "y = rangeAxis.java2DToValue(anchor.getY(), dataArea,\r\n                            getRangeAxisEdge());",
    "right" : "y = rangeAxis.java2DToValue(anchor.getY(), dataArea,\r\n                            getRangeAxisEdge());",
    "info" : "ExpressionStatement[110810-110912]:ExpressionStatement[110810-110912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110954-111098]:Block[110954-111098]"
  }, {
    "left" : "y = rangeAxis.java2DToValue(anchor.getX(), dataArea,\r\n                            getRangeAxisEdge());",
    "right" : "y = rangeAxis.java2DToValue(anchor.getX(), dataArea,\r\n                            getRangeAxisEdge());",
    "info" : "ExpressionStatement[110977-111079]:ExpressionStatement[110977-111079]"
  }, {
    "left" : "crosshairState.setAnchorY(y);",
    "right" : "crosshairState.setAnchorY(y);",
    "info" : "ExpressionStatement[111116-111145]:ExpressionStatement[111116-111145]"
  }, {
    "left" : "crosshairState.setCrosshairX(getDomainCrosshairValue());",
    "right" : "crosshairState.setCrosshairX(getDomainCrosshairValue());",
    "info" : "ExpressionStatement[111181-111237]:ExpressionStatement[111181-111237]"
  }, {
    "left" : "crosshairState.setCrosshairY(getRangeCrosshairValue());",
    "right" : "crosshairState.setCrosshairY(getRangeCrosshairValue());",
    "info" : "ExpressionStatement[111247-111302]:ExpressionStatement[111247-111302]"
  }, {
    "left" : "Shape originalClip = g2.getClip();",
    "right" : "Shape originalClip = g2.getClip();",
    "info" : "VariableDeclarationStatement[111312-111346]:VariableDeclarationStatement[111312-111346]"
  }, {
    "left" : "Composite originalComposite = g2.getComposite();",
    "right" : "Composite originalComposite = g2.getComposite();",
    "info" : "VariableDeclarationStatement[111356-111404]:VariableDeclarationStatement[111356-111404]"
  }, {
    "left" : "g2.clip(dataArea);",
    "right" : "g2.clip(dataArea);",
    "info" : "ExpressionStatement[111416-111434]:ExpressionStatement[111416-111434]"
  }, {
    "left" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\r\n                getForegroundAlpha()));",
    "right" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\r\n                getForegroundAlpha()));",
    "info" : "ExpressionStatement[111444-111552]:ExpressionStatement[111444-111552]"
  }, {
    "left" : "AxisState domainAxisState = (AxisState) axisStateMap.get(\r\n                getDomainAxis());",
    "right" : "AxisState domainAxisState = (AxisState) axisStateMap.get(\r\n                getDomainAxis());",
    "info" : "VariableDeclarationStatement[111564-111656]:VariableDeclarationStatement[111564-111656]"
  }, {
    "left" : "if (domainAxisState == null)",
    "right" : "if (domainAxisState == null)",
    "info" : "IfStatement[111666-111891]:IfStatement[111666-111891]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[111695-111891]:Block[111695-111891]"
  }, {
    "left" : "if (parentState != null)",
    "right" : "if (parentState != null)",
    "info" : "IfStatement[111710-111880]:IfStatement[111710-111880]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[111735-111880]:Block[111735-111880]"
  }, {
    "left" : "domainAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getDomainAxis());",
    "right" : "domainAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getDomainAxis());",
    "info" : "ExpressionStatement[111754-111865]:ExpressionStatement[111754-111865]"
  }, {
    "left" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
    "right" : "AxisState rangeAxisState = (AxisState) axisStateMap.get(getRangeAxis());",
    "info" : "VariableDeclarationStatement[111903-111975]:VariableDeclarationStatement[111903-111975]"
  }, {
    "left" : "if (rangeAxisState == null)",
    "right" : "if (rangeAxisState == null)",
    "info" : "IfStatement[111985-112207]:IfStatement[111985-112207]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112013-112207]:Block[112013-112207]"
  }, {
    "left" : "if (parentState != null)",
    "right" : "if (parentState != null)",
    "info" : "IfStatement[112028-112196]:IfStatement[112028-112196]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112053-112196]:Block[112053-112196]"
  }, {
    "left" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
    "right" : "rangeAxisState = (AxisState) parentState.getSharedAxisStates()\r\n                        .get(getRangeAxis());",
    "info" : "ExpressionStatement[112072-112181]:ExpressionStatement[112072-112181]"
  }, {
    "left" : "if (domainAxisState != null)",
    "right" : "if (domainAxisState != null)",
    "info" : "IfStatement[112217-112334]:IfStatement[112217-112334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112246-112334]:Block[112246-112334]"
  }, {
    "left" : "drawDomainTickBands(g2, dataArea, domainAxisState.getTicks());",
    "right" : "drawDomainTickBands(g2, dataArea, domainAxisState.getTicks());",
    "info" : "ExpressionStatement[112261-112323]:ExpressionStatement[112261-112323]"
  }, {
    "left" : "if (rangeAxisState != null)",
    "right" : "if (rangeAxisState != null)",
    "info" : "IfStatement[112344-112458]:IfStatement[112344-112458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112372-112458]:Block[112372-112458]"
  }, {
    "left" : "drawRangeTickBands(g2, dataArea, rangeAxisState.getTicks());",
    "right" : "drawRangeTickBands(g2, dataArea, rangeAxisState.getTicks());",
    "info" : "ExpressionStatement[112387-112447]:ExpressionStatement[112387-112447]"
  }, {
    "left" : "if (domainAxisState != null)",
    "right" : "if (domainAxisState != null)",
    "info" : "IfStatement[112468-112636]:IfStatement[112468-112636]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112497-112636]:Block[112497-112636]"
  }, {
    "left" : "drawDomainGridlines(g2, dataArea, domainAxisState.getTicks());",
    "right" : "drawDomainGridlines(g2, dataArea, domainAxisState.getTicks());",
    "info" : "ExpressionStatement[112512-112574]:ExpressionStatement[112512-112574]"
  }, {
    "left" : "drawZeroDomainBaseline(g2, dataArea);",
    "right" : "drawZeroDomainBaseline(g2, dataArea);",
    "info" : "ExpressionStatement[112588-112625]:ExpressionStatement[112588-112625]"
  }, {
    "left" : "if (rangeAxisState != null)",
    "right" : "if (rangeAxisState != null)",
    "info" : "IfStatement[112646-112810]:IfStatement[112646-112810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112674-112810]:Block[112674-112810]"
  }, {
    "left" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
    "right" : "drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());",
    "info" : "ExpressionStatement[112689-112749]:ExpressionStatement[112689-112749]"
  }, {
    "left" : "drawZeroRangeBaseline(g2, dataArea);",
    "right" : "drawZeroRangeBaseline(g2, dataArea);",
    "info" : "ExpressionStatement[112763-112799]:ExpressionStatement[112763-112799]"
  }, {
    "left" : "for (int i = 0; i < this.renderers.size(); i++)",
    "right" : "for (int i = 0; i < this.renderers.size(); i++)",
    "info" : "ForStatement[112899-113026]:ForStatement[112899-113026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112947-113026]:Block[112947-113026]"
  }, {
    "left" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
    "right" : "drawDomainMarkers(g2, dataArea, i, Layer.BACKGROUND);",
    "info" : "ExpressionStatement[112962-113015]:ExpressionStatement[112962-113015]"
  }, {
    "left" : "for (int i = 0; i < this.renderers.size(); i++)",
    "right" : "for (int i = 0; i < this.renderers.size(); i++)",
    "info" : "ForStatement[113036-113162]:ForStatement[113036-113162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113084-113162]:Block[113084-113162]"
  }, {
    "left" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
    "right" : "drawRangeMarkers(g2, dataArea, i, Layer.BACKGROUND);",
    "info" : "ExpressionStatement[113099-113151]:ExpressionStatement[113099-113151]"
  }, {
    "left" : "boolean foundData = false;",
    "right" : "boolean foundData = false;",
    "info" : "VariableDeclarationStatement[113232-113258]:VariableDeclarationStatement[113232-113258]"
  }, {
    "left" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
    "right" : "DatasetRenderingOrder order = getDatasetRenderingOrder();",
    "info" : "VariableDeclarationStatement[113268-113325]:VariableDeclarationStatement[113268-113325]"
  }, {
    "left" : "if (order == DatasetRenderingOrder.FORWARD)",
    "right" : "if (order == DatasetRenderingOrder.FORWARD)",
    "info" : "IfStatement[113335-116306]:IfStatement[113335-116306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113379-114658]:Block[113379-114658]"
  }, {
    "left" : "int rendererCount = this.renderers.size();",
    "right" : "int rendererCount = this.renderers.size();",
    "info" : "VariableDeclarationStatement[113440-113482]:VariableDeclarationStatement[113440-113482]"
  }, {
    "left" : "for (int i = 0; i < rendererCount; i++)",
    "right" : "for (int i = 0; i < rendererCount; i++)",
    "info" : "ForStatement[113496-113929]:ForStatement[113496-113929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113536-113929]:Block[113536-113929]"
  }, {
    "left" : "XYItemRenderer r = getRenderer(i);",
    "right" : "XYItemRenderer r = getRenderer(i);",
    "info" : "VariableDeclarationStatement[113555-113589]:VariableDeclarationStatement[113555-113589]"
  }, {
    "left" : "if (r != null)",
    "right" : "if (r != null)",
    "info" : "IfStatement[113607-113914]:IfStatement[113607-113914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113622-113914]:Block[113622-113914]"
  }, {
    "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[113645-113695]:VariableDeclarationStatement[113645-113695]"
  }, {
    "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[113717-113765]:VariableDeclarationStatement[113717-113765]"
  }, {
    "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
    "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
    "info" : "ExpressionStatement[113787-113895]:ExpressionStatement[113787-113895]"
  }, {
    "left" : "for (int i = 0; i < getDatasetCount(); i++)",
    "right" : "for (int i = 0; i < getDatasetCount(); i++)",
    "info" : "ForStatement[113982-114152]:ForStatement[113982-114152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114026-114152]:Block[114026-114152]"
  }, {
    "left" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
    "right" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
    "info" : "ExpressionStatement[114045-114137]:ExpressionStatement[114045-114137]"
  }, {
    "left" : "for (int i = 0; i < rendererCount; i++)",
    "right" : "for (int i = 0; i < rendererCount; i++)",
    "info" : "ForStatement[114212-114645]:ForStatement[114212-114645]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114252-114645]:Block[114252-114645]"
  }, {
    "left" : "XYItemRenderer r = getRenderer(i);",
    "right" : "XYItemRenderer r = getRenderer(i);",
    "info" : "VariableDeclarationStatement[114271-114305]:VariableDeclarationStatement[114271-114305]"
  }, {
    "left" : "if (r != null)",
    "right" : "if (r != null)",
    "info" : "IfStatement[114323-114630]:IfStatement[114323-114630]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114338-114630]:Block[114338-114630]"
  }, {
    "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[114361-114411]:VariableDeclarationStatement[114361-114411]"
  }, {
    "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[114433-114481]:VariableDeclarationStatement[114433-114481]"
  }, {
    "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
    "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
    "info" : "ExpressionStatement[114503-114611]:ExpressionStatement[114503-114611]"
  }, {
    "left" : "if (order == DatasetRenderingOrder.REVERSE)",
    "right" : "if (order == DatasetRenderingOrder.REVERSE)",
    "info" : "IfStatement[114673-116306]:IfStatement[114673-116306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114717-116306]:Block[114717-116306]"
  }, {
    "left" : "int rendererCount = this.renderers.size();",
    "right" : "int rendererCount = this.renderers.size();",
    "info" : "VariableDeclarationStatement[114778-114820]:VariableDeclarationStatement[114778-114820]"
  }, {
    "left" : "for (int i = rendererCount - 1; i >= 0; i--)",
    "right" : "for (int i = rendererCount - 1; i >= 0; i--)",
    "info" : "ForStatement[114834-115438]:ForStatement[114834-115438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114879-115438]:Block[114879-115438]"
  }, {
    "left" : "XYItemRenderer r = getRenderer(i);",
    "right" : "XYItemRenderer r = getRenderer(i);",
    "info" : "VariableDeclarationStatement[114898-114932]:VariableDeclarationStatement[114898-114932]"
  }, {
    "left" : "if (i >= getDatasetCount())",
    "right" : "if (i >= getDatasetCount())",
    "info" : "IfStatement[114950-115098]:IfStatement[114950-115098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114978-115098]:Block[114978-115098]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[115032-115041]:ContinueStatement[115032-115041]"
  }, {
    "left" : "if (r != null)",
    "right" : "if (r != null)",
    "info" : "IfStatement[115116-115423]:IfStatement[115116-115423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115131-115423]:Block[115131-115423]"
  }, {
    "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[115154-115204]:VariableDeclarationStatement[115154-115204]"
  }, {
    "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[115226-115274]:VariableDeclarationStatement[115226-115274]"
  }, {
    "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
    "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.BACKGROUND, info);",
    "info" : "ExpressionStatement[115296-115404]:ExpressionStatement[115296-115404]"
  }, {
    "left" : "for (int i = getDatasetCount() - 1; i >= 0; i--)",
    "right" : "for (int i = getDatasetCount() - 1; i >= 0; i--)",
    "info" : "ForStatement[115454-115629]:ForStatement[115454-115629]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115503-115629]:Block[115503-115629]"
  }, {
    "left" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
    "right" : "foundData = render(g2, dataArea, i, info, crosshairState)\r\n                    || foundData;",
    "info" : "ExpressionStatement[115522-115614]:ExpressionStatement[115522-115614]"
  }, {
    "left" : "for (int i = rendererCount - 1; i >= 0; i--)",
    "right" : "for (int i = rendererCount - 1; i >= 0; i--)",
    "info" : "ForStatement[115689-116293]:ForStatement[115689-116293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115734-116293]:Block[115734-116293]"
  }, {
    "left" : "XYItemRenderer r = getRenderer(i);",
    "right" : "XYItemRenderer r = getRenderer(i);",
    "info" : "VariableDeclarationStatement[115753-115787]:VariableDeclarationStatement[115753-115787]"
  }, {
    "left" : "if (i >= getDatasetCount())",
    "right" : "if (i >= getDatasetCount())",
    "info" : "IfStatement[115805-115953]:IfStatement[115805-115953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115833-115953]:Block[115833-115953]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[115887-115896]:ContinueStatement[115887-115896]"
  }, {
    "left" : "if (r != null)",
    "right" : "if (r != null)",
    "info" : "IfStatement[115971-116278]:IfStatement[115971-116278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115986-116278]:Block[115986-116278]"
  }, {
    "left" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "right" : "ValueAxis domainAxis = getDomainAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[116009-116059]:VariableDeclarationStatement[116009-116059]"
  }, {
    "left" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "right" : "ValueAxis rangeAxis = getRangeAxisForDataset(i);",
    "info" : "VariableDeclarationStatement[116081-116129]:VariableDeclarationStatement[116081-116129]"
  }, {
    "left" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
    "right" : "r.drawAnnotations(g2, dataArea, domainAxis, rangeAxis,\r\n                            Layer.FOREGROUND, info);",
    "info" : "ExpressionStatement[116151-116259]:ExpressionStatement[116151-116259]"
  }, {
    "left" : "int xAxisIndex = crosshairState.getDomainAxisIndex();",
    "right" : "int xAxisIndex = crosshairState.getDomainAxisIndex();",
    "info" : "VariableDeclarationStatement[116367-116420]:VariableDeclarationStatement[116367-116420]"
  }, {
    "left" : "ValueAxis xAxis = getDomainAxis(xAxisIndex);",
    "right" : "ValueAxis xAxis = getDomainAxis(xAxisIndex);",
    "info" : "VariableDeclarationStatement[116430-116474]:VariableDeclarationStatement[116430-116474]"
  }, {
    "left" : "RectangleEdge xAxisEdge = getDomainAxisEdge(xAxisIndex);",
    "right" : "RectangleEdge xAxisEdge = getDomainAxisEdge(xAxisIndex);",
    "info" : "VariableDeclarationStatement[116484-116540]:VariableDeclarationStatement[116484-116540]"
  }, {
    "left" : "if (!this.domainCrosshairLockedOnData && anchor != null)",
    "right" : "if (!this.domainCrosshairLockedOnData && anchor != null)",
    "info" : "IfStatement[116550-116953]:IfStatement[116550-116953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[116607-116953]:Block[116607-116953]"
  }, {
    "left" : "double xx;",
    "right" : "double xx;",
    "info" : "VariableDeclarationStatement[116622-116632]:VariableDeclarationStatement[116622-116632]"
  }, {
    "left" : "if (orient == PlotOrientation.VERTICAL)",
    "right" : "if (orient == PlotOrientation.VERTICAL)",
    "info" : "IfStatement[116646-116895]:IfStatement[116646-116895]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[116686-116781]:Block[116686-116781]"
  }, {
    "left" : "xx = xAxis.java2DToValue(anchor.getX(), dataArea, xAxisEdge);",
    "right" : "xx = xAxis.java2DToValue(anchor.getX(), dataArea, xAxisEdge);",
    "info" : "ExpressionStatement[116705-116766]:ExpressionStatement[116705-116766]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[116800-116895]:Block[116800-116895]"
  }, {
    "left" : "xx = xAxis.java2DToValue(anchor.getY(), dataArea, xAxisEdge);",
    "right" : "xx = xAxis.java2DToValue(anchor.getY(), dataArea, xAxisEdge);",
    "info" : "ExpressionStatement[116819-116880]:ExpressionStatement[116819-116880]"
  }, {
    "left" : "crosshairState.setCrosshairX(xx);",
    "right" : "crosshairState.setCrosshairX(xx);",
    "info" : "ExpressionStatement[116909-116942]:ExpressionStatement[116909-116942]"
  }, {
    "left" : "setDomainCrosshairValue(crosshairState.getCrosshairX(), false);",
    "right" : "setDomainCrosshairValue(crosshairState.getCrosshairX(), false);",
    "info" : "ExpressionStatement[116963-117026]:ExpressionStatement[116963-117026]"
  }, {
    "left" : "if (isDomainCrosshairVisible())",
    "right" : "if (isDomainCrosshairVisible())",
    "info" : "IfStatement[117036-117323]:IfStatement[117036-117323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[117068-117323]:Block[117068-117323]"
  }, {
    "left" : "double x = getDomainCrosshairValue();",
    "right" : "double x = getDomainCrosshairValue();",
    "info" : "VariableDeclarationStatement[117083-117120]:VariableDeclarationStatement[117083-117120]"
  }, {
    "left" : "Paint paint = getDomainCrosshairPaint();",
    "right" : "Paint paint = getDomainCrosshairPaint();",
    "info" : "VariableDeclarationStatement[117134-117174]:VariableDeclarationStatement[117134-117174]"
  }, {
    "left" : "Stroke stroke = getDomainCrosshairStroke();",
    "right" : "Stroke stroke = getDomainCrosshairStroke();",
    "info" : "VariableDeclarationStatement[117188-117231]:VariableDeclarationStatement[117188-117231]"
  }, {
    "left" : "drawDomainCrosshair(g2, dataArea, orient, x, xAxis, stroke, paint);",
    "right" : "drawDomainCrosshair(g2, dataArea, orient, x, xAxis, stroke, paint);",
    "info" : "ExpressionStatement[117245-117312]:ExpressionStatement[117245-117312]"
  }, {
    "left" : "int yAxisIndex = crosshairState.getRangeAxisIndex();",
    "right" : "int yAxisIndex = crosshairState.getRangeAxisIndex();",
    "info" : "VariableDeclarationStatement[117383-117435]:VariableDeclarationStatement[117383-117435]"
  }, {
    "left" : "ValueAxis yAxis = getRangeAxis(yAxisIndex);",
    "right" : "ValueAxis yAxis = getRangeAxis(yAxisIndex);",
    "info" : "VariableDeclarationStatement[117445-117488]:VariableDeclarationStatement[117445-117488]"
  }, {
    "left" : "RectangleEdge yAxisEdge = getRangeAxisEdge(yAxisIndex);",
    "right" : "RectangleEdge yAxisEdge = getRangeAxisEdge(yAxisIndex);",
    "info" : "VariableDeclarationStatement[117498-117553]:VariableDeclarationStatement[117498-117553]"
  }, {
    "left" : "if (!this.rangeCrosshairLockedOnData && anchor != null)",
    "right" : "if (!this.rangeCrosshairLockedOnData && anchor != null)",
    "info" : "IfStatement[117563-117952]:IfStatement[117563-117952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[117619-117952]:Block[117619-117952]"
  }, {
    "left" : "double yy;",
    "right" : "double yy;",
    "info" : "VariableDeclarationStatement[117634-117644]:VariableDeclarationStatement[117634-117644]"
  }, {
    "left" : "if (orient == PlotOrientation.VERTICAL)",
    "right" : "if (orient == PlotOrientation.VERTICAL)",
    "info" : "IfStatement[117658-117894]:IfStatement[117658-117894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[117698-117793]:Block[117698-117793]"
  }, {
    "left" : "yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",
    "right" : "yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);",
    "info" : "ExpressionStatement[117717-117778]:ExpressionStatement[117717-117778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[117799-117894]:Block[117799-117894]"
  }, {
    "left" : "yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",
    "right" : "yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);",
    "info" : "ExpressionStatement[117818-117879]:ExpressionStatement[117818-117879]"
  }, {
    "left" : "crosshairState.setCrosshairY(yy);",
    "right" : "crosshairState.setCrosshairY(yy);",
    "info" : "ExpressionStatement[117908-117941]:ExpressionStatement[117908-117941]"
  }, {
    "left" : "setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",
    "right" : "setRangeCrosshairValue(crosshairState.getCrosshairY(), false);",
    "info" : "ExpressionStatement[117962-118024]:ExpressionStatement[117962-118024]"
  }, {
    "left" : "if (isRangeCrosshairVisible())",
    "right" : "if (isRangeCrosshairVisible())",
    "info" : "IfStatement[118034-118316]:IfStatement[118034-118316]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118065-118316]:Block[118065-118316]"
  }, {
    "left" : "double y = getRangeCrosshairValue();",
    "right" : "double y = getRangeCrosshairValue();",
    "info" : "VariableDeclarationStatement[118080-118116]:VariableDeclarationStatement[118080-118116]"
  }, {
    "left" : "Paint paint = getRangeCrosshairPaint();",
    "right" : "Paint paint = getRangeCrosshairPaint();",
    "info" : "VariableDeclarationStatement[118130-118169]:VariableDeclarationStatement[118130-118169]"
  }, {
    "left" : "Stroke stroke = getRangeCrosshairStroke();",
    "right" : "Stroke stroke = getRangeCrosshairStroke();",
    "info" : "VariableDeclarationStatement[118183-118225]:VariableDeclarationStatement[118183-118225]"
  }, {
    "left" : "drawRangeCrosshair(g2, dataArea, orient, y, yAxis, stroke, paint);",
    "right" : "drawRangeCrosshair(g2, dataArea, orient, y, yAxis, stroke, paint);",
    "info" : "ExpressionStatement[118239-118305]:ExpressionStatement[118239-118305]"
  }, {
    "left" : "if (!foundData)",
    "right" : "if (!foundData)",
    "info" : "IfStatement[118328-118402]:IfStatement[118328-118402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118344-118402]:Block[118344-118402]"
  }, {
    "left" : "drawNoDataMessage(g2, dataArea);",
    "right" : "drawNoDataMessage(g2, dataArea);",
    "info" : "ExpressionStatement[118359-118391]:ExpressionStatement[118359-118391]"
  }, {
    "left" : "for (int i = 0; i < this.renderers.size(); i++)",
    "right" : "for (int i = 0; i < this.renderers.size(); i++)",
    "info" : "ForStatement[118414-118541]:ForStatement[118414-118541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118462-118541]:Block[118462-118541]"
  }, {
    "left" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
    "right" : "drawDomainMarkers(g2, dataArea, i, Layer.FOREGROUND);",
    "info" : "ExpressionStatement[118477-118530]:ExpressionStatement[118477-118530]"
  }, {
    "left" : "for (int i = 0; i < this.renderers.size(); i++)",
    "right" : "for (int i = 0; i < this.renderers.size(); i++)",
    "info" : "ForStatement[118551-118677]:ForStatement[118551-118677]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118599-118677]:Block[118599-118677]"
  }, {
    "left" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
    "right" : "drawRangeMarkers(g2, dataArea, i, Layer.FOREGROUND);",
    "info" : "ExpressionStatement[118614-118666]:ExpressionStatement[118614-118666]"
  }, {
    "left" : "drawAnnotations(g2, dataArea, info);",
    "right" : "drawAnnotations(g2, dataArea, info);",
    "info" : "ExpressionStatement[118689-118725]:ExpressionStatement[118689-118725]"
  }, {
    "left" : "g2.setClip(originalClip);",
    "right" : "g2.setClip(originalClip);",
    "info" : "ExpressionStatement[118735-118760]:ExpressionStatement[118735-118760]"
  }, {
    "left" : "g2.setComposite(originalComposite);",
    "right" : "g2.setComposite(originalComposite);",
    "info" : "ExpressionStatement[118770-118805]:ExpressionStatement[118770-118805]"
  }, {
    "left" : "drawOutline(g2, dataArea);",
    "right" : "drawOutline(g2, dataArea);",
    "info" : "ExpressionStatement[118817-118843]:ExpressionStatement[118817-118843]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[119000-119006]:Modifier[119000-119006]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[119007-119011]:PrimitiveType[119007-119011]"
  }, {
    "left" : "drawBackground",
    "right" : "drawBackground",
    "info" : "SimpleName[119012-119026]:SimpleName[119012-119026]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[119027-119040]:SingleVariableDeclaration[119027-119040]"
  }, {
    "left" : "Rectangle2D area",
    "right" : "Rectangle2D area",
    "info" : "SingleVariableDeclaration[119042-119058]:SingleVariableDeclaration[119042-119058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119060-119195]:Block[119060-119195]"
  }, {
    "left" : "fillBackground(g2, area, this.orientation);",
    "right" : "fillBackground(g2, area, this.orientation);",
    "info" : "ExpressionStatement[119071-119114]:ExpressionStatement[119071-119114]"
  }, {
    "left" : "drawQuadrants(g2, area);",
    "right" : "drawQuadrants(g2, area);",
    "info" : "ExpressionStatement[119124-119148]:ExpressionStatement[119124-119148]"
  }, {
    "left" : "drawBackgroundImage(g2, area);",
    "right" : "drawBackgroundImage(g2, area);",
    "info" : "ExpressionStatement[119158-119188]:ExpressionStatement[119158-119188]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[119421-119430]:Modifier[119421-119430]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[119431-119435]:PrimitiveType[119431-119435]"
  }, {
    "left" : "drawQuadrants",
    "right" : "drawQuadrants",
    "info" : "SimpleName[119436-119449]:SimpleName[119436-119449]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[119450-119463]:SingleVariableDeclaration[119450-119463]"
  }, {
    "left" : "Rectangle2D area",
    "right" : "Rectangle2D area",
    "info" : "SingleVariableDeclaration[119465-119481]:SingleVariableDeclaration[119465-119481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119483-124129]:Block[119483-124129]"
  }, {
    "left" : "boolean somethingToDraw = false;",
    "right" : "boolean somethingToDraw = false;",
    "info" : "VariableDeclarationStatement[119551-119583]:VariableDeclarationStatement[119551-119583]"
  }, {
    "left" : "ValueAxis xAxis = getDomainAxis();",
    "right" : "ValueAxis xAxis = getDomainAxis();",
    "info" : "VariableDeclarationStatement[119595-119629]:VariableDeclarationStatement[119595-119629]"
  }, {
    "left" : "if (xAxis == null)",
    "right" : "if (xAxis == null)",
    "info" : "IfStatement[119639-119742]:IfStatement[119639-119742]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119658-119742]:Block[119658-119742]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[119724-119731]:ReturnStatement[119724-119731]"
  }, {
    "left" : "double x = xAxis.getRange().constrain(this.quadrantOrigin.getX());",
    "right" : "double x = xAxis.getRange().constrain(this.quadrantOrigin.getX());",
    "info" : "VariableDeclarationStatement[119752-119818]:VariableDeclarationStatement[119752-119818]"
  }, {
    "left" : "double xx = xAxis.valueToJava2D(x, area, getDomainAxisEdge());",
    "right" : "double xx = xAxis.valueToJava2D(x, area, getDomainAxisEdge());",
    "info" : "VariableDeclarationStatement[119828-119890]:VariableDeclarationStatement[119828-119890]"
  }, {
    "left" : "ValueAxis yAxis = getRangeAxis();",
    "right" : "ValueAxis yAxis = getRangeAxis();",
    "info" : "VariableDeclarationStatement[119902-119935]:VariableDeclarationStatement[119902-119935]"
  }, {
    "left" : "if (yAxis == null)",
    "right" : "if (yAxis == null)",
    "info" : "IfStatement[119945-120048]:IfStatement[119945-120048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119964-120048]:Block[119964-120048]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[120030-120037]:ReturnStatement[120030-120037]"
  }, {
    "left" : "double y = yAxis.getRange().constrain(this.quadrantOrigin.getY());",
    "right" : "double y = yAxis.getRange().constrain(this.quadrantOrigin.getY());",
    "info" : "VariableDeclarationStatement[120058-120124]:VariableDeclarationStatement[120058-120124]"
  }, {
    "left" : "double yy = yAxis.valueToJava2D(y, area, getRangeAxisEdge());",
    "right" : "double yy = yAxis.valueToJava2D(y, area, getRangeAxisEdge());",
    "info" : "VariableDeclarationStatement[120134-120195]:VariableDeclarationStatement[120134-120195]"
  }, {
    "left" : "double xmin = xAxis.getLowerBound();",
    "right" : "double xmin = xAxis.getLowerBound();",
    "info" : "VariableDeclarationStatement[120207-120243]:VariableDeclarationStatement[120207-120243]"
  }, {
    "left" : "double xxmin = xAxis.valueToJava2D(xmin, area, getDomainAxisEdge());",
    "right" : "double xxmin = xAxis.valueToJava2D(xmin, area, getDomainAxisEdge());",
    "info" : "VariableDeclarationStatement[120253-120321]:VariableDeclarationStatement[120253-120321]"
  }, {
    "left" : "double xmax = xAxis.getUpperBound();",
    "right" : "double xmax = xAxis.getUpperBound();",
    "info" : "VariableDeclarationStatement[120333-120369]:VariableDeclarationStatement[120333-120369]"
  }, {
    "left" : "double xxmax = xAxis.valueToJava2D(xmax, area, getDomainAxisEdge());",
    "right" : "double xxmax = xAxis.valueToJava2D(xmax, area, getDomainAxisEdge());",
    "info" : "VariableDeclarationStatement[120379-120447]:VariableDeclarationStatement[120379-120447]"
  }, {
    "left" : "double ymin = yAxis.getLowerBound();",
    "right" : "double ymin = yAxis.getLowerBound();",
    "info" : "VariableDeclarationStatement[120459-120495]:VariableDeclarationStatement[120459-120495]"
  }, {
    "left" : "double yymin = yAxis.valueToJava2D(ymin, area, getRangeAxisEdge());",
    "right" : "double yymin = yAxis.valueToJava2D(ymin, area, getRangeAxisEdge());",
    "info" : "VariableDeclarationStatement[120505-120572]:VariableDeclarationStatement[120505-120572]"
  }, {
    "left" : "double ymax = yAxis.getUpperBound();",
    "right" : "double ymax = yAxis.getUpperBound();",
    "info" : "VariableDeclarationStatement[120584-120620]:VariableDeclarationStatement[120584-120620]"
  }, {
    "left" : "double yymax = yAxis.valueToJava2D(ymax, area, getRangeAxisEdge());",
    "right" : "double yymax = yAxis.valueToJava2D(ymax, area, getRangeAxisEdge());",
    "info" : "VariableDeclarationStatement[120630-120697]:VariableDeclarationStatement[120630-120697]"
  }, {
    "left" : "Rectangle2D[] r = new Rectangle2D[] {null, null, null, null};",
    "right" : "Rectangle2D[] r = new Rectangle2D[] {null, null, null, null};",
    "info" : "VariableDeclarationStatement[120709-120770]:VariableDeclarationStatement[120709-120770]"
  }, {
    "left" : "if (this.quadrantPaint[0] != null)",
    "right" : "if (this.quadrantPaint[0] != null)",
    "info" : "IfStatement[120780-121478]:IfStatement[120780-121478]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[120815-121478]:Block[120815-121478]"
  }, {
    "left" : "if (x > xmin && y < ymax)",
    "right" : "if (x > xmin && y < ymax)",
    "info" : "IfStatement[120830-121467]:IfStatement[120830-121467]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[120856-121467]:Block[120856-121467]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[120875-121411]:IfStatement[120875-121411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[120927-121143]:Block[120927-121143]"
  }, {
    "left" : "r[0] = new Rectangle2D.Double(Math.min(yymax, yy),\r\n                            Math.min(xxmin, xx), Math.abs(yy - yymax),\r\n                            Math.abs(xx - xxmin));",
    "right" : "r[0] = new Rectangle2D.Double(Math.min(yymax, yy),\r\n                            Math.min(xxmin, xx), Math.abs(yy - yymax),\r\n                            Math.abs(xx - xxmin));",
    "info" : "ExpressionStatement[120950-121124]:ExpressionStatement[120950-121124]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[121166-121411]:Block[121166-121411]"
  }, {
    "left" : "r[0] = new Rectangle2D.Double(Math.min(xxmin, xx),\r\n                            Math.min(yymax, yy), Math.abs(xx - xxmin),\r\n                            Math.abs(yy - yymax));",
    "right" : "r[0] = new Rectangle2D.Double(Math.min(xxmin, xx),\r\n                            Math.min(yymax, yy), Math.abs(xx - xxmin),\r\n                            Math.abs(yy - yymax));",
    "info" : "ExpressionStatement[121218-121392]:ExpressionStatement[121218-121392]"
  }, {
    "left" : "somethingToDraw = true;",
    "right" : "somethingToDraw = true;",
    "info" : "ExpressionStatement[121429-121452]:ExpressionStatement[121429-121452]"
  }, {
    "left" : "if (this.quadrantPaint[1] != null)",
    "right" : "if (this.quadrantPaint[1] != null)",
    "info" : "IfStatement[121488-122186]:IfStatement[121488-122186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[121523-122186]:Block[121523-122186]"
  }, {
    "left" : "if (x < xmax && y < ymax)",
    "right" : "if (x < xmax && y < ymax)",
    "info" : "IfStatement[121538-122175]:IfStatement[121538-122175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[121564-122175]:Block[121564-122175]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[121583-122119]:IfStatement[121583-122119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[121635-121851]:Block[121635-121851]"
  }, {
    "left" : "r[1] = new Rectangle2D.Double(Math.min(yymax, yy),\r\n                            Math.min(xxmax, xx), Math.abs(yy - yymax),\r\n                            Math.abs(xx - xxmax));",
    "right" : "r[1] = new Rectangle2D.Double(Math.min(yymax, yy),\r\n                            Math.min(xxmax, xx), Math.abs(yy - yymax),\r\n                            Math.abs(xx - xxmax));",
    "info" : "ExpressionStatement[121658-121832]:ExpressionStatement[121658-121832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[121874-122119]:Block[121874-122119]"
  }, {
    "left" : "r[1] = new Rectangle2D.Double(Math.min(xx, xxmax),\r\n                            Math.min(yymax, yy), Math.abs(xx - xxmax),\r\n                            Math.abs(yy - yymax));",
    "right" : "r[1] = new Rectangle2D.Double(Math.min(xx, xxmax),\r\n                            Math.min(yymax, yy), Math.abs(xx - xxmax),\r\n                            Math.abs(yy - yymax));",
    "info" : "ExpressionStatement[121926-122100]:ExpressionStatement[121926-122100]"
  }, {
    "left" : "somethingToDraw = true;",
    "right" : "somethingToDraw = true;",
    "info" : "ExpressionStatement[122137-122160]:ExpressionStatement[122137-122160]"
  }, {
    "left" : "if (this.quadrantPaint[2] != null)",
    "right" : "if (this.quadrantPaint[2] != null)",
    "info" : "IfStatement[122196-122894]:IfStatement[122196-122894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122231-122894]:Block[122231-122894]"
  }, {
    "left" : "if (x > xmin && y > ymin)",
    "right" : "if (x > xmin && y > ymin)",
    "info" : "IfStatement[122246-122883]:IfStatement[122246-122883]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122272-122883]:Block[122272-122883]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[122291-122827]:IfStatement[122291-122827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122343-122559]:Block[122343-122559]"
  }, {
    "left" : "r[2] = new Rectangle2D.Double(Math.min(yymin, yy),\r\n                            Math.min(xxmin, xx), Math.abs(yy - yymin),\r\n                            Math.abs(xx - xxmin));",
    "right" : "r[2] = new Rectangle2D.Double(Math.min(yymin, yy),\r\n                            Math.min(xxmin, xx), Math.abs(yy - yymin),\r\n                            Math.abs(xx - xxmin));",
    "info" : "ExpressionStatement[122366-122540]:ExpressionStatement[122366-122540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122582-122827]:Block[122582-122827]"
  }, {
    "left" : "r[2] = new Rectangle2D.Double(Math.min(xxmin, xx),\r\n                            Math.min(yymin, yy), Math.abs(xx - xxmin),\r\n                            Math.abs(yy - yymin));",
    "right" : "r[2] = new Rectangle2D.Double(Math.min(xxmin, xx),\r\n                            Math.min(yymin, yy), Math.abs(xx - xxmin),\r\n                            Math.abs(yy - yymin));",
    "info" : "ExpressionStatement[122634-122808]:ExpressionStatement[122634-122808]"
  }, {
    "left" : "somethingToDraw = true;",
    "right" : "somethingToDraw = true;",
    "info" : "ExpressionStatement[122845-122868]:ExpressionStatement[122845-122868]"
  }, {
    "left" : "if (this.quadrantPaint[3] != null)",
    "right" : "if (this.quadrantPaint[3] != null)",
    "info" : "IfStatement[122904-123602]:IfStatement[122904-123602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122939-123602]:Block[122939-123602]"
  }, {
    "left" : "if (x < xmax && y > ymin)",
    "right" : "if (x < xmax && y > ymin)",
    "info" : "IfStatement[122954-123591]:IfStatement[122954-123591]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122980-123591]:Block[122980-123591]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[122999-123535]:IfStatement[122999-123535]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123051-123267]:Block[123051-123267]"
  }, {
    "left" : "r[3] = new Rectangle2D.Double(Math.min(yymin, yy),\r\n                            Math.min(xxmax, xx), Math.abs(yy - yymin),\r\n                            Math.abs(xx - xxmax));",
    "right" : "r[3] = new Rectangle2D.Double(Math.min(yymin, yy),\r\n                            Math.min(xxmax, xx), Math.abs(yy - yymin),\r\n                            Math.abs(xx - xxmax));",
    "info" : "ExpressionStatement[123074-123248]:ExpressionStatement[123074-123248]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123290-123535]:Block[123290-123535]"
  }, {
    "left" : "r[3] = new Rectangle2D.Double(Math.min(xx, xxmax),\r\n                            Math.min(yymin, yy), Math.abs(xx - xxmax),\r\n                            Math.abs(yy - yymin));",
    "right" : "r[3] = new Rectangle2D.Double(Math.min(xx, xxmax),\r\n                            Math.min(yymin, yy), Math.abs(xx - xxmax),\r\n                            Math.abs(yy - yymin));",
    "info" : "ExpressionStatement[123342-123516]:ExpressionStatement[123342-123516]"
  }, {
    "left" : "somethingToDraw = true;",
    "right" : "somethingToDraw = true;",
    "info" : "ExpressionStatement[123553-123576]:ExpressionStatement[123553-123576]"
  }, {
    "left" : "if (somethingToDraw)",
    "right" : "if (somethingToDraw)",
    "info" : "IfStatement[123612-124122]:IfStatement[123612-124122]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123633-124122]:Block[123633-124122]"
  }, {
    "left" : "Composite originalComposite = g2.getComposite();",
    "right" : "Composite originalComposite = g2.getComposite();",
    "info" : "VariableDeclarationStatement[123648-123696]:VariableDeclarationStatement[123648-123696]"
  }, {
    "left" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\r\n                    getBackgroundAlpha()));",
    "right" : "g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,\r\n                    getBackgroundAlpha()));",
    "info" : "ExpressionStatement[123710-123822]:ExpressionStatement[123710-123822]"
  }, {
    "left" : "for (int i = 0; i < 4; i++)",
    "right" : "for (int i = 0; i < 4; i++)",
    "info" : "ForStatement[123836-124062]:ForStatement[123836-124062]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123864-124062]:Block[123864-124062]"
  }, {
    "left" : "if (this.quadrantPaint[i] != null && r[i] != null)",
    "right" : "if (this.quadrantPaint[i] != null && r[i] != null)",
    "info" : "IfStatement[123883-124047]:IfStatement[123883-124047]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[123934-124047]:Block[123934-124047]"
  }, {
    "left" : "g2.setPaint(this.quadrantPaint[i]);",
    "right" : "g2.setPaint(this.quadrantPaint[i]);",
    "info" : "ExpressionStatement[123957-123992]:ExpressionStatement[123957-123992]"
  }, {
    "left" : "g2.fill(r[i]);",
    "right" : "g2.fill(r[i]);",
    "info" : "ExpressionStatement[124014-124028]:ExpressionStatement[124014-124028]"
  }, {
    "left" : "g2.setComposite(originalComposite);",
    "right" : "g2.setComposite(originalComposite);",
    "info" : "ExpressionStatement[124076-124111]:ExpressionStatement[124076-124111]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[124373-124379]:Modifier[124373-124379]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[124380-124384]:PrimitiveType[124380-124384]"
  }, {
    "left" : "drawDomainTickBands",
    "right" : "drawDomainTickBands",
    "info" : "SimpleName[124385-124404]:SimpleName[124385-124404]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[124405-124418]:SingleVariableDeclaration[124405-124418]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[124420-124440]:SingleVariableDeclaration[124420-124440]"
  }, {
    "left" : "List ticks",
    "right" : "List ticks",
    "info" : "SingleVariableDeclaration[124479-124489]:SingleVariableDeclaration[124479-124489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124491-125429]:Block[124491-125429]"
  }, {
    "left" : "Paint bandPaint = getDomainTickBandPaint();",
    "right" : "Paint bandPaint = getDomainTickBandPaint();",
    "info" : "VariableDeclarationStatement[124502-124545]:VariableDeclarationStatement[124502-124545]"
  }, {
    "left" : "if (bandPaint != null)",
    "right" : "if (bandPaint != null)",
    "info" : "IfStatement[124555-125422]:IfStatement[124555-125422]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124578-125422]:Block[124578-125422]"
  }, {
    "left" : "boolean fillBand = false;",
    "right" : "boolean fillBand = false;",
    "info" : "VariableDeclarationStatement[124593-124618]:VariableDeclarationStatement[124593-124618]"
  }, {
    "left" : "ValueAxis xAxis = getDomainAxis();",
    "right" : "ValueAxis xAxis = getDomainAxis();",
    "info" : "VariableDeclarationStatement[124632-124666]:VariableDeclarationStatement[124632-124666]"
  }, {
    "left" : "double previous = xAxis.getLowerBound();",
    "right" : "double previous = xAxis.getLowerBound();",
    "info" : "VariableDeclarationStatement[124680-124720]:VariableDeclarationStatement[124680-124720]"
  }, {
    "left" : "Iterator iterator = ticks.iterator();",
    "right" : "Iterator iterator = ticks.iterator();",
    "info" : "VariableDeclarationStatement[124734-124771]:VariableDeclarationStatement[124734-124771]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[124785-125200]:WhileStatement[124785-125200]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124812-125200]:Block[124812-125200]"
  }, {
    "left" : "ValueTick tick = (ValueTick) iterator.next();",
    "right" : "ValueTick tick = (ValueTick) iterator.next();",
    "info" : "VariableDeclarationStatement[124831-124876]:VariableDeclarationStatement[124831-124876]"
  }, {
    "left" : "double current = tick.getValue();",
    "right" : "double current = tick.getValue();",
    "info" : "VariableDeclarationStatement[124894-124927]:VariableDeclarationStatement[124894-124927]"
  }, {
    "left" : "if (fillBand)",
    "right" : "if (fillBand)",
    "info" : "IfStatement[124945-125109]:IfStatement[124945-125109]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124959-125109]:Block[124959-125109]"
  }, {
    "left" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,\r\n                            previous, current);",
    "right" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,\r\n                            previous, current);",
    "info" : "ExpressionStatement[124982-125090]:ExpressionStatement[124982-125090]"
  }, {
    "left" : "previous = current;",
    "right" : "previous = current;",
    "info" : "ExpressionStatement[125127-125146]:ExpressionStatement[125127-125146]"
  }, {
    "left" : "fillBand = !fillBand;",
    "right" : "fillBand = !fillBand;",
    "info" : "ExpressionStatement[125164-125185]:ExpressionStatement[125164-125185]"
  }, {
    "left" : "double end = xAxis.getUpperBound();",
    "right" : "double end = xAxis.getUpperBound();",
    "info" : "VariableDeclarationStatement[125214-125249]:VariableDeclarationStatement[125214-125249]"
  }, {
    "left" : "if (fillBand)",
    "right" : "if (fillBand)",
    "info" : "IfStatement[125263-125411]:IfStatement[125263-125411]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[125277-125411]:Block[125277-125411]"
  }, {
    "left" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,\r\n                        previous, end);",
    "right" : "getRenderer().fillDomainGridBand(g2, this, xAxis, dataArea,\r\n                        previous, end);",
    "info" : "ExpressionStatement[125296-125396]:ExpressionStatement[125296-125396]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[125671-125677]:Modifier[125671-125677]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[125678-125682]:PrimitiveType[125678-125682]"
  }, {
    "left" : "drawRangeTickBands",
    "right" : "drawRangeTickBands",
    "info" : "SimpleName[125683-125701]:SimpleName[125683-125701]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[125702-125715]:SingleVariableDeclaration[125702-125715]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[125717-125737]:SingleVariableDeclaration[125717-125737]"
  }, {
    "left" : "List ticks",
    "right" : "List ticks",
    "info" : "SingleVariableDeclaration[125775-125785]:SingleVariableDeclaration[125775-125785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[125787-126716]:Block[125787-126716]"
  }, {
    "left" : "Paint bandPaint = getRangeTickBandPaint();",
    "right" : "Paint bandPaint = getRangeTickBandPaint();",
    "info" : "VariableDeclarationStatement[125798-125840]:VariableDeclarationStatement[125798-125840]"
  }, {
    "left" : "if (bandPaint != null)",
    "right" : "if (bandPaint != null)",
    "info" : "IfStatement[125850-126709]:IfStatement[125850-126709]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[125873-126709]:Block[125873-126709]"
  }, {
    "left" : "boolean fillBand = false;",
    "right" : "boolean fillBand = false;",
    "info" : "VariableDeclarationStatement[125888-125913]:VariableDeclarationStatement[125888-125913]"
  }, {
    "left" : "ValueAxis axis = getRangeAxis();",
    "right" : "ValueAxis axis = getRangeAxis();",
    "info" : "VariableDeclarationStatement[125927-125959]:VariableDeclarationStatement[125927-125959]"
  }, {
    "left" : "double previous = axis.getLowerBound();",
    "right" : "double previous = axis.getLowerBound();",
    "info" : "VariableDeclarationStatement[125973-126012]:VariableDeclarationStatement[125973-126012]"
  }, {
    "left" : "Iterator iterator = ticks.iterator();",
    "right" : "Iterator iterator = ticks.iterator();",
    "info" : "VariableDeclarationStatement[126026-126063]:VariableDeclarationStatement[126026-126063]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[126077-126490]:WhileStatement[126077-126490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126104-126490]:Block[126104-126490]"
  }, {
    "left" : "ValueTick tick = (ValueTick) iterator.next();",
    "right" : "ValueTick tick = (ValueTick) iterator.next();",
    "info" : "VariableDeclarationStatement[126123-126168]:VariableDeclarationStatement[126123-126168]"
  }, {
    "left" : "double current = tick.getValue();",
    "right" : "double current = tick.getValue();",
    "info" : "VariableDeclarationStatement[126186-126219]:VariableDeclarationStatement[126186-126219]"
  }, {
    "left" : "if (fillBand)",
    "right" : "if (fillBand)",
    "info" : "IfStatement[126237-126399]:IfStatement[126237-126399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126251-126399]:Block[126251-126399]"
  }, {
    "left" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea,\r\n                            previous, current);",
    "right" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea,\r\n                            previous, current);",
    "info" : "ExpressionStatement[126274-126380]:ExpressionStatement[126274-126380]"
  }, {
    "left" : "previous = current;",
    "right" : "previous = current;",
    "info" : "ExpressionStatement[126417-126436]:ExpressionStatement[126417-126436]"
  }, {
    "left" : "fillBand = !fillBand;",
    "right" : "fillBand = !fillBand;",
    "info" : "ExpressionStatement[126454-126475]:ExpressionStatement[126454-126475]"
  }, {
    "left" : "double end = axis.getUpperBound();",
    "right" : "double end = axis.getUpperBound();",
    "info" : "VariableDeclarationStatement[126504-126538]:VariableDeclarationStatement[126504-126538]"
  }, {
    "left" : "if (fillBand)",
    "right" : "if (fillBand)",
    "info" : "IfStatement[126552-126698]:IfStatement[126552-126698]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126566-126698]:Block[126566-126698]"
  }, {
    "left" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea,\r\n                        previous, end);",
    "right" : "getRenderer().fillRangeGridBand(g2, this, axis, dataArea,\r\n                        previous, end);",
    "info" : "ExpressionStatement[126585-126683]:ExpressionStatement[126585-126683]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[127210-127219]:Modifier[127210-127219]"
  }, {
    "left" : "Map",
    "right" : "Map",
    "info" : "SimpleType[127220-127223]:SimpleType[127220-127223]"
  }, {
    "left" : "drawAxes",
    "right" : "drawAxes",
    "info" : "SimpleName[127224-127232]:SimpleName[127224-127232]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[127233-127246]:SingleVariableDeclaration[127233-127246]"
  }, {
    "left" : "Rectangle2D plotArea",
    "right" : "Rectangle2D plotArea",
    "info" : "SingleVariableDeclaration[127276-127296]:SingleVariableDeclaration[127276-127296]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[127326-127346]:SingleVariableDeclaration[127326-127346]"
  }, {
    "left" : "PlotRenderingInfo plotState",
    "right" : "PlotRenderingInfo plotState",
    "info" : "SingleVariableDeclaration[127376-127403]:SingleVariableDeclaration[127376-127403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127405-130312]:Block[127405-130312]"
  }, {
    "left" : "AxisCollection axisCollection = new AxisCollection();",
    "right" : "AxisCollection axisCollection = new AxisCollection();",
    "info" : "VariableDeclarationStatement[127418-127471]:VariableDeclarationStatement[127418-127471]"
  }, {
    "left" : "for (int index = 0; index < this.domainAxes.size(); index++)",
    "right" : "for (int index = 0; index < this.domainAxes.size(); index++)",
    "info" : "ForStatement[127523-127783]:ForStatement[127523-127783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127584-127783]:Block[127584-127783]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(index);",
    "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(index);",
    "info" : "VariableDeclarationStatement[127599-127655]:VariableDeclarationStatement[127599-127655]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[127669-127772]:IfStatement[127669-127772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127687-127772]:Block[127687-127772]"
  }, {
    "left" : "axisCollection.add(axis, getDomainAxisEdge(index));",
    "right" : "axisCollection.add(axis, getDomainAxisEdge(index));",
    "info" : "ExpressionStatement[127706-127757]:ExpressionStatement[127706-127757]"
  }, {
    "left" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
    "right" : "for (int index = 0; index < this.rangeAxes.size(); index++)",
    "info" : "ForStatement[127834-128094]:ForStatement[127834-128094]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127894-128094]:Block[127894-128094]"
  }, {
    "left" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
    "right" : "ValueAxis yAxis = (ValueAxis) this.rangeAxes.get(index);",
    "info" : "VariableDeclarationStatement[127909-127965]:VariableDeclarationStatement[127909-127965]"
  }, {
    "left" : "if (yAxis != null)",
    "right" : "if (yAxis != null)",
    "info" : "IfStatement[127979-128083]:IfStatement[127979-128083]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127998-128083]:Block[127998-128083]"
  }, {
    "left" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
    "right" : "axisCollection.add(yAxis, getRangeAxisEdge(index));",
    "info" : "ExpressionStatement[128017-128068]:ExpressionStatement[128017-128068]"
  }, {
    "left" : "Map axisStateMap = new HashMap();",
    "right" : "Map axisStateMap = new HashMap();",
    "info" : "VariableDeclarationStatement[128106-128139]:VariableDeclarationStatement[128106-128139]"
  }, {
    "left" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
    "right" : "double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(\r\n                dataArea.getHeight());",
    "info" : "VariableDeclarationStatement[128181-128293]:VariableDeclarationStatement[128181-128293]"
  }, {
    "left" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
    "right" : "Iterator iterator = axisCollection.getAxesAtTop().iterator();",
    "info" : "VariableDeclarationStatement[128303-128364]:VariableDeclarationStatement[128303-128364]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[128374-128679]:WhileStatement[128374-128679]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128401-128679]:Block[128401-128679]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "info" : "VariableDeclarationStatement[128416-128461]:VariableDeclarationStatement[128416-128461]"
  }, {
    "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.TOP, plotState);",
    "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.TOP, plotState);",
    "info" : "VariableDeclarationStatement[128475-128585]:VariableDeclarationStatement[128475-128585]"
  }, {
    "left" : "cursor = info.getCursor();",
    "right" : "cursor = info.getCursor();",
    "info" : "ExpressionStatement[128599-128625]:ExpressionStatement[128599-128625]"
  }, {
    "left" : "axisStateMap.put(axis, info);",
    "right" : "axisStateMap.put(axis, info);",
    "info" : "ExpressionStatement[128639-128668]:ExpressionStatement[128639-128668]"
  }, {
    "left" : "cursor = dataArea.getMaxY()\r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
    "right" : "cursor = dataArea.getMaxY()\r\n                 + this.axisOffset.calculateBottomOutset(dataArea.getHeight());",
    "info" : "ExpressionStatement[128724-128832]:ExpressionStatement[128724-128832]"
  }, {
    "left" : "iterator = axisCollection.getAxesAtBottom().iterator();",
    "right" : "iterator = axisCollection.getAxesAtBottom().iterator();",
    "info" : "ExpressionStatement[128842-128897]:ExpressionStatement[128842-128897]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[128907-129215]:WhileStatement[128907-129215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128934-129215]:Block[128934-129215]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "info" : "VariableDeclarationStatement[128949-128994]:VariableDeclarationStatement[128949-128994]"
  }, {
    "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.BOTTOM, plotState);",
    "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.BOTTOM, plotState);",
    "info" : "VariableDeclarationStatement[129008-129121]:VariableDeclarationStatement[129008-129121]"
  }, {
    "left" : "cursor = info.getCursor();",
    "right" : "cursor = info.getCursor();",
    "info" : "ExpressionStatement[129135-129161]:ExpressionStatement[129135-129161]"
  }, {
    "left" : "axisStateMap.put(axis, info);",
    "right" : "axisStateMap.put(axis, info);",
    "info" : "ExpressionStatement[129175-129204]:ExpressionStatement[129175-129204]"
  }, {
    "left" : "cursor = dataArea.getMinX()\r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
    "right" : "cursor = dataArea.getMinX()\r\n                 - this.axisOffset.calculateLeftOutset(dataArea.getWidth());",
    "info" : "ExpressionStatement[129258-129363]:ExpressionStatement[129258-129363]"
  }, {
    "left" : "iterator = axisCollection.getAxesAtLeft().iterator();",
    "right" : "iterator = axisCollection.getAxesAtLeft().iterator();",
    "info" : "ExpressionStatement[129373-129426]:ExpressionStatement[129373-129426]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[129436-129742]:WhileStatement[129436-129742]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129463-129742]:Block[129463-129742]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "info" : "VariableDeclarationStatement[129478-129523]:VariableDeclarationStatement[129478-129523]"
  }, {
    "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.LEFT, plotState);",
    "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.LEFT, plotState);",
    "info" : "VariableDeclarationStatement[129537-129648]:VariableDeclarationStatement[129537-129648]"
  }, {
    "left" : "cursor = info.getCursor();",
    "right" : "cursor = info.getCursor();",
    "info" : "ExpressionStatement[129662-129688]:ExpressionStatement[129662-129688]"
  }, {
    "left" : "axisStateMap.put(axis, info);",
    "right" : "axisStateMap.put(axis, info);",
    "info" : "ExpressionStatement[129702-129731]:ExpressionStatement[129702-129731]"
  }, {
    "left" : "cursor = dataArea.getMaxX()\r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
    "right" : "cursor = dataArea.getMaxX()\r\n                 + this.axisOffset.calculateRightOutset(dataArea.getWidth());",
    "info" : "ExpressionStatement[129786-129892]:ExpressionStatement[129786-129892]"
  }, {
    "left" : "iterator = axisCollection.getAxesAtRight().iterator();",
    "right" : "iterator = axisCollection.getAxesAtRight().iterator();",
    "info" : "ExpressionStatement[129902-129956]:ExpressionStatement[129902-129956]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[129966-130273]:WhileStatement[129966-130273]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129993-130273]:Block[129993-130273]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "right" : "ValueAxis axis = (ValueAxis) iterator.next();",
    "info" : "VariableDeclarationStatement[130008-130053]:VariableDeclarationStatement[130008-130053]"
  }, {
    "left" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.RIGHT, plotState);",
    "right" : "AxisState info = axis.draw(g2, cursor, plotArea, dataArea,\r\n                    RectangleEdge.RIGHT, plotState);",
    "info" : "VariableDeclarationStatement[130067-130179]:VariableDeclarationStatement[130067-130179]"
  }, {
    "left" : "cursor = info.getCursor();",
    "right" : "cursor = info.getCursor();",
    "info" : "ExpressionStatement[130193-130219]:ExpressionStatement[130193-130219]"
  }, {
    "left" : "axisStateMap.put(axis, info);",
    "right" : "axisStateMap.put(axis, info);",
    "info" : "ExpressionStatement[130233-130262]:ExpressionStatement[130233-130262]"
  }, {
    "left" : "return axisStateMap;",
    "right" : "return axisStateMap;",
    "info" : "ReturnStatement[130285-130305]:ReturnStatement[130285-130305]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[131010-131016]:Modifier[131010-131016]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[131017-131024]:PrimitiveType[131017-131024]"
  }, {
    "left" : "render",
    "right" : "render",
    "info" : "SimpleName[131025-131031]:SimpleName[131025-131031]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[131032-131045]:SingleVariableDeclaration[131032-131045]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[131047-131067]:SingleVariableDeclaration[131047-131067]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[131069-131078]:SingleVariableDeclaration[131069-131078]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[131093-131115]:SingleVariableDeclaration[131093-131115]"
  }, {
    "left" : "CrosshairState crosshairState",
    "right" : "CrosshairState crosshairState",
    "info" : "SingleVariableDeclaration[131117-131146]:SingleVariableDeclaration[131117-131146]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[131148-135944]:Block[131148-135944]"
  }, {
    "left" : "boolean foundData = false;",
    "right" : "boolean foundData = false;",
    "info" : "VariableDeclarationStatement[131161-131187]:VariableDeclarationStatement[131161-131187]"
  }, {
    "left" : "XYDataset dataset = getDataset(index);",
    "right" : "XYDataset dataset = getDataset(index);",
    "info" : "VariableDeclarationStatement[131197-131235]:VariableDeclarationStatement[131197-131235]"
  }, {
    "left" : "if (!DatasetUtilities.isEmptyOrNull(dataset))",
    "right" : "if (!DatasetUtilities.isEmptyOrNull(dataset))",
    "info" : "IfStatement[131245-135910]:IfStatement[131245-135910]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[131291-135910]:Block[131291-135910]"
  }, {
    "left" : "foundData = true;",
    "right" : "foundData = true;",
    "info" : "ExpressionStatement[131306-131323]:ExpressionStatement[131306-131323]"
  }, {
    "left" : "ValueAxis xAxis = getDomainAxisForDataset(index);",
    "right" : "ValueAxis xAxis = getDomainAxisForDataset(index);",
    "info" : "VariableDeclarationStatement[131337-131386]:VariableDeclarationStatement[131337-131386]"
  }, {
    "left" : "ValueAxis yAxis = getRangeAxisForDataset(index);",
    "right" : "ValueAxis yAxis = getRangeAxisForDataset(index);",
    "info" : "VariableDeclarationStatement[131400-131448]:VariableDeclarationStatement[131400-131448]"
  }, {
    "left" : "if (xAxis == null || yAxis == null)",
    "right" : "if (xAxis == null || yAxis == null)",
    "info" : "IfStatement[131462-131588]:IfStatement[131462-131588]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[131498-131588]:Block[131498-131588]"
  }, {
    "left" : "return foundData;",
    "right" : "return foundData;",
    "info" : "ReturnStatement[131517-131534]:ReturnStatement[131517-131534]"
  }, {
    "left" : "XYItemRenderer renderer = getRenderer(index);",
    "right" : "XYItemRenderer renderer = getRenderer(index);",
    "info" : "VariableDeclarationStatement[131602-131647]:VariableDeclarationStatement[131602-131647]"
  }, {
    "left" : "if (renderer == null)",
    "right" : "if (renderer == null)",
    "info" : "IfStatement[131661-131874]:IfStatement[131661-131874]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[131683-131874]:Block[131683-131874]"
  }, {
    "left" : "renderer = getRenderer();",
    "right" : "renderer = getRenderer();",
    "info" : "ExpressionStatement[131702-131727]:ExpressionStatement[131702-131727]"
  }, {
    "left" : "if (renderer == null)",
    "right" : "if (renderer == null)",
    "info" : "IfStatement[131745-131859]:IfStatement[131745-131859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[131767-131859]:Block[131767-131859]"
  }, {
    "left" : "return foundData;",
    "right" : "return foundData;",
    "info" : "ReturnStatement[131823-131840]:ReturnStatement[131823-131840]"
  }, {
    "left" : "XYItemRendererState state = renderer.initialise(g2, dataArea, this,\r\n                    dataset, info);",
    "right" : "XYItemRendererState state = renderer.initialise(g2, dataArea, this,\r\n                    dataset, info);",
    "info" : "VariableDeclarationStatement[131890-131994]:VariableDeclarationStatement[131890-131994]"
  }, {
    "left" : "XYDatasetSelectionState selectionState = state.getSelectionState();",
    "right" : "XYDatasetSelectionState selectionState = state.getSelectionState();",
    "info" : "VariableDeclarationStatement[132008-132075]:VariableDeclarationStatement[132008-132075]"
  }, {
    "left" : "int passCount = renderer.getPassCount();",
    "right" : "int passCount = renderer.getPassCount();",
    "info" : "VariableDeclarationStatement[132089-132129]:VariableDeclarationStatement[132089-132129]"
  }, {
    "left" : "SeriesRenderingOrder seriesOrder = getSeriesRenderingOrder();",
    "right" : "SeriesRenderingOrder seriesOrder = getSeriesRenderingOrder();",
    "info" : "VariableDeclarationStatement[132145-132206]:VariableDeclarationStatement[132145-132206]"
  }, {
    "left" : "if (seriesOrder == SeriesRenderingOrder.REVERSE)",
    "right" : "if (seriesOrder == SeriesRenderingOrder.REVERSE)",
    "info" : "IfStatement[132220-135899]:IfStatement[132220-135899]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132269-134133]:Block[132269-134133]"
  }, {
    "left" : "for (int pass = 0; pass < passCount; pass++)",
    "right" : "for (int pass = 0; pass < passCount; pass++)",
    "info" : "ForStatement[132338-134118]:ForStatement[132338-134118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132383-134118]:Block[132383-134118]"
  }, {
    "left" : "int seriesCount = dataset.getSeriesCount();",
    "right" : "int seriesCount = dataset.getSeriesCount();",
    "info" : "VariableDeclarationStatement[132406-132449]:VariableDeclarationStatement[132406-132449]"
  }, {
    "left" : "for (int series = seriesCount - 1; series >= 0; series--)",
    "right" : "for (int series = seriesCount - 1; series >= 0; series--)",
    "info" : "ForStatement[132471-134099]:ForStatement[132471-134099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132529-134099]:Block[132529-134099]"
  }, {
    "left" : "int firstItem = 0;",
    "right" : "int firstItem = 0;",
    "info" : "VariableDeclarationStatement[132556-132574]:VariableDeclarationStatement[132556-132574]"
  }, {
    "left" : "int lastItem = dataset.getItemCount(series) - 1;",
    "right" : "int lastItem = dataset.getItemCount(series) - 1;",
    "info" : "VariableDeclarationStatement[132600-132648]:VariableDeclarationStatement[132600-132648]"
  }, {
    "left" : "if (lastItem == -1)",
    "right" : "if (lastItem == -1)",
    "info" : "IfStatement[132674-132761]:IfStatement[132674-132761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132694-132761]:Block[132694-132761]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[132725-132734]:ContinueStatement[132725-132734]"
  }, {
    "left" : "if (state.getProcessVisibleItemsOnly())",
    "right" : "if (state.getProcessVisibleItemsOnly())",
    "info" : "IfStatement[132787-133226]:IfStatement[132787-133226]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132827-133226]:Block[132827-133226]"
  }, {
    "left" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(),\r\n                                    xAxis.getUpperBound());",
    "right" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(),\r\n                                    xAxis.getUpperBound());",
    "info" : "VariableDeclarationStatement[132858-133047]:VariableDeclarationStatement[132858-133047]"
  }, {
    "left" : "firstItem = Math.max(itemBounds[0] - 1, 0);",
    "right" : "firstItem = Math.max(itemBounds[0] - 1, 0);",
    "info" : "ExpressionStatement[133077-133120]:ExpressionStatement[133077-133120]"
  }, {
    "left" : "lastItem = Math.min(itemBounds[1] + 1, lastItem);",
    "right" : "lastItem = Math.min(itemBounds[1] + 1, lastItem);",
    "info" : "ExpressionStatement[133150-133199]:ExpressionStatement[133150-133199]"
  }, {
    "left" : "state.startSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "right" : "state.startSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "info" : "ExpressionStatement[133252-133362]:ExpressionStatement[133252-133362]"
  }, {
    "left" : "for (int item = firstItem; item <= lastItem; item++)",
    "right" : "for (int item = firstItem; item <= lastItem; item++)",
    "info" : "ForStatement[133388-133942]:ForStatement[133388-133942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[133441-133942]:Block[133441-133942]"
  }, {
    "left" : "boolean selected = false;",
    "right" : "boolean selected = false;",
    "info" : "VariableDeclarationStatement[133472-133497]:VariableDeclarationStatement[133472-133497]"
  }, {
    "left" : "if (selectionState != null)",
    "right" : "if (selectionState != null)",
    "info" : "IfStatement[133527-133713]:IfStatement[133527-133713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[133555-133713]:Block[133555-133713]"
  }, {
    "left" : "selected = selectionState.isSelected(series,\r\n                                        item);",
    "right" : "selected = selectionState.isSelected(series,\r\n                                        item);",
    "info" : "ExpressionStatement[133590-133682]:ExpressionStatement[133590-133682]"
  }, {
    "left" : "renderer.drawItem(g2, state, dataArea, this,\r\n                                    xAxis, yAxis, dataset, series, item,\r\n                                    selected, pass);",
    "right" : "renderer.drawItem(g2, state, dataArea, this,\r\n                                    xAxis, yAxis, dataset, series, item,\r\n                                    selected, pass);",
    "info" : "ExpressionStatement[133743-133915]:ExpressionStatement[133743-133915]"
  }, {
    "left" : "state.endSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "right" : "state.endSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "info" : "ExpressionStatement[133968-134076]:ExpressionStatement[133968-134076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134152-135899]:Block[134152-135899]"
  }, {
    "left" : "for (int pass = 0; pass < passCount; pass++)",
    "right" : "for (int pass = 0; pass < passCount; pass++)",
    "info" : "ForStatement[134221-135884]:ForStatement[134221-135884]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134266-135884]:Block[134266-135884]"
  }, {
    "left" : "int seriesCount = dataset.getSeriesCount();",
    "right" : "int seriesCount = dataset.getSeriesCount();",
    "info" : "VariableDeclarationStatement[134289-134332]:VariableDeclarationStatement[134289-134332]"
  }, {
    "left" : "for (int series = 0; series < seriesCount; series++)",
    "right" : "for (int series = 0; series < seriesCount; series++)",
    "info" : "ForStatement[134354-135865]:ForStatement[134354-135865]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134407-135865]:Block[134407-135865]"
  }, {
    "left" : "int firstItem = 0;",
    "right" : "int firstItem = 0;",
    "info" : "VariableDeclarationStatement[134434-134452]:VariableDeclarationStatement[134434-134452]"
  }, {
    "left" : "int lastItem = dataset.getItemCount(series) - 1;",
    "right" : "int lastItem = dataset.getItemCount(series) - 1;",
    "info" : "VariableDeclarationStatement[134478-134526]:VariableDeclarationStatement[134478-134526]"
  }, {
    "left" : "if (state.getProcessVisibleItemsOnly())",
    "right" : "if (state.getProcessVisibleItemsOnly())",
    "info" : "IfStatement[134552-134991]:IfStatement[134552-134991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134592-134991]:Block[134592-134991]"
  }, {
    "left" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(),\r\n                                    xAxis.getUpperBound());",
    "right" : "int[] itemBounds = RendererUtilities.findLiveItems(\r\n                                    dataset, series, xAxis.getLowerBound(),\r\n                                    xAxis.getUpperBound());",
    "info" : "VariableDeclarationStatement[134623-134812]:VariableDeclarationStatement[134623-134812]"
  }, {
    "left" : "firstItem = Math.max(itemBounds[0] - 1, 0);",
    "right" : "firstItem = Math.max(itemBounds[0] - 1, 0);",
    "info" : "ExpressionStatement[134842-134885]:ExpressionStatement[134842-134885]"
  }, {
    "left" : "lastItem = Math.min(itemBounds[1] + 1, lastItem);",
    "right" : "lastItem = Math.min(itemBounds[1] + 1, lastItem);",
    "info" : "ExpressionStatement[134915-134964]:ExpressionStatement[134915-134964]"
  }, {
    "left" : "state.startSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "right" : "state.startSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "info" : "ExpressionStatement[135017-135127]:ExpressionStatement[135017-135127]"
  }, {
    "left" : "for (int item = firstItem; item <= lastItem; item++)",
    "right" : "for (int item = firstItem; item <= lastItem; item++)",
    "info" : "ForStatement[135153-135708]:ForStatement[135153-135708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135206-135708]:Block[135206-135708]"
  }, {
    "left" : "boolean selected = false;",
    "right" : "boolean selected = false;",
    "info" : "VariableDeclarationStatement[135237-135262]:VariableDeclarationStatement[135237-135262]"
  }, {
    "left" : "if (selectionState != null)",
    "right" : "if (selectionState != null)",
    "info" : "IfStatement[135292-135478]:IfStatement[135292-135478]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135320-135478]:Block[135320-135478]"
  }, {
    "left" : "selected = selectionState.isSelected(series,\r\n                                        item);",
    "right" : "selected = selectionState.isSelected(series,\r\n                                        item);",
    "info" : "ExpressionStatement[135355-135447]:ExpressionStatement[135355-135447]"
  }, {
    "left" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                    xAxis, yAxis, dataset, series, item,\r\n                                    selected, pass);",
    "right" : "renderer.drawItem(g2, state, dataArea, this, \r\n                                    xAxis, yAxis, dataset, series, item,\r\n                                    selected, pass);",
    "info" : "ExpressionStatement[135508-135681]:ExpressionStatement[135508-135681]"
  }, {
    "left" : "state.endSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "right" : "state.endSeriesPass(dataset, series, firstItem,\r\n                                lastItem, pass, passCount);",
    "info" : "ExpressionStatement[135734-135842]:ExpressionStatement[135734-135842]"
  }, {
    "left" : "return foundData;",
    "right" : "return foundData;",
    "info" : "ReturnStatement[135920-135937]:ReturnStatement[135920-135937]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[136100-136106]:Modifier[136100-136106]"
  }, {
    "left" : "ValueAxis",
    "right" : "ValueAxis",
    "info" : "SimpleType[136107-136116]:SimpleType[136107-136116]"
  }, {
    "left" : "getDomainAxisForDataset",
    "right" : "getDomainAxisForDataset",
    "info" : "SimpleName[136117-136140]:SimpleName[136117-136140]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[136141-136150]:SingleVariableDeclaration[136141-136150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136152-136877]:Block[136152-136877]"
  }, {
    "left" : "int upper = Math.max(getDatasetCount(), getRendererCount());",
    "right" : "int upper = Math.max(getDatasetCount(), getRendererCount());",
    "info" : "VariableDeclarationStatement[136163-136223]:VariableDeclarationStatement[136163-136223]"
  }, {
    "left" : "if (index < 0 || index >= upper)",
    "right" : "if (index < 0 || index >= upper)",
    "info" : "IfStatement[136233-136386]:IfStatement[136233-136386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136266-136386]:Block[136266-136386]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Index \" + index\r\n                    + \" out of bounds.\");",
    "right" : "throw new IllegalArgumentException(\"Index \" + index\r\n                    + \" out of bounds.\");",
    "info" : "ThrowStatement[136281-136375]:ThrowStatement[136281-136375]"
  }, {
    "left" : "ValueAxis valueAxis = null;",
    "right" : "ValueAxis valueAxis = null;",
    "info" : "VariableDeclarationStatement[136396-136423]:VariableDeclarationStatement[136396-136423]"
  }, {
    "left" : "List axisIndices = (List) this.datasetToDomainAxesMap.get(\r\n                new Integer(index));",
    "right" : "List axisIndices = (List) this.datasetToDomainAxesMap.get(\r\n                new Integer(index));",
    "info" : "VariableDeclarationStatement[136433-136529]:VariableDeclarationStatement[136433-136529]"
  }, {
    "left" : "if (axisIndices != null)",
    "right" : "if (axisIndices != null)",
    "info" : "IfStatement[136539-136843]:IfStatement[136539-136843]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136564-136773]:Block[136564-136773]"
  }, {
    "left" : "Integer axisIndex = (Integer) axisIndices.get(0);",
    "right" : "Integer axisIndex = (Integer) axisIndices.get(0);",
    "info" : "VariableDeclarationStatement[136651-136700]:VariableDeclarationStatement[136651-136700]"
  }, {
    "left" : "valueAxis = getDomainAxis(axisIndex.intValue());",
    "right" : "valueAxis = getDomainAxis(axisIndex.intValue());",
    "info" : "ExpressionStatement[136714-136762]:ExpressionStatement[136714-136762]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136788-136843]:Block[136788-136843]"
  }, {
    "left" : "valueAxis = getDomainAxis(0);",
    "right" : "valueAxis = getDomainAxis(0);",
    "info" : "ExpressionStatement[136803-136832]:ExpressionStatement[136803-136832]"
  }, {
    "left" : "return valueAxis;",
    "right" : "return valueAxis;",
    "info" : "ReturnStatement[136853-136870]:ReturnStatement[136853-136870]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[137032-137038]:Modifier[137032-137038]"
  }, {
    "left" : "ValueAxis",
    "right" : "ValueAxis",
    "info" : "SimpleType[137039-137048]:SimpleType[137039-137048]"
  }, {
    "left" : "getRangeAxisForDataset",
    "right" : "getRangeAxisForDataset",
    "info" : "SimpleName[137049-137071]:SimpleName[137049-137071]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[137072-137081]:SingleVariableDeclaration[137072-137081]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137083-137805]:Block[137083-137805]"
  }, {
    "left" : "int upper = Math.max(getDatasetCount(), getRendererCount());",
    "right" : "int upper = Math.max(getDatasetCount(), getRendererCount());",
    "info" : "VariableDeclarationStatement[137094-137154]:VariableDeclarationStatement[137094-137154]"
  }, {
    "left" : "if (index < 0 || index >= upper)",
    "right" : "if (index < 0 || index >= upper)",
    "info" : "IfStatement[137164-137317]:IfStatement[137164-137317]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137197-137317]:Block[137197-137317]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Index \" + index\r\n                    + \" out of bounds.\");",
    "right" : "throw new IllegalArgumentException(\"Index \" + index\r\n                    + \" out of bounds.\");",
    "info" : "ThrowStatement[137212-137306]:ThrowStatement[137212-137306]"
  }, {
    "left" : "ValueAxis valueAxis = null;",
    "right" : "ValueAxis valueAxis = null;",
    "info" : "VariableDeclarationStatement[137327-137354]:VariableDeclarationStatement[137327-137354]"
  }, {
    "left" : "List axisIndices = (List) this.datasetToRangeAxesMap.get(\r\n                new Integer(index));",
    "right" : "List axisIndices = (List) this.datasetToRangeAxesMap.get(\r\n                new Integer(index));",
    "info" : "VariableDeclarationStatement[137364-137459]:VariableDeclarationStatement[137364-137459]"
  }, {
    "left" : "if (axisIndices != null)",
    "right" : "if (axisIndices != null)",
    "info" : "IfStatement[137469-137771]:IfStatement[137469-137771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137494-137702]:Block[137494-137702]"
  }, {
    "left" : "Integer axisIndex = (Integer) axisIndices.get(0);",
    "right" : "Integer axisIndex = (Integer) axisIndices.get(0);",
    "info" : "VariableDeclarationStatement[137581-137630]:VariableDeclarationStatement[137581-137630]"
  }, {
    "left" : "valueAxis = getRangeAxis(axisIndex.intValue());",
    "right" : "valueAxis = getRangeAxis(axisIndex.intValue());",
    "info" : "ExpressionStatement[137644-137691]:ExpressionStatement[137644-137691]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137717-137771]:Block[137717-137771]"
  }, {
    "left" : "valueAxis = getRangeAxis(0);",
    "right" : "valueAxis = getRangeAxis(0);",
    "info" : "ExpressionStatement[137732-137760]:ExpressionStatement[137732-137760]"
  }, {
    "left" : "return valueAxis;",
    "right" : "return valueAxis;",
    "info" : "ReturnStatement[137781-137798]:ReturnStatement[137781-137798]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[138087-138096]:Modifier[138087-138096]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[138097-138101]:PrimitiveType[138097-138101]"
  }, {
    "left" : "drawDomainGridlines",
    "right" : "drawDomainGridlines",
    "info" : "SimpleName[138102-138121]:SimpleName[138102-138121]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[138122-138135]:SingleVariableDeclaration[138122-138135]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[138137-138157]:SingleVariableDeclaration[138137-138157]"
  }, {
    "left" : "List ticks",
    "right" : "List ticks",
    "info" : "SingleVariableDeclaration[138199-138209]:SingleVariableDeclaration[138199-138209]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138211-139754]:Block[138211-139754]"
  }, {
    "left" : "if (getRenderer() == null)",
    "right" : "if (getRenderer() == null)",
    "info" : "IfStatement[138265-138325]:IfStatement[138265-138325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138292-138325]:Block[138292-138325]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[138307-138314]:ReturnStatement[138307-138314]"
  }, {
    "left" : "if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible())",
    "right" : "if (isDomainGridlinesVisible() || isDomainMinorGridlinesVisible())",
    "info" : "IfStatement[138387-139747]:IfStatement[138387-139747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138454-139747]:Block[138454-139747]"
  }, {
    "left" : "Stroke gridStroke = null;",
    "right" : "Stroke gridStroke = null;",
    "info" : "VariableDeclarationStatement[138469-138494]:VariableDeclarationStatement[138469-138494]"
  }, {
    "left" : "Paint gridPaint = null;",
    "right" : "Paint gridPaint = null;",
    "info" : "VariableDeclarationStatement[138508-138531]:VariableDeclarationStatement[138508-138531]"
  }, {
    "left" : "Iterator iterator = ticks.iterator();",
    "right" : "Iterator iterator = ticks.iterator();",
    "info" : "VariableDeclarationStatement[138545-138582]:VariableDeclarationStatement[138545-138582]"
  }, {
    "left" : "boolean paintLine = false;",
    "right" : "boolean paintLine = false;",
    "info" : "VariableDeclarationStatement[138596-138622]:VariableDeclarationStatement[138596-138622]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[138636-139736]:WhileStatement[138636-139736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138663-139736]:Block[138663-139736]"
  }, {
    "left" : "paintLine = false;",
    "right" : "paintLine = false;",
    "info" : "ExpressionStatement[138682-138700]:ExpressionStatement[138682-138700]"
  }, {
    "left" : "ValueTick tick = (ValueTick) iterator.next();",
    "right" : "ValueTick tick = (ValueTick) iterator.next();",
    "info" : "VariableDeclarationStatement[138718-138763]:VariableDeclarationStatement[138718-138763]"
  }, {
    "left" : "if ((tick.getTickType() == TickType.MINOR)\r\n                        && isDomainMinorGridlinesVisible())",
    "right" : "if ((tick.getTickType() == TickType.MINOR)\r\n                        && isDomainMinorGridlinesVisible())",
    "info" : "IfStatement[138781-139375]:IfStatement[138781-139375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138885-139074]:Block[138885-139074]"
  }, {
    "left" : "gridStroke = getDomainMinorGridlineStroke();",
    "right" : "gridStroke = getDomainMinorGridlineStroke();",
    "info" : "ExpressionStatement[138908-138952]:ExpressionStatement[138908-138952]"
  }, {
    "left" : "gridPaint = getDomainMinorGridlinePaint();",
    "right" : "gridPaint = getDomainMinorGridlinePaint();",
    "info" : "ExpressionStatement[138974-139016]:ExpressionStatement[138974-139016]"
  }, {
    "left" : "paintLine = true;",
    "right" : "paintLine = true;",
    "info" : "ExpressionStatement[139038-139055]:ExpressionStatement[139038-139055]"
  }, {
    "left" : "if ((tick.getTickType() == TickType.MAJOR)\r\n                        && isDomainGridlinesVisible())",
    "right" : "if ((tick.getTickType() == TickType.MAJOR)\r\n                        && isDomainGridlinesVisible())",
    "info" : "IfStatement[139097-139375]:IfStatement[139097-139375]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[139196-139375]:Block[139196-139375]"
  }, {
    "left" : "gridStroke = getDomainGridlineStroke();",
    "right" : "gridStroke = getDomainGridlineStroke();",
    "info" : "ExpressionStatement[139219-139258]:ExpressionStatement[139219-139258]"
  }, {
    "left" : "gridPaint = getDomainGridlinePaint();",
    "right" : "gridPaint = getDomainGridlinePaint();",
    "info" : "ExpressionStatement[139280-139317]:ExpressionStatement[139280-139317]"
  }, {
    "left" : "paintLine = true;",
    "right" : "paintLine = true;",
    "info" : "ExpressionStatement[139339-139356]:ExpressionStatement[139339-139356]"
  }, {
    "left" : "XYItemRenderer r = getRenderer();",
    "right" : "XYItemRenderer r = getRenderer();",
    "info" : "VariableDeclarationStatement[139393-139426]:VariableDeclarationStatement[139393-139426]"
  }, {
    "left" : "if ((r instanceof AbstractXYItemRenderer) && paintLine)",
    "right" : "if ((r instanceof AbstractXYItemRenderer) && paintLine)",
    "info" : "IfStatement[139444-139721]:IfStatement[139444-139721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[139500-139721]:Block[139500-139721]"
  }, {
    "left" : "((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\r\n                            getDomainAxis(), dataArea, tick.getValue(),\r\n                            gridPaint, gridStroke);",
    "right" : "((AbstractXYItemRenderer) r).drawDomainLine(g2, this,\r\n                            getDomainAxis(), dataArea, tick.getValue(),\r\n                            gridPaint, gridStroke);",
    "info" : "ExpressionStatement[139523-139702]:ExpressionStatement[139523-139702]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[140062-140071]:Modifier[140062-140071]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[140072-140076]:PrimitiveType[140072-140076]"
  }, {
    "left" : "drawRangeGridlines",
    "right" : "drawRangeGridlines",
    "info" : "SimpleName[140077-140095]:SimpleName[140077-140095]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[140096-140109]:SingleVariableDeclaration[140096-140109]"
  }, {
    "left" : "Rectangle2D area",
    "right" : "Rectangle2D area",
    "info" : "SingleVariableDeclaration[140111-140127]:SingleVariableDeclaration[140111-140127]"
  }, {
    "left" : "List ticks",
    "right" : "List ticks",
    "info" : "SingleVariableDeclaration[140168-140178]:SingleVariableDeclaration[140168-140178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140180-141844]:Block[140180-141844]"
  }, {
    "left" : "if (getRenderer() == null)",
    "right" : "if (getRenderer() == null)",
    "info" : "IfStatement[140234-140294]:IfStatement[140234-140294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140261-140294]:Block[140261-140294]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[140276-140283]:ReturnStatement[140276-140283]"
  }, {
    "left" : "if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible())",
    "right" : "if (isRangeGridlinesVisible() || isRangeMinorGridlinesVisible())",
    "info" : "IfStatement[140355-141837]:IfStatement[140355-141837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140420-141837]:Block[140420-141837]"
  }, {
    "left" : "Stroke gridStroke = null;",
    "right" : "Stroke gridStroke = null;",
    "info" : "VariableDeclarationStatement[140435-140460]:VariableDeclarationStatement[140435-140460]"
  }, {
    "left" : "Paint gridPaint = null;",
    "right" : "Paint gridPaint = null;",
    "info" : "VariableDeclarationStatement[140474-140497]:VariableDeclarationStatement[140474-140497]"
  }, {
    "left" : "ValueAxis axis = getRangeAxis();",
    "right" : "ValueAxis axis = getRangeAxis();",
    "info" : "VariableDeclarationStatement[140511-140543]:VariableDeclarationStatement[140511-140543]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[140557-141826]:IfStatement[140557-141826]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140575-141826]:Block[140575-141826]"
  }, {
    "left" : "Iterator iterator = ticks.iterator();",
    "right" : "Iterator iterator = ticks.iterator();",
    "info" : "VariableDeclarationStatement[140594-140631]:VariableDeclarationStatement[140594-140631]"
  }, {
    "left" : "boolean paintLine = false;",
    "right" : "boolean paintLine = false;",
    "info" : "VariableDeclarationStatement[140649-140675]:VariableDeclarationStatement[140649-140675]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[140693-141811]:WhileStatement[140693-141811]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140720-141811]:Block[140720-141811]"
  }, {
    "left" : "paintLine = false;",
    "right" : "paintLine = false;",
    "info" : "ExpressionStatement[140743-140761]:ExpressionStatement[140743-140761]"
  }, {
    "left" : "ValueTick tick = (ValueTick) iterator.next();",
    "right" : "ValueTick tick = (ValueTick) iterator.next();",
    "info" : "VariableDeclarationStatement[140783-140828]:VariableDeclarationStatement[140783-140828]"
  }, {
    "left" : "if ((tick.getTickType() == TickType.MINOR)\r\n                            && isRangeMinorGridlinesVisible())",
    "right" : "if ((tick.getTickType() == TickType.MINOR)\r\n                            && isRangeMinorGridlinesVisible())",
    "info" : "IfStatement[140850-141482]:IfStatement[140850-141482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140957-141160]:Block[140957-141160]"
  }, {
    "left" : "gridStroke = getRangeMinorGridlineStroke();",
    "right" : "gridStroke = getRangeMinorGridlineStroke();",
    "info" : "ExpressionStatement[140984-141027]:ExpressionStatement[140984-141027]"
  }, {
    "left" : "gridPaint = getRangeMinorGridlinePaint();",
    "right" : "gridPaint = getRangeMinorGridlinePaint();",
    "info" : "ExpressionStatement[141053-141094]:ExpressionStatement[141053-141094]"
  }, {
    "left" : "paintLine = true;",
    "right" : "paintLine = true;",
    "info" : "ExpressionStatement[141120-141137]:ExpressionStatement[141120-141137]"
  }, {
    "left" : "if ((tick.getTickType() == TickType.MAJOR)\r\n                            && isRangeGridlinesVisible())",
    "right" : "if ((tick.getTickType() == TickType.MAJOR)\r\n                            && isRangeGridlinesVisible())",
    "info" : "IfStatement[141187-141482]:IfStatement[141187-141482]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141289-141482]:Block[141289-141482]"
  }, {
    "left" : "gridStroke = getRangeGridlineStroke();",
    "right" : "gridStroke = getRangeGridlineStroke();",
    "info" : "ExpressionStatement[141316-141354]:ExpressionStatement[141316-141354]"
  }, {
    "left" : "gridPaint = getRangeGridlinePaint();",
    "right" : "gridPaint = getRangeGridlinePaint();",
    "info" : "ExpressionStatement[141380-141416]:ExpressionStatement[141380-141416]"
  }, {
    "left" : "paintLine = true;",
    "right" : "paintLine = true;",
    "info" : "ExpressionStatement[141442-141459]:ExpressionStatement[141442-141459]"
  }, {
    "left" : "if ((tick.getValue() != 0.0\r\n                            || !isRangeZeroBaselineVisible()) && paintLine)",
    "right" : "if ((tick.getValue() != 0.0\r\n                            || !isRangeZeroBaselineVisible()) && paintLine)",
    "info" : "IfStatement[141504-141792]:IfStatement[141504-141792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141609-141792]:Block[141609-141792]"
  }, {
    "left" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(),\r\n                                area, tick.getValue(), gridPaint, gridStroke);",
    "right" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(),\r\n                                area, tick.getValue(), gridPaint, gridStroke);",
    "info" : "ExpressionStatement[141636-141769]:ExpressionStatement[141636-141769]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[142120-142129]:Modifier[142120-142129]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[142130-142134]:PrimitiveType[142130-142134]"
  }, {
    "left" : "drawZeroDomainBaseline",
    "right" : "drawZeroDomainBaseline",
    "info" : "SimpleName[142135-142157]:SimpleName[142135-142157]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[142158-142171]:SingleVariableDeclaration[142158-142171]"
  }, {
    "left" : "Rectangle2D area",
    "right" : "Rectangle2D area",
    "info" : "SingleVariableDeclaration[142173-142189]:SingleVariableDeclaration[142173-142189]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142191-142475]:Block[142191-142475]"
  }, {
    "left" : "if (isDomainZeroBaselineVisible())",
    "right" : "if (isDomainZeroBaselineVisible())",
    "info" : "IfStatement[142202-142468]:IfStatement[142202-142468]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142237-142468]:Block[142237-142468]"
  }, {
    "left" : "XYItemRenderer r = getRenderer();",
    "right" : "XYItemRenderer r = getRenderer();",
    "info" : "VariableDeclarationStatement[142252-142285]:VariableDeclarationStatement[142252-142285]"
  }, {
    "left" : "r.drawDomainLine(g2, this, getDomainAxis(), area, 0.0,\r\n                    this.domainZeroBaselinePaint,\r\n                    this.domainZeroBaselineStroke);",
    "right" : "r.drawDomainLine(g2, this, getDomainAxis(), area, 0.0,\r\n                    this.domainZeroBaselinePaint,\r\n                    this.domainZeroBaselineStroke);",
    "info" : "ExpressionStatement[142299-142457]:ExpressionStatement[142299-142457]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[142720-142729]:Modifier[142720-142729]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[142730-142734]:PrimitiveType[142730-142734]"
  }, {
    "left" : "drawZeroRangeBaseline",
    "right" : "drawZeroRangeBaseline",
    "info" : "SimpleName[142735-142756]:SimpleName[142735-142756]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[142757-142770]:SingleVariableDeclaration[142757-142770]"
  }, {
    "left" : "Rectangle2D area",
    "right" : "Rectangle2D area",
    "info" : "SingleVariableDeclaration[142772-142788]:SingleVariableDeclaration[142772-142788]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142790-143013]:Block[142790-143013]"
  }, {
    "left" : "if (isRangeZeroBaselineVisible())",
    "right" : "if (isRangeZeroBaselineVisible())",
    "info" : "IfStatement[142801-143006]:IfStatement[142801-143006]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142835-143006]:Block[142835-143006]"
  }, {
    "left" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(), area, 0.0,\r\n                    this.rangeZeroBaselinePaint, this.rangeZeroBaselineStroke);",
    "right" : "getRenderer().drawRangeLine(g2, this, getRangeAxis(), area, 0.0,\r\n                    this.rangeZeroBaselinePaint, this.rangeZeroBaselineStroke);",
    "info" : "ExpressionStatement[142850-142995]:ExpressionStatement[142850-142995]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[143218-143224]:Modifier[143218-143224]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[143225-143229]:PrimitiveType[143225-143229]"
  }, {
    "left" : "drawAnnotations",
    "right" : "drawAnnotations",
    "info" : "SimpleName[143230-143245]:SimpleName[143230-143245]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[143246-143259]:SingleVariableDeclaration[143246-143259]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[143294-143314]:SingleVariableDeclaration[143294-143314]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[143349-143371]:SingleVariableDeclaration[143349-143371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143373-143731]:Block[143373-143731]"
  }, {
    "left" : "Iterator iterator = this.annotations.iterator();",
    "right" : "Iterator iterator = this.annotations.iterator();",
    "info" : "VariableDeclarationStatement[143386-143434]:VariableDeclarationStatement[143386-143434]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[143444-143722]:WhileStatement[143444-143722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143471-143722]:Block[143471-143722]"
  }, {
    "left" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
    "right" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
    "info" : "VariableDeclarationStatement[143486-143543]:VariableDeclarationStatement[143486-143543]"
  }, {
    "left" : "ValueAxis xAxis = getDomainAxis();",
    "right" : "ValueAxis xAxis = getDomainAxis();",
    "info" : "VariableDeclarationStatement[143557-143591]:VariableDeclarationStatement[143557-143591]"
  }, {
    "left" : "ValueAxis yAxis = getRangeAxis();",
    "right" : "ValueAxis yAxis = getRangeAxis();",
    "info" : "VariableDeclarationStatement[143605-143638]:VariableDeclarationStatement[143605-143638]"
  }, {
    "left" : "annotation.draw(g2, this, dataArea, xAxis, yAxis, 0, info);",
    "right" : "annotation.draw(g2, this, dataArea, xAxis, yAxis, 0, info);",
    "info" : "ExpressionStatement[143652-143711]:ExpressionStatement[143652-143711]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[144084-144093]:Modifier[144084-144093]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[144094-144098]:PrimitiveType[144094-144098]"
  }, {
    "left" : "drawDomainMarkers",
    "right" : "drawDomainMarkers",
    "info" : "SimpleName[144099-144116]:SimpleName[144099-144116]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[144117-144130]:SingleVariableDeclaration[144117-144130]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[144132-144152]:SingleVariableDeclaration[144132-144152]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[144192-144201]:SingleVariableDeclaration[144192-144201]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[144203-144214]:SingleVariableDeclaration[144203-144214]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144216-144947]:Block[144216-144947]"
  }, {
    "left" : "XYItemRenderer r = getRenderer(index);",
    "right" : "XYItemRenderer r = getRenderer(index);",
    "info" : "VariableDeclarationStatement[144229-144267]:VariableDeclarationStatement[144229-144267]"
  }, {
    "left" : "if (r == null)",
    "right" : "if (r == null)",
    "info" : "IfStatement[144277-144325]:IfStatement[144277-144325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144292-144325]:Block[144292-144325]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[144307-144314]:ReturnStatement[144307-144314]"
  }, {
    "left" : "if (index >= getDatasetCount())",
    "right" : "if (index >= getDatasetCount())",
    "info" : "IfStatement[144454-144519]:IfStatement[144454-144519]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144486-144519]:Block[144486-144519]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[144501-144508]:ReturnStatement[144501-144508]"
  }, {
    "left" : "Collection markers = getDomainMarkers(index, layer);",
    "right" : "Collection markers = getDomainMarkers(index, layer);",
    "info" : "VariableDeclarationStatement[144529-144581]:VariableDeclarationStatement[144529-144581]"
  }, {
    "left" : "ValueAxis axis = getDomainAxisForDataset(index);",
    "right" : "ValueAxis axis = getDomainAxisForDataset(index);",
    "info" : "VariableDeclarationStatement[144591-144639]:VariableDeclarationStatement[144591-144639]"
  }, {
    "left" : "if (markers != null && axis != null)",
    "right" : "if (markers != null && axis != null)",
    "info" : "IfStatement[144649-144938]:IfStatement[144649-144938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144686-144938]:Block[144686-144938]"
  }, {
    "left" : "Iterator iterator = markers.iterator();",
    "right" : "Iterator iterator = markers.iterator();",
    "info" : "VariableDeclarationStatement[144701-144740]:VariableDeclarationStatement[144701-144740]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[144754-144927]:WhileStatement[144754-144927]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144781-144927]:Block[144781-144927]"
  }, {
    "left" : "Marker marker = (Marker) iterator.next();",
    "right" : "Marker marker = (Marker) iterator.next();",
    "info" : "VariableDeclarationStatement[144800-144841]:VariableDeclarationStatement[144800-144841]"
  }, {
    "left" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
    "right" : "r.drawDomainMarker(g2, this, axis, marker, dataArea);",
    "info" : "ExpressionStatement[144859-144912]:ExpressionStatement[144859-144912]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[145302-145311]:Modifier[145302-145311]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[145312-145316]:PrimitiveType[145312-145316]"
  }, {
    "left" : "drawRangeMarkers",
    "right" : "drawRangeMarkers",
    "info" : "SimpleName[145317-145333]:SimpleName[145317-145333]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[145334-145347]:SingleVariableDeclaration[145334-145347]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[145349-145369]:SingleVariableDeclaration[145349-145369]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[145408-145417]:SingleVariableDeclaration[145408-145417]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[145419-145430]:SingleVariableDeclaration[145419-145430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145432-146158]:Block[145432-146158]"
  }, {
    "left" : "XYItemRenderer r = getRenderer(index);",
    "right" : "XYItemRenderer r = getRenderer(index);",
    "info" : "VariableDeclarationStatement[145445-145483]:VariableDeclarationStatement[145445-145483]"
  }, {
    "left" : "if (r == null)",
    "right" : "if (r == null)",
    "info" : "IfStatement[145493-145541]:IfStatement[145493-145541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145508-145541]:Block[145508-145541]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[145523-145530]:ReturnStatement[145523-145530]"
  }, {
    "left" : "if (index >= getDatasetCount())",
    "right" : "if (index >= getDatasetCount())",
    "info" : "IfStatement[145670-145735]:IfStatement[145670-145735]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145702-145735]:Block[145702-145735]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[145717-145724]:ReturnStatement[145717-145724]"
  }, {
    "left" : "Collection markers = getRangeMarkers(index, layer);",
    "right" : "Collection markers = getRangeMarkers(index, layer);",
    "info" : "VariableDeclarationStatement[145745-145796]:VariableDeclarationStatement[145745-145796]"
  }, {
    "left" : "ValueAxis axis = getRangeAxisForDataset(index);",
    "right" : "ValueAxis axis = getRangeAxisForDataset(index);",
    "info" : "VariableDeclarationStatement[145806-145853]:VariableDeclarationStatement[145806-145853]"
  }, {
    "left" : "if (markers != null && axis != null)",
    "right" : "if (markers != null && axis != null)",
    "info" : "IfStatement[145863-146151]:IfStatement[145863-146151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145900-146151]:Block[145900-146151]"
  }, {
    "left" : "Iterator iterator = markers.iterator();",
    "right" : "Iterator iterator = markers.iterator();",
    "info" : "VariableDeclarationStatement[145915-145954]:VariableDeclarationStatement[145915-145954]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[145968-146140]:WhileStatement[145968-146140]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145995-146140]:Block[145995-146140]"
  }, {
    "left" : "Marker marker = (Marker) iterator.next();",
    "right" : "Marker marker = (Marker) iterator.next();",
    "info" : "VariableDeclarationStatement[146014-146055]:VariableDeclarationStatement[146014-146055]"
  }, {
    "left" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
    "right" : "r.drawRangeMarker(g2, this, axis, marker, dataArea);",
    "info" : "ExpressionStatement[146073-146125]:ExpressionStatement[146073-146125]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[146429-146435]:Modifier[146429-146435]"
  }, {
    "left" : "Collection",
    "right" : "Collection",
    "info" : "SimpleType[146436-146446]:SimpleType[146436-146446]"
  }, {
    "left" : "getDomainMarkers",
    "right" : "getDomainMarkers",
    "info" : "SimpleName[146447-146463]:SimpleName[146447-146463]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[146464-146475]:SingleVariableDeclaration[146464-146475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146477-146529]:Block[146477-146529]"
  }, {
    "left" : "return getDomainMarkers(0, layer);",
    "right" : "return getDomainMarkers(0, layer);",
    "info" : "ReturnStatement[146488-146522]:ReturnStatement[146488-146522]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[146799-146805]:Modifier[146799-146805]"
  }, {
    "left" : "Collection",
    "right" : "Collection",
    "info" : "SimpleType[146806-146816]:SimpleType[146806-146816]"
  }, {
    "left" : "getRangeMarkers",
    "right" : "getRangeMarkers",
    "info" : "SimpleName[146817-146832]:SimpleName[146817-146832]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[146833-146844]:SingleVariableDeclaration[146833-146844]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146846-146897]:Block[146846-146897]"
  }, {
    "left" : "return getRangeMarkers(0, layer);",
    "right" : "return getRangeMarkers(0, layer);",
    "info" : "ReturnStatement[146857-146890]:ReturnStatement[146857-146890]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[147226-147232]:Modifier[147226-147232]"
  }, {
    "left" : "Collection",
    "right" : "Collection",
    "info" : "SimpleType[147233-147243]:SimpleType[147233-147243]"
  }, {
    "left" : "getDomainMarkers",
    "right" : "getDomainMarkers",
    "info" : "SimpleName[147244-147260]:SimpleName[147244-147260]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[147261-147270]:SingleVariableDeclaration[147261-147270]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[147272-147283]:SingleVariableDeclaration[147272-147283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147285-147762]:Block[147285-147762]"
  }, {
    "left" : "Collection result = null;",
    "right" : "Collection result = null;",
    "info" : "VariableDeclarationStatement[147296-147321]:VariableDeclarationStatement[147296-147321]"
  }, {
    "left" : "Integer key = new Integer(index);",
    "right" : "Integer key = new Integer(index);",
    "info" : "VariableDeclarationStatement[147331-147364]:VariableDeclarationStatement[147331-147364]"
  }, {
    "left" : "if (layer == Layer.FOREGROUND)",
    "right" : "if (layer == Layer.FOREGROUND)",
    "info" : "IfStatement[147374-147623]:IfStatement[147374-147623]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147405-147491]:Block[147405-147491]"
  }, {
    "left" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
    "right" : "result = (Collection) this.foregroundDomainMarkers.get(key);",
    "info" : "ExpressionStatement[147420-147480]:ExpressionStatement[147420-147480]"
  }, {
    "left" : "if (layer == Layer.BACKGROUND)",
    "right" : "if (layer == Layer.BACKGROUND)",
    "info" : "IfStatement[147506-147623]:IfStatement[147506-147623]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147537-147623]:Block[147537-147623]"
  }, {
    "left" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
    "right" : "result = (Collection) this.backgroundDomainMarkers.get(key);",
    "info" : "ExpressionStatement[147552-147612]:ExpressionStatement[147552-147612]"
  }, {
    "left" : "if (result != null)",
    "right" : "if (result != null)",
    "info" : "IfStatement[147633-147731]:IfStatement[147633-147731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147653-147731]:Block[147653-147731]"
  }, {
    "left" : "result = Collections.unmodifiableCollection(result);",
    "right" : "result = Collections.unmodifiableCollection(result);",
    "info" : "ExpressionStatement[147668-147720]:ExpressionStatement[147668-147720]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[147741-147755]:ReturnStatement[147741-147755]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[148091-148097]:Modifier[148091-148097]"
  }, {
    "left" : "Collection",
    "right" : "Collection",
    "info" : "SimpleType[148098-148108]:SimpleType[148098-148108]"
  }, {
    "left" : "getRangeMarkers",
    "right" : "getRangeMarkers",
    "info" : "SimpleName[148109-148124]:SimpleName[148109-148124]"
  }, {
    "left" : "int index",
    "right" : "int index",
    "info" : "SingleVariableDeclaration[148125-148134]:SingleVariableDeclaration[148125-148134]"
  }, {
    "left" : "Layer layer",
    "right" : "Layer layer",
    "info" : "SingleVariableDeclaration[148136-148147]:SingleVariableDeclaration[148136-148147]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[148149-148624]:Block[148149-148624]"
  }, {
    "left" : "Collection result = null;",
    "right" : "Collection result = null;",
    "info" : "VariableDeclarationStatement[148160-148185]:VariableDeclarationStatement[148160-148185]"
  }, {
    "left" : "Integer key = new Integer(index);",
    "right" : "Integer key = new Integer(index);",
    "info" : "VariableDeclarationStatement[148195-148228]:VariableDeclarationStatement[148195-148228]"
  }, {
    "left" : "if (layer == Layer.FOREGROUND)",
    "right" : "if (layer == Layer.FOREGROUND)",
    "info" : "IfStatement[148238-148485]:IfStatement[148238-148485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[148269-148354]:Block[148269-148354]"
  }, {
    "left" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
    "right" : "result = (Collection) this.foregroundRangeMarkers.get(key);",
    "info" : "ExpressionStatement[148284-148343]:ExpressionStatement[148284-148343]"
  }, {
    "left" : "if (layer == Layer.BACKGROUND)",
    "right" : "if (layer == Layer.BACKGROUND)",
    "info" : "IfStatement[148369-148485]:IfStatement[148369-148485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[148400-148485]:Block[148400-148485]"
  }, {
    "left" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
    "right" : "result = (Collection) this.backgroundRangeMarkers.get(key);",
    "info" : "ExpressionStatement[148415-148474]:ExpressionStatement[148415-148474]"
  }, {
    "left" : "if (result != null)",
    "right" : "if (result != null)",
    "info" : "IfStatement[148495-148593]:IfStatement[148495-148593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[148515-148593]:Block[148515-148593]"
  }, {
    "left" : "result = Collections.unmodifiableCollection(result);",
    "right" : "result = Collections.unmodifiableCollection(result);",
    "info" : "ExpressionStatement[148530-148582]:ExpressionStatement[148530-148582]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[148603-148617]:ReturnStatement[148603-148617]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[148977-148986]:Modifier[148977-148986]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[148987-148991]:PrimitiveType[148987-148991]"
  }, {
    "left" : "drawHorizontalLine",
    "right" : "drawHorizontalLine",
    "info" : "SimpleName[148992-149010]:SimpleName[148992-149010]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[149011-149024]:SingleVariableDeclaration[149011-149024]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[149026-149046]:SingleVariableDeclaration[149026-149046]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[149087-149099]:SingleVariableDeclaration[149087-149099]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[149101-149114]:SingleVariableDeclaration[149101-149114]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[149155-149166]:SingleVariableDeclaration[149155-149166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[149168-149685]:Block[149168-149685]"
  }, {
    "left" : "ValueAxis axis = getRangeAxis();",
    "right" : "ValueAxis axis = getRangeAxis();",
    "info" : "VariableDeclarationStatement[149181-149213]:VariableDeclarationStatement[149181-149213]"
  }, {
    "left" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
    "right" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[149223-149324]:IfStatement[149223-149324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[149275-149324]:Block[149275-149324]"
  }, {
    "left" : "axis = getDomainAxis();",
    "right" : "axis = getDomainAxis();",
    "info" : "ExpressionStatement[149290-149313]:ExpressionStatement[149290-149313]"
  }, {
    "left" : "if (axis.getRange().contains(value))",
    "right" : "if (axis.getRange().contains(value))",
    "info" : "IfStatement[149334-149676]:IfStatement[149334-149676]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[149371-149676]:Block[149371-149676]"
  }, {
    "left" : "double yy = axis.valueToJava2D(value, dataArea, RectangleEdge.LEFT);",
    "right" : "double yy = axis.valueToJava2D(value, dataArea, RectangleEdge.LEFT);",
    "info" : "VariableDeclarationStatement[149386-149454]:VariableDeclarationStatement[149386-149454]"
  }, {
    "left" : "Line2D line = new Line2D.Double(dataArea.getMinX(), yy,\r\n                    dataArea.getMaxX(), yy);",
    "right" : "Line2D line = new Line2D.Double(dataArea.getMinX(), yy,\r\n                    dataArea.getMaxX(), yy);",
    "info" : "VariableDeclarationStatement[149468-149569]:VariableDeclarationStatement[149468-149569]"
  }, {
    "left" : "g2.setStroke(stroke);",
    "right" : "g2.setStroke(stroke);",
    "info" : "ExpressionStatement[149583-149604]:ExpressionStatement[149583-149604]"
  }, {
    "left" : "g2.setPaint(paint);",
    "right" : "g2.setPaint(paint);",
    "info" : "ExpressionStatement[149618-149637]:ExpressionStatement[149618-149637]"
  }, {
    "left" : "g2.draw(line);",
    "right" : "g2.draw(line);",
    "info" : "ExpressionStatement[149651-149665]:ExpressionStatement[149651-149665]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[150154-150163]:Modifier[150154-150163]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[150164-150168]:PrimitiveType[150164-150168]"
  }, {
    "left" : "drawDomainCrosshair",
    "right" : "drawDomainCrosshair",
    "info" : "SimpleName[150169-150188]:SimpleName[150169-150188]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[150189-150202]:SingleVariableDeclaration[150189-150202]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[150204-150224]:SingleVariableDeclaration[150204-150224]"
  }, {
    "left" : "PlotOrientation orientation",
    "right" : "PlotOrientation orientation",
    "info" : "SingleVariableDeclaration[150239-150266]:SingleVariableDeclaration[150239-150266]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[150268-150280]:SingleVariableDeclaration[150268-150280]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[150282-150296]:SingleVariableDeclaration[150282-150296]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[150311-150324]:SingleVariableDeclaration[150311-150324]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[150326-150337]:SingleVariableDeclaration[150326-150337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150339-151105]:Block[150339-151105]"
  }, {
    "left" : "if (axis.getRange().contains(value))",
    "right" : "if (axis.getRange().contains(value))",
    "info" : "IfStatement[150352-151096]:IfStatement[150352-151096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150389-151096]:Block[150389-151096]"
  }, {
    "left" : "Line2D line = null;",
    "right" : "Line2D line = null;",
    "info" : "VariableDeclarationStatement[150404-150423]:VariableDeclarationStatement[150404-150423]"
  }, {
    "left" : "if (orientation == PlotOrientation.VERTICAL)",
    "right" : "if (orientation == PlotOrientation.VERTICAL)",
    "info" : "IfStatement[150437-150989]:IfStatement[150437-150989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150482-150727]:Block[150482-150727]"
  }, {
    "left" : "double xx = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.BOTTOM);",
    "right" : "double xx = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.BOTTOM);",
    "info" : "VariableDeclarationStatement[150501-150596]:VariableDeclarationStatement[150501-150596]"
  }, {
    "left" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx,\r\n                        dataArea.getMaxY());",
    "right" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx,\r\n                        dataArea.getMaxY());",
    "info" : "ExpressionStatement[150614-150712]:ExpressionStatement[150614-150712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150746-150989]:Block[150746-150989]"
  }, {
    "left" : "double yy = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.LEFT);",
    "right" : "double yy = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.LEFT);",
    "info" : "VariableDeclarationStatement[150765-150858]:VariableDeclarationStatement[150765-150858]"
  }, {
    "left" : "line = new Line2D.Double(dataArea.getMinX(), yy,\r\n                        dataArea.getMaxX(), yy);",
    "right" : "line = new Line2D.Double(dataArea.getMinX(), yy,\r\n                        dataArea.getMaxX(), yy);",
    "info" : "ExpressionStatement[150876-150974]:ExpressionStatement[150876-150974]"
  }, {
    "left" : "g2.setStroke(stroke);",
    "right" : "g2.setStroke(stroke);",
    "info" : "ExpressionStatement[151003-151024]:ExpressionStatement[151003-151024]"
  }, {
    "left" : "g2.setPaint(paint);",
    "right" : "g2.setPaint(paint);",
    "info" : "ExpressionStatement[151038-151057]:ExpressionStatement[151038-151057]"
  }, {
    "left" : "g2.draw(line);",
    "right" : "g2.draw(line);",
    "info" : "ExpressionStatement[151071-151085]:ExpressionStatement[151071-151085]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[151444-151453]:Modifier[151444-151453]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[151454-151458]:PrimitiveType[151454-151458]"
  }, {
    "left" : "drawVerticalLine",
    "right" : "drawVerticalLine",
    "info" : "SimpleName[151459-151475]:SimpleName[151459-151475]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[151476-151489]:SingleVariableDeclaration[151476-151489]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[151491-151511]:SingleVariableDeclaration[151491-151511]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[151550-151562]:SingleVariableDeclaration[151550-151562]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[151564-151577]:SingleVariableDeclaration[151564-151577]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[151579-151590]:SingleVariableDeclaration[151579-151590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[151592-152132]:Block[151592-152132]"
  }, {
    "left" : "ValueAxis axis = getDomainAxis();",
    "right" : "ValueAxis axis = getDomainAxis();",
    "info" : "VariableDeclarationStatement[151605-151638]:VariableDeclarationStatement[151605-151638]"
  }, {
    "left" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
    "right" : "if (getOrientation() == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[151648-151748]:IfStatement[151648-151748]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[151700-151748]:Block[151700-151748]"
  }, {
    "left" : "axis = getRangeAxis();",
    "right" : "axis = getRangeAxis();",
    "info" : "ExpressionStatement[151715-151737]:ExpressionStatement[151715-151737]"
  }, {
    "left" : "if (axis.getRange().contains(value))",
    "right" : "if (axis.getRange().contains(value))",
    "info" : "IfStatement[151758-152123]:IfStatement[151758-152123]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[151795-152123]:Block[151795-152123]"
  }, {
    "left" : "double xx = axis.valueToJava2D(value, dataArea,\r\n                    RectangleEdge.BOTTOM);",
    "right" : "double xx = axis.valueToJava2D(value, dataArea,\r\n                    RectangleEdge.BOTTOM);",
    "info" : "VariableDeclarationStatement[151810-151901]:VariableDeclarationStatement[151810-151901]"
  }, {
    "left" : "Line2D line = new Line2D.Double(xx, dataArea.getMinY(), xx,\r\n                    dataArea.getMaxY());",
    "right" : "Line2D line = new Line2D.Double(xx, dataArea.getMinY(), xx,\r\n                    dataArea.getMaxY());",
    "info" : "VariableDeclarationStatement[151915-152016]:VariableDeclarationStatement[151915-152016]"
  }, {
    "left" : "g2.setStroke(stroke);",
    "right" : "g2.setStroke(stroke);",
    "info" : "ExpressionStatement[152030-152051]:ExpressionStatement[152030-152051]"
  }, {
    "left" : "g2.setPaint(paint);",
    "right" : "g2.setPaint(paint);",
    "info" : "ExpressionStatement[152065-152084]:ExpressionStatement[152065-152084]"
  }, {
    "left" : "g2.draw(line);",
    "right" : "g2.draw(line);",
    "info" : "ExpressionStatement[152098-152112]:ExpressionStatement[152098-152112]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[152600-152609]:Modifier[152600-152609]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[152610-152614]:PrimitiveType[152610-152614]"
  }, {
    "left" : "drawRangeCrosshair",
    "right" : "drawRangeCrosshair",
    "info" : "SimpleName[152615-152633]:SimpleName[152615-152633]"
  }, {
    "left" : "Graphics2D g2",
    "right" : "Graphics2D g2",
    "info" : "SingleVariableDeclaration[152634-152647]:SingleVariableDeclaration[152634-152647]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[152649-152669]:SingleVariableDeclaration[152649-152669]"
  }, {
    "left" : "PlotOrientation orientation",
    "right" : "PlotOrientation orientation",
    "info" : "SingleVariableDeclaration[152684-152711]:SingleVariableDeclaration[152684-152711]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[152713-152725]:SingleVariableDeclaration[152713-152725]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[152727-152741]:SingleVariableDeclaration[152727-152741]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[152756-152769]:SingleVariableDeclaration[152756-152769]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[152771-152782]:SingleVariableDeclaration[152771-152782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152784-153552]:Block[152784-153552]"
  }, {
    "left" : "if (axis.getRange().contains(value))",
    "right" : "if (axis.getRange().contains(value))",
    "info" : "IfStatement[152797-153543]:IfStatement[152797-153543]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152834-153543]:Block[152834-153543]"
  }, {
    "left" : "Line2D line = null;",
    "right" : "Line2D line = null;",
    "info" : "VariableDeclarationStatement[152849-152868]:VariableDeclarationStatement[152849-152868]"
  }, {
    "left" : "if (orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[152882-153436]:IfStatement[152882-153436]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152929-153174]:Block[152929-153174]"
  }, {
    "left" : "double xx = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.BOTTOM);",
    "right" : "double xx = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.BOTTOM);",
    "info" : "VariableDeclarationStatement[152948-153043]:VariableDeclarationStatement[152948-153043]"
  }, {
    "left" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx,\r\n                        dataArea.getMaxY());",
    "right" : "line = new Line2D.Double(xx, dataArea.getMinY(), xx,\r\n                        dataArea.getMaxY());",
    "info" : "ExpressionStatement[153061-153159]:ExpressionStatement[153061-153159]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[153193-153436]:Block[153193-153436]"
  }, {
    "left" : "double yy = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.LEFT);",
    "right" : "double yy = axis.valueToJava2D(value, dataArea,\r\n                        RectangleEdge.LEFT);",
    "info" : "VariableDeclarationStatement[153212-153305]:VariableDeclarationStatement[153212-153305]"
  }, {
    "left" : "line = new Line2D.Double(dataArea.getMinX(), yy,\r\n                        dataArea.getMaxX(), yy);",
    "right" : "line = new Line2D.Double(dataArea.getMinX(), yy,\r\n                        dataArea.getMaxX(), yy);",
    "info" : "ExpressionStatement[153323-153421]:ExpressionStatement[153323-153421]"
  }, {
    "left" : "g2.setStroke(stroke);",
    "right" : "g2.setStroke(stroke);",
    "info" : "ExpressionStatement[153450-153471]:ExpressionStatement[153450-153471]"
  }, {
    "left" : "g2.setPaint(paint);",
    "right" : "g2.setPaint(paint);",
    "info" : "ExpressionStatement[153485-153504]:ExpressionStatement[153485-153504]"
  }, {
    "left" : "g2.draw(line);",
    "right" : "g2.draw(line);",
    "info" : "ExpressionStatement[153518-153532]:ExpressionStatement[153518-153532]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[153891-153897]:Modifier[153891-153897]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[153898-153902]:PrimitiveType[153898-153902]"
  }, {
    "left" : "handleClick",
    "right" : "handleClick",
    "info" : "SimpleName[153903-153914]:SimpleName[153903-153914]"
  }, {
    "left" : "int x",
    "right" : "int x",
    "info" : "SingleVariableDeclaration[153915-153920]:SingleVariableDeclaration[153915-153920]"
  }, {
    "left" : "int y",
    "right" : "int y",
    "info" : "SingleVariableDeclaration[153922-153927]:SingleVariableDeclaration[153922-153927]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[153929-153951]:SingleVariableDeclaration[153929-153951]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[153953-154731]:Block[153953-154731]"
  }, {
    "left" : "Rectangle2D dataArea = info.getDataArea();",
    "right" : "Rectangle2D dataArea = info.getDataArea();",
    "info" : "VariableDeclarationStatement[153966-154008]:VariableDeclarationStatement[153966-154008]"
  }, {
    "left" : "if (dataArea.contains(x, y))",
    "right" : "if (dataArea.contains(x, y))",
    "info" : "IfStatement[154018-154724]:IfStatement[154018-154724]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154047-154724]:Block[154047-154724]"
  }, {
    "left" : "ValueAxis xaxis = getDomainAxis();",
    "right" : "ValueAxis xaxis = getDomainAxis();",
    "info" : "VariableDeclarationStatement[154126-154160]:VariableDeclarationStatement[154126-154160]"
  }, {
    "left" : "if (xaxis != null)",
    "right" : "if (xaxis != null)",
    "info" : "IfStatement[154174-154382]:IfStatement[154174-154382]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154193-154382]:Block[154193-154382]"
  }, {
    "left" : "double hvalue = xaxis.java2DToValue(x, info.getDataArea(),\r\n                        getDomainAxisEdge());",
    "right" : "double hvalue = xaxis.java2DToValue(x, info.getDataArea(),\r\n                        getDomainAxisEdge());",
    "info" : "VariableDeclarationStatement[154212-154317]:VariableDeclarationStatement[154212-154317]"
  }, {
    "left" : "setDomainCrosshairValue(hvalue);",
    "right" : "setDomainCrosshairValue(hvalue);",
    "info" : "ExpressionStatement[154335-154367]:ExpressionStatement[154335-154367]"
  }, {
    "left" : "ValueAxis yaxis = getRangeAxis();",
    "right" : "ValueAxis yaxis = getRangeAxis();",
    "info" : "VariableDeclarationStatement[154460-154493]:VariableDeclarationStatement[154460-154493]"
  }, {
    "left" : "if (yaxis != null)",
    "right" : "if (yaxis != null)",
    "info" : "IfStatement[154507-154713]:IfStatement[154507-154713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154526-154713]:Block[154526-154713]"
  }, {
    "left" : "double vvalue = yaxis.java2DToValue(y, info.getDataArea(),\r\n                        getRangeAxisEdge());",
    "right" : "double vvalue = yaxis.java2DToValue(y, info.getDataArea(),\r\n                        getRangeAxisEdge());",
    "info" : "VariableDeclarationStatement[154545-154649]:VariableDeclarationStatement[154545-154649]"
  }, {
    "left" : "setRangeCrosshairValue(vvalue);",
    "right" : "setRangeCrosshairValue(vvalue);",
    "info" : "ExpressionStatement[154667-154698]:ExpressionStatement[154667-154698]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[154988-154995]:Modifier[154988-154995]"
  }, {
    "left" : "List",
    "right" : "List",
    "info" : "SimpleType[154996-155000]:SimpleType[154996-155000]"
  }, {
    "left" : "getDatasetsMappedToDomainAxis",
    "right" : "getDatasetsMappedToDomainAxis",
    "info" : "SimpleName[155001-155030]:SimpleName[155001-155030]"
  }, {
    "left" : "Integer axisIndex",
    "right" : "Integer axisIndex",
    "info" : "SingleVariableDeclaration[155031-155048]:SingleVariableDeclaration[155031-155048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155050-155763]:Block[155050-155763]"
  }, {
    "left" : "if (axisIndex == null)",
    "right" : "if (axisIndex == null)",
    "info" : "IfStatement[155061-155175]:IfStatement[155061-155175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155084-155175]:Block[155084-155175]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
    "info" : "ThrowStatement[155099-155164]:ThrowStatement[155099-155164]"
  }, {
    "left" : "List result = new ArrayList();",
    "right" : "List result = new ArrayList();",
    "info" : "VariableDeclarationStatement[155185-155215]:VariableDeclarationStatement[155185-155215]"
  }, {
    "left" : "for (int i = 0; i < this.datasets.size(); i++)",
    "right" : "for (int i = 0; i < this.datasets.size(); i++)",
    "info" : "ForStatement[155225-155732]:ForStatement[155225-155732]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155272-155732]:Block[155272-155732]"
  }, {
    "left" : "List mappedAxes = (List) this.datasetToDomainAxesMap.get(\r\n                    new Integer(i));",
    "right" : "List mappedAxes = (List) this.datasetToDomainAxesMap.get(\r\n                    new Integer(i));",
    "info" : "VariableDeclarationStatement[155287-155382]:VariableDeclarationStatement[155287-155382]"
  }, {
    "left" : "if (mappedAxes == null)",
    "right" : "if (mappedAxes == null)",
    "info" : "IfStatement[155396-155721]:IfStatement[155396-155721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155420-155557]:Block[155420-155557]"
  }, {
    "left" : "if (axisIndex.equals(ZERO))",
    "right" : "if (axisIndex.equals(ZERO))",
    "info" : "IfStatement[155439-155542]:IfStatement[155439-155542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155467-155542]:Block[155467-155542]"
  }, {
    "left" : "result.add(this.datasets.get(i));",
    "right" : "result.add(this.datasets.get(i));",
    "info" : "ExpressionStatement[155490-155523]:ExpressionStatement[155490-155523]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155576-155721]:Block[155576-155721]"
  }, {
    "left" : "if (mappedAxes.contains(axisIndex))",
    "right" : "if (mappedAxes.contains(axisIndex))",
    "info" : "IfStatement[155595-155706]:IfStatement[155595-155706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155631-155706]:Block[155631-155706]"
  }, {
    "left" : "result.add(this.datasets.get(i));",
    "right" : "result.add(this.datasets.get(i));",
    "info" : "ExpressionStatement[155654-155687]:ExpressionStatement[155654-155687]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[155742-155756]:ReturnStatement[155742-155756]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[156020-156027]:Modifier[156020-156027]"
  }, {
    "left" : "List",
    "right" : "List",
    "info" : "SimpleType[156028-156032]:SimpleType[156028-156032]"
  }, {
    "left" : "getDatasetsMappedToRangeAxis",
    "right" : "getDatasetsMappedToRangeAxis",
    "info" : "SimpleName[156033-156061]:SimpleName[156033-156061]"
  }, {
    "left" : "Integer axisIndex",
    "right" : "Integer axisIndex",
    "info" : "SingleVariableDeclaration[156062-156079]:SingleVariableDeclaration[156062-156079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[156081-156793]:Block[156081-156793]"
  }, {
    "left" : "if (axisIndex == null)",
    "right" : "if (axisIndex == null)",
    "info" : "IfStatement[156092-156206]:IfStatement[156092-156206]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[156115-156206]:Block[156115-156206]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'axisIndex' argument.\");",
    "info" : "ThrowStatement[156130-156195]:ThrowStatement[156130-156195]"
  }, {
    "left" : "List result = new ArrayList();",
    "right" : "List result = new ArrayList();",
    "info" : "VariableDeclarationStatement[156216-156246]:VariableDeclarationStatement[156216-156246]"
  }, {
    "left" : "for (int i = 0; i < this.datasets.size(); i++)",
    "right" : "for (int i = 0; i < this.datasets.size(); i++)",
    "info" : "ForStatement[156256-156762]:ForStatement[156256-156762]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[156303-156762]:Block[156303-156762]"
  }, {
    "left" : "List mappedAxes = (List) this.datasetToRangeAxesMap.get(\r\n                    new Integer(i));",
    "right" : "List mappedAxes = (List) this.datasetToRangeAxesMap.get(\r\n                    new Integer(i));",
    "info" : "VariableDeclarationStatement[156318-156412]:VariableDeclarationStatement[156318-156412]"
  }, {
    "left" : "if (mappedAxes == null)",
    "right" : "if (mappedAxes == null)",
    "info" : "IfStatement[156426-156751]:IfStatement[156426-156751]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[156450-156587]:Block[156450-156587]"
  }, {
    "left" : "if (axisIndex.equals(ZERO))",
    "right" : "if (axisIndex.equals(ZERO))",
    "info" : "IfStatement[156469-156572]:IfStatement[156469-156572]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[156497-156572]:Block[156497-156572]"
  }, {
    "left" : "result.add(this.datasets.get(i));",
    "right" : "result.add(this.datasets.get(i));",
    "info" : "ExpressionStatement[156520-156553]:ExpressionStatement[156520-156553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[156606-156751]:Block[156606-156751]"
  }, {
    "left" : "if (mappedAxes.contains(axisIndex))",
    "right" : "if (mappedAxes.contains(axisIndex))",
    "info" : "IfStatement[156625-156736]:IfStatement[156625-156736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[156661-156736]:Block[156661-156736]"
  }, {
    "left" : "result.add(this.datasets.get(i));",
    "right" : "result.add(this.datasets.get(i));",
    "info" : "ExpressionStatement[156684-156717]:ExpressionStatement[156684-156717]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[156772-156786]:ReturnStatement[156772-156786]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[157001-157007]:Modifier[157001-157007]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[157008-157011]:PrimitiveType[157008-157011]"
  }, {
    "left" : "getDomainAxisIndex",
    "right" : "getDomainAxisIndex",
    "info" : "SimpleName[157012-157030]:SimpleName[157012-157030]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[157031-157045]:SingleVariableDeclaration[157031-157045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157047-157405]:Block[157047-157405]"
  }, {
    "left" : "int result = this.domainAxes.indexOf(axis);",
    "right" : "int result = this.domainAxes.indexOf(axis);",
    "info" : "VariableDeclarationStatement[157058-157101]:VariableDeclarationStatement[157058-157101]"
  }, {
    "left" : "if (result < 0)",
    "right" : "if (result < 0)",
    "info" : "IfStatement[157111-157374]:IfStatement[157111-157374]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157127-157374]:Block[157127-157374]"
  }, {
    "left" : "Plot parent = getParent();",
    "right" : "Plot parent = getParent();",
    "info" : "VariableDeclarationStatement[157178-157204]:VariableDeclarationStatement[157178-157204]"
  }, {
    "left" : "if (parent instanceof XYPlot)",
    "right" : "if (parent instanceof XYPlot)",
    "info" : "IfStatement[157218-157363]:IfStatement[157218-157363]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157248-157363]:Block[157248-157363]"
  }, {
    "left" : "XYPlot p = (XYPlot) parent;",
    "right" : "XYPlot p = (XYPlot) parent;",
    "info" : "VariableDeclarationStatement[157267-157294]:VariableDeclarationStatement[157267-157294]"
  }, {
    "left" : "result = p.getDomainAxisIndex(axis);",
    "right" : "result = p.getDomainAxisIndex(axis);",
    "info" : "ExpressionStatement[157312-157348]:ExpressionStatement[157312-157348]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[157384-157398]:ReturnStatement[157384-157398]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[157613-157619]:Modifier[157613-157619]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[157620-157623]:PrimitiveType[157620-157623]"
  }, {
    "left" : "getRangeAxisIndex",
    "right" : "getRangeAxisIndex",
    "info" : "SimpleName[157624-157641]:SimpleName[157624-157641]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[157642-157656]:SingleVariableDeclaration[157642-157656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157658-158014]:Block[157658-158014]"
  }, {
    "left" : "int result = this.rangeAxes.indexOf(axis);",
    "right" : "int result = this.rangeAxes.indexOf(axis);",
    "info" : "VariableDeclarationStatement[157669-157711]:VariableDeclarationStatement[157669-157711]"
  }, {
    "left" : "if (result < 0)",
    "right" : "if (result < 0)",
    "info" : "IfStatement[157721-157983]:IfStatement[157721-157983]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157737-157983]:Block[157737-157983]"
  }, {
    "left" : "Plot parent = getParent();",
    "right" : "Plot parent = getParent();",
    "info" : "VariableDeclarationStatement[157788-157814]:VariableDeclarationStatement[157788-157814]"
  }, {
    "left" : "if (parent instanceof XYPlot)",
    "right" : "if (parent instanceof XYPlot)",
    "info" : "IfStatement[157828-157972]:IfStatement[157828-157972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157858-157972]:Block[157858-157972]"
  }, {
    "left" : "XYPlot p = (XYPlot) parent;",
    "right" : "XYPlot p = (XYPlot) parent;",
    "info" : "VariableDeclarationStatement[157877-157904]:VariableDeclarationStatement[157877-157904]"
  }, {
    "left" : "result = p.getRangeAxisIndex(axis);",
    "right" : "result = p.getRangeAxisIndex(axis);",
    "info" : "ExpressionStatement[157922-157957]:ExpressionStatement[157922-157957]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[157993-158007]:ReturnStatement[157993-158007]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[158164-158170]:Modifier[158164-158170]"
  }, {
    "left" : "Range",
    "right" : "Range",
    "info" : "SimpleType[158171-158176]:SimpleType[158171-158176]"
  }, {
    "left" : "getDataRange",
    "right" : "getDataRange",
    "info" : "SimpleName[158177-158189]:SimpleName[158177-158189]"
  }, {
    "left" : "ValueAxis axis",
    "right" : "ValueAxis axis",
    "info" : "SingleVariableDeclaration[158190-158204]:SingleVariableDeclaration[158190-158204]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158206-161870]:Block[158206-161923]"
  }, {
    "left" : "Range result = null;",
    "right" : "Range result = null;",
    "info" : "VariableDeclarationStatement[158219-158239]:VariableDeclarationStatement[158219-158239]"
  }, {
    "left" : "List mappedDatasets = new ArrayList();",
    "right" : "List mappedDatasets = new ArrayList();",
    "info" : "VariableDeclarationStatement[158249-158287]:VariableDeclarationStatement[158249-158287]"
  }, {
    "left" : "List includedAnnotations = new ArrayList();",
    "right" : "List includedAnnotations = new ArrayList();",
    "info" : "VariableDeclarationStatement[158297-158340]:VariableDeclarationStatement[158297-158340]"
  }, {
    "left" : "boolean isDomainAxis = true;",
    "right" : "boolean isDomainAxis = true;",
    "info" : "VariableDeclarationStatement[158350-158378]:VariableDeclarationStatement[158350-158378]"
  }, {
    "left" : "int domainIndex = getDomainAxisIndex(axis);",
    "right" : "int domainIndex = getDomainAxisIndex(axis);",
    "info" : "VariableDeclarationStatement[158423-158466]:VariableDeclarationStatement[158423-158466]"
  }, {
    "left" : "if (domainIndex >= 0)",
    "right" : "if (domainIndex >= 0)",
    "info" : "IfStatement[158476-159127]:IfStatement[158476-159127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158498-159127]:Block[158498-159127]"
  }, {
    "left" : "isDomainAxis = true;",
    "right" : "isDomainAxis = true;",
    "info" : "ExpressionStatement[158513-158533]:ExpressionStatement[158513-158533]"
  }, {
    "left" : "mappedDatasets.addAll(getDatasetsMappedToDomainAxis(\r\n                    new Integer(domainIndex)));",
    "right" : "mappedDatasets.addAll(getDatasetsMappedToDomainAxis(\r\n                    new Integer(domainIndex)));",
    "info" : "ExpressionStatement[158547-158648]:ExpressionStatement[158547-158648]"
  }, {
    "left" : "if (domainIndex == 0)",
    "right" : "if (domainIndex == 0)",
    "info" : "IfStatement[158662-159116]:IfStatement[158662-159116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158684-159116]:Block[158684-159116]"
  }, {
    "left" : "Iterator iterator = this.annotations.iterator();",
    "right" : "Iterator iterator = this.annotations.iterator();",
    "info" : "VariableDeclarationStatement[158751-158799]:VariableDeclarationStatement[158751-158799]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[158817-159101]:WhileStatement[158817-159101]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158844-159101]:Block[158844-159101]"
  }, {
    "left" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
    "right" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
    "info" : "VariableDeclarationStatement[158867-158924]:VariableDeclarationStatement[158867-158924]"
  }, {
    "left" : "if (annotation instanceof XYAnnotationBoundsInfo)",
    "right" : "if (annotation instanceof XYAnnotationBoundsInfo)",
    "info" : "IfStatement[158946-159082]:IfStatement[158946-159082]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158996-159082]:Block[158996-159082]"
  }, {
    "left" : "includedAnnotations.add(annotation);",
    "right" : "includedAnnotations.add(annotation);",
    "info" : "ExpressionStatement[159023-159059]:ExpressionStatement[159023-159059]"
  }, {
    "left" : "int rangeIndex = getRangeAxisIndex(axis);",
    "right" : "int rangeIndex = getRangeAxisIndex(axis);",
    "info" : "VariableDeclarationStatement[159174-159215]:VariableDeclarationStatement[159174-159215]"
  }, {
    "left" : "if (rangeIndex >= 0)",
    "right" : "if (rangeIndex >= 0)",
    "info" : "IfStatement[159225-159825]:IfStatement[159225-159825]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159246-159825]:Block[159246-159825]"
  }, {
    "left" : "isDomainAxis = false;",
    "right" : "isDomainAxis = false;",
    "info" : "ExpressionStatement[159261-159282]:ExpressionStatement[159261-159282]"
  }, {
    "left" : "mappedDatasets.addAll(getDatasetsMappedToRangeAxis(\r\n                    new Integer(rangeIndex)));",
    "right" : "mappedDatasets.addAll(getDatasetsMappedToRangeAxis(\r\n                    new Integer(rangeIndex)));",
    "info" : "ExpressionStatement[159296-159395]:ExpressionStatement[159296-159395]"
  }, {
    "left" : "if (rangeIndex == 0)",
    "right" : "if (rangeIndex == 0)",
    "info" : "IfStatement[159409-159814]:IfStatement[159409-159814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159430-159814]:Block[159430-159814]"
  }, {
    "left" : "Iterator iterator = this.annotations.iterator();",
    "right" : "Iterator iterator = this.annotations.iterator();",
    "info" : "VariableDeclarationStatement[159449-159497]:VariableDeclarationStatement[159449-159497]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[159515-159799]:WhileStatement[159515-159799]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159542-159799]:Block[159542-159799]"
  }, {
    "left" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
    "right" : "XYAnnotation annotation = (XYAnnotation) iterator.next();",
    "info" : "VariableDeclarationStatement[159565-159622]:VariableDeclarationStatement[159565-159622]"
  }, {
    "left" : "if (annotation instanceof XYAnnotationBoundsInfo)",
    "right" : "if (annotation instanceof XYAnnotationBoundsInfo)",
    "info" : "IfStatement[159644-159780]:IfStatement[159644-159780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159694-159780]:Block[159694-159780]"
  }, {
    "left" : "includedAnnotations.add(annotation);",
    "right" : "includedAnnotations.add(annotation);",
    "info" : "ExpressionStatement[159721-159757]:ExpressionStatement[159721-159757]"
  }, {
    "left" : "Iterator iterator = mappedDatasets.iterator();",
    "right" : "Iterator iterator = mappedDatasets.iterator();",
    "info" : "VariableDeclarationStatement[159944-159990]:VariableDeclarationStatement[159944-159990]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[160000-161346]:WhileStatement[160000-161399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160027-161346]:Block[160027-161399]"
  }, {
    "left" : "XYDataset d = (XYDataset) iterator.next();",
    "right" : "XYDataset d = (XYDataset) iterator.next();",
    "info" : "VariableDeclarationStatement[160042-160084]:VariableDeclarationStatement[160042-160084]"
  }, {
    "left" : "if (d != null)",
    "right" : "if (d != null)",
    "info" : "IfStatement[160098-161335]:IfStatement[160098-161388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160113-161335]:Block[160113-161388]"
  }, {
    "left" : "XYItemRenderer r = getRendererForDataset(d);",
    "right" : "XYItemRenderer r = getRendererForDataset(d);",
    "info" : "VariableDeclarationStatement[160132-160176]:VariableDeclarationStatement[160132-160176]"
  }, {
    "left" : "if (isDomainAxis)",
    "right" : "if (isDomainAxis)",
    "info" : "IfStatement[160194-160913]:IfStatement[160194-160913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160212-160552]:Block[160212-160552]"
  }, {
    "left" : "if (r != null)",
    "right" : "if (r != null)",
    "info" : "IfStatement[160235-160533]:IfStatement[160235-160533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160250-160354]:Block[160250-160354]"
  }, {
    "left" : "result = Range.combine(result, r.findDomainBounds(d));",
    "right" : "result = Range.combine(result, r.findDomainBounds(d));",
    "info" : "ExpressionStatement[160277-160331]:ExpressionStatement[160277-160331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160381-160533]:Block[160381-160533]"
  }, {
    "left" : "result = Range.combine(result,\r\n                                DatasetUtilities.findDomainBounds(d));",
    "right" : "result = Range.combine(result,\r\n                                DatasetUtilities.findDomainBounds(d));",
    "info" : "ExpressionStatement[160408-160510]:ExpressionStatement[160408-160510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160575-160913]:Block[160575-160913]"
  }, {
    "left" : "if (r != null)",
    "right" : "if (r != null)",
    "info" : "IfStatement[160598-160894]:IfStatement[160598-160894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160613-160716]:Block[160613-160716]"
  }, {
    "left" : "result = Range.combine(result, r.findRangeBounds(d));",
    "right" : "result = Range.combine(result, r.findRangeBounds(d));",
    "info" : "ExpressionStatement[160640-160693]:ExpressionStatement[160640-160693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[160743-160894]:Block[160743-160894]"
  }, {
    "left" : "result = Range.combine(result,\r\n                                DatasetUtilities.findRangeBounds(d));",
    "right" : "result = Range.combine(result,\r\n                                DatasetUtilities.findRangeBounds(d));",
    "info" : "ExpressionStatement[160770-160871]:ExpressionStatement[160770-160871]"
  }, {
    "left" : "Collection c = r.getAnnotations();",
    "right" : "Collection c = r.getAnnotations();",
    "info" : "VariableDeclarationStatement[160953-160987]:VariableDeclarationStatement[160987-161021]"
  }, {
    "left" : "Iterator i = c.iterator();",
    "right" : "Iterator i = c.iterator();",
    "info" : "VariableDeclarationStatement[161009-161035]:VariableDeclarationStatement[161043-161069]"
  }, {
    "left" : "while (i.hasNext())",
    "right" : "while (i.hasNext())",
    "info" : "WhileStatement[161057-161320]:WhileStatement[161091-161354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161077-161320]:Block[161111-161354]"
  }, {
    "left" : "XYAnnotation a = (XYAnnotation) i.next();",
    "right" : "XYAnnotation a = (XYAnnotation) i.next();",
    "info" : "VariableDeclarationStatement[161104-161145]:VariableDeclarationStatement[161138-161179]"
  }, {
    "left" : "if (a instanceof XYAnnotationBoundsInfo)",
    "right" : "if (a instanceof XYAnnotationBoundsInfo)",
    "info" : "IfStatement[161171-161297]:IfStatement[161205-161331]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161212-161297]:Block[161246-161331]"
  }, {
    "left" : "includedAnnotations.add(a);",
    "right" : "includedAnnotations.add(a);",
    "info" : "ExpressionStatement[161243-161270]:ExpressionStatement[161277-161304]"
  }, {
    "left" : "Iterator it = includedAnnotations.iterator();",
    "right" : "Iterator it = includedAnnotations.iterator();",
    "info" : "VariableDeclarationStatement[161358-161403]:VariableDeclarationStatement[161411-161456]"
  }, {
    "left" : "while (it.hasNext())",
    "right" : "while (it.hasNext())",
    "info" : "WhileStatement[161413-161835]:WhileStatement[161466-161888]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161434-161835]:Block[161487-161888]"
  }, {
    "left" : "XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();",
    "right" : "XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();",
    "info" : "VariableDeclarationStatement[161449-161515]:VariableDeclarationStatement[161502-161568]"
  }, {
    "left" : "if (xyabi.getIncludeInDataBounds())",
    "right" : "if (xyabi.getIncludeInDataBounds())",
    "info" : "IfStatement[161529-161824]:IfStatement[161582-161877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161565-161824]:Block[161618-161877]"
  }, {
    "left" : "if (isDomainAxis)",
    "right" : "if (isDomainAxis)",
    "info" : "IfStatement[161584-161809]:IfStatement[161637-161862]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161602-161694]:Block[161655-161747]"
  }, {
    "left" : "result = Range.combine(result, xyabi.getXRange());",
    "right" : "result = Range.combine(result, xyabi.getXRange());",
    "info" : "ExpressionStatement[161625-161675]:ExpressionStatement[161678-161728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161717-161809]:Block[161770-161862]"
  }, {
    "left" : "result = Range.combine(result, xyabi.getYRange());",
    "right" : "result = Range.combine(result, xyabi.getYRange());",
    "info" : "ExpressionStatement[161740-161790]:ExpressionStatement[161793-161843]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[161847-161861]:ReturnStatement[161900-161914]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[162098-162104]:Modifier[162151-162157]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[162105-162109]:PrimitiveType[162158-162162]"
  }, {
    "left" : "datasetChanged",
    "right" : "datasetChanged",
    "info" : "SimpleName[162110-162124]:SimpleName[162163-162177]"
  }, {
    "left" : "DatasetChangeEvent event",
    "right" : "DatasetChangeEvent event",
    "info" : "SingleVariableDeclaration[162125-162149]:SingleVariableDeclaration[162178-162202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[162151-162499]:Block[162204-162552]"
  }, {
    "left" : "configureDomainAxes();",
    "right" : "configureDomainAxes();",
    "info" : "ExpressionStatement[162162-162184]:ExpressionStatement[162215-162237]"
  }, {
    "left" : "configureRangeAxes();",
    "right" : "configureRangeAxes();",
    "info" : "ExpressionStatement[162194-162215]:ExpressionStatement[162247-162268]"
  }, {
    "left" : "if (getParent() != null)",
    "right" : "if (getParent() != null)",
    "info" : "IfStatement[162225-162492]:IfStatement[162278-162545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[162250-162310]:Block[162303-162363]"
  }, {
    "left" : "getParent().datasetChanged(event);",
    "right" : "getParent().datasetChanged(event);",
    "info" : "ExpressionStatement[162265-162299]:ExpressionStatement[162318-162352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[162325-162492]:Block[162378-162545]"
  }, {
    "left" : "PlotChangeEvent e = new PlotChangeEvent(this);",
    "right" : "PlotChangeEvent e = new PlotChangeEvent(this);",
    "info" : "VariableDeclarationStatement[162340-162386]:VariableDeclarationStatement[162393-162439]"
  }, {
    "left" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
    "right" : "e.setType(ChartChangeEventType.DATASET_UPDATED);",
    "info" : "ExpressionStatement[162400-162448]:ExpressionStatement[162453-162501]"
  }, {
    "left" : "notifyListeners(e);",
    "right" : "notifyListeners(e);",
    "info" : "ExpressionStatement[162462-162481]:ExpressionStatement[162515-162534]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[162624-162630]:Modifier[162677-162683]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[162631-162635]:PrimitiveType[162684-162688]"
  }, {
    "left" : "rendererChanged",
    "right" : "rendererChanged",
    "info" : "SimpleName[162636-162651]:SimpleName[162689-162704]"
  }, {
    "left" : "RendererChangeEvent event",
    "right" : "RendererChangeEvent event",
    "info" : "SingleVariableDeclaration[162652-162677]:SingleVariableDeclaration[162705-162730]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[162679-162974]:Block[162732-163027]"
  }, {
    "left" : "if (event.getSeriesVisibilityChanged())",
    "right" : "if (event.getSeriesVisibilityChanged())",
    "info" : "IfStatement[162816-162939]:IfStatement[162869-162992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[162856-162939]:Block[162909-162992]"
  }, {
    "left" : "configureDomainAxes();",
    "right" : "configureDomainAxes();",
    "info" : "ExpressionStatement[162871-162893]:ExpressionStatement[162924-162946]"
  }, {
    "left" : "configureRangeAxes();",
    "right" : "configureRangeAxes();",
    "info" : "ExpressionStatement[162907-162928]:ExpressionStatement[162960-162981]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[162949-162967]:ExpressionStatement[163002-163020]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[163173-163179]:Modifier[163226-163232]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[163180-163187]:PrimitiveType[163233-163240]"
  }, {
    "left" : "isDomainCrosshairVisible",
    "right" : "isDomainCrosshairVisible",
    "info" : "SimpleName[163188-163212]:SimpleName[163241-163265]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[163215-163268]:Block[163268-163321]"
  }, {
    "left" : "return this.domainCrosshairVisible;",
    "right" : "return this.domainCrosshairVisible;",
    "info" : "ReturnStatement[163226-163261]:ReturnStatement[163279-163314]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[163582-163588]:Modifier[163635-163641]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[163589-163593]:PrimitiveType[163642-163646]"
  }, {
    "left" : "setDomainCrosshairVisible",
    "right" : "setDomainCrosshairVisible",
    "info" : "SimpleName[163594-163619]:SimpleName[163647-163672]"
  }, {
    "left" : "boolean flag",
    "right" : "boolean flag",
    "info" : "SingleVariableDeclaration[163620-163632]:SingleVariableDeclaration[163673-163685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[163634-163786]:Block[163687-163839]"
  }, {
    "left" : "if (this.domainCrosshairVisible != flag)",
    "right" : "if (this.domainCrosshairVisible != flag)",
    "info" : "IfStatement[163645-163779]:IfStatement[163698-163832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[163686-163779]:Block[163739-163832]"
  }, {
    "left" : "this.domainCrosshairVisible = flag;",
    "right" : "this.domainCrosshairVisible = flag;",
    "info" : "ExpressionStatement[163701-163736]:ExpressionStatement[163754-163789]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[163750-163768]:ExpressionStatement[163803-163821]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[164019-164025]:Modifier[164072-164078]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[164026-164033]:PrimitiveType[164079-164086]"
  }, {
    "left" : "isDomainCrosshairLockedOnData",
    "right" : "isDomainCrosshairLockedOnData",
    "info" : "SimpleName[164034-164063]:SimpleName[164087-164116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[164066-164124]:Block[164119-164177]"
  }, {
    "left" : "return this.domainCrosshairLockedOnData;",
    "right" : "return this.domainCrosshairLockedOnData;",
    "info" : "ReturnStatement[164077-164117]:ReturnStatement[164130-164170]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[164469-164475]:Modifier[164522-164528]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[164476-164480]:PrimitiveType[164529-164533]"
  }, {
    "left" : "setDomainCrosshairLockedOnData",
    "right" : "setDomainCrosshairLockedOnData",
    "info" : "SimpleName[164481-164511]:SimpleName[164534-164564]"
  }, {
    "left" : "boolean flag",
    "right" : "boolean flag",
    "info" : "SingleVariableDeclaration[164512-164524]:SingleVariableDeclaration[164565-164577]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[164526-164688]:Block[164579-164741]"
  }, {
    "left" : "if (this.domainCrosshairLockedOnData != flag)",
    "right" : "if (this.domainCrosshairLockedOnData != flag)",
    "info" : "IfStatement[164537-164681]:IfStatement[164590-164734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[164583-164681]:Block[164636-164734]"
  }, {
    "left" : "this.domainCrosshairLockedOnData = flag;",
    "right" : "this.domainCrosshairLockedOnData = flag;",
    "info" : "ExpressionStatement[164598-164638]:ExpressionStatement[164651-164691]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[164652-164670]:ExpressionStatement[164705-164723]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[164847-164853]:Modifier[164900-164906]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[164854-164860]:PrimitiveType[164907-164913]"
  }, {
    "left" : "getDomainCrosshairValue",
    "right" : "getDomainCrosshairValue",
    "info" : "SimpleName[164861-164884]:SimpleName[164914-164937]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[164887-164938]:Block[164940-164991]"
  }, {
    "left" : "return this.domainCrosshairValue;",
    "right" : "return this.domainCrosshairValue;",
    "info" : "ReturnStatement[164898-164931]:ReturnStatement[164951-164984]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[165214-165220]:Modifier[165267-165273]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[165221-165225]:PrimitiveType[165274-165278]"
  }, {
    "left" : "setDomainCrosshairValue",
    "right" : "setDomainCrosshairValue",
    "info" : "SimpleName[165226-165249]:SimpleName[165279-165302]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[165250-165262]:SingleVariableDeclaration[165303-165315]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165264-165319]:Block[165317-165372]"
  }, {
    "left" : "setDomainCrosshairValue(value, true);",
    "right" : "setDomainCrosshairValue(value, true);",
    "info" : "ExpressionStatement[165275-165312]:ExpressionStatement[165328-165365]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[165663-165669]:Modifier[165716-165722]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[165670-165674]:PrimitiveType[165723-165727]"
  }, {
    "left" : "setDomainCrosshairValue",
    "right" : "setDomainCrosshairValue",
    "info" : "SimpleName[165675-165698]:SimpleName[165728-165751]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[165699-165711]:SingleVariableDeclaration[165752-165764]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[165713-165727]:SingleVariableDeclaration[165766-165780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165729-165877]:Block[165782-165930]"
  }, {
    "left" : "this.domainCrosshairValue = value;",
    "right" : "this.domainCrosshairValue = value;",
    "info" : "ExpressionStatement[165740-165774]:ExpressionStatement[165793-165827]"
  }, {
    "left" : "if (isDomainCrosshairVisible() && notify)",
    "right" : "if (isDomainCrosshairVisible() && notify)",
    "info" : "IfStatement[165784-165870]:IfStatement[165837-165923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[165826-165870]:Block[165879-165923]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[165841-165859]:ExpressionStatement[165894-165912]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[166187-166193]:Modifier[166240-166246]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[166194-166200]:SimpleType[166247-166253]"
  }, {
    "left" : "getDomainCrosshairStroke",
    "right" : "getDomainCrosshairStroke",
    "info" : "SimpleName[166201-166225]:SimpleName[166254-166278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166228-166280]:Block[166281-166333]"
  }, {
    "left" : "return this.domainCrosshairStroke;",
    "right" : "return this.domainCrosshairStroke;",
    "info" : "ReturnStatement[166239-166273]:ReturnStatement[166292-166326]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[166598-166604]:Modifier[166651-166657]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[166605-166609]:PrimitiveType[166658-166662]"
  }, {
    "left" : "setDomainCrosshairStroke",
    "right" : "setDomainCrosshairStroke",
    "info" : "SimpleName[166610-166634]:SimpleName[166663-166687]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[166635-166648]:SingleVariableDeclaration[166688-166701]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166650-166850]:Block[166703-166903]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[166661-166769]:IfStatement[166714-166822]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166681-166769]:Block[166734-166822]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[166696-166758]:ThrowStatement[166749-166811]"
  }, {
    "left" : "this.domainCrosshairStroke = stroke;",
    "right" : "this.domainCrosshairStroke = stroke;",
    "info" : "ExpressionStatement[166779-166815]:ExpressionStatement[166832-166868]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[166825-166843]:ExpressionStatement[166878-166896]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[167126-167132]:Modifier[167179-167185]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[167133-167138]:SimpleType[167186-167191]"
  }, {
    "left" : "getDomainCrosshairPaint",
    "right" : "getDomainCrosshairPaint",
    "info" : "SimpleName[167139-167162]:SimpleName[167192-167215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167165-167216]:Block[167218-167269]"
  }, {
    "left" : "return this.domainCrosshairPaint;",
    "right" : "return this.domainCrosshairPaint;",
    "info" : "ReturnStatement[167176-167209]:ReturnStatement[167229-167262]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[167515-167521]:Modifier[167568-167574]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[167522-167526]:PrimitiveType[167575-167579]"
  }, {
    "left" : "setDomainCrosshairPaint",
    "right" : "setDomainCrosshairPaint",
    "info" : "SimpleName[167527-167550]:SimpleName[167580-167603]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[167551-167562]:SingleVariableDeclaration[167604-167615]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167564-167760]:Block[167617-167813]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[167575-167681]:IfStatement[167628-167734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167594-167681]:Block[167647-167734]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[167609-167670]:ThrowStatement[167662-167723]"
  }, {
    "left" : "this.domainCrosshairPaint = paint;",
    "right" : "this.domainCrosshairPaint = paint;",
    "info" : "ExpressionStatement[167691-167725]:ExpressionStatement[167744-167778]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[167735-167753]:ExpressionStatement[167788-167806]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[167998-168004]:Modifier[168051-168057]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[168005-168012]:PrimitiveType[168058-168065]"
  }, {
    "left" : "isRangeCrosshairVisible",
    "right" : "isRangeCrosshairVisible",
    "info" : "SimpleName[168013-168036]:SimpleName[168066-168089]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168039-168091]:Block[168092-168144]"
  }, {
    "left" : "return this.rangeCrosshairVisible;",
    "right" : "return this.rangeCrosshairVisible;",
    "info" : "ReturnStatement[168050-168084]:ReturnStatement[168103-168137]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[168417-168423]:Modifier[168470-168476]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[168424-168428]:PrimitiveType[168477-168481]"
  }, {
    "left" : "setRangeCrosshairVisible",
    "right" : "setRangeCrosshairVisible",
    "info" : "SimpleName[168429-168453]:SimpleName[168482-168506]"
  }, {
    "left" : "boolean flag",
    "right" : "boolean flag",
    "info" : "SingleVariableDeclaration[168454-168466]:SingleVariableDeclaration[168507-168519]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168468-168618]:Block[168521-168671]"
  }, {
    "left" : "if (this.rangeCrosshairVisible != flag)",
    "right" : "if (this.rangeCrosshairVisible != flag)",
    "info" : "IfStatement[168479-168611]:IfStatement[168532-168664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168519-168611]:Block[168572-168664]"
  }, {
    "left" : "this.rangeCrosshairVisible = flag;",
    "right" : "this.rangeCrosshairVisible = flag;",
    "info" : "ExpressionStatement[168534-168568]:ExpressionStatement[168587-168621]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[168582-168600]:ExpressionStatement[168635-168653]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[168850-168856]:Modifier[168903-168909]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[168857-168864]:PrimitiveType[168910-168917]"
  }, {
    "left" : "isRangeCrosshairLockedOnData",
    "right" : "isRangeCrosshairLockedOnData",
    "info" : "SimpleName[168865-168893]:SimpleName[168918-168946]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168896-168953]:Block[168949-169006]"
  }, {
    "left" : "return this.rangeCrosshairLockedOnData;",
    "right" : "return this.rangeCrosshairLockedOnData;",
    "info" : "ReturnStatement[168907-168946]:ReturnStatement[168960-168999]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[169296-169302]:Modifier[169349-169355]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[169303-169307]:PrimitiveType[169356-169360]"
  }, {
    "left" : "setRangeCrosshairLockedOnData",
    "right" : "setRangeCrosshairLockedOnData",
    "info" : "SimpleName[169308-169337]:SimpleName[169361-169390]"
  }, {
    "left" : "boolean flag",
    "right" : "boolean flag",
    "info" : "SingleVariableDeclaration[169338-169350]:SingleVariableDeclaration[169391-169403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169352-169512]:Block[169405-169565]"
  }, {
    "left" : "if (this.rangeCrosshairLockedOnData != flag)",
    "right" : "if (this.rangeCrosshairLockedOnData != flag)",
    "info" : "IfStatement[169363-169505]:IfStatement[169416-169558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169408-169505]:Block[169461-169558]"
  }, {
    "left" : "this.rangeCrosshairLockedOnData = flag;",
    "right" : "this.rangeCrosshairLockedOnData = flag;",
    "info" : "ExpressionStatement[169423-169462]:ExpressionStatement[169476-169515]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[169476-169494]:ExpressionStatement[169529-169547]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[169669-169675]:Modifier[169722-169728]"
  }, {
    "left" : "double",
    "right" : "double",
    "info" : "PrimitiveType[169676-169682]:PrimitiveType[169729-169735]"
  }, {
    "left" : "getRangeCrosshairValue",
    "right" : "getRangeCrosshairValue",
    "info" : "SimpleName[169683-169705]:SimpleName[169736-169758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169708-169758]:Block[169761-169811]"
  }, {
    "left" : "return this.rangeCrosshairValue;",
    "right" : "return this.rangeCrosshairValue;",
    "info" : "ReturnStatement[169719-169751]:ReturnStatement[169772-169804]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[170049-170055]:Modifier[170102-170108]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[170056-170060]:PrimitiveType[170109-170113]"
  }, {
    "left" : "setRangeCrosshairValue",
    "right" : "setRangeCrosshairValue",
    "info" : "SimpleName[170061-170083]:SimpleName[170114-170136]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[170084-170096]:SingleVariableDeclaration[170137-170149]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170098-170152]:Block[170151-170205]"
  }, {
    "left" : "setRangeCrosshairValue(value, true);",
    "right" : "setRangeCrosshairValue(value, true);",
    "info" : "ExpressionStatement[170109-170145]:ExpressionStatement[170162-170198]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[170526-170532]:Modifier[170579-170585]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[170533-170537]:PrimitiveType[170586-170590]"
  }, {
    "left" : "setRangeCrosshairValue",
    "right" : "setRangeCrosshairValue",
    "info" : "SimpleName[170538-170560]:SimpleName[170591-170613]"
  }, {
    "left" : "double value",
    "right" : "double value",
    "info" : "SingleVariableDeclaration[170561-170573]:SingleVariableDeclaration[170614-170626]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[170575-170589]:SingleVariableDeclaration[170628-170642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170591-170737]:Block[170644-170790]"
  }, {
    "left" : "this.rangeCrosshairValue = value;",
    "right" : "this.rangeCrosshairValue = value;",
    "info" : "ExpressionStatement[170602-170635]:ExpressionStatement[170655-170688]"
  }, {
    "left" : "if (isRangeCrosshairVisible() && notify)",
    "right" : "if (isRangeCrosshairVisible() && notify)",
    "info" : "IfStatement[170645-170730]:IfStatement[170698-170783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170686-170730]:Block[170739-170783]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[170701-170719]:ExpressionStatement[170754-170772]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[171036-171042]:Modifier[171089-171095]"
  }, {
    "left" : "Stroke",
    "right" : "Stroke",
    "info" : "SimpleType[171043-171049]:SimpleType[171096-171102]"
  }, {
    "left" : "getRangeCrosshairStroke",
    "right" : "getRangeCrosshairStroke",
    "info" : "SimpleName[171050-171073]:SimpleName[171103-171126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171076-171127]:Block[171129-171180]"
  }, {
    "left" : "return this.rangeCrosshairStroke;",
    "right" : "return this.rangeCrosshairStroke;",
    "info" : "ReturnStatement[171087-171120]:ReturnStatement[171140-171173]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[171446-171452]:Modifier[171499-171505]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[171453-171457]:PrimitiveType[171506-171510]"
  }, {
    "left" : "setRangeCrosshairStroke",
    "right" : "setRangeCrosshairStroke",
    "info" : "SimpleName[171458-171481]:SimpleName[171511-171534]"
  }, {
    "left" : "Stroke stroke",
    "right" : "Stroke stroke",
    "info" : "SingleVariableDeclaration[171482-171495]:SingleVariableDeclaration[171535-171548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171497-171696]:Block[171550-171749]"
  }, {
    "left" : "if (stroke == null)",
    "right" : "if (stroke == null)",
    "info" : "IfStatement[171508-171616]:IfStatement[171561-171669]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171528-171616]:Block[171581-171669]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'stroke' argument.\");",
    "info" : "ThrowStatement[171543-171605]:ThrowStatement[171596-171658]"
  }, {
    "left" : "this.rangeCrosshairStroke = stroke;",
    "right" : "this.rangeCrosshairStroke = stroke;",
    "info" : "ExpressionStatement[171626-171661]:ExpressionStatement[171679-171714]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[171671-171689]:ExpressionStatement[171724-171742]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[171968-171974]:Modifier[172021-172027]"
  }, {
    "left" : "Paint",
    "right" : "Paint",
    "info" : "SimpleType[171975-171980]:SimpleType[172028-172033]"
  }, {
    "left" : "getRangeCrosshairPaint",
    "right" : "getRangeCrosshairPaint",
    "info" : "SimpleName[171981-172003]:SimpleName[172034-172056]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172006-172056]:Block[172059-172109]"
  }, {
    "left" : "return this.rangeCrosshairPaint;",
    "right" : "return this.rangeCrosshairPaint;",
    "info" : "ReturnStatement[172017-172049]:ReturnStatement[172070-172102]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[172355-172361]:Modifier[172408-172414]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[172362-172366]:PrimitiveType[172415-172419]"
  }, {
    "left" : "setRangeCrosshairPaint",
    "right" : "setRangeCrosshairPaint",
    "info" : "SimpleName[172367-172389]:SimpleName[172420-172442]"
  }, {
    "left" : "Paint paint",
    "right" : "Paint paint",
    "info" : "SingleVariableDeclaration[172390-172401]:SingleVariableDeclaration[172443-172454]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172403-172598]:Block[172456-172651]"
  }, {
    "left" : "if (paint == null)",
    "right" : "if (paint == null)",
    "info" : "IfStatement[172414-172520]:IfStatement[172467-172573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172433-172520]:Block[172486-172573]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "right" : "throw new IllegalArgumentException(\"Null 'paint' argument.\");",
    "info" : "ThrowStatement[172448-172509]:ThrowStatement[172501-172562]"
  }, {
    "left" : "this.rangeCrosshairPaint = paint;",
    "right" : "this.rangeCrosshairPaint = paint;",
    "info" : "ExpressionStatement[172530-172563]:ExpressionStatement[172583-172616]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[172573-172591]:ExpressionStatement[172626-172644]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[172808-172814]:Modifier[172861-172867]"
  }, {
    "left" : "AxisSpace",
    "right" : "AxisSpace",
    "info" : "SimpleType[172815-172824]:SimpleType[172868-172877]"
  }, {
    "left" : "getFixedDomainAxisSpace",
    "right" : "getFixedDomainAxisSpace",
    "info" : "SimpleName[172825-172848]:SimpleName[172878-172901]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172851-172902]:Block[172904-172955]"
  }, {
    "left" : "return this.fixedDomainAxisSpace;",
    "right" : "return this.fixedDomainAxisSpace;",
    "info" : "ReturnStatement[172862-172895]:ReturnStatement[172915-172948]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[173161-173167]:Modifier[173214-173220]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[173168-173172]:PrimitiveType[173221-173225]"
  }, {
    "left" : "setFixedDomainAxisSpace",
    "right" : "setFixedDomainAxisSpace",
    "info" : "SimpleName[173173-173196]:SimpleName[173226-173249]"
  }, {
    "left" : "AxisSpace space",
    "right" : "AxisSpace space",
    "info" : "SingleVariableDeclaration[173197-173212]:SingleVariableDeclaration[173250-173265]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[173214-173269]:Block[173267-173322]"
  }, {
    "left" : "setFixedDomainAxisSpace(space, true);",
    "right" : "setFixedDomainAxisSpace(space, true);",
    "info" : "ExpressionStatement[173225-173262]:ExpressionStatement[173278-173315]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[173613-173619]:Modifier[173666-173672]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[173620-173624]:PrimitiveType[173673-173677]"
  }, {
    "left" : "setFixedDomainAxisSpace",
    "right" : "setFixedDomainAxisSpace",
    "info" : "SimpleName[173625-173648]:SimpleName[173678-173701]"
  }, {
    "left" : "AxisSpace space",
    "right" : "AxisSpace space",
    "info" : "SingleVariableDeclaration[173649-173664]:SingleVariableDeclaration[173702-173717]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[173666-173680]:SingleVariableDeclaration[173719-173733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[173682-173800]:Block[173735-173853]"
  }, {
    "left" : "this.fixedDomainAxisSpace = space;",
    "right" : "this.fixedDomainAxisSpace = space;",
    "info" : "ExpressionStatement[173693-173727]:ExpressionStatement[173746-173780]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[173737-173793]:IfStatement[173790-173846]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[173749-173793]:Block[173802-173846]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[173764-173782]:ExpressionStatement[173817-173835]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[174007-174013]:Modifier[174060-174066]"
  }, {
    "left" : "AxisSpace",
    "right" : "AxisSpace",
    "info" : "SimpleType[174014-174023]:SimpleType[174067-174076]"
  }, {
    "left" : "getFixedRangeAxisSpace",
    "right" : "getFixedRangeAxisSpace",
    "info" : "SimpleName[174024-174046]:SimpleName[174077-174099]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174049-174099]:Block[174102-174152]"
  }, {
    "left" : "return this.fixedRangeAxisSpace;",
    "right" : "return this.fixedRangeAxisSpace;",
    "info" : "ReturnStatement[174060-174092]:ReturnStatement[174113-174145]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[174356-174362]:Modifier[174409-174415]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[174363-174367]:PrimitiveType[174416-174420]"
  }, {
    "left" : "setFixedRangeAxisSpace",
    "right" : "setFixedRangeAxisSpace",
    "info" : "SimpleName[174368-174390]:SimpleName[174421-174443]"
  }, {
    "left" : "AxisSpace space",
    "right" : "AxisSpace space",
    "info" : "SingleVariableDeclaration[174391-174406]:SingleVariableDeclaration[174444-174459]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174408-174462]:Block[174461-174515]"
  }, {
    "left" : "setFixedRangeAxisSpace(space, true);",
    "right" : "setFixedRangeAxisSpace(space, true);",
    "info" : "ExpressionStatement[174419-174455]:ExpressionStatement[174472-174508]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[174804-174810]:Modifier[174857-174863]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[174811-174815]:PrimitiveType[174864-174868]"
  }, {
    "left" : "setFixedRangeAxisSpace",
    "right" : "setFixedRangeAxisSpace",
    "info" : "SimpleName[174816-174838]:SimpleName[174869-174891]"
  }, {
    "left" : "AxisSpace space",
    "right" : "AxisSpace space",
    "info" : "SingleVariableDeclaration[174839-174854]:SingleVariableDeclaration[174892-174907]"
  }, {
    "left" : "boolean notify",
    "right" : "boolean notify",
    "info" : "SingleVariableDeclaration[174856-174870]:SingleVariableDeclaration[174909-174923]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174872-174989]:Block[174925-175042]"
  }, {
    "left" : "this.fixedRangeAxisSpace = space;",
    "right" : "this.fixedRangeAxisSpace = space;",
    "info" : "ExpressionStatement[174883-174916]:ExpressionStatement[174936-174969]"
  }, {
    "left" : "if (notify)",
    "right" : "if (notify)",
    "info" : "IfStatement[174926-174982]:IfStatement[174979-175035]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174938-174982]:Block[174991-175035]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[174953-174971]:ExpressionStatement[175006-175024]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[175199-175205]:Modifier[175252-175258]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[175206-175213]:PrimitiveType[175259-175266]"
  }, {
    "left" : "isDomainPannable",
    "right" : "isDomainPannable",
    "info" : "SimpleName[175214-175230]:SimpleName[175267-175283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[175233-175278]:Block[175286-175331]"
  }, {
    "left" : "return this.domainPannable;",
    "right" : "return this.domainPannable;",
    "info" : "ReturnStatement[175244-175271]:ReturnStatement[175297-175324]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[175485-175491]:Modifier[175538-175544]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[175492-175496]:PrimitiveType[175545-175549]"
  }, {
    "left" : "setDomainPannable",
    "right" : "setDomainPannable",
    "info" : "SimpleName[175497-175514]:SimpleName[175550-175567]"
  }, {
    "left" : "boolean pannable",
    "right" : "boolean pannable",
    "info" : "SingleVariableDeclaration[175515-175531]:SingleVariableDeclaration[175568-175584]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[175533-175582]:Block[175586-175635]"
  }, {
    "left" : "this.domainPannable = pannable;",
    "right" : "this.domainPannable = pannable;",
    "info" : "ExpressionStatement[175544-175575]:ExpressionStatement[175597-175628]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[175791-175797]:Modifier[175844-175850]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[175798-175805]:PrimitiveType[175851-175858]"
  }, {
    "left" : "isRangePannable",
    "right" : "isRangePannable",
    "info" : "SimpleName[175806-175821]:SimpleName[175859-175874]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[175824-175868]:Block[175877-175921]"
  }, {
    "left" : "return this.rangePannable;",
    "right" : "return this.rangePannable;",
    "info" : "ReturnStatement[175835-175861]:ReturnStatement[175888-175914]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[176074-176080]:Modifier[176127-176133]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[176081-176085]:PrimitiveType[176134-176138]"
  }, {
    "left" : "setRangePannable",
    "right" : "setRangePannable",
    "info" : "SimpleName[176086-176102]:SimpleName[176139-176155]"
  }, {
    "left" : "boolean pannable",
    "right" : "boolean pannable",
    "info" : "SingleVariableDeclaration[176103-176119]:SingleVariableDeclaration[176156-176172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176121-176169]:Block[176174-176222]"
  }, {
    "left" : "this.rangePannable = pannable;",
    "right" : "this.rangePannable = pannable;",
    "info" : "ExpressionStatement[176132-176162]:ExpressionStatement[176185-176215]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[176476-176482]:Modifier[176529-176535]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[176483-176487]:PrimitiveType[176536-176540]"
  }, {
    "left" : "panDomainAxes",
    "right" : "panDomainAxes",
    "info" : "SimpleName[176488-176501]:SimpleName[176541-176554]"
  }, {
    "left" : "double percent",
    "right" : "double percent",
    "info" : "SingleVariableDeclaration[176502-176516]:SingleVariableDeclaration[176555-176569]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[176518-176540]:SingleVariableDeclaration[176571-176593]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[176555-176569]:SingleVariableDeclaration[176608-176622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176571-177009]:Block[176624-177062]"
  }, {
    "left" : "if (!isDomainPannable())",
    "right" : "if (!isDomainPannable())",
    "info" : "IfStatement[176582-176640]:IfStatement[176635-176693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176607-176640]:Block[176660-176693]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[176622-176629]:ReturnStatement[176675-176682]"
  }, {
    "left" : "int domainAxisCount = getDomainAxisCount();",
    "right" : "int domainAxisCount = getDomainAxisCount();",
    "info" : "VariableDeclarationStatement[176650-176693]:VariableDeclarationStatement[176703-176746]"
  }, {
    "left" : "for (int i = 0; i < domainAxisCount; i++)",
    "right" : "for (int i = 0; i < domainAxisCount; i++)",
    "info" : "ForStatement[176703-177002]:ForStatement[176756-177055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176745-177002]:Block[176798-177055]"
  }, {
    "left" : "ValueAxis axis = getDomainAxis(i);",
    "right" : "ValueAxis axis = getDomainAxis(i);",
    "info" : "VariableDeclarationStatement[176760-176794]:VariableDeclarationStatement[176813-176847]"
  }, {
    "left" : "if (axis == null)",
    "right" : "if (axis == null)",
    "info" : "IfStatement[176808-176869]:IfStatement[176861-176922]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176826-176869]:Block[176879-176922]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[176845-176854]:ContinueStatement[176898-176907]"
  }, {
    "left" : "if (axis.isInverted())",
    "right" : "if (axis.isInverted())",
    "info" : "IfStatement[176883-176959]:IfStatement[176936-177012]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176906-176959]:Block[176959-177012]"
  }, {
    "left" : "percent = -percent;",
    "right" : "percent = -percent;",
    "info" : "ExpressionStatement[176925-176944]:ExpressionStatement[176978-176997]"
  }, {
    "left" : "axis.pan(percent);",
    "right" : "axis.pan(percent);",
    "info" : "ExpressionStatement[176973-176991]:ExpressionStatement[177026-177044]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[177315-177321]:Modifier[177368-177374]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[177322-177326]:PrimitiveType[177375-177379]"
  }, {
    "left" : "panRangeAxes",
    "right" : "panRangeAxes",
    "info" : "SimpleName[177327-177339]:SimpleName[177380-177392]"
  }, {
    "left" : "double percent",
    "right" : "double percent",
    "info" : "SingleVariableDeclaration[177340-177354]:SingleVariableDeclaration[177393-177407]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[177356-177378]:SingleVariableDeclaration[177409-177431]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[177393-177407]:SingleVariableDeclaration[177446-177460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177409-177842]:Block[177462-177895]"
  }, {
    "left" : "if (!isRangePannable())",
    "right" : "if (!isRangePannable())",
    "info" : "IfStatement[177420-177477]:IfStatement[177473-177530]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177444-177477]:Block[177497-177530]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[177459-177466]:ReturnStatement[177512-177519]"
  }, {
    "left" : "int rangeAxisCount = getRangeAxisCount();",
    "right" : "int rangeAxisCount = getRangeAxisCount();",
    "info" : "VariableDeclarationStatement[177487-177528]:VariableDeclarationStatement[177540-177581]"
  }, {
    "left" : "for (int i = 0; i < rangeAxisCount; i++)",
    "right" : "for (int i = 0; i < rangeAxisCount; i++)",
    "info" : "ForStatement[177538-177835]:ForStatement[177591-177888]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177579-177835]:Block[177632-177888]"
  }, {
    "left" : "ValueAxis axis = getRangeAxis(i);",
    "right" : "ValueAxis axis = getRangeAxis(i);",
    "info" : "VariableDeclarationStatement[177594-177627]:VariableDeclarationStatement[177647-177680]"
  }, {
    "left" : "if (axis == null)",
    "right" : "if (axis == null)",
    "info" : "IfStatement[177641-177702]:IfStatement[177694-177755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177659-177702]:Block[177712-177755]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[177678-177687]:ContinueStatement[177731-177740]"
  }, {
    "left" : "if (axis.isInverted())",
    "right" : "if (axis.isInverted())",
    "info" : "IfStatement[177716-177792]:IfStatement[177769-177845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177739-177792]:Block[177792-177845]"
  }, {
    "left" : "percent = -percent;",
    "right" : "percent = -percent;",
    "info" : "ExpressionStatement[177758-177777]:ExpressionStatement[177811-177830]"
  }, {
    "left" : "axis.pan(percent);",
    "right" : "axis.pan(percent);",
    "info" : "ExpressionStatement[177806-177824]:ExpressionStatement[177859-177877]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[178171-178177]:Modifier[178224-178230]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[178178-178182]:PrimitiveType[178231-178235]"
  }, {
    "left" : "zoomDomainAxes",
    "right" : "zoomDomainAxes",
    "info" : "SimpleName[178183-178197]:SimpleName[178236-178250]"
  }, {
    "left" : "double factor",
    "right" : "double factor",
    "info" : "SingleVariableDeclaration[178198-178211]:SingleVariableDeclaration[178251-178264]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[178213-178235]:SingleVariableDeclaration[178266-178288]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[178269-178283]:SingleVariableDeclaration[178322-178336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178285-178384]:Block[178338-178437]"
  }, {
    "left" : "zoomDomainAxes(factor, info, source, false);",
    "right" : "zoomDomainAxes(factor, info, source, false);",
    "info" : "ExpressionStatement[178333-178377]:ExpressionStatement[178386-178430]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[178810-178816]:Modifier[178863-178869]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[178817-178821]:PrimitiveType[178870-178874]"
  }, {
    "left" : "zoomDomainAxes",
    "right" : "zoomDomainAxes",
    "info" : "SimpleName[178822-178836]:SimpleName[178875-178889]"
  }, {
    "left" : "double factor",
    "right" : "double factor",
    "info" : "SingleVariableDeclaration[178837-178850]:SingleVariableDeclaration[178890-178903]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[178852-178874]:SingleVariableDeclaration[178905-178927]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[178908-178922]:SingleVariableDeclaration[178961-178975]"
  }, {
    "left" : "boolean useAnchor",
    "right" : "boolean useAnchor",
    "info" : "SingleVariableDeclaration[178924-178941]:SingleVariableDeclaration[178977-178994]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178943-179865]:Block[178996-179918]"
  }, {
    "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "info" : "ForStatement[179005-179858]:ForStatement[179058-179911]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179054-179858]:Block[179107-179911]"
  }, {
    "left" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
    "right" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
    "info" : "VariableDeclarationStatement[179069-179127]:VariableDeclarationStatement[179122-179180]"
  }, {
    "left" : "if (domainAxis != null)",
    "right" : "if (domainAxis != null)",
    "info" : "IfStatement[179141-179847]:IfStatement[179194-179900]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179165-179847]:Block[179218-179900]"
  }, {
    "left" : "if (useAnchor)",
    "right" : "if (useAnchor)",
    "info" : "IfStatement[179184-179832]:IfStatement[179237-179885]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179199-179736]:Block[179252-179789]"
  }, {
    "left" : "double sourceX = source.getX();",
    "right" : "double sourceX = source.getX();",
    "info" : "VariableDeclarationStatement[179332-179363]:VariableDeclarationStatement[179385-179416]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[179385-179511]:IfStatement[179438-179564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179437-179511]:Block[179490-179564]"
  }, {
    "left" : "sourceX = source.getY();",
    "right" : "sourceX = source.getY();",
    "info" : "ExpressionStatement[179464-179488]:ExpressionStatement[179517-179541]"
  }, {
    "left" : "double anchorX = domainAxis.java2DToValue(sourceX,\r\n                            info.getDataArea(), getDomainAxisEdge());",
    "right" : "double anchorX = domainAxis.java2DToValue(sourceX,\r\n                            info.getDataArea(), getDomainAxisEdge());",
    "info" : "VariableDeclarationStatement[179533-179654]:VariableDeclarationStatement[179586-179707]"
  }, {
    "left" : "domainAxis.resizeRange2(factor, anchorX);",
    "right" : "domainAxis.resizeRange2(factor, anchorX);",
    "info" : "ExpressionStatement[179676-179717]:ExpressionStatement[179729-179770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179759-179832]:Block[179812-179885]"
  }, {
    "left" : "domainAxis.resizeRange(factor);",
    "right" : "domainAxis.resizeRange(factor);",
    "info" : "ExpressionStatement[179782-179813]:ExpressionStatement[179835-179866]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[180611-180617]:Modifier[180664-180670]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[180618-180622]:PrimitiveType[180671-180675]"
  }, {
    "left" : "zoomDomainAxes",
    "right" : "zoomDomainAxes",
    "info" : "SimpleName[180623-180637]:SimpleName[180676-180690]"
  }, {
    "left" : "double lowerPercent",
    "right" : "double lowerPercent",
    "info" : "SingleVariableDeclaration[180638-180657]:SingleVariableDeclaration[180691-180710]"
  }, {
    "left" : "double upperPercent",
    "right" : "double upperPercent",
    "info" : "SingleVariableDeclaration[180659-180678]:SingleVariableDeclaration[180712-180731]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[180712-180734]:SingleVariableDeclaration[180765-180787]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[180736-180750]:SingleVariableDeclaration[180789-180803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180752-181024]:Block[180805-181077]"
  }, {
    "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "info" : "ForStatement[180763-181017]:ForStatement[180816-181070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180812-181017]:Block[180865-181070]"
  }, {
    "left" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
    "right" : "ValueAxis domainAxis = (ValueAxis) this.domainAxes.get(i);",
    "info" : "VariableDeclarationStatement[180827-180885]:VariableDeclarationStatement[180880-180938]"
  }, {
    "left" : "if (domainAxis != null)",
    "right" : "if (domainAxis != null)",
    "info" : "IfStatement[180899-181006]:IfStatement[180952-181059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180923-181006]:Block[180976-181059]"
  }, {
    "left" : "domainAxis.zoomRange(lowerPercent, upperPercent);",
    "right" : "domainAxis.zoomRange(lowerPercent, upperPercent);",
    "info" : "ExpressionStatement[180942-180991]:ExpressionStatement[180995-181044]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[181344-181350]:Modifier[181397-181403]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[181351-181355]:PrimitiveType[181404-181408]"
  }, {
    "left" : "zoomRangeAxes",
    "right" : "zoomRangeAxes",
    "info" : "SimpleName[181356-181369]:SimpleName[181409-181422]"
  }, {
    "left" : "double factor",
    "right" : "double factor",
    "info" : "SingleVariableDeclaration[181370-181383]:SingleVariableDeclaration[181423-181436]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[181385-181407]:SingleVariableDeclaration[181438-181460]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[181440-181454]:SingleVariableDeclaration[181493-181507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[181456-181554]:Block[181509-181607]"
  }, {
    "left" : "zoomRangeAxes(factor, info, source, false);",
    "right" : "zoomRangeAxes(factor, info, source, false);",
    "info" : "ExpressionStatement[181504-181547]:ExpressionStatement[181557-181600]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[182027-182033]:Modifier[182080-182086]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[182034-182038]:PrimitiveType[182087-182091]"
  }, {
    "left" : "zoomRangeAxes",
    "right" : "zoomRangeAxes",
    "info" : "SimpleName[182039-182052]:SimpleName[182092-182105]"
  }, {
    "left" : "double factor",
    "right" : "double factor",
    "info" : "SingleVariableDeclaration[182053-182066]:SingleVariableDeclaration[182106-182119]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[182068-182090]:SingleVariableDeclaration[182121-182143]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[182123-182137]:SingleVariableDeclaration[182176-182190]"
  }, {
    "left" : "boolean useAnchor",
    "right" : "boolean useAnchor",
    "info" : "SingleVariableDeclaration[182139-182156]:SingleVariableDeclaration[182192-182209]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182158-183071]:Block[182211-183124]"
  }, {
    "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "info" : "ForStatement[182219-183064]:ForStatement[182272-183117]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182267-183064]:Block[182320-183117]"
  }, {
    "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
    "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
    "info" : "VariableDeclarationStatement[182282-182338]:VariableDeclarationStatement[182335-182391]"
  }, {
    "left" : "if (rangeAxis != null)",
    "right" : "if (rangeAxis != null)",
    "info" : "IfStatement[182352-183053]:IfStatement[182405-183106]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182375-183053]:Block[182428-183106]"
  }, {
    "left" : "if (useAnchor)",
    "right" : "if (useAnchor)",
    "info" : "IfStatement[182394-183038]:IfStatement[182447-183091]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182409-182943]:Block[182462-182996]"
  }, {
    "left" : "double sourceY = source.getY();",
    "right" : "double sourceY = source.getY();",
    "info" : "VariableDeclarationStatement[182542-182573]:VariableDeclarationStatement[182595-182626]"
  }, {
    "left" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "right" : "if (this.orientation == PlotOrientation.HORIZONTAL)",
    "info" : "IfStatement[182595-182721]:IfStatement[182648-182774]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182647-182721]:Block[182700-182774]"
  }, {
    "left" : "sourceY = source.getX();",
    "right" : "sourceY = source.getX();",
    "info" : "ExpressionStatement[182674-182698]:ExpressionStatement[182727-182751]"
  }, {
    "left" : "double anchorY = rangeAxis.java2DToValue(sourceY,\r\n                            info.getDataArea(), getRangeAxisEdge());",
    "right" : "double anchorY = rangeAxis.java2DToValue(sourceY,\r\n                            info.getDataArea(), getRangeAxisEdge());",
    "info" : "VariableDeclarationStatement[182743-182862]:VariableDeclarationStatement[182796-182915]"
  }, {
    "left" : "rangeAxis.resizeRange2(factor, anchorY);",
    "right" : "rangeAxis.resizeRange2(factor, anchorY);",
    "info" : "ExpressionStatement[182884-182924]:ExpressionStatement[182937-182977]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182966-183038]:Block[183019-183091]"
  }, {
    "left" : "rangeAxis.resizeRange(factor);",
    "right" : "rangeAxis.resizeRange(factor);",
    "info" : "ExpressionStatement[182989-183019]:ExpressionStatement[183042-183072]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[183401-183407]:Modifier[183454-183460]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[183408-183412]:PrimitiveType[183461-183465]"
  }, {
    "left" : "zoomRangeAxes",
    "right" : "zoomRangeAxes",
    "info" : "SimpleName[183413-183426]:SimpleName[183466-183479]"
  }, {
    "left" : "double lowerPercent",
    "right" : "double lowerPercent",
    "info" : "SingleVariableDeclaration[183427-183446]:SingleVariableDeclaration[183480-183499]"
  }, {
    "left" : "double upperPercent",
    "right" : "double upperPercent",
    "info" : "SingleVariableDeclaration[183448-183467]:SingleVariableDeclaration[183501-183520]"
  }, {
    "left" : "PlotRenderingInfo info",
    "right" : "PlotRenderingInfo info",
    "info" : "SingleVariableDeclaration[183500-183522]:SingleVariableDeclaration[183553-183575]"
  }, {
    "left" : "Point2D source",
    "right" : "Point2D source",
    "info" : "SingleVariableDeclaration[183524-183538]:SingleVariableDeclaration[183577-183591]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183540-183807]:Block[183593-183860]"
  }, {
    "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "info" : "ForStatement[183551-183800]:ForStatement[183604-183853]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183599-183800]:Block[183652-183853]"
  }, {
    "left" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
    "right" : "ValueAxis rangeAxis = (ValueAxis) this.rangeAxes.get(i);",
    "info" : "VariableDeclarationStatement[183614-183670]:VariableDeclarationStatement[183667-183723]"
  }, {
    "left" : "if (rangeAxis != null)",
    "right" : "if (rangeAxis != null)",
    "info" : "IfStatement[183684-183789]:IfStatement[183737-183842]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183707-183789]:Block[183760-183842]"
  }, {
    "left" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
    "right" : "rangeAxis.zoomRange(lowerPercent, upperPercent);",
    "info" : "ExpressionStatement[183726-183774]:ExpressionStatement[183779-183827]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[184016-184022]:Modifier[184069-184075]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[184023-184030]:PrimitiveType[184076-184083]"
  }, {
    "left" : "isDomainZoomable",
    "right" : "isDomainZoomable",
    "info" : "SimpleName[184031-184047]:SimpleName[184084-184100]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184050-184080]:Block[184103-184133]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[184061-184073]:ReturnStatement[184114-184126]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[184289-184295]:Modifier[184342-184348]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[184296-184303]:PrimitiveType[184349-184356]"
  }, {
    "left" : "isRangeZoomable",
    "right" : "isRangeZoomable",
    "info" : "SimpleName[184304-184319]:SimpleName[184357-184372]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184322-184352]:Block[184375-184405]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[184333-184345]:ReturnStatement[184386-184398]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[184563-184569]:Modifier[184616-184622]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[184570-184573]:PrimitiveType[184623-184626]"
  }, {
    "left" : "getSeriesCount",
    "right" : "getSeriesCount",
    "info" : "SimpleName[184574-184588]:SimpleName[184627-184641]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184591-184782]:Block[184644-184835]"
  }, {
    "left" : "int result = 0;",
    "right" : "int result = 0;",
    "info" : "VariableDeclarationStatement[184602-184617]:VariableDeclarationStatement[184655-184670]"
  }, {
    "left" : "XYDataset dataset = getDataset();",
    "right" : "XYDataset dataset = getDataset();",
    "info" : "VariableDeclarationStatement[184627-184660]:VariableDeclarationStatement[184680-184713]"
  }, {
    "left" : "if (dataset != null)",
    "right" : "if (dataset != null)",
    "info" : "IfStatement[184670-184751]:IfStatement[184723-184804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184691-184751]:Block[184744-184804]"
  }, {
    "left" : "result = dataset.getSeriesCount();",
    "right" : "result = dataset.getSeriesCount();",
    "info" : "ExpressionStatement[184706-184740]:ExpressionStatement[184759-184793]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[184761-184775]:ReturnStatement[184814-184828]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[184991-184997]:Modifier[185044-185050]"
  }, {
    "left" : "LegendItemCollection",
    "right" : "LegendItemCollection",
    "info" : "SimpleType[184998-185018]:SimpleType[185051-185071]"
  }, {
    "left" : "getFixedLegendItems",
    "right" : "getFixedLegendItems",
    "info" : "SimpleName[185019-185038]:SimpleName[185072-185091]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185041-185088]:Block[185094-185141]"
  }, {
    "left" : "return this.fixedLegendItems;",
    "right" : "return this.fixedLegendItems;",
    "info" : "ReturnStatement[185052-185081]:ReturnStatement[185105-185134]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[185399-185405]:Modifier[185452-185458]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[185406-185410]:PrimitiveType[185459-185463]"
  }, {
    "left" : "setFixedLegendItems",
    "right" : "setFixedLegendItems",
    "info" : "SimpleName[185411-185430]:SimpleName[185464-185483]"
  }, {
    "left" : "LegendItemCollection items",
    "right" : "LegendItemCollection items",
    "info" : "SingleVariableDeclaration[185431-185457]:SingleVariableDeclaration[185484-185510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185459-185535]:Block[185512-185588]"
  }, {
    "left" : "this.fixedLegendItems = items;",
    "right" : "this.fixedLegendItems = items;",
    "info" : "ExpressionStatement[185470-185500]:ExpressionStatement[185523-185553]"
  }, {
    "left" : "fireChangeEvent();",
    "right" : "fireChangeEvent();",
    "info" : "ExpressionStatement[185510-185528]:ExpressionStatement[185563-185581]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[185798-185804]:Modifier[185851-185857]"
  }, {
    "left" : "LegendItemCollection",
    "right" : "LegendItemCollection",
    "info" : "SimpleType[185805-185825]:SimpleType[185858-185878]"
  }, {
    "left" : "getLegendItems",
    "right" : "getLegendItems",
    "info" : "SimpleName[185826-185840]:SimpleName[185879-185893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185843-187085]:Block[185896-187138]"
  }, {
    "left" : "if (this.fixedLegendItems != null)",
    "right" : "if (this.fixedLegendItems != null)",
    "info" : "IfStatement[185854-185944]:IfStatement[185907-185997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185889-185944]:Block[185942-185997]"
  }, {
    "left" : "return this.fixedLegendItems;",
    "right" : "return this.fixedLegendItems;",
    "info" : "ReturnStatement[185904-185933]:ReturnStatement[185957-185986]"
  }, {
    "left" : "LegendItemCollection result = new LegendItemCollection();",
    "right" : "LegendItemCollection result = new LegendItemCollection();",
    "info" : "VariableDeclarationStatement[185954-186011]:VariableDeclarationStatement[186007-186064]"
  }, {
    "left" : "int count = this.datasets.size();",
    "right" : "int count = this.datasets.size();",
    "info" : "VariableDeclarationStatement[186021-186054]:VariableDeclarationStatement[186074-186107]"
  }, {
    "left" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
    "right" : "for (int datasetIndex = 0; datasetIndex < count; datasetIndex++)",
    "info" : "ForStatement[186064-187054]:ForStatement[186117-187107]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186129-187054]:Block[186182-187107]"
  }, {
    "left" : "XYDataset dataset = getDataset(datasetIndex);",
    "right" : "XYDataset dataset = getDataset(datasetIndex);",
    "info" : "VariableDeclarationStatement[186144-186189]:VariableDeclarationStatement[186197-186242]"
  }, {
    "left" : "if (dataset != null)",
    "right" : "if (dataset != null)",
    "info" : "IfStatement[186203-187043]:IfStatement[186256-187096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186224-187043]:Block[186277-187096]"
  }, {
    "left" : "XYItemRenderer renderer = getRenderer(datasetIndex);",
    "right" : "XYItemRenderer renderer = getRenderer(datasetIndex);",
    "info" : "VariableDeclarationStatement[186243-186295]:VariableDeclarationStatement[186296-186348]"
  }, {
    "left" : "if (renderer == null)",
    "right" : "if (renderer == null)",
    "info" : "IfStatement[186313-186403]:IfStatement[186366-186456]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186335-186403]:Block[186388-186456]"
  }, {
    "left" : "renderer = getRenderer(0);",
    "right" : "renderer = getRenderer(0);",
    "info" : "ExpressionStatement[186358-186384]:ExpressionStatement[186411-186437]"
  }, {
    "left" : "if (renderer != null)",
    "right" : "if (renderer != null)",
    "info" : "IfStatement[186421-187028]:IfStatement[186474-187081]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186443-187028]:Block[186496-187081]"
  }, {
    "left" : "int seriesCount = dataset.getSeriesCount();",
    "right" : "int seriesCount = dataset.getSeriesCount();",
    "info" : "VariableDeclarationStatement[186466-186509]:VariableDeclarationStatement[186519-186562]"
  }, {
    "left" : "for (int i = 0; i < seriesCount; i++)",
    "right" : "for (int i = 0; i < seriesCount; i++)",
    "info" : "ForStatement[186531-187009]:ForStatement[186584-187062]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186569-187009]:Block[186622-187062]"
  }, {
    "left" : "if (renderer.isSeriesVisible(i)\r\n                                && renderer.isSeriesVisibleInLegend(i))",
    "right" : "if (renderer.isSeriesVisible(i)\r\n                                && renderer.isSeriesVisibleInLegend(i))",
    "info" : "IfStatement[186596-186986]:IfStatement[186649-187039]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186701-186986]:Block[186754-187039]"
  }, {
    "left" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
    "right" : "LegendItem item = renderer.getLegendItem(\r\n                                    datasetIndex, i);",
    "info" : "VariableDeclarationStatement[186732-186828]:VariableDeclarationStatement[186785-186881]"
  }, {
    "left" : "if (item != null)",
    "right" : "if (item != null)",
    "info" : "IfStatement[186858-186959]:IfStatement[186911-187012]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186876-186959]:Block[186929-187012]"
  }, {
    "left" : "result.add(item);",
    "right" : "result.add(item);",
    "info" : "ExpressionStatement[186911-186928]:ExpressionStatement[186964-186981]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[187064-187078]:ReturnStatement[187117-187131]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[187304-187310]:Modifier[187357-187363]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[187311-187318]:PrimitiveType[187364-187371]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[187319-187325]:SimpleName[187372-187378]"
  }, {
    "left" : "Object obj",
    "right" : "Object obj",
    "info" : "SingleVariableDeclaration[187326-187336]:SingleVariableDeclaration[187379-187389]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187338-194621]:Block[187391-194674]"
  }, {
    "left" : "if (obj == this)",
    "right" : "if (obj == this)",
    "info" : "IfStatement[187349-187404]:IfStatement[187402-187457]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187366-187404]:Block[187419-187457]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[187381-187393]:ReturnStatement[187434-187446]"
  }, {
    "left" : "if (!(obj instanceof XYPlot))",
    "right" : "if (!(obj instanceof XYPlot))",
    "info" : "IfStatement[187414-187483]:IfStatement[187467-187536]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187444-187483]:Block[187497-187536]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[187459-187472]:ReturnStatement[187512-187525]"
  }, {
    "left" : "XYPlot that = (XYPlot) obj;",
    "right" : "XYPlot that = (XYPlot) obj;",
    "info" : "VariableDeclarationStatement[187493-187520]:VariableDeclarationStatement[187546-187573]"
  }, {
    "left" : "if (this.weight != that.weight)",
    "right" : "if (this.weight != that.weight)",
    "info" : "IfStatement[187530-187601]:IfStatement[187583-187654]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187562-187601]:Block[187615-187654]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[187577-187590]:ReturnStatement[187630-187643]"
  }, {
    "left" : "if (this.orientation != that.orientation)",
    "right" : "if (this.orientation != that.orientation)",
    "info" : "IfStatement[187611-187692]:IfStatement[187664-187745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187653-187692]:Block[187706-187745]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[187668-187681]:ReturnStatement[187721-187734]"
  }, {
    "left" : "if (!this.domainAxes.equals(that.domainAxes))",
    "right" : "if (!this.domainAxes.equals(that.domainAxes))",
    "info" : "IfStatement[187702-187787]:IfStatement[187755-187840]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187748-187787]:Block[187801-187840]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[187763-187776]:ReturnStatement[187816-187829]"
  }, {
    "left" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
    "right" : "if (!this.domainAxisLocations.equals(that.domainAxisLocations))",
    "info" : "IfStatement[187797-187900]:IfStatement[187850-187953]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187861-187900]:Block[187914-187953]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[187876-187889]:ReturnStatement[187929-187942]"
  }, {
    "left" : "if (this.rangeCrosshairLockedOnData\r\n                != that.rangeCrosshairLockedOnData)",
    "right" : "if (this.rangeCrosshairLockedOnData\r\n                != that.rangeCrosshairLockedOnData)",
    "info" : "IfStatement[187910-188038]:IfStatement[187963-188091]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187999-188038]:Block[188052-188091]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188014-188027]:ReturnStatement[188067-188080]"
  }, {
    "left" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
    "right" : "if (this.domainGridlinesVisible != that.domainGridlinesVisible)",
    "info" : "IfStatement[188048-188151]:IfStatement[188101-188204]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188112-188151]:Block[188165-188204]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188127-188140]:ReturnStatement[188180-188193]"
  }, {
    "left" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
    "right" : "if (this.rangeGridlinesVisible != that.rangeGridlinesVisible)",
    "info" : "IfStatement[188161-188262]:IfStatement[188214-188315]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188223-188262]:Block[188276-188315]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188238-188251]:ReturnStatement[188291-188304]"
  }, {
    "left" : "if (this.domainMinorGridlinesVisible\r\n                != that.domainMinorGridlinesVisible)",
    "right" : "if (this.domainMinorGridlinesVisible\r\n                != that.domainMinorGridlinesVisible)",
    "info" : "IfStatement[188272-188402]:IfStatement[188325-188455]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188363-188402]:Block[188416-188455]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188378-188391]:ReturnStatement[188431-188444]"
  }, {
    "left" : "if (this.rangeMinorGridlinesVisible\r\n                != that.rangeMinorGridlinesVisible)",
    "right" : "if (this.rangeMinorGridlinesVisible\r\n                != that.rangeMinorGridlinesVisible)",
    "info" : "IfStatement[188412-188540]:IfStatement[188465-188593]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188501-188540]:Block[188554-188593]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188516-188529]:ReturnStatement[188569-188582]"
  }, {
    "left" : "if (this.domainZeroBaselineVisible != that.domainZeroBaselineVisible)",
    "right" : "if (this.domainZeroBaselineVisible != that.domainZeroBaselineVisible)",
    "info" : "IfStatement[188550-188659]:IfStatement[188603-188712]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188620-188659]:Block[188673-188712]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188635-188648]:ReturnStatement[188688-188701]"
  }, {
    "left" : "if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible)",
    "right" : "if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible)",
    "info" : "IfStatement[188669-188776]:IfStatement[188722-188829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188737-188776]:Block[188790-188829]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188752-188765]:ReturnStatement[188805-188818]"
  }, {
    "left" : "if (this.domainCrosshairVisible != that.domainCrosshairVisible)",
    "right" : "if (this.domainCrosshairVisible != that.domainCrosshairVisible)",
    "info" : "IfStatement[188786-188889]:IfStatement[188839-188942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188850-188889]:Block[188903-188942]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188865-188878]:ReturnStatement[188918-188931]"
  }, {
    "left" : "if (this.domainCrosshairValue != that.domainCrosshairValue)",
    "right" : "if (this.domainCrosshairValue != that.domainCrosshairValue)",
    "info" : "IfStatement[188899-188998]:IfStatement[188952-189051]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188959-188998]:Block[189012-189051]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[188974-188987]:ReturnStatement[189027-189040]"
  }, {
    "left" : "if (this.domainCrosshairLockedOnData\r\n                != that.domainCrosshairLockedOnData)",
    "right" : "if (this.domainCrosshairLockedOnData\r\n                != that.domainCrosshairLockedOnData)",
    "info" : "IfStatement[189008-189138]:IfStatement[189061-189191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189099-189138]:Block[189152-189191]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189114-189127]:ReturnStatement[189167-189180]"
  }, {
    "left" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
    "right" : "if (this.rangeCrosshairVisible != that.rangeCrosshairVisible)",
    "info" : "IfStatement[189148-189249]:IfStatement[189201-189302]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189210-189249]:Block[189263-189302]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189225-189238]:ReturnStatement[189278-189291]"
  }, {
    "left" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
    "right" : "if (this.rangeCrosshairValue != that.rangeCrosshairValue)",
    "info" : "IfStatement[189259-189356]:IfStatement[189312-189409]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189317-189356]:Block[189370-189409]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189332-189345]:ReturnStatement[189385-189398]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
    "right" : "if (!ObjectUtilities.equal(this.axisOffset, that.axisOffset))",
    "info" : "IfStatement[189366-189467]:IfStatement[189419-189520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189428-189467]:Block[189481-189520]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189443-189456]:ReturnStatement[189496-189509]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
    "right" : "if (!ObjectUtilities.equal(this.renderers, that.renderers))",
    "info" : "IfStatement[189477-189576]:IfStatement[189530-189629]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189537-189576]:Block[189590-189629]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189552-189565]:ReturnStatement[189605-189618]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.rangeAxes, that.rangeAxes))",
    "right" : "if (!ObjectUtilities.equal(this.rangeAxes, that.rangeAxes))",
    "info" : "IfStatement[189586-189685]:IfStatement[189639-189738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189646-189685]:Block[189699-189738]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189661-189674]:ReturnStatement[189714-189727]"
  }, {
    "left" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
    "right" : "if (!this.rangeAxisLocations.equals(that.rangeAxisLocations))",
    "info" : "IfStatement[189695-189796]:IfStatement[189748-189849]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189757-189796]:Block[189810-189849]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189772-189785]:ReturnStatement[189825-189838]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.datasetToDomainAxesMap,\r\n                that.datasetToDomainAxesMap))",
    "right" : "if (!ObjectUtilities.equal(this.datasetToDomainAxesMap,\r\n                that.datasetToDomainAxesMap))",
    "info" : "IfStatement[189806-189948]:IfStatement[189859-190001]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189909-189948]:Block[189962-190001]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[189924-189937]:ReturnStatement[189977-189990]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.datasetToRangeAxesMap,\r\n                that.datasetToRangeAxesMap))",
    "right" : "if (!ObjectUtilities.equal(this.datasetToRangeAxesMap,\r\n                that.datasetToRangeAxesMap))",
    "info" : "IfStatement[189958-190098]:IfStatement[190011-190151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190059-190098]:Block[190112-190151]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[190074-190087]:ReturnStatement[190127-190140]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.domainGridlineStroke,\r\n                that.domainGridlineStroke))",
    "right" : "if (!ObjectUtilities.equal(this.domainGridlineStroke,\r\n                that.domainGridlineStroke))",
    "info" : "IfStatement[190108-190246]:IfStatement[190161-190299]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190207-190246]:Block[190260-190299]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[190222-190235]:ReturnStatement[190275-190288]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.domainGridlinePaint,\r\n                that.domainGridlinePaint))",
    "right" : "if (!PaintUtilities.equal(this.domainGridlinePaint,\r\n                that.domainGridlinePaint))",
    "info" : "IfStatement[190256-190391]:IfStatement[190309-190444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190352-190391]:Block[190405-190444]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[190367-190380]:ReturnStatement[190420-190433]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke,\r\n                that.rangeGridlineStroke))",
    "right" : "if (!ObjectUtilities.equal(this.rangeGridlineStroke,\r\n                that.rangeGridlineStroke))",
    "info" : "IfStatement[190401-190537]:IfStatement[190454-190590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190498-190537]:Block[190551-190590]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[190513-190526]:ReturnStatement[190566-190579]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.rangeGridlinePaint,\r\n                that.rangeGridlinePaint))",
    "right" : "if (!PaintUtilities.equal(this.rangeGridlinePaint,\r\n                that.rangeGridlinePaint))",
    "info" : "IfStatement[190547-190680]:IfStatement[190600-190733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190641-190680]:Block[190694-190733]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[190656-190669]:ReturnStatement[190709-190722]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.domainMinorGridlineStroke,\r\n                that.domainMinorGridlineStroke))",
    "right" : "if (!ObjectUtilities.equal(this.domainMinorGridlineStroke,\r\n                that.domainMinorGridlineStroke))",
    "info" : "IfStatement[190690-190838]:IfStatement[190743-190891]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190799-190838]:Block[190852-190891]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[190814-190827]:ReturnStatement[190867-190880]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.domainMinorGridlinePaint,\r\n                that.domainMinorGridlinePaint))",
    "right" : "if (!PaintUtilities.equal(this.domainMinorGridlinePaint,\r\n                that.domainMinorGridlinePaint))",
    "info" : "IfStatement[190848-190993]:IfStatement[190901-191046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190954-190993]:Block[191007-191046]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[190969-190982]:ReturnStatement[191022-191035]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.rangeMinorGridlineStroke,\r\n                that.rangeMinorGridlineStroke))",
    "right" : "if (!ObjectUtilities.equal(this.rangeMinorGridlineStroke,\r\n                that.rangeMinorGridlineStroke))",
    "info" : "IfStatement[191003-191149]:IfStatement[191056-191202]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191110-191149]:Block[191163-191202]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[191125-191138]:ReturnStatement[191178-191191]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.rangeMinorGridlinePaint,\r\n                that.rangeMinorGridlinePaint))",
    "right" : "if (!PaintUtilities.equal(this.rangeMinorGridlinePaint,\r\n                that.rangeMinorGridlinePaint))",
    "info" : "IfStatement[191159-191302]:IfStatement[191212-191355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191263-191302]:Block[191316-191355]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[191278-191291]:ReturnStatement[191331-191344]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.domainZeroBaselinePaint,\r\n                that.domainZeroBaselinePaint))",
    "right" : "if (!PaintUtilities.equal(this.domainZeroBaselinePaint,\r\n                that.domainZeroBaselinePaint))",
    "info" : "IfStatement[191312-191455]:IfStatement[191365-191508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191416-191455]:Block[191469-191508]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[191431-191444]:ReturnStatement[191484-191497]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.domainZeroBaselineStroke,\r\n                that.domainZeroBaselineStroke))",
    "right" : "if (!ObjectUtilities.equal(this.domainZeroBaselineStroke,\r\n                that.domainZeroBaselineStroke))",
    "info" : "IfStatement[191465-191611]:IfStatement[191518-191664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191572-191611]:Block[191625-191664]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[191587-191600]:ReturnStatement[191640-191653]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.rangeZeroBaselinePaint,\r\n                that.rangeZeroBaselinePaint))",
    "right" : "if (!PaintUtilities.equal(this.rangeZeroBaselinePaint,\r\n                that.rangeZeroBaselinePaint))",
    "info" : "IfStatement[191621-191762]:IfStatement[191674-191815]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191723-191762]:Block[191776-191815]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[191738-191751]:ReturnStatement[191791-191804]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke,\r\n                that.rangeZeroBaselineStroke))",
    "right" : "if (!ObjectUtilities.equal(this.rangeZeroBaselineStroke,\r\n                that.rangeZeroBaselineStroke))",
    "info" : "IfStatement[191772-191916]:IfStatement[191825-191969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191877-191916]:Block[191930-191969]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[191892-191905]:ReturnStatement[191945-191958]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.domainCrosshairStroke,\r\n                that.domainCrosshairStroke))",
    "right" : "if (!ObjectUtilities.equal(this.domainCrosshairStroke,\r\n                that.domainCrosshairStroke))",
    "info" : "IfStatement[191926-192066]:IfStatement[191979-192119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192027-192066]:Block[192080-192119]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[192042-192055]:ReturnStatement[192095-192108]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.domainCrosshairPaint,\r\n                that.domainCrosshairPaint))",
    "right" : "if (!PaintUtilities.equal(this.domainCrosshairPaint,\r\n                that.domainCrosshairPaint))",
    "info" : "IfStatement[192076-192213]:IfStatement[192129-192266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192174-192213]:Block[192227-192266]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[192189-192202]:ReturnStatement[192242-192255]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke,\r\n                that.rangeCrosshairStroke))",
    "right" : "if (!ObjectUtilities.equal(this.rangeCrosshairStroke,\r\n                that.rangeCrosshairStroke))",
    "info" : "IfStatement[192223-192361]:IfStatement[192276-192414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192322-192361]:Block[192375-192414]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[192337-192350]:ReturnStatement[192390-192403]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint,\r\n                that.rangeCrosshairPaint))",
    "right" : "if (!PaintUtilities.equal(this.rangeCrosshairPaint,\r\n                that.rangeCrosshairPaint))",
    "info" : "IfStatement[192371-192506]:IfStatement[192424-192559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192467-192506]:Block[192520-192559]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[192482-192495]:ReturnStatement[192535-192548]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers,\r\n                that.foregroundDomainMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers,\r\n                that.foregroundDomainMarkers))",
    "info" : "IfStatement[192516-192660]:IfStatement[192569-192713]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192621-192660]:Block[192674-192713]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[192636-192649]:ReturnStatement[192689-192702]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers,\r\n                that.backgroundDomainMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers,\r\n                that.backgroundDomainMarkers))",
    "info" : "IfStatement[192670-192814]:IfStatement[192723-192867]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192775-192814]:Block[192828-192867]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[192790-192803]:ReturnStatement[192843-192856]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers,\r\n                that.foregroundRangeMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers,\r\n                that.foregroundRangeMarkers))",
    "info" : "IfStatement[192824-192966]:IfStatement[192877-193019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192927-192966]:Block[192980-193019]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[192942-192955]:ReturnStatement[192995-193008]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers,\r\n                that.backgroundRangeMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers,\r\n                that.backgroundRangeMarkers))",
    "info" : "IfStatement[192976-193118]:IfStatement[193029-193171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193079-193118]:Block[193132-193171]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[193094-193107]:ReturnStatement[193147-193160]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers,\r\n                that.foregroundDomainMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.foregroundDomainMarkers,\r\n                that.foregroundDomainMarkers))",
    "info" : "IfStatement[193128-193272]:IfStatement[193181-193325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193233-193272]:Block[193286-193325]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[193248-193261]:ReturnStatement[193301-193314]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers,\r\n                that.backgroundDomainMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.backgroundDomainMarkers,\r\n                that.backgroundDomainMarkers))",
    "info" : "IfStatement[193282-193426]:IfStatement[193335-193479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193387-193426]:Block[193440-193479]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[193402-193415]:ReturnStatement[193455-193468]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers,\r\n                that.foregroundRangeMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.foregroundRangeMarkers,\r\n                that.foregroundRangeMarkers))",
    "info" : "IfStatement[193436-193578]:IfStatement[193489-193631]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193539-193578]:Block[193592-193631]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[193554-193567]:ReturnStatement[193607-193620]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers,\r\n                that.backgroundRangeMarkers))",
    "right" : "if (!ObjectUtilities.equal(this.backgroundRangeMarkers,\r\n                that.backgroundRangeMarkers))",
    "info" : "IfStatement[193588-193730]:IfStatement[193641-193783]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193691-193730]:Block[193744-193783]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[193706-193719]:ReturnStatement[193759-193772]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
    "right" : "if (!ObjectUtilities.equal(this.annotations, that.annotations))",
    "info" : "IfStatement[193740-193843]:IfStatement[193793-193896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193804-193843]:Block[193857-193896]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[193819-193832]:ReturnStatement[193872-193885]"
  }, {
    "left" : "if (!ObjectUtilities.equal(this.fixedLegendItems,\r\n                that.fixedLegendItems))",
    "right" : "if (!ObjectUtilities.equal(this.fixedLegendItems,\r\n                that.fixedLegendItems))",
    "info" : "IfStatement[193853-193983]:IfStatement[193906-194036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193944-193983]:Block[193997-194036]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[193959-193972]:ReturnStatement[194012-194025]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.domainTickBandPaint,\r\n                that.domainTickBandPaint))",
    "right" : "if (!PaintUtilities.equal(this.domainTickBandPaint,\r\n                that.domainTickBandPaint))",
    "info" : "IfStatement[193993-194128]:IfStatement[194046-194181]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194089-194128]:Block[194142-194181]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[194104-194117]:ReturnStatement[194157-194170]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.rangeTickBandPaint,\r\n                that.rangeTickBandPaint))",
    "right" : "if (!PaintUtilities.equal(this.rangeTickBandPaint,\r\n                that.rangeTickBandPaint))",
    "info" : "IfStatement[194138-194271]:IfStatement[194191-194324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194232-194271]:Block[194285-194324]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[194247-194260]:ReturnStatement[194300-194313]"
  }, {
    "left" : "if (!this.quadrantOrigin.equals(that.quadrantOrigin))",
    "right" : "if (!this.quadrantOrigin.equals(that.quadrantOrigin))",
    "info" : "IfStatement[194281-194374]:IfStatement[194334-194427]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194335-194374]:Block[194388-194427]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[194350-194363]:ReturnStatement[194403-194416]"
  }, {
    "left" : "for (int i = 0; i < 4; i++)",
    "right" : "for (int i = 0; i < 4; i++)",
    "info" : "ForStatement[194384-194579]:ForStatement[194437-194632]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194412-194579]:Block[194465-194632]"
  }, {
    "left" : "if (!PaintUtilities.equal(this.quadrantPaint[i],\r\n                    that.quadrantPaint[i]))",
    "right" : "if (!PaintUtilities.equal(this.quadrantPaint[i],\r\n                    that.quadrantPaint[i]))",
    "info" : "IfStatement[194427-194568]:IfStatement[194480-194621]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194521-194568]:Block[194574-194621]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[194540-194553]:ReturnStatement[194593-194606]"
  }, {
    "left" : "return super.equals(obj);",
    "right" : "return super.equals(obj);",
    "info" : "ReturnStatement[194589-194614]:ReturnStatement[194642-194667]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[194848-194854]:Modifier[194901-194907]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[194855-194861]:SimpleType[194908-194914]"
  }, {
    "left" : "clone",
    "right" : "clone",
    "info" : "SimpleName[194862-194867]:SimpleName[194915-194920]"
  }, {
    "left" : "CloneNotSupportedException",
    "right" : "CloneNotSupportedException",
    "info" : "SimpleType[194877-194903]:SimpleType[194930-194956]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194904-198469]:Block[194957-198522]"
  }, {
    "left" : "XYPlot clone = (XYPlot) super.clone();",
    "right" : "XYPlot clone = (XYPlot) super.clone();",
    "info" : "VariableDeclarationStatement[194917-194955]:VariableDeclarationStatement[194970-195008]"
  }, {
    "left" : "clone.domainAxes = (ObjectList) ObjectUtilities.clone(this.domainAxes);",
    "right" : "clone.domainAxes = (ObjectList) ObjectUtilities.clone(this.domainAxes);",
    "info" : "ExpressionStatement[194965-195036]:ExpressionStatement[195018-195089]"
  }, {
    "left" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.domainAxes.size(); i++)",
    "info" : "ForStatement[195046-195439]:ForStatement[195099-195492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[195095-195439]:Block[195148-195492]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
    "right" : "ValueAxis axis = (ValueAxis) this.domainAxes.get(i);",
    "info" : "VariableDeclarationStatement[195110-195162]:VariableDeclarationStatement[195163-195215]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[195176-195428]:IfStatement[195229-195481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[195194-195428]:Block[195247-195481]"
  }, {
    "left" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
    "right" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
    "info" : "VariableDeclarationStatement[195213-195261]:VariableDeclarationStatement[195266-195314]"
  }, {
    "left" : "clone.domainAxes.set(i, clonedAxis);",
    "right" : "clone.domainAxes.set(i, clonedAxis);",
    "info" : "ExpressionStatement[195279-195315]:ExpressionStatement[195332-195368]"
  }, {
    "left" : "clonedAxis.setPlot(clone);",
    "right" : "clonedAxis.setPlot(clone);",
    "info" : "ExpressionStatement[195333-195359]:ExpressionStatement[195386-195412]"
  }, {
    "left" : "clonedAxis.addChangeListener(clone);",
    "right" : "clonedAxis.addChangeListener(clone);",
    "info" : "ExpressionStatement[195377-195413]:ExpressionStatement[195430-195466]"
  }, {
    "left" : "clone.domainAxisLocations = (ObjectList)\r\n                this.domainAxisLocations.clone();",
    "right" : "clone.domainAxisLocations = (ObjectList)\r\n                this.domainAxisLocations.clone();",
    "info" : "ExpressionStatement[195449-195540]:ExpressionStatement[195502-195593]"
  }, {
    "left" : "clone.rangeAxes = (ObjectList) ObjectUtilities.clone(this.rangeAxes);",
    "right" : "clone.rangeAxes = (ObjectList) ObjectUtilities.clone(this.rangeAxes);",
    "info" : "ExpressionStatement[195552-195621]:ExpressionStatement[195605-195674]"
  }, {
    "left" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "right" : "for (int i = 0; i < this.rangeAxes.size(); i++)",
    "info" : "ForStatement[195631-196021]:ForStatement[195684-196074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[195679-196021]:Block[195732-196074]"
  }, {
    "left" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
    "right" : "ValueAxis axis = (ValueAxis) this.rangeAxes.get(i);",
    "info" : "VariableDeclarationStatement[195694-195745]:VariableDeclarationStatement[195747-195798]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[195759-196010]:IfStatement[195812-196063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[195777-196010]:Block[195830-196063]"
  }, {
    "left" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
    "right" : "ValueAxis clonedAxis = (ValueAxis) axis.clone();",
    "info" : "VariableDeclarationStatement[195796-195844]:VariableDeclarationStatement[195849-195897]"
  }, {
    "left" : "clone.rangeAxes.set(i, clonedAxis);",
    "right" : "clone.rangeAxes.set(i, clonedAxis);",
    "info" : "ExpressionStatement[195862-195897]:ExpressionStatement[195915-195950]"
  }, {
    "left" : "clonedAxis.setPlot(clone);",
    "right" : "clonedAxis.setPlot(clone);",
    "info" : "ExpressionStatement[195915-195941]:ExpressionStatement[195968-195994]"
  }, {
    "left" : "clonedAxis.addChangeListener(clone);",
    "right" : "clonedAxis.addChangeListener(clone);",
    "info" : "ExpressionStatement[195959-195995]:ExpressionStatement[196012-196048]"
  }, {
    "left" : "clone.rangeAxisLocations = (ObjectList) ObjectUtilities.clone(\r\n                this.rangeAxisLocations);",
    "right" : "clone.rangeAxisLocations = (ObjectList) ObjectUtilities.clone(\r\n                this.rangeAxisLocations);",
    "info" : "ExpressionStatement[196031-196136]:ExpressionStatement[196084-196189]"
  }, {
    "left" : "clone.datasets = (ObjectList) ObjectUtilities.clone(this.datasets);",
    "right" : "clone.datasets = (ObjectList) ObjectUtilities.clone(this.datasets);",
    "info" : "ExpressionStatement[196223-196290]:ExpressionStatement[196276-196343]"
  }, {
    "left" : "for (int i = 0; i < clone.datasets.size(); ++i)",
    "right" : "for (int i = 0; i < clone.datasets.size(); ++i)",
    "info" : "ForStatement[196300-196492]:ForStatement[196353-196545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[196348-196492]:Block[196401-196545]"
  }, {
    "left" : "XYDataset d = getDataset(i);",
    "right" : "XYDataset d = getDataset(i);",
    "info" : "VariableDeclarationStatement[196363-196391]:VariableDeclarationStatement[196416-196444]"
  }, {
    "left" : "if (d != null)",
    "right" : "if (d != null)",
    "info" : "IfStatement[196405-196481]:IfStatement[196458-196534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[196420-196481]:Block[196473-196534]"
  }, {
    "left" : "d.addChangeListener(clone);",
    "right" : "d.addChangeListener(clone);",
    "info" : "ExpressionStatement[196439-196466]:ExpressionStatement[196492-196519]"
  }, {
    "left" : "clone.datasetToDomainAxesMap = new TreeMap();",
    "right" : "clone.datasetToDomainAxesMap = new TreeMap();",
    "info" : "ExpressionStatement[196504-196549]:ExpressionStatement[196557-196602]"
  }, {
    "left" : "clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);",
    "right" : "clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);",
    "info" : "ExpressionStatement[196559-196624]:ExpressionStatement[196612-196677]"
  }, {
    "left" : "clone.datasetToRangeAxesMap = new TreeMap();",
    "right" : "clone.datasetToRangeAxesMap = new TreeMap();",
    "info" : "ExpressionStatement[196634-196678]:ExpressionStatement[196687-196731]"
  }, {
    "left" : "clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);",
    "right" : "clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);",
    "info" : "ExpressionStatement[196688-196751]:ExpressionStatement[196741-196804]"
  }, {
    "left" : "clone.renderers = (ObjectList) ObjectUtilities.clone(this.renderers);",
    "right" : "clone.renderers = (ObjectList) ObjectUtilities.clone(this.renderers);",
    "info" : "ExpressionStatement[196763-196832]:ExpressionStatement[196816-196885]"
  }, {
    "left" : "for (int i = 0; i < this.renderers.size(); i++)",
    "right" : "for (int i = 0; i < this.renderers.size(); i++)",
    "info" : "ForStatement[196842-197174]:ForStatement[196895-197227]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[196890-197174]:Block[196943-197227]"
  }, {
    "left" : "XYItemRenderer renderer2 = (XYItemRenderer) this.renderers.get(i);",
    "right" : "XYItemRenderer renderer2 = (XYItemRenderer) this.renderers.get(i);",
    "info" : "VariableDeclarationStatement[196905-196971]:VariableDeclarationStatement[196958-197024]"
  }, {
    "left" : "if (renderer2 instanceof PublicCloneable)",
    "right" : "if (renderer2 instanceof PublicCloneable)",
    "info" : "IfStatement[196985-197163]:IfStatement[197038-197216]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197027-197163]:Block[197080-197216]"
  }, {
    "left" : "PublicCloneable pc = (PublicCloneable) renderer2;",
    "right" : "PublicCloneable pc = (PublicCloneable) renderer2;",
    "info" : "VariableDeclarationStatement[197046-197095]:VariableDeclarationStatement[197099-197148]"
  }, {
    "left" : "clone.renderers.set(i, pc.clone());",
    "right" : "clone.renderers.set(i, pc.clone());",
    "info" : "ExpressionStatement[197113-197148]:ExpressionStatement[197166-197201]"
  }, {
    "left" : "clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundDomainMarkers);",
    "right" : "clone.foregroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundDomainMarkers);",
    "info" : "ExpressionStatement[197184-197292]:ExpressionStatement[197237-197345]"
  }, {
    "left" : "clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundDomainMarkers);",
    "right" : "clone.backgroundDomainMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundDomainMarkers);",
    "info" : "ExpressionStatement[197302-197410]:ExpressionStatement[197355-197463]"
  }, {
    "left" : "clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundRangeMarkers);",
    "right" : "clone.foregroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.foregroundRangeMarkers);",
    "info" : "ExpressionStatement[197420-197526]:ExpressionStatement[197473-197579]"
  }, {
    "left" : "clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundRangeMarkers);",
    "right" : "clone.backgroundRangeMarkers = (Map) ObjectUtilities.clone(\r\n                this.backgroundRangeMarkers);",
    "info" : "ExpressionStatement[197536-197642]:ExpressionStatement[197589-197695]"
  }, {
    "left" : "clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);",
    "right" : "clone.annotations = (List) ObjectUtilities.deepClone(this.annotations);",
    "info" : "ExpressionStatement[197652-197723]:ExpressionStatement[197705-197776]"
  }, {
    "left" : "if (this.fixedDomainAxisSpace != null)",
    "right" : "if (this.fixedDomainAxisSpace != null)",
    "info" : "IfStatement[197733-197910]:IfStatement[197786-197963]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197772-197910]:Block[197825-197963]"
  }, {
    "left" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
    "right" : "clone.fixedDomainAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedDomainAxisSpace);",
    "info" : "ExpressionStatement[197787-197899]:ExpressionStatement[197840-197952]"
  }, {
    "left" : "if (this.fixedRangeAxisSpace != null)",
    "right" : "if (this.fixedRangeAxisSpace != null)",
    "info" : "IfStatement[197920-198094]:IfStatement[197973-198147]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197958-198094]:Block[198011-198147]"
  }, {
    "left" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
    "right" : "clone.fixedRangeAxisSpace = (AxisSpace) ObjectUtilities.clone(\r\n                    this.fixedRangeAxisSpace);",
    "info" : "ExpressionStatement[197973-198083]:ExpressionStatement[198026-198136]"
  }, {
    "left" : "if (this.fixedLegendItems != null)",
    "right" : "if (this.fixedLegendItems != null)",
    "info" : "IfStatement[198104-198264]:IfStatement[198157-198317]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198139-198264]:Block[198192-198317]"
  }, {
    "left" : "clone.fixedLegendItems\r\n                    = (LegendItemCollection) this.fixedLegendItems.clone();",
    "right" : "clone.fixedLegendItems\r\n                    = (LegendItemCollection) this.fixedLegendItems.clone();",
    "info" : "ExpressionStatement[198154-198253]:ExpressionStatement[198207-198306]"
  }, {
    "left" : "clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(\r\n                this.quadrantOrigin);",
    "right" : "clone.quadrantOrigin = (Point2D) ObjectUtilities.clone(\r\n                this.quadrantOrigin);",
    "info" : "ExpressionStatement[198274-198368]:ExpressionStatement[198327-198421]"
  }, {
    "left" : "clone.quadrantPaint = (Paint[]) this.quadrantPaint.clone();",
    "right" : "clone.quadrantPaint = (Paint[]) this.quadrantPaint.clone();",
    "info" : "ExpressionStatement[198378-198437]:ExpressionStatement[198431-198490]"
  }, {
    "left" : "return clone;",
    "right" : "return clone;",
    "info" : "ReturnStatement[198447-198460]:ReturnStatement[198500-198513]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[198648-198655]:Modifier[198701-198708]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[198656-198660]:PrimitiveType[198709-198713]"
  }, {
    "left" : "writeObject",
    "right" : "writeObject",
    "info" : "SimpleName[198661-198672]:SimpleName[198714-198725]"
  }, {
    "left" : "ObjectOutputStream stream",
    "right" : "ObjectOutputStream stream",
    "info" : "SingleVariableDeclaration[198673-198698]:SingleVariableDeclaration[198726-198751]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[198707-198718]:SimpleType[198760-198771]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198719-200280]:Block[198772-200333]"
  }, {
    "left" : "stream.defaultWriteObject();",
    "right" : "stream.defaultWriteObject();",
    "info" : "ExpressionStatement[198730-198758]:ExpressionStatement[198783-198811]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.domainGridlineStroke, stream);",
    "info" : "ExpressionStatement[198768-198831]:ExpressionStatement[198821-198884]"
  }, {
    "left" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
    "right" : "SerialUtilities.writePaint(this.domainGridlinePaint, stream);",
    "info" : "ExpressionStatement[198841-198902]:ExpressionStatement[198894-198955]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.rangeGridlineStroke, stream);",
    "info" : "ExpressionStatement[198912-198974]:ExpressionStatement[198965-199027]"
  }, {
    "left" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
    "right" : "SerialUtilities.writePaint(this.rangeGridlinePaint, stream);",
    "info" : "ExpressionStatement[198984-199044]:ExpressionStatement[199037-199097]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.domainMinorGridlineStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.domainMinorGridlineStroke, stream);",
    "info" : "ExpressionStatement[199054-199122]:ExpressionStatement[199107-199175]"
  }, {
    "left" : "SerialUtilities.writePaint(this.domainMinorGridlinePaint, stream);",
    "right" : "SerialUtilities.writePaint(this.domainMinorGridlinePaint, stream);",
    "info" : "ExpressionStatement[199132-199198]:ExpressionStatement[199185-199251]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.rangeMinorGridlineStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.rangeMinorGridlineStroke, stream);",
    "info" : "ExpressionStatement[199208-199275]:ExpressionStatement[199261-199328]"
  }, {
    "left" : "SerialUtilities.writePaint(this.rangeMinorGridlinePaint, stream);",
    "right" : "SerialUtilities.writePaint(this.rangeMinorGridlinePaint, stream);",
    "info" : "ExpressionStatement[199285-199350]:ExpressionStatement[199338-199403]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.rangeZeroBaselineStroke, stream);",
    "info" : "ExpressionStatement[199360-199426]:ExpressionStatement[199413-199479]"
  }, {
    "left" : "SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",
    "right" : "SerialUtilities.writePaint(this.rangeZeroBaselinePaint, stream);",
    "info" : "ExpressionStatement[199436-199500]:ExpressionStatement[199489-199553]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.domainCrosshairStroke, stream);",
    "info" : "ExpressionStatement[199510-199574]:ExpressionStatement[199563-199627]"
  }, {
    "left" : "SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",
    "right" : "SerialUtilities.writePaint(this.domainCrosshairPaint, stream);",
    "info" : "ExpressionStatement[199584-199646]:ExpressionStatement[199637-199699]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.rangeCrosshairStroke, stream);",
    "info" : "ExpressionStatement[199656-199719]:ExpressionStatement[199709-199772]"
  }, {
    "left" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
    "right" : "SerialUtilities.writePaint(this.rangeCrosshairPaint, stream);",
    "info" : "ExpressionStatement[199729-199790]:ExpressionStatement[199782-199843]"
  }, {
    "left" : "SerialUtilities.writePaint(this.domainTickBandPaint, stream);",
    "right" : "SerialUtilities.writePaint(this.domainTickBandPaint, stream);",
    "info" : "ExpressionStatement[199800-199861]:ExpressionStatement[199853-199914]"
  }, {
    "left" : "SerialUtilities.writePaint(this.rangeTickBandPaint, stream);",
    "right" : "SerialUtilities.writePaint(this.rangeTickBandPaint, stream);",
    "info" : "ExpressionStatement[199871-199931]:ExpressionStatement[199924-199984]"
  }, {
    "left" : "SerialUtilities.writePoint2D(this.quadrantOrigin, stream);",
    "right" : "SerialUtilities.writePoint2D(this.quadrantOrigin, stream);",
    "info" : "ExpressionStatement[199941-199999]:ExpressionStatement[199994-200052]"
  }, {
    "left" : "for (int i = 0; i < 4; i++)",
    "right" : "for (int i = 0; i < 4; i++)",
    "info" : "ForStatement[200009-200121]:ForStatement[200062-200174]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200037-200121]:Block[200090-200174]"
  }, {
    "left" : "SerialUtilities.writePaint(this.quadrantPaint[i], stream);",
    "right" : "SerialUtilities.writePaint(this.quadrantPaint[i], stream);",
    "info" : "ExpressionStatement[200052-200110]:ExpressionStatement[200105-200163]"
  }, {
    "left" : "SerialUtilities.writeStroke(this.domainZeroBaselineStroke, stream);",
    "right" : "SerialUtilities.writeStroke(this.domainZeroBaselineStroke, stream);",
    "info" : "ExpressionStatement[200131-200198]:ExpressionStatement[200184-200251]"
  }, {
    "left" : "SerialUtilities.writePaint(this.domainZeroBaselinePaint, stream);",
    "right" : "SerialUtilities.writePaint(this.domainZeroBaselinePaint, stream);",
    "info" : "ExpressionStatement[200208-200273]:ExpressionStatement[200261-200326]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[200531-200538]:Modifier[200584-200591]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[200539-200543]:PrimitiveType[200592-200596]"
  }, {
    "left" : "readObject",
    "right" : "readObject",
    "info" : "SimpleName[200544-200554]:SimpleName[200597-200607]"
  }, {
    "left" : "ObjectInputStream stream",
    "right" : "ObjectInputStream stream",
    "info" : "SingleVariableDeclaration[200555-200579]:SingleVariableDeclaration[200608-200632]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[200597-200608]:SimpleType[200650-200661]"
  }, {
    "left" : "ClassNotFoundException",
    "right" : "ClassNotFoundException",
    "info" : "SimpleType[200610-200632]:SimpleType[200663-200685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200633-203524]:Block[200686-203577]"
  }, {
    "left" : "stream.defaultReadObject();",
    "right" : "stream.defaultReadObject();",
    "info" : "ExpressionStatement[200646-200673]:ExpressionStatement[200699-200726]"
  }, {
    "left" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.domainGridlineStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[200683-200746]:ExpressionStatement[200736-200799]"
  }, {
    "left" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
    "right" : "this.domainGridlinePaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[200756-200817]:ExpressionStatement[200809-200870]"
  }, {
    "left" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.rangeGridlineStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[200827-200889]:ExpressionStatement[200880-200942]"
  }, {
    "left" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
    "right" : "this.rangeGridlinePaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[200899-200959]:ExpressionStatement[200952-201012]"
  }, {
    "left" : "this.domainMinorGridlineStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.domainMinorGridlineStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[200969-201037]:ExpressionStatement[201022-201090]"
  }, {
    "left" : "this.domainMinorGridlinePaint = SerialUtilities.readPaint(stream);",
    "right" : "this.domainMinorGridlinePaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[201047-201113]:ExpressionStatement[201100-201166]"
  }, {
    "left" : "this.rangeMinorGridlineStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.rangeMinorGridlineStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[201123-201190]:ExpressionStatement[201176-201243]"
  }, {
    "left" : "this.rangeMinorGridlinePaint = SerialUtilities.readPaint(stream);",
    "right" : "this.rangeMinorGridlinePaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[201200-201265]:ExpressionStatement[201253-201318]"
  }, {
    "left" : "this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.rangeZeroBaselineStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[201275-201341]:ExpressionStatement[201328-201394]"
  }, {
    "left" : "this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);",
    "right" : "this.rangeZeroBaselinePaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[201351-201415]:ExpressionStatement[201404-201468]"
  }, {
    "left" : "this.domainCrosshairStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.domainCrosshairStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[201425-201489]:ExpressionStatement[201478-201542]"
  }, {
    "left" : "this.domainCrosshairPaint = SerialUtilities.readPaint(stream);",
    "right" : "this.domainCrosshairPaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[201499-201561]:ExpressionStatement[201552-201614]"
  }, {
    "left" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.rangeCrosshairStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[201571-201634]:ExpressionStatement[201624-201687]"
  }, {
    "left" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
    "right" : "this.rangeCrosshairPaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[201644-201705]:ExpressionStatement[201697-201758]"
  }, {
    "left" : "this.domainTickBandPaint = SerialUtilities.readPaint(stream);",
    "right" : "this.domainTickBandPaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[201715-201776]:ExpressionStatement[201768-201829]"
  }, {
    "left" : "this.rangeTickBandPaint = SerialUtilities.readPaint(stream);",
    "right" : "this.rangeTickBandPaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[201786-201846]:ExpressionStatement[201839-201899]"
  }, {
    "left" : "this.quadrantOrigin = SerialUtilities.readPoint2D(stream);",
    "right" : "this.quadrantOrigin = SerialUtilities.readPoint2D(stream);",
    "info" : "ExpressionStatement[201856-201914]:ExpressionStatement[201909-201967]"
  }, {
    "left" : "this.quadrantPaint = new Paint[4];",
    "right" : "this.quadrantPaint = new Paint[4];",
    "info" : "ExpressionStatement[201924-201958]:ExpressionStatement[201977-202011]"
  }, {
    "left" : "for (int i = 0; i < 4; i++)",
    "right" : "for (int i = 0; i < 4; i++)",
    "info" : "ForStatement[201968-202080]:ForStatement[202021-202133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201996-202080]:Block[202049-202133]"
  }, {
    "left" : "this.quadrantPaint[i] = SerialUtilities.readPaint(stream);",
    "right" : "this.quadrantPaint[i] = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[202011-202069]:ExpressionStatement[202064-202122]"
  }, {
    "left" : "this.domainZeroBaselineStroke = SerialUtilities.readStroke(stream);",
    "right" : "this.domainZeroBaselineStroke = SerialUtilities.readStroke(stream);",
    "info" : "ExpressionStatement[202092-202159]:ExpressionStatement[202145-202212]"
  }, {
    "left" : "this.domainZeroBaselinePaint = SerialUtilities.readPaint(stream);",
    "right" : "this.domainZeroBaselinePaint = SerialUtilities.readPaint(stream);",
    "info" : "ExpressionStatement[202169-202234]:ExpressionStatement[202222-202287]"
  }, {
    "left" : "int domainAxisCount = this.domainAxes.size();",
    "right" : "int domainAxisCount = this.domainAxes.size();",
    "info" : "VariableDeclarationStatement[202344-202389]:VariableDeclarationStatement[202397-202442]"
  }, {
    "left" : "for (int i = 0; i < domainAxisCount; i++)",
    "right" : "for (int i = 0; i < domainAxisCount; i++)",
    "info" : "ForStatement[202399-202641]:ForStatement[202452-202694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202441-202641]:Block[202494-202694]"
  }, {
    "left" : "Axis axis = (Axis) this.domainAxes.get(i);",
    "right" : "Axis axis = (Axis) this.domainAxes.get(i);",
    "info" : "VariableDeclarationStatement[202456-202498]:VariableDeclarationStatement[202509-202551]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[202512-202630]:IfStatement[202565-202683]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202530-202630]:Block[202583-202683]"
  }, {
    "left" : "axis.setPlot(this);",
    "right" : "axis.setPlot(this);",
    "info" : "ExpressionStatement[202549-202568]:ExpressionStatement[202602-202621]"
  }, {
    "left" : "axis.addChangeListener(this);",
    "right" : "axis.addChangeListener(this);",
    "info" : "ExpressionStatement[202586-202615]:ExpressionStatement[202639-202668]"
  }, {
    "left" : "int rangeAxisCount = this.rangeAxes.size();",
    "right" : "int rangeAxisCount = this.rangeAxes.size();",
    "info" : "VariableDeclarationStatement[202651-202694]:VariableDeclarationStatement[202704-202747]"
  }, {
    "left" : "for (int i = 0; i < rangeAxisCount; i++)",
    "right" : "for (int i = 0; i < rangeAxisCount; i++)",
    "info" : "ForStatement[202704-202944]:ForStatement[202757-202997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202745-202944]:Block[202798-202997]"
  }, {
    "left" : "Axis axis = (Axis) this.rangeAxes.get(i);",
    "right" : "Axis axis = (Axis) this.rangeAxes.get(i);",
    "info" : "VariableDeclarationStatement[202760-202801]:VariableDeclarationStatement[202813-202854]"
  }, {
    "left" : "if (axis != null)",
    "right" : "if (axis != null)",
    "info" : "IfStatement[202815-202933]:IfStatement[202868-202986]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202833-202933]:Block[202886-202986]"
  }, {
    "left" : "axis.setPlot(this);",
    "right" : "axis.setPlot(this);",
    "info" : "ExpressionStatement[202852-202871]:ExpressionStatement[202905-202924]"
  }, {
    "left" : "axis.addChangeListener(this);",
    "right" : "axis.addChangeListener(this);",
    "info" : "ExpressionStatement[202889-202918]:ExpressionStatement[202942-202971]"
  }, {
    "left" : "int datasetCount = this.datasets.size();",
    "right" : "int datasetCount = this.datasets.size();",
    "info" : "VariableDeclarationStatement[202954-202994]:VariableDeclarationStatement[203007-203047]"
  }, {
    "left" : "for (int i = 0; i < datasetCount; i++)",
    "right" : "for (int i = 0; i < datasetCount; i++)",
    "info" : "ForStatement[203004-203219]:ForStatement[203057-203272]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203043-203219]:Block[203096-203272]"
  }, {
    "left" : "Dataset dataset = (Dataset) this.datasets.get(i);",
    "right" : "Dataset dataset = (Dataset) this.datasets.get(i);",
    "info" : "VariableDeclarationStatement[203058-203107]:VariableDeclarationStatement[203111-203160]"
  }, {
    "left" : "if (dataset != null)",
    "right" : "if (dataset != null)",
    "info" : "IfStatement[203121-203208]:IfStatement[203174-203261]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203142-203208]:Block[203195-203261]"
  }, {
    "left" : "dataset.addChangeListener(this);",
    "right" : "dataset.addChangeListener(this);",
    "info" : "ExpressionStatement[203161-203193]:ExpressionStatement[203214-203246]"
  }, {
    "left" : "int rendererCount = this.renderers.size();",
    "right" : "int rendererCount = this.renderers.size();",
    "info" : "VariableDeclarationStatement[203229-203271]:VariableDeclarationStatement[203282-203324]"
  }, {
    "left" : "for (int i = 0; i < rendererCount; i++)",
    "right" : "for (int i = 0; i < rendererCount; i++)",
    "info" : "ForStatement[203281-203515]:ForStatement[203334-203568]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203321-203515]:Block[203374-203568]"
  }, {
    "left" : "XYItemRenderer renderer = (XYItemRenderer) this.renderers.get(i);",
    "right" : "XYItemRenderer renderer = (XYItemRenderer) this.renderers.get(i);",
    "info" : "VariableDeclarationStatement[203336-203401]:VariableDeclarationStatement[203389-203454]"
  }, {
    "left" : "if (renderer != null)",
    "right" : "if (renderer != null)",
    "info" : "IfStatement[203415-203504]:IfStatement[203468-203557]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203437-203504]:Block[203490-203557]"
  }, {
    "left" : "renderer.addChangeListener(this);",
    "right" : "renderer.addChangeListener(this);",
    "info" : "ExpressionStatement[203456-203489]:ExpressionStatement[203509-203542]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[203791-203797]:Modifier[203844-203850]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[203798-203805]:PrimitiveType[203851-203858]"
  }, {
    "left" : "canSelectByPoint",
    "right" : "canSelectByPoint",
    "info" : "SimpleName[203806-203822]:SimpleName[203859-203875]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203825-203883]:Block[203878-203936]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[203836-203849]:ReturnStatement[203889-203902]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[204086-204092]:Modifier[204139-204145]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[204093-204100]:PrimitiveType[204146-204153]"
  }, {
    "left" : "canSelectByRegion",
    "right" : "canSelectByRegion",
    "info" : "SimpleName[204101-204118]:SimpleName[204154-204171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204121-204151]:Block[204174-204204]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[204132-204144]:ReturnStatement[204185-204197]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[204260-204266]:Modifier[204313-204319]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[204267-204271]:PrimitiveType[204320-204324]"
  }, {
    "left" : "select",
    "right" : "select",
    "info" : "SimpleName[204272-204278]:SimpleName[204325-204331]"
  }, {
    "left" : "double x",
    "right" : "double x",
    "info" : "SingleVariableDeclaration[204279-204287]:SingleVariableDeclaration[204332-204340]"
  }, {
    "left" : "double y",
    "right" : "double y",
    "info" : "SingleVariableDeclaration[204289-204297]:SingleVariableDeclaration[204342-204350]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[204299-204319]:SingleVariableDeclaration[204352-204372]"
  }, {
    "left" : "RenderingSource source",
    "right" : "RenderingSource source",
    "info" : "SingleVariableDeclaration[204334-204356]:SingleVariableDeclaration[204387-204409]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204358-204394]:Block[204411-204447]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[204661-204667]:Modifier[204714-204720]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[204668-204672]:PrimitiveType[204721-204725]"
  }, {
    "left" : "select",
    "right" : "select",
    "info" : "SimpleName[204673-204679]:SimpleName[204726-204732]"
  }, {
    "left" : "GeneralPath region",
    "right" : "GeneralPath region",
    "info" : "SingleVariableDeclaration[204680-204698]:SingleVariableDeclaration[204733-204751]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[204700-204720]:SingleVariableDeclaration[204753-204773]"
  }, {
    "left" : "RenderingSource source",
    "right" : "RenderingSource source",
    "info" : "SingleVariableDeclaration[204735-204757]:SingleVariableDeclaration[204788-204810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204759-206236]:Block[204812-206289]"
  }, {
    "left" : "int datasetCount = this.datasets.size();",
    "right" : "int datasetCount = this.datasets.size();",
    "info" : "VariableDeclarationStatement[204904-204944]:VariableDeclarationStatement[204957-204997]"
  }, {
    "left" : "for (int d = 0; d < datasetCount; d++)",
    "right" : "for (int d = 0; d < datasetCount; d++)",
    "info" : "ForStatement[204954-206229]:ForStatement[205007-206282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204993-206229]:Block[205046-206282]"
  }, {
    "left" : "XYDataset dataset = (XYDataset) this.datasets.get(d);",
    "right" : "XYDataset dataset = (XYDataset) this.datasets.get(d);",
    "info" : "VariableDeclarationStatement[205008-205061]:VariableDeclarationStatement[205061-205114]"
  }, {
    "left" : "if (dataset == null)",
    "right" : "if (dataset == null)",
    "info" : "IfStatement[205075-205139]:IfStatement[205128-205192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205096-205139]:Block[205149-205192]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[205115-205124]:ContinueStatement[205168-205177]"
  }, {
    "left" : "XYDatasetSelectionState state = findSelectionStateForDataset(\r\n                    dataset, source);",
    "right" : "XYDatasetSelectionState state = findSelectionStateForDataset(\r\n                    dataset, source);",
    "info" : "VariableDeclarationStatement[205153-205253]:VariableDeclarationStatement[205206-205306]"
  }, {
    "left" : "if (state == null)",
    "right" : "if (state == null)",
    "info" : "IfStatement[205267-205329]:IfStatement[205320-205382]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205286-205329]:Block[205339-205382]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[205305-205314]:ContinueStatement[205358-205367]"
  }, {
    "left" : "GeneralPath path = convertToDataSpace(region, dataArea, dataset);",
    "right" : "GeneralPath path = convertToDataSpace(region, dataArea, dataset);",
    "info" : "VariableDeclarationStatement[205343-205408]:VariableDeclarationStatement[205396-205461]"
  }, {
    "left" : "int seriesCount = dataset.getSeriesCount();",
    "right" : "int seriesCount = dataset.getSeriesCount();",
    "info" : "VariableDeclarationStatement[205601-205644]:VariableDeclarationStatement[205654-205697]"
  }, {
    "left" : "for (int s = 0; s < seriesCount; s++)",
    "right" : "for (int s = 0; s < seriesCount; s++)",
    "info" : "ForStatement[205658-206218]:ForStatement[205711-206271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205696-206218]:Block[205749-206271]"
  }, {
    "left" : "int itemCount = dataset.getItemCount(s);",
    "right" : "int itemCount = dataset.getItemCount(s);",
    "info" : "VariableDeclarationStatement[205715-205755]:VariableDeclarationStatement[205768-205808]"
  }, {
    "left" : "for (int i = 0; i < itemCount; i++)",
    "right" : "for (int i = 0; i < itemCount; i++)",
    "info" : "ForStatement[205773-206203]:ForStatement[205826-206256]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205809-206203]:Block[205862-206256]"
  }, {
    "left" : "double x = dataset.getXValue(s, i);",
    "right" : "double x = dataset.getXValue(s, i);",
    "info" : "VariableDeclarationStatement[205832-205867]:VariableDeclarationStatement[205885-205920]"
  }, {
    "left" : "double y = dataset.getYValue(s, i);",
    "right" : "double y = dataset.getYValue(s, i);",
    "info" : "VariableDeclarationStatement[205889-205924]:VariableDeclarationStatement[205942-205977]"
  }, {
    "left" : "if (path.contains(x, y))",
    "right" : "if (path.contains(x, y))",
    "info" : "IfStatement[205946-206184]:IfStatement[205999-206237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[205971-206184]:Block[206024-206237]"
  }, {
    "left" : "state.setSelected(s, i, true);",
    "right" : "state.setSelected(s, i, true);",
    "info" : "ExpressionStatement[205998-206028]:ExpressionStatement[206051-206081]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[206595-206602]:Modifier[206648-206655]"
  }, {
    "left" : "XYDatasetSelectionState",
    "right" : "XYDatasetSelectionState",
    "info" : "SimpleType[206603-206626]:SimpleType[206656-206679]"
  }, {
    "left" : "findSelectionStateForDataset",
    "right" : "findSelectionStateForDataset",
    "info" : "SimpleName[206627-206655]:SimpleName[206680-206708]"
  }, {
    "left" : "XYDataset dataset",
    "right" : "XYDataset dataset",
    "info" : "SingleVariableDeclaration[206670-206687]:SingleVariableDeclaration[206723-206740]"
  }, {
    "left" : "Object source",
    "right" : "Object source",
    "info" : "SingleVariableDeclaration[206689-206702]:SingleVariableDeclaration[206742-206755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206704-207018]:Block[206757-207071]"
  }, {
    "left" : "if (dataset instanceof SelectableXYDataset)",
    "right" : "if (dataset instanceof SelectableXYDataset)",
    "info" : "IfStatement[206715-206928]:IfStatement[206768-206981]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206759-206928]:Block[206812-206981]"
  }, {
    "left" : "SelectableXYDataset sd = (SelectableXYDataset) dataset;",
    "right" : "SelectableXYDataset sd = (SelectableXYDataset) dataset;",
    "info" : "VariableDeclarationStatement[206774-206829]:VariableDeclarationStatement[206827-206882]"
  }, {
    "left" : "XYDatasetSelectionState s = sd.getSelectionState();",
    "right" : "XYDatasetSelectionState s = sd.getSelectionState();",
    "info" : "VariableDeclarationStatement[206843-206894]:VariableDeclarationStatement[206896-206947]"
  }, {
    "left" : "return s;",
    "right" : "return s;",
    "info" : "ReturnStatement[206908-206917]:ReturnStatement[206961-206970]"
  }, {
    "left" : "throw new RuntimeException();",
    "right" : "throw new RuntimeException();",
    "info" : "ThrowStatement[206938-206967]:ThrowStatement[206991-207020]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[207360-207367]:Modifier[207413-207420]"
  }, {
    "left" : "GeneralPath",
    "right" : "GeneralPath",
    "info" : "SimpleType[207368-207379]:SimpleType[207421-207432]"
  }, {
    "left" : "convertToDataSpace",
    "right" : "convertToDataSpace",
    "info" : "SimpleName[207380-207398]:SimpleName[207433-207451]"
  }, {
    "left" : "GeneralPath path",
    "right" : "GeneralPath path",
    "info" : "SingleVariableDeclaration[207399-207415]:SingleVariableDeclaration[207452-207468]"
  }, {
    "left" : "Rectangle2D dataArea",
    "right" : "Rectangle2D dataArea",
    "info" : "SingleVariableDeclaration[207430-207450]:SingleVariableDeclaration[207483-207503]"
  }, {
    "left" : "XYDataset dataset",
    "right" : "XYDataset dataset",
    "info" : "SingleVariableDeclaration[207452-207469]:SingleVariableDeclaration[207505-207522]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207471-208627]:Block[207524-208680]"
  }, {
    "left" : "GeneralPath result = new GeneralPath(path.getWindingRule());",
    "right" : "GeneralPath result = new GeneralPath(path.getWindingRule());",
    "info" : "VariableDeclarationStatement[207482-207542]:VariableDeclarationStatement[207535-207595]"
  }, {
    "left" : "int datasetIndex = indexOf(dataset);",
    "right" : "int datasetIndex = indexOf(dataset);",
    "info" : "VariableDeclarationStatement[207552-207588]:VariableDeclarationStatement[207605-207641]"
  }, {
    "left" : "ValueAxis xAxis = getDomainAxisForDataset(datasetIndex);",
    "right" : "ValueAxis xAxis = getDomainAxisForDataset(datasetIndex);",
    "info" : "VariableDeclarationStatement[207598-207654]:VariableDeclarationStatement[207651-207707]"
  }, {
    "left" : "ValueAxis yAxis = getRangeAxisForDataset(datasetIndex);",
    "right" : "ValueAxis yAxis = getRangeAxisForDataset(datasetIndex);",
    "info" : "VariableDeclarationStatement[207664-207719]:VariableDeclarationStatement[207717-207772]"
  }, {
    "left" : "RectangleEdge xAxisEdge = getDomainAxisEdge();",
    "right" : "RectangleEdge xAxisEdge = getDomainAxisEdge();",
    "info" : "VariableDeclarationStatement[207729-207775]:VariableDeclarationStatement[207782-207828]"
  }, {
    "left" : "RectangleEdge yAxisEdge = getRangeAxisEdge();",
    "right" : "RectangleEdge yAxisEdge = getRangeAxisEdge();",
    "info" : "VariableDeclarationStatement[207785-207830]:VariableDeclarationStatement[207838-207883]"
  }, {
    "left" : "double[] coords = new double[6];",
    "right" : "double[] coords = new double[6];",
    "info" : "VariableDeclarationStatement[207840-207872]:VariableDeclarationStatement[207893-207925]"
  }, {
    "left" : "PathIterator iterator = path.getPathIterator(null);",
    "right" : "PathIterator iterator = path.getPathIterator(null);",
    "info" : "VariableDeclarationStatement[207882-207933]:VariableDeclarationStatement[207935-207986]"
  }, {
    "left" : "while (!iterator.isDone())",
    "right" : "while (!iterator.isDone())",
    "info" : "WhileStatement[207943-208596]:WhileStatement[207996-208649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207970-208596]:Block[208023-208649]"
  }, {
    "left" : "int segType = iterator.currentSegment(coords);",
    "right" : "int segType = iterator.currentSegment(coords);",
    "info" : "VariableDeclarationStatement[207985-208031]:VariableDeclarationStatement[208038-208084]"
  }, {
    "left" : "double xx = xAxis.java2DToValue(coords[0], dataArea, xAxisEdge);",
    "right" : "double xx = xAxis.java2DToValue(coords[0], dataArea, xAxisEdge);",
    "info" : "VariableDeclarationStatement[208045-208109]:VariableDeclarationStatement[208098-208162]"
  }, {
    "left" : "double yy = yAxis.java2DToValue(coords[1], dataArea, yAxisEdge);",
    "right" : "double yy = yAxis.java2DToValue(coords[1], dataArea, yAxisEdge);",
    "info" : "VariableDeclarationStatement[208123-208187]:VariableDeclarationStatement[208176-208240]"
  }, {
    "left" : "if (segType == PathIterator.SEG_MOVETO)",
    "right" : "if (segType == PathIterator.SEG_MOVETO)",
    "info" : "IfStatement[208201-208555]:IfStatement[208254-208608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[208241-208313]:Block[208294-208366]"
  }, {
    "left" : "result.moveTo((float) xx, (float) yy);",
    "right" : "result.moveTo((float) xx, (float) yy);",
    "info" : "ExpressionStatement[208260-208298]:ExpressionStatement[208313-208351]"
  }, {
    "left" : "if (segType == PathIterator.SEG_LINETO)",
    "right" : "if (segType == PathIterator.SEG_LINETO)",
    "info" : "IfStatement[208332-208555]:IfStatement[208385-208608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[208372-208444]:Block[208425-208497]"
  }, {
    "left" : "result.lineTo((float) xx, (float) yy);",
    "right" : "result.lineTo((float) xx, (float) yy);",
    "info" : "ExpressionStatement[208391-208429]:ExpressionStatement[208444-208482]"
  }, {
    "left" : "if (segType == PathIterator.SEG_CLOSE)",
    "right" : "if (segType == PathIterator.SEG_CLOSE)",
    "info" : "IfStatement[208463-208555]:IfStatement[208516-208608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[208502-208555]:Block[208555-208608]"
  }, {
    "left" : "result.closePath();",
    "right" : "result.closePath();",
    "info" : "ExpressionStatement[208521-208540]:ExpressionStatement[208574-208593]"
  }, {
    "left" : "iterator.next();",
    "right" : "iterator.next();",
    "info" : "ExpressionStatement[208569-208585]:ExpressionStatement[208622-208638]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[208606-208620]:ReturnStatement[208659-208673]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[208712-208718]:Modifier[208765-208771]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[208719-208723]:PrimitiveType[208772-208776]"
  }, {
    "left" : "clearSelection",
    "right" : "clearSelection",
    "info" : "SimpleName[208724-208738]:SimpleName[208777-208791]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[208741-209485]:Block[208794-209538]"
  }, {
    "left" : "int datasetCount = this.datasets.size();",
    "right" : "int datasetCount = this.datasets.size();",
    "info" : "VariableDeclarationStatement[208821-208861]:VariableDeclarationStatement[208874-208914]"
  }, {
    "left" : "for (int d = 0; d < datasetCount; d++)",
    "right" : "for (int d = 0; d < datasetCount; d++)",
    "info" : "ForStatement[208871-209478]:ForStatement[208924-209531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[208910-209478]:Block[208963-209531]"
  }, {
    "left" : "XYDataset dataset = (XYDataset) this.datasets.get(d);",
    "right" : "XYDataset dataset = (XYDataset) this.datasets.get(d);",
    "info" : "VariableDeclarationStatement[208925-208978]:VariableDeclarationStatement[208978-209031]"
  }, {
    "left" : "if (dataset instanceof AbstractXYDataset)",
    "right" : "if (dataset instanceof AbstractXYDataset)",
    "info" : "IfStatement[208992-209467]:IfStatement[209045-209520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[209034-209467]:Block[209087-209520]"
  }, {
    "left" : "AbstractXYDataset axyd = (AbstractXYDataset) dataset;",
    "right" : "AbstractXYDataset axyd = (AbstractXYDataset) dataset;",
    "info" : "VariableDeclarationStatement[209193-209246]:VariableDeclarationStatement[209246-209299]"
  }, {
    "left" : "if (axyd.getSelectionState() != null)",
    "right" : "if (axyd.getSelectionState() != null)",
    "info" : "IfStatement[209264-209452]:IfStatement[209317-209505]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[209302-209452]:Block[209355-209505]"
  }, {
    "left" : "XYDatasetSelectionState selState = axyd.getSelectionState();",
    "right" : "XYDatasetSelectionState selState = axyd.getSelectionState();",
    "info" : "VariableDeclarationStatement[209325-209385]:VariableDeclarationStatement[209378-209438]"
  }, {
    "left" : "selState.clearSelection();",
    "right" : "selState.clearSelection();",
    "info" : "ExpressionStatement[209407-209433]:ExpressionStatement[209460-209486]"
  } ]
}