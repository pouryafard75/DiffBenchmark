{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsonAdapterAnnotationTypeAdapterFactory",
      "right" : "JsonAdapterAnnotationTypeAdapterFactory",
      "info" : "TypeDeclaration[896-2774]:TypeDeclaration[896-2811]"
    }, {
      "left" : "private final ConstructorConstructor constructorConstructor;",
      "right" : "private final ConstructorConstructor constructorConstructor;",
      "info" : "FieldDeclaration[1155-1215]:FieldDeclaration[1155-1215]"
    }, {
      "left" : "public JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor)",
      "right" : "public JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor)",
      "info" : "MethodDeclaration[1219-1376]:MethodDeclaration[1219-1376]"
    }, {
      "left" : "public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType)",
      "right" : "public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> targetType)",
      "info" : "MethodDeclaration[1380-1739]:MethodDeclaration[1380-1739]"
    }, {
      "left" : "// Casts guarded by conditionals.\n  static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,\n      TypeToken<?> fieldType, JsonAdapter annotation)",
      "right" : "// Casts guarded by conditionals.\n  static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,\n      TypeToken<?> fieldType, JsonAdapter annotation)",
      "info" : "MethodDeclaration[1743-2772]:MethodDeclaration[1743-2809]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1061-1067]:Modifier[1061-1067]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1074-1079]:TYPE_DECLARATION_KIND[1074-1079]"
    }, {
      "left" : "JsonAdapterAnnotationTypeAdapterFactory",
      "right" : "JsonAdapterAnnotationTypeAdapterFactory",
      "info" : "SimpleName[1080-1119]:SimpleName[1080-1119]"
    }, {
      "left" : "TypeAdapterFactory",
      "right" : "TypeAdapterFactory",
      "info" : "SimpleType[1131-1149]:SimpleType[1131-1149]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1219-1225]:Modifier[1219-1225]"
    }, {
      "left" : "JsonAdapterAnnotationTypeAdapterFactory",
      "right" : "JsonAdapterAnnotationTypeAdapterFactory",
      "info" : "SimpleName[1226-1265]:SimpleName[1226-1265]"
    }, {
      "left" : "ConstructorConstructor constructorConstructor",
      "right" : "ConstructorConstructor constructorConstructor",
      "info" : "SingleVariableDeclaration[1266-1311]:SingleVariableDeclaration[1266-1311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1313-1376]:Block[1313-1376]"
    }, {
      "left" : "this.constructorConstructor = constructorConstructor;",
      "right" : "this.constructorConstructor = constructorConstructor;",
      "info" : "ExpressionStatement[1319-1372]:ExpressionStatement[1319-1372]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[1380-1410]:SingleMemberAnnotation[1380-1410]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1413-1422]:MarkerAnnotation[1413-1422]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1425-1431]:Modifier[1425-1431]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[1433-1434]:TypeParameter[1433-1434]"
    }, {
      "left" : "TypeAdapter<T>",
      "right" : "TypeAdapter<T>",
      "info" : "ParameterizedType[1436-1450]:ParameterizedType[1436-1450]"
    }, {
      "left" : "create",
      "right" : "create",
      "info" : "SimpleName[1451-1457]:SimpleName[1451-1457]"
    }, {
      "left" : "Gson gson",
      "right" : "Gson gson",
      "info" : "SingleVariableDeclaration[1458-1467]:SingleVariableDeclaration[1458-1467]"
    }, {
      "left" : "TypeToken<T> targetType",
      "right" : "TypeToken<T> targetType",
      "info" : "SingleVariableDeclaration[1469-1492]:SingleVariableDeclaration[1469-1492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1494-1739]:Block[1494-1739]"
    }, {
      "left" : "JsonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class);",
      "right" : "JsonAdapter annotation = targetType.getRawType().getAnnotation(JsonAdapter.class);",
      "info" : "VariableDeclarationStatement[1500-1582]:VariableDeclarationStatement[1500-1582]"
    }, {
      "left" : "if (annotation == null)",
      "right" : "if (annotation == null)",
      "info" : "IfStatement[1587-1637]:IfStatement[1587-1637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1611-1637]:Block[1611-1637]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[1619-1631]:ReturnStatement[1619-1631]"
    }, {
      "left" : "return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation);",
      "right" : "return (TypeAdapter<T>) getTypeAdapter(constructorConstructor, gson, targetType, annotation);",
      "info" : "ReturnStatement[1642-1735]:ReturnStatement[1642-1735]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1810-1816]:Modifier[1810-1816]"
    }, {
      "left" : "getTypeAdapter",
      "right" : "getTypeAdapter",
      "info" : "SimpleName[1832-1846]:SimpleName[1832-1846]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1959-2772]:Block[1959-2809]"
    }, {
      "left" : "Class<?> value = annotation.value();",
      "right" : "Class<?> value = annotation.value();",
      "info" : "VariableDeclarationStatement[1965-2001]:VariableDeclarationStatement[1965-2001]"
    }, {
      "left" : "TypeAdapter<?> typeAdapter;",
      "right" : "TypeAdapter<?> typeAdapter;",
      "info" : "VariableDeclarationStatement[2006-2033]:VariableDeclarationStatement[2006-2033]"
    }, {
      "left" : "if (TypeAdapter.class.isAssignableFrom(value))",
      "right" : "if (TypeAdapter.class.isAssignableFrom(value))",
      "info" : "IfStatement[2038-2700]:IfStatement[2038-2700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2085-2263]:Block[2085-2263]"
    }, {
      "left" : "Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;",
      "right" : "Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;",
      "info" : "VariableDeclarationStatement[2093-2164]:VariableDeclarationStatement[2093-2164]"
    }, {
      "left" : "typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();",
      "right" : "typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();",
      "info" : "ExpressionStatement[2171-2257]:ExpressionStatement[2171-2257]"
    }, {
      "left" : "if (TypeAdapterFactory.class.isAssignableFrom(value))",
      "right" : "if (TypeAdapterFactory.class.isAssignableFrom(value))",
      "info" : "IfStatement[2269-2700]:IfStatement[2269-2700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2323-2559]:Block[2323-2559]"
    }, {
      "left" : "Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;",
      "right" : "Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;",
      "info" : "VariableDeclarationStatement[2331-2412]:VariableDeclarationStatement[2331-2412]"
    }, {
      "left" : "typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))\n          .construct()\n          .create(gson, fieldType);",
      "right" : "typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))\n          .construct()\n          .create(gson, fieldType);",
      "info" : "ExpressionStatement[2419-2553]:ExpressionStatement[2419-2553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2565-2700]:Block[2565-2700]"
    }, {
      "left" : "throw new IllegalArgumentException(\n          \"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");",
      "right" : "throw new IllegalArgumentException(\n          \"@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.\");",
      "info" : "ThrowStatement[2573-2694]:ThrowStatement[2573-2694]"
    }, {
      "left" : "typeAdapter = typeAdapter.nullSafe();",
      "right" : "typeAdapter = typeAdapter.nullSafe();",
      "info" : "ExpressionStatement[2707-2744]:ExpressionStatement[2738-2775]"
    }, {
      "left" : "return typeAdapter;",
      "right" : "return typeAdapter;",
      "info" : "ReturnStatement[2749-2768]:ReturnStatement[2786-2805]"
    } ]
  },
  "interFileMappings" : { }
}