{
  "matchedElements" : [
 {
    "left" : "class : StringUtils",
    "right" : "class : StringUtils",
    "info" : "TypeDeclaration[1084-265314]:TypeDeclaration[1084-265173]"
  }, {
    "left" : "EMPTY",
    "right" : "EMPTY",
    "info" : "FieldDeclaration[5063-5171]:FieldDeclaration[5063-5171]"
  }, {
    "left" : "INDEX_NOT_FOUND",
    "right" : "INDEX_NOT_FOUND",
    "info" : "FieldDeclaration[5177-5297]:FieldDeclaration[5177-5297]"
  }, {
    "left" : "PAD_LIMIT",
    "right" : "PAD_LIMIT",
    "info" : "FieldDeclaration[5303-5437]:FieldDeclaration[5303-5437]"
  }, {
    "left" : "WHITESPACE_BLOCK",
    "right" : "WHITESPACE_BLOCK",
    "info" : "FieldDeclaration[5443-5603]:FieldDeclaration[5443-5603]"
  }, {
    "left" : "public StringUtils()",
    "right" : "public StringUtils()",
    "info" : "MethodDeclaration[5609-5968]:MethodDeclaration[5609-5968]"
  }, {
    "left" : "public isEmpty(cs ...) : boolean",
    "right" : "public isEmpty(cs ...) : boolean",
    "info" : "MethodDeclaration[6072-6889]:MethodDeclaration[6072-6889]"
  }, {
    "left" : "public isNotEmpty(cs ...) : boolean",
    "right" : "public isNotEmpty(cs ...) : boolean",
    "info" : "MethodDeclaration[6895-7582]:MethodDeclaration[6895-7582]"
  }, {
    "left" : "public isBlank(cs ...) : boolean",
    "right" : "public isBlank(cs ...) : boolean",
    "info" : "MethodDeclaration[7588-8531]:MethodDeclaration[7588-8531]"
  }, {
    "left" : "public isNotBlank(cs ...) : boolean",
    "right" : "public isNotBlank(cs ...) : boolean",
    "info" : "MethodDeclaration[8537-9291]:MethodDeclaration[8537-9291]"
  }, {
    "left" : "public trim(str ) : ",
    "right" : "public trim(str ) : ",
    "info" : "MethodDeclaration[9387-10335]:MethodDeclaration[9387-10335]"
  }, {
    "left" : "public trimToNull(str ) : ",
    "right" : "public trimToNull(str ) : ",
    "info" : "MethodDeclaration[10341-11341]:MethodDeclaration[10341-11341]"
  }, {
    "left" : "public trimToEmpty(str ) : ",
    "right" : "public trimToEmpty(str ) : ",
    "info" : "MethodDeclaration[11347-12303]:MethodDeclaration[11347-12303]"
  }, {
    "left" : "public strip(str ) : ",
    "right" : "public strip(str ) : ",
    "info" : "MethodDeclaration[12404-13312]:MethodDeclaration[12404-13312]"
  }, {
    "left" : "public stripToNull(str ) : ",
    "right" : "public stripToNull(str ) : ",
    "info" : "MethodDeclaration[13318-14438]:MethodDeclaration[13318-14438]"
  }, {
    "left" : "public stripToEmpty(str ) : ",
    "right" : "public stripToEmpty(str ) : ",
    "info" : "MethodDeclaration[14444-15440]:MethodDeclaration[14444-15440]"
  }, {
    "left" : "public strip(str , stripChars ...) : ",
    "right" : "public strip(str , stripChars ...) : ",
    "info" : "MethodDeclaration[15446-16811]:MethodDeclaration[15446-16811]"
  }, {
    "left" : "public stripStart(str , stripChars ...) : ",
    "right" : "public stripStart(str , stripChars ...) : ",
    "info" : "MethodDeclaration[16817-18533]:MethodDeclaration[16817-18533]"
  }, {
    "left" : "public stripEnd(str , stripChars ...) : ",
    "right" : "public stripEnd(str , stripChars ...) : ",
    "info" : "MethodDeclaration[18539-20254]:MethodDeclaration[18539-20254]"
  }, {
    "left" : "public stripAll() : ",
    "right" : "public stripAll() : ",
    "info" : "MethodDeclaration[20354-21252]:MethodDeclaration[20354-21252]"
  }, {
    "left" : "public stripAll(strs , stripChars ...) : ",
    "right" : "public stripAll(strs , stripChars ...) : ",
    "info" : "MethodDeclaration[21258-22811]:MethodDeclaration[21258-22811]"
  }, {
    "left" : "public stripAccents(input ) : ",
    "right" : "public stripAccents(input ) : ",
    "info" : "MethodDeclaration[22817-25091]:MethodDeclaration[22817-25091]"
  }, {
    "left" : "private removeAccentsJava6(text ) : ",
    "right" : "private removeAccentsJava6(text ) : ",
    "info" : "MethodDeclaration[25097-26329]:MethodDeclaration[25097-26329]"
  }, {
    "left" : "private removeAccentsSUN(text ) : ",
    "right" : "private removeAccentsSUN(text ) : ",
    "info" : "MethodDeclaration[26335-27411]:MethodDeclaration[26335-27411]"
  }, {
    "left" : "sunAvailable",
    "right" : "sunAvailable",
    "info" : "FieldDeclaration[27457-27501]:FieldDeclaration[27457-27501]"
  }, {
    "left" : "sunDecomposeMethod",
    "right" : "sunDecomposeMethod",
    "info" : "FieldDeclaration[27506-27555]:FieldDeclaration[27506-27555]"
  }, {
    "left" : "sunPattern",
    "right" : "sunPattern",
    "info" : "FieldDeclaration[27560-27655]:FieldDeclaration[27560-27655]"
  }, {
    "left" : "java6Available",
    "right" : "java6Available",
    "info" : "FieldDeclaration[27688-27734]:FieldDeclaration[27688-27734]"
  }, {
    "left" : "java6NormalizeMethod",
    "right" : "java6NormalizeMethod",
    "info" : "FieldDeclaration[27739-27790]:FieldDeclaration[27739-27790]"
  }, {
    "left" : "java6NormalizerFormNFD",
    "right" : "java6NormalizerFormNFD",
    "info" : "FieldDeclaration[27795-27848]:FieldDeclaration[27795-27848]"
  }, {
    "left" : "java6Pattern",
    "right" : "java6Pattern",
    "info" : "FieldDeclaration[27853-27908]:FieldDeclaration[27853-27908]"
  }, {
    "left" : "public equals(cs1 , cs2 ) : boolean",
    "right" : "public equals(cs1 , cs2 ) : boolean",
    "info" : "MethodDeclaration[29716-30753]:MethodDeclaration[29716-30753]"
  }, {
    "left" : "public equalsIgnoreCase(str1 , str2 ) : boolean",
    "right" : "public equalsIgnoreCase(str1 , str2 ) : boolean",
    "info" : "MethodDeclaration[30759-32013]:MethodDeclaration[30759-32013]"
  }, {
    "left" : "public indexOf(seq , searchChar int) : int",
    "right" : "public indexOf(seq , searchChar int) : int",
    "info" : "MethodDeclaration[32112-33147]:MethodDeclaration[32112-33147]"
  }, {
    "left" : "public indexOf(seq , searchChar int, startPos int) : int",
    "right" : "public indexOf(seq , searchChar int, startPos int) : int",
    "info" : "MethodDeclaration[33153-34566]:MethodDeclaration[33153-34566]"
  }, {
    "left" : "public indexOf(seq , searchSeq ) : int",
    "right" : "public indexOf(seq , searchSeq ) : int",
    "info" : "MethodDeclaration[34572-35857]:MethodDeclaration[34572-35857]"
  }, {
    "left" : "public indexOf(seq , searchSeq , startPos int) : int",
    "right" : "public indexOf(seq , searchSeq , startPos int) : int",
    "info" : "MethodDeclaration[35863-37696]:MethodDeclaration[35863-37696]"
  }, {
    "left" : "public ordinalIndexOf(str , searchStr , ordinal int) : int",
    "right" : "public ordinalIndexOf(str , searchStr , ordinal int) : int",
    "info" : "MethodDeclaration[37702-39440]:MethodDeclaration[37702-39440]"
  }, {
    "left" : "private ordinalIndexOf(str , searchStr , ordinal int, lastIndex boolean) : int",
    "right" : "private ordinalIndexOf(str , searchStr , ordinal int, lastIndex boolean) : int",
    "info" : "MethodDeclaration[39446-40998]:MethodDeclaration[39446-40998]"
  }, {
    "left" : "public indexOfIgnoreCase(str , searchStr ) : int",
    "right" : "public indexOfIgnoreCase(str , searchStr ) : int",
    "info" : "MethodDeclaration[41004-42296]:MethodDeclaration[41004-42296]"
  }, {
    "left" : "public indexOfIgnoreCase(str , searchStr , startPos int) : int",
    "right" : "public indexOfIgnoreCase(str , searchStr , startPos int) : int",
    "info" : "MethodDeclaration[42302-44612]:MethodDeclaration[42302-44612]"
  }, {
    "left" : "public lastIndexOf(seq , searchChar int) : int",
    "right" : "public lastIndexOf(seq , searchChar int) : int",
    "info" : "MethodDeclaration[44715-45772]:MethodDeclaration[44715-45772]"
  }, {
    "left" : "public lastIndexOf(seq , searchChar int, startPos int) : int",
    "right" : "public lastIndexOf(seq , searchChar int, startPos int) : int",
    "info" : "MethodDeclaration[45778-47309]:MethodDeclaration[45778-47309]"
  }, {
    "left" : "public lastIndexOf(seq , searchSeq ) : int",
    "right" : "public lastIndexOf(seq , searchSeq ) : int",
    "info" : "MethodDeclaration[47315-48575]:MethodDeclaration[47315-48575]"
  }, {
    "left" : "public lastOrdinalIndexOf(str , searchStr , ordinal int) : int",
    "right" : "public lastOrdinalIndexOf(str , searchStr , ordinal int) : int",
    "info" : "MethodDeclaration[48581-50370]:MethodDeclaration[48581-50370]"
  }, {
    "left" : "public lastIndexOf(seq , searchSeq , startPos int) : int",
    "right" : "public lastIndexOf(seq , searchSeq , startPos int) : int",
    "info" : "MethodDeclaration[50376-52103]:MethodDeclaration[50376-52103]"
  }, {
    "left" : "public lastIndexOfIgnoreCase(str , searchStr ) : int",
    "right" : "public lastIndexOfIgnoreCase(str , searchStr ) : int",
    "info" : "MethodDeclaration[52109-53497]:MethodDeclaration[52109-53497]"
  }, {
    "left" : "public lastIndexOfIgnoreCase(str , searchStr , startPos int) : int",
    "right" : "public lastIndexOfIgnoreCase(str , searchStr , startPos int) : int",
    "info" : "MethodDeclaration[53503-55709]:MethodDeclaration[53503-55709]"
  }, {
    "left" : "public contains(seq , searchChar int) : boolean",
    "right" : "public contains(seq , searchChar int) : boolean",
    "info" : "MethodDeclaration[55809-56843]:MethodDeclaration[55809-56843]"
  }, {
    "left" : "public contains(seq , searchSeq ) : boolean",
    "right" : "public contains(seq , searchSeq ) : boolean",
    "info" : "MethodDeclaration[56849-58032]:MethodDeclaration[56849-58032]"
  }, {
    "left" : "public containsIgnoreCase(str , searchStr ) : boolean",
    "right" : "public containsIgnoreCase(str , searchStr ) : boolean",
    "info" : "MethodDeclaration[58038-59583]:MethodDeclaration[58038-59583]"
  }, {
    "left" : "public containsWhitespace(seq ) : boolean",
    "right" : "public containsWhitespace(seq ) : boolean",
    "info" : "MethodDeclaration[59589-60342]:MethodDeclaration[59589-60342]"
  }, {
    "left" : "public indexOfAny(cs , ) : int",
    "right" : "public indexOfAny(cs , ) : int",
    "info" : "MethodDeclaration[60450-62438]:MethodDeclaration[60450-62438]"
  }, {
    "left" : "public indexOfAny(cs , searchChars ...) : int",
    "right" : "public indexOfAny(cs , searchChars ...) : int",
    "info" : "MethodDeclaration[62444-63673]:MethodDeclaration[62444-63673]"
  }, {
    "left" : "public containsAny(cs , ) : boolean",
    "right" : "public containsAny(cs , ) : boolean",
    "info" : "MethodDeclaration[63776-66027]:MethodDeclaration[63776-66027]"
  }, {
    "left" : "public containsAny(cs , searchChars ...) : boolean",
    "right" : "public containsAny(cs , searchChars ...) : boolean",
    "info" : "MethodDeclaration[66033-67393]:MethodDeclaration[66033-67393]"
  }, {
    "left" : "public indexOfAnyBut(cs , ) : int",
    "right" : "public indexOfAnyBut(cs , ) : int",
    "info" : "MethodDeclaration[67504-69623]:MethodDeclaration[67504-69623]"
  }, {
    "left" : "public indexOfAnyBut(seq , searchChars ...) : int",
    "right" : "public indexOfAnyBut(seq , searchChars ...) : int",
    "info" : "MethodDeclaration[69629-71465]:MethodDeclaration[69629-71465]"
  }, {
    "left" : "public containsOnly(cs , ) : boolean",
    "right" : "public containsOnly(cs , ) : boolean",
    "info" : "MethodDeclaration[71569-73011]:MethodDeclaration[71569-73011]"
  }, {
    "left" : "public containsOnly(cs , validChars ...) : boolean",
    "right" : "public containsOnly(cs , validChars ...) : boolean",
    "info" : "MethodDeclaration[73017-74280]:MethodDeclaration[73017-74280]"
  }, {
    "left" : "public containsNone(cs , ) : boolean",
    "right" : "public containsNone(cs , ) : boolean",
    "info" : "MethodDeclaration[74384-76547]:MethodDeclaration[74384-76547]"
  }, {
    "left" : "public containsNone(cs , invalidChars ...) : boolean",
    "right" : "public containsNone(cs , invalidChars ...) : boolean",
    "info" : "MethodDeclaration[76553-77814]:MethodDeclaration[76553-77814]"
  }, {
    "left" : "public indexOfAny(str , ) : int",
    "right" : "public indexOfAny(str , ) : int",
    "info" : "MethodDeclaration[77924-80157]:MethodDeclaration[77924-80157]"
  }, {
    "left" : "public lastIndexOfAny(str , ) : int",
    "right" : "public lastIndexOfAny(str , ) : int",
    "info" : "MethodDeclaration[80163-82201]:MethodDeclaration[80163-82201]"
  }, {
    "left" : "public substring(str , start int) : ",
    "right" : "public substring(str , start int) : ",
    "info" : "MethodDeclaration[82302-83742]:MethodDeclaration[82302-83742]"
  }, {
    "left" : "public substring(str , start int, end int) : ",
    "right" : "public substring(str , start int, end int) : ",
    "info" : "MethodDeclaration[83748-86133]:MethodDeclaration[83748-86133]"
  }, {
    "left" : "public left(str , len int) : ",
    "right" : "public left(str , len int) : ",
    "info" : "MethodDeclaration[86239-87314]:MethodDeclaration[86239-87314]"
  }, {
    "left" : "public right(str , len int) : ",
    "right" : "public right(str , len int) : ",
    "info" : "MethodDeclaration[87320-88420]:MethodDeclaration[87320-88420]"
  }, {
    "left" : "public mid(str , pos int, len int) : ",
    "right" : "public mid(str , pos int, len int) : ",
    "info" : "MethodDeclaration[88426-89880]:MethodDeclaration[88426-89880]"
  }, {
    "left" : "public substringBefore(str , separator ) : ",
    "right" : "public substringBefore(str , separator ) : ",
    "info" : "MethodDeclaration[90002-91539]:MethodDeclaration[90002-91539]"
  }, {
    "left" : "public substringAfter(str , separator ) : ",
    "right" : "public substringAfter(str , separator ) : ",
    "info" : "MethodDeclaration[91545-93110]:MethodDeclaration[91545-93110]"
  }, {
    "left" : "public substringBeforeLast(str , separator ) : ",
    "right" : "public substringBeforeLast(str , separator ) : ",
    "info" : "MethodDeclaration[93116-94626]:MethodDeclaration[93116-94626]"
  }, {
    "left" : "public substringAfterLast(str , separator ) : ",
    "right" : "public substringAfterLast(str , separator ) : ",
    "info" : "MethodDeclaration[94632-96344]:MethodDeclaration[94632-96344]"
  }, {
    "left" : "public substringBetween(str , tag ) : ",
    "right" : "public substringBetween(str , tag ) : ",
    "info" : "MethodDeclaration[96453-97433]:MethodDeclaration[96453-97433]"
  }, {
    "left" : "public substringBetween(str , open , close ) : ",
    "right" : "public substringBetween(str , open , close ) : ",
    "info" : "MethodDeclaration[97439-99193]:MethodDeclaration[97439-99193]"
  }, {
    "left" : "public substringsBetween(str , open , close ) : ",
    "right" : "public substringsBetween(str , open , close ) : ",
    "info" : "MethodDeclaration[99199-101271]:MethodDeclaration[99199-101271]"
  }, {
    "left" : "public split(str ) : ",
    "right" : "public split(str ) : ",
    "info" : "MethodDeclaration[101476-102430]:MethodDeclaration[101476-102430]"
  }, {
    "left" : "public split(str , separatorChar char) : ",
    "right" : "public split(str , separatorChar char) : ",
    "info" : "MethodDeclaration[102436-103565]:MethodDeclaration[102436-103565]"
  }, {
    "left" : "public split(str , separatorChars ...) : ",
    "right" : "public split(str , separatorChars ...) : ",
    "info" : "MethodDeclaration[103571-104802]:MethodDeclaration[103571-104802]"
  }, {
    "left" : "public split(str , separatorChars , max int) : ",
    "right" : "public split(str , separatorChars , max int) : ",
    "info" : "MethodDeclaration[104808-106349]:MethodDeclaration[104808-106349]"
  }, {
    "left" : "public splitByWholeSeparator(str , separator ) : ",
    "right" : "public splitByWholeSeparator(str , separator ) : ",
    "info" : "MethodDeclaration[106355-107657]:MethodDeclaration[106355-107657]"
  }, {
    "left" : "public splitByWholeSeparator(str , separator , max int) : ",
    "right" : "public splitByWholeSeparator(str , separator , max int) : ",
    "info" : "MethodDeclaration[107663-109263]:MethodDeclaration[107663-109263]"
  }, {
    "left" : "public splitByWholeSeparatorPreserveAllTokens(str , separator ) : ",
    "right" : "public splitByWholeSeparatorPreserveAllTokens(str , separator ) : ",
    "info" : "MethodDeclaration[109269-110786]:MethodDeclaration[109269-110786]"
  }, {
    "left" : "public splitByWholeSeparatorPreserveAllTokens(str , separator , max int) : ",
    "right" : "public splitByWholeSeparatorPreserveAllTokens(str , separator , max int) : ",
    "info" : "MethodDeclaration[110792-112624]:MethodDeclaration[110792-112624]"
  }, {
    "left" : "private splitByWholeSeparatorWorker(str , separator , max int, preserveAllTokens boolean) : ",
    "right" : "private splitByWholeSeparatorWorker(str , separator , max int, preserveAllTokens boolean) : ",
    "info" : "MethodDeclaration[112630-115763]:MethodDeclaration[112630-115763]"
  }, {
    "left" : "public splitPreserveAllTokens(str ) : ",
    "right" : "public splitPreserveAllTokens(str ) : ",
    "info" : "MethodDeclaration[115848-117102]:MethodDeclaration[115848-117102]"
  }, {
    "left" : "public splitPreserveAllTokens(str , separatorChar char) : ",
    "right" : "public splitPreserveAllTokens(str , separatorChar char) : ",
    "info" : "MethodDeclaration[117108-119001]:MethodDeclaration[117108-119001]"
  }, {
    "left" : "private splitWorker(str , separatorChar char, preserveAllTokens boolean) : ",
    "right" : "private splitWorker(str , separatorChar char, preserveAllTokens boolean) : ",
    "info" : "MethodDeclaration[119007-120625]:MethodDeclaration[119007-120625]"
  }, {
    "left" : "public splitPreserveAllTokens(str , separatorChars ...) : ",
    "right" : "public splitPreserveAllTokens(str , separatorChars ...) : ",
    "info" : "MethodDeclaration[120631-122626]:MethodDeclaration[120631-122626]"
  }, {
    "left" : "public splitPreserveAllTokens(str , separatorChars , max int) : ",
    "right" : "public splitPreserveAllTokens(str , separatorChars , max int) : ",
    "info" : "MethodDeclaration[122632-124737]:MethodDeclaration[122632-124737]"
  }, {
    "left" : "private splitWorker(str , separatorChars , max int, preserveAllTokens boolean) : ",
    "right" : "private splitWorker(str , separatorChars , max int, preserveAllTokens boolean) : ",
    "info" : "MethodDeclaration[124743-128436]:MethodDeclaration[124743-128436]"
  }, {
    "left" : "public splitByCharacterType(str ) : ",
    "right" : "public splitByCharacterType(str ) : ",
    "info" : "MethodDeclaration[128442-129628]:MethodDeclaration[128442-129628]"
  }, {
    "left" : "public splitByCharacterTypeCamelCase(str ) : ",
    "right" : "public splitByCharacterTypeCamelCase(str ) : ",
    "info" : "MethodDeclaration[129634-131220]:MethodDeclaration[129634-131220]"
  }, {
    "left" : "private splitByCharacterType(str , camelCase boolean) : ",
    "right" : "private splitByCharacterType(str , camelCase boolean) : ",
    "info" : "MethodDeclaration[131226-133303]:MethodDeclaration[131226-133303]"
  }, {
    "left" : "public join() : ",
    "right" : "public join() : ",
    "info" : "MethodDeclaration[133402-134333]:MethodDeclaration[133402-134333]"
  }, {
    "left" : "public join(array , separator char) : ",
    "right" : "public join(array , separator char) : ",
    "info" : "MethodDeclaration[134339-135408]:MethodDeclaration[134339-135408]"
  }, {
    "left" : "public join(array , separator char, startIndex int, endIndex int) : ",
    "right" : "public join(array , separator char, startIndex int, endIndex int) : ",
    "info" : "MethodDeclaration[135414-137252]:MethodDeclaration[135414-137190]"
  }, {
    "left" : "public join(array , separator ) : ",
    "right" : "public join(array , separator ) : ",
    "info" : "MethodDeclaration[137258-138463]:MethodDeclaration[137196-138401]"
  }, {
    "left" : "public join(array , separator , startIndex int, endIndex int) : ",
    "right" : "public join(array , separator , startIndex int, endIndex int) : ",
    "info" : "MethodDeclaration[138469-140696]:MethodDeclaration[138407-140555]"
  }, {
    "left" : "public join(iterator , separator char) : ",
    "right" : "public join(iterator , separator char) : ",
    "info" : "MethodDeclaration[140702-142164]:MethodDeclaration[140561-142023]"
  }, {
    "left" : "public join(iterator , separator ) : ",
    "right" : "public join(iterator , separator ) : ",
    "info" : "MethodDeclaration[142170-143669]:MethodDeclaration[142029-143528]"
  }, {
    "left" : "public join(iterable , separator char) : ",
    "right" : "public join(iterable , separator char) : ",
    "info" : "MethodDeclaration[143675-144493]:MethodDeclaration[143534-144352]"
  }, {
    "left" : "public join(iterable , separator ) : ",
    "right" : "public join(iterable , separator ) : ",
    "info" : "MethodDeclaration[144499-145318]:MethodDeclaration[144358-145177]"
  }, {
    "left" : "public deleteWhitespace(str ) : ",
    "right" : "public deleteWhitespace(str ) : ",
    "info" : "MethodDeclaration[145416-146440]:MethodDeclaration[145275-146299]"
  }, {
    "left" : "public removeStart(str , remove ) : ",
    "right" : "public removeStart(str , remove ) : ",
    "info" : "MethodDeclaration[146538-147881]:MethodDeclaration[146397-147740]"
  }, {
    "left" : "public removeStartIgnoreCase(str , remove ) : ",
    "right" : "public removeStartIgnoreCase(str , remove ) : ",
    "info" : "MethodDeclaration[147887-149440]:MethodDeclaration[147746-149299]"
  }, {
    "left" : "public removeEnd(str , remove ) : ",
    "right" : "public removeEnd(str , remove ) : ",
    "info" : "MethodDeclaration[149446-150789]:MethodDeclaration[149305-150648]"
  }, {
    "left" : "public removeEndIgnoreCase(str , remove ) : ",
    "right" : "public removeEndIgnoreCase(str , remove ) : ",
    "info" : "MethodDeclaration[150795-152425]:MethodDeclaration[150654-152284]"
  }, {
    "left" : "public remove(str , remove ) : ",
    "right" : "public remove(str , remove ) : ",
    "info" : "MethodDeclaration[152431-153581]:MethodDeclaration[152290-153440]"
  }, {
    "left" : "public remove(str , remove char) : ",
    "right" : "public remove(str , remove char) : ",
    "info" : "MethodDeclaration[153587-154736]:MethodDeclaration[153446-154595]"
  }, {
    "left" : "public replaceOnce(text , searchString , replacement ) : ",
    "right" : "public replaceOnce(text , searchString , replacement ) : ",
    "info" : "MethodDeclaration[154837-156048]:MethodDeclaration[154696-155907]"
  }, {
    "left" : "public replace(text , searchString , replacement ) : ",
    "right" : "public replace(text , searchString , replacement ) : ",
    "info" : "MethodDeclaration[156054-157224]:MethodDeclaration[155913-157083]"
  }, {
    "left" : "public replace(text , searchString , replacement , max int) : ",
    "right" : "public replace(text , searchString , replacement , max int) : ",
    "info" : "MethodDeclaration[157230-159598]:MethodDeclaration[157089-159457]"
  }, {
    "left" : "public replaceEach(text , searchList , replacementList ...) : ",
    "right" : "public replaceEach(text , searchList , replacementList ...) : ",
    "info" : "MethodDeclaration[159604-161537]:MethodDeclaration[159463-161396]"
  }, {
    "left" : "public replaceEachRepeatedly(text , searchList , replacementList ...) : ",
    "right" : "public replaceEachRepeatedly(text , searchList , replacementList ...) : ",
    "info" : "MethodDeclaration[161543-164207]:MethodDeclaration[161402-164066]"
  }, {
    "left" : "private replaceEach(text , searchList , replacementList , repeat boolean, timeToLive int) : ",
    "right" : "private replaceEach(text , searchList , replacementList , repeat boolean, timeToLive int) : ",
    "info" : "MethodDeclaration[164213-171306]:MethodDeclaration[164072-171165]"
  }, {
    "left" : "public replaceChars(str , searchChar char, replaceChar char) : ",
    "right" : "public replaceChars(str , searchChar char, replaceChar char) : ",
    "info" : "MethodDeclaration[171422-172482]:MethodDeclaration[171281-172341]"
  }, {
    "left" : "public replaceChars(str , searchChars , replaceChars ...) : ",
    "right" : "public replaceChars(str , searchChars , replaceChars ...) : ",
    "info" : "MethodDeclaration[172488-175110]:MethodDeclaration[172347-174969]"
  }, {
    "left" : "public overlay(str , overlay , start int, end int) : ",
    "right" : "public overlay(str , overlay , start int, end int) : ",
    "info" : "MethodDeclaration[175209-177421]:MethodDeclaration[175068-177280]"
  }, {
    "left" : "public chomp(str ) : ",
    "right" : "public chomp(str ) : ",
    "info" : "MethodDeclaration[177521-179204]:MethodDeclaration[177380-179063]"
  }, {
    "left" : "public chomp(str , separator ) : ",
    "right" : "public chomp(str , separator ) : ",
    "info" : "MethodDeclaration[179210-180613]:MethodDeclaration[179069-180472]"
  }, {
    "left" : "public chop(str ) : ",
    "right" : "public chop(str ) : ",
    "info" : "MethodDeclaration[180713-182091]:MethodDeclaration[180572-181950]"
  }, {
    "left" : "public repeat(str , repeat int) : ",
    "right" : "public repeat(str , repeat int) : ",
    "info" : "MethodDeclaration[182287-184156]:MethodDeclaration[182146-184015]"
  }, {
    "left" : "public repeat(str , separator , repeat int) : ",
    "right" : "public repeat(str , separator , repeat int) : ",
    "info" : "MethodDeclaration[184162-185386]:MethodDeclaration[184021-185245]"
  }, {
    "left" : "public repeat(ch char, repeat int) : ",
    "right" : "public repeat(ch char, repeat int) : ",
    "info" : "MethodDeclaration[185392-186458]:MethodDeclaration[185251-186317]"
  }, {
    "left" : "public rightPad(str , size int) : ",
    "right" : "public rightPad(str , size int) : ",
    "info" : "MethodDeclaration[186464-187244]:MethodDeclaration[186323-187103]"
  }, {
    "left" : "public rightPad(str , size int, padChar char) : ",
    "right" : "public rightPad(str , size int, padChar char) : ",
    "info" : "MethodDeclaration[187250-188468]:MethodDeclaration[187109-188327]"
  }, {
    "left" : "public rightPad(str , size int, padStr ) : ",
    "right" : "public rightPad(str , size int, padStr ) : ",
    "info" : "MethodDeclaration[188474-190424]:MethodDeclaration[188333-190283]"
  }, {
    "left" : "public leftPad(str , size int) : ",
    "right" : "public leftPad(str , size int) : ",
    "info" : "MethodDeclaration[190430-191200]:MethodDeclaration[190289-191059]"
  }, {
    "left" : "public leftPad(str , size int, padChar char) : ",
    "right" : "public leftPad(str , size int, padChar char) : ",
    "info" : "MethodDeclaration[191206-192395]:MethodDeclaration[191065-192254]"
  }, {
    "left" : "public leftPad(str , size int, padStr ) : ",
    "right" : "public leftPad(str , size int, padStr ) : ",
    "info" : "MethodDeclaration[192401-194319]:MethodDeclaration[192260-194178]"
  }, {
    "left" : "public length(cs ...) : int",
    "right" : "public length(cs ...) : int",
    "info" : "MethodDeclaration[194325-194797]:MethodDeclaration[194184-194656]"
  }, {
    "left" : "public center(str , size int) : ",
    "right" : "public center(str , size int) : ",
    "info" : "MethodDeclaration[194898-195875]:MethodDeclaration[194757-195734]"
  }, {
    "left" : "public center(str , size int, padChar char) : ",
    "right" : "public center(str , size int, padChar char) : ",
    "info" : "MethodDeclaration[195881-197282]:MethodDeclaration[195740-197141]"
  }, {
    "left" : "public center(str , size int, padStr ) : ",
    "right" : "public center(str , size int, padStr ) : ",
    "info" : "MethodDeclaration[197288-198940]:MethodDeclaration[197147-198799]"
  }, {
    "left" : "public upperCase(str ) : ",
    "right" : "public upperCase(str ) : ",
    "info" : "MethodDeclaration[199047-200018]:MethodDeclaration[198906-199877]"
  }, {
    "left" : "public upperCase(str , locale ) : ",
    "right" : "public upperCase(str , locale ) : ",
    "info" : "MethodDeclaration[200024-200826]:MethodDeclaration[199883-200685]"
  }, {
    "left" : "public lowerCase(str ) : ",
    "right" : "public lowerCase(str ) : ",
    "info" : "MethodDeclaration[200832-201803]:MethodDeclaration[200691-201662]"
  }, {
    "left" : "public lowerCase(str , locale ) : ",
    "right" : "public lowerCase(str , locale ) : ",
    "info" : "MethodDeclaration[201809-202611]:MethodDeclaration[201668-202470]"
  }, {
    "left" : "public capitalize(str ) : ",
    "right" : "public capitalize(str ) : ",
    "info" : "MethodDeclaration[202617-203762]:MethodDeclaration[202476-203621]"
  }, {
    "left" : "public uncapitalize(str ) : ",
    "right" : "public uncapitalize(str ) : ",
    "info" : "MethodDeclaration[203768-204931]:MethodDeclaration[203627-204790]"
  }, {
    "left" : "public swapCase(str ) : ",
    "right" : "public swapCase(str ) : ",
    "info" : "MethodDeclaration[204937-206778]:MethodDeclaration[204796-206637]"
  }, {
    "left" : "public countMatches(str , sub ) : int",
    "right" : "public countMatches(str , sub ) : int",
    "info" : "MethodDeclaration[206883-208135]:MethodDeclaration[206742-207994]"
  }, {
    "left" : "public isAlpha(cs ...) : boolean",
    "right" : "public isAlpha(cs ...) : boolean",
    "info" : "MethodDeclaration[208242-209366]:MethodDeclaration[208101-209225]"
  }, {
    "left" : "public isAlphaSpace(cs ...) : boolean",
    "right" : "public isAlphaSpace(cs ...) : boolean",
    "info" : "MethodDeclaration[209372-210574]:MethodDeclaration[209231-210433]"
  }, {
    "left" : "public isAlphanumeric(cs ...) : boolean",
    "right" : "public isAlphanumeric(cs ...) : boolean",
    "info" : "MethodDeclaration[210580-211851]:MethodDeclaration[210439-211710]"
  }, {
    "left" : "public isAlphanumericSpace(cs ...) : boolean",
    "right" : "public isAlphanumericSpace(cs ...) : boolean",
    "info" : "MethodDeclaration[211857-213158]:MethodDeclaration[211716-213017]"
  }, {
    "left" : "public isAsciiPrintable(cs ...) : boolean",
    "right" : "public isAsciiPrintable(cs ...) : boolean",
    "info" : "MethodDeclaration[213164-214628]:MethodDeclaration[213023-214487]"
  }, {
    "left" : "public isNumeric(cs ...) : boolean",
    "right" : "public isNumeric(cs ...) : boolean",
    "info" : "MethodDeclaration[214634-215928]:MethodDeclaration[214493-215787]"
  }, {
    "left" : "public isNumericSpace(cs ...) : boolean",
    "right" : "public isNumericSpace(cs ...) : boolean",
    "info" : "MethodDeclaration[215934-217275]:MethodDeclaration[215793-217134]"
  }, {
    "left" : "public isWhitespace(cs ...) : boolean",
    "right" : "public isWhitespace(cs ...) : boolean",
    "info" : "MethodDeclaration[217281-218392]:MethodDeclaration[217140-218251]"
  }, {
    "left" : "public isAllLowerCase(cs ...) : boolean",
    "right" : "public isAllLowerCase(cs ...) : boolean",
    "info" : "MethodDeclaration[218398-219510]:MethodDeclaration[218257-219369]"
  }, {
    "left" : "public isAllUpperCase(cs ...) : boolean",
    "right" : "public isAllUpperCase(cs ...) : boolean",
    "info" : "MethodDeclaration[219516-220621]:MethodDeclaration[219375-220480]"
  }, {
    "left" : "public defaultString(str ) : ",
    "right" : "public defaultString(str ) : ",
    "info" : "MethodDeclaration[220721-221342]:MethodDeclaration[220580-221201]"
  }, {
    "left" : "public defaultString(str , defaultStr ) : ",
    "right" : "public defaultString(str , defaultStr ) : ",
    "info" : "MethodDeclaration[221348-222131]:MethodDeclaration[221207-221990]"
  }, {
    "left" : "public defaultIfBlank(str , defaultStr ) : ",
    "right" : "public defaultIfBlank(str , defaultStr ) : ",
    "info" : "MethodDeclaration[222137-223139]:MethodDeclaration[221996-222998]"
  }, {
    "left" : "public defaultIfEmpty(str , defaultStr ) : ",
    "right" : "public defaultIfEmpty(str , defaultStr ) : ",
    "info" : "MethodDeclaration[223145-224061]:MethodDeclaration[223004-223920]"
  }, {
    "left" : "public reverse(str ) : ",
    "right" : "public reverse(str ) : ",
    "info" : "MethodDeclaration[224162-224772]:MethodDeclaration[224021-224631]"
  }, {
    "left" : "public reverseDelimited(str , separatorChar char) : ",
    "right" : "public reverseDelimited(str , separatorChar char) : ",
    "info" : "MethodDeclaration[224778-225888]:MethodDeclaration[224637-225747]"
  }, {
    "left" : "public abbreviate(str , maxWidth int) : ",
    "right" : "public abbreviate(str , maxWidth int) : ",
    "info" : "MethodDeclaration[225992-227450]:MethodDeclaration[225851-227309]"
  }, {
    "left" : "public abbreviate(str , offset int, maxWidth int) : ",
    "right" : "public abbreviate(str , offset int, maxWidth int) : ",
    "info" : "MethodDeclaration[227456-230376]:MethodDeclaration[227315-230235]"
  }, {
    "left" : "public abbreviateMiddle(str , middle , length int) : ",
    "right" : "public abbreviateMiddle(str , middle , length int) : ",
    "info" : "MethodDeclaration[230382-232540]:MethodDeclaration[230241-232399]"
  }, {
    "left" : "public difference(str1 , str2 ) : ",
    "right" : "public difference(str1 , str2 ) : ",
    "info" : "MethodDeclaration[232642-233988]:MethodDeclaration[232501-233847]"
  }, {
    "left" : "public indexOfDifference(cs1 , cs2 ) : int",
    "right" : "public indexOfDifference(cs1 , cs2 ) : int",
    "info" : "MethodDeclaration[233994-235567]:MethodDeclaration[233853-235426]"
  }, {
    "left" : "public indexOfDifference() : int",
    "right" : "public indexOfDifference() : int",
    "info" : "MethodDeclaration[235573-239493]:MethodDeclaration[235432-239352]"
  }, {
    "left" : "public getCommonPrefix() : ",
    "right" : "public getCommonPrefix() : ",
    "info" : "MethodDeclaration[239499-241957]:MethodDeclaration[239358-241816]"
  }, {
    "left" : "public getLevenshteinDistance(s , t ) : int",
    "right" : "public getLevenshteinDistance(s , t ) : int",
    "info" : "MethodDeclaration[242053-247004]:MethodDeclaration[241912-246863]"
  }, {
    "left" : "public getLevenshteinDistance(s , t , threshold int) : int",
    "right" : "public getLevenshteinDistance(s , t , threshold int) : int",
    "info" : "MethodDeclaration[247010-254067]:MethodDeclaration[246869-253926]"
  }, {
    "left" : "public startsWith(str , prefix ) : boolean",
    "right" : "public startsWith(str , prefix ) : boolean",
    "info" : "MethodDeclaration[254170-255264]:MethodDeclaration[254029-255123]"
  }, {
    "left" : "public startsWithIgnoreCase(str , prefix ) : boolean",
    "right" : "public startsWithIgnoreCase(str , prefix ) : boolean",
    "info" : "MethodDeclaration[255270-256463]:MethodDeclaration[255129-256322]"
  }, {
    "left" : "private startsWith(str , prefix , ignoreCase boolean) : boolean",
    "right" : "private startsWith(str , prefix , ignoreCase boolean) : boolean",
    "info" : "MethodDeclaration[256469-257346]:MethodDeclaration[256328-257205]"
  }, {
    "left" : "public startsWithAny(string , ) : boolean",
    "right" : "public startsWithAny(string , ) : boolean",
    "info" : "MethodDeclaration[257352-258774]:MethodDeclaration[257211-258633]"
  }, {
    "left" : "public endsWith(str , suffix ) : boolean",
    "right" : "public endsWith(str , suffix ) : boolean",
    "info" : "MethodDeclaration[258875-259998]:MethodDeclaration[258734-259857]"
  }, {
    "left" : "public endsWithIgnoreCase(str , suffix ) : boolean",
    "right" : "public endsWithIgnoreCase(str , suffix ) : boolean",
    "info" : "MethodDeclaration[260004-261236]:MethodDeclaration[259863-261095]"
  }, {
    "left" : "private endsWith(str , suffix , ignoreCase boolean) : boolean",
    "right" : "private endsWith(str , suffix , ignoreCase boolean) : boolean",
    "info" : "MethodDeclaration[261242-262175]:MethodDeclaration[261101-262034]"
  }, {
    "left" : "public normalizeSpace(str ) : ",
    "right" : "public normalizeSpace(str ) : ",
    "info" : "MethodDeclaration[262181-264025]:MethodDeclaration[262040-263884]"
  }, {
    "left" : "public endsWithAny(string , ) : boolean",
    "right" : "public endsWithAny(string , ) : boolean",
    "info" : "MethodDeclaration[264031-265311]:MethodDeclaration[263890-265170]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5923-5929]:Modifier[5923-5929]"
  }, {
    "left" : "StringUtils",
    "right" : "StringUtils",
    "info" : "SimpleName[5930-5941]:SimpleName[5930-5941]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5944-5968]:Block[5944-5968]"
  }, {
    "left" : "super();",
    "right" : "super();",
    "info" : "SuperConstructorInvocation[5954-5962]:SuperConstructorInvocation[5954-5962]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6788-6794]:Modifier[6788-6794]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6795-6801]:Modifier[6795-6801]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[6802-6809]:PrimitiveType[6802-6809]"
  }, {
    "left" : "isEmpty",
    "right" : "isEmpty",
    "info" : "SimpleName[6810-6817]:SimpleName[6810-6817]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[6818-6833]:SingleVariableDeclaration[6818-6833]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6835-6889]:Block[6835-6889]"
  }, {
    "left" : "return cs == null || cs.length() == 0;",
    "right" : "return cs == null || cs.length() == 0;",
    "info" : "ReturnStatement[6845-6883]:ReturnStatement[6845-6883]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7484-7490]:Modifier[7484-7490]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[7491-7497]:Modifier[7491-7497]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[7498-7505]:PrimitiveType[7498-7505]"
  }, {
    "left" : "isNotEmpty",
    "right" : "isNotEmpty",
    "info" : "SimpleName[7506-7516]:SimpleName[7506-7516]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[7517-7532]:SingleVariableDeclaration[7517-7532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7534-7582]:Block[7534-7582]"
  }, {
    "left" : "return !StringUtils.isEmpty(cs);",
    "right" : "return !StringUtils.isEmpty(cs);",
    "info" : "ReturnStatement[7544-7576]:ReturnStatement[7544-7576]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8180-8186]:Modifier[8180-8186]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8187-8193]:Modifier[8187-8193]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[8194-8201]:PrimitiveType[8194-8201]"
  }, {
    "left" : "isBlank",
    "right" : "isBlank",
    "info" : "SimpleName[8202-8209]:SimpleName[8202-8209]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[8210-8225]:SingleVariableDeclaration[8210-8225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8227-8531]:Block[8227-8531]"
  }, {
    "left" : "int strLen;",
    "right" : "int strLen;",
    "info" : "VariableDeclarationStatement[8237-8248]:VariableDeclarationStatement[8237-8248]"
  }, {
    "left" : "if (cs == null || (strLen = cs.length()) == 0)",
    "right" : "if (cs == null || (strLen = cs.length()) == 0)",
    "info" : "IfStatement[8257-8340]:IfStatement[8257-8340]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8304-8340]:Block[8304-8340]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[8318-8330]:ReturnStatement[8318-8330]"
  }, {
    "left" : "for (int i = 0; i < strLen; i++)",
    "right" : "for (int i = 0; i < strLen; i++)",
    "info" : "ForStatement[8349-8504]:ForStatement[8349-8504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8382-8504]:Block[8382-8504]"
  }, {
    "left" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
    "right" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
    "info" : "IfStatement[8396-8494]:IfStatement[8396-8494]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8449-8494]:Block[8449-8494]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[8467-8480]:ReturnStatement[8467-8480]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[8513-8525]:ReturnStatement[8513-8525]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9193-9199]:Modifier[9193-9199]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9200-9206]:Modifier[9200-9206]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[9207-9214]:PrimitiveType[9207-9214]"
  }, {
    "left" : "isNotBlank",
    "right" : "isNotBlank",
    "info" : "SimpleName[9215-9225]:SimpleName[9215-9225]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[9226-9241]:SingleVariableDeclaration[9226-9241]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9243-9291]:Block[9243-9291]"
  }, {
    "left" : "return !StringUtils.isBlank(cs);",
    "right" : "return !StringUtils.isBlank(cs);",
    "info" : "ReturnStatement[9253-9285]:ReturnStatement[9253-9285]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10242-10248]:Modifier[10242-10248]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10249-10255]:Modifier[10249-10255]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[10256-10262]:SimpleType[10256-10262]"
  }, {
    "left" : "trim",
    "right" : "trim",
    "info" : "SimpleName[10263-10267]:SimpleName[10263-10267]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[10268-10278]:SingleVariableDeclaration[10268-10278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10280-10335]:Block[10280-10335]"
  }, {
    "left" : "return str == null ? null : str.trim();",
    "right" : "return str == null ? null : str.trim();",
    "info" : "ReturnStatement[10290-10329]:ReturnStatement[10290-10329]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11219-11225]:Modifier[11219-11225]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11226-11232]:Modifier[11226-11232]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[11233-11239]:SimpleType[11233-11239]"
  }, {
    "left" : "trimToNull",
    "right" : "trimToNull",
    "info" : "SimpleName[11240-11250]:SimpleName[11240-11250]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[11251-11261]:SingleVariableDeclaration[11251-11261]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11263-11341]:Block[11263-11341]"
  }, {
    "left" : "String ts = trim(str);",
    "right" : "String ts = trim(str);",
    "info" : "VariableDeclarationStatement[11273-11295]:VariableDeclarationStatement[11273-11295]"
  }, {
    "left" : "return isEmpty(ts) ? null : ts;",
    "right" : "return isEmpty(ts) ? null : ts;",
    "info" : "ReturnStatement[11304-11335]:ReturnStatement[11304-11335]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12202-12208]:Modifier[12202-12208]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12209-12215]:Modifier[12209-12215]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[12216-12222]:SimpleType[12216-12222]"
  }, {
    "left" : "trimToEmpty",
    "right" : "trimToEmpty",
    "info" : "SimpleName[12223-12234]:SimpleName[12223-12234]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[12235-12245]:SingleVariableDeclaration[12235-12245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12247-12303]:Block[12247-12303]"
  }, {
    "left" : "return str == null ? EMPTY : str.trim();",
    "right" : "return str == null ? EMPTY : str.trim();",
    "info" : "ReturnStatement[12257-12297]:ReturnStatement[12257-12297]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13233-13239]:Modifier[13233-13239]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13240-13246]:Modifier[13240-13246]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[13247-13253]:SimpleType[13247-13253]"
  }, {
    "left" : "strip",
    "right" : "strip",
    "info" : "SimpleName[13254-13259]:SimpleName[13254-13259]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[13260-13270]:SingleVariableDeclaration[13260-13270]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13272-13312]:Block[13272-13312]"
  }, {
    "left" : "return strip(str, null);",
    "right" : "return strip(str, null);",
    "info" : "ReturnStatement[13282-13306]:ReturnStatement[13282-13306]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14245-14251]:Modifier[14245-14251]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14252-14258]:Modifier[14252-14258]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[14259-14265]:SimpleType[14259-14265]"
  }, {
    "left" : "stripToNull",
    "right" : "stripToNull",
    "info" : "SimpleName[14266-14277]:SimpleName[14266-14277]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[14278-14288]:SingleVariableDeclaration[14278-14288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14290-14438]:Block[14290-14438]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[14300-14353]:IfStatement[14300-14353]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14317-14353]:Block[14317-14353]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[14331-14343]:ReturnStatement[14331-14343]"
  }, {
    "left" : "str = strip(str, null);",
    "right" : "str = strip(str, null);",
    "info" : "ExpressionStatement[14362-14385]:ExpressionStatement[14362-14385]"
  }, {
    "left" : "return str.length() == 0 ? null : str;",
    "right" : "return str.length() == 0 ? null : str;",
    "info" : "ReturnStatement[14394-14432]:ReturnStatement[14394-14432]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15332-15338]:Modifier[15332-15338]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15339-15345]:Modifier[15339-15345]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[15346-15352]:SimpleType[15346-15352]"
  }, {
    "left" : "stripToEmpty",
    "right" : "stripToEmpty",
    "info" : "SimpleName[15353-15365]:SimpleName[15353-15365]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[15366-15376]:SingleVariableDeclaration[15366-15376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15378-15440]:Block[15378-15440]"
  }, {
    "left" : "return str == null ? EMPTY : strip(str, null);",
    "right" : "return str == null ? EMPTY : strip(str, null);",
    "info" : "ReturnStatement[15388-15434]:ReturnStatement[15388-15434]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16599-16605]:Modifier[16599-16605]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16606-16612]:Modifier[16606-16612]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[16613-16619]:SimpleType[16613-16619]"
  }, {
    "left" : "strip",
    "right" : "strip",
    "info" : "SimpleName[16620-16625]:SimpleName[16620-16625]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[16626-16636]:SingleVariableDeclaration[16626-16636]"
  }, {
    "left" : "String stripChars",
    "right" : "String stripChars",
    "info" : "SingleVariableDeclaration[16638-16655]:SingleVariableDeclaration[16638-16655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16657-16811]:Block[16657-16811]"
  }, {
    "left" : "if (isEmpty(str))",
    "right" : "if (isEmpty(str))",
    "info" : "IfStatement[16667-16720]:IfStatement[16667-16720]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16685-16720]:Block[16685-16720]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[16699-16710]:ReturnStatement[16699-16710]"
  }, {
    "left" : "str = stripStart(str, stripChars);",
    "right" : "str = stripStart(str, stripChars);",
    "info" : "ExpressionStatement[16729-16763]:ExpressionStatement[16729-16763]"
  }, {
    "left" : "return stripEnd(str, stripChars);",
    "right" : "return stripEnd(str, stripChars);",
    "info" : "ReturnStatement[16772-16805]:ReturnStatement[16772-16805]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17893-17899]:Modifier[17893-17899]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[17900-17906]:Modifier[17900-17906]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[17907-17913]:SimpleType[17907-17913]"
  }, {
    "left" : "stripStart",
    "right" : "stripStart",
    "info" : "SimpleName[17914-17924]:SimpleName[17914-17924]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[17925-17935]:SingleVariableDeclaration[17925-17935]"
  }, {
    "left" : "String stripChars",
    "right" : "String stripChars",
    "info" : "SingleVariableDeclaration[17937-17954]:SingleVariableDeclaration[17937-17954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17956-18533]:Block[17956-18533]"
  }, {
    "left" : "int strLen;",
    "right" : "int strLen;",
    "info" : "VariableDeclarationStatement[17966-17977]:VariableDeclarationStatement[17966-17977]"
  }, {
    "left" : "if (str == null || (strLen = str.length()) == 0)",
    "right" : "if (str == null || (strLen = str.length()) == 0)",
    "info" : "IfStatement[17986-18070]:IfStatement[17986-18070]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18035-18070]:Block[18035-18070]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[18049-18060]:ReturnStatement[18049-18060]"
  }, {
    "left" : "int start = 0;",
    "right" : "int start = 0;",
    "info" : "VariableDeclarationStatement[18079-18093]:VariableDeclarationStatement[18079-18093]"
  }, {
    "left" : "if (stripChars == null)",
    "right" : "if (stripChars == null)",
    "info" : "IfStatement[18102-18490]:IfStatement[18102-18490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18126-18261]:Block[18126-18261]"
  }, {
    "left" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
    "right" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
    "info" : "WhileStatement[18140-18251]:WhileStatement[18140-18251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18211-18251]:Block[18211-18251]"
  }, {
    "left" : "start++;",
    "right" : "start++;",
    "info" : "ExpressionStatement[18229-18237]:ExpressionStatement[18229-18237]"
  }, {
    "left" : "if (stripChars.length() == 0)",
    "right" : "if (stripChars.length() == 0)",
    "info" : "IfStatement[18267-18490]:IfStatement[18267-18490]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18297-18332]:Block[18297-18332]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[18311-18322]:ReturnStatement[18311-18322]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18338-18490]:Block[18338-18490]"
  }, {
    "left" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND))",
    "right" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND))",
    "info" : "WhileStatement[18352-18480]:WhileStatement[18352-18480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18440-18480]:Block[18440-18480]"
  }, {
    "left" : "start++;",
    "right" : "start++;",
    "info" : "ExpressionStatement[18458-18466]:ExpressionStatement[18458-18466]"
  }, {
    "left" : "return str.substring(start);",
    "right" : "return str.substring(start);",
    "info" : "ReturnStatement[18499-18527]:ReturnStatement[18499-18527]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[19657-19663]:Modifier[19657-19663]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19664-19670]:Modifier[19664-19670]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[19671-19677]:SimpleType[19671-19677]"
  }, {
    "left" : "stripEnd",
    "right" : "stripEnd",
    "info" : "SimpleName[19678-19686]:SimpleName[19678-19686]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[19687-19697]:SingleVariableDeclaration[19687-19697]"
  }, {
    "left" : "String stripChars",
    "right" : "String stripChars",
    "info" : "SingleVariableDeclaration[19699-19716]:SingleVariableDeclaration[19699-19716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19718-20254]:Block[19718-20254]"
  }, {
    "left" : "int end;",
    "right" : "int end;",
    "info" : "VariableDeclarationStatement[19728-19736]:VariableDeclarationStatement[19728-19736]"
  }, {
    "left" : "if (str == null || (end = str.length()) == 0)",
    "right" : "if (str == null || (end = str.length()) == 0)",
    "info" : "IfStatement[19745-19826]:IfStatement[19745-19826]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19791-19826]:Block[19791-19826]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[19805-19816]:ReturnStatement[19805-19816]"
  }, {
    "left" : "if (stripChars == null)",
    "right" : "if (stripChars == null)",
    "info" : "IfStatement[19836-20210]:IfStatement[19836-20210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19860-19988]:Block[19860-19988]"
  }, {
    "left" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
    "right" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
    "info" : "WhileStatement[19874-19978]:WhileStatement[19874-19978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19940-19978]:Block[19940-19978]"
  }, {
    "left" : "end--;",
    "right" : "end--;",
    "info" : "ExpressionStatement[19958-19964]:ExpressionStatement[19958-19964]"
  }, {
    "left" : "if (stripChars.length() == 0)",
    "right" : "if (stripChars.length() == 0)",
    "info" : "IfStatement[19994-20210]:IfStatement[19994-20210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20024-20059]:Block[20024-20059]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[20038-20049]:ReturnStatement[20038-20049]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20065-20210]:Block[20065-20210]"
  }, {
    "left" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND))",
    "right" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND))",
    "info" : "WhileStatement[20079-20200]:WhileStatement[20079-20200]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20162-20200]:Block[20162-20200]"
  }, {
    "left" : "end--;",
    "right" : "end--;",
    "info" : "ExpressionStatement[20180-20186]:ExpressionStatement[20180-20186]"
  }, {
    "left" : "return str.substring(0, end);",
    "right" : "return str.substring(0, end);",
    "info" : "ReturnStatement[20219-20248]:ReturnStatement[20219-20248]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[21160-21166]:Modifier[21160-21166]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21167-21173]:Modifier[21167-21173]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[21174-21182]:ArrayType[21174-21182]"
  }, {
    "left" : "stripAll",
    "right" : "stripAll",
    "info" : "SimpleName[21183-21191]:SimpleName[21183-21191]"
  }, {
    "left" : "String... strs",
    "right" : "String... strs",
    "info" : "SingleVariableDeclaration[21192-21206]:SingleVariableDeclaration[21192-21206]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21208-21252]:Block[21208-21252]"
  }, {
    "left" : "return stripAll(strs, null);",
    "right" : "return stripAll(strs, null);",
    "info" : "ReturnStatement[21218-21246]:ReturnStatement[21218-21246]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[22446-22452]:Modifier[22446-22452]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[22453-22459]:Modifier[22453-22459]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[22460-22468]:ArrayType[22460-22468]"
  }, {
    "left" : "stripAll",
    "right" : "stripAll",
    "info" : "SimpleName[22469-22477]:SimpleName[22469-22477]"
  }, {
    "left" : "String[] strs",
    "right" : "String[] strs",
    "info" : "SingleVariableDeclaration[22478-22491]:SingleVariableDeclaration[22478-22491]"
  }, {
    "left" : "String stripChars",
    "right" : "String stripChars",
    "info" : "SingleVariableDeclaration[22493-22510]:SingleVariableDeclaration[22493-22510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22512-22811]:Block[22512-22811]"
  }, {
    "left" : "int strsLen;",
    "right" : "int strsLen;",
    "info" : "VariableDeclarationStatement[22522-22534]:VariableDeclarationStatement[22522-22534]"
  }, {
    "left" : "if (strs == null || (strsLen = strs.length) == 0)",
    "right" : "if (strs == null || (strsLen = strs.length) == 0)",
    "info" : "IfStatement[22543-22629]:IfStatement[22543-22629]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22593-22629]:Block[22593-22629]"
  }, {
    "left" : "return strs;",
    "right" : "return strs;",
    "info" : "ReturnStatement[22607-22619]:ReturnStatement[22607-22619]"
  }, {
    "left" : "String[] newArr = new String[strsLen];",
    "right" : "String[] newArr = new String[strsLen];",
    "info" : "VariableDeclarationStatement[22638-22676]:VariableDeclarationStatement[22638-22676]"
  }, {
    "left" : "for (int i = 0; i < strsLen; i++)",
    "right" : "for (int i = 0; i < strsLen; i++)",
    "info" : "ForStatement[22685-22782]:ForStatement[22685-22782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22719-22782]:Block[22719-22782]"
  }, {
    "left" : "newArr[i] = strip(strs[i], stripChars);",
    "right" : "newArr[i] = strip(strs[i], stripChars);",
    "info" : "ExpressionStatement[22733-22772]:ExpressionStatement[22733-22772]"
  }, {
    "left" : "return newArr;",
    "right" : "return newArr;",
    "info" : "ReturnStatement[22791-22805]:ReturnStatement[22791-22805]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23936-23942]:Modifier[23936-23942]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23943-23949]:Modifier[23943-23949]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[23950-23956]:SimpleType[23950-23956]"
  }, {
    "left" : "stripAccents",
    "right" : "stripAccents",
    "info" : "SimpleName[23957-23969]:SimpleName[23957-23969]"
  }, {
    "left" : "String input",
    "right" : "String input",
    "info" : "SingleVariableDeclaration[23970-23982]:SingleVariableDeclaration[23970-23982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23984-25091]:Block[23984-25091]"
  }, {
    "left" : "if(input == null)",
    "right" : "if(input == null)",
    "info" : "IfStatement[23994-24048]:IfStatement[23994-24048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24012-24048]:Block[24012-24048]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[24026-24038]:ReturnStatement[24026-24038]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[24057-25085]:TryStatement[24057-25085]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24061-24583]:Block[24061-24583]"
  }, {
    "left" : "String result = null;",
    "right" : "String result = null;",
    "info" : "VariableDeclarationStatement[24075-24096]:VariableDeclarationStatement[24075-24096]"
  }, {
    "left" : "if (java6Available)",
    "right" : "if (java6Available)",
    "info" : "IfStatement[24109-24465]:IfStatement[24109-24465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24129-24196]:Block[24129-24196]"
  }, {
    "left" : "result = removeAccentsJava6(input);",
    "right" : "result = removeAccentsJava6(input);",
    "info" : "ExpressionStatement[24147-24182]:ExpressionStatement[24147-24182]"
  }, {
    "left" : "if (sunAvailable)",
    "right" : "if (sunAvailable)",
    "info" : "IfStatement[24202-24465]:IfStatement[24202-24465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24220-24285]:Block[24220-24285]"
  }, {
    "left" : "result = removeAccentsSUN(input);",
    "right" : "result = removeAccentsSUN(input);",
    "info" : "ExpressionStatement[24238-24271]:ExpressionStatement[24238-24271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24291-24465]:Block[24291-24465]"
  }, {
    "left" : "throw new UnsupportedOperationException(\n                    \"The stripAccents(CharSequence) method requires at least Java 1.6 or a Sun JVM\");",
    "right" : "throw new UnsupportedOperationException(\n                    \"The stripAccents(CharSequence) method requires at least Java 1.6 or a Sun JVM\");",
    "info" : "ThrowStatement[24309-24451]:ThrowStatement[24309-24451]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[24559-24573]:ReturnStatement[24559-24573]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24620-24713]:Block[24620-24713]"
  }, {
    "left" : "throw new RuntimeException(\"IllegalArgumentException occurred\", iae);",
    "right" : "throw new RuntimeException(\"IllegalArgumentException occurred\", iae);",
    "info" : "ThrowStatement[24634-24703]:ThrowStatement[24634-24703]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24748-24839]:Block[24748-24839]"
  }, {
    "left" : "throw new RuntimeException(\"IllegalAccessException occurred\", iae);",
    "right" : "throw new RuntimeException(\"IllegalAccessException occurred\", iae);",
    "info" : "ThrowStatement[24762-24829]:ThrowStatement[24762-24829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24877-24971]:Block[24877-24971]"
  }, {
    "left" : "throw new RuntimeException(\"InvocationTargetException occurred\", ite);",
    "right" : "throw new RuntimeException(\"InvocationTargetException occurred\", ite);",
    "info" : "ThrowStatement[24891-24961]:ThrowStatement[24891-24961]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25000-25085]:Block[25000-25085]"
  }, {
    "left" : "throw new RuntimeException(\"SecurityException occurred\", se);",
    "right" : "throw new RuntimeException(\"SecurityException occurred\", se);",
    "info" : "ThrowStatement[25014-25075]:ThrowStatement[25014-25075]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25615-25622]:Modifier[25615-25622]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[25623-25629]:Modifier[25623-25629]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[25630-25636]:SimpleType[25630-25636]"
  }, {
    "left" : "removeAccentsJava6",
    "right" : "removeAccentsJava6",
    "info" : "SimpleName[25637-25655]:SimpleName[25637-25655]"
  }, {
    "left" : "CharSequence text",
    "right" : "CharSequence text",
    "info" : "SingleVariableDeclaration[25656-25673]:SingleVariableDeclaration[25656-25673]"
  }, {
    "left" : "IllegalAccessException",
    "right" : "IllegalAccessException",
    "info" : "SimpleType[25690-25712]:SimpleType[25690-25712]"
  }, {
    "left" : "InvocationTargetException",
    "right" : "InvocationTargetException",
    "info" : "SimpleType[25714-25739]:SimpleType[25714-25739]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25740-26329]:Block[25740-26329]"
  }, {
    "left" : "if (!java6Available || java6NormalizerFormNFD == null)",
    "right" : "if (!java6Available || java6NormalizerFormNFD == null)",
    "info" : "IfStatement[25944-26096]:IfStatement[25944-26096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25999-26096]:Block[25999-26096]"
  }, {
    "left" : "throw new IllegalStateException(\"java.text.Normalizer is not available\");",
    "right" : "throw new IllegalStateException(\"java.text.Normalizer is not available\");",
    "info" : "ThrowStatement[26013-26086]:ThrowStatement[26013-26086]"
  }, {
    "left" : "String result;",
    "right" : "String result;",
    "info" : "VariableDeclarationStatement[26105-26119]:VariableDeclarationStatement[26105-26119]"
  }, {
    "left" : "result = (String) java6NormalizeMethod.invoke(null, new Object[] {text, java6NormalizerFormNFD});",
    "right" : "result = (String) java6NormalizeMethod.invoke(null, new Object[] {text, java6NormalizerFormNFD});",
    "info" : "ExpressionStatement[26128-26225]:ExpressionStatement[26128-26225]"
  }, {
    "left" : "result = java6Pattern.matcher(result).replaceAll(\"\");",
    "right" : "result = java6Pattern.matcher(result).replaceAll(\"\");",
    "info" : "ExpressionStatement[26234-26287]:ExpressionStatement[26234-26287]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[26309-26323]:ReturnStatement[26309-26323]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[26750-26757]:Modifier[26750-26757]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[26758-26764]:Modifier[26758-26764]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26765-26771]:SimpleType[26765-26771]"
  }, {
    "left" : "removeAccentsSUN",
    "right" : "removeAccentsSUN",
    "info" : "SimpleName[26772-26788]:SimpleName[26772-26788]"
  }, {
    "left" : "CharSequence text",
    "right" : "CharSequence text",
    "info" : "SingleVariableDeclaration[26789-26806]:SingleVariableDeclaration[26789-26806]"
  }, {
    "left" : "IllegalAccessException",
    "right" : "IllegalAccessException",
    "info" : "SimpleType[26823-26845]:SimpleType[26823-26845]"
  }, {
    "left" : "InvocationTargetException",
    "right" : "InvocationTargetException",
    "info" : "SimpleType[26847-26872]:SimpleType[26847-26872]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26873-27411]:Block[26873-27411]"
  }, {
    "left" : "if (! sunAvailable)",
    "right" : "if (! sunAvailable)",
    "info" : "IfStatement[27055-27171]:IfStatement[27055-27171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27075-27171]:Block[27075-27171]"
  }, {
    "left" : "throw new IllegalStateException(\"sun.text.Normalizer is not available\");",
    "right" : "throw new IllegalStateException(\"sun.text.Normalizer is not available\");",
    "info" : "ThrowStatement[27089-27161]:ThrowStatement[27089-27161]"
  }, {
    "left" : "String result;",
    "right" : "String result;",
    "info" : "VariableDeclarationStatement[27180-27194]:VariableDeclarationStatement[27180-27194]"
  }, {
    "left" : "result = (String) sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",
    "right" : "result = (String) sunDecomposeMethod.invoke(null, new Object[] {text, Boolean.FALSE, Integer.valueOf(0)});",
    "info" : "ExpressionStatement[27203-27309]:ExpressionStatement[27203-27309]"
  }, {
    "left" : "result = sunPattern.matcher(result).replaceAll(\"\");",
    "right" : "result = sunPattern.matcher(result).replaceAll(\"\");",
    "info" : "ExpressionStatement[27318-27369]:ExpressionStatement[27318-27369]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[27391-27405]:ReturnStatement[27391-27405]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27921-29618]:Block[27921-29618]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[27931-29023]:TryStatement[27931-29023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27935-28702]:Block[27935-28702]"
  }, {
    "left" : "Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader()\n                .loadClass(\"java.text.Normalizer$Form\");",
    "right" : "Class<?> normalizerFormClass = Thread.currentThread().getContextClassLoader()\n                .loadClass(\"java.text.Normalizer$Form\");",
    "info" : "VariableDeclarationStatement[28099-28233]:VariableDeclarationStatement[28099-28233]"
  }, {
    "left" : "java6NormalizerFormNFD = normalizerFormClass.getField(\"NFD\").get(null);",
    "right" : "java6NormalizerFormNFD = normalizerFormClass.getField(\"NFD\").get(null);",
    "info" : "ExpressionStatement[28259-28330]:ExpressionStatement[28259-28330]"
  }, {
    "left" : "Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()\n                .loadClass(\"java.text.Normalizer\");",
    "right" : "Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()\n                .loadClass(\"java.text.Normalizer\");",
    "info" : "VariableDeclarationStatement[28356-28481]:VariableDeclarationStatement[28356-28481]"
  }, {
    "left" : "java6NormalizeMethod = normalizerClass.getMethod(\"normalize\",\n                    new Class[] {CharSequence.class, normalizerFormClass});",
    "right" : "java6NormalizeMethod = normalizerClass.getMethod(\"normalize\",\n                    new Class[] {CharSequence.class, normalizerFormClass});",
    "info" : "ExpressionStatement[28507-28644]:ExpressionStatement[28507-28644]"
  }, {
    "left" : "java6Available = true;",
    "right" : "java6Available = true;",
    "info" : "ExpressionStatement[28670-28692]:ExpressionStatement[28670-28692]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28736-28783]:Block[28736-28783]"
  }, {
    "left" : "java6Available = false;",
    "right" : "java6Available = false;",
    "info" : "ExpressionStatement[28750-28773]:ExpressionStatement[28750-28773]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28815-28862]:Block[28815-28862]"
  }, {
    "left" : "java6Available = false;",
    "right" : "java6Available = false;",
    "info" : "ExpressionStatement[28829-28852]:ExpressionStatement[28829-28852]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28896-28943]:Block[28896-28943]"
  }, {
    "left" : "java6Available = false;",
    "right" : "java6Available = false;",
    "info" : "ExpressionStatement[28910-28933]:ExpressionStatement[28910-28933]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28976-29023]:Block[28976-29023]"
  }, {
    "left" : "java6Available = false;",
    "right" : "java6Available = false;",
    "info" : "ExpressionStatement[28990-29013]:ExpressionStatement[28990-29013]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[29033-29612]:TryStatement[29033-29612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29037-29455]:Block[29037-29455]"
  }, {
    "left" : "Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()\n                .loadClass(\"sun.text.Normalizer\");",
    "right" : "Class<?> normalizerClass = Thread.currentThread().getContextClassLoader()\n                .loadClass(\"sun.text.Normalizer\");",
    "info" : "VariableDeclarationStatement[29113-29237]:VariableDeclarationStatement[29113-29237]"
  }, {
    "left" : "sunDecomposeMethod = normalizerClass.getMethod(\"decompose\",\n                    new Class[] {String.class, Boolean.TYPE, Integer.TYPE});",
    "right" : "sunDecomposeMethod = normalizerClass.getMethod(\"decompose\",\n                    new Class[] {String.class, Boolean.TYPE, Integer.TYPE});",
    "info" : "ExpressionStatement[29263-29399]:ExpressionStatement[29263-29399]"
  }, {
    "left" : "sunAvailable = true;",
    "right" : "sunAvailable = true;",
    "info" : "ExpressionStatement[29425-29445]:ExpressionStatement[29425-29445]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29489-29534]:Block[29489-29534]"
  }, {
    "left" : "sunAvailable = false;",
    "right" : "sunAvailable = false;",
    "info" : "ExpressionStatement[29503-29524]:ExpressionStatement[29503-29524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29567-29612]:Block[29567-29612]"
  }, {
    "left" : "sunAvailable = false;",
    "right" : "sunAvailable = false;",
    "info" : "ExpressionStatement[29581-29602]:ExpressionStatement[29581-29602]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30621-30627]:Modifier[30621-30627]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[30628-30634]:Modifier[30628-30634]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[30635-30642]:PrimitiveType[30635-30642]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[30643-30649]:SimpleName[30643-30649]"
  }, {
    "left" : "CharSequence cs1",
    "right" : "CharSequence cs1",
    "info" : "SingleVariableDeclaration[30650-30666]:SingleVariableDeclaration[30650-30666]"
  }, {
    "left" : "CharSequence cs2",
    "right" : "CharSequence cs2",
    "info" : "SingleVariableDeclaration[30668-30684]:SingleVariableDeclaration[30668-30684]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30686-30753]:Block[30686-30753]"
  }, {
    "left" : "return cs1 == null ? cs2 == null : cs1.equals(cs2);",
    "right" : "return cs1 == null ? cs2 == null : cs1.equals(cs2);",
    "info" : "ReturnStatement[30696-30747]:ReturnStatement[30696-30747]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31709-31715]:Modifier[31709-31715]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[31716-31722]:Modifier[31716-31722]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[31723-31730]:PrimitiveType[31723-31730]"
  }, {
    "left" : "equalsIgnoreCase",
    "right" : "equalsIgnoreCase",
    "info" : "SimpleName[31731-31747]:SimpleName[31731-31747]"
  }, {
    "left" : "CharSequence str1",
    "right" : "CharSequence str1",
    "info" : "SingleVariableDeclaration[31748-31765]:SingleVariableDeclaration[31748-31765]"
  }, {
    "left" : "CharSequence str2",
    "right" : "CharSequence str2",
    "info" : "SingleVariableDeclaration[31767-31784]:SingleVariableDeclaration[31767-31784]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31786-32013]:Block[31786-32013]"
  }, {
    "left" : "if (str1 == null || str2 == null)",
    "right" : "if (str1 == null || str2 == null)",
    "info" : "IfStatement[31796-32007]:IfStatement[31796-32007]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31830-31874]:Block[31830-31874]"
  }, {
    "left" : "return str1 == str2;",
    "right" : "return str1 == str2;",
    "info" : "ReturnStatement[31844-31864]:ReturnStatement[31844-31864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31880-32007]:Block[31880-32007]"
  }, {
    "left" : "return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));",
    "right" : "return CharSequenceUtils.regionMatches(str1, true, 0, str2, 0, Math.max(str1.length(), str2.length()));",
    "info" : "ReturnStatement[31894-31997]:ReturnStatement[31894-31997]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32944-32950]:Modifier[32944-32950]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[32951-32957]:Modifier[32951-32957]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[32958-32961]:PrimitiveType[32958-32961]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[32962-32969]:SimpleName[32962-32969]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[32970-32986]:SingleVariableDeclaration[32970-32986]"
  }, {
    "left" : "int searchChar",
    "right" : "int searchChar",
    "info" : "SingleVariableDeclaration[32988-33002]:SingleVariableDeclaration[32988-33002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33004-33147]:Block[33004-33147]"
  }, {
    "left" : "if (isEmpty(seq))",
    "right" : "if (isEmpty(seq))",
    "info" : "IfStatement[33014-33079]:IfStatement[33014-33079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33032-33079]:Block[33032-33079]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[33046-33069]:ReturnStatement[33046-33069]"
  }, {
    "left" : "return CharSequenceUtils.indexOf(seq, searchChar, 0);",
    "right" : "return CharSequenceUtils.indexOf(seq, searchChar, 0);",
    "info" : "ReturnStatement[33088-33141]:ReturnStatement[33088-33141]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34342-34348]:Modifier[34342-34348]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[34349-34355]:Modifier[34349-34355]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[34356-34359]:PrimitiveType[34356-34359]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[34360-34367]:SimpleName[34360-34367]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[34368-34384]:SingleVariableDeclaration[34368-34384]"
  }, {
    "left" : "int searchChar",
    "right" : "int searchChar",
    "info" : "SingleVariableDeclaration[34386-34400]:SingleVariableDeclaration[34386-34400]"
  }, {
    "left" : "int startPos",
    "right" : "int startPos",
    "info" : "SingleVariableDeclaration[34402-34414]:SingleVariableDeclaration[34402-34414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34416-34566]:Block[34416-34566]"
  }, {
    "left" : "if (isEmpty(seq))",
    "right" : "if (isEmpty(seq))",
    "info" : "IfStatement[34426-34491]:IfStatement[34426-34491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34444-34491]:Block[34444-34491]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[34458-34481]:ReturnStatement[34458-34481]"
  }, {
    "left" : "return CharSequenceUtils.indexOf(seq, searchChar, startPos);",
    "right" : "return CharSequenceUtils.indexOf(seq, searchChar, startPos);",
    "info" : "ReturnStatement[34500-34560]:ReturnStatement[34500-34560]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35627-35633]:Modifier[35627-35633]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[35634-35640]:Modifier[35634-35640]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[35641-35644]:PrimitiveType[35641-35644]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[35645-35652]:SimpleName[35645-35652]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[35653-35669]:SingleVariableDeclaration[35653-35669]"
  }, {
    "left" : "CharSequence searchSeq",
    "right" : "CharSequence searchSeq",
    "info" : "SingleVariableDeclaration[35671-35693]:SingleVariableDeclaration[35671-35693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35695-35857]:Block[35695-35857]"
  }, {
    "left" : "if (seq == null || searchSeq == null)",
    "right" : "if (seq == null || searchSeq == null)",
    "info" : "IfStatement[35705-35790]:IfStatement[35705-35790]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35743-35790]:Block[35743-35790]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[35757-35780]:ReturnStatement[35757-35780]"
  }, {
    "left" : "return CharSequenceUtils.indexOf(seq, searchSeq, 0);",
    "right" : "return CharSequenceUtils.indexOf(seq, searchSeq, 0);",
    "info" : "ReturnStatement[35799-35851]:ReturnStatement[35799-35851]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37445-37451]:Modifier[37445-37451]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[37452-37458]:Modifier[37452-37458]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[37459-37462]:PrimitiveType[37459-37462]"
  }, {
    "left" : "indexOf",
    "right" : "indexOf",
    "info" : "SimpleName[37463-37470]:SimpleName[37463-37470]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[37471-37487]:SingleVariableDeclaration[37471-37487]"
  }, {
    "left" : "CharSequence searchSeq",
    "right" : "CharSequence searchSeq",
    "info" : "SingleVariableDeclaration[37489-37511]:SingleVariableDeclaration[37489-37511]"
  }, {
    "left" : "int startPos",
    "right" : "int startPos",
    "info" : "SingleVariableDeclaration[37513-37525]:SingleVariableDeclaration[37513-37525]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37527-37696]:Block[37527-37696]"
  }, {
    "left" : "if (seq == null || searchSeq == null)",
    "right" : "if (seq == null || searchSeq == null)",
    "info" : "IfStatement[37537-37622]:IfStatement[37537-37622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37575-37622]:Block[37575-37622]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[37589-37612]:ReturnStatement[37589-37612]"
  }, {
    "left" : "return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",
    "right" : "return CharSequenceUtils.indexOf(seq, searchSeq, startPos);",
    "info" : "ReturnStatement[37631-37690]:ReturnStatement[37631-37690]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[39282-39288]:Modifier[39282-39288]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[39289-39295]:Modifier[39289-39295]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[39296-39299]:PrimitiveType[39296-39299]"
  }, {
    "left" : "ordinalIndexOf",
    "right" : "ordinalIndexOf",
    "info" : "SimpleName[39300-39314]:SimpleName[39300-39314]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[39315-39331]:SingleVariableDeclaration[39315-39331]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[39333-39355]:SingleVariableDeclaration[39333-39355]"
  }, {
    "left" : "int ordinal",
    "right" : "int ordinal",
    "info" : "SingleVariableDeclaration[39357-39368]:SingleVariableDeclaration[39357-39368]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39370-39440]:Block[39370-39440]"
  }, {
    "left" : "return ordinalIndexOf(str, searchStr, ordinal, false);",
    "right" : "return ordinalIndexOf(str, searchStr, ordinal, false);",
    "info" : "ReturnStatement[39380-39434]:ReturnStatement[39380-39434]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[40200-40207]:Modifier[40200-40207]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[40208-40214]:Modifier[40208-40214]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[40215-40218]:PrimitiveType[40215-40218]"
  }, {
    "left" : "ordinalIndexOf",
    "right" : "ordinalIndexOf",
    "info" : "SimpleName[40219-40233]:SimpleName[40219-40233]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[40234-40250]:SingleVariableDeclaration[40234-40250]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[40252-40274]:SingleVariableDeclaration[40252-40274]"
  }, {
    "left" : "int ordinal",
    "right" : "int ordinal",
    "info" : "SingleVariableDeclaration[40276-40287]:SingleVariableDeclaration[40276-40287]"
  }, {
    "left" : "boolean lastIndex",
    "right" : "boolean lastIndex",
    "info" : "SingleVariableDeclaration[40289-40306]:SingleVariableDeclaration[40289-40306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40308-40998]:Block[40308-40998]"
  }, {
    "left" : "if (str == null || searchStr == null || ordinal <= 0)",
    "right" : "if (str == null || searchStr == null || ordinal <= 0)",
    "info" : "IfStatement[40318-40419]:IfStatement[40318-40419]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40372-40419]:Block[40372-40419]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[40386-40409]:ReturnStatement[40386-40409]"
  }, {
    "left" : "if (searchStr.length() == 0)",
    "right" : "if (searchStr.length() == 0)",
    "info" : "IfStatement[40428-40517]:IfStatement[40428-40517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40457-40517]:Block[40457-40517]"
  }, {
    "left" : "return lastIndex ? str.length() : 0;",
    "right" : "return lastIndex ? str.length() : 0;",
    "info" : "ReturnStatement[40471-40507]:ReturnStatement[40471-40507]"
  }, {
    "left" : "int found = 0;",
    "right" : "int found = 0;",
    "info" : "VariableDeclarationStatement[40526-40540]:VariableDeclarationStatement[40526-40540]"
  }, {
    "left" : "int index = lastIndex ? str.length() : INDEX_NOT_FOUND;",
    "right" : "int index = lastIndex ? str.length() : INDEX_NOT_FOUND;",
    "info" : "VariableDeclarationStatement[40549-40604]:VariableDeclarationStatement[40549-40604]"
  }, {
    "left" : "do{...}",
    "right" : "do{...}",
    "info" : "DoStatement[40613-40970]:DoStatement[40613-40970]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40616-40945]:Block[40616-40945]"
  }, {
    "left" : "if (lastIndex)",
    "right" : "if (lastIndex)",
    "info" : "IfStatement[40630-40841]:IfStatement[40630-40841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40645-40742]:Block[40645-40742]"
  }, {
    "left" : "index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",
    "right" : "index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1);",
    "info" : "ExpressionStatement[40663-40728]:ExpressionStatement[40663-40728]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40748-40841]:Block[40748-40841]"
  }, {
    "left" : "index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",
    "right" : "index = CharSequenceUtils.indexOf(str, searchStr, index + 1);",
    "info" : "ExpressionStatement[40766-40827]:ExpressionStatement[40766-40827]"
  }, {
    "left" : "if (index < 0)",
    "right" : "if (index < 0)",
    "info" : "IfStatement[40854-40914]:IfStatement[40854-40914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40869-40914]:Block[40869-40914]"
  }, {
    "left" : "return index;",
    "right" : "return index;",
    "info" : "ReturnStatement[40887-40900]:ReturnStatement[40887-40900]"
  }, {
    "left" : "found++;",
    "right" : "found++;",
    "info" : "ExpressionStatement[40927-40935]:ExpressionStatement[40927-40935]"
  }, {
    "left" : "return index;",
    "right" : "return index;",
    "info" : "ReturnStatement[40979-40992]:ReturnStatement[40979-40992]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[42158-42164]:Modifier[42158-42164]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[42165-42171]:Modifier[42165-42171]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[42172-42175]:PrimitiveType[42172-42175]"
  }, {
    "left" : "indexOfIgnoreCase",
    "right" : "indexOfIgnoreCase",
    "info" : "SimpleName[42176-42193]:SimpleName[42176-42193]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[42194-42210]:SingleVariableDeclaration[42194-42210]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[42212-42234]:SingleVariableDeclaration[42212-42234]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42236-42296]:Block[42236-42296]"
  }, {
    "left" : "return indexOfIgnoreCase(str, searchStr, 0);",
    "right" : "return indexOfIgnoreCase(str, searchStr, 0);",
    "info" : "ReturnStatement[42246-42290]:ReturnStatement[42246-42290]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[43899-43905]:Modifier[43899-43905]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[43906-43912]:Modifier[43906-43912]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[43913-43916]:PrimitiveType[43913-43916]"
  }, {
    "left" : "indexOfIgnoreCase",
    "right" : "indexOfIgnoreCase",
    "info" : "SimpleName[43917-43934]:SimpleName[43917-43934]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[43935-43951]:SingleVariableDeclaration[43935-43951]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[43953-43975]:SingleVariableDeclaration[43953-43975]"
  }, {
    "left" : "int startPos",
    "right" : "int startPos",
    "info" : "SingleVariableDeclaration[43977-43989]:SingleVariableDeclaration[43977-43989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43991-44612]:Block[43991-44612]"
  }, {
    "left" : "if (str == null || searchStr == null)",
    "right" : "if (str == null || searchStr == null)",
    "info" : "IfStatement[44001-44086]:IfStatement[44001-44086]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44039-44086]:Block[44039-44086]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[44053-44076]:ReturnStatement[44053-44076]"
  }, {
    "left" : "if (startPos < 0)",
    "right" : "if (startPos < 0)",
    "info" : "IfStatement[44095-44150]:IfStatement[44095-44150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44113-44150]:Block[44113-44150]"
  }, {
    "left" : "startPos = 0;",
    "right" : "startPos = 0;",
    "info" : "ExpressionStatement[44127-44140]:ExpressionStatement[44127-44140]"
  }, {
    "left" : "int endLimit = (str.length() - searchStr.length()) + 1;",
    "right" : "int endLimit = (str.length() - searchStr.length()) + 1;",
    "info" : "VariableDeclarationStatement[44159-44214]:VariableDeclarationStatement[44159-44214]"
  }, {
    "left" : "if (startPos > endLimit)",
    "right" : "if (startPos > endLimit)",
    "info" : "IfStatement[44223-44295]:IfStatement[44223-44295]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44248-44295]:Block[44248-44295]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[44262-44285]:ReturnStatement[44262-44285]"
  }, {
    "left" : "if (searchStr.length() == 0)",
    "right" : "if (searchStr.length() == 0)",
    "info" : "IfStatement[44304-44373]:IfStatement[44304-44373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44333-44373]:Block[44333-44373]"
  }, {
    "left" : "return startPos;",
    "right" : "return startPos;",
    "info" : "ReturnStatement[44347-44363]:ReturnStatement[44347-44363]"
  }, {
    "left" : "for (int i = startPos; i < endLimit; i++)",
    "right" : "for (int i = startPos; i < endLimit; i++)",
    "info" : "ForStatement[44382-44574]:ForStatement[44382-44574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44424-44574]:Block[44424-44574]"
  }, {
    "left" : "if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()))",
    "right" : "if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()))",
    "info" : "IfStatement[44438-44564]:IfStatement[44438-44564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44523-44564]:Block[44523-44564]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[44541-44550]:ReturnStatement[44541-44550]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[44583-44606]:ReturnStatement[44583-44606]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45550-45556]:Modifier[45550-45556]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[45557-45563]:Modifier[45557-45563]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[45564-45567]:PrimitiveType[45564-45567]"
  }, {
    "left" : "lastIndexOf",
    "right" : "lastIndexOf",
    "info" : "SimpleName[45568-45579]:SimpleName[45568-45579]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[45580-45596]:SingleVariableDeclaration[45580-45596]"
  }, {
    "left" : "int searchChar",
    "right" : "int searchChar",
    "info" : "SingleVariableDeclaration[45598-45612]:SingleVariableDeclaration[45598-45612]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45614-45772]:Block[45614-45772]"
  }, {
    "left" : "if (isEmpty(seq))",
    "right" : "if (isEmpty(seq))",
    "info" : "IfStatement[45624-45689]:IfStatement[45624-45689]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45642-45689]:Block[45642-45689]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[45656-45679]:ReturnStatement[45656-45679]"
  }, {
    "left" : "return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",
    "right" : "return CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length());",
    "info" : "ReturnStatement[45698-45766]:ReturnStatement[45698-45766]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47077-47083]:Modifier[47077-47083]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[47084-47090]:Modifier[47084-47090]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[47091-47094]:PrimitiveType[47091-47094]"
  }, {
    "left" : "lastIndexOf",
    "right" : "lastIndexOf",
    "info" : "SimpleName[47095-47106]:SimpleName[47095-47106]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[47107-47123]:SingleVariableDeclaration[47107-47123]"
  }, {
    "left" : "int searchChar",
    "right" : "int searchChar",
    "info" : "SingleVariableDeclaration[47125-47139]:SingleVariableDeclaration[47125-47139]"
  }, {
    "left" : "int startPos",
    "right" : "int startPos",
    "info" : "SingleVariableDeclaration[47141-47153]:SingleVariableDeclaration[47141-47153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47155-47309]:Block[47155-47309]"
  }, {
    "left" : "if (isEmpty(seq))",
    "right" : "if (isEmpty(seq))",
    "info" : "IfStatement[47165-47230]:IfStatement[47165-47230]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47183-47230]:Block[47183-47230]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[47197-47220]:ReturnStatement[47197-47220]"
  }, {
    "left" : "return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);",
    "right" : "return CharSequenceUtils.lastIndexOf(seq, searchChar, startPos);",
    "info" : "ReturnStatement[47239-47303]:ReturnStatement[47239-47303]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48326-48332]:Modifier[48326-48332]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[48333-48339]:Modifier[48333-48339]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[48340-48343]:PrimitiveType[48340-48343]"
  }, {
    "left" : "lastIndexOf",
    "right" : "lastIndexOf",
    "info" : "SimpleName[48344-48355]:SimpleName[48344-48355]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[48356-48372]:SingleVariableDeclaration[48356-48372]"
  }, {
    "left" : "CharSequence searchSeq",
    "right" : "CharSequence searchSeq",
    "info" : "SingleVariableDeclaration[48374-48396]:SingleVariableDeclaration[48374-48396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48398-48575]:Block[48398-48575]"
  }, {
    "left" : "if (seq == null || searchSeq == null)",
    "right" : "if (seq == null || searchSeq == null)",
    "info" : "IfStatement[48408-48493]:IfStatement[48408-48493]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48446-48493]:Block[48446-48493]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[48460-48483]:ReturnStatement[48460-48483]"
  }, {
    "left" : "return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",
    "right" : "return CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length());",
    "info" : "ReturnStatement[48502-48569]:ReturnStatement[48502-48569]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[50209-50215]:Modifier[50209-50215]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[50216-50222]:Modifier[50216-50222]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[50223-50226]:PrimitiveType[50223-50226]"
  }, {
    "left" : "lastOrdinalIndexOf",
    "right" : "lastOrdinalIndexOf",
    "info" : "SimpleName[50227-50245]:SimpleName[50227-50245]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[50246-50262]:SingleVariableDeclaration[50246-50262]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[50264-50286]:SingleVariableDeclaration[50264-50286]"
  }, {
    "left" : "int ordinal",
    "right" : "int ordinal",
    "info" : "SingleVariableDeclaration[50288-50299]:SingleVariableDeclaration[50288-50299]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50301-50370]:Block[50301-50370]"
  }, {
    "left" : "return ordinalIndexOf(str, searchStr, ordinal, true);",
    "right" : "return ordinalIndexOf(str, searchStr, ordinal, true);",
    "info" : "ReturnStatement[50311-50364]:ReturnStatement[50311-50364]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[51844-51850]:Modifier[51844-51850]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[51851-51857]:Modifier[51851-51857]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[51858-51861]:PrimitiveType[51858-51861]"
  }, {
    "left" : "lastIndexOf",
    "right" : "lastIndexOf",
    "info" : "SimpleName[51862-51873]:SimpleName[51862-51873]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[51874-51890]:SingleVariableDeclaration[51874-51890]"
  }, {
    "left" : "CharSequence searchSeq",
    "right" : "CharSequence searchSeq",
    "info" : "SingleVariableDeclaration[51892-51914]:SingleVariableDeclaration[51892-51914]"
  }, {
    "left" : "int startPos",
    "right" : "int startPos",
    "info" : "SingleVariableDeclaration[51916-51928]:SingleVariableDeclaration[51916-51928]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51930-52103]:Block[51930-52103]"
  }, {
    "left" : "if (seq == null || searchSeq == null)",
    "right" : "if (seq == null || searchSeq == null)",
    "info" : "IfStatement[51940-52025]:IfStatement[51940-52025]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51978-52025]:Block[51978-52025]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[51992-52015]:ReturnStatement[51992-52015]"
  }, {
    "left" : "return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);",
    "right" : "return CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos);",
    "info" : "ReturnStatement[52034-52097]:ReturnStatement[52034-52097]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[53246-53252]:Modifier[53246-53252]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[53253-53259]:Modifier[53253-53259]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[53260-53263]:PrimitiveType[53260-53263]"
  }, {
    "left" : "lastIndexOfIgnoreCase",
    "right" : "lastIndexOfIgnoreCase",
    "info" : "SimpleName[53264-53285]:SimpleName[53264-53285]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[53286-53302]:SingleVariableDeclaration[53286-53302]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[53304-53326]:SingleVariableDeclaration[53304-53326]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53328-53497]:Block[53328-53497]"
  }, {
    "left" : "if (str == null || searchStr == null)",
    "right" : "if (str == null || searchStr == null)",
    "info" : "IfStatement[53338-53423]:IfStatement[53338-53423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53376-53423]:Block[53376-53423]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[53390-53413]:ReturnStatement[53390-53413]"
  }, {
    "left" : "return lastIndexOfIgnoreCase(str, searchStr, str.length());",
    "right" : "return lastIndexOfIgnoreCase(str, searchStr, str.length());",
    "info" : "ReturnStatement[53432-53491]:ReturnStatement[53432-53491]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55002-55008]:Modifier[55002-55008]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[55009-55015]:Modifier[55009-55015]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[55016-55019]:PrimitiveType[55016-55019]"
  }, {
    "left" : "lastIndexOfIgnoreCase",
    "right" : "lastIndexOfIgnoreCase",
    "info" : "SimpleName[55020-55041]:SimpleName[55020-55041]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[55042-55058]:SingleVariableDeclaration[55042-55058]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[55060-55082]:SingleVariableDeclaration[55060-55082]"
  }, {
    "left" : "int startPos",
    "right" : "int startPos",
    "info" : "SingleVariableDeclaration[55084-55096]:SingleVariableDeclaration[55084-55096]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55098-55709]:Block[55098-55709]"
  }, {
    "left" : "if (str == null || searchStr == null)",
    "right" : "if (str == null || searchStr == null)",
    "info" : "IfStatement[55108-55193]:IfStatement[55108-55193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55146-55193]:Block[55146-55193]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[55160-55183]:ReturnStatement[55160-55183]"
  }, {
    "left" : "if (startPos > (str.length() - searchStr.length()))",
    "right" : "if (startPos > (str.length() - searchStr.length()))",
    "info" : "IfStatement[55202-55323]:IfStatement[55202-55323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55254-55323]:Block[55254-55323]"
  }, {
    "left" : "startPos = str.length() - searchStr.length();",
    "right" : "startPos = str.length() - searchStr.length();",
    "info" : "ExpressionStatement[55268-55313]:ExpressionStatement[55268-55313]"
  }, {
    "left" : "if (startPos < 0)",
    "right" : "if (startPos < 0)",
    "info" : "IfStatement[55332-55397]:IfStatement[55332-55397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55350-55397]:Block[55350-55397]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[55364-55387]:ReturnStatement[55364-55387]"
  }, {
    "left" : "if (searchStr.length() == 0)",
    "right" : "if (searchStr.length() == 0)",
    "info" : "IfStatement[55406-55475]:IfStatement[55406-55475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55435-55475]:Block[55435-55475]"
  }, {
    "left" : "return startPos;",
    "right" : "return startPos;",
    "info" : "ReturnStatement[55449-55465]:ReturnStatement[55449-55465]"
  }, {
    "left" : "for (int i = startPos; i >= 0; i--)",
    "right" : "for (int i = startPos; i >= 0; i--)",
    "info" : "ForStatement[55485-55671]:ForStatement[55485-55671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55521-55671]:Block[55521-55671]"
  }, {
    "left" : "if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()))",
    "right" : "if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()))",
    "info" : "IfStatement[55535-55661]:IfStatement[55535-55661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55620-55661]:Block[55620-55661]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[55638-55647]:ReturnStatement[55638-55647]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[55680-55703]:ReturnStatement[55680-55703]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[56640-56646]:Modifier[56640-56646]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[56647-56653]:Modifier[56647-56653]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[56654-56661]:PrimitiveType[56654-56661]"
  }, {
    "left" : "contains",
    "right" : "contains",
    "info" : "SimpleName[56662-56670]:SimpleName[56662-56670]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[56671-56687]:SingleVariableDeclaration[56671-56687]"
  }, {
    "left" : "int searchChar",
    "right" : "int searchChar",
    "info" : "SingleVariableDeclaration[56689-56703]:SingleVariableDeclaration[56689-56703]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56705-56843]:Block[56705-56843]"
  }, {
    "left" : "if (isEmpty(seq))",
    "right" : "if (isEmpty(seq))",
    "info" : "IfStatement[56715-56770]:IfStatement[56715-56770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56733-56770]:Block[56733-56770]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[56747-56760]:ReturnStatement[56747-56760]"
  }, {
    "left" : "return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",
    "right" : "return CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0;",
    "info" : "ReturnStatement[56779-56837]:ReturnStatement[56779-56837]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[57802-57808]:Modifier[57802-57808]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[57809-57815]:Modifier[57809-57815]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[57816-57823]:PrimitiveType[57816-57823]"
  }, {
    "left" : "contains",
    "right" : "contains",
    "info" : "SimpleName[57824-57832]:SimpleName[57824-57832]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[57833-57849]:SingleVariableDeclaration[57833-57849]"
  }, {
    "left" : "CharSequence searchSeq",
    "right" : "CharSequence searchSeq",
    "info" : "SingleVariableDeclaration[57851-57873]:SingleVariableDeclaration[57851-57873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57875-58032]:Block[57875-58032]"
  }, {
    "left" : "if (seq == null || searchSeq == null)",
    "right" : "if (seq == null || searchSeq == null)",
    "info" : "IfStatement[57885-57960]:IfStatement[57885-57960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57923-57960]:Block[57923-57960]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[57937-57950]:ReturnStatement[57937-57950]"
  }, {
    "left" : "return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;",
    "right" : "return CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0;",
    "info" : "ReturnStatement[57969-58026]:ReturnStatement[57969-58026]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[59133-59139]:Modifier[59133-59139]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[59140-59146]:Modifier[59140-59146]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[59147-59154]:PrimitiveType[59147-59154]"
  }, {
    "left" : "containsIgnoreCase",
    "right" : "containsIgnoreCase",
    "info" : "SimpleName[59155-59173]:SimpleName[59155-59173]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[59174-59190]:SingleVariableDeclaration[59174-59190]"
  }, {
    "left" : "CharSequence searchStr",
    "right" : "CharSequence searchStr",
    "info" : "SingleVariableDeclaration[59192-59214]:SingleVariableDeclaration[59192-59214]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59216-59583]:Block[59216-59583]"
  }, {
    "left" : "if (str == null || searchStr == null)",
    "right" : "if (str == null || searchStr == null)",
    "info" : "IfStatement[59226-59301]:IfStatement[59226-59301]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59264-59301]:Block[59264-59301]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[59278-59291]:ReturnStatement[59278-59291]"
  }, {
    "left" : "int len = searchStr.length();",
    "right" : "int len = searchStr.length();",
    "info" : "VariableDeclarationStatement[59310-59339]:VariableDeclarationStatement[59310-59339]"
  }, {
    "left" : "int max = str.length() - len;",
    "right" : "int max = str.length() - len;",
    "info" : "VariableDeclarationStatement[59348-59377]:VariableDeclarationStatement[59348-59377]"
  }, {
    "left" : "for (int i = 0; i <= max; i++)",
    "right" : "for (int i = 0; i <= max; i++)",
    "info" : "ForStatement[59386-59555]:ForStatement[59386-59555]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59417-59555]:Block[59417-59555]"
  }, {
    "left" : "if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len))",
    "right" : "if (CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len))",
    "info" : "IfStatement[59431-59545]:IfStatement[59431-59545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59501-59545]:Block[59501-59545]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[59519-59531]:ReturnStatement[59519-59531]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[59564-59577]:ReturnStatement[59564-59577]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[60002-60008]:Modifier[60002-60008]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[60009-60015]:Modifier[60009-60015]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[60016-60023]:PrimitiveType[60016-60023]"
  }, {
    "left" : "containsWhitespace",
    "right" : "containsWhitespace",
    "info" : "SimpleName[60024-60042]:SimpleName[60024-60042]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[60043-60059]:SingleVariableDeclaration[60043-60059]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60061-60342]:Block[60061-60342]"
  }, {
    "left" : "if (isEmpty(seq))",
    "right" : "if (isEmpty(seq))",
    "info" : "IfStatement[60071-60126]:IfStatement[60071-60126]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60089-60126]:Block[60089-60126]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[60103-60116]:ReturnStatement[60103-60116]"
  }, {
    "left" : "int strLen = seq.length();",
    "right" : "int strLen = seq.length();",
    "info" : "VariableDeclarationStatement[60135-60161]:VariableDeclarationStatement[60135-60161]"
  }, {
    "left" : "for (int i = 0; i < strLen; i++)",
    "right" : "for (int i = 0; i < strLen; i++)",
    "info" : "ForStatement[60170-60314]:ForStatement[60170-60314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60203-60314]:Block[60203-60314]"
  }, {
    "left" : "if (Character.isWhitespace(seq.charAt(i)))",
    "right" : "if (Character.isWhitespace(seq.charAt(i)))",
    "info" : "IfStatement[60217-60304]:IfStatement[60217-60304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60260-60304]:Block[60260-60304]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[60278-60290]:ReturnStatement[60278-60290]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[60323-60336]:ReturnStatement[60323-60336]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61494-61500]:Modifier[61494-61500]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[61501-61507]:Modifier[61501-61507]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[61508-61511]:PrimitiveType[61508-61511]"
  }, {
    "left" : "indexOfAny",
    "right" : "indexOfAny",
    "info" : "SimpleName[61512-61522]:SimpleName[61512-61522]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[61523-61538]:SingleVariableDeclaration[61523-61538]"
  }, {
    "left" : "char... searchChars",
    "right" : "char... searchChars",
    "info" : "SingleVariableDeclaration[61540-61559]:SingleVariableDeclaration[61540-61559]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61561-62438]:Block[61561-62438]"
  }, {
    "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
    "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
    "info" : "IfStatement[61571-61670]:IfStatement[61571-61670]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61623-61670]:Block[61623-61670]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[61637-61660]:ReturnStatement[61637-61660]"
  }, {
    "left" : "int csLen = cs.length();",
    "right" : "int csLen = cs.length();",
    "info" : "VariableDeclarationStatement[61679-61703]:VariableDeclarationStatement[61679-61703]"
  }, {
    "left" : "int csLast = csLen - 1;",
    "right" : "int csLast = csLen - 1;",
    "info" : "VariableDeclarationStatement[61712-61735]:VariableDeclarationStatement[61712-61735]"
  }, {
    "left" : "int searchLen = searchChars.length;",
    "right" : "int searchLen = searchChars.length;",
    "info" : "VariableDeclarationStatement[61744-61779]:VariableDeclarationStatement[61744-61779]"
  }, {
    "left" : "int searchLast = searchLen - 1;",
    "right" : "int searchLast = searchLen - 1;",
    "info" : "VariableDeclarationStatement[61788-61819]:VariableDeclarationStatement[61788-61819]"
  }, {
    "left" : "for (int i = 0; i < csLen; i++)",
    "right" : "for (int i = 0; i < csLen; i++)",
    "info" : "ForStatement[61828-62400]:ForStatement[61828-62400]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61860-62400]:Block[61860-62400]"
  }, {
    "left" : "char ch = cs.charAt(i);",
    "right" : "char ch = cs.charAt(i);",
    "info" : "VariableDeclarationStatement[61874-61897]:VariableDeclarationStatement[61874-61897]"
  }, {
    "left" : "for (int j = 0; j < searchLen; j++)",
    "right" : "for (int j = 0; j < searchLen; j++)",
    "info" : "ForStatement[61910-62390]:ForStatement[61910-62390]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61946-62390]:Block[61946-62390]"
  }, {
    "left" : "if (searchChars[j] == ch)",
    "right" : "if (searchChars[j] == ch)",
    "info" : "IfStatement[61964-62376]:IfStatement[61964-62376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61990-62376]:Block[61990-62376]"
  }, {
    "left" : "if (i < csLast && j < searchLast && Character.isHighSurrogate(ch))",
    "right" : "if (i < csLast && j < searchLast && Character.isHighSurrogate(ch))",
    "info" : "IfStatement[62012-62358]:IfStatement[62012-62358]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62079-62295]:Block[62079-62295]"
  }, {
    "left" : "if (searchChars[j + 1] == cs.charAt(i + 1))",
    "right" : "if (searchChars[j + 1] == cs.charAt(i + 1))",
    "info" : "IfStatement[62164-62273]:IfStatement[62164-62273]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62208-62273]:Block[62208-62273]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[62238-62247]:ReturnStatement[62238-62247]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62301-62358]:Block[62301-62358]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[62327-62336]:ReturnStatement[62327-62336]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[62409-62432]:ReturnStatement[62409-62432]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[63445-63451]:Modifier[63445-63451]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[63452-63458]:Modifier[63452-63458]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[63459-63462]:PrimitiveType[63459-63462]"
  }, {
    "left" : "indexOfAny",
    "right" : "indexOfAny",
    "info" : "SimpleName[63463-63473]:SimpleName[63463-63473]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[63474-63489]:SingleVariableDeclaration[63474-63489]"
  }, {
    "left" : "String searchChars",
    "right" : "String searchChars",
    "info" : "SingleVariableDeclaration[63491-63509]:SingleVariableDeclaration[63491-63509]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63511-63673]:Block[63511-63673]"
  }, {
    "left" : "if (isEmpty(cs) || isEmpty(searchChars))",
    "right" : "if (isEmpty(cs) || isEmpty(searchChars))",
    "info" : "IfStatement[63521-63609]:IfStatement[63521-63609]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[63562-63609]:Block[63562-63609]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[63576-63599]:ReturnStatement[63576-63599]"
  }, {
    "left" : "return indexOfAny(cs, searchChars.toCharArray());",
    "right" : "return indexOfAny(cs, searchChars.toCharArray());",
    "info" : "ReturnStatement[63618-63667]:ReturnStatement[63618-63667]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[64884-64890]:Modifier[64884-64890]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[64891-64897]:Modifier[64891-64897]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[64898-64905]:PrimitiveType[64898-64905]"
  }, {
    "left" : "containsAny",
    "right" : "containsAny",
    "info" : "SimpleName[64906-64917]:SimpleName[64906-64917]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[64918-64933]:SingleVariableDeclaration[64918-64933]"
  }, {
    "left" : "char... searchChars",
    "right" : "char... searchChars",
    "info" : "SingleVariableDeclaration[64935-64954]:SingleVariableDeclaration[64935-64954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[64956-66027]:Block[64956-66027]"
  }, {
    "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
    "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
    "info" : "IfStatement[64966-65055]:IfStatement[64966-65055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65018-65055]:Block[65018-65055]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[65032-65045]:ReturnStatement[65032-65045]"
  }, {
    "left" : "int csLength = cs.length();",
    "right" : "int csLength = cs.length();",
    "info" : "VariableDeclarationStatement[65064-65091]:VariableDeclarationStatement[65064-65091]"
  }, {
    "left" : "int searchLength = searchChars.length;",
    "right" : "int searchLength = searchChars.length;",
    "info" : "VariableDeclarationStatement[65100-65138]:VariableDeclarationStatement[65100-65138]"
  }, {
    "left" : "int csLast = csLength - 1;",
    "right" : "int csLast = csLength - 1;",
    "info" : "VariableDeclarationStatement[65147-65173]:VariableDeclarationStatement[65147-65173]"
  }, {
    "left" : "int searchLast = searchLength - 1;",
    "right" : "int searchLast = searchLength - 1;",
    "info" : "VariableDeclarationStatement[65182-65216]:VariableDeclarationStatement[65182-65216]"
  }, {
    "left" : "for (int i = 0; i < csLength; i++)",
    "right" : "for (int i = 0; i < csLength; i++)",
    "info" : "ForStatement[65225-65999]:ForStatement[65225-65999]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65260-65999]:Block[65260-65999]"
  }, {
    "left" : "char ch = cs.charAt(i);",
    "right" : "char ch = cs.charAt(i);",
    "info" : "VariableDeclarationStatement[65274-65297]:VariableDeclarationStatement[65274-65297]"
  }, {
    "left" : "for (int j = 0; j < searchLength; j++)",
    "right" : "for (int j = 0; j < searchLength; j++)",
    "info" : "ForStatement[65310-65989]:ForStatement[65310-65989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65349-65989]:Block[65349-65989]"
  }, {
    "left" : "if (searchChars[j] == ch)",
    "right" : "if (searchChars[j] == ch)",
    "info" : "IfStatement[65367-65975]:IfStatement[65367-65975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65393-65975]:Block[65393-65975]"
  }, {
    "left" : "if (Character.isHighSurrogate(ch))",
    "right" : "if (Character.isHighSurrogate(ch))",
    "info" : "IfStatement[65415-65957]:IfStatement[65415-65957]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65450-65826]:Block[65450-65826]"
  }, {
    "left" : "if (j == searchLast)",
    "right" : "if (j == searchLast)",
    "info" : "IfStatement[65476-65653]:IfStatement[65476-65653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65497-65653]:Block[65497-65653]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[65615-65627]:ReturnStatement[65615-65627]"
  }, {
    "left" : "if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1))",
    "right" : "if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1))",
    "info" : "IfStatement[65678-65804]:IfStatement[65678-65804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65736-65804]:Block[65736-65804]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[65766-65778]:ReturnStatement[65766-65778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[65832-65957]:Block[65832-65957]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[65923-65935]:ReturnStatement[65923-65935]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[66008-66021]:ReturnStatement[66008-66021]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[67162-67168]:Modifier[67162-67168]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[67169-67175]:Modifier[67169-67175]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[67176-67183]:PrimitiveType[67176-67183]"
  }, {
    "left" : "containsAny",
    "right" : "containsAny",
    "info" : "SimpleName[67184-67195]:SimpleName[67184-67195]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[67196-67211]:SingleVariableDeclaration[67196-67211]"
  }, {
    "left" : "CharSequence searchChars",
    "right" : "CharSequence searchChars",
    "info" : "SingleVariableDeclaration[67213-67237]:SingleVariableDeclaration[67213-67237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67239-67393]:Block[67239-67393]"
  }, {
    "left" : "if (searchChars == null)",
    "right" : "if (searchChars == null)",
    "info" : "IfStatement[67249-67311]:IfStatement[67249-67311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[67274-67311]:Block[67274-67311]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[67288-67301]:ReturnStatement[67288-67301]"
  }, {
    "left" : "return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));",
    "right" : "return containsAny(cs, CharSequenceUtils.toCharArray(searchChars));",
    "info" : "ReturnStatement[67320-67387]:ReturnStatement[67320-67387]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[68686-68692]:Modifier[68686-68692]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[68693-68699]:Modifier[68693-68699]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[68700-68703]:PrimitiveType[68700-68703]"
  }, {
    "left" : "indexOfAnyBut",
    "right" : "indexOfAnyBut",
    "info" : "SimpleName[68704-68717]:SimpleName[68704-68717]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[68718-68733]:SingleVariableDeclaration[68718-68733]"
  }, {
    "left" : "char... searchChars",
    "right" : "char... searchChars",
    "info" : "SingleVariableDeclaration[68735-68754]:SingleVariableDeclaration[68735-68754]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68756-69623]:Block[68756-69623]"
  }, {
    "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
    "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
    "info" : "IfStatement[68766-68865]:IfStatement[68766-68865]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[68818-68865]:Block[68818-68865]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[68832-68855]:ReturnStatement[68832-68855]"
  }, {
    "left" : "int csLen = cs.length();",
    "right" : "int csLen = cs.length();",
    "info" : "VariableDeclarationStatement[68874-68898]:VariableDeclarationStatement[68874-68898]"
  }, {
    "left" : "int csLast = csLen - 1;",
    "right" : "int csLast = csLen - 1;",
    "info" : "VariableDeclarationStatement[68907-68930]:VariableDeclarationStatement[68907-68930]"
  }, {
    "left" : "int searchLen = searchChars.length;",
    "right" : "int searchLen = searchChars.length;",
    "info" : "VariableDeclarationStatement[68939-68974]:VariableDeclarationStatement[68939-68974]"
  }, {
    "left" : "int searchLast = searchLen - 1;",
    "right" : "int searchLast = searchLen - 1;",
    "info" : "VariableDeclarationStatement[68983-69014]:VariableDeclarationStatement[68983-69014]"
  }, {
    "left" : "outer:\n        for (int i = 0; i < csLen; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {\n                        if (searchChars[j + 1] == cs.charAt(i + 1)) {\n                            continue outer;\n                        }\n                    } else {\n                        continue outer;\n                    }\n                }\n            }\n            return i;\n        }",
    "right" : "outer:\n        for (int i = 0; i < csLen; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {\n                        if (searchChars[j + 1] == cs.charAt(i + 1)) {\n                            continue outer;\n                        }\n                    } else {\n                        continue outer;\n                    }\n                }\n            }\n            return i;\n        }",
    "info" : "LabeledStatement[69023-69585]:LabeledStatement[69023-69585]"
  }, {
    "left" : "for (int i = 0; i < csLen; i++)",
    "right" : "for (int i = 0; i < csLen; i++)",
    "info" : "ForStatement[69038-69585]:ForStatement[69038-69585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69070-69585]:Block[69070-69585]"
  }, {
    "left" : "char ch = cs.charAt(i);",
    "right" : "char ch = cs.charAt(i);",
    "info" : "VariableDeclarationStatement[69084-69107]:VariableDeclarationStatement[69084-69107]"
  }, {
    "left" : "for (int j = 0; j < searchLen; j++)",
    "right" : "for (int j = 0; j < searchLen; j++)",
    "info" : "ForStatement[69120-69553]:ForStatement[69120-69553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69156-69553]:Block[69156-69553]"
  }, {
    "left" : "if (searchChars[j] == ch)",
    "right" : "if (searchChars[j] == ch)",
    "info" : "IfStatement[69174-69539]:IfStatement[69174-69539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69200-69539]:Block[69200-69539]"
  }, {
    "left" : "if (i < csLast && j < searchLast && Character.isHighSurrogate(ch))",
    "right" : "if (i < csLast && j < searchLast && Character.isHighSurrogate(ch))",
    "info" : "IfStatement[69222-69521]:IfStatement[69222-69521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69289-69452]:Block[69289-69452]"
  }, {
    "left" : "if (searchChars[j + 1] == cs.charAt(i + 1))",
    "right" : "if (searchChars[j + 1] == cs.charAt(i + 1))",
    "info" : "IfStatement[69315-69430]:IfStatement[69315-69430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69359-69430]:Block[69359-69430]"
  }, {
    "left" : "continue outer;",
    "right" : "continue outer;",
    "info" : "ContinueStatement[69389-69404]:ContinueStatement[69389-69404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[69458-69521]:Block[69458-69521]"
  }, {
    "left" : "continue outer;",
    "right" : "continue outer;",
    "info" : "ContinueStatement[69484-69499]:ContinueStatement[69484-69499]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[69566-69575]:ReturnStatement[69566-69575]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[69594-69617]:ReturnStatement[69594-69617]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[70684-70690]:Modifier[70684-70690]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[70691-70697]:Modifier[70691-70697]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[70698-70701]:PrimitiveType[70698-70701]"
  }, {
    "left" : "indexOfAnyBut",
    "right" : "indexOfAnyBut",
    "info" : "SimpleName[70702-70715]:SimpleName[70702-70715]"
  }, {
    "left" : "CharSequence seq",
    "right" : "CharSequence seq",
    "info" : "SingleVariableDeclaration[70716-70732]:SingleVariableDeclaration[70716-70732]"
  }, {
    "left" : "CharSequence searchChars",
    "right" : "CharSequence searchChars",
    "info" : "SingleVariableDeclaration[70734-70758]:SingleVariableDeclaration[70734-70758]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70760-71465]:Block[70760-71465]"
  }, {
    "left" : "if (isEmpty(seq) || isEmpty(searchChars))",
    "right" : "if (isEmpty(seq) || isEmpty(searchChars))",
    "info" : "IfStatement[70770-70859]:IfStatement[70770-70859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70812-70859]:Block[70812-70859]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[70826-70849]:ReturnStatement[70826-70849]"
  }, {
    "left" : "int strLen = seq.length();",
    "right" : "int strLen = seq.length();",
    "info" : "VariableDeclarationStatement[70868-70894]:VariableDeclarationStatement[70868-70894]"
  }, {
    "left" : "for (int i = 0; i < strLen; i++)",
    "right" : "for (int i = 0; i < strLen; i++)",
    "info" : "ForStatement[70903-71427]:ForStatement[70903-71427]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[70936-71427]:Block[70936-71427]"
  }, {
    "left" : "char ch = seq.charAt(i);",
    "right" : "char ch = seq.charAt(i);",
    "info" : "VariableDeclarationStatement[70950-70974]:VariableDeclarationStatement[70950-70974]"
  }, {
    "left" : "boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;",
    "right" : "boolean chFound = CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0;",
    "info" : "VariableDeclarationStatement[70987-71056]:VariableDeclarationStatement[70987-71056]"
  }, {
    "left" : "if (i + 1 < strLen && Character.isHighSurrogate(ch))",
    "right" : "if (i + 1 < strLen && Character.isHighSurrogate(ch))",
    "info" : "IfStatement[71069-71417]:IfStatement[71069-71417]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71122-71316]:Block[71122-71316]"
  }, {
    "left" : "char ch2 = seq.charAt(i + 1);",
    "right" : "char ch2 = seq.charAt(i + 1);",
    "info" : "VariableDeclarationStatement[71140-71169]:VariableDeclarationStatement[71140-71169]"
  }, {
    "left" : "if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0)",
    "right" : "if (chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0)",
    "info" : "IfStatement[71186-71302]:IfStatement[71186-71302]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71253-71302]:Block[71253-71302]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[71275-71284]:ReturnStatement[71275-71284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71322-71417]:Block[71322-71417]"
  }, {
    "left" : "if (!chFound)",
    "right" : "if (!chFound)",
    "info" : "IfStatement[71340-71403]:IfStatement[71340-71403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[71354-71403]:Block[71354-71403]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[71376-71385]:ReturnStatement[71376-71385]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[71436-71459]:ReturnStatement[71436-71459]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[72588-72594]:Modifier[72588-72594]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[72595-72601]:Modifier[72595-72601]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[72602-72609]:PrimitiveType[72602-72609]"
  }, {
    "left" : "containsOnly",
    "right" : "containsOnly",
    "info" : "SimpleName[72610-72622]:SimpleName[72610-72622]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[72623-72638]:SingleVariableDeclaration[72623-72638]"
  }, {
    "left" : "char... valid",
    "right" : "char... valid",
    "info" : "SingleVariableDeclaration[72640-72653]:SingleVariableDeclaration[72640-72653]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72655-73011]:Block[72655-73011]"
  }, {
    "left" : "if (valid == null || cs == null)",
    "right" : "if (valid == null || cs == null)",
    "info" : "IfStatement[72739-72809]:IfStatement[72739-72809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72772-72809]:Block[72772-72809]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[72786-72799]:ReturnStatement[72786-72799]"
  }, {
    "left" : "if (cs.length() == 0)",
    "right" : "if (cs.length() == 0)",
    "info" : "IfStatement[72818-72876]:IfStatement[72818-72876]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72840-72876]:Block[72840-72876]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[72854-72866]:ReturnStatement[72854-72866]"
  }, {
    "left" : "if (valid.length == 0)",
    "right" : "if (valid.length == 0)",
    "info" : "IfStatement[72885-72945]:IfStatement[72885-72945]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[72908-72945]:Block[72908-72945]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[72922-72935]:ReturnStatement[72922-72935]"
  }, {
    "left" : "return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",
    "right" : "return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[72954-73005]:ReturnStatement[72954-73005]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[74059-74065]:Modifier[74059-74065]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[74066-74072]:Modifier[74066-74072]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[74073-74080]:PrimitiveType[74073-74080]"
  }, {
    "left" : "containsOnly",
    "right" : "containsOnly",
    "info" : "SimpleName[74081-74093]:SimpleName[74081-74093]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[74094-74109]:SingleVariableDeclaration[74094-74109]"
  }, {
    "left" : "String validChars",
    "right" : "String validChars",
    "info" : "SingleVariableDeclaration[74111-74128]:SingleVariableDeclaration[74111-74128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74130-74280]:Block[74130-74280]"
  }, {
    "left" : "if (cs == null || validChars == null)",
    "right" : "if (cs == null || validChars == null)",
    "info" : "IfStatement[74140-74215]:IfStatement[74140-74215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[74178-74215]:Block[74178-74215]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[74192-74205]:ReturnStatement[74192-74205]"
  }, {
    "left" : "return containsOnly(cs, validChars.toCharArray());",
    "right" : "return containsOnly(cs, validChars.toCharArray());",
    "info" : "ReturnStatement[74224-74274]:ReturnStatement[74224-74274]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[75433-75439]:Modifier[75433-75439]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[75440-75446]:Modifier[75440-75446]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[75447-75454]:PrimitiveType[75447-75454]"
  }, {
    "left" : "containsNone",
    "right" : "containsNone",
    "info" : "SimpleName[75455-75467]:SimpleName[75455-75467]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[75468-75483]:SingleVariableDeclaration[75468-75483]"
  }, {
    "left" : "char... searchChars",
    "right" : "char... searchChars",
    "info" : "SingleVariableDeclaration[75485-75504]:SingleVariableDeclaration[75485-75504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75506-76547]:Block[75506-76547]"
  }, {
    "left" : "if (cs == null || searchChars == null)",
    "right" : "if (cs == null || searchChars == null)",
    "info" : "IfStatement[75516-75591]:IfStatement[75516-75591]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75555-75591]:Block[75555-75591]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[75569-75581]:ReturnStatement[75569-75581]"
  }, {
    "left" : "int csLen = cs.length();",
    "right" : "int csLen = cs.length();",
    "info" : "VariableDeclarationStatement[75600-75624]:VariableDeclarationStatement[75600-75624]"
  }, {
    "left" : "int csLast = csLen - 1;",
    "right" : "int csLast = csLen - 1;",
    "info" : "VariableDeclarationStatement[75633-75656]:VariableDeclarationStatement[75633-75656]"
  }, {
    "left" : "int searchLen = searchChars.length;",
    "right" : "int searchLen = searchChars.length;",
    "info" : "VariableDeclarationStatement[75665-75700]:VariableDeclarationStatement[75665-75700]"
  }, {
    "left" : "int searchLast = searchLen - 1;",
    "right" : "int searchLast = searchLen - 1;",
    "info" : "VariableDeclarationStatement[75709-75740]:VariableDeclarationStatement[75709-75740]"
  }, {
    "left" : "for (int i = 0; i < csLen; i++)",
    "right" : "for (int i = 0; i < csLen; i++)",
    "info" : "ForStatement[75749-76520]:ForStatement[75749-76520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75781-76520]:Block[75781-76520]"
  }, {
    "left" : "char ch = cs.charAt(i);",
    "right" : "char ch = cs.charAt(i);",
    "info" : "VariableDeclarationStatement[75795-75818]:VariableDeclarationStatement[75795-75818]"
  }, {
    "left" : "for (int j = 0; j < searchLen; j++)",
    "right" : "for (int j = 0; j < searchLen; j++)",
    "info" : "ForStatement[75831-76510]:ForStatement[75831-76510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75867-76510]:Block[75867-76510]"
  }, {
    "left" : "if (searchChars[j] == ch)",
    "right" : "if (searchChars[j] == ch)",
    "info" : "IfStatement[75885-76496]:IfStatement[75885-76496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75911-76496]:Block[75911-76496]"
  }, {
    "left" : "if (Character.isHighSurrogate(ch))",
    "right" : "if (Character.isHighSurrogate(ch))",
    "info" : "IfStatement[75933-76478]:IfStatement[75933-76478]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[75968-76346]:Block[75968-76346]"
  }, {
    "left" : "if (j == searchLast)",
    "right" : "if (j == searchLast)",
    "info" : "IfStatement[75994-76172]:IfStatement[75994-76172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76015-76172]:Block[76015-76172]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[76133-76146]:ReturnStatement[76133-76146]"
  }, {
    "left" : "if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1))",
    "right" : "if (i < csLast && searchChars[j + 1] == cs.charAt(i + 1))",
    "info" : "IfStatement[76197-76324]:IfStatement[76197-76324]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76255-76324]:Block[76255-76324]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[76285-76298]:ReturnStatement[76285-76298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[76352-76478]:Block[76352-76478]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[76443-76456]:ReturnStatement[76443-76456]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[76529-76541]:ReturnStatement[76529-76541]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[77588-77594]:Modifier[77588-77594]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[77595-77601]:Modifier[77595-77601]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[77602-77609]:PrimitiveType[77602-77609]"
  }, {
    "left" : "containsNone",
    "right" : "containsNone",
    "info" : "SimpleName[77610-77622]:SimpleName[77610-77622]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[77623-77638]:SingleVariableDeclaration[77623-77638]"
  }, {
    "left" : "String invalidChars",
    "right" : "String invalidChars",
    "info" : "SingleVariableDeclaration[77640-77659]:SingleVariableDeclaration[77640-77659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77661-77814]:Block[77661-77814]"
  }, {
    "left" : "if (cs == null || invalidChars == null)",
    "right" : "if (cs == null || invalidChars == null)",
    "info" : "IfStatement[77671-77747]:IfStatement[77671-77747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[77711-77747]:Block[77711-77747]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[77725-77737]:ReturnStatement[77725-77737]"
  }, {
    "left" : "return containsNone(cs, invalidChars.toCharArray());",
    "right" : "return containsNone(cs, invalidChars.toCharArray());",
    "info" : "ReturnStatement[77756-77808]:ReturnStatement[77756-77808]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[79378-79384]:Modifier[79378-79384]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[79385-79391]:Modifier[79385-79391]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[79392-79395]:PrimitiveType[79392-79395]"
  }, {
    "left" : "indexOfAny",
    "right" : "indexOfAny",
    "info" : "SimpleName[79396-79406]:SimpleName[79396-79406]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[79407-79423]:SingleVariableDeclaration[79407-79423]"
  }, {
    "left" : "CharSequence... searchStrs",
    "right" : "CharSequence... searchStrs",
    "info" : "SingleVariableDeclaration[79425-79451]:SingleVariableDeclaration[79425-79451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79453-80157]:Block[79453-80157]"
  }, {
    "left" : "if (str == null || searchStrs == null)",
    "right" : "if (str == null || searchStrs == null)",
    "info" : "IfStatement[79463-79549]:IfStatement[79463-79549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79502-79549]:Block[79502-79549]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[79516-79539]:ReturnStatement[79516-79539]"
  }, {
    "left" : "int sz = searchStrs.length;",
    "right" : "int sz = searchStrs.length;",
    "info" : "VariableDeclarationStatement[79558-79585]:VariableDeclarationStatement[79558-79585]"
  }, {
    "left" : "int ret = Integer.MAX_VALUE;",
    "right" : "int ret = Integer.MAX_VALUE;",
    "info" : "VariableDeclarationStatement[79647-79675]:VariableDeclarationStatement[79647-79675]"
  }, {
    "left" : "int tmp = 0;",
    "right" : "int tmp = 0;",
    "info" : "VariableDeclarationStatement[79685-79697]:VariableDeclarationStatement[79685-79697]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[79706-80083]:ForStatement[79706-80083]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79735-80083]:Block[79735-80083]"
  }, {
    "left" : "CharSequence search = searchStrs[i];",
    "right" : "CharSequence search = searchStrs[i];",
    "info" : "VariableDeclarationStatement[79749-79785]:VariableDeclarationStatement[79749-79785]"
  }, {
    "left" : "if (search == null)",
    "right" : "if (search == null)",
    "info" : "IfStatement[79798-79859]:IfStatement[79798-79859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79818-79859]:Block[79818-79859]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[79836-79845]:ContinueStatement[79836-79845]"
  }, {
    "left" : "tmp = CharSequenceUtils.indexOf(str, search, 0);",
    "right" : "tmp = CharSequenceUtils.indexOf(str, search, 0);",
    "info" : "ExpressionStatement[79872-79920]:ExpressionStatement[79872-79920]"
  }, {
    "left" : "if (tmp == INDEX_NOT_FOUND)",
    "right" : "if (tmp == INDEX_NOT_FOUND)",
    "info" : "IfStatement[79933-80002]:IfStatement[79933-80002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[79961-80002]:Block[79961-80002]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[79979-79988]:ContinueStatement[79979-79988]"
  }, {
    "left" : "if (tmp < ret)",
    "right" : "if (tmp < ret)",
    "info" : "IfStatement[80016-80073]:IfStatement[80016-80073]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[80031-80073]:Block[80031-80073]"
  }, {
    "left" : "ret = tmp;",
    "right" : "ret = tmp;",
    "info" : "ExpressionStatement[80049-80059]:ExpressionStatement[80049-80059]"
  }, {
    "left" : "return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;",
    "right" : "return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;",
    "info" : "ReturnStatement[80093-80151]:ReturnStatement[80093-80151]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[81590-81596]:Modifier[81590-81596]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[81597-81603]:Modifier[81597-81603]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[81604-81607]:PrimitiveType[81604-81607]"
  }, {
    "left" : "lastIndexOfAny",
    "right" : "lastIndexOfAny",
    "info" : "SimpleName[81608-81622]:SimpleName[81608-81622]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[81623-81639]:SingleVariableDeclaration[81623-81639]"
  }, {
    "left" : "CharSequence... searchStrs",
    "right" : "CharSequence... searchStrs",
    "info" : "SingleVariableDeclaration[81641-81667]:SingleVariableDeclaration[81641-81667]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81669-82201]:Block[81669-82201]"
  }, {
    "left" : "if (str == null || searchStrs == null)",
    "right" : "if (str == null || searchStrs == null)",
    "info" : "IfStatement[81679-81765]:IfStatement[81679-81765]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81718-81765]:Block[81718-81765]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[81732-81755]:ReturnStatement[81732-81755]"
  }, {
    "left" : "int sz = searchStrs.length;",
    "right" : "int sz = searchStrs.length;",
    "info" : "VariableDeclarationStatement[81774-81801]:VariableDeclarationStatement[81774-81801]"
  }, {
    "left" : "int ret = INDEX_NOT_FOUND;",
    "right" : "int ret = INDEX_NOT_FOUND;",
    "info" : "VariableDeclarationStatement[81810-81836]:VariableDeclarationStatement[81810-81836]"
  }, {
    "left" : "int tmp = 0;",
    "right" : "int tmp = 0;",
    "info" : "VariableDeclarationStatement[81845-81857]:VariableDeclarationStatement[81845-81857]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[81866-82175]:ForStatement[81866-82175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81895-82175]:Block[81895-82175]"
  }, {
    "left" : "CharSequence search = searchStrs[i];",
    "right" : "CharSequence search = searchStrs[i];",
    "info" : "VariableDeclarationStatement[81909-81945]:VariableDeclarationStatement[81909-81945]"
  }, {
    "left" : "if (search == null)",
    "right" : "if (search == null)",
    "info" : "IfStatement[81958-82019]:IfStatement[81958-82019]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[81978-82019]:Block[81978-82019]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[81996-82005]:ContinueStatement[81996-82005]"
  }, {
    "left" : "tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",
    "right" : "tmp = CharSequenceUtils.lastIndexOf(str, search, str.length());",
    "info" : "ExpressionStatement[82032-82095]:ExpressionStatement[82032-82095]"
  }, {
    "left" : "if (tmp > ret)",
    "right" : "if (tmp > ret)",
    "info" : "IfStatement[82108-82165]:IfStatement[82108-82165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[82123-82165]:Block[82123-82165]"
  }, {
    "left" : "ret = tmp;",
    "right" : "ret = tmp;",
    "info" : "ExpressionStatement[82141-82151]:ExpressionStatement[82141-82151]"
  }, {
    "left" : "return ret;",
    "right" : "return ret;",
    "info" : "ReturnStatement[82184-82195]:ReturnStatement[82184-82195]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[83283-83289]:Modifier[83283-83289]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[83290-83296]:Modifier[83290-83296]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[83297-83303]:SimpleType[83297-83303]"
  }, {
    "left" : "substring",
    "right" : "substring",
    "info" : "SimpleName[83304-83313]:SimpleName[83304-83313]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[83314-83324]:SingleVariableDeclaration[83314-83324]"
  }, {
    "left" : "int start",
    "right" : "int start",
    "info" : "SingleVariableDeclaration[83326-83335]:SingleVariableDeclaration[83326-83335]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83337-83742]:Block[83337-83742]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[83347-83400]:IfStatement[83347-83400]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83364-83400]:Block[83364-83400]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[83378-83390]:ReturnStatement[83378-83390]"
  }, {
    "left" : "if (start < 0)",
    "right" : "if (start < 0)",
    "info" : "IfStatement[83469-83567]:IfStatement[83469-83567]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83484-83567]:Block[83484-83567]"
  }, {
    "left" : "start = str.length() + start;",
    "right" : "start = str.length() + start;",
    "info" : "ExpressionStatement[83498-83527]:ExpressionStatement[83498-83527]"
  }, {
    "left" : "if (start < 0)",
    "right" : "if (start < 0)",
    "info" : "IfStatement[83577-83626]:IfStatement[83577-83626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83592-83626]:Block[83592-83626]"
  }, {
    "left" : "start = 0;",
    "right" : "start = 0;",
    "info" : "ExpressionStatement[83606-83616]:ExpressionStatement[83606-83616]"
  }, {
    "left" : "if (start > str.length())",
    "right" : "if (start > str.length())",
    "info" : "IfStatement[83635-83698]:IfStatement[83635-83698]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[83661-83698]:Block[83661-83698]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[83675-83688]:ReturnStatement[83675-83688]"
  }, {
    "left" : "return str.substring(start);",
    "right" : "return str.substring(start);",
    "info" : "ReturnStatement[83708-83736]:ReturnStatement[83708-83736]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[85389-85395]:Modifier[85389-85395]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[85396-85402]:Modifier[85396-85402]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[85403-85409]:SimpleType[85403-85409]"
  }, {
    "left" : "substring",
    "right" : "substring",
    "info" : "SimpleName[85410-85419]:SimpleName[85410-85419]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[85420-85430]:SingleVariableDeclaration[85420-85430]"
  }, {
    "left" : "int start",
    "right" : "int start",
    "info" : "SingleVariableDeclaration[85432-85441]:SingleVariableDeclaration[85432-85441]"
  }, {
    "left" : "int end",
    "right" : "int end",
    "info" : "SingleVariableDeclaration[85443-85450]:SingleVariableDeclaration[85443-85450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85452-86133]:Block[85452-86133]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[85462-85515]:IfStatement[85462-85515]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85479-85515]:Block[85479-85515]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[85493-85505]:ReturnStatement[85493-85505]"
  }, {
    "left" : "if (end < 0)",
    "right" : "if (end < 0)",
    "info" : "IfStatement[85553-85643]:IfStatement[85553-85643]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85566-85643]:Block[85566-85643]"
  }, {
    "left" : "end = str.length() + end;",
    "right" : "end = str.length() + end;",
    "info" : "ExpressionStatement[85580-85605]:ExpressionStatement[85580-85605]"
  }, {
    "left" : "if (start < 0)",
    "right" : "if (start < 0)",
    "info" : "IfStatement[85652-85750]:IfStatement[85652-85750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85667-85750]:Block[85667-85750]"
  }, {
    "left" : "start = str.length() + start;",
    "right" : "start = str.length() + start;",
    "info" : "ExpressionStatement[85681-85710]:ExpressionStatement[85681-85710]"
  }, {
    "left" : "if (end > str.length())",
    "right" : "if (end > str.length())",
    "info" : "IfStatement[85789-85856]:IfStatement[85789-85856]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85813-85856]:Block[85813-85856]"
  }, {
    "left" : "end = str.length();",
    "right" : "end = str.length();",
    "info" : "ExpressionStatement[85827-85846]:ExpressionStatement[85827-85846]"
  }, {
    "left" : "if (start > end)",
    "right" : "if (start > end)",
    "info" : "IfStatement[85917-85971]:IfStatement[85917-85971]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85934-85971]:Block[85934-85971]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[85948-85961]:ReturnStatement[85948-85961]"
  }, {
    "left" : "if (start < 0)",
    "right" : "if (start < 0)",
    "info" : "IfStatement[85981-86030]:IfStatement[85981-86030]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[85996-86030]:Block[85996-86030]"
  }, {
    "left" : "start = 0;",
    "right" : "start = 0;",
    "info" : "ExpressionStatement[86010-86020]:ExpressionStatement[86010-86020]"
  }, {
    "left" : "if (end < 0)",
    "right" : "if (end < 0)",
    "info" : "IfStatement[86039-86084]:IfStatement[86039-86084]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[86052-86084]:Block[86052-86084]"
  }, {
    "left" : "end = 0;",
    "right" : "end = 0;",
    "info" : "ExpressionStatement[86066-86074]:ExpressionStatement[86066-86074]"
  }, {
    "left" : "return str.substring(start, end);",
    "right" : "return str.substring(start, end);",
    "info" : "ReturnStatement[86094-86127]:ReturnStatement[86094-86127]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[87032-87038]:Modifier[87032-87038]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[87039-87045]:Modifier[87039-87045]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[87046-87052]:SimpleType[87046-87052]"
  }, {
    "left" : "left",
    "right" : "left",
    "info" : "SimpleName[87053-87057]:SimpleName[87053-87057]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[87058-87068]:SingleVariableDeclaration[87058-87068]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[87070-87077]:SingleVariableDeclaration[87070-87077]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[87079-87314]:Block[87079-87314]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[87089-87142]:IfStatement[87089-87142]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[87106-87142]:Block[87106-87142]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[87120-87132]:ReturnStatement[87120-87132]"
  }, {
    "left" : "if (len < 0)",
    "right" : "if (len < 0)",
    "info" : "IfStatement[87151-87201]:IfStatement[87151-87201]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[87164-87201]:Block[87164-87201]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[87178-87191]:ReturnStatement[87178-87191]"
  }, {
    "left" : "if (str.length() <= len)",
    "right" : "if (str.length() <= len)",
    "info" : "IfStatement[87210-87270]:IfStatement[87210-87270]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[87235-87270]:Block[87235-87270]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[87249-87260]:ReturnStatement[87249-87260]"
  }, {
    "left" : "return str.substring(0, len);",
    "right" : "return str.substring(0, len);",
    "info" : "ReturnStatement[87279-87308]:ReturnStatement[87279-87308]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[88125-88131]:Modifier[88125-88131]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[88132-88138]:Modifier[88132-88138]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[88139-88145]:SimpleType[88139-88145]"
  }, {
    "left" : "right",
    "right" : "right",
    "info" : "SimpleName[88146-88151]:SimpleName[88146-88151]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[88152-88162]:SingleVariableDeclaration[88152-88162]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[88164-88171]:SingleVariableDeclaration[88164-88171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88173-88420]:Block[88173-88420]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[88183-88236]:IfStatement[88183-88236]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88200-88236]:Block[88200-88236]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[88214-88226]:ReturnStatement[88214-88226]"
  }, {
    "left" : "if (len < 0)",
    "right" : "if (len < 0)",
    "info" : "IfStatement[88245-88295]:IfStatement[88245-88295]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88258-88295]:Block[88258-88295]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[88272-88285]:ReturnStatement[88272-88285]"
  }, {
    "left" : "if (str.length() <= len)",
    "right" : "if (str.length() <= len)",
    "info" : "IfStatement[88304-88364]:IfStatement[88304-88364]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[88329-88364]:Block[88329-88364]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[88343-88354]:ReturnStatement[88343-88354]"
  }, {
    "left" : "return str.substring(str.length() - len);",
    "right" : "return str.substring(str.length() - len);",
    "info" : "ReturnStatement[88373-88414]:ReturnStatement[88373-88414]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[89483-89489]:Modifier[89483-89489]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[89490-89496]:Modifier[89490-89496]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[89497-89503]:SimpleType[89497-89503]"
  }, {
    "left" : "mid",
    "right" : "mid",
    "info" : "SimpleName[89504-89507]:SimpleName[89504-89507]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[89508-89518]:SingleVariableDeclaration[89508-89518]"
  }, {
    "left" : "int pos",
    "right" : "int pos",
    "info" : "SingleVariableDeclaration[89520-89527]:SingleVariableDeclaration[89520-89527]"
  }, {
    "left" : "int len",
    "right" : "int len",
    "info" : "SingleVariableDeclaration[89529-89536]:SingleVariableDeclaration[89529-89536]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89538-89880]:Block[89538-89880]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[89548-89601]:IfStatement[89548-89601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89565-89601]:Block[89565-89601]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[89579-89591]:ReturnStatement[89579-89591]"
  }, {
    "left" : "if (len < 0 || pos > str.length())",
    "right" : "if (len < 0 || pos > str.length())",
    "info" : "IfStatement[89610-89682]:IfStatement[89610-89682]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89645-89682]:Block[89645-89682]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[89659-89672]:ReturnStatement[89659-89672]"
  }, {
    "left" : "if (pos < 0)",
    "right" : "if (pos < 0)",
    "info" : "IfStatement[89691-89736]:IfStatement[89691-89736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89704-89736]:Block[89704-89736]"
  }, {
    "left" : "pos = 0;",
    "right" : "pos = 0;",
    "info" : "ExpressionStatement[89718-89726]:ExpressionStatement[89718-89726]"
  }, {
    "left" : "if (str.length() <= (pos + len))",
    "right" : "if (str.length() <= (pos + len))",
    "info" : "IfStatement[89745-89828]:IfStatement[89745-89828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[89778-89828]:Block[89778-89828]"
  }, {
    "left" : "return str.substring(pos);",
    "right" : "return str.substring(pos);",
    "info" : "ReturnStatement[89792-89818]:ReturnStatement[89792-89818]"
  }, {
    "left" : "return str.substring(pos, pos + len);",
    "right" : "return str.substring(pos, pos + len);",
    "info" : "ReturnStatement[89837-89874]:ReturnStatement[89837-89874]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[91155-91161]:Modifier[91155-91161]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[91162-91168]:Modifier[91162-91168]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[91169-91175]:SimpleType[91169-91175]"
  }, {
    "left" : "substringBefore",
    "right" : "substringBefore",
    "info" : "SimpleName[91176-91191]:SimpleName[91176-91191]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[91192-91202]:SingleVariableDeclaration[91192-91202]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[91204-91220]:SingleVariableDeclaration[91204-91220]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91222-91539]:Block[91222-91539]"
  }, {
    "left" : "if (isEmpty(str) || separator == null)",
    "right" : "if (isEmpty(str) || separator == null)",
    "info" : "IfStatement[91232-91306]:IfStatement[91232-91306]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91271-91306]:Block[91271-91306]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[91285-91296]:ReturnStatement[91285-91296]"
  }, {
    "left" : "if (separator.length() == 0)",
    "right" : "if (separator.length() == 0)",
    "info" : "IfStatement[91315-91381]:IfStatement[91315-91381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91344-91381]:Block[91344-91381]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[91358-91371]:ReturnStatement[91358-91371]"
  }, {
    "left" : "int pos = str.indexOf(separator);",
    "right" : "int pos = str.indexOf(separator);",
    "info" : "VariableDeclarationStatement[91390-91423]:VariableDeclarationStatement[91390-91423]"
  }, {
    "left" : "if (pos == INDEX_NOT_FOUND)",
    "right" : "if (pos == INDEX_NOT_FOUND)",
    "info" : "IfStatement[91432-91495]:IfStatement[91432-91495]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[91460-91495]:Block[91460-91495]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[91474-91485]:ReturnStatement[91474-91485]"
  }, {
    "left" : "return str.substring(0, pos);",
    "right" : "return str.substring(0, pos);",
    "info" : "ReturnStatement[91504-91533]:ReturnStatement[91504-91533]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[92734-92740]:Modifier[92734-92740]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[92741-92747]:Modifier[92741-92747]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[92748-92754]:SimpleType[92748-92754]"
  }, {
    "left" : "substringAfter",
    "right" : "substringAfter",
    "info" : "SimpleName[92755-92769]:SimpleName[92755-92769]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[92770-92780]:SingleVariableDeclaration[92770-92780]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[92782-92798]:SingleVariableDeclaration[92782-92798]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[92800-93110]:Block[92800-93110]"
  }, {
    "left" : "if (isEmpty(str))",
    "right" : "if (isEmpty(str))",
    "info" : "IfStatement[92810-92863]:IfStatement[92810-92863]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[92828-92863]:Block[92828-92863]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[92842-92853]:ReturnStatement[92842-92853]"
  }, {
    "left" : "if (separator == null)",
    "right" : "if (separator == null)",
    "info" : "IfStatement[92872-92932]:IfStatement[92872-92932]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[92895-92932]:Block[92895-92932]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[92909-92922]:ReturnStatement[92909-92922]"
  }, {
    "left" : "int pos = str.indexOf(separator);",
    "right" : "int pos = str.indexOf(separator);",
    "info" : "VariableDeclarationStatement[92941-92974]:VariableDeclarationStatement[92941-92974]"
  }, {
    "left" : "if (pos == INDEX_NOT_FOUND)",
    "right" : "if (pos == INDEX_NOT_FOUND)",
    "info" : "IfStatement[92983-93048]:IfStatement[92983-93048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[93011-93048]:Block[93011-93048]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[93025-93038]:ReturnStatement[93025-93038]"
  }, {
    "left" : "return str.substring(pos + separator.length());",
    "right" : "return str.substring(pos + separator.length());",
    "info" : "ReturnStatement[93057-93104]:ReturnStatement[93057-93104]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[94308-94314]:Modifier[94308-94314]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[94315-94321]:Modifier[94315-94321]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[94322-94328]:SimpleType[94322-94328]"
  }, {
    "left" : "substringBeforeLast",
    "right" : "substringBeforeLast",
    "info" : "SimpleName[94329-94348]:SimpleName[94329-94348]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[94349-94359]:SingleVariableDeclaration[94349-94359]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[94361-94377]:SingleVariableDeclaration[94361-94377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[94379-94626]:Block[94379-94626]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(separator))",
    "right" : "if (isEmpty(str) || isEmpty(separator))",
    "info" : "IfStatement[94389-94464]:IfStatement[94389-94464]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[94429-94464]:Block[94429-94464]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[94443-94454]:ReturnStatement[94443-94454]"
  }, {
    "left" : "int pos = str.lastIndexOf(separator);",
    "right" : "int pos = str.lastIndexOf(separator);",
    "info" : "VariableDeclarationStatement[94473-94510]:VariableDeclarationStatement[94473-94510]"
  }, {
    "left" : "if (pos == INDEX_NOT_FOUND)",
    "right" : "if (pos == INDEX_NOT_FOUND)",
    "info" : "IfStatement[94519-94582]:IfStatement[94519-94582]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[94547-94582]:Block[94547-94582]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[94561-94572]:ReturnStatement[94561-94572]"
  }, {
    "left" : "return str.substring(0, pos);",
    "right" : "return str.substring(0, pos);",
    "info" : "ReturnStatement[94591-94620]:ReturnStatement[94591-94620]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[95913-95919]:Modifier[95913-95919]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[95920-95926]:Modifier[95920-95926]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[95927-95933]:SimpleType[95927-95933]"
  }, {
    "left" : "substringAfterLast",
    "right" : "substringAfterLast",
    "info" : "SimpleName[95934-95952]:SimpleName[95934-95952]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[95953-95963]:SingleVariableDeclaration[95953-95963]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[95965-95981]:SingleVariableDeclaration[95965-95981]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[95983-96344]:Block[95983-96344]"
  }, {
    "left" : "if (isEmpty(str))",
    "right" : "if (isEmpty(str))",
    "info" : "IfStatement[95993-96046]:IfStatement[95993-96046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96011-96046]:Block[96011-96046]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[96025-96036]:ReturnStatement[96025-96036]"
  }, {
    "left" : "if (isEmpty(separator))",
    "right" : "if (isEmpty(separator))",
    "info" : "IfStatement[96055-96116]:IfStatement[96055-96116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96079-96116]:Block[96079-96116]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[96093-96106]:ReturnStatement[96093-96106]"
  }, {
    "left" : "int pos = str.lastIndexOf(separator);",
    "right" : "int pos = str.lastIndexOf(separator);",
    "info" : "VariableDeclarationStatement[96125-96162]:VariableDeclarationStatement[96125-96162]"
  }, {
    "left" : "if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length()))",
    "right" : "if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length()))",
    "info" : "IfStatement[96171-96282]:IfStatement[96171-96282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[96245-96282]:Block[96245-96282]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[96259-96272]:ReturnStatement[96259-96272]"
  }, {
    "left" : "return str.substring(pos + separator.length());",
    "right" : "return str.substring(pos + separator.length());",
    "info" : "ReturnStatement[96291-96338]:ReturnStatement[96291-96338]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[97316-97322]:Modifier[97316-97322]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[97323-97329]:Modifier[97323-97329]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[97330-97336]:SimpleType[97330-97336]"
  }, {
    "left" : "substringBetween",
    "right" : "substringBetween",
    "info" : "SimpleName[97337-97353]:SimpleName[97337-97353]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[97354-97364]:SingleVariableDeclaration[97354-97364]"
  }, {
    "left" : "String tag",
    "right" : "String tag",
    "info" : "SingleVariableDeclaration[97366-97376]:SingleVariableDeclaration[97366-97376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[97378-97433]:Block[97378-97433]"
  }, {
    "left" : "return substringBetween(str, tag, tag);",
    "right" : "return substringBetween(str, tag, tag);",
    "info" : "ReturnStatement[97388-97427]:ReturnStatement[97388-97427]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[98717-98723]:Modifier[98717-98723]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[98724-98730]:Modifier[98724-98730]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[98731-98737]:SimpleType[98731-98737]"
  }, {
    "left" : "substringBetween",
    "right" : "substringBetween",
    "info" : "SimpleName[98738-98754]:SimpleName[98738-98754]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[98755-98765]:SingleVariableDeclaration[98755-98765]"
  }, {
    "left" : "String open",
    "right" : "String open",
    "info" : "SingleVariableDeclaration[98767-98778]:SingleVariableDeclaration[98767-98778]"
  }, {
    "left" : "String close",
    "right" : "String close",
    "info" : "SingleVariableDeclaration[98780-98792]:SingleVariableDeclaration[98780-98792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98794-99193]:Block[98794-99193]"
  }, {
    "left" : "if (str == null || open == null || close == null)",
    "right" : "if (str == null || open == null || close == null)",
    "info" : "IfStatement[98804-98890]:IfStatement[98804-98890]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98854-98890]:Block[98854-98890]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[98868-98880]:ReturnStatement[98868-98880]"
  }, {
    "left" : "int start = str.indexOf(open);",
    "right" : "int start = str.indexOf(open);",
    "info" : "VariableDeclarationStatement[98899-98929]:VariableDeclarationStatement[98899-98929]"
  }, {
    "left" : "if (start != INDEX_NOT_FOUND)",
    "right" : "if (start != INDEX_NOT_FOUND)",
    "info" : "IfStatement[98938-99166]:IfStatement[98938-99166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[98968-99166]:Block[98968-99166]"
  }, {
    "left" : "int end = str.indexOf(close, start + open.length());",
    "right" : "int end = str.indexOf(close, start + open.length());",
    "info" : "VariableDeclarationStatement[98982-99034]:VariableDeclarationStatement[98982-99034]"
  }, {
    "left" : "if (end != INDEX_NOT_FOUND)",
    "right" : "if (end != INDEX_NOT_FOUND)",
    "info" : "IfStatement[99047-99156]:IfStatement[99047-99156]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[99075-99156]:Block[99075-99156]"
  }, {
    "left" : "return str.substring(start + open.length(), end);",
    "right" : "return str.substring(start + open.length(), end);",
    "info" : "ReturnStatement[99093-99142]:ReturnStatement[99093-99142]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[99175-99187]:ReturnStatement[99175-99187]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[100301-100307]:Modifier[100301-100307]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[100308-100314]:Modifier[100308-100314]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[100315-100323]:ArrayType[100315-100323]"
  }, {
    "left" : "substringsBetween",
    "right" : "substringsBetween",
    "info" : "SimpleName[100324-100341]:SimpleName[100324-100341]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[100342-100352]:SingleVariableDeclaration[100342-100352]"
  }, {
    "left" : "String open",
    "right" : "String open",
    "info" : "SingleVariableDeclaration[100354-100365]:SingleVariableDeclaration[100354-100365]"
  }, {
    "left" : "String close",
    "right" : "String close",
    "info" : "SingleVariableDeclaration[100367-100379]:SingleVariableDeclaration[100367-100379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100381-101271]:Block[100381-101271]"
  }, {
    "left" : "if (str == null || isEmpty(open) || isEmpty(close))",
    "right" : "if (str == null || isEmpty(open) || isEmpty(close))",
    "info" : "IfStatement[100391-100479]:IfStatement[100391-100479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100443-100479]:Block[100443-100479]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[100457-100469]:ReturnStatement[100457-100469]"
  }, {
    "left" : "int strLen = str.length();",
    "right" : "int strLen = str.length();",
    "info" : "VariableDeclarationStatement[100488-100514]:VariableDeclarationStatement[100488-100514]"
  }, {
    "left" : "if (strLen == 0)",
    "right" : "if (strLen == 0)",
    "info" : "IfStatement[100523-100601]:IfStatement[100523-100601]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100540-100601]:Block[100540-100601]"
  }, {
    "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "info" : "ReturnStatement[100554-100591]:ReturnStatement[100554-100591]"
  }, {
    "left" : "int closeLen = close.length();",
    "right" : "int closeLen = close.length();",
    "info" : "VariableDeclarationStatement[100610-100640]:VariableDeclarationStatement[100610-100640]"
  }, {
    "left" : "int openLen = open.length();",
    "right" : "int openLen = open.length();",
    "info" : "VariableDeclarationStatement[100649-100677]:VariableDeclarationStatement[100649-100677]"
  }, {
    "left" : "List<String> list = new ArrayList<String>();",
    "right" : "List<String> list = new ArrayList<String>();",
    "info" : "VariableDeclarationStatement[100686-100730]:VariableDeclarationStatement[100686-100730]"
  }, {
    "left" : "int pos = 0;",
    "right" : "int pos = 0;",
    "info" : "VariableDeclarationStatement[100739-100751]:VariableDeclarationStatement[100739-100751]"
  }, {
    "left" : "while (pos < (strLen - closeLen))",
    "right" : "while (pos < (strLen - closeLen))",
    "info" : "WhileStatement[100760-101145]:WhileStatement[100760-101145]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100794-101145]:Block[100794-101145]"
  }, {
    "left" : "int start = str.indexOf(open, pos);",
    "right" : "int start = str.indexOf(open, pos);",
    "info" : "VariableDeclarationStatement[100808-100843]:VariableDeclarationStatement[100808-100843]"
  }, {
    "left" : "if (start < 0)",
    "right" : "if (start < 0)",
    "info" : "IfStatement[100856-100909]:IfStatement[100856-100909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[100871-100909]:Block[100871-100909]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[100889-100895]:BreakStatement[100889-100895]"
  }, {
    "left" : "start += openLen;",
    "right" : "start += openLen;",
    "info" : "ExpressionStatement[100922-100939]:ExpressionStatement[100922-100939]"
  }, {
    "left" : "int end = str.indexOf(close, start);",
    "right" : "int end = str.indexOf(close, start);",
    "info" : "VariableDeclarationStatement[100952-100988]:VariableDeclarationStatement[100952-100988]"
  }, {
    "left" : "if (end < 0)",
    "right" : "if (end < 0)",
    "info" : "IfStatement[101001-101052]:IfStatement[101001-101052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101014-101052]:Block[101014-101052]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[101032-101038]:BreakStatement[101032-101038]"
  }, {
    "left" : "list.add(str.substring(start, end));",
    "right" : "list.add(str.substring(start, end));",
    "info" : "ExpressionStatement[101065-101101]:ExpressionStatement[101065-101101]"
  }, {
    "left" : "pos = end + closeLen;",
    "right" : "pos = end + closeLen;",
    "info" : "ExpressionStatement[101114-101135]:ExpressionStatement[101114-101135]"
  }, {
    "left" : "if (list.isEmpty())",
    "right" : "if (list.isEmpty())",
    "info" : "IfStatement[101154-101210]:IfStatement[101154-101210]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[101174-101210]:Block[101174-101210]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[101188-101200]:ReturnStatement[101188-101200]"
  }, {
    "left" : "return list.toArray(new String [list.size()]);",
    "right" : "return list.toArray(new String [list.size()]);",
    "info" : "ReturnStatement[101219-101265]:ReturnStatement[101219-101265]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[102345-102351]:Modifier[102345-102351]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[102352-102358]:Modifier[102352-102358]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[102359-102367]:ArrayType[102359-102367]"
  }, {
    "left" : "split",
    "right" : "split",
    "info" : "SimpleName[102368-102373]:SimpleName[102368-102373]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[102374-102384]:SingleVariableDeclaration[102374-102384]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[102386-102430]:Block[102386-102430]"
  }, {
    "left" : "return split(str, null, -1);",
    "right" : "return split(str, null, -1);",
    "info" : "ReturnStatement[102396-102424]:ReturnStatement[102396-102424]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[103442-103448]:Modifier[103442-103448]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[103449-103455]:Modifier[103449-103455]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[103456-103464]:ArrayType[103456-103464]"
  }, {
    "left" : "split",
    "right" : "split",
    "info" : "SimpleName[103465-103470]:SimpleName[103465-103470]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[103471-103481]:SingleVariableDeclaration[103471-103481]"
  }, {
    "left" : "char separatorChar",
    "right" : "char separatorChar",
    "info" : "SingleVariableDeclaration[103483-103501]:SingleVariableDeclaration[103483-103501]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[103503-103565]:Block[103503-103565]"
  }, {
    "left" : "return splitWorker(str, separatorChar, false);",
    "right" : "return splitWorker(str, separatorChar, false);",
    "info" : "ReturnStatement[103513-103559]:ReturnStatement[103513-103559]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[104671-104677]:Modifier[104671-104677]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[104678-104684]:Modifier[104678-104684]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[104685-104693]:ArrayType[104685-104693]"
  }, {
    "left" : "split",
    "right" : "split",
    "info" : "SimpleName[104694-104699]:SimpleName[104694-104699]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[104700-104710]:SingleVariableDeclaration[104700-104710]"
  }, {
    "left" : "String separatorChars",
    "right" : "String separatorChars",
    "info" : "SingleVariableDeclaration[104712-104733]:SingleVariableDeclaration[104712-104733]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[104735-104802]:Block[104735-104802]"
  }, {
    "left" : "return splitWorker(str, separatorChars, -1, false);",
    "right" : "return splitWorker(str, separatorChars, -1, false);",
    "info" : "ReturnStatement[104745-104796]:ReturnStatement[104745-104796]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[106208-106214]:Modifier[106208-106214]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[106215-106221]:Modifier[106215-106221]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[106222-106230]:ArrayType[106222-106230]"
  }, {
    "left" : "split",
    "right" : "split",
    "info" : "SimpleName[106231-106236]:SimpleName[106231-106236]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[106237-106247]:SingleVariableDeclaration[106237-106247]"
  }, {
    "left" : "String separatorChars",
    "right" : "String separatorChars",
    "info" : "SingleVariableDeclaration[106249-106270]:SingleVariableDeclaration[106249-106270]"
  }, {
    "left" : "int max",
    "right" : "int max",
    "info" : "SingleVariableDeclaration[106272-106279]:SingleVariableDeclaration[106272-106279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[106281-106349]:Block[106281-106349]"
  }, {
    "left" : "return splitWorker(str, separatorChars, max, false);",
    "right" : "return splitWorker(str, separatorChars, max, false);",
    "info" : "ReturnStatement[106291-106343]:ReturnStatement[106291-106343]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[107501-107507]:Modifier[107501-107507]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[107508-107514]:Modifier[107508-107514]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[107515-107523]:ArrayType[107515-107523]"
  }, {
    "left" : "splitByWholeSeparator",
    "right" : "splitByWholeSeparator",
    "info" : "SimpleName[107524-107545]:SimpleName[107524-107545]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[107546-107556]:SingleVariableDeclaration[107546-107556]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[107558-107574]:SingleVariableDeclaration[107558-107574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[107576-107657]:Block[107576-107657]"
  }, {
    "left" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
    "right" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
    "info" : "ReturnStatement[107586-107651]:ReturnStatement[107586-107651]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[109098-109104]:Modifier[109098-109104]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[109105-109111]:Modifier[109105-109111]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[109112-109120]:ArrayType[109112-109120]"
  }, {
    "left" : "splitByWholeSeparator",
    "right" : "splitByWholeSeparator",
    "info" : "SimpleName[109121-109142]:SimpleName[109121-109142]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[109144-109154]:SingleVariableDeclaration[109144-109154]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[109156-109172]:SingleVariableDeclaration[109156-109172]"
  }, {
    "left" : "int max",
    "right" : "int max",
    "info" : "SingleVariableDeclaration[109174-109181]:SingleVariableDeclaration[109174-109181]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[109184-109263]:Block[109184-109263]"
  }, {
    "left" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
    "right" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
    "info" : "ReturnStatement[109194-109257]:ReturnStatement[109194-109257]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[110617-110623]:Modifier[110617-110623]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[110624-110630]:Modifier[110624-110630]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[110631-110639]:ArrayType[110631-110639]"
  }, {
    "left" : "splitByWholeSeparatorPreserveAllTokens",
    "right" : "splitByWholeSeparatorPreserveAllTokens",
    "info" : "SimpleName[110640-110678]:SimpleName[110640-110678]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[110679-110689]:SingleVariableDeclaration[110679-110689]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[110691-110707]:SingleVariableDeclaration[110691-110707]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[110709-110786]:Block[110709-110786]"
  }, {
    "left" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
    "right" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
    "info" : "ReturnStatement[110719-110780]:ReturnStatement[110719-110780]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[112445-112451]:Modifier[112445-112451]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[112452-112458]:Modifier[112452-112458]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[112459-112467]:ArrayType[112459-112467]"
  }, {
    "left" : "splitByWholeSeparatorPreserveAllTokens",
    "right" : "splitByWholeSeparatorPreserveAllTokens",
    "info" : "SimpleName[112468-112506]:SimpleName[112468-112506]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[112507-112517]:SingleVariableDeclaration[112507-112517]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[112519-112535]:SingleVariableDeclaration[112519-112535]"
  }, {
    "left" : "int max",
    "right" : "int max",
    "info" : "SingleVariableDeclaration[112537-112544]:SingleVariableDeclaration[112537-112544]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[112546-112624]:Block[112546-112624]"
  }, {
    "left" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
    "right" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
    "info" : "ReturnStatement[112556-112618]:ReturnStatement[112556-112618]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[113346-113353]:Modifier[113346-113353]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[113354-113360]:Modifier[113354-113360]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[113361-113369]:ArrayType[113361-113369]"
  }, {
    "left" : "splitByWholeSeparatorWorker",
    "right" : "splitByWholeSeparatorWorker",
    "info" : "SimpleName[113370-113397]:SimpleName[113370-113397]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[113411-113421]:SingleVariableDeclaration[113411-113421]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[113423-113439]:SingleVariableDeclaration[113423-113439]"
  }, {
    "left" : "int max",
    "right" : "int max",
    "info" : "SingleVariableDeclaration[113441-113448]:SingleVariableDeclaration[113441-113448]"
  }, {
    "left" : "boolean preserveAllTokens",
    "right" : "boolean preserveAllTokens",
    "info" : "SingleVariableDeclaration[113450-113475]:SingleVariableDeclaration[113450-113475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113477-115763]:Block[113477-115763]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[113487-113540]:IfStatement[113487-113540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113504-113540]:Block[113504-113540]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[113518-113530]:ReturnStatement[113518-113530]"
  }, {
    "left" : "int len = str.length();",
    "right" : "int len = str.length();",
    "info" : "VariableDeclarationStatement[113550-113573]:VariableDeclarationStatement[113550-113573]"
  }, {
    "left" : "if (len == 0)",
    "right" : "if (len == 0)",
    "info" : "IfStatement[113583-113658]:IfStatement[113583-113658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113597-113658]:Block[113597-113658]"
  }, {
    "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "info" : "ReturnStatement[113611-113648]:ReturnStatement[113611-113648]"
  }, {
    "left" : "if ((separator == null) || (EMPTY.equals(separator)))",
    "right" : "if ((separator == null) || (EMPTY.equals(separator)))",
    "info" : "IfStatement[113668-113836]:IfStatement[113668-113836]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[113722-113836]:Block[113722-113836]"
  }, {
    "left" : "return splitWorker(str, null, max, preserveAllTokens);",
    "right" : "return splitWorker(str, null, max, preserveAllTokens);",
    "info" : "ReturnStatement[113772-113826]:ReturnStatement[113772-113826]"
  }, {
    "left" : "int separatorLength = separator.length();",
    "right" : "int separatorLength = separator.length();",
    "info" : "VariableDeclarationStatement[113846-113887]:VariableDeclarationStatement[113846-113887]"
  }, {
    "left" : "ArrayList<String> substrings = new ArrayList<String>();",
    "right" : "ArrayList<String> substrings = new ArrayList<String>();",
    "info" : "VariableDeclarationStatement[113897-113952]:VariableDeclarationStatement[113897-113952]"
  }, {
    "left" : "int numberOfSubstrings = 0;",
    "right" : "int numberOfSubstrings = 0;",
    "info" : "VariableDeclarationStatement[113961-113988]:VariableDeclarationStatement[113961-113988]"
  }, {
    "left" : "int beg = 0;",
    "right" : "int beg = 0;",
    "info" : "VariableDeclarationStatement[113997-114009]:VariableDeclarationStatement[113997-114009]"
  }, {
    "left" : "int end = 0;",
    "right" : "int end = 0;",
    "info" : "VariableDeclarationStatement[114018-114030]:VariableDeclarationStatement[114018-114030]"
  }, {
    "left" : "while (end < len)",
    "right" : "while (end < len)",
    "info" : "WhileStatement[114039-115690]:WhileStatement[114039-115690]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114057-115690]:Block[114057-115690]"
  }, {
    "left" : "end = str.indexOf(separator, beg);",
    "right" : "end = str.indexOf(separator, beg);",
    "info" : "ExpressionStatement[114071-114105]:ExpressionStatement[114071-114105]"
  }, {
    "left" : "if (end > -1)",
    "right" : "if (end > -1)",
    "info" : "IfStatement[114119-115680]:IfStatement[114119-115680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114133-115495]:Block[114133-115495]"
  }, {
    "left" : "if (end > beg)",
    "right" : "if (end > beg)",
    "info" : "IfStatement[114151-115481]:IfStatement[114151-115481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114166-114934]:Block[114166-114934]"
  }, {
    "left" : "numberOfSubstrings += 1;",
    "right" : "numberOfSubstrings += 1;",
    "info" : "ExpressionStatement[114188-114212]:ExpressionStatement[114188-114212]"
  }, {
    "left" : "if (numberOfSubstrings == max)",
    "right" : "if (numberOfSubstrings == max)",
    "info" : "IfStatement[114234-114916]:IfStatement[114234-114916]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114265-114383]:Block[114265-114383]"
  }, {
    "left" : "end = len;",
    "right" : "end = len;",
    "info" : "ExpressionStatement[114291-114301]:ExpressionStatement[114291-114301]"
  }, {
    "left" : "substrings.add(str.substring(beg));",
    "right" : "substrings.add(str.substring(beg));",
    "info" : "ExpressionStatement[114326-114361]:ExpressionStatement[114326-114361]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114389-114916]:Block[114389-114916]"
  }, {
    "left" : "substrings.add(str.substring(beg, end));",
    "right" : "substrings.add(str.substring(beg, end));",
    "info" : "ExpressionStatement[114573-114613]:ExpressionStatement[114573-114613]"
  }, {
    "left" : "beg = end + separatorLength;",
    "right" : "beg = end + separatorLength;",
    "info" : "ExpressionStatement[114866-114894]:ExpressionStatement[114866-114894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[114940-115481]:Block[114940-115481]"
  }, {
    "left" : "if (preserveAllTokens)",
    "right" : "if (preserveAllTokens)",
    "info" : "IfStatement[115049-115414]:IfStatement[115049-115414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115072-115414]:Block[115072-115414]"
  }, {
    "left" : "numberOfSubstrings += 1;",
    "right" : "numberOfSubstrings += 1;",
    "info" : "ExpressionStatement[115098-115122]:ExpressionStatement[115098-115122]"
  }, {
    "left" : "if (numberOfSubstrings == max)",
    "right" : "if (numberOfSubstrings == max)",
    "info" : "IfStatement[115147-115392]:IfStatement[115147-115392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115178-115308]:Block[115178-115308]"
  }, {
    "left" : "end = len;",
    "right" : "end = len;",
    "info" : "ExpressionStatement[115208-115218]:ExpressionStatement[115208-115218]"
  }, {
    "left" : "substrings.add(str.substring(beg));",
    "right" : "substrings.add(str.substring(beg));",
    "info" : "ExpressionStatement[115247-115282]:ExpressionStatement[115247-115282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115314-115392]:Block[115314-115392]"
  }, {
    "left" : "substrings.add(EMPTY);",
    "right" : "substrings.add(EMPTY);",
    "info" : "ExpressionStatement[115344-115366]:ExpressionStatement[115344-115366]"
  }, {
    "left" : "beg = end + separatorLength;",
    "right" : "beg = end + separatorLength;",
    "info" : "ExpressionStatement[115435-115463]:ExpressionStatement[115435-115463]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[115501-115680]:Block[115501-115680]"
  }, {
    "left" : "substrings.add(str.substring(beg));",
    "right" : "substrings.add(str.substring(beg));",
    "info" : "ExpressionStatement[115604-115639]:ExpressionStatement[115604-115639]"
  }, {
    "left" : "end = len;",
    "right" : "end = len;",
    "info" : "ExpressionStatement[115656-115666]:ExpressionStatement[115656-115666]"
  }, {
    "left" : "return substrings.toArray(new String[substrings.size()]);",
    "right" : "return substrings.toArray(new String[substrings.size()]);",
    "info" : "ReturnStatement[115700-115757]:ReturnStatement[115700-115757]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[116988-116994]:Modifier[116988-116994]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[116995-117001]:Modifier[116995-117001]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[117002-117010]:ArrayType[117002-117010]"
  }, {
    "left" : "splitPreserveAllTokens",
    "right" : "splitPreserveAllTokens",
    "info" : "SimpleName[117011-117033]:SimpleName[117011-117033]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[117034-117044]:SingleVariableDeclaration[117034-117044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[117046-117102]:Block[117046-117102]"
  }, {
    "left" : "return splitWorker(str, null, -1, true);",
    "right" : "return splitWorker(str, null, -1, true);",
    "info" : "ReturnStatement[117056-117096]:ReturnStatement[117056-117096]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[118862-118868]:Modifier[118862-118868]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[118869-118875]:Modifier[118869-118875]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[118876-118884]:ArrayType[118876-118884]"
  }, {
    "left" : "splitPreserveAllTokens",
    "right" : "splitPreserveAllTokens",
    "info" : "SimpleName[118885-118907]:SimpleName[118885-118907]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[118908-118918]:SingleVariableDeclaration[118908-118918]"
  }, {
    "left" : "char separatorChar",
    "right" : "char separatorChar",
    "info" : "SingleVariableDeclaration[118920-118938]:SingleVariableDeclaration[118920-118938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[118940-119001]:Block[118940-119001]"
  }, {
    "left" : "return splitWorker(str, separatorChar, true);",
    "right" : "return splitWorker(str, separatorChar, true);",
    "info" : "ReturnStatement[118950-118995]:ReturnStatement[118950-118995]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[119556-119563]:Modifier[119556-119563]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[119564-119570]:Modifier[119564-119570]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[119571-119579]:ArrayType[119571-119579]"
  }, {
    "left" : "splitWorker",
    "right" : "splitWorker",
    "info" : "SimpleName[119580-119591]:SimpleName[119580-119591]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[119592-119602]:SingleVariableDeclaration[119592-119602]"
  }, {
    "left" : "char separatorChar",
    "right" : "char separatorChar",
    "info" : "SingleVariableDeclaration[119604-119622]:SingleVariableDeclaration[119604-119622]"
  }, {
    "left" : "boolean preserveAllTokens",
    "right" : "boolean preserveAllTokens",
    "info" : "SingleVariableDeclaration[119624-119649]:SingleVariableDeclaration[119624-119649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119651-120625]:Block[119651-120625]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[119708-119761]:IfStatement[119708-119761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119725-119761]:Block[119725-119761]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[119739-119751]:ReturnStatement[119739-119751]"
  }, {
    "left" : "int len = str.length();",
    "right" : "int len = str.length();",
    "info" : "VariableDeclarationStatement[119770-119793]:VariableDeclarationStatement[119770-119793]"
  }, {
    "left" : "if (len == 0)",
    "right" : "if (len == 0)",
    "info" : "IfStatement[119802-119877]:IfStatement[119802-119877]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[119816-119877]:Block[119816-119877]"
  }, {
    "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "info" : "ReturnStatement[119830-119867]:ReturnStatement[119830-119867]"
  }, {
    "left" : "List<String> list = new ArrayList<String>();",
    "right" : "List<String> list = new ArrayList<String>();",
    "info" : "VariableDeclarationStatement[119886-119930]:VariableDeclarationStatement[119886-119930]"
  }, {
    "left" : "int i = 0, start = 0;",
    "right" : "int i = 0, start = 0;",
    "info" : "VariableDeclarationStatement[119939-119960]:VariableDeclarationStatement[119939-119960]"
  }, {
    "left" : "boolean match = false;",
    "right" : "boolean match = false;",
    "info" : "VariableDeclarationStatement[119969-119991]:VariableDeclarationStatement[119969-119991]"
  }, {
    "left" : "boolean lastMatch = false;",
    "right" : "boolean lastMatch = false;",
    "info" : "VariableDeclarationStatement[120000-120026]:VariableDeclarationStatement[120000-120026]"
  }, {
    "left" : "while (i < len)",
    "right" : "while (i < len)",
    "info" : "WhileStatement[120035-120451]:WhileStatement[120035-120451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[120051-120451]:Block[120051-120451]"
  }, {
    "left" : "if (str.charAt(i) == separatorChar)",
    "right" : "if (str.charAt(i) == separatorChar)",
    "info" : "IfStatement[120065-120367]:IfStatement[120065-120367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[120101-120367]:Block[120101-120367]"
  }, {
    "left" : "if (match || preserveAllTokens)",
    "right" : "if (match || preserveAllTokens)",
    "info" : "IfStatement[120119-120298]:IfStatement[120119-120298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[120151-120298]:Block[120151-120298]"
  }, {
    "left" : "list.add(str.substring(start, i));",
    "right" : "list.add(str.substring(start, i));",
    "info" : "ExpressionStatement[120173-120207]:ExpressionStatement[120173-120207]"
  }, {
    "left" : "match = false;",
    "right" : "match = false;",
    "info" : "ExpressionStatement[120228-120242]:ExpressionStatement[120228-120242]"
  }, {
    "left" : "lastMatch = true;",
    "right" : "lastMatch = true;",
    "info" : "ExpressionStatement[120263-120280]:ExpressionStatement[120263-120280]"
  }, {
    "left" : "start = ++i;",
    "right" : "start = ++i;",
    "info" : "ExpressionStatement[120315-120327]:ExpressionStatement[120315-120327]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[120344-120353]:ContinueStatement[120344-120353]"
  }, {
    "left" : "lastMatch = false;",
    "right" : "lastMatch = false;",
    "info" : "ExpressionStatement[120380-120398]:ExpressionStatement[120380-120398]"
  }, {
    "left" : "match = true;",
    "right" : "match = true;",
    "info" : "ExpressionStatement[120411-120424]:ExpressionStatement[120411-120424]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[120437-120441]:ExpressionStatement[120437-120441]"
  }, {
    "left" : "if (match || (preserveAllTokens && lastMatch))",
    "right" : "if (match || (preserveAllTokens && lastMatch))",
    "info" : "IfStatement[120460-120565]:IfStatement[120460-120565]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[120507-120565]:Block[120507-120565]"
  }, {
    "left" : "list.add(str.substring(start, i));",
    "right" : "list.add(str.substring(start, i));",
    "info" : "ExpressionStatement[120521-120555]:ExpressionStatement[120521-120555]"
  }, {
    "left" : "return list.toArray(new String[list.size()]);",
    "right" : "return list.toArray(new String[list.size()]);",
    "info" : "ReturnStatement[120574-120619]:ReturnStatement[120574-120619]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[122479-122485]:Modifier[122479-122485]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[122486-122492]:Modifier[122486-122492]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[122493-122501]:ArrayType[122493-122501]"
  }, {
    "left" : "splitPreserveAllTokens",
    "right" : "splitPreserveAllTokens",
    "info" : "SimpleName[122502-122524]:SimpleName[122502-122524]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[122525-122535]:SingleVariableDeclaration[122525-122535]"
  }, {
    "left" : "String separatorChars",
    "right" : "String separatorChars",
    "info" : "SingleVariableDeclaration[122537-122558]:SingleVariableDeclaration[122537-122558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[122560-122626]:Block[122560-122626]"
  }, {
    "left" : "return splitWorker(str, separatorChars, -1, true);",
    "right" : "return splitWorker(str, separatorChars, -1, true);",
    "info" : "ReturnStatement[122570-122620]:ReturnStatement[122570-122620]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[124580-124586]:Modifier[124580-124586]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[124587-124593]:Modifier[124587-124593]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[124594-124602]:ArrayType[124594-124602]"
  }, {
    "left" : "splitPreserveAllTokens",
    "right" : "splitPreserveAllTokens",
    "info" : "SimpleName[124603-124625]:SimpleName[124603-124625]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[124626-124636]:SingleVariableDeclaration[124626-124636]"
  }, {
    "left" : "String separatorChars",
    "right" : "String separatorChars",
    "info" : "SingleVariableDeclaration[124638-124659]:SingleVariableDeclaration[124638-124659]"
  }, {
    "left" : "int max",
    "right" : "int max",
    "info" : "SingleVariableDeclaration[124661-124668]:SingleVariableDeclaration[124661-124668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[124670-124737]:Block[124670-124737]"
  }, {
    "left" : "return splitWorker(str, separatorChars, max, true);",
    "right" : "return splitWorker(str, separatorChars, max, true);",
    "info" : "ReturnStatement[124680-124731]:ReturnStatement[124680-124731]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[125412-125419]:Modifier[125412-125419]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[125420-125426]:Modifier[125420-125426]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[125427-125435]:ArrayType[125427-125435]"
  }, {
    "left" : "splitWorker",
    "right" : "splitWorker",
    "info" : "SimpleName[125436-125447]:SimpleName[125436-125447]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[125448-125458]:SingleVariableDeclaration[125448-125458]"
  }, {
    "left" : "String separatorChars",
    "right" : "String separatorChars",
    "info" : "SingleVariableDeclaration[125460-125481]:SingleVariableDeclaration[125460-125481]"
  }, {
    "left" : "int max",
    "right" : "int max",
    "info" : "SingleVariableDeclaration[125483-125490]:SingleVariableDeclaration[125483-125490]"
  }, {
    "left" : "boolean preserveAllTokens",
    "right" : "boolean preserveAllTokens",
    "info" : "SingleVariableDeclaration[125492-125517]:SingleVariableDeclaration[125492-125517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[125519-128436]:Block[125519-128436]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[125699-125752]:IfStatement[125699-125752]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[125716-125752]:Block[125716-125752]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[125730-125742]:ReturnStatement[125730-125742]"
  }, {
    "left" : "int len = str.length();",
    "right" : "int len = str.length();",
    "info" : "VariableDeclarationStatement[125761-125784]:VariableDeclarationStatement[125761-125784]"
  }, {
    "left" : "if (len == 0)",
    "right" : "if (len == 0)",
    "info" : "IfStatement[125793-125868]:IfStatement[125793-125868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[125807-125868]:Block[125807-125868]"
  }, {
    "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "info" : "ReturnStatement[125821-125858]:ReturnStatement[125821-125858]"
  }, {
    "left" : "List<String> list = new ArrayList<String>();",
    "right" : "List<String> list = new ArrayList<String>();",
    "info" : "VariableDeclarationStatement[125877-125921]:VariableDeclarationStatement[125877-125921]"
  }, {
    "left" : "int sizePlus1 = 1;",
    "right" : "int sizePlus1 = 1;",
    "info" : "VariableDeclarationStatement[125930-125948]:VariableDeclarationStatement[125930-125948]"
  }, {
    "left" : "int i = 0, start = 0;",
    "right" : "int i = 0, start = 0;",
    "info" : "VariableDeclarationStatement[125957-125978]:VariableDeclarationStatement[125957-125978]"
  }, {
    "left" : "boolean match = false;",
    "right" : "boolean match = false;",
    "info" : "VariableDeclarationStatement[125987-126009]:VariableDeclarationStatement[125987-126009]"
  }, {
    "left" : "boolean lastMatch = false;",
    "right" : "boolean lastMatch = false;",
    "info" : "VariableDeclarationStatement[126018-126044]:VariableDeclarationStatement[126018-126044]"
  }, {
    "left" : "if (separatorChars == null)",
    "right" : "if (separatorChars == null)",
    "info" : "IfStatement[126053-128262]:IfStatement[126053-128262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126081-126791]:Block[126081-126791]"
  }, {
    "left" : "while (i < len)",
    "right" : "while (i < len)",
    "info" : "WhileStatement[126146-126781]:WhileStatement[126146-126781]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126162-126781]:Block[126162-126781]"
  }, {
    "left" : "if (Character.isWhitespace(str.charAt(i)))",
    "right" : "if (Character.isWhitespace(str.charAt(i)))",
    "info" : "IfStatement[126180-126681]:IfStatement[126180-126681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126223-126681]:Block[126223-126681]"
  }, {
    "left" : "if (match || preserveAllTokens)",
    "right" : "if (match || preserveAllTokens)",
    "info" : "IfStatement[126245-126600]:IfStatement[126245-126600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126277-126600]:Block[126277-126600]"
  }, {
    "left" : "lastMatch = true;",
    "right" : "lastMatch = true;",
    "info" : "ExpressionStatement[126303-126320]:ExpressionStatement[126303-126320]"
  }, {
    "left" : "if (sizePlus1++ == max)",
    "right" : "if (sizePlus1++ == max)",
    "info" : "IfStatement[126345-126480]:IfStatement[126345-126480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126369-126480]:Block[126369-126480]"
  }, {
    "left" : "i = len;",
    "right" : "i = len;",
    "info" : "ExpressionStatement[126399-126407]:ExpressionStatement[126399-126407]"
  }, {
    "left" : "lastMatch = false;",
    "right" : "lastMatch = false;",
    "info" : "ExpressionStatement[126436-126454]:ExpressionStatement[126436-126454]"
  }, {
    "left" : "list.add(str.substring(start, i));",
    "right" : "list.add(str.substring(start, i));",
    "info" : "ExpressionStatement[126505-126539]:ExpressionStatement[126505-126539]"
  }, {
    "left" : "match = false;",
    "right" : "match = false;",
    "info" : "ExpressionStatement[126564-126578]:ExpressionStatement[126564-126578]"
  }, {
    "left" : "start = ++i;",
    "right" : "start = ++i;",
    "info" : "ExpressionStatement[126621-126633]:ExpressionStatement[126621-126633]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[126654-126663]:ContinueStatement[126654-126663]"
  }, {
    "left" : "lastMatch = false;",
    "right" : "lastMatch = false;",
    "info" : "ExpressionStatement[126698-126716]:ExpressionStatement[126698-126716]"
  }, {
    "left" : "match = true;",
    "right" : "match = true;",
    "info" : "ExpressionStatement[126733-126746]:ExpressionStatement[126733-126746]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[126763-126767]:ExpressionStatement[126763-126767]"
  }, {
    "left" : "if (separatorChars.length() == 1)",
    "right" : "if (separatorChars.length() == 1)",
    "info" : "IfStatement[126797-128262]:IfStatement[126797-128262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126831-127563]:Block[126831-127563]"
  }, {
    "left" : "char sep = separatorChars.charAt(0);",
    "right" : "char sep = separatorChars.charAt(0);",
    "info" : "VariableDeclarationStatement[126886-126922]:VariableDeclarationStatement[126886-126922]"
  }, {
    "left" : "while (i < len)",
    "right" : "while (i < len)",
    "info" : "WhileStatement[126935-127553]:WhileStatement[126935-127553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126951-127553]:Block[126951-127553]"
  }, {
    "left" : "if (str.charAt(i) == sep)",
    "right" : "if (str.charAt(i) == sep)",
    "info" : "IfStatement[126969-127453]:IfStatement[126969-127453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[126995-127453]:Block[126995-127453]"
  }, {
    "left" : "if (match || preserveAllTokens)",
    "right" : "if (match || preserveAllTokens)",
    "info" : "IfStatement[127017-127372]:IfStatement[127017-127372]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127049-127372]:Block[127049-127372]"
  }, {
    "left" : "lastMatch = true;",
    "right" : "lastMatch = true;",
    "info" : "ExpressionStatement[127075-127092]:ExpressionStatement[127075-127092]"
  }, {
    "left" : "if (sizePlus1++ == max)",
    "right" : "if (sizePlus1++ == max)",
    "info" : "IfStatement[127117-127252]:IfStatement[127117-127252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127141-127252]:Block[127141-127252]"
  }, {
    "left" : "i = len;",
    "right" : "i = len;",
    "info" : "ExpressionStatement[127171-127179]:ExpressionStatement[127171-127179]"
  }, {
    "left" : "lastMatch = false;",
    "right" : "lastMatch = false;",
    "info" : "ExpressionStatement[127208-127226]:ExpressionStatement[127208-127226]"
  }, {
    "left" : "list.add(str.substring(start, i));",
    "right" : "list.add(str.substring(start, i));",
    "info" : "ExpressionStatement[127277-127311]:ExpressionStatement[127277-127311]"
  }, {
    "left" : "match = false;",
    "right" : "match = false;",
    "info" : "ExpressionStatement[127336-127350]:ExpressionStatement[127336-127350]"
  }, {
    "left" : "start = ++i;",
    "right" : "start = ++i;",
    "info" : "ExpressionStatement[127393-127405]:ExpressionStatement[127393-127405]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[127426-127435]:ContinueStatement[127426-127435]"
  }, {
    "left" : "lastMatch = false;",
    "right" : "lastMatch = false;",
    "info" : "ExpressionStatement[127470-127488]:ExpressionStatement[127470-127488]"
  }, {
    "left" : "match = true;",
    "right" : "match = true;",
    "info" : "ExpressionStatement[127505-127518]:ExpressionStatement[127505-127518]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[127535-127539]:ExpressionStatement[127535-127539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127569-128262]:Block[127569-128262]"
  }, {
    "left" : "while (i < len)",
    "right" : "while (i < len)",
    "info" : "WhileStatement[127612-128252]:WhileStatement[127612-128252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127628-128252]:Block[127628-128252]"
  }, {
    "left" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
    "right" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
    "info" : "IfStatement[127646-128152]:IfStatement[127646-128152]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127694-128152]:Block[127694-128152]"
  }, {
    "left" : "if (match || preserveAllTokens)",
    "right" : "if (match || preserveAllTokens)",
    "info" : "IfStatement[127716-128071]:IfStatement[127716-128071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127748-128071]:Block[127748-128071]"
  }, {
    "left" : "lastMatch = true;",
    "right" : "lastMatch = true;",
    "info" : "ExpressionStatement[127774-127791]:ExpressionStatement[127774-127791]"
  }, {
    "left" : "if (sizePlus1++ == max)",
    "right" : "if (sizePlus1++ == max)",
    "info" : "IfStatement[127816-127951]:IfStatement[127816-127951]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[127840-127951]:Block[127840-127951]"
  }, {
    "left" : "i = len;",
    "right" : "i = len;",
    "info" : "ExpressionStatement[127870-127878]:ExpressionStatement[127870-127878]"
  }, {
    "left" : "lastMatch = false;",
    "right" : "lastMatch = false;",
    "info" : "ExpressionStatement[127907-127925]:ExpressionStatement[127907-127925]"
  }, {
    "left" : "list.add(str.substring(start, i));",
    "right" : "list.add(str.substring(start, i));",
    "info" : "ExpressionStatement[127976-128010]:ExpressionStatement[127976-128010]"
  }, {
    "left" : "match = false;",
    "right" : "match = false;",
    "info" : "ExpressionStatement[128035-128049]:ExpressionStatement[128035-128049]"
  }, {
    "left" : "start = ++i;",
    "right" : "start = ++i;",
    "info" : "ExpressionStatement[128092-128104]:ExpressionStatement[128092-128104]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[128125-128134]:ContinueStatement[128125-128134]"
  }, {
    "left" : "lastMatch = false;",
    "right" : "lastMatch = false;",
    "info" : "ExpressionStatement[128169-128187]:ExpressionStatement[128169-128187]"
  }, {
    "left" : "match = true;",
    "right" : "match = true;",
    "info" : "ExpressionStatement[128204-128217]:ExpressionStatement[128204-128217]"
  }, {
    "left" : "i++;",
    "right" : "i++;",
    "info" : "ExpressionStatement[128234-128238]:ExpressionStatement[128234-128238]"
  }, {
    "left" : "if (match || (preserveAllTokens && lastMatch))",
    "right" : "if (match || (preserveAllTokens && lastMatch))",
    "info" : "IfStatement[128271-128376]:IfStatement[128271-128376]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[128318-128376]:Block[128318-128376]"
  }, {
    "left" : "list.add(str.substring(start, i));",
    "right" : "list.add(str.substring(start, i));",
    "info" : "ExpressionStatement[128332-128366]:ExpressionStatement[128332-128366]"
  }, {
    "left" : "return list.toArray(new String[list.size()]);",
    "right" : "return list.toArray(new String[list.size()]);",
    "info" : "ReturnStatement[128385-128430]:ReturnStatement[128385-128430]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[129516-129522]:Modifier[129516-129522]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[129523-129529]:Modifier[129523-129529]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[129530-129538]:ArrayType[129530-129538]"
  }, {
    "left" : "splitByCharacterType",
    "right" : "splitByCharacterType",
    "info" : "SimpleName[129539-129559]:SimpleName[129539-129559]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[129560-129570]:SingleVariableDeclaration[129560-129570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[129572-129628]:Block[129572-129628]"
  }, {
    "left" : "return splitByCharacterType(str, false);",
    "right" : "return splitByCharacterType(str, false);",
    "info" : "ReturnStatement[129582-129622]:ReturnStatement[129582-129622]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[131100-131106]:Modifier[131100-131106]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[131107-131113]:Modifier[131107-131113]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[131114-131122]:ArrayType[131114-131122]"
  }, {
    "left" : "splitByCharacterTypeCamelCase",
    "right" : "splitByCharacterTypeCamelCase",
    "info" : "SimpleName[131123-131152]:SimpleName[131123-131152]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[131153-131163]:SingleVariableDeclaration[131153-131163]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[131165-131220]:Block[131165-131220]"
  }, {
    "left" : "return splitByCharacterType(str, true);",
    "right" : "return splitByCharacterType(str, true);",
    "info" : "ReturnStatement[131175-131214]:ReturnStatement[131175-131214]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[132030-132037]:Modifier[132030-132037]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[132038-132044]:Modifier[132038-132044]"
  }, {
    "left" : "String[]",
    "right" : "String[]",
    "info" : "ArrayType[132045-132053]:ArrayType[132045-132053]"
  }, {
    "left" : "splitByCharacterType",
    "right" : "splitByCharacterType",
    "info" : "SimpleName[132054-132074]:SimpleName[132054-132074]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[132075-132085]:SingleVariableDeclaration[132075-132085]"
  }, {
    "left" : "boolean camelCase",
    "right" : "boolean camelCase",
    "info" : "SingleVariableDeclaration[132087-132104]:SingleVariableDeclaration[132087-132104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132106-133303]:Block[132106-133303]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[132116-132169]:IfStatement[132116-132169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132133-132169]:Block[132133-132169]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[132147-132159]:ReturnStatement[132147-132159]"
  }, {
    "left" : "if (str.length() == 0)",
    "right" : "if (str.length() == 0)",
    "info" : "IfStatement[132178-132262]:IfStatement[132178-132262]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132201-132262]:Block[132201-132262]"
  }, {
    "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
    "info" : "ReturnStatement[132215-132252]:ReturnStatement[132215-132252]"
  }, {
    "left" : "char[] c = str.toCharArray();",
    "right" : "char[] c = str.toCharArray();",
    "info" : "VariableDeclarationStatement[132271-132300]:VariableDeclarationStatement[132271-132300]"
  }, {
    "left" : "List<String> list = new ArrayList<String>();",
    "right" : "List<String> list = new ArrayList<String>();",
    "info" : "VariableDeclarationStatement[132309-132353]:VariableDeclarationStatement[132309-132353]"
  }, {
    "left" : "int tokenStart = 0;",
    "right" : "int tokenStart = 0;",
    "info" : "VariableDeclarationStatement[132362-132381]:VariableDeclarationStatement[132362-132381]"
  }, {
    "left" : "int currentType = Character.getType(c[tokenStart]);",
    "right" : "int currentType = Character.getType(c[tokenStart]);",
    "info" : "VariableDeclarationStatement[132390-132441]:VariableDeclarationStatement[132390-132441]"
  }, {
    "left" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
    "right" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
    "info" : "ForStatement[132450-133175]:ForStatement[132450-133175]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132504-133175]:Block[132504-133175]"
  }, {
    "left" : "int type = Character.getType(c[pos]);",
    "right" : "int type = Character.getType(c[pos]);",
    "info" : "VariableDeclarationStatement[132518-132555]:VariableDeclarationStatement[132518-132555]"
  }, {
    "left" : "if (type == currentType)",
    "right" : "if (type == currentType)",
    "info" : "IfStatement[132568-132634]:IfStatement[132568-132634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132593-132634]:Block[132593-132634]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[132611-132620]:ContinueStatement[132611-132620]"
  }, {
    "left" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
    "right" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
    "info" : "IfStatement[132647-133133]:IfStatement[132647-133133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132745-133007]:Block[132745-133007]"
  }, {
    "left" : "int newTokenStart = pos - 1;",
    "right" : "int newTokenStart = pos - 1;",
    "info" : "VariableDeclarationStatement[132763-132791]:VariableDeclarationStatement[132763-132791]"
  }, {
    "left" : "if (newTokenStart != tokenStart)",
    "right" : "if (newTokenStart != tokenStart)",
    "info" : "IfStatement[132808-132993]:IfStatement[132808-132993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[132841-132993]:Block[132841-132993]"
  }, {
    "left" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
    "right" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
    "info" : "ExpressionStatement[132863-132927]:ExpressionStatement[132863-132927]"
  }, {
    "left" : "tokenStart = newTokenStart;",
    "right" : "tokenStart = newTokenStart;",
    "info" : "ExpressionStatement[132948-132975]:ExpressionStatement[132948-132975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[133013-133133]:Block[133013-133133]"
  }, {
    "left" : "list.add(new String(c, tokenStart, pos - tokenStart));",
    "right" : "list.add(new String(c, tokenStart, pos - tokenStart));",
    "info" : "ExpressionStatement[133031-133085]:ExpressionStatement[133031-133085]"
  }, {
    "left" : "tokenStart = pos;",
    "right" : "tokenStart = pos;",
    "info" : "ExpressionStatement[133102-133119]:ExpressionStatement[133102-133119]"
  }, {
    "left" : "currentType = type;",
    "right" : "currentType = type;",
    "info" : "ExpressionStatement[133146-133165]:ExpressionStatement[133146-133165]"
  }, {
    "left" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
    "right" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
    "info" : "ExpressionStatement[133184-133243]:ExpressionStatement[133184-133243]"
  }, {
    "left" : "return list.toArray(new String[list.size()]);",
    "right" : "return list.toArray(new String[list.size()]);",
    "info" : "ReturnStatement[133252-133297]:ReturnStatement[133252-133297]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[134244-134250]:Modifier[134244-134250]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[134251-134257]:Modifier[134251-134257]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[134259-134260]:TypeParameter[134259-134260]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[134262-134268]:SimpleType[134262-134268]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[134269-134273]:SimpleName[134269-134273]"
  }, {
    "left" : "T... elements",
    "right" : "T... elements",
    "info" : "SingleVariableDeclaration[134274-134287]:SingleVariableDeclaration[134274-134287]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[134289-134333]:Block[134289-134333]"
  }, {
    "left" : "return join(elements, null);",
    "right" : "return join(elements, null);",
    "info" : "ReturnStatement[134299-134327]:ReturnStatement[134299-134327]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[135222-135228]:Modifier[135222-135228]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[135229-135235]:Modifier[135229-135235]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[135236-135242]:SimpleType[135236-135242]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[135243-135247]:SimpleName[135243-135247]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[135248-135262]:SingleVariableDeclaration[135248-135262]"
  }, {
    "left" : "char separator",
    "right" : "char separator",
    "info" : "SingleVariableDeclaration[135264-135278]:SingleVariableDeclaration[135264-135278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135280-135408]:Block[135280-135408]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[135290-135345]:IfStatement[135290-135345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[135309-135345]:Block[135309-135345]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[135323-135335]:ReturnStatement[135323-135335]"
  }, {
    "left" : "return join(array, separator, 0, array.length);",
    "right" : "return join(array, separator, 0, array.length);",
    "info" : "ReturnStatement[135355-135402]:ReturnStatement[135355-135402]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[136573-136579]:Modifier[136573-136579]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[136580-136586]:Modifier[136580-136586]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[136587-136593]:SimpleType[136587-136593]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[136594-136598]:SimpleName[136594-136598]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[136599-136613]:SingleVariableDeclaration[136599-136613]"
  }, {
    "left" : "char separator",
    "right" : "char separator",
    "info" : "SingleVariableDeclaration[136615-136629]:SingleVariableDeclaration[136615-136629]"
  }, {
    "left" : "int startIndex",
    "right" : "int startIndex",
    "info" : "SingleVariableDeclaration[136631-136645]:SingleVariableDeclaration[136631-136645]"
  }, {
    "left" : "int endIndex",
    "right" : "int endIndex",
    "info" : "SingleVariableDeclaration[136647-136659]:SingleVariableDeclaration[136647-136659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136661-137252]:Block[136661-137190]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[136671-136726]:IfStatement[136671-136726]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136690-136726]:Block[136690-136726]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[136704-136716]:ReturnStatement[136704-136716]"
  }, {
    "left" : "int noOfItems = (endIndex - startIndex);",
    "right" : "int noOfItems = (endIndex - startIndex);",
    "info" : "VariableDeclarationStatement[136735-136775]:VariableDeclarationStatement[136735-136775]"
  }, {
    "left" : "if (noOfItems <= 0)",
    "right" : "if (noOfItems <= 0)",
    "info" : "IfStatement[136784-136841]:IfStatement[136784-136841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[136804-136841]:Block[136804-136841]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[136818-136831]:ReturnStatement[136818-136831]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);",
    "right" : "StringBuilder buf = new StringBuilder(noOfItems * 16);",
    "info" : "VariableDeclarationStatement[136859-136975]:VariableDeclarationStatement[136859-136913]"
  }, {
    "left" : "array",
    "right" : "noOfItems",
    "info" : "SimpleName[136898-136903]:SimpleName[136897-136906]"
  }, {
    "left" : "==",
    "right" : "*",
    "info" : "INFIX_EXPRESSION_OPERATOR[136916-136918]:INFIX_EXPRESSION_OPERATOR[136907-136908]"
  }, {
    "left" : "16",
    "right" : "16",
    "info" : "NumberLiteral[136926-136928]:NumberLiteral[136909-136911]"
  }, {
    "left" : "for (int i = startIndex; i < endIndex; i++)",
    "right" : "for (int i = startIndex; i < endIndex; i++)",
    "info" : "ForStatement[136985-137215]:ForStatement[136923-137153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137029-137215]:Block[136967-137153]"
  }, {
    "left" : "if (i > startIndex)",
    "right" : "if (i > startIndex)",
    "info" : "IfStatement[137043-137117]:IfStatement[136981-137055]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137063-137117]:Block[137001-137055]"
  }, {
    "left" : "buf.append(separator);",
    "right" : "buf.append(separator);",
    "info" : "ExpressionStatement[137081-137103]:ExpressionStatement[137019-137041]"
  }, {
    "left" : "if (array[i] != null)",
    "right" : "if (array[i] != null)",
    "info" : "IfStatement[137130-137205]:IfStatement[137068-137143]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[137152-137205]:Block[137090-137143]"
  }, {
    "left" : "buf.append(array[i]);",
    "right" : "buf.append(array[i]);",
    "info" : "ExpressionStatement[137170-137191]:ExpressionStatement[137108-137129]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[137224-137246]:ReturnStatement[137162-137184]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[138276-138282]:Modifier[138214-138220]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[138283-138289]:Modifier[138221-138227]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[138290-138296]:SimpleType[138228-138234]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[138297-138301]:SimpleName[138235-138239]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[138302-138316]:SingleVariableDeclaration[138240-138254]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[138318-138334]:SingleVariableDeclaration[138256-138272]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138336-138463]:Block[138274-138401]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[138346-138401]:IfStatement[138284-138339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[138365-138401]:Block[138303-138339]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[138379-138391]:ReturnStatement[138317-138329]"
  }, {
    "left" : "return join(array, separator, 0, array.length);",
    "right" : "return join(array, separator, 0, array.length);",
    "info" : "ReturnStatement[138410-138457]:ReturnStatement[138348-138395]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[139763-139769]:Modifier[139701-139707]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[139770-139776]:Modifier[139708-139714]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[139777-139783]:SimpleType[139715-139721]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[139784-139788]:SimpleName[139722-139726]"
  }, {
    "left" : "Object[] array",
    "right" : "Object[] array",
    "info" : "SingleVariableDeclaration[139789-139803]:SingleVariableDeclaration[139727-139741]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[139805-139821]:SingleVariableDeclaration[139743-139759]"
  }, {
    "left" : "int startIndex",
    "right" : "int startIndex",
    "info" : "SingleVariableDeclaration[139823-139837]:SingleVariableDeclaration[139761-139775]"
  }, {
    "left" : "int endIndex",
    "right" : "int endIndex",
    "info" : "SingleVariableDeclaration[139839-139851]:SingleVariableDeclaration[139777-139789]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[139853-140696]:Block[139791-140555]"
  }, {
    "left" : "if (array == null)",
    "right" : "if (array == null)",
    "info" : "IfStatement[139863-139918]:IfStatement[139801-139856]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[139882-139918]:Block[139820-139856]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[139896-139908]:ReturnStatement[139834-139846]"
  }, {
    "left" : "if (separator == null)",
    "right" : "if (separator == null)",
    "info" : "IfStatement[139927-139992]:IfStatement[139865-139930]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[139950-139992]:Block[139888-139930]"
  }, {
    "left" : "separator = EMPTY;",
    "right" : "separator = EMPTY;",
    "info" : "ExpressionStatement[139964-139982]:ExpressionStatement[139902-139920]"
  }, {
    "left" : "int noOfItems = (endIndex - startIndex);",
    "right" : "int noOfItems = (endIndex - startIndex);",
    "info" : "VariableDeclarationStatement[140170-140210]:VariableDeclarationStatement[140108-140148]"
  }, {
    "left" : "if (noOfItems <= 0)",
    "right" : "if (noOfItems <= 0)",
    "info" : "IfStatement[140219-140276]:IfStatement[140157-140214]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140239-140276]:Block[140177-140214]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[140253-140266]:ReturnStatement[140191-140204]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());",
    "right" : "StringBuilder buf = new StringBuilder(noOfItems * 16);",
    "info" : "VariableDeclarationStatement[140286-140419]:VariableDeclarationStatement[140224-140278]"
  }, {
    "left" : "array",
    "right" : "noOfItems",
    "info" : "SimpleName[140325-140330]:SimpleName[140262-140271]"
  }, {
    "left" : "==",
    "right" : "*",
    "info" : "INFIX_EXPRESSION_OPERATOR[140343-140345]:INFIX_EXPRESSION_OPERATOR[140272-140273]"
  }, {
    "left" : "16",
    "right" : "16",
    "info" : "NumberLiteral[140353-140355]:NumberLiteral[140274-140276]"
  }, {
    "left" : "for (int i = startIndex; i < endIndex; i++)",
    "right" : "for (int i = startIndex; i < endIndex; i++)",
    "info" : "ForStatement[140429-140659]:ForStatement[140288-140518]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140473-140659]:Block[140332-140518]"
  }, {
    "left" : "if (i > startIndex)",
    "right" : "if (i > startIndex)",
    "info" : "IfStatement[140487-140561]:IfStatement[140346-140420]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140507-140561]:Block[140366-140420]"
  }, {
    "left" : "buf.append(separator);",
    "right" : "buf.append(separator);",
    "info" : "ExpressionStatement[140525-140547]:ExpressionStatement[140384-140406]"
  }, {
    "left" : "if (array[i] != null)",
    "right" : "if (array[i] != null)",
    "info" : "IfStatement[140574-140649]:IfStatement[140433-140508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[140596-140649]:Block[140455-140508]"
  }, {
    "left" : "buf.append(array[i]);",
    "right" : "buf.append(array[i]);",
    "info" : "ExpressionStatement[140614-140635]:ExpressionStatement[140473-140494]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[140668-140690]:ReturnStatement[140527-140549]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[141318-141324]:Modifier[141177-141183]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[141325-141331]:Modifier[141184-141190]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[141332-141338]:SimpleType[141191-141197]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[141339-141343]:SimpleName[141198-141202]"
  }, {
    "left" : "Iterator<?> iterator",
    "right" : "Iterator<?> iterator",
    "info" : "SingleVariableDeclaration[141344-141364]:SingleVariableDeclaration[141203-141223]"
  }, {
    "left" : "char separator",
    "right" : "char separator",
    "info" : "SingleVariableDeclaration[141366-141380]:SingleVariableDeclaration[141225-141239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141382-142164]:Block[141241-142023]"
  }, {
    "left" : "if (iterator == null)",
    "right" : "if (iterator == null)",
    "info" : "IfStatement[141464-141522]:IfStatement[141323-141381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141486-141522]:Block[141345-141381]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[141500-141512]:ReturnStatement[141359-141371]"
  }, {
    "left" : "if (!iterator.hasNext())",
    "right" : "if (!iterator.hasNext())",
    "info" : "IfStatement[141531-141593]:IfStatement[141390-141452]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141556-141593]:Block[141415-141452]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[141570-141583]:ReturnStatement[141429-141442]"
  }, {
    "left" : "Object first = iterator.next();",
    "right" : "Object first = iterator.next();",
    "info" : "VariableDeclarationStatement[141602-141633]:VariableDeclarationStatement[141461-141492]"
  }, {
    "left" : "if (!iterator.hasNext())",
    "right" : "if (!iterator.hasNext())",
    "info" : "IfStatement[141642-141726]:IfStatement[141501-141585]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141667-141726]:Block[141526-141585]"
  }, {
    "left" : "return ObjectUtils.toString(first);",
    "right" : "return ObjectUtils.toString(first);",
    "info" : "ReturnStatement[141681-141716]:ReturnStatement[141540-141575]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder(256);",
    "right" : "StringBuilder buf = new StringBuilder(256);",
    "info" : "VariableDeclarationStatement[141768-141811]:VariableDeclarationStatement[141627-141670]"
  }, {
    "left" : "if (first != null)",
    "right" : "if (first != null)",
    "info" : "IfStatement[141862-141923]:IfStatement[141721-141782]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141881-141923]:Block[141740-141782]"
  }, {
    "left" : "buf.append(first);",
    "right" : "buf.append(first);",
    "info" : "ExpressionStatement[141895-141913]:ExpressionStatement[141754-141772]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[141933-142126]:WhileStatement[141792-141985]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[141960-142126]:Block[141819-141985]"
  }, {
    "left" : "buf.append(separator);",
    "right" : "buf.append(separator);",
    "info" : "ExpressionStatement[141974-141996]:ExpressionStatement[141833-141855]"
  }, {
    "left" : "Object obj = iterator.next();",
    "right" : "Object obj = iterator.next();",
    "info" : "VariableDeclarationStatement[142009-142038]:VariableDeclarationStatement[141868-141897]"
  }, {
    "left" : "if (obj != null)",
    "right" : "if (obj != null)",
    "info" : "IfStatement[142051-142116]:IfStatement[141910-141975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142068-142116]:Block[141927-141975]"
  }, {
    "left" : "buf.append(obj);",
    "right" : "buf.append(obj);",
    "info" : "ExpressionStatement[142086-142102]:ExpressionStatement[141945-141961]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[142136-142158]:ReturnStatement[141995-142017]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[142767-142773]:Modifier[142626-142632]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[142774-142780]:Modifier[142633-142639]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[142781-142787]:SimpleType[142640-142646]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[142788-142792]:SimpleName[142647-142651]"
  }, {
    "left" : "Iterator<?> iterator",
    "right" : "Iterator<?> iterator",
    "info" : "SingleVariableDeclaration[142793-142813]:SingleVariableDeclaration[142652-142672]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[142815-142831]:SingleVariableDeclaration[142674-142690]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142833-143669]:Block[142692-143528]"
  }, {
    "left" : "if (iterator == null)",
    "right" : "if (iterator == null)",
    "info" : "IfStatement[142915-142973]:IfStatement[142774-142832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[142937-142973]:Block[142796-142832]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[142951-142963]:ReturnStatement[142810-142822]"
  }, {
    "left" : "if (!iterator.hasNext())",
    "right" : "if (!iterator.hasNext())",
    "info" : "IfStatement[142982-143044]:IfStatement[142841-142903]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143007-143044]:Block[142866-142903]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[143021-143034]:ReturnStatement[142880-142893]"
  }, {
    "left" : "Object first = iterator.next();",
    "right" : "Object first = iterator.next();",
    "info" : "VariableDeclarationStatement[143053-143084]:VariableDeclarationStatement[142912-142943]"
  }, {
    "left" : "if (!iterator.hasNext())",
    "right" : "if (!iterator.hasNext())",
    "info" : "IfStatement[143093-143177]:IfStatement[142952-143036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143118-143177]:Block[142977-143036]"
  }, {
    "left" : "return ObjectUtils.toString(first);",
    "right" : "return ObjectUtils.toString(first);",
    "info" : "ReturnStatement[143132-143167]:ReturnStatement[142991-143026]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder(256);",
    "right" : "StringBuilder buf = new StringBuilder(256);",
    "info" : "VariableDeclarationStatement[143219-143262]:VariableDeclarationStatement[143078-143121]"
  }, {
    "left" : "if (first != null)",
    "right" : "if (first != null)",
    "info" : "IfStatement[143313-143374]:IfStatement[143172-143233]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143332-143374]:Block[143191-143233]"
  }, {
    "left" : "buf.append(first);",
    "right" : "buf.append(first);",
    "info" : "ExpressionStatement[143346-143364]:ExpressionStatement[143205-143223]"
  }, {
    "left" : "while (iterator.hasNext())",
    "right" : "while (iterator.hasNext())",
    "info" : "WhileStatement[143384-143632]:WhileStatement[143243-143491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143411-143632]:Block[143270-143491]"
  }, {
    "left" : "if (separator != null)",
    "right" : "if (separator != null)",
    "info" : "IfStatement[143425-143502]:IfStatement[143284-143361]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143448-143502]:Block[143307-143361]"
  }, {
    "left" : "buf.append(separator);",
    "right" : "buf.append(separator);",
    "info" : "ExpressionStatement[143466-143488]:ExpressionStatement[143325-143347]"
  }, {
    "left" : "Object obj = iterator.next();",
    "right" : "Object obj = iterator.next();",
    "info" : "VariableDeclarationStatement[143515-143544]:VariableDeclarationStatement[143374-143403]"
  }, {
    "left" : "if (obj != null)",
    "right" : "if (obj != null)",
    "info" : "IfStatement[143557-143622]:IfStatement[143416-143481]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[143574-143622]:Block[143433-143481]"
  }, {
    "left" : "buf.append(obj);",
    "right" : "buf.append(obj);",
    "info" : "ExpressionStatement[143592-143608]:ExpressionStatement[143451-143467]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[143641-143663]:ReturnStatement[143500-143522]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[144302-144308]:Modifier[144161-144167]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[144309-144315]:Modifier[144168-144174]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[144316-144322]:SimpleType[144175-144181]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[144323-144327]:SimpleName[144182-144186]"
  }, {
    "left" : "Iterable<?> iterable",
    "right" : "Iterable<?> iterable",
    "info" : "SingleVariableDeclaration[144328-144348]:SingleVariableDeclaration[144187-144207]"
  }, {
    "left" : "char separator",
    "right" : "char separator",
    "info" : "SingleVariableDeclaration[144350-144364]:SingleVariableDeclaration[144209-144223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144366-144493]:Block[144225-144352]"
  }, {
    "left" : "if (iterable == null)",
    "right" : "if (iterable == null)",
    "info" : "IfStatement[144376-144434]:IfStatement[144235-144293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[144398-144434]:Block[144257-144293]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[144412-144424]:ReturnStatement[144271-144283]"
  }, {
    "left" : "return join(iterable.iterator(), separator);",
    "right" : "return join(iterable.iterator(), separator);",
    "info" : "ReturnStatement[144443-144487]:ReturnStatement[144302-144346]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[145125-145131]:Modifier[144984-144990]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[145132-145138]:Modifier[144991-144997]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[145139-145145]:SimpleType[144998-145004]"
  }, {
    "left" : "join",
    "right" : "join",
    "info" : "SimpleName[145146-145150]:SimpleName[145005-145009]"
  }, {
    "left" : "Iterable<?> iterable",
    "right" : "Iterable<?> iterable",
    "info" : "SingleVariableDeclaration[145151-145171]:SingleVariableDeclaration[145010-145030]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[145173-145189]:SingleVariableDeclaration[145032-145048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145191-145318]:Block[145050-145177]"
  }, {
    "left" : "if (iterable == null)",
    "right" : "if (iterable == null)",
    "info" : "IfStatement[145201-145259]:IfStatement[145060-145118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[145223-145259]:Block[145082-145118]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[145237-145249]:ReturnStatement[145096-145108]"
  }, {
    "left" : "return join(iterable.iterator(), separator);",
    "right" : "return join(iterable.iterator(), separator);",
    "info" : "ReturnStatement[145268-145312]:ReturnStatement[145127-145171]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[145962-145968]:Modifier[145821-145827]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[145969-145975]:Modifier[145828-145834]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[145976-145982]:SimpleType[145835-145841]"
  }, {
    "left" : "deleteWhitespace",
    "right" : "deleteWhitespace",
    "info" : "SimpleName[145983-145999]:SimpleName[145842-145858]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[146000-146010]:SingleVariableDeclaration[145859-145869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146012-146440]:Block[145871-146299]"
  }, {
    "left" : "if (isEmpty(str))",
    "right" : "if (isEmpty(str))",
    "info" : "IfStatement[146022-146075]:IfStatement[145881-145934]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146040-146075]:Block[145899-145934]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[146054-146065]:ReturnStatement[145913-145924]"
  }, {
    "left" : "int sz = str.length();",
    "right" : "int sz = str.length();",
    "info" : "VariableDeclarationStatement[146084-146106]:VariableDeclarationStatement[145943-145965]"
  }, {
    "left" : "char[] chs = new char[sz];",
    "right" : "char[] chs = new char[sz];",
    "info" : "VariableDeclarationStatement[146115-146141]:VariableDeclarationStatement[145974-146000]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[146150-146164]:VariableDeclarationStatement[146009-146023]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[146173-146331]:ForStatement[146032-146190]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146202-146331]:Block[146061-146190]"
  }, {
    "left" : "if (!Character.isWhitespace(str.charAt(i)))",
    "right" : "if (!Character.isWhitespace(str.charAt(i)))",
    "info" : "IfStatement[146216-146321]:IfStatement[146075-146180]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146260-146321]:Block[146119-146180]"
  }, {
    "left" : "chs[count++] = str.charAt(i);",
    "right" : "chs[count++] = str.charAt(i);",
    "info" : "ExpressionStatement[146278-146307]:ExpressionStatement[146137-146166]"
  }, {
    "left" : "if (count == sz)",
    "right" : "if (count == sz)",
    "info" : "IfStatement[146340-146392]:IfStatement[146199-146251]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[146357-146392]:Block[146216-146251]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[146371-146382]:ReturnStatement[146230-146241]"
  }, {
    "left" : "return new String(chs, 0, count);",
    "right" : "return new String(chs, 0, count);",
    "info" : "ReturnStatement[146401-146434]:ReturnStatement[146260-146293]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[147615-147621]:Modifier[147474-147480]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[147622-147628]:Modifier[147481-147487]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[147629-147635]:SimpleType[147488-147494]"
  }, {
    "left" : "removeStart",
    "right" : "removeStart",
    "info" : "SimpleName[147636-147647]:SimpleName[147495-147506]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[147648-147658]:SingleVariableDeclaration[147507-147517]"
  }, {
    "left" : "String remove",
    "right" : "String remove",
    "info" : "SingleVariableDeclaration[147660-147673]:SingleVariableDeclaration[147519-147532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147675-147881]:Block[147534-147740]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(remove))",
    "right" : "if (isEmpty(str) || isEmpty(remove))",
    "info" : "IfStatement[147685-147757]:IfStatement[147544-147616]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147722-147757]:Block[147581-147616]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[147736-147747]:ReturnStatement[147595-147606]"
  }, {
    "left" : "if (str.startsWith(remove))",
    "right" : "if (str.startsWith(remove))",
    "info" : "IfStatement[147766-147855]:IfStatement[147625-147714]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[147793-147855]:Block[147652-147714]"
  }, {
    "left" : "return str.substring(remove.length());",
    "right" : "return str.substring(remove.length());",
    "info" : "ReturnStatement[147807-147845]:ReturnStatement[147666-147704]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[147864-147875]:ReturnStatement[147723-147734]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[149152-149158]:Modifier[149011-149017]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[149159-149165]:Modifier[149018-149024]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[149166-149172]:SimpleType[149025-149031]"
  }, {
    "left" : "removeStartIgnoreCase",
    "right" : "removeStartIgnoreCase",
    "info" : "SimpleName[149173-149194]:SimpleName[149032-149053]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[149195-149205]:SingleVariableDeclaration[149054-149064]"
  }, {
    "left" : "String remove",
    "right" : "String remove",
    "info" : "SingleVariableDeclaration[149207-149220]:SingleVariableDeclaration[149066-149079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[149222-149440]:Block[149081-149299]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(remove))",
    "right" : "if (isEmpty(str) || isEmpty(remove))",
    "info" : "IfStatement[149232-149304]:IfStatement[149091-149163]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[149269-149304]:Block[149128-149163]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[149283-149294]:ReturnStatement[149142-149153]"
  }, {
    "left" : "if (startsWithIgnoreCase(str, remove))",
    "right" : "if (startsWithIgnoreCase(str, remove))",
    "info" : "IfStatement[149313-149414]:IfStatement[149172-149273]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[149352-149414]:Block[149211-149273]"
  }, {
    "left" : "return str.substring(remove.length());",
    "right" : "return str.substring(remove.length());",
    "info" : "ReturnStatement[149366-149404]:ReturnStatement[149225-149263]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[149423-149434]:ReturnStatement[149282-149293]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[150508-150514]:Modifier[150367-150373]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[150515-150521]:Modifier[150374-150380]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[150522-150528]:SimpleType[150381-150387]"
  }, {
    "left" : "removeEnd",
    "right" : "removeEnd",
    "info" : "SimpleName[150529-150538]:SimpleName[150388-150397]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[150539-150549]:SingleVariableDeclaration[150398-150408]"
  }, {
    "left" : "String remove",
    "right" : "String remove",
    "info" : "SingleVariableDeclaration[150551-150564]:SingleVariableDeclaration[150410-150423]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150566-150789]:Block[150425-150648]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(remove))",
    "right" : "if (isEmpty(str) || isEmpty(remove))",
    "info" : "IfStatement[150576-150648]:IfStatement[150435-150507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150613-150648]:Block[150472-150507]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[150627-150638]:ReturnStatement[150486-150497]"
  }, {
    "left" : "if (str.endsWith(remove))",
    "right" : "if (str.endsWith(remove))",
    "info" : "IfStatement[150657-150763]:IfStatement[150516-150622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[150683-150763]:Block[150542-150622]"
  }, {
    "left" : "return str.substring(0, str.length() - remove.length());",
    "right" : "return str.substring(0, str.length() - remove.length());",
    "info" : "ReturnStatement[150697-150753]:ReturnStatement[150556-150612]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[150772-150783]:ReturnStatement[150631-150642]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[152123-152129]:Modifier[151982-151988]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[152130-152136]:Modifier[151989-151995]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[152137-152143]:SimpleType[151996-152002]"
  }, {
    "left" : "removeEndIgnoreCase",
    "right" : "removeEndIgnoreCase",
    "info" : "SimpleName[152144-152163]:SimpleName[152003-152022]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[152164-152174]:SingleVariableDeclaration[152023-152033]"
  }, {
    "left" : "String remove",
    "right" : "String remove",
    "info" : "SingleVariableDeclaration[152176-152189]:SingleVariableDeclaration[152035-152048]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152191-152425]:Block[152050-152284]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(remove))",
    "right" : "if (isEmpty(str) || isEmpty(remove))",
    "info" : "IfStatement[152201-152273]:IfStatement[152060-152132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152238-152273]:Block[152097-152132]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[152252-152263]:ReturnStatement[152111-152122]"
  }, {
    "left" : "if (endsWithIgnoreCase(str, remove))",
    "right" : "if (endsWithIgnoreCase(str, remove))",
    "info" : "IfStatement[152282-152399]:IfStatement[152141-152258]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[152319-152399]:Block[152178-152258]"
  }, {
    "left" : "return str.substring(0, str.length() - remove.length());",
    "right" : "return str.substring(0, str.length() - remove.length());",
    "info" : "ReturnStatement[152333-152389]:ReturnStatement[152192-152248]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[152408-152419]:ReturnStatement[152267-152278]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[153390-153396]:Modifier[153249-153255]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[153397-153403]:Modifier[153256-153262]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[153404-153410]:SimpleType[153263-153269]"
  }, {
    "left" : "remove",
    "right" : "remove",
    "info" : "SimpleName[153411-153417]:SimpleName[153270-153276]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[153418-153428]:SingleVariableDeclaration[153277-153287]"
  }, {
    "left" : "String remove",
    "right" : "String remove",
    "info" : "SingleVariableDeclaration[153430-153443]:SingleVariableDeclaration[153289-153302]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[153445-153581]:Block[153304-153440]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(remove))",
    "right" : "if (isEmpty(str) || isEmpty(remove))",
    "info" : "IfStatement[153455-153527]:IfStatement[153314-153386]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[153492-153527]:Block[153351-153386]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[153506-153517]:ReturnStatement[153365-153376]"
  }, {
    "left" : "return replace(str, remove, EMPTY, -1);",
    "right" : "return replace(str, remove, EMPTY, -1);",
    "info" : "ReturnStatement[153536-153575]:ReturnStatement[153395-153434]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[154315-154321]:Modifier[154174-154180]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[154322-154328]:Modifier[154181-154187]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[154329-154335]:SimpleType[154188-154194]"
  }, {
    "left" : "remove",
    "right" : "remove",
    "info" : "SimpleName[154336-154342]:SimpleName[154195-154201]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[154343-154353]:SingleVariableDeclaration[154202-154212]"
  }, {
    "left" : "char remove",
    "right" : "char remove",
    "info" : "SingleVariableDeclaration[154355-154366]:SingleVariableDeclaration[154214-154225]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154368-154736]:Block[154227-154595]"
  }, {
    "left" : "if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND)",
    "right" : "if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND)",
    "info" : "IfStatement[154378-154473]:IfStatement[154237-154332]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154438-154473]:Block[154297-154332]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[154452-154463]:ReturnStatement[154311-154322]"
  }, {
    "left" : "char[] chars = str.toCharArray();",
    "right" : "char[] chars = str.toCharArray();",
    "info" : "VariableDeclarationStatement[154482-154515]:VariableDeclarationStatement[154341-154374]"
  }, {
    "left" : "int pos = 0;",
    "right" : "int pos = 0;",
    "info" : "VariableDeclarationStatement[154524-154536]:VariableDeclarationStatement[154383-154395]"
  }, {
    "left" : "for (int i = 0; i < chars.length; i++)",
    "right" : "for (int i = 0; i < chars.length; i++)",
    "info" : "ForStatement[154545-154688]:ForStatement[154404-154547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154584-154688]:Block[154443-154547]"
  }, {
    "left" : "if (chars[i] != remove)",
    "right" : "if (chars[i] != remove)",
    "info" : "IfStatement[154598-154678]:IfStatement[154457-154537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[154622-154678]:Block[154481-154537]"
  }, {
    "left" : "chars[pos++] = chars[i];",
    "right" : "chars[pos++] = chars[i];",
    "info" : "ExpressionStatement[154640-154664]:ExpressionStatement[154499-154523]"
  }, {
    "left" : "return new String(chars, 0, pos);",
    "right" : "return new String(chars, 0, pos);",
    "info" : "ReturnStatement[154697-154730]:ReturnStatement[154556-154589]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[155894-155900]:Modifier[155753-155759]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[155901-155907]:Modifier[155760-155766]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[155908-155914]:SimpleType[155767-155773]"
  }, {
    "left" : "replaceOnce",
    "right" : "replaceOnce",
    "info" : "SimpleName[155915-155926]:SimpleName[155774-155785]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[155927-155938]:SingleVariableDeclaration[155786-155797]"
  }, {
    "left" : "String searchString",
    "right" : "String searchString",
    "info" : "SingleVariableDeclaration[155940-155959]:SingleVariableDeclaration[155799-155818]"
  }, {
    "left" : "String replacement",
    "right" : "String replacement",
    "info" : "SingleVariableDeclaration[155961-155979]:SingleVariableDeclaration[155820-155838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[155981-156048]:Block[155840-155907]"
  }, {
    "left" : "return replace(text, searchString, replacement, 1);",
    "right" : "return replace(text, searchString, replacement, 1);",
    "info" : "ReturnStatement[155991-156042]:ReturnStatement[155850-155901]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[157073-157079]:Modifier[156932-156938]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[157080-157086]:Modifier[156939-156945]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[157087-157093]:SimpleType[156946-156952]"
  }, {
    "left" : "replace",
    "right" : "replace",
    "info" : "SimpleName[157094-157101]:SimpleName[156953-156960]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[157102-157113]:SingleVariableDeclaration[156961-156972]"
  }, {
    "left" : "String searchString",
    "right" : "String searchString",
    "info" : "SingleVariableDeclaration[157115-157134]:SingleVariableDeclaration[156974-156993]"
  }, {
    "left" : "String replacement",
    "right" : "String replacement",
    "info" : "SingleVariableDeclaration[157136-157154]:SingleVariableDeclaration[156995-157013]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[157156-157224]:Block[157015-157083]"
  }, {
    "left" : "return replace(text, searchString, replacement, -1);",
    "right" : "return replace(text, searchString, replacement, -1);",
    "info" : "ReturnStatement[157166-157218]:ReturnStatement[157025-157077]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[158582-158588]:Modifier[158441-158447]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[158589-158595]:Modifier[158448-158454]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[158596-158602]:SimpleType[158455-158461]"
  }, {
    "left" : "replace",
    "right" : "replace",
    "info" : "SimpleName[158603-158610]:SimpleName[158462-158469]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[158611-158622]:SingleVariableDeclaration[158470-158481]"
  }, {
    "left" : "String searchString",
    "right" : "String searchString",
    "info" : "SingleVariableDeclaration[158624-158643]:SingleVariableDeclaration[158483-158502]"
  }, {
    "left" : "String replacement",
    "right" : "String replacement",
    "info" : "SingleVariableDeclaration[158645-158663]:SingleVariableDeclaration[158504-158522]"
  }, {
    "left" : "int max",
    "right" : "int max",
    "info" : "SingleVariableDeclaration[158665-158672]:SingleVariableDeclaration[158524-158531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158674-159598]:Block[158533-159457]"
  }, {
    "left" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
    "right" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
    "info" : "IfStatement[158684-158799]:IfStatement[158543-158658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158763-158799]:Block[158622-158658]"
  }, {
    "left" : "return text;",
    "right" : "return text;",
    "info" : "ReturnStatement[158777-158789]:ReturnStatement[158636-158648]"
  }, {
    "left" : "int start = 0;",
    "right" : "int start = 0;",
    "info" : "VariableDeclarationStatement[158808-158822]:VariableDeclarationStatement[158667-158681]"
  }, {
    "left" : "int end = text.indexOf(searchString, start);",
    "right" : "int end = text.indexOf(searchString, start);",
    "info" : "VariableDeclarationStatement[158831-158875]:VariableDeclarationStatement[158690-158734]"
  }, {
    "left" : "if (end == INDEX_NOT_FOUND)",
    "right" : "if (end == INDEX_NOT_FOUND)",
    "info" : "IfStatement[158884-158948]:IfStatement[158743-158807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[158912-158948]:Block[158771-158807]"
  }, {
    "left" : "return text;",
    "right" : "return text;",
    "info" : "ReturnStatement[158926-158938]:ReturnStatement[158785-158797]"
  }, {
    "left" : "int replLength = searchString.length();",
    "right" : "int replLength = searchString.length();",
    "info" : "VariableDeclarationStatement[158957-158996]:VariableDeclarationStatement[158816-158855]"
  }, {
    "left" : "int increase = replacement.length() - replLength;",
    "right" : "int increase = replacement.length() - replLength;",
    "info" : "VariableDeclarationStatement[159005-159054]:VariableDeclarationStatement[158864-158913]"
  }, {
    "left" : "increase = (increase < 0 ? 0 : increase);",
    "right" : "increase = (increase < 0 ? 0 : increase);",
    "info" : "ExpressionStatement[159063-159104]:ExpressionStatement[158922-158963]"
  }, {
    "left" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
    "right" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
    "info" : "ExpressionStatement[159113-159164]:ExpressionStatement[158972-159023]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
    "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
    "info" : "VariableDeclarationStatement[159173-159237]:VariableDeclarationStatement[159032-159096]"
  }, {
    "left" : "while (end != INDEX_NOT_FOUND)",
    "right" : "while (end != INDEX_NOT_FOUND)",
    "info" : "WhileStatement[159246-159518]:WhileStatement[159105-159377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159277-159518]:Block[159136-159377]"
  }, {
    "left" : "buf.append(text.substring(start, end)).append(replacement);",
    "right" : "buf.append(text.substring(start, end)).append(replacement);",
    "info" : "ExpressionStatement[159291-159350]:ExpressionStatement[159150-159209]"
  }, {
    "left" : "start = end + replLength;",
    "right" : "start = end + replLength;",
    "info" : "ExpressionStatement[159363-159388]:ExpressionStatement[159222-159247]"
  }, {
    "left" : "if (--max == 0)",
    "right" : "if (--max == 0)",
    "info" : "IfStatement[159401-159455]:IfStatement[159260-159314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[159417-159455]:Block[159276-159314]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[159435-159441]:BreakStatement[159294-159300]"
  }, {
    "left" : "end = text.indexOf(searchString, start);",
    "right" : "end = text.indexOf(searchString, start);",
    "info" : "ExpressionStatement[159468-159508]:ExpressionStatement[159327-159367]"
  }, {
    "left" : "buf.append(text.substring(start));",
    "right" : "buf.append(text.substring(start));",
    "info" : "ExpressionStatement[159527-159561]:ExpressionStatement[159386-159420]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[159570-159592]:ReturnStatement[159429-159451]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[161364-161370]:Modifier[161223-161229]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[161371-161377]:Modifier[161230-161236]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[161378-161384]:SimpleType[161237-161243]"
  }, {
    "left" : "replaceEach",
    "right" : "replaceEach",
    "info" : "SimpleName[161385-161396]:SimpleName[161244-161255]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[161397-161408]:SingleVariableDeclaration[161256-161267]"
  }, {
    "left" : "String[] searchList",
    "right" : "String[] searchList",
    "info" : "SingleVariableDeclaration[161410-161429]:SingleVariableDeclaration[161269-161288]"
  }, {
    "left" : "String[] replacementList",
    "right" : "String[] replacementList",
    "info" : "SingleVariableDeclaration[161431-161455]:SingleVariableDeclaration[161290-161314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[161457-161537]:Block[161316-161396]"
  }, {
    "left" : "return replaceEach(text, searchList, replacementList, false, 0);",
    "right" : "return replaceEach(text, searchList, replacementList, false, 0);",
    "info" : "ReturnStatement[161467-161531]:ReturnStatement[161326-161390]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[163825-163831]:Modifier[163684-163690]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[163832-163838]:Modifier[163691-163697]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[163839-163845]:SimpleType[163698-163704]"
  }, {
    "left" : "replaceEachRepeatedly",
    "right" : "replaceEachRepeatedly",
    "info" : "SimpleName[163846-163867]:SimpleName[163705-163726]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[163868-163879]:SingleVariableDeclaration[163727-163738]"
  }, {
    "left" : "String[] searchList",
    "right" : "String[] searchList",
    "info" : "SingleVariableDeclaration[163881-163900]:SingleVariableDeclaration[163740-163759]"
  }, {
    "left" : "String[] replacementList",
    "right" : "String[] replacementList",
    "info" : "SingleVariableDeclaration[163902-163926]:SingleVariableDeclaration[163761-163785]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[163928-164207]:Block[163787-164066]"
  }, {
    "left" : "int timeToLive = searchList == null ? 0 : searchList.length;",
    "right" : "int timeToLive = searchList == null ? 0 : searchList.length;",
    "info" : "VariableDeclarationStatement[164060-164120]:VariableDeclarationStatement[163919-163979]"
  }, {
    "left" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
    "right" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
    "info" : "ReturnStatement[164129-164201]:ReturnStatement[163988-164060]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[166562-166569]:Modifier[166421-166428]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[166570-166576]:Modifier[166429-166435]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[166577-166583]:SimpleType[166436-166442]"
  }, {
    "left" : "replaceEach",
    "right" : "replaceEach",
    "info" : "SimpleName[166584-166595]:SimpleName[166443-166454]"
  }, {
    "left" : "String text",
    "right" : "String text",
    "info" : "SingleVariableDeclaration[166609-166620]:SingleVariableDeclaration[166468-166479]"
  }, {
    "left" : "String[] searchList",
    "right" : "String[] searchList",
    "info" : "SingleVariableDeclaration[166622-166641]:SingleVariableDeclaration[166481-166500]"
  }, {
    "left" : "String[] replacementList",
    "right" : "String[] replacementList",
    "info" : "SingleVariableDeclaration[166643-166667]:SingleVariableDeclaration[166502-166526]"
  }, {
    "left" : "boolean repeat",
    "right" : "boolean repeat",
    "info" : "SingleVariableDeclaration[166669-166683]:SingleVariableDeclaration[166528-166542]"
  }, {
    "left" : "int timeToLive",
    "right" : "int timeToLive",
    "info" : "SingleVariableDeclaration[166685-166699]:SingleVariableDeclaration[166544-166558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[166701-171306]:Block[166560-171165]"
  }, {
    "left" : "if (text == null || text.length() == 0 || searchList == null ||\n                searchList.length == 0 || replacementList == null || replacementList.length == 0)",
    "right" : "if (text == null || text.length() == 0 || searchList == null ||\n                searchList.length == 0 || replacementList == null || replacementList.length == 0)",
    "info" : "IfStatement[166894-167092]:IfStatement[166753-166951]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167056-167092]:Block[166915-166951]"
  }, {
    "left" : "return text;",
    "right" : "return text;",
    "info" : "ReturnStatement[167070-167082]:ReturnStatement[166929-166941]"
  }, {
    "left" : "if (timeToLive < 0)",
    "right" : "if (timeToLive < 0)",
    "info" : "IfStatement[167156-167292]:IfStatement[167015-167151]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167176-167292]:Block[167035-167151]"
  }, {
    "left" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
    "right" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
    "info" : "ThrowStatement[167190-167282]:ThrowStatement[167049-167141]"
  }, {
    "left" : "int searchLength = searchList.length;",
    "right" : "int searchLength = searchList.length;",
    "info" : "VariableDeclarationStatement[167302-167339]:VariableDeclarationStatement[167161-167198]"
  }, {
    "left" : "int replacementLength = replacementList.length;",
    "right" : "int replacementLength = replacementList.length;",
    "info" : "VariableDeclarationStatement[167348-167395]:VariableDeclarationStatement[167207-167254]"
  }, {
    "left" : "if (searchLength != replacementLength)",
    "right" : "if (searchLength != replacementLength)",
    "info" : "IfStatement[167465-167705]:IfStatement[167324-167564]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[167504-167705]:Block[167363-167564]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
    "right" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
    "info" : "ThrowStatement[167518-167695]:ThrowStatement[167377-167554]"
  }, {
    "left" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
    "right" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
    "info" : "VariableDeclarationStatement[167765-167829]:VariableDeclarationStatement[167624-167688]"
  }, {
    "left" : "int textIndex = -1;",
    "right" : "int textIndex = -1;",
    "info" : "VariableDeclarationStatement[167890-167909]:VariableDeclarationStatement[167749-167768]"
  }, {
    "left" : "int replaceIndex = -1;",
    "right" : "int replaceIndex = -1;",
    "info" : "VariableDeclarationStatement[167918-167940]:VariableDeclarationStatement[167777-167799]"
  }, {
    "left" : "int tempIndex = -1;",
    "right" : "int tempIndex = -1;",
    "info" : "VariableDeclarationStatement[167949-167968]:VariableDeclarationStatement[167808-167827]"
  }, {
    "left" : "for (int i = 0; i < searchLength; i++)",
    "right" : "for (int i = 0; i < searchLength; i++)",
    "info" : "ForStatement[168100-168741]:ForStatement[167959-168600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168139-168741]:Block[167998-168600]"
  }, {
    "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||\n                    searchList[i].length() == 0 || replacementList[i] == null)",
    "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||\n                    searchList[i].length() == 0 || replacementList[i] == null)",
    "info" : "IfStatement[168153-168334]:IfStatement[168012-168193]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168293-168334]:Block[168152-168193]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[168311-168320]:ContinueStatement[168170-168179]"
  }, {
    "left" : "tempIndex = text.indexOf(searchList[i]);",
    "right" : "tempIndex = text.indexOf(searchList[i]);",
    "info" : "ExpressionStatement[168347-168387]:ExpressionStatement[168206-168246]"
  }, {
    "left" : "if (tempIndex == -1)",
    "right" : "if (tempIndex == -1)",
    "info" : "IfStatement[168458-168731]:IfStatement[168317-168590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168479-168547]:Block[168338-168406]"
  }, {
    "left" : "noMoreMatchesForReplIndex[i] = true;",
    "right" : "noMoreMatchesForReplIndex[i] = true;",
    "info" : "ExpressionStatement[168497-168533]:ExpressionStatement[168356-168392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168553-168731]:Block[168412-168590]"
  }, {
    "left" : "if (textIndex == -1 || tempIndex < textIndex)",
    "right" : "if (textIndex == -1 || tempIndex < textIndex)",
    "info" : "IfStatement[168571-168717]:IfStatement[168430-168576]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168617-168717]:Block[168476-168576]"
  }, {
    "left" : "textIndex = tempIndex;",
    "right" : "textIndex = tempIndex;",
    "info" : "ExpressionStatement[168639-168661]:ExpressionStatement[168498-168520]"
  }, {
    "left" : "replaceIndex = i;",
    "right" : "replaceIndex = i;",
    "info" : "ExpressionStatement[168682-168699]:ExpressionStatement[168541-168558]"
  }, {
    "left" : "if (textIndex == -1)",
    "right" : "if (textIndex == -1)",
    "info" : "IfStatement[168839-168896]:IfStatement[168698-168755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[168860-168896]:Block[168719-168755]"
  }, {
    "left" : "return text;",
    "right" : "return text;",
    "info" : "ReturnStatement[168874-168886]:ReturnStatement[168733-168745]"
  }, {
    "left" : "int start = 0;",
    "right" : "int start = 0;",
    "info" : "VariableDeclarationStatement[168906-168920]:VariableDeclarationStatement[168765-168779]"
  }, {
    "left" : "int increase = 0;",
    "right" : "int increase = 0;",
    "info" : "VariableDeclarationStatement[169041-169058]:VariableDeclarationStatement[168900-168917]"
  }, {
    "left" : "for (int i = 0; i < searchList.length; i++)",
    "right" : "for (int i = 0; i < searchList.length; i++)",
    "info" : "ForStatement[169176-169528]:ForStatement[169035-169387]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169220-169528]:Block[169079-169387]"
  }, {
    "left" : "if (searchList[i] == null || replacementList[i] == null)",
    "right" : "if (searchList[i] == null || replacementList[i] == null)",
    "info" : "IfStatement[169234-169332]:IfStatement[169093-169191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169291-169332]:Block[169150-169191]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[169309-169318]:ContinueStatement[169168-169177]"
  }, {
    "left" : "int greater = replacementList[i].length() - searchList[i].length();",
    "right" : "int greater = replacementList[i].length() - searchList[i].length();",
    "info" : "VariableDeclarationStatement[169345-169412]:VariableDeclarationStatement[169204-169271]"
  }, {
    "left" : "if (greater > 0)",
    "right" : "if (greater > 0)",
    "info" : "IfStatement[169425-169518]:IfStatement[169284-169377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169442-169518]:Block[169301-169377]"
  }, {
    "left" : "increase += 3 * greater;",
    "right" : "increase += 3 * greater;",
    "info" : "ExpressionStatement[169460-169484]:ExpressionStatement[169319-169343]"
  }, {
    "left" : "increase = Math.min(increase, text.length() / 5);",
    "right" : "increase = Math.min(increase, text.length() / 5);",
    "info" : "ExpressionStatement[169606-169655]:ExpressionStatement[169465-169514]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
    "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
    "info" : "VariableDeclarationStatement[169665-169729]:VariableDeclarationStatement[169524-169588]"
  }, {
    "left" : "while (textIndex != -1)",
    "right" : "while (textIndex != -1)",
    "info" : "WhileStatement[169739-170969]:WhileStatement[169598-170828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169763-170969]:Block[169622-170828]"
  }, {
    "left" : "for (int i = start; i < textIndex; i++)",
    "right" : "for (int i = start; i < textIndex; i++)",
    "info" : "ForStatement[169778-169877]:ForStatement[169637-169736]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[169818-169877]:Block[169677-169736]"
  }, {
    "left" : "buf.append(text.charAt(i));",
    "right" : "buf.append(text.charAt(i));",
    "info" : "ExpressionStatement[169836-169863]:ExpressionStatement[169695-169722]"
  }, {
    "left" : "buf.append(replacementList[replaceIndex]);",
    "right" : "buf.append(replacementList[replaceIndex]);",
    "info" : "ExpressionStatement[169890-169932]:ExpressionStatement[169749-169791]"
  }, {
    "left" : "start = textIndex + searchList[replaceIndex].length();",
    "right" : "start = textIndex + searchList[replaceIndex].length();",
    "info" : "ExpressionStatement[169946-170000]:ExpressionStatement[169805-169859]"
  }, {
    "left" : "textIndex = -1;",
    "right" : "textIndex = -1;",
    "info" : "ExpressionStatement[170014-170029]:ExpressionStatement[169873-169888]"
  }, {
    "left" : "replaceIndex = -1;",
    "right" : "replaceIndex = -1;",
    "info" : "ExpressionStatement[170042-170060]:ExpressionStatement[169901-169919]"
  }, {
    "left" : "tempIndex = -1;",
    "right" : "tempIndex = -1;",
    "info" : "ExpressionStatement[170073-170088]:ExpressionStatement[169932-169947]"
  }, {
    "left" : "for (int i = 0; i < searchLength; i++)",
    "right" : "for (int i = 0; i < searchLength; i++)",
    "info" : "ForStatement[170202-170910]:ForStatement[170061-170769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170241-170910]:Block[170100-170769]"
  }, {
    "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||\n                        searchList[i].length() == 0 || replacementList[i] == null)",
    "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null ||\n                        searchList[i].length() == 0 || replacementList[i] == null)",
    "info" : "IfStatement[170259-170452]:IfStatement[170118-170311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170403-170452]:Block[170262-170311]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[170425-170434]:ContinueStatement[170284-170293]"
  }, {
    "left" : "tempIndex = text.indexOf(searchList[i], start);",
    "right" : "tempIndex = text.indexOf(searchList[i], start);",
    "info" : "ExpressionStatement[170469-170516]:ExpressionStatement[170328-170375]"
  }, {
    "left" : "if (tempIndex == -1)",
    "right" : "if (tempIndex == -1)",
    "info" : "IfStatement[170595-170896]:IfStatement[170454-170755]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170616-170692]:Block[170475-170551]"
  }, {
    "left" : "noMoreMatchesForReplIndex[i] = true;",
    "right" : "noMoreMatchesForReplIndex[i] = true;",
    "info" : "ExpressionStatement[170638-170674]:ExpressionStatement[170497-170533]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170698-170896]:Block[170557-170755]"
  }, {
    "left" : "if (textIndex == -1 || tempIndex < textIndex)",
    "right" : "if (textIndex == -1 || tempIndex < textIndex)",
    "info" : "IfStatement[170720-170878]:IfStatement[170579-170737]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[170766-170878]:Block[170625-170737]"
  }, {
    "left" : "textIndex = tempIndex;",
    "right" : "textIndex = tempIndex;",
    "info" : "ExpressionStatement[170792-170814]:ExpressionStatement[170651-170673]"
  }, {
    "left" : "replaceIndex = i;",
    "right" : "replaceIndex = i;",
    "info" : "ExpressionStatement[170839-170856]:ExpressionStatement[170698-170715]"
  }, {
    "left" : "int textLength = text.length();",
    "right" : "int textLength = text.length();",
    "info" : "VariableDeclarationStatement[170978-171009]:VariableDeclarationStatement[170837-170868]"
  }, {
    "left" : "for (int i = start; i < textLength; i++)",
    "right" : "for (int i = start; i < textLength; i++)",
    "info" : "ForStatement[171018-171110]:ForStatement[170877-170969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171059-171110]:Block[170918-170969]"
  }, {
    "left" : "buf.append(text.charAt(i));",
    "right" : "buf.append(text.charAt(i));",
    "info" : "ExpressionStatement[171073-171100]:ExpressionStatement[170932-170959]"
  }, {
    "left" : "String result = buf.toString();",
    "right" : "String result = buf.toString();",
    "info" : "VariableDeclarationStatement[171119-171150]:VariableDeclarationStatement[170978-171009]"
  }, {
    "left" : "if (!repeat)",
    "right" : "if (!repeat)",
    "info" : "IfStatement[171159-171210]:IfStatement[171018-171069]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[171172-171210]:Block[171031-171069]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[171186-171200]:ReturnStatement[171045-171059]"
  }, {
    "left" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
    "right" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
    "info" : "ReturnStatement[171220-171300]:ReturnStatement[171079-171159]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[172279-172285]:Modifier[172138-172144]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[172286-172292]:Modifier[172145-172151]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[172293-172299]:SimpleType[172152-172158]"
  }, {
    "left" : "replaceChars",
    "right" : "replaceChars",
    "info" : "SimpleName[172300-172312]:SimpleName[172159-172171]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[172313-172323]:SingleVariableDeclaration[172172-172182]"
  }, {
    "left" : "char searchChar",
    "right" : "char searchChar",
    "info" : "SingleVariableDeclaration[172325-172340]:SingleVariableDeclaration[172184-172199]"
  }, {
    "left" : "char replaceChar",
    "right" : "char replaceChar",
    "info" : "SingleVariableDeclaration[172342-172358]:SingleVariableDeclaration[172201-172217]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172360-172482]:Block[172219-172341]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[172370-172423]:IfStatement[172229-172282]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[172387-172423]:Block[172246-172282]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[172401-172413]:ReturnStatement[172260-172272]"
  }, {
    "left" : "return str.replace(searchChar, replaceChar);",
    "right" : "return str.replace(searchChar, replaceChar);",
    "info" : "ReturnStatement[172432-172476]:ReturnStatement[172291-172335]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[174175-174181]:Modifier[174034-174040]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[174182-174188]:Modifier[174041-174047]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[174189-174195]:SimpleType[174048-174054]"
  }, {
    "left" : "replaceChars",
    "right" : "replaceChars",
    "info" : "SimpleName[174196-174208]:SimpleName[174055-174067]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[174209-174219]:SingleVariableDeclaration[174068-174078]"
  }, {
    "left" : "String searchChars",
    "right" : "String searchChars",
    "info" : "SingleVariableDeclaration[174221-174239]:SingleVariableDeclaration[174080-174098]"
  }, {
    "left" : "String replaceChars",
    "right" : "String replaceChars",
    "info" : "SingleVariableDeclaration[174241-174260]:SingleVariableDeclaration[174100-174119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174262-175110]:Block[174121-174969]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(searchChars))",
    "right" : "if (isEmpty(str) || isEmpty(searchChars))",
    "info" : "IfStatement[174272-174349]:IfStatement[174131-174208]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174314-174349]:Block[174173-174208]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[174328-174339]:ReturnStatement[174187-174198]"
  }, {
    "left" : "if (replaceChars == null)",
    "right" : "if (replaceChars == null)",
    "info" : "IfStatement[174358-174429]:IfStatement[174217-174288]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174384-174429]:Block[174243-174288]"
  }, {
    "left" : "replaceChars = EMPTY;",
    "right" : "replaceChars = EMPTY;",
    "info" : "ExpressionStatement[174398-174419]:ExpressionStatement[174257-174278]"
  }, {
    "left" : "boolean modified = false;",
    "right" : "boolean modified = false;",
    "info" : "VariableDeclarationStatement[174438-174463]:VariableDeclarationStatement[174297-174322]"
  }, {
    "left" : "int replaceCharsLength = replaceChars.length();",
    "right" : "int replaceCharsLength = replaceChars.length();",
    "info" : "VariableDeclarationStatement[174472-174519]:VariableDeclarationStatement[174331-174378]"
  }, {
    "left" : "int strLength = str.length();",
    "right" : "int strLength = str.length();",
    "info" : "VariableDeclarationStatement[174528-174557]:VariableDeclarationStatement[174387-174416]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder(strLength);",
    "right" : "StringBuilder buf = new StringBuilder(strLength);",
    "info" : "VariableDeclarationStatement[174566-174615]:VariableDeclarationStatement[174425-174474]"
  }, {
    "left" : "for (int i = 0; i < strLength; i++)",
    "right" : "for (int i = 0; i < strLength; i++)",
    "info" : "ForStatement[174624-175015]:ForStatement[174483-174874]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174660-175015]:Block[174519-174874]"
  }, {
    "left" : "char ch = str.charAt(i);",
    "right" : "char ch = str.charAt(i);",
    "info" : "VariableDeclarationStatement[174674-174698]:VariableDeclarationStatement[174533-174557]"
  }, {
    "left" : "int index = searchChars.indexOf(ch);",
    "right" : "int index = searchChars.indexOf(ch);",
    "info" : "VariableDeclarationStatement[174711-174747]:VariableDeclarationStatement[174570-174606]"
  }, {
    "left" : "if (index >= 0)",
    "right" : "if (index >= 0)",
    "info" : "IfStatement[174760-175005]:IfStatement[174619-174864]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174776-174952]:Block[174635-174811]"
  }, {
    "left" : "modified = true;",
    "right" : "modified = true;",
    "info" : "ExpressionStatement[174794-174810]:ExpressionStatement[174653-174669]"
  }, {
    "left" : "if (index < replaceCharsLength)",
    "right" : "if (index < replaceCharsLength)",
    "info" : "IfStatement[174827-174938]:IfStatement[174686-174797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174859-174938]:Block[174718-174797]"
  }, {
    "left" : "buf.append(replaceChars.charAt(index));",
    "right" : "buf.append(replaceChars.charAt(index));",
    "info" : "ExpressionStatement[174881-174920]:ExpressionStatement[174740-174779]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[174958-175005]:Block[174817-174864]"
  }, {
    "left" : "buf.append(ch);",
    "right" : "buf.append(ch);",
    "info" : "ExpressionStatement[174976-174991]:ExpressionStatement[174835-174850]"
  }, {
    "left" : "if (modified)",
    "right" : "if (modified)",
    "info" : "IfStatement[175024-175084]:IfStatement[174883-174943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[175038-175084]:Block[174897-174943]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[175052-175074]:ReturnStatement[174911-174933]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[175093-175104]:ReturnStatement[174952-174963]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[176611-176617]:Modifier[176470-176476]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[176618-176624]:Modifier[176477-176483]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[176625-176631]:SimpleType[176484-176490]"
  }, {
    "left" : "overlay",
    "right" : "overlay",
    "info" : "SimpleName[176632-176639]:SimpleName[176491-176498]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[176640-176650]:SingleVariableDeclaration[176499-176509]"
  }, {
    "left" : "String overlay",
    "right" : "String overlay",
    "info" : "SingleVariableDeclaration[176652-176666]:SingleVariableDeclaration[176511-176525]"
  }, {
    "left" : "int start",
    "right" : "int start",
    "info" : "SingleVariableDeclaration[176668-176677]:SingleVariableDeclaration[176527-176536]"
  }, {
    "left" : "int end",
    "right" : "int end",
    "info" : "SingleVariableDeclaration[176679-176686]:SingleVariableDeclaration[176538-176545]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176688-177421]:Block[176547-177280]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[176698-176751]:IfStatement[176557-176610]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176715-176751]:Block[176574-176610]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[176729-176741]:ReturnStatement[176588-176600]"
  }, {
    "left" : "if (overlay == null)",
    "right" : "if (overlay == null)",
    "info" : "IfStatement[176760-176821]:IfStatement[176619-176680]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176781-176821]:Block[176640-176680]"
  }, {
    "left" : "overlay = EMPTY;",
    "right" : "overlay = EMPTY;",
    "info" : "ExpressionStatement[176795-176811]:ExpressionStatement[176654-176670]"
  }, {
    "left" : "int len = str.length();",
    "right" : "int len = str.length();",
    "info" : "VariableDeclarationStatement[176830-176853]:VariableDeclarationStatement[176689-176712]"
  }, {
    "left" : "if (start < 0)",
    "right" : "if (start < 0)",
    "info" : "IfStatement[176862-176911]:IfStatement[176721-176770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176877-176911]:Block[176736-176770]"
  }, {
    "left" : "start = 0;",
    "right" : "start = 0;",
    "info" : "ExpressionStatement[176891-176901]:ExpressionStatement[176750-176760]"
  }, {
    "left" : "if (start > len)",
    "right" : "if (start > len)",
    "info" : "IfStatement[176920-176973]:IfStatement[176779-176832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176937-176973]:Block[176796-176832]"
  }, {
    "left" : "start = len;",
    "right" : "start = len;",
    "info" : "ExpressionStatement[176951-176963]:ExpressionStatement[176810-176822]"
  }, {
    "left" : "if (end < 0)",
    "right" : "if (end < 0)",
    "info" : "IfStatement[176982-177027]:IfStatement[176841-176886]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[176995-177027]:Block[176854-176886]"
  }, {
    "left" : "end = 0;",
    "right" : "end = 0;",
    "info" : "ExpressionStatement[177009-177017]:ExpressionStatement[176868-176876]"
  }, {
    "left" : "if (end > len)",
    "right" : "if (end > len)",
    "info" : "IfStatement[177036-177085]:IfStatement[176895-176944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177051-177085]:Block[176910-176944]"
  }, {
    "left" : "end = len;",
    "right" : "end = len;",
    "info" : "ExpressionStatement[177065-177075]:ExpressionStatement[176924-176934]"
  }, {
    "left" : "if (start > end)",
    "right" : "if (start > end)",
    "info" : "IfStatement[177094-177201]:IfStatement[176953-177060]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[177111-177201]:Block[176970-177060]"
  }, {
    "left" : "int temp = start;",
    "right" : "int temp = start;",
    "info" : "VariableDeclarationStatement[177125-177142]:VariableDeclarationStatement[176984-177001]"
  }, {
    "left" : "start = end;",
    "right" : "start = end;",
    "info" : "ExpressionStatement[177155-177167]:ExpressionStatement[177014-177026]"
  }, {
    "left" : "end = temp;",
    "right" : "end = temp;",
    "info" : "ExpressionStatement[177180-177191]:ExpressionStatement[177039-177050]"
  }, {
    "left" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
    "right" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
    "info" : "ReturnStatement[177210-177415]:ReturnStatement[177069-177274]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[178550-178556]:Modifier[178409-178415]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[178557-178563]:Modifier[178416-178422]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[178564-178570]:SimpleType[178423-178429]"
  }, {
    "left" : "chomp",
    "right" : "chomp",
    "info" : "SimpleName[178571-178576]:SimpleName[178430-178435]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[178577-178587]:SingleVariableDeclaration[178436-178446]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178589-179204]:Block[178448-179063]"
  }, {
    "left" : "if (isEmpty(str))",
    "right" : "if (isEmpty(str))",
    "info" : "IfStatement[178599-178652]:IfStatement[178458-178511]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178617-178652]:Block[178476-178511]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[178631-178642]:ReturnStatement[178490-178501]"
  }, {
    "left" : "if (str.length() == 1)",
    "right" : "if (str.length() == 1)",
    "info" : "IfStatement[178662-178861]:IfStatement[178521-178720]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178685-178861]:Block[178544-178720]"
  }, {
    "left" : "char ch = str.charAt(0);",
    "right" : "char ch = str.charAt(0);",
    "info" : "VariableDeclarationStatement[178699-178723]:VariableDeclarationStatement[178558-178582]"
  }, {
    "left" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
    "right" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
    "info" : "IfStatement[178736-178827]:IfStatement[178595-178686]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178782-178827]:Block[178641-178686]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[178800-178813]:ReturnStatement[178659-178672]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[178840-178851]:ReturnStatement[178699-178710]"
  }, {
    "left" : "int lastIdx = str.length() - 1;",
    "right" : "int lastIdx = str.length() - 1;",
    "info" : "VariableDeclarationStatement[178871-178902]:VariableDeclarationStatement[178730-178761]"
  }, {
    "left" : "char last = str.charAt(lastIdx);",
    "right" : "char last = str.charAt(lastIdx);",
    "info" : "VariableDeclarationStatement[178911-178943]:VariableDeclarationStatement[178770-178802]"
  }, {
    "left" : "if (last == CharUtils.LF)",
    "right" : "if (last == CharUtils.LF)",
    "info" : "IfStatement[178953-179156]:IfStatement[178812-179015]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[178979-179090]:Block[178838-178949]"
  }, {
    "left" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
    "right" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
    "info" : "IfStatement[178993-179080]:IfStatement[178852-178939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179038-179080]:Block[178897-178939]"
  }, {
    "left" : "lastIdx--;",
    "right" : "lastIdx--;",
    "info" : "ExpressionStatement[179056-179066]:ExpressionStatement[178915-178925]"
  }, {
    "left" : "if (last != CharUtils.CR)",
    "right" : "if (last != CharUtils.CR)",
    "info" : "IfStatement[179096-179156]:IfStatement[178955-179015]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[179122-179156]:Block[178981-179015]"
  }, {
    "left" : "lastIdx++;",
    "right" : "lastIdx++;",
    "info" : "ExpressionStatement[179136-179146]:ExpressionStatement[178995-179005]"
  }, {
    "left" : "return str.substring(0, lastIdx);",
    "right" : "return str.substring(0, lastIdx);",
    "info" : "ReturnStatement[179165-179198]:ReturnStatement[179024-179057]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[180325-180331]:Modifier[180184-180190]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[180332-180338]:Modifier[180191-180197]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[180339-180345]:SimpleType[180198-180204]"
  }, {
    "left" : "chomp",
    "right" : "chomp",
    "info" : "SimpleName[180346-180351]:SimpleName[180205-180210]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[180352-180362]:SingleVariableDeclaration[180211-180221]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[180364-180380]:SingleVariableDeclaration[180223-180239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180382-180613]:Block[180241-180472]"
  }, {
    "left" : "if (isEmpty(str) || separator == null)",
    "right" : "if (isEmpty(str) || separator == null)",
    "info" : "IfStatement[180392-180466]:IfStatement[180251-180325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180431-180466]:Block[180290-180325]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[180445-180456]:ReturnStatement[180304-180315]"
  }, {
    "left" : "if (str.endsWith(separator))",
    "right" : "if (str.endsWith(separator))",
    "info" : "IfStatement[180475-180587]:IfStatement[180334-180446]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[180504-180587]:Block[180363-180446]"
  }, {
    "left" : "return str.substring(0, str.length() - separator.length());",
    "right" : "return str.substring(0, str.length() - separator.length());",
    "info" : "ReturnStatement[180518-180577]:ReturnStatement[180377-180436]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[180596-180607]:ReturnStatement[180455-180466]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[181571-181577]:Modifier[181430-181436]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[181578-181584]:Modifier[181437-181443]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[181585-181591]:SimpleType[181444-181450]"
  }, {
    "left" : "chop",
    "right" : "chop",
    "info" : "SimpleName[181592-181596]:SimpleName[181451-181455]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[181597-181607]:SingleVariableDeclaration[181456-181466]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[181609-182091]:Block[181468-181950]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[181619-181672]:IfStatement[181478-181531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[181636-181672]:Block[181495-181531]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[181650-181662]:ReturnStatement[181509-181521]"
  }, {
    "left" : "int strLen = str.length();",
    "right" : "int strLen = str.length();",
    "info" : "VariableDeclarationStatement[181681-181707]:VariableDeclarationStatement[181540-181566]"
  }, {
    "left" : "if (strLen < 2)",
    "right" : "if (strLen < 2)",
    "info" : "IfStatement[181716-181769]:IfStatement[181575-181628]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[181732-181769]:Block[181591-181628]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[181746-181759]:ReturnStatement[181605-181618]"
  }, {
    "left" : "int lastIdx = strLen - 1;",
    "right" : "int lastIdx = strLen - 1;",
    "info" : "VariableDeclarationStatement[181778-181803]:VariableDeclarationStatement[181637-181662]"
  }, {
    "left" : "String ret = str.substring(0, lastIdx);",
    "right" : "String ret = str.substring(0, lastIdx);",
    "info" : "VariableDeclarationStatement[181812-181851]:VariableDeclarationStatement[181671-181710]"
  }, {
    "left" : "char last = str.charAt(lastIdx);",
    "right" : "char last = str.charAt(lastIdx);",
    "info" : "VariableDeclarationStatement[181860-181892]:VariableDeclarationStatement[181719-181751]"
  }, {
    "left" : "if (last == CharUtils.LF)",
    "right" : "if (last == CharUtils.LF)",
    "info" : "IfStatement[181901-182065]:IfStatement[181760-181924]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[181927-182065]:Block[181786-181924]"
  }, {
    "left" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
    "right" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
    "info" : "IfStatement[181941-182055]:IfStatement[181800-181914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[181986-182055]:Block[181845-181914]"
  }, {
    "left" : "return ret.substring(0, lastIdx - 1);",
    "right" : "return ret.substring(0, lastIdx - 1);",
    "info" : "ReturnStatement[182004-182041]:ReturnStatement[181863-181900]"
  }, {
    "left" : "return ret;",
    "right" : "return ret;",
    "info" : "ReturnStatement[182074-182085]:ReturnStatement[181933-181944]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[182918-182924]:Modifier[182777-182783]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[182925-182931]:Modifier[182784-182790]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[182932-182938]:SimpleType[182791-182797]"
  }, {
    "left" : "repeat",
    "right" : "repeat",
    "info" : "SimpleName[182939-182945]:SimpleName[182798-182804]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[182946-182956]:SingleVariableDeclaration[182805-182815]"
  }, {
    "left" : "int repeat",
    "right" : "int repeat",
    "info" : "SingleVariableDeclaration[182958-182968]:SingleVariableDeclaration[182817-182827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[182970-184156]:Block[182829-184015]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[183027-183080]:IfStatement[182886-182939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183044-183080]:Block[182903-182939]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[183058-183070]:ReturnStatement[182917-182929]"
  }, {
    "left" : "if (repeat <= 0)",
    "right" : "if (repeat <= 0)",
    "info" : "IfStatement[183089-183143]:IfStatement[182948-183002]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183106-183143]:Block[182965-183002]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[183120-183133]:ReturnStatement[182979-182992]"
  }, {
    "left" : "int inputLength = str.length();",
    "right" : "int inputLength = str.length();",
    "info" : "VariableDeclarationStatement[183152-183183]:VariableDeclarationStatement[183011-183042]"
  }, {
    "left" : "if (repeat == 1 || inputLength == 0)",
    "right" : "if (repeat == 1 || inputLength == 0)",
    "info" : "IfStatement[183192-183264]:IfStatement[183051-183123]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183229-183264]:Block[183088-183123]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[183243-183254]:ReturnStatement[183102-183113]"
  }, {
    "left" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
    "right" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
    "info" : "IfStatement[183273-183379]:IfStatement[183132-183238]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183318-183379]:Block[183177-183238]"
  }, {
    "left" : "return repeat(str.charAt(0), repeat);",
    "right" : "return repeat(str.charAt(0), repeat);",
    "info" : "ReturnStatement[183332-183369]:ReturnStatement[183191-183228]"
  }, {
    "left" : "int outputLength = inputLength * repeat;",
    "right" : "int outputLength = inputLength * repeat;",
    "info" : "VariableDeclarationStatement[183389-183429]:VariableDeclarationStatement[183248-183288]"
  }, {
    "left" : "switch (inputLength) {\n            case 1 :\n                return repeat(str.charAt(0), repeat);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
    "right" : "switch (inputLength) {\n            case 1 :\n                return repeat(str.charAt(0), repeat);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
    "info" : "SwitchStatement[183438-184150]:SwitchStatement[183297-184009]"
  }, {
    "left" : "case 1 :",
    "right" : "case 1 :",
    "info" : "SwitchCase[183473-183481]:SwitchCase[183332-183340]"
  }, {
    "left" : "return repeat(str.charAt(0), repeat);",
    "right" : "return repeat(str.charAt(0), repeat);",
    "info" : "ReturnStatement[183498-183535]:ReturnStatement[183357-183394]"
  }, {
    "left" : "case 2 :",
    "right" : "case 2 :",
    "info" : "SwitchCase[183548-183556]:SwitchCase[183407-183415]"
  }, {
    "left" : "char ch0 = str.charAt(0);",
    "right" : "char ch0 = str.charAt(0);",
    "info" : "VariableDeclarationStatement[183573-183598]:VariableDeclarationStatement[183432-183457]"
  }, {
    "left" : "char ch1 = str.charAt(1);",
    "right" : "char ch1 = str.charAt(1);",
    "info" : "VariableDeclarationStatement[183615-183640]:VariableDeclarationStatement[183474-183499]"
  }, {
    "left" : "char[] output2 = new char[outputLength];",
    "right" : "char[] output2 = new char[outputLength];",
    "info" : "VariableDeclarationStatement[183657-183697]:VariableDeclarationStatement[183516-183556]"
  }, {
    "left" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
    "right" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
    "info" : "ForStatement[183714-183860]:ForStatement[183573-183719]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[183761-183860]:Block[183620-183719]"
  }, {
    "left" : "output2[i] = ch0;",
    "right" : "output2[i] = ch0;",
    "info" : "ExpressionStatement[183783-183800]:ExpressionStatement[183642-183659]"
  }, {
    "left" : "output2[i + 1] = ch1;",
    "right" : "output2[i + 1] = ch1;",
    "info" : "ExpressionStatement[183821-183842]:ExpressionStatement[183680-183701]"
  }, {
    "left" : "return new String(output2);",
    "right" : "return new String(output2);",
    "info" : "ReturnStatement[183877-183904]:ReturnStatement[183736-183763]"
  }, {
    "left" : "default :",
    "right" : "default :",
    "info" : "SwitchCase[183917-183926]:SwitchCase[183776-183785]"
  }, {
    "left" : "StringBuilder buf = new StringBuilder(outputLength);",
    "right" : "StringBuilder buf = new StringBuilder(outputLength);",
    "info" : "VariableDeclarationStatement[183943-183995]:VariableDeclarationStatement[183802-183854]"
  }, {
    "left" : "for (int i = 0; i < repeat; i++)",
    "right" : "for (int i = 0; i < repeat; i++)",
    "info" : "ForStatement[184012-184101]:ForStatement[183871-183960]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[184045-184101]:Block[183904-183960]"
  }, {
    "left" : "buf.append(str);",
    "right" : "buf.append(str);",
    "info" : "ExpressionStatement[184067-184083]:ExpressionStatement[183926-183942]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[184118-184140]:ReturnStatement[183977-183999]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[184965-184971]:Modifier[184824-184830]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[184972-184978]:Modifier[184831-184837]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[184979-184985]:SimpleType[184838-184844]"
  }, {
    "left" : "repeat",
    "right" : "repeat",
    "info" : "SimpleName[184986-184992]:SimpleName[184845-184851]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[184993-185003]:SingleVariableDeclaration[184852-184862]"
  }, {
    "left" : "String separator",
    "right" : "String separator",
    "info" : "SingleVariableDeclaration[185005-185021]:SingleVariableDeclaration[184864-184880]"
  }, {
    "left" : "int repeat",
    "right" : "int repeat",
    "info" : "SingleVariableDeclaration[185023-185033]:SingleVariableDeclaration[184882-184892]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185035-185386]:Block[184894-185245]"
  }, {
    "left" : "if(str == null || separator == null)",
    "right" : "if(str == null || separator == null)",
    "info" : "IfStatement[185045-185380]:IfStatement[184904-185239]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185082-185133]:Block[184941-184992]"
  }, {
    "left" : "return repeat(str, repeat);",
    "right" : "return repeat(str, repeat);",
    "info" : "ReturnStatement[185096-185123]:ReturnStatement[184955-184982]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[185139-185380]:Block[184998-185239]"
  }, {
    "left" : "String result = repeat(str + separator, repeat);",
    "right" : "String result = repeat(str + separator, repeat);",
    "info" : "VariableDeclarationStatement[185273-185321]:VariableDeclarationStatement[185132-185180]"
  }, {
    "left" : "return removeEnd(result, separator);",
    "right" : "return removeEnd(result, separator);",
    "info" : "ReturnStatement[185334-185370]:ReturnStatement[185193-185229]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[186248-186254]:Modifier[186107-186113]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[186255-186261]:Modifier[186114-186120]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[186262-186268]:SimpleType[186121-186127]"
  }, {
    "left" : "repeat",
    "right" : "repeat",
    "info" : "SimpleName[186269-186275]:SimpleName[186128-186134]"
  }, {
    "left" : "char ch",
    "right" : "char ch",
    "info" : "SingleVariableDeclaration[186276-186283]:SingleVariableDeclaration[186135-186142]"
  }, {
    "left" : "int repeat",
    "right" : "int repeat",
    "info" : "SingleVariableDeclaration[186285-186295]:SingleVariableDeclaration[186144-186154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186297-186458]:Block[186156-186317]"
  }, {
    "left" : "char[] buf = new char[repeat];",
    "right" : "char[] buf = new char[repeat];",
    "info" : "VariableDeclarationStatement[186307-186337]:VariableDeclarationStatement[186166-186196]"
  }, {
    "left" : "for (int i = repeat - 1; i >= 0; i--)",
    "right" : "for (int i = repeat - 1; i >= 0; i--)",
    "info" : "ForStatement[186346-186420]:ForStatement[186205-186279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[186384-186420]:Block[186243-186279]"
  }, {
    "left" : "buf[i] = ch;",
    "right" : "buf[i] = ch;",
    "info" : "ExpressionStatement[186398-186410]:ExpressionStatement[186257-186269]"
  }, {
    "left" : "return new String(buf);",
    "right" : "return new String(buf);",
    "info" : "ReturnStatement[186429-186452]:ReturnStatement[186288-186311]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[187144-187150]:Modifier[187003-187009]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[187151-187157]:Modifier[187010-187016]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[187158-187164]:SimpleType[187017-187023]"
  }, {
    "left" : "rightPad",
    "right" : "rightPad",
    "info" : "SimpleName[187165-187173]:SimpleName[187024-187032]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[187174-187184]:SingleVariableDeclaration[187033-187043]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[187186-187194]:SingleVariableDeclaration[187045-187053]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[187196-187244]:Block[187055-187103]"
  }, {
    "left" : "return rightPad(str, size, ' ');",
    "right" : "return rightPad(str, size, ' ');",
    "info" : "ReturnStatement[187206-187238]:ReturnStatement[187065-187097]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[188036-188042]:Modifier[187895-187901]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[188043-188049]:Modifier[187902-187908]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[188050-188056]:SimpleType[187909-187915]"
  }, {
    "left" : "rightPad",
    "right" : "rightPad",
    "info" : "SimpleName[188057-188065]:SimpleName[187916-187924]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[188066-188076]:SingleVariableDeclaration[187925-187935]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[188078-188086]:SingleVariableDeclaration[187937-187945]"
  }, {
    "left" : "char padChar",
    "right" : "char padChar",
    "info" : "SingleVariableDeclaration[188088-188100]:SingleVariableDeclaration[187947-187959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188102-188468]:Block[187961-188327]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[188112-188165]:IfStatement[187971-188024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188129-188165]:Block[187988-188024]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[188143-188155]:ReturnStatement[188002-188014]"
  }, {
    "left" : "int pads = size - str.length();",
    "right" : "int pads = size - str.length();",
    "info" : "VariableDeclarationStatement[188174-188205]:VariableDeclarationStatement[188033-188064]"
  }, {
    "left" : "if (pads <= 0)",
    "right" : "if (pads <= 0)",
    "info" : "IfStatement[188214-188305]:IfStatement[188073-188164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188229-188305]:Block[188088-188164]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[188243-188254]:ReturnStatement[188102-188113]"
  }, {
    "left" : "if (pads > PAD_LIMIT)",
    "right" : "if (pads > PAD_LIMIT)",
    "info" : "IfStatement[188314-188412]:IfStatement[188173-188271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[188336-188412]:Block[188195-188271]"
  }, {
    "left" : "return rightPad(str, size, String.valueOf(padChar));",
    "right" : "return rightPad(str, size, String.valueOf(padChar));",
    "info" : "ReturnStatement[188350-188402]:ReturnStatement[188209-188261]"
  }, {
    "left" : "return str.concat(repeat(padChar, pads));",
    "right" : "return str.concat(repeat(padChar, pads));",
    "info" : "ReturnStatement[188421-188462]:ReturnStatement[188280-188321]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[189448-189454]:Modifier[189307-189313]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[189455-189461]:Modifier[189314-189320]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[189462-189468]:SimpleType[189321-189327]"
  }, {
    "left" : "rightPad",
    "right" : "rightPad",
    "info" : "SimpleName[189469-189477]:SimpleName[189328-189336]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[189478-189488]:SingleVariableDeclaration[189337-189347]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[189490-189498]:SingleVariableDeclaration[189349-189357]"
  }, {
    "left" : "String padStr",
    "right" : "String padStr",
    "info" : "SingleVariableDeclaration[189500-189513]:SingleVariableDeclaration[189359-189372]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189515-190424]:Block[189374-190283]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[189525-189578]:IfStatement[189384-189437]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189542-189578]:Block[189401-189437]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[189556-189568]:ReturnStatement[189415-189427]"
  }, {
    "left" : "if (isEmpty(padStr))",
    "right" : "if (isEmpty(padStr))",
    "info" : "IfStatement[189587-189645]:IfStatement[189446-189504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189608-189645]:Block[189467-189504]"
  }, {
    "left" : "padStr = \" \";",
    "right" : "padStr = \" \";",
    "info" : "ExpressionStatement[189622-189635]:ExpressionStatement[189481-189494]"
  }, {
    "left" : "int padLen = padStr.length();",
    "right" : "int padLen = padStr.length();",
    "info" : "VariableDeclarationStatement[189654-189683]:VariableDeclarationStatement[189513-189542]"
  }, {
    "left" : "int strLen = str.length();",
    "right" : "int strLen = str.length();",
    "info" : "VariableDeclarationStatement[189692-189718]:VariableDeclarationStatement[189551-189577]"
  }, {
    "left" : "int pads = size - strLen;",
    "right" : "int pads = size - strLen;",
    "info" : "VariableDeclarationStatement[189727-189752]:VariableDeclarationStatement[189586-189611]"
  }, {
    "left" : "if (pads <= 0)",
    "right" : "if (pads <= 0)",
    "info" : "IfStatement[189761-189852]:IfStatement[189620-189711]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189776-189852]:Block[189635-189711]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[189790-189801]:ReturnStatement[189649-189660]"
  }, {
    "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
    "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
    "info" : "IfStatement[189861-189968]:IfStatement[189720-189827]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189899-189968]:Block[189758-189827]"
  }, {
    "left" : "return rightPad(str, size, padStr.charAt(0));",
    "right" : "return rightPad(str, size, padStr.charAt(0));",
    "info" : "ReturnStatement[189913-189958]:ReturnStatement[189772-189817]"
  }, {
    "left" : "if (pads == padLen)",
    "right" : "if (pads == padLen)",
    "info" : "IfStatement[189978-190418]:IfStatement[189837-190277]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[189998-190048]:Block[189857-189907]"
  }, {
    "left" : "return str.concat(padStr);",
    "right" : "return str.concat(padStr);",
    "info" : "ReturnStatement[190012-190038]:ReturnStatement[189871-189897]"
  }, {
    "left" : "if (pads < padLen)",
    "right" : "if (pads < padLen)",
    "info" : "IfStatement[190054-190418]:IfStatement[189913-190277]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190073-190142]:Block[189932-190001]"
  }, {
    "left" : "return str.concat(padStr.substring(0, pads));",
    "right" : "return str.concat(padStr.substring(0, pads));",
    "info" : "ReturnStatement[190087-190132]:ReturnStatement[189946-189991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190148-190418]:Block[190007-190277]"
  }, {
    "left" : "char[] padding = new char[pads];",
    "right" : "char[] padding = new char[pads];",
    "info" : "VariableDeclarationStatement[190162-190194]:VariableDeclarationStatement[190021-190053]"
  }, {
    "left" : "char[] padChars = padStr.toCharArray();",
    "right" : "char[] padChars = padStr.toCharArray();",
    "info" : "VariableDeclarationStatement[190207-190246]:VariableDeclarationStatement[190066-190105]"
  }, {
    "left" : "for (int i = 0; i < pads; i++)",
    "right" : "for (int i = 0; i < pads; i++)",
    "info" : "ForStatement[190259-190356]:ForStatement[190118-190215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[190290-190356]:Block[190149-190215]"
  }, {
    "left" : "padding[i] = padChars[i % padLen];",
    "right" : "padding[i] = padChars[i % padLen];",
    "info" : "ExpressionStatement[190308-190342]:ExpressionStatement[190167-190201]"
  }, {
    "left" : "return str.concat(new String(padding));",
    "right" : "return str.concat(new String(padding));",
    "info" : "ReturnStatement[190369-190408]:ReturnStatement[190228-190267]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[191102-191108]:Modifier[190961-190967]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[191109-191115]:Modifier[190968-190974]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[191116-191122]:SimpleType[190975-190981]"
  }, {
    "left" : "leftPad",
    "right" : "leftPad",
    "info" : "SimpleName[191123-191130]:SimpleName[190982-190989]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[191131-191141]:SingleVariableDeclaration[190990-191000]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[191143-191151]:SingleVariableDeclaration[191002-191010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[191153-191200]:Block[191012-191059]"
  }, {
    "left" : "return leftPad(str, size, ' ');",
    "right" : "return leftPad(str, size, ' ');",
    "info" : "ReturnStatement[191163-191194]:ReturnStatement[191022-191053]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[191965-191971]:Modifier[191824-191830]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[191972-191978]:Modifier[191831-191837]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[191979-191985]:SimpleType[191838-191844]"
  }, {
    "left" : "leftPad",
    "right" : "leftPad",
    "info" : "SimpleName[191986-191993]:SimpleName[191845-191852]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[191994-192004]:SingleVariableDeclaration[191853-191863]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[192006-192014]:SingleVariableDeclaration[191865-191873]"
  }, {
    "left" : "char padChar",
    "right" : "char padChar",
    "info" : "SingleVariableDeclaration[192016-192028]:SingleVariableDeclaration[191875-191887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192030-192395]:Block[191889-192254]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[192040-192093]:IfStatement[191899-191952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192057-192093]:Block[191916-191952]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[192071-192083]:ReturnStatement[191930-191942]"
  }, {
    "left" : "int pads = size - str.length();",
    "right" : "int pads = size - str.length();",
    "info" : "VariableDeclarationStatement[192102-192133]:VariableDeclarationStatement[191961-191992]"
  }, {
    "left" : "if (pads <= 0)",
    "right" : "if (pads <= 0)",
    "info" : "IfStatement[192142-192233]:IfStatement[192001-192092]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192157-192233]:Block[192016-192092]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[192171-192182]:ReturnStatement[192030-192041]"
  }, {
    "left" : "if (pads > PAD_LIMIT)",
    "right" : "if (pads > PAD_LIMIT)",
    "info" : "IfStatement[192242-192339]:IfStatement[192101-192198]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[192264-192339]:Block[192123-192198]"
  }, {
    "left" : "return leftPad(str, size, String.valueOf(padChar));",
    "right" : "return leftPad(str, size, String.valueOf(padChar));",
    "info" : "ReturnStatement[192278-192329]:ReturnStatement[192137-192188]"
  }, {
    "left" : "return repeat(padChar, pads).concat(str);",
    "right" : "return repeat(padChar, pads).concat(str);",
    "info" : "ReturnStatement[192348-192389]:ReturnStatement[192207-192248]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[193345-193351]:Modifier[193204-193210]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[193352-193358]:Modifier[193211-193217]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[193359-193365]:SimpleType[193218-193224]"
  }, {
    "left" : "leftPad",
    "right" : "leftPad",
    "info" : "SimpleName[193366-193373]:SimpleName[193225-193232]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[193374-193384]:SingleVariableDeclaration[193233-193243]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[193386-193394]:SingleVariableDeclaration[193245-193253]"
  }, {
    "left" : "String padStr",
    "right" : "String padStr",
    "info" : "SingleVariableDeclaration[193396-193409]:SingleVariableDeclaration[193255-193268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193411-194319]:Block[193270-194178]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[193421-193474]:IfStatement[193280-193333]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193438-193474]:Block[193297-193333]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[193452-193464]:ReturnStatement[193311-193323]"
  }, {
    "left" : "if (isEmpty(padStr))",
    "right" : "if (isEmpty(padStr))",
    "info" : "IfStatement[193483-193541]:IfStatement[193342-193400]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193504-193541]:Block[193363-193400]"
  }, {
    "left" : "padStr = \" \";",
    "right" : "padStr = \" \";",
    "info" : "ExpressionStatement[193518-193531]:ExpressionStatement[193377-193390]"
  }, {
    "left" : "int padLen = padStr.length();",
    "right" : "int padLen = padStr.length();",
    "info" : "VariableDeclarationStatement[193550-193579]:VariableDeclarationStatement[193409-193438]"
  }, {
    "left" : "int strLen = str.length();",
    "right" : "int strLen = str.length();",
    "info" : "VariableDeclarationStatement[193588-193614]:VariableDeclarationStatement[193447-193473]"
  }, {
    "left" : "int pads = size - strLen;",
    "right" : "int pads = size - strLen;",
    "info" : "VariableDeclarationStatement[193623-193648]:VariableDeclarationStatement[193482-193507]"
  }, {
    "left" : "if (pads <= 0)",
    "right" : "if (pads <= 0)",
    "info" : "IfStatement[193657-193748]:IfStatement[193516-193607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193672-193748]:Block[193531-193607]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[193686-193697]:ReturnStatement[193545-193556]"
  }, {
    "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
    "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
    "info" : "IfStatement[193757-193863]:IfStatement[193616-193722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193795-193863]:Block[193654-193722]"
  }, {
    "left" : "return leftPad(str, size, padStr.charAt(0));",
    "right" : "return leftPad(str, size, padStr.charAt(0));",
    "info" : "ReturnStatement[193809-193853]:ReturnStatement[193668-193712]"
  }, {
    "left" : "if (pads == padLen)",
    "right" : "if (pads == padLen)",
    "info" : "IfStatement[193873-194313]:IfStatement[193732-194172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193893-193943]:Block[193752-193802]"
  }, {
    "left" : "return padStr.concat(str);",
    "right" : "return padStr.concat(str);",
    "info" : "ReturnStatement[193907-193933]:ReturnStatement[193766-193792]"
  }, {
    "left" : "if (pads < padLen)",
    "right" : "if (pads < padLen)",
    "info" : "IfStatement[193949-194313]:IfStatement[193808-194172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[193968-194037]:Block[193827-193896]"
  }, {
    "left" : "return padStr.substring(0, pads).concat(str);",
    "right" : "return padStr.substring(0, pads).concat(str);",
    "info" : "ReturnStatement[193982-194027]:ReturnStatement[193841-193886]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194043-194313]:Block[193902-194172]"
  }, {
    "left" : "char[] padding = new char[pads];",
    "right" : "char[] padding = new char[pads];",
    "info" : "VariableDeclarationStatement[194057-194089]:VariableDeclarationStatement[193916-193948]"
  }, {
    "left" : "char[] padChars = padStr.toCharArray();",
    "right" : "char[] padChars = padStr.toCharArray();",
    "info" : "VariableDeclarationStatement[194102-194141]:VariableDeclarationStatement[193961-194000]"
  }, {
    "left" : "for (int i = 0; i < pads; i++)",
    "right" : "for (int i = 0; i < pads; i++)",
    "info" : "ForStatement[194154-194251]:ForStatement[194013-194110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194185-194251]:Block[194044-194110]"
  }, {
    "left" : "padding[i] = padChars[i % padLen];",
    "right" : "padding[i] = padChars[i % padLen];",
    "info" : "ExpressionStatement[194203-194237]:ExpressionStatement[194062-194096]"
  }, {
    "left" : "return new String(padding).concat(str);",
    "right" : "return new String(padding).concat(str);",
    "info" : "ReturnStatement[194264-194303]:ReturnStatement[194123-194162]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[194703-194709]:Modifier[194562-194568]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[194710-194716]:Modifier[194569-194575]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[194717-194720]:PrimitiveType[194576-194579]"
  }, {
    "left" : "length",
    "right" : "length",
    "info" : "SimpleName[194721-194727]:SimpleName[194580-194586]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[194728-194743]:SingleVariableDeclaration[194587-194602]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[194745-194797]:Block[194604-194656]"
  }, {
    "left" : "return cs == null ? 0 : cs.length();",
    "right" : "return cs == null ? 0 : cs.length();",
    "info" : "ReturnStatement[194755-194791]:ReturnStatement[194614-194650]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[195779-195785]:Modifier[195638-195644]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[195786-195792]:Modifier[195645-195651]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[195793-195799]:SimpleType[195652-195658]"
  }, {
    "left" : "center",
    "right" : "center",
    "info" : "SimpleName[195800-195806]:SimpleName[195659-195665]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[195807-195817]:SingleVariableDeclaration[195666-195676]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[195819-195827]:SingleVariableDeclaration[195678-195686]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[195829-195875]:Block[195688-195734]"
  }, {
    "left" : "return center(str, size, ' ');",
    "right" : "return center(str, size, ' ');",
    "info" : "ReturnStatement[195839-195869]:ReturnStatement[195698-195728]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[196889-196895]:Modifier[196748-196754]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[196896-196902]:Modifier[196755-196761]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[196903-196909]:SimpleType[196762-196768]"
  }, {
    "left" : "center",
    "right" : "center",
    "info" : "SimpleName[196910-196916]:SimpleName[196769-196775]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[196917-196927]:SingleVariableDeclaration[196776-196786]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[196929-196937]:SingleVariableDeclaration[196788-196796]"
  }, {
    "left" : "char padChar",
    "right" : "char padChar",
    "info" : "SingleVariableDeclaration[196939-196951]:SingleVariableDeclaration[196798-196810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[196953-197282]:Block[196812-197141]"
  }, {
    "left" : "if (str == null || size <= 0)",
    "right" : "if (str == null || size <= 0)",
    "info" : "IfStatement[196963-197028]:IfStatement[196822-196887]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[196993-197028]:Block[196852-196887]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[197007-197018]:ReturnStatement[196866-196877]"
  }, {
    "left" : "int strLen = str.length();",
    "right" : "int strLen = str.length();",
    "info" : "VariableDeclarationStatement[197037-197063]:VariableDeclarationStatement[196896-196922]"
  }, {
    "left" : "int pads = size - strLen;",
    "right" : "int pads = size - strLen;",
    "info" : "VariableDeclarationStatement[197072-197097]:VariableDeclarationStatement[196931-196956]"
  }, {
    "left" : "if (pads <= 0)",
    "right" : "if (pads <= 0)",
    "info" : "IfStatement[197106-197156]:IfStatement[196965-197015]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[197121-197156]:Block[196980-197015]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[197135-197146]:ReturnStatement[196994-197005]"
  }, {
    "left" : "str = leftPad(str, strLen + pads / 2, padChar);",
    "right" : "str = leftPad(str, strLen + pads / 2, padChar);",
    "info" : "ExpressionStatement[197165-197212]:ExpressionStatement[197024-197071]"
  }, {
    "left" : "str = rightPad(str, size, padChar);",
    "right" : "str = rightPad(str, size, padChar);",
    "info" : "ExpressionStatement[197221-197256]:ExpressionStatement[197080-197115]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[197265-197276]:ReturnStatement[197124-197135]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[198481-198487]:Modifier[198340-198346]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[198488-198494]:Modifier[198347-198353]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[198495-198501]:SimpleType[198354-198360]"
  }, {
    "left" : "center",
    "right" : "center",
    "info" : "SimpleName[198502-198508]:SimpleName[198361-198367]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[198509-198519]:SingleVariableDeclaration[198368-198378]"
  }, {
    "left" : "int size",
    "right" : "int size",
    "info" : "SingleVariableDeclaration[198521-198529]:SingleVariableDeclaration[198380-198388]"
  }, {
    "left" : "String padStr",
    "right" : "String padStr",
    "info" : "SingleVariableDeclaration[198531-198544]:SingleVariableDeclaration[198390-198403]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198546-198940]:Block[198405-198799]"
  }, {
    "left" : "if (str == null || size <= 0)",
    "right" : "if (str == null || size <= 0)",
    "info" : "IfStatement[198556-198621]:IfStatement[198415-198480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198586-198621]:Block[198445-198480]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[198600-198611]:ReturnStatement[198459-198470]"
  }, {
    "left" : "if (isEmpty(padStr))",
    "right" : "if (isEmpty(padStr))",
    "info" : "IfStatement[198630-198688]:IfStatement[198489-198547]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198651-198688]:Block[198510-198547]"
  }, {
    "left" : "padStr = \" \";",
    "right" : "padStr = \" \";",
    "info" : "ExpressionStatement[198665-198678]:ExpressionStatement[198524-198537]"
  }, {
    "left" : "int strLen = str.length();",
    "right" : "int strLen = str.length();",
    "info" : "VariableDeclarationStatement[198697-198723]:VariableDeclarationStatement[198556-198582]"
  }, {
    "left" : "int pads = size - strLen;",
    "right" : "int pads = size - strLen;",
    "info" : "VariableDeclarationStatement[198732-198757]:VariableDeclarationStatement[198591-198616]"
  }, {
    "left" : "if (pads <= 0)",
    "right" : "if (pads <= 0)",
    "info" : "IfStatement[198766-198816]:IfStatement[198625-198675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[198781-198816]:Block[198640-198675]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[198795-198806]:ReturnStatement[198654-198665]"
  }, {
    "left" : "str = leftPad(str, strLen + pads / 2, padStr);",
    "right" : "str = leftPad(str, strLen + pads / 2, padStr);",
    "info" : "ExpressionStatement[198825-198871]:ExpressionStatement[198684-198730]"
  }, {
    "left" : "str = rightPad(str, size, padStr);",
    "right" : "str = rightPad(str, size, padStr);",
    "info" : "ExpressionStatement[198880-198914]:ExpressionStatement[198739-198773]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[198923-198934]:ReturnStatement[198782-198793]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[199872-199878]:Modifier[199731-199737]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[199879-199885]:Modifier[199738-199744]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[199886-199892]:SimpleType[199745-199751]"
  }, {
    "left" : "upperCase",
    "right" : "upperCase",
    "info" : "SimpleName[199893-199902]:SimpleName[199752-199761]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[199903-199913]:SingleVariableDeclaration[199762-199772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199915-200018]:Block[199774-199877]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[199925-199978]:IfStatement[199784-199837]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[199942-199978]:Block[199801-199837]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[199956-199968]:ReturnStatement[199815-199827]"
  }, {
    "left" : "return str.toUpperCase();",
    "right" : "return str.toUpperCase();",
    "info" : "ReturnStatement[199987-200012]:ReturnStatement[199846-199871]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[200659-200665]:Modifier[200518-200524]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[200666-200672]:Modifier[200525-200531]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[200673-200679]:SimpleType[200532-200538]"
  }, {
    "left" : "upperCase",
    "right" : "upperCase",
    "info" : "SimpleName[200680-200689]:SimpleName[200539-200548]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[200690-200700]:SingleVariableDeclaration[200549-200559]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[200702-200715]:SingleVariableDeclaration[200561-200574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200717-200826]:Block[200576-200685]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[200727-200780]:IfStatement[200586-200639]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[200744-200780]:Block[200603-200639]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[200758-200770]:ReturnStatement[200617-200629]"
  }, {
    "left" : "return str.toUpperCase(locale);",
    "right" : "return str.toUpperCase(locale);",
    "info" : "ReturnStatement[200789-200820]:ReturnStatement[200648-200679]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[201657-201663]:Modifier[201516-201522]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[201664-201670]:Modifier[201523-201529]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[201671-201677]:SimpleType[201530-201536]"
  }, {
    "left" : "lowerCase",
    "right" : "lowerCase",
    "info" : "SimpleName[201678-201687]:SimpleName[201537-201546]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[201688-201698]:SingleVariableDeclaration[201547-201557]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201700-201803]:Block[201559-201662]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[201710-201763]:IfStatement[201569-201622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[201727-201763]:Block[201586-201622]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[201741-201753]:ReturnStatement[201600-201612]"
  }, {
    "left" : "return str.toLowerCase();",
    "right" : "return str.toLowerCase();",
    "info" : "ReturnStatement[201772-201797]:ReturnStatement[201631-201656]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[202444-202450]:Modifier[202303-202309]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[202451-202457]:Modifier[202310-202316]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[202458-202464]:SimpleType[202317-202323]"
  }, {
    "left" : "lowerCase",
    "right" : "lowerCase",
    "info" : "SimpleName[202465-202474]:SimpleName[202324-202333]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[202475-202485]:SingleVariableDeclaration[202334-202344]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[202487-202500]:SingleVariableDeclaration[202346-202359]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202502-202611]:Block[202361-202470]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[202512-202565]:IfStatement[202371-202424]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[202529-202565]:Block[202388-202424]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[202543-202555]:ReturnStatement[202402-202414]"
  }, {
    "left" : "return str.toLowerCase(locale);",
    "right" : "return str.toLowerCase(locale);",
    "info" : "ReturnStatement[202574-202605]:ReturnStatement[202433-202464]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[203436-203442]:Modifier[203295-203301]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[203443-203449]:Modifier[203302-203308]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[203450-203456]:SimpleType[203309-203315]"
  }, {
    "left" : "capitalize",
    "right" : "capitalize",
    "info" : "SimpleName[203457-203467]:SimpleName[203316-203326]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[203468-203478]:SingleVariableDeclaration[203327-203337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203480-203762]:Block[203339-203621]"
  }, {
    "left" : "int strLen;",
    "right" : "int strLen;",
    "info" : "VariableDeclarationStatement[203490-203501]:VariableDeclarationStatement[203349-203360]"
  }, {
    "left" : "if (str == null || (strLen = str.length()) == 0)",
    "right" : "if (str == null || (strLen = str.length()) == 0)",
    "info" : "IfStatement[203510-203594]:IfStatement[203369-203453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[203559-203594]:Block[203418-203453]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[203573-203584]:ReturnStatement[203432-203443]"
  }, {
    "left" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
    "right" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
    "info" : "ReturnStatement[203603-203756]:ReturnStatement[203462-203615]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[204603-204609]:Modifier[204462-204468]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[204610-204616]:Modifier[204469-204475]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[204617-204623]:SimpleType[204476-204482]"
  }, {
    "left" : "uncapitalize",
    "right" : "uncapitalize",
    "info" : "SimpleName[204624-204636]:SimpleName[204483-204495]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[204637-204647]:SingleVariableDeclaration[204496-204506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204649-204931]:Block[204508-204790]"
  }, {
    "left" : "int strLen;",
    "right" : "int strLen;",
    "info" : "VariableDeclarationStatement[204659-204670]:VariableDeclarationStatement[204518-204529]"
  }, {
    "left" : "if (str == null || (strLen = str.length()) == 0)",
    "right" : "if (str == null || (strLen = str.length()) == 0)",
    "info" : "IfStatement[204679-204763]:IfStatement[204538-204622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[204728-204763]:Block[204587-204622]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[204742-204753]:ReturnStatement[204601-204612]"
  }, {
    "left" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
    "right" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(str.charAt(0)))\n            .append(str.substring(1))\n            .toString();",
    "info" : "ReturnStatement[204772-204925]:ReturnStatement[204631-204784]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[206079-206085]:Modifier[205938-205944]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[206086-206092]:Modifier[205945-205951]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[206093-206099]:SimpleType[205952-205958]"
  }, {
    "left" : "swapCase",
    "right" : "swapCase",
    "info" : "SimpleName[206100-206108]:SimpleName[205959-205967]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[206109-206119]:SingleVariableDeclaration[205968-205978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206121-206778]:Block[205980-206637]"
  }, {
    "left" : "int strLen;",
    "right" : "int strLen;",
    "info" : "VariableDeclarationStatement[206131-206142]:VariableDeclarationStatement[205990-206001]"
  }, {
    "left" : "if (str == null || (strLen = str.length()) == 0)",
    "right" : "if (str == null || (strLen = str.length()) == 0)",
    "info" : "IfStatement[206151-206235]:IfStatement[206010-206094]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206200-206235]:Block[206059-206094]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[206214-206225]:ReturnStatement[206073-206084]"
  }, {
    "left" : "StringBuilder buffer = new StringBuilder(strLen);",
    "right" : "StringBuilder buffer = new StringBuilder(strLen);",
    "info" : "VariableDeclarationStatement[206244-206293]:VariableDeclarationStatement[206103-206152]"
  }, {
    "left" : "char ch = 0;",
    "right" : "char ch = 0;",
    "info" : "VariableDeclarationStatement[206303-206315]:VariableDeclarationStatement[206162-206174]"
  }, {
    "left" : "for (int i = 0; i < strLen; i++)",
    "right" : "for (int i = 0; i < strLen; i++)",
    "info" : "ForStatement[206324-206738]:ForStatement[206183-206597]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206357-206738]:Block[206216-206597]"
  }, {
    "left" : "ch = str.charAt(i);",
    "right" : "ch = str.charAt(i);",
    "info" : "ExpressionStatement[206371-206390]:ExpressionStatement[206230-206249]"
  }, {
    "left" : "if (Character.isUpperCase(ch))",
    "right" : "if (Character.isUpperCase(ch))",
    "info" : "IfStatement[206403-206697]:IfStatement[206262-206556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206434-206497]:Block[206293-206356]"
  }, {
    "left" : "ch = Character.toLowerCase(ch);",
    "right" : "ch = Character.toLowerCase(ch);",
    "info" : "ExpressionStatement[206452-206483]:ExpressionStatement[206311-206342]"
  }, {
    "left" : "if (Character.isTitleCase(ch))",
    "right" : "if (Character.isTitleCase(ch))",
    "info" : "IfStatement[206503-206697]:IfStatement[206362-206556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206534-206597]:Block[206393-206456]"
  }, {
    "left" : "ch = Character.toLowerCase(ch);",
    "right" : "ch = Character.toLowerCase(ch);",
    "info" : "ExpressionStatement[206552-206583]:ExpressionStatement[206411-206442]"
  }, {
    "left" : "if (Character.isLowerCase(ch))",
    "right" : "if (Character.isLowerCase(ch))",
    "info" : "IfStatement[206603-206697]:IfStatement[206462-206556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[206634-206697]:Block[206493-206556]"
  }, {
    "left" : "ch = Character.toUpperCase(ch);",
    "right" : "ch = Character.toUpperCase(ch);",
    "info" : "ExpressionStatement[206652-206683]:ExpressionStatement[206511-206542]"
  }, {
    "left" : "buffer.append(ch);",
    "right" : "buffer.append(ch);",
    "info" : "ExpressionStatement[206710-206728]:ExpressionStatement[206569-206587]"
  }, {
    "left" : "return buffer.toString();",
    "right" : "return buffer.toString();",
    "info" : "ReturnStatement[206747-206772]:ReturnStatement[206606-206631]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[207769-207775]:Modifier[207628-207634]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[207776-207782]:Modifier[207635-207641]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[207783-207786]:PrimitiveType[207642-207645]"
  }, {
    "left" : "countMatches",
    "right" : "countMatches",
    "info" : "SimpleName[207787-207799]:SimpleName[207646-207658]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[207800-207816]:SingleVariableDeclaration[207659-207675]"
  }, {
    "left" : "CharSequence sub",
    "right" : "CharSequence sub",
    "info" : "SingleVariableDeclaration[207818-207834]:SingleVariableDeclaration[207677-207693]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207836-208135]:Block[207695-207994]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(sub))",
    "right" : "if (isEmpty(str) || isEmpty(sub))",
    "info" : "IfStatement[207846-207913]:IfStatement[207705-207772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[207880-207913]:Block[207739-207772]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[207894-207903]:ReturnStatement[207753-207762]"
  }, {
    "left" : "int count = 0;",
    "right" : "int count = 0;",
    "info" : "VariableDeclarationStatement[207922-207936]:VariableDeclarationStatement[207781-207795]"
  }, {
    "left" : "int idx = 0;",
    "right" : "int idx = 0;",
    "info" : "VariableDeclarationStatement[207945-207957]:VariableDeclarationStatement[207804-207816]"
  }, {
    "left" : "while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND)",
    "right" : "while ((idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND)",
    "info" : "WhileStatement[207966-208107]:WhileStatement[207825-207966]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[208042-208107]:Block[207901-207966]"
  }, {
    "left" : "count++;",
    "right" : "count++;",
    "info" : "ExpressionStatement[208056-208064]:ExpressionStatement[207915-207923]"
  }, {
    "left" : "idx += sub.length();",
    "right" : "idx += sub.length();",
    "info" : "ExpressionStatement[208077-208097]:ExpressionStatement[207936-207956]"
  }, {
    "left" : "return count;",
    "right" : "return count;",
    "info" : "ReturnStatement[208116-208129]:ReturnStatement[207975-207988]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[209025-209031]:Modifier[208884-208890]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[209032-209038]:Modifier[208891-208897]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[209039-209046]:PrimitiveType[208898-208905]"
  }, {
    "left" : "isAlpha",
    "right" : "isAlpha",
    "info" : "SimpleName[209047-209054]:SimpleName[208906-208913]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[209055-209070]:SingleVariableDeclaration[208914-208929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[209072-209366]:Block[208931-209225]"
  }, {
    "left" : "if (cs == null || cs.length() == 0)",
    "right" : "if (cs == null || cs.length() == 0)",
    "info" : "IfStatement[209082-209155]:IfStatement[208941-209014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[209118-209155]:Block[208977-209014]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[209132-209145]:ReturnStatement[208991-209004]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[209164-209185]:VariableDeclarationStatement[209023-209044]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[209194-209339]:ForStatement[209053-209198]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[209223-209339]:Block[209082-209198]"
  }, {
    "left" : "if (Character.isLetter(cs.charAt(i)) == false)",
    "right" : "if (Character.isLetter(cs.charAt(i)) == false)",
    "info" : "IfStatement[209237-209329]:IfStatement[209096-209188]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[209284-209329]:Block[209143-209188]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[209302-209315]:ReturnStatement[209161-209174]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[209348-209360]:ReturnStatement[209207-209219]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[210221-210227]:Modifier[210080-210086]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[210228-210234]:Modifier[210087-210093]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[210235-210242]:PrimitiveType[210094-210101]"
  }, {
    "left" : "isAlphaSpace",
    "right" : "isAlphaSpace",
    "info" : "SimpleName[210243-210255]:SimpleName[210102-210114]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[210256-210271]:SingleVariableDeclaration[210115-210130]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[210273-210574]:Block[210132-210433]"
  }, {
    "left" : "if (cs == null)",
    "right" : "if (cs == null)",
    "info" : "IfStatement[210283-210336]:IfStatement[210142-210195]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[210299-210336]:Block[210158-210195]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[210313-210326]:ReturnStatement[210172-210185]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[210345-210366]:VariableDeclarationStatement[210204-210225]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[210375-210547]:ForStatement[210234-210406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[210404-210547]:Block[210263-210406]"
  }, {
    "left" : "if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
    "right" : "if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
    "info" : "IfStatement[210418-210537]:IfStatement[210277-210396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[210492-210537]:Block[210351-210396]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[210510-210523]:ReturnStatement[210369-210382]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[210556-210568]:ReturnStatement[210415-210427]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[211496-211502]:Modifier[211355-211361]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[211503-211509]:Modifier[211362-211368]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[211510-211517]:PrimitiveType[211369-211376]"
  }, {
    "left" : "isAlphanumeric",
    "right" : "isAlphanumeric",
    "info" : "SimpleName[211518-211532]:SimpleName[211377-211391]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[211533-211548]:SingleVariableDeclaration[211392-211407]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211550-211851]:Block[211409-211710]"
  }, {
    "left" : "if (cs == null || cs.length() == 0)",
    "right" : "if (cs == null || cs.length() == 0)",
    "info" : "IfStatement[211560-211633]:IfStatement[211419-211492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211596-211633]:Block[211455-211492]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[211610-211623]:ReturnStatement[211469-211482]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[211642-211663]:VariableDeclarationStatement[211501-211522]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[211672-211824]:ForStatement[211531-211683]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211701-211824]:Block[211560-211683]"
  }, {
    "left" : "if (Character.isLetterOrDigit(cs.charAt(i)) == false)",
    "right" : "if (Character.isLetterOrDigit(cs.charAt(i)) == false)",
    "info" : "IfStatement[211715-211814]:IfStatement[211574-211673]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[211769-211814]:Block[211628-211673]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[211787-211800]:ReturnStatement[211646-211659]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[211833-211845]:ReturnStatement[211692-211704]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[212791-212797]:Modifier[212650-212656]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[212798-212804]:Modifier[212657-212663]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[212805-212812]:PrimitiveType[212664-212671]"
  }, {
    "left" : "isAlphanumericSpace",
    "right" : "isAlphanumericSpace",
    "info" : "SimpleName[212813-212832]:SimpleName[212672-212691]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[212833-212848]:SingleVariableDeclaration[212692-212707]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[212850-213158]:Block[212709-213017]"
  }, {
    "left" : "if (cs == null)",
    "right" : "if (cs == null)",
    "info" : "IfStatement[212860-212913]:IfStatement[212719-212772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[212876-212913]:Block[212735-212772]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[212890-212903]:ReturnStatement[212749-212762]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[212922-212943]:VariableDeclarationStatement[212781-212802]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[212952-213131]:ForStatement[212811-212990]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[212981-213131]:Block[212840-212990]"
  }, {
    "left" : "if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
    "right" : "if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
    "info" : "IfStatement[212995-213121]:IfStatement[212854-212980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[213076-213121]:Block[212935-212980]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[213094-213107]:ReturnStatement[212953-212966]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[213140-213152]:ReturnStatement[212999-213011]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[214290-214296]:Modifier[214149-214155]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[214297-214303]:Modifier[214156-214162]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[214304-214311]:PrimitiveType[214163-214170]"
  }, {
    "left" : "isAsciiPrintable",
    "right" : "isAsciiPrintable",
    "info" : "SimpleName[214312-214328]:SimpleName[214171-214187]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[214329-214344]:SingleVariableDeclaration[214188-214203]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214346-214628]:Block[214205-214487]"
  }, {
    "left" : "if (cs == null)",
    "right" : "if (cs == null)",
    "info" : "IfStatement[214356-214409]:IfStatement[214215-214268]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214372-214409]:Block[214231-214268]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[214386-214399]:ReturnStatement[214245-214258]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[214418-214439]:VariableDeclarationStatement[214277-214298]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[214448-214601]:ForStatement[214307-214460]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214477-214601]:Block[214336-214460]"
  }, {
    "left" : "if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false)",
    "right" : "if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false)",
    "info" : "IfStatement[214491-214591]:IfStatement[214350-214450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[214546-214591]:Block[214405-214450]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[214564-214577]:ReturnStatement[214423-214436]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[214610-214622]:ReturnStatement[214469-214481]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[215586-215592]:Modifier[215445-215451]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[215593-215599]:Modifier[215452-215458]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[215600-215607]:PrimitiveType[215459-215466]"
  }, {
    "left" : "isNumeric",
    "right" : "isNumeric",
    "info" : "SimpleName[215608-215617]:SimpleName[215467-215476]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[215618-215633]:SingleVariableDeclaration[215477-215492]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215635-215928]:Block[215494-215787]"
  }, {
    "left" : "if (cs == null || cs.length() == 0)",
    "right" : "if (cs == null || cs.length() == 0)",
    "info" : "IfStatement[215645-215718]:IfStatement[215504-215577]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215681-215718]:Block[215540-215577]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[215695-215708]:ReturnStatement[215554-215567]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[215727-215748]:VariableDeclarationStatement[215586-215607]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[215757-215901]:ForStatement[215616-215760]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215786-215901]:Block[215645-215760]"
  }, {
    "left" : "if (Character.isDigit(cs.charAt(i)) == false)",
    "right" : "if (Character.isDigit(cs.charAt(i)) == false)",
    "info" : "IfStatement[215800-215891]:IfStatement[215659-215750]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[215846-215891]:Block[215705-215750]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[215864-215877]:ReturnStatement[215723-215736]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[215910-215922]:ReturnStatement[215769-215781]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[216921-216927]:Modifier[216780-216786]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[216928-216934]:Modifier[216787-216793]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[216935-216942]:PrimitiveType[216794-216801]"
  }, {
    "left" : "isNumericSpace",
    "right" : "isNumericSpace",
    "info" : "SimpleName[216943-216957]:SimpleName[216802-216816]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[216958-216973]:SingleVariableDeclaration[216817-216832]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[216975-217275]:Block[216834-217134]"
  }, {
    "left" : "if (cs == null)",
    "right" : "if (cs == null)",
    "info" : "IfStatement[216985-217038]:IfStatement[216844-216897]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217001-217038]:Block[216860-216897]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[217015-217028]:ReturnStatement[216874-216887]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[217047-217068]:VariableDeclarationStatement[216906-216927]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[217077-217248]:ForStatement[216936-217107]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217106-217248]:Block[216965-217107]"
  }, {
    "left" : "if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
    "right" : "if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
    "info" : "IfStatement[217120-217238]:IfStatement[216979-217097]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[217193-217238]:Block[217052-217097]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[217211-217224]:ReturnStatement[217070-217083]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[217257-217269]:ReturnStatement[217116-217128]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[218060-218066]:Modifier[217919-217925]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[218067-218073]:Modifier[217926-217932]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[218074-218081]:PrimitiveType[217933-217940]"
  }, {
    "left" : "isWhitespace",
    "right" : "isWhitespace",
    "info" : "SimpleName[218082-218094]:SimpleName[217941-217953]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[218095-218110]:SingleVariableDeclaration[217954-217969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[218112-218392]:Block[217971-218251]"
  }, {
    "left" : "if (cs == null)",
    "right" : "if (cs == null)",
    "info" : "IfStatement[218122-218175]:IfStatement[217981-218034]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[218138-218175]:Block[217997-218034]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[218152-218165]:ReturnStatement[218011-218024]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[218184-218205]:VariableDeclarationStatement[218043-218064]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[218214-218365]:ForStatement[218073-218224]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[218243-218365]:Block[218102-218224]"
  }, {
    "left" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
    "right" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
    "info" : "IfStatement[218257-218355]:IfStatement[218116-218214]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[218310-218355]:Block[218169-218214]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[218328-218341]:ReturnStatement[218187-218200]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[218374-218386]:ReturnStatement[218233-218245]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[219164-219170]:Modifier[219023-219029]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[219171-219177]:Modifier[219030-219036]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[219178-219185]:PrimitiveType[219037-219044]"
  }, {
    "left" : "isAllLowerCase",
    "right" : "isAllLowerCase",
    "info" : "SimpleName[219186-219200]:SimpleName[219045-219059]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[219201-219216]:SingleVariableDeclaration[219060-219075]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219218-219510]:Block[219077-219369]"
  }, {
    "left" : "if (cs == null || isEmpty(cs))",
    "right" : "if (cs == null || isEmpty(cs))",
    "info" : "IfStatement[219228-219296]:IfStatement[219087-219155]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219259-219296]:Block[219118-219155]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[219273-219286]:ReturnStatement[219132-219145]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[219305-219326]:VariableDeclarationStatement[219164-219185]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[219335-219483]:ForStatement[219194-219342]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219364-219483]:Block[219223-219342]"
  }, {
    "left" : "if (Character.isLowerCase(cs.charAt(i)) == false)",
    "right" : "if (Character.isLowerCase(cs.charAt(i)) == false)",
    "info" : "IfStatement[219378-219473]:IfStatement[219237-219332]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[219428-219473]:Block[219287-219332]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[219446-219459]:ReturnStatement[219305-219318]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[219492-219504]:ReturnStatement[219351-219363]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[220275-220281]:Modifier[220134-220140]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[220282-220288]:Modifier[220141-220147]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[220289-220296]:PrimitiveType[220148-220155]"
  }, {
    "left" : "isAllUpperCase",
    "right" : "isAllUpperCase",
    "info" : "SimpleName[220297-220311]:SimpleName[220156-220170]"
  }, {
    "left" : "CharSequence cs",
    "right" : "CharSequence cs",
    "info" : "SingleVariableDeclaration[220312-220327]:SingleVariableDeclaration[220171-220186]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220329-220621]:Block[220188-220480]"
  }, {
    "left" : "if (cs == null || isEmpty(cs))",
    "right" : "if (cs == null || isEmpty(cs))",
    "info" : "IfStatement[220339-220407]:IfStatement[220198-220266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220370-220407]:Block[220229-220266]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[220384-220397]:ReturnStatement[220243-220256]"
  }, {
    "left" : "int sz = cs.length();",
    "right" : "int sz = cs.length();",
    "info" : "VariableDeclarationStatement[220416-220437]:VariableDeclarationStatement[220275-220296]"
  }, {
    "left" : "for (int i = 0; i < sz; i++)",
    "right" : "for (int i = 0; i < sz; i++)",
    "info" : "ForStatement[220446-220594]:ForStatement[220305-220453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220475-220594]:Block[220334-220453]"
  }, {
    "left" : "if (Character.isUpperCase(cs.charAt(i)) == false)",
    "right" : "if (Character.isUpperCase(cs.charAt(i)) == false)",
    "info" : "IfStatement[220489-220584]:IfStatement[220348-220443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[220539-220584]:Block[220398-220443]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[220557-220570]:ReturnStatement[220416-220429]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[220603-220615]:ReturnStatement[220462-220474]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[221246-221252]:Modifier[221105-221111]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[221253-221259]:Modifier[221112-221118]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[221260-221266]:SimpleType[221119-221125]"
  }, {
    "left" : "defaultString",
    "right" : "defaultString",
    "info" : "SimpleName[221267-221280]:SimpleName[221126-221139]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[221281-221291]:SingleVariableDeclaration[221140-221150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[221293-221342]:Block[221152-221201]"
  }, {
    "left" : "return str == null ? EMPTY : str;",
    "right" : "return str == null ? EMPTY : str;",
    "info" : "ReturnStatement[221303-221336]:ReturnStatement[221162-221195]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[222011-222017]:Modifier[221870-221876]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[222018-222024]:Modifier[221877-221883]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[222025-222031]:SimpleType[221884-221890]"
  }, {
    "left" : "defaultString",
    "right" : "defaultString",
    "info" : "SimpleName[222032-222045]:SimpleName[221891-221904]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[222046-222056]:SingleVariableDeclaration[221905-221915]"
  }, {
    "left" : "String defaultStr",
    "right" : "String defaultStr",
    "info" : "SingleVariableDeclaration[222058-222075]:SingleVariableDeclaration[221917-221934]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[222077-222131]:Block[221936-221990]"
  }, {
    "left" : "return str == null ? defaultStr : str;",
    "right" : "return str == null ? defaultStr : str;",
    "info" : "ReturnStatement[222087-222125]:ReturnStatement[221946-221984]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[222995-223001]:Modifier[222854-222860]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[223002-223008]:Modifier[222861-222867]"
  }, {
    "left" : "T extends CharSequence",
    "right" : "T extends CharSequence",
    "info" : "TypeParameter[223010-223032]:TypeParameter[222869-222891]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[223034-223035]:SimpleType[222893-222894]"
  }, {
    "left" : "defaultIfBlank",
    "right" : "defaultIfBlank",
    "info" : "SimpleName[223036-223050]:SimpleName[222895-222909]"
  }, {
    "left" : "T str",
    "right" : "T str",
    "info" : "SingleVariableDeclaration[223051-223056]:SingleVariableDeclaration[222910-222915]"
  }, {
    "left" : "T defaultStr",
    "right" : "T defaultStr",
    "info" : "SingleVariableDeclaration[223058-223070]:SingleVariableDeclaration[222917-222929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223072-223139]:Block[222931-222998]"
  }, {
    "left" : "return StringUtils.isBlank(str) ? defaultStr : str;",
    "right" : "return StringUtils.isBlank(str) ? defaultStr : str;",
    "info" : "ReturnStatement[223082-223133]:ReturnStatement[222941-222992]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[223917-223923]:Modifier[223776-223782]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[223924-223930]:Modifier[223783-223789]"
  }, {
    "left" : "T extends CharSequence",
    "right" : "T extends CharSequence",
    "info" : "TypeParameter[223932-223954]:TypeParameter[223791-223813]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[223956-223957]:SimpleType[223815-223816]"
  }, {
    "left" : "defaultIfEmpty",
    "right" : "defaultIfEmpty",
    "info" : "SimpleName[223958-223972]:SimpleName[223817-223831]"
  }, {
    "left" : "T str",
    "right" : "T str",
    "info" : "SingleVariableDeclaration[223973-223978]:SingleVariableDeclaration[223832-223837]"
  }, {
    "left" : "T defaultStr",
    "right" : "T defaultStr",
    "info" : "SingleVariableDeclaration[223980-223992]:SingleVariableDeclaration[223839-223851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[223994-224061]:Block[223853-223920]"
  }, {
    "left" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
    "right" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
    "info" : "ReturnStatement[224004-224055]:ReturnStatement[223863-223914]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[224602-224608]:Modifier[224461-224467]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[224609-224615]:Modifier[224468-224474]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[224616-224622]:SimpleType[224475-224481]"
  }, {
    "left" : "reverse",
    "right" : "reverse",
    "info" : "SimpleName[224623-224630]:SimpleName[224482-224489]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[224631-224641]:SingleVariableDeclaration[224490-224500]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[224643-224772]:Block[224502-224631]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[224653-224706]:IfStatement[224512-224565]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[224670-224706]:Block[224529-224565]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[224684-224696]:ReturnStatement[224543-224555]"
  }, {
    "left" : "return new StringBuilder(str).reverse().toString();",
    "right" : "return new StringBuilder(str).reverse().toString();",
    "info" : "ReturnStatement[224715-224766]:ReturnStatement[224574-224625]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[225514-225520]:Modifier[225373-225379]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[225521-225527]:Modifier[225380-225386]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[225528-225534]:SimpleType[225387-225393]"
  }, {
    "left" : "reverseDelimited",
    "right" : "reverseDelimited",
    "info" : "SimpleName[225535-225551]:SimpleName[225394-225410]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[225552-225562]:SingleVariableDeclaration[225411-225421]"
  }, {
    "left" : "char separatorChar",
    "right" : "char separatorChar",
    "info" : "SingleVariableDeclaration[225564-225582]:SingleVariableDeclaration[225423-225441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[225584-225888]:Block[225443-225747]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[225594-225647]:IfStatement[225453-225506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[225611-225647]:Block[225470-225506]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[225625-225637]:ReturnStatement[225484-225496]"
  }, {
    "left" : "String[] strs = split(str, separatorChar);",
    "right" : "String[] strs = split(str, separatorChar);",
    "info" : "VariableDeclarationStatement[225764-225806]:VariableDeclarationStatement[225623-225665]"
  }, {
    "left" : "ArrayUtils.reverse(strs);",
    "right" : "ArrayUtils.reverse(strs);",
    "info" : "ExpressionStatement[225815-225840]:ExpressionStatement[225674-225699]"
  }, {
    "left" : "return join(strs, separatorChar);",
    "right" : "return join(strs, separatorChar);",
    "info" : "ReturnStatement[225849-225882]:ReturnStatement[225708-225741]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[227340-227346]:Modifier[227199-227205]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[227347-227353]:Modifier[227206-227212]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[227354-227360]:SimpleType[227213-227219]"
  }, {
    "left" : "abbreviate",
    "right" : "abbreviate",
    "info" : "SimpleName[227361-227371]:SimpleName[227220-227230]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[227372-227382]:SingleVariableDeclaration[227231-227241]"
  }, {
    "left" : "int maxWidth",
    "right" : "int maxWidth",
    "info" : "SingleVariableDeclaration[227384-227396]:SingleVariableDeclaration[227243-227255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[227398-227450]:Block[227257-227309]"
  }, {
    "left" : "return abbreviate(str, 0, maxWidth);",
    "right" : "return abbreviate(str, 0, maxWidth);",
    "info" : "ReturnStatement[227408-227444]:ReturnStatement[227267-227303]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[229342-229348]:Modifier[229201-229207]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[229349-229355]:Modifier[229208-229214]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[229356-229362]:SimpleType[229215-229221]"
  }, {
    "left" : "abbreviate",
    "right" : "abbreviate",
    "info" : "SimpleName[229363-229373]:SimpleName[229222-229232]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[229374-229384]:SingleVariableDeclaration[229233-229243]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[229386-229396]:SingleVariableDeclaration[229245-229255]"
  }, {
    "left" : "int maxWidth",
    "right" : "int maxWidth",
    "info" : "SingleVariableDeclaration[229398-229410]:SingleVariableDeclaration[229257-229269]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229412-230376]:Block[229271-230235]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[229422-229475]:IfStatement[229281-229334]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229439-229475]:Block[229298-229334]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[229453-229465]:ReturnStatement[229312-229324]"
  }, {
    "left" : "if (maxWidth < 4)",
    "right" : "if (maxWidth < 4)",
    "info" : "IfStatement[229484-229596]:IfStatement[229343-229455]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229502-229596]:Block[229361-229455]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
    "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
    "info" : "ThrowStatement[229516-229586]:ThrowStatement[229375-229445]"
  }, {
    "left" : "if (str.length() <= maxWidth)",
    "right" : "if (str.length() <= maxWidth)",
    "info" : "IfStatement[229605-229670]:IfStatement[229464-229529]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229635-229670]:Block[229494-229529]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[229649-229660]:ReturnStatement[229508-229519]"
  }, {
    "left" : "if (offset > str.length())",
    "right" : "if (offset > str.length())",
    "info" : "IfStatement[229679-229752]:IfStatement[229538-229611]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229706-229752]:Block[229565-229611]"
  }, {
    "left" : "offset = str.length();",
    "right" : "offset = str.length();",
    "info" : "ExpressionStatement[229720-229742]:ExpressionStatement[229579-229601]"
  }, {
    "left" : "if ((str.length() - offset) < (maxWidth - 3))",
    "right" : "if ((str.length() - offset) < (maxWidth - 3))",
    "info" : "IfStatement[229761-229870]:IfStatement[229620-229729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229807-229870]:Block[229666-229729]"
  }, {
    "left" : "offset = str.length() - (maxWidth - 3);",
    "right" : "offset = str.length() - (maxWidth - 3);",
    "info" : "ExpressionStatement[229821-229860]:ExpressionStatement[229680-229719]"
  }, {
    "left" : "final String abrevMarker = \"...\";",
    "right" : "final String abrevMarker = \"...\";",
    "info" : "VariableDeclarationStatement[229879-229912]:VariableDeclarationStatement[229738-229771]"
  }, {
    "left" : "if (offset <= 4)",
    "right" : "if (offset <= 4)",
    "info" : "IfStatement[229921-230014]:IfStatement[229780-229873]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[229938-230014]:Block[229797-229873]"
  }, {
    "left" : "return str.substring(0, maxWidth - 3) + abrevMarker;",
    "right" : "return str.substring(0, maxWidth - 3) + abrevMarker;",
    "info" : "ReturnStatement[229952-230004]:ReturnStatement[229811-229863]"
  }, {
    "left" : "if (maxWidth < 7)",
    "right" : "if (maxWidth < 7)",
    "info" : "IfStatement[230023-230147]:IfStatement[229882-230006]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[230041-230147]:Block[229900-230006]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
    "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
    "info" : "ThrowStatement[230055-230137]:ThrowStatement[229914-229996]"
  }, {
    "left" : "if ((offset + (maxWidth - 3)) < str.length())",
    "right" : "if ((offset + (maxWidth - 3)) < str.length())",
    "info" : "IfStatement[230156-230295]:IfStatement[230015-230154]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[230202-230295]:Block[230061-230154]"
  }, {
    "left" : "return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",
    "right" : "return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",
    "info" : "ReturnStatement[230216-230285]:ReturnStatement[230075-230144]"
  }, {
    "left" : "return abrevMarker + str.substring(str.length() - (maxWidth - 3));",
    "right" : "return abrevMarker + str.substring(str.length() - (maxWidth - 3));",
    "info" : "ReturnStatement[230304-230370]:ReturnStatement[230163-230229]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[231880-231886]:Modifier[231739-231745]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[231887-231893]:Modifier[231746-231752]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[231894-231900]:SimpleType[231753-231759]"
  }, {
    "left" : "abbreviateMiddle",
    "right" : "abbreviateMiddle",
    "info" : "SimpleName[231901-231917]:SimpleName[231760-231776]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[231918-231928]:SingleVariableDeclaration[231777-231787]"
  }, {
    "left" : "String middle",
    "right" : "String middle",
    "info" : "SingleVariableDeclaration[231930-231943]:SingleVariableDeclaration[231789-231802]"
  }, {
    "left" : "int length",
    "right" : "int length",
    "info" : "SingleVariableDeclaration[231945-231955]:SingleVariableDeclaration[231804-231814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[231957-232540]:Block[231816-232399]"
  }, {
    "left" : "if (isEmpty(str) || isEmpty(middle))",
    "right" : "if (isEmpty(str) || isEmpty(middle))",
    "info" : "IfStatement[231967-232039]:IfStatement[231826-231898]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[232004-232039]:Block[231863-231898]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[232018-232029]:ReturnStatement[231877-231888]"
  }, {
    "left" : "if (length >= str.length() || length < (middle.length()+2))",
    "right" : "if (length >= str.length() || length < (middle.length()+2))",
    "info" : "IfStatement[232049-232144]:IfStatement[231908-232003]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[232109-232144]:Block[231968-232003]"
  }, {
    "left" : "return str;",
    "right" : "return str;",
    "info" : "ReturnStatement[232123-232134]:ReturnStatement[231982-231993]"
  }, {
    "left" : "int targetSting = length-middle.length();",
    "right" : "int targetSting = length-middle.length();",
    "info" : "VariableDeclarationStatement[232154-232195]:VariableDeclarationStatement[232013-232054]"
  }, {
    "left" : "int startOffset = targetSting/2+targetSting%2;",
    "right" : "int startOffset = targetSting/2+targetSting%2;",
    "info" : "VariableDeclarationStatement[232204-232250]:VariableDeclarationStatement[232063-232109]"
  }, {
    "left" : "int endOffset = str.length()-targetSting/2;",
    "right" : "int endOffset = str.length()-targetSting/2;",
    "info" : "VariableDeclarationStatement[232259-232302]:VariableDeclarationStatement[232118-232161]"
  }, {
    "left" : "StringBuilder builder = new StringBuilder(length);",
    "right" : "StringBuilder builder = new StringBuilder(length);",
    "info" : "VariableDeclarationStatement[232312-232362]:VariableDeclarationStatement[232171-232221]"
  }, {
    "left" : "builder.append(str.substring(0,startOffset));",
    "right" : "builder.append(str.substring(0,startOffset));",
    "info" : "ExpressionStatement[232371-232416]:ExpressionStatement[232230-232275]"
  }, {
    "left" : "builder.append(middle);",
    "right" : "builder.append(middle);",
    "info" : "ExpressionStatement[232425-232448]:ExpressionStatement[232284-232307]"
  }, {
    "left" : "builder.append(str.substring(endOffset));",
    "right" : "builder.append(str.substring(endOffset));",
    "info" : "ExpressionStatement[232457-232498]:ExpressionStatement[232316-232357]"
  }, {
    "left" : "return builder.toString();",
    "right" : "return builder.toString();",
    "info" : "ReturnStatement[232508-232534]:ReturnStatement[232367-232393]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[233641-233647]:Modifier[233500-233506]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[233648-233654]:Modifier[233507-233513]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[233655-233661]:SimpleType[233514-233520]"
  }, {
    "left" : "difference",
    "right" : "difference",
    "info" : "SimpleName[233662-233672]:SimpleName[233521-233531]"
  }, {
    "left" : "String str1",
    "right" : "String str1",
    "info" : "SingleVariableDeclaration[233673-233684]:SingleVariableDeclaration[233532-233543]"
  }, {
    "left" : "String str2",
    "right" : "String str2",
    "info" : "SingleVariableDeclaration[233686-233697]:SingleVariableDeclaration[233545-233556]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233699-233988]:Block[233558-233847]"
  }, {
    "left" : "if (str1 == null)",
    "right" : "if (str1 == null)",
    "info" : "IfStatement[233709-233763]:IfStatement[233568-233622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233727-233763]:Block[233586-233622]"
  }, {
    "left" : "return str2;",
    "right" : "return str2;",
    "info" : "ReturnStatement[233741-233753]:ReturnStatement[233600-233612]"
  }, {
    "left" : "if (str2 == null)",
    "right" : "if (str2 == null)",
    "info" : "IfStatement[233772-233826]:IfStatement[233631-233685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233790-233826]:Block[233649-233685]"
  }, {
    "left" : "return str1;",
    "right" : "return str1;",
    "info" : "ReturnStatement[233804-233816]:ReturnStatement[233663-233675]"
  }, {
    "left" : "int at = indexOfDifference(str1, str2);",
    "right" : "int at = indexOfDifference(str1, str2);",
    "info" : "VariableDeclarationStatement[233835-233874]:VariableDeclarationStatement[233694-233733]"
  }, {
    "left" : "if (at == INDEX_NOT_FOUND)",
    "right" : "if (at == INDEX_NOT_FOUND)",
    "info" : "IfStatement[233883-233947]:IfStatement[233742-233806]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[233910-233947]:Block[233769-233806]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[233924-233937]:ReturnStatement[233783-233796]"
  }, {
    "left" : "return str2.substring(at);",
    "right" : "return str2.substring(at);",
    "info" : "ReturnStatement[233956-233982]:ReturnStatement[233815-233841]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[235049-235055]:Modifier[234908-234914]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[235056-235062]:Modifier[234915-234921]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[235063-235066]:PrimitiveType[234922-234925]"
  }, {
    "left" : "indexOfDifference",
    "right" : "indexOfDifference",
    "info" : "SimpleName[235067-235084]:SimpleName[234926-234943]"
  }, {
    "left" : "CharSequence cs1",
    "right" : "CharSequence cs1",
    "info" : "SingleVariableDeclaration[235085-235101]:SingleVariableDeclaration[234944-234960]"
  }, {
    "left" : "CharSequence cs2",
    "right" : "CharSequence cs2",
    "info" : "SingleVariableDeclaration[235103-235119]:SingleVariableDeclaration[234962-234978]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235121-235567]:Block[234980-235426]"
  }, {
    "left" : "if (cs1 == cs2)",
    "right" : "if (cs1 == cs2)",
    "info" : "IfStatement[235131-235194]:IfStatement[234990-235053]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235147-235194]:Block[235006-235053]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[235161-235184]:ReturnStatement[235020-235043]"
  }, {
    "left" : "if (cs1 == null || cs2 == null)",
    "right" : "if (cs1 == null || cs2 == null)",
    "info" : "IfStatement[235203-235268]:IfStatement[235062-235127]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235235-235268]:Block[235094-235127]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[235249-235258]:ReturnStatement[235108-235117]"
  }, {
    "left" : "int i;",
    "right" : "int i;",
    "info" : "VariableDeclarationStatement[235277-235283]:VariableDeclarationStatement[235136-235142]"
  }, {
    "left" : "for (i = 0; i < cs1.length() && i < cs2.length(); ++i)",
    "right" : "for (i = 0; i < cs1.length() && i < cs2.length(); ++i)",
    "info" : "ForStatement[235292-235445]:ForStatement[235151-235304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235347-235445]:Block[235206-235304]"
  }, {
    "left" : "if (cs1.charAt(i) != cs2.charAt(i))",
    "right" : "if (cs1.charAt(i) != cs2.charAt(i))",
    "info" : "IfStatement[235361-235435]:IfStatement[235220-235294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235397-235435]:Block[235256-235294]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[235415-235421]:BreakStatement[235274-235280]"
  }, {
    "left" : "if (i < cs2.length() || i < cs1.length())",
    "right" : "if (i < cs2.length() || i < cs1.length())",
    "info" : "IfStatement[235454-235529]:IfStatement[235313-235388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[235496-235529]:Block[235355-235388]"
  }, {
    "left" : "return i;",
    "right" : "return i;",
    "info" : "ReturnStatement[235510-235519]:ReturnStatement[235369-235378]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[235538-235561]:ReturnStatement[235397-235420]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[237329-237335]:Modifier[237188-237194]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[237336-237342]:Modifier[237195-237201]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[237343-237346]:PrimitiveType[237202-237205]"
  }, {
    "left" : "indexOfDifference",
    "right" : "indexOfDifference",
    "info" : "SimpleName[237347-237364]:SimpleName[237206-237223]"
  }, {
    "left" : "CharSequence... css",
    "right" : "CharSequence... css",
    "info" : "SingleVariableDeclaration[237365-237384]:SingleVariableDeclaration[237224-237243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237386-239493]:Block[237245-239352]"
  }, {
    "left" : "if (css == null || css.length <= 1)",
    "right" : "if (css == null || css.length <= 1)",
    "info" : "IfStatement[237396-237479]:IfStatement[237255-237338]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237432-237479]:Block[237291-237338]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[237446-237469]:ReturnStatement[237305-237328]"
  }, {
    "left" : "boolean anyStringNull = false;",
    "right" : "boolean anyStringNull = false;",
    "info" : "VariableDeclarationStatement[237488-237518]:VariableDeclarationStatement[237347-237377]"
  }, {
    "left" : "boolean allStringsNull = true;",
    "right" : "boolean allStringsNull = true;",
    "info" : "VariableDeclarationStatement[237527-237557]:VariableDeclarationStatement[237386-237416]"
  }, {
    "left" : "int arrayLen = css.length;",
    "right" : "int arrayLen = css.length;",
    "info" : "VariableDeclarationStatement[237566-237592]:VariableDeclarationStatement[237425-237451]"
  }, {
    "left" : "int shortestStrLen = Integer.MAX_VALUE;",
    "right" : "int shortestStrLen = Integer.MAX_VALUE;",
    "info" : "VariableDeclarationStatement[237601-237640]:VariableDeclarationStatement[237460-237499]"
  }, {
    "left" : "int longestStrLen = 0;",
    "right" : "int longestStrLen = 0;",
    "info" : "VariableDeclarationStatement[237649-237671]:VariableDeclarationStatement[237508-237530]"
  }, {
    "left" : "for (int i = 0; i < arrayLen; i++)",
    "right" : "for (int i = 0; i < arrayLen; i++)",
    "info" : "ForStatement[237866-238245]:ForStatement[237725-238104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237901-238245]:Block[237760-238104]"
  }, {
    "left" : "if (css[i] == null)",
    "right" : "if (css[i] == null)",
    "info" : "IfStatement[237915-238235]:IfStatement[237774-238094]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[237935-238024]:Block[237794-237883]"
  }, {
    "left" : "anyStringNull = true;",
    "right" : "anyStringNull = true;",
    "info" : "ExpressionStatement[237953-237974]:ExpressionStatement[237812-237833]"
  }, {
    "left" : "shortestStrLen = 0;",
    "right" : "shortestStrLen = 0;",
    "info" : "ExpressionStatement[237991-238010]:ExpressionStatement[237850-237869]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238030-238235]:Block[237889-238094]"
  }, {
    "left" : "allStringsNull = false;",
    "right" : "allStringsNull = false;",
    "info" : "ExpressionStatement[238048-238071]:ExpressionStatement[237907-237930]"
  }, {
    "left" : "shortestStrLen = Math.min(css[i].length(), shortestStrLen);",
    "right" : "shortestStrLen = Math.min(css[i].length(), shortestStrLen);",
    "info" : "ExpressionStatement[238088-238147]:ExpressionStatement[237947-238006]"
  }, {
    "left" : "longestStrLen = Math.max(css[i].length(), longestStrLen);",
    "right" : "longestStrLen = Math.max(css[i].length(), longestStrLen);",
    "info" : "ExpressionStatement[238164-238221]:ExpressionStatement[238023-238080]"
  }, {
    "left" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
    "right" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
    "info" : "IfStatement[238321-238430]:IfStatement[238180-238289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238383-238430]:Block[238242-238289]"
  }, {
    "left" : "return INDEX_NOT_FOUND;",
    "right" : "return INDEX_NOT_FOUND;",
    "info" : "ReturnStatement[238397-238420]:ReturnStatement[238256-238279]"
  }, {
    "left" : "if (shortestStrLen == 0)",
    "right" : "if (shortestStrLen == 0)",
    "info" : "IfStatement[238508-238566]:IfStatement[238367-238425]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238533-238566]:Block[238392-238425]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[238547-238556]:ReturnStatement[238406-238415]"
  }, {
    "left" : "int firstDiff = -1;",
    "right" : "int firstDiff = -1;",
    "info" : "VariableDeclarationStatement[238650-238669]:VariableDeclarationStatement[238509-238528]"
  }, {
    "left" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
    "right" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
    "info" : "ForStatement[238678-239131]:ForStatement[238537-238990]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238743-239131]:Block[238602-238990]"
  }, {
    "left" : "char comparisonChar = css[0].charAt(stringPos);",
    "right" : "char comparisonChar = css[0].charAt(stringPos);",
    "info" : "VariableDeclarationStatement[238757-238804]:VariableDeclarationStatement[238616-238663]"
  }, {
    "left" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
    "right" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
    "info" : "ForStatement[238817-239049]:ForStatement[238676-238908]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238873-239049]:Block[238732-238908]"
  }, {
    "left" : "if (css[arrayPos].charAt(stringPos) != comparisonChar)",
    "right" : "if (css[arrayPos].charAt(stringPos) != comparisonChar)",
    "info" : "IfStatement[238891-239035]:IfStatement[238750-238894]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[238946-239035]:Block[238805-238894]"
  }, {
    "left" : "firstDiff = stringPos;",
    "right" : "firstDiff = stringPos;",
    "info" : "ExpressionStatement[238968-238990]:ExpressionStatement[238827-238849]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[239011-239017]:BreakStatement[238870-238876]"
  }, {
    "left" : "if (firstDiff != -1)",
    "right" : "if (firstDiff != -1)",
    "info" : "IfStatement[239062-239121]:IfStatement[238921-238980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[239083-239121]:Block[238942-238980]"
  }, {
    "left" : "break;",
    "right" : "break;",
    "info" : "BreakStatement[239101-239107]:BreakStatement[238960-238966]"
  }, {
    "left" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
    "right" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
    "info" : "IfStatement[239141-239461]:IfStatement[239000-239320]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[239197-239461]:Block[239056-239320]"
  }, {
    "left" : "return shortestStrLen;",
    "right" : "return shortestStrLen;",
    "info" : "ReturnStatement[239429-239451]:ReturnStatement[239288-239310]"
  }, {
    "left" : "return firstDiff;",
    "right" : "return firstDiff;",
    "info" : "ReturnStatement[239470-239487]:ReturnStatement[239329-239346]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[241274-241280]:Modifier[241133-241139]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[241281-241287]:Modifier[241140-241146]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[241288-241294]:SimpleType[241147-241153]"
  }, {
    "left" : "getCommonPrefix",
    "right" : "getCommonPrefix",
    "info" : "SimpleName[241295-241310]:SimpleName[241154-241169]"
  }, {
    "left" : "String... strs",
    "right" : "String... strs",
    "info" : "SingleVariableDeclaration[241311-241325]:SingleVariableDeclaration[241170-241184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241327-241957]:Block[241186-241816]"
  }, {
    "left" : "if (strs == null || strs.length == 0)",
    "right" : "if (strs == null || strs.length == 0)",
    "info" : "IfStatement[241337-241412]:IfStatement[241196-241271]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241375-241412]:Block[241234-241271]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[241389-241402]:ReturnStatement[241248-241261]"
  }, {
    "left" : "int smallestIndexOfDiff = indexOfDifference(strs);",
    "right" : "int smallestIndexOfDiff = indexOfDifference(strs);",
    "info" : "VariableDeclarationStatement[241421-241471]:VariableDeclarationStatement[241280-241330]"
  }, {
    "left" : "if (smallestIndexOfDiff == INDEX_NOT_FOUND)",
    "right" : "if (smallestIndexOfDiff == INDEX_NOT_FOUND)",
    "info" : "IfStatement[241480-241951]:IfStatement[241339-241810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241524-241684]:Block[241383-241543]"
  }, {
    "left" : "if (strs[0] == null)",
    "right" : "if (strs[0] == null)",
    "info" : "IfStatement[241580-241646]:IfStatement[241439-241505]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241601-241646]:Block[241460-241505]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[241619-241632]:ReturnStatement[241478-241491]"
  }, {
    "left" : "return strs[0];",
    "right" : "return strs[0];",
    "info" : "ReturnStatement[241659-241674]:ReturnStatement[241518-241533]"
  }, {
    "left" : "if (smallestIndexOfDiff == 0)",
    "right" : "if (smallestIndexOfDiff == 0)",
    "info" : "IfStatement[241690-241951]:IfStatement[241549-241810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241720-241812]:Block[241579-241671]"
  }, {
    "left" : "return EMPTY;",
    "right" : "return EMPTY;",
    "info" : "ReturnStatement[241789-241802]:ReturnStatement[241648-241661]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[241818-241951]:Block[241677-241810]"
  }, {
    "left" : "return strs[0].substring(0, smallestIndexOfDiff);",
    "right" : "return strs[0].substring(0, smallestIndexOfDiff);",
    "info" : "ReturnStatement[241892-241941]:ReturnStatement[241751-241800]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[244059-244065]:Modifier[243918-243924]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[244066-244072]:Modifier[243925-243931]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[244073-244076]:PrimitiveType[243932-243935]"
  }, {
    "left" : "getLevenshteinDistance",
    "right" : "getLevenshteinDistance",
    "info" : "SimpleName[244077-244099]:SimpleName[243936-243958]"
  }, {
    "left" : "CharSequence s",
    "right" : "CharSequence s",
    "info" : "SingleVariableDeclaration[244100-244114]:SingleVariableDeclaration[243959-243973]"
  }, {
    "left" : "CharSequence t",
    "right" : "CharSequence t",
    "info" : "SingleVariableDeclaration[244116-244130]:SingleVariableDeclaration[243975-243989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[244132-247004]:Block[243991-246863]"
  }, {
    "left" : "if (s == null || t == null)",
    "right" : "if (s == null || t == null)",
    "info" : "IfStatement[244142-244257]:IfStatement[244001-244116]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[244170-244257]:Block[244029-244116]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Strings must not be null\");",
    "right" : "throw new IllegalArgumentException(\"Strings must not be null\");",
    "info" : "ThrowStatement[244184-244247]:ThrowStatement[244043-244106]"
  }, {
    "left" : "int n = s.length();",
    "right" : "int n = s.length();",
    "info" : "VariableDeclarationStatement[245475-245494]:VariableDeclarationStatement[245334-245353]"
  }, {
    "left" : "int m = t.length();",
    "right" : "int m = t.length();",
    "info" : "VariableDeclarationStatement[245518-245537]:VariableDeclarationStatement[245377-245396]"
  }, {
    "left" : "if (n == 0)",
    "right" : "if (n == 0)",
    "info" : "IfStatement[245562-245658]:IfStatement[245421-245517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[245574-245607]:Block[245433-245466]"
  }, {
    "left" : "return m;",
    "right" : "return m;",
    "info" : "ReturnStatement[245588-245597]:ReturnStatement[245447-245456]"
  }, {
    "left" : "if (m == 0)",
    "right" : "if (m == 0)",
    "info" : "IfStatement[245613-245658]:IfStatement[245472-245517]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[245625-245658]:Block[245484-245517]"
  }, {
    "left" : "return n;",
    "right" : "return n;",
    "info" : "ReturnStatement[245639-245648]:ReturnStatement[245498-245507]"
  }, {
    "left" : "if (n > m)",
    "right" : "if (n > m)",
    "info" : "IfStatement[245668-245872]:IfStatement[245527-245731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[245679-245872]:Block[245538-245731]"
  }, {
    "left" : "CharSequence tmp = s;",
    "right" : "CharSequence tmp = s;",
    "info" : "VariableDeclarationStatement[245754-245775]:VariableDeclarationStatement[245613-245634]"
  }, {
    "left" : "s = t;",
    "right" : "s = t;",
    "info" : "ExpressionStatement[245788-245794]:ExpressionStatement[245647-245653]"
  }, {
    "left" : "t = tmp;",
    "right" : "t = tmp;",
    "info" : "ExpressionStatement[245807-245815]:ExpressionStatement[245666-245674]"
  }, {
    "left" : "n = m;",
    "right" : "n = m;",
    "info" : "ExpressionStatement[245828-245834]:ExpressionStatement[245687-245693]"
  }, {
    "left" : "m = t.length();",
    "right" : "m = t.length();",
    "info" : "ExpressionStatement[245847-245862]:ExpressionStatement[245706-245721]"
  }, {
    "left" : "int p[] = new int[n + 1];",
    "right" : "int p[] = new int[n + 1];",
    "info" : "VariableDeclarationStatement[245882-245907]:VariableDeclarationStatement[245741-245766]"
  }, {
    "left" : "int d[] = new int[n + 1];",
    "right" : "int d[] = new int[n + 1];",
    "info" : "VariableDeclarationStatement[245954-245979]:VariableDeclarationStatement[245813-245838]"
  }, {
    "left" : "int _d[];",
    "right" : "int _d[];",
    "info" : "VariableDeclarationStatement[246016-246025]:VariableDeclarationStatement[245875-245884]"
  }, {
    "left" : "int i;",
    "right" : "int i;",
    "info" : "VariableDeclarationStatement[246119-246125]:VariableDeclarationStatement[245978-245984]"
  }, {
    "left" : "int j;",
    "right" : "int j;",
    "info" : "VariableDeclarationStatement[246156-246162]:VariableDeclarationStatement[246015-246021]"
  }, {
    "left" : "char t_j;",
    "right" : "char t_j;",
    "info" : "VariableDeclarationStatement[246194-246203]:VariableDeclarationStatement[246053-246062]"
  }, {
    "left" : "int cost;",
    "right" : "int cost;",
    "info" : "VariableDeclarationStatement[246235-246244]:VariableDeclarationStatement[246094-246103]"
  }, {
    "left" : "for (i = 0; i <= n; i++)",
    "right" : "for (i = 0; i <= n; i++)",
    "info" : "ForStatement[246262-246320]:ForStatement[246121-246179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[246287-246320]:Block[246146-246179]"
  }, {
    "left" : "p[i] = i;",
    "right" : "p[i] = i;",
    "info" : "ExpressionStatement[246301-246310]:ExpressionStatement[246160-246169]"
  }, {
    "left" : "for (j = 1; j <= m; j++)",
    "right" : "for (j = 1; j <= m; j++)",
    "info" : "ForStatement[246330-246847]:ForStatement[246189-246706]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[246355-246847]:Block[246214-246706]"
  }, {
    "left" : "t_j = t.charAt(j - 1);",
    "right" : "t_j = t.charAt(j - 1);",
    "info" : "ExpressionStatement[246369-246391]:ExpressionStatement[246228-246250]"
  }, {
    "left" : "d[0] = j;",
    "right" : "d[0] = j;",
    "info" : "ExpressionStatement[246404-246413]:ExpressionStatement[246263-246272]"
  }, {
    "left" : "for (i = 1; i <= n; i++)",
    "right" : "for (i = 1; i <= n; i++)",
    "info" : "ForStatement[246427-246699]:ForStatement[246286-246558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[246452-246699]:Block[246311-246558]"
  }, {
    "left" : "cost = s.charAt(i - 1) == t_j ? 0 : 1;",
    "right" : "cost = s.charAt(i - 1) == t_j ? 0 : 1;",
    "info" : "ExpressionStatement[246470-246508]:ExpressionStatement[246329-246367]"
  }, {
    "left" : "d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);",
    "right" : "d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost);",
    "info" : "ExpressionStatement[246618-246685]:ExpressionStatement[246477-246544]"
  }, {
    "left" : "_d = p;",
    "right" : "_d = p;",
    "info" : "ExpressionStatement[246791-246798]:ExpressionStatement[246650-246657]"
  }, {
    "left" : "p = d;",
    "right" : "p = d;",
    "info" : "ExpressionStatement[246811-246817]:ExpressionStatement[246670-246676]"
  }, {
    "left" : "d = _d;",
    "right" : "d = _d;",
    "info" : "ExpressionStatement[246830-246837]:ExpressionStatement[246689-246696]"
  }, {
    "left" : "return p[n];",
    "right" : "return p[n];",
    "info" : "ReturnStatement[246986-246998]:ReturnStatement[246845-246857]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[248883-248889]:Modifier[248742-248748]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[248890-248896]:Modifier[248749-248755]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[248897-248900]:PrimitiveType[248756-248759]"
  }, {
    "left" : "getLevenshteinDistance",
    "right" : "getLevenshteinDistance",
    "info" : "SimpleName[248901-248923]:SimpleName[248760-248782]"
  }, {
    "left" : "CharSequence s",
    "right" : "CharSequence s",
    "info" : "SingleVariableDeclaration[248924-248938]:SingleVariableDeclaration[248783-248797]"
  }, {
    "left" : "CharSequence t",
    "right" : "CharSequence t",
    "info" : "SingleVariableDeclaration[248940-248954]:SingleVariableDeclaration[248799-248813]"
  }, {
    "left" : "int threshold",
    "right" : "int threshold",
    "info" : "SingleVariableDeclaration[248956-248969]:SingleVariableDeclaration[248815-248828]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[248971-254067]:Block[248830-253926]"
  }, {
    "left" : "if (s == null || t == null)",
    "right" : "if (s == null || t == null)",
    "info" : "IfStatement[248981-249096]:IfStatement[248840-248955]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249009-249096]:Block[248868-248955]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Strings must not be null\");",
    "right" : "throw new IllegalArgumentException(\"Strings must not be null\");",
    "info" : "ThrowStatement[249023-249086]:ThrowStatement[248882-248945]"
  }, {
    "left" : "if (threshold < 0)",
    "right" : "if (threshold < 0)",
    "info" : "IfStatement[249105-249217]:IfStatement[248964-249076]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[249124-249217]:Block[248983-249076]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Threshold must not be negative\");",
    "right" : "throw new IllegalArgumentException(\"Threshold must not be negative\");",
    "info" : "ThrowStatement[249138-249207]:ThrowStatement[248997-249066]"
  }, {
    "left" : "int n = s.length();",
    "right" : "int n = s.length();",
    "info" : "VariableDeclarationStatement[251481-251500]:VariableDeclarationStatement[251340-251359]"
  }, {
    "left" : "int m = t.length();",
    "right" : "int m = t.length();",
    "info" : "VariableDeclarationStatement[251524-251543]:VariableDeclarationStatement[251383-251402]"
  }, {
    "left" : "if (n == 0)",
    "right" : "if (n == 0)",
    "info" : "IfStatement[251660-251800]:IfStatement[251519-251659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251672-251727]:Block[251531-251586]"
  }, {
    "left" : "return m <= threshold ? m : -1;",
    "right" : "return m <= threshold ? m : -1;",
    "info" : "ReturnStatement[251686-251717]:ReturnStatement[251545-251576]"
  }, {
    "left" : "if (m == 0)",
    "right" : "if (m == 0)",
    "info" : "IfStatement[251733-251800]:IfStatement[251592-251659]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251745-251800]:Block[251604-251659]"
  }, {
    "left" : "return n <= threshold ? n : -1;",
    "right" : "return n <= threshold ? n : -1;",
    "info" : "ReturnStatement[251759-251790]:ReturnStatement[251618-251649]"
  }, {
    "left" : "if (n > m)",
    "right" : "if (n > m)",
    "info" : "IfStatement[251810-252012]:IfStatement[251669-251871]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[251821-252012]:Block[251680-251871]"
  }, {
    "left" : "CharSequence tmp = s;",
    "right" : "CharSequence tmp = s;",
    "info" : "VariableDeclarationStatement[251894-251915]:VariableDeclarationStatement[251753-251774]"
  }, {
    "left" : "s = t;",
    "right" : "s = t;",
    "info" : "ExpressionStatement[251928-251934]:ExpressionStatement[251787-251793]"
  }, {
    "left" : "t = tmp;",
    "right" : "t = tmp;",
    "info" : "ExpressionStatement[251947-251955]:ExpressionStatement[251806-251814]"
  }, {
    "left" : "n = m;",
    "right" : "n = m;",
    "info" : "ExpressionStatement[251968-251974]:ExpressionStatement[251827-251833]"
  }, {
    "left" : "m = t.length();",
    "right" : "m = t.length();",
    "info" : "ExpressionStatement[251987-252002]:ExpressionStatement[251846-251861]"
  }, {
    "left" : "int p[] = new int[n + 1];",
    "right" : "int p[] = new int[n + 1];",
    "info" : "VariableDeclarationStatement[252022-252047]:VariableDeclarationStatement[251881-251906]"
  }, {
    "left" : "int d[] = new int[n + 1];",
    "right" : "int d[] = new int[n + 1];",
    "info" : "VariableDeclarationStatement[252095-252120]:VariableDeclarationStatement[251954-251979]"
  }, {
    "left" : "int _d[];",
    "right" : "int _d[];",
    "info" : "VariableDeclarationStatement[252157-252166]:VariableDeclarationStatement[252016-252025]"
  }, {
    "left" : "int boundary = Math.min(n, threshold) + 1;",
    "right" : "int boundary = Math.min(n, threshold) + 1;",
    "info" : "VariableDeclarationStatement[252262-252304]:VariableDeclarationStatement[252121-252163]"
  }, {
    "left" : "for (int i = 0; i < boundary; i++)",
    "right" : "for (int i = 0; i < boundary; i++)",
    "info" : "ForStatement[252313-252381]:ForStatement[252172-252240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252348-252381]:Block[252207-252240]"
  }, {
    "left" : "p[i] = i;",
    "right" : "p[i] = i;",
    "info" : "ExpressionStatement[252362-252371]:ExpressionStatement[252221-252230]"
  }, {
    "left" : "Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE);",
    "right" : "Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE);",
    "info" : "ExpressionStatement[252532-252586]:ExpressionStatement[252391-252445]"
  }, {
    "left" : "Arrays.fill(d, Integer.MAX_VALUE);",
    "right" : "Arrays.fill(d, Integer.MAX_VALUE);",
    "info" : "ExpressionStatement[252595-252629]:ExpressionStatement[252454-252488]"
  }, {
    "left" : "for (int j = 1; j <= m; j++)",
    "right" : "for (int j = 1; j <= m; j++)",
    "info" : "ForStatement[252669-253837]:ForStatement[252528-253696]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[252698-253837]:Block[252557-253696]"
  }, {
    "left" : "char t_j = t.charAt(j - 1);",
    "right" : "char t_j = t.charAt(j - 1);",
    "info" : "VariableDeclarationStatement[252712-252739]:VariableDeclarationStatement[252571-252598]"
  }, {
    "left" : "d[0] = j;",
    "right" : "d[0] = j;",
    "info" : "ExpressionStatement[252774-252783]:ExpressionStatement[252633-252642]"
  }, {
    "left" : "int min = Math.max(1, j - threshold);",
    "right" : "int min = Math.max(1, j - threshold);",
    "info" : "VariableDeclarationStatement[252860-252897]:VariableDeclarationStatement[252719-252756]"
  }, {
    "left" : "int max = Math.min(n, j + threshold);",
    "right" : "int max = Math.min(n, j + threshold);",
    "info" : "VariableDeclarationStatement[252910-252947]:VariableDeclarationStatement[252769-252806]"
  }, {
    "left" : "if (min > max)",
    "right" : "if (min > max)",
    "info" : "IfStatement[253047-253104]:IfStatement[252906-252963]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[253062-253104]:Block[252921-252963]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[253080-253090]:ReturnStatement[252939-252949]"
  }, {
    "left" : "if (min > 1)",
    "right" : "if (min > 1)",
    "info" : "IfStatement[253163-253239]:IfStatement[253022-253098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[253176-253239]:Block[253035-253098]"
  }, {
    "left" : "d[min - 1] = Integer.MAX_VALUE;",
    "right" : "d[min - 1] = Integer.MAX_VALUE;",
    "info" : "ExpressionStatement[253194-253225]:ExpressionStatement[253053-253084]"
  }, {
    "left" : "for (int i = min; i <= max; i++)",
    "right" : "for (int i = min; i <= max; i++)",
    "info" : "ForStatement[253301-253689]:ForStatement[253160-253548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[253334-253689]:Block[253193-253548]"
  }, {
    "left" : "if (s.charAt(i - 1) == t_j)",
    "right" : "if (s.charAt(i - 1) == t_j)",
    "info" : "IfStatement[253352-253675]:IfStatement[253211-253534]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[253380-253482]:Block[253239-253341]"
  }, {
    "left" : "d[i] = p[i - 1];",
    "right" : "d[i] = p[i - 1];",
    "info" : "ExpressionStatement[253448-253464]:ExpressionStatement[253307-253323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[253488-253675]:Block[253347-253534]"
  }, {
    "left" : "d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);",
    "right" : "d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]);",
    "info" : "ExpressionStatement[253601-253657]:ExpressionStatement[253460-253516]"
  }, {
    "left" : "_d = p;",
    "right" : "_d = p;",
    "info" : "ExpressionStatement[253781-253788]:ExpressionStatement[253640-253647]"
  }, {
    "left" : "p = d;",
    "right" : "p = d;",
    "info" : "ExpressionStatement[253801-253807]:ExpressionStatement[253660-253666]"
  }, {
    "left" : "d = _d;",
    "right" : "d = _d;",
    "info" : "ExpressionStatement[253820-253827]:ExpressionStatement[253679-253686]"
  }, {
    "left" : "if (p[n] <= threshold)",
    "right" : "if (p[n] <= threshold)",
    "info" : "IfStatement[253962-254061]:IfStatement[253821-253920]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[253985-254021]:Block[253844-253880]"
  }, {
    "left" : "return p[n];",
    "right" : "return p[n];",
    "info" : "ReturnStatement[253999-254011]:ReturnStatement[253858-253870]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[254027-254061]:Block[253886-253920]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[254041-254051]:ReturnStatement[253900-253910]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[255138-255144]:Modifier[254997-255003]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[255145-255151]:Modifier[255004-255010]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[255152-255159]:PrimitiveType[255011-255018]"
  }, {
    "left" : "startsWith",
    "right" : "startsWith",
    "info" : "SimpleName[255160-255170]:SimpleName[255019-255029]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[255171-255187]:SingleVariableDeclaration[255030-255046]"
  }, {
    "left" : "CharSequence prefix",
    "right" : "CharSequence prefix",
    "info" : "SingleVariableDeclaration[255189-255208]:SingleVariableDeclaration[255048-255067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[255210-255264]:Block[255069-255123]"
  }, {
    "left" : "return startsWith(str, prefix, false);",
    "right" : "return startsWith(str, prefix, false);",
    "info" : "ReturnStatement[255220-255258]:ReturnStatement[255079-255117]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[256328-256334]:Modifier[256187-256193]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[256335-256341]:Modifier[256194-256200]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[256342-256349]:PrimitiveType[256201-256208]"
  }, {
    "left" : "startsWithIgnoreCase",
    "right" : "startsWithIgnoreCase",
    "info" : "SimpleName[256350-256370]:SimpleName[256209-256229]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[256371-256387]:SingleVariableDeclaration[256230-256246]"
  }, {
    "left" : "CharSequence prefix",
    "right" : "CharSequence prefix",
    "info" : "SingleVariableDeclaration[256389-256408]:SingleVariableDeclaration[256248-256267]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[256410-256463]:Block[256269-256322]"
  }, {
    "left" : "return startsWith(str, prefix, true);",
    "right" : "return startsWith(str, prefix, true);",
    "info" : "ReturnStatement[256420-256457]:ReturnStatement[256279-256316]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[256961-256968]:Modifier[256820-256827]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[256969-256975]:Modifier[256828-256834]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[256976-256983]:PrimitiveType[256835-256842]"
  }, {
    "left" : "startsWith",
    "right" : "startsWith",
    "info" : "SimpleName[256984-256994]:SimpleName[256843-256853]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[256995-257011]:SingleVariableDeclaration[256854-256870]"
  }, {
    "left" : "CharSequence prefix",
    "right" : "CharSequence prefix",
    "info" : "SingleVariableDeclaration[257013-257032]:SingleVariableDeclaration[256872-256891]"
  }, {
    "left" : "boolean ignoreCase",
    "right" : "boolean ignoreCase",
    "info" : "SingleVariableDeclaration[257034-257052]:SingleVariableDeclaration[256893-256911]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[257054-257346]:Block[256913-257205]"
  }, {
    "left" : "if (str == null || prefix == null)",
    "right" : "if (str == null || prefix == null)",
    "info" : "IfStatement[257064-257162]:IfStatement[256923-257021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[257099-257162]:Block[256958-257021]"
  }, {
    "left" : "return (str == null && prefix == null);",
    "right" : "return (str == null && prefix == null);",
    "info" : "ReturnStatement[257113-257152]:ReturnStatement[256972-257011]"
  }, {
    "left" : "if (prefix.length() > str.length())",
    "right" : "if (prefix.length() > str.length())",
    "info" : "IfStatement[257171-257244]:IfStatement[257030-257103]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[257207-257244]:Block[257066-257103]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[257221-257234]:ReturnStatement[257080-257093]"
  }, {
    "left" : "return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());",
    "right" : "return CharSequenceUtils.regionMatches(str, ignoreCase, 0, prefix, 0, prefix.length());",
    "info" : "ReturnStatement[257253-257340]:ReturnStatement[257112-257199]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[258321-258327]:Modifier[258180-258186]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[258328-258334]:Modifier[258187-258193]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[258335-258342]:PrimitiveType[258194-258201]"
  }, {
    "left" : "startsWithAny",
    "right" : "startsWithAny",
    "info" : "SimpleName[258343-258356]:SimpleName[258202-258215]"
  }, {
    "left" : "CharSequence string",
    "right" : "CharSequence string",
    "info" : "SingleVariableDeclaration[258357-258376]:SingleVariableDeclaration[258216-258235]"
  }, {
    "left" : "CharSequence... searchStrings",
    "right" : "CharSequence... searchStrings",
    "info" : "SingleVariableDeclaration[258378-258407]:SingleVariableDeclaration[258237-258266]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[258409-258774]:Block[258268-258633]"
  }, {
    "left" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
    "right" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
    "info" : "IfStatement[258419-258514]:IfStatement[258278-258373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[258477-258514]:Block[258336-258373]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[258491-258504]:ReturnStatement[258350-258363]"
  }, {
    "left" : "for (int i = 0; i < searchStrings.length; i++)",
    "right" : "for (int i = 0; i < searchStrings.length; i++)",
    "info" : "ForStatement[258523-258746]:ForStatement[258382-258605]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[258570-258746]:Block[258429-258605]"
  }, {
    "left" : "CharSequence searchString = searchStrings[i];",
    "right" : "CharSequence searchString = searchStrings[i];",
    "info" : "VariableDeclarationStatement[258584-258629]:VariableDeclarationStatement[258443-258488]"
  }, {
    "left" : "if (StringUtils.startsWith(string, searchString))",
    "right" : "if (StringUtils.startsWith(string, searchString))",
    "info" : "IfStatement[258642-258736]:IfStatement[258501-258595]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[258692-258736]:Block[258551-258595]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[258710-258722]:ReturnStatement[258569-258581]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[258755-258768]:ReturnStatement[258614-258627]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[259876-259882]:Modifier[259735-259741]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[259883-259889]:Modifier[259742-259748]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[259890-259897]:PrimitiveType[259749-259756]"
  }, {
    "left" : "endsWith",
    "right" : "endsWith",
    "info" : "SimpleName[259898-259906]:SimpleName[259757-259765]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[259907-259923]:SingleVariableDeclaration[259766-259782]"
  }, {
    "left" : "CharSequence suffix",
    "right" : "CharSequence suffix",
    "info" : "SingleVariableDeclaration[259925-259944]:SingleVariableDeclaration[259784-259803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[259946-259998]:Block[259805-259857]"
  }, {
    "left" : "return endsWith(str, suffix, false);",
    "right" : "return endsWith(str, suffix, false);",
    "info" : "ReturnStatement[259956-259992]:ReturnStatement[259815-259851]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[261105-261111]:Modifier[260964-260970]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[261112-261118]:Modifier[260971-260977]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[261119-261126]:PrimitiveType[260978-260985]"
  }, {
    "left" : "endsWithIgnoreCase",
    "right" : "endsWithIgnoreCase",
    "info" : "SimpleName[261127-261145]:SimpleName[260986-261004]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[261146-261162]:SingleVariableDeclaration[261005-261021]"
  }, {
    "left" : "CharSequence suffix",
    "right" : "CharSequence suffix",
    "info" : "SingleVariableDeclaration[261164-261183]:SingleVariableDeclaration[261023-261042]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261185-261236]:Block[261044-261095]"
  }, {
    "left" : "return endsWith(str, suffix, true);",
    "right" : "return endsWith(str, suffix, true);",
    "info" : "ReturnStatement[261195-261230]:ReturnStatement[261054-261089]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[261730-261737]:Modifier[261589-261596]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[261738-261744]:Modifier[261597-261603]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[261745-261752]:PrimitiveType[261604-261611]"
  }, {
    "left" : "endsWith",
    "right" : "endsWith",
    "info" : "SimpleName[261753-261761]:SimpleName[261612-261620]"
  }, {
    "left" : "CharSequence str",
    "right" : "CharSequence str",
    "info" : "SingleVariableDeclaration[261762-261778]:SingleVariableDeclaration[261621-261637]"
  }, {
    "left" : "CharSequence suffix",
    "right" : "CharSequence suffix",
    "info" : "SingleVariableDeclaration[261780-261799]:SingleVariableDeclaration[261639-261658]"
  }, {
    "left" : "boolean ignoreCase",
    "right" : "boolean ignoreCase",
    "info" : "SingleVariableDeclaration[261801-261819]:SingleVariableDeclaration[261660-261678]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261821-262175]:Block[261680-262034]"
  }, {
    "left" : "if (str == null || suffix == null)",
    "right" : "if (str == null || suffix == null)",
    "info" : "IfStatement[261831-261927]:IfStatement[261690-261786]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261866-261927]:Block[261725-261786]"
  }, {
    "left" : "return str == null && suffix == null;",
    "right" : "return str == null && suffix == null;",
    "info" : "ReturnStatement[261880-261917]:ReturnStatement[261739-261776]"
  }, {
    "left" : "if (suffix.length() > str.length())",
    "right" : "if (suffix.length() > str.length())",
    "info" : "IfStatement[261936-262009]:IfStatement[261795-261868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[261972-262009]:Block[261831-261868]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[261986-261999]:ReturnStatement[261845-261858]"
  }, {
    "left" : "int strOffset = str.length() - suffix.length();",
    "right" : "int strOffset = str.length() - suffix.length();",
    "info" : "VariableDeclarationStatement[262018-262065]:VariableDeclarationStatement[261877-261924]"
  }, {
    "left" : "return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());",
    "right" : "return CharSequenceUtils.regionMatches(str, ignoreCase, strOffset, suffix, 0, suffix.length());",
    "info" : "ReturnStatement[262074-262169]:ReturnStatement[261933-262028]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[263840-263846]:Modifier[263699-263705]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[263847-263853]:Modifier[263706-263712]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[263854-263860]:SimpleType[263713-263719]"
  }, {
    "left" : "normalizeSpace",
    "right" : "normalizeSpace",
    "info" : "SimpleName[263861-263875]:SimpleName[263720-263734]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[263876-263886]:SingleVariableDeclaration[263735-263745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[263888-264025]:Block[263747-263884]"
  }, {
    "left" : "if (str == null)",
    "right" : "if (str == null)",
    "info" : "IfStatement[263898-263951]:IfStatement[263757-263810]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[263915-263951]:Block[263774-263810]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[263929-263941]:ReturnStatement[263788-263800]"
  }, {
    "left" : "return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll(\" \");",
    "right" : "return WHITESPACE_BLOCK.matcher(trim(str)).replaceAll(\" \");",
    "info" : "ReturnStatement[263960-264019]:ReturnStatement[263819-263878]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[264862-264868]:Modifier[264721-264727]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[264869-264875]:Modifier[264728-264734]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[264876-264883]:PrimitiveType[264735-264742]"
  }, {
    "left" : "endsWithAny",
    "right" : "endsWithAny",
    "info" : "SimpleName[264884-264895]:SimpleName[264743-264754]"
  }, {
    "left" : "CharSequence string",
    "right" : "CharSequence string",
    "info" : "SingleVariableDeclaration[264896-264915]:SingleVariableDeclaration[264755-264774]"
  }, {
    "left" : "CharSequence... searchStrings",
    "right" : "CharSequence... searchStrings",
    "info" : "SingleVariableDeclaration[264917-264946]:SingleVariableDeclaration[264776-264805]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[264948-265311]:Block[264807-265170]"
  }, {
    "left" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
    "right" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
    "info" : "IfStatement[264958-265053]:IfStatement[264817-264912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[265016-265053]:Block[264875-264912]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[265030-265043]:ReturnStatement[264889-264902]"
  }, {
    "left" : "for (int i = 0; i < searchStrings.length; i++)",
    "right" : "for (int i = 0; i < searchStrings.length; i++)",
    "info" : "ForStatement[265062-265283]:ForStatement[264921-265142]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[265109-265283]:Block[264968-265142]"
  }, {
    "left" : "CharSequence searchString = searchStrings[i];",
    "right" : "CharSequence searchString = searchStrings[i];",
    "info" : "VariableDeclarationStatement[265123-265168]:VariableDeclarationStatement[264982-265027]"
  }, {
    "left" : "if (StringUtils.endsWith(string, searchString))",
    "right" : "if (StringUtils.endsWith(string, searchString))",
    "info" : "IfStatement[265181-265273]:IfStatement[265040-265132]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[265229-265273]:Block[265088-265132]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[265247-265259]:ReturnStatement[265106-265118]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[265292-265305]:ReturnStatement[265151-265164]"
  } ]
}