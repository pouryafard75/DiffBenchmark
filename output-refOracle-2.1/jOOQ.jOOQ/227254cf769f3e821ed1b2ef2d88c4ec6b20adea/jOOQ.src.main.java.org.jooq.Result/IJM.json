{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Result",
      "right" : "Result",
      "info" : "TypeDeclaration[1691-125963]:TypeDeclaration[1691-128896]"
    }, {
      "left" : "RecordType<R> recordType();",
      "right" : "RecordType<R> recordType();",
      "info" : "MethodDeclaration[1967-2048]:MethodDeclaration[1967-2048]"
    }, {
      "left" : "Row fieldsRow();",
      "right" : "Row fieldsRow();",
      "info" : "MethodDeclaration[2054-2136]:MethodDeclaration[2054-2136]"
    }, {
      "left" : "<T> Field<T> field(Field<T> field);",
      "right" : "<T> Field<T> field(Field<T> field);",
      "info" : "MethodDeclaration[2142-2275]:MethodDeclaration[2142-2275]"
    }, {
      "left" : "Field<?> field(String name);",
      "right" : "Field<?> field(String name);",
      "info" : "MethodDeclaration[2281-2408]:MethodDeclaration[2281-2408]"
    }, {
      "left" : "<T> Field<T> field(String name, Class<T> type);",
      "right" : "<T> Field<T> field(String name, Class<T> type);",
      "info" : "MethodDeclaration[2414-2597]:MethodDeclaration[2414-2597]"
    }, {
      "left" : "<T> Field<T> field(String name, DataType<T> dataType);",
      "right" : "<T> Field<T> field(String name, DataType<T> dataType);",
      "info" : "MethodDeclaration[2603-2800]:MethodDeclaration[2603-2800]"
    }, {
      "left" : "Field<?> field(Name name);",
      "right" : "Field<?> field(Name name);",
      "info" : "MethodDeclaration[2806-2929]:MethodDeclaration[2806-2929]"
    }, {
      "left" : "<T> Field<T> field(Name name, Class<T> type);",
      "right" : "<T> Field<T> field(Name name, Class<T> type);",
      "info" : "MethodDeclaration[2935-3114]:MethodDeclaration[2935-3114]"
    }, {
      "left" : "<T> Field<T> field(Name name, DataType<T> dataType);",
      "right" : "<T> Field<T> field(Name name, DataType<T> dataType);",
      "info" : "MethodDeclaration[3120-3313]:MethodDeclaration[3120-3313]"
    }, {
      "left" : "Field<?> field(int index);",
      "right" : "Field<?> field(int index);",
      "info" : "MethodDeclaration[3319-3441]:MethodDeclaration[3319-3441]"
    }, {
      "left" : "<T> Field<T> field(int index, Class<T> type);",
      "right" : "<T> Field<T> field(int index, Class<T> type);",
      "info" : "MethodDeclaration[3447-3625]:MethodDeclaration[3447-3625]"
    }, {
      "left" : "<T> Field<T> field(int index, DataType<T> dataType);",
      "right" : "<T> Field<T> field(int index, DataType<T> dataType);",
      "info" : "MethodDeclaration[3631-3823]:MethodDeclaration[3631-3823]"
    }, {
      "left" : "Field<?>[] fields();",
      "right" : "Field<?>[] fields();",
      "info" : "MethodDeclaration[3829-3937]:MethodDeclaration[3829-3937]"
    }, {
      "left" : "<T> T getValue(int index, Field<T> field) throws IndexOutOfBoundsException, IllegalArgumentException;",
      "right" : "<T> T getValue(int index, Field<T> field) throws IndexOutOfBoundsException, IllegalArgumentException;",
      "info" : "MethodDeclaration[3943-4566]:MethodDeclaration[3943-4566]"
    }, {
      "left" : "<T> T getValue(int index, Field<T> field, T defaultValue) throws IndexOutOfBoundsException,\n        IllegalArgumentException;",
      "right" : "<T> T getValue(int index, Field<T> field, T defaultValue) throws IndexOutOfBoundsException,\n        IllegalArgumentException;",
      "info" : "MethodDeclaration[4572-5394]:MethodDeclaration[4572-5394]"
    }, {
      "left" : "Object getValue(int index, int fieldIndex) throws IndexOutOfBoundsException, IllegalArgumentException;",
      "right" : "Object getValue(int index, int fieldIndex) throws IndexOutOfBoundsException, IllegalArgumentException;",
      "info" : "MethodDeclaration[5400-5979]:MethodDeclaration[5400-5979]"
    }, {
      "left" : "Object getValue(int index, int fieldIndex, Object defaultValue) throws IndexOutOfBoundsException,\n        IllegalArgumentException;",
      "right" : "Object getValue(int index, int fieldIndex, Object defaultValue) throws IndexOutOfBoundsException,\n        IllegalArgumentException;",
      "info" : "MethodDeclaration[5985-6768]:MethodDeclaration[5985-6768]"
    }, {
      "left" : "Object getValue(int index, String fieldName) throws IndexOutOfBoundsException, IllegalArgumentException;",
      "right" : "Object getValue(int index, String fieldName) throws IndexOutOfBoundsException, IllegalArgumentException;",
      "info" : "MethodDeclaration[6774-7352]:MethodDeclaration[6774-7352]"
    }, {
      "left" : "Object getValue(int index, String fieldName, Object defaultValue) throws IndexOutOfBoundsException,\n        IllegalArgumentException;",
      "right" : "Object getValue(int index, String fieldName, Object defaultValue) throws IndexOutOfBoundsException,\n        IllegalArgumentException;",
      "info" : "MethodDeclaration[7358-8140]:MethodDeclaration[7358-8140]"
    }, {
      "left" : "<T> List<T> getValues(Field<T> field) throws IllegalArgumentException;",
      "right" : "<T> List<T> getValues(Field<T> field) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[8146-8621]:MethodDeclaration[8146-8621]"
    }, {
      "left" : "<T> List<T> getValues(Field<?> field, Class<? extends T> type) throws IllegalArgumentException;",
      "right" : "<T> List<T> getValues(Field<?> field, Class<? extends T> type) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[8627-9204]:MethodDeclaration[8627-9204]"
    }, {
      "left" : "<T, U> List<U> getValues(Field<T> field, Converter<? super T, U> converter) throws IllegalArgumentException;",
      "right" : "<T, U> List<U> getValues(Field<T> field, Converter<? super T, U> converter) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[9210-9828]:MethodDeclaration[9210-9828]"
    }, {
      "left" : "List<?> getValues(int fieldIndex) throws IllegalArgumentException;",
      "right" : "List<?> getValues(int fieldIndex) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[9834-10260]:MethodDeclaration[9834-10260]"
    }, {
      "left" : "<T> List<T> getValues(int fieldIndex, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> List<T> getValues(int fieldIndex, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[10266-10997]:MethodDeclaration[10266-10997]"
    }, {
      "left" : "<U> List<U> getValues(int fieldIndex, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "right" : "<U> List<U> getValues(int fieldIndex, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[11003-11764]:MethodDeclaration[11003-11764]"
    }, {
      "left" : "List<?> getValues(String fieldName) throws IllegalArgumentException;",
      "right" : "List<?> getValues(String fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[11770-12195]:MethodDeclaration[11770-12195]"
    }, {
      "left" : "<T> List<T> getValues(String fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> List<T> getValues(String fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[12201-12934]:MethodDeclaration[12201-12934]"
    }, {
      "left" : "<U> List<U> getValues(String fieldName, Converter<?, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "right" : "<U> List<U> getValues(String fieldName, Converter<?, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "info" : "MethodDeclaration[12940-13711]:MethodDeclaration[12940-13711]"
    }, {
      "left" : "List<?> getValues(Name fieldName) throws IllegalArgumentException;",
      "right" : "List<?> getValues(Name fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[13717-14140]:MethodDeclaration[13717-14140]"
    }, {
      "left" : "<T> List<T> getValues(Name fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> List<T> getValues(Name fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[14146-14875]:MethodDeclaration[14146-14875]"
    }, {
      "left" : "<U> List<U> getValues(Name fieldName, Converter<?, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "right" : "<U> List<U> getValues(Name fieldName, Converter<?, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "info" : "MethodDeclaration[14881-15648]:MethodDeclaration[14881-15648]"
    }, {
      "left" : "boolean isEmpty();",
      "right" : "boolean isEmpty();",
      "info" : "MethodDeclaration[15654-15778]:MethodDeclaration[15654-15778]"
    }, {
      "left" : "boolean isNotEmpty();",
      "right" : "boolean isNotEmpty();",
      "info" : "MethodDeclaration[15784-15897]:MethodDeclaration[15784-15897]"
    }, {
      "left" : "String format();",
      "right" : "String format();",
      "info" : "MethodDeclaration[15903-16144]:MethodDeclaration[15903-16144]"
    }, {
      "left" : "String format(int maxRecords);",
      "right" : "String format(int maxRecords);",
      "info" : "MethodDeclaration[16150-16408]:MethodDeclaration[16150-16408]"
    }, {
      "left" : "String formatHTML();",
      "right" : "String formatHTML();",
      "info" : "MethodDeclaration[16414-17380]:MethodDeclaration[16414-17380]"
    }, {
      "left" : "String formatCSV();",
      "right" : "String formatCSV();",
      "info" : "MethodDeclaration[17386-17610]:MethodDeclaration[17386-17616]"
    }, {
      "left" : "String formatCSV(char delimiter);",
      "right" : "String formatCSV(char delimiter);",
      "info" : "MethodDeclaration[17616-17921]:MethodDeclaration[17622-17933]"
    }, {
      "left" : "String formatCSV(char delimiter, String nullString);",
      "right" : "String formatCSV(char delimiter, String nullString);",
      "info" : "MethodDeclaration[17927-18248]:MethodDeclaration[17939-18358]"
    }, {
      "left" : "String formatJSON();",
      "right" : "String formatJSON();",
      "info" : "MethodDeclaration[18254-18805]:MethodDeclaration[19278-19829]"
    }, {
      "left" : "String formatXML();",
      "right" : "String formatXML();",
      "info" : "MethodDeclaration[18811-19024]:MethodDeclaration[19835-20048]"
    }, {
      "left" : "String formatInsert();",
      "right" : "String formatInsert();",
      "info" : "MethodDeclaration[19030-19450]:MethodDeclaration[20054-20474]"
    }, {
      "left" : "String formatInsert(Table<?> table, Field<?>... fields);",
      "right" : "String formatInsert(Table<?> table, Field<?>... fields);",
      "info" : "MethodDeclaration[19456-19805]:MethodDeclaration[20480-20829]"
    }, {
      "left" : "void format(OutputStream stream) throws IOException;",
      "right" : "void format(OutputStream stream) throws IOException;",
      "info" : "MethodDeclaration[19811-20077]:MethodDeclaration[20835-21101]"
    }, {
      "left" : "void format(OutputStream stream, int maxRecords) throws IOException;",
      "right" : "void format(OutputStream stream, int maxRecords) throws IOException;",
      "info" : "MethodDeclaration[20083-20368]:MethodDeclaration[21107-21392]"
    }, {
      "left" : "void formatHTML(OutputStream stream) throws IOException;",
      "right" : "void formatHTML(OutputStream stream) throws IOException;",
      "info" : "MethodDeclaration[20374-20648]:MethodDeclaration[21398-21672]"
    }, {
      "left" : "void formatCSV(OutputStream stream) throws IOException;",
      "right" : "void formatCSV(OutputStream stream) throws IOException;",
      "info" : "MethodDeclaration[20654-20926]:MethodDeclaration[21678-21950]"
    }, {
      "left" : "void formatCSV(OutputStream stream, char delimiter) throws IOException;",
      "right" : "void formatCSV(OutputStream stream, char delimiter) throws IOException;",
      "info" : "MethodDeclaration[20932-21224]:MethodDeclaration[21956-22248]"
    }, {
      "left" : "void formatCSV(OutputStream stream, char delimiter, String nullString) throws IOException;",
      "right" : "void formatCSV(OutputStream stream, char delimiter, String nullString) throws IOException;",
      "info" : "MethodDeclaration[21230-21549]:MethodDeclaration[22254-22573]"
    }, {
      "left" : "void formatJSON(OutputStream stream) throws IOException;",
      "right" : "void formatJSON(OutputStream stream) throws IOException;",
      "info" : "MethodDeclaration[21555-21829]:MethodDeclaration[23553-23827]"
    }, {
      "left" : "void formatXML(OutputStream stream) throws IOException;",
      "right" : "void formatXML(OutputStream stream) throws IOException;",
      "info" : "MethodDeclaration[21835-22107]:MethodDeclaration[23833-24105]"
    }, {
      "left" : "void formatInsert(OutputStream stream) throws IOException;",
      "right" : "void formatInsert(OutputStream stream) throws IOException;",
      "info" : "MethodDeclaration[22113-22391]:MethodDeclaration[24111-24389]"
    }, {
      "left" : "void formatInsert(OutputStream stream, Table<?> table, Field<?>... fields) throws IOException;",
      "right" : "void formatInsert(OutputStream stream, Table<?> table, Field<?>... fields) throws IOException;",
      "info" : "MethodDeclaration[22397-22726]:MethodDeclaration[24395-24724]"
    }, {
      "left" : "void format(Writer writer) throws IOException;",
      "right" : "void format(Writer writer) throws IOException;",
      "info" : "MethodDeclaration[22732-22985]:MethodDeclaration[24730-24983]"
    }, {
      "left" : "void format(Writer writer, int maxRecords) throws IOException;",
      "right" : "void format(Writer writer, int maxRecords) throws IOException;",
      "info" : "MethodDeclaration[22991-23263]:MethodDeclaration[24989-25261]"
    }, {
      "left" : "void formatHTML(Writer writer) throws IOException;",
      "right" : "void formatHTML(Writer writer) throws IOException;",
      "info" : "MethodDeclaration[23269-23530]:MethodDeclaration[25267-25528]"
    }, {
      "left" : "void formatCSV(Writer writer) throws IOException;",
      "right" : "void formatCSV(Writer writer) throws IOException;",
      "info" : "MethodDeclaration[23536-23795]:MethodDeclaration[25534-25793]"
    }, {
      "left" : "void formatCSV(Writer writer, char delimiter) throws IOException;",
      "right" : "void formatCSV(Writer writer, char delimiter) throws IOException;",
      "info" : "MethodDeclaration[23801-24080]:MethodDeclaration[25799-26078]"
    }, {
      "left" : "void formatCSV(Writer writer, char delimiter, String nullString) throws IOException;",
      "right" : "void formatCSV(Writer writer, char delimiter, String nullString) throws IOException;",
      "info" : "MethodDeclaration[24086-24392]:MethodDeclaration[26084-26390]"
    }, {
      "left" : "void formatJSON(Writer writer) throws IOException;",
      "right" : "void formatJSON(Writer writer) throws IOException;",
      "info" : "MethodDeclaration[24398-24659]:MethodDeclaration[27331-27592]"
    }, {
      "left" : "void formatXML(Writer writer) throws IOException;",
      "right" : "void formatXML(Writer writer) throws IOException;",
      "info" : "MethodDeclaration[24665-24924]:MethodDeclaration[27598-27857]"
    }, {
      "left" : "void formatInsert(Writer writer) throws IOException;",
      "right" : "void formatInsert(Writer writer) throws IOException;",
      "info" : "MethodDeclaration[24930-25195]:MethodDeclaration[27863-28128]"
    }, {
      "left" : "void formatInsert(Writer writer, Table<?> table, Field<?>... fields) throws IOException;",
      "right" : "void formatInsert(Writer writer, Table<?> table, Field<?>... fields) throws IOException;",
      "info" : "MethodDeclaration[25201-25518]:MethodDeclaration[28134-28451]"
    }, {
      "left" : "Document intoXML();",
      "right" : "Document intoXML();",
      "info" : "MethodDeclaration[25524-25752]:MethodDeclaration[28457-28685]"
    }, {
      "left" : "<H extends ContentHandler> H intoXML(H handler) throws SAXException;",
      "right" : "<H extends ContentHandler> H intoXML(H handler) throws SAXException;",
      "info" : "MethodDeclaration[25758-26198]:MethodDeclaration[28691-29131]"
    }, {
      "left" : "List<Map<String, Object>> intoMaps();",
      "right" : "List<Map<String, Object>> intoMaps();",
      "info" : "MethodDeclaration[26204-26385]:MethodDeclaration[29137-29318]"
    }, {
      "left" : "<K> Map<K, R> intoMap(Field<K> key) throws IllegalArgumentException, InvalidResultException;",
      "right" : "<K> Map<K, R> intoMap(Field<K> key) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[26391-27285]:MethodDeclaration[29324-30218]"
    }, {
      "left" : "Map<?, R> intoMap(int keyFieldIndex) throws IllegalArgumentException, InvalidResultException;",
      "right" : "Map<?, R> intoMap(int keyFieldIndex) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[27291-28161]:MethodDeclaration[30224-31094]"
    }, {
      "left" : "Map<?, R> intoMap(String keyFieldName) throws IllegalArgumentException, InvalidResultException;",
      "right" : "Map<?, R> intoMap(String keyFieldName) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[28167-29039]:MethodDeclaration[31100-31972]"
    }, {
      "left" : "Map<?, R> intoMap(Name keyFieldName) throws IllegalArgumentException, InvalidResultException;",
      "right" : "Map<?, R> intoMap(Name keyFieldName) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[29045-29913]:MethodDeclaration[31978-32846]"
    }, {
      "left" : "<K, V> Map<K, V> intoMap(Field<K> key, Field<V> value) throws IllegalArgumentException, InvalidResultException;",
      "right" : "<K, V> Map<K, V> intoMap(Field<K> key, Field<V> value) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[29919-30941]:MethodDeclaration[32852-33874]"
    }, {
      "left" : "Map<?, ?> intoMap(int keyFieldIndex, int valueFieldIndex) throws IllegalArgumentException,\n        InvalidResultException;",
      "right" : "Map<?, ?> intoMap(int keyFieldIndex, int valueFieldIndex) throws IllegalArgumentException,\n        InvalidResultException;",
      "info" : "MethodDeclaration[30947-31919]:MethodDeclaration[33880-34852]"
    }, {
      "left" : "Map<?, ?> intoMap(String keyFieldName, String valueFieldName) throws IllegalArgumentException,\n        InvalidResultException;",
      "right" : "Map<?, ?> intoMap(String keyFieldName, String valueFieldName) throws IllegalArgumentException,\n        InvalidResultException;",
      "info" : "MethodDeclaration[31925-32883]:MethodDeclaration[34858-35816]"
    }, {
      "left" : "Map<?, ?> intoMap(Name keyFieldName, Name valueFieldName) throws IllegalArgumentException,\n        InvalidResultException;",
      "right" : "Map<?, ?> intoMap(Name keyFieldName, Name valueFieldName) throws IllegalArgumentException,\n        InvalidResultException;",
      "info" : "MethodDeclaration[32889-33839]:MethodDeclaration[35822-36772]"
    }, {
      "left" : "<K, E> Map<K, E> intoMap(Field<K> key, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<K, E> Map<K, E> intoMap(Field<K> key, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[33845-34919]:MethodDeclaration[36778-37852]"
    }, {
      "left" : "<E> Map<?, E> intoMap(int keyFieldIndex, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<?, E> intoMap(int keyFieldIndex, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[34925-36015]:MethodDeclaration[37858-38948]"
    }, {
      "left" : "<E> Map<?, E> intoMap(String keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<?, E> intoMap(String keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[36021-37114]:MethodDeclaration[38954-40047]"
    }, {
      "left" : "<E> Map<?, E> intoMap(Name keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<?, E> intoMap(Name keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[37120-38209]:MethodDeclaration[40053-41142]"
    }, {
      "left" : "<K, E> Map<K, E> intoMap(Field<K> key, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<K, E> Map<K, E> intoMap(Field<K> key, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[38215-39298]:MethodDeclaration[41148-42231]"
    }, {
      "left" : "<E> Map<?, E> intoMap(int keyFieldIndex, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<?, E> intoMap(int keyFieldIndex, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[39304-40403]:MethodDeclaration[42237-43336]"
    }, {
      "left" : "<E> Map<?, E> intoMap(String keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<?, E> intoMap(String keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[40409-41511]:MethodDeclaration[43342-44444]"
    }, {
      "left" : "<E> Map<?, E> intoMap(Name keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<?, E> intoMap(Name keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[41517-42615]:MethodDeclaration[44450-45548]"
    }, {
      "left" : "Map<Record, R> intoMap(Field<?>[] keys) throws IllegalArgumentException, InvalidResultException;",
      "right" : "Map<Record, R> intoMap(Field<?>[] keys) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[42621-43546]:MethodDeclaration[45554-46479]"
    }, {
      "left" : "Map<Record, R> intoMap(int[] keyFieldIndexes) throws IllegalArgumentException, InvalidResultException;",
      "right" : "Map<Record, R> intoMap(int[] keyFieldIndexes) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[43552-44499]:MethodDeclaration[46485-47432]"
    }, {
      "left" : "Map<Record, R> intoMap(String[] keyFieldNames) throws IllegalArgumentException, InvalidResultException;",
      "right" : "Map<Record, R> intoMap(String[] keyFieldNames) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[44505-45452]:MethodDeclaration[47438-48385]"
    }, {
      "left" : "Map<Record, R> intoMap(Name[] keyFieldNames) throws IllegalArgumentException, InvalidResultException;",
      "right" : "Map<Record, R> intoMap(Name[] keyFieldNames) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[45458-46401]:MethodDeclaration[48391-49334]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(Field<?>[] keys, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(Field<?>[] keys, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[46407-47625]:MethodDeclaration[49340-50558]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[47631-48871]:MethodDeclaration[50564-51804]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(String[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(String[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[48877-50117]:MethodDeclaration[51810-53050]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(Name[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(Name[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[50123-51359]:MethodDeclaration[53056-54292]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(Field<?>[] keys, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(Field<?>[] keys, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[51365-52592]:MethodDeclaration[54298-55525]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[52598-53847]:MethodDeclaration[55531-56780]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(String[] keyFieldNames, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(String[] keyFieldNames, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[53853-55102]:MethodDeclaration[56786-58035]"
    }, {
      "left" : "<E> Map<List<?>, E> intoMap(Name[] keyFieldNames, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E> Map<List<?>, E> intoMap(Name[] keyFieldNames, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[55108-56353]:MethodDeclaration[58041-59286]"
    }, {
      "left" : "<S extends Record> Map<S, R> intoMap(Table<S> table) throws IllegalArgumentException, InvalidResultException;",
      "right" : "<S extends Record> Map<S, R> intoMap(Table<S> table) throws IllegalArgumentException, InvalidResultException;",
      "info" : "MethodDeclaration[56359-57220]:MethodDeclaration[59292-60153]"
    }, {
      "left" : "<E, S extends Record> Map<S, E> intoMap(Table<S> table, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E, S extends Record> Map<S, E> intoMap(Table<S> table, Class<? extends E> type) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[57226-58378]:MethodDeclaration[60159-61311]"
    }, {
      "left" : "<E, S extends Record> Map<S, E> intoMap(Table<S> table, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "right" : "<E, S extends Record> Map<S, E> intoMap(Table<S> table, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        InvalidResultException, MappingException;",
      "info" : "MethodDeclaration[58384-59545]:MethodDeclaration[61317-62478]"
    }, {
      "left" : "<K> Map<K, Result<R>> intoGroups(Field<K> key) throws IllegalArgumentException;",
      "right" : "<K> Map<K, Result<R>> intoGroups(Field<K> key) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[59551-60135]:MethodDeclaration[62484-63068]"
    }, {
      "left" : "Map<?, Result<R>> intoGroups(int keyFieldIndex) throws IllegalArgumentException;",
      "right" : "Map<?, Result<R>> intoGroups(int keyFieldIndex) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[60141-60699]:MethodDeclaration[63074-63632]"
    }, {
      "left" : "Map<?, Result<R>> intoGroups(String keyFieldName) throws IllegalArgumentException;",
      "right" : "Map<?, Result<R>> intoGroups(String keyFieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[60705-61265]:MethodDeclaration[63638-64198]"
    }, {
      "left" : "Map<?, Result<R>> intoGroups(Name keyFieldName) throws IllegalArgumentException;",
      "right" : "Map<?, Result<R>> intoGroups(Name keyFieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[61271-61827]:MethodDeclaration[64204-64760]"
    }, {
      "left" : "<K, V> Map<K, List<V>> intoGroups(Field<K> key, Field<V> value) throws IllegalArgumentException;",
      "right" : "<K, V> Map<K, List<V>> intoGroups(Field<K> key, Field<V> value) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[61833-62538]:MethodDeclaration[64766-65471]"
    }, {
      "left" : "Map<?, List<?>> intoGroups(int keyFieldIndex, int valueFieldIndex) throws IllegalArgumentException;",
      "right" : "Map<?, List<?>> intoGroups(int keyFieldIndex, int valueFieldIndex) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[62544-63192]:MethodDeclaration[65477-66125]"
    }, {
      "left" : "Map<?, List<?>> intoGroups(String keyFieldName, String valueFieldName) throws IllegalArgumentException;",
      "right" : "Map<?, List<?>> intoGroups(String keyFieldName, String valueFieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[63198-63850]:MethodDeclaration[66131-66783]"
    }, {
      "left" : "Map<?, List<?>> intoGroups(Name keyFieldName, Name valueFieldName) throws IllegalArgumentException;",
      "right" : "Map<?, List<?>> intoGroups(Name keyFieldName, Name valueFieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[63856-64500]:MethodDeclaration[66789-67433]"
    }, {
      "left" : "<K, E> Map<K, List<E>> intoGroups(Field<K> key, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<K, E> Map<K, List<E>> intoGroups(Field<K> key, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[64506-65252]:MethodDeclaration[67439-68185]"
    }, {
      "left" : "<E> Map<?, List<E>> intoGroups(int keyFieldIndex, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<?, List<E>> intoGroups(int keyFieldIndex, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[65258-65938]:MethodDeclaration[68191-68871]"
    }, {
      "left" : "<E> Map<?, List<E>> intoGroups(String keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<?, List<E>> intoGroups(String keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[65944-66623]:MethodDeclaration[68877-69556]"
    }, {
      "left" : "<E> Map<?, List<E>> intoGroups(Name keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<?, List<E>> intoGroups(Name keyFieldName, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[66629-67306]:MethodDeclaration[69562-70239]"
    }, {
      "left" : "<K, E> Map<K, List<E>> intoGroups(Field<K> key, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<K, E> Map<K, List<E>> intoGroups(Field<K> key, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[67312-68024]:MethodDeclaration[70245-70957]"
    }, {
      "left" : "<E> Map<?, List<E>> intoGroups(int keyFieldIndex, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<?, List<E>> intoGroups(int keyFieldIndex, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[68030-68676]:MethodDeclaration[70963-71609]"
    }, {
      "left" : "<E> Map<?, List<E>> intoGroups(String keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<?, List<E>> intoGroups(String keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[68682-69327]:MethodDeclaration[71615-72260]"
    }, {
      "left" : "<E> Map<?, List<E>> intoGroups(Name keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<?, List<E>> intoGroups(Name keyFieldName, RecordMapper<? super R, E> mapper) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[69333-69976]:MethodDeclaration[72266-72909]"
    }, {
      "left" : "Map<Record, Result<R>> intoGroups(Field<?>[] keys) throws IllegalArgumentException;",
      "right" : "Map<Record, Result<R>> intoGroups(Field<?>[] keys) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[69982-70599]:MethodDeclaration[72915-73532]"
    }, {
      "left" : "Map<Record, Result<R>> intoGroups(int[] keyFieldIndexes) throws IllegalArgumentException;",
      "right" : "Map<Record, Result<R>> intoGroups(int[] keyFieldIndexes) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[70605-71244]:MethodDeclaration[73538-74177]"
    }, {
      "left" : "Map<Record, Result<R>> intoGroups(String[] keyFieldNames) throws IllegalArgumentException;",
      "right" : "Map<Record, Result<R>> intoGroups(String[] keyFieldNames) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[71250-71889]:MethodDeclaration[74183-74822]"
    }, {
      "left" : "Map<Record, Result<R>> intoGroups(Name[] keyFieldNames) throws IllegalArgumentException;",
      "right" : "Map<Record, Result<R>> intoGroups(Name[] keyFieldNames) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[71895-72530]:MethodDeclaration[74828-75463]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(Field<?>[] keys, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(Field<?>[] keys, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[72536-73483]:MethodDeclaration[75469-76416]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[73489-74458]:MethodDeclaration[76422-77391]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[74464-75433]:MethodDeclaration[77397-78366]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, Class<? extends E> type) throws IllegalArgumentException,\n        MappingException;",
      "info" : "MethodDeclaration[75439-76404]:MethodDeclaration[78372-79337]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(Field<?>[] keys, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(Field<?>[] keys, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "info" : "MethodDeclaration[76410-77380]:MethodDeclaration[79343-80313]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(int[] keyFieldIndexes, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "info" : "MethodDeclaration[77386-78378]:MethodDeclaration[80319-81311]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(String[] keyFieldNames, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "info" : "MethodDeclaration[78384-79378]:MethodDeclaration[81317-82311]"
    }, {
      "left" : "<E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "right" : "<E> Map<Record, List<E>> intoGroups(Name[] keyFieldNames, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "info" : "MethodDeclaration[79384-80374]:MethodDeclaration[82317-83307]"
    }, {
      "left" : "<S extends Record> Map<S, Result<R>> intoGroups(Table<S> table) throws IllegalArgumentException;",
      "right" : "<S extends Record> Map<S, Result<R>> intoGroups(Table<S> table) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[80380-80933]:MethodDeclaration[83313-83866]"
    }, {
      "left" : "<E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, Class<? extends E> type)\n        throws IllegalArgumentException, MappingException;",
      "right" : "<E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, Class<? extends E> type)\n        throws IllegalArgumentException, MappingException;",
      "info" : "MethodDeclaration[80939-81821]:MethodDeclaration[83872-84754]"
    }, {
      "left" : "<E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "right" : "<E, S extends Record> Map<S, List<E>> intoGroups(Table<S> table, RecordMapper<? super R, E> mapper)\n        throws IllegalArgumentException, MappingException;",
      "info" : "MethodDeclaration[81827-82732]:MethodDeclaration[84760-85665]"
    }, {
      "left" : "Object[][] intoArray();",
      "right" : "Object[][] intoArray();",
      "info" : "MethodDeclaration[82738-82867]:MethodDeclaration[85671-85800]"
    }, {
      "left" : "Object[][] intoArrays();",
      "right" : "Object[][] intoArrays();",
      "info" : "MethodDeclaration[82873-83467]:MethodDeclaration[85806-86400]"
    }, {
      "left" : "Object[] intoArray(int fieldIndex) throws IllegalArgumentException;",
      "right" : "Object[] intoArray(int fieldIndex) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[83473-84123]:MethodDeclaration[86406-87056]"
    }, {
      "left" : "<T> T[] intoArray(int fieldIndex, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> T[] intoArray(int fieldIndex, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[84129-84763]:MethodDeclaration[87062-87696]"
    }, {
      "left" : "<U> U[] intoArray(int fieldIndex, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "right" : "<U> U[] intoArray(int fieldIndex, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[84769-85409]:MethodDeclaration[87702-88342]"
    }, {
      "left" : "Object[] intoArray(String fieldName) throws IllegalArgumentException;",
      "right" : "Object[] intoArray(String fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[85415-86066]:MethodDeclaration[88348-88999]"
    }, {
      "left" : "<T> T[] intoArray(String fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> T[] intoArray(String fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[86072-86708]:MethodDeclaration[89005-89641]"
    }, {
      "left" : "<U> U[] intoArray(String fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "right" : "<U> U[] intoArray(String fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[86714-87356]:MethodDeclaration[89647-90289]"
    }, {
      "left" : "Object[] intoArray(Name fieldName) throws IllegalArgumentException;",
      "right" : "Object[] intoArray(Name fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[87362-88009]:MethodDeclaration[90295-90942]"
    }, {
      "left" : "<T> T[] intoArray(Name fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> T[] intoArray(Name fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[88015-88647]:MethodDeclaration[90948-91580]"
    }, {
      "left" : "<U> U[] intoArray(Name fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "right" : "<U> U[] intoArray(Name fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[88653-89291]:MethodDeclaration[91586-92224]"
    }, {
      "left" : "<T> T[] intoArray(Field<T> field) throws IllegalArgumentException;",
      "right" : "<T> T[] intoArray(Field<T> field) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[89297-89745]:MethodDeclaration[92230-92678]"
    }, {
      "left" : "<T> T[] intoArray(Field<?> field, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> T[] intoArray(Field<?> field, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[89751-90371]:MethodDeclaration[92684-93304]"
    }, {
      "left" : "<T, U> U[] intoArray(Field<T> field, Converter<? super T, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "right" : "<T, U> U[] intoArray(Field<T> field, Converter<? super T, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "info" : "MethodDeclaration[90377-91022]:MethodDeclaration[93310-93955]"
    }, {
      "left" : "Set<?> intoSet(int fieldIndex) throws IllegalArgumentException;",
      "right" : "Set<?> intoSet(int fieldIndex) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[91028-91553]:MethodDeclaration[93961-94486]"
    }, {
      "left" : "<T> Set<T> intoSet(int fieldIndex, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> Set<T> intoSet(int fieldIndex, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[91559-92073]:MethodDeclaration[94492-95006]"
    }, {
      "left" : "<U> Set<U> intoSet(int fieldIndex, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "right" : "<U> Set<U> intoSet(int fieldIndex, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[92079-92599]:MethodDeclaration[95012-95532]"
    }, {
      "left" : "Set<?> intoSet(String fieldName) throws IllegalArgumentException;",
      "right" : "Set<?> intoSet(String fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[92605-93132]:MethodDeclaration[95538-96065]"
    }, {
      "left" : "<T> Set<T> intoSet(String fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> Set<T> intoSet(String fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[93138-93655]:MethodDeclaration[96071-96588]"
    }, {
      "left" : "<U> Set<U> intoSet(String fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "right" : "<U> Set<U> intoSet(String fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[93661-94184]:MethodDeclaration[96594-97117]"
    }, {
      "left" : "Set<?> intoSet(Name fieldName) throws IllegalArgumentException;",
      "right" : "Set<?> intoSet(Name fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[94190-94713]:MethodDeclaration[97123-97646]"
    }, {
      "left" : "<T> Set<T> intoSet(Name fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> Set<T> intoSet(Name fieldName, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[94719-95232]:MethodDeclaration[97652-98165]"
    }, {
      "left" : "<U> Set<U> intoSet(Name fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "right" : "<U> Set<U> intoSet(Name fieldName, Converter<?, U> converter) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[95238-95757]:MethodDeclaration[98171-98690]"
    }, {
      "left" : "<T> Set<T> intoSet(Field<T> field) throws IllegalArgumentException;",
      "right" : "<T> Set<T> intoSet(Field<T> field) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[95763-96096]:MethodDeclaration[98696-99029]"
    }, {
      "left" : "<T> Set<T> intoSet(Field<?> field, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "right" : "<T> Set<T> intoSet(Field<?> field, Class<? extends T> type) throws IllegalArgumentException, DataTypeException;",
      "info" : "MethodDeclaration[96102-96607]:MethodDeclaration[99035-99540]"
    }, {
      "left" : "<T, U> Set<U> intoSet(Field<T> field, Converter<? super T, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "right" : "<T, U> Set<U> intoSet(Field<T> field, Converter<? super T, U> converter) throws IllegalArgumentException,\n        DataTypeException;",
      "info" : "MethodDeclaration[96613-97143]:MethodDeclaration[99546-100076]"
    }, {
      "left" : "Result<Record> into(Field<?>... fields);",
      "right" : "Result<Record> into(Field<?>... fields);",
      "info" : "MethodDeclaration[97149-97422]:MethodDeclaration[100082-100355]"
    }, {
      "left" : "<T1> Result<Record1<T1>> into(Field<T1> field1);",
      "right" : "<T1> Result<Record1<T1>> into(Field<T1> field1);",
      "info" : "MethodDeclaration[97469-97759]:MethodDeclaration[100402-100692]"
    }, {
      "left" : "<T1, T2> Result<Record2<T1, T2>> into(Field<T1> field1, Field<T2> field2);",
      "right" : "<T1, T2> Result<Record2<T1, T2>> into(Field<T1> field1, Field<T2> field2);",
      "info" : "MethodDeclaration[97765-98081]:MethodDeclaration[100698-101014]"
    }, {
      "left" : "<T1, T2, T3> Result<Record3<T1, T2, T3>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3);",
      "right" : "<T1, T2, T3> Result<Record3<T1, T2, T3>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3);",
      "info" : "MethodDeclaration[98087-98429]:MethodDeclaration[101020-101362]"
    }, {
      "left" : "<T1, T2, T3, T4> Result<Record4<T1, T2, T3, T4>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4);",
      "right" : "<T1, T2, T3, T4> Result<Record4<T1, T2, T3, T4>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4);",
      "info" : "MethodDeclaration[98435-98803]:MethodDeclaration[101368-101736]"
    }, {
      "left" : "<T1, T2, T3, T4, T5> Result<Record5<T1, T2, T3, T4, T5>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5);",
      "right" : "<T1, T2, T3, T4, T5> Result<Record5<T1, T2, T3, T4, T5>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5);",
      "info" : "MethodDeclaration[98809-99203]:MethodDeclaration[101742-102136]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6> Result<Record6<T1, T2, T3, T4, T5, T6>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6);",
      "right" : "<T1, T2, T3, T4, T5, T6> Result<Record6<T1, T2, T3, T4, T5, T6>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6);",
      "info" : "MethodDeclaration[99209-99629]:MethodDeclaration[102142-102562]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7> Result<Record7<T1, T2, T3, T4, T5, T6, T7>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7> Result<Record7<T1, T2, T3, T4, T5, T6, T7>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7);",
      "info" : "MethodDeclaration[99635-100081]:MethodDeclaration[102568-103014]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8> Result<Record8<T1, T2, T3, T4, T5, T6, T7, T8>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8> Result<Record8<T1, T2, T3, T4, T5, T6, T7, T8>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8);",
      "info" : "MethodDeclaration[100087-100559]:MethodDeclaration[103020-103492]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9> Result<Record9<T1, T2, T3, T4, T5, T6, T7, T8, T9>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9> Result<Record9<T1, T2, T3, T4, T5, T6, T7, T8, T9>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9);",
      "info" : "MethodDeclaration[100565-101063]:MethodDeclaration[103498-103996]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Result<Record10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Result<Record10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10);",
      "info" : "MethodDeclaration[101069-101598]:MethodDeclaration[104002-104531]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Result<Record11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Result<Record11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11);",
      "info" : "MethodDeclaration[101604-102163]:MethodDeclaration[104537-105096]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Result<Record12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Result<Record12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12);",
      "info" : "MethodDeclaration[102169-102758]:MethodDeclaration[105102-105691]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Result<Record13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Result<Record13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13);",
      "info" : "MethodDeclaration[102764-103383]:MethodDeclaration[105697-106316]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Result<Record14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Result<Record14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14);",
      "info" : "MethodDeclaration[103389-104038]:MethodDeclaration[106322-106971]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Result<Record15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> Result<Record15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15);",
      "info" : "MethodDeclaration[104044-104723]:MethodDeclaration[106977-107656]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Result<Record16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> Result<Record16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16);",
      "info" : "MethodDeclaration[104729-105438]:MethodDeclaration[107662-108371]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> Result<Record17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> Result<Record17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17);",
      "info" : "MethodDeclaration[105444-106183]:MethodDeclaration[108377-109116]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> Result<Record18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> Result<Record18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18);",
      "info" : "MethodDeclaration[106189-106958]:MethodDeclaration[109122-109891]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> Result<Record19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> Result<Record19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19);",
      "info" : "MethodDeclaration[106964-107763]:MethodDeclaration[109897-110696]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> Result<Record20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> Result<Record20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20);",
      "info" : "MethodDeclaration[107769-108598]:MethodDeclaration[110702-111531]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> Result<Record21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> Result<Record21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21);",
      "info" : "MethodDeclaration[108604-109463]:MethodDeclaration[111537-112396]"
    }, {
      "left" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> Result<Record22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21, Field<T22> field22);",
      "right" : "<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> Result<Record22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>> into(Field<T1> field1, Field<T2> field2, Field<T3> field3, Field<T4> field4, Field<T5> field5, Field<T6> field6, Field<T7> field7, Field<T8> field8, Field<T9> field9, Field<T10> field10, Field<T11> field11, Field<T12> field12, Field<T13> field13, Field<T14> field14, Field<T15> field15, Field<T16> field16, Field<T17> field17, Field<T18> field18, Field<T19> field19, Field<T20> field20, Field<T21> field21, Field<T22> field22);",
      "info" : "MethodDeclaration[109469-110358]:MethodDeclaration[112402-113291]"
    }, {
      "left" : "<E> List<E> into(Class<? extends E> type) throws MappingException;",
      "right" : "<E> List<E> into(Class<? extends E> type) throws MappingException;",
      "info" : "MethodDeclaration[110399-111029]:MethodDeclaration[113332-113962]"
    }, {
      "left" : "<Z extends Record> Result<Z> into(Table<Z> table) throws MappingException;",
      "right" : "<Z extends Record> Result<Z> into(Table<Z> table) throws MappingException;",
      "info" : "MethodDeclaration[111035-111650]:MethodDeclaration[113968-114583]"
    }, {
      "left" : "<H extends RecordHandler<? super R>> H into(H handler);",
      "right" : "<H extends RecordHandler<? super R>> H into(H handler);",
      "info" : "MethodDeclaration[111656-111902]:MethodDeclaration[114589-114835]"
    }, {
      "left" : "ResultSet intoResultSet();",
      "right" : "ResultSet intoResultSet();",
      "info" : "MethodDeclaration[111908-113207]:MethodDeclaration[114841-116140]"
    }, {
      "left" : "<E> List<E> map(RecordMapper<? super R, E> mapper);",
      "right" : "<E> List<E> map(RecordMapper<? super R, E> mapper);",
      "info" : "MethodDeclaration[113213-113419]:MethodDeclaration[116146-116352]"
    }, {
      "left" : "<T extends Comparable<? super T>> Result<R> sortAsc(Field<T> field) throws IllegalArgumentException;",
      "right" : "<T extends Comparable<? super T>> Result<R> sortAsc(Field<T> field) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[113425-113863]:MethodDeclaration[116358-116796]"
    }, {
      "left" : "<T extends Comparable<? super T>> Result<R> sortDesc(Field<T> field) throws IllegalArgumentException;",
      "right" : "<T extends Comparable<? super T>> Result<R> sortDesc(Field<T> field) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[113869-114316]:MethodDeclaration[116802-117249]"
    }, {
      "left" : "Result<R> sortAsc(int fieldIndex) throws IllegalArgumentException;",
      "right" : "Result<R> sortAsc(int fieldIndex) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[114322-114737]:MethodDeclaration[117255-117670]"
    }, {
      "left" : "Result<R> sortDesc(int fieldIndex) throws IllegalArgumentException;",
      "right" : "Result<R> sortDesc(int fieldIndex) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[114743-115167]:MethodDeclaration[117676-118100]"
    }, {
      "left" : "Result<R> sortAsc(String fieldName) throws IllegalArgumentException;",
      "right" : "Result<R> sortAsc(String fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[115173-115588]:MethodDeclaration[118106-118521]"
    }, {
      "left" : "Result<R> sortDesc(String fieldName) throws IllegalArgumentException;",
      "right" : "Result<R> sortDesc(String fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[115594-116018]:MethodDeclaration[118527-118951]"
    }, {
      "left" : "Result<R> sortAsc(Name fieldName) throws IllegalArgumentException;",
      "right" : "Result<R> sortAsc(Name fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[116024-116437]:MethodDeclaration[118957-119370]"
    }, {
      "left" : "Result<R> sortDesc(Name fieldName) throws IllegalArgumentException;",
      "right" : "Result<R> sortDesc(Name fieldName) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[116443-116865]:MethodDeclaration[119376-119798]"
    }, {
      "left" : "<T> Result<R> sortAsc(Field<T> field, java.util.Comparator<? super T> comparator) throws IllegalArgumentException;",
      "right" : "<T> Result<R> sortAsc(Field<T> field, java.util.Comparator<? super T> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[116871-117447]:MethodDeclaration[119804-120380]"
    }, {
      "left" : "<T> Result<R> sortDesc(Field<T> field, java.util.Comparator<? super T> comparator) throws IllegalArgumentException;",
      "right" : "<T> Result<R> sortDesc(Field<T> field, java.util.Comparator<? super T> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[117453-118045]:MethodDeclaration[120386-120978]"
    }, {
      "left" : "Result<R> sortAsc(int fieldIndex, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "right" : "Result<R> sortAsc(int fieldIndex, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[118051-118626]:MethodDeclaration[120984-121559]"
    }, {
      "left" : "Result<R> sortDesc(int fieldIndex, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "right" : "Result<R> sortDesc(int fieldIndex, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[118632-119223]:MethodDeclaration[121565-122156]"
    }, {
      "left" : "Result<R> sortAsc(String fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "right" : "Result<R> sortAsc(String fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[119229-119804]:MethodDeclaration[122162-122737]"
    }, {
      "left" : "Result<R> sortDesc(String fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "right" : "Result<R> sortDesc(String fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[119810-120401]:MethodDeclaration[122743-123334]"
    }, {
      "left" : "Result<R> sortAsc(Name fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "right" : "Result<R> sortAsc(Name fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[120407-120980]:MethodDeclaration[123340-123913]"
    }, {
      "left" : "Result<R> sortDesc(Name fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "right" : "Result<R> sortDesc(Name fieldName, java.util.Comparator<?> comparator) throws IllegalArgumentException;",
      "info" : "MethodDeclaration[120986-121575]:MethodDeclaration[123919-124508]"
    }, {
      "left" : "Result<R> sortAsc(java.util.Comparator<? super R> comparator);",
      "right" : "Result<R> sortAsc(java.util.Comparator<? super R> comparator);",
      "info" : "MethodDeclaration[121581-121834]:MethodDeclaration[124514-124767]"
    }, {
      "left" : "Result<R> sortDesc(java.util.Comparator<? super R> comparator);",
      "right" : "Result<R> sortDesc(java.util.Comparator<? super R> comparator);",
      "info" : "MethodDeclaration[121840-122102]:MethodDeclaration[124773-125035]"
    }, {
      "left" : "Result<R> intern(Field<?>... fields);",
      "right" : "Result<R> intern(Field<?>... fields);",
      "info" : "MethodDeclaration[122108-122461]:MethodDeclaration[125041-125394]"
    }, {
      "left" : "Result<R> intern(int... fieldIndexes);",
      "right" : "Result<R> intern(int... fieldIndexes);",
      "info" : "MethodDeclaration[122467-123333]:MethodDeclaration[125400-126266]"
    }, {
      "left" : "Result<R> intern(String... fieldNames);",
      "right" : "Result<R> intern(String... fieldNames);",
      "info" : "MethodDeclaration[123339-123708]:MethodDeclaration[126272-126641]"
    }, {
      "left" : "Result<R> intern(Name... fieldNames);",
      "right" : "Result<R> intern(Name... fieldNames);",
      "info" : "MethodDeclaration[123714-124081]:MethodDeclaration[126647-127014]"
    }, {
      "left" : "<O extends UpdatableRecord<O>> Result<O> fetchParents(ForeignKey<R, O> key) throws DataAccessException;",
      "right" : "<O extends UpdatableRecord<O>> Result<O> fetchParents(ForeignKey<R, O> key) throws DataAccessException;",
      "info" : "MethodDeclaration[124311-124730]:MethodDeclaration[127244-127663]"
    }, {
      "left" : "<O extends TableRecord<O>> Result<O> fetchChildren(ForeignKey<O, R> key) throws DataAccessException;",
      "right" : "<O extends TableRecord<O>> Result<O> fetchChildren(ForeignKey<O, R> key) throws DataAccessException;",
      "info" : "MethodDeclaration[124736-125155]:MethodDeclaration[127669-128088]"
    }, {
      "left" : "void attach(Configuration configuration);",
      "right" : "void attach(Configuration configuration);",
      "info" : "MethodDeclaration[125367-125729]:MethodDeclaration[128300-128662]"
    }, {
      "left" : "void detach();",
      "right" : "void detach();",
      "info" : "MethodDeclaration[125735-125960]:MethodDeclaration[128668-128893]"
    } ],
    "mappings" : [
 ]
  },
  "interFileMappings" : { }
}