{
  "matchedElements" : [
 {
    "left" : "class : DateTimeZone",
    "right" : "class : DateTimeZone",
    "info" : "TypeDeclaration[1575-49693]:TypeDeclaration[1575-49694]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[3689-3789]:FieldDeclaration[3689-3789]"
  }, {
    "left" : "UTC",
    "right" : "UTC",
    "info" : "FieldDeclaration[3795-3932]:FieldDeclaration[3795-3932]"
  }, {
    "left" : "cProvider",
    "right" : "cProvider",
    "info" : "FieldDeclaration[3938-4026]:FieldDeclaration[3938-4026]"
  }, {
    "left" : "cNameProvider",
    "right" : "cNameProvider",
    "info" : "FieldDeclaration[4031-4132]:FieldDeclaration[4031-4132]"
  }, {
    "left" : "cAvailableIDs",
    "right" : "cAvailableIDs",
    "info" : "FieldDeclaration[4137-4212]:FieldDeclaration[4137-4212]"
  }, {
    "left" : "cDefault",
    "right" : "cDefault",
    "info" : "FieldDeclaration[4217-4297]:FieldDeclaration[4217-4297]"
  }, {
    "left" : "cOffsetFormatter",
    "right" : "cOffsetFormatter",
    "info" : "FieldDeclaration[4302-4407]:FieldDeclaration[4302-4407]"
  }, {
    "left" : "iFixedOffsetCache",
    "right" : "iFixedOffsetCache",
    "info" : "FieldDeclaration[4413-4570]:FieldDeclaration[4413-4570]"
  }, {
    "left" : "cZoneIdConversion",
    "right" : "cZoneIdConversion",
    "info" : "FieldDeclaration[4576-4678]:FieldDeclaration[4576-4678]"
  }, {
    "left" : "public getDefault() : ",
    "right" : "public getDefault() : ",
    "info" : "MethodDeclaration[4842-6534]:MethodDeclaration[4842-6534]"
  }, {
    "left" : "public setDefault(zone ) : void",
    "right" : "public setDefault(zone ) : void",
    "info" : "MethodDeclaration[6540-7383]:MethodDeclaration[6540-7383]"
  }, {
    "left" : "public forID(id ) : ",
    "right" : "public forID(id ) : ",
    "info" : "MethodDeclaration[7467-8902]:MethodDeclaration[7467-8902]"
  }, {
    "left" : "public forOffsetHours(hoursOffset int) : ",
    "right" : "public forOffsetHours(hoursOffset int) : ",
    "info" : "MethodDeclaration[8908-9493]:MethodDeclaration[8908-9493]"
  }, {
    "left" : "public forOffsetHoursMinutes(hoursOffset int, minutesOffset int) : ",
    "right" : "public forOffsetHoursMinutes(hoursOffset int, minutesOffset int) : ",
    "info" : "MethodDeclaration[9499-11224]:MethodDeclaration[9499-11224]"
  }, {
    "left" : "public forOffsetMillis(millisOffset int) : ",
    "right" : "public forOffsetMillis(millisOffset int) : ",
    "info" : "MethodDeclaration[11230-11612]:MethodDeclaration[11230-11612]"
  }, {
    "left" : "public forTimeZone(zone ) : ",
    "right" : "public forTimeZone(zone ) : ",
    "info" : "MethodDeclaration[11618-13576]:MethodDeclaration[11618-13576]"
  }, {
    "left" : "private fixedOffsetZone(id , offset int) : ",
    "right" : "private fixedOffsetZone(id , offset int) : ",
    "info" : "MethodDeclaration[13660-14520]:MethodDeclaration[13660-14520]"
  }, {
    "left" : "public getAvailableIDs() : ",
    "right" : "public getAvailableIDs() : ",
    "info" : "MethodDeclaration[14526-14725]:MethodDeclaration[14526-14725]"
  }, {
    "left" : "public getProvider() : ",
    "right" : "public getProvider() : ",
    "info" : "MethodDeclaration[14809-15097]:MethodDeclaration[14809-15097]"
  }, {
    "left" : "public setProvider(provider ) : void",
    "right" : "public setProvider(provider ) : void",
    "info" : "MethodDeclaration[15103-15805]:MethodDeclaration[15103-15805]"
  }, {
    "left" : "private setProvider0(provider ) : void",
    "right" : "private setProvider0(provider ) : void",
    "info" : "MethodDeclaration[15811-16736]:MethodDeclaration[15811-16736]"
  }, {
    "left" : "private getDefaultProvider() : ",
    "right" : "private getDefaultProvider() : ",
    "info" : "MethodDeclaration[16742-18153]:MethodDeclaration[16742-18153]"
  }, {
    "left" : "public getNameProvider() : ",
    "right" : "public getNameProvider() : ",
    "info" : "MethodDeclaration[18237-18531]:MethodDeclaration[18237-18531]"
  }, {
    "left" : "public setNameProvider(nameProvider ) : void",
    "right" : "public setNameProvider(nameProvider ) : void",
    "info" : "MethodDeclaration[18537-19265]:MethodDeclaration[18537-19265]"
  }, {
    "left" : "private setNameProvider0(nameProvider ) : void",
    "right" : "private setNameProvider0(nameProvider ) : void",
    "info" : "MethodDeclaration[19271-19712]:MethodDeclaration[19271-19712]"
  }, {
    "left" : "private getDefaultNameProvider() : ",
    "right" : "private getDefaultNameProvider() : ",
    "info" : "MethodDeclaration[19718-20754]:MethodDeclaration[19718-20754]"
  }, {
    "left" : "private getConvertedId(id ) : ",
    "right" : "private getConvertedId(id ) : ",
    "info" : "MethodDeclaration[20838-22897]:MethodDeclaration[20838-22897]"
  }, {
    "left" : "private parseOffset(str ) : int",
    "right" : "private parseOffset(str ) : int",
    "info" : "MethodDeclaration[22903-23596]:MethodDeclaration[22903-23596]"
  }, {
    "left" : "public getZone() : ",
    "right" : "public getZone() : ",
    "info" : "MethodDeclaration[23138-23212]:MethodDeclaration[23138-23212]"
  }, {
    "left" : "public withUTC() : ",
    "right" : "public withUTC() : ",
    "info" : "MethodDeclaration[23225-23297]:MethodDeclaration[23225-23297]"
  }, {
    "left" : "public withZone(zone ) : ",
    "right" : "public withZone(zone ) : ",
    "info" : "MethodDeclaration[23310-23400]:MethodDeclaration[23310-23400]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[23413-23498]:MethodDeclaration[23413-23498]"
  }, {
    "left" : "private printOffset(offset int) : ",
    "right" : "private printOffset(offset int) : ",
    "info" : "MethodDeclaration[23602-25004]:MethodDeclaration[23602-25004]"
  }, {
    "left" : "private offsetFormatter() : ",
    "right" : "private offsetFormatter() : ",
    "info" : "MethodDeclaration[25010-25435]:MethodDeclaration[25010-25435]"
  }, {
    "left" : "iID",
    "right" : "iID",
    "info" : "FieldDeclaration[25552-25577]:FieldDeclaration[25552-25577]"
  }, {
    "left" : "protected DateTimeZone(id )",
    "right" : "protected DateTimeZone(id )",
    "info" : "MethodDeclaration[25583-25883]:MethodDeclaration[25583-25883]"
  }, {
    "left" : "public getID() : ",
    "right" : "public getID() : ",
    "info" : "MethodDeclaration[25990-26169]:MethodDeclaration[25990-26169]"
  }, {
    "left" : "public abstract getNameKey(instant long) : ",
    "right" : "public abstract getNameKey(instant long) : ",
    "info" : "MethodDeclaration[26175-26546]:MethodDeclaration[26175-26546]"
  }, {
    "left" : "public getShortName(instant long) : ",
    "right" : "public getShortName(instant long) : ",
    "info" : "MethodDeclaration[26552-27068]:MethodDeclaration[26552-27068]"
  }, {
    "left" : "public getShortName(instant long, locale ) : ",
    "right" : "public getShortName(instant long, locale ) : ",
    "info" : "MethodDeclaration[27074-27988]:MethodDeclaration[27074-27988]"
  }, {
    "left" : "public getName(instant long) : ",
    "right" : "public getName(instant long) : ",
    "info" : "MethodDeclaration[27994-28498]:MethodDeclaration[27994-28498]"
  }, {
    "left" : "public getName(instant long, locale ) : ",
    "right" : "public getName(instant long, locale ) : ",
    "info" : "MethodDeclaration[28504-29406]:MethodDeclaration[28504-29406]"
  }, {
    "left" : "public abstract getOffset(instant long) : int",
    "right" : "public abstract getOffset(instant long) : int",
    "info" : "MethodDeclaration[29412-29702]:MethodDeclaration[29412-29702]"
  }, {
    "left" : "public getOffset(instant ) : int",
    "right" : "public getOffset(instant ) : int",
    "info" : "MethodDeclaration[29708-30151]:MethodDeclaration[29708-30151]"
  }, {
    "left" : "public abstract getStandardOffset(instant long) : int",
    "right" : "public abstract getStandardOffset(instant long) : int",
    "info" : "MethodDeclaration[30157-30504]:MethodDeclaration[30157-30504]"
  }, {
    "left" : "public isStandardOffset(instant long) : boolean",
    "right" : "public isStandardOffset(instant long) : boolean",
    "info" : "MethodDeclaration[30510-31379]:MethodDeclaration[30510-31379]"
  }, {
    "left" : "public getOffsetFromLocal(instantLocal long) : int",
    "right" : "public getOffsetFromLocal(instantLocal long) : int",
    "info" : "MethodDeclaration[31385-34535]:MethodDeclaration[31385-34536]"
  }, {
    "left" : "public convertUTCToLocal(instantUTC long) : long",
    "right" : "public convertUTCToLocal(instantUTC long) : long",
    "info" : "MethodDeclaration[34541-35413]:MethodDeclaration[34542-35414]"
  }, {
    "left" : "public convertLocalToUTC(instantLocal long, strict boolean, originalInstantUTC long) : long",
    "right" : "public convertLocalToUTC(instantLocal long, strict boolean, originalInstantUTC long) : long",
    "info" : "MethodDeclaration[35419-36755]:MethodDeclaration[35420-36756]"
  }, {
    "left" : "public convertLocalToUTC(instantLocal long, strict boolean) : long",
    "right" : "public convertLocalToUTC(instantLocal long, strict boolean) : long",
    "info" : "MethodDeclaration[36761-39720]:MethodDeclaration[36762-39721]"
  }, {
    "left" : "public getMillisKeepLocal(newZone , oldInstant long) : long",
    "right" : "public getMillisKeepLocal(newZone , oldInstant long) : long",
    "info" : "MethodDeclaration[39726-40582]:MethodDeclaration[39727-40583]"
  }, {
    "left" : "public isLocalDateTimeGap(localDateTime ) : boolean",
    "right" : "public isLocalDateTimeGap(localDateTime ) : boolean",
    "info" : "MethodDeclaration[45095-45835]:MethodDeclaration[45096-45836]"
  }, {
    "left" : "public adjustOffset(instant long, earlierOrLater boolean) : long",
    "right" : "public adjustOffset(instant long, earlierOrLater boolean) : long",
    "info" : "MethodDeclaration[45841-46541]:MethodDeclaration[45842-46542]"
  }, {
    "left" : "public abstract isFixed() : boolean",
    "right" : "public abstract isFixed() : boolean",
    "info" : "MethodDeclaration[46625-46778]:MethodDeclaration[46626-46779]"
  }, {
    "left" : "public abstract nextTransition(instant long) : long",
    "right" : "public abstract nextTransition(instant long) : long",
    "info" : "MethodDeclaration[46784-47173]:MethodDeclaration[46785-47174]"
  }, {
    "left" : "public abstract previousTransition(instant long) : long",
    "right" : "public abstract previousTransition(instant long) : long",
    "info" : "MethodDeclaration[47179-47573]:MethodDeclaration[47180-47574]"
  }, {
    "left" : "public toTimeZone() : ",
    "right" : "public toTimeZone() : ",
    "info" : "MethodDeclaration[47676-47912]:MethodDeclaration[47677-47913]"
  }, {
    "left" : "public abstract equals(object ) : boolean",
    "right" : "public abstract equals(object ) : boolean",
    "info" : "MethodDeclaration[47918-48153]:MethodDeclaration[47919-48154]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[48159-48333]:MethodDeclaration[48160-48334]"
  }, {
    "left" : "public toString() : ",
    "right" : "public toString() : ",
    "info" : "MethodDeclaration[48339-48512]:MethodDeclaration[48340-48513]"
  }, {
    "left" : "protected writeReplace() : ",
    "right" : "protected writeReplace() : ",
    "info" : "MethodDeclaration[48518-48879]:MethodDeclaration[48519-48880]"
  }, {
    "left" : "class : Stub",
    "right" : "class : Stub",
    "info" : "TypeDeclaration[48885-49690]:TypeDeclaration[48886-49691]"
  }, {
    "left" : "serialVersionUID",
    "right" : "serialVersionUID",
    "info" : "FieldDeclaration[49013-49115]:FieldDeclaration[49014-49116]"
  }, {
    "left" : "iID",
    "right" : "iID",
    "info" : "FieldDeclaration[49124-49188]:FieldDeclaration[49125-49189]"
  }, {
    "left" : "package Stub(id )",
    "right" : "package Stub(id )",
    "info" : "MethodDeclaration[49198-49336]:MethodDeclaration[49199-49337]"
  }, {
    "left" : "private writeObject(out ) : void",
    "right" : "private writeObject(out ) : void",
    "info" : "MethodDeclaration[49346-49456]:MethodDeclaration[49347-49457]"
  }, {
    "left" : "private readObject(in ) : void",
    "right" : "private readObject(in ) : void",
    "info" : "MethodDeclaration[49466-49574]:MethodDeclaration[49467-49575]"
  }, {
    "left" : "private readResolve() : ",
    "right" : "private readResolve() : ",
    "info" : "MethodDeclaration[49584-49684]:MethodDeclaration[49585-49685]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3619-3625]:Modifier[3619-3625]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[3626-3634]:Modifier[3626-3634]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[3635-3640]:TYPE_DECLARATION_KIND[3635-3640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4691-4758]:Block[4691-4758]"
  }, {
    "left" : "setProvider0(null);",
    "right" : "setProvider0(null);",
    "info" : "ExpressionStatement[4701-4720]:ExpressionStatement[4701-4720]"
  }, {
    "left" : "setNameProvider0(null);",
    "right" : "setNameProvider0(null);",
    "info" : "ExpressionStatement[4729-4752]:ExpressionStatement[4729-4752]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5379-5385]:Modifier[5379-5385]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[5386-5392]:Modifier[5386-5392]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[5393-5405]:SimpleType[5393-5405]"
  }, {
    "left" : "getDefault",
    "right" : "getDefault",
    "info" : "SimpleName[5406-5416]:SimpleName[5406-5416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5419-6534]:Block[5419-6534]"
  }, {
    "left" : "DateTimeZone zone = cDefault;",
    "right" : "DateTimeZone zone = cDefault;",
    "info" : "VariableDeclarationStatement[5429-5458]:VariableDeclarationStatement[5429-5458]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[5467-6507]:IfStatement[5467-6507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5485-6507]:Block[5485-6507]"
  }, {
    "left" : "synchronized(DateTimeZone.class) {\n                zone = cDefault;\n                if (zone == null) {\n                    DateTimeZone temp = null;\n                    try {\n                        try {\n                            String id = System.getProperty(\"user.timezone\");\n                            if (id != null) {  // null check avoids stack overflow\n                                temp = forID(id);\n                            }\n                        } catch (RuntimeException ex) {\n                            // ignored\n                        }\n                        if (temp == null) {\n                            temp = forTimeZone(TimeZone.getDefault());\n                        }\n                    } catch (IllegalArgumentException ex) {\n                        // ignored\n                    }\n                    if (temp == null) {\n                        temp = UTC;\n                    }\n                    cDefault = zone = temp;\n                }\n            }",
    "right" : "synchronized(DateTimeZone.class) {\n                zone = cDefault;\n                if (zone == null) {\n                    DateTimeZone temp = null;\n                    try {\n                        try {\n                            String id = System.getProperty(\"user.timezone\");\n                            if (id != null) {  // null check avoids stack overflow\n                                temp = forID(id);\n                            }\n                        } catch (RuntimeException ex) {\n                            // ignored\n                        }\n                        if (temp == null) {\n                            temp = forTimeZone(TimeZone.getDefault());\n                        }\n                    } catch (IllegalArgumentException ex) {\n                        // ignored\n                    }\n                    if (temp == null) {\n                        temp = UTC;\n                    }\n                    cDefault = zone = temp;\n                }\n            }",
    "info" : "SynchronizedStatement[5499-6497]:SynchronizedStatement[5499-6497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5532-6497]:Block[5532-6497]"
  }, {
    "left" : "zone = cDefault;",
    "right" : "zone = cDefault;",
    "info" : "ExpressionStatement[5550-5566]:ExpressionStatement[5550-5566]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[5583-6483]:IfStatement[5583-6483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5601-6483]:Block[5601-6483]"
  }, {
    "left" : "DateTimeZone temp = null;",
    "right" : "DateTimeZone temp = null;",
    "info" : "VariableDeclarationStatement[5623-5648]:VariableDeclarationStatement[5623-5648]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[5669-6323]:TryStatement[5669-6323]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5673-6228]:Block[5673-6228]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[5699-6065]:TryStatement[5699-6065]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5703-5970]:Block[5703-5970]"
  }, {
    "left" : "String id = System.getProperty(\"user.timezone\");",
    "right" : "String id = System.getProperty(\"user.timezone\");",
    "info" : "VariableDeclarationStatement[5733-5781]:VariableDeclarationStatement[5733-5781]"
  }, {
    "left" : "if (id != null)",
    "right" : "if (id != null)",
    "info" : "IfStatement[5810-5944]:IfStatement[5810-5944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5826-5944]:Block[5826-5944]"
  }, {
    "left" : "temp = forID(id);",
    "right" : "temp = forID(id);",
    "info" : "ExpressionStatement[5897-5914]:ExpressionStatement[5897-5914]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5999-6065]:Block[5999-6065]"
  }, {
    "left" : "if (temp == null)",
    "right" : "if (temp == null)",
    "info" : "IfStatement[6090-6206]:IfStatement[6090-6206]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6108-6206]:Block[6108-6206]"
  }, {
    "left" : "temp = forTimeZone(TimeZone.getDefault());",
    "right" : "temp = forTimeZone(TimeZone.getDefault());",
    "info" : "ExpressionStatement[6138-6180]:ExpressionStatement[6138-6180]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6265-6323]:Block[6265-6323]"
  }, {
    "left" : "if (temp == null)",
    "right" : "if (temp == null)",
    "info" : "IfStatement[6344-6421]:IfStatement[6344-6421]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6362-6421]:Block[6362-6421]"
  }, {
    "left" : "temp = UTC;",
    "right" : "temp = UTC;",
    "info" : "ExpressionStatement[6388-6399]:ExpressionStatement[6388-6399]"
  }, {
    "left" : "cDefault = zone = temp;",
    "right" : "cDefault = zone = temp;",
    "info" : "ExpressionStatement[6442-6465]:ExpressionStatement[6442-6465]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[6516-6528]:ReturnStatement[6516-6528]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6919-6925]:Modifier[6919-6925]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[6926-6932]:Modifier[6926-6932]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6933-6937]:PrimitiveType[6933-6937]"
  }, {
    "left" : "setDefault",
    "right" : "setDefault",
    "info" : "SimpleName[6938-6948]:SimpleName[6938-6948]"
  }, {
    "left" : "DateTimeZone zone",
    "right" : "DateTimeZone zone",
    "info" : "SingleVariableDeclaration[6949-6966]:SingleVariableDeclaration[6949-6966]"
  }, {
    "left" : "SecurityException",
    "right" : "SecurityException",
    "info" : "SimpleType[6975-6992]:SimpleType[6975-6992]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6993-7383]:Block[6993-7383]"
  }, {
    "left" : "SecurityManager sm = System.getSecurityManager();",
    "right" : "SecurityManager sm = System.getSecurityManager();",
    "info" : "VariableDeclarationStatement[7003-7052]:VariableDeclarationStatement[7003-7052]"
  }, {
    "left" : "if (sm != null)",
    "right" : "if (sm != null)",
    "info" : "IfStatement[7061-7171]:IfStatement[7061-7171]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7077-7171]:Block[7077-7171]"
  }, {
    "left" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setDefault\"));",
    "right" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setDefault\"));",
    "info" : "ExpressionStatement[7091-7161]:ExpressionStatement[7091-7161]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[7180-7295]:IfStatement[7180-7295]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7198-7295]:Block[7198-7295]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The datetime zone must not be null\");",
    "right" : "throw new IllegalArgumentException(\"The datetime zone must not be null\");",
    "info" : "ThrowStatement[7212-7285]:ThrowStatement[7212-7285]"
  }, {
    "left" : "synchronized(DateTimeZone.class) {\n            cDefault = zone;\n        }",
    "right" : "synchronized(DateTimeZone.class) {\n            cDefault = zone;\n        }",
    "info" : "SynchronizedStatement[7304-7377]:SynchronizedStatement[7304-7377]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7337-7377]:Block[7337-7377]"
  }, {
    "left" : "cDefault = zone;",
    "right" : "cDefault = zone;",
    "info" : "ExpressionStatement[7351-7367]:ExpressionStatement[7351-7367]"
  }, {
    "left" : "@FromString",
    "right" : "@FromString",
    "info" : "MarkerAnnotation[8164-8175]:MarkerAnnotation[8164-8175]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8180-8186]:Modifier[8180-8186]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[8187-8193]:Modifier[8187-8193]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[8194-8206]:SimpleType[8194-8206]"
  }, {
    "left" : "forID",
    "right" : "forID",
    "info" : "SimpleName[8207-8212]:SimpleName[8207-8212]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[8213-8222]:SingleVariableDeclaration[8213-8222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8224-8902]:Block[8224-8902]"
  }, {
    "left" : "if (id == null)",
    "right" : "if (id == null)",
    "info" : "IfStatement[8234-8294]:IfStatement[8234-8294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8250-8294]:Block[8250-8294]"
  }, {
    "left" : "return getDefault();",
    "right" : "return getDefault();",
    "info" : "ReturnStatement[8264-8284]:ReturnStatement[8264-8284]"
  }, {
    "left" : "if (id.equals(\"UTC\"))",
    "right" : "if (id.equals(\"UTC\"))",
    "info" : "IfStatement[8303-8373]:IfStatement[8303-8373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8325-8373]:Block[8325-8373]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[8339-8363]:ReturnStatement[8339-8363]"
  }, {
    "left" : "DateTimeZone zone = cProvider.getZone(id);",
    "right" : "DateTimeZone zone = cProvider.getZone(id);",
    "info" : "VariableDeclarationStatement[8382-8424]:VariableDeclarationStatement[8382-8424]"
  }, {
    "left" : "if (zone != null)",
    "right" : "if (zone != null)",
    "info" : "IfStatement[8433-8487]:IfStatement[8433-8487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8451-8487]:Block[8451-8487]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[8465-8477]:ReturnStatement[8465-8477]"
  }, {
    "left" : "if (id.startsWith(\"+\") || id.startsWith(\"-\"))",
    "right" : "if (id.startsWith(\"+\") || id.startsWith(\"-\"))",
    "info" : "IfStatement[8496-8797]:IfStatement[8496-8797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8542-8797]:Block[8542-8797]"
  }, {
    "left" : "int offset = parseOffset(id);",
    "right" : "int offset = parseOffset(id);",
    "info" : "VariableDeclarationStatement[8556-8585]:VariableDeclarationStatement[8556-8585]"
  }, {
    "left" : "if (offset == 0L)",
    "right" : "if (offset == 0L)",
    "info" : "IfStatement[8598-8787]:IfStatement[8598-8787]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8616-8672]:Block[8616-8672]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[8634-8658]:ReturnStatement[8634-8658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8678-8787]:Block[8678-8787]"
  }, {
    "left" : "id = printOffset(offset);",
    "right" : "id = printOffset(offset);",
    "info" : "ExpressionStatement[8696-8721]:ExpressionStatement[8696-8721]"
  }, {
    "left" : "return fixedOffsetZone(id, offset);",
    "right" : "return fixedOffsetZone(id, offset);",
    "info" : "ReturnStatement[8738-8773]:ReturnStatement[8738-8773]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "right" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "info" : "ThrowStatement[8806-8896]:ThrowStatement[8806-8896]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9341-9347]:Modifier[9341-9347]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[9348-9354]:Modifier[9348-9354]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[9355-9367]:SimpleType[9355-9367]"
  }, {
    "left" : "forOffsetHours",
    "right" : "forOffsetHours",
    "info" : "SimpleName[9368-9382]:SimpleName[9368-9382]"
  }, {
    "left" : "int hoursOffset",
    "right" : "int hoursOffset",
    "info" : "SingleVariableDeclaration[9383-9398]:SingleVariableDeclaration[9383-9398]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[9407-9431]:SimpleType[9407-9431]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9432-9493]:Block[9432-9493]"
  }, {
    "left" : "return forOffsetHoursMinutes(hoursOffset, 0);",
    "right" : "return forOffsetHoursMinutes(hoursOffset, 0);",
    "info" : "ReturnStatement[9442-9487]:ReturnStatement[9442-9487]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[10229-10235]:Modifier[10229-10235]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[10236-10242]:Modifier[10236-10242]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[10243-10255]:SimpleType[10243-10255]"
  }, {
    "left" : "forOffsetHoursMinutes",
    "right" : "forOffsetHoursMinutes",
    "info" : "SimpleName[10256-10277]:SimpleName[10256-10277]"
  }, {
    "left" : "int hoursOffset",
    "right" : "int hoursOffset",
    "info" : "SingleVariableDeclaration[10278-10293]:SingleVariableDeclaration[10278-10293]"
  }, {
    "left" : "int minutesOffset",
    "right" : "int minutesOffset",
    "info" : "SingleVariableDeclaration[10295-10312]:SingleVariableDeclaration[10295-10312]"
  }, {
    "left" : "IllegalArgumentException",
    "right" : "IllegalArgumentException",
    "info" : "SimpleType[10321-10345]:SimpleType[10321-10345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10346-11224]:Block[10346-11224]"
  }, {
    "left" : "if (hoursOffset == 0 && minutesOffset == 0)",
    "right" : "if (hoursOffset == 0 && minutesOffset == 0)",
    "info" : "IfStatement[10356-10448]:IfStatement[10356-10448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10400-10448]:Block[10400-10448]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[10414-10438]:ReturnStatement[10414-10438]"
  }, {
    "left" : "if (minutesOffset < 0 || minutesOffset > 59)",
    "right" : "if (minutesOffset < 0 || minutesOffset > 59)",
    "info" : "IfStatement[10457-10603]:IfStatement[10457-10603]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10502-10603]:Block[10502-10603]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);",
    "right" : "throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);",
    "info" : "ThrowStatement[10516-10593]:ThrowStatement[10516-10593]"
  }, {
    "left" : "int offset = 0;",
    "right" : "int offset = 0;",
    "info" : "VariableDeclarationStatement[10612-10627]:VariableDeclarationStatement[10612-10627]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[10636-11178]:TryStatement[10636-11178]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10640-11064]:Block[10640-11064]"
  }, {
    "left" : "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",
    "right" : "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",
    "info" : "VariableDeclarationStatement[10654-10716]:VariableDeclarationStatement[10654-10716]"
  }, {
    "left" : "if (hoursInMinutes < 0)",
    "right" : "if (hoursInMinutes < 0)",
    "info" : "IfStatement[10729-10956]:IfStatement[10729-10956]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10753-10852]:Block[10753-10852]"
  }, {
    "left" : "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);",
    "right" : "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);",
    "info" : "ExpressionStatement[10771-10838]:ExpressionStatement[10771-10838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10858-10956]:Block[10858-10956]"
  }, {
    "left" : "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
    "right" : "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
    "info" : "ExpressionStatement[10876-10942]:ExpressionStatement[10876-10942]"
  }, {
    "left" : "offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);",
    "right" : "offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);",
    "info" : "ExpressionStatement[10969-11054]:ExpressionStatement[10969-11054]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11096-11178]:Block[11096-11178]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Offset is too large\");",
    "right" : "throw new IllegalArgumentException(\"Offset is too large\");",
    "info" : "ThrowStatement[11110-11168]:ThrowStatement[11110-11168]"
  }, {
    "left" : "return forOffsetMillis(offset);",
    "right" : "return forOffsetMillis(offset);",
    "info" : "ReturnStatement[11187-11218]:ReturnStatement[11187-11218]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[11447-11453]:Modifier[11447-11453]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[11454-11460]:Modifier[11454-11460]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[11461-11473]:SimpleType[11461-11473]"
  }, {
    "left" : "forOffsetMillis",
    "right" : "forOffsetMillis",
    "info" : "SimpleName[11474-11489]:SimpleName[11474-11489]"
  }, {
    "left" : "int millisOffset",
    "right" : "int millisOffset",
    "info" : "SingleVariableDeclaration[11490-11506]:SingleVariableDeclaration[11490-11506]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11508-11612]:Block[11508-11612]"
  }, {
    "left" : "String id = printOffset(millisOffset);",
    "right" : "String id = printOffset(millisOffset);",
    "info" : "VariableDeclarationStatement[11518-11556]:VariableDeclarationStatement[11518-11556]"
  }, {
    "left" : "return fixedOffsetZone(id, millisOffset);",
    "right" : "return fixedOffsetZone(id, millisOffset);",
    "info" : "ReturnStatement[11565-11606]:ReturnStatement[11565-11606]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12298-12304]:Modifier[12298-12304]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[12305-12311]:Modifier[12305-12311]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[12312-12324]:SimpleType[12312-12324]"
  }, {
    "left" : "forTimeZone",
    "right" : "forTimeZone",
    "info" : "SimpleName[12325-12336]:SimpleName[12325-12336]"
  }, {
    "left" : "TimeZone zone",
    "right" : "TimeZone zone",
    "info" : "SingleVariableDeclaration[12337-12350]:SingleVariableDeclaration[12337-12350]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12352-13576]:Block[12352-13576]"
  }, {
    "left" : "if (zone == null)",
    "right" : "if (zone == null)",
    "info" : "IfStatement[12362-12424]:IfStatement[12362-12424]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12380-12424]:Block[12380-12424]"
  }, {
    "left" : "return getDefault();",
    "right" : "return getDefault();",
    "info" : "ReturnStatement[12394-12414]:ReturnStatement[12394-12414]"
  }, {
    "left" : "final String id = zone.getID();",
    "right" : "final String id = zone.getID();",
    "info" : "VariableDeclarationStatement[12433-12464]:VariableDeclarationStatement[12433-12464]"
  }, {
    "left" : "if (id.equals(\"UTC\"))",
    "right" : "if (id.equals(\"UTC\"))",
    "info" : "IfStatement[12473-12543]:IfStatement[12473-12543]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12495-12543]:Block[12495-12543]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[12509-12533]:ReturnStatement[12509-12533]"
  }, {
    "left" : "DateTimeZone dtz = null;",
    "right" : "DateTimeZone dtz = null;",
    "info" : "VariableDeclarationStatement[12637-12661]:VariableDeclarationStatement[12637-12661]"
  }, {
    "left" : "String convId = getConvertedId(id);",
    "right" : "String convId = getConvertedId(id);",
    "info" : "VariableDeclarationStatement[12670-12705]:VariableDeclarationStatement[12670-12705]"
  }, {
    "left" : "if (convId != null)",
    "right" : "if (convId != null)",
    "info" : "IfStatement[12714-12790]:IfStatement[12714-12790]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12734-12790]:Block[12734-12790]"
  }, {
    "left" : "dtz = cProvider.getZone(convId);",
    "right" : "dtz = cProvider.getZone(convId);",
    "info" : "ExpressionStatement[12748-12780]:ExpressionStatement[12748-12780]"
  }, {
    "left" : "if (dtz == null)",
    "right" : "if (dtz == null)",
    "info" : "IfStatement[12799-12868]:IfStatement[12799-12868]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12816-12868]:Block[12816-12868]"
  }, {
    "left" : "dtz = cProvider.getZone(id);",
    "right" : "dtz = cProvider.getZone(id);",
    "info" : "ExpressionStatement[12830-12858]:ExpressionStatement[12830-12858]"
  }, {
    "left" : "if (dtz != null)",
    "right" : "if (dtz != null)",
    "info" : "IfStatement[12877-12929]:IfStatement[12877-12929]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12894-12929]:Block[12894-12929]"
  }, {
    "left" : "return dtz;",
    "right" : "return dtz;",
    "info" : "ReturnStatement[12908-12919]:ReturnStatement[12908-12919]"
  }, {
    "left" : "if (convId == null)",
    "right" : "if (convId == null)",
    "info" : "IfStatement[12978-13471]:IfStatement[12978-13471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12998-13471]:Block[12998-13471]"
  }, {
    "left" : "convId = zone.getDisplayName();",
    "right" : "convId = zone.getDisplayName();",
    "info" : "ExpressionStatement[13012-13043]:ExpressionStatement[13012-13043]"
  }, {
    "left" : "if (convId.startsWith(\"GMT+\") || convId.startsWith(\"GMT-\"))",
    "right" : "if (convId.startsWith(\"GMT+\") || convId.startsWith(\"GMT-\"))",
    "info" : "IfStatement[13056-13461]:IfStatement[13056-13461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13116-13461]:Block[13116-13461]"
  }, {
    "left" : "convId = convId.substring(3);",
    "right" : "convId = convId.substring(3);",
    "info" : "ExpressionStatement[13134-13163]:ExpressionStatement[13134-13163]"
  }, {
    "left" : "int offset = parseOffset(convId);",
    "right" : "int offset = parseOffset(convId);",
    "info" : "VariableDeclarationStatement[13180-13213]:VariableDeclarationStatement[13180-13213]"
  }, {
    "left" : "if (offset == 0L)",
    "right" : "if (offset == 0L)",
    "info" : "IfStatement[13230-13447]:IfStatement[13230-13447]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13248-13312]:Block[13248-13312]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[13270-13294]:ReturnStatement[13270-13294]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13318-13447]:Block[13318-13447]"
  }, {
    "left" : "convId = printOffset(offset);",
    "right" : "convId = printOffset(offset);",
    "info" : "ExpressionStatement[13340-13369]:ExpressionStatement[13340-13369]"
  }, {
    "left" : "return fixedOffsetZone(convId, offset);",
    "right" : "return fixedOffsetZone(convId, offset);",
    "info" : "ReturnStatement[13390-13429]:ReturnStatement[13390-13429]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "right" : "throw new IllegalArgumentException(\"The datetime zone id '\" + id + \"' is not recognised\");",
    "info" : "ThrowStatement[13480-13570]:ThrowStatement[13480-13570]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[13831-13838]:Modifier[13831-13838]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[13839-13845]:Modifier[13839-13845]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[13846-13858]:Modifier[13846-13858]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[13859-13871]:SimpleType[13859-13871]"
  }, {
    "left" : "fixedOffsetZone",
    "right" : "fixedOffsetZone",
    "info" : "SimpleName[13872-13887]:SimpleName[13872-13887]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[13888-13897]:SingleVariableDeclaration[13888-13897]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[13899-13909]:SingleVariableDeclaration[13899-13909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13911-14520]:Block[13911-14520]"
  }, {
    "left" : "if (offset == 0)",
    "right" : "if (offset == 0)",
    "info" : "IfStatement[13921-13986]:IfStatement[13921-13986]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13938-13986]:Block[13938-13986]"
  }, {
    "left" : "return DateTimeZone.UTC;",
    "right" : "return DateTimeZone.UTC;",
    "info" : "ReturnStatement[13952-13976]:ReturnStatement[13952-13976]"
  }, {
    "left" : "if (iFixedOffsetCache == null)",
    "right" : "if (iFixedOffsetCache == null)",
    "info" : "IfStatement[13995-14121]:IfStatement[13995-14121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14026-14121]:Block[14026-14121]"
  }, {
    "left" : "iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>();",
    "right" : "iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>();",
    "info" : "ExpressionStatement[14040-14111]:ExpressionStatement[14040-14111]"
  }, {
    "left" : "DateTimeZone zone;",
    "right" : "DateTimeZone zone;",
    "info" : "VariableDeclarationStatement[14130-14148]:VariableDeclarationStatement[14130-14148]"
  }, {
    "left" : "Reference<DateTimeZone> ref = iFixedOffsetCache.get(id);",
    "right" : "Reference<DateTimeZone> ref = iFixedOffsetCache.get(id);",
    "info" : "VariableDeclarationStatement[14157-14213]:VariableDeclarationStatement[14157-14213]"
  }, {
    "left" : "if (ref != null)",
    "right" : "if (ref != null)",
    "info" : "IfStatement[14222-14355]:IfStatement[14222-14355]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14239-14355]:Block[14239-14355]"
  }, {
    "left" : "zone = ref.get();",
    "right" : "zone = ref.get();",
    "info" : "ExpressionStatement[14253-14270]:ExpressionStatement[14253-14270]"
  }, {
    "left" : "if (zone != null)",
    "right" : "if (zone != null)",
    "info" : "IfStatement[14283-14345]:IfStatement[14283-14345]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14301-14345]:Block[14301-14345]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[14319-14331]:ReturnStatement[14319-14331]"
  }, {
    "left" : "zone = new FixedDateTimeZone(id, null, offset, offset);",
    "right" : "zone = new FixedDateTimeZone(id, null, offset, offset);",
    "info" : "ExpressionStatement[14364-14419]:ExpressionStatement[14364-14419]"
  }, {
    "left" : "iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone));",
    "right" : "iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone));",
    "info" : "ExpressionStatement[14428-14493]:ExpressionStatement[14428-14493]"
  }, {
    "left" : "return zone;",
    "right" : "return zone;",
    "info" : "ReturnStatement[14502-14514]:ReturnStatement[14502-14514]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[14644-14650]:Modifier[14644-14650]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[14651-14657]:Modifier[14651-14657]"
  }, {
    "left" : "Set<String>",
    "right" : "Set<String>",
    "info" : "ParameterizedType[14658-14669]:ParameterizedType[14658-14669]"
  }, {
    "left" : "getAvailableIDs",
    "right" : "getAvailableIDs",
    "info" : "SimpleName[14670-14685]:SimpleName[14670-14685]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14688-14725]:Block[14688-14725]"
  }, {
    "left" : "return cAvailableIDs;",
    "right" : "return cAvailableIDs;",
    "info" : "ReturnStatement[14698-14719]:ReturnStatement[14698-14719]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15027-15033]:Modifier[15027-15033]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15034-15040]:Modifier[15034-15040]"
  }, {
    "left" : "Provider",
    "right" : "Provider",
    "info" : "SimpleType[15041-15049]:SimpleType[15041-15049]"
  }, {
    "left" : "getProvider",
    "right" : "getProvider",
    "info" : "SimpleName[15050-15061]:SimpleName[15050-15061]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15064-15097]:Block[15064-15097]"
  }, {
    "left" : "return cProvider;",
    "right" : "return cProvider;",
    "info" : "ReturnStatement[15074-15091]:ReturnStatement[15074-15091]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15513-15519]:Modifier[15513-15519]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[15520-15526]:Modifier[15520-15526]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15527-15531]:PrimitiveType[15527-15531]"
  }, {
    "left" : "setProvider",
    "right" : "setProvider",
    "info" : "SimpleName[15532-15543]:SimpleName[15532-15543]"
  }, {
    "left" : "Provider provider",
    "right" : "Provider provider",
    "info" : "SingleVariableDeclaration[15544-15561]:SingleVariableDeclaration[15544-15561]"
  }, {
    "left" : "SecurityException",
    "right" : "SecurityException",
    "info" : "SimpleType[15570-15587]:SimpleType[15570-15587]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15588-15805]:Block[15588-15805]"
  }, {
    "left" : "SecurityManager sm = System.getSecurityManager();",
    "right" : "SecurityManager sm = System.getSecurityManager();",
    "info" : "VariableDeclarationStatement[15598-15647]:VariableDeclarationStatement[15598-15647]"
  }, {
    "left" : "if (sm != null)",
    "right" : "if (sm != null)",
    "info" : "IfStatement[15656-15767]:IfStatement[15656-15767]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15672-15767]:Block[15672-15767]"
  }, {
    "left" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setProvider\"));",
    "right" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setProvider\"));",
    "info" : "ExpressionStatement[15686-15757]:ExpressionStatement[15686-15757]"
  }, {
    "left" : "setProvider0(provider);",
    "right" : "setProvider0(provider);",
    "info" : "ExpressionStatement[15776-15799]:ExpressionStatement[15776-15799]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16040-16047]:Modifier[16040-16047]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[16048-16054]:Modifier[16048-16054]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16055-16059]:PrimitiveType[16055-16059]"
  }, {
    "left" : "setProvider0",
    "right" : "setProvider0",
    "info" : "SimpleName[16060-16072]:SimpleName[16060-16072]"
  }, {
    "left" : "Provider provider",
    "right" : "Provider provider",
    "info" : "SingleVariableDeclaration[16073-16090]:SingleVariableDeclaration[16073-16090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16092-16736]:Block[16092-16736]"
  }, {
    "left" : "if (provider == null)",
    "right" : "if (provider == null)",
    "info" : "IfStatement[16102-16180]:IfStatement[16102-16180]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16124-16180]:Block[16124-16180]"
  }, {
    "left" : "provider = getDefaultProvider();",
    "right" : "provider = getDefaultProvider();",
    "info" : "ExpressionStatement[16138-16170]:ExpressionStatement[16138-16170]"
  }, {
    "left" : "Set<String> ids = provider.getAvailableIDs();",
    "right" : "Set<String> ids = provider.getAvailableIDs();",
    "info" : "VariableDeclarationStatement[16189-16234]:VariableDeclarationStatement[16189-16234]"
  }, {
    "left" : "if (ids == null || ids.size() == 0)",
    "right" : "if (ids == null || ids.size() == 0)",
    "info" : "IfStatement[16243-16402]:IfStatement[16243-16402]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16279-16402]:Block[16279-16402]"
  }, {
    "left" : "throw new IllegalArgumentException\n                (\"The provider doesn't have any available ids\");",
    "right" : "throw new IllegalArgumentException\n                (\"The provider doesn't have any available ids\");",
    "info" : "ThrowStatement[16293-16392]:ThrowStatement[16293-16392]"
  }, {
    "left" : "if (!ids.contains(\"UTC\"))",
    "right" : "if (!ids.contains(\"UTC\"))",
    "info" : "IfStatement[16411-16532]:IfStatement[16411-16532]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16437-16532]:Block[16437-16532]"
  }, {
    "left" : "throw new IllegalArgumentException(\"The provider doesn't support UTC\");",
    "right" : "throw new IllegalArgumentException(\"The provider doesn't support UTC\");",
    "info" : "ThrowStatement[16451-16522]:ThrowStatement[16451-16522]"
  }, {
    "left" : "if (!UTC.equals(provider.getZone(\"UTC\")))",
    "right" : "if (!UTC.equals(provider.getZone(\"UTC\")))",
    "info" : "IfStatement[16541-16671]:IfStatement[16541-16671]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16583-16671]:Block[16583-16671]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Invalid UTC zone provided\");",
    "right" : "throw new IllegalArgumentException(\"Invalid UTC zone provided\");",
    "info" : "ThrowStatement[16597-16661]:ThrowStatement[16597-16661]"
  }, {
    "left" : "cProvider = provider;",
    "right" : "cProvider = provider;",
    "info" : "ExpressionStatement[16680-16701]:ExpressionStatement[16680-16701]"
  }, {
    "left" : "cAvailableIDs = ids;",
    "right" : "cAvailableIDs = ids;",
    "info" : "ExpressionStatement[16710-16730]:ExpressionStatement[16710-16730]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[17087-17094]:Modifier[17087-17094]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[17095-17101]:Modifier[17095-17101]"
  }, {
    "left" : "Provider",
    "right" : "Provider",
    "info" : "SimpleType[17102-17110]:SimpleType[17102-17110]"
  }, {
    "left" : "getDefaultProvider",
    "right" : "getDefaultProvider",
    "info" : "SimpleName[17111-17129]:SimpleName[17111-17129]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17132-18153]:Block[17132-18153]"
  }, {
    "left" : "Provider provider = null;",
    "right" : "Provider provider = null;",
    "info" : "VariableDeclarationStatement[17142-17167]:VariableDeclarationStatement[17142-17167]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17177-17723]:TryStatement[17177-17723]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17181-17659]:Block[17181-17659]"
  }, {
    "left" : "String providerClass =\n                System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
    "right" : "String providerClass =\n                System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
    "info" : "VariableDeclarationStatement[17195-17292]:VariableDeclarationStatement[17195-17292]"
  }, {
    "left" : "if (providerClass != null)",
    "right" : "if (providerClass != null)",
    "info" : "IfStatement[17305-17649]:IfStatement[17305-17649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17332-17649]:Block[17332-17649]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17350-17635]:TryStatement[17350-17635]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17354-17459]:Block[17354-17459]"
  }, {
    "left" : "provider = (Provider) Class.forName(providerClass).newInstance();",
    "right" : "provider = (Provider) Class.forName(providerClass).newInstance();",
    "info" : "ExpressionStatement[17376-17441]:ExpressionStatement[17376-17441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17481-17635]:Block[17481-17635]"
  }, {
    "left" : "Thread thread = Thread.currentThread();",
    "right" : "Thread thread = Thread.currentThread();",
    "info" : "VariableDeclarationStatement[17503-17542]:VariableDeclarationStatement[17503-17542]"
  }, {
    "left" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "right" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "info" : "ExpressionStatement[17563-17617]:ExpressionStatement[17563-17617]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17689-17723]:Block[17689-17723]"
  }, {
    "left" : "if (provider == null)",
    "right" : "if (provider == null)",
    "info" : "IfStatement[17733-18036]:IfStatement[17733-18036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17755-18036]:Block[17755-18036]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17769-18026]:TryStatement[17769-18026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17773-17862]:Block[17773-17862]"
  }, {
    "left" : "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
    "right" : "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
    "info" : "ExpressionStatement[17791-17848]:ExpressionStatement[17791-17848]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17884-18026]:Block[17884-18026]"
  }, {
    "left" : "Thread thread = Thread.currentThread();",
    "right" : "Thread thread = Thread.currentThread();",
    "info" : "VariableDeclarationStatement[17902-17941]:VariableDeclarationStatement[17902-17941]"
  }, {
    "left" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "right" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "info" : "ExpressionStatement[17958-18012]:ExpressionStatement[17958-18012]"
  }, {
    "left" : "if (provider == null)",
    "right" : "if (provider == null)",
    "info" : "IfStatement[18046-18121]:IfStatement[18046-18121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18068-18121]:Block[18068-18121]"
  }, {
    "left" : "provider = new UTCProvider();",
    "right" : "provider = new UTCProvider();",
    "info" : "ExpressionStatement[18082-18111]:ExpressionStatement[18082-18111]"
  }, {
    "left" : "return provider;",
    "right" : "return provider;",
    "info" : "ReturnStatement[18131-18147]:ReturnStatement[18131-18147]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18449-18455]:Modifier[18449-18455]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18456-18462]:Modifier[18456-18462]"
  }, {
    "left" : "NameProvider",
    "right" : "NameProvider",
    "info" : "SimpleType[18463-18475]:SimpleType[18463-18475]"
  }, {
    "left" : "getNameProvider",
    "right" : "getNameProvider",
    "info" : "SimpleName[18476-18491]:SimpleName[18476-18491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18494-18531]:Block[18494-18531]"
  }, {
    "left" : "return cNameProvider;",
    "right" : "return cNameProvider;",
    "info" : "ReturnStatement[18504-18525]:ReturnStatement[18504-18525]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18949-18955]:Modifier[18949-18955]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[18956-18962]:Modifier[18956-18962]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18963-18967]:PrimitiveType[18963-18967]"
  }, {
    "left" : "setNameProvider",
    "right" : "setNameProvider",
    "info" : "SimpleName[18968-18983]:SimpleName[18968-18983]"
  }, {
    "left" : "NameProvider nameProvider",
    "right" : "NameProvider nameProvider",
    "info" : "SingleVariableDeclaration[18984-19009]:SingleVariableDeclaration[18984-19009]"
  }, {
    "left" : "SecurityException",
    "right" : "SecurityException",
    "info" : "SimpleType[19018-19035]:SimpleType[19018-19035]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19036-19265]:Block[19036-19265]"
  }, {
    "left" : "SecurityManager sm = System.getSecurityManager();",
    "right" : "SecurityManager sm = System.getSecurityManager();",
    "info" : "VariableDeclarationStatement[19046-19095]:VariableDeclarationStatement[19046-19095]"
  }, {
    "left" : "if (sm != null)",
    "right" : "if (sm != null)",
    "info" : "IfStatement[19104-19219]:IfStatement[19104-19219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19120-19219]:Block[19120-19219]"
  }, {
    "left" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setNameProvider\"));",
    "right" : "sm.checkPermission(new JodaTimePermission(\"DateTimeZone.setNameProvider\"));",
    "info" : "ExpressionStatement[19134-19209]:ExpressionStatement[19134-19209]"
  }, {
    "left" : "setNameProvider0(nameProvider);",
    "right" : "setNameProvider0(nameProvider);",
    "info" : "ExpressionStatement[19228-19259]:ExpressionStatement[19228-19259]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19504-19511]:Modifier[19504-19511]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19512-19518]:Modifier[19512-19518]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[19519-19523]:PrimitiveType[19519-19523]"
  }, {
    "left" : "setNameProvider0",
    "right" : "setNameProvider0",
    "info" : "SimpleName[19524-19540]:SimpleName[19524-19540]"
  }, {
    "left" : "NameProvider nameProvider",
    "right" : "NameProvider nameProvider",
    "info" : "SingleVariableDeclaration[19541-19566]:SingleVariableDeclaration[19541-19566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19568-19712]:Block[19568-19712]"
  }, {
    "left" : "if (nameProvider == null)",
    "right" : "if (nameProvider == null)",
    "info" : "IfStatement[19578-19668]:IfStatement[19578-19668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19604-19668]:Block[19604-19668]"
  }, {
    "left" : "nameProvider = getDefaultNameProvider();",
    "right" : "nameProvider = getDefaultNameProvider();",
    "info" : "ExpressionStatement[19618-19658]:ExpressionStatement[19618-19658]"
  }, {
    "left" : "cNameProvider = nameProvider;",
    "right" : "cNameProvider = nameProvider;",
    "info" : "ExpressionStatement[19677-19706]:ExpressionStatement[19677-19706]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[19971-19978]:Modifier[19971-19978]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[19979-19985]:Modifier[19979-19985]"
  }, {
    "left" : "NameProvider",
    "right" : "NameProvider",
    "info" : "SimpleType[19986-19998]:SimpleType[19986-19998]"
  }, {
    "left" : "getDefaultNameProvider",
    "right" : "getDefaultNameProvider",
    "info" : "SimpleName[19999-20021]:SimpleName[19999-20021]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20024-20754]:Block[20024-20754]"
  }, {
    "left" : "NameProvider nameProvider = null;",
    "right" : "NameProvider nameProvider = null;",
    "info" : "VariableDeclarationStatement[20034-20067]:VariableDeclarationStatement[20034-20067]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20076-20617]:TryStatement[20076-20617]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20080-20554]:Block[20080-20554]"
  }, {
    "left" : "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
    "right" : "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
    "info" : "VariableDeclarationStatement[20094-20179]:VariableDeclarationStatement[20094-20179]"
  }, {
    "left" : "if (providerClass != null)",
    "right" : "if (providerClass != null)",
    "info" : "IfStatement[20192-20544]:IfStatement[20192-20544]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20219-20544]:Block[20219-20544]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[20237-20530]:TryStatement[20237-20530]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20241-20354]:Block[20241-20354]"
  }, {
    "left" : "nameProvider = (NameProvider) Class.forName(providerClass).newInstance();",
    "right" : "nameProvider = (NameProvider) Class.forName(providerClass).newInstance();",
    "info" : "ExpressionStatement[20263-20336]:ExpressionStatement[20263-20336]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20376-20530]:Block[20376-20530]"
  }, {
    "left" : "Thread thread = Thread.currentThread();",
    "right" : "Thread thread = Thread.currentThread();",
    "info" : "VariableDeclarationStatement[20398-20437]:VariableDeclarationStatement[20398-20437]"
  }, {
    "left" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "right" : "thread.getThreadGroup().uncaughtException(thread, ex);",
    "info" : "ExpressionStatement[20458-20512]:ExpressionStatement[20458-20512]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20584-20617]:Block[20584-20617]"
  }, {
    "left" : "if (nameProvider == null)",
    "right" : "if (nameProvider == null)",
    "info" : "IfStatement[20627-20718]:IfStatement[20627-20718]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20653-20718]:Block[20653-20718]"
  }, {
    "left" : "nameProvider = new DefaultNameProvider();",
    "right" : "nameProvider = new DefaultNameProvider();",
    "info" : "ExpressionStatement[20667-20708]:ExpressionStatement[20667-20708]"
  }, {
    "left" : "return nameProvider;",
    "right" : "return nameProvider;",
    "info" : "ReturnStatement[20728-20748]:ReturnStatement[20728-20748]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[20999-21006]:Modifier[20999-21006]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[21007-21013]:Modifier[21007-21013]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[21014-21026]:Modifier[21014-21026]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[21027-21033]:SimpleType[21027-21033]"
  }, {
    "left" : "getConvertedId",
    "right" : "getConvertedId",
    "info" : "SimpleName[21034-21048]:SimpleName[21034-21048]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[21049-21058]:SingleVariableDeclaration[21049-21058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21060-22897]:Block[21060-22897]"
  }, {
    "left" : "Map<String, String> map = cZoneIdConversion;",
    "right" : "Map<String, String> map = cZoneIdConversion;",
    "info" : "VariableDeclarationStatement[21070-21114]:VariableDeclarationStatement[21070-21114]"
  }, {
    "left" : "if (map == null)",
    "right" : "if (map == null)",
    "info" : "IfStatement[21123-22863]:IfStatement[21123-22863]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21140-22863]:Block[21140-22863]"
  }, {
    "left" : "map = new HashMap<String, String>();",
    "right" : "map = new HashMap<String, String>();",
    "info" : "ExpressionStatement[21208-21244]:ExpressionStatement[21208-21244]"
  }, {
    "left" : "map.put(\"GMT\", \"UTC\");",
    "right" : "map.put(\"GMT\", \"UTC\");",
    "info" : "ExpressionStatement[21257-21279]:ExpressionStatement[21257-21279]"
  }, {
    "left" : "map.put(\"WET\", \"WET\");",
    "right" : "map.put(\"WET\", \"WET\");",
    "info" : "ExpressionStatement[21292-21314]:ExpressionStatement[21292-21314]"
  }, {
    "left" : "map.put(\"CET\", \"CET\");",
    "right" : "map.put(\"CET\", \"CET\");",
    "info" : "ExpressionStatement[21327-21349]:ExpressionStatement[21327-21349]"
  }, {
    "left" : "map.put(\"MET\", \"CET\");",
    "right" : "map.put(\"MET\", \"CET\");",
    "info" : "ExpressionStatement[21362-21384]:ExpressionStatement[21362-21384]"
  }, {
    "left" : "map.put(\"ECT\", \"CET\");",
    "right" : "map.put(\"ECT\", \"CET\");",
    "info" : "ExpressionStatement[21397-21419]:ExpressionStatement[21397-21419]"
  }, {
    "left" : "map.put(\"EET\", \"EET\");",
    "right" : "map.put(\"EET\", \"EET\");",
    "info" : "ExpressionStatement[21432-21454]:ExpressionStatement[21432-21454]"
  }, {
    "left" : "map.put(\"MIT\", \"Pacific/Apia\");",
    "right" : "map.put(\"MIT\", \"Pacific/Apia\");",
    "info" : "ExpressionStatement[21467-21498]:ExpressionStatement[21467-21498]"
  }, {
    "left" : "map.put(\"HST\", \"Pacific/Honolulu\");",
    "right" : "map.put(\"HST\", \"Pacific/Honolulu\");",
    "info" : "ExpressionStatement[21511-21546]:ExpressionStatement[21511-21546]"
  }, {
    "left" : "map.put(\"AST\", \"America/Anchorage\");",
    "right" : "map.put(\"AST\", \"America/Anchorage\");",
    "info" : "ExpressionStatement[21582-21618]:ExpressionStatement[21582-21618]"
  }, {
    "left" : "map.put(\"PST\", \"America/Los_Angeles\");",
    "right" : "map.put(\"PST\", \"America/Los_Angeles\");",
    "info" : "ExpressionStatement[21631-21669]:ExpressionStatement[21631-21669]"
  }, {
    "left" : "map.put(\"MST\", \"America/Denver\");",
    "right" : "map.put(\"MST\", \"America/Denver\");",
    "info" : "ExpressionStatement[21682-21715]:ExpressionStatement[21682-21715]"
  }, {
    "left" : "map.put(\"PNT\", \"America/Phoenix\");",
    "right" : "map.put(\"PNT\", \"America/Phoenix\");",
    "info" : "ExpressionStatement[21751-21785]:ExpressionStatement[21751-21785]"
  }, {
    "left" : "map.put(\"CST\", \"America/Chicago\");",
    "right" : "map.put(\"CST\", \"America/Chicago\");",
    "info" : "ExpressionStatement[21798-21832]:ExpressionStatement[21798-21832]"
  }, {
    "left" : "map.put(\"EST\", \"America/New_York\");",
    "right" : "map.put(\"EST\", \"America/New_York\");",
    "info" : "ExpressionStatement[21845-21880]:ExpressionStatement[21845-21880]"
  }, {
    "left" : "map.put(\"IET\", \"America/Indiana/Indianapolis\");",
    "right" : "map.put(\"IET\", \"America/Indiana/Indianapolis\");",
    "info" : "ExpressionStatement[21916-21963]:ExpressionStatement[21916-21963]"
  }, {
    "left" : "map.put(\"PRT\", \"America/Puerto_Rico\");",
    "right" : "map.put(\"PRT\", \"America/Puerto_Rico\");",
    "info" : "ExpressionStatement[21976-22014]:ExpressionStatement[21976-22014]"
  }, {
    "left" : "map.put(\"CNT\", \"America/St_Johns\");",
    "right" : "map.put(\"CNT\", \"America/St_Johns\");",
    "info" : "ExpressionStatement[22027-22062]:ExpressionStatement[22027-22062]"
  }, {
    "left" : "map.put(\"AGT\", \"America/Argentina/Buenos_Aires\");",
    "right" : "map.put(\"AGT\", \"America/Argentina/Buenos_Aires\");",
    "info" : "ExpressionStatement[22075-22124]:ExpressionStatement[22075-22124]"
  }, {
    "left" : "map.put(\"BET\", \"America/Sao_Paulo\");",
    "right" : "map.put(\"BET\", \"America/Sao_Paulo\");",
    "info" : "ExpressionStatement[22137-22173]:ExpressionStatement[22137-22173]"
  }, {
    "left" : "map.put(\"ART\", \"Africa/Cairo\");",
    "right" : "map.put(\"ART\", \"Africa/Cairo\");",
    "info" : "ExpressionStatement[22186-22217]:ExpressionStatement[22186-22217]"
  }, {
    "left" : "map.put(\"CAT\", \"Africa/Harare\");",
    "right" : "map.put(\"CAT\", \"Africa/Harare\");",
    "info" : "ExpressionStatement[22230-22262]:ExpressionStatement[22230-22262]"
  }, {
    "left" : "map.put(\"EAT\", \"Africa/Addis_Ababa\");",
    "right" : "map.put(\"EAT\", \"Africa/Addis_Ababa\");",
    "info" : "ExpressionStatement[22275-22312]:ExpressionStatement[22275-22312]"
  }, {
    "left" : "map.put(\"NET\", \"Asia/Yerevan\");",
    "right" : "map.put(\"NET\", \"Asia/Yerevan\");",
    "info" : "ExpressionStatement[22325-22356]:ExpressionStatement[22325-22356]"
  }, {
    "left" : "map.put(\"PLT\", \"Asia/Karachi\");",
    "right" : "map.put(\"PLT\", \"Asia/Karachi\");",
    "info" : "ExpressionStatement[22369-22400]:ExpressionStatement[22369-22400]"
  }, {
    "left" : "map.put(\"IST\", \"Asia/Kolkata\");",
    "right" : "map.put(\"IST\", \"Asia/Kolkata\");",
    "info" : "ExpressionStatement[22413-22444]:ExpressionStatement[22413-22444]"
  }, {
    "left" : "map.put(\"BST\", \"Asia/Dhaka\");",
    "right" : "map.put(\"BST\", \"Asia/Dhaka\");",
    "info" : "ExpressionStatement[22457-22486]:ExpressionStatement[22457-22486]"
  }, {
    "left" : "map.put(\"VST\", \"Asia/Ho_Chi_Minh\");",
    "right" : "map.put(\"VST\", \"Asia/Ho_Chi_Minh\");",
    "info" : "ExpressionStatement[22499-22534]:ExpressionStatement[22499-22534]"
  }, {
    "left" : "map.put(\"CTT\", \"Asia/Shanghai\");",
    "right" : "map.put(\"CTT\", \"Asia/Shanghai\");",
    "info" : "ExpressionStatement[22547-22579]:ExpressionStatement[22547-22579]"
  }, {
    "left" : "map.put(\"JST\", \"Asia/Tokyo\");",
    "right" : "map.put(\"JST\", \"Asia/Tokyo\");",
    "info" : "ExpressionStatement[22592-22621]:ExpressionStatement[22592-22621]"
  }, {
    "left" : "map.put(\"ACT\", \"Australia/Darwin\");",
    "right" : "map.put(\"ACT\", \"Australia/Darwin\");",
    "info" : "ExpressionStatement[22634-22669]:ExpressionStatement[22634-22669]"
  }, {
    "left" : "map.put(\"AET\", \"Australia/Sydney\");",
    "right" : "map.put(\"AET\", \"Australia/Sydney\");",
    "info" : "ExpressionStatement[22682-22717]:ExpressionStatement[22682-22717]"
  }, {
    "left" : "map.put(\"SST\", \"Pacific/Guadalcanal\");",
    "right" : "map.put(\"SST\", \"Pacific/Guadalcanal\");",
    "info" : "ExpressionStatement[22730-22768]:ExpressionStatement[22730-22768]"
  }, {
    "left" : "map.put(\"NST\", \"Pacific/Auckland\");",
    "right" : "map.put(\"NST\", \"Pacific/Auckland\");",
    "info" : "ExpressionStatement[22781-22816]:ExpressionStatement[22781-22816]"
  }, {
    "left" : "cZoneIdConversion = map;",
    "right" : "cZoneIdConversion = map;",
    "info" : "ExpressionStatement[22829-22853]:ExpressionStatement[22829-22853]"
  }, {
    "left" : "return map.get(id);",
    "right" : "return map.get(id);",
    "info" : "ReturnStatement[22872-22891]:ReturnStatement[22872-22891]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22903-22910]:Modifier[22903-22910]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[22911-22917]:Modifier[22911-22917]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[22918-22921]:PrimitiveType[22918-22921]"
  }, {
    "left" : "parseOffset",
    "right" : "parseOffset",
    "info" : "SimpleName[22922-22933]:SimpleName[22922-22933]"
  }, {
    "left" : "String str",
    "right" : "String str",
    "info" : "SingleVariableDeclaration[22934-22944]:SingleVariableDeclaration[22934-22944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22946-23596]:Block[22946-23596]"
  }, {
    "left" : "Chronology chrono = new BaseChronology() {\n            public DateTimeZone getZone() {\n                return null;\n            }\n            public Chronology withUTC() {\n                return this;\n            }\n            public Chronology withZone(DateTimeZone zone) {\n                return this;\n            }\n            public String toString() {\n                return getClass().getName();\n            }\n        };",
    "right" : "Chronology chrono = new BaseChronology() {\n            public DateTimeZone getZone() {\n                return null;\n            }\n            public Chronology withUTC() {\n                return this;\n            }\n            public Chronology withZone(DateTimeZone zone) {\n                return this;\n            }\n            public String toString() {\n                return getClass().getName();\n            }\n        };",
    "info" : "VariableDeclarationStatement[23083-23509]:VariableDeclarationStatement[23083-23509]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23138-23144]:Modifier[23138-23144]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleType[23145-23157]:SimpleType[23145-23157]"
  }, {
    "left" : "getZone",
    "right" : "getZone",
    "info" : "SimpleName[23158-23165]:SimpleName[23158-23165]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23168-23212]:Block[23168-23212]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[23186-23198]:ReturnStatement[23186-23198]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23225-23231]:Modifier[23225-23231]"
  }, {
    "left" : "Chronology",
    "right" : "Chronology",
    "info" : "SimpleType[23232-23242]:SimpleType[23232-23242]"
  }, {
    "left" : "withUTC",
    "right" : "withUTC",
    "info" : "SimpleName[23243-23250]:SimpleName[23243-23250]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23253-23297]:Block[23253-23297]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[23271-23283]:ReturnStatement[23271-23283]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23310-23316]:Modifier[23310-23316]"
  }, {
    "left" : "Chronology",
    "right" : "Chronology",
    "info" : "SimpleType[23317-23327]:SimpleType[23317-23327]"
  }, {
    "left" : "withZone",
    "right" : "withZone",
    "info" : "SimpleName[23328-23336]:SimpleName[23328-23336]"
  }, {
    "left" : "DateTimeZone zone",
    "right" : "DateTimeZone zone",
    "info" : "SingleVariableDeclaration[23337-23354]:SingleVariableDeclaration[23337-23354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23356-23400]:Block[23356-23400]"
  }, {
    "left" : "return this;",
    "right" : "return this;",
    "info" : "ReturnStatement[23374-23386]:ReturnStatement[23374-23386]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[23413-23419]:Modifier[23413-23419]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[23420-23426]:SimpleType[23420-23426]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[23427-23435]:SimpleName[23427-23435]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23438-23498]:Block[23438-23498]"
  }, {
    "left" : "return getClass().getName();",
    "right" : "return getClass().getName();",
    "info" : "ReturnStatement[23456-23484]:ReturnStatement[23456-23484]"
  }, {
    "left" : "return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);",
    "right" : "return -(int) offsetFormatter().withChronology(chrono).parseMillis(str);",
    "info" : "ReturnStatement[23518-23590]:ReturnStatement[23518-23590]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[23882-23889]:Modifier[23882-23889]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[23890-23896]:Modifier[23890-23896]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[23897-23903]:SimpleType[23897-23903]"
  }, {
    "left" : "printOffset",
    "right" : "printOffset",
    "info" : "SimpleName[23904-23915]:SimpleName[23904-23915]"
  }, {
    "left" : "int offset",
    "right" : "int offset",
    "info" : "SingleVariableDeclaration[23916-23926]:SingleVariableDeclaration[23916-23926]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23928-25004]:Block[23928-25004]"
  }, {
    "left" : "StringBuffer buf = new StringBuffer();",
    "right" : "StringBuffer buf = new StringBuffer();",
    "info" : "VariableDeclarationStatement[23938-23976]:VariableDeclarationStatement[23938-23976]"
  }, {
    "left" : "if (offset >= 0)",
    "right" : "if (offset >= 0)",
    "info" : "IfStatement[23985-24118]:IfStatement[23985-24118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24002-24042]:Block[24002-24042]"
  }, {
    "left" : "buf.append('+');",
    "right" : "buf.append('+');",
    "info" : "ExpressionStatement[24016-24032]:ExpressionStatement[24016-24032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24048-24118]:Block[24048-24118]"
  }, {
    "left" : "buf.append('-');",
    "right" : "buf.append('-');",
    "info" : "ExpressionStatement[24062-24078]:ExpressionStatement[24062-24078]"
  }, {
    "left" : "offset = -offset;",
    "right" : "offset = -offset;",
    "info" : "ExpressionStatement[24091-24108]:ExpressionStatement[24091-24108]"
  }, {
    "left" : "int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;",
    "right" : "int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;",
    "info" : "VariableDeclarationStatement[24128-24183]:VariableDeclarationStatement[24128-24183]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, hours, 2);",
    "right" : "FormatUtils.appendPaddedInteger(buf, hours, 2);",
    "info" : "ExpressionStatement[24192-24239]:ExpressionStatement[24192-24239]"
  }, {
    "left" : "offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;",
    "right" : "offset -= hours * (int) DateTimeConstants.MILLIS_PER_HOUR;",
    "info" : "ExpressionStatement[24248-24306]:ExpressionStatement[24248-24306]"
  }, {
    "left" : "int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;",
    "right" : "int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;",
    "info" : "VariableDeclarationStatement[24316-24375]:VariableDeclarationStatement[24316-24375]"
  }, {
    "left" : "buf.append(':');",
    "right" : "buf.append(':');",
    "info" : "ExpressionStatement[24384-24400]:ExpressionStatement[24384-24400]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, minutes, 2);",
    "right" : "FormatUtils.appendPaddedInteger(buf, minutes, 2);",
    "info" : "ExpressionStatement[24409-24458]:ExpressionStatement[24409-24458]"
  }, {
    "left" : "offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;",
    "right" : "offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;",
    "info" : "ExpressionStatement[24467-24523]:ExpressionStatement[24467-24523]"
  }, {
    "left" : "if (offset == 0)",
    "right" : "if (offset == 0)",
    "info" : "IfStatement[24532-24595]:IfStatement[24532-24595]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24549-24595]:Block[24549-24595]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[24563-24585]:ReturnStatement[24563-24585]"
  }, {
    "left" : "int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;",
    "right" : "int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;",
    "info" : "VariableDeclarationStatement[24605-24664]:VariableDeclarationStatement[24605-24664]"
  }, {
    "left" : "buf.append(':');",
    "right" : "buf.append(':');",
    "info" : "ExpressionStatement[24673-24689]:ExpressionStatement[24673-24689]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, seconds, 2);",
    "right" : "FormatUtils.appendPaddedInteger(buf, seconds, 2);",
    "info" : "ExpressionStatement[24698-24747]:ExpressionStatement[24698-24747]"
  }, {
    "left" : "offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;",
    "right" : "offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;",
    "info" : "ExpressionStatement[24756-24812]:ExpressionStatement[24756-24812]"
  }, {
    "left" : "if (offset == 0)",
    "right" : "if (offset == 0)",
    "info" : "IfStatement[24821-24884]:IfStatement[24821-24884]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24838-24884]:Block[24838-24884]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[24852-24874]:ReturnStatement[24852-24874]"
  }, {
    "left" : "buf.append('.');",
    "right" : "buf.append('.');",
    "info" : "ExpressionStatement[24894-24910]:ExpressionStatement[24894-24910]"
  }, {
    "left" : "FormatUtils.appendPaddedInteger(buf, offset, 3);",
    "right" : "FormatUtils.appendPaddedInteger(buf, offset, 3);",
    "info" : "ExpressionStatement[24919-24967]:ExpressionStatement[24919-24967]"
  }, {
    "left" : "return buf.toString();",
    "right" : "return buf.toString();",
    "info" : "ReturnStatement[24976-24998]:ReturnStatement[24976-24998]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25131-25138]:Modifier[25131-25138]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[25139-25145]:Modifier[25139-25145]"
  }, {
    "left" : "synchronized",
    "right" : "synchronized",
    "info" : "Modifier[25146-25158]:Modifier[25146-25158]"
  }, {
    "left" : "DateTimeFormatter",
    "right" : "DateTimeFormatter",
    "info" : "SimpleType[25159-25176]:SimpleType[25159-25176]"
  }, {
    "left" : "offsetFormatter",
    "right" : "offsetFormatter",
    "info" : "SimpleName[25177-25192]:SimpleName[25177-25192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25195-25435]:Block[25195-25435]"
  }, {
    "left" : "if (cOffsetFormatter == null)",
    "right" : "if (cOffsetFormatter == null)",
    "info" : "IfStatement[25205-25396]:IfStatement[25205-25396]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25235-25396]:Block[25235-25396]"
  }, {
    "left" : "cOffsetFormatter = new DateTimeFormatterBuilder()\n                .appendTimeZoneOffset(null, true, 2, 4)\n                .toFormatter();",
    "right" : "cOffsetFormatter = new DateTimeFormatterBuilder()\n                .appendTimeZoneOffset(null, true, 2, 4)\n                .toFormatter();",
    "info" : "ExpressionStatement[25249-25386]:ExpressionStatement[25249-25386]"
  }, {
    "left" : "return cOffsetFormatter;",
    "right" : "return cOffsetFormatter;",
    "info" : "ReturnStatement[25405-25429]:ReturnStatement[25405-25429]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[25717-25726]:Modifier[25717-25726]"
  }, {
    "left" : "DateTimeZone",
    "right" : "DateTimeZone",
    "info" : "SimpleName[25727-25739]:SimpleName[25727-25739]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[25740-25749]:SingleVariableDeclaration[25740-25749]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25751-25883]:Block[25751-25883]"
  }, {
    "left" : "if (id == null)",
    "right" : "if (id == null)",
    "info" : "IfStatement[25761-25859]:IfStatement[25761-25859]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25777-25859]:Block[25777-25859]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Id must not be null\");",
    "right" : "throw new IllegalArgumentException(\"Id must not be null\");",
    "info" : "ThrowStatement[25791-25849]:ThrowStatement[25791-25849]"
  }, {
    "left" : "iID = id;",
    "right" : "iID = id;",
    "info" : "ExpressionStatement[25868-25877]:ExpressionStatement[25868-25877]"
  }, {
    "left" : "@ToString",
    "right" : "@ToString",
    "info" : "MarkerAnnotation[26100-26109]:MarkerAnnotation[26100-26109]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26114-26120]:Modifier[26114-26120]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[26121-26126]:Modifier[26121-26126]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26127-26133]:SimpleType[26127-26133]"
  }, {
    "left" : "getID",
    "right" : "getID",
    "info" : "SimpleName[26134-26139]:SimpleName[26134-26139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26142-26169]:Block[26142-26169]"
  }, {
    "left" : "return iID;",
    "right" : "return iID;",
    "info" : "ReturnStatement[26152-26163]:ReturnStatement[26152-26163]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26498-26504]:Modifier[26498-26504]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[26505-26513]:Modifier[26505-26513]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26514-26520]:SimpleType[26514-26520]"
  }, {
    "left" : "getNameKey",
    "right" : "getNameKey",
    "info" : "SimpleName[26521-26531]:SimpleName[26521-26531]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[26532-26544]:SingleVariableDeclaration[26532-26544]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[26970-26976]:Modifier[26970-26976]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[26977-26982]:Modifier[26977-26982]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[26983-26989]:SimpleType[26983-26989]"
  }, {
    "left" : "getShortName",
    "right" : "getShortName",
    "info" : "SimpleName[26990-27002]:SimpleName[26990-27002]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[27003-27015]:SingleVariableDeclaration[27003-27015]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27017-27068]:Block[27017-27068]"
  }, {
    "left" : "return getShortName(instant, null);",
    "right" : "return getShortName(instant, null);",
    "info" : "ReturnStatement[27027-27062]:ReturnStatement[27027-27062]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[27549-27555]:Modifier[27549-27555]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[27556-27562]:SimpleType[27556-27562]"
  }, {
    "left" : "getShortName",
    "right" : "getShortName",
    "info" : "SimpleName[27563-27575]:SimpleName[27563-27575]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[27576-27588]:SingleVariableDeclaration[27576-27588]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[27590-27603]:SingleVariableDeclaration[27590-27603]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27605-27988]:Block[27605-27988]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[27615-27688]:IfStatement[27615-27688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27635-27688]:Block[27635-27688]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[27649-27678]:ExpressionStatement[27649-27678]"
  }, {
    "left" : "String nameKey = getNameKey(instant);",
    "right" : "String nameKey = getNameKey(instant);",
    "info" : "VariableDeclarationStatement[27697-27734]:VariableDeclarationStatement[27697-27734]"
  }, {
    "left" : "if (nameKey == null)",
    "right" : "if (nameKey == null)",
    "info" : "IfStatement[27743-27799]:IfStatement[27743-27799]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27764-27799]:Block[27764-27799]"
  }, {
    "left" : "return iID;",
    "right" : "return iID;",
    "info" : "ReturnStatement[27778-27789]:ReturnStatement[27778-27789]"
  }, {
    "left" : "String name = cNameProvider.getShortName(locale, iID, nameKey);",
    "right" : "String name = cNameProvider.getShortName(locale, iID, nameKey);",
    "info" : "VariableDeclarationStatement[27808-27871]:VariableDeclarationStatement[27808-27871]"
  }, {
    "left" : "if (name != null)",
    "right" : "if (name != null)",
    "info" : "IfStatement[27880-27934]:IfStatement[27880-27934]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27898-27934]:Block[27898-27934]"
  }, {
    "left" : "return name;",
    "right" : "return name;",
    "info" : "ReturnStatement[27912-27924]:ReturnStatement[27912-27924]"
  }, {
    "left" : "return printOffset(getOffset(instant));",
    "right" : "return printOffset(getOffset(instant));",
    "info" : "ReturnStatement[27943-27982]:ReturnStatement[27943-27982]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28410-28416]:Modifier[28410-28416]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[28417-28422]:Modifier[28417-28422]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[28423-28429]:SimpleType[28423-28429]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[28430-28437]:SimpleName[28430-28437]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[28438-28450]:SingleVariableDeclaration[28438-28450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28452-28498]:Block[28452-28498]"
  }, {
    "left" : "return getName(instant, null);",
    "right" : "return getName(instant, null);",
    "info" : "ReturnStatement[28462-28492]:ReturnStatement[28462-28492]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[28977-28983]:Modifier[28977-28983]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[28984-28990]:SimpleType[28984-28990]"
  }, {
    "left" : "getName",
    "right" : "getName",
    "info" : "SimpleName[28991-28998]:SimpleName[28991-28998]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[28999-29011]:SingleVariableDeclaration[28999-29011]"
  }, {
    "left" : "Locale locale",
    "right" : "Locale locale",
    "info" : "SingleVariableDeclaration[29013-29026]:SingleVariableDeclaration[29013-29026]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29028-29406]:Block[29028-29406]"
  }, {
    "left" : "if (locale == null)",
    "right" : "if (locale == null)",
    "info" : "IfStatement[29038-29111]:IfStatement[29038-29111]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29058-29111]:Block[29058-29111]"
  }, {
    "left" : "locale = Locale.getDefault();",
    "right" : "locale = Locale.getDefault();",
    "info" : "ExpressionStatement[29072-29101]:ExpressionStatement[29072-29101]"
  }, {
    "left" : "String nameKey = getNameKey(instant);",
    "right" : "String nameKey = getNameKey(instant);",
    "info" : "VariableDeclarationStatement[29120-29157]:VariableDeclarationStatement[29120-29157]"
  }, {
    "left" : "if (nameKey == null)",
    "right" : "if (nameKey == null)",
    "info" : "IfStatement[29166-29222]:IfStatement[29166-29222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29187-29222]:Block[29187-29222]"
  }, {
    "left" : "return iID;",
    "right" : "return iID;",
    "info" : "ReturnStatement[29201-29212]:ReturnStatement[29201-29212]"
  }, {
    "left" : "String name = cNameProvider.getName(locale, iID, nameKey);",
    "right" : "String name = cNameProvider.getName(locale, iID, nameKey);",
    "info" : "VariableDeclarationStatement[29231-29289]:VariableDeclarationStatement[29231-29289]"
  }, {
    "left" : "if (name != null)",
    "right" : "if (name != null)",
    "info" : "IfStatement[29298-29352]:IfStatement[29298-29352]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29316-29352]:Block[29316-29352]"
  }, {
    "left" : "return name;",
    "right" : "return name;",
    "info" : "ReturnStatement[29330-29342]:ReturnStatement[29330-29342]"
  }, {
    "left" : "return printOffset(getOffset(instant));",
    "right" : "return printOffset(getOffset(instant));",
    "info" : "ReturnStatement[29361-29400]:ReturnStatement[29361-29400]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29658-29664]:Modifier[29658-29664]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[29665-29673]:Modifier[29665-29673]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[29674-29677]:PrimitiveType[29674-29677]"
  }, {
    "left" : "getOffset",
    "right" : "getOffset",
    "info" : "SimpleName[29678-29687]:SimpleName[29678-29687]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[29688-29700]:SingleVariableDeclaration[29688-29700]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[29939-29945]:Modifier[29939-29945]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[29946-29951]:Modifier[29946-29951]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[29952-29955]:PrimitiveType[29952-29955]"
  }, {
    "left" : "getOffset",
    "right" : "getOffset",
    "info" : "SimpleName[29956-29965]:SimpleName[29956-29965]"
  }, {
    "left" : "ReadableInstant instant",
    "right" : "ReadableInstant instant",
    "info" : "SingleVariableDeclaration[29966-29989]:SingleVariableDeclaration[29966-29989]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29991-30151]:Block[29991-30151]"
  }, {
    "left" : "if (instant == null)",
    "right" : "if (instant == null)",
    "info" : "IfStatement[30001-30098]:IfStatement[30001-30098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30022-30098]:Block[30022-30098]"
  }, {
    "left" : "return getOffset(DateTimeUtils.currentTimeMillis());",
    "right" : "return getOffset(DateTimeUtils.currentTimeMillis());",
    "info" : "ReturnStatement[30036-30088]:ReturnStatement[30036-30088]"
  }, {
    "left" : "return getOffset(instant.getMillis());",
    "right" : "return getOffset(instant.getMillis());",
    "info" : "ReturnStatement[30107-30145]:ReturnStatement[30107-30145]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30452-30458]:Modifier[30452-30458]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[30459-30467]:Modifier[30459-30467]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[30468-30471]:PrimitiveType[30468-30471]"
  }, {
    "left" : "getStandardOffset",
    "right" : "getStandardOffset",
    "info" : "SimpleName[30472-30489]:SimpleName[30472-30489]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[30490-30502]:SingleVariableDeclaration[30490-30502]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31261-31267]:Modifier[31261-31267]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[31268-31275]:PrimitiveType[31268-31275]"
  }, {
    "left" : "isStandardOffset",
    "right" : "isStandardOffset",
    "info" : "SimpleName[31276-31292]:SimpleName[31276-31292]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[31293-31305]:SingleVariableDeclaration[31293-31305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31307-31379]:Block[31307-31379]"
  }, {
    "left" : "return getOffset(instant) == getStandardOffset(instant);",
    "right" : "return getOffset(instant) == getStandardOffset(instant);",
    "info" : "ReturnStatement[31317-31373]:ReturnStatement[31317-31373]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32977-32983]:Modifier[32977-32983]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[32984-32987]:PrimitiveType[32984-32987]"
  }, {
    "left" : "getOffsetFromLocal",
    "right" : "getOffsetFromLocal",
    "info" : "SimpleName[32988-33006]:SimpleName[32988-33006]"
  }, {
    "left" : "long instantLocal",
    "right" : "long instantLocal",
    "info" : "SingleVariableDeclaration[33007-33024]:SingleVariableDeclaration[33007-33024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33026-34535]:Block[33026-34536]"
  }, {
    "left" : "final int offsetLocal = getOffset(instantLocal);",
    "right" : "final int offsetLocal = getOffset(instantLocal);",
    "info" : "VariableDeclarationStatement[33095-33143]:VariableDeclarationStatement[33095-33143]"
  }, {
    "left" : "final long instantAdjusted = instantLocal - offsetLocal;",
    "right" : "final long instantAdjusted = instantLocal - offsetLocal;",
    "info" : "VariableDeclarationStatement[33224-33280]:VariableDeclarationStatement[33224-33280]"
  }, {
    "left" : "final int offsetAdjusted = getOffset(instantAdjusted);",
    "right" : "final int offsetAdjusted = getOffset(instantAdjusted);",
    "info" : "VariableDeclarationStatement[33289-33343]:VariableDeclarationStatement[33289-33343]"
  }, {
    "left" : "if (offsetLocal != offsetAdjusted)",
    "right" : "if (offsetLocal != offsetAdjusted)",
    "info" : "IfStatement[33417-34498]:IfStatement[33417-34499]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33452-34129]:Block[33452-34129]"
  }, {
    "left" : "if ((offsetLocal - offsetAdjusted) < 0)",
    "right" : "if ((offsetLocal - offsetAdjusted) < 0)",
    "info" : "IfStatement[33618-34119]:IfStatement[33618-34119]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33658-34119]:Block[33658-34119]"
  }, {
    "left" : "long nextLocal = nextTransition(instantAdjusted);",
    "right" : "long nextLocal = nextTransition(instantAdjusted);",
    "info" : "VariableDeclarationStatement[33866-33915]:VariableDeclarationStatement[33866-33915]"
  }, {
    "left" : "long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);",
    "right" : "long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);",
    "info" : "VariableDeclarationStatement[33932-33998]:VariableDeclarationStatement[33932-33998]"
  }, {
    "left" : "if (nextLocal != nextAdjusted)",
    "right" : "if (nextLocal != nextAdjusted)",
    "info" : "IfStatement[34015-34105]:IfStatement[34015-34105]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34046-34105]:Block[34046-34105]"
  }, {
    "left" : "return offsetLocal;",
    "right" : "return offsetLocal;",
    "info" : "ReturnStatement[34068-34087]:ReturnStatement[34068-34087]"
  }, {
    "left" : "if (offsetLocal > 0)",
    "right" : "if (offsetLocal >= 0)",
    "info" : "IfStatement[34135-34498]:IfStatement[34135-34499]"
  }, {
    "left" : ">",
    "right" : ">=",
    "info" : "INFIX_EXPRESSION_OPERATOR[34151-34152]:INFIX_EXPRESSION_OPERATOR[34151-34153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34156-34498]:Block[34157-34499]"
  }, {
    "left" : "long prev = previousTransition(instantAdjusted);",
    "right" : "long prev = previousTransition(instantAdjusted);",
    "info" : "VariableDeclarationStatement[34170-34218]:VariableDeclarationStatement[34171-34219]"
  }, {
    "left" : "if (prev < instantAdjusted)",
    "right" : "if (prev < instantAdjusted)",
    "info" : "IfStatement[34231-34488]:IfStatement[34232-34489]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34259-34488]:Block[34260-34489]"
  }, {
    "left" : "int offsetPrev = getOffset(prev);",
    "right" : "int offsetPrev = getOffset(prev);",
    "info" : "VariableDeclarationStatement[34277-34310]:VariableDeclarationStatement[34278-34311]"
  }, {
    "left" : "int diff = offsetPrev - offsetLocal;",
    "right" : "int diff = offsetPrev - offsetLocal;",
    "info" : "VariableDeclarationStatement[34327-34363]:VariableDeclarationStatement[34328-34364]"
  }, {
    "left" : "if (instantAdjusted - prev <= diff)",
    "right" : "if (instantAdjusted - prev <= diff)",
    "info" : "IfStatement[34380-34474]:IfStatement[34381-34475]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34416-34474]:Block[34417-34475]"
  }, {
    "left" : "return offsetPrev;",
    "right" : "return offsetPrev;",
    "info" : "ReturnStatement[34438-34456]:ReturnStatement[34439-34457]"
  }, {
    "left" : "return offsetAdjusted;",
    "right" : "return offsetAdjusted;",
    "info" : "ReturnStatement[34507-34529]:ReturnStatement[34508-34530]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34985-34991]:Modifier[34986-34992]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[34992-34996]:PrimitiveType[34993-34997]"
  }, {
    "left" : "convertUTCToLocal",
    "right" : "convertUTCToLocal",
    "info" : "SimpleName[34997-35014]:SimpleName[34998-35015]"
  }, {
    "left" : "long instantUTC",
    "right" : "long instantUTC",
    "info" : "SingleVariableDeclaration[35015-35030]:SingleVariableDeclaration[35016-35031]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35032-35413]:Block[35033-35414]"
  }, {
    "left" : "int offset = getOffset(instantUTC);",
    "right" : "int offset = getOffset(instantUTC);",
    "info" : "VariableDeclarationStatement[35042-35077]:VariableDeclarationStatement[35043-35078]"
  }, {
    "left" : "long instantLocal = instantUTC + offset;",
    "right" : "long instantLocal = instantUTC + offset;",
    "info" : "VariableDeclarationStatement[35086-35126]:VariableDeclarationStatement[35087-35127]"
  }, {
    "left" : "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0)",
    "right" : "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0)",
    "info" : "IfStatement[35214-35378]:IfStatement[35215-35379]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35281-35378]:Block[35282-35379]"
  }, {
    "left" : "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
    "right" : "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
    "info" : "ThrowStatement[35295-35368]:ThrowStatement[35296-35369]"
  }, {
    "left" : "return instantLocal;",
    "right" : "return instantLocal;",
    "info" : "ReturnStatement[35387-35407]:ReturnStatement[35388-35408]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36326-36332]:Modifier[36327-36333]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[36333-36337]:PrimitiveType[36334-36338]"
  }, {
    "left" : "convertLocalToUTC",
    "right" : "convertLocalToUTC",
    "info" : "SimpleName[36338-36355]:SimpleName[36339-36356]"
  }, {
    "left" : "long instantLocal",
    "right" : "long instantLocal",
    "info" : "SingleVariableDeclaration[36356-36373]:SingleVariableDeclaration[36357-36374]"
  }, {
    "left" : "boolean strict",
    "right" : "boolean strict",
    "info" : "SingleVariableDeclaration[36375-36389]:SingleVariableDeclaration[36376-36390]"
  }, {
    "left" : "long originalInstantUTC",
    "right" : "long originalInstantUTC",
    "info" : "SingleVariableDeclaration[36391-36414]:SingleVariableDeclaration[36392-36415]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36416-36755]:Block[36417-36756]"
  }, {
    "left" : "int offsetOriginal = getOffset(originalInstantUTC);",
    "right" : "int offsetOriginal = getOffset(originalInstantUTC);",
    "info" : "VariableDeclarationStatement[36426-36477]:VariableDeclarationStatement[36427-36478]"
  }, {
    "left" : "long instantUTC = instantLocal - offsetOriginal;",
    "right" : "long instantUTC = instantLocal - offsetOriginal;",
    "info" : "VariableDeclarationStatement[36486-36534]:VariableDeclarationStatement[36487-36535]"
  }, {
    "left" : "int offsetLocalFromOriginal = getOffset(instantUTC);",
    "right" : "int offsetLocalFromOriginal = getOffset(instantUTC);",
    "info" : "VariableDeclarationStatement[36543-36595]:VariableDeclarationStatement[36544-36596]"
  }, {
    "left" : "if (offsetLocalFromOriginal == offsetOriginal)",
    "right" : "if (offsetLocalFromOriginal == offsetOriginal)",
    "info" : "IfStatement[36604-36693]:IfStatement[36605-36694]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36651-36693]:Block[36652-36694]"
  }, {
    "left" : "return instantUTC;",
    "right" : "return instantUTC;",
    "info" : "ReturnStatement[36665-36683]:ReturnStatement[36666-36684]"
  }, {
    "left" : "return convertLocalToUTC(instantLocal, strict);",
    "right" : "return convertLocalToUTC(instantLocal, strict);",
    "info" : "ReturnStatement[36702-36749]:ReturnStatement[36703-36750]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37366-37372]:Modifier[37367-37373]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[37373-37377]:PrimitiveType[37374-37378]"
  }, {
    "left" : "convertLocalToUTC",
    "right" : "convertLocalToUTC",
    "info" : "SimpleName[37378-37395]:SimpleName[37379-37396]"
  }, {
    "left" : "long instantLocal",
    "right" : "long instantLocal",
    "info" : "SingleVariableDeclaration[37396-37413]:SingleVariableDeclaration[37397-37414]"
  }, {
    "left" : "boolean strict",
    "right" : "boolean strict",
    "info" : "SingleVariableDeclaration[37415-37429]:SingleVariableDeclaration[37416-37430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37431-39720]:Block[37432-39721]"
  }, {
    "left" : "int offsetLocal = getOffset(instantLocal);",
    "right" : "int offsetLocal = getOffset(instantLocal);",
    "info" : "VariableDeclarationStatement[37500-37542]:VariableDeclarationStatement[37501-37543]"
  }, {
    "left" : "int offset = getOffset(instantLocal - offsetLocal);",
    "right" : "int offset = getOffset(instantLocal - offsetLocal);",
    "info" : "VariableDeclarationStatement[37623-37674]:VariableDeclarationStatement[37624-37675]"
  }, {
    "left" : "if (offsetLocal != offset)",
    "right" : "if (offsetLocal != offset)",
    "info" : "IfStatement[37748-39348]:IfStatement[37749-39349]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37775-39348]:Block[37776-39349]"
  }, {
    "left" : "if (strict || offsetLocal < 0)",
    "right" : "if (strict || offsetLocal < 0)",
    "info" : "IfStatement[37994-39338]:IfStatement[37995-39339]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38025-39338]:Block[38026-39339]"
  }, {
    "left" : "long nextLocal = nextTransition(instantLocal - offsetLocal);",
    "right" : "long nextLocal = nextTransition(instantLocal - offsetLocal);",
    "info" : "VariableDeclarationStatement[38097-38157]:VariableDeclarationStatement[38098-38158]"
  }, {
    "left" : "if (nextLocal == (instantLocal - offsetLocal))",
    "right" : "if (nextLocal == (instantLocal - offsetLocal))",
    "info" : "IfStatement[38174-38288]:IfStatement[38175-38289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38221-38288]:Block[38222-38289]"
  }, {
    "left" : "nextLocal = Long.MAX_VALUE;",
    "right" : "nextLocal = Long.MAX_VALUE;",
    "info" : "ExpressionStatement[38243-38270]:ExpressionStatement[38244-38271]"
  }, {
    "left" : "long nextAdjusted = nextTransition(instantLocal - offset);",
    "right" : "long nextAdjusted = nextTransition(instantLocal - offset);",
    "info" : "VariableDeclarationStatement[38305-38363]:VariableDeclarationStatement[38306-38364]"
  }, {
    "left" : "if (nextAdjusted == (instantLocal - offset))",
    "right" : "if (nextAdjusted == (instantLocal - offset))",
    "info" : "IfStatement[38380-38495]:IfStatement[38381-38496]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38425-38495]:Block[38426-38496]"
  }, {
    "left" : "nextAdjusted = Long.MAX_VALUE;",
    "right" : "nextAdjusted = Long.MAX_VALUE;",
    "info" : "ExpressionStatement[38447-38477]:ExpressionStatement[38448-38478]"
  }, {
    "left" : "if (nextLocal != nextAdjusted)",
    "right" : "if (nextLocal != nextAdjusted)",
    "info" : "IfStatement[38512-39324]:IfStatement[38513-39325]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38543-39324]:Block[38544-39325]"
  }, {
    "left" : "if (strict)",
    "right" : "if (strict)",
    "info" : "IfStatement[38614-39306]:IfStatement[38615-39307]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38626-38995]:Block[38627-38996]"
  }, {
    "left" : "throw new IllegalArgumentException(\"Illegal instant due to time zone offset transition: \" +\n                                DateTimeFormat.forPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\").print(new Instant(instantLocal)) +\n                                \" (\" + getID() + \")\");",
    "right" : "throw new IllegalArgumentException(\"Illegal instant due to time zone offset transition: \" +\n                                DateTimeFormat.forPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS\").print(new Instant(instantLocal)) +\n                                \" (\" + getID() + \")\");",
    "info" : "ThrowStatement[38705-38973]:ThrowStatement[38706-38974]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39001-39306]:Block[39002-39307]"
  }, {
    "left" : "offset = offsetLocal;",
    "right" : "offset = offsetLocal;",
    "info" : "ExpressionStatement[39263-39284]:ExpressionStatement[39264-39285]"
  }, {
    "left" : "long instantUTC = instantLocal - offset;",
    "right" : "long instantUTC = instantLocal - offset;",
    "info" : "VariableDeclarationStatement[39387-39427]:VariableDeclarationStatement[39388-39428]"
  }, {
    "left" : "if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0)",
    "right" : "if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0)",
    "info" : "IfStatement[39517-39687]:IfStatement[39518-39688]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39585-39687]:Block[39586-39688]"
  }, {
    "left" : "throw new ArithmeticException(\"Subtracting time zone offset caused overflow\");",
    "right" : "throw new ArithmeticException(\"Subtracting time zone offset caused overflow\");",
    "info" : "ThrowStatement[39599-39677]:ThrowStatement[39600-39678]"
  }, {
    "left" : "return instantUTC;",
    "right" : "return instantUTC;",
    "info" : "ReturnStatement[39696-39714]:ReturnStatement[39697-39715]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40209-40215]:Modifier[40210-40216]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[40216-40220]:PrimitiveType[40217-40221]"
  }, {
    "left" : "getMillisKeepLocal",
    "right" : "getMillisKeepLocal",
    "info" : "SimpleName[40221-40239]:SimpleName[40222-40240]"
  }, {
    "left" : "DateTimeZone newZone",
    "right" : "DateTimeZone newZone",
    "info" : "SingleVariableDeclaration[40240-40260]:SingleVariableDeclaration[40241-40261]"
  }, {
    "left" : "long oldInstant",
    "right" : "long oldInstant",
    "info" : "SingleVariableDeclaration[40262-40277]:SingleVariableDeclaration[40263-40278]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40279-40582]:Block[40280-40583]"
  }, {
    "left" : "if (newZone == null)",
    "right" : "if (newZone == null)",
    "info" : "IfStatement[40289-40370]:IfStatement[40290-40371]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40310-40370]:Block[40311-40371]"
  }, {
    "left" : "newZone = DateTimeZone.getDefault();",
    "right" : "newZone = DateTimeZone.getDefault();",
    "info" : "ExpressionStatement[40324-40360]:ExpressionStatement[40325-40361]"
  }, {
    "left" : "if (newZone == this)",
    "right" : "if (newZone == this)",
    "info" : "IfStatement[40379-40442]:IfStatement[40380-40443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40400-40442]:Block[40401-40443]"
  }, {
    "left" : "return oldInstant;",
    "right" : "return oldInstant;",
    "info" : "ReturnStatement[40414-40432]:ReturnStatement[40415-40433]"
  }, {
    "left" : "long instantLocal = convertUTCToLocal(oldInstant);",
    "right" : "long instantLocal = convertUTCToLocal(oldInstant);",
    "info" : "VariableDeclarationStatement[40451-40501]:VariableDeclarationStatement[40452-40502]"
  }, {
    "left" : "return newZone.convertLocalToUTC(instantLocal, false, oldInstant);",
    "right" : "return newZone.convertLocalToUTC(instantLocal, false, oldInstant);",
    "info" : "ReturnStatement[40510-40576]:ReturnStatement[40511-40577]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[45537-45543]:Modifier[45538-45544]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[45544-45551]:PrimitiveType[45545-45552]"
  }, {
    "left" : "isLocalDateTimeGap",
    "right" : "isLocalDateTimeGap",
    "info" : "SimpleName[45552-45570]:SimpleName[45553-45571]"
  }, {
    "left" : "LocalDateTime localDateTime",
    "right" : "LocalDateTime localDateTime",
    "info" : "SingleVariableDeclaration[45571-45598]:SingleVariableDeclaration[45572-45599]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45600-45835]:Block[45601-45836]"
  }, {
    "left" : "if (isFixed())",
    "right" : "if (isFixed())",
    "info" : "IfStatement[45610-45662]:IfStatement[45611-45663]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45625-45662]:Block[45626-45663]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[45639-45652]:ReturnStatement[45640-45653]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[45671-45829]:TryStatement[45672-45830]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45675-45756]:Block[45676-45757]"
  }, {
    "left" : "localDateTime.toDateTime(this);",
    "right" : "localDateTime.toDateTime(this);",
    "info" : "ExpressionStatement[45689-45720]:ExpressionStatement[45690-45721]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[45733-45746]:ReturnStatement[45734-45747]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45793-45829]:Block[45794-45830]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[45807-45819]:ReturnStatement[45808-45820]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46093-46099]:Modifier[46094-46100]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[46100-46104]:PrimitiveType[46101-46105]"
  }, {
    "left" : "adjustOffset",
    "right" : "adjustOffset",
    "info" : "SimpleName[46105-46117]:SimpleName[46106-46118]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[46118-46130]:SingleVariableDeclaration[46119-46131]"
  }, {
    "left" : "boolean earlierOrLater",
    "right" : "boolean earlierOrLater",
    "info" : "SingleVariableDeclaration[46132-46154]:SingleVariableDeclaration[46133-46155]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46156-46541]:Block[46157-46542]"
  }, {
    "left" : "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
    "right" : "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
    "info" : "VariableDeclarationStatement[46166-46247]:VariableDeclarationStatement[46167-46248]"
  }, {
    "left" : "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
    "right" : "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
    "info" : "VariableDeclarationStatement[46256-46336]:VariableDeclarationStatement[46257-46337]"
  }, {
    "left" : "if (before == after)",
    "right" : "if (before == after)",
    "info" : "IfStatement[46345-46405]:IfStatement[46346-46406]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46366-46405]:Block[46367-46406]"
  }, {
    "left" : "return instant;",
    "right" : "return instant;",
    "info" : "ReturnStatement[46380-46395]:ReturnStatement[46381-46396]"
  }, {
    "left" : "long local = convertUTCToLocal(instant);",
    "right" : "long local = convertUTCToLocal(instant);",
    "info" : "VariableDeclarationStatement[46414-46454]:VariableDeclarationStatement[46415-46455]"
  }, {
    "left" : "return convertLocalToUTC(local, false, earlierOrLater ? after : before);",
    "right" : "return convertLocalToUTC(local, false, earlierOrLater ? after : before);",
    "info" : "ReturnStatement[46463-46535]:ReturnStatement[46464-46536]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46744-46750]:Modifier[46745-46751]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[46751-46759]:Modifier[46752-46760]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[46760-46767]:PrimitiveType[46761-46768]"
  }, {
    "left" : "isFixed",
    "right" : "isFixed",
    "info" : "SimpleName[46768-46775]:SimpleName[46769-46776]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47123-47129]:Modifier[47124-47130]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[47130-47138]:Modifier[47131-47139]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[47139-47143]:PrimitiveType[47140-47144]"
  }, {
    "left" : "nextTransition",
    "right" : "nextTransition",
    "info" : "SimpleName[47144-47158]:SimpleName[47145-47159]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[47159-47171]:SingleVariableDeclaration[47160-47172]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47519-47525]:Modifier[47520-47526]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[47526-47534]:Modifier[47527-47535]"
  }, {
    "left" : "long",
    "right" : "long",
    "info" : "PrimitiveType[47535-47539]:PrimitiveType[47536-47540]"
  }, {
    "left" : "previousTransition",
    "right" : "previousTransition",
    "info" : "SimpleName[47540-47558]:SimpleName[47541-47559]"
  }, {
    "left" : "long instant",
    "right" : "long instant",
    "info" : "SingleVariableDeclaration[47559-47571]:SingleVariableDeclaration[47560-47572]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[47814-47820]:Modifier[47815-47821]"
  }, {
    "left" : "java.util.TimeZone",
    "right" : "java.util.TimeZone",
    "info" : "SimpleType[47821-47839]:SimpleType[47822-47840]"
  }, {
    "left" : "toTimeZone",
    "right" : "toTimeZone",
    "info" : "SimpleName[47840-47850]:SimpleName[47841-47851]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47853-47912]:Block[47854-47913]"
  }, {
    "left" : "return java.util.TimeZone.getTimeZone(iID);",
    "right" : "return java.util.TimeZone.getTimeZone(iID);",
    "info" : "ReturnStatement[47863-47906]:ReturnStatement[47864-47907]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48107-48113]:Modifier[48108-48114]"
  }, {
    "left" : "abstract",
    "right" : "abstract",
    "info" : "Modifier[48114-48122]:Modifier[48115-48123]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[48123-48130]:PrimitiveType[48124-48131]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[48131-48137]:SimpleName[48132-48138]"
  }, {
    "left" : "Object object",
    "right" : "Object object",
    "info" : "SingleVariableDeclaration[48138-48151]:SingleVariableDeclaration[48139-48152]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48264-48270]:Modifier[48265-48271]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[48271-48274]:PrimitiveType[48272-48275]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[48275-48283]:SimpleName[48276-48284]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48286-48333]:Block[48287-48334]"
  }, {
    "left" : "return 57 + getID().hashCode();",
    "right" : "return 57 + getID().hashCode();",
    "info" : "ReturnStatement[48296-48327]:ReturnStatement[48297-48328]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48456-48462]:Modifier[48457-48463]"
  }, {
    "left" : "String",
    "right" : "String",
    "info" : "SimpleType[48463-48469]:SimpleType[48464-48470]"
  }, {
    "left" : "toString",
    "right" : "toString",
    "info" : "SimpleName[48470-48478]:SimpleName[48471-48479]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48481-48512]:Block[48482-48513]"
  }, {
    "left" : "return getID();",
    "right" : "return getID();",
    "info" : "ReturnStatement[48491-48506]:ReturnStatement[48492-48507]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[48781-48790]:Modifier[48782-48791]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[48791-48797]:SimpleType[48792-48798]"
  }, {
    "left" : "writeReplace",
    "right" : "writeReplace",
    "info" : "SimpleName[48798-48810]:SimpleName[48799-48811]"
  }, {
    "left" : "ObjectStreamException",
    "right" : "ObjectStreamException",
    "info" : "SimpleType[48820-48841]:SimpleType[48821-48842]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48842-48879]:Block[48843-48880]"
  }, {
    "left" : "return new Stub(iID);",
    "right" : "return new Stub(iID);",
    "info" : "ReturnStatement[48852-48873]:ReturnStatement[48853-48874]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[48947-48954]:Modifier[48948-48955]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[48955-48961]:Modifier[48956-48962]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[48962-48967]:Modifier[48963-48968]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[48968-48973]:TYPE_DECLARATION_KIND[48969-48974]"
  }, {
    "left" : "Stub",
    "right" : "Stub",
    "info" : "SimpleName[49287-49291]:SimpleName[49288-49292]"
  }, {
    "left" : "String id",
    "right" : "String id",
    "info" : "SingleVariableDeclaration[49292-49301]:SingleVariableDeclaration[49293-49302]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49303-49336]:Block[49304-49337]"
  }, {
    "left" : "iID = id;",
    "right" : "iID = id;",
    "info" : "ExpressionStatement[49317-49326]:ExpressionStatement[49318-49327]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[49346-49353]:Modifier[49347-49354]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[49354-49358]:PrimitiveType[49355-49359]"
  }, {
    "left" : "writeObject",
    "right" : "writeObject",
    "info" : "SimpleName[49359-49370]:SimpleName[49360-49371]"
  }, {
    "left" : "ObjectOutputStream out",
    "right" : "ObjectOutputStream out",
    "info" : "SingleVariableDeclaration[49371-49393]:SingleVariableDeclaration[49372-49394]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[49402-49413]:SimpleType[49403-49414]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49414-49456]:Block[49415-49457]"
  }, {
    "left" : "out.writeUTF(iID);",
    "right" : "out.writeUTF(iID);",
    "info" : "ExpressionStatement[49428-49446]:ExpressionStatement[49429-49447]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[49466-49473]:Modifier[49467-49474]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[49474-49478]:PrimitiveType[49475-49479]"
  }, {
    "left" : "readObject",
    "right" : "readObject",
    "info" : "SimpleName[49479-49489]:SimpleName[49480-49490]"
  }, {
    "left" : "ObjectInputStream in",
    "right" : "ObjectInputStream in",
    "info" : "SingleVariableDeclaration[49490-49510]:SingleVariableDeclaration[49491-49511]"
  }, {
    "left" : "IOException",
    "right" : "IOException",
    "info" : "SimpleType[49519-49530]:SimpleType[49520-49531]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49531-49574]:Block[49532-49575]"
  }, {
    "left" : "iID = in.readUTF();",
    "right" : "iID = in.readUTF();",
    "info" : "ExpressionStatement[49545-49564]:ExpressionStatement[49546-49565]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[49584-49591]:Modifier[49585-49592]"
  }, {
    "left" : "Object",
    "right" : "Object",
    "info" : "SimpleType[49592-49598]:SimpleType[49593-49599]"
  }, {
    "left" : "readResolve",
    "right" : "readResolve",
    "info" : "SimpleName[49599-49610]:SimpleName[49600-49611]"
  }, {
    "left" : "ObjectStreamException",
    "right" : "ObjectStreamException",
    "info" : "SimpleType[49620-49641]:SimpleType[49621-49642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49642-49684]:Block[49643-49685]"
  }, {
    "left" : "return forID(iID);",
    "right" : "return forID(iID);",
    "info" : "ReturnStatement[49656-49674]:ReturnStatement[49657-49675]"
  } ]
}