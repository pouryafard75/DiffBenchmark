{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DrillCursor",
      "right" : "DrillCursor",
      "info" : "TypeDeclaration[1473-9478]:TypeDeclaration[1473-10826]"
    }, {
      "left" : "private static final Logger logger = getLogger( DrillCursor.class );",
      "right" : "private static final Logger logger = getLogger( DrillCursor.class );",
      "info" : "FieldDeclaration[1513-1581]:FieldDeclaration[1513-1581]"
    }, {
      "left" : "private static final String UNKNOWN = \"--UNKNOWN--\";",
      "right" : "private static final String UNKNOWN = \"--UNKNOWN--\";",
      "info" : "FieldDeclaration[1585-1637]:FieldDeclaration[1585-1637]"
    }, {
      "left" : "private final DrillResultSetImpl resultSet;",
      "right" : "private final DrillResultSetImpl resultSet;",
      "info" : "FieldDeclaration[1641-1751]:FieldDeclaration[1641-1751]"
    }, {
      "left" : "private final RecordBatchLoader currentBatchHolder;",
      "right" : "private final RecordBatchLoader currentBatchHolder;",
      "info" : "FieldDeclaration[1755-1872]:FieldDeclaration[1755-1872]"
    }, {
      "left" : "private final DrillResultSetImpl.ResultsListener resultsListener;",
      "right" : "private final DrillResultSetImpl.ResultsListener resultsListener;",
      "info" : "FieldDeclaration[1876-1941]:FieldDeclaration[1876-1941]"
    }, {
      "left" : "private final DrillAccessorList accessors = new DrillAccessorList();",
      "right" : "private final DrillAccessorList accessors = new DrillAccessorList();",
      "info" : "FieldDeclaration[1945-2013]:FieldDeclaration[1945-2013]"
    }, {
      "left" : "private BatchSchema schema;",
      "right" : "private BatchSchema schema;",
      "info" : "FieldDeclaration[2017-2103]:FieldDeclaration[2017-2103]"
    }, {
      "left" : "private DrillColumnMetaDataList columnMetaDataList;",
      "right" : "private DrillColumnMetaDataList columnMetaDataList;",
      "info" : "FieldDeclaration[2107-2202]:FieldDeclaration[2107-2202]"
    }, {
      "left" : "private boolean initialSchemaLoaded = false;",
      "right" : "private boolean initialSchemaLoaded = false;",
      "info" : "FieldDeclaration[2206-2356]:FieldDeclaration[2206-2304]"
    }, {
      "left" : "private boolean afterFirstBatch = false;",
      "right" : "private boolean afterFirstBatch = false;",
      "info" : "FieldDeclaration[2360-2475]:FieldDeclaration[2308-2423]"
    }, {
      "left" : "private boolean returnTrueForNextCallToNext = false;",
      "right" : "private boolean returnTrueForNextCallToNext = false;",
      "info" : "FieldDeclaration[2479-3034]:FieldDeclaration[2427-3006]"
    }, {
      "left" : "private boolean afterLastRow = false;",
      "right" : "private boolean afterLastRow = false;",
      "info" : "FieldDeclaration[3038-3149]:FieldDeclaration[3010-3121]"
    }, {
      "left" : "private int currentRecordNumber = -1;",
      "right" : "private int currentRecordNumber = -1;",
      "info" : "FieldDeclaration[3153-3282]:FieldDeclaration[3125-3254]"
    }, {
      "left" : "DrillCursor(final DrillResultSetImpl resultSet)",
      "right" : "DrillCursor(final DrillResultSetImpl resultSet)",
      "info" : "MethodDeclaration[3287-3550]:MethodDeclaration[3259-3522]"
    }, {
      "left" : "DrillResultSetImpl getResultSet()",
      "right" : "DrillResultSetImpl getResultSet()",
      "info" : "MethodDeclaration[3554-3615]:MethodDeclaration[3526-3587]"
    }, {
      "left" : "protected int getCurrentRecordNumber()",
      "right" : "protected int getCurrentRecordNumber()",
      "info" : "MethodDeclaration[3619-3695]:MethodDeclaration[3591-3667]"
    }, {
      "left" : "public List<Accessor> createAccessors(List<ColumnMetaData> types,\n                                        Calendar localCalendar, Factory factory)",
      "right" : "public List<Accessor> createAccessors(List<ColumnMetaData> types,\n                                        Calendar localCalendar, Factory factory)",
      "info" : "MethodDeclaration[3699-3943]:MethodDeclaration[3671-3915]"
    }, {
      "left" : "private void updateColumns()",
      "right" : "private void updateColumns()",
      "info" : "MethodDeclaration[3947-4234]:MethodDeclaration[3919-4206]"
    }, {
      "left" : "public boolean next() throws SQLException",
      "right" : "private boolean nextRowInternally() throws SQLException",
      "info" : "MethodDeclaration[4238-8833]:MethodDeclaration[4210-8280]"
    }, {
      "left" : "public void close()",
      "right" : "public void close()",
      "info" : "MethodDeclaration[8837-9377]:MethodDeclaration[10185-10725]"
    }, {
      "left" : "public boolean wasNull() throws SQLException",
      "right" : "public boolean wasNull() throws SQLException",
      "info" : "MethodDeclaration[9381-9475]:MethodDeclaration[10729-10823]"
    } ],
    "mappings" : [
 {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1473-1478]:TYPE_DECLARATION_KIND[1473-1478]"
    }, {
      "left" : "DrillCursor",
      "right" : "DrillCursor",
      "info" : "SimpleName[1479-1490]:SimpleName[1479-1490]"
    }, {
      "left" : "Cursor",
      "right" : "Cursor",
      "info" : "SimpleType[1502-1508]:SimpleType[1502-1508]"
    }, {
      "left" : "DrillCursor",
      "right" : "DrillCursor",
      "info" : "SimpleName[3368-3379]:SimpleName[3340-3351]"
    }, {
      "left" : "final DrillResultSetImpl resultSet",
      "right" : "final DrillResultSetImpl resultSet",
      "info" : "SingleVariableDeclaration[3380-3414]:SingleVariableDeclaration[3352-3386]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3416-3550]:Block[3388-3522]"
    }, {
      "left" : "this.resultSet = resultSet;",
      "right" : "this.resultSet = resultSet;",
      "info" : "ExpressionStatement[3422-3449]:ExpressionStatement[3394-3421]"
    }, {
      "left" : "currentBatchHolder = resultSet.batchLoader;",
      "right" : "currentBatchHolder = resultSet.batchLoader;",
      "info" : "ExpressionStatement[3454-3497]:ExpressionStatement[3426-3469]"
    }, {
      "left" : "resultsListener = resultSet.resultsListener;",
      "right" : "resultsListener = resultSet.resultsListener;",
      "info" : "ExpressionStatement[3502-3546]:ExpressionStatement[3474-3518]"
    }, {
      "left" : "DrillResultSetImpl",
      "right" : "DrillResultSetImpl",
      "info" : "SimpleType[3554-3572]:SimpleType[3526-3544]"
    }, {
      "left" : "getResultSet",
      "right" : "getResultSet",
      "info" : "SimpleName[3573-3585]:SimpleName[3545-3557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3588-3615]:Block[3560-3587]"
    }, {
      "left" : "return resultSet;",
      "right" : "return resultSet;",
      "info" : "ReturnStatement[3594-3611]:ReturnStatement[3566-3583]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3619-3628]:Modifier[3591-3600]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[3629-3632]:PrimitiveType[3601-3604]"
    }, {
      "left" : "getCurrentRecordNumber",
      "right" : "getCurrentRecordNumber",
      "info" : "SimpleName[3633-3655]:SimpleName[3605-3627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3658-3695]:Block[3630-3667]"
    }, {
      "left" : "return currentRecordNumber;",
      "right" : "return currentRecordNumber;",
      "info" : "ReturnStatement[3664-3691]:ReturnStatement[3636-3663]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3699-3708]:MarkerAnnotation[3671-3680]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3711-3717]:Modifier[3683-3689]"
    }, {
      "left" : "List<Accessor>",
      "right" : "List<Accessor>",
      "info" : "ParameterizedType[3718-3732]:ParameterizedType[3690-3704]"
    }, {
      "left" : "createAccessors",
      "right" : "createAccessors",
      "info" : "SimpleName[3733-3748]:SimpleName[3705-3720]"
    }, {
      "left" : "List<ColumnMetaData> types",
      "right" : "List<ColumnMetaData> types",
      "info" : "SingleVariableDeclaration[3749-3775]:SingleVariableDeclaration[3721-3747]"
    }, {
      "left" : "Calendar localCalendar",
      "right" : "Calendar localCalendar",
      "info" : "SingleVariableDeclaration[3817-3839]:SingleVariableDeclaration[3789-3811]"
    }, {
      "left" : "Factory factory",
      "right" : "Factory factory",
      "info" : "SingleVariableDeclaration[3841-3856]:SingleVariableDeclaration[3813-3828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3858-3943]:Block[3830-3915]"
    }, {
      "left" : "columnMetaDataList = (DrillColumnMetaDataList) types;",
      "right" : "columnMetaDataList = (DrillColumnMetaDataList) types;",
      "info" : "ExpressionStatement[3864-3917]:ExpressionStatement[3836-3889]"
    }, {
      "left" : "return accessors;",
      "right" : "return accessors;",
      "info" : "ReturnStatement[3922-3939]:ReturnStatement[3894-3911]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3947-3954]:Modifier[3919-3926]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3955-3959]:PrimitiveType[3927-3931]"
    }, {
      "left" : "updateColumns",
      "right" : "updateColumns",
      "info" : "SimpleName[3960-3973]:SimpleName[3932-3945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3976-4234]:Block[3948-4206]"
    }, {
      "left" : "accessors.generateAccessors(this, currentBatchHolder);",
      "right" : "accessors.generateAccessors(this, currentBatchHolder);",
      "info" : "ExpressionStatement[3982-4036]:ExpressionStatement[3954-4008]"
    }, {
      "left" : "columnMetaDataList.updateColumnMetaData(UNKNOWN, UNKNOWN, UNKNOWN, schema);",
      "right" : "columnMetaDataList.updateColumnMetaData(UNKNOWN, UNKNOWN, UNKNOWN, schema);",
      "info" : "ExpressionStatement[4041-4116]:ExpressionStatement[4013-4088]"
    }, {
      "left" : "if (getResultSet().changeListener != null)",
      "right" : "if (getResultSet().changeListener != null)",
      "info" : "IfStatement[4121-4230]:IfStatement[4093-4202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4164-4230]:Block[4136-4202]"
    }, {
      "left" : "getResultSet().changeListener.schemaChanged(schema);",
      "right" : "getResultSet().changeListener.schemaChanged(schema);",
      "info" : "ExpressionStatement[4172-4224]:ExpressionStatement[4144-4196]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4697-4706]:MarkerAnnotation[9530-9539]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4709-4715]:Modifier[9542-9548]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[4716-4723]:PrimitiveType[4554-4561]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[4738-4750]:SimpleType[4589-4601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4751-8833]:Block[4602-8280]"
    }, {
      "left" : "if (!initialSchemaLoaded)",
      "right" : "if ( ! initialSchemaLoaded)",
      "info" : "IfStatement[4757-5069]:IfStatement[9590-9733]"
    }, {
      "left" : "if (!initialSchemaLoaded)",
      "right" : "if ( afterLastRow)",
      "info" : "IfStatement[4757-5069]:IfStatement[9809-10177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4783-4866]:Block[8578-9311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4783-4866]:Block[9829-9934]"
    }, {
      "left" : "initialSchemaLoaded = true;",
      "right" : "initialSchemaLoaded = true;",
      "info" : "ExpressionStatement[4791-4818]:ExpressionStatement[9280-9307]"
    }, {
      "left" : "returnTrueForNextCallToNext = true;",
      "right" : "returnTrueForNextCallToNext = true;",
      "info" : "ExpressionStatement[4825-4860]:ExpressionStatement[9213-9248]"
    }, {
      "left" : "if (returnTrueForNextCallToNext && !afterLastRow)",
      "right" : "if ( returnTrueForNextCallToNext)",
      "info" : "IfStatement[4872-5069]:IfStatement[9944-10177]"
    }, {
      "left" : "returnTrueForNextCallToNext",
      "right" : "returnTrueForNextCallToNext",
      "info" : "SimpleName[4876-4903]:SimpleName[9949-9976]"
    }, {
      "left" : "!afterLastRow",
      "right" : "! afterLastRow",
      "info" : "PrefixExpression[4907-4920]:PrefixExpression[8725-8739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4922-5069]:Block[9979-10126]"
    }, {
      "left" : "returnTrueForNextCallToNext = false;",
      "right" : "returnTrueForNextCallToNext = false;",
      "info" : "ExpressionStatement[5008-5044]:ExpressionStatement[10065-10101]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5051-5063]:ReturnStatement[10108-10120]"
    }, {
      "left" : "if (afterLastRow)",
      "right" : "if ( afterLastRow)",
      "info" : "IfStatement[5075-5198]:IfStatement[9809-10177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5093-5198]:Block[9829-9934]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5179-5192]:ReturnStatement[9915-9928]"
    }, {
      "left" : "if (currentRecordNumber + 1 < currentBatchHolder.getRecordCount())",
      "right" : "if (currentRecordNumber + 1 < currentBatchHolder.getRecordCount())",
      "info" : "IfStatement[5204-8829]:IfStatement[4608-8276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5271-5409]:Block[4675-4813]"
    }, {
      "left" : "currentRecordNumber++;",
      "right" : "currentRecordNumber++;",
      "info" : "ExpressionStatement[5362-5384]:ExpressionStatement[4766-4788]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5391-5403]:ReturnStatement[4795-4807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5415-8829]:Block[4819-8276]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5553-8822]:TryStatement[4957-8269]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5557-7736]:Block[4961-7183]"
    }, {
      "left" : "QueryDataBatch qrb = resultsListener.getNext();",
      "right" : "QueryDataBatch qrb = resultsListener.getNext();",
      "info" : "VariableDeclarationStatement[5567-5614]:VariableDeclarationStatement[4971-5018]"
    }, {
      "left" : "while ( qrb != null\n                && ( qrb.getHeader().getRowCount() == 0\n                     || qrb.getData() == null )\n                && afterFirstBatch)",
      "right" : "while ( qrb != null\n                  && ( qrb.getHeader().getRowCount() == 0\n                      || qrb.getData() == null ))",
      "info" : "WhileStatement[5829-6687]:WhileStatement[5268-6124]"
    }, {
      "left" : "qrb != null\n                && ( qrb.getHeader().getRowCount() == 0\n                     || qrb.getData() == null )",
      "right" : "qrb != null\n                  && ( qrb.getHeader().getRowCount() == 0\n                      || qrb.getData() == null )",
      "info" : "InfixExpression[5837-5952]:InfixExpression[5276-5394]"
    }, {
      "left" : "afterFirstBatch",
      "right" : "afterFirstBatch",
      "info" : "SimpleName[5972-5987]:SimpleName[5238-5253]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5990-6687]:Block[5397-6124]"
    }, {
      "left" : "logger.warn( \"Spurious batch read: {}\", qrb );",
      "right" : "logger.warn( \"Spurious batch read: {}\", qrb );",
      "info" : "ExpressionStatement[6065-6111]:ExpressionStatement[5476-5522]"
    }, {
      "left" : "qrb.release();",
      "right" : "qrb.release();",
      "info" : "ExpressionStatement[6123-6137]:ExpressionStatement[5536-5550]"
    }, {
      "left" : "qrb = resultsListener.getNext();",
      "right" : "qrb = resultsListener.getNext();",
      "info" : "ExpressionStatement[6149-6181]:ExpressionStatement[5564-5596]"
    }, {
      "left" : "if ( qrb != null && qrb.getData() == null)",
      "right" : "if ( qrb != null && qrb.getData() == null)",
      "info" : "IfStatement[6318-6677]:IfStatement[5739-6112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6362-6677]:Block[5783-6112]"
    }, {
      "left" : "qrb.release();",
      "right" : "qrb.release();",
      "info" : "ExpressionStatement[6479-6493]:ExpressionStatement[5906-5920]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6652-6665]:ReturnStatement[6085-6098]"
    }, {
      "left" : "afterFirstBatch = true;",
      "right" : "afterFirstBatch = true;",
      "info" : "ExpressionStatement[6697-6720]:ExpressionStatement[6144-6167]"
    }, {
      "left" : "if (qrb == null)",
      "right" : "if (qrb == null)",
      "info" : "IfStatement[6730-7728]:IfStatement[6177-7175]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6747-6966]:Block[6194-6413]"
    }, {
      "left" : "currentBatchHolder.clear();",
      "right" : "currentBatchHolder.clear();",
      "info" : "ExpressionStatement[6841-6868]:ExpressionStatement[6288-6315]"
    }, {
      "left" : "afterLastRow = true;",
      "right" : "afterLastRow = true;",
      "info" : "ExpressionStatement[6912-6932]:ExpressionStatement[6359-6379]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6943-6956]:ReturnStatement[6390-6403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6972-7728]:Block[6419-7175]"
    }, {
      "left" : "currentRecordNumber = 0;",
      "right" : "currentRecordNumber = 0;",
      "info" : "ExpressionStatement[7110-7134]:ExpressionStatement[6557-6581]"
    }, {
      "left" : "final boolean schemaChanged;",
      "right" : "final boolean schemaChanged;",
      "info" : "VariableDeclarationStatement[7146-7174]:VariableDeclarationStatement[6593-6621]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7185-7407]:TryStatement[6632-6854]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7189-7348]:Block[6636-6795]"
    }, {
      "left" : "schemaChanged = currentBatchHolder.load(qrb.getHeader().getDef(),\n                                                    qrb.getData());",
      "right" : "schemaChanged = currentBatchHolder.load(qrb.getHeader().getDef(),\n                                                    qrb.getData());",
      "info" : "ExpressionStatement[7203-7336]:ExpressionStatement[6650-6783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7367-7407]:Block[6814-6854]"
    }, {
      "left" : "qrb.release();",
      "right" : "qrb.release();",
      "info" : "ExpressionStatement[7381-7395]:ExpressionStatement[6828-6842]"
    }, {
      "left" : "schema = currentBatchHolder.getSchema();",
      "right" : "schema = currentBatchHolder.getSchema();",
      "info" : "ExpressionStatement[7418-7458]:ExpressionStatement[6865-6905]"
    }, {
      "left" : "if (schemaChanged)",
      "right" : "if (schemaChanged)",
      "info" : "IfStatement[7469-7530]:IfStatement[6916-6977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7488-7530]:Block[6935-6977]"
    }, {
      "left" : "updateColumns();",
      "right" : "updateColumns();",
      "info" : "ExpressionStatement[7502-7518]:ExpressionStatement[6949-6965]"
    }, {
      "left" : "if (returnTrueForNextCallToNext\n              && currentBatchHolder.getRecordCount() == 0)",
      "right" : "if (returnTrueForNextCallToNext\n              && currentBatchHolder.getRecordCount() == 0)",
      "info" : "IfStatement[7542-7695]:IfStatement[6989-7142]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7633-7695]:Block[7080-7142]"
    }, {
      "left" : "returnTrueForNextCallToNext = false;",
      "right" : "returnTrueForNextCallToNext = false;",
      "info" : "ExpressionStatement[7647-7683]:ExpressionStatement[7094-7130]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[7706-7718]:ReturnStatement[7153-7165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7769-8152]:Block[7216-7599]"
    }, {
      "left" : "throw new SQLException( e.getMessage(), e );",
      "right" : "throw new SQLException( e.getMessage(), e );",
      "info" : "ThrowStatement[8100-8144]:ThrowStatement[7547-7591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8192-8380]:Block[7639-7827]"
    }, {
      "left" : "throw new SQLException( \"Interrupted.\", e );",
      "right" : "throw new SQLException( \"Interrupted.\", e );",
      "info" : "ThrowStatement[8328-8372]:ThrowStatement[7775-7819]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8421-8692]:Block[7868-8139]"
    }, {
      "left" : "throw new SQLException(\n            \"Unexpected SchemaChangeException from RecordBatchLoader.load(...)\" );",
      "right" : "throw new SQLException(\n            \"Unexpected SchemaChangeException from RecordBatchLoader.load(...)\" );",
      "info" : "ThrowStatement[8578-8684]:ThrowStatement[8025-8131]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8728-8822]:Block[8175-8269]"
    }, {
      "left" : "throw new SQLException( \"Unexpected RuntimeException: \" + e.toString(), e );",
      "right" : "throw new SQLException( \"Unexpected RuntimeException: \" + e.toString(), e );",
      "info" : "ThrowStatement[8738-8814]:ThrowStatement[8185-8261]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8837-8846]:MarkerAnnotation[10185-10194]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8849-8855]:Modifier[10197-10203]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8856-8860]:PrimitiveType[10204-10208]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[8861-8866]:SimpleName[10209-10214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8869-9377]:Block[10217-10725]"
    }, {
      "left" : "getResultSet().cleanup();",
      "right" : "getResultSet().cleanup();",
      "info" : "ExpressionStatement[9119-9144]:ExpressionStatement[10467-10492]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9381-9390]:MarkerAnnotation[10729-10738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9393-9399]:Modifier[10741-10747]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9400-9407]:PrimitiveType[10748-10755]"
    }, {
      "left" : "wasNull",
      "right" : "wasNull",
      "info" : "SimpleName[9408-9415]:SimpleName[10756-10763]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[9425-9437]:SimpleType[10773-10785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9438-9475]:Block[10786-10823]"
    }, {
      "left" : "return accessors.wasNull();",
      "right" : "return accessors.wasNull();",
      "info" : "ReturnStatement[9444-9471]:ReturnStatement[10792-10819]"
    } ]
  },
  "interFileMappings" : { }
}