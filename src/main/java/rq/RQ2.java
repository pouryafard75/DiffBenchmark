package rq;

import benchmark.metrics.computers.violation.BenchmarkViolationComputer;
import benchmark.metrics.computers.violation.models.ViolationKind;
import benchmark.metrics.computers.violation.writer.CsvWriter;
import benchmark.utils.CaseInfo;
import benchmark.utils.Configuration.Configuration;
import benchmark.utils.Configuration.ConfigurationFactory;
import org.refactoringminer.astDiff.actions.ProjectASTDiff;

import static benchmark.utils.Helpers.runWhatever;

/* Created by pourya on 2023-09-19 6:18 p.m. */

/***
 * How many semantically incompatible mappings are generated by each tool?
 */
public class RQ2{
    private static final ViolationKind[] violationKinds = {ViolationKind.CONSTRUCTOR};
    public static void main(String[] args) throws Exception {
        new RQ2().rq2(new Configuration[]
                {
                    ConfigurationFactory.defects4jTwoPointOne(),
                    ConfigurationFactory.refOracleTwoPointOne()
                }, ViolationKind.values());
//        new RQ2().rq2(new Configuration[]{ConfigurationFactory.refOracleTwoPointOne(), ConfigurationFactory.defects4jTwoPointOne()});
//        new RQ2().rq2(new Configuration[]{ConfigurationFactory.dummy(), ConfigurationFactory.dummy()});
//        new RQ2().rq2(new Configuration[]{ConfigurationFactory.defects4j(), ConfigurationFactory.refOracle()});
    }
    public void rq2(Configuration[] configurations, ViolationKind[] violationKindsToCheck) throws Exception {
        BenchmarkViolationComputer benchmarkViolationComputer = new BenchmarkViolationComputer(configurations, violationKindsToCheck);
        for (Configuration configuration : configurations) {

            for (CaseInfo info : new CaseInfo[]{new CaseInfo("https://github.com/pouryafard75/TestCases/commit/1b1546135e2a09f773d29bc9c3028035d9d39ec8")}/*configuration.getAllCases()*/) {
                System.out.println("Working on " + info.getRepo() + " " + info.getCommit());
                ProjectASTDiff projectASTDiff = runWhatever(info.getRepo(), info.getCommit());
                benchmarkViolationComputer.compute(projectASTDiff, info, configuration);
                }
            }
        new CsvWriter(benchmarkViolationComputer).writeForAllTools();
    }
}



