{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1591-1674]:FieldDeclaration[1591-1674]"
    }, {
      "left" : "public static final int UNINITIALIZED = -1;",
      "right" : "public static final int UNINITIALIZED = -1;",
      "info" : "FieldDeclaration[1680-1811]:FieldDeclaration[1680-1811]"
    }, {
      "left" : "public static final int UNLIMITED_VALUES = -2;",
      "right" : "public static final int UNLIMITED_VALUES = -2;",
      "info" : "FieldDeclaration[1817-1940]:FieldDeclaration[1817-1940]"
    }, {
      "left" : "private String opt;",
      "right" : "private String opt;",
      "info" : "FieldDeclaration[1946-1999]:FieldDeclaration[1946-1999]"
    }, {
      "left" : "private String longOpt;",
      "right" : "private String longOpt;",
      "info" : "FieldDeclaration[2005-2077]:FieldDeclaration[2005-2077]"
    }, {
      "left" : "private String description;",
      "right" : "private String description;",
      "info" : "FieldDeclaration[2172-2236]:FieldDeclaration[2164-2228]"
    }, {
      "left" : "private boolean required;",
      "right" : "private boolean required;",
      "info" : "FieldDeclaration[2242-2334]:FieldDeclaration[2234-2326]"
    }, {
      "left" : "private boolean optionalArg;",
      "right" : "private boolean optionalArg;",
      "info" : "FieldDeclaration[2340-2443]:FieldDeclaration[2332-2435]"
    }, {
      "left" : "private int numberOfArgs = UNINITIALIZED;",
      "right" : "private int numberOfArgs = UNINITIALIZED;",
      "info" : "FieldDeclaration[2449-2552]:FieldDeclaration[2441-2544]"
    }, {
      "left" : "private Object type;",
      "right" : "private Object type;",
      "info" : "FieldDeclaration[2558-2613]:FieldDeclaration[2550-2605]"
    }, {
      "left" : "private List values = new ArrayList();",
      "right" : "private List values = new ArrayList();",
      "info" : "FieldDeclaration[2619-2697]:FieldDeclaration[2611-2689]"
    }, {
      "left" : "private char valuesep;",
      "right" : "private char valuesep;",
      "info" : "FieldDeclaration[2703-2778]:FieldDeclaration[2695-2770]"
    }, {
      "left" : "public Option(String opt, String description) throws IllegalArgumentException",
      "right" : "public Option(String opt, String description) throws IllegalArgumentException",
      "info" : "MethodDeclaration[2784-3234]:MethodDeclaration[2776-3226]"
    }, {
      "left" : "public Option(String opt, boolean hasArg, String description) throws IllegalArgumentException",
      "right" : "public Option(String opt, boolean hasArg, String description) throws IllegalArgumentException",
      "info" : "MethodDeclaration[3240-3782]:MethodDeclaration[3232-3774]"
    }, {
      "left" : "public Option(String opt, String longOpt, boolean hasArg, String description)\n           throws IllegalArgumentException",
      "right" : "public Option(String opt, String longOpt, boolean hasArg, String description)\n           throws IllegalArgumentException",
      "info" : "MethodDeclaration[3788-4695]:MethodDeclaration[3780-4687]"
    }, {
      "left" : "public int getId()",
      "right" : "public int getId()",
      "info" : "MethodDeclaration[4701-4981]:MethodDeclaration[4693-4973]"
    }, {
      "left" : "String getKey()",
      "right" : "String getKey()",
      "info" : "MethodDeclaration[4987-5281]:MethodDeclaration[4979-5273]"
    }, {
      "left" : "public String getOpt()",
      "right" : "public String getOpt()",
      "info" : "MethodDeclaration[5287-5651]:MethodDeclaration[5279-5643]"
    }, {
      "left" : "public Object getType()",
      "right" : "public Object getType()",
      "info" : "MethodDeclaration[5657-5817]:MethodDeclaration[5649-5809]"
    }, {
      "left" : "public void setType(Object type)",
      "right" : "public void setType(Object type)",
      "info" : "MethodDeclaration[5823-5996]:MethodDeclaration[5815-5988]"
    }, {
      "left" : "public String getLongOpt()",
      "right" : "public String getLongOpt()",
      "info" : "MethodDeclaration[6002-6209]:MethodDeclaration[5994-6201]"
    }, {
      "left" : "public void setLongOpt(String longOpt)",
      "right" : "public void setLongOpt(String longOpt)",
      "info" : "MethodDeclaration[6215-6413]:MethodDeclaration[6207-6405]"
    }, {
      "left" : "public void setOptionalArg(boolean optionalArg)",
      "right" : "public void setOptionalArg(boolean optionalArg)",
      "info" : "MethodDeclaration[6419-6697]:MethodDeclaration[6411-6689]"
    }, {
      "left" : "public boolean hasOptionalArg()",
      "right" : "public boolean hasOptionalArg()",
      "info" : "MethodDeclaration[6703-6855]:MethodDeclaration[6695-6847]"
    }, {
      "left" : "public boolean hasLongOpt()",
      "right" : "public boolean hasLongOpt()",
      "info" : "MethodDeclaration[6861-7071]:MethodDeclaration[6853-7063]"
    }, {
      "left" : "public boolean hasArg()",
      "right" : "public boolean hasArg()",
      "info" : "MethodDeclaration[7077-7327]:MethodDeclaration[7069-7319]"
    }, {
      "left" : "public String getDescription()",
      "right" : "public String getDescription()",
      "info" : "MethodDeclaration[7333-7544]:MethodDeclaration[7325-7536]"
    }, {
      "left" : "public void setDescription(String description)",
      "right" : "public void setDescription(String description)",
      "info" : "MethodDeclaration[7550-7806]:MethodDeclaration[7542-7798]"
    }, {
      "left" : "public boolean isRequired()",
      "right" : "public boolean isRequired()",
      "info" : "MethodDeclaration[7812-8022]:MethodDeclaration[7804-8014]"
    }, {
      "left" : "public void setRequired(boolean required)",
      "right" : "public void setRequired(boolean required)",
      "info" : "MethodDeclaration[8028-8250]:MethodDeclaration[8020-8242]"
    }, {
      "left" : "public void setArgName(String argName)",
      "right" : "public void setArgName(String argName)",
      "info" : "MethodDeclaration[8256-8477]:MethodDeclaration[8248-8469]"
    }, {
      "left" : "public String getArgName()",
      "right" : "public String getArgName()",
      "info" : "MethodDeclaration[8483-8677]:MethodDeclaration[8475-8669]"
    }, {
      "left" : "public boolean hasArgName()",
      "right" : "public boolean hasArgName()",
      "info" : "MethodDeclaration[8683-8950]:MethodDeclaration[8675-8942]"
    }, {
      "left" : "public boolean hasArgs()",
      "right" : "public boolean hasArgs()",
      "info" : "MethodDeclaration[8956-9212]:MethodDeclaration[8948-9204]"
    }, {
      "left" : "public void setArgs(int num)",
      "right" : "public void setArgs(int num)",
      "info" : "MethodDeclaration[9218-9427]:MethodDeclaration[9210-9419]"
    }, {
      "left" : "public void setValueSeparator(char sep)",
      "right" : "public void setValueSeparator(char sep)",
      "info" : "MethodDeclaration[9433-9705]:MethodDeclaration[9425-9697]"
    }, {
      "left" : "public char getValueSeparator()",
      "right" : "public char getValueSeparator()",
      "info" : "MethodDeclaration[9711-9894]:MethodDeclaration[9703-9886]"
    }, {
      "left" : "public boolean hasValueSeparator()",
      "right" : "public boolean hasValueSeparator()",
      "info" : "MethodDeclaration[9900-10152]:MethodDeclaration[9892-10144]"
    }, {
      "left" : "public int getArgs()",
      "right" : "public int getArgs()",
      "info" : "MethodDeclaration[10158-10359]:MethodDeclaration[10150-10351]"
    }, {
      "left" : "void addValueForProcessing(String value)",
      "right" : "void addValueForProcessing(String value)",
      "info" : "MethodDeclaration[10365-10743]:MethodDeclaration[10357-10735]"
    }, {
      "left" : "private void processValue(String value)",
      "right" : "private void processValue(String value)",
      "info" : "MethodDeclaration[10749-12102]:MethodDeclaration[10741-12094]"
    }, {
      "left" : "private void add(String value)",
      "right" : "private void add(String value)",
      "info" : "MethodDeclaration[12108-12624]:MethodDeclaration[12100-12616]"
    }, {
      "left" : "public String getValue()",
      "right" : "public String getValue()",
      "info" : "MethodDeclaration[12630-12955]:MethodDeclaration[12622-12947]"
    }, {
      "left" : "public String getValue(int index) throws IndexOutOfBoundsException",
      "right" : "public String getValue(int index) throws IndexOutOfBoundsException",
      "info" : "MethodDeclaration[12961-13533]:MethodDeclaration[12953-13525]"
    }, {
      "left" : "public String getValue(String defaultValue)",
      "right" : "public String getValue(String defaultValue)",
      "info" : "MethodDeclaration[13539-14027]:MethodDeclaration[13531-14019]"
    }, {
      "left" : "public String[] getValues()",
      "right" : "public String[] getValues()",
      "info" : "MethodDeclaration[14033-14382]:MethodDeclaration[14025-14374]"
    }, {
      "left" : "public List getValuesList()",
      "right" : "public List getValuesList()",
      "info" : "MethodDeclaration[14388-14555]:MethodDeclaration[14380-14547]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[14561-15287]:MethodDeclaration[14553-15279]"
    }, {
      "left" : "private boolean hasNoValues()",
      "right" : "private boolean hasNoValues()",
      "info" : "MethodDeclaration[15293-15492]:MethodDeclaration[15285-15484]"
    }, {
      "left" : "public boolean equals(Object o)",
      "right" : "public boolean equals(Object o)",
      "info" : "MethodDeclaration[15498-16021]:MethodDeclaration[15490-16013]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[16027-16229]:MethodDeclaration[16019-16221]"
    }, {
      "left" : "public Object clone()",
      "right" : "public Object clone()",
      "info" : "MethodDeclaration[16235-17000]:MethodDeclaration[16227-16992]"
    }, {
      "left" : "void clearValues()",
      "right" : "void clearValues()",
      "info" : "MethodDeclaration[17006-17309]:MethodDeclaration[16998-17301]"
    }, {
      "left" : "public boolean addValue(String value)",
      "right" : "public boolean addValue(String value)",
      "info" : "MethodDeclaration[17315-17804]:MethodDeclaration[17307-17796]"
    }, {
      "left" : "boolean acceptsArg()",
      "right" : "boolean acceptsArg()",
      "info" : "MethodDeclaration[17810-18120]:MethodDeclaration[17802-18112]"
    }, {
      "left" : "boolean requiresArg()",
      "right" : "boolean requiresArg()",
      "info" : "MethodDeclaration[18126-18572]:MethodDeclaration[18118-18564]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3182-3234]:Block[3174-3226]"
    }, {
      "left" : "this(opt, null, false, description);",
      "right" : "this(opt, null, false, description);",
      "info" : "ConstructorInvocation[3192-3228]:ConstructorInvocation[3184-3220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3729-3782]:Block[3721-3774]"
    }, {
      "left" : "this(opt, null, hasArg, description);",
      "right" : "this(opt, null, hasArg, description);",
      "info" : "ConstructorInvocation[3739-3776]:ConstructorInvocation[3731-3768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4364-4695]:Block[4356-4687]"
    }, {
      "left" : "OptionValidator.validateOption(opt);",
      "right" : "OptionValidator.validateOption(opt);",
      "info" : "ExpressionStatement[4417-4453]:ExpressionStatement[4409-4445]"
    }, {
      "left" : "this.opt = opt;",
      "right" : "this.opt = opt;",
      "info" : "ExpressionStatement[4463-4478]:ExpressionStatement[4455-4470]"
    }, {
      "left" : "this.longOpt = longOpt;",
      "right" : "this.longOpt = longOpt;",
      "info" : "ExpressionStatement[4487-4510]:ExpressionStatement[4479-4502]"
    }, {
      "left" : "if (hasArg)",
      "right" : "if (hasArg)",
      "info" : "IfStatement[4582-4648]:IfStatement[4574-4640]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4602-4648]:Block[4594-4640]"
    }, {
      "left" : "this.numberOfArgs = 1;",
      "right" : "this.numberOfArgs = 1;",
      "info" : "ExpressionStatement[4616-4638]:ExpressionStatement[4608-4630]"
    }, {
      "left" : "this.description = description;",
      "right" : "this.description = description;",
      "info" : "ExpressionStatement[4658-4689]:ExpressionStatement[4650-4681]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4939-4981]:Block[4931-4973]"
    }, {
      "left" : "return getKey().charAt(0);",
      "right" : "return getKey().charAt(0);",
      "info" : "ReturnStatement[4949-4975]:ReturnStatement[4941-4967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5124-5281]:Block[5116-5273]"
    }, {
      "left" : "if (opt == null)",
      "right" : "if (opt == null)",
      "info" : "IfStatement[5190-5254]:IfStatement[5182-5246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5215-5254]:Block[5207-5246]"
    }, {
      "left" : "return longOpt;",
      "right" : "return longOpt;",
      "info" : "ReturnStatement[5229-5244]:ReturnStatement[5221-5236]"
    }, {
      "left" : "return opt;",
      "right" : "return opt;",
      "info" : "ReturnStatement[5264-5275]:ReturnStatement[5256-5267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5624-5651]:Block[5616-5643]"
    }, {
      "left" : "return opt;",
      "right" : "return opt;",
      "info" : "ReturnStatement[5634-5645]:ReturnStatement[5626-5637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5789-5817]:Block[5781-5809]"
    }, {
      "left" : "return type;",
      "right" : "return type;",
      "info" : "ReturnStatement[5799-5811]:ReturnStatement[5791-5803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5963-5996]:Block[5955-5988]"
    }, {
      "left" : "this.type = type;",
      "right" : "this.type = type;",
      "info" : "ExpressionStatement[5973-5990]:ExpressionStatement[5965-5982]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6178-6209]:Block[6170-6201]"
    }, {
      "left" : "return longOpt;",
      "right" : "return longOpt;",
      "info" : "ReturnStatement[6188-6203]:ReturnStatement[6180-6195]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6374-6413]:Block[6366-6405]"
    }, {
      "left" : "this.longOpt = longOpt;",
      "right" : "this.longOpt = longOpt;",
      "info" : "ExpressionStatement[6384-6407]:ExpressionStatement[6376-6399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6650-6697]:Block[6642-6689]"
    }, {
      "left" : "this.optionalArg = optionalArg;",
      "right" : "this.optionalArg = optionalArg;",
      "info" : "ExpressionStatement[6660-6691]:ExpressionStatement[6652-6683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6820-6855]:Block[6812-6847]"
    }, {
      "left" : "return optionalArg;",
      "right" : "return optionalArg;",
      "info" : "ReturnStatement[6830-6849]:ReturnStatement[6822-6841]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7032-7071]:Block[7024-7063]"
    }, {
      "left" : "return longOpt != null;",
      "right" : "return longOpt != null;",
      "info" : "ReturnStatement[7042-7065]:ReturnStatement[7034-7057]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7251-7327]:Block[7243-7319]"
    }, {
      "left" : "return numberOfArgs > 0 || numberOfArgs == UNLIMITED_VALUES;",
      "right" : "return numberOfArgs > 0 || numberOfArgs == UNLIMITED_VALUES;",
      "info" : "ReturnStatement[7261-7321]:ReturnStatement[7253-7313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7509-7544]:Block[7501-7536]"
    }, {
      "left" : "return description;",
      "right" : "return description;",
      "info" : "ReturnStatement[7519-7538]:ReturnStatement[7511-7530]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7759-7806]:Block[7751-7798]"
    }, {
      "left" : "this.description = description;",
      "right" : "this.description = description;",
      "info" : "ExpressionStatement[7769-7800]:ExpressionStatement[7761-7792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7990-8022]:Block[7982-8014]"
    }, {
      "left" : "return required;",
      "right" : "return required;",
      "info" : "ReturnStatement[8000-8016]:ReturnStatement[7992-8008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8209-8250]:Block[8201-8242]"
    }, {
      "left" : "this.required = required;",
      "right" : "this.required = required;",
      "info" : "ExpressionStatement[8219-8244]:ExpressionStatement[8211-8236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8438-8477]:Block[8430-8469]"
    }, {
      "left" : "this.argName = argName;",
      "right" : "this.argName = argName;",
      "info" : "ExpressionStatement[8448-8471]:ExpressionStatement[8440-8463]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8646-8677]:Block[8638-8669]"
    }, {
      "left" : "return argName;",
      "right" : "return argName;",
      "info" : "ReturnStatement[8656-8671]:ReturnStatement[8648-8663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8887-8950]:Block[8879-8942]"
    }, {
      "left" : "return argName != null && argName.length() > 0;",
      "right" : "return argName != null && argName.length() > 0;",
      "info" : "ReturnStatement[8897-8944]:ReturnStatement[8889-8936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9136-9212]:Block[9128-9204]"
    }, {
      "left" : "return numberOfArgs > 1 || numberOfArgs == UNLIMITED_VALUES;",
      "right" : "return numberOfArgs > 1 || numberOfArgs == UNLIMITED_VALUES;",
      "info" : "ReturnStatement[9146-9206]:ReturnStatement[9138-9198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9387-9427]:Block[9379-9419]"
    }, {
      "left" : "this.numberOfArgs = num;",
      "right" : "this.numberOfArgs = num;",
      "info" : "ExpressionStatement[9397-9421]:ExpressionStatement[9389-9413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9669-9705]:Block[9661-9697]"
    }, {
      "left" : "this.valuesep = sep;",
      "right" : "this.valuesep = sep;",
      "info" : "ExpressionStatement[9679-9699]:ExpressionStatement[9671-9691]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9862-9894]:Block[9854-9886]"
    }, {
      "left" : "return valuesep;",
      "right" : "return valuesep;",
      "info" : "ReturnStatement[9872-9888]:ReturnStatement[9864-9880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10116-10152]:Block[10108-10144]"
    }, {
      "left" : "return valuesep > 0;",
      "right" : "return valuesep > 0;",
      "info" : "ReturnStatement[10126-10146]:ReturnStatement[10118-10138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10323-10359]:Block[10315-10351]"
    }, {
      "left" : "return numberOfArgs;",
      "right" : "return numberOfArgs;",
      "info" : "ReturnStatement[10333-10353]:ReturnStatement[10325-10345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10532-10743]:Block[10524-10735]"
    }, {
      "left" : "switch (numberOfArgs)\n        {\n            case UNINITIALIZED:\n                throw new RuntimeException(\"NO_ARGS_ALLOWED\");\n\n            default:\n                processValue(value);\n        }",
      "right" : "switch (numberOfArgs)\n        {\n            case UNINITIALIZED:\n                throw new RuntimeException(\"NO_ARGS_ALLOWED\");\n\n            default:\n                processValue(value);\n        }",
      "info" : "SwitchStatement[10542-10737]:SwitchStatement[10534-10729]"
    }, {
      "left" : "case UNINITIALIZED:",
      "right" : "case UNINITIALIZED:",
      "info" : "SwitchCase[10586-10605]:SwitchCase[10578-10597]"
    }, {
      "left" : "throw new RuntimeException(\"NO_ARGS_ALLOWED\");",
      "right" : "throw new RuntimeException(\"NO_ARGS_ALLOWED\");",
      "info" : "ThrowStatement[10622-10668]:ThrowStatement[10614-10660]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[10682-10690]:SwitchCase[10674-10682]"
    }, {
      "left" : "processValue(value);",
      "right" : "processValue(value);",
      "info" : "ExpressionStatement[10707-10727]:ExpressionStatement[10699-10719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11205-12102]:Block[11197-12094]"
    }, {
      "left" : "if (hasValueSeparator())",
      "right" : "if (hasValueSeparator())",
      "info" : "IfStatement[11264-12002]:IfStatement[11256-11994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11297-12002]:Block[11289-11994]"
    }, {
      "left" : "char sep = getValueSeparator();",
      "right" : "char sep = getValueSeparator();",
      "info" : "VariableDeclarationStatement[11354-11385]:VariableDeclarationStatement[11346-11377]"
    }, {
      "left" : "int index = value.indexOf(sep);",
      "right" : "int index = value.indexOf(sep);",
      "info" : "VariableDeclarationStatement[11454-11485]:VariableDeclarationStatement[11446-11477]"
    }, {
      "left" : "while (index != -1)",
      "right" : "while (index != -1)",
      "info" : "WhileStatement[11552-11992]:WhileStatement[11544-11984]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11584-11992]:Block[11576-11984]"
    }, {
      "left" : "if (values.size() == (numberOfArgs - 1))",
      "right" : "if (values.size() == (numberOfArgs - 1))",
      "info" : "IfStatement[11645-11748]:IfStatement[11637-11740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11702-11748]:Block[11694-11740]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11724-11730]:BreakStatement[11716-11722]"
    }, {
      "left" : "add(value.substring(0, index));",
      "right" : "add(value.substring(0, index));",
      "info" : "ExpressionStatement[11791-11822]:ExpressionStatement[11783-11814]"
    }, {
      "left" : "value = value.substring(index + 1);",
      "right" : "value = value.substring(index + 1);",
      "info" : "ExpressionStatement[11865-11900]:ExpressionStatement[11857-11892]"
    }, {
      "left" : "index = value.indexOf(sep);",
      "right" : "index = value.indexOf(sep);",
      "info" : "ExpressionStatement[11951-11978]:ExpressionStatement[11943-11970]"
    }, {
      "left" : "add(value);",
      "right" : "add(value);",
      "info" : "ExpressionStatement[12085-12096]:ExpressionStatement[12077-12088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12447-12624]:Block[12439-12616]"
    }, {
      "left" : "if (!acceptsArg())",
      "right" : "if (!acceptsArg())",
      "info" : "IfStatement[12457-12567]:IfStatement[12449-12559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12484-12567]:Block[12476-12559]"
    }, {
      "left" : "throw new RuntimeException(\"Cannot add value, list full.\");",
      "right" : "throw new RuntimeException(\"Cannot add value, list full.\");",
      "info" : "ThrowStatement[12498-12557]:ThrowStatement[12490-12549]"
    }, {
      "left" : "values.add(value);",
      "right" : "values.add(value);",
      "info" : "ExpressionStatement[12600-12618]:ExpressionStatement[12592-12610]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12886-12955]:Block[12878-12947]"
    }, {
      "left" : "return hasNoValues() ? null : (String) values.get(0);",
      "right" : "return hasNoValues() ? null : (String) values.get(0);",
      "info" : "ReturnStatement[12896-12949]:ReturnStatement[12888-12941]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13460-13533]:Block[13452-13525]"
    }, {
      "left" : "return hasNoValues() ? null : (String) values.get(index);",
      "right" : "return hasNoValues() ? null : (String) values.get(index);",
      "info" : "ReturnStatement[13470-13527]:ReturnStatement[13462-13519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13929-14027]:Block[13921-14019]"
    }, {
      "left" : "String value = getValue();",
      "right" : "String value = getValue();",
      "info" : "VariableDeclarationStatement[13939-13965]:VariableDeclarationStatement[13931-13957]"
    }, {
      "left" : "return (value != null) ? value : defaultValue;",
      "right" : "return (value != null) ? value : defaultValue;",
      "info" : "ReturnStatement[13975-14021]:ReturnStatement[13967-14013]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14283-14382]:Block[14275-14374]"
    }, {
      "left" : "return hasNoValues() ? null : (String[]) values.toArray(new String[values.size()]);",
      "right" : "return hasNoValues() ? null : (String[]) values.toArray(new String[values.size()]);",
      "info" : "ReturnStatement[14293-14376]:ReturnStatement[14285-14368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14525-14555]:Block[14517-14547]"
    }, {
      "left" : "return values;",
      "right" : "return values;",
      "info" : "ReturnStatement[14535-14549]:ReturnStatement[14527-14541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14704-15287]:Block[14696-15279]"
    }, {
      "left" : "StringBuffer buf = new StringBuffer().append(\"[ option: \");",
      "right" : "StringBuffer buf = new StringBuffer().append(\"[ option: \");",
      "info" : "VariableDeclarationStatement[14714-14773]:VariableDeclarationStatement[14706-14765]"
    }, {
      "left" : "buf.append(opt);",
      "right" : "buf.append(opt);",
      "info" : "ExpressionStatement[14783-14799]:ExpressionStatement[14775-14791]"
    }, {
      "left" : "if (longOpt != null)",
      "right" : "if (longOpt != null)",
      "info" : "IfStatement[14809-14894]:IfStatement[14801-14886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14838-14894]:Block[14830-14886]"
    }, {
      "left" : "buf.append(\" \").append(longOpt);",
      "right" : "buf.append(\" \").append(longOpt);",
      "info" : "ExpressionStatement[14852-14884]:ExpressionStatement[14844-14876]"
    }, {
      "left" : "buf.append(\" \");",
      "right" : "buf.append(\" \");",
      "info" : "ExpressionStatement[14904-14920]:ExpressionStatement[14896-14912]"
    }, {
      "left" : "if (hasArgs())",
      "right" : "if (hasArgs())",
      "info" : "IfStatement[14930-15081]:IfStatement[14922-15073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14953-15000]:Block[14945-14992]"
    }, {
      "left" : "buf.append(\"[ARG...]\");",
      "right" : "buf.append(\"[ARG...]\");",
      "info" : "ExpressionStatement[14967-14990]:ExpressionStatement[14959-14982]"
    }, {
      "left" : "if (hasArg())",
      "right" : "if (hasArg())",
      "info" : "IfStatement[15014-15081]:IfStatement[15006-15073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15036-15081]:Block[15028-15073]"
    }, {
      "left" : "buf.append(\" [ARG]\");",
      "right" : "buf.append(\" [ARG]\");",
      "info" : "ExpressionStatement[15050-15071]:ExpressionStatement[15042-15063]"
    }, {
      "left" : "buf.append(\" :: \").append(description);",
      "right" : "buf.append(\" :: \").append(description);",
      "info" : "ExpressionStatement[15091-15130]:ExpressionStatement[15083-15122]"
    }, {
      "left" : "if (type != null)",
      "right" : "if (type != null)",
      "info" : "IfStatement[15140-15222]:IfStatement[15132-15214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15166-15222]:Block[15158-15214]"
    }, {
      "left" : "buf.append(\" :: \").append(type);",
      "right" : "buf.append(\" :: \").append(type);",
      "info" : "ExpressionStatement[15180-15212]:ExpressionStatement[15172-15204]"
    }, {
      "left" : "buf.append(\" ]\");",
      "right" : "buf.append(\" ]\");",
      "info" : "ExpressionStatement[15232-15249]:ExpressionStatement[15224-15241]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[15259-15281]:ReturnStatement[15251-15273]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15452-15492]:Block[15444-15484]"
    }, {
      "left" : "return values.isEmpty();",
      "right" : "return values.isEmpty();",
      "info" : "ReturnStatement[15462-15486]:ReturnStatement[15454-15478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15534-16021]:Block[15526-16013]"
    }, {
      "left" : "if (this == o)",
      "right" : "if (this == o)",
      "info" : "IfStatement[15544-15603]:IfStatement[15536-15595]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15567-15603]:Block[15559-15595]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[15581-15593]:ReturnStatement[15573-15585]"
    }, {
      "left" : "if (o == null || getClass() != o.getClass())",
      "right" : "if (o == null || getClass() != o.getClass())",
      "info" : "IfStatement[15612-15702]:IfStatement[15604-15694]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15665-15702]:Block[15657-15694]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15679-15692]:ReturnStatement[15671-15684]"
    }, {
      "left" : "Option option = (Option) o;",
      "right" : "Option option = (Option) o;",
      "info" : "VariableDeclarationStatement[15712-15739]:VariableDeclarationStatement[15704-15731]"
    }, {
      "left" : "if (opt != null ? !opt.equals(option.opt) : option.opt != null)",
      "right" : "if (opt != null ? !opt.equals(option.opt) : option.opt != null)",
      "info" : "IfStatement[15750-15859]:IfStatement[15742-15851]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15822-15859]:Block[15814-15851]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15836-15849]:ReturnStatement[15828-15841]"
    }, {
      "left" : "if (longOpt != null ? !longOpt.equals(option.longOpt) : option.longOpt != null)",
      "right" : "if (longOpt != null ? !longOpt.equals(option.longOpt) : option.longOpt != null)",
      "info" : "IfStatement[15868-15993]:IfStatement[15860-15985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15956-15993]:Block[15948-15985]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[15970-15983]:ReturnStatement[15962-15975]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[16003-16015]:ReturnStatement[15995-16007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16053-16229]:Block[16045-16221]"
    }, {
      "left" : "int result;",
      "right" : "int result;",
      "info" : "VariableDeclarationStatement[16063-16074]:VariableDeclarationStatement[16055-16066]"
    }, {
      "left" : "result = opt != null ? opt.hashCode() : 0;",
      "right" : "result = opt != null ? opt.hashCode() : 0;",
      "info" : "ExpressionStatement[16083-16125]:ExpressionStatement[16075-16117]"
    }, {
      "left" : "result = 31 * result + (longOpt != null ? longOpt.hashCode() : 0);",
      "right" : "result = 31 * result + (longOpt != null ? longOpt.hashCode() : 0);",
      "info" : "ExpressionStatement[16134-16200]:ExpressionStatement[16126-16192]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[16209-16223]:ReturnStatement[16201-16215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16658-17000]:Block[16650-16992]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[16668-16994]:TryStatement[16660-16986]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16680-16821]:Block[16672-16813]"
    }, {
      "left" : "Option option = (Option) super.clone();",
      "right" : "Option option = (Option) super.clone();",
      "info" : "VariableDeclarationStatement[16694-16733]:VariableDeclarationStatement[16686-16725]"
    }, {
      "left" : "option.values = new ArrayList(values);",
      "right" : "option.values = new ArrayList(values);",
      "info" : "ExpressionStatement[16746-16784]:ExpressionStatement[16738-16776]"
    }, {
      "left" : "return option;",
      "right" : "return option;",
      "info" : "ReturnStatement[16797-16811]:ReturnStatement[16789-16803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16878-16994]:Block[16870-16986]"
    }, {
      "left" : "throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());",
      "right" : "throw new RuntimeException(\"A CloneNotSupportedException was thrown: \" + cnse.getMessage());",
      "info" : "ThrowStatement[16892-16984]:ThrowStatement[16884-16976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17278-17309]:Block[17270-17301]"
    }, {
      "left" : "values.clear();",
      "right" : "values.clear();",
      "info" : "ExpressionStatement[17288-17303]:ExpressionStatement[17280-17295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17607-17804]:Block[17599-17796]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"The addValue method is not intended for client use. \"\n                + \"Subclasses should use the addValueForProcessing method instead. \");",
      "right" : "throw new UnsupportedOperationException(\"The addValue method is not intended for client use. \"\n                + \"Subclasses should use the addValueForProcessing method instead. \");",
      "info" : "ThrowStatement[17617-17798]:ThrowStatement[17609-17790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17998-18120]:Block[17990-18112]"
    }, {
      "left" : "return (hasArg() || hasArgs() || hasOptionalArg()) && (numberOfArgs <= 0 || values.size() < numberOfArgs);",
      "right" : "return (hasArg() || hasArgs() || hasOptionalArg()) && (numberOfArgs <= 0 || values.size() < numberOfArgs);",
      "info" : "ReturnStatement[18008-18114]:ReturnStatement[18000-18106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18324-18572]:Block[18316-18564]"
    }, {
      "left" : "if (optionalArg)",
      "right" : "if (optionalArg)",
      "info" : "IfStatement[18334-18396]:IfStatement[18326-18388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18359-18396]:Block[18351-18388]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[18373-18386]:ReturnStatement[18365-18378]"
    }, {
      "left" : "if (numberOfArgs == UNLIMITED_VALUES)",
      "right" : "if (numberOfArgs == UNLIMITED_VALUES)",
      "info" : "IfStatement[18405-18566]:IfStatement[18397-18558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18451-18500]:Block[18443-18492]"
    }, {
      "left" : "return values.size() < 1;",
      "right" : "return values.size() < 1;",
      "info" : "ReturnStatement[18465-18490]:ReturnStatement[18457-18482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18522-18566]:Block[18514-18558]"
    }, {
      "left" : "return acceptsArg();",
      "right" : "return acceptsArg();",
      "info" : "ReturnStatement[18536-18556]:ReturnStatement[18528-18548]"
    } ]
  },
  "interFileMappings" : { }
}