{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StringUtils",
      "right" : "StringUtils",
      "info" : "TypeDeclaration[993-244453]:TypeDeclaration[993-245947]"
    }, {
      "left" : "public static final String EMPTY = \"\";",
      "right" : "public static final String EMPTY = \"\";",
      "info" : "FieldDeclaration[5901-6014]:FieldDeclaration[5901-6014]"
    }, {
      "left" : "public static final int INDEX_NOT_FOUND = -1;",
      "right" : "public static final int INDEX_NOT_FOUND = -1;",
      "info" : "FieldDeclaration[6020-6140]:FieldDeclaration[6020-6140]"
    }, {
      "left" : "private static final int PAD_LIMIT = 8192;",
      "right" : "private static final int PAD_LIMIT = 8192;",
      "info" : "FieldDeclaration[6146-6280]:FieldDeclaration[6146-6280]"
    }, {
      "left" : "public StringUtils()",
      "right" : "public StringUtils()",
      "info" : "MethodDeclaration[6286-6655]:MethodDeclaration[6286-6655]"
    }, {
      "left" : "public static boolean isEmpty(CharSequence cs)",
      "right" : "public static boolean isEmpty(CharSequence cs)",
      "info" : "MethodDeclaration[6759-7499]:MethodDeclaration[6759-7499]"
    }, {
      "left" : "public static boolean isNotEmpty(CharSequence cs)",
      "right" : "public static boolean isNotEmpty(CharSequence cs)",
      "info" : "MethodDeclaration[7505-8109]:MethodDeclaration[7505-8109]"
    }, {
      "left" : "public static boolean isBlank(CharSequence cs)",
      "right" : "public static boolean isBlank(CharSequence cs)",
      "info" : "MethodDeclaration[8115-8981]:MethodDeclaration[8115-8981]"
    }, {
      "left" : "public static boolean isNotBlank(CharSequence cs)",
      "right" : "public static boolean isNotBlank(CharSequence cs)",
      "info" : "MethodDeclaration[8987-9658]:MethodDeclaration[8987-9658]"
    }, {
      "left" : "public static String trim(String str)",
      "right" : "public static String trim(String str)",
      "info" : "MethodDeclaration[9754-10717]:MethodDeclaration[9754-10717]"
    }, {
      "left" : "public static String trimToNull(String str)",
      "right" : "public static String trimToNull(String str)",
      "info" : "MethodDeclaration[10723-11738]:MethodDeclaration[10723-11738]"
    }, {
      "left" : "public static String trimToEmpty(String str)",
      "right" : "public static String trimToEmpty(String str)",
      "info" : "MethodDeclaration[11744-12710]:MethodDeclaration[11744-12710]"
    }, {
      "left" : "public static String strip(String str)",
      "right" : "public static String strip(String str)",
      "info" : "MethodDeclaration[12811-13734]:MethodDeclaration[12811-13734]"
    }, {
      "left" : "public static String stripToNull(String str)",
      "right" : "public static String stripToNull(String str)",
      "info" : "MethodDeclaration[13740-14870]:MethodDeclaration[13740-14870]"
    }, {
      "left" : "public static String stripToEmpty(String str)",
      "right" : "public static String stripToEmpty(String str)",
      "info" : "MethodDeclaration[14876-15882]:MethodDeclaration[14876-15882]"
    }, {
      "left" : "public static String strip(String str, String stripChars)",
      "right" : "public static String strip(String str, String stripChars)",
      "info" : "MethodDeclaration[15888-17273]:MethodDeclaration[15888-17273]"
    }, {
      "left" : "public static String stripStart(String str, String stripChars)",
      "right" : "public static String stripStart(String str, String stripChars)",
      "info" : "MethodDeclaration[17279-19015]:MethodDeclaration[17279-19015]"
    }, {
      "left" : "public static String stripEnd(String str, String stripChars)",
      "right" : "public static String stripEnd(String str, String stripChars)",
      "info" : "MethodDeclaration[19021-20696]:MethodDeclaration[19021-20696]"
    }, {
      "left" : "public static String[] stripAll(String[] strs)",
      "right" : "public static String[] stripAll(String[] strs)",
      "info" : "MethodDeclaration[20796-21713]:MethodDeclaration[20796-21713]"
    }, {
      "left" : "public static String[] stripAll(String[] strs, String stripChars)",
      "right" : "public static String[] stripAll(String[] strs, String stripChars)",
      "info" : "MethodDeclaration[21719-23297]:MethodDeclaration[21719-23297]"
    }, {
      "left" : "public static String stripAccents(String input)",
      "right" : "public static String stripAccents(String input)",
      "info" : "MethodDeclaration[23303-26479]:MethodDeclaration[23303-26479]"
    }, {
      "left" : "public static boolean equals(CharSequence cs1, CharSequence cs2)",
      "right" : "public static boolean equals(CharSequence cs1, CharSequence cs2)",
      "info" : "MethodDeclaration[26577-27537]:MethodDeclaration[26577-27537]"
    }, {
      "left" : "public static boolean equalsIgnoreCase(String str1, String str2)",
      "right" : "public static boolean equalsIgnoreCase(String str1, String str2)",
      "info" : "MethodDeclaration[27543-28573]:MethodDeclaration[27543-28573]"
    }, {
      "left" : "public static int indexOf(String str, char searchChar)",
      "right" : "public static int indexOf(String str, char searchChar)",
      "info" : "MethodDeclaration[28672-29573]:MethodDeclaration[28672-29573]"
    }, {
      "left" : "public static int indexOf(String str, char searchChar, int startPos)",
      "right" : "public static int indexOf(String str, char searchChar, int startPos)",
      "info" : "MethodDeclaration[29579-30861]:MethodDeclaration[29579-30861]"
    }, {
      "left" : "public static int indexOf(String str, String searchStr)",
      "right" : "public static int indexOf(String str, String searchStr)",
      "info" : "MethodDeclaration[30867-31987]:MethodDeclaration[30867-31987]"
    }, {
      "left" : "public static int indexOf(String str, String searchStr, int startPos)",
      "right" : "public static int indexOf(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[31993-33647]:MethodDeclaration[31993-33647]"
    }, {
      "left" : "public static int ordinalIndexOf(String str, String searchStr, int ordinal)",
      "right" : "public static int ordinalIndexOf(String str, String searchStr, int ordinal)",
      "info" : "MethodDeclaration[33653-35238]:MethodDeclaration[33653-35238]"
    }, {
      "left" : "// Shared code between ordinalIndexOf(String,String,int) and lastOrdinalIndexOf(String,String,int)\n    private static int ordinalIndexOf(String str, String searchStr, int ordinal, boolean lastIndex)",
      "right" : "// Shared code between ordinalIndexOf(String,String,int) and lastOrdinalIndexOf(String,String,int)\n    private static int ordinalIndexOf(String str, String searchStr, int ordinal, boolean lastIndex)",
      "info" : "MethodDeclaration[35244-36744]:MethodDeclaration[35244-36744]"
    }, {
      "left" : "public static int indexOfIgnoreCase(String str, String searchStr)",
      "right" : "public static int indexOfIgnoreCase(String str, String searchStr)",
      "info" : "MethodDeclaration[36750-37879]:MethodDeclaration[36750-37879]"
    }, {
      "left" : "public static int indexOfIgnoreCase(String str, String searchStr, int startPos)",
      "right" : "public static int indexOfIgnoreCase(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[37885-40003]:MethodDeclaration[37885-40003]"
    }, {
      "left" : "public static int lastIndexOf(String str, char searchChar)",
      "right" : "public static int lastIndexOf(String str, char searchChar)",
      "info" : "MethodDeclaration[40106-41015]:MethodDeclaration[40106-41015]"
    }, {
      "left" : "public static int lastIndexOf(String str, char searchChar, int startPos)",
      "right" : "public static int lastIndexOf(String str, char searchChar, int startPos)",
      "info" : "MethodDeclaration[41021-42413]:MethodDeclaration[41021-42413]"
    }, {
      "left" : "public static int lastIndexOf(String str, String searchStr)",
      "right" : "public static int lastIndexOf(String str, String searchStr)",
      "info" : "MethodDeclaration[42419-43506]:MethodDeclaration[42419-43506]"
    }, {
      "left" : "public static int lastOrdinalIndexOf(String str, String searchStr, int ordinal)",
      "right" : "public static int lastOrdinalIndexOf(String str, String searchStr, int ordinal)",
      "info" : "MethodDeclaration[43512-45164]:MethodDeclaration[43512-45164]"
    }, {
      "left" : "public static int lastIndexOf(String str, String searchStr, int startPos)",
      "right" : "public static int lastIndexOf(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[45170-46721]:MethodDeclaration[45170-46721]"
    }, {
      "left" : "public static int lastIndexOfIgnoreCase(String str, String searchStr)",
      "right" : "public static int lastIndexOfIgnoreCase(String str, String searchStr)",
      "info" : "MethodDeclaration[46727-47955]:MethodDeclaration[46727-47955]"
    }, {
      "left" : "public static int lastIndexOfIgnoreCase(String str, String searchStr, int startPos)",
      "right" : "public static int lastIndexOfIgnoreCase(String str, String searchStr, int startPos)",
      "info" : "MethodDeclaration[47961-49985]:MethodDeclaration[47961-49985]"
    }, {
      "left" : "public static boolean contains(String str, char searchChar)",
      "right" : "public static boolean contains(String str, char searchChar)",
      "info" : "MethodDeclaration[50085-50982]:MethodDeclaration[50085-50982]"
    }, {
      "left" : "public static boolean contains(String str, String searchStr)",
      "right" : "public static boolean contains(String str, String searchStr)",
      "info" : "MethodDeclaration[50988-51997]:MethodDeclaration[50988-51997]"
    }, {
      "left" : "public static boolean containsIgnoreCase(String str, String searchStr)",
      "right" : "public static boolean containsIgnoreCase(String str, String searchStr)",
      "info" : "MethodDeclaration[52003-53369]:MethodDeclaration[52003-53369]"
    }, {
      "left" : "public static int indexOfAny(CharSequence cs, char[] searchChars)",
      "right" : "public static int indexOfAny(CharSequence cs, char[] searchChars)",
      "info" : "MethodDeclaration[53477-55033]:MethodDeclaration[53477-55379]"
    }, {
      "left" : "public static int indexOfAny(CharSequence cs, String searchChars)",
      "right" : "public static int indexOfAny(CharSequence cs, String searchChars)",
      "info" : "MethodDeclaration[55039-56184]:MethodDeclaration[55385-56530]"
    }, {
      "left" : "public static boolean containsAny(CharSequence cs, char[] searchChars)",
      "right" : "public static boolean containsAny(String cs, char[] searchChars)",
      "info" : "MethodDeclaration[56287-58407]:MethodDeclaration[56633-58800]"
    }, {
      "left" : "public static boolean containsAny(CharSequence cs, String searchChars)",
      "right" : "public static boolean containsAny(String cs, String searchChars)",
      "info" : "MethodDeclaration[58413-59671]:MethodDeclaration[58806-60058]"
    }, {
      "left" : "public static int indexOfAnyBut(CharSequence cs, char[] searchChars)",
      "right" : "public static int indexOfAnyBut(CharSequence cs, char[] searchChars)",
      "info" : "MethodDeclaration[59782-61323]:MethodDeclaration[60169-62062]"
    }, {
      "left" : "public static int indexOfAnyBut(String str, String searchChars)",
      "right" : "public static int indexOfAnyBut(String str, String searchChars)",
      "info" : "MethodDeclaration[61329-62677]:MethodDeclaration[62068-63724]"
    }, {
      "left" : "public static boolean containsOnly(CharSequence cs, char[] valid)",
      "right" : "public static boolean containsOnly(CharSequence cs, char[] valid)",
      "info" : "MethodDeclaration[62781-64138]:MethodDeclaration[63828-65185]"
    }, {
      "left" : "public static boolean containsOnly(CharSequence cs, String validChars)",
      "right" : "public static boolean containsOnly(CharSequence cs, String validChars)",
      "info" : "MethodDeclaration[64144-65324]:MethodDeclaration[65191-66371]"
    }, {
      "left" : "public static boolean containsNone(CharSequence cs, char[] searchChars)",
      "right" : "public static boolean containsNone(CharSequence cs, char[] searchChars)",
      "info" : "MethodDeclaration[65428-67054]:MethodDeclaration[66475-68548]"
    }, {
      "left" : "public static boolean containsNone(CharSequence cs, String invalidChars)",
      "right" : "public static boolean containsNone(CharSequence cs, String invalidChars)",
      "info" : "MethodDeclaration[67060-68233]:MethodDeclaration[68554-69727]"
    }, {
      "left" : "public static int indexOfAny(String str, String[] searchStrs)",
      "right" : "public static int indexOfAny(String str, String[] searchStrs)",
      "info" : "MethodDeclaration[68343-70425]:MethodDeclaration[69837-71919]"
    }, {
      "left" : "public static int lastIndexOfAny(String str, String[] searchStrs)",
      "right" : "public static int lastIndexOfAny(String str, String[] searchStrs)",
      "info" : "MethodDeclaration[70431-72296]:MethodDeclaration[71925-73790]"
    }, {
      "left" : "public static String substring(String str, int start)",
      "right" : "public static String substring(String str, int start)",
      "info" : "MethodDeclaration[72397-73857]:MethodDeclaration[73891-75351]"
    }, {
      "left" : "public static String substring(String str, int start, int end)",
      "right" : "public static String substring(String str, int start, int end)",
      "info" : "MethodDeclaration[73863-76283]:MethodDeclaration[75357-77777]"
    }, {
      "left" : "public static String left(String str, int len)",
      "right" : "public static String left(String str, int len)",
      "info" : "MethodDeclaration[76389-77505]:MethodDeclaration[77883-78999]"
    }, {
      "left" : "public static String right(String str, int len)",
      "right" : "public static String right(String str, int len)",
      "info" : "MethodDeclaration[77511-78652]:MethodDeclaration[79005-80146]"
    }, {
      "left" : "public static String mid(String str, int pos, int len)",
      "right" : "public static String mid(String str, int pos, int len)",
      "info" : "MethodDeclaration[78658-80114]:MethodDeclaration[80152-81608]"
    }, {
      "left" : "public static String substringBefore(String str, String separator)",
      "right" : "public static String substringBefore(String str, String separator)",
      "info" : "MethodDeclaration[80236-81793]:MethodDeclaration[81730-83287]"
    }, {
      "left" : "public static String substringAfter(String str, String separator)",
      "right" : "public static String substringAfter(String str, String separator)",
      "info" : "MethodDeclaration[81799-83389]:MethodDeclaration[83293-84883]"
    }, {
      "left" : "public static String substringBeforeLast(String str, String separator)",
      "right" : "public static String substringBeforeLast(String str, String separator)",
      "info" : "MethodDeclaration[83395-84925]:MethodDeclaration[84889-86419]"
    }, {
      "left" : "public static String substringAfterLast(String str, String separator)",
      "right" : "public static String substringAfterLast(String str, String separator)",
      "info" : "MethodDeclaration[84931-86668]:MethodDeclaration[86425-88162]"
    }, {
      "left" : "public static String substringBetween(String str, String tag)",
      "right" : "public static String substringBetween(String str, String tag)",
      "info" : "MethodDeclaration[86777-87782]:MethodDeclaration[88271-89276]"
    }, {
      "left" : "public static String substringBetween(String str, String open, String close)",
      "right" : "public static String substringBetween(String str, String open, String close)",
      "info" : "MethodDeclaration[87788-89567]:MethodDeclaration[89282-91061]"
    }, {
      "left" : "public static String[] substringsBetween(String str, String open, String close)",
      "right" : "public static String[] substringsBetween(String str, String open, String close)",
      "info" : "MethodDeclaration[89573-91676]:MethodDeclaration[91067-93170]"
    }, {
      "left" : "public static String[] split(String str)",
      "right" : "public static String[] split(String str)",
      "info" : "MethodDeclaration[91881-92850]:MethodDeclaration[93375-94344]"
    }, {
      "left" : "public static String[] split(String str, char separatorChar)",
      "right" : "public static String[] split(String str, char separatorChar)",
      "info" : "MethodDeclaration[92856-94000]:MethodDeclaration[94350-95494]"
    }, {
      "left" : "public static String[] split(String str, String separatorChars)",
      "right" : "public static String[] split(String str, String separatorChars)",
      "info" : "MethodDeclaration[94006-95262]:MethodDeclaration[95500-96756]"
    }, {
      "left" : "public static String[] split(String str, String separatorChars, int max)",
      "right" : "public static String[] split(String str, String separatorChars, int max)",
      "info" : "MethodDeclaration[95268-96844]:MethodDeclaration[96762-98338]"
    }, {
      "left" : "public static String[] splitByWholeSeparator(String str, String separator)",
      "right" : "public static String[] splitByWholeSeparator(String str, String separator)",
      "info" : "MethodDeclaration[96850-98177]:MethodDeclaration[98344-99671]"
    }, {
      "left" : "public static String[] splitByWholeSeparator( String str, String separator, int max )",
      "right" : "public static String[] splitByWholeSeparator( String str, String separator, int max )",
      "info" : "MethodDeclaration[98183-99813]:MethodDeclaration[99677-101307]"
    }, {
      "left" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator)",
      "right" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator)",
      "info" : "MethodDeclaration[99819-101361]:MethodDeclaration[101313-102855]"
    }, {
      "left" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max)",
      "right" : "public static String[] splitByWholeSeparatorPreserveAllTokens(String str, String separator, int max)",
      "info" : "MethodDeclaration[101367-103229]:MethodDeclaration[102861-104723]"
    }, {
      "left" : "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, \n                                                        boolean preserveAllTokens)",
      "right" : "private static String[] splitByWholeSeparatorWorker(String str, String separator, int max, \n                                                        boolean preserveAllTokens)",
      "info" : "MethodDeclaration[103235-106447]:MethodDeclaration[104729-107941]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str)",
      "right" : "public static String[] splitPreserveAllTokens(String str)",
      "info" : "MethodDeclaration[106532-107807]:MethodDeclaration[108026-109301]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, char separatorChar)",
      "right" : "public static String[] splitPreserveAllTokens(String str, char separatorChar)",
      "info" : "MethodDeclaration[107813-109731]:MethodDeclaration[109307-111225]"
    }, {
      "left" : "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens)",
      "right" : "private static String[] splitWorker(String str, char separatorChar, boolean preserveAllTokens)",
      "info" : "MethodDeclaration[109737-111386]:MethodDeclaration[111231-112880]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, String separatorChars)",
      "right" : "public static String[] splitPreserveAllTokens(String str, String separatorChars)",
      "info" : "MethodDeclaration[111392-113418]:MethodDeclaration[112886-114912]"
    }, {
      "left" : "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max)",
      "right" : "public static String[] splitPreserveAllTokens(String str, String separatorChars, int max)",
      "info" : "MethodDeclaration[113424-115570]:MethodDeclaration[114918-117064]"
    }, {
      "left" : "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens)",
      "right" : "private static String[] splitWorker(String str, String separatorChars, int max, boolean preserveAllTokens)",
      "info" : "MethodDeclaration[115576-119301]:MethodDeclaration[117070-120795]"
    }, {
      "left" : "public static String[] splitByCharacterType(String str)",
      "right" : "public static String[] splitByCharacterType(String str)",
      "info" : "MethodDeclaration[119307-120509]:MethodDeclaration[120801-122003]"
    }, {
      "left" : "public static String[] splitByCharacterTypeCamelCase(String str)",
      "right" : "public static String[] splitByCharacterTypeCamelCase(String str)",
      "info" : "MethodDeclaration[120515-122132]:MethodDeclaration[122009-123626]"
    }, {
      "left" : "private static String[] splitByCharacterType(String str, boolean camelCase)",
      "right" : "private static String[] splitByCharacterType(String str, boolean camelCase)",
      "info" : "MethodDeclaration[122138-124256]:MethodDeclaration[123632-125750]"
    }, {
      "left" : "public static String join(Object[] array)",
      "right" : "public static String join(Object[] array)",
      "info" : "MethodDeclaration[124355-125177]:MethodDeclaration[125849-126671]"
    }, {
      "left" : "public static String join(Object[] array, char separator)",
      "right" : "public static String join(Object[] array, char separator)",
      "info" : "MethodDeclaration[125183-126257]:MethodDeclaration[126677-127751]"
    }, {
      "left" : "public static String join(Object[] array, char separator, int startIndex, int endIndex)",
      "right" : "public static String join(Object[] array, char separator, int startIndex, int endIndex)",
      "info" : "MethodDeclaration[126263-128124]:MethodDeclaration[127757-129618]"
    }, {
      "left" : "public static String join(Object[] array, String separator)",
      "right" : "public static String join(Object[] array, String separator)",
      "info" : "MethodDeclaration[128131-129346]:MethodDeclaration[129625-130840]"
    }, {
      "left" : "public static String join(Object[] array, String separator, int startIndex, int endIndex)",
      "right" : "public static String join(Object[] array, String separator, int startIndex, int endIndex)",
      "info" : "MethodDeclaration[129352-131640]:MethodDeclaration[130846-133134]"
    }, {
      "left" : "public static String join(Iterator<?> iterator, char separator)",
      "right" : "public static String join(Iterator<?> iterator, char separator)",
      "info" : "MethodDeclaration[131646-133123]:MethodDeclaration[133140-134617]"
    }, {
      "left" : "public static String join(Iterator<?> iterator, String separator)",
      "right" : "public static String join(Iterator<?> iterator, String separator)",
      "info" : "MethodDeclaration[133129-134648]:MethodDeclaration[134623-136142]"
    }, {
      "left" : "public static String join(Iterable<?> iterable, char separator)",
      "right" : "public static String join(Iterable<?> iterable, char separator)",
      "info" : "MethodDeclaration[134654-135487]:MethodDeclaration[136148-136981]"
    }, {
      "left" : "public static String join(Iterable<?> iterable, String separator)",
      "right" : "public static String join(Iterable<?> iterable, String separator)",
      "info" : "MethodDeclaration[135493-136332]:MethodDeclaration[136987-137826]"
    }, {
      "left" : "public static String deleteWhitespace(String str)",
      "right" : "public static String deleteWhitespace(String str)",
      "info" : "MethodDeclaration[136430-137459]:MethodDeclaration[137924-138953]"
    }, {
      "left" : "public static String removeStart(String str, String remove)",
      "right" : "public static String removeStart(String str, String remove)",
      "info" : "MethodDeclaration[137557-138920]:MethodDeclaration[139051-140414]"
    }, {
      "left" : "public static String removeStartIgnoreCase(String str, String remove)",
      "right" : "public static String removeStartIgnoreCase(String str, String remove)",
      "info" : "MethodDeclaration[138926-140499]:MethodDeclaration[140420-141993]"
    }, {
      "left" : "public static String removeEnd(String str, String remove)",
      "right" : "public static String removeEnd(String str, String remove)",
      "info" : "MethodDeclaration[140505-141868]:MethodDeclaration[141999-143362]"
    }, {
      "left" : "public static String removeEndIgnoreCase(String str, String remove)",
      "right" : "public static String removeEndIgnoreCase(String str, String remove)",
      "info" : "MethodDeclaration[141874-143524]:MethodDeclaration[143368-145018]"
    }, {
      "left" : "public static String remove(String str, String remove)",
      "right" : "public static String remove(String str, String remove)",
      "info" : "MethodDeclaration[143530-144700]:MethodDeclaration[145024-146194]"
    }, {
      "left" : "public static String remove(String str, char remove)",
      "right" : "public static String remove(String str, char remove)",
      "info" : "MethodDeclaration[144706-145870]:MethodDeclaration[146200-147364]"
    }, {
      "left" : "public static String replaceOnce(String text, String searchString, String replacement)",
      "right" : "public static String replaceOnce(String text, String searchString, String replacement)",
      "info" : "MethodDeclaration[145971-147192]:MethodDeclaration[147465-148686]"
    }, {
      "left" : "public static String replace(String text, String searchString, String replacement)",
      "right" : "public static String replace(String text, String searchString, String replacement)",
      "info" : "MethodDeclaration[147198-148378]:MethodDeclaration[148692-149872]"
    }, {
      "left" : "public static String replace(String text, String searchString, String replacement, int max)",
      "right" : "public static String replace(String text, String searchString, String replacement, int max)",
      "info" : "MethodDeclaration[148384-150772]:MethodDeclaration[149878-152266]"
    }, {
      "left" : "public static String replaceEach(String text, String[] searchList, String[] replacementList)",
      "right" : "public static String replaceEach(String text, String[] searchList, String[] replacementList)",
      "info" : "MethodDeclaration[150778-152724]:MethodDeclaration[152272-154218]"
    }, {
      "left" : "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList)",
      "right" : "public static String replaceEachRepeatedly(String text, String[] searchList, String[] replacementList)",
      "info" : "MethodDeclaration[152730-155407]:MethodDeclaration[154224-156901]"
    }, {
      "left" : "private static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                      boolean repeat, int timeToLive)",
      "right" : "private static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                      boolean repeat, int timeToLive)",
      "info" : "MethodDeclaration[155413-162582]:MethodDeclaration[156907-164076]"
    }, {
      "left" : "public static String replaceChars(String str, char searchChar, char replaceChar)",
      "right" : "public static String replaceChars(String str, char searchChar, char replaceChar)",
      "info" : "MethodDeclaration[162698-163773]:MethodDeclaration[164192-165267]"
    }, {
      "left" : "public static String replaceChars(String str, String searchChars, String replaceChars)",
      "right" : "public static String replaceChars(String str, String searchChars, String replaceChars)",
      "info" : "MethodDeclaration[163779-166416]:MethodDeclaration[165273-167910]"
    }, {
      "left" : "public static String overlay(String str, String overlay, int start, int end)",
      "right" : "public static String overlay(String str, String overlay, int start, int end)",
      "info" : "MethodDeclaration[166515-168742]:MethodDeclaration[168009-170236]"
    }, {
      "left" : "public static String chomp(String str)",
      "right" : "public static String chomp(String str)",
      "info" : "MethodDeclaration[168842-170545]:MethodDeclaration[170336-172039]"
    }, {
      "left" : "public static String chomp(String str, String separator)",
      "right" : "public static String chomp(String str, String separator)",
      "info" : "MethodDeclaration[170551-171969]:MethodDeclaration[172045-173463]"
    }, {
      "left" : "public static String chop(String str)",
      "right" : "public static String chop(String str)",
      "info" : "MethodDeclaration[172069-173457]:MethodDeclaration[173563-174951]"
    }, {
      "left" : "public static String repeat(String str, int repeat)",
      "right" : "public static String repeat(String str, int repeat)",
      "info" : "MethodDeclaration[173653-175750]:MethodDeclaration[175147-177244]"
    }, {
      "left" : "public static String repeat(String str, String separator, int repeat)",
      "right" : "public static String repeat(String str, String separator, int repeat)",
      "info" : "MethodDeclaration[175756-176972]:MethodDeclaration[177250-178466]"
    }, {
      "left" : "private static String padding(int repeat, char padChar) throws IndexOutOfBoundsException",
      "right" : "private static String padding(int repeat, char padChar) throws IndexOutOfBoundsException",
      "info" : "MethodDeclaration[176978-178305]:MethodDeclaration[178472-179799]"
    }, {
      "left" : "public static String rightPad(String str, int size)",
      "right" : "public static String rightPad(String str, int size)",
      "info" : "MethodDeclaration[178311-179101]:MethodDeclaration[179805-180595]"
    }, {
      "left" : "public static String rightPad(String str, int size, char padChar)",
      "right" : "public static String rightPad(String str, int size, char padChar)",
      "info" : "MethodDeclaration[179107-180336]:MethodDeclaration[180601-181830]"
    }, {
      "left" : "public static String rightPad(String str, int size, String padStr)",
      "right" : "public static String rightPad(String str, int size, String padStr)",
      "info" : "MethodDeclaration[180342-182302]:MethodDeclaration[181836-183796]"
    }, {
      "left" : "public static String leftPad(String str, int size)",
      "right" : "public static String leftPad(String str, int size)",
      "info" : "MethodDeclaration[182308-183088]:MethodDeclaration[183802-184582]"
    }, {
      "left" : "public static String leftPad(String str, int size, char padChar)",
      "right" : "public static String leftPad(String str, int size, char padChar)",
      "info" : "MethodDeclaration[183094-184294]:MethodDeclaration[184588-185788]"
    }, {
      "left" : "public static String leftPad(String str, int size, String padStr)",
      "right" : "public static String leftPad(String str, int size, String padStr)",
      "info" : "MethodDeclaration[184300-186228]:MethodDeclaration[185794-187722]"
    }, {
      "left" : "public static int length(CharSequence cs)",
      "right" : "public static int length(CharSequence cs)",
      "info" : "MethodDeclaration[186231-186677]:MethodDeclaration[187725-188171]"
    }, {
      "left" : "public static String center(String str, int size)",
      "right" : "public static String center(String str, int size)",
      "info" : "MethodDeclaration[186782-187784]:MethodDeclaration[188276-189278]"
    }, {
      "left" : "public static String center(String str, int size, char padChar)",
      "right" : "public static String center(String str, int size, char padChar)",
      "info" : "MethodDeclaration[187790-189211]:MethodDeclaration[189284-190705]"
    }, {
      "left" : "public static String center(String str, int size, String padStr)",
      "right" : "public static String center(String str, int size, String padStr)",
      "info" : "MethodDeclaration[189217-190894]:MethodDeclaration[190711-192388]"
    }, {
      "left" : "public static String upperCase(String str)",
      "right" : "public static String upperCase(String str)",
      "info" : "MethodDeclaration[191001-191987]:MethodDeclaration[192495-193481]"
    }, {
      "left" : "public static String upperCase(String str, Locale locale)",
      "right" : "public static String upperCase(String str, Locale locale)",
      "info" : "MethodDeclaration[191993-192810]:MethodDeclaration[193487-194304]"
    }, {
      "left" : "public static String lowerCase(String str)",
      "right" : "public static String lowerCase(String str)",
      "info" : "MethodDeclaration[192816-193802]:MethodDeclaration[194310-195296]"
    }, {
      "left" : "public static String lowerCase(String str, Locale locale)",
      "right" : "public static String lowerCase(String str, Locale locale)",
      "info" : "MethodDeclaration[193808-194625]:MethodDeclaration[195302-196119]"
    }, {
      "left" : "public static String capitalize(CharSequence cs)",
      "right" : "public static String capitalize(CharSequence cs)",
      "info" : "MethodDeclaration[194631-195810]:MethodDeclaration[196125-197304]"
    }, {
      "left" : "public static String uncapitalize(CharSequence cs)",
      "right" : "public static String uncapitalize(CharSequence cs)",
      "info" : "MethodDeclaration[195816-197025]:MethodDeclaration[197310-198519]"
    }, {
      "left" : "public static String swapCase(String str)",
      "right" : "public static String swapCase(String str)",
      "info" : "MethodDeclaration[197031-198827]:MethodDeclaration[198525-200321]"
    }, {
      "left" : "public static int countMatches(String str, String sub)",
      "right" : "public static int countMatches(String str, String sub)",
      "info" : "MethodDeclaration[198932-200042]:MethodDeclaration[200426-201536]"
    }, {
      "left" : "public static boolean isAlpha(CharSequence cs)",
      "right" : "public static boolean isAlpha(CharSequence cs)",
      "info" : "MethodDeclaration[200149-201131]:MethodDeclaration[201643-202625]"
    }, {
      "left" : "public static boolean isAlphaSpace(CharSequence cs)",
      "right" : "public static boolean isAlphaSpace(CharSequence cs)",
      "info" : "MethodDeclaration[201137-202267]:MethodDeclaration[202631-203761]"
    }, {
      "left" : "public static boolean isAlphanumeric(CharSequence cs)",
      "right" : "public static boolean isAlphanumeric(CharSequence cs)",
      "info" : "MethodDeclaration[202273-203388]:MethodDeclaration[203767-204882]"
    }, {
      "left" : "public static boolean isAlphanumericSpace(CharSequence cs)",
      "right" : "public static boolean isAlphanumericSpace(CharSequence cs)",
      "info" : "MethodDeclaration[203394-204579]:MethodDeclaration[204888-206073]"
    }, {
      "left" : "public static boolean isAsciiPrintable(CharSequence cs)",
      "right" : "public static boolean isAsciiPrintable(CharSequence cs)",
      "info" : "MethodDeclaration[204585-205971]:MethodDeclaration[206079-207465]"
    }, {
      "left" : "public static boolean isNumeric(CharSequence cs)",
      "right" : "public static boolean isNumeric(CharSequence cs)",
      "info" : "MethodDeclaration[205977-207125]:MethodDeclaration[207471-208619]"
    }, {
      "left" : "public static boolean isNumericSpace(CharSequence cs)",
      "right" : "public static boolean isNumericSpace(CharSequence cs)",
      "info" : "MethodDeclaration[207131-208361]:MethodDeclaration[208625-209855]"
    }, {
      "left" : "public static boolean isWhitespace(CharSequence cs)",
      "right" : "public static boolean isWhitespace(CharSequence cs)",
      "info" : "MethodDeclaration[208367-209406]:MethodDeclaration[209861-210900]"
    }, {
      "left" : "public static boolean isAllLowerCase(CharSequence cs)",
      "right" : "public static boolean isAllLowerCase(CharSequence cs)",
      "info" : "MethodDeclaration[209412-210448]:MethodDeclaration[210906-211942]"
    }, {
      "left" : "public static boolean isAllUpperCase(CharSequence cs)",
      "right" : "public static boolean isAllUpperCase(CharSequence cs)",
      "info" : "MethodDeclaration[210454-211483]:MethodDeclaration[211948-212977]"
    }, {
      "left" : "public static String defaultString(String str)",
      "right" : "public static String defaultString(String str)",
      "info" : "MethodDeclaration[211583-212214]:MethodDeclaration[213077-213708]"
    }, {
      "left" : "public static String defaultString(String str, String defaultStr)",
      "right" : "public static String defaultString(String str, String defaultStr)",
      "info" : "MethodDeclaration[212220-213023]:MethodDeclaration[213714-214517]"
    }, {
      "left" : "public static <T extends CharSequence> T defaultIfEmpty(T str, T defaultStr)",
      "right" : "public static <T extends CharSequence> T defaultIfEmpty(T str, T defaultStr)",
      "info" : "MethodDeclaration[213029-213960]:MethodDeclaration[214523-215454]"
    }, {
      "left" : "public static String reverse(String str)",
      "right" : "public static String reverse(String str)",
      "info" : "MethodDeclaration[214061-214680]:MethodDeclaration[215555-216174]"
    }, {
      "left" : "public static String reverseDelimited(String str, char separatorChar)",
      "right" : "public static String reverseDelimited(String str, char separatorChar)",
      "info" : "MethodDeclaration[214686-215806]:MethodDeclaration[216180-217300]"
    }, {
      "left" : "public static String abbreviate(String str, int maxWidth)",
      "right" : "public static String abbreviate(String str, int maxWidth)",
      "info" : "MethodDeclaration[215910-217408]:MethodDeclaration[217404-218902]"
    }, {
      "left" : "public static String abbreviate(String str, int offset, int maxWidth)",
      "right" : "public static String abbreviate(String str, int offset, int maxWidth)",
      "info" : "MethodDeclaration[217414-220343]:MethodDeclaration[218908-221837]"
    }, {
      "left" : "public static String abbreviateMiddle(String str, String middle, int length)",
      "right" : "public static String abbreviateMiddle(String str, String middle, int length)",
      "info" : "MethodDeclaration[220353-222538]:MethodDeclaration[221847-224032]"
    }, {
      "left" : "public static String difference(String str1, String str2)",
      "right" : "public static String difference(String str1, String str2)",
      "info" : "MethodDeclaration[222640-223991]:MethodDeclaration[224134-225485]"
    }, {
      "left" : "public static int indexOfDifference(CharSequence cs1, CharSequence cs2)",
      "right" : "public static int indexOfDifference(CharSequence cs1, CharSequence cs2)",
      "info" : "MethodDeclaration[223997-225444]:MethodDeclaration[225491-226938]"
    }, {
      "left" : "public static int indexOfDifference(CharSequence[] css)",
      "right" : "public static int indexOfDifference(CharSequence[] css)",
      "info" : "MethodDeclaration[225450-229261]:MethodDeclaration[226944-230755]"
    }, {
      "left" : "public static String getCommonPrefix(String[] strs)",
      "right" : "public static String getCommonPrefix(String[] strs)",
      "info" : "MethodDeclaration[229271-231731]:MethodDeclaration[230765-233225]"
    }, {
      "left" : "public static int getLevenshteinDistance(CharSequence s, CharSequence t)",
      "right" : "public static int getLevenshteinDistance(CharSequence s, CharSequence t)",
      "info" : "MethodDeclaration[231833-236619]:MethodDeclaration[233327-238113]"
    }, {
      "left" : "public static boolean startsWith(String str, String prefix)",
      "right" : "public static boolean startsWith(String str, String prefix)",
      "info" : "MethodDeclaration[237185-238159]:MethodDeclaration[238679-239653]"
    }, {
      "left" : "public static boolean startsWithIgnoreCase(String str, String prefix)",
      "right" : "public static boolean startsWithIgnoreCase(String str, String prefix)",
      "info" : "MethodDeclaration[238165-239218]:MethodDeclaration[239659-240712]"
    }, {
      "left" : "private static boolean startsWith(String str, String prefix, boolean ignoreCase)",
      "right" : "private static boolean startsWith(String str, String prefix, boolean ignoreCase)",
      "info" : "MethodDeclaration[239224-240062]:MethodDeclaration[240718-241556]"
    }, {
      "left" : "public static boolean startsWithAny(String string, String[] searchStrings)",
      "right" : "public static boolean startsWithAny(String string, String[] searchStrings)",
      "info" : "MethodDeclaration[240072-241341]:MethodDeclaration[241566-242835]"
    }, {
      "left" : "public static boolean endsWith(String str, String suffix)",
      "right" : "public static boolean endsWith(String str, String suffix)",
      "info" : "MethodDeclaration[241442-242449]:MethodDeclaration[242936-243943]"
    }, {
      "left" : "public static boolean endsWithIgnoreCase(String str, String suffix)",
      "right" : "public static boolean endsWithIgnoreCase(String str, String suffix)",
      "info" : "MethodDeclaration[242455-243551]:MethodDeclaration[243949-245045]"
    }, {
      "left" : "private static boolean endsWith(String str, String suffix, boolean ignoreCase)",
      "right" : "private static boolean endsWith(String str, String suffix, boolean ignoreCase)",
      "info" : "MethodDeclaration[243557-244451]:MethodDeclaration[245051-245945]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5217-5223]:Modifier[5217-5223]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[5224-5229]:TYPE_DECLARATION_KIND[5224-5229]"
    }, {
      "left" : "StringUtils",
      "right" : "StringUtils",
      "info" : "SimpleName[5230-5241]:SimpleName[5230-5241]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6610-6616]:Modifier[6610-6616]"
    }, {
      "left" : "StringUtils",
      "right" : "StringUtils",
      "info" : "SimpleName[6617-6628]:SimpleName[6617-6628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6631-6655]:Block[6631-6655]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[6641-6649]:SuperConstructorInvocation[6641-6649]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7398-7404]:Modifier[7398-7404]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7405-7411]:Modifier[7405-7411]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7412-7419]:PrimitiveType[7412-7419]"
    }, {
      "left" : "isEmpty",
      "right" : "isEmpty",
      "info" : "SimpleName[7420-7427]:SimpleName[7420-7427]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[7428-7443]:SingleVariableDeclaration[7428-7443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7445-7499]:Block[7445-7499]"
    }, {
      "left" : "return cs == null || cs.length() == 0;",
      "right" : "return cs == null || cs.length() == 0;",
      "info" : "ReturnStatement[7455-7493]:ReturnStatement[7455-7493]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8011-8017]:Modifier[8011-8017]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8018-8024]:Modifier[8018-8024]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8025-8032]:PrimitiveType[8025-8032]"
    }, {
      "left" : "isNotEmpty",
      "right" : "isNotEmpty",
      "info" : "SimpleName[8033-8043]:SimpleName[8033-8043]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[8044-8059]:SingleVariableDeclaration[8044-8059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8061-8109]:Block[8061-8109]"
    }, {
      "left" : "return !StringUtils.isEmpty(cs);",
      "right" : "return !StringUtils.isEmpty(cs);",
      "info" : "ReturnStatement[8071-8103]:ReturnStatement[8071-8103]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8630-8636]:Modifier[8630-8636]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8637-8643]:Modifier[8637-8643]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8644-8651]:PrimitiveType[8644-8651]"
    }, {
      "left" : "isBlank",
      "right" : "isBlank",
      "info" : "SimpleName[8652-8659]:SimpleName[8652-8659]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[8660-8675]:SingleVariableDeclaration[8660-8675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8677-8981]:Block[8677-8981]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[8687-8698]:VariableDeclarationStatement[8687-8698]"
    }, {
      "left" : "if (cs == null || (strLen = cs.length()) == 0)",
      "right" : "if (cs == null || (strLen = cs.length()) == 0)",
      "info" : "IfStatement[8707-8790]:IfStatement[8707-8790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8754-8790]:Block[8754-8790]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8768-8780]:ReturnStatement[8768-8780]"
    }, {
      "left" : "for (int i = 0; i < strLen; i++)",
      "right" : "for (int i = 0; i < strLen; i++)",
      "info" : "ForStatement[8799-8954]:ForStatement[8799-8954]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8832-8954]:Block[8832-8954]"
    }, {
      "left" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "right" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "info" : "IfStatement[8846-8944]:IfStatement[8846-8944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8899-8944]:Block[8899-8944]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[8917-8930]:ReturnStatement[8917-8930]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8963-8975]:ReturnStatement[8963-8975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9560-9566]:Modifier[9560-9566]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9567-9573]:Modifier[9567-9573]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9574-9581]:PrimitiveType[9574-9581]"
    }, {
      "left" : "isNotBlank",
      "right" : "isNotBlank",
      "info" : "SimpleName[9582-9592]:SimpleName[9582-9592]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[9593-9608]:SingleVariableDeclaration[9593-9608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9610-9658]:Block[9610-9658]"
    }, {
      "left" : "return !StringUtils.isBlank(cs);",
      "right" : "return !StringUtils.isBlank(cs);",
      "info" : "ReturnStatement[9620-9652]:ReturnStatement[9620-9652]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10624-10630]:Modifier[10624-10630]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10631-10637]:Modifier[10631-10637]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[10638-10644]:SimpleType[10638-10644]"
    }, {
      "left" : "trim",
      "right" : "trim",
      "info" : "SimpleName[10645-10649]:SimpleName[10645-10649]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[10650-10660]:SingleVariableDeclaration[10650-10660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10662-10717]:Block[10662-10717]"
    }, {
      "left" : "return str == null ? null : str.trim();",
      "right" : "return str == null ? null : str.trim();",
      "info" : "ReturnStatement[10672-10711]:ReturnStatement[10672-10711]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11616-11622]:Modifier[11616-11622]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11623-11629]:Modifier[11623-11629]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[11630-11636]:SimpleType[11630-11636]"
    }, {
      "left" : "trimToNull",
      "right" : "trimToNull",
      "info" : "SimpleName[11637-11647]:SimpleName[11637-11647]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[11648-11658]:SingleVariableDeclaration[11648-11658]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11660-11738]:Block[11660-11738]"
    }, {
      "left" : "String ts = trim(str);",
      "right" : "String ts = trim(str);",
      "info" : "VariableDeclarationStatement[11670-11692]:VariableDeclarationStatement[11670-11692]"
    }, {
      "left" : "return isEmpty(ts) ? null : ts;",
      "right" : "return isEmpty(ts) ? null : ts;",
      "info" : "ReturnStatement[11701-11732]:ReturnStatement[11701-11732]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12609-12615]:Modifier[12609-12615]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12616-12622]:Modifier[12616-12622]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12623-12629]:SimpleType[12623-12629]"
    }, {
      "left" : "trimToEmpty",
      "right" : "trimToEmpty",
      "info" : "SimpleName[12630-12641]:SimpleName[12630-12641]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[12642-12652]:SingleVariableDeclaration[12642-12652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12654-12710]:Block[12654-12710]"
    }, {
      "left" : "return str == null ? EMPTY : str.trim();",
      "right" : "return str == null ? EMPTY : str.trim();",
      "info" : "ReturnStatement[12664-12704]:ReturnStatement[12664-12704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13655-13661]:Modifier[13655-13661]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13662-13668]:Modifier[13662-13668]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[13669-13675]:SimpleType[13669-13675]"
    }, {
      "left" : "strip",
      "right" : "strip",
      "info" : "SimpleName[13676-13681]:SimpleName[13676-13681]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[13682-13692]:SingleVariableDeclaration[13682-13692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13694-13734]:Block[13694-13734]"
    }, {
      "left" : "return strip(str, null);",
      "right" : "return strip(str, null);",
      "info" : "ReturnStatement[13704-13728]:ReturnStatement[13704-13728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14677-14683]:Modifier[14677-14683]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14684-14690]:Modifier[14684-14690]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[14691-14697]:SimpleType[14691-14697]"
    }, {
      "left" : "stripToNull",
      "right" : "stripToNull",
      "info" : "SimpleName[14698-14709]:SimpleName[14698-14709]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[14710-14720]:SingleVariableDeclaration[14710-14720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14722-14870]:Block[14722-14870]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[14732-14785]:IfStatement[14732-14785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14749-14785]:Block[14749-14785]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[14763-14775]:ReturnStatement[14763-14775]"
    }, {
      "left" : "str = strip(str, null);",
      "right" : "str = strip(str, null);",
      "info" : "ExpressionStatement[14794-14817]:ExpressionStatement[14794-14817]"
    }, {
      "left" : "return str.length() == 0 ? null : str;",
      "right" : "return str.length() == 0 ? null : str;",
      "info" : "ReturnStatement[14826-14864]:ReturnStatement[14826-14864]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[15774-15780]:Modifier[15774-15780]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[15781-15787]:Modifier[15781-15787]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[15788-15794]:SimpleType[15788-15794]"
    }, {
      "left" : "stripToEmpty",
      "right" : "stripToEmpty",
      "info" : "SimpleName[15795-15807]:SimpleName[15795-15807]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[15808-15818]:SingleVariableDeclaration[15808-15818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15820-15882]:Block[15820-15882]"
    }, {
      "left" : "return str == null ? EMPTY : strip(str, null);",
      "right" : "return str == null ? EMPTY : strip(str, null);",
      "info" : "ReturnStatement[15830-15876]:ReturnStatement[15830-15876]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17061-17067]:Modifier[17061-17067]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17068-17074]:Modifier[17068-17074]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[17075-17081]:SimpleType[17075-17081]"
    }, {
      "left" : "strip",
      "right" : "strip",
      "info" : "SimpleName[17082-17087]:SimpleName[17082-17087]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[17088-17098]:SingleVariableDeclaration[17088-17098]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[17100-17117]:SingleVariableDeclaration[17100-17117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17119-17273]:Block[17119-17273]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[17129-17182]:IfStatement[17129-17182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17147-17182]:Block[17147-17182]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[17161-17172]:ReturnStatement[17161-17172]"
    }, {
      "left" : "str = stripStart(str, stripChars);",
      "right" : "str = stripStart(str, stripChars);",
      "info" : "ExpressionStatement[17191-17225]:ExpressionStatement[17191-17225]"
    }, {
      "left" : "return stripEnd(str, stripChars);",
      "right" : "return stripEnd(str, stripChars);",
      "info" : "ReturnStatement[17234-17267]:ReturnStatement[17234-17267]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18375-18381]:Modifier[18375-18381]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18382-18388]:Modifier[18382-18388]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[18389-18395]:SimpleType[18389-18395]"
    }, {
      "left" : "stripStart",
      "right" : "stripStart",
      "info" : "SimpleName[18396-18406]:SimpleName[18396-18406]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[18407-18417]:SingleVariableDeclaration[18407-18417]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[18419-18436]:SingleVariableDeclaration[18419-18436]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18438-19015]:Block[18438-19015]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[18448-18459]:VariableDeclarationStatement[18448-18459]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[18468-18552]:IfStatement[18468-18552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18517-18552]:Block[18517-18552]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[18531-18542]:ReturnStatement[18531-18542]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[18561-18575]:VariableDeclarationStatement[18561-18575]"
    }, {
      "left" : "if (stripChars == null)",
      "right" : "if (stripChars == null)",
      "info" : "IfStatement[18584-18972]:IfStatement[18584-18972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18608-18743]:Block[18608-18743]"
    }, {
      "left" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
      "right" : "while ((start != strLen) && Character.isWhitespace(str.charAt(start)))",
      "info" : "WhileStatement[18622-18733]:WhileStatement[18622-18733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18693-18733]:Block[18693-18733]"
    }, {
      "left" : "start++;",
      "right" : "start++;",
      "info" : "ExpressionStatement[18711-18719]:ExpressionStatement[18711-18719]"
    }, {
      "left" : "if (stripChars.length() == 0)",
      "right" : "if (stripChars.length() == 0)",
      "info" : "IfStatement[18749-18972]:IfStatement[18749-18972]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18779-18814]:Block[18779-18814]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[18793-18804]:ReturnStatement[18793-18804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18820-18972]:Block[18820-18972]"
    }, {
      "left" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND))",
      "right" : "while ((start != strLen) && (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND))",
      "info" : "WhileStatement[18834-18962]:WhileStatement[18834-18962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18922-18962]:Block[18922-18962]"
    }, {
      "left" : "start++;",
      "right" : "start++;",
      "info" : "ExpressionStatement[18940-18948]:ExpressionStatement[18940-18948]"
    }, {
      "left" : "return str.substring(start);",
      "right" : "return str.substring(start);",
      "info" : "ReturnStatement[18981-19009]:ReturnStatement[18981-19009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20099-20105]:Modifier[20099-20105]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[20106-20112]:Modifier[20106-20112]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[20113-20119]:SimpleType[20113-20119]"
    }, {
      "left" : "stripEnd",
      "right" : "stripEnd",
      "info" : "SimpleName[20120-20128]:SimpleName[20120-20128]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[20129-20139]:SingleVariableDeclaration[20129-20139]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[20141-20158]:SingleVariableDeclaration[20141-20158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20160-20696]:Block[20160-20696]"
    }, {
      "left" : "int end;",
      "right" : "int end;",
      "info" : "VariableDeclarationStatement[20170-20178]:VariableDeclarationStatement[20170-20178]"
    }, {
      "left" : "if (str == null || (end = str.length()) == 0)",
      "right" : "if (str == null || (end = str.length()) == 0)",
      "info" : "IfStatement[20187-20268]:IfStatement[20187-20268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20233-20268]:Block[20233-20268]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[20247-20258]:ReturnStatement[20247-20258]"
    }, {
      "left" : "if (stripChars == null)",
      "right" : "if (stripChars == null)",
      "info" : "IfStatement[20278-20652]:IfStatement[20278-20652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20302-20430]:Block[20302-20430]"
    }, {
      "left" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
      "right" : "while ((end != 0) && Character.isWhitespace(str.charAt(end - 1)))",
      "info" : "WhileStatement[20316-20420]:WhileStatement[20316-20420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20382-20420]:Block[20382-20420]"
    }, {
      "left" : "end--;",
      "right" : "end--;",
      "info" : "ExpressionStatement[20400-20406]:ExpressionStatement[20400-20406]"
    }, {
      "left" : "if (stripChars.length() == 0)",
      "right" : "if (stripChars.length() == 0)",
      "info" : "IfStatement[20436-20652]:IfStatement[20436-20652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20466-20501]:Block[20466-20501]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[20480-20491]:ReturnStatement[20480-20491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20507-20652]:Block[20507-20652]"
    }, {
      "left" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND))",
      "right" : "while ((end != 0) && (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND))",
      "info" : "WhileStatement[20521-20642]:WhileStatement[20521-20642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20604-20642]:Block[20604-20642]"
    }, {
      "left" : "end--;",
      "right" : "end--;",
      "info" : "ExpressionStatement[20622-20628]:ExpressionStatement[20622-20628]"
    }, {
      "left" : "return str.substring(0, end);",
      "right" : "return str.substring(0, end);",
      "info" : "ReturnStatement[20661-20690]:ReturnStatement[20661-20690]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21622-21628]:Modifier[21622-21628]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21629-21635]:Modifier[21629-21635]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[21636-21644]:ArrayType[21636-21644]"
    }, {
      "left" : "stripAll",
      "right" : "stripAll",
      "info" : "SimpleName[21645-21653]:SimpleName[21645-21653]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[21654-21667]:SingleVariableDeclaration[21654-21667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21669-21713]:Block[21669-21713]"
    }, {
      "left" : "return stripAll(strs, null);",
      "right" : "return stripAll(strs, null);",
      "info" : "ReturnStatement[21679-21707]:ReturnStatement[21679-21707]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22932-22938]:Modifier[22932-22938]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[22939-22945]:Modifier[22939-22945]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[22946-22954]:ArrayType[22946-22954]"
    }, {
      "left" : "stripAll",
      "right" : "stripAll",
      "info" : "SimpleName[22955-22963]:SimpleName[22955-22963]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[22964-22977]:SingleVariableDeclaration[22964-22977]"
    }, {
      "left" : "String stripChars",
      "right" : "String stripChars",
      "info" : "SingleVariableDeclaration[22979-22996]:SingleVariableDeclaration[22979-22996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22998-23297]:Block[22998-23297]"
    }, {
      "left" : "int strsLen;",
      "right" : "int strsLen;",
      "info" : "VariableDeclarationStatement[23008-23020]:VariableDeclarationStatement[23008-23020]"
    }, {
      "left" : "if (strs == null || (strsLen = strs.length) == 0)",
      "right" : "if (strs == null || (strsLen = strs.length) == 0)",
      "info" : "IfStatement[23029-23115]:IfStatement[23029-23115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23079-23115]:Block[23079-23115]"
    }, {
      "left" : "return strs;",
      "right" : "return strs;",
      "info" : "ReturnStatement[23093-23105]:ReturnStatement[23093-23105]"
    }, {
      "left" : "String[] newArr = new String[strsLen];",
      "right" : "String[] newArr = new String[strsLen];",
      "info" : "VariableDeclarationStatement[23124-23162]:VariableDeclarationStatement[23124-23162]"
    }, {
      "left" : "for (int i = 0; i < strsLen; i++)",
      "right" : "for (int i = 0; i < strsLen; i++)",
      "info" : "ForStatement[23171-23268]:ForStatement[23171-23268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23205-23268]:Block[23205-23268]"
    }, {
      "left" : "newArr[i] = strip(strs[i], stripChars);",
      "right" : "newArr[i] = strip(strs[i], stripChars);",
      "info" : "ExpressionStatement[23219-23258]:ExpressionStatement[23219-23258]"
    }, {
      "left" : "return newArr;",
      "right" : "return newArr;",
      "info" : "ReturnStatement[23277-23291]:ReturnStatement[23277-23291]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[23847-23853]:Modifier[23847-23853]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[23854-23860]:Modifier[23854-23860]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[23861-23867]:SimpleType[23861-23867]"
    }, {
      "left" : "stripAccents",
      "right" : "stripAccents",
      "info" : "SimpleName[23868-23880]:SimpleName[23868-23880]"
    }, {
      "left" : "String input",
      "right" : "String input",
      "info" : "SingleVariableDeclaration[23881-23893]:SingleVariableDeclaration[23881-23893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23895-26479]:Block[23895-26479]"
    }, {
      "left" : "if(input == null)",
      "right" : "if(input == null)",
      "info" : "IfStatement[23905-23959]:IfStatement[23905-23959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23923-23959]:Block[23923-23959]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23937-23949]:ReturnStatement[23937-23949]"
    }, {
      "left" : "if(SystemUtils.isJavaVersionAtLeast(1.6f))",
      "right" : "if(SystemUtils.isJavaVersionAtLeast(1.6f))",
      "info" : "IfStatement[23968-26473]:IfStatement[23968-26473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24011-26336]:Block[24011-26336]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[24193-26326]:TryStatement[24193-26326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24197-25183]:Block[24197-25183]"
    }, {
      "left" : "Class<?> normalizerFormClass = ClassUtils.getClass(\"java.text.Normalizer$Form\", false);",
      "right" : "Class<?> normalizerFormClass = ClassUtils.getClass(\"java.text.Normalizer$Form\", false);",
      "info" : "VariableDeclarationStatement[24270-24357]:VariableDeclarationStatement[24270-24357]"
    }, {
      "left" : "Class<?> normalizerClass = ClassUtils.getClass(\"java.text.Normalizer\", false);",
      "right" : "Class<?> normalizerClass = ClassUtils.getClass(\"java.text.Normalizer\", false);",
      "info" : "VariableDeclarationStatement[24414-24492]:VariableDeclarationStatement[24414-24492]"
    }, {
      "left" : "java.lang.reflect.Method method = normalizerClass.getMethod(\"normalize\", CharSequence.class, normalizerFormClass );",
      "right" : "java.lang.reflect.Method method = normalizerClass.getMethod(\"normalize\", CharSequence.class, normalizerFormClass );",
      "info" : "VariableDeclarationStatement[24561-24676]:VariableDeclarationStatement[24561-24676]"
    }, {
      "left" : "java.lang.reflect.Field nfd = normalizerFormClass.getField(\"NFD\");",
      "right" : "java.lang.reflect.Field nfd = normalizerFormClass.getField(\"NFD\");",
      "info" : "VariableDeclarationStatement[24738-24804]:VariableDeclarationStatement[24738-24804]"
    }, {
      "left" : "String decomposed = (String) method.invoke( null, input, nfd.get(null) );",
      "right" : "String decomposed = (String) method.invoke( null, input, nfd.get(null) );",
      "info" : "VariableDeclarationStatement[24855-24928]:VariableDeclarationStatement[24855-24928]"
    }, {
      "left" : "java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");",
      "right" : "java.util.regex.Pattern accentPattern = java.util.regex.Pattern.compile(\"\\\\p{InCombiningDiacriticalMarks}+\");",
      "info" : "VariableDeclarationStatement[24987-25096]:VariableDeclarationStatement[24987-25096]"
    }, {
      "left" : "return accentPattern.matcher(decomposed).replaceAll(\"\");",
      "right" : "return accentPattern.matcher(decomposed).replaceAll(\"\");",
      "info" : "ReturnStatement[25113-25169]:ReturnStatement[25113-25169]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25219-25346]:Block[25219-25346]"
    }, {
      "left" : "throw new RuntimeException(\"ClassNotFoundException occurred during 1.6 backcompat code\", cnfe);",
      "right" : "throw new RuntimeException(\"ClassNotFoundException occurred during 1.6 backcompat code\", cnfe);",
      "info" : "ThrowStatement[25237-25332]:ThrowStatement[25237-25332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25381-25507]:Block[25381-25507]"
    }, {
      "left" : "throw new RuntimeException(\"NoSuchMethodException occurred during 1.6 backcompat code\", nsme);",
      "right" : "throw new RuntimeException(\"NoSuchMethodException occurred during 1.6 backcompat code\", nsme);",
      "info" : "ThrowStatement[25399-25493]:ThrowStatement[25399-25493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25541-25666]:Block[25541-25666]"
    }, {
      "left" : "throw new RuntimeException(\"NoSuchFieldException occurred during 1.6 backcompat code\", nsfe);",
      "right" : "throw new RuntimeException(\"NoSuchFieldException occurred during 1.6 backcompat code\", nsfe);",
      "info" : "ThrowStatement[25559-25652]:ThrowStatement[25559-25652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25701-25827]:Block[25701-25827]"
    }, {
      "left" : "throw new RuntimeException(\"IllegalAccessException occurred during 1.6 backcompat code\", iae);",
      "right" : "throw new RuntimeException(\"IllegalAccessException occurred during 1.6 backcompat code\", iae);",
      "info" : "ThrowStatement[25719-25813]:ThrowStatement[25719-25813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25864-25992]:Block[25864-25992]"
    }, {
      "left" : "throw new RuntimeException(\"IllegalArgumentException occurred during 1.6 backcompat code\", iae);",
      "right" : "throw new RuntimeException(\"IllegalArgumentException occurred during 1.6 backcompat code\", iae);",
      "info" : "ThrowStatement[25882-25978]:ThrowStatement[25882-25978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26048-26177]:Block[26048-26177]"
    }, {
      "left" : "throw new RuntimeException(\"InvocationTargetException occurred during 1.6 backcompat code\", ite);",
      "right" : "throw new RuntimeException(\"InvocationTargetException occurred during 1.6 backcompat code\", ite);",
      "info" : "ThrowStatement[26066-26163]:ThrowStatement[26066-26163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26206-26326]:Block[26206-26326]"
    }, {
      "left" : "throw new RuntimeException(\"SecurityException occurred during 1.6 backcompat code\", se);",
      "right" : "throw new RuntimeException(\"SecurityException occurred during 1.6 backcompat code\", se);",
      "info" : "ThrowStatement[26224-26312]:ThrowStatement[26224-26312]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26342-26473]:Block[26342-26473]"
    }, {
      "left" : "throw new UnsupportedOperationException(\"The stripAccents(String) method is not supported until Java 1.6\");",
      "right" : "throw new UnsupportedOperationException(\"The stripAccents(String) method is not supported until Java 1.6\");",
      "info" : "ThrowStatement[26356-26463]:ThrowStatement[26356-26463]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[27405-27411]:Modifier[27405-27411]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27412-27418]:Modifier[27412-27418]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[27419-27426]:PrimitiveType[27419-27426]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[27427-27433]:SimpleName[27427-27433]"
    }, {
      "left" : "CharSequence cs1",
      "right" : "CharSequence cs1",
      "info" : "SingleVariableDeclaration[27434-27450]:SingleVariableDeclaration[27434-27450]"
    }, {
      "left" : "CharSequence cs2",
      "right" : "CharSequence cs2",
      "info" : "SingleVariableDeclaration[27452-27468]:SingleVariableDeclaration[27452-27468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27470-27537]:Block[27470-27537]"
    }, {
      "left" : "return cs1 == null ? cs2 == null : cs1.equals(cs2);",
      "right" : "return cs1 == null ? cs2 == null : cs1.equals(cs2);",
      "info" : "ReturnStatement[27480-27531]:ReturnStatement[27480-27531]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[28427-28433]:Modifier[28427-28433]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[28434-28440]:Modifier[28434-28440]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[28441-28448]:PrimitiveType[28441-28448]"
    }, {
      "left" : "equalsIgnoreCase",
      "right" : "equalsIgnoreCase",
      "info" : "SimpleName[28449-28465]:SimpleName[28449-28465]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[28466-28477]:SingleVariableDeclaration[28466-28477]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[28479-28490]:SingleVariableDeclaration[28479-28490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28492-28573]:Block[28492-28573]"
    }, {
      "left" : "return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);",
      "right" : "return str1 == null ? str2 == null : str1.equalsIgnoreCase(str2);",
      "info" : "ReturnStatement[28502-28567]:ReturnStatement[28502-28567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[29397-29403]:Modifier[29397-29403]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[29404-29410]:Modifier[29404-29410]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[29411-29414]:PrimitiveType[29411-29414]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[29415-29422]:SimpleName[29415-29422]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[29423-29433]:SingleVariableDeclaration[29423-29433]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[29435-29450]:SingleVariableDeclaration[29435-29450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29452-29573]:Block[29452-29573]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[29462-29527]:IfStatement[29462-29527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29480-29527]:Block[29480-29527]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[29494-29517]:ReturnStatement[29494-29517]"
    }, {
      "left" : "return str.indexOf(searchChar);",
      "right" : "return str.indexOf(searchChar);",
      "info" : "ReturnStatement[29536-29567]:ReturnStatement[29536-29567]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30661-30667]:Modifier[30661-30667]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30668-30674]:Modifier[30668-30674]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[30675-30678]:PrimitiveType[30675-30678]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[30679-30686]:SimpleName[30679-30686]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[30687-30697]:SingleVariableDeclaration[30687-30697]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[30699-30714]:SingleVariableDeclaration[30699-30714]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[30716-30728]:SingleVariableDeclaration[30716-30728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30730-30861]:Block[30730-30861]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[30740-30805]:IfStatement[30740-30805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30758-30805]:Block[30758-30805]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[30772-30795]:ReturnStatement[30772-30795]"
    }, {
      "left" : "return str.indexOf(searchChar, startPos);",
      "right" : "return str.indexOf(searchChar, startPos);",
      "info" : "ReturnStatement[30814-30855]:ReturnStatement[30814-30855]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31791-31797]:Modifier[31791-31797]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31798-31804]:Modifier[31798-31804]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[31805-31808]:PrimitiveType[31805-31808]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[31809-31816]:SimpleName[31809-31816]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[31817-31827]:SingleVariableDeclaration[31817-31827]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[31829-31845]:SingleVariableDeclaration[31829-31845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31847-31987]:Block[31847-31987]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[31857-31942]:IfStatement[31857-31942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31895-31942]:Block[31895-31942]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[31909-31932]:ReturnStatement[31909-31932]"
    }, {
      "left" : "return str.indexOf(searchStr);",
      "right" : "return str.indexOf(searchStr);",
      "info" : "ReturnStatement[31951-31981]:ReturnStatement[31951-31981]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[33427-33433]:Modifier[33427-33433]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[33434-33440]:Modifier[33434-33440]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[33441-33444]:PrimitiveType[33441-33444]"
    }, {
      "left" : "indexOf",
      "right" : "indexOf",
      "info" : "SimpleName[33445-33452]:SimpleName[33445-33452]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[33453-33463]:SingleVariableDeclaration[33453-33463]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[33465-33481]:SingleVariableDeclaration[33465-33481]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[33483-33495]:SingleVariableDeclaration[33483-33495]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33497-33647]:Block[33497-33647]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[33507-33592]:IfStatement[33507-33592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33545-33592]:Block[33545-33592]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[33559-33582]:ReturnStatement[33559-33582]"
    }, {
      "left" : "return str.indexOf(searchStr, startPos);",
      "right" : "return str.indexOf(searchStr, startPos);",
      "info" : "ReturnStatement[33601-33641]:ReturnStatement[33601-33641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[35092-35098]:Modifier[35092-35098]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[35099-35105]:Modifier[35099-35105]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[35106-35109]:PrimitiveType[35106-35109]"
    }, {
      "left" : "ordinalIndexOf",
      "right" : "ordinalIndexOf",
      "info" : "SimpleName[35110-35124]:SimpleName[35110-35124]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[35125-35135]:SingleVariableDeclaration[35125-35135]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[35137-35153]:SingleVariableDeclaration[35137-35153]"
    }, {
      "left" : "int ordinal",
      "right" : "int ordinal",
      "info" : "SingleVariableDeclaration[35155-35166]:SingleVariableDeclaration[35155-35166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35168-35238]:Block[35168-35238]"
    }, {
      "left" : "return ordinalIndexOf(str, searchStr, ordinal, false);",
      "right" : "return ordinalIndexOf(str, searchStr, ordinal, false);",
      "info" : "ReturnStatement[35178-35232]:ReturnStatement[35178-35232]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[35997-36004]:Modifier[35997-36004]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[36005-36011]:Modifier[36005-36011]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[36012-36015]:PrimitiveType[36012-36015]"
    }, {
      "left" : "ordinalIndexOf",
      "right" : "ordinalIndexOf",
      "info" : "SimpleName[36016-36030]:SimpleName[36016-36030]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[36031-36041]:SingleVariableDeclaration[36031-36041]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[36043-36059]:SingleVariableDeclaration[36043-36059]"
    }, {
      "left" : "int ordinal",
      "right" : "int ordinal",
      "info" : "SingleVariableDeclaration[36061-36072]:SingleVariableDeclaration[36061-36072]"
    }, {
      "left" : "boolean lastIndex",
      "right" : "boolean lastIndex",
      "info" : "SingleVariableDeclaration[36074-36091]:SingleVariableDeclaration[36074-36091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36093-36744]:Block[36093-36744]"
    }, {
      "left" : "if (str == null || searchStr == null || ordinal <= 0)",
      "right" : "if (str == null || searchStr == null || ordinal <= 0)",
      "info" : "IfStatement[36103-36204]:IfStatement[36103-36204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36157-36204]:Block[36157-36204]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[36171-36194]:ReturnStatement[36171-36194]"
    }, {
      "left" : "if (searchStr.length() == 0)",
      "right" : "if (searchStr.length() == 0)",
      "info" : "IfStatement[36213-36302]:IfStatement[36213-36302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36242-36302]:Block[36242-36302]"
    }, {
      "left" : "return lastIndex ? str.length() : 0;",
      "right" : "return lastIndex ? str.length() : 0;",
      "info" : "ReturnStatement[36256-36292]:ReturnStatement[36256-36292]"
    }, {
      "left" : "int found = 0;",
      "right" : "int found = 0;",
      "info" : "VariableDeclarationStatement[36311-36325]:VariableDeclarationStatement[36311-36325]"
    }, {
      "left" : "int index = lastIndex ? str.length() : INDEX_NOT_FOUND;",
      "right" : "int index = lastIndex ? str.length() : INDEX_NOT_FOUND;",
      "info" : "VariableDeclarationStatement[36334-36389]:VariableDeclarationStatement[36334-36389]"
    }, {
      "left" : "do{...}",
      "right" : "do{...}",
      "info" : "DoStatement[36398-36716]:DoStatement[36398-36716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36401-36691]:Block[36401-36691]"
    }, {
      "left" : "if(lastIndex)",
      "right" : "if(lastIndex)",
      "info" : "IfStatement[36415-36587]:IfStatement[36415-36587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36429-36507]:Block[36429-36507]"
    }, {
      "left" : "index = str.lastIndexOf(searchStr, index - 1);",
      "right" : "index = str.lastIndexOf(searchStr, index - 1);",
      "info" : "ExpressionStatement[36447-36493]:ExpressionStatement[36447-36493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36513-36587]:Block[36513-36587]"
    }, {
      "left" : "index = str.indexOf(searchStr, index + 1);",
      "right" : "index = str.indexOf(searchStr, index + 1);",
      "info" : "ExpressionStatement[36531-36573]:ExpressionStatement[36531-36573]"
    }, {
      "left" : "if (index < 0)",
      "right" : "if (index < 0)",
      "info" : "IfStatement[36600-36660]:IfStatement[36600-36660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36615-36660]:Block[36615-36660]"
    }, {
      "left" : "return index;",
      "right" : "return index;",
      "info" : "ReturnStatement[36633-36646]:ReturnStatement[36633-36646]"
    }, {
      "left" : "found++;",
      "right" : "found++;",
      "info" : "ExpressionStatement[36673-36681]:ExpressionStatement[36673-36681]"
    }, {
      "left" : "return index;",
      "right" : "return index;",
      "info" : "ReturnStatement[36725-36738]:ReturnStatement[36725-36738]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37753-37759]:Modifier[37753-37759]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[37760-37766]:Modifier[37760-37766]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[37767-37770]:PrimitiveType[37767-37770]"
    }, {
      "left" : "indexOfIgnoreCase",
      "right" : "indexOfIgnoreCase",
      "info" : "SimpleName[37771-37788]:SimpleName[37771-37788]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[37789-37799]:SingleVariableDeclaration[37789-37799]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[37801-37817]:SingleVariableDeclaration[37801-37817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37819-37879]:Block[37819-37879]"
    }, {
      "left" : "return indexOfIgnoreCase(str, searchStr, 0);",
      "right" : "return indexOfIgnoreCase(str, searchStr, 0);",
      "info" : "ReturnStatement[37829-37873]:ReturnStatement[37829-37873]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39321-39327]:Modifier[39321-39327]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39328-39334]:Modifier[39328-39334]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[39335-39338]:PrimitiveType[39335-39338]"
    }, {
      "left" : "indexOfIgnoreCase",
      "right" : "indexOfIgnoreCase",
      "info" : "SimpleName[39339-39356]:SimpleName[39339-39356]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[39357-39367]:SingleVariableDeclaration[39357-39367]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[39369-39385]:SingleVariableDeclaration[39369-39385]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[39387-39399]:SingleVariableDeclaration[39387-39399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39401-40003]:Block[39401-40003]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[39411-39496]:IfStatement[39411-39496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39449-39496]:Block[39449-39496]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[39463-39486]:ReturnStatement[39463-39486]"
    }, {
      "left" : "if (startPos < 0)",
      "right" : "if (startPos < 0)",
      "info" : "IfStatement[39505-39560]:IfStatement[39505-39560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39523-39560]:Block[39523-39560]"
    }, {
      "left" : "startPos = 0;",
      "right" : "startPos = 0;",
      "info" : "ExpressionStatement[39537-39550]:ExpressionStatement[39537-39550]"
    }, {
      "left" : "int endLimit = (str.length() - searchStr.length()) + 1;",
      "right" : "int endLimit = (str.length() - searchStr.length()) + 1;",
      "info" : "VariableDeclarationStatement[39569-39624]:VariableDeclarationStatement[39569-39624]"
    }, {
      "left" : "if (startPos > endLimit)",
      "right" : "if (startPos > endLimit)",
      "info" : "IfStatement[39633-39705]:IfStatement[39633-39705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39658-39705]:Block[39658-39705]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[39672-39695]:ReturnStatement[39672-39695]"
    }, {
      "left" : "if (searchStr.length() == 0)",
      "right" : "if (searchStr.length() == 0)",
      "info" : "IfStatement[39714-39783]:IfStatement[39714-39783]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39743-39783]:Block[39743-39783]"
    }, {
      "left" : "return startPos;",
      "right" : "return startPos;",
      "info" : "ReturnStatement[39757-39773]:ReturnStatement[39757-39773]"
    }, {
      "left" : "for (int i = startPos; i < endLimit; i++)",
      "right" : "for (int i = startPos; i < endLimit; i++)",
      "info" : "ForStatement[39792-39965]:ForStatement[39792-39965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39834-39965]:Block[39834-39965]"
    }, {
      "left" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "right" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "info" : "IfStatement[39848-39955]:IfStatement[39848-39955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39914-39955]:Block[39914-39955]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[39932-39941]:ReturnStatement[39932-39941]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[39974-39997]:ReturnStatement[39974-39997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40831-40837]:Modifier[40831-40837]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[40838-40844]:Modifier[40838-40844]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[40845-40848]:PrimitiveType[40845-40848]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[40849-40860]:SimpleName[40849-40860]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[40861-40871]:SingleVariableDeclaration[40861-40871]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[40873-40888]:SingleVariableDeclaration[40873-40888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40890-41015]:Block[40890-41015]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[40900-40965]:IfStatement[40900-40965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40918-40965]:Block[40918-40965]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[40932-40955]:ReturnStatement[40932-40955]"
    }, {
      "left" : "return str.lastIndexOf(searchChar);",
      "right" : "return str.lastIndexOf(searchChar);",
      "info" : "ReturnStatement[40974-41009]:ReturnStatement[40974-41009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[42205-42211]:Modifier[42205-42211]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[42212-42218]:Modifier[42212-42218]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[42219-42222]:PrimitiveType[42219-42222]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[42223-42234]:SimpleName[42223-42234]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[42235-42245]:SingleVariableDeclaration[42235-42245]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[42247-42262]:SingleVariableDeclaration[42247-42262]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[42264-42276]:SingleVariableDeclaration[42264-42276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42278-42413]:Block[42278-42413]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[42288-42353]:IfStatement[42288-42353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42306-42353]:Block[42306-42353]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[42320-42343]:ReturnStatement[42320-42343]"
    }, {
      "left" : "return str.lastIndexOf(searchChar, startPos);",
      "right" : "return str.lastIndexOf(searchChar, startPos);",
      "info" : "ReturnStatement[42362-42407]:ReturnStatement[42362-42407]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[43302-43308]:Modifier[43302-43308]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[43309-43315]:Modifier[43309-43315]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[43316-43319]:PrimitiveType[43316-43319]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[43320-43331]:SimpleName[43320-43331]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[43332-43342]:SingleVariableDeclaration[43332-43342]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[43344-43360]:SingleVariableDeclaration[43344-43360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43362-43506]:Block[43362-43506]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[43372-43457]:IfStatement[43372-43457]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43410-43457]:Block[43410-43457]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[43424-43447]:ReturnStatement[43424-43447]"
    }, {
      "left" : "return str.lastIndexOf(searchStr);",
      "right" : "return str.lastIndexOf(searchStr);",
      "info" : "ReturnStatement[43466-43500]:ReturnStatement[43466-43500]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45015-45021]:Modifier[45015-45021]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[45022-45028]:Modifier[45022-45028]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[45029-45032]:PrimitiveType[45029-45032]"
    }, {
      "left" : "lastOrdinalIndexOf",
      "right" : "lastOrdinalIndexOf",
      "info" : "SimpleName[45033-45051]:SimpleName[45033-45051]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[45052-45062]:SingleVariableDeclaration[45052-45062]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[45064-45080]:SingleVariableDeclaration[45064-45080]"
    }, {
      "left" : "int ordinal",
      "right" : "int ordinal",
      "info" : "SingleVariableDeclaration[45082-45093]:SingleVariableDeclaration[45082-45093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45095-45164]:Block[45095-45164]"
    }, {
      "left" : "return ordinalIndexOf(str, searchStr, ordinal, true);",
      "right" : "return ordinalIndexOf(str, searchStr, ordinal, true);",
      "info" : "ReturnStatement[45105-45158]:ReturnStatement[45105-45158]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46493-46499]:Modifier[46493-46499]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[46500-46506]:Modifier[46500-46506]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[46507-46510]:PrimitiveType[46507-46510]"
    }, {
      "left" : "lastIndexOf",
      "right" : "lastIndexOf",
      "info" : "SimpleName[46511-46522]:SimpleName[46511-46522]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[46523-46533]:SingleVariableDeclaration[46523-46533]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[46535-46551]:SingleVariableDeclaration[46535-46551]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[46553-46565]:SingleVariableDeclaration[46553-46565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46567-46721]:Block[46567-46721]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[46577-46662]:IfStatement[46577-46662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46615-46662]:Block[46615-46662]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[46629-46652]:ReturnStatement[46629-46652]"
    }, {
      "left" : "return str.lastIndexOf(searchStr, startPos);",
      "right" : "return str.lastIndexOf(searchStr, startPos);",
      "info" : "ReturnStatement[46671-46715]:ReturnStatement[46671-46715]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47716-47722]:Modifier[47716-47722]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[47723-47729]:Modifier[47723-47729]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[47730-47733]:PrimitiveType[47730-47733]"
    }, {
      "left" : "lastIndexOfIgnoreCase",
      "right" : "lastIndexOfIgnoreCase",
      "info" : "SimpleName[47734-47755]:SimpleName[47734-47755]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[47756-47766]:SingleVariableDeclaration[47756-47766]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[47768-47784]:SingleVariableDeclaration[47768-47784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47786-47955]:Block[47786-47955]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[47796-47881]:IfStatement[47796-47881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47834-47881]:Block[47834-47881]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[47848-47871]:ReturnStatement[47848-47871]"
    }, {
      "left" : "return lastIndexOfIgnoreCase(str, searchStr, str.length());",
      "right" : "return lastIndexOfIgnoreCase(str, searchStr, str.length());",
      "info" : "ReturnStatement[47890-47949]:ReturnStatement[47890-47949]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49309-49315]:Modifier[49309-49315]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[49316-49322]:Modifier[49316-49322]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[49323-49326]:PrimitiveType[49323-49326]"
    }, {
      "left" : "lastIndexOfIgnoreCase",
      "right" : "lastIndexOfIgnoreCase",
      "info" : "SimpleName[49327-49348]:SimpleName[49327-49348]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[49349-49359]:SingleVariableDeclaration[49349-49359]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[49361-49377]:SingleVariableDeclaration[49361-49377]"
    }, {
      "left" : "int startPos",
      "right" : "int startPos",
      "info" : "SingleVariableDeclaration[49379-49391]:SingleVariableDeclaration[49379-49391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49393-49985]:Block[49393-49985]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[49403-49488]:IfStatement[49403-49488]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49441-49488]:Block[49441-49488]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[49455-49478]:ReturnStatement[49455-49478]"
    }, {
      "left" : "if (startPos > (str.length() - searchStr.length()))",
      "right" : "if (startPos > (str.length() - searchStr.length()))",
      "info" : "IfStatement[49497-49618]:IfStatement[49497-49618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49549-49618]:Block[49549-49618]"
    }, {
      "left" : "startPos = str.length() - searchStr.length();",
      "right" : "startPos = str.length() - searchStr.length();",
      "info" : "ExpressionStatement[49563-49608]:ExpressionStatement[49563-49608]"
    }, {
      "left" : "if (startPos < 0)",
      "right" : "if (startPos < 0)",
      "info" : "IfStatement[49627-49692]:IfStatement[49627-49692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49645-49692]:Block[49645-49692]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[49659-49682]:ReturnStatement[49659-49682]"
    }, {
      "left" : "if (searchStr.length() == 0)",
      "right" : "if (searchStr.length() == 0)",
      "info" : "IfStatement[49701-49770]:IfStatement[49701-49770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49730-49770]:Block[49730-49770]"
    }, {
      "left" : "return startPos;",
      "right" : "return startPos;",
      "info" : "ReturnStatement[49744-49760]:ReturnStatement[49744-49760]"
    }, {
      "left" : "for (int i = startPos; i >= 0; i--)",
      "right" : "for (int i = startPos; i >= 0; i--)",
      "info" : "ForStatement[49780-49947]:ForStatement[49780-49947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49816-49947]:Block[49816-49947]"
    }, {
      "left" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "right" : "if (str.regionMatches(true, i, searchStr, 0, searchStr.length()))",
      "info" : "IfStatement[49830-49937]:IfStatement[49830-49937]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49896-49937]:Block[49896-49937]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[49914-49923]:ReturnStatement[49914-49923]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[49956-49979]:ReturnStatement[49956-49979]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50806-50812]:Modifier[50806-50812]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[50813-50819]:Modifier[50813-50819]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[50820-50827]:PrimitiveType[50820-50827]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[50828-50836]:SimpleName[50828-50836]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[50837-50847]:SingleVariableDeclaration[50837-50847]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[50849-50864]:SingleVariableDeclaration[50849-50864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50866-50982]:Block[50866-50982]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[50876-50931]:IfStatement[50876-50931]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50894-50931]:Block[50894-50931]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[50908-50921]:ReturnStatement[50908-50921]"
    }, {
      "left" : "return str.indexOf(searchChar) >= 0;",
      "right" : "return str.indexOf(searchChar) >= 0;",
      "info" : "ReturnStatement[50940-50976]:ReturnStatement[50940-50976]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[51801-51807]:Modifier[51801-51807]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[51808-51814]:Modifier[51808-51814]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[51815-51822]:PrimitiveType[51815-51822]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[51823-51831]:SimpleName[51823-51831]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[51832-51842]:SingleVariableDeclaration[51832-51842]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[51844-51860]:SingleVariableDeclaration[51844-51860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51862-51997]:Block[51862-51997]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[51872-51947]:IfStatement[51872-51947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51910-51947]:Block[51910-51947]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[51924-51937]:ReturnStatement[51924-51937]"
    }, {
      "left" : "return str.indexOf(searchStr) >= 0;",
      "right" : "return str.indexOf(searchStr) >= 0;",
      "info" : "ReturnStatement[51956-51991]:ReturnStatement[51956-51991]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[52950-52956]:Modifier[52950-52956]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[52957-52963]:Modifier[52957-52963]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[52964-52971]:PrimitiveType[52964-52971]"
    }, {
      "left" : "containsIgnoreCase",
      "right" : "containsIgnoreCase",
      "info" : "SimpleName[52972-52990]:SimpleName[52972-52990]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[52991-53001]:SingleVariableDeclaration[52991-53001]"
    }, {
      "left" : "String searchStr",
      "right" : "String searchStr",
      "info" : "SingleVariableDeclaration[53003-53019]:SingleVariableDeclaration[53003-53019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53021-53369]:Block[53021-53369]"
    }, {
      "left" : "if (str == null || searchStr == null)",
      "right" : "if (str == null || searchStr == null)",
      "info" : "IfStatement[53031-53106]:IfStatement[53031-53106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53069-53106]:Block[53069-53106]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53083-53096]:ReturnStatement[53083-53096]"
    }, {
      "left" : "int len = searchStr.length();",
      "right" : "int len = searchStr.length();",
      "info" : "VariableDeclarationStatement[53115-53144]:VariableDeclarationStatement[53115-53144]"
    }, {
      "left" : "int max = str.length() - len;",
      "right" : "int max = str.length() - len;",
      "info" : "VariableDeclarationStatement[53153-53182]:VariableDeclarationStatement[53153-53182]"
    }, {
      "left" : "for (int i = 0; i <= max; i++)",
      "right" : "for (int i = 0; i <= max; i++)",
      "info" : "ForStatement[53191-53341]:ForStatement[53191-53341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53222-53341]:Block[53222-53341]"
    }, {
      "left" : "if (str.regionMatches(true, i, searchStr, 0, len))",
      "right" : "if (str.regionMatches(true, i, searchStr, 0, len))",
      "info" : "IfStatement[53236-53331]:IfStatement[53236-53331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53287-53331]:Block[53287-53331]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[53305-53317]:ReturnStatement[53305-53317]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[53350-53363]:ReturnStatement[53350-53363]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[54436-54442]:Modifier[54436-54442]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[54443-54449]:Modifier[54443-54449]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[54450-54453]:PrimitiveType[54450-54453]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[54454-54464]:SimpleName[54454-54464]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[54465-54480]:SingleVariableDeclaration[54465-54480]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[54482-54500]:SingleVariableDeclaration[54482-54500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54502-55033]:Block[54502-55379]"
    }, {
      "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "info" : "IfStatement[54512-54611]:IfStatement[54512-54611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54564-54611]:Block[54564-54611]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[54578-54601]:ReturnStatement[54578-54601]"
    }, {
      "left" : "int csLen = cs.length();",
      "right" : "int csLen = cs.length();",
      "info" : "VariableDeclarationStatement[54620-54644]:VariableDeclarationStatement[54620-54644]"
    }, {
      "left" : "int searchLen = searchChars.length;",
      "right" : "int searchLen = searchChars.length;",
      "info" : "VariableDeclarationStatement[54653-54688]:VariableDeclarationStatement[54685-54720]"
    }, {
      "left" : "for (int i = 0; i < csLen; i++)",
      "right" : "for (int i = 0; i < csLen; i++)",
      "info" : "ForStatement[54697-54995]:ForStatement[54769-55341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54729-54995]:Block[54801-55341]"
    }, {
      "left" : "char ch = cs.charAt(i);",
      "right" : "char ch = cs.charAt(i);",
      "info" : "VariableDeclarationStatement[54743-54766]:VariableDeclarationStatement[54815-54838]"
    }, {
      "left" : "for (int j = 0; j < searchLen; j++)",
      "right" : "for (int j = 0; j < searchLen; j++)",
      "info" : "ForStatement[54779-54985]:ForStatement[54851-55331]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54815-54985]:Block[54887-55331]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[54833-54971]:IfStatement[54905-55317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54859-54971]:Block[54931-55317]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[54944-54953]:ReturnStatement[55268-55277]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[55004-55027]:ReturnStatement[55350-55373]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55956-55962]:Modifier[56302-56308]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[55963-55969]:Modifier[56309-56315]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[55970-55973]:PrimitiveType[56316-56319]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[55974-55984]:SimpleName[56320-56330]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[55985-56000]:SingleVariableDeclaration[56331-56346]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[56002-56020]:SingleVariableDeclaration[56348-56366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56022-56184]:Block[56368-56530]"
    }, {
      "left" : "if (isEmpty(cs) || isEmpty(searchChars))",
      "right" : "if (isEmpty(cs) || isEmpty(searchChars))",
      "info" : "IfStatement[56032-56120]:IfStatement[56378-56466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[56073-56120]:Block[56419-56466]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[56087-56110]:ReturnStatement[56433-56456]"
    }, {
      "left" : "return indexOfAny(cs, searchChars.toCharArray());",
      "right" : "return indexOfAny(cs, searchChars.toCharArray());",
      "info" : "ReturnStatement[56129-56178]:ReturnStatement[56475-56524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[57318-57324]:Modifier[57664-57670]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[57325-57331]:Modifier[57671-57677]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[57332-57339]:PrimitiveType[57678-57685]"
    }, {
      "left" : "containsAny",
      "right" : "containsAny",
      "info" : "SimpleName[57340-57351]:SimpleName[57686-57697]"
    }, {
      "left" : "CharSequence",
      "right" : "String",
      "info" : "SimpleName[57352-57364]:SimpleName[57698-57704]"
    }, {
      "left" : "CharSequence cs",
      "right" : "String cs",
      "info" : "SingleVariableDeclaration[57352-57367]:SingleVariableDeclaration[57698-57707]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[57369-57387]:SingleVariableDeclaration[57709-57727]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57389-58407]:Block[57729-58800]"
    }, {
      "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "info" : "IfStatement[57399-57488]:IfStatement[57739-57828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57451-57488]:Block[57791-57828]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[57465-57478]:ReturnStatement[57805-57818]"
    }, {
      "left" : "int csLength = cs.length();",
      "right" : "int csLength = cs.length();",
      "info" : "VariableDeclarationStatement[57497-57524]:VariableDeclarationStatement[57837-57864]"
    }, {
      "left" : "int searchLength = searchChars.length;",
      "right" : "int searchLength = searchChars.length;",
      "info" : "VariableDeclarationStatement[57533-57571]:VariableDeclarationStatement[57873-57911]"
    }, {
      "left" : "int csLast = csLength - 1;",
      "right" : "int csLast = csLength - 1;",
      "info" : "VariableDeclarationStatement[57580-57606]:VariableDeclarationStatement[57920-57946]"
    }, {
      "left" : "int searchLast = searchLength - 1;",
      "right" : "int searchLast = searchLength - 1;",
      "info" : "VariableDeclarationStatement[57615-57649]:VariableDeclarationStatement[57955-57989]"
    }, {
      "left" : "for (int i = 0; i < csLength; i++)",
      "right" : "for (int i = 0; i < csLength; i++)",
      "info" : "ForStatement[57658-58379]:ForStatement[57998-58772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57693-58379]:Block[58033-58772]"
    }, {
      "left" : "char ch = cs.charAt(i);",
      "right" : "char ch = cs.charAt(i);",
      "info" : "VariableDeclarationStatement[57707-57730]:VariableDeclarationStatement[58047-58070]"
    }, {
      "left" : "for (int j = 0; j < searchLength; j++)",
      "right" : "for (int j = 0; j < searchLength; j++)",
      "info" : "ForStatement[57743-58369]:ForStatement[58083-58762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57782-58369]:Block[58122-58762]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[57800-58355]:IfStatement[58140-58748]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57826-58355]:Block[58166-58748]"
    }, {
      "left" : "if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE)",
      "right" : "if (Character.isHighSurrogate(ch))",
      "info" : "IfStatement[57848-58337]:IfStatement[58188-58730]"
    }, {
      "left" : "i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE",
      "right" : "i < csLast && j < searchLast && Character.isHighSurrogate(ch)",
      "info" : "InfixExpression[57852-57918]:InfixExpression[54957-55018]"
    }, {
      "left" : "Character.MIN_HIGH_SURROGATE",
      "right" : "Character",
      "info" : "QualifiedName[57890-57918]:SimpleName[58192-58201]"
    }, {
      "left" : "ch",
      "right" : "ch",
      "info" : "SimpleName[57922-57924]:SimpleName[58218-58220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[57958-58206]:Block[58223-58599]"
    }, {
      "left" : "if (searchChars[j + 1] == cs.charAt(i + 1))",
      "right" : "if (searchChars[j + 1] == cs.charAt(i + 1))",
      "info" : "IfStatement[58072-58184]:IfStatement[55105-55214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58116-58184]:Block[55149-55214]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[58146-58158]:ReturnStatement[58388-58400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[58212-58337]:Block[58605-58730]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[58303-58315]:ReturnStatement[58696-58708]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[58388-58401]:ReturnStatement[58781-58794]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[59463-59469]:Modifier[59856-59862]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[59470-59476]:Modifier[59863-59869]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[59477-59484]:PrimitiveType[59870-59877]"
    }, {
      "left" : "containsAny",
      "right" : "containsAny",
      "info" : "SimpleName[59485-59496]:SimpleName[59878-59889]"
    }, {
      "left" : "CharSequence",
      "right" : "String",
      "info" : "SimpleName[59497-59509]:SimpleName[59890-59896]"
    }, {
      "left" : "CharSequence cs",
      "right" : "String cs",
      "info" : "SingleVariableDeclaration[59497-59512]:SingleVariableDeclaration[59890-59899]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[59514-59532]:SingleVariableDeclaration[59901-59919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59534-59671]:Block[59921-60058]"
    }, {
      "left" : "if (searchChars == null)",
      "right" : "if (searchChars == null)",
      "info" : "IfStatement[59544-59606]:IfStatement[59931-59993]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[59569-59606]:Block[59956-59993]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[59583-59596]:ReturnStatement[59970-59983]"
    }, {
      "left" : "return containsAny(cs, searchChars.toCharArray());",
      "right" : "return containsAny(cs, searchChars.toCharArray());",
      "info" : "ReturnStatement[59615-59665]:ReturnStatement[60002-60052]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[60739-60745]:Modifier[61126-61132]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[60746-60752]:Modifier[61133-61139]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[60753-60756]:PrimitiveType[61140-61143]"
    }, {
      "left" : "indexOfAnyBut",
      "right" : "indexOfAnyBut",
      "info" : "SimpleName[60757-60770]:SimpleName[61144-61157]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[60771-60786]:SingleVariableDeclaration[61158-61173]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[60788-60806]:SingleVariableDeclaration[61175-61193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60808-61323]:Block[61195-62062]"
    }, {
      "left" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "right" : "if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars))",
      "info" : "IfStatement[60818-60917]:IfStatement[61205-61304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60870-60917]:Block[61257-61304]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[60884-60907]:ReturnStatement[61271-61294]"
    }, {
      "left" : "int csLen = cs.length();",
      "right" : "int csLen = cs.length();",
      "info" : "VariableDeclarationStatement[60926-60950]:VariableDeclarationStatement[61313-61337]"
    }, {
      "left" : "int searchLen = searchChars.length;",
      "right" : "int searchLen = searchChars.length;",
      "info" : "VariableDeclarationStatement[60959-60994]:VariableDeclarationStatement[61378-61413]"
    }, {
      "left" : "outer:\n        for (int i = 0; i < csLen; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                        continue outer;\n                }\n            }\n            return i;\n        }",
      "right" : "outer:\n        for (int i = 0; i < csLen; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                    if (i < csLast && j < searchLast && Character.isHighSurrogate(ch)) {\n                        if (searchChars[j + 1] == cs.charAt(i + 1)) {\n                            continue outer;\n                        }\n                    } else {\n                        continue outer;\n                    }\n                }\n            }\n            return i;\n        }",
      "info" : "LabeledStatement[61003-61285]:LabeledStatement[61462-62024]"
    }, {
      "left" : "for (int i = 0; i < csLen; i++)",
      "right" : "for (int i = 0; i < csLen; i++)",
      "info" : "ForStatement[61018-61285]:ForStatement[61477-62024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61050-61285]:Block[61509-62024]"
    }, {
      "left" : "char ch = cs.charAt(i);",
      "right" : "char ch = cs.charAt(i);",
      "info" : "VariableDeclarationStatement[61064-61087]:VariableDeclarationStatement[61523-61546]"
    }, {
      "left" : "for (int j = 0; j < searchLen; j++)",
      "right" : "for (int j = 0; j < searchLen; j++)",
      "info" : "ForStatement[61100-61253]:ForStatement[61559-61992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61136-61253]:Block[61595-61992]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[61154-61239]:IfStatement[61613-61978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[61180-61239]:Block[61639-61978]"
    }, {
      "left" : "continue outer;",
      "right" : "continue outer;",
      "info" : "ContinueStatement[61206-61221]:ContinueStatement[61923-61938]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[61266-61275]:ReturnStatement[62005-62014]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[61294-61317]:ReturnStatement[62033-62056]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[62260-62266]:Modifier[62999-63005]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[62267-62273]:Modifier[63006-63012]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[62274-62277]:PrimitiveType[63013-63016]"
    }, {
      "left" : "indexOfAnyBut",
      "right" : "indexOfAnyBut",
      "info" : "SimpleName[62278-62291]:SimpleName[63017-63030]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[62292-62302]:SingleVariableDeclaration[63031-63041]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[62304-62322]:SingleVariableDeclaration[63043-63061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62324-62677]:Block[63063-63724]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || isEmpty(searchChars))",
      "info" : "IfStatement[62334-62423]:IfStatement[63073-63162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62376-62423]:Block[63115-63162]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[62390-62413]:ReturnStatement[63129-63152]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[62432-62458]:VariableDeclarationStatement[63171-63197]"
    }, {
      "left" : "for (int i = 0; i < strLen; i++)",
      "right" : "for (int i = 0; i < strLen; i++)",
      "info" : "ForStatement[62467-62639]:ForStatement[63206-63686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62500-62639]:Block[63239-63686]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[62514-62538]:VariableDeclarationStatement[63253-63277]"
    }, {
      "left" : "if (searchChars.indexOf(ch) < 0)",
      "right" : "if (chFound && searchChars.indexOf(ch2) < 0)",
      "info" : "IfStatement[62551-62629]:IfStatement[63467-63561]"
    }, {
      "left" : "searchChars.indexOf(ch) < 0",
      "right" : "searchChars.indexOf(ch2) < 0",
      "info" : "InfixExpression[62555-62582]:InfixExpression[63482-63510]"
    }, {
      "left" : "ch",
      "right" : "ch2",
      "info" : "SimpleName[62575-62577]:SimpleName[63502-63505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[62584-62629]:Block[63512-63561]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[62606-62615]:ReturnStatement[63534-63543]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[62648-62671]:ReturnStatement[63695-63718]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[63716-63722]:Modifier[64763-64769]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[63723-63729]:Modifier[64770-64776]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[63730-63737]:PrimitiveType[64777-64784]"
    }, {
      "left" : "containsOnly",
      "right" : "containsOnly",
      "info" : "SimpleName[63738-63750]:SimpleName[64785-64797]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[63751-63766]:SingleVariableDeclaration[64798-64813]"
    }, {
      "left" : "char[] valid",
      "right" : "char[] valid",
      "info" : "SingleVariableDeclaration[63768-63780]:SingleVariableDeclaration[64815-64827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63782-64138]:Block[64829-65185]"
    }, {
      "left" : "if (valid == null || cs == null)",
      "right" : "if (valid == null || cs == null)",
      "info" : "IfStatement[63866-63936]:IfStatement[64913-64983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63899-63936]:Block[64946-64983]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[63913-63926]:ReturnStatement[64960-64973]"
    }, {
      "left" : "if (cs.length() == 0)",
      "right" : "if (cs.length() == 0)",
      "info" : "IfStatement[63945-64003]:IfStatement[64992-65050]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[63967-64003]:Block[65014-65050]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[63981-63993]:ReturnStatement[65028-65040]"
    }, {
      "left" : "if (valid.length == 0)",
      "right" : "if (valid.length == 0)",
      "info" : "IfStatement[64012-64072]:IfStatement[65059-65119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[64035-64072]:Block[65082-65119]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[64049-64062]:ReturnStatement[65096-65109]"
    }, {
      "left" : "return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",
      "right" : "return indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[64081-64132]:ReturnStatement[65128-65179]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[65103-65109]:Modifier[66150-66156]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[65110-65116]:Modifier[66157-66163]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[65117-65124]:PrimitiveType[66164-66171]"
    }, {
      "left" : "containsOnly",
      "right" : "containsOnly",
      "info" : "SimpleName[65125-65137]:SimpleName[66172-66184]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[65138-65153]:SingleVariableDeclaration[66185-66200]"
    }, {
      "left" : "String validChars",
      "right" : "String validChars",
      "info" : "SingleVariableDeclaration[65155-65172]:SingleVariableDeclaration[66202-66219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65174-65324]:Block[66221-66371]"
    }, {
      "left" : "if (cs == null || validChars == null)",
      "right" : "if (cs == null || validChars == null)",
      "info" : "IfStatement[65184-65259]:IfStatement[66231-66306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[65222-65259]:Block[66269-66306]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[65236-65249]:ReturnStatement[66283-66296]"
    }, {
      "left" : "return containsOnly(cs, validChars.toCharArray());",
      "right" : "return containsOnly(cs, validChars.toCharArray());",
      "info" : "ReturnStatement[65268-65318]:ReturnStatement[66315-66365]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[66388-66394]:Modifier[67435-67441]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[66395-66401]:Modifier[67442-67448]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[66402-66409]:PrimitiveType[67449-67456]"
    }, {
      "left" : "containsNone",
      "right" : "containsNone",
      "info" : "SimpleName[66410-66422]:SimpleName[67457-67469]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[66423-66438]:SingleVariableDeclaration[67470-67485]"
    }, {
      "left" : "char[] searchChars",
      "right" : "char[] searchChars",
      "info" : "SingleVariableDeclaration[66440-66458]:SingleVariableDeclaration[67487-67505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66460-67054]:Block[67507-68548]"
    }, {
      "left" : "if (cs == null || searchChars == null)",
      "right" : "if (cs == null || searchChars == null)",
      "info" : "IfStatement[66470-66545]:IfStatement[67517-67592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66509-66545]:Block[67556-67592]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[66523-66535]:ReturnStatement[67570-67582]"
    }, {
      "left" : "int csLen = cs.length();",
      "right" : "int csLen = cs.length();",
      "info" : "VariableDeclarationStatement[66554-66578]:VariableDeclarationStatement[67601-67625]"
    }, {
      "left" : "int searchLen = searchChars.length;",
      "right" : "int searchLen = searchChars.length;",
      "info" : "VariableDeclarationStatement[66587-66622]:VariableDeclarationStatement[67666-67701]"
    }, {
      "left" : "for (int i = 0; i < csLen; i++)",
      "right" : "for (int i = 0; i < csLen; i++)",
      "info" : "ForStatement[66631-67027]:ForStatement[67750-68521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66663-67027]:Block[67782-68521]"
    }, {
      "left" : "char ch = cs.charAt(i);",
      "right" : "char ch = cs.charAt(i);",
      "info" : "VariableDeclarationStatement[66677-66700]:VariableDeclarationStatement[67796-67819]"
    }, {
      "left" : "for (int j = 0; j < searchLen; j++)",
      "right" : "for (int j = 0; j < searchLen; j++)",
      "info" : "ForStatement[66713-67017]:ForStatement[67832-68511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66749-67017]:Block[67868-68511]"
    }, {
      "left" : "if (searchChars[j] == ch)",
      "right" : "if (searchChars[j] == ch)",
      "info" : "IfStatement[66767-67003]:IfStatement[67886-68497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[66793-67003]:Block[67912-68497]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[66972-66985]:ReturnStatement[68444-68457]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[67036-67048]:ReturnStatement[68530-68542]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[68007-68013]:Modifier[69501-69507]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[68014-68020]:Modifier[69508-69514]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[68021-68028]:PrimitiveType[69515-69522]"
    }, {
      "left" : "containsNone",
      "right" : "containsNone",
      "info" : "SimpleName[68029-68041]:SimpleName[69523-69535]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[68042-68057]:SingleVariableDeclaration[69536-69551]"
    }, {
      "left" : "String invalidChars",
      "right" : "String invalidChars",
      "info" : "SingleVariableDeclaration[68059-68078]:SingleVariableDeclaration[69553-69572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68080-68233]:Block[69574-69727]"
    }, {
      "left" : "if (cs == null || invalidChars == null)",
      "right" : "if (cs == null || invalidChars == null)",
      "info" : "IfStatement[68090-68166]:IfStatement[69584-69660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[68130-68166]:Block[69624-69660]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[68144-68156]:ReturnStatement[69638-69650]"
    }, {
      "left" : "return containsNone(cs, invalidChars.toCharArray());",
      "right" : "return containsNone(cs, invalidChars.toCharArray());",
      "info" : "ReturnStatement[68175-68227]:ReturnStatement[69669-69721]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[69687-69693]:Modifier[71181-71187]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[69694-69700]:Modifier[71188-71194]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[69701-69704]:PrimitiveType[71195-71198]"
    }, {
      "left" : "indexOfAny",
      "right" : "indexOfAny",
      "info" : "SimpleName[69705-69715]:SimpleName[71199-71209]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[69716-69726]:SingleVariableDeclaration[71210-71220]"
    }, {
      "left" : "String[] searchStrs",
      "right" : "String[] searchStrs",
      "info" : "SingleVariableDeclaration[69728-69747]:SingleVariableDeclaration[71222-71241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69749-70425]:Block[71243-71919]"
    }, {
      "left" : "if (str == null || searchStrs == null)",
      "right" : "if (str == null || searchStrs == null)",
      "info" : "IfStatement[69759-69845]:IfStatement[71253-71339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[69798-69845]:Block[71292-71339]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[69812-69835]:ReturnStatement[71306-71329]"
    }, {
      "left" : "int sz = searchStrs.length;",
      "right" : "int sz = searchStrs.length;",
      "info" : "VariableDeclarationStatement[69854-69881]:VariableDeclarationStatement[71348-71375]"
    }, {
      "left" : "int ret = Integer.MAX_VALUE;",
      "right" : "int ret = Integer.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[69943-69971]:VariableDeclarationStatement[71437-71465]"
    }, {
      "left" : "int tmp = 0;",
      "right" : "int tmp = 0;",
      "info" : "VariableDeclarationStatement[69981-69993]:VariableDeclarationStatement[71475-71487]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[70002-70351]:ForStatement[71496-71845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70031-70351]:Block[71525-71845]"
    }, {
      "left" : "String search = searchStrs[i];",
      "right" : "String search = searchStrs[i];",
      "info" : "VariableDeclarationStatement[70045-70075]:VariableDeclarationStatement[71539-71569]"
    }, {
      "left" : "if (search == null)",
      "right" : "if (search == null)",
      "info" : "IfStatement[70088-70149]:IfStatement[71582-71643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70108-70149]:Block[71602-71643]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[70126-70135]:ContinueStatement[71620-71629]"
    }, {
      "left" : "tmp = str.indexOf(search);",
      "right" : "tmp = str.indexOf(search);",
      "info" : "ExpressionStatement[70162-70188]:ExpressionStatement[71656-71682]"
    }, {
      "left" : "if (tmp == INDEX_NOT_FOUND)",
      "right" : "if (tmp == INDEX_NOT_FOUND)",
      "info" : "IfStatement[70201-70270]:IfStatement[71695-71764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70229-70270]:Block[71723-71764]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[70247-70256]:ContinueStatement[71741-71750]"
    }, {
      "left" : "if (tmp < ret)",
      "right" : "if (tmp < ret)",
      "info" : "IfStatement[70284-70341]:IfStatement[71778-71835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[70299-70341]:Block[71793-71835]"
    }, {
      "left" : "ret = tmp;",
      "right" : "ret = tmp;",
      "info" : "ExpressionStatement[70317-70327]:ExpressionStatement[71811-71821]"
    }, {
      "left" : "return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;",
      "right" : "return (ret == Integer.MAX_VALUE) ? INDEX_NOT_FOUND : ret;",
      "info" : "ReturnStatement[70361-70419]:ReturnStatement[71855-71913]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[71737-71743]:Modifier[73231-73237]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[71744-71750]:Modifier[73238-73244]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[71751-71754]:PrimitiveType[73245-73248]"
    }, {
      "left" : "lastIndexOfAny",
      "right" : "lastIndexOfAny",
      "info" : "SimpleName[71755-71769]:SimpleName[73249-73263]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[71770-71780]:SingleVariableDeclaration[73264-73274]"
    }, {
      "left" : "String[] searchStrs",
      "right" : "String[] searchStrs",
      "info" : "SingleVariableDeclaration[71782-71801]:SingleVariableDeclaration[73276-73295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71803-72296]:Block[73297-73790]"
    }, {
      "left" : "if (str == null || searchStrs == null)",
      "right" : "if (str == null || searchStrs == null)",
      "info" : "IfStatement[71813-71899]:IfStatement[73307-73393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[71852-71899]:Block[73346-73393]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[71866-71889]:ReturnStatement[73360-73383]"
    }, {
      "left" : "int sz = searchStrs.length;",
      "right" : "int sz = searchStrs.length;",
      "info" : "VariableDeclarationStatement[71908-71935]:VariableDeclarationStatement[73402-73429]"
    }, {
      "left" : "int ret = INDEX_NOT_FOUND;",
      "right" : "int ret = INDEX_NOT_FOUND;",
      "info" : "VariableDeclarationStatement[71944-71970]:VariableDeclarationStatement[73438-73464]"
    }, {
      "left" : "int tmp = 0;",
      "right" : "int tmp = 0;",
      "info" : "VariableDeclarationStatement[71979-71991]:VariableDeclarationStatement[73473-73485]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[72000-72270]:ForStatement[73494-73764]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72029-72270]:Block[73523-73764]"
    }, {
      "left" : "String search = searchStrs[i];",
      "right" : "String search = searchStrs[i];",
      "info" : "VariableDeclarationStatement[72043-72073]:VariableDeclarationStatement[73537-73567]"
    }, {
      "left" : "if (search == null)",
      "right" : "if (search == null)",
      "info" : "IfStatement[72086-72147]:IfStatement[73580-73641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72106-72147]:Block[73600-73641]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[72124-72133]:ContinueStatement[73618-73627]"
    }, {
      "left" : "tmp = str.lastIndexOf(search);",
      "right" : "tmp = str.lastIndexOf(search);",
      "info" : "ExpressionStatement[72160-72190]:ExpressionStatement[73654-73684]"
    }, {
      "left" : "if (tmp > ret)",
      "right" : "if (tmp > ret)",
      "info" : "IfStatement[72203-72260]:IfStatement[73697-73754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[72218-72260]:Block[73712-73754]"
    }, {
      "left" : "ret = tmp;",
      "right" : "ret = tmp;",
      "info" : "ExpressionStatement[72236-72246]:ExpressionStatement[73730-73740]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[72279-72290]:ReturnStatement[73773-73784]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[73398-73404]:Modifier[74892-74898]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[73405-73411]:Modifier[74899-74905]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[73412-73418]:SimpleType[74906-74912]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[73419-73428]:SimpleName[74913-74922]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[73429-73439]:SingleVariableDeclaration[74923-74933]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[73441-73450]:SingleVariableDeclaration[74935-74944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73452-73857]:Block[74946-75351]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[73462-73515]:IfStatement[74956-75009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73479-73515]:Block[74973-75009]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[73493-73505]:ReturnStatement[74987-74999]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[73584-73682]:IfStatement[75078-75176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73599-73682]:Block[75093-75176]"
    }, {
      "left" : "start = str.length() + start;",
      "right" : "start = str.length() + start;",
      "info" : "ExpressionStatement[73613-73642]:ExpressionStatement[75107-75136]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[73692-73741]:IfStatement[75186-75235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73707-73741]:Block[75201-75235]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[73721-73731]:ExpressionStatement[75215-75225]"
    }, {
      "left" : "if (start > str.length())",
      "right" : "if (start > str.length())",
      "info" : "IfStatement[73750-73813]:IfStatement[75244-75307]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[73776-73813]:Block[75270-75307]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[73790-73803]:ReturnStatement[75284-75297]"
    }, {
      "left" : "return str.substring(start);",
      "right" : "return str.substring(start);",
      "info" : "ReturnStatement[73823-73851]:ReturnStatement[75317-75345]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[75539-75545]:Modifier[77033-77039]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[75546-75552]:Modifier[77040-77046]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[75553-75559]:SimpleType[77047-77053]"
    }, {
      "left" : "substring",
      "right" : "substring",
      "info" : "SimpleName[75560-75569]:SimpleName[77054-77063]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[75570-75580]:SingleVariableDeclaration[77064-77074]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[75582-75591]:SingleVariableDeclaration[77076-77085]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[75593-75600]:SingleVariableDeclaration[77087-77094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75602-76283]:Block[77096-77777]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[75612-75665]:IfStatement[77106-77159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75629-75665]:Block[77123-77159]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[75643-75655]:ReturnStatement[77137-77149]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[75703-75793]:IfStatement[77197-77287]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75716-75793]:Block[77210-77287]"
    }, {
      "left" : "end = str.length() + end;",
      "right" : "end = str.length() + end;",
      "info" : "ExpressionStatement[75730-75755]:ExpressionStatement[77224-77249]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[75802-75900]:IfStatement[77296-77394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75817-75900]:Block[77311-77394]"
    }, {
      "left" : "start = str.length() + start;",
      "right" : "start = str.length() + start;",
      "info" : "ExpressionStatement[75831-75860]:ExpressionStatement[77325-77354]"
    }, {
      "left" : "if (end > str.length())",
      "right" : "if (end > str.length())",
      "info" : "IfStatement[75939-76006]:IfStatement[77433-77500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[75963-76006]:Block[77457-77500]"
    }, {
      "left" : "end = str.length();",
      "right" : "end = str.length();",
      "info" : "ExpressionStatement[75977-75996]:ExpressionStatement[77471-77490]"
    }, {
      "left" : "if (start > end)",
      "right" : "if (start > end)",
      "info" : "IfStatement[76067-76121]:IfStatement[77561-77615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76084-76121]:Block[77578-77615]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[76098-76111]:ReturnStatement[77592-77605]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[76131-76180]:IfStatement[77625-77674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76146-76180]:Block[77640-77674]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[76160-76170]:ExpressionStatement[77654-77664]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[76189-76234]:IfStatement[77683-77728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[76202-76234]:Block[77696-77728]"
    }, {
      "left" : "end = 0;",
      "right" : "end = 0;",
      "info" : "ExpressionStatement[76216-76224]:ExpressionStatement[77710-77718]"
    }, {
      "left" : "return str.substring(start, end);",
      "right" : "return str.substring(start, end);",
      "info" : "ReturnStatement[76244-76277]:ReturnStatement[77738-77771]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[77223-77229]:Modifier[78717-78723]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[77230-77236]:Modifier[78724-78730]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[77237-77243]:SimpleType[78731-78737]"
    }, {
      "left" : "left",
      "right" : "left",
      "info" : "SimpleName[77244-77248]:SimpleName[78738-78742]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[77249-77259]:SingleVariableDeclaration[78743-78753]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[77261-77268]:SingleVariableDeclaration[78755-78762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77270-77505]:Block[78764-78999]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[77280-77333]:IfStatement[78774-78827]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77297-77333]:Block[78791-78827]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[77311-77323]:ReturnStatement[78805-78817]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[77342-77392]:IfStatement[78836-78886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77355-77392]:Block[78849-78886]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[77369-77382]:ReturnStatement[78863-78876]"
    }, {
      "left" : "if (str.length() <= len)",
      "right" : "if (str.length() <= len)",
      "info" : "IfStatement[77401-77461]:IfStatement[78895-78955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[77426-77461]:Block[78920-78955]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[77440-77451]:ReturnStatement[78934-78945]"
    }, {
      "left" : "return str.substring(0, len);",
      "right" : "return str.substring(0, len);",
      "info" : "ReturnStatement[77470-77499]:ReturnStatement[78964-78993]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[78357-78363]:Modifier[79851-79857]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[78364-78370]:Modifier[79858-79864]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[78371-78377]:SimpleType[79865-79871]"
    }, {
      "left" : "right",
      "right" : "right",
      "info" : "SimpleName[78378-78383]:SimpleName[79872-79877]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[78384-78394]:SingleVariableDeclaration[79878-79888]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[78396-78403]:SingleVariableDeclaration[79890-79897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78405-78652]:Block[79899-80146]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[78415-78468]:IfStatement[79909-79962]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78432-78468]:Block[79926-79962]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[78446-78458]:ReturnStatement[79940-79952]"
    }, {
      "left" : "if (len < 0)",
      "right" : "if (len < 0)",
      "info" : "IfStatement[78477-78527]:IfStatement[79971-80021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78490-78527]:Block[79984-80021]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[78504-78517]:ReturnStatement[79998-80011]"
    }, {
      "left" : "if (str.length() <= len)",
      "right" : "if (str.length() <= len)",
      "info" : "IfStatement[78536-78596]:IfStatement[80030-80090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[78561-78596]:Block[80055-80090]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[78575-78586]:ReturnStatement[80069-80080]"
    }, {
      "left" : "return str.substring(str.length() - len);",
      "right" : "return str.substring(str.length() - len);",
      "info" : "ReturnStatement[78605-78646]:ReturnStatement[80099-80140]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[79717-79723]:Modifier[81211-81217]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[79724-79730]:Modifier[81218-81224]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[79731-79737]:SimpleType[81225-81231]"
    }, {
      "left" : "mid",
      "right" : "mid",
      "info" : "SimpleName[79738-79741]:SimpleName[81232-81235]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[79742-79752]:SingleVariableDeclaration[81236-81246]"
    }, {
      "left" : "int pos",
      "right" : "int pos",
      "info" : "SingleVariableDeclaration[79754-79761]:SingleVariableDeclaration[81248-81255]"
    }, {
      "left" : "int len",
      "right" : "int len",
      "info" : "SingleVariableDeclaration[79763-79770]:SingleVariableDeclaration[81257-81264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79772-80114]:Block[81266-81608]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[79782-79835]:IfStatement[81276-81329]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79799-79835]:Block[81293-81329]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[79813-79825]:ReturnStatement[81307-81319]"
    }, {
      "left" : "if (len < 0 || pos > str.length())",
      "right" : "if (len < 0 || pos > str.length())",
      "info" : "IfStatement[79844-79916]:IfStatement[81338-81410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79879-79916]:Block[81373-81410]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[79893-79906]:ReturnStatement[81387-81400]"
    }, {
      "left" : "if (pos < 0)",
      "right" : "if (pos < 0)",
      "info" : "IfStatement[79925-79970]:IfStatement[81419-81464]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[79938-79970]:Block[81432-81464]"
    }, {
      "left" : "pos = 0;",
      "right" : "pos = 0;",
      "info" : "ExpressionStatement[79952-79960]:ExpressionStatement[81446-81454]"
    }, {
      "left" : "if (str.length() <= (pos + len))",
      "right" : "if (str.length() <= (pos + len))",
      "info" : "IfStatement[79979-80062]:IfStatement[81473-81556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[80012-80062]:Block[81506-81556]"
    }, {
      "left" : "return str.substring(pos);",
      "right" : "return str.substring(pos);",
      "info" : "ReturnStatement[80026-80052]:ReturnStatement[81520-81546]"
    }, {
      "left" : "return str.substring(pos, pos + len);",
      "right" : "return str.substring(pos, pos + len);",
      "info" : "ReturnStatement[80071-80108]:ReturnStatement[81565-81602]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[81409-81415]:Modifier[82903-82909]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[81416-81422]:Modifier[82910-82916]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[81423-81429]:SimpleType[82917-82923]"
    }, {
      "left" : "substringBefore",
      "right" : "substringBefore",
      "info" : "SimpleName[81430-81445]:SimpleName[82924-82939]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[81446-81456]:SingleVariableDeclaration[82940-82950]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[81458-81474]:SingleVariableDeclaration[82952-82968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81476-81793]:Block[82970-83287]"
    }, {
      "left" : "if (isEmpty(str) || separator == null)",
      "right" : "if (isEmpty(str) || separator == null)",
      "info" : "IfStatement[81486-81560]:IfStatement[82980-83054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81525-81560]:Block[83019-83054]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[81539-81550]:ReturnStatement[83033-83044]"
    }, {
      "left" : "if (separator.length() == 0)",
      "right" : "if (separator.length() == 0)",
      "info" : "IfStatement[81569-81635]:IfStatement[83063-83129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81598-81635]:Block[83092-83129]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[81612-81625]:ReturnStatement[83106-83119]"
    }, {
      "left" : "int pos = str.indexOf(separator);",
      "right" : "int pos = str.indexOf(separator);",
      "info" : "VariableDeclarationStatement[81644-81677]:VariableDeclarationStatement[83138-83171]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND)",
      "right" : "if (pos == INDEX_NOT_FOUND)",
      "info" : "IfStatement[81686-81749]:IfStatement[83180-83243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[81714-81749]:Block[83208-83243]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[81728-81739]:ReturnStatement[83222-83233]"
    }, {
      "left" : "return str.substring(0, pos);",
      "right" : "return str.substring(0, pos);",
      "info" : "ReturnStatement[81758-81787]:ReturnStatement[83252-83281]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[83013-83019]:Modifier[84507-84513]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[83020-83026]:Modifier[84514-84520]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[83027-83033]:SimpleType[84521-84527]"
    }, {
      "left" : "substringAfter",
      "right" : "substringAfter",
      "info" : "SimpleName[83034-83048]:SimpleName[84528-84542]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[83049-83059]:SingleVariableDeclaration[84543-84553]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[83061-83077]:SingleVariableDeclaration[84555-84571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83079-83389]:Block[84573-84883]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[83089-83142]:IfStatement[84583-84636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83107-83142]:Block[84601-84636]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[83121-83132]:ReturnStatement[84615-84626]"
    }, {
      "left" : "if (separator == null)",
      "right" : "if (separator == null)",
      "info" : "IfStatement[83151-83211]:IfStatement[84645-84705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83174-83211]:Block[84668-84705]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[83188-83201]:ReturnStatement[84682-84695]"
    }, {
      "left" : "int pos = str.indexOf(separator);",
      "right" : "int pos = str.indexOf(separator);",
      "info" : "VariableDeclarationStatement[83220-83253]:VariableDeclarationStatement[84714-84747]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND)",
      "right" : "if (pos == INDEX_NOT_FOUND)",
      "info" : "IfStatement[83262-83327]:IfStatement[84756-84821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[83290-83327]:Block[84784-84821]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[83304-83317]:ReturnStatement[84798-84811]"
    }, {
      "left" : "return str.substring(pos + separator.length());",
      "right" : "return str.substring(pos + separator.length());",
      "info" : "ReturnStatement[83336-83383]:ReturnStatement[84830-84877]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[84607-84613]:Modifier[86101-86107]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[84614-84620]:Modifier[86108-86114]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[84621-84627]:SimpleType[86115-86121]"
    }, {
      "left" : "substringBeforeLast",
      "right" : "substringBeforeLast",
      "info" : "SimpleName[84628-84647]:SimpleName[86122-86141]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[84648-84658]:SingleVariableDeclaration[86142-86152]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[84660-84676]:SingleVariableDeclaration[86154-86170]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84678-84925]:Block[86172-86419]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(separator))",
      "right" : "if (isEmpty(str) || isEmpty(separator))",
      "info" : "IfStatement[84688-84763]:IfStatement[86182-86257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84728-84763]:Block[86222-86257]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[84742-84753]:ReturnStatement[86236-86247]"
    }, {
      "left" : "int pos = str.lastIndexOf(separator);",
      "right" : "int pos = str.lastIndexOf(separator);",
      "info" : "VariableDeclarationStatement[84772-84809]:VariableDeclarationStatement[86266-86303]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND)",
      "right" : "if (pos == INDEX_NOT_FOUND)",
      "info" : "IfStatement[84818-84881]:IfStatement[86312-86375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[84846-84881]:Block[86340-86375]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[84860-84871]:ReturnStatement[86354-86365]"
    }, {
      "left" : "return str.substring(0, pos);",
      "right" : "return str.substring(0, pos);",
      "info" : "ReturnStatement[84890-84919]:ReturnStatement[86384-86413]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[86237-86243]:Modifier[87731-87737]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[86244-86250]:Modifier[87738-87744]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[86251-86257]:SimpleType[87745-87751]"
    }, {
      "left" : "substringAfterLast",
      "right" : "substringAfterLast",
      "info" : "SimpleName[86258-86276]:SimpleName[87752-87770]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[86277-86287]:SingleVariableDeclaration[87771-87781]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[86289-86305]:SingleVariableDeclaration[87783-87799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86307-86668]:Block[87801-88162]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[86317-86370]:IfStatement[87811-87864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86335-86370]:Block[87829-87864]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[86349-86360]:ReturnStatement[87843-87854]"
    }, {
      "left" : "if (isEmpty(separator))",
      "right" : "if (isEmpty(separator))",
      "info" : "IfStatement[86379-86440]:IfStatement[87873-87934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86403-86440]:Block[87897-87934]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[86417-86430]:ReturnStatement[87911-87924]"
    }, {
      "left" : "int pos = str.lastIndexOf(separator);",
      "right" : "int pos = str.lastIndexOf(separator);",
      "info" : "VariableDeclarationStatement[86449-86486]:VariableDeclarationStatement[87943-87980]"
    }, {
      "left" : "if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length()))",
      "right" : "if (pos == INDEX_NOT_FOUND || pos == (str.length() - separator.length()))",
      "info" : "IfStatement[86495-86606]:IfStatement[87989-88100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[86569-86606]:Block[88063-88100]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[86583-86596]:ReturnStatement[88077-88090]"
    }, {
      "left" : "return str.substring(pos + separator.length());",
      "right" : "return str.substring(pos + separator.length());",
      "info" : "ReturnStatement[86615-86662]:ReturnStatement[88109-88156]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[87665-87671]:Modifier[89159-89165]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[87672-87678]:Modifier[89166-89172]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[87679-87685]:SimpleType[89173-89179]"
    }, {
      "left" : "substringBetween",
      "right" : "substringBetween",
      "info" : "SimpleName[87686-87702]:SimpleName[89180-89196]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[87703-87713]:SingleVariableDeclaration[89197-89207]"
    }, {
      "left" : "String tag",
      "right" : "String tag",
      "info" : "SingleVariableDeclaration[87715-87725]:SingleVariableDeclaration[89209-89219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[87727-87782]:Block[89221-89276]"
    }, {
      "left" : "return substringBetween(str, tag, tag);",
      "right" : "return substringBetween(str, tag, tag);",
      "info" : "ReturnStatement[87737-87776]:ReturnStatement[89231-89270]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[89091-89097]:Modifier[90585-90591]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[89098-89104]:Modifier[90592-90598]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[89105-89111]:SimpleType[90599-90605]"
    }, {
      "left" : "substringBetween",
      "right" : "substringBetween",
      "info" : "SimpleName[89112-89128]:SimpleName[90606-90622]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[89129-89139]:SingleVariableDeclaration[90623-90633]"
    }, {
      "left" : "String open",
      "right" : "String open",
      "info" : "SingleVariableDeclaration[89141-89152]:SingleVariableDeclaration[90635-90646]"
    }, {
      "left" : "String close",
      "right" : "String close",
      "info" : "SingleVariableDeclaration[89154-89166]:SingleVariableDeclaration[90648-90660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89168-89567]:Block[90662-91061]"
    }, {
      "left" : "if (str == null || open == null || close == null)",
      "right" : "if (str == null || open == null || close == null)",
      "info" : "IfStatement[89178-89264]:IfStatement[90672-90758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89228-89264]:Block[90722-90758]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[89242-89254]:ReturnStatement[90736-90748]"
    }, {
      "left" : "int start = str.indexOf(open);",
      "right" : "int start = str.indexOf(open);",
      "info" : "VariableDeclarationStatement[89273-89303]:VariableDeclarationStatement[90767-90797]"
    }, {
      "left" : "if (start != INDEX_NOT_FOUND)",
      "right" : "if (start != INDEX_NOT_FOUND)",
      "info" : "IfStatement[89312-89540]:IfStatement[90806-91034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89342-89540]:Block[90836-91034]"
    }, {
      "left" : "int end = str.indexOf(close, start + open.length());",
      "right" : "int end = str.indexOf(close, start + open.length());",
      "info" : "VariableDeclarationStatement[89356-89408]:VariableDeclarationStatement[90850-90902]"
    }, {
      "left" : "if (end != INDEX_NOT_FOUND)",
      "right" : "if (end != INDEX_NOT_FOUND)",
      "info" : "IfStatement[89421-89530]:IfStatement[90915-91024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[89449-89530]:Block[90943-91024]"
    }, {
      "left" : "return str.substring(start + open.length(), end);",
      "right" : "return str.substring(start + open.length(), end);",
      "info" : "ReturnStatement[89467-89516]:ReturnStatement[90961-91010]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[89549-89561]:ReturnStatement[91043-91055]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[90705-90711]:Modifier[92199-92205]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[90712-90718]:Modifier[92206-92212]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[90719-90727]:ArrayType[92213-92221]"
    }, {
      "left" : "substringsBetween",
      "right" : "substringsBetween",
      "info" : "SimpleName[90728-90745]:SimpleName[92222-92239]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[90746-90756]:SingleVariableDeclaration[92240-92250]"
    }, {
      "left" : "String open",
      "right" : "String open",
      "info" : "SingleVariableDeclaration[90758-90769]:SingleVariableDeclaration[92252-92263]"
    }, {
      "left" : "String close",
      "right" : "String close",
      "info" : "SingleVariableDeclaration[90771-90783]:SingleVariableDeclaration[92265-92277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90785-91676]:Block[92279-93170]"
    }, {
      "left" : "if (str == null || isEmpty(open) || isEmpty(close))",
      "right" : "if (str == null || isEmpty(open) || isEmpty(close))",
      "info" : "IfStatement[90795-90883]:IfStatement[92289-92377]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90847-90883]:Block[92341-92377]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[90861-90873]:ReturnStatement[92355-92367]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[90892-90918]:VariableDeclarationStatement[92386-92412]"
    }, {
      "left" : "if (strLen == 0)",
      "right" : "if (strLen == 0)",
      "info" : "IfStatement[90927-91005]:IfStatement[92421-92499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[90944-91005]:Block[92438-92499]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[90958-90995]:ReturnStatement[92452-92489]"
    }, {
      "left" : "int closeLen = close.length();",
      "right" : "int closeLen = close.length();",
      "info" : "VariableDeclarationStatement[91014-91044]:VariableDeclarationStatement[92508-92538]"
    }, {
      "left" : "int openLen = open.length();",
      "right" : "int openLen = open.length();",
      "info" : "VariableDeclarationStatement[91053-91081]:VariableDeclarationStatement[92547-92575]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[91090-91134]:VariableDeclarationStatement[92584-92628]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[91143-91155]:VariableDeclarationStatement[92637-92649]"
    }, {
      "left" : "while (pos < (strLen - closeLen))",
      "right" : "while (pos < (strLen - closeLen))",
      "info" : "WhileStatement[91164-91549]:WhileStatement[92658-93043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91198-91549]:Block[92692-93043]"
    }, {
      "left" : "int start = str.indexOf(open, pos);",
      "right" : "int start = str.indexOf(open, pos);",
      "info" : "VariableDeclarationStatement[91212-91247]:VariableDeclarationStatement[92706-92741]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[91260-91313]:IfStatement[92754-92807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91275-91313]:Block[92769-92807]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[91293-91299]:BreakStatement[92787-92793]"
    }, {
      "left" : "start += openLen;",
      "right" : "start += openLen;",
      "info" : "ExpressionStatement[91326-91343]:ExpressionStatement[92820-92837]"
    }, {
      "left" : "int end = str.indexOf(close, start);",
      "right" : "int end = str.indexOf(close, start);",
      "info" : "VariableDeclarationStatement[91356-91392]:VariableDeclarationStatement[92850-92886]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[91405-91456]:IfStatement[92899-92950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91418-91456]:Block[92912-92950]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[91436-91442]:BreakStatement[92930-92936]"
    }, {
      "left" : "list.add(str.substring(start, end));",
      "right" : "list.add(str.substring(start, end));",
      "info" : "ExpressionStatement[91469-91505]:ExpressionStatement[92963-92999]"
    }, {
      "left" : "pos = end + closeLen;",
      "right" : "pos = end + closeLen;",
      "info" : "ExpressionStatement[91518-91539]:ExpressionStatement[93012-93033]"
    }, {
      "left" : "if (list.isEmpty())",
      "right" : "if (list.isEmpty())",
      "info" : "IfStatement[91558-91614]:IfStatement[93052-93108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[91578-91614]:Block[93072-93108]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[91592-91604]:ReturnStatement[93086-93098]"
    }, {
      "left" : "return list.toArray(new String [list.size()]);",
      "right" : "return list.toArray(new String [list.size()]);",
      "info" : "ReturnStatement[91624-91670]:ReturnStatement[93118-93164]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[92765-92771]:Modifier[94259-94265]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[92772-92778]:Modifier[94266-94272]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[92779-92787]:ArrayType[94273-94281]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[92788-92793]:SimpleName[94282-94287]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[92794-92804]:SingleVariableDeclaration[94288-94298]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[92806-92850]:Block[94300-94344]"
    }, {
      "left" : "return split(str, null, -1);",
      "right" : "return split(str, null, -1);",
      "info" : "ReturnStatement[92816-92844]:ReturnStatement[94310-94338]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[93877-93883]:Modifier[95371-95377]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[93884-93890]:Modifier[95378-95384]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[93891-93899]:ArrayType[95385-95393]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[93900-93905]:SimpleName[95394-95399]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[93906-93916]:SingleVariableDeclaration[95400-95410]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[93918-93936]:SingleVariableDeclaration[95412-95430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[93938-94000]:Block[95432-95494]"
    }, {
      "left" : "return splitWorker(str, separatorChar, false);",
      "right" : "return splitWorker(str, separatorChar, false);",
      "info" : "ReturnStatement[93948-93994]:ReturnStatement[95442-95488]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[95131-95137]:Modifier[96625-96631]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[95138-95144]:Modifier[96632-96638]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[95145-95153]:ArrayType[96639-96647]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[95154-95159]:SimpleName[96648-96653]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[95160-95170]:SingleVariableDeclaration[96654-96664]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[95172-95193]:SingleVariableDeclaration[96666-96687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[95195-95262]:Block[96689-96756]"
    }, {
      "left" : "return splitWorker(str, separatorChars, -1, false);",
      "right" : "return splitWorker(str, separatorChars, -1, false);",
      "info" : "ReturnStatement[95205-95256]:ReturnStatement[96699-96750]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[96703-96709]:Modifier[98197-98203]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[96710-96716]:Modifier[98204-98210]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[96717-96725]:ArrayType[98211-98219]"
    }, {
      "left" : "split",
      "right" : "split",
      "info" : "SimpleName[96726-96731]:SimpleName[98220-98225]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[96732-96742]:SingleVariableDeclaration[98226-98236]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[96744-96765]:SingleVariableDeclaration[98238-98259]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[96767-96774]:SingleVariableDeclaration[98261-98268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[96776-96844]:Block[98270-98338]"
    }, {
      "left" : "return splitWorker(str, separatorChars, max, false);",
      "right" : "return splitWorker(str, separatorChars, max, false);",
      "info" : "ReturnStatement[96786-96838]:ReturnStatement[98280-98332]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[98021-98027]:Modifier[99515-99521]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[98028-98034]:Modifier[99522-99528]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[98035-98043]:ArrayType[99529-99537]"
    }, {
      "left" : "splitByWholeSeparator",
      "right" : "splitByWholeSeparator",
      "info" : "SimpleName[98044-98065]:SimpleName[99538-99559]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[98066-98076]:SingleVariableDeclaration[99560-99570]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[98078-98094]:SingleVariableDeclaration[99572-99588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[98096-98177]:Block[99590-99671]"
    }, {
      "left" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
      "right" : "return splitByWholeSeparatorWorker( str, separator, -1, false ) ;",
      "info" : "ReturnStatement[98106-98171]:ReturnStatement[99600-99665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[99648-99654]:Modifier[101142-101148]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[99655-99661]:Modifier[101149-101155]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[99662-99670]:ArrayType[101156-101164]"
    }, {
      "left" : "splitByWholeSeparator",
      "right" : "splitByWholeSeparator",
      "info" : "SimpleName[99671-99692]:SimpleName[101165-101186]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[99694-99704]:SingleVariableDeclaration[101188-101198]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[99706-99722]:SingleVariableDeclaration[101200-101216]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[99724-99731]:SingleVariableDeclaration[101218-101225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[99734-99813]:Block[101228-101307]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, max, false);",
      "info" : "ReturnStatement[99744-99807]:ReturnStatement[101238-101301]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[101192-101198]:Modifier[102686-102692]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[101199-101205]:Modifier[102693-102699]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[101206-101214]:ArrayType[102700-102708]"
    }, {
      "left" : "splitByWholeSeparatorPreserveAllTokens",
      "right" : "splitByWholeSeparatorPreserveAllTokens",
      "info" : "SimpleName[101215-101253]:SimpleName[102709-102747]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[101254-101264]:SingleVariableDeclaration[102748-102758]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[101266-101282]:SingleVariableDeclaration[102760-102776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[101284-101361]:Block[102778-102855]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, -1, true);",
      "info" : "ReturnStatement[101294-101355]:ReturnStatement[102788-102849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[103050-103056]:Modifier[104544-104550]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[103057-103063]:Modifier[104551-104557]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[103064-103072]:ArrayType[104558-104566]"
    }, {
      "left" : "splitByWholeSeparatorPreserveAllTokens",
      "right" : "splitByWholeSeparatorPreserveAllTokens",
      "info" : "SimpleName[103073-103111]:SimpleName[104567-104605]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[103112-103122]:SingleVariableDeclaration[104606-104616]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[103124-103140]:SingleVariableDeclaration[104618-104634]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[103142-103149]:SingleVariableDeclaration[104636-104643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[103151-103229]:Block[104645-104723]"
    }, {
      "left" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
      "right" : "return splitByWholeSeparatorWorker(str, separator, max, true);",
      "info" : "ReturnStatement[103161-103223]:ReturnStatement[104655-104717]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[103981-103988]:Modifier[105475-105482]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[103989-103995]:Modifier[105483-105489]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[103996-104004]:ArrayType[105490-105498]"
    }, {
      "left" : "splitByWholeSeparatorWorker",
      "right" : "splitByWholeSeparatorWorker",
      "info" : "SimpleName[104005-104032]:SimpleName[105499-105526]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[104033-104043]:SingleVariableDeclaration[105527-105537]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[104045-104061]:SingleVariableDeclaration[105539-105555]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[104063-104070]:SingleVariableDeclaration[105557-105564]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[104129-104154]:SingleVariableDeclaration[105623-105648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104161-106447]:Block[105655-107941]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[104171-104224]:IfStatement[105665-105718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104188-104224]:Block[105682-105718]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[104202-104214]:ReturnStatement[105696-105708]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[104234-104257]:VariableDeclarationStatement[105728-105751]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[104267-104342]:IfStatement[105761-105836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104281-104342]:Block[105775-105836]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[104295-104332]:ReturnStatement[105789-105826]"
    }, {
      "left" : "if ((separator == null) || (EMPTY.equals(separator)))",
      "right" : "if ((separator == null) || (EMPTY.equals(separator)))",
      "info" : "IfStatement[104352-104520]:IfStatement[105846-106014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104406-104520]:Block[105900-106014]"
    }, {
      "left" : "return splitWorker(str, null, max, preserveAllTokens);",
      "right" : "return splitWorker(str, null, max, preserveAllTokens);",
      "info" : "ReturnStatement[104456-104510]:ReturnStatement[105950-106004]"
    }, {
      "left" : "int separatorLength = separator.length();",
      "right" : "int separatorLength = separator.length();",
      "info" : "VariableDeclarationStatement[104530-104571]:VariableDeclarationStatement[106024-106065]"
    }, {
      "left" : "ArrayList<String> substrings = new ArrayList<String>();",
      "right" : "ArrayList<String> substrings = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[104581-104636]:VariableDeclarationStatement[106075-106130]"
    }, {
      "left" : "int numberOfSubstrings = 0;",
      "right" : "int numberOfSubstrings = 0;",
      "info" : "VariableDeclarationStatement[104645-104672]:VariableDeclarationStatement[106139-106166]"
    }, {
      "left" : "int beg = 0;",
      "right" : "int beg = 0;",
      "info" : "VariableDeclarationStatement[104681-104693]:VariableDeclarationStatement[106175-106187]"
    }, {
      "left" : "int end = 0;",
      "right" : "int end = 0;",
      "info" : "VariableDeclarationStatement[104702-104714]:VariableDeclarationStatement[106196-106208]"
    }, {
      "left" : "while (end < len)",
      "right" : "while (end < len)",
      "info" : "WhileStatement[104723-106374]:WhileStatement[106217-107868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104741-106374]:Block[106235-107868]"
    }, {
      "left" : "end = str.indexOf(separator, beg);",
      "right" : "end = str.indexOf(separator, beg);",
      "info" : "ExpressionStatement[104755-104789]:ExpressionStatement[106249-106283]"
    }, {
      "left" : "if (end > -1)",
      "right" : "if (end > -1)",
      "info" : "IfStatement[104803-106364]:IfStatement[106297-107858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104817-106179]:Block[106311-107673]"
    }, {
      "left" : "if (end > beg)",
      "right" : "if (end > beg)",
      "info" : "IfStatement[104835-106165]:IfStatement[106329-107659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104850-105618]:Block[106344-107112]"
    }, {
      "left" : "numberOfSubstrings += 1;",
      "right" : "numberOfSubstrings += 1;",
      "info" : "ExpressionStatement[104872-104896]:ExpressionStatement[106366-106390]"
    }, {
      "left" : "if (numberOfSubstrings == max)",
      "right" : "if (numberOfSubstrings == max)",
      "info" : "IfStatement[104918-105600]:IfStatement[106412-107094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[104949-105067]:Block[106443-106561]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[104975-104985]:ExpressionStatement[106469-106479]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[105010-105045]:ExpressionStatement[106504-106539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105073-105600]:Block[106567-107094]"
    }, {
      "left" : "substrings.add(str.substring(beg, end));",
      "right" : "substrings.add(str.substring(beg, end));",
      "info" : "ExpressionStatement[105257-105297]:ExpressionStatement[106751-106791]"
    }, {
      "left" : "beg = end + separatorLength;",
      "right" : "beg = end + separatorLength;",
      "info" : "ExpressionStatement[105550-105578]:ExpressionStatement[107044-107072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105624-106165]:Block[107118-107659]"
    }, {
      "left" : "if (preserveAllTokens)",
      "right" : "if (preserveAllTokens)",
      "info" : "IfStatement[105733-106098]:IfStatement[107227-107592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105756-106098]:Block[107250-107592]"
    }, {
      "left" : "numberOfSubstrings += 1;",
      "right" : "numberOfSubstrings += 1;",
      "info" : "ExpressionStatement[105782-105806]:ExpressionStatement[107276-107300]"
    }, {
      "left" : "if (numberOfSubstrings == max)",
      "right" : "if (numberOfSubstrings == max)",
      "info" : "IfStatement[105831-106076]:IfStatement[107325-107570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105862-105992]:Block[107356-107486]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[105892-105902]:ExpressionStatement[107386-107396]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[105931-105966]:ExpressionStatement[107425-107460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[105998-106076]:Block[107492-107570]"
    }, {
      "left" : "substrings.add(EMPTY);",
      "right" : "substrings.add(EMPTY);",
      "info" : "ExpressionStatement[106028-106050]:ExpressionStatement[107522-107544]"
    }, {
      "left" : "beg = end + separatorLength;",
      "right" : "beg = end + separatorLength;",
      "info" : "ExpressionStatement[106119-106147]:ExpressionStatement[107613-107641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[106185-106364]:Block[107679-107858]"
    }, {
      "left" : "substrings.add(str.substring(beg));",
      "right" : "substrings.add(str.substring(beg));",
      "info" : "ExpressionStatement[106288-106323]:ExpressionStatement[107782-107817]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[106340-106350]:ExpressionStatement[107834-107844]"
    }, {
      "left" : "return substrings.toArray(new String[substrings.size()]);",
      "right" : "return substrings.toArray(new String[substrings.size()]);",
      "info" : "ReturnStatement[106384-106441]:ReturnStatement[107878-107935]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[107693-107699]:Modifier[109187-109193]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[107700-107706]:Modifier[109194-109200]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[107707-107715]:ArrayType[109201-109209]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[107716-107738]:SimpleName[109210-109232]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[107739-107749]:SingleVariableDeclaration[109233-109243]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[107751-107807]:Block[109245-109301]"
    }, {
      "left" : "return splitWorker(str, null, -1, true);",
      "right" : "return splitWorker(str, null, -1, true);",
      "info" : "ReturnStatement[107761-107801]:ReturnStatement[109255-109295]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[109592-109598]:Modifier[111086-111092]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[109599-109605]:Modifier[111093-111099]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[109606-109614]:ArrayType[111100-111108]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[109615-109637]:SimpleName[111109-111131]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[109638-109648]:SingleVariableDeclaration[111132-111142]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[109650-109668]:SingleVariableDeclaration[111144-111162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[109670-109731]:Block[111164-111225]"
    }, {
      "left" : "return splitWorker(str, separatorChar, true);",
      "right" : "return splitWorker(str, separatorChar, true);",
      "info" : "ReturnStatement[109680-109725]:ReturnStatement[111174-111219]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[110317-110324]:Modifier[111811-111818]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[110325-110331]:Modifier[111819-111825]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[110332-110340]:ArrayType[111826-111834]"
    }, {
      "left" : "splitWorker",
      "right" : "splitWorker",
      "info" : "SimpleName[110341-110352]:SimpleName[111835-111846]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[110353-110363]:SingleVariableDeclaration[111847-111857]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[110365-110383]:SingleVariableDeclaration[111859-111877]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[110385-110410]:SingleVariableDeclaration[111879-111904]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110412-111386]:Block[111906-112880]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[110469-110522]:IfStatement[111963-112016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110486-110522]:Block[111980-112016]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[110500-110512]:ReturnStatement[111994-112006]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[110531-110554]:VariableDeclarationStatement[112025-112048]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[110563-110638]:IfStatement[112057-112132]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110577-110638]:Block[112071-112132]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[110591-110628]:ReturnStatement[112085-112122]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[110647-110691]:VariableDeclarationStatement[112141-112185]"
    }, {
      "left" : "int i = 0, start = 0;",
      "right" : "int i = 0, start = 0;",
      "info" : "VariableDeclarationStatement[110700-110721]:VariableDeclarationStatement[112194-112215]"
    }, {
      "left" : "boolean match = false;",
      "right" : "boolean match = false;",
      "info" : "VariableDeclarationStatement[110730-110752]:VariableDeclarationStatement[112224-112246]"
    }, {
      "left" : "boolean lastMatch = false;",
      "right" : "boolean lastMatch = false;",
      "info" : "VariableDeclarationStatement[110761-110787]:VariableDeclarationStatement[112255-112281]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[110796-111212]:WhileStatement[112290-112706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110812-111212]:Block[112306-112706]"
    }, {
      "left" : "if (str.charAt(i) == separatorChar)",
      "right" : "if (str.charAt(i) == separatorChar)",
      "info" : "IfStatement[110826-111128]:IfStatement[112320-112622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110862-111128]:Block[112356-112622]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[110880-111059]:IfStatement[112374-112553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[110912-111059]:Block[112406-112553]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[110934-110968]:ExpressionStatement[112428-112462]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[110989-111003]:ExpressionStatement[112483-112497]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[111024-111041]:ExpressionStatement[112518-112535]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[111076-111088]:ExpressionStatement[112570-112582]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[111105-111114]:ContinueStatement[112599-112608]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[111141-111159]:ExpressionStatement[112635-112653]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[111172-111185]:ExpressionStatement[112666-112679]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[111198-111202]:ExpressionStatement[112692-112696]"
    }, {
      "left" : "if (match || (preserveAllTokens && lastMatch))",
      "right" : "if (match || (preserveAllTokens && lastMatch))",
      "info" : "IfStatement[111221-111326]:IfStatement[112715-112820]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[111268-111326]:Block[112762-112820]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[111282-111316]:ExpressionStatement[112776-112810]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[111335-111380]:ReturnStatement[112829-112874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[113271-113277]:Modifier[114765-114771]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[113278-113284]:Modifier[114772-114778]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[113285-113293]:ArrayType[114779-114787]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[113294-113316]:SimpleName[114788-114810]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[113317-113327]:SingleVariableDeclaration[114811-114821]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[113329-113350]:SingleVariableDeclaration[114823-114844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[113352-113418]:Block[114846-114912]"
    }, {
      "left" : "return splitWorker(str, separatorChars, -1, true);",
      "right" : "return splitWorker(str, separatorChars, -1, true);",
      "info" : "ReturnStatement[113362-113412]:ReturnStatement[114856-114906]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[115413-115419]:Modifier[116907-116913]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[115420-115426]:Modifier[116914-116920]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[115427-115435]:ArrayType[116921-116929]"
    }, {
      "left" : "splitPreserveAllTokens",
      "right" : "splitPreserveAllTokens",
      "info" : "SimpleName[115436-115458]:SimpleName[116930-116952]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[115459-115469]:SingleVariableDeclaration[116953-116963]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[115471-115492]:SingleVariableDeclaration[116965-116986]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[115494-115501]:SingleVariableDeclaration[116988-116995]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[115503-115570]:Block[116997-117064]"
    }, {
      "left" : "return splitWorker(str, separatorChars, max, true);",
      "right" : "return splitWorker(str, separatorChars, max, true);",
      "info" : "ReturnStatement[115513-115564]:ReturnStatement[117007-117058]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[116277-116284]:Modifier[117771-117778]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[116285-116291]:Modifier[117779-117785]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[116292-116300]:ArrayType[117786-117794]"
    }, {
      "left" : "splitWorker",
      "right" : "splitWorker",
      "info" : "SimpleName[116301-116312]:SimpleName[117795-117806]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[116313-116323]:SingleVariableDeclaration[117807-117817]"
    }, {
      "left" : "String separatorChars",
      "right" : "String separatorChars",
      "info" : "SingleVariableDeclaration[116325-116346]:SingleVariableDeclaration[117819-117840]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[116348-116355]:SingleVariableDeclaration[117842-117849]"
    }, {
      "left" : "boolean preserveAllTokens",
      "right" : "boolean preserveAllTokens",
      "info" : "SingleVariableDeclaration[116357-116382]:SingleVariableDeclaration[117851-117876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116384-119301]:Block[117878-120795]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[116564-116617]:IfStatement[118058-118111]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116581-116617]:Block[118075-118111]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[116595-116607]:ReturnStatement[118089-118101]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[116626-116649]:VariableDeclarationStatement[118120-118143]"
    }, {
      "left" : "if (len == 0)",
      "right" : "if (len == 0)",
      "info" : "IfStatement[116658-116733]:IfStatement[118152-118227]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116672-116733]:Block[118166-118227]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[116686-116723]:ReturnStatement[118180-118217]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[116742-116786]:VariableDeclarationStatement[118236-118280]"
    }, {
      "left" : "int sizePlus1 = 1;",
      "right" : "int sizePlus1 = 1;",
      "info" : "VariableDeclarationStatement[116795-116813]:VariableDeclarationStatement[118289-118307]"
    }, {
      "left" : "int i = 0, start = 0;",
      "right" : "int i = 0, start = 0;",
      "info" : "VariableDeclarationStatement[116822-116843]:VariableDeclarationStatement[118316-118337]"
    }, {
      "left" : "boolean match = false;",
      "right" : "boolean match = false;",
      "info" : "VariableDeclarationStatement[116852-116874]:VariableDeclarationStatement[118346-118368]"
    }, {
      "left" : "boolean lastMatch = false;",
      "right" : "boolean lastMatch = false;",
      "info" : "VariableDeclarationStatement[116883-116909]:VariableDeclarationStatement[118377-118403]"
    }, {
      "left" : "if (separatorChars == null)",
      "right" : "if (separatorChars == null)",
      "info" : "IfStatement[116918-119127]:IfStatement[118412-120621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[116946-117656]:Block[118440-119150]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[117011-117646]:WhileStatement[118505-119140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117027-117646]:Block[118521-119140]"
    }, {
      "left" : "if (Character.isWhitespace(str.charAt(i)))",
      "right" : "if (Character.isWhitespace(str.charAt(i)))",
      "info" : "IfStatement[117045-117546]:IfStatement[118539-119040]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117088-117546]:Block[118582-119040]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[117110-117465]:IfStatement[118604-118959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117142-117465]:Block[118636-118959]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[117168-117185]:ExpressionStatement[118662-118679]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[117210-117345]:IfStatement[118704-118839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117234-117345]:Block[118728-118839]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[117264-117272]:ExpressionStatement[118758-118766]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[117301-117319]:ExpressionStatement[118795-118813]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[117370-117404]:ExpressionStatement[118864-118898]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[117429-117443]:ExpressionStatement[118923-118937]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[117486-117498]:ExpressionStatement[118980-118992]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[117519-117528]:ContinueStatement[119013-119022]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[117563-117581]:ExpressionStatement[119057-119075]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[117598-117611]:ExpressionStatement[119092-119105]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[117628-117632]:ExpressionStatement[119122-119126]"
    }, {
      "left" : "if (separatorChars.length() == 1)",
      "right" : "if (separatorChars.length() == 1)",
      "info" : "IfStatement[117662-119127]:IfStatement[119156-120621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117696-118428]:Block[119190-119922]"
    }, {
      "left" : "char sep = separatorChars.charAt(0);",
      "right" : "char sep = separatorChars.charAt(0);",
      "info" : "VariableDeclarationStatement[117751-117787]:VariableDeclarationStatement[119245-119281]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[117800-118418]:WhileStatement[119294-119912]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117816-118418]:Block[119310-119912]"
    }, {
      "left" : "if (str.charAt(i) == sep)",
      "right" : "if (str.charAt(i) == sep)",
      "info" : "IfStatement[117834-118318]:IfStatement[119328-119812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117860-118318]:Block[119354-119812]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[117882-118237]:IfStatement[119376-119731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[117914-118237]:Block[119408-119731]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[117940-117957]:ExpressionStatement[119434-119451]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[117982-118117]:IfStatement[119476-119611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118006-118117]:Block[119500-119611]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[118036-118044]:ExpressionStatement[119530-119538]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[118073-118091]:ExpressionStatement[119567-119585]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[118142-118176]:ExpressionStatement[119636-119670]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[118201-118215]:ExpressionStatement[119695-119709]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[118258-118270]:ExpressionStatement[119752-119764]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[118291-118300]:ContinueStatement[119785-119794]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[118335-118353]:ExpressionStatement[119829-119847]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[118370-118383]:ExpressionStatement[119864-119877]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[118400-118404]:ExpressionStatement[119894-119898]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118434-119127]:Block[119928-120621]"
    }, {
      "left" : "while (i < len)",
      "right" : "while (i < len)",
      "info" : "WhileStatement[118477-119117]:WhileStatement[119971-120611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118493-119117]:Block[119987-120611]"
    }, {
      "left" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
      "right" : "if (separatorChars.indexOf(str.charAt(i)) >= 0)",
      "info" : "IfStatement[118511-119017]:IfStatement[120005-120511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118559-119017]:Block[120053-120511]"
    }, {
      "left" : "if (match || preserveAllTokens)",
      "right" : "if (match || preserveAllTokens)",
      "info" : "IfStatement[118581-118936]:IfStatement[120075-120430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118613-118936]:Block[120107-120430]"
    }, {
      "left" : "lastMatch = true;",
      "right" : "lastMatch = true;",
      "info" : "ExpressionStatement[118639-118656]:ExpressionStatement[120133-120150]"
    }, {
      "left" : "if (sizePlus1++ == max)",
      "right" : "if (sizePlus1++ == max)",
      "info" : "IfStatement[118681-118816]:IfStatement[120175-120310]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[118705-118816]:Block[120199-120310]"
    }, {
      "left" : "i = len;",
      "right" : "i = len;",
      "info" : "ExpressionStatement[118735-118743]:ExpressionStatement[120229-120237]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[118772-118790]:ExpressionStatement[120266-120284]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[118841-118875]:ExpressionStatement[120335-120369]"
    }, {
      "left" : "match = false;",
      "right" : "match = false;",
      "info" : "ExpressionStatement[118900-118914]:ExpressionStatement[120394-120408]"
    }, {
      "left" : "start = ++i;",
      "right" : "start = ++i;",
      "info" : "ExpressionStatement[118957-118969]:ExpressionStatement[120451-120463]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[118990-118999]:ContinueStatement[120484-120493]"
    }, {
      "left" : "lastMatch = false;",
      "right" : "lastMatch = false;",
      "info" : "ExpressionStatement[119034-119052]:ExpressionStatement[120528-120546]"
    }, {
      "left" : "match = true;",
      "right" : "match = true;",
      "info" : "ExpressionStatement[119069-119082]:ExpressionStatement[120563-120576]"
    }, {
      "left" : "i++;",
      "right" : "i++;",
      "info" : "ExpressionStatement[119099-119103]:ExpressionStatement[120593-120597]"
    }, {
      "left" : "if (match || (preserveAllTokens && lastMatch))",
      "right" : "if (match || (preserveAllTokens && lastMatch))",
      "info" : "IfStatement[119136-119241]:IfStatement[120630-120735]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[119183-119241]:Block[120677-120735]"
    }, {
      "left" : "list.add(str.substring(start, i));",
      "right" : "list.add(str.substring(start, i));",
      "info" : "ExpressionStatement[119197-119231]:ExpressionStatement[120691-120725]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[119250-119295]:ReturnStatement[120744-120789]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[120397-120403]:Modifier[121891-121897]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[120404-120410]:Modifier[121898-121904]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[120411-120419]:ArrayType[121905-121913]"
    }, {
      "left" : "splitByCharacterType",
      "right" : "splitByCharacterType",
      "info" : "SimpleName[120420-120440]:SimpleName[121914-121934]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[120441-120451]:SingleVariableDeclaration[121935-121945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[120453-120509]:Block[121947-122003]"
    }, {
      "left" : "return splitByCharacterType(str, false);",
      "right" : "return splitByCharacterType(str, false);",
      "info" : "ReturnStatement[120463-120503]:ReturnStatement[121957-121997]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[122012-122018]:Modifier[123506-123512]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[122019-122025]:Modifier[123513-123519]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[122026-122034]:ArrayType[123520-123528]"
    }, {
      "left" : "splitByCharacterTypeCamelCase",
      "right" : "splitByCharacterTypeCamelCase",
      "info" : "SimpleName[122035-122064]:SimpleName[123529-123558]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[122065-122075]:SingleVariableDeclaration[123559-123569]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[122077-122132]:Block[123571-123626]"
    }, {
      "left" : "return splitByCharacterType(str, true);",
      "right" : "return splitByCharacterType(str, true);",
      "info" : "ReturnStatement[122087-122126]:ReturnStatement[123581-123620]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[122983-122990]:Modifier[124477-124484]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[122991-122997]:Modifier[124485-124491]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[122998-123006]:ArrayType[124492-124500]"
    }, {
      "left" : "splitByCharacterType",
      "right" : "splitByCharacterType",
      "info" : "SimpleName[123007-123027]:SimpleName[124501-124521]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[123028-123038]:SingleVariableDeclaration[124522-124532]"
    }, {
      "left" : "boolean camelCase",
      "right" : "boolean camelCase",
      "info" : "SingleVariableDeclaration[123040-123057]:SingleVariableDeclaration[124534-124551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123059-124256]:Block[124553-125750]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[123069-123122]:IfStatement[124563-124616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123086-123122]:Block[124580-124616]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[123100-123112]:ReturnStatement[124594-124606]"
    }, {
      "left" : "if (str.length() == 0)",
      "right" : "if (str.length() == 0)",
      "info" : "IfStatement[123131-123215]:IfStatement[124625-124709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123154-123215]:Block[124648-124709]"
    }, {
      "left" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "right" : "return ArrayUtils.EMPTY_STRING_ARRAY;",
      "info" : "ReturnStatement[123168-123205]:ReturnStatement[124662-124699]"
    }, {
      "left" : "char[] c = str.toCharArray();",
      "right" : "char[] c = str.toCharArray();",
      "info" : "VariableDeclarationStatement[123224-123253]:VariableDeclarationStatement[124718-124747]"
    }, {
      "left" : "List<String> list = new ArrayList<String>();",
      "right" : "List<String> list = new ArrayList<String>();",
      "info" : "VariableDeclarationStatement[123262-123306]:VariableDeclarationStatement[124756-124800]"
    }, {
      "left" : "int tokenStart = 0;",
      "right" : "int tokenStart = 0;",
      "info" : "VariableDeclarationStatement[123315-123334]:VariableDeclarationStatement[124809-124828]"
    }, {
      "left" : "int currentType = Character.getType(c[tokenStart]);",
      "right" : "int currentType = Character.getType(c[tokenStart]);",
      "info" : "VariableDeclarationStatement[123343-123394]:VariableDeclarationStatement[124837-124888]"
    }, {
      "left" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
      "right" : "for (int pos = tokenStart + 1; pos < c.length; pos++)",
      "info" : "ForStatement[123403-124128]:ForStatement[124897-125622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123457-124128]:Block[124951-125622]"
    }, {
      "left" : "int type = Character.getType(c[pos]);",
      "right" : "int type = Character.getType(c[pos]);",
      "info" : "VariableDeclarationStatement[123471-123508]:VariableDeclarationStatement[124965-125002]"
    }, {
      "left" : "if (type == currentType)",
      "right" : "if (type == currentType)",
      "info" : "IfStatement[123521-123587]:IfStatement[125015-125081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123546-123587]:Block[125040-125081]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[123564-123573]:ContinueStatement[125058-125067]"
    }, {
      "left" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
      "right" : "if (camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER)",
      "info" : "IfStatement[123600-124086]:IfStatement[125094-125580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123698-123960]:Block[125192-125454]"
    }, {
      "left" : "int newTokenStart = pos - 1;",
      "right" : "int newTokenStart = pos - 1;",
      "info" : "VariableDeclarationStatement[123716-123744]:VariableDeclarationStatement[125210-125238]"
    }, {
      "left" : "if (newTokenStart != tokenStart)",
      "right" : "if (newTokenStart != tokenStart)",
      "info" : "IfStatement[123761-123946]:IfStatement[125255-125440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123794-123946]:Block[125288-125440]"
    }, {
      "left" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, newTokenStart - tokenStart));",
      "info" : "ExpressionStatement[123816-123880]:ExpressionStatement[125310-125374]"
    }, {
      "left" : "tokenStart = newTokenStart;",
      "right" : "tokenStart = newTokenStart;",
      "info" : "ExpressionStatement[123901-123928]:ExpressionStatement[125395-125422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[123966-124086]:Block[125460-125580]"
    }, {
      "left" : "list.add(new String(c, tokenStart, pos - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, pos - tokenStart));",
      "info" : "ExpressionStatement[123984-124038]:ExpressionStatement[125478-125532]"
    }, {
      "left" : "tokenStart = pos;",
      "right" : "tokenStart = pos;",
      "info" : "ExpressionStatement[124055-124072]:ExpressionStatement[125549-125566]"
    }, {
      "left" : "currentType = type;",
      "right" : "currentType = type;",
      "info" : "ExpressionStatement[124099-124118]:ExpressionStatement[125593-125612]"
    }, {
      "left" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
      "right" : "list.add(new String(c, tokenStart, c.length - tokenStart));",
      "info" : "ExpressionStatement[124137-124196]:ExpressionStatement[125631-125690]"
    }, {
      "left" : "return list.toArray(new String[list.size()]);",
      "right" : "return list.toArray(new String[list.size()]);",
      "info" : "ReturnStatement[124205-124250]:ReturnStatement[125699-125744]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[125094-125100]:Modifier[126588-126594]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[125101-125107]:Modifier[126595-126601]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[125108-125114]:SimpleType[126602-126608]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[125115-125119]:SimpleName[126609-126613]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[125120-125134]:SingleVariableDeclaration[126614-126628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[125136-125177]:Block[126630-126671]"
    }, {
      "left" : "return join(array, null);",
      "right" : "return join(array, null);",
      "info" : "ReturnStatement[125146-125171]:ReturnStatement[126640-126665]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[126071-126077]:Modifier[127565-127571]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[126078-126084]:Modifier[127572-127578]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[126085-126091]:SimpleType[127579-127585]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[126092-126096]:SimpleName[127586-127590]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[126097-126111]:SingleVariableDeclaration[127591-127605]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[126113-126127]:SingleVariableDeclaration[127607-127621]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126129-126257]:Block[127623-127751]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[126139-126194]:IfStatement[127633-127688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[126158-126194]:Block[127652-127688]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[126172-126184]:ReturnStatement[127666-127678]"
    }, {
      "left" : "return join(array, separator, 0, array.length);",
      "right" : "return join(array, separator, 0, array.length);",
      "info" : "ReturnStatement[126204-126251]:ReturnStatement[127698-127745]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[127427-127433]:Modifier[128921-128927]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[127434-127440]:Modifier[128928-128934]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[127441-127447]:SimpleType[128935-128941]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[127448-127452]:SimpleName[128942-128946]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[127453-127467]:SingleVariableDeclaration[128947-128961]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[127469-127483]:SingleVariableDeclaration[128963-128977]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[127485-127499]:SingleVariableDeclaration[128979-128993]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[127501-127513]:SingleVariableDeclaration[128995-129007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127515-128124]:Block[129009-129618]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[127525-127580]:IfStatement[129019-129074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127544-127580]:Block[129038-129074]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[127558-127570]:ReturnStatement[129052-129064]"
    }, {
      "left" : "int bufSize = (endIndex - startIndex);",
      "right" : "int bufSize = (endIndex - startIndex);",
      "info" : "VariableDeclarationStatement[127589-127627]:VariableDeclarationStatement[129083-129121]"
    }, {
      "left" : "if (bufSize <= 0)",
      "right" : "if (bufSize <= 0)",
      "info" : "IfStatement[127636-127691]:IfStatement[129130-129185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127654-127691]:Block[129148-129185]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[127668-127681]:ReturnStatement[129162-129175]"
    }, {
      "left" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);",
      "right" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);",
      "info" : "ExpressionStatement[127701-127791]:ExpressionStatement[129195-129285]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(bufSize);",
      "right" : "StringBuilder buf = new StringBuilder(bufSize);",
      "info" : "VariableDeclarationStatement[127800-127847]:VariableDeclarationStatement[129294-129341]"
    }, {
      "left" : "for (int i = startIndex; i < endIndex; i++)",
      "right" : "for (int i = startIndex; i < endIndex; i++)",
      "info" : "ForStatement[127857-128087]:ForStatement[129351-129581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127901-128087]:Block[129395-129581]"
    }, {
      "left" : "if (i > startIndex)",
      "right" : "if (i > startIndex)",
      "info" : "IfStatement[127915-127989]:IfStatement[129409-129483]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[127935-127989]:Block[129429-129483]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[127953-127975]:ExpressionStatement[129447-129469]"
    }, {
      "left" : "if (array[i] != null)",
      "right" : "if (array[i] != null)",
      "info" : "IfStatement[128002-128077]:IfStatement[129496-129571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[128024-128077]:Block[129518-129571]"
    }, {
      "left" : "buf.append(array[i]);",
      "right" : "buf.append(array[i]);",
      "info" : "ExpressionStatement[128042-128063]:ExpressionStatement[129536-129557]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[128096-128118]:ReturnStatement[129590-129612]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[129159-129165]:Modifier[130653-130659]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[129166-129172]:Modifier[130660-130666]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[129173-129179]:SimpleType[130667-130673]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[129180-129184]:SimpleName[130674-130678]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[129185-129199]:SingleVariableDeclaration[130679-130693]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[129201-129217]:SingleVariableDeclaration[130695-130711]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129219-129346]:Block[130713-130840]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[129229-129284]:IfStatement[130723-130778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[129248-129284]:Block[130742-130778]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[129262-129274]:ReturnStatement[130756-130768]"
    }, {
      "left" : "return join(array, separator, 0, array.length);",
      "right" : "return join(array, separator, 0, array.length);",
      "info" : "ReturnStatement[129293-129340]:ReturnStatement[130787-130834]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[130656-130662]:Modifier[132150-132156]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[130663-130669]:Modifier[132157-132163]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[130670-130676]:SimpleType[132164-132170]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[130677-130681]:SimpleName[132171-132175]"
    }, {
      "left" : "Object[] array",
      "right" : "Object[] array",
      "info" : "SingleVariableDeclaration[130682-130696]:SingleVariableDeclaration[132176-132190]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[130698-130714]:SingleVariableDeclaration[132192-132208]"
    }, {
      "left" : "int startIndex",
      "right" : "int startIndex",
      "info" : "SingleVariableDeclaration[130716-130730]:SingleVariableDeclaration[132210-132224]"
    }, {
      "left" : "int endIndex",
      "right" : "int endIndex",
      "info" : "SingleVariableDeclaration[130732-130744]:SingleVariableDeclaration[132226-132238]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130746-131640]:Block[132240-133134]"
    }, {
      "left" : "if (array == null)",
      "right" : "if (array == null)",
      "info" : "IfStatement[130756-130811]:IfStatement[132250-132305]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130775-130811]:Block[132269-132305]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[130789-130801]:ReturnStatement[132283-132295]"
    }, {
      "left" : "if (separator == null)",
      "right" : "if (separator == null)",
      "info" : "IfStatement[130820-130885]:IfStatement[132314-132379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[130843-130885]:Block[132337-132379]"
    }, {
      "left" : "separator = EMPTY;",
      "right" : "separator = EMPTY;",
      "info" : "ExpressionStatement[130857-130875]:ExpressionStatement[132351-132369]"
    }, {
      "left" : "int bufSize = (endIndex - startIndex);",
      "right" : "int bufSize = (endIndex - startIndex);",
      "info" : "VariableDeclarationStatement[131063-131101]:VariableDeclarationStatement[132557-132595]"
    }, {
      "left" : "if (bufSize <= 0)",
      "right" : "if (bufSize <= 0)",
      "info" : "IfStatement[131110-131165]:IfStatement[132604-132659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131128-131165]:Block[132622-132659]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[131142-131155]:ReturnStatement[132636-132649]"
    }, {
      "left" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n                        + separator.length());",
      "right" : "bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n                        + separator.length());",
      "info" : "ExpressionStatement[131175-131306]:ExpressionStatement[132669-132800]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(bufSize);",
      "right" : "StringBuilder buf = new StringBuilder(bufSize);",
      "info" : "VariableDeclarationStatement[131316-131363]:VariableDeclarationStatement[132810-132857]"
    }, {
      "left" : "for (int i = startIndex; i < endIndex; i++)",
      "right" : "for (int i = startIndex; i < endIndex; i++)",
      "info" : "ForStatement[131373-131603]:ForStatement[132867-133097]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131417-131603]:Block[132911-133097]"
    }, {
      "left" : "if (i > startIndex)",
      "right" : "if (i > startIndex)",
      "info" : "IfStatement[131431-131505]:IfStatement[132925-132999]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131451-131505]:Block[132945-132999]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[131469-131491]:ExpressionStatement[132963-132985]"
    }, {
      "left" : "if (array[i] != null)",
      "right" : "if (array[i] != null)",
      "info" : "IfStatement[131518-131593]:IfStatement[133012-133087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[131540-131593]:Block[133034-133087]"
    }, {
      "left" : "buf.append(array[i]);",
      "right" : "buf.append(array[i]);",
      "info" : "ExpressionStatement[131558-131579]:ExpressionStatement[133052-133073]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[131612-131634]:ReturnStatement[133106-133128]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[132277-132283]:Modifier[133771-133777]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[132284-132290]:Modifier[133778-133784]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[132291-132297]:SimpleType[133785-133791]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[132298-132302]:SimpleName[133792-133796]"
    }, {
      "left" : "Iterator<?> iterator",
      "right" : "Iterator<?> iterator",
      "info" : "SingleVariableDeclaration[132303-132323]:SingleVariableDeclaration[133797-133817]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[132325-132339]:SingleVariableDeclaration[133819-133833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132341-133123]:Block[133835-134617]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[132423-132481]:IfStatement[133917-133975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132445-132481]:Block[133939-133975]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[132459-132471]:ReturnStatement[133953-133965]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[132490-132552]:IfStatement[133984-134046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132515-132552]:Block[134009-134046]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[132529-132542]:ReturnStatement[134023-134036]"
    }, {
      "left" : "Object first = iterator.next();",
      "right" : "Object first = iterator.next();",
      "info" : "VariableDeclarationStatement[132561-132592]:VariableDeclarationStatement[134055-134086]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[132601-132685]:IfStatement[134095-134179]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132626-132685]:Block[134120-134179]"
    }, {
      "left" : "return ObjectUtils.toString(first);",
      "right" : "return ObjectUtils.toString(first);",
      "info" : "ReturnStatement[132640-132675]:ReturnStatement[134134-134169]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(256);",
      "right" : "StringBuilder buf = new StringBuilder(256);",
      "info" : "VariableDeclarationStatement[132727-132770]:VariableDeclarationStatement[134221-134264]"
    }, {
      "left" : "if (first != null)",
      "right" : "if (first != null)",
      "info" : "IfStatement[132821-132882]:IfStatement[134315-134376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132840-132882]:Block[134334-134376]"
    }, {
      "left" : "buf.append(first);",
      "right" : "buf.append(first);",
      "info" : "ExpressionStatement[132854-132872]:ExpressionStatement[134348-134366]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[132892-133085]:WhileStatement[134386-134579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[132919-133085]:Block[134413-134579]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[132933-132955]:ExpressionStatement[134427-134449]"
    }, {
      "left" : "Object obj = iterator.next();",
      "right" : "Object obj = iterator.next();",
      "info" : "VariableDeclarationStatement[132968-132997]:VariableDeclarationStatement[134462-134491]"
    }, {
      "left" : "if (obj != null)",
      "right" : "if (obj != null)",
      "info" : "IfStatement[133010-133075]:IfStatement[134504-134569]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133027-133075]:Block[134521-134569]"
    }, {
      "left" : "buf.append(obj);",
      "right" : "buf.append(obj);",
      "info" : "ExpressionStatement[133045-133061]:ExpressionStatement[134539-134555]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[133095-133117]:ReturnStatement[134589-134611]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[133746-133752]:Modifier[135240-135246]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[133753-133759]:Modifier[135247-135253]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[133760-133766]:SimpleType[135254-135260]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[133767-133771]:SimpleName[135261-135265]"
    }, {
      "left" : "Iterator<?> iterator",
      "right" : "Iterator<?> iterator",
      "info" : "SingleVariableDeclaration[133772-133792]:SingleVariableDeclaration[135266-135286]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[133794-133810]:SingleVariableDeclaration[135288-135304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133812-134648]:Block[135306-136142]"
    }, {
      "left" : "if (iterator == null)",
      "right" : "if (iterator == null)",
      "info" : "IfStatement[133894-133952]:IfStatement[135388-135446]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133916-133952]:Block[135410-135446]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[133930-133942]:ReturnStatement[135424-135436]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[133961-134023]:IfStatement[135455-135517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[133986-134023]:Block[135480-135517]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[134000-134013]:ReturnStatement[135494-135507]"
    }, {
      "left" : "Object first = iterator.next();",
      "right" : "Object first = iterator.next();",
      "info" : "VariableDeclarationStatement[134032-134063]:VariableDeclarationStatement[135526-135557]"
    }, {
      "left" : "if (!iterator.hasNext())",
      "right" : "if (!iterator.hasNext())",
      "info" : "IfStatement[134072-134156]:IfStatement[135566-135650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134097-134156]:Block[135591-135650]"
    }, {
      "left" : "return ObjectUtils.toString(first);",
      "right" : "return ObjectUtils.toString(first);",
      "info" : "ReturnStatement[134111-134146]:ReturnStatement[135605-135640]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(256);",
      "right" : "StringBuilder buf = new StringBuilder(256);",
      "info" : "VariableDeclarationStatement[134198-134241]:VariableDeclarationStatement[135692-135735]"
    }, {
      "left" : "if (first != null)",
      "right" : "if (first != null)",
      "info" : "IfStatement[134292-134353]:IfStatement[135786-135847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134311-134353]:Block[135805-135847]"
    }, {
      "left" : "buf.append(first);",
      "right" : "buf.append(first);",
      "info" : "ExpressionStatement[134325-134343]:ExpressionStatement[135819-135837]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[134363-134611]:WhileStatement[135857-136105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134390-134611]:Block[135884-136105]"
    }, {
      "left" : "if (separator != null)",
      "right" : "if (separator != null)",
      "info" : "IfStatement[134404-134481]:IfStatement[135898-135975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134427-134481]:Block[135921-135975]"
    }, {
      "left" : "buf.append(separator);",
      "right" : "buf.append(separator);",
      "info" : "ExpressionStatement[134445-134467]:ExpressionStatement[135939-135961]"
    }, {
      "left" : "Object obj = iterator.next();",
      "right" : "Object obj = iterator.next();",
      "info" : "VariableDeclarationStatement[134494-134523]:VariableDeclarationStatement[135988-136017]"
    }, {
      "left" : "if (obj != null)",
      "right" : "if (obj != null)",
      "info" : "IfStatement[134536-134601]:IfStatement[136030-136095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[134553-134601]:Block[136047-136095]"
    }, {
      "left" : "buf.append(obj);",
      "right" : "buf.append(obj);",
      "info" : "ExpressionStatement[134571-134587]:ExpressionStatement[136065-136081]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[134620-134642]:ReturnStatement[136114-136136]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[135296-135302]:Modifier[136790-136796]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[135303-135309]:Modifier[136797-136803]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[135310-135316]:SimpleType[136804-136810]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[135317-135321]:SimpleName[136811-136815]"
    }, {
      "left" : "Iterable<?> iterable",
      "right" : "Iterable<?> iterable",
      "info" : "SingleVariableDeclaration[135322-135342]:SingleVariableDeclaration[136816-136836]"
    }, {
      "left" : "char separator",
      "right" : "char separator",
      "info" : "SingleVariableDeclaration[135344-135358]:SingleVariableDeclaration[136838-136852]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135360-135487]:Block[136854-136981]"
    }, {
      "left" : "if (iterable == null)",
      "right" : "if (iterable == null)",
      "info" : "IfStatement[135370-135428]:IfStatement[136864-136922]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[135392-135428]:Block[136886-136922]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[135406-135418]:ReturnStatement[136900-136912]"
    }, {
      "left" : "return join(iterable.iterator(), separator);",
      "right" : "return join(iterable.iterator(), separator);",
      "info" : "ReturnStatement[135437-135481]:ReturnStatement[136931-136975]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[136139-136145]:Modifier[137633-137639]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[136146-136152]:Modifier[137640-137646]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[136153-136159]:SimpleType[137647-137653]"
    }, {
      "left" : "join",
      "right" : "join",
      "info" : "SimpleName[136160-136164]:SimpleName[137654-137658]"
    }, {
      "left" : "Iterable<?> iterable",
      "right" : "Iterable<?> iterable",
      "info" : "SingleVariableDeclaration[136165-136185]:SingleVariableDeclaration[137659-137679]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[136187-136203]:SingleVariableDeclaration[137681-137697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136205-136332]:Block[137699-137826]"
    }, {
      "left" : "if (iterable == null)",
      "right" : "if (iterable == null)",
      "info" : "IfStatement[136215-136273]:IfStatement[137709-137767]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[136237-136273]:Block[137731-137767]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[136251-136263]:ReturnStatement[137745-137757]"
    }, {
      "left" : "return join(iterable.iterator(), separator);",
      "right" : "return join(iterable.iterator(), separator);",
      "info" : "ReturnStatement[136282-136326]:ReturnStatement[137776-137820]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[136981-136987]:Modifier[138475-138481]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[136988-136994]:Modifier[138482-138488]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[136995-137001]:SimpleType[138489-138495]"
    }, {
      "left" : "deleteWhitespace",
      "right" : "deleteWhitespace",
      "info" : "SimpleName[137002-137018]:SimpleName[138496-138512]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[137019-137029]:SingleVariableDeclaration[138513-138523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137031-137459]:Block[138525-138953]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[137041-137094]:IfStatement[138535-138588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137059-137094]:Block[138553-138588]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[137073-137084]:ReturnStatement[138567-138578]"
    }, {
      "left" : "int sz = str.length();",
      "right" : "int sz = str.length();",
      "info" : "VariableDeclarationStatement[137103-137125]:VariableDeclarationStatement[138597-138619]"
    }, {
      "left" : "char[] chs = new char[sz];",
      "right" : "char[] chs = new char[sz];",
      "info" : "VariableDeclarationStatement[137134-137160]:VariableDeclarationStatement[138628-138654]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[137169-137183]:VariableDeclarationStatement[138663-138677]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[137192-137350]:ForStatement[138686-138844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137221-137350]:Block[138715-138844]"
    }, {
      "left" : "if (!Character.isWhitespace(str.charAt(i)))",
      "right" : "if (!Character.isWhitespace(str.charAt(i)))",
      "info" : "IfStatement[137235-137340]:IfStatement[138729-138834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137279-137340]:Block[138773-138834]"
    }, {
      "left" : "chs[count++] = str.charAt(i);",
      "right" : "chs[count++] = str.charAt(i);",
      "info" : "ExpressionStatement[137297-137326]:ExpressionStatement[138791-138820]"
    }, {
      "left" : "if (count == sz)",
      "right" : "if (count == sz)",
      "info" : "IfStatement[137359-137411]:IfStatement[138853-138905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[137376-137411]:Block[138870-138905]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[137390-137401]:ReturnStatement[138884-138895]"
    }, {
      "left" : "return new String(chs, 0, count);",
      "right" : "return new String(chs, 0, count);",
      "info" : "ReturnStatement[137420-137453]:ReturnStatement[138914-138947]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[138654-138660]:Modifier[140148-140154]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[138661-138667]:Modifier[140155-140161]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[138668-138674]:SimpleType[140162-140168]"
    }, {
      "left" : "removeStart",
      "right" : "removeStart",
      "info" : "SimpleName[138675-138686]:SimpleName[140169-140180]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[138687-138697]:SingleVariableDeclaration[140181-140191]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[138699-138712]:SingleVariableDeclaration[140193-140206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138714-138920]:Block[140208-140414]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[138724-138796]:IfStatement[140218-140290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138761-138796]:Block[140255-140290]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[138775-138786]:ReturnStatement[140269-140280]"
    }, {
      "left" : "if (str.startsWith(remove))",
      "right" : "if (str.startsWith(remove))",
      "info" : "IfStatement[138805-138894]:IfStatement[140299-140388]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[138832-138894]:Block[140326-140388]"
    }, {
      "left" : "return str.substring(remove.length());",
      "right" : "return str.substring(remove.length());",
      "info" : "ReturnStatement[138846-138884]:ReturnStatement[140340-140378]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[138903-138914]:ReturnStatement[140397-140408]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[140211-140217]:Modifier[141705-141711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[140218-140224]:Modifier[141712-141718]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[140225-140231]:SimpleType[141719-141725]"
    }, {
      "left" : "removeStartIgnoreCase",
      "right" : "removeStartIgnoreCase",
      "info" : "SimpleName[140232-140253]:SimpleName[141726-141747]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[140254-140264]:SingleVariableDeclaration[141748-141758]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[140266-140279]:SingleVariableDeclaration[141760-141773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140281-140499]:Block[141775-141993]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[140291-140363]:IfStatement[141785-141857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140328-140363]:Block[141822-141857]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[140342-140353]:ReturnStatement[141836-141847]"
    }, {
      "left" : "if (startsWithIgnoreCase(str, remove))",
      "right" : "if (startsWithIgnoreCase(str, remove))",
      "info" : "IfStatement[140372-140473]:IfStatement[141866-141967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[140411-140473]:Block[141905-141967]"
    }, {
      "left" : "return str.substring(remove.length());",
      "right" : "return str.substring(remove.length());",
      "info" : "ReturnStatement[140425-140463]:ReturnStatement[141919-141957]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[140482-140493]:ReturnStatement[141976-141987]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[141587-141593]:Modifier[143081-143087]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[141594-141600]:Modifier[143088-143094]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[141601-141607]:SimpleType[143095-143101]"
    }, {
      "left" : "removeEnd",
      "right" : "removeEnd",
      "info" : "SimpleName[141608-141617]:SimpleName[143102-143111]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[141618-141628]:SingleVariableDeclaration[143112-143122]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[141630-141643]:SingleVariableDeclaration[143124-143137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141645-141868]:Block[143139-143362]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[141655-141727]:IfStatement[143149-143221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141692-141727]:Block[143186-143221]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[141706-141717]:ReturnStatement[143200-143211]"
    }, {
      "left" : "if (str.endsWith(remove))",
      "right" : "if (str.endsWith(remove))",
      "info" : "IfStatement[141736-141842]:IfStatement[143230-143336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[141762-141842]:Block[143256-143336]"
    }, {
      "left" : "return str.substring(0, str.length() - remove.length());",
      "right" : "return str.substring(0, str.length() - remove.length());",
      "info" : "ReturnStatement[141776-141832]:ReturnStatement[143270-143326]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[141851-141862]:ReturnStatement[143345-143356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[143222-143228]:Modifier[144716-144722]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[143229-143235]:Modifier[144723-144729]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[143236-143242]:SimpleType[144730-144736]"
    }, {
      "left" : "removeEndIgnoreCase",
      "right" : "removeEndIgnoreCase",
      "info" : "SimpleName[143243-143262]:SimpleName[144737-144756]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[143263-143273]:SingleVariableDeclaration[144757-144767]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[143275-143288]:SingleVariableDeclaration[144769-144782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143290-143524]:Block[144784-145018]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[143300-143372]:IfStatement[144794-144866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143337-143372]:Block[144831-144866]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[143351-143362]:ReturnStatement[144845-144856]"
    }, {
      "left" : "if (endsWithIgnoreCase(str, remove))",
      "right" : "if (endsWithIgnoreCase(str, remove))",
      "info" : "IfStatement[143381-143498]:IfStatement[144875-144992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[143418-143498]:Block[144912-144992]"
    }, {
      "left" : "return str.substring(0, str.length() - remove.length());",
      "right" : "return str.substring(0, str.length() - remove.length());",
      "info" : "ReturnStatement[143432-143488]:ReturnStatement[144926-144982]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[143507-143518]:ReturnStatement[145001-145012]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[144509-144515]:Modifier[146003-146009]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[144516-144522]:Modifier[146010-146016]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[144523-144529]:SimpleType[146017-146023]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[144530-144536]:SimpleName[146024-146030]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[144537-144547]:SingleVariableDeclaration[146031-146041]"
    }, {
      "left" : "String remove",
      "right" : "String remove",
      "info" : "SingleVariableDeclaration[144549-144562]:SingleVariableDeclaration[146043-146056]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144564-144700]:Block[146058-146194]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(remove))",
      "right" : "if (isEmpty(str) || isEmpty(remove))",
      "info" : "IfStatement[144574-144646]:IfStatement[146068-146140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[144611-144646]:Block[146105-146140]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[144625-144636]:ReturnStatement[146119-146130]"
    }, {
      "left" : "return replace(str, remove, EMPTY, -1);",
      "right" : "return replace(str, remove, EMPTY, -1);",
      "info" : "ReturnStatement[144655-144694]:ReturnStatement[146149-146188]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[145449-145455]:Modifier[146943-146949]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[145456-145462]:Modifier[146950-146956]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[145463-145469]:SimpleType[146957-146963]"
    }, {
      "left" : "remove",
      "right" : "remove",
      "info" : "SimpleName[145470-145476]:SimpleName[146964-146970]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[145477-145487]:SingleVariableDeclaration[146971-146981]"
    }, {
      "left" : "char remove",
      "right" : "char remove",
      "info" : "SingleVariableDeclaration[145489-145500]:SingleVariableDeclaration[146983-146994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145502-145870]:Block[146996-147364]"
    }, {
      "left" : "if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND)",
      "right" : "if (isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND)",
      "info" : "IfStatement[145512-145607]:IfStatement[147006-147101]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145572-145607]:Block[147066-147101]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[145586-145597]:ReturnStatement[147080-147091]"
    }, {
      "left" : "char[] chars = str.toCharArray();",
      "right" : "char[] chars = str.toCharArray();",
      "info" : "VariableDeclarationStatement[145616-145649]:VariableDeclarationStatement[147110-147143]"
    }, {
      "left" : "int pos = 0;",
      "right" : "int pos = 0;",
      "info" : "VariableDeclarationStatement[145658-145670]:VariableDeclarationStatement[147152-147164]"
    }, {
      "left" : "for (int i = 0; i < chars.length; i++)",
      "right" : "for (int i = 0; i < chars.length; i++)",
      "info" : "ForStatement[145679-145822]:ForStatement[147173-147316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145718-145822]:Block[147212-147316]"
    }, {
      "left" : "if (chars[i] != remove)",
      "right" : "if (chars[i] != remove)",
      "info" : "IfStatement[145732-145812]:IfStatement[147226-147306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[145756-145812]:Block[147250-147306]"
    }, {
      "left" : "chars[pos++] = chars[i];",
      "right" : "chars[pos++] = chars[i];",
      "info" : "ExpressionStatement[145774-145798]:ExpressionStatement[147268-147292]"
    }, {
      "left" : "return new String(chars, 0, pos);",
      "right" : "return new String(chars, 0, pos);",
      "info" : "ReturnStatement[145831-145864]:ReturnStatement[147325-147358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[147038-147044]:Modifier[148532-148538]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[147045-147051]:Modifier[148539-148545]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[147052-147058]:SimpleType[148546-148552]"
    }, {
      "left" : "replaceOnce",
      "right" : "replaceOnce",
      "info" : "SimpleName[147059-147070]:SimpleName[148553-148564]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[147071-147082]:SingleVariableDeclaration[148565-148576]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[147084-147103]:SingleVariableDeclaration[148578-148597]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[147105-147123]:SingleVariableDeclaration[148599-148617]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[147125-147192]:Block[148619-148686]"
    }, {
      "left" : "return replace(text, searchString, replacement, 1);",
      "right" : "return replace(text, searchString, replacement, 1);",
      "info" : "ReturnStatement[147135-147186]:ReturnStatement[148629-148680]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[148227-148233]:Modifier[149721-149727]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[148234-148240]:Modifier[149728-149734]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[148241-148247]:SimpleType[149735-149741]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[148248-148255]:SimpleName[149742-149749]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[148256-148267]:SingleVariableDeclaration[149750-149761]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[148269-148288]:SingleVariableDeclaration[149763-149782]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[148290-148308]:SingleVariableDeclaration[149784-149802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[148310-148378]:Block[149804-149872]"
    }, {
      "left" : "return replace(text, searchString, replacement, -1);",
      "right" : "return replace(text, searchString, replacement, -1);",
      "info" : "ReturnStatement[148320-148372]:ReturnStatement[149814-149866]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[149756-149762]:Modifier[151250-151256]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[149763-149769]:Modifier[151257-151263]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[149770-149776]:SimpleType[151264-151270]"
    }, {
      "left" : "replace",
      "right" : "replace",
      "info" : "SimpleName[149777-149784]:SimpleName[151271-151278]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[149785-149796]:SingleVariableDeclaration[151279-151290]"
    }, {
      "left" : "String searchString",
      "right" : "String searchString",
      "info" : "SingleVariableDeclaration[149798-149817]:SingleVariableDeclaration[151292-151311]"
    }, {
      "left" : "String replacement",
      "right" : "String replacement",
      "info" : "SingleVariableDeclaration[149819-149837]:SingleVariableDeclaration[151313-151331]"
    }, {
      "left" : "int max",
      "right" : "int max",
      "info" : "SingleVariableDeclaration[149839-149846]:SingleVariableDeclaration[151333-151340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149848-150772]:Block[151342-152266]"
    }, {
      "left" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
      "right" : "if (isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0)",
      "info" : "IfStatement[149858-149973]:IfStatement[151352-151467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[149937-149973]:Block[151431-151467]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[149951-149963]:ReturnStatement[151445-151457]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[149982-149996]:VariableDeclarationStatement[151476-151490]"
    }, {
      "left" : "int end = text.indexOf(searchString, start);",
      "right" : "int end = text.indexOf(searchString, start);",
      "info" : "VariableDeclarationStatement[150005-150049]:VariableDeclarationStatement[151499-151543]"
    }, {
      "left" : "if (end == INDEX_NOT_FOUND)",
      "right" : "if (end == INDEX_NOT_FOUND)",
      "info" : "IfStatement[150058-150122]:IfStatement[151552-151616]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150086-150122]:Block[151580-151616]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[150100-150112]:ReturnStatement[151594-151606]"
    }, {
      "left" : "int replLength = searchString.length();",
      "right" : "int replLength = searchString.length();",
      "info" : "VariableDeclarationStatement[150131-150170]:VariableDeclarationStatement[151625-151664]"
    }, {
      "left" : "int increase = replacement.length() - replLength;",
      "right" : "int increase = replacement.length() - replLength;",
      "info" : "VariableDeclarationStatement[150179-150228]:VariableDeclarationStatement[151673-151722]"
    }, {
      "left" : "increase = (increase < 0 ? 0 : increase);",
      "right" : "increase = (increase < 0 ? 0 : increase);",
      "info" : "ExpressionStatement[150237-150278]:ExpressionStatement[151731-151772]"
    }, {
      "left" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
      "right" : "increase *= (max < 0 ? 16 : (max > 64 ? 64 : max));",
      "info" : "ExpressionStatement[150287-150338]:ExpressionStatement[151781-151832]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "info" : "VariableDeclarationStatement[150347-150411]:VariableDeclarationStatement[151841-151905]"
    }, {
      "left" : "while (end != INDEX_NOT_FOUND)",
      "right" : "while (end != INDEX_NOT_FOUND)",
      "info" : "WhileStatement[150420-150692]:WhileStatement[151914-152186]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150451-150692]:Block[151945-152186]"
    }, {
      "left" : "buf.append(text.substring(start, end)).append(replacement);",
      "right" : "buf.append(text.substring(start, end)).append(replacement);",
      "info" : "ExpressionStatement[150465-150524]:ExpressionStatement[151959-152018]"
    }, {
      "left" : "start = end + replLength;",
      "right" : "start = end + replLength;",
      "info" : "ExpressionStatement[150537-150562]:ExpressionStatement[152031-152056]"
    }, {
      "left" : "if (--max == 0)",
      "right" : "if (--max == 0)",
      "info" : "IfStatement[150575-150629]:IfStatement[152069-152123]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[150591-150629]:Block[152085-152123]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[150609-150615]:BreakStatement[152103-152109]"
    }, {
      "left" : "end = text.indexOf(searchString, start);",
      "right" : "end = text.indexOf(searchString, start);",
      "info" : "ExpressionStatement[150642-150682]:ExpressionStatement[152136-152176]"
    }, {
      "left" : "buf.append(text.substring(start));",
      "right" : "buf.append(text.substring(start));",
      "info" : "ExpressionStatement[150701-150735]:ExpressionStatement[152195-152229]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[150744-150766]:ReturnStatement[152238-152260]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[152551-152557]:Modifier[154045-154051]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[152558-152564]:Modifier[154052-154058]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[152565-152571]:SimpleType[154059-154065]"
    }, {
      "left" : "replaceEach",
      "right" : "replaceEach",
      "info" : "SimpleName[152572-152583]:SimpleName[154066-154077]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[152584-152595]:SingleVariableDeclaration[154078-154089]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[152597-152616]:SingleVariableDeclaration[154091-154110]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[152618-152642]:SingleVariableDeclaration[154112-154136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[152644-152724]:Block[154138-154218]"
    }, {
      "left" : "return replaceEach(text, searchList, replacementList, false, 0);",
      "right" : "return replaceEach(text, searchList, replacementList, false, 0);",
      "info" : "ReturnStatement[152654-152718]:ReturnStatement[154148-154212]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[155025-155031]:Modifier[156519-156525]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[155032-155038]:Modifier[156526-156532]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[155039-155045]:SimpleType[156533-156539]"
    }, {
      "left" : "replaceEachRepeatedly",
      "right" : "replaceEachRepeatedly",
      "info" : "SimpleName[155046-155067]:SimpleName[156540-156561]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[155068-155079]:SingleVariableDeclaration[156562-156573]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[155081-155100]:SingleVariableDeclaration[156575-156594]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[155102-155126]:SingleVariableDeclaration[156596-156620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[155128-155407]:Block[156622-156901]"
    }, {
      "left" : "int timeToLive = searchList == null ? 0 : searchList.length;",
      "right" : "int timeToLive = searchList == null ? 0 : searchList.length;",
      "info" : "VariableDeclarationStatement[155260-155320]:VariableDeclarationStatement[156754-156814]"
    }, {
      "left" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
      "right" : "return replaceEach(text, searchList, replacementList, true, timeToLive);",
      "info" : "ReturnStatement[155329-155401]:ReturnStatement[156823-156895]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[157777-157784]:Modifier[159271-159278]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[157785-157791]:Modifier[159279-159285]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[157792-157798]:SimpleType[159286-159292]"
    }, {
      "left" : "replaceEach",
      "right" : "replaceEach",
      "info" : "SimpleName[157799-157810]:SimpleName[159293-159304]"
    }, {
      "left" : "String text",
      "right" : "String text",
      "info" : "SingleVariableDeclaration[157811-157822]:SingleVariableDeclaration[159305-159316]"
    }, {
      "left" : "String[] searchList",
      "right" : "String[] searchList",
      "info" : "SingleVariableDeclaration[157824-157843]:SingleVariableDeclaration[159318-159337]"
    }, {
      "left" : "String[] replacementList",
      "right" : "String[] replacementList",
      "info" : "SingleVariableDeclaration[157845-157869]:SingleVariableDeclaration[159339-159363]"
    }, {
      "left" : "boolean repeat",
      "right" : "boolean repeat",
      "info" : "SingleVariableDeclaration[157910-157924]:SingleVariableDeclaration[159404-159418]"
    }, {
      "left" : "int timeToLive",
      "right" : "int timeToLive",
      "info" : "SingleVariableDeclaration[157926-157940]:SingleVariableDeclaration[159420-159434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[157947-162582]:Block[159441-164076]"
    }, {
      "left" : "if (text == null || text.length() == 0 || searchList == null || \n            searchList.length == 0 || replacementList == null || replacementList.length == 0)",
      "right" : "if (text == null || text.length() == 0 || searchList == null || \n            searchList.length == 0 || replacementList == null || replacementList.length == 0)",
      "info" : "IfStatement[158140-158344]:IfStatement[159634-159838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158308-158344]:Block[159802-159838]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[158322-158334]:ReturnStatement[159816-159828]"
    }, {
      "left" : "if (timeToLive < 0)",
      "right" : "if (timeToLive < 0)",
      "info" : "IfStatement[158408-158544]:IfStatement[159902-160038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158428-158544]:Block[159922-160038]"
    }, {
      "left" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
      "right" : "throw new IllegalStateException(\"TimeToLive of \" + timeToLive + \" is less than 0: \" + text);",
      "info" : "ThrowStatement[158442-158534]:ThrowStatement[159936-160028]"
    }, {
      "left" : "int searchLength = searchList.length;",
      "right" : "int searchLength = searchList.length;",
      "info" : "VariableDeclarationStatement[158554-158591]:VariableDeclarationStatement[160048-160085]"
    }, {
      "left" : "int replacementLength = replacementList.length;",
      "right" : "int replacementLength = replacementList.length;",
      "info" : "VariableDeclarationStatement[158600-158647]:VariableDeclarationStatement[160094-160141]"
    }, {
      "left" : "if (searchLength != replacementLength)",
      "right" : "if (searchLength != replacementLength)",
      "info" : "IfStatement[158717-158957]:IfStatement[160211-160451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[158756-158957]:Block[160250-160451]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
      "right" : "throw new IllegalArgumentException(\"Search and Replace array lengths don't match: \"\n                + searchLength\n                + \" vs \"\n                + replacementLength);",
      "info" : "ThrowStatement[158770-158947]:ThrowStatement[160264-160441]"
    }, {
      "left" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
      "right" : "boolean[] noMoreMatchesForReplIndex = new boolean[searchLength];",
      "info" : "VariableDeclarationStatement[159017-159081]:VariableDeclarationStatement[160511-160575]"
    }, {
      "left" : "int textIndex = -1;",
      "right" : "int textIndex = -1;",
      "info" : "VariableDeclarationStatement[159142-159161]:VariableDeclarationStatement[160636-160655]"
    }, {
      "left" : "int replaceIndex = -1;",
      "right" : "int replaceIndex = -1;",
      "info" : "VariableDeclarationStatement[159170-159192]:VariableDeclarationStatement[160664-160686]"
    }, {
      "left" : "int tempIndex = -1;",
      "right" : "int tempIndex = -1;",
      "info" : "VariableDeclarationStatement[159201-159220]:VariableDeclarationStatement[160695-160714]"
    }, {
      "left" : "for (int i = 0; i < searchLength; i++)",
      "right" : "for (int i = 0; i < searchLength; i++)",
      "info" : "ForStatement[159352-160003]:ForStatement[160846-161497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159391-160003]:Block[160885-161497]"
    }, {
      "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                searchList[i].length() == 0 || replacementList[i] == null)",
      "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                searchList[i].length() == 0 || replacementList[i] == null)",
      "info" : "IfStatement[159405-159596]:IfStatement[160899-161090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159555-159596]:Block[161049-161090]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[159573-159582]:ContinueStatement[161067-161076]"
    }, {
      "left" : "tempIndex = text.indexOf(searchList[i]);",
      "right" : "tempIndex = text.indexOf(searchList[i]);",
      "info" : "ExpressionStatement[159609-159649]:ExpressionStatement[161103-161143]"
    }, {
      "left" : "if (tempIndex == -1)",
      "right" : "if (tempIndex == -1)",
      "info" : "IfStatement[159720-159993]:IfStatement[161214-161487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159741-159809]:Block[161235-161303]"
    }, {
      "left" : "noMoreMatchesForReplIndex[i] = true;",
      "right" : "noMoreMatchesForReplIndex[i] = true;",
      "info" : "ExpressionStatement[159759-159795]:ExpressionStatement[161253-161289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159815-159993]:Block[161309-161487]"
    }, {
      "left" : "if (textIndex == -1 || tempIndex < textIndex)",
      "right" : "if (textIndex == -1 || tempIndex < textIndex)",
      "info" : "IfStatement[159833-159979]:IfStatement[161327-161473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[159879-159979]:Block[161373-161473]"
    }, {
      "left" : "textIndex = tempIndex;",
      "right" : "textIndex = tempIndex;",
      "info" : "ExpressionStatement[159901-159923]:ExpressionStatement[161395-161417]"
    }, {
      "left" : "replaceIndex = i;",
      "right" : "replaceIndex = i;",
      "info" : "ExpressionStatement[159944-159961]:ExpressionStatement[161438-161455]"
    }, {
      "left" : "if (textIndex == -1)",
      "right" : "if (textIndex == -1)",
      "info" : "IfStatement[160101-160158]:IfStatement[161595-161652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160122-160158]:Block[161616-161652]"
    }, {
      "left" : "return text;",
      "right" : "return text;",
      "info" : "ReturnStatement[160136-160148]:ReturnStatement[161630-161642]"
    }, {
      "left" : "int start = 0;",
      "right" : "int start = 0;",
      "info" : "VariableDeclarationStatement[160168-160182]:VariableDeclarationStatement[161662-161676]"
    }, {
      "left" : "int increase = 0;",
      "right" : "int increase = 0;",
      "info" : "VariableDeclarationStatement[160303-160320]:VariableDeclarationStatement[161797-161814]"
    }, {
      "left" : "for (int i = 0; i < searchList.length; i++)",
      "right" : "for (int i = 0; i < searchList.length; i++)",
      "info" : "ForStatement[160438-160790]:ForStatement[161932-162284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160482-160790]:Block[161976-162284]"
    }, {
      "left" : "if (searchList[i] == null || replacementList[i] == null)",
      "right" : "if (searchList[i] == null || replacementList[i] == null)",
      "info" : "IfStatement[160496-160594]:IfStatement[161990-162088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160553-160594]:Block[162047-162088]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[160571-160580]:ContinueStatement[162065-162074]"
    }, {
      "left" : "int greater = replacementList[i].length() - searchList[i].length();",
      "right" : "int greater = replacementList[i].length() - searchList[i].length();",
      "info" : "VariableDeclarationStatement[160607-160674]:VariableDeclarationStatement[162101-162168]"
    }, {
      "left" : "if (greater > 0)",
      "right" : "if (greater > 0)",
      "info" : "IfStatement[160687-160780]:IfStatement[162181-162274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[160704-160780]:Block[162198-162274]"
    }, {
      "left" : "increase += 3 * greater;",
      "right" : "increase += 3 * greater;",
      "info" : "ExpressionStatement[160722-160746]:ExpressionStatement[162216-162240]"
    }, {
      "left" : "increase = Math.min(increase, text.length() / 5);",
      "right" : "increase = Math.min(increase, text.length() / 5);",
      "info" : "ExpressionStatement[160868-160917]:ExpressionStatement[162362-162411]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "right" : "StringBuilder buf = new StringBuilder(text.length() + increase);",
      "info" : "VariableDeclarationStatement[160927-160991]:VariableDeclarationStatement[162421-162485]"
    }, {
      "left" : "while (textIndex != -1)",
      "right" : "while (textIndex != -1)",
      "info" : "WhileStatement[161001-162245]:WhileStatement[162495-163739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161025-162245]:Block[162519-163739]"
    }, {
      "left" : "for (int i = start; i < textIndex; i++)",
      "right" : "for (int i = start; i < textIndex; i++)",
      "info" : "ForStatement[161040-161139]:ForStatement[162534-162633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161080-161139]:Block[162574-162633]"
    }, {
      "left" : "buf.append(text.charAt(i));",
      "right" : "buf.append(text.charAt(i));",
      "info" : "ExpressionStatement[161098-161125]:ExpressionStatement[162592-162619]"
    }, {
      "left" : "buf.append(replacementList[replaceIndex]);",
      "right" : "buf.append(replacementList[replaceIndex]);",
      "info" : "ExpressionStatement[161152-161194]:ExpressionStatement[162646-162688]"
    }, {
      "left" : "start = textIndex + searchList[replaceIndex].length();",
      "right" : "start = textIndex + searchList[replaceIndex].length();",
      "info" : "ExpressionStatement[161208-161262]:ExpressionStatement[162702-162756]"
    }, {
      "left" : "textIndex = -1;",
      "right" : "textIndex = -1;",
      "info" : "ExpressionStatement[161276-161291]:ExpressionStatement[162770-162785]"
    }, {
      "left" : "replaceIndex = -1;",
      "right" : "replaceIndex = -1;",
      "info" : "ExpressionStatement[161304-161322]:ExpressionStatement[162798-162816]"
    }, {
      "left" : "tempIndex = -1;",
      "right" : "tempIndex = -1;",
      "info" : "ExpressionStatement[161335-161350]:ExpressionStatement[162829-162844]"
    }, {
      "left" : "for (int i = 0; i < searchLength; i++)",
      "right" : "for (int i = 0; i < searchLength; i++)",
      "info" : "ForStatement[161464-162186]:ForStatement[162958-163680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161503-162186]:Block[162997-163680]"
    }, {
      "left" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                    searchList[i].length() == 0 || replacementList[i] == null)",
      "right" : "if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                    searchList[i].length() == 0 || replacementList[i] == null)",
      "info" : "IfStatement[161521-161728]:IfStatement[163015-163222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161679-161728]:Block[163173-163222]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[161701-161710]:ContinueStatement[163195-163204]"
    }, {
      "left" : "tempIndex = text.indexOf(searchList[i], start);",
      "right" : "tempIndex = text.indexOf(searchList[i], start);",
      "info" : "ExpressionStatement[161745-161792]:ExpressionStatement[163239-163286]"
    }, {
      "left" : "if (tempIndex == -1)",
      "right" : "if (tempIndex == -1)",
      "info" : "IfStatement[161871-162172]:IfStatement[163365-163666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161892-161968]:Block[163386-163462]"
    }, {
      "left" : "noMoreMatchesForReplIndex[i] = true;",
      "right" : "noMoreMatchesForReplIndex[i] = true;",
      "info" : "ExpressionStatement[161914-161950]:ExpressionStatement[163408-163444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[161974-162172]:Block[163468-163666]"
    }, {
      "left" : "if (textIndex == -1 || tempIndex < textIndex)",
      "right" : "if (textIndex == -1 || tempIndex < textIndex)",
      "info" : "IfStatement[161996-162154]:IfStatement[163490-163648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162042-162154]:Block[163536-163648]"
    }, {
      "left" : "textIndex = tempIndex;",
      "right" : "textIndex = tempIndex;",
      "info" : "ExpressionStatement[162068-162090]:ExpressionStatement[163562-163584]"
    }, {
      "left" : "replaceIndex = i;",
      "right" : "replaceIndex = i;",
      "info" : "ExpressionStatement[162115-162132]:ExpressionStatement[163609-163626]"
    }, {
      "left" : "int textLength = text.length();",
      "right" : "int textLength = text.length();",
      "info" : "VariableDeclarationStatement[162254-162285]:VariableDeclarationStatement[163748-163779]"
    }, {
      "left" : "for (int i = start; i < textLength; i++)",
      "right" : "for (int i = start; i < textLength; i++)",
      "info" : "ForStatement[162294-162386]:ForStatement[163788-163880]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162335-162386]:Block[163829-163880]"
    }, {
      "left" : "buf.append(text.charAt(i));",
      "right" : "buf.append(text.charAt(i));",
      "info" : "ExpressionStatement[162349-162376]:ExpressionStatement[163843-163870]"
    }, {
      "left" : "String result = buf.toString();",
      "right" : "String result = buf.toString();",
      "info" : "VariableDeclarationStatement[162395-162426]:VariableDeclarationStatement[163889-163920]"
    }, {
      "left" : "if (!repeat)",
      "right" : "if (!repeat)",
      "info" : "IfStatement[162435-162486]:IfStatement[163929-163980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[162448-162486]:Block[163942-163980]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[162462-162476]:ReturnStatement[163956-163970]"
    }, {
      "left" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
      "right" : "return replaceEach(result, searchList, replacementList, repeat, timeToLive - 1);",
      "info" : "ReturnStatement[162496-162576]:ReturnStatement[163990-164070]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[163570-163576]:Modifier[165064-165070]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[163577-163583]:Modifier[165071-165077]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[163584-163590]:SimpleType[165078-165084]"
    }, {
      "left" : "replaceChars",
      "right" : "replaceChars",
      "info" : "SimpleName[163591-163603]:SimpleName[165085-165097]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[163604-163614]:SingleVariableDeclaration[165098-165108]"
    }, {
      "left" : "char searchChar",
      "right" : "char searchChar",
      "info" : "SingleVariableDeclaration[163616-163631]:SingleVariableDeclaration[165110-165125]"
    }, {
      "left" : "char replaceChar",
      "right" : "char replaceChar",
      "info" : "SingleVariableDeclaration[163633-163649]:SingleVariableDeclaration[165127-165143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163651-163773]:Block[165145-165267]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[163661-163714]:IfStatement[165155-165208]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[163678-163714]:Block[165172-165208]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[163692-163704]:ReturnStatement[165186-165198]"
    }, {
      "left" : "return str.replace(searchChar, replaceChar);",
      "right" : "return str.replace(searchChar, replaceChar);",
      "info" : "ReturnStatement[163723-163767]:ReturnStatement[165217-165261]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[165481-165487]:Modifier[166975-166981]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[165488-165494]:Modifier[166982-166988]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[165495-165501]:SimpleType[166989-166995]"
    }, {
      "left" : "replaceChars",
      "right" : "replaceChars",
      "info" : "SimpleName[165502-165514]:SimpleName[166996-167008]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[165515-165525]:SingleVariableDeclaration[167009-167019]"
    }, {
      "left" : "String searchChars",
      "right" : "String searchChars",
      "info" : "SingleVariableDeclaration[165527-165545]:SingleVariableDeclaration[167021-167039]"
    }, {
      "left" : "String replaceChars",
      "right" : "String replaceChars",
      "info" : "SingleVariableDeclaration[165547-165566]:SingleVariableDeclaration[167041-167060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165568-166416]:Block[167062-167910]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(searchChars))",
      "right" : "if (isEmpty(str) || isEmpty(searchChars))",
      "info" : "IfStatement[165578-165655]:IfStatement[167072-167149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165620-165655]:Block[167114-167149]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[165634-165645]:ReturnStatement[167128-167139]"
    }, {
      "left" : "if (replaceChars == null)",
      "right" : "if (replaceChars == null)",
      "info" : "IfStatement[165664-165735]:IfStatement[167158-167229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165690-165735]:Block[167184-167229]"
    }, {
      "left" : "replaceChars = EMPTY;",
      "right" : "replaceChars = EMPTY;",
      "info" : "ExpressionStatement[165704-165725]:ExpressionStatement[167198-167219]"
    }, {
      "left" : "boolean modified = false;",
      "right" : "boolean modified = false;",
      "info" : "VariableDeclarationStatement[165744-165769]:VariableDeclarationStatement[167238-167263]"
    }, {
      "left" : "int replaceCharsLength = replaceChars.length();",
      "right" : "int replaceCharsLength = replaceChars.length();",
      "info" : "VariableDeclarationStatement[165778-165825]:VariableDeclarationStatement[167272-167319]"
    }, {
      "left" : "int strLength = str.length();",
      "right" : "int strLength = str.length();",
      "info" : "VariableDeclarationStatement[165834-165863]:VariableDeclarationStatement[167328-167357]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(strLength);",
      "right" : "StringBuilder buf = new StringBuilder(strLength);",
      "info" : "VariableDeclarationStatement[165872-165921]:VariableDeclarationStatement[167366-167415]"
    }, {
      "left" : "for (int i = 0; i < strLength; i++)",
      "right" : "for (int i = 0; i < strLength; i++)",
      "info" : "ForStatement[165930-166321]:ForStatement[167424-167815]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[165966-166321]:Block[167460-167815]"
    }, {
      "left" : "char ch = str.charAt(i);",
      "right" : "char ch = str.charAt(i);",
      "info" : "VariableDeclarationStatement[165980-166004]:VariableDeclarationStatement[167474-167498]"
    }, {
      "left" : "int index = searchChars.indexOf(ch);",
      "right" : "int index = searchChars.indexOf(ch);",
      "info" : "VariableDeclarationStatement[166017-166053]:VariableDeclarationStatement[167511-167547]"
    }, {
      "left" : "if (index >= 0)",
      "right" : "if (index >= 0)",
      "info" : "IfStatement[166066-166311]:IfStatement[167560-167805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166082-166258]:Block[167576-167752]"
    }, {
      "left" : "modified = true;",
      "right" : "modified = true;",
      "info" : "ExpressionStatement[166100-166116]:ExpressionStatement[167594-167610]"
    }, {
      "left" : "if (index < replaceCharsLength)",
      "right" : "if (index < replaceCharsLength)",
      "info" : "IfStatement[166133-166244]:IfStatement[167627-167738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166165-166244]:Block[167659-167738]"
    }, {
      "left" : "buf.append(replaceChars.charAt(index));",
      "right" : "buf.append(replaceChars.charAt(index));",
      "info" : "ExpressionStatement[166187-166226]:ExpressionStatement[167681-167720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166264-166311]:Block[167758-167805]"
    }, {
      "left" : "buf.append(ch);",
      "right" : "buf.append(ch);",
      "info" : "ExpressionStatement[166282-166297]:ExpressionStatement[167776-167791]"
    }, {
      "left" : "if (modified)",
      "right" : "if (modified)",
      "info" : "IfStatement[166330-166390]:IfStatement[167824-167884]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[166344-166390]:Block[167838-167884]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[166358-166380]:ReturnStatement[167852-167874]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[166399-166410]:ReturnStatement[167893-167904]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[167932-167938]:Modifier[169426-169432]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[167939-167945]:Modifier[169433-169439]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[167946-167952]:SimpleType[169440-169446]"
    }, {
      "left" : "overlay",
      "right" : "overlay",
      "info" : "SimpleName[167953-167960]:SimpleName[169447-169454]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[167961-167971]:SingleVariableDeclaration[169455-169465]"
    }, {
      "left" : "String overlay",
      "right" : "String overlay",
      "info" : "SingleVariableDeclaration[167973-167987]:SingleVariableDeclaration[169467-169481]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[167989-167998]:SingleVariableDeclaration[169483-169492]"
    }, {
      "left" : "int end",
      "right" : "int end",
      "info" : "SingleVariableDeclaration[168000-168007]:SingleVariableDeclaration[169494-169501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168009-168742]:Block[169503-170236]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[168019-168072]:IfStatement[169513-169566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168036-168072]:Block[169530-169566]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[168050-168062]:ReturnStatement[169544-169556]"
    }, {
      "left" : "if (overlay == null)",
      "right" : "if (overlay == null)",
      "info" : "IfStatement[168081-168142]:IfStatement[169575-169636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168102-168142]:Block[169596-169636]"
    }, {
      "left" : "overlay = EMPTY;",
      "right" : "overlay = EMPTY;",
      "info" : "ExpressionStatement[168116-168132]:ExpressionStatement[169610-169626]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[168151-168174]:VariableDeclarationStatement[169645-169668]"
    }, {
      "left" : "if (start < 0)",
      "right" : "if (start < 0)",
      "info" : "IfStatement[168183-168232]:IfStatement[169677-169726]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168198-168232]:Block[169692-169726]"
    }, {
      "left" : "start = 0;",
      "right" : "start = 0;",
      "info" : "ExpressionStatement[168212-168222]:ExpressionStatement[169706-169716]"
    }, {
      "left" : "if (start > len)",
      "right" : "if (start > len)",
      "info" : "IfStatement[168241-168294]:IfStatement[169735-169788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168258-168294]:Block[169752-169788]"
    }, {
      "left" : "start = len;",
      "right" : "start = len;",
      "info" : "ExpressionStatement[168272-168284]:ExpressionStatement[169766-169778]"
    }, {
      "left" : "if (end < 0)",
      "right" : "if (end < 0)",
      "info" : "IfStatement[168303-168348]:IfStatement[169797-169842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168316-168348]:Block[169810-169842]"
    }, {
      "left" : "end = 0;",
      "right" : "end = 0;",
      "info" : "ExpressionStatement[168330-168338]:ExpressionStatement[169824-169832]"
    }, {
      "left" : "if (end > len)",
      "right" : "if (end > len)",
      "info" : "IfStatement[168357-168406]:IfStatement[169851-169900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168372-168406]:Block[169866-169900]"
    }, {
      "left" : "end = len;",
      "right" : "end = len;",
      "info" : "ExpressionStatement[168386-168396]:ExpressionStatement[169880-169890]"
    }, {
      "left" : "if (start > end)",
      "right" : "if (start > end)",
      "info" : "IfStatement[168415-168522]:IfStatement[169909-170016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[168432-168522]:Block[169926-170016]"
    }, {
      "left" : "int temp = start;",
      "right" : "int temp = start;",
      "info" : "VariableDeclarationStatement[168446-168463]:VariableDeclarationStatement[169940-169957]"
    }, {
      "left" : "start = end;",
      "right" : "start = end;",
      "info" : "ExpressionStatement[168476-168488]:ExpressionStatement[169970-169982]"
    }, {
      "left" : "end = temp;",
      "right" : "end = temp;",
      "info" : "ExpressionStatement[168501-168512]:ExpressionStatement[169995-170006]"
    }, {
      "left" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
      "right" : "return new StringBuilder(len + start - end + overlay.length() + 1)\n            .append(str.substring(0, start))\n            .append(overlay)\n            .append(str.substring(end))\n            .toString();",
      "info" : "ReturnStatement[168531-168736]:ReturnStatement[170025-170230]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[169891-169897]:Modifier[171385-171391]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[169898-169904]:Modifier[171392-171398]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[169905-169911]:SimpleType[171399-171405]"
    }, {
      "left" : "chomp",
      "right" : "chomp",
      "info" : "SimpleName[169912-169917]:SimpleName[171406-171411]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[169918-169928]:SingleVariableDeclaration[171412-171422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169930-170545]:Block[171424-172039]"
    }, {
      "left" : "if (isEmpty(str))",
      "right" : "if (isEmpty(str))",
      "info" : "IfStatement[169940-169993]:IfStatement[171434-171487]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[169958-169993]:Block[171452-171487]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[169972-169983]:ReturnStatement[171466-171477]"
    }, {
      "left" : "if (str.length() == 1)",
      "right" : "if (str.length() == 1)",
      "info" : "IfStatement[170003-170202]:IfStatement[171497-171696]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170026-170202]:Block[171520-171696]"
    }, {
      "left" : "char ch = str.charAt(0);",
      "right" : "char ch = str.charAt(0);",
      "info" : "VariableDeclarationStatement[170040-170064]:VariableDeclarationStatement[171534-171558]"
    }, {
      "left" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
      "right" : "if (ch == CharUtils.CR || ch == CharUtils.LF)",
      "info" : "IfStatement[170077-170168]:IfStatement[171571-171662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170123-170168]:Block[171617-171662]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[170141-170154]:ReturnStatement[171635-171648]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[170181-170192]:ReturnStatement[171675-171686]"
    }, {
      "left" : "int lastIdx = str.length() - 1;",
      "right" : "int lastIdx = str.length() - 1;",
      "info" : "VariableDeclarationStatement[170212-170243]:VariableDeclarationStatement[171706-171737]"
    }, {
      "left" : "char last = str.charAt(lastIdx);",
      "right" : "char last = str.charAt(lastIdx);",
      "info" : "VariableDeclarationStatement[170252-170284]:VariableDeclarationStatement[171746-171778]"
    }, {
      "left" : "if (last == CharUtils.LF)",
      "right" : "if (last == CharUtils.LF)",
      "info" : "IfStatement[170294-170497]:IfStatement[171788-171991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170320-170431]:Block[171814-171925]"
    }, {
      "left" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
      "right" : "if (str.charAt(lastIdx - 1) == CharUtils.CR)",
      "info" : "IfStatement[170334-170421]:IfStatement[171828-171915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170379-170421]:Block[171873-171915]"
    }, {
      "left" : "lastIdx--;",
      "right" : "lastIdx--;",
      "info" : "ExpressionStatement[170397-170407]:ExpressionStatement[171891-171901]"
    }, {
      "left" : "if (last != CharUtils.CR)",
      "right" : "if (last != CharUtils.CR)",
      "info" : "IfStatement[170437-170497]:IfStatement[171931-171991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[170463-170497]:Block[171957-171991]"
    }, {
      "left" : "lastIdx++;",
      "right" : "lastIdx++;",
      "info" : "ExpressionStatement[170477-170487]:ExpressionStatement[171971-171981]"
    }, {
      "left" : "return str.substring(0, lastIdx);",
      "right" : "return str.substring(0, lastIdx);",
      "info" : "ReturnStatement[170506-170539]:ReturnStatement[172000-172033]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[171681-171687]:Modifier[173175-173181]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[171688-171694]:Modifier[173182-173188]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[171695-171701]:SimpleType[173189-173195]"
    }, {
      "left" : "chomp",
      "right" : "chomp",
      "info" : "SimpleName[171702-171707]:SimpleName[173196-173201]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[171708-171718]:SingleVariableDeclaration[173202-173212]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[171720-171736]:SingleVariableDeclaration[173214-173230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171738-171969]:Block[173232-173463]"
    }, {
      "left" : "if (isEmpty(str) || separator == null)",
      "right" : "if (isEmpty(str) || separator == null)",
      "info" : "IfStatement[171748-171822]:IfStatement[173242-173316]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171787-171822]:Block[173281-173316]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[171801-171812]:ReturnStatement[173295-173306]"
    }, {
      "left" : "if (str.endsWith(separator))",
      "right" : "if (str.endsWith(separator))",
      "info" : "IfStatement[171831-171943]:IfStatement[173325-173437]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[171860-171943]:Block[173354-173437]"
    }, {
      "left" : "return str.substring(0, str.length() - separator.length());",
      "right" : "return str.substring(0, str.length() - separator.length());",
      "info" : "ReturnStatement[171874-171933]:ReturnStatement[173368-173427]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[171952-171963]:ReturnStatement[173446-173457]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[172937-172943]:Modifier[174431-174437]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[172944-172950]:Modifier[174438-174444]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[172951-172957]:SimpleType[174445-174451]"
    }, {
      "left" : "chop",
      "right" : "chop",
      "info" : "SimpleName[172958-172962]:SimpleName[174452-174456]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[172963-172973]:SingleVariableDeclaration[174457-174467]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[172975-173457]:Block[174469-174951]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[172985-173038]:IfStatement[174479-174532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173002-173038]:Block[174496-174532]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[173016-173028]:ReturnStatement[174510-174522]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[173047-173073]:VariableDeclarationStatement[174541-174567]"
    }, {
      "left" : "if (strLen < 2)",
      "right" : "if (strLen < 2)",
      "info" : "IfStatement[173082-173135]:IfStatement[174576-174629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173098-173135]:Block[174592-174629]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[173112-173125]:ReturnStatement[174606-174619]"
    }, {
      "left" : "int lastIdx = strLen - 1;",
      "right" : "int lastIdx = strLen - 1;",
      "info" : "VariableDeclarationStatement[173144-173169]:VariableDeclarationStatement[174638-174663]"
    }, {
      "left" : "String ret = str.substring(0, lastIdx);",
      "right" : "String ret = str.substring(0, lastIdx);",
      "info" : "VariableDeclarationStatement[173178-173217]:VariableDeclarationStatement[174672-174711]"
    }, {
      "left" : "char last = str.charAt(lastIdx);",
      "right" : "char last = str.charAt(lastIdx);",
      "info" : "VariableDeclarationStatement[173226-173258]:VariableDeclarationStatement[174720-174752]"
    }, {
      "left" : "if (last == CharUtils.LF)",
      "right" : "if (last == CharUtils.LF)",
      "info" : "IfStatement[173267-173431]:IfStatement[174761-174925]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173293-173431]:Block[174787-174925]"
    }, {
      "left" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
      "right" : "if (ret.charAt(lastIdx - 1) == CharUtils.CR)",
      "info" : "IfStatement[173307-173421]:IfStatement[174801-174915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[173352-173421]:Block[174846-174915]"
    }, {
      "left" : "return ret.substring(0, lastIdx - 1);",
      "right" : "return ret.substring(0, lastIdx - 1);",
      "info" : "ReturnStatement[173370-173407]:ReturnStatement[174864-174901]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[173440-173451]:ReturnStatement[174934-174945]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[174312-174318]:Modifier[175806-175812]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[174319-174325]:Modifier[175813-175819]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[174326-174332]:SimpleType[175820-175826]"
    }, {
      "left" : "repeat",
      "right" : "repeat",
      "info" : "SimpleName[174333-174339]:SimpleName[175827-175833]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[174340-174350]:SingleVariableDeclaration[175834-175844]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[174352-174362]:SingleVariableDeclaration[175846-175856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174364-175750]:Block[175858-177244]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[174421-174474]:IfStatement[175915-175968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174438-174474]:Block[175932-175968]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[174452-174464]:ReturnStatement[175946-175958]"
    }, {
      "left" : "if (repeat <= 0)",
      "right" : "if (repeat <= 0)",
      "info" : "IfStatement[174483-174537]:IfStatement[175977-176031]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174500-174537]:Block[175994-176031]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[174514-174527]:ReturnStatement[176008-176021]"
    }, {
      "left" : "int inputLength = str.length();",
      "right" : "int inputLength = str.length();",
      "info" : "VariableDeclarationStatement[174546-174577]:VariableDeclarationStatement[176040-176071]"
    }, {
      "left" : "if (repeat == 1 || inputLength == 0)",
      "right" : "if (repeat == 1 || inputLength == 0)",
      "info" : "IfStatement[174586-174658]:IfStatement[176080-176152]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174623-174658]:Block[176117-176152]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[174637-174648]:ReturnStatement[176131-176142]"
    }, {
      "left" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
      "right" : "if (inputLength == 1 && repeat <= PAD_LIMIT)",
      "info" : "IfStatement[174667-174774]:IfStatement[176161-176268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[174712-174774]:Block[176206-176268]"
    }, {
      "left" : "return padding(repeat, str.charAt(0));",
      "right" : "return padding(repeat, str.charAt(0));",
      "info" : "ReturnStatement[174726-174764]:ReturnStatement[176220-176258]"
    }, {
      "left" : "int outputLength = inputLength * repeat;",
      "right" : "int outputLength = inputLength * repeat;",
      "info" : "VariableDeclarationStatement[174784-174824]:VariableDeclarationStatement[176278-176318]"
    }, {
      "left" : "switch (inputLength) {\n            case 1 :\n                char ch = str.charAt(0);\n                char[] output1 = new char[outputLength];\n                for (int i = repeat - 1; i >= 0; i--) {\n                    output1[i] = ch;\n                }\n                return new String(output1);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
      "right" : "switch (inputLength) {\n            case 1 :\n                char ch = str.charAt(0);\n                char[] output1 = new char[outputLength];\n                for (int i = repeat - 1; i >= 0; i--) {\n                    output1[i] = ch;\n                }\n                return new String(output1);\n            case 2 :\n                char ch0 = str.charAt(0);\n                char ch1 = str.charAt(1);\n                char[] output2 = new char[outputLength];\n                for (int i = repeat * 2 - 2; i >= 0; i--, i--) {\n                    output2[i] = ch0;\n                    output2[i + 1] = ch1;\n                }\n                return new String(output2);\n            default :\n                StringBuilder buf = new StringBuilder(outputLength);\n                for (int i = 0; i < repeat; i++) {\n                    buf.append(str);\n                }\n                return buf.toString();\n        }",
      "info" : "SwitchStatement[174833-175744]:SwitchStatement[176327-177238]"
    }, {
      "left" : "case 1 :",
      "right" : "case 1 :",
      "info" : "SwitchCase[174868-174876]:SwitchCase[176362-176370]"
    }, {
      "left" : "char ch = str.charAt(0);",
      "right" : "char ch = str.charAt(0);",
      "info" : "VariableDeclarationStatement[174893-174917]:VariableDeclarationStatement[176387-176411]"
    }, {
      "left" : "char[] output1 = new char[outputLength];",
      "right" : "char[] output1 = new char[outputLength];",
      "info" : "VariableDeclarationStatement[174934-174974]:VariableDeclarationStatement[176428-176468]"
    }, {
      "left" : "for (int i = repeat - 1; i >= 0; i--)",
      "right" : "for (int i = repeat - 1; i >= 0; i--)",
      "info" : "ForStatement[174991-175085]:ForStatement[176485-176579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175029-175085]:Block[176523-176579]"
    }, {
      "left" : "output1[i] = ch;",
      "right" : "output1[i] = ch;",
      "info" : "ExpressionStatement[175051-175067]:ExpressionStatement[176545-176561]"
    }, {
      "left" : "return new String(output1);",
      "right" : "return new String(output1);",
      "info" : "ReturnStatement[175102-175129]:ReturnStatement[176596-176623]"
    }, {
      "left" : "case 2 :",
      "right" : "case 2 :",
      "info" : "SwitchCase[175142-175150]:SwitchCase[176636-176644]"
    }, {
      "left" : "char ch0 = str.charAt(0);",
      "right" : "char ch0 = str.charAt(0);",
      "info" : "VariableDeclarationStatement[175167-175192]:VariableDeclarationStatement[176661-176686]"
    }, {
      "left" : "char ch1 = str.charAt(1);",
      "right" : "char ch1 = str.charAt(1);",
      "info" : "VariableDeclarationStatement[175209-175234]:VariableDeclarationStatement[176703-176728]"
    }, {
      "left" : "char[] output2 = new char[outputLength];",
      "right" : "char[] output2 = new char[outputLength];",
      "info" : "VariableDeclarationStatement[175251-175291]:VariableDeclarationStatement[176745-176785]"
    }, {
      "left" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
      "right" : "for (int i = repeat * 2 - 2; i >= 0; i--, i--)",
      "info" : "ForStatement[175308-175454]:ForStatement[176802-176948]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175355-175454]:Block[176849-176948]"
    }, {
      "left" : "output2[i] = ch0;",
      "right" : "output2[i] = ch0;",
      "info" : "ExpressionStatement[175377-175394]:ExpressionStatement[176871-176888]"
    }, {
      "left" : "output2[i + 1] = ch1;",
      "right" : "output2[i + 1] = ch1;",
      "info" : "ExpressionStatement[175415-175436]:ExpressionStatement[176909-176930]"
    }, {
      "left" : "return new String(output2);",
      "right" : "return new String(output2);",
      "info" : "ReturnStatement[175471-175498]:ReturnStatement[176965-176992]"
    }, {
      "left" : "default :",
      "right" : "default :",
      "info" : "SwitchCase[175511-175520]:SwitchCase[177005-177014]"
    }, {
      "left" : "StringBuilder buf = new StringBuilder(outputLength);",
      "right" : "StringBuilder buf = new StringBuilder(outputLength);",
      "info" : "VariableDeclarationStatement[175537-175589]:VariableDeclarationStatement[177031-177083]"
    }, {
      "left" : "for (int i = 0; i < repeat; i++)",
      "right" : "for (int i = 0; i < repeat; i++)",
      "info" : "ForStatement[175606-175695]:ForStatement[177100-177189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[175639-175695]:Block[177133-177189]"
    }, {
      "left" : "buf.append(str);",
      "right" : "buf.append(str);",
      "info" : "ExpressionStatement[175661-175677]:ExpressionStatement[177155-177171]"
    }, {
      "left" : "return buf.toString();",
      "right" : "return buf.toString();",
      "info" : "ReturnStatement[175712-175734]:ReturnStatement[177206-177228]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[176551-176557]:Modifier[178045-178051]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[176558-176564]:Modifier[178052-178058]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[176565-176571]:SimpleType[178059-178065]"
    }, {
      "left" : "repeat",
      "right" : "repeat",
      "info" : "SimpleName[176572-176578]:SimpleName[178066-178072]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[176579-176589]:SingleVariableDeclaration[178073-178083]"
    }, {
      "left" : "String separator",
      "right" : "String separator",
      "info" : "SingleVariableDeclaration[176591-176607]:SingleVariableDeclaration[178085-178101]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[176609-176619]:SingleVariableDeclaration[178103-178113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176621-176972]:Block[178115-178466]"
    }, {
      "left" : "if(str == null || separator == null)",
      "right" : "if(str == null || separator == null)",
      "info" : "IfStatement[176631-176966]:IfStatement[178125-178460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176668-176719]:Block[178162-178213]"
    }, {
      "left" : "return repeat(str, repeat);",
      "right" : "return repeat(str, repeat);",
      "info" : "ReturnStatement[176682-176709]:ReturnStatement[178176-178203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[176725-176966]:Block[178219-178460]"
    }, {
      "left" : "String result = repeat(str + separator, repeat);",
      "right" : "String result = repeat(str + separator, repeat);",
      "info" : "VariableDeclarationStatement[176859-176907]:VariableDeclarationStatement[178353-178401]"
    }, {
      "left" : "return removeEnd(result, separator);",
      "right" : "return removeEnd(result, separator);",
      "info" : "ReturnStatement[176920-176956]:ReturnStatement[178414-178450]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[177917-177924]:Modifier[179411-179418]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[177925-177931]:Modifier[179419-179425]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[177932-177938]:SimpleType[179426-179432]"
    }, {
      "left" : "padding",
      "right" : "padding",
      "info" : "SimpleName[177939-177946]:SimpleName[179433-179440]"
    }, {
      "left" : "int repeat",
      "right" : "int repeat",
      "info" : "SingleVariableDeclaration[177947-177957]:SingleVariableDeclaration[179441-179451]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[177959-177971]:SingleVariableDeclaration[179453-179465]"
    }, {
      "left" : "IndexOutOfBoundsException",
      "right" : "IndexOutOfBoundsException",
      "info" : "SimpleType[177980-178005]:SimpleType[179474-179499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178006-178305]:Block[179500-179799]"
    }, {
      "left" : "if (repeat < 0)",
      "right" : "if (repeat < 0)",
      "info" : "IfStatement[178016-178135]:IfStatement[179510-179629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178032-178135]:Block[179526-179629]"
    }, {
      "left" : "throw new IndexOutOfBoundsException(\"Cannot pad a negative amount: \" + repeat);",
      "right" : "throw new IndexOutOfBoundsException(\"Cannot pad a negative amount: \" + repeat);",
      "info" : "ThrowStatement[178046-178125]:ThrowStatement[179540-179619]"
    }, {
      "left" : "final char[] buf = new char[repeat];",
      "right" : "final char[] buf = new char[repeat];",
      "info" : "VariableDeclarationStatement[178144-178180]:VariableDeclarationStatement[179638-179674]"
    }, {
      "left" : "for (int i = 0; i < buf.length; i++)",
      "right" : "for (int i = 0; i < buf.length; i++)",
      "info" : "ForStatement[178189-178267]:ForStatement[179683-179761]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[178226-178267]:Block[179720-179761]"
    }, {
      "left" : "buf[i] = padChar;",
      "right" : "buf[i] = padChar;",
      "info" : "ExpressionStatement[178240-178257]:ExpressionStatement[179734-179751]"
    }, {
      "left" : "return new String(buf);",
      "right" : "return new String(buf);",
      "info" : "ReturnStatement[178276-178299]:ReturnStatement[179770-179793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[179001-179007]:Modifier[180495-180501]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[179008-179014]:Modifier[180502-180508]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[179015-179021]:SimpleType[180509-180515]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[179022-179030]:SimpleName[180516-180524]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[179031-179041]:SingleVariableDeclaration[180525-180535]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[179043-179051]:SingleVariableDeclaration[180537-180545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179053-179101]:Block[180547-180595]"
    }, {
      "left" : "return rightPad(str, size, ' ');",
      "right" : "return rightPad(str, size, ' ');",
      "info" : "ReturnStatement[179063-179095]:ReturnStatement[180557-180589]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[179903-179909]:Modifier[181397-181403]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[179910-179916]:Modifier[181404-181410]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[179917-179923]:SimpleType[181411-181417]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[179924-179932]:SimpleName[181418-181426]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[179933-179943]:SingleVariableDeclaration[181427-181437]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[179945-179953]:SingleVariableDeclaration[181439-181447]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[179955-179967]:SingleVariableDeclaration[181449-181461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179969-180336]:Block[181463-181830]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[179979-180032]:IfStatement[181473-181526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[179996-180032]:Block[181490-181526]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[180010-180022]:ReturnStatement[181504-181516]"
    }, {
      "left" : "int pads = size - str.length();",
      "right" : "int pads = size - str.length();",
      "info" : "VariableDeclarationStatement[180041-180072]:VariableDeclarationStatement[181535-181566]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[180081-180172]:IfStatement[181575-181666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180096-180172]:Block[181590-181666]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[180110-180121]:ReturnStatement[181604-181615]"
    }, {
      "left" : "if (pads > PAD_LIMIT)",
      "right" : "if (pads > PAD_LIMIT)",
      "info" : "IfStatement[180181-180279]:IfStatement[181675-181773]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[180203-180279]:Block[181697-181773]"
    }, {
      "left" : "return rightPad(str, size, String.valueOf(padChar));",
      "right" : "return rightPad(str, size, String.valueOf(padChar));",
      "info" : "ReturnStatement[180217-180269]:ReturnStatement[181711-181763]"
    }, {
      "left" : "return str.concat(padding(pads, padChar));",
      "right" : "return str.concat(padding(pads, padChar));",
      "info" : "ReturnStatement[180288-180330]:ReturnStatement[181782-181824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[181326-181332]:Modifier[182820-182826]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[181333-181339]:Modifier[182827-182833]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[181340-181346]:SimpleType[182834-182840]"
    }, {
      "left" : "rightPad",
      "right" : "rightPad",
      "info" : "SimpleName[181347-181355]:SimpleName[182841-182849]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[181356-181366]:SingleVariableDeclaration[182850-182860]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[181368-181376]:SingleVariableDeclaration[182862-182870]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[181378-181391]:SingleVariableDeclaration[182872-182885]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181393-182302]:Block[182887-183796]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[181403-181456]:IfStatement[182897-182950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181420-181456]:Block[182914-182950]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[181434-181446]:ReturnStatement[182928-182940]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[181465-181523]:IfStatement[182959-183017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181486-181523]:Block[182980-183017]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[181500-181513]:ExpressionStatement[182994-183007]"
    }, {
      "left" : "int padLen = padStr.length();",
      "right" : "int padLen = padStr.length();",
      "info" : "VariableDeclarationStatement[181532-181561]:VariableDeclarationStatement[183026-183055]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[181570-181596]:VariableDeclarationStatement[183064-183090]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[181605-181630]:VariableDeclarationStatement[183099-183124]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[181639-181730]:IfStatement[183133-183224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181654-181730]:Block[183148-183224]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[181668-181679]:ReturnStatement[183162-183173]"
    }, {
      "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "info" : "IfStatement[181739-181846]:IfStatement[183233-183340]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181777-181846]:Block[183271-183340]"
    }, {
      "left" : "return rightPad(str, size, padStr.charAt(0));",
      "right" : "return rightPad(str, size, padStr.charAt(0));",
      "info" : "ReturnStatement[181791-181836]:ReturnStatement[183285-183330]"
    }, {
      "left" : "if (pads == padLen)",
      "right" : "if (pads == padLen)",
      "info" : "IfStatement[181856-182296]:IfStatement[183350-183790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181876-181926]:Block[183370-183420]"
    }, {
      "left" : "return str.concat(padStr);",
      "right" : "return str.concat(padStr);",
      "info" : "ReturnStatement[181890-181916]:ReturnStatement[183384-183410]"
    }, {
      "left" : "if (pads < padLen)",
      "right" : "if (pads < padLen)",
      "info" : "IfStatement[181932-182296]:IfStatement[183426-183790]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[181951-182020]:Block[183445-183514]"
    }, {
      "left" : "return str.concat(padStr.substring(0, pads));",
      "right" : "return str.concat(padStr.substring(0, pads));",
      "info" : "ReturnStatement[181965-182010]:ReturnStatement[183459-183504]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182026-182296]:Block[183520-183790]"
    }, {
      "left" : "char[] padding = new char[pads];",
      "right" : "char[] padding = new char[pads];",
      "info" : "VariableDeclarationStatement[182040-182072]:VariableDeclarationStatement[183534-183566]"
    }, {
      "left" : "char[] padChars = padStr.toCharArray();",
      "right" : "char[] padChars = padStr.toCharArray();",
      "info" : "VariableDeclarationStatement[182085-182124]:VariableDeclarationStatement[183579-183618]"
    }, {
      "left" : "for (int i = 0; i < pads; i++)",
      "right" : "for (int i = 0; i < pads; i++)",
      "info" : "ForStatement[182137-182234]:ForStatement[183631-183728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[182168-182234]:Block[183662-183728]"
    }, {
      "left" : "padding[i] = padChars[i % padLen];",
      "right" : "padding[i] = padChars[i % padLen];",
      "info" : "ExpressionStatement[182186-182220]:ExpressionStatement[183680-183714]"
    }, {
      "left" : "return str.concat(new String(padding));",
      "right" : "return str.concat(new String(padding));",
      "info" : "ReturnStatement[182247-182286]:ReturnStatement[183741-183780]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[182990-182996]:Modifier[184484-184490]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[182997-183003]:Modifier[184491-184497]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[183004-183010]:SimpleType[184498-184504]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[183011-183018]:SimpleName[184505-184512]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[183019-183029]:SingleVariableDeclaration[184513-184523]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[183031-183039]:SingleVariableDeclaration[184525-184533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183041-183088]:Block[184535-184582]"
    }, {
      "left" : "return leftPad(str, size, ' ');",
      "right" : "return leftPad(str, size, ' ');",
      "info" : "ReturnStatement[183051-183082]:ReturnStatement[184545-184576]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[183863-183869]:Modifier[185357-185363]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[183870-183876]:Modifier[185364-185370]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[183877-183883]:SimpleType[185371-185377]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[183884-183891]:SimpleName[185378-185385]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[183892-183902]:SingleVariableDeclaration[185386-185396]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[183904-183912]:SingleVariableDeclaration[185398-185406]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[183914-183926]:SingleVariableDeclaration[185408-185420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183928-184294]:Block[185422-185788]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[183938-183991]:IfStatement[185432-185485]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[183955-183991]:Block[185449-185485]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[183969-183981]:ReturnStatement[185463-185475]"
    }, {
      "left" : "int pads = size - str.length();",
      "right" : "int pads = size - str.length();",
      "info" : "VariableDeclarationStatement[184000-184031]:VariableDeclarationStatement[185494-185525]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[184040-184131]:IfStatement[185534-185625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184055-184131]:Block[185549-185625]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[184069-184080]:ReturnStatement[185563-185574]"
    }, {
      "left" : "if (pads > PAD_LIMIT)",
      "right" : "if (pads > PAD_LIMIT)",
      "info" : "IfStatement[184140-184237]:IfStatement[185634-185731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[184162-184237]:Block[185656-185731]"
    }, {
      "left" : "return leftPad(str, size, String.valueOf(padChar));",
      "right" : "return leftPad(str, size, String.valueOf(padChar));",
      "info" : "ReturnStatement[184176-184227]:ReturnStatement[185670-185721]"
    }, {
      "left" : "return padding(pads, padChar).concat(str);",
      "right" : "return padding(pads, padChar).concat(str);",
      "info" : "ReturnStatement[184246-184288]:ReturnStatement[185740-185782]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[185254-185260]:Modifier[186748-186754]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[185261-185267]:Modifier[186755-186761]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[185268-185274]:SimpleType[186762-186768]"
    }, {
      "left" : "leftPad",
      "right" : "leftPad",
      "info" : "SimpleName[185275-185282]:SimpleName[186769-186776]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[185283-185293]:SingleVariableDeclaration[186777-186787]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[185295-185303]:SingleVariableDeclaration[186789-186797]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[185305-185318]:SingleVariableDeclaration[186799-186812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185320-186228]:Block[186814-187722]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[185330-185383]:IfStatement[186824-186877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185347-185383]:Block[186841-186877]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[185361-185373]:ReturnStatement[186855-186867]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[185392-185450]:IfStatement[186886-186944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185413-185450]:Block[186907-186944]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[185427-185440]:ExpressionStatement[186921-186934]"
    }, {
      "left" : "int padLen = padStr.length();",
      "right" : "int padLen = padStr.length();",
      "info" : "VariableDeclarationStatement[185459-185488]:VariableDeclarationStatement[186953-186982]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[185497-185523]:VariableDeclarationStatement[186991-187017]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[185532-185557]:VariableDeclarationStatement[187026-187051]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[185566-185657]:IfStatement[187060-187151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185581-185657]:Block[187075-187151]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[185595-185606]:ReturnStatement[187089-187100]"
    }, {
      "left" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "right" : "if (padLen == 1 && pads <= PAD_LIMIT)",
      "info" : "IfStatement[185666-185772]:IfStatement[187160-187266]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185704-185772]:Block[187198-187266]"
    }, {
      "left" : "return leftPad(str, size, padStr.charAt(0));",
      "right" : "return leftPad(str, size, padStr.charAt(0));",
      "info" : "ReturnStatement[185718-185762]:ReturnStatement[187212-187256]"
    }, {
      "left" : "if (pads == padLen)",
      "right" : "if (pads == padLen)",
      "info" : "IfStatement[185782-186222]:IfStatement[187276-187716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185802-185852]:Block[187296-187346]"
    }, {
      "left" : "return padStr.concat(str);",
      "right" : "return padStr.concat(str);",
      "info" : "ReturnStatement[185816-185842]:ReturnStatement[187310-187336]"
    }, {
      "left" : "if (pads < padLen)",
      "right" : "if (pads < padLen)",
      "info" : "IfStatement[185858-186222]:IfStatement[187352-187716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185877-185946]:Block[187371-187440]"
    }, {
      "left" : "return padStr.substring(0, pads).concat(str);",
      "right" : "return padStr.substring(0, pads).concat(str);",
      "info" : "ReturnStatement[185891-185936]:ReturnStatement[187385-187430]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[185952-186222]:Block[187446-187716]"
    }, {
      "left" : "char[] padding = new char[pads];",
      "right" : "char[] padding = new char[pads];",
      "info" : "VariableDeclarationStatement[185966-185998]:VariableDeclarationStatement[187460-187492]"
    }, {
      "left" : "char[] padChars = padStr.toCharArray();",
      "right" : "char[] padChars = padStr.toCharArray();",
      "info" : "VariableDeclarationStatement[186011-186050]:VariableDeclarationStatement[187505-187544]"
    }, {
      "left" : "for (int i = 0; i < pads; i++)",
      "right" : "for (int i = 0; i < pads; i++)",
      "info" : "ForStatement[186063-186160]:ForStatement[187557-187654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186094-186160]:Block[187588-187654]"
    }, {
      "left" : "padding[i] = padChars[i % padLen];",
      "right" : "padding[i] = padChars[i % padLen];",
      "info" : "ExpressionStatement[186112-186146]:ExpressionStatement[187606-187640]"
    }, {
      "left" : "return new String(padding).concat(str);",
      "right" : "return new String(padding).concat(str);",
      "info" : "ReturnStatement[186173-186212]:ReturnStatement[187667-187706]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[186592-186598]:Modifier[188086-188092]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[186599-186605]:Modifier[188093-188099]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[186606-186609]:PrimitiveType[188100-188103]"
    }, {
      "left" : "length",
      "right" : "length",
      "info" : "SimpleName[186610-186616]:SimpleName[188104-188110]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[186617-186632]:SingleVariableDeclaration[188111-188126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[186634-186677]:Block[188128-188171]"
    }, {
      "left" : "return CharSequenceUtils.length(cs);",
      "right" : "return CharSequenceUtils.length(cs);",
      "info" : "ReturnStatement[186638-186674]:ReturnStatement[188132-188168]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[187688-187694]:Modifier[189182-189188]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[187695-187701]:Modifier[189189-189195]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[187702-187708]:SimpleType[189196-189202]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[187709-187715]:SimpleName[189203-189209]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[187716-187726]:SingleVariableDeclaration[189210-189220]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[187728-187736]:SingleVariableDeclaration[189222-189230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[187738-187784]:Block[189232-189278]"
    }, {
      "left" : "return center(str, size, ' ');",
      "right" : "return center(str, size, ' ');",
      "info" : "ReturnStatement[187748-187778]:ReturnStatement[189242-189272]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[188818-188824]:Modifier[190312-190318]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[188825-188831]:Modifier[190319-190325]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[188832-188838]:SimpleType[190326-190332]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[188839-188845]:SimpleName[190333-190339]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[188846-188856]:SingleVariableDeclaration[190340-190350]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[188858-188866]:SingleVariableDeclaration[190352-190360]"
    }, {
      "left" : "char padChar",
      "right" : "char padChar",
      "info" : "SingleVariableDeclaration[188868-188880]:SingleVariableDeclaration[190362-190374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188882-189211]:Block[190376-190705]"
    }, {
      "left" : "if (str == null || size <= 0)",
      "right" : "if (str == null || size <= 0)",
      "info" : "IfStatement[188892-188957]:IfStatement[190386-190451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[188922-188957]:Block[190416-190451]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[188936-188947]:ReturnStatement[190430-190441]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[188966-188992]:VariableDeclarationStatement[190460-190486]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[189001-189026]:VariableDeclarationStatement[190495-190520]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[189035-189085]:IfStatement[190529-190579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[189050-189085]:Block[190544-190579]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[189064-189075]:ReturnStatement[190558-190569]"
    }, {
      "left" : "str = leftPad(str, strLen + pads / 2, padChar);",
      "right" : "str = leftPad(str, strLen + pads / 2, padChar);",
      "info" : "ExpressionStatement[189094-189141]:ExpressionStatement[190588-190635]"
    }, {
      "left" : "str = rightPad(str, size, padChar);",
      "right" : "str = rightPad(str, size, padChar);",
      "info" : "ExpressionStatement[189150-189185]:ExpressionStatement[190644-190679]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[189194-189205]:ReturnStatement[190688-190699]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[190435-190441]:Modifier[191929-191935]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[190442-190448]:Modifier[191936-191942]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[190449-190455]:SimpleType[191943-191949]"
    }, {
      "left" : "center",
      "right" : "center",
      "info" : "SimpleName[190456-190462]:SimpleName[191950-191956]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[190463-190473]:SingleVariableDeclaration[191957-191967]"
    }, {
      "left" : "int size",
      "right" : "int size",
      "info" : "SingleVariableDeclaration[190475-190483]:SingleVariableDeclaration[191969-191977]"
    }, {
      "left" : "String padStr",
      "right" : "String padStr",
      "info" : "SingleVariableDeclaration[190485-190498]:SingleVariableDeclaration[191979-191992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190500-190894]:Block[191994-192388]"
    }, {
      "left" : "if (str == null || size <= 0)",
      "right" : "if (str == null || size <= 0)",
      "info" : "IfStatement[190510-190575]:IfStatement[192004-192069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190540-190575]:Block[192034-192069]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[190554-190565]:ReturnStatement[192048-192059]"
    }, {
      "left" : "if (isEmpty(padStr))",
      "right" : "if (isEmpty(padStr))",
      "info" : "IfStatement[190584-190642]:IfStatement[192078-192136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190605-190642]:Block[192099-192136]"
    }, {
      "left" : "padStr = \" \";",
      "right" : "padStr = \" \";",
      "info" : "ExpressionStatement[190619-190632]:ExpressionStatement[192113-192126]"
    }, {
      "left" : "int strLen = str.length();",
      "right" : "int strLen = str.length();",
      "info" : "VariableDeclarationStatement[190651-190677]:VariableDeclarationStatement[192145-192171]"
    }, {
      "left" : "int pads = size - strLen;",
      "right" : "int pads = size - strLen;",
      "info" : "VariableDeclarationStatement[190686-190711]:VariableDeclarationStatement[192180-192205]"
    }, {
      "left" : "if (pads <= 0)",
      "right" : "if (pads <= 0)",
      "info" : "IfStatement[190720-190770]:IfStatement[192214-192264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[190735-190770]:Block[192229-192264]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[190749-190760]:ReturnStatement[192243-192254]"
    }, {
      "left" : "str = leftPad(str, strLen + pads / 2, padStr);",
      "right" : "str = leftPad(str, strLen + pads / 2, padStr);",
      "info" : "ExpressionStatement[190779-190825]:ExpressionStatement[192273-192319]"
    }, {
      "left" : "str = rightPad(str, size, padStr);",
      "right" : "str = rightPad(str, size, padStr);",
      "info" : "ExpressionStatement[190834-190868]:ExpressionStatement[192328-192362]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[190877-190888]:ReturnStatement[192371-192382]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[191841-191847]:Modifier[193335-193341]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[191848-191854]:Modifier[193342-193348]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[191855-191861]:SimpleType[193349-193355]"
    }, {
      "left" : "upperCase",
      "right" : "upperCase",
      "info" : "SimpleName[191862-191871]:SimpleName[193356-193365]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[191872-191882]:SingleVariableDeclaration[193366-193376]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191884-191987]:Block[193378-193481]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[191894-191947]:IfStatement[193388-193441]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[191911-191947]:Block[193405-193441]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[191925-191937]:ReturnStatement[193419-193431]"
    }, {
      "left" : "return str.toUpperCase();",
      "right" : "return str.toUpperCase();",
      "info" : "ReturnStatement[191956-191981]:ReturnStatement[193450-193475]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[192643-192649]:Modifier[194137-194143]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[192650-192656]:Modifier[194144-194150]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[192657-192663]:SimpleType[194151-194157]"
    }, {
      "left" : "upperCase",
      "right" : "upperCase",
      "info" : "SimpleName[192664-192673]:SimpleName[194158-194167]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[192674-192684]:SingleVariableDeclaration[194168-194178]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[192686-192699]:SingleVariableDeclaration[194180-194193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192701-192810]:Block[194195-194304]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[192711-192764]:IfStatement[194205-194258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[192728-192764]:Block[194222-194258]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[192742-192754]:ReturnStatement[194236-194248]"
    }, {
      "left" : "return str.toUpperCase(locale);",
      "right" : "return str.toUpperCase(locale);",
      "info" : "ReturnStatement[192773-192804]:ReturnStatement[194267-194298]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[193656-193662]:Modifier[195150-195156]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[193663-193669]:Modifier[195157-195163]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[193670-193676]:SimpleType[195164-195170]"
    }, {
      "left" : "lowerCase",
      "right" : "lowerCase",
      "info" : "SimpleName[193677-193686]:SimpleName[195171-195180]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[193687-193697]:SingleVariableDeclaration[195181-195191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193699-193802]:Block[195193-195296]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[193709-193762]:IfStatement[195203-195256]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[193726-193762]:Block[195220-195256]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[193740-193752]:ReturnStatement[195234-195246]"
    }, {
      "left" : "return str.toLowerCase();",
      "right" : "return str.toLowerCase();",
      "info" : "ReturnStatement[193771-193796]:ReturnStatement[195265-195290]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[194458-194464]:Modifier[195952-195958]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[194465-194471]:Modifier[195959-195965]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[194472-194478]:SimpleType[195966-195972]"
    }, {
      "left" : "lowerCase",
      "right" : "lowerCase",
      "info" : "SimpleName[194479-194488]:SimpleName[195973-195982]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[194489-194499]:SingleVariableDeclaration[195983-195993]"
    }, {
      "left" : "Locale locale",
      "right" : "Locale locale",
      "info" : "SingleVariableDeclaration[194501-194514]:SingleVariableDeclaration[195995-196008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194516-194625]:Block[196010-196119]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[194526-194579]:IfStatement[196020-196073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[194543-194579]:Block[196037-196073]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[194557-194569]:ReturnStatement[196051-196063]"
    }, {
      "left" : "return str.toLowerCase(locale);",
      "right" : "return str.toLowerCase(locale);",
      "info" : "ReturnStatement[194588-194619]:ReturnStatement[196082-196113]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[195404-195410]:Modifier[196898-196904]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[195411-195417]:Modifier[196905-196911]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[195418-195424]:SimpleType[196912-196918]"
    }, {
      "left" : "capitalize",
      "right" : "capitalize",
      "info" : "SimpleName[195425-195435]:SimpleName[196919-196929]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[195436-195451]:SingleVariableDeclaration[196930-196945]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195453-195810]:Block[196947-197304]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[195463-195516]:IfStatement[196957-197010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195480-195516]:Block[196974-197010]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[195494-195506]:ReturnStatement[196988-197000]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[195525-195536]:VariableDeclarationStatement[197019-197030]"
    }, {
      "left" : "if ((strLen = cs.length()) == 0)",
      "right" : "if ((strLen = cs.length()) == 0)",
      "info" : "IfStatement[195545-195623]:IfStatement[197039-197117]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[195578-195623]:Block[197072-197117]"
    }, {
      "left" : "return cs.toString();",
      "right" : "return cs.toString();",
      "info" : "ReturnStatement[195592-195613]:ReturnStatement[197086-197107]"
    }, {
      "left" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "right" : "return new StringBuilder(strLen)\n            .append(Character.toTitleCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "info" : "ReturnStatement[195632-195804]:ReturnStatement[197126-197298]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[196617-196623]:Modifier[198111-198117]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[196624-196630]:Modifier[198118-198124]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[196631-196637]:SimpleType[198125-198131]"
    }, {
      "left" : "uncapitalize",
      "right" : "uncapitalize",
      "info" : "SimpleName[196638-196650]:SimpleName[198132-198144]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[196651-196666]:SingleVariableDeclaration[198145-198160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196668-197025]:Block[198162-198519]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[196678-196731]:IfStatement[198172-198225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196695-196731]:Block[198189-198225]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[196709-196721]:ReturnStatement[198203-198215]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[196740-196751]:VariableDeclarationStatement[198234-198245]"
    }, {
      "left" : "if ((strLen = cs.length()) == 0)",
      "right" : "if ((strLen = cs.length()) == 0)",
      "info" : "IfStatement[196760-196838]:IfStatement[198254-198332]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[196793-196838]:Block[198287-198332]"
    }, {
      "left" : "return cs.toString();",
      "right" : "return cs.toString();",
      "info" : "ReturnStatement[196807-196828]:ReturnStatement[198301-198322]"
    }, {
      "left" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "right" : "return new StringBuilder(strLen)\n            .append(Character.toLowerCase(cs.charAt(0)))\n            .append(CharSequenceUtils.subSequence(cs, 1))\n            .toString();",
      "info" : "ReturnStatement[196847-197019]:ReturnStatement[198341-198513]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[198128-198134]:Modifier[199622-199628]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[198135-198141]:Modifier[199629-199635]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[198142-198148]:SimpleType[199636-199642]"
    }, {
      "left" : "swapCase",
      "right" : "swapCase",
      "info" : "SimpleName[198149-198157]:SimpleName[199643-199651]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[198158-198168]:SingleVariableDeclaration[199652-199662]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198170-198827]:Block[199664-200321]"
    }, {
      "left" : "int strLen;",
      "right" : "int strLen;",
      "info" : "VariableDeclarationStatement[198180-198191]:VariableDeclarationStatement[199674-199685]"
    }, {
      "left" : "if (str == null || (strLen = str.length()) == 0)",
      "right" : "if (str == null || (strLen = str.length()) == 0)",
      "info" : "IfStatement[198200-198284]:IfStatement[199694-199778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198249-198284]:Block[199743-199778]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[198263-198274]:ReturnStatement[199757-199768]"
    }, {
      "left" : "StringBuilder buffer = new StringBuilder(strLen);",
      "right" : "StringBuilder buffer = new StringBuilder(strLen);",
      "info" : "VariableDeclarationStatement[198293-198342]:VariableDeclarationStatement[199787-199836]"
    }, {
      "left" : "char ch = 0;",
      "right" : "char ch = 0;",
      "info" : "VariableDeclarationStatement[198352-198364]:VariableDeclarationStatement[199846-199858]"
    }, {
      "left" : "for (int i = 0; i < strLen; i++)",
      "right" : "for (int i = 0; i < strLen; i++)",
      "info" : "ForStatement[198373-198787]:ForStatement[199867-200281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198406-198787]:Block[199900-200281]"
    }, {
      "left" : "ch = str.charAt(i);",
      "right" : "ch = str.charAt(i);",
      "info" : "ExpressionStatement[198420-198439]:ExpressionStatement[199914-199933]"
    }, {
      "left" : "if (Character.isUpperCase(ch))",
      "right" : "if (Character.isUpperCase(ch))",
      "info" : "IfStatement[198452-198746]:IfStatement[199946-200240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198483-198546]:Block[199977-200040]"
    }, {
      "left" : "ch = Character.toLowerCase(ch);",
      "right" : "ch = Character.toLowerCase(ch);",
      "info" : "ExpressionStatement[198501-198532]:ExpressionStatement[199995-200026]"
    }, {
      "left" : "if (Character.isTitleCase(ch))",
      "right" : "if (Character.isTitleCase(ch))",
      "info" : "IfStatement[198552-198746]:IfStatement[200046-200240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198583-198646]:Block[200077-200140]"
    }, {
      "left" : "ch = Character.toLowerCase(ch);",
      "right" : "ch = Character.toLowerCase(ch);",
      "info" : "ExpressionStatement[198601-198632]:ExpressionStatement[200095-200126]"
    }, {
      "left" : "if (Character.isLowerCase(ch))",
      "right" : "if (Character.isLowerCase(ch))",
      "info" : "IfStatement[198652-198746]:IfStatement[200146-200240]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[198683-198746]:Block[200177-200240]"
    }, {
      "left" : "ch = Character.toUpperCase(ch);",
      "right" : "ch = Character.toUpperCase(ch);",
      "info" : "ExpressionStatement[198701-198732]:ExpressionStatement[200195-200226]"
    }, {
      "left" : "buffer.append(ch);",
      "right" : "buffer.append(ch);",
      "info" : "ExpressionStatement[198759-198777]:ExpressionStatement[200253-200271]"
    }, {
      "left" : "return buffer.toString();",
      "right" : "return buffer.toString();",
      "info" : "ReturnStatement[198796-198821]:ReturnStatement[200290-200315]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[199707-199713]:Modifier[201201-201207]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[199714-199720]:Modifier[201208-201214]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[199721-199724]:PrimitiveType[201215-201218]"
    }, {
      "left" : "countMatches",
      "right" : "countMatches",
      "info" : "SimpleName[199725-199737]:SimpleName[201219-201231]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[199738-199748]:SingleVariableDeclaration[201232-201242]"
    }, {
      "left" : "String sub",
      "right" : "String sub",
      "info" : "SingleVariableDeclaration[199750-199760]:SingleVariableDeclaration[201244-201254]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199762-200042]:Block[201256-201536]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(sub))",
      "right" : "if (isEmpty(str) || isEmpty(sub))",
      "info" : "IfStatement[199772-199839]:IfStatement[201266-201333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199806-199839]:Block[201300-201333]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[199820-199829]:ReturnStatement[201314-201323]"
    }, {
      "left" : "int count = 0;",
      "right" : "int count = 0;",
      "info" : "VariableDeclarationStatement[199848-199862]:VariableDeclarationStatement[201342-201356]"
    }, {
      "left" : "int idx = 0;",
      "right" : "int idx = 0;",
      "info" : "VariableDeclarationStatement[199871-199883]:VariableDeclarationStatement[201365-201377]"
    }, {
      "left" : "while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND)",
      "right" : "while ((idx = str.indexOf(sub, idx)) != INDEX_NOT_FOUND)",
      "info" : "WhileStatement[199892-200014]:WhileStatement[201386-201508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[199949-200014]:Block[201443-201508]"
    }, {
      "left" : "count++;",
      "right" : "count++;",
      "info" : "ExpressionStatement[199963-199971]:ExpressionStatement[201457-201465]"
    }, {
      "left" : "idx += sub.length();",
      "right" : "idx += sub.length();",
      "info" : "ExpressionStatement[199984-200004]:ExpressionStatement[201478-201498]"
    }, {
      "left" : "return count;",
      "right" : "return count;",
      "info" : "ReturnStatement[200023-200036]:ReturnStatement[201517-201530]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[200810-200816]:Modifier[202304-202310]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[200817-200823]:Modifier[202311-202317]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[200824-200831]:PrimitiveType[202318-202325]"
    }, {
      "left" : "isAlpha",
      "right" : "isAlpha",
      "info" : "SimpleName[200832-200839]:SimpleName[202326-202333]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[200840-200855]:SingleVariableDeclaration[202334-202349]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[200857-201131]:Block[202351-202625]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[200867-200920]:IfStatement[202361-202414]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[200883-200920]:Block[202377-202414]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[200897-200910]:ReturnStatement[202391-202404]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[200929-200950]:VariableDeclarationStatement[202423-202444]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[200959-201104]:ForStatement[202453-202598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[200988-201104]:Block[202482-202598]"
    }, {
      "left" : "if (Character.isLetter(cs.charAt(i)) == false)",
      "right" : "if (Character.isLetter(cs.charAt(i)) == false)",
      "info" : "IfStatement[201002-201094]:IfStatement[202496-202588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201049-201094]:Block[202543-202588]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[201067-201080]:ReturnStatement[202561-202574]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[201113-201125]:ReturnStatement[202607-202619]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[201914-201920]:Modifier[203408-203414]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[201921-201927]:Modifier[203415-203421]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[201928-201935]:PrimitiveType[203422-203429]"
    }, {
      "left" : "isAlphaSpace",
      "right" : "isAlphaSpace",
      "info" : "SimpleName[201936-201948]:SimpleName[203430-203442]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[201949-201964]:SingleVariableDeclaration[203443-203458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201966-202267]:Block[203460-203761]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[201976-202029]:IfStatement[203470-203523]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[201992-202029]:Block[203486-203523]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[202006-202019]:ReturnStatement[203500-203513]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[202038-202059]:VariableDeclarationStatement[203532-203553]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[202068-202240]:ForStatement[203562-203734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202097-202240]:Block[203591-203734]"
    }, {
      "left" : "if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "right" : "if ((Character.isLetter(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "info" : "IfStatement[202111-202230]:IfStatement[203605-203724]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[202185-202230]:Block[203679-203724]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[202203-202216]:ReturnStatement[203697-203710]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[202249-202261]:ReturnStatement[203743-203755]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[203053-203059]:Modifier[204547-204553]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[203060-203066]:Modifier[204554-204560]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[203067-203074]:PrimitiveType[204561-204568]"
    }, {
      "left" : "isAlphanumeric",
      "right" : "isAlphanumeric",
      "info" : "SimpleName[203075-203089]:SimpleName[204569-204583]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[203090-203105]:SingleVariableDeclaration[204584-204599]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203107-203388]:Block[204601-204882]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[203117-203170]:IfStatement[204611-204664]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203133-203170]:Block[204627-204664]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[203147-203160]:ReturnStatement[204641-204654]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[203179-203200]:VariableDeclarationStatement[204673-204694]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[203209-203361]:ForStatement[204703-204855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203238-203361]:Block[204732-204855]"
    }, {
      "left" : "if (Character.isLetterOrDigit(cs.charAt(i)) == false)",
      "right" : "if (Character.isLetterOrDigit(cs.charAt(i)) == false)",
      "info" : "IfStatement[203252-203351]:IfStatement[204746-204845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[203306-203351]:Block[204800-204845]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[203324-203337]:ReturnStatement[204818-204831]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[203370-203382]:ReturnStatement[204864-204876]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[204212-204218]:Modifier[205706-205712]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[204219-204225]:Modifier[205713-205719]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[204226-204233]:PrimitiveType[205720-205727]"
    }, {
      "left" : "isAlphanumericSpace",
      "right" : "isAlphanumericSpace",
      "info" : "SimpleName[204234-204253]:SimpleName[205728-205747]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[204254-204269]:SingleVariableDeclaration[205748-205763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204271-204579]:Block[205765-206073]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[204281-204334]:IfStatement[205775-205828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204297-204334]:Block[205791-205828]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[204311-204324]:ReturnStatement[205805-205818]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[204343-204364]:VariableDeclarationStatement[205837-205858]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[204373-204552]:ForStatement[205867-206046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204402-204552]:Block[205896-206046]"
    }, {
      "left" : "if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "right" : "if ((Character.isLetterOrDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "info" : "IfStatement[204416-204542]:IfStatement[205910-206036]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[204497-204542]:Block[205991-206036]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[204515-204528]:ReturnStatement[206009-206022]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[204561-204573]:ReturnStatement[206055-206067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[205633-205639]:Modifier[207127-207133]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[205640-205646]:Modifier[207134-207140]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[205647-205654]:PrimitiveType[207141-207148]"
    }, {
      "left" : "isAsciiPrintable",
      "right" : "isAsciiPrintable",
      "info" : "SimpleName[205655-205671]:SimpleName[207149-207165]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[205672-205687]:SingleVariableDeclaration[207166-207181]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205689-205971]:Block[207183-207465]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[205699-205752]:IfStatement[207193-207246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205715-205752]:Block[207209-207246]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[205729-205742]:ReturnStatement[207223-207236]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[205761-205782]:VariableDeclarationStatement[207255-207276]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[205791-205944]:ForStatement[207285-207438]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205820-205944]:Block[207314-207438]"
    }, {
      "left" : "if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false)",
      "right" : "if (CharUtils.isAsciiPrintable(cs.charAt(i)) == false)",
      "info" : "IfStatement[205834-205934]:IfStatement[207328-207428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[205889-205934]:Block[207383-207428]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[205907-205920]:ReturnStatement[207401-207414]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[205953-205965]:ReturnStatement[207447-207459]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[206803-206809]:Modifier[208297-208303]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[206810-206816]:Modifier[208304-208310]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[206817-206824]:PrimitiveType[208311-208318]"
    }, {
      "left" : "isNumeric",
      "right" : "isNumeric",
      "info" : "SimpleName[206825-206834]:SimpleName[208319-208328]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[206835-206850]:SingleVariableDeclaration[208329-208344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[206852-207125]:Block[208346-208619]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[206862-206915]:IfStatement[208356-208409]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[206878-206915]:Block[208372-208409]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[206892-206905]:ReturnStatement[208386-208399]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[206924-206945]:VariableDeclarationStatement[208418-208439]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[206954-207098]:ForStatement[208448-208592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[206983-207098]:Block[208477-208592]"
    }, {
      "left" : "if (Character.isDigit(cs.charAt(i)) == false)",
      "right" : "if (Character.isDigit(cs.charAt(i)) == false)",
      "info" : "IfStatement[206997-207088]:IfStatement[208491-208582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[207043-207088]:Block[208537-208582]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[207061-207074]:ReturnStatement[208555-208568]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[207107-207119]:ReturnStatement[208601-208613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[208007-208013]:Modifier[209501-209507]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[208014-208020]:Modifier[209508-209514]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[208021-208028]:PrimitiveType[209515-209522]"
    }, {
      "left" : "isNumericSpace",
      "right" : "isNumericSpace",
      "info" : "SimpleName[208029-208043]:SimpleName[209523-209537]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[208044-208059]:SingleVariableDeclaration[209538-209553]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208061-208361]:Block[209555-209855]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[208071-208124]:IfStatement[209565-209618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208087-208124]:Block[209581-209618]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[208101-208114]:ReturnStatement[209595-209608]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[208133-208154]:VariableDeclarationStatement[209627-209648]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[208163-208334]:ForStatement[209657-209828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208192-208334]:Block[209686-209828]"
    }, {
      "left" : "if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "right" : "if ((Character.isDigit(cs.charAt(i)) == false) && (cs.charAt(i) != ' '))",
      "info" : "IfStatement[208206-208324]:IfStatement[209700-209818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[208279-208324]:Block[209773-209818]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[208297-208310]:ReturnStatement[209791-209804]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[208343-208355]:ReturnStatement[209837-209849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[209074-209080]:Modifier[210568-210574]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[209081-209087]:Modifier[210575-210581]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[209088-209095]:PrimitiveType[210582-210589]"
    }, {
      "left" : "isWhitespace",
      "right" : "isWhitespace",
      "info" : "SimpleName[209096-209108]:SimpleName[210590-210602]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[209109-209124]:SingleVariableDeclaration[210603-210618]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209126-209406]:Block[210620-210900]"
    }, {
      "left" : "if (cs == null)",
      "right" : "if (cs == null)",
      "info" : "IfStatement[209136-209189]:IfStatement[210630-210683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209152-209189]:Block[210646-210683]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[209166-209179]:ReturnStatement[210660-210673]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[209198-209219]:VariableDeclarationStatement[210692-210713]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[209228-209379]:ForStatement[210722-210873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209257-209379]:Block[210751-210873]"
    }, {
      "left" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "right" : "if ((Character.isWhitespace(cs.charAt(i)) == false))",
      "info" : "IfStatement[209271-209369]:IfStatement[210765-210863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[209324-209369]:Block[210818-210863]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[209342-209355]:ReturnStatement[210836-210849]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[209388-209400]:ReturnStatement[210882-210894]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[210102-210108]:Modifier[211596-211602]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[210109-210115]:Modifier[211603-211609]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[210116-210123]:PrimitiveType[211610-211617]"
    }, {
      "left" : "isAllLowerCase",
      "right" : "isAllLowerCase",
      "info" : "SimpleName[210124-210138]:SimpleName[211618-211632]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[210139-210154]:SingleVariableDeclaration[211633-211648]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210156-210448]:Block[211650-211942]"
    }, {
      "left" : "if (cs == null || isEmpty(cs))",
      "right" : "if (cs == null || isEmpty(cs))",
      "info" : "IfStatement[210166-210234]:IfStatement[211660-211728]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210197-210234]:Block[211691-211728]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[210211-210224]:ReturnStatement[211705-211718]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[210243-210264]:VariableDeclarationStatement[211737-211758]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[210273-210421]:ForStatement[211767-211915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210302-210421]:Block[211796-211915]"
    }, {
      "left" : "if (Character.isLowerCase(cs.charAt(i)) == false)",
      "right" : "if (Character.isLowerCase(cs.charAt(i)) == false)",
      "info" : "IfStatement[210316-210411]:IfStatement[211810-211905]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[210366-210411]:Block[211860-211905]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[210384-210397]:ReturnStatement[211878-211891]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[210430-210442]:ReturnStatement[211924-211936]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[211137-211143]:Modifier[212631-212637]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[211144-211150]:Modifier[212638-212644]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[211151-211158]:PrimitiveType[212645-212652]"
    }, {
      "left" : "isAllUpperCase",
      "right" : "isAllUpperCase",
      "info" : "SimpleName[211159-211173]:SimpleName[212653-212667]"
    }, {
      "left" : "CharSequence cs",
      "right" : "CharSequence cs",
      "info" : "SingleVariableDeclaration[211174-211189]:SingleVariableDeclaration[212668-212683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211191-211483]:Block[212685-212977]"
    }, {
      "left" : "if (cs == null || isEmpty(cs))",
      "right" : "if (cs == null || isEmpty(cs))",
      "info" : "IfStatement[211201-211269]:IfStatement[212695-212763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211232-211269]:Block[212726-212763]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[211246-211259]:ReturnStatement[212740-212753]"
    }, {
      "left" : "int sz = cs.length();",
      "right" : "int sz = cs.length();",
      "info" : "VariableDeclarationStatement[211278-211299]:VariableDeclarationStatement[212772-212793]"
    }, {
      "left" : "for (int i = 0; i < sz; i++)",
      "right" : "for (int i = 0; i < sz; i++)",
      "info" : "ForStatement[211308-211456]:ForStatement[212802-212950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211337-211456]:Block[212831-212950]"
    }, {
      "left" : "if (Character.isUpperCase(cs.charAt(i)) == false)",
      "right" : "if (Character.isUpperCase(cs.charAt(i)) == false)",
      "info" : "IfStatement[211351-211446]:IfStatement[212845-212940]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[211401-211446]:Block[212895-212940]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[211419-211432]:ReturnStatement[212913-212926]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[211465-211477]:ReturnStatement[212959-212971]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[212118-212124]:Modifier[213612-213618]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[212125-212131]:Modifier[213619-213625]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[212132-212138]:SimpleType[213626-213632]"
    }, {
      "left" : "defaultString",
      "right" : "defaultString",
      "info" : "SimpleName[212139-212152]:SimpleName[213633-213646]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[212153-212163]:SingleVariableDeclaration[213647-213657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[212165-212214]:Block[213659-213708]"
    }, {
      "left" : "return str == null ? EMPTY : str;",
      "right" : "return str == null ? EMPTY : str;",
      "info" : "ReturnStatement[212175-212208]:ReturnStatement[213669-213702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[212903-212909]:Modifier[214397-214403]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[212910-212916]:Modifier[214404-214410]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[212917-212923]:SimpleType[214411-214417]"
    }, {
      "left" : "defaultString",
      "right" : "defaultString",
      "info" : "SimpleName[212924-212937]:SimpleName[214418-214431]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[212938-212948]:SingleVariableDeclaration[214432-214442]"
    }, {
      "left" : "String defaultStr",
      "right" : "String defaultStr",
      "info" : "SingleVariableDeclaration[212950-212967]:SingleVariableDeclaration[214444-214461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[212969-213023]:Block[214463-214517]"
    }, {
      "left" : "return str == null ? defaultStr : str;",
      "right" : "return str == null ? defaultStr : str;",
      "info" : "ReturnStatement[212979-213017]:ReturnStatement[214473-214511]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[213816-213822]:Modifier[215310-215316]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[213823-213829]:Modifier[215317-215323]"
    }, {
      "left" : "T extends CharSequence",
      "right" : "T extends CharSequence",
      "info" : "TypeParameter[213831-213853]:TypeParameter[215325-215347]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[213855-213856]:SimpleType[215349-215350]"
    }, {
      "left" : "defaultIfEmpty",
      "right" : "defaultIfEmpty",
      "info" : "SimpleName[213857-213871]:SimpleName[215351-215365]"
    }, {
      "left" : "T str",
      "right" : "T str",
      "info" : "SingleVariableDeclaration[213872-213877]:SingleVariableDeclaration[215366-215371]"
    }, {
      "left" : "T defaultStr",
      "right" : "T defaultStr",
      "info" : "SingleVariableDeclaration[213879-213891]:SingleVariableDeclaration[215373-215385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[213893-213960]:Block[215387-215454]"
    }, {
      "left" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
      "right" : "return StringUtils.isEmpty(str) ? defaultStr : str;",
      "info" : "ReturnStatement[213903-213954]:ReturnStatement[215397-215448]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[214516-214522]:Modifier[216010-216016]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[214523-214529]:Modifier[216017-216023]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[214530-214536]:SimpleType[216024-216030]"
    }, {
      "left" : "reverse",
      "right" : "reverse",
      "info" : "SimpleName[214537-214544]:SimpleName[216031-216038]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[214545-214555]:SingleVariableDeclaration[216039-216049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[214557-214680]:Block[216051-216174]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[214567-214620]:IfStatement[216061-216114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[214584-214620]:Block[216078-216114]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[214598-214610]:ReturnStatement[216092-216104]"
    }, {
      "left" : "return new StringBuilder(str).reverse().toString();",
      "right" : "return new StringBuilder(str).reverse().toString();",
      "info" : "ReturnStatement[214623-214674]:ReturnStatement[216117-216168]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[215432-215438]:Modifier[216926-216932]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[215439-215445]:Modifier[216933-216939]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[215446-215452]:SimpleType[216940-216946]"
    }, {
      "left" : "reverseDelimited",
      "right" : "reverseDelimited",
      "info" : "SimpleName[215453-215469]:SimpleName[216947-216963]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[215470-215480]:SingleVariableDeclaration[216964-216974]"
    }, {
      "left" : "char separatorChar",
      "right" : "char separatorChar",
      "info" : "SingleVariableDeclaration[215482-215500]:SingleVariableDeclaration[216976-216994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[215502-215806]:Block[216996-217300]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[215512-215565]:IfStatement[217006-217059]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[215529-215565]:Block[217023-217059]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[215543-215555]:ReturnStatement[217037-217049]"
    }, {
      "left" : "String[] strs = split(str, separatorChar);",
      "right" : "String[] strs = split(str, separatorChar);",
      "info" : "VariableDeclarationStatement[215682-215724]:VariableDeclarationStatement[217176-217218]"
    }, {
      "left" : "ArrayUtils.reverse(strs);",
      "right" : "ArrayUtils.reverse(strs);",
      "info" : "ExpressionStatement[215733-215758]:ExpressionStatement[217227-217252]"
    }, {
      "left" : "return join(strs, separatorChar);",
      "right" : "return join(strs, separatorChar);",
      "info" : "ReturnStatement[215767-215800]:ReturnStatement[217261-217294]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[217298-217304]:Modifier[218792-218798]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[217305-217311]:Modifier[218799-218805]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[217312-217318]:SimpleType[218806-218812]"
    }, {
      "left" : "abbreviate",
      "right" : "abbreviate",
      "info" : "SimpleName[217319-217329]:SimpleName[218813-218823]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[217330-217340]:SingleVariableDeclaration[218824-218834]"
    }, {
      "left" : "int maxWidth",
      "right" : "int maxWidth",
      "info" : "SingleVariableDeclaration[217342-217354]:SingleVariableDeclaration[218836-218848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[217356-217408]:Block[218850-218902]"
    }, {
      "left" : "return abbreviate(str, 0, maxWidth);",
      "right" : "return abbreviate(str, 0, maxWidth);",
      "info" : "ReturnStatement[217366-217402]:ReturnStatement[218860-218896]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[219315-219321]:Modifier[220809-220815]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[219322-219328]:Modifier[220816-220822]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[219329-219335]:SimpleType[220823-220829]"
    }, {
      "left" : "abbreviate",
      "right" : "abbreviate",
      "info" : "SimpleName[219336-219346]:SimpleName[220830-220840]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[219347-219357]:SingleVariableDeclaration[220841-220851]"
    }, {
      "left" : "int offset",
      "right" : "int offset",
      "info" : "SingleVariableDeclaration[219359-219369]:SingleVariableDeclaration[220853-220863]"
    }, {
      "left" : "int maxWidth",
      "right" : "int maxWidth",
      "info" : "SingleVariableDeclaration[219371-219383]:SingleVariableDeclaration[220865-220877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219385-220343]:Block[220879-221837]"
    }, {
      "left" : "if (str == null)",
      "right" : "if (str == null)",
      "info" : "IfStatement[219395-219448]:IfStatement[220889-220942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219412-219448]:Block[220906-220942]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[219426-219438]:ReturnStatement[220920-220932]"
    }, {
      "left" : "if (maxWidth < 4)",
      "right" : "if (maxWidth < 4)",
      "info" : "IfStatement[219457-219569]:IfStatement[220951-221063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219475-219569]:Block[220969-221063]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
      "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width is 4\");",
      "info" : "ThrowStatement[219489-219559]:ThrowStatement[220983-221053]"
    }, {
      "left" : "if (str.length() <= maxWidth)",
      "right" : "if (str.length() <= maxWidth)",
      "info" : "IfStatement[219578-219643]:IfStatement[221072-221137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219608-219643]:Block[221102-221137]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[219622-219633]:ReturnStatement[221116-221127]"
    }, {
      "left" : "if (offset > str.length())",
      "right" : "if (offset > str.length())",
      "info" : "IfStatement[219652-219725]:IfStatement[221146-221219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219679-219725]:Block[221173-221219]"
    }, {
      "left" : "offset = str.length();",
      "right" : "offset = str.length();",
      "info" : "ExpressionStatement[219693-219715]:ExpressionStatement[221187-221209]"
    }, {
      "left" : "if ((str.length() - offset) < (maxWidth - 3))",
      "right" : "if ((str.length() - offset) < (maxWidth - 3))",
      "info" : "IfStatement[219734-219843]:IfStatement[221228-221337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219780-219843]:Block[221274-221337]"
    }, {
      "left" : "offset = str.length() - (maxWidth - 3);",
      "right" : "offset = str.length() - (maxWidth - 3);",
      "info" : "ExpressionStatement[219794-219833]:ExpressionStatement[221288-221327]"
    }, {
      "left" : "final String abrevMarker = \"...\";",
      "right" : "final String abrevMarker = \"...\";",
      "info" : "VariableDeclarationStatement[219852-219885]:VariableDeclarationStatement[221346-221379]"
    }, {
      "left" : "if (offset <= 4)",
      "right" : "if (offset <= 4)",
      "info" : "IfStatement[219888-219981]:IfStatement[221382-221475]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[219905-219981]:Block[221399-221475]"
    }, {
      "left" : "return str.substring(0, maxWidth - 3) + abrevMarker;",
      "right" : "return str.substring(0, maxWidth - 3) + abrevMarker;",
      "info" : "ReturnStatement[219919-219971]:ReturnStatement[221413-221465]"
    }, {
      "left" : "if (maxWidth < 7)",
      "right" : "if (maxWidth < 7)",
      "info" : "IfStatement[219990-220114]:IfStatement[221484-221608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220008-220114]:Block[221502-221608]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
      "right" : "throw new IllegalArgumentException(\"Minimum abbreviation width with offset is 7\");",
      "info" : "ThrowStatement[220022-220104]:ThrowStatement[221516-221598]"
    }, {
      "left" : "if ((offset + (maxWidth - 3)) < str.length())",
      "right" : "if ((offset + (maxWidth - 3)) < str.length())",
      "info" : "IfStatement[220123-220262]:IfStatement[221617-221756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[220169-220262]:Block[221663-221756]"
    }, {
      "left" : "return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",
      "right" : "return abrevMarker + abbreviate(str.substring(offset), maxWidth - 3);",
      "info" : "ReturnStatement[220183-220252]:ReturnStatement[221677-221746]"
    }, {
      "left" : "return abrevMarker + str.substring(str.length() - (maxWidth - 3));",
      "right" : "return abrevMarker + str.substring(str.length() - (maxWidth - 3));",
      "info" : "ReturnStatement[220271-220337]:ReturnStatement[221765-221831]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[221856-221862]:Modifier[223350-223356]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[221863-221869]:Modifier[223357-223363]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[221870-221876]:SimpleType[223364-223370]"
    }, {
      "left" : "abbreviateMiddle",
      "right" : "abbreviateMiddle",
      "info" : "SimpleName[221877-221893]:SimpleName[223371-223387]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[221894-221904]:SingleVariableDeclaration[223388-223398]"
    }, {
      "left" : "String middle",
      "right" : "String middle",
      "info" : "SingleVariableDeclaration[221906-221919]:SingleVariableDeclaration[223400-223413]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[221921-221931]:SingleVariableDeclaration[223415-223425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221933-222538]:Block[223427-224032]"
    }, {
      "left" : "if (isEmpty(str) || isEmpty(middle))",
      "right" : "if (isEmpty(str) || isEmpty(middle))",
      "info" : "IfStatement[221943-222015]:IfStatement[223437-223509]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[221980-222015]:Block[223474-223509]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[221994-222005]:ReturnStatement[223488-223499]"
    }, {
      "left" : "if (length >= str.length() || length < (middle.length()+2))",
      "right" : "if (length >= str.length() || length < (middle.length()+2))",
      "info" : "IfStatement[222031-222126]:IfStatement[223525-223620]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[222091-222126]:Block[223585-223620]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[222105-222116]:ReturnStatement[223599-223610]"
    }, {
      "left" : "int targetSting = length-middle.length();",
      "right" : "int targetSting = length-middle.length();",
      "info" : "VariableDeclarationStatement[222136-222177]:VariableDeclarationStatement[223630-223671]"
    }, {
      "left" : "int startOffset = targetSting/2+targetSting%2;",
      "right" : "int startOffset = targetSting/2+targetSting%2;",
      "info" : "VariableDeclarationStatement[222186-222232]:VariableDeclarationStatement[223680-223726]"
    }, {
      "left" : "int endOffset = str.length()-targetSting/2;",
      "right" : "int endOffset = str.length()-targetSting/2;",
      "info" : "VariableDeclarationStatement[222241-222284]:VariableDeclarationStatement[223735-223778]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder(length);",
      "right" : "StringBuilder builder = new StringBuilder(length);",
      "info" : "VariableDeclarationStatement[222302-222352]:VariableDeclarationStatement[223796-223846]"
    }, {
      "left" : "builder.append(str.substring(0,startOffset));",
      "right" : "builder.append(str.substring(0,startOffset));",
      "info" : "ExpressionStatement[222361-222406]:ExpressionStatement[223855-223900]"
    }, {
      "left" : "builder.append(middle);",
      "right" : "builder.append(middle);",
      "info" : "ExpressionStatement[222415-222438]:ExpressionStatement[223909-223932]"
    }, {
      "left" : "builder.append(str.substring(endOffset));",
      "right" : "builder.append(str.substring(endOffset));",
      "info" : "ExpressionStatement[222447-222488]:ExpressionStatement[223941-223982]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[222506-222532]:ReturnStatement[224000-224026]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[223644-223650]:Modifier[225138-225144]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[223651-223657]:Modifier[225145-225151]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[223658-223664]:SimpleType[225152-225158]"
    }, {
      "left" : "difference",
      "right" : "difference",
      "info" : "SimpleName[223665-223675]:SimpleName[225159-225169]"
    }, {
      "left" : "String str1",
      "right" : "String str1",
      "info" : "SingleVariableDeclaration[223676-223687]:SingleVariableDeclaration[225170-225181]"
    }, {
      "left" : "String str2",
      "right" : "String str2",
      "info" : "SingleVariableDeclaration[223689-223700]:SingleVariableDeclaration[225183-225194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223702-223991]:Block[225196-225485]"
    }, {
      "left" : "if (str1 == null)",
      "right" : "if (str1 == null)",
      "info" : "IfStatement[223712-223766]:IfStatement[225206-225260]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223730-223766]:Block[225224-225260]"
    }, {
      "left" : "return str2;",
      "right" : "return str2;",
      "info" : "ReturnStatement[223744-223756]:ReturnStatement[225238-225250]"
    }, {
      "left" : "if (str2 == null)",
      "right" : "if (str2 == null)",
      "info" : "IfStatement[223775-223829]:IfStatement[225269-225323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223793-223829]:Block[225287-225323]"
    }, {
      "left" : "return str1;",
      "right" : "return str1;",
      "info" : "ReturnStatement[223807-223819]:ReturnStatement[225301-225313]"
    }, {
      "left" : "int at = indexOfDifference(str1, str2);",
      "right" : "int at = indexOfDifference(str1, str2);",
      "info" : "VariableDeclarationStatement[223838-223877]:VariableDeclarationStatement[225332-225371]"
    }, {
      "left" : "if (at == INDEX_NOT_FOUND)",
      "right" : "if (at == INDEX_NOT_FOUND)",
      "info" : "IfStatement[223886-223950]:IfStatement[225380-225444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[223913-223950]:Block[225407-225444]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[223927-223940]:ReturnStatement[225421-225434]"
    }, {
      "left" : "return str2.substring(at);",
      "right" : "return str2.substring(at);",
      "info" : "ReturnStatement[223959-223985]:ReturnStatement[225453-225479]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[224926-224932]:Modifier[226420-226426]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[224933-224939]:Modifier[226427-226433]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[224940-224943]:PrimitiveType[226434-226437]"
    }, {
      "left" : "indexOfDifference",
      "right" : "indexOfDifference",
      "info" : "SimpleName[224944-224961]:SimpleName[226438-226455]"
    }, {
      "left" : "CharSequence cs1",
      "right" : "CharSequence cs1",
      "info" : "SingleVariableDeclaration[224962-224978]:SingleVariableDeclaration[226456-226472]"
    }, {
      "left" : "CharSequence cs2",
      "right" : "CharSequence cs2",
      "info" : "SingleVariableDeclaration[224980-224996]:SingleVariableDeclaration[226474-226490]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[224998-225444]:Block[226492-226938]"
    }, {
      "left" : "if (cs1 == cs2)",
      "right" : "if (cs1 == cs2)",
      "info" : "IfStatement[225008-225071]:IfStatement[226502-226565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225024-225071]:Block[226518-226565]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[225038-225061]:ReturnStatement[226532-226555]"
    }, {
      "left" : "if (cs1 == null || cs2 == null)",
      "right" : "if (cs1 == null || cs2 == null)",
      "info" : "IfStatement[225080-225145]:IfStatement[226574-226639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225112-225145]:Block[226606-226639]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[225126-225135]:ReturnStatement[226620-226629]"
    }, {
      "left" : "int i;",
      "right" : "int i;",
      "info" : "VariableDeclarationStatement[225154-225160]:VariableDeclarationStatement[226648-226654]"
    }, {
      "left" : "for (i = 0; i < cs1.length() && i < cs2.length(); ++i)",
      "right" : "for (i = 0; i < cs1.length() && i < cs2.length(); ++i)",
      "info" : "ForStatement[225169-225322]:ForStatement[226663-226816]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225224-225322]:Block[226718-226816]"
    }, {
      "left" : "if (cs1.charAt(i) != cs2.charAt(i))",
      "right" : "if (cs1.charAt(i) != cs2.charAt(i))",
      "info" : "IfStatement[225238-225312]:IfStatement[226732-226806]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225274-225312]:Block[226768-226806]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[225292-225298]:BreakStatement[226786-226792]"
    }, {
      "left" : "if (i < cs2.length() || i < cs1.length())",
      "right" : "if (i < cs2.length() || i < cs1.length())",
      "info" : "IfStatement[225331-225406]:IfStatement[226825-226900]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[225373-225406]:Block[226867-226900]"
    }, {
      "left" : "return i;",
      "right" : "return i;",
      "info" : "ReturnStatement[225387-225396]:ReturnStatement[226881-226890]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[225415-225438]:ReturnStatement[226909-226932]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[227098-227104]:Modifier[228592-228598]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[227105-227111]:Modifier[228599-228605]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[227112-227115]:PrimitiveType[228606-228609]"
    }, {
      "left" : "indexOfDifference",
      "right" : "indexOfDifference",
      "info" : "SimpleName[227116-227133]:SimpleName[228610-228627]"
    }, {
      "left" : "CharSequence[] css",
      "right" : "CharSequence[] css",
      "info" : "SingleVariableDeclaration[227134-227152]:SingleVariableDeclaration[228628-228646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227154-229261]:Block[228648-230755]"
    }, {
      "left" : "if (css == null || css.length <= 1)",
      "right" : "if (css == null || css.length <= 1)",
      "info" : "IfStatement[227164-227247]:IfStatement[228658-228741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227200-227247]:Block[228694-228741]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[227214-227237]:ReturnStatement[228708-228731]"
    }, {
      "left" : "boolean anyStringNull = false;",
      "right" : "boolean anyStringNull = false;",
      "info" : "VariableDeclarationStatement[227256-227286]:VariableDeclarationStatement[228750-228780]"
    }, {
      "left" : "boolean allStringsNull = true;",
      "right" : "boolean allStringsNull = true;",
      "info" : "VariableDeclarationStatement[227295-227325]:VariableDeclarationStatement[228789-228819]"
    }, {
      "left" : "int arrayLen = css.length;",
      "right" : "int arrayLen = css.length;",
      "info" : "VariableDeclarationStatement[227334-227360]:VariableDeclarationStatement[228828-228854]"
    }, {
      "left" : "int shortestStrLen = Integer.MAX_VALUE;",
      "right" : "int shortestStrLen = Integer.MAX_VALUE;",
      "info" : "VariableDeclarationStatement[227369-227408]:VariableDeclarationStatement[228863-228902]"
    }, {
      "left" : "int longestStrLen = 0;",
      "right" : "int longestStrLen = 0;",
      "info" : "VariableDeclarationStatement[227417-227439]:VariableDeclarationStatement[228911-228933]"
    }, {
      "left" : "for (int i = 0; i < arrayLen; i++)",
      "right" : "for (int i = 0; i < arrayLen; i++)",
      "info" : "ForStatement[227634-228013]:ForStatement[229128-229507]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227669-228013]:Block[229163-229507]"
    }, {
      "left" : "if (css[i] == null)",
      "right" : "if (css[i] == null)",
      "info" : "IfStatement[227683-228003]:IfStatement[229177-229497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227703-227792]:Block[229197-229286]"
    }, {
      "left" : "anyStringNull = true;",
      "right" : "anyStringNull = true;",
      "info" : "ExpressionStatement[227721-227742]:ExpressionStatement[229215-229236]"
    }, {
      "left" : "shortestStrLen = 0;",
      "right" : "shortestStrLen = 0;",
      "info" : "ExpressionStatement[227759-227778]:ExpressionStatement[229253-229272]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[227798-228003]:Block[229292-229497]"
    }, {
      "left" : "allStringsNull = false;",
      "right" : "allStringsNull = false;",
      "info" : "ExpressionStatement[227816-227839]:ExpressionStatement[229310-229333]"
    }, {
      "left" : "shortestStrLen = Math.min(css[i].length(), shortestStrLen);",
      "right" : "shortestStrLen = Math.min(css[i].length(), shortestStrLen);",
      "info" : "ExpressionStatement[227856-227915]:ExpressionStatement[229350-229409]"
    }, {
      "left" : "longestStrLen = Math.max(css[i].length(), longestStrLen);",
      "right" : "longestStrLen = Math.max(css[i].length(), longestStrLen);",
      "info" : "ExpressionStatement[227932-227989]:ExpressionStatement[229426-229483]"
    }, {
      "left" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
      "right" : "if (allStringsNull || (longestStrLen == 0 && !anyStringNull))",
      "info" : "IfStatement[228089-228198]:IfStatement[229583-229692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228151-228198]:Block[229645-229692]"
    }, {
      "left" : "return INDEX_NOT_FOUND;",
      "right" : "return INDEX_NOT_FOUND;",
      "info" : "ReturnStatement[228165-228188]:ReturnStatement[229659-229682]"
    }, {
      "left" : "if (shortestStrLen == 0)",
      "right" : "if (shortestStrLen == 0)",
      "info" : "IfStatement[228276-228334]:IfStatement[229770-229828]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228301-228334]:Block[229795-229828]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[228315-228324]:ReturnStatement[229809-229818]"
    }, {
      "left" : "int firstDiff = -1;",
      "right" : "int firstDiff = -1;",
      "info" : "VariableDeclarationStatement[228418-228437]:VariableDeclarationStatement[229912-229931]"
    }, {
      "left" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
      "right" : "for (int stringPos = 0; stringPos < shortestStrLen; stringPos++)",
      "info" : "ForStatement[228446-228899]:ForStatement[229940-230393]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228511-228899]:Block[230005-230393]"
    }, {
      "left" : "char comparisonChar = css[0].charAt(stringPos);",
      "right" : "char comparisonChar = css[0].charAt(stringPos);",
      "info" : "VariableDeclarationStatement[228525-228572]:VariableDeclarationStatement[230019-230066]"
    }, {
      "left" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
      "right" : "for (int arrayPos = 1; arrayPos < arrayLen; arrayPos++)",
      "info" : "ForStatement[228585-228817]:ForStatement[230079-230311]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228641-228817]:Block[230135-230311]"
    }, {
      "left" : "if (css[arrayPos].charAt(stringPos) != comparisonChar)",
      "right" : "if (css[arrayPos].charAt(stringPos) != comparisonChar)",
      "info" : "IfStatement[228659-228803]:IfStatement[230153-230297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228714-228803]:Block[230208-230297]"
    }, {
      "left" : "firstDiff = stringPos;",
      "right" : "firstDiff = stringPos;",
      "info" : "ExpressionStatement[228736-228758]:ExpressionStatement[230230-230252]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[228779-228785]:BreakStatement[230273-230279]"
    }, {
      "left" : "if (firstDiff != -1)",
      "right" : "if (firstDiff != -1)",
      "info" : "IfStatement[228830-228889]:IfStatement[230324-230383]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228851-228889]:Block[230345-230383]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[228869-228875]:BreakStatement[230363-230369]"
    }, {
      "left" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
      "right" : "if (firstDiff == -1 && shortestStrLen != longestStrLen)",
      "info" : "IfStatement[228909-229229]:IfStatement[230403-230723]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[228965-229229]:Block[230459-230723]"
    }, {
      "left" : "return shortestStrLen;",
      "right" : "return shortestStrLen;",
      "info" : "ReturnStatement[229197-229219]:ReturnStatement[230691-230713]"
    }, {
      "left" : "return firstDiff;",
      "right" : "return firstDiff;",
      "info" : "ReturnStatement[229238-229255]:ReturnStatement[230732-230749]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[231049-231055]:Modifier[232543-232549]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[231056-231062]:Modifier[232550-232556]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[231063-231069]:SimpleType[232557-232563]"
    }, {
      "left" : "getCommonPrefix",
      "right" : "getCommonPrefix",
      "info" : "SimpleName[231070-231085]:SimpleName[232564-232579]"
    }, {
      "left" : "String[] strs",
      "right" : "String[] strs",
      "info" : "SingleVariableDeclaration[231086-231099]:SingleVariableDeclaration[232580-232593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231101-231731]:Block[232595-233225]"
    }, {
      "left" : "if (strs == null || strs.length == 0)",
      "right" : "if (strs == null || strs.length == 0)",
      "info" : "IfStatement[231111-231186]:IfStatement[232605-232680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231149-231186]:Block[232643-232680]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[231163-231176]:ReturnStatement[232657-232670]"
    }, {
      "left" : "int smallestIndexOfDiff = indexOfDifference(strs);",
      "right" : "int smallestIndexOfDiff = indexOfDifference(strs);",
      "info" : "VariableDeclarationStatement[231195-231245]:VariableDeclarationStatement[232689-232739]"
    }, {
      "left" : "if (smallestIndexOfDiff == INDEX_NOT_FOUND)",
      "right" : "if (smallestIndexOfDiff == INDEX_NOT_FOUND)",
      "info" : "IfStatement[231254-231725]:IfStatement[232748-233219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231298-231458]:Block[232792-232952]"
    }, {
      "left" : "if (strs[0] == null)",
      "right" : "if (strs[0] == null)",
      "info" : "IfStatement[231354-231420]:IfStatement[232848-232914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231375-231420]:Block[232869-232914]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[231393-231406]:ReturnStatement[232887-232900]"
    }, {
      "left" : "return strs[0];",
      "right" : "return strs[0];",
      "info" : "ReturnStatement[231433-231448]:ReturnStatement[232927-232942]"
    }, {
      "left" : "if (smallestIndexOfDiff == 0)",
      "right" : "if (smallestIndexOfDiff == 0)",
      "info" : "IfStatement[231464-231725]:IfStatement[232958-233219]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231494-231586]:Block[232988-233080]"
    }, {
      "left" : "return EMPTY;",
      "right" : "return EMPTY;",
      "info" : "ReturnStatement[231563-231576]:ReturnStatement[233057-233070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[231592-231725]:Block[233086-233219]"
    }, {
      "left" : "return strs[0].substring(0, smallestIndexOfDiff);",
      "right" : "return strs[0].substring(0, smallestIndexOfDiff);",
      "info" : "ReturnStatement[231666-231715]:ReturnStatement[233160-233209]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[233703-233709]:Modifier[235197-235203]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[233710-233716]:Modifier[235204-235210]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[233717-233720]:PrimitiveType[235211-235214]"
    }, {
      "left" : "getLevenshteinDistance",
      "right" : "getLevenshteinDistance",
      "info" : "SimpleName[233721-233743]:SimpleName[235215-235237]"
    }, {
      "left" : "CharSequence s",
      "right" : "CharSequence s",
      "info" : "SingleVariableDeclaration[233744-233758]:SingleVariableDeclaration[235238-235252]"
    }, {
      "left" : "CharSequence t",
      "right" : "CharSequence t",
      "info" : "SingleVariableDeclaration[233760-233774]:SingleVariableDeclaration[235254-235268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[233776-236619]:Block[235270-238113]"
    }, {
      "left" : "if (s == null || t == null)",
      "right" : "if (s == null || t == null)",
      "info" : "IfStatement[233786-233901]:IfStatement[235280-235395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[233814-233901]:Block[235308-235395]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Strings must not be null\");",
      "right" : "throw new IllegalArgumentException(\"Strings must not be null\");",
      "info" : "ThrowStatement[233828-233891]:ThrowStatement[235322-235385]"
    }, {
      "left" : "int n = s.length();",
      "right" : "int n = s.length();",
      "info" : "VariableDeclarationStatement[235119-235138]:VariableDeclarationStatement[236613-236632]"
    }, {
      "left" : "int m = t.length();",
      "right" : "int m = t.length();",
      "info" : "VariableDeclarationStatement[235162-235181]:VariableDeclarationStatement[236656-236675]"
    }, {
      "left" : "if (n == 0)",
      "right" : "if (n == 0)",
      "info" : "IfStatement[235206-235302]:IfStatement[236700-236796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[235218-235251]:Block[236712-236745]"
    }, {
      "left" : "return m;",
      "right" : "return m;",
      "info" : "ReturnStatement[235232-235241]:ReturnStatement[236726-236735]"
    }, {
      "left" : "if (m == 0)",
      "right" : "if (m == 0)",
      "info" : "IfStatement[235257-235302]:IfStatement[236751-236796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[235269-235302]:Block[236763-236796]"
    }, {
      "left" : "return n;",
      "right" : "return n;",
      "info" : "ReturnStatement[235283-235292]:ReturnStatement[236777-236786]"
    }, {
      "left" : "if (n > m)",
      "right" : "if (n > m)",
      "info" : "IfStatement[235312-235513]:IfStatement[236806-237007]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[235323-235513]:Block[236817-237007]"
    }, {
      "left" : "CharSequence tmp = s;",
      "right" : "CharSequence tmp = s;",
      "info" : "VariableDeclarationStatement[235395-235416]:VariableDeclarationStatement[236889-236910]"
    }, {
      "left" : "s = t;",
      "right" : "s = t;",
      "info" : "ExpressionStatement[235429-235435]:ExpressionStatement[236923-236929]"
    }, {
      "left" : "t = tmp;",
      "right" : "t = tmp;",
      "info" : "ExpressionStatement[235448-235456]:ExpressionStatement[236942-236950]"
    }, {
      "left" : "n = m;",
      "right" : "n = m;",
      "info" : "ExpressionStatement[235469-235475]:ExpressionStatement[236963-236969]"
    }, {
      "left" : "m = t.length();",
      "right" : "m = t.length();",
      "info" : "ExpressionStatement[235488-235503]:ExpressionStatement[236982-236997]"
    }, {
      "left" : "int p[] = new int[n+1];",
      "right" : "int p[] = new int[n+1];",
      "info" : "VariableDeclarationStatement[235523-235546]:VariableDeclarationStatement[237017-237040]"
    }, {
      "left" : "int d[] = new int[n+1];",
      "right" : "int d[] = new int[n+1];",
      "info" : "VariableDeclarationStatement[235593-235616]:VariableDeclarationStatement[237087-237110]"
    }, {
      "left" : "int _d[];",
      "right" : "int _d[];",
      "info" : "VariableDeclarationStatement[235653-235662]:VariableDeclarationStatement[237147-237156]"
    }, {
      "left" : "int i;",
      "right" : "int i;",
      "info" : "VariableDeclarationStatement[235756-235762]:VariableDeclarationStatement[237250-237256]"
    }, {
      "left" : "int j;",
      "right" : "int j;",
      "info" : "VariableDeclarationStatement[235793-235799]:VariableDeclarationStatement[237287-237293]"
    }, {
      "left" : "char t_j;",
      "right" : "char t_j;",
      "info" : "VariableDeclarationStatement[235831-235840]:VariableDeclarationStatement[237325-237334]"
    }, {
      "left" : "int cost;",
      "right" : "int cost;",
      "info" : "VariableDeclarationStatement[235872-235881]:VariableDeclarationStatement[237366-237375]"
    }, {
      "left" : "for (i = 0; i<=n; i++)",
      "right" : "for (i = 0; i<=n; i++)",
      "info" : "ForStatement[235899-235955]:ForStatement[237393-237449]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[235922-235955]:Block[237416-237449]"
    }, {
      "left" : "p[i] = i;",
      "right" : "p[i] = i;",
      "info" : "ExpressionStatement[235936-235945]:ExpressionStatement[237430-237439]"
    }, {
      "left" : "for (j = 1; j<=m; j++)",
      "right" : "for (j = 1; j<=m; j++)",
      "info" : "ForStatement[235965-236461]:ForStatement[237459-237955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[235988-236461]:Block[237482-237955]"
    }, {
      "left" : "t_j = t.charAt(j-1);",
      "right" : "t_j = t.charAt(j-1);",
      "info" : "ExpressionStatement[236002-236022]:ExpressionStatement[237496-237516]"
    }, {
      "left" : "d[0] = j;",
      "right" : "d[0] = j;",
      "info" : "ExpressionStatement[236035-236044]:ExpressionStatement[237529-237538]"
    }, {
      "left" : "for (i=1; i<=n; i++)",
      "right" : "for (i=1; i<=n; i++)",
      "info" : "ForStatement[236058-236313]:ForStatement[237552-237807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[236079-236313]:Block[237573-237807]"
    }, {
      "left" : "cost = s.charAt(i-1)==t_j ? 0 : 1;",
      "right" : "cost = s.charAt(i-1)==t_j ? 0 : 1;",
      "info" : "ExpressionStatement[236097-236131]:ExpressionStatement[237591-237625]"
    }, {
      "left" : "d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",
      "right" : "d[i] = Math.min(Math.min(d[i-1]+1, p[i]+1),  p[i-1]+cost);",
      "info" : "ExpressionStatement[236241-236299]:ExpressionStatement[237735-237793]"
    }, {
      "left" : "_d = p;",
      "right" : "_d = p;",
      "info" : "ExpressionStatement[236405-236412]:ExpressionStatement[237899-237906]"
    }, {
      "left" : "p = d;",
      "right" : "p = d;",
      "info" : "ExpressionStatement[236425-236431]:ExpressionStatement[237919-237925]"
    }, {
      "left" : "d = _d;",
      "right" : "d = _d;",
      "info" : "ExpressionStatement[236444-236451]:ExpressionStatement[237938-237945]"
    }, {
      "left" : "return p[n];",
      "right" : "return p[n];",
      "info" : "ReturnStatement[236601-236613]:ReturnStatement[238095-238107]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[238045-238051]:Modifier[239539-239545]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[238052-238058]:Modifier[239546-239552]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[238059-238066]:PrimitiveType[239553-239560]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[238067-238077]:SimpleName[239561-239571]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[238078-238088]:SingleVariableDeclaration[239572-239582]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[238090-238103]:SingleVariableDeclaration[239584-239597]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[238105-238159]:Block[239599-239653]"
    }, {
      "left" : "return startsWith(str, prefix, false);",
      "right" : "return startsWith(str, prefix, false);",
      "info" : "ReturnStatement[238115-238153]:ReturnStatement[239609-239647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[239095-239101]:Modifier[240589-240595]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[239102-239108]:Modifier[240596-240602]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[239109-239116]:PrimitiveType[240603-240610]"
    }, {
      "left" : "startsWithIgnoreCase",
      "right" : "startsWithIgnoreCase",
      "info" : "SimpleName[239117-239137]:SimpleName[240611-240631]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[239138-239148]:SingleVariableDeclaration[240632-240642]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[239150-239163]:SingleVariableDeclaration[240644-240657]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239165-239218]:Block[240659-240712]"
    }, {
      "left" : "return startsWith(str, prefix, true);",
      "right" : "return startsWith(str, prefix, true);",
      "info" : "ReturnStatement[239175-239212]:ReturnStatement[240669-240706]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[239708-239715]:Modifier[241202-241209]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[239716-239722]:Modifier[241210-241216]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[239723-239730]:PrimitiveType[241217-241224]"
    }, {
      "left" : "startsWith",
      "right" : "startsWith",
      "info" : "SimpleName[239731-239741]:SimpleName[241225-241235]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[239742-239752]:SingleVariableDeclaration[241236-241246]"
    }, {
      "left" : "String prefix",
      "right" : "String prefix",
      "info" : "SingleVariableDeclaration[239754-239767]:SingleVariableDeclaration[241248-241261]"
    }, {
      "left" : "boolean ignoreCase",
      "right" : "boolean ignoreCase",
      "info" : "SingleVariableDeclaration[239769-239787]:SingleVariableDeclaration[241263-241281]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239789-240062]:Block[241283-241556]"
    }, {
      "left" : "if (str == null || prefix == null)",
      "right" : "if (str == null || prefix == null)",
      "info" : "IfStatement[239799-239897]:IfStatement[241293-241391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239834-239897]:Block[241328-241391]"
    }, {
      "left" : "return (str == null && prefix == null);",
      "right" : "return (str == null && prefix == null);",
      "info" : "ReturnStatement[239848-239887]:ReturnStatement[241342-241381]"
    }, {
      "left" : "if (prefix.length() > str.length())",
      "right" : "if (prefix.length() > str.length())",
      "info" : "IfStatement[239906-239979]:IfStatement[241400-241473]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[239942-239979]:Block[241436-241473]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[239956-239969]:ReturnStatement[241450-241463]"
    }, {
      "left" : "return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",
      "right" : "return str.regionMatches(ignoreCase, 0, prefix, 0, prefix.length());",
      "info" : "ReturnStatement[239988-240056]:ReturnStatement[241482-241550]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[240907-240913]:Modifier[242401-242407]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[240914-240920]:Modifier[242408-242414]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[240921-240928]:PrimitiveType[242415-242422]"
    }, {
      "left" : "startsWithAny",
      "right" : "startsWithAny",
      "info" : "SimpleName[240929-240942]:SimpleName[242423-242436]"
    }, {
      "left" : "String string",
      "right" : "String string",
      "info" : "SingleVariableDeclaration[240943-240956]:SingleVariableDeclaration[242437-242450]"
    }, {
      "left" : "String[] searchStrings",
      "right" : "String[] searchStrings",
      "info" : "SingleVariableDeclaration[240958-240980]:SingleVariableDeclaration[242452-242474]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[240982-241341]:Block[242476-242835]"
    }, {
      "left" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
      "right" : "if (isEmpty(string) || ArrayUtils.isEmpty(searchStrings))",
      "info" : "IfStatement[240992-241087]:IfStatement[242486-242581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[241050-241087]:Block[242544-242581]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[241064-241077]:ReturnStatement[242558-242571]"
    }, {
      "left" : "for (int i = 0; i < searchStrings.length; i++)",
      "right" : "for (int i = 0; i < searchStrings.length; i++)",
      "info" : "ForStatement[241096-241313]:ForStatement[242590-242807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[241143-241313]:Block[242637-242807]"
    }, {
      "left" : "String searchString = searchStrings[i];",
      "right" : "String searchString = searchStrings[i];",
      "info" : "VariableDeclarationStatement[241157-241196]:VariableDeclarationStatement[242651-242690]"
    }, {
      "left" : "if (StringUtils.startsWith(string, searchString))",
      "right" : "if (StringUtils.startsWith(string, searchString))",
      "info" : "IfStatement[241209-241303]:IfStatement[242703-242797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[241259-241303]:Block[242753-242797]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[241277-241289]:ReturnStatement[242771-242783]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[241322-241335]:ReturnStatement[242816-242829]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[242339-242345]:Modifier[243833-243839]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[242346-242352]:Modifier[243840-243846]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[242353-242360]:PrimitiveType[243847-243854]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[242361-242369]:SimpleName[243855-243863]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[242370-242380]:SingleVariableDeclaration[243864-243874]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[242382-242395]:SingleVariableDeclaration[243876-243889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[242397-242449]:Block[243891-243943]"
    }, {
      "left" : "return endsWith(str, suffix, false);",
      "right" : "return endsWith(str, suffix, false);",
      "info" : "ReturnStatement[242407-242443]:ReturnStatement[243901-243937]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[243432-243438]:Modifier[244926-244932]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[243439-243445]:Modifier[244933-244939]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[243446-243453]:PrimitiveType[244940-244947]"
    }, {
      "left" : "endsWithIgnoreCase",
      "right" : "endsWithIgnoreCase",
      "info" : "SimpleName[243454-243472]:SimpleName[244948-244966]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[243473-243483]:SingleVariableDeclaration[244967-244977]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[243485-243498]:SingleVariableDeclaration[244979-244992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[243500-243551]:Block[244994-245045]"
    }, {
      "left" : "return endsWith(str, suffix, true);",
      "right" : "return endsWith(str, suffix, true);",
      "info" : "ReturnStatement[243510-243545]:ReturnStatement[245004-245039]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[244037-244044]:Modifier[245531-245538]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[244045-244051]:Modifier[245539-245545]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[244052-244059]:PrimitiveType[245546-245553]"
    }, {
      "left" : "endsWith",
      "right" : "endsWith",
      "info" : "SimpleName[244060-244068]:SimpleName[245554-245562]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[244069-244079]:SingleVariableDeclaration[245563-245573]"
    }, {
      "left" : "String suffix",
      "right" : "String suffix",
      "info" : "SingleVariableDeclaration[244081-244094]:SingleVariableDeclaration[245575-245588]"
    }, {
      "left" : "boolean ignoreCase",
      "right" : "boolean ignoreCase",
      "info" : "SingleVariableDeclaration[244096-244114]:SingleVariableDeclaration[245590-245608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[244116-244451]:Block[245610-245945]"
    }, {
      "left" : "if (str == null || suffix == null)",
      "right" : "if (str == null || suffix == null)",
      "info" : "IfStatement[244126-244222]:IfStatement[245620-245716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[244161-244222]:Block[245655-245716]"
    }, {
      "left" : "return str == null && suffix == null;",
      "right" : "return str == null && suffix == null;",
      "info" : "ReturnStatement[244175-244212]:ReturnStatement[245669-245706]"
    }, {
      "left" : "if (suffix.length() > str.length())",
      "right" : "if (suffix.length() > str.length())",
      "info" : "IfStatement[244231-244304]:IfStatement[245725-245798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[244267-244304]:Block[245761-245798]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[244281-244294]:ReturnStatement[245775-245788]"
    }, {
      "left" : "int strOffset = str.length() - suffix.length();",
      "right" : "int strOffset = str.length() - suffix.length();",
      "info" : "VariableDeclarationStatement[244313-244360]:VariableDeclarationStatement[245807-245854]"
    }, {
      "left" : "return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",
      "right" : "return str.regionMatches(ignoreCase, strOffset, suffix, 0, suffix.length());",
      "info" : "ReturnStatement[244369-244445]:ReturnStatement[245863-245939]"
    } ]
  },
  "interFileMappings" : { }
}