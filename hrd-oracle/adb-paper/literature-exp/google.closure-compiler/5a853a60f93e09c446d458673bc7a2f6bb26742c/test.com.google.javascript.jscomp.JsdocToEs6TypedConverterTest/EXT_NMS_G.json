{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsdocToEs6TypedConverterTest",
      "right" : "JsdocToEs6TypedConverterTest",
      "info" : "TypeDeclaration[720-2988]:TypeDeclaration[2570-10200]"
    }, {
      "left" : "public void setUp()",
      "right" : "public void setUp()",
      "info" : "MethodDeclaration[998-1149]:MethodDeclaration[2848-2999]"
    }, {
      "left" : "protected CompilerOptions getOptions()",
      "right" : "protected CompilerOptions getOptions()",
      "info" : "MethodDeclaration[1153-1339]:MethodDeclaration[3003-3189]"
    }, {
      "left" : "public CompilerPass getProcessor(Compiler compiler)",
      "right" : "public CompilerPass getProcessor(Compiler compiler)",
      "info" : "MethodDeclaration[1343-1463]:MethodDeclaration[3193-3313]"
    }, {
      "left" : "protected int getNumRepetitions()",
      "right" : "protected int getNumRepetitions()",
      "info" : "MethodDeclaration[1467-1532]:MethodDeclaration[3317-3382]"
    }, {
      "left" : "public void testVariableDeclaration()",
      "right" : "public void testVariableDeclaration()",
      "info" : "MethodDeclaration[1536-1647]:MethodDeclaration[3386-3497]"
    }, {
      "left" : "public void testVariableDeclarationWithoutDeclaredType() throws Exception",
      "right" : "public void testVariableDeclarationWithoutDeclaredType() throws Exception",
      "info" : "MethodDeclaration[1651-1768]:MethodDeclaration[3501-3618]"
    }, {
      "left" : "public void testFunctionReturnType() throws Exception",
      "right" : "public void testFunctionReturnType() throws Exception",
      "info" : "MethodDeclaration[1772-1912]:MethodDeclaration[3622-3762]"
    }, {
      "left" : "public void testFunctionParameterTypes() throws Exception",
      "right" : "public void testFunctionParameterTypes() throws Exception",
      "info" : "MethodDeclaration[1916-2100]:MethodDeclaration[3766-3950]"
    }, {
      "left" : "public void testFunctionInsideAssignment() throws Exception",
      "right" : "public void testFunctionInsideAssignment() throws Exception",
      "info" : "MethodDeclaration[2104-2340]:MethodDeclaration[3954-4190]"
    }, {
      "left" : "public void testNestedFunctions() throws Exception",
      "right" : "public void testNestedFunctions() throws Exception",
      "info" : "MethodDeclaration[2344-2654]:MethodDeclaration[4194-4504]"
    }, {
      "left" : "public void testUnknownType() throws Exception",
      "right" : "public void testUnknownType() throws Exception",
      "info" : "MethodDeclaration[2658-2762]:MethodDeclaration[4508-4612]"
    }, {
      "left" : "public void testUndefinedType() throws Exception",
      "right" : "public void testUndefinedType() throws Exception",
      "info" : "MethodDeclaration[2877-2986]:MethodDeclaration[4727-4836]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[2770-2776]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[4840-4846]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[5182-5188]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[5607-5613]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[6179-6185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[6350-6356]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[6680-6686]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[7203-7209]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[7489-7495]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[7725-7731]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[7874-7880]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[8231-8237]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[8427-8433]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[8716-8722]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[9003-9009]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[920-926]:Modifier[9389-9395]"
    }, {
      "left" : "public",
      "right" : "private",
      "info" : "Modifier[920-926]:Modifier[9879-9886]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[927-932]:Modifier[2777-2782]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[933-938]:TYPE_DECLARATION_KIND[2783-2788]"
    }, {
      "left" : "JsdocToEs6TypedConverterTest",
      "right" : "JsdocToEs6TypedConverterTest",
      "info" : "SimpleName[939-967]:SimpleName[2789-2817]"
    }, {
      "left" : "CompilerTestCase",
      "right" : "CompilerTestCase",
      "info" : "SimpleType[976-992]:SimpleType[2826-2842]"
    }, {
      "left" : "CompilerTestCase",
      "right" : "NodeSubject",
      "info" : "SimpleType[976-992]:SimpleType[9887-9898]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[998-1007]:MarkerAnnotation[2848-2857]"
    }, {
      "left" : "Override",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[999-1007]:SimpleName[9899-9924]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1010-1016]:Modifier[2860-2866]"
    }, {
      "left" : "public",
      "right" : "final",
      "info" : "Modifier[1010-1016]:Modifier[9925-9930]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[2867-2871]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[4847-4851]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[5189-5193]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[5614-5618]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[6186-6190]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[6357-6361]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[6687-6691]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[7210-7214]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[7496-7500]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[7732-7736]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[7881-7885]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[8238-8242]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[8434-8438]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[8723-8727]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[9010-9014]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1017-1021]:PrimitiveType[9396-9400]"
    }, {
      "left" : "setUp",
      "right" : "setUp",
      "info" : "SimpleName[1022-1027]:SimpleName[2872-2877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1030-1149]:Block[2880-2999]"
    }, {
      "left" : "setAcceptedLanguage(LanguageMode.ECMASCRIPT6_TYPED);",
      "right" : "setAcceptedLanguage(LanguageMode.ECMASCRIPT6_TYPED);",
      "info" : "ExpressionStatement[1036-1088]:ExpressionStatement[2886-2938]"
    }, {
      "left" : "setAcceptedLanguage",
      "right" : "testCreateRecordType",
      "info" : "SimpleName[1036-1055]:SimpleName[6692-6712]"
    }, {
      "left" : "enableAstValidation(true);",
      "right" : "enableAstValidation(true);",
      "info" : "ExpressionStatement[1093-1119]:ExpressionStatement[2943-2969]"
    }, {
      "left" : "enableAstValidation",
      "right" : "testConvertTypeApplication",
      "info" : "SimpleName[1093-1112]:SimpleName[5619-5645]"
    }, {
      "left" : "enableAstValidation",
      "right" : "testConvertRecordTypeWithTypeApplication",
      "info" : "SimpleName[1093-1112]:SimpleName[7215-7255]"
    }, {
      "left" : "enableAstValidation",
      "right" : "testConvertVariableParameters",
      "info" : "SimpleName[1093-1112]:SimpleName[9015-9044]"
    }, {
      "left" : "enableAstValidation",
      "right" : "testConvertOptionalFunctionParameters",
      "info" : "SimpleName[1093-1112]:SimpleName[9401-9438]"
    }, {
      "left" : "compareJsDoc = false;",
      "right" : "compareJsDoc = false;",
      "info" : "ExpressionStatement[1124-1145]:ExpressionStatement[2974-2995]"
    }, {
      "left" : "compareJsDoc",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[1124-1136]:SimpleName[6738-6751]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1153-1162]:MarkerAnnotation[3003-3012]"
    }, {
      "left" : "Override",
      "right" : "testConvertNamedTypes",
      "info" : "SimpleName[1154-1162]:SimpleName[5194-5215]"
    }, {
      "left" : "Override",
      "right" : "testConvertRecordType",
      "info" : "SimpleName[1154-1162]:SimpleName[6362-6383]"
    }, {
      "left" : "Override",
      "right" : "testConvertFunctionType",
      "info" : "SimpleName[1154-1162]:SimpleName[7886-7909]"
    }, {
      "left" : "Override",
      "right" : "testConvertFunctionThisType",
      "info" : "SimpleName[1154-1162]:SimpleName[8439-8466]"
    }, {
      "left" : "Override",
      "right" : "testConvertFunctionNewType",
      "info" : "SimpleName[1154-1162]:SimpleName[8728-8754]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1165-1174]:Modifier[3015-3024]"
    }, {
      "left" : "CompilerOptions",
      "right" : "CompilerOptions",
      "info" : "SimpleType[1175-1190]:SimpleType[3025-3040]"
    }, {
      "left" : "CompilerOptions",
      "right" : "String",
      "info" : "SimpleType[1175-1190]:SimpleType[6752-6758]"
    }, {
      "left" : "CompilerOptions",
      "right" : "String",
      "info" : "SimpleName[1175-1190]:SimpleName[9931-9937]"
    }, {
      "left" : "getOptions",
      "right" : "getOptions",
      "info" : "SimpleName[1191-1201]:SimpleName[3041-3051]"
    }, {
      "left" : "getOptions",
      "right" : "typeExpr",
      "info" : "SimpleName[1191-1201]:SimpleName[9938-9946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1204-1339]:Block[3054-3189]"
    }, {
      "left" : "CompilerOptions options = super.getOptions();",
      "right" : "CompilerOptions options = super.getOptions();",
      "info" : "VariableDeclarationStatement[1210-1255]:VariableDeclarationStatement[3060-3105]"
    }, {
      "left" : "CompilerOptions",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[1210-1225]:SimpleName[6409-6422]"
    }, {
      "left" : "CompilerOptions",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[1210-1225]:SimpleType[6760-6779]"
    }, {
      "left" : "CompilerOptions",
      "right" : "Node",
      "info" : "SimpleType[1210-1225]:SimpleType[7281-7285]"
    }, {
      "left" : "CompilerOptions",
      "right" : "Node",
      "info" : "SimpleName[1210-1225]:SimpleName[7935-7939]"
    }, {
      "left" : "CompilerOptions options = super.getOptions();",
      "right" : "Node p1 = IR.name(\"p1\");",
      "info" : "VariableDeclarationStatement[1210-1255]:VariableDeclarationStatement[7935-7959]"
    }, {
      "left" : "CompilerOptions",
      "right" : "Node",
      "info" : "SimpleName[1210-1225]:SimpleName[8492-8496]"
    }, {
      "left" : "CompilerOptions",
      "right" : "Node",
      "info" : "SimpleType[1210-1225]:SimpleType[8780-8784]"
    }, {
      "left" : "CompilerOptions",
      "right" : "Node",
      "info" : "SimpleName[1210-1225]:SimpleName[9070-9074]"
    }, {
      "left" : "CompilerOptions options = super.getOptions();",
      "right" : "Node p1 = IR.name(\"p1\");",
      "info" : "VariableDeclarationStatement[1210-1255]:VariableDeclarationStatement[9070-9094]"
    }, {
      "left" : "CompilerOptions",
      "right" : "LinkedHashMap",
      "info" : "SimpleType[1210-1225]:SimpleType[9464-9477]"
    }, {
      "left" : "CompilerOptions",
      "right" : "Node",
      "info" : "SimpleType[1210-1225]:SimpleType[9954-9958]"
    }, {
      "left" : "options",
      "right" : "properties",
      "info" : "SimpleName[1226-1233]:SimpleName[6781-6791]"
    }, {
      "left" : "options = super.getOptions()",
      "right" : "properties = new LinkedHashMap<>()",
      "info" : "VariableDeclarationFragment[1226-1254]:VariableDeclarationFragment[6781-6815]"
    }, {
      "left" : "options",
      "right" : "prop1",
      "info" : "SimpleName[1226-1233]:SimpleName[7286-7291]"
    }, {
      "left" : "options",
      "right" : "p1",
      "info" : "SimpleName[1226-1233]:SimpleName[7940-7942]"
    }, {
      "left" : "options",
      "right" : "p1",
      "info" : "SimpleName[1226-1233]:SimpleName[8497-8499]"
    }, {
      "left" : "options",
      "right" : "p1",
      "info" : "SimpleName[1226-1233]:SimpleName[8785-8787]"
    }, {
      "left" : "options",
      "right" : "p1",
      "info" : "SimpleName[1226-1233]:SimpleName[9075-9077]"
    }, {
      "left" : "options",
      "right" : "oldAST",
      "info" : "SimpleName[1226-1233]:SimpleName[9959-9965]"
    }, {
      "left" : "getOptions",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[1242-1252]:SimpleName[6798-6811]"
    }, {
      "left" : "getOptions",
      "right" : "IR",
      "info" : "SimpleName[1242-1252]:SimpleName[7945-7947]"
    }, {
      "left" : "getOptions",
      "right" : "IR",
      "info" : "SimpleName[1242-1252]:SimpleName[9080-9082]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED);",
      "right" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED);",
      "info" : "ExpressionStatement[1260-1315]:ExpressionStatement[3110-3165]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED)",
      "right" : "assertParseTypeAndConvert(\"Window\")",
      "info" : "MethodInvocation[1260-1314]:MethodInvocation[5241-5276]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED)",
      "right" : "assertParseTypeAndConvert(\"Array.<string>\")",
      "info" : "MethodInvocation[1260-1314]:MethodInvocation[5671-5714]"
    }, {
      "left" : "options",
      "right" : "properties",
      "info" : "SimpleName[1260-1267]:SimpleName[6821-6831]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED);",
      "right" : "properties.put(\"myNum\", numberType());",
      "info" : "ExpressionStatement[1260-1315]:ExpressionStatement[6821-6859]"
    }, {
      "left" : "options",
      "right" : "IR",
      "info" : "SimpleName[1260-1267]:SimpleName[7294-7296]"
    }, {
      "left" : "options",
      "right" : "p1",
      "info" : "SimpleName[1260-1267]:SimpleName[7964-7966]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED);",
      "right" : "p1.setDeclaredTypeExpression(stringType());",
      "info" : "ExpressionStatement[1260-1315]:ExpressionStatement[7964-8007]"
    }, {
      "left" : "options",
      "right" : "IR",
      "info" : "SimpleName[1260-1267]:SimpleName[8502-8504]"
    }, {
      "left" : "options",
      "right" : "IR",
      "info" : "METHOD_INVOCATION_RECEIVER[1260-1267]:METHOD_INVOCATION_RECEIVER[8790-8792]"
    }, {
      "left" : "options",
      "right" : "p1",
      "info" : "SimpleName[1260-1267]:SimpleName[9099-9101]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED);",
      "right" : "p1.setDeclaredTypeExpression(stringType());",
      "info" : "ExpressionStatement[1260-1315]:ExpressionStatement[9099-9142]"
    }, {
      "left" : "options",
      "right" : "JsDocInfoParser",
      "info" : "SimpleName[1260-1267]:SimpleName[9968-9983]"
    }, {
      "left" : "options.setLanguageOut(LanguageMode.ECMASCRIPT6_TYPED)",
      "right" : "JsDocInfoParser.parseTypeString(typeExpr)",
      "info" : "MethodInvocation[1260-1314]:MethodInvocation[9968-10009]"
    }, {
      "left" : "setLanguageOut",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1268-1282]:SimpleName[5241-5266]"
    }, {
      "left" : "setLanguageOut",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1268-1282]:SimpleName[5671-5696]"
    }, {
      "left" : "setLanguageOut",
      "right" : "put",
      "info" : "SimpleName[1268-1282]:SimpleName[6832-6835]"
    }, {
      "left" : "setLanguageOut",
      "right" : "stringKey",
      "info" : "SimpleName[1268-1282]:SimpleName[7297-7306]"
    }, {
      "left" : "setLanguageOut",
      "right" : "setDeclaredTypeExpression",
      "info" : "SimpleName[1268-1282]:SimpleName[7967-7992]"
    }, {
      "left" : "setLanguageOut",
      "right" : "setDeclaredTypeExpression",
      "info" : "SimpleName[1268-1282]:SimpleName[9102-9127]"
    }, {
      "left" : "setLanguageOut",
      "right" : "parseTypeString",
      "info" : "SimpleName[1268-1282]:SimpleName[9984-9999]"
    }, {
      "left" : "return options;",
      "right" : "return options;",
      "info" : "ReturnStatement[1320-1335]:ReturnStatement[3170-3185]"
    }, {
      "left" : "options",
      "right" : "isEqualTo",
      "info" : "SimpleName[1327-1334]:SimpleName[5286-5295]"
    }, {
      "left" : "options",
      "right" : "isEqualTo",
      "info" : "SimpleName[1327-1334]:SimpleName[5724-5733]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1343-1352]:MarkerAnnotation[3193-3202]"
    }, {
      "left" : "Override",
      "right" : "arrayType",
      "info" : "SimpleName[1344-1352]:SimpleName[5734-5743]"
    }, {
      "left" : "Override",
      "right" : "name",
      "info" : "SimpleName[1344-1352]:SimpleName[8505-8509]"
    }, {
      "left" : "Override",
      "right" : "name",
      "info" : "SimpleName[1344-1352]:SimpleName[8793-8797]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1355-1361]:Modifier[3205-3211]"
    }, {
      "left" : "CompilerPass",
      "right" : "CompilerPass",
      "info" : "SimpleType[1362-1374]:SimpleType[3212-3224]"
    }, {
      "left" : "CompilerPass",
      "right" : "String",
      "info" : "SimpleType[1362-1374]:SimpleType[6423-6429]"
    }, {
      "left" : "CompilerPass",
      "right" : "Node",
      "info" : "SimpleType[1362-1374]:SimpleType[8012-8016]"
    }, {
      "left" : "CompilerPass",
      "right" : "Node",
      "info" : "SimpleType[1362-1374]:SimpleType[9147-9151]"
    }, {
      "left" : "CompilerPass",
      "right" : "String",
      "info" : "SimpleName[1362-1374]:SimpleName[9478-9484]"
    }, {
      "left" : "getProcessor",
      "right" : "getProcessor",
      "info" : "SimpleName[1375-1387]:SimpleName[3225-3237]"
    }, {
      "left" : "getProcessor",
      "right" : "p2",
      "info" : "SimpleName[1375-1387]:SimpleName[8017-8019]"
    }, {
      "left" : "getProcessor",
      "right" : "p2",
      "info" : "SimpleName[1375-1387]:SimpleName[9152-9154]"
    }, {
      "left" : "Compiler compiler",
      "right" : "Compiler compiler",
      "info" : "SingleVariableDeclaration[1388-1405]:SingleVariableDeclaration[3238-3255]"
    }, {
      "left" : "Compiler",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[1388-1396]:SimpleType[6431-6450]"
    }, {
      "left" : "Compiler",
      "right" : "IR",
      "info" : "SimpleName[1388-1396]:SimpleName[8022-8024]"
    }, {
      "left" : "Compiler",
      "right" : "IR",
      "info" : "SimpleName[1388-1396]:SimpleName[9157-9159]"
    }, {
      "left" : "Compiler",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[1388-1396]:SimpleName[9486-9505]"
    }, {
      "left" : "compiler",
      "right" : "properties",
      "info" : "SimpleName[1397-1405]:SimpleName[6452-6462]"
    }, {
      "left" : "compiler",
      "right" : "requiredParams",
      "info" : "SimpleName[1397-1405]:SimpleName[9507-9521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1407-1463]:Block[3257-3313]"
    }, {
      "left" : "return new JsdocToEs6TypedConverter(compiler);",
      "right" : "return new JsdocToEs6TypedConverter(compiler);",
      "info" : "ReturnStatement[1413-1459]:ReturnStatement[3263-3309]"
    }, {
      "left" : "new JsdocToEs6TypedConverter(compiler)",
      "right" : "new LinkedHashMap<>()",
      "info" : "ClassInstanceCreation[1420-1458]:ClassInstanceCreation[6465-6486]"
    }, {
      "left" : "new JsdocToEs6TypedConverter(compiler)",
      "right" : "new LinkedHashMap<>()",
      "info" : "ClassInstanceCreation[1420-1458]:ClassInstanceCreation[9524-9545]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "testConvertSimpleTypes",
      "info" : "SimpleName[1424-1448]:SimpleName[4852-4874]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "stringType",
      "info" : "SimpleName[1424-1448]:SimpleName[5744-5754]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "LinkedHashMap",
      "info" : "SimpleType[1424-1448]:SimpleType[6469-6482]"
    }, {
      "left" : "JsdocToEs6TypedConverter",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[1424-1448]:SimpleName[9528-9541]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[1467-1476]:MarkerAnnotation[3317-3326]"
    }, {
      "left" : "Override",
      "right" : "name",
      "info" : "SimpleName[1468-1476]:SimpleName[8025-8029]"
    }, {
      "left" : "Override",
      "right" : "LinkedHashMap",
      "info" : "SimpleName[1468-1476]:SimpleName[9551-9564]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[1479-1488]:Modifier[3329-3338]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[1489-1492]:PrimitiveType[3339-3342]"
    }, {
      "left" : "getNumRepetitions",
      "right" : "getNumRepetitions",
      "info" : "SimpleName[1493-1510]:SimpleName[3343-3360]"
    }, {
      "left" : "getNumRepetitions",
      "right" : "properties",
      "info" : "SimpleName[1493-1510]:SimpleName[6492-6502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1513-1532]:Block[3363-3382]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[1519-1528]:ReturnStatement[3369-3378]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1536-1542]:Modifier[3386-3392]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1543-1547]:PrimitiveType[3393-3397]"
    }, {
      "left" : "testVariableDeclaration",
      "right" : "testVariableDeclaration",
      "info" : "SimpleName[1548-1571]:SimpleName[3398-3421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1574-1647]:Block[3424-3497]"
    }, {
      "left" : "test(\"/** @type {string} */ var print;\", \"var print: string;\");",
      "right" : "test(\"/** @type {string} */ var print;\", \"var print: string;\");",
      "info" : "ExpressionStatement[1580-1643]:ExpressionStatement[3430-3493]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1580-1584]:SimpleName[4883-4908]"
    }, {
      "left" : "test(\"/** @type {string} */ var print;\", \"var print: string;\")",
      "right" : "assertParseTypeAndConvert(\"?\")",
      "info" : "MethodInvocation[1580-1642]:MethodInvocation[4883-4913]"
    }, {
      "left" : "test",
      "right" : "namedType",
      "info" : "SimpleName[1580-1584]:SimpleName[5296-5305]"
    }, {
      "left" : "test(\"/** @type {string} */ var print;\", \"var print: string;\")",
      "right" : "namedType(\"Window\")",
      "info" : "MethodInvocation[1580-1642]:MethodInvocation[5296-5315]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1580-1584]:SimpleName[5764-5789]"
    }, {
      "left" : "test(\"/** @type {string} */ var print;\", \"var print: string;\")",
      "right" : "assertParseTypeAndConvert(\"Object.<string, number>\")",
      "info" : "MethodInvocation[1580-1642]:MethodInvocation[5764-5816]"
    }, {
      "left" : "test",
      "right" : "put",
      "info" : "SimpleName[1580-1584]:SimpleName[6503-6506]"
    }, {
      "left" : "test(\"/** @type {string} */ var print;\", \"var print: string;\");",
      "right" : "properties.put(\"myObject\", null);",
      "info" : "ExpressionStatement[1580-1643]:ExpressionStatement[6864-6897]"
    }, {
      "left" : "test",
      "right" : "put",
      "info" : "SimpleName[1580-1584]:SimpleName[6875-6878]"
    }, {
      "left" : "test",
      "right" : "rest",
      "info" : "SimpleName[1580-1584]:SimpleName[9160-9164]"
    }, {
      "left" : "\"/** @type {string} */ var print;\", \"var print: string;\"",
      "right" : "\"p2\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[1585-1641]:METHOD_INVOCATION_ARGUMENTS[8030-8034]"
    }, {
      "left" : "\"/** @type {string} */ var print;\", \"var print: string;\"",
      "right" : "\"p2\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[1585-1641]:METHOD_INVOCATION_ARGUMENTS[9165-9169]"
    }, {
      "left" : "\"var print: string;\"",
      "right" : "\"?\"",
      "info" : "StringLiteral[1621-1641]:StringLiteral[4909-4912]"
    }, {
      "left" : "\"var print: string;\"",
      "right" : "\"Window\"",
      "info" : "StringLiteral[1621-1641]:StringLiteral[5306-5314]"
    }, {
      "left" : "\"var print: string;\"",
      "right" : "\"Object.<string, number>\"",
      "info" : "StringLiteral[1621-1641]:StringLiteral[5790-5815]"
    }, {
      "left" : "\"var print: string;\"",
      "right" : "\"myNum\"",
      "info" : "StringLiteral[1621-1641]:StringLiteral[6507-6514]"
    }, {
      "left" : "\"var print: string;\"",
      "right" : "\"myObject\"",
      "info" : "StringLiteral[1621-1641]:StringLiteral[6879-6889]"
    }, {
      "left" : "\"var print: string;\"",
      "right" : "\"p2\"",
      "info" : "StringLiteral[1621-1641]:StringLiteral[8030-8034]"
    }, {
      "left" : "\"var print: string;\"",
      "right" : "\"p2\"",
      "info" : "StringLiteral[1621-1641]:StringLiteral[9165-9169]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1651-1657]:Modifier[3501-3507]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1658-1662]:PrimitiveType[3508-3512]"
    }, {
      "left" : "testVariableDeclarationWithoutDeclaredType",
      "right" : "testVariableDeclarationWithoutDeclaredType",
      "info" : "SimpleName[1663-1705]:SimpleName[3513-3555]"
    }, {
      "left" : "testVariableDeclarationWithoutDeclaredType",
      "right" : "hasType",
      "info" : "SimpleName[1663-1705]:SimpleName[4914-4921]"
    }, {
      "left" : "testVariableDeclarationWithoutDeclaredType",
      "right" : "isEqualTo",
      "info" : "SimpleName[1663-1705]:SimpleName[5826-5835]"
    }, {
      "left" : "testVariableDeclarationWithoutDeclaredType",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[1663-1705]:SimpleName[6902-6921]"
    }, {
      "left" : "testVariableDeclarationWithoutDeclaredType",
      "right" : "p2",
      "info" : "SimpleName[1663-1705]:SimpleName[8041-8043]"
    }, {
      "left" : "testVariableDeclarationWithoutDeclaredType",
      "right" : "p2",
      "info" : "SimpleName[1663-1705]:SimpleName[9176-9178]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1715-1724]:SimpleType[3565-3574]"
    }, {
      "left" : "Exception",
      "right" : "ANY_TYPE",
      "info" : "SimpleName[1715-1724]:SimpleName[4922-4930]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1715-1724]:SimpleType[5225-5234]"
    }, {
      "left" : "Exception",
      "right" : "parameterizedType",
      "info" : "SimpleName[1715-1724]:SimpleName[5836-5853]"
    }, {
      "left" : "Exception",
      "right" : "node",
      "info" : "SimpleName[1715-1724]:SimpleName[6922-6926]"
    }, {
      "left" : "Exception",
      "right" : "setDeclaredTypeExpression",
      "info" : "SimpleName[1715-1724]:SimpleName[8044-8069]"
    }, {
      "left" : "Exception",
      "right" : "setDeclaredTypeExpression",
      "info" : "SimpleName[1715-1724]:SimpleName[9179-9204]"
    }, {
      "left" : "Exception",
      "right" : "String",
      "info" : "SimpleType[1715-1724]:SimpleType[9565-9571]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1725-1768]:Block[3575-3618]"
    }, {
      "left" : "test(\"var print;\", \"var print;\");",
      "right" : "test(\"var print;\", \"var print;\");",
      "info" : "ExpressionStatement[1731-1764]:ExpressionStatement[3581-3614]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1731-1735]:SimpleName[4937-4962]"
    }, {
      "left" : "test(\"var print;\", \"var print;\")",
      "right" : "assertParseTypeAndConvert(\"*\")",
      "info" : "MethodInvocation[1731-1763]:MethodInvocation[4937-4967]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1731-1735]:SimpleName[5322-5347]"
    }, {
      "left" : "test(\"var print;\", \"var print;\")",
      "right" : "assertParseTypeAndConvert(\"goog.ui.Menu\")",
      "info" : "MethodInvocation[1731-1763]:MethodInvocation[5322-5363]"
    }, {
      "left" : "test",
      "right" : "namedType",
      "info" : "SimpleName[1731-1735]:SimpleName[5854-5863]"
    }, {
      "left" : "test(\"var print;\", \"var print;\")",
      "right" : "namedType(\"Object\")",
      "info" : "MethodInvocation[1731-1763]:MethodInvocation[5854-5873]"
    }, {
      "left" : "test",
      "right" : "numberType",
      "info" : "SimpleName[1731-1735]:SimpleName[6516-6526]"
    }, {
      "left" : "test(\"var print;\", \"var print;\")",
      "right" : "numberType()",
      "info" : "MethodInvocation[1731-1763]:MethodInvocation[6516-6528]"
    }, {
      "left" : "test",
      "right" : "recordType",
      "info" : "SimpleName[1731-1735]:SimpleName[6929-6939]"
    }, {
      "left" : "test(\"var print;\", \"var print;\")",
      "right" : "recordType(properties)",
      "info" : "MethodInvocation[1731-1763]:MethodInvocation[6929-6951]"
    }, {
      "left" : "test",
      "right" : "booleanType",
      "info" : "SimpleName[1731-1735]:SimpleName[8070-8081]"
    }, {
      "left" : "test(\"var print;\", \"var print;\")",
      "right" : "booleanType()",
      "info" : "MethodInvocation[1731-1763]:MethodInvocation[8070-8083]"
    }, {
      "left" : "\"var print;\"",
      "right" : "\"*\"",
      "info" : "StringLiteral[1736-1748]:StringLiteral[4963-4966]"
    }, {
      "left" : "\"var print;\"",
      "right" : "\"goog.ui.Menu\"",
      "info" : "StringLiteral[1736-1748]:StringLiteral[5348-5362]"
    }, {
      "left" : "\"var print;\"",
      "right" : "\"Object\"",
      "info" : "StringLiteral[1736-1748]:StringLiteral[5864-5872]"
    }, {
      "left" : "\"var print;\"",
      "right" : "\"length\"",
      "info" : "StringLiteral[1736-1748]:StringLiteral[7307-7315]"
    }, {
      "left" : "\"var print;\", \"var print;\"",
      "right" : "\"length\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[1736-1762]:METHOD_INVOCATION_ARGUMENTS[7307-7315]"
    }, {
      "left" : "\"var print;\"",
      "right" : "\"p1\"",
      "info" : "StringLiteral[1736-1748]:StringLiteral[8510-8514]"
    }, {
      "left" : "\"var print;\", \"var print;\"",
      "right" : "\"p1\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[1736-1762]:METHOD_INVOCATION_ARGUMENTS[8510-8514]"
    }, {
      "left" : "\"var print;\"",
      "right" : "\"p1\"",
      "info" : "StringLiteral[1736-1748]:StringLiteral[8798-8802]"
    }, {
      "left" : "\"var print;\", \"var print;\"",
      "right" : "\"p1\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[1736-1762]:METHOD_INVOCATION_ARGUMENTS[8798-8802]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1772-1778]:Modifier[3622-3628]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1779-1783]:PrimitiveType[3629-3633]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "testFunctionReturnType",
      "info" : "SimpleName[1784-1806]:SimpleName[3634-3656]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "hasType",
      "info" : "SimpleName[1784-1806]:SimpleName[4968-4975]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "isEqualTo",
      "info" : "SimpleName[1784-1806]:SimpleName[5373-5382]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "asList",
      "info" : "SimpleName[1784-1806]:SimpleName[5875-5881]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "testConvertTypeUnion",
      "info" : "SimpleName[1784-1806]:SimpleName[6191-6211]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "Node",
      "info" : "SimpleName[1784-1806]:SimpleName[6958-6962]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "testConvertNullableType",
      "info" : "SimpleName[1784-1806]:SimpleName[7501-7524]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "testConvertNonNullableType",
      "info" : "SimpleName[1784-1806]:SimpleName[7737-7763]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "testConvertFunctionReturnType",
      "info" : "SimpleName[1784-1806]:SimpleName[8243-8272]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "p1",
      "info" : "SimpleName[1784-1806]:SimpleName[8521-8523]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "p1",
      "info" : "SimpleName[1784-1806]:SimpleName[8809-8811]"
    }, {
      "left" : "testFunctionReturnType",
      "right" : "arrayType",
      "info" : "SimpleName[1784-1806]:SimpleName[9205-9214]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1816-1825]:SimpleType[3666-3675]"
    }, {
      "left" : "Exception",
      "right" : "ANY_TYPE",
      "info" : "SimpleName[1816-1825]:SimpleName[4976-4984]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1816-1825]:SimpleType[5655-5664]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1816-1825]:SimpleType[6221-6230]"
    }, {
      "left" : "Exception",
      "right" : "prop1",
      "info" : "SimpleName[1816-1825]:SimpleName[6963-6968]"
    }, {
      "left" : "Exception",
      "right" : "setDeclaredTypeExpression",
      "info" : "SimpleName[1816-1825]:SimpleName[8524-8549]"
    }, {
      "left" : "Exception",
      "right" : "setDeclaredTypeExpression",
      "info" : "SimpleName[1816-1825]:SimpleName[8812-8837]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[1816-1825]:SimpleType[9573-9592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1826-1912]:Block[3676-3762]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\");",
      "right" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\");",
      "info" : "ExpressionStatement[1832-1908]:ExpressionStatement[3682-3758]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1832-1836]:SimpleName[4991-5016]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "assertParseTypeAndConvert(\"boolean\")",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[4991-5027]"
    }, {
      "left" : "test",
      "right" : "namedType",
      "info" : "SimpleName[1832-1836]:SimpleName[5383-5392]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "namedType(\"goog.ui.Menu\")",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[5383-5408]"
    }, {
      "left" : "test",
      "right" : "numberType",
      "info" : "SimpleName[1832-1836]:SimpleName[5896-5906]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "numberType()",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[5896-5908]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1832-1836]:SimpleName[6237-6262]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "assertParseTypeAndConvert(\"(number|boolean)\")",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[6237-6282]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\");",
      "right" : "properties.put(\"myObject\", null);",
      "info" : "ExpressionStatement[1832-1908]:ExpressionStatement[6535-6568]"
    }, {
      "left" : "test",
      "right" : "put",
      "info" : "SimpleName[1832-1836]:SimpleName[6546-6549]"
    }, {
      "left" : "test",
      "right" : "IR",
      "info" : "SimpleName[1832-1836]:SimpleName[6971-6973]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "IR.stringKey(\"myNum\")",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[6971-6992]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1832-1836]:SimpleName[7322-7347]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "assertParseTypeAndConvert(\"Array.<{length}>\")",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[7322-7367]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1832-1836]:SimpleName[8090-8115]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "assertParseTypeAndConvert(\"function(string, boolean)\")",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[8090-8144]"
    }, {
      "left" : "test",
      "right" : "stringType",
      "info" : "SimpleName[1832-1836]:SimpleName[8550-8560]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "stringType()",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[8550-8562]"
    }, {
      "left" : "test",
      "right" : "stringType",
      "info" : "SimpleName[1832-1836]:SimpleName[8838-8848]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "stringType()",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[8838-8850]"
    }, {
      "left" : "test",
      "right" : "numberType",
      "info" : "SimpleName[1832-1836]:SimpleName[9215-9225]"
    }, {
      "left" : "test(\"/** @return {boolean} */ function b(){}\", \"function b(): boolean {}\")",
      "right" : "numberType()",
      "info" : "MethodInvocation[1832-1907]:MethodInvocation[9215-9227]"
    }, {
      "left" : "\"function b(): boolean {}\"",
      "right" : "\"boolean\"",
      "info" : "StringLiteral[1880-1906]:StringLiteral[5017-5026]"
    }, {
      "left" : "\"function b(): boolean {}\"",
      "right" : "\"goog.ui.Menu\"",
      "info" : "StringLiteral[1880-1906]:StringLiteral[5393-5407]"
    }, {
      "left" : "\"function b(): boolean {}\"",
      "right" : "\"(number|boolean)\"",
      "info" : "StringLiteral[1880-1906]:StringLiteral[6263-6281]"
    }, {
      "left" : "\"function b(): boolean {}\"",
      "right" : "\"myObject\"",
      "info" : "StringLiteral[1880-1906]:StringLiteral[6550-6560]"
    }, {
      "left" : "\"function b(): boolean {}\"",
      "right" : "\"myNum\"",
      "info" : "StringLiteral[1880-1906]:StringLiteral[6984-6991]"
    }, {
      "left" : "\"function b(): boolean {}\"",
      "right" : "\"Array.<{length}>\"",
      "info" : "StringLiteral[1880-1906]:StringLiteral[7348-7366]"
    }, {
      "left" : "\"function b(): boolean {}\"",
      "right" : "\"function(string, boolean)\"",
      "info" : "StringLiteral[1880-1906]:StringLiteral[8116-8143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1916-1922]:Modifier[3766-3772]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1923-1927]:PrimitiveType[3773-3777]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "testFunctionParameterTypes",
      "info" : "SimpleName[1928-1954]:SimpleName[3778-3804]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "hasType",
      "info" : "SimpleName[1928-1954]:SimpleName[5028-5035]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "assertNode",
      "info" : "SimpleName[1928-1954]:SimpleName[5416-5426]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "assertNode",
      "info" : "SimpleName[1928-1954]:SimpleName[5918-5928]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "isEqualTo",
      "info" : "SimpleName[1928-1954]:SimpleName[6292-6301]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "prop1",
      "info" : "SimpleName[1928-1954]:SimpleName[6998-7003]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "isEqualTo",
      "info" : "SimpleName[1928-1954]:SimpleName[7377-7386]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "isEqualTo",
      "info" : "SimpleName[1928-1954]:SimpleName[8154-8163]"
    }, {
      "left" : "testFunctionParameterTypes",
      "right" : "optionalParams",
      "info" : "SimpleName[1928-1954]:SimpleName[9594-9608]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1964-1973]:SimpleType[3814-3823]"
    }, {
      "left" : "Exception",
      "right" : "BOOLEAN_TYPE",
      "info" : "SimpleName[1964-1973]:SimpleName[5036-5048]"
    }, {
      "left" : "Exception",
      "right" : "parameterizedType",
      "info" : "SimpleName[1964-1973]:SimpleName[5929-5946]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[1964-1973]:SimpleType[6393-6402]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[1964-1973]:SimpleName[7024-7043]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[1964-1973]:SimpleName[7391-7410]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[1964-1973]:SimpleType[8168-8187]"
    }, {
      "left" : "Exception",
      "right" : "LinkedHashMap",
      "info" : "SimpleType[1964-1973]:SimpleType[9615-9628]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1974-2100]:Block[3824-3950]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\");",
      "right" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\");",
      "info" : "ExpressionStatement[1980-2096]:ExpressionStatement[3830-3946]"
    }, {
      "left" : "test",
      "right" : "namedType",
      "info" : "SimpleName[1980-1984]:SimpleName[5427-5436]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "namedType(\"goog.ui.Menu\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[5427-5452]"
    }, {
      "left" : "test",
      "right" : "namedType",
      "info" : "SimpleName[1980-1984]:SimpleName[5947-5956]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "namedType(\"Array\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[5947-5965]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1980-1984]:SimpleName[6574-6599]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "assertParseTypeAndConvert(\"{myNum: number, myObject}\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[6574-6628]"
    }, {
      "left" : "test",
      "right" : "NUMBER_TYPE",
      "info" : "SimpleName[1980-1984]:SimpleName[7044-7055]"
    }, {
      "left" : "test",
      "right" : "ARRAY_TYPE",
      "info" : "SimpleName[1980-1984]:SimpleName[7411-7421]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1980-1984]:SimpleName[7550-7575]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "assertParseTypeAndConvert(\"?number\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[7550-7586]"
    }, {
      "left" : "test",
      "right" : "FUNCTION_TYPE",
      "info" : "SimpleName[1980-1984]:SimpleName[8188-8201]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1980-1984]:SimpleName[8298-8323]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "assertParseTypeAndConvert(\"function(): number\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[8298-8345]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1980-1984]:SimpleName[8569-8594]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "assertParseTypeAndConvert(\"function(this:goog.ui.Menu, string)\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[8569-8633]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1980-1984]:SimpleName[8857-8882]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "assertParseTypeAndConvert(\"function(new:goog.ui.Menu, string)\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[8857-8920]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[1980-1984]:SimpleName[9235-9260]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\")",
      "right" : "assertParseTypeAndConvert(\"function(string, ...number): number\")",
      "info" : "MethodInvocation[1980-2095]:MethodInvocation[9235-9299]"
    }, {
      "left" : "test(\"/** @param {number} n @param {string} s */ function t(n,s){}\",\n        \"function t(n: number, s: string) {}\");",
      "right" : "optionalParams.put(\"p1\", stringType());",
      "info" : "ExpressionStatement[1980-2096]:ExpressionStatement[9638-9677]"
    }, {
      "left" : "test",
      "right" : "put",
      "info" : "SimpleName[1980-1984]:SimpleName[9653-9656]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"goog.ui.Menu\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[5437-5451]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"Array\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[5957-5964]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"{myNum: number, myObject}\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[6600-6627]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"?number\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[7576-7585]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"function(): number\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[8324-8344]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"function(this:goog.ui.Menu, string)\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[8595-8632]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"function(new:goog.ui.Menu, string)\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[8883-8919]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"function(string, ...number): number\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[9261-9298]"
    }, {
      "left" : "\"function t(n: number, s: string) {}\"",
      "right" : "\"p1\"",
      "info" : "StringLiteral[2057-2094]:StringLiteral[9657-9661]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2104-2110]:Modifier[3954-3960]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2111-2115]:PrimitiveType[3961-3965]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "testFunctionInsideAssignment",
      "info" : "SimpleName[2116-2144]:SimpleName[3966-3994]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "isEqualTo",
      "info" : "SimpleName[2116-2144]:SimpleName[5463-5472]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "isEqualTo",
      "info" : "SimpleName[2116-2144]:SimpleName[6638-6647]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "Node",
      "info" : "SimpleName[2116-2144]:SimpleName[7063-7067]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "isEqualTo",
      "info" : "SimpleName[2116-2144]:SimpleName[7596-7605]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "isEqualTo",
      "info" : "SimpleName[2116-2144]:SimpleName[8355-8364]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "isEqualTo",
      "info" : "SimpleName[2116-2144]:SimpleName[8643-8652]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "isEqualTo",
      "info" : "SimpleName[2116-2144]:SimpleName[8930-8939]"
    }, {
      "left" : "testFunctionInsideAssignment",
      "right" : "isEqualTo",
      "info" : "SimpleName[2116-2144]:SimpleName[9309-9318]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2154-2163]:SimpleType[4004-4013]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[2154-2163]:SimpleType[5477-5496]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2154-2163]:SimpleType[6722-6731]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2154-2163]:SimpleType[7265-7274]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[2154-2163]:SimpleName[8369-8388]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[2154-2163]:SimpleType[8657-8676]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[2154-2163]:SimpleName[8944-8963]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[2154-2163]:SimpleType[9323-9342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2164-2340]:Block[4014-4190]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\");",
      "right" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\");",
      "info" : "ExpressionStatement[2170-2336]:ExpressionStatement[4020-4186]"
    }, {
      "left" : "test",
      "right" : "NAMED_TYPE",
      "info" : "SimpleName[2170-2174]:SimpleName[5497-5507]"
    }, {
      "left" : "test",
      "right" : "asList",
      "info" : "SimpleName[2170-2174]:SimpleName[5967-5973]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\")",
      "right" : "asList(stringType())",
      "info" : "MethodInvocation[2170-2335]:MethodInvocation[5967-5987]"
    }, {
      "left" : "test",
      "right" : "recordType",
      "info" : "SimpleName[2170-2174]:SimpleName[6648-6658]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\")",
      "right" : "recordType(properties)",
      "info" : "MethodInvocation[2170-2335]:MethodInvocation[6648-6670]"
    }, {
      "left" : "test",
      "right" : "IR",
      "info" : "SimpleName[2170-2174]:SimpleName[7076-7078]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\")",
      "right" : "IR.stringKey(\"myObject\")",
      "info" : "MethodInvocation[2170-2335]:MethodInvocation[7076-7100]"
    }, {
      "left" : "test",
      "right" : "RECORD_TYPE",
      "info" : "SimpleName[2170-2174]:SimpleName[7459-7470]"
    }, {
      "left" : "test",
      "right" : "numberType",
      "info" : "SimpleName[2170-2174]:SimpleName[7606-7616]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\")",
      "right" : "numberType()",
      "info" : "MethodInvocation[2170-2335]:MethodInvocation[7606-7618]"
    }, {
      "left" : "test",
      "right" : "anyType",
      "info" : "SimpleName[2170-2174]:SimpleName[8203-8210]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\")",
      "right" : "anyType()",
      "info" : "MethodInvocation[2170-2335]:MethodInvocation[8203-8212]"
    }, {
      "left" : "test",
      "right" : "FUNCTION_TYPE",
      "info" : "SimpleName[2170-2174]:SimpleName[8389-8402]"
    }, {
      "left" : "test",
      "right" : "FUNCTION_TYPE",
      "info" : "SimpleName[2170-2174]:SimpleName[8677-8690]"
    }, {
      "left" : "test",
      "right" : "FUNCTION_TYPE",
      "info" : "SimpleName[2170-2174]:SimpleName[8964-8977]"
    }, {
      "left" : "test",
      "right" : "FUNCTION_TYPE",
      "info" : "SimpleName[2170-2174]:SimpleName[9343-9356]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\");",
      "right" : "optionalParams.put(\"p2\", numberType());",
      "info" : "ExpressionStatement[2170-2336]:ExpressionStatement[9682-9721]"
    }, {
      "left" : "test",
      "right" : "put",
      "info" : "SimpleName[2170-2174]:SimpleName[9697-9700]"
    }, {
      "left" : "test",
      "right" : "assertNotNull",
      "info" : "SimpleName[2170-2174]:SimpleName[10015-10028]"
    }, {
      "left" : "test(\"/** @param {boolean} b @return {boolean} */ \"\n            + \"var f = function(b){return !b};\",\n        \"var f = function(b: boolean): boolean { return !b; };\");",
      "right" : "assertNotNull(typeExpr + \" did not produce a parsed AST\", oldAST);",
      "info" : "ExpressionStatement[2170-2336]:ExpressionStatement[10015-10081]"
    }, {
      "left" : "\"var f = function(b){return !b};\"",
      "right" : "\"myObject\"",
      "info" : "StringLiteral[2236-2269]:StringLiteral[7089-7099]"
    }, {
      "left" : "\"var f = function(b){return !b};\"",
      "right" : "\"p2\"",
      "info" : "StringLiteral[2236-2269]:StringLiteral[9701-9705]"
    }, {
      "left" : "\"var f = function(b){return !b};\"",
      "right" : "\" did not produce a parsed AST\"",
      "info" : "StringLiteral[2236-2269]:StringLiteral[10040-10071]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2344-2350]:Modifier[4194-4200]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2351-2355]:PrimitiveType[4201-4205]"
    }, {
      "left" : "testNestedFunctions",
      "right" : "testNestedFunctions",
      "info" : "SimpleName[2356-2375]:SimpleName[4206-4225]"
    }, {
      "left" : "testNestedFunctions",
      "right" : "IR",
      "info" : "SimpleName[2356-2375]:SimpleName[5521-5523]"
    }, {
      "left" : "testNestedFunctions",
      "right" : "isEqualTo",
      "info" : "SimpleName[2356-2375]:SimpleName[5999-6008]"
    }, {
      "left" : "testNestedFunctions",
      "right" : "prop1",
      "info" : "SimpleName[2356-2375]:SimpleName[7472-7477]"
    }, {
      "left" : "testNestedFunctions",
      "right" : "p1",
      "info" : "SimpleName[2356-2375]:SimpleName[8214-8216]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2385-2394]:SimpleType[4235-4244]"
    }, {
      "left" : "Exception",
      "right" : "getprop",
      "info" : "SimpleName[2385-2394]:SimpleName[5524-5531]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[2385-2394]:SimpleName[6013-6032]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2385-2394]:SimpleType[7534-7543]"
    }, {
      "left" : "Exception",
      "right" : "p2",
      "info" : "SimpleName[2385-2394]:SimpleName[8218-8220]"
    }, {
      "left" : "Exception",
      "right" : "NodeSubject",
      "info" : "SimpleName[2385-2394]:SimpleName[10097-10108]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2395-2654]:Block[4245-4504]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\");",
      "right" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\");",
      "info" : "ExpressionStatement[2401-2650]:ExpressionStatement[4251-4500]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[2401-2405]:SimpleName[5055-5080]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "assertParseTypeAndConvert(\"number\")",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[5055-5090]"
    }, {
      "left" : "test",
      "right" : "IR",
      "info" : "SimpleName[2401-2405]:SimpleName[5543-5545]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "IR.name(\"goog\")",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[5543-5558]"
    }, {
      "left" : "test",
      "right" : "PARAMETERIZED_TYPE",
      "info" : "SimpleName[2401-2405]:SimpleName[6033-6051]"
    }, {
      "left" : "test",
      "right" : "assertNode",
      "info" : "SimpleName[2401-2405]:SimpleName[7107-7117]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "assertNode(node)",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[7107-7123]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[2401-2405]:SimpleName[7789-7814]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "assertParseTypeAndConvert(\"!Object\")",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[7789-7825]"
    }, {
      "left" : "test",
      "right" : "numberType",
      "info" : "SimpleName[2401-2405]:SimpleName[8404-8414]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "numberType()",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[8404-8416]"
    }, {
      "left" : "test",
      "right" : "anyType",
      "info" : "SimpleName[2401-2405]:SimpleName[8692-8699]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "anyType()",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[8692-8701]"
    }, {
      "left" : "test",
      "right" : "anyType",
      "info" : "SimpleName[2401-2405]:SimpleName[8979-8986]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "anyType()",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[8979-8988]"
    }, {
      "left" : "test",
      "right" : "numberType",
      "info" : "SimpleName[2401-2405]:SimpleName[9358-9368]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "numberType()",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[9358-9370]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[2401-2405]:SimpleName[9726-9751]"
    }, {
      "left" : "test(\"/**@param {boolean} b*/ \"\n            + \"var f = function(b){var t = function(l) {}; t();};\",\n            \"var f = function(b: boolean) {\"\n            + \"  var t = function(l) {\"\n            + \"  };\"\n            + \"  t();\"\n            + \"};\")",
      "right" : "assertParseTypeAndConvert(\"function(?string=, number=)\")",
      "info" : "MethodInvocation[2401-2649]:MethodInvocation[9726-9782]"
    }, {
      "left" : "test",
      "right" : "THROW_ASSERTION_ERROR",
      "info" : "SimpleName[2401-2405]:SimpleName[10109-10130]"
    }, {
      "left" : "\"  var t = function(l) {\"",
      "right" : "\"function(?string=, number=)\"",
      "info" : "StringLiteral[2560-2585]:StringLiteral[9752-9781]"
    }, {
      "left" : "\"};\"",
      "right" : "\"number\"",
      "info" : "StringLiteral[2644-2648]:StringLiteral[5081-5089]"
    }, {
      "left" : "\"};\"",
      "right" : "\"goog\"",
      "info" : "StringLiteral[2644-2648]:StringLiteral[5551-5557]"
    }, {
      "left" : "\"};\"",
      "right" : "\"!Object\"",
      "info" : "StringLiteral[2644-2648]:StringLiteral[7815-7824]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2658-2664]:Modifier[4508-4514]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2665-2669]:PrimitiveType[4515-4519]"
    }, {
      "left" : "testUnknownType",
      "right" : "testUnknownType",
      "info" : "SimpleName[2670-2685]:SimpleName[4520-4535]"
    }, {
      "left" : "testUnknownType",
      "right" : "hasType",
      "info" : "SimpleName[2670-2685]:SimpleName[5091-5098]"
    }, {
      "left" : "testUnknownType",
      "right" : "IR",
      "info" : "SimpleName[2670-2685]:SimpleName[5560-5562]"
    }, {
      "left" : "testUnknownType",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[2670-2685]:SimpleName[6069-6088]"
    }, {
      "left" : "testUnknownType",
      "right" : "unionType",
      "info" : "SimpleName[2670-2685]:SimpleName[6302-6311]"
    }, {
      "left" : "testUnknownType",
      "right" : "isEqualTo",
      "info" : "SimpleName[2670-2685]:SimpleName[7133-7142]"
    }, {
      "left" : "testUnknownType",
      "right" : "isEqualTo",
      "info" : "SimpleName[2670-2685]:SimpleName[7835-7844]"
    }, {
      "left" : "testUnknownType",
      "right" : "p1",
      "info" : "SimpleName[2670-2685]:SimpleName[8703-8705]"
    }, {
      "left" : "testUnknownType",
      "right" : "p1",
      "info" : "SimpleName[2670-2685]:SimpleName[8990-8992]"
    }, {
      "left" : "testUnknownType",
      "right" : "p1",
      "info" : "SimpleName[2670-2685]:SimpleName[9372-9374]"
    }, {
      "left" : "testUnknownType",
      "right" : "isEqualTo",
      "info" : "SimpleName[2670-2685]:SimpleName[9792-9801]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2695-2704]:SimpleType[4545-4554]"
    }, {
      "left" : "Exception",
      "right" : "NUMBER_TYPE",
      "info" : "SimpleName[2695-2704]:SimpleName[5099-5110]"
    }, {
      "left" : "Exception",
      "right" : "string",
      "info" : "SimpleName[2695-2704]:SimpleName[5563-5569]"
    }, {
      "left" : "Exception",
      "right" : "NAMED_TYPE",
      "info" : "SimpleName[2695-2704]:SimpleName[6089-6099]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleName[2695-2704]:SimpleName[7147-7166]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2695-2704]:SimpleType[7773-7782]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2695-2704]:SimpleType[7919-7928]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2695-2704]:SimpleType[8282-8291]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2695-2704]:SimpleType[8476-8485]"
    }, {
      "left" : "Exception",
      "right" : "p2",
      "info" : "SimpleName[2695-2704]:SimpleName[9376-9378]"
    }, {
      "left" : "Exception",
      "right" : "functionType",
      "info" : "SimpleName[2695-2704]:SimpleName[9802-9814]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationsIRFactory",
      "info" : "SimpleName[2695-2704]:SimpleName[10140-10165]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2705-2762]:Block[4555-4612]"
    }, {
      "left" : "test(\"/** @type {?} */ var n;\", \"var n: any;\");",
      "right" : "test(\"/** @type {?} */ var n;\", \"var n: any;\");",
      "info" : "ExpressionStatement[2711-2758]:ExpressionStatement[4561-4608]"
    }, {
      "left" : "test",
      "right" : "assertParseTypeAndConvert",
      "info" : "SimpleName[2711-2715]:SimpleName[5117-5142]"
    }, {
      "left" : "test(\"/** @type {?} */ var n;\", \"var n: any;\")",
      "right" : "assertParseTypeAndConvert(\"string\")",
      "info" : "MethodInvocation[2711-2757]:MethodInvocation[5117-5152]"
    }, {
      "left" : "test",
      "right" : "IR",
      "info" : "SimpleName[2711-2715]:SimpleName[6101-6103]"
    }, {
      "left" : "test(\"/** @type {?} */ var n;\", \"var n: any;\")",
      "right" : "IR.name(\"Array\")",
      "info" : "MethodInvocation[2711-2757]:MethodInvocation[6101-6117]"
    }, {
      "left" : "test",
      "right" : "numberType",
      "info" : "SimpleName[2711-2715]:SimpleName[6312-6322]"
    }, {
      "left" : "test(\"/** @type {?} */ var n;\", \"var n: any;\")",
      "right" : "numberType()",
      "info" : "MethodInvocation[2711-2757]:MethodInvocation[6312-6324]"
    }, {
      "left" : "test",
      "right" : "RECORD_TYPE",
      "info" : "SimpleName[2711-2715]:SimpleName[7167-7178]"
    }, {
      "left" : "test",
      "right" : "anyType",
      "info" : "SimpleName[2711-2715]:SimpleName[9815-9822]"
    }, {
      "left" : "test(\"/** @type {?} */ var n;\", \"var n: any;\")",
      "right" : "anyType()",
      "info" : "MethodInvocation[2711-2757]:MethodInvocation[9815-9824]"
    }, {
      "left" : "\"/** @type {?} */ var n;\", \"var n: any;\"",
      "right" : "\"ui\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[2716-2756]:METHOD_INVOCATION_ARGUMENTS[5570-5574]"
    }, {
      "left" : "\"var n: any;\"",
      "right" : "\"string\"",
      "info" : "StringLiteral[2743-2756]:StringLiteral[5143-5151]"
    }, {
      "left" : "\"var n: any;\"",
      "right" : "\"ui\"",
      "info" : "StringLiteral[2743-2756]:StringLiteral[5570-5574]"
    }, {
      "left" : "\"var n: any;\"",
      "right" : "\"Array\"",
      "info" : "StringLiteral[2743-2756]:StringLiteral[6109-6116]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2877-2883]:Modifier[4727-4733]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2884-2888]:PrimitiveType[4734-4738]"
    }, {
      "left" : "testUndefinedType",
      "right" : "testUndefinedType",
      "info" : "SimpleName[2889-2906]:SimpleName[4739-4756]"
    }, {
      "left" : "testUndefinedType",
      "right" : "hasType",
      "info" : "SimpleName[2889-2906]:SimpleName[5153-5160]"
    }, {
      "left" : "testUndefinedType",
      "right" : "IR",
      "info" : "SimpleName[2889-2906]:SimpleName[5578-5580]"
    }, {
      "left" : "testUndefinedType",
      "right" : "prop1",
      "info" : "SimpleName[2889-2906]:SimpleName[7180-7185]"
    }, {
      "left" : "testUndefinedType",
      "right" : "requiredParams",
      "info" : "SimpleName[2889-2906]:SimpleName[9826-9840]"
    }, {
      "left" : "testUndefinedType",
      "right" : "convertTypeNodeAST",
      "info" : "SimpleName[2889-2906]:SimpleName[10166-10184]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2916-2925]:SimpleType[4766-4775]"
    }, {
      "left" : "Exception",
      "right" : "STRING_TYPE",
      "info" : "SimpleName[2916-2925]:SimpleName[5161-5172]"
    }, {
      "left" : "Exception",
      "right" : "string",
      "info" : "SimpleName[2916-2925]:SimpleName[5581-5587]"
    }, {
      "left" : "Exception",
      "right" : "TypeDeclarationNode",
      "info" : "SimpleType[2916-2925]:SimpleType[6136-6155]"
    }, {
      "left" : "Exception",
      "right" : "prop2",
      "info" : "SimpleName[2916-2925]:SimpleName[7187-7192]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2916-2925]:SimpleType[8764-8773]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2916-2925]:SimpleType[9054-9063]"
    }, {
      "left" : "Exception",
      "right" : "Exception",
      "info" : "SimpleType[2916-2925]:SimpleType[9448-9457]"
    }, {
      "left" : "Exception",
      "right" : "oldAST",
      "info" : "SimpleName[2916-2925]:SimpleName[10185-10191]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2926-2986]:Block[4776-4836]"
    }, {
      "left" : "test(\"/** @type {undefined} */ var n;\", \"var n;\");",
      "right" : "test(\"/** @type {undefined} */ var n;\", \"var n;\");",
      "info" : "ExpressionStatement[2932-2982]:ExpressionStatement[4782-4832]"
    }, {
      "left" : "test",
      "right" : "STRING_TYPE",
      "info" : "SimpleName[2932-2936]:SimpleName[6156-6167]"
    }, {
      "left" : "test",
      "right" : "booleanType",
      "info" : "SimpleName[2932-2936]:SimpleName[6326-6337]"
    }, {
      "left" : "test(\"/** @type {undefined} */ var n;\", \"var n;\")",
      "right" : "booleanType()",
      "info" : "MethodInvocation[2932-2981]:MethodInvocation[6326-6339]"
    }, {
      "left" : "test",
      "right" : "namedType",
      "info" : "SimpleName[2932-2936]:SimpleName[7845-7854]"
    }, {
      "left" : "test(\"/** @type {undefined} */ var n;\", \"var n;\")",
      "right" : "namedType(\"Object\")",
      "info" : "MethodInvocation[2932-2981]:MethodInvocation[7845-7864]"
    }, {
      "left" : "\"/** @type {undefined} */ var n;\", \"var n;\"",
      "right" : "\"Menu\"",
      "info" : "METHOD_INVOCATION_ARGUMENTS[2937-2980]:METHOD_INVOCATION_ARGUMENTS[5588-5594]"
    }, {
      "left" : "\"var n;\"",
      "right" : "\"Menu\"",
      "info" : "StringLiteral[2972-2980]:StringLiteral[5588-5594]"
    }, {
      "left" : "\"var n;\"",
      "right" : "\"Object\"",
      "info" : "StringLiteral[2972-2980]:StringLiteral[7855-7863]"
    } ]
  },
  "interFileMappings" : { }
}