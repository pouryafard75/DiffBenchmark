{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DeploymentGroupWatchCommand",
      "right" : "DeploymentGroupWatchCommand",
      "info" : "TypeDeclaration[1503-3871]:TypeDeclaration[1448-3359]"
    }, {
      "left" : "private final Argument nameArg;",
      "right" : "private final Argument nameArg;",
      "info" : "FieldDeclaration[1583-1614]:FieldDeclaration[1634-1665]"
    }, {
      "left" : "private final Argument intervalArg;",
      "right" : "private final Argument intervalArg;",
      "info" : "FieldDeclaration[1617-1652]:FieldDeclaration[1702-1737]"
    }, {
      "left" : "public DeploymentGroupWatchCommand(Subparser parser)",
      "right" : "public DeploymentGroupWatchCommand(Subparser parser)",
      "info" : "MethodDeclaration[1656-2016]:MethodDeclaration[1741-2222]"
    }, {
      "left" : "static void watchDeploymentGroup(final PrintStream out, final String name,\n                                   final int interval, final List<TargetAndClient> clients)\n      throws InterruptedException, ExecutionException",
      "right" : "int run(Namespace options, HeliosClient client, PrintStream out, boolean json,\n          BufferedReader stdin) throws ExecutionException, InterruptedException, IOException",
      "info" : "MethodDeclaration[2429-3682]:MethodDeclaration[2226-3357]"
    } ],
    "mappings" : [
 {
      "left" : "com.google.common.base.Optional",
      "right" : "com.google.common.base.Strings",
      "info" : "QualifiedName[894-925]:QualifiedName[894-924]"
    }, {
      "left" : "java.lang.String.format",
      "right" : "net.sourceforge.argparse4j.impl.Arguments.storeTrue",
      "info" : "QualifiedName[1477-1500]:QualifiedName[1394-1445]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1503-1509]:Modifier[1448-1454]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1510-1515]:TYPE_DECLARATION_KIND[1455-1460]"
    }, {
      "left" : "DeploymentGroupWatchCommand",
      "right" : "DeploymentGroupWatchCommand",
      "info" : "SimpleName[1516-1543]:SimpleName[1461-1488]"
    }, {
      "left" : "MultiTargetControlCommand",
      "right" : "ControlCommand",
      "info" : "SimpleType[1552-1577]:SimpleType[1497-1511]"
    }, {
      "left" : "MultiTargetControlCommand",
      "right" : "String",
      "info" : "SimpleType[1552-1577]:SimpleType[1581-1587]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1656-1662]:Modifier[1741-1747]"
    }, {
      "left" : "DeploymentGroupWatchCommand",
      "right" : "DeploymentGroupWatchCommand",
      "info" : "SimpleName[1663-1690]:SimpleName[1748-1775]"
    }, {
      "left" : "Subparser parser",
      "right" : "Subparser parser",
      "info" : "SingleVariableDeclaration[1691-1707]:SingleVariableDeclaration[1776-1792]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1709-2016]:Block[1794-2222]"
    }, {
      "left" : "super(parser);",
      "right" : "super(parser);",
      "info" : "SuperConstructorInvocation[1715-1729]:SuperConstructorInvocation[1800-1814]"
    }, {
      "left" : "parser.help(\"watch deployment groups\");",
      "right" : "parser.help(\"watch deployment groups\");",
      "info" : "ExpressionStatement[1734-1773]:ExpressionStatement[1819-1858]"
    }, {
      "left" : "nameArg = parser.addArgument(\"name\")\n        .help(\"Deployment group name\");",
      "right" : "nameArg = parser.addArgument(\"name\")\n        .help(\"Deployment group name\");",
      "info" : "ExpressionStatement[1779-1855]:ExpressionStatement[1864-1940]"
    }, {
      "left" : "intervalArg = parser.addArgument(\"--interval\")\n        .type(Integer.class)\n        .setDefault(1)\n        .help(\"polling interval, default 1 second\");",
      "right" : "intervalArg = parser.addArgument(\"--interval\")\n        .type(Integer.class)\n        .setDefault(1)\n        .help(\"polling interval, default 1 second\");",
      "info" : "ExpressionStatement[1861-2012]:ExpressionStatement[2067-2218]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2020-2029]:MarkerAnnotation[2226-2235]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[2032-2035]:PrimitiveType[2238-2241]"
    }, {
      "left" : "run",
      "right" : "run",
      "info" : "SimpleName[2036-2039]:SimpleName[2242-2245]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2040-2045]:Modifier[1676-1681]"
    }, {
      "left" : "final Namespace options",
      "right" : "Namespace options",
      "info" : "SingleVariableDeclaration[2040-2063]:SingleVariableDeclaration[2246-2263]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2065-2070]:Modifier[1575-1580]"
    }, {
      "left" : "final List<TargetAndClient> clients",
      "right" : "HeliosClient client",
      "info" : "SingleVariableDeclaration[2065-2100]:SingleVariableDeclaration[2265-2284]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2112-2117]:Modifier[1532-1537]"
    }, {
      "left" : "final boolean json",
      "right" : "boolean json",
      "info" : "SingleVariableDeclaration[2135-2153]:SingleVariableDeclaration[2303-2315]"
    }, {
      "left" : "final BufferedReader stdin",
      "right" : "BufferedReader stdin",
      "info" : "SingleVariableDeclaration[2155-2181]:SingleVariableDeclaration[2327-2347]"
    }, {
      "left" : "ExecutionException",
      "right" : "ExecutionException",
      "info" : "SimpleType[2204-2222]:SimpleType[2356-2374]"
    }, {
      "left" : "InterruptedException",
      "right" : "InterruptedException",
      "info" : "SimpleType[2224-2244]:SimpleType[2376-2396]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[2246-2257]:SimpleType[2398-2409]"
    }, {
      "left" : "final String name = options.getString(nameArg.getDest());",
      "right" : "final String name = options.getString(nameArg.getDest());",
      "info" : "VariableDeclarationStatement[2264-2321]:VariableDeclarationStatement[2416-2473]"
    }, {
      "left" : "watchDeploymentGroup",
      "right" : "options",
      "info" : "SimpleName[2327-2347]:SimpleName[2499-2506]"
    }, {
      "left" : "watchDeploymentGroup(out, name, options.getInt(intervalArg.getDest()), clients)",
      "right" : "DateTimeFormat.forPattern(DATE_TIME_PATTERN)",
      "info" : "MethodInvocation[2327-2406]:MethodInvocation[2646-2690]"
    }, {
      "left" : "out",
      "right" : "Integer",
      "info" : "SimpleName[2348-2351]:SimpleName[2548-2555]"
    }, {
      "left" : "name",
      "right" : "name",
      "info" : "SimpleName[2353-2357]:SimpleName[3230-3234]"
    }, {
      "left" : "options.getInt(intervalArg.getDest())",
      "right" : "options.getInt(intervalArg.getDest())",
      "info" : "MethodInvocation[2359-2396]:MethodInvocation[2567-2604]"
    }, {
      "left" : "clients",
      "right" : "client",
      "info" : "SimpleName[2398-2405]:SimpleName[2278-2284]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[2412-2421]:ReturnStatement[3344-3353]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2429-2435]:Modifier[1525-1531]"
    }, {
      "left" : "void",
      "right" : "boolean",
      "info" : "PrimitiveType[2436-2440]:PrimitiveType[2484-2491]"
    }, {
      "left" : "watchDeploymentGroup",
      "right" : "json",
      "info" : "SimpleName[2441-2461]:SimpleName[2702-2706]"
    }, {
      "left" : "PrintStream",
      "right" : "getDest",
      "info" : "SimpleName[2468-2479]:SimpleName[2526-2533]"
    }, {
      "left" : "PrintStream",
      "right" : "Integer",
      "info" : "SimpleName[2468-2479]:SimpleName[2548-2555]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2485-2490]:Modifier[2478-2483]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2491-2497]:SimpleType[1581-1587]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[2545-2548]:PrimitiveType[2847-2850]"
    }, {
      "left" : "interval",
      "right" : "interval",
      "info" : "SimpleName[2549-2557]:SimpleName[2556-2564]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2559-2564]:Modifier[2542-2547]"
    }, {
      "left" : "TargetAndClient",
      "right" : "DATE_TIME_PATTERN",
      "info" : "SimpleName[2570-2585]:SimpleName[2672-2689]"
    }, {
      "left" : "InterruptedException",
      "right" : "InterruptedException",
      "info" : "SimpleType[2609-2629]:SimpleType[2376-2396]"
    }, {
      "left" : "ExecutionException",
      "right" : "ExecutionException",
      "info" : "SimpleType[2631-2649]:SimpleType[2356-2374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2650-3682]:Block[2410-3357]"
    }, {
      "left" : "out.println(\"Control-C to stop\");",
      "right" : "out.println(\"Control-C to stop\");",
      "info" : "ExpressionStatement[2656-2689]:ExpressionStatement[2716-2749]"
    }, {
      "left" : "out.println(\"STATUS               HOST                           STATE\");",
      "right" : "out.println(\"STATUS               HOST                           STATE\");",
      "info" : "ExpressionStatement[2694-2767]:ExpressionStatement[2756-2829]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2772-2777]:Modifier[2610-2615]"
    }, {
      "left" : "final DateTimeFormatter formatter = DateTimeFormat.forPattern(\"YYYY-MM-dd HH:mm:ss\");",
      "right" : "int rc = 0;",
      "info" : "VariableDeclarationStatement[2772-2857]:VariableDeclarationStatement[2929-2940]"
    }, {
      "left" : "DateTimeFormatter",
      "right" : "DateTimeFormatter",
      "info" : "SimpleType[2778-2795]:SimpleType[2616-2633]"
    }, {
      "left" : "formatter",
      "right" : "formatter",
      "info" : "SimpleName[2796-2805]:SimpleName[2634-2643]"
    }, {
      "left" : "formatter = DateTimeFormat.forPattern(\"YYYY-MM-dd HH:mm:ss\")",
      "right" : "timestampLength = String.format(\"[%s UTC]\", DATE_TIME_PATTERN).length()",
      "info" : "VariableDeclarationFragment[2796-2856]:VariableDeclarationFragment[2851-2922]"
    }, {
      "left" : "DateTimeFormat",
      "right" : "DateTimeFormat",
      "info" : "METHOD_INVOCATION_RECEIVER[2808-2822]:METHOD_INVOCATION_RECEIVER[2646-2660]"
    }, {
      "left" : "forPattern",
      "right" : "forPattern",
      "info" : "SimpleName[2823-2833]:SimpleName[2661-2671]"
    }, {
      "left" : "\"YYYY-MM-dd HH:mm:ss\"",
      "right" : "\"YYYY-MM-dd HH:mm:ss\"",
      "info" : "StringLiteral[2834-2855]:StringLiteral[1608-1629]"
    }, {
      "left" : "while (true)",
      "right" : "while (rc == 0)",
      "info" : "WhileStatement[2862-3678]:WhileStatement[2945-3339]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2875-3678]:Block[2961-3339]"
    }, {
      "left" : "final Instant now = new Instant();",
      "right" : "final Instant now = new Instant();",
      "info" : "VariableDeclarationStatement[2884-2918]:VariableDeclarationStatement[2969-3003]"
    }, {
      "left" : "out.printf(\"-------------------- ------------------------------ -------- \"\n          + \"---------- [%s UTC]%n\", now.toString(formatter));",
      "right" : "out.printf(Strings.repeat(\"-\", MAX_WIDTH - timestampLength - 1)\n                   + \" [%s UTC]%n\", now.toString(formatter));",
      "info" : "ExpressionStatement[2925-3062]:ExpressionStatement[3031-3156]"
    }, {
      "left" : "\"-------------------- ------------------------------ -------- \"\n          + \"---------- [%s UTC]%n\"",
      "right" : "Strings.repeat(\"-\", MAX_WIDTH - timestampLength - 1)\n                   + \" [%s UTC]%n\"",
      "info" : "InfixExpression[2936-3035]:InfixExpression[3042-3129]"
    }, {
      "left" : "\"-------------------- ------------------------------ -------- \"",
      "right" : "\"-\"",
      "info" : "StringLiteral[2936-2999]:StringLiteral[3057-3060]"
    }, {
      "left" : "\"---------- [%s UTC]%n\"",
      "right" : "\" [%s UTC]%n\"",
      "info" : "StringLiteral[3012-3035]:StringLiteral[3116-3129]"
    }, {
      "left" : "now.toString(formatter)",
      "right" : "now.toString(formatter)",
      "info" : "MethodInvocation[3037-3060]:MethodInvocation[3131-3154]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[3114-3119]:Modifier[2841-2846]"
    }, {
      "left" : "Optional",
      "right" : "json",
      "info" : "SimpleName[3120-3128]:SimpleName[3224-3228]"
    }, {
      "left" : "Target",
      "right" : "full",
      "info" : "SimpleName[3129-3135]:SimpleName[3236-3240]"
    }, {
      "left" : "clients",
      "right" : "client",
      "info" : "SimpleName[3174-3181]:SimpleName[3211-3217]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[3191-3192]:NumberLiteral[3092-3093]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleName[3212-3218]:SimpleName[2869-2875]"
    }, {
      "left" : "target",
      "right" : "DeploymentGroupStatusCommand",
      "info" : "SimpleName[3241-3247]:SimpleName[3177-3205]"
    }, {
      "left" : "target.isPresent()",
      "right" : "DeploymentGroupStatusCommand.run0(client, out, json, name, full)",
      "info" : "MethodInvocation[3241-3259]:MethodInvocation[3177-3241]"
    }, {
      "left" : "isPresent",
      "right" : "run0",
      "info" : "SimpleName[3248-3257]:SimpleName[3206-3210]"
    }, {
      "left" : "header",
      "right" : "rc",
      "info" : "SimpleName[3357-3363]:SimpleName[3172-3174]"
    }, {
      "left" : "header = format(\" %s (%s)\", target.get().getName(), endpoints)",
      "right" : "rc = DeploymentGroupStatusCommand.run0(client, out, json, name, full)",
      "info" : "Assignment[3357-3419]:Assignment[3172-3241]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[3366-3372]:SimpleName[2876-2882]"
    }, {
      "left" : "out",
      "right" : "out",
      "info" : "SimpleName[3487-3490]:SimpleName[3219-3222]"
    }, {
      "left" : "showReport(out, name, cc.getClient());",
      "right" : "rc = DeploymentGroupStatusCommand.run0(client, out, json, name, full);",
      "info" : "ExpressionStatement[3536-3574]:ExpressionStatement[3172-3242]"
    }, {
      "left" : "if (out.checkError())",
      "right" : "if (out.checkError())",
      "info" : "IfStatement[3589-3635]:IfStatement[3249-3295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3611-3635]:Block[3271-3295]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[3621-3627]:BreakStatement[3281-3287]"
    }, {
      "left" : "Thread.sleep(1000 * interval);",
      "right" : "Thread.sleep(1000 * interval);",
      "info" : "ExpressionStatement[3642-3672]:ExpressionStatement[3303-3333]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3686-3693]:Modifier[1668-1675]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3694-3700]:Modifier[1568-1574]"
    }, {
      "left" : "PrintStream out",
      "right" : "PrintStream out",
      "info" : "SingleVariableDeclaration[3717-3732]:SingleVariableDeclaration[2286-2301]"
    }, {
      "left" : "HeliosClient",
      "right" : "HeliosClient",
      "info" : "SimpleType[3759-3771]:SimpleType[2265-2277]"
    } ]
  },
  "interFileMappings" : { }
}