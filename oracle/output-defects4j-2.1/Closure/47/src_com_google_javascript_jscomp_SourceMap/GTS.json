{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SourceMap",
      "right" : "SourceMap",
      "info" : "TypeDeclaration[1229-6053]:TypeDeclaration[1229-6236]"
    }, {
      "left" : "enum : Format",
      "right" : "enum : Format",
      "info" : "EnumDeclaration[1453-2223]:EnumDeclaration[1453-2223]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[1498-1644]:MethodDeclaration[1498-1644]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[1675-1826]:MethodDeclaration[1675-1826]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[1852-1999]:MethodDeclaration[1852-1999]"
    }, {
      "left" : "SourceMap getInstance()",
      "right" : "SourceMap getInstance()",
      "info" : "MethodDeclaration[2025-2172]:MethodDeclaration[2025-2172]"
    }, {
      "left" : "abstract SourceMap getInstance();",
      "right" : "abstract SourceMap getInstance();",
      "info" : "MethodDeclaration[2186-2219]:MethodDeclaration[2186-2219]"
    }, {
      "left" : "enum : DetailLevel",
      "right" : "enum : DetailLevel",
      "info" : "EnumDeclaration[2227-3057]:EnumDeclaration[2227-3057]"
    }, {
      "left" : "public boolean apply(Node node)",
      "right" : "public boolean apply(Node node)",
      "info" : "MethodDeclaration[2500-2572]:MethodDeclaration[2500-2572]"
    }, {
      "left" : "public boolean apply(Node node)",
      "right" : "public boolean apply(Node node)",
      "info" : "MethodDeclaration[2707-3046]:MethodDeclaration[2707-3046]"
    }, {
      "left" : "LocationMapping",
      "right" : "LocationMapping",
      "info" : "TypeDeclaration[3061-3293]:TypeDeclaration[3061-3293]"
    }, {
      "left" : "final String prefix;",
      "right" : "final String prefix;",
      "info" : "FieldDeclaration[3103-3123]:FieldDeclaration[3103-3123]"
    }, {
      "left" : "final String replacement;",
      "right" : "final String replacement;",
      "info" : "FieldDeclaration[3128-3153]:FieldDeclaration[3128-3153]"
    }, {
      "left" : "public LocationMapping(String prefix, String replacement)",
      "right" : "public LocationMapping(String prefix, String replacement)",
      "info" : "MethodDeclaration[3158-3289]:MethodDeclaration[3158-3289]"
    }, {
      "left" : "private final SourceMapGenerator generator;",
      "right" : "private final SourceMapGenerator generator;",
      "info" : "FieldDeclaration[3297-3340]:FieldDeclaration[3297-3340]"
    }, {
      "left" : "private List<LocationMapping> prefixMappings = Collections.emptyList();",
      "right" : "private List<LocationMapping> prefixMappings = Collections.emptyList();",
      "info" : "FieldDeclaration[3343-3414]:FieldDeclaration[3343-3414]"
    }, {
      "left" : "private final Map<String, String> sourceLocationFixupCache =\n      Maps.newHashMap();",
      "right" : "private final Map<String, String> sourceLocationFixupCache =\n      Maps.newHashMap();",
      "info" : "FieldDeclaration[3417-3502]:FieldDeclaration[3417-3502]"
    }, {
      "left" : "private SourceMap(SourceMapGenerator generator)",
      "right" : "private SourceMap(SourceMapGenerator generator)",
      "info" : "MethodDeclaration[3506-3591]:MethodDeclaration[3506-3591]"
    }, {
      "left" : "public void addMapping(\n      Node node,\n      FilePosition outputStartPosition,\n      FilePosition outputEndPosition)",
      "right" : "public void addMapping(\n      Node node,\n      FilePosition outputStartPosition,\n      FilePosition outputEndPosition)",
      "info" : "MethodDeclaration[3595-4508]:MethodDeclaration[3595-4691]"
    }, {
      "left" : "private String fixupSourceLocation(String sourceFile)",
      "right" : "private String fixupSourceLocation(String sourceFile)",
      "info" : "MethodDeclaration[4512-5347]:MethodDeclaration[4695-5530]"
    }, {
      "left" : "public void appendTo(Appendable out, String name) throws IOException",
      "right" : "public void appendTo(Appendable out, String name) throws IOException",
      "info" : "MethodDeclaration[5351-5460]:MethodDeclaration[5534-5643]"
    }, {
      "left" : "public void reset()",
      "right" : "public void reset()",
      "info" : "MethodDeclaration[5464-5550]:MethodDeclaration[5647-5733]"
    }, {
      "left" : "public void setStartingPosition(int offsetLine, int offsetIndex)",
      "right" : "public void setStartingPosition(int offsetLine, int offsetIndex)",
      "info" : "MethodDeclaration[5554-5684]:MethodDeclaration[5737-5867]"
    }, {
      "left" : "public void setWrapperPrefix(String prefix)",
      "right" : "public void setWrapperPrefix(String prefix)",
      "info" : "MethodDeclaration[5688-5777]:MethodDeclaration[5871-5960]"
    }, {
      "left" : "public void validate(boolean validate)",
      "right" : "public void validate(boolean validate)",
      "info" : "MethodDeclaration[5781-5859]:MethodDeclaration[5964-6042]"
    }, {
      "left" : "public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings)",
      "right" : "public void setPrefixMappings(List<LocationMapping> sourceMapLocationMappings)",
      "info" : "MethodDeclaration[5863-6051]:MethodDeclaration[6046-6234]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1532-1644]:Block[1532-1644]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V1));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V1));",
      "info" : "ReturnStatement[1543-1635]:ReturnStatement[1543-1635]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1709-1826]:Block[1709-1826]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.DEFAULT));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.DEFAULT));",
      "info" : "ReturnStatement[1720-1817]:ReturnStatement[1720-1817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1886-1999]:Block[1886-1999]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V2));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V2));",
      "info" : "ReturnStatement[1897-1989]:ReturnStatement[1897-1989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2059-2172]:Block[2059-2172]"
    }, {
      "left" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V3));",
      "right" : "return new SourceMap(\n           SourceMapGeneratorFactory.getInstance(SourceMapFormat.V3));",
      "info" : "ReturnStatement[2070-2162]:ReturnStatement[2070-2162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2542-2572]:Block[2542-2572]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[2552-2564]:ReturnStatement[2552-2564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2749-3046]:Block[2749-3046]"
    }, {
      "left" : "return node.isCall()\n            || node.isNew()\n            || node.isFunction()\n            || node.isName()\n            || NodeUtil.isGet(node)\n            || NodeUtil.isObjectLitKey(node, node.getParent())\n            || (node.isString() && NodeUtil.isGet(node.getParent()));",
      "right" : "return node.isCall()\n            || node.isNew()\n            || node.isFunction()\n            || node.isName()\n            || NodeUtil.isGet(node)\n            || NodeUtil.isObjectLitKey(node, node.getParent())\n            || (node.isString() && NodeUtil.isGet(node.getParent()));",
      "info" : "ReturnStatement[2759-3038]:ReturnStatement[2759-3038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3216-3289]:Block[3216-3289]"
    }, {
      "left" : "this.prefix = prefix;",
      "right" : "this.prefix = prefix;",
      "info" : "ExpressionStatement[3224-3245]:ExpressionStatement[3224-3245]"
    }, {
      "left" : "this.replacement = replacement;",
      "right" : "this.replacement = replacement;",
      "info" : "ExpressionStatement[3252-3283]:ExpressionStatement[3252-3283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3554-3591]:Block[3554-3591]"
    }, {
      "left" : "this.generator = generator;",
      "right" : "this.generator = generator;",
      "info" : "ExpressionStatement[3560-3587]:ExpressionStatement[3560-3587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3714-4508]:Block[3714-4691]"
    }, {
      "left" : "String sourceFile = node.getSourceFileName();",
      "right" : "String sourceFile = node.getSourceFileName();",
      "info" : "VariableDeclarationStatement[3720-3765]:VariableDeclarationStatement[3720-3765]"
    }, {
      "left" : "if (sourceFile == null || node.getLineno() < 0)",
      "right" : "if (sourceFile == null || node.getLineno() < 0)",
      "info" : "IfStatement[3949-4018]:IfStatement[3949-4018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3997-4018]:Block[3997-4018]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[4005-4012]:ReturnStatement[4005-4012]"
    }, {
      "left" : "sourceFile = fixupSourceLocation(sourceFile);",
      "right" : "sourceFile = fixupSourceLocation(sourceFile);",
      "info" : "ExpressionStatement[4024-4069]:ExpressionStatement[4024-4069]"
    }, {
      "left" : "String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);",
      "right" : "String originalName = (String) node.getProp(Node.ORIGINALNAME_PROP);",
      "info" : "VariableDeclarationStatement[4075-4143]:VariableDeclarationStatement[4075-4143]"
    }, {
      "left" : "generator.addMapping(\n        sourceFile, originalName,\n        new FilePosition(node.getLineno(), node.getCharno()),\n        outputStartPosition, outputEndPosition);",
      "right" : "generator.addMapping(\n        sourceFile, originalName,\n        new FilePosition(node.getLineno() - lineBaseOffset, node.getCharno()),\n        outputStartPosition, outputEndPosition);",
      "info" : "ExpressionStatement[4338-4504]:ExpressionStatement[4504-4687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4673-5347]:Block[4856-5530]"
    }, {
      "left" : "if (prefixMappings.isEmpty())",
      "right" : "if (prefixMappings.isEmpty())",
      "info" : "IfStatement[4679-4741]:IfStatement[4862-4924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4709-4741]:Block[4892-4924]"
    }, {
      "left" : "return sourceFile;",
      "right" : "return sourceFile;",
      "info" : "ReturnStatement[4717-4735]:ReturnStatement[4900-4918]"
    }, {
      "left" : "String fixed = sourceLocationFixupCache.get(sourceFile);",
      "right" : "String fixed = sourceLocationFixupCache.get(sourceFile);",
      "info" : "VariableDeclarationStatement[4747-4803]:VariableDeclarationStatement[4930-4986]"
    }, {
      "left" : "if (fixed != null)",
      "right" : "if (fixed != null)",
      "info" : "IfStatement[4808-4854]:IfStatement[4991-5037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4827-4854]:Block[5010-5037]"
    }, {
      "left" : "return fixed;",
      "right" : "return fixed;",
      "info" : "ReturnStatement[4835-4848]:ReturnStatement[5018-5031]"
    }, {
      "left" : "for (LocationMapping mapping : prefixMappings)",
      "right" : "for (LocationMapping mapping : prefixMappings)",
      "info" : "EnhancedForStatement[4919-5143]:EnhancedForStatement[5102-5326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4966-5143]:Block[5149-5326]"
    }, {
      "left" : "if (sourceFile.startsWith(mapping.prefix))",
      "right" : "if (sourceFile.startsWith(mapping.prefix))",
      "info" : "IfStatement[4974-5137]:IfStatement[5157-5320]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5017-5137]:Block[5200-5320]"
    }, {
      "left" : "fixed = mapping.replacement + sourceFile.substring(\n          mapping.prefix.length());",
      "right" : "fixed = mapping.replacement + sourceFile.substring(\n          mapping.prefix.length());",
      "info" : "ExpressionStatement[5027-5114]:ExpressionStatement[5210-5297]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[5123-5129]:BreakStatement[5306-5312]"
    }, {
      "left" : "if (fixed == null)",
      "right" : "if (fixed == null)",
      "info" : "IfStatement[5219-5271]:IfStatement[5402-5454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5238-5271]:Block[5421-5454]"
    }, {
      "left" : "fixed = sourceFile;",
      "right" : "fixed = sourceFile;",
      "info" : "ExpressionStatement[5246-5265]:ExpressionStatement[5429-5448]"
    }, {
      "left" : "sourceLocationFixupCache.put(sourceFile, fixed);",
      "right" : "sourceLocationFixupCache.put(sourceFile, fixed);",
      "info" : "ExpressionStatement[5277-5325]:ExpressionStatement[5460-5508]"
    }, {
      "left" : "return fixed;",
      "right" : "return fixed;",
      "info" : "ReturnStatement[5330-5343]:ReturnStatement[5513-5526]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5420-5460]:Block[5603-5643]"
    }, {
      "left" : "generator.appendTo(out, name);",
      "right" : "generator.appendTo(out, name);",
      "info" : "ExpressionStatement[5426-5456]:ExpressionStatement[5609-5639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5484-5550]:Block[5667-5733]"
    }, {
      "left" : "generator.reset();",
      "right" : "generator.reset();",
      "info" : "ExpressionStatement[5490-5508]:ExpressionStatement[5673-5691]"
    }, {
      "left" : "sourceLocationFixupCache.clear();",
      "right" : "sourceLocationFixupCache.clear();",
      "info" : "ExpressionStatement[5513-5546]:ExpressionStatement[5696-5729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5619-5684]:Block[5802-5867]"
    }, {
      "left" : "generator.setStartingPosition(offsetLine, offsetIndex);",
      "right" : "generator.setStartingPosition(offsetLine, offsetIndex);",
      "info" : "ExpressionStatement[5625-5680]:ExpressionStatement[5808-5863]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5732-5777]:Block[5915-5960]"
    }, {
      "left" : "generator.setWrapperPrefix(prefix);",
      "right" : "generator.setWrapperPrefix(prefix);",
      "info" : "ExpressionStatement[5738-5773]:ExpressionStatement[5921-5956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5820-5859]:Block[6003-6042]"
    }, {
      "left" : "generator.validate(validate);",
      "right" : "generator.validate(validate);",
      "info" : "ExpressionStatement[5826-5855]:ExpressionStatement[6009-6038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5992-6051]:Block[6175-6234]"
    }, {
      "left" : "this.prefixMappings = sourceMapLocationMappings;",
      "right" : "this.prefixMappings = sourceMapLocationMappings;",
      "info" : "ExpressionStatement[5999-6047]:ExpressionStatement[6182-6230]"
    } ]
  },
  "interFileMappings" : { }
}