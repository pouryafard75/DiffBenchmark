{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SortsTiming",
      "right" : "SortsTiming",
      "info" : "TypeDeclaration[625-32325]:TypeDeclaration[625-15331]"
    }, {
      "left" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"#.###\");",
      "right" : "private static final DecimalFormat FORMAT = new DecimalFormat(\"#.###\");",
      "info" : "FieldDeclaration[657-728]:FieldDeclaration[657-728]"
    }, {
      "left" : "private static final int SIZE = 1024*20;",
      "right" : "private static final int SIZE = 1024*100;",
      "info" : "FieldDeclaration[733-773]:FieldDeclaration[733-774]"
    }, {
      "left" : "private static final boolean showResult = false;",
      "right" : "private static final boolean showResult = false;",
      "info" : "FieldDeclaration[779-827]:FieldDeclaration[779-827]"
    }, {
      "left" : "private static final boolean checkResults = true;",
      "right" : "private static final boolean checkResults = true;",
      "info" : "FieldDeclaration[888-937]:FieldDeclaration[832-881]"
    }, {
      "left" : "private static int insertionCount = 0;",
      "right" : "private static int insertionCount = 0;",
      "info" : "FieldDeclaration[943-981]:FieldDeclaration[887-925]"
    }, {
      "left" : "private static final double[] insertionResults = new double[1 * 3];",
      "right" : "private static double[] insertionResults = null;",
      "info" : "FieldDeclaration[986-1053]:FieldDeclaration[930-978]"
    }, {
      "left" : "private static int bubbleCount = 0;",
      "right" : "private static int bubbleCount = 0;",
      "info" : "FieldDeclaration[1058-1093]:FieldDeclaration[983-1018]"
    }, {
      "left" : "private static final double[] bubbleResults = new double[1 * 3];",
      "right" : "private static double[] bubbleResults = null;",
      "info" : "FieldDeclaration[1098-1162]:FieldDeclaration[1023-1068]"
    }, {
      "left" : "private static int shellCount = 0;",
      "right" : "private static int shellCount = 0;",
      "info" : "FieldDeclaration[1167-1201]:FieldDeclaration[1073-1107]"
    }, {
      "left" : "private static final double[] shellResults = new double[1 * 3];",
      "right" : "private static double[] shellResults = null;",
      "info" : "FieldDeclaration[1206-1269]:FieldDeclaration[1112-1156]"
    }, {
      "left" : "private static int mergeInPlaceCount = 0;",
      "right" : "private static int mergeCount = 0;",
      "info" : "FieldDeclaration[1274-1315]:FieldDeclaration[1161-1195]"
    }, {
      "left" : "private static final double[] mergeInPlaceResults = new double[1 * 3];",
      "right" : "private static double[] mergeResults = null;",
      "info" : "FieldDeclaration[1320-1390]:FieldDeclaration[1200-1244]"
    }, {
      "left" : "private static int quickCount = 0;",
      "right" : "private static int quickCount = 0;",
      "info" : "FieldDeclaration[1522-1556]:FieldDeclaration[1249-1283]"
    }, {
      "left" : "private static final double[] quickResults = new double[3 * 3];",
      "right" : "private static double[] quickResults = null;",
      "info" : "FieldDeclaration[1561-1624]:FieldDeclaration[1288-1332]"
    }, {
      "left" : "private static int heapCount = 0;",
      "right" : "private static int heapCount = 0;",
      "info" : "FieldDeclaration[1629-1662]:FieldDeclaration[1337-1370]"
    }, {
      "left" : "private static final double[] heapResults = new double[1 * 3];",
      "right" : "private static double[] heapResults = null;",
      "info" : "FieldDeclaration[1667-1729]:FieldDeclaration[1375-1418]"
    }, {
      "left" : "private static int countingCount = 0;",
      "right" : "private static int countingCount = 0;",
      "info" : "FieldDeclaration[1734-1771]:FieldDeclaration[1423-1460]"
    }, {
      "left" : "private static final double[] countingResults = new double[1 * 3];",
      "right" : "private static double[] countingResults = null;",
      "info" : "FieldDeclaration[1776-1842]:FieldDeclaration[1465-1512]"
    }, {
      "left" : "private static int radixCount = 0;",
      "right" : "private static int radixCount = 0;",
      "info" : "FieldDeclaration[1847-1881]:FieldDeclaration[1517-1551]"
    }, {
      "left" : "private static final double[] radixResults = new double[1 * 3];",
      "right" : "private static double[] radixResults = null;",
      "info" : "FieldDeclaration[1886-1949]:FieldDeclaration[1556-1600]"
    }, {
      "left" : "private static int americanFlagCount = 0;",
      "right" : "private static int americanFlagCount = 0;",
      "info" : "FieldDeclaration[1954-1995]:FieldDeclaration[1605-1646]"
    }, {
      "left" : "private static final double[] americanFlagResults = new double[1 * 3];",
      "right" : "private static double[] americanFlagResults = null;",
      "info" : "FieldDeclaration[2000-2070]:FieldDeclaration[1651-1702]"
    }, {
      "left" : "private static Integer[] unsorted = null;",
      "right" : "private static Integer[] unsorted = null;",
      "info" : "FieldDeclaration[2618-2659]:FieldDeclaration[1708-1749]"
    }, {
      "left" : "private static Integer[] sorted = null;",
      "right" : "private static Integer[] sorted = null;",
      "info" : "FieldDeclaration[2664-2703]:FieldDeclaration[1754-1793]"
    }, {
      "left" : "private static Integer[] reverse = null;",
      "right" : "private static Integer[] reverse = null;",
      "info" : "FieldDeclaration[2708-2748]:FieldDeclaration[1798-1838]"
    }, {
      "left" : "public static void main(String[] args)",
      "right" : "public Integer[] sort(Integer[] input)",
      "info" : "MethodDeclaration[2754-27363]:MethodDeclaration[10208-10326]"
    }, {
      "left" : "private static final void showComparison()",
      "right" : "private static final void showComparison()",
      "info" : "MethodDeclaration[27369-30418]:MethodDeclaration[10338-13424]"
    }, {
      "left" : "private static final void showResult(Integer[] u, Integer[] r)",
      "right" : "private static final void showResult(Integer[] u, Integer[] r)",
      "info" : "MethodDeclaration[30424-30626]:MethodDeclaration[13430-13632]"
    }, {
      "left" : "private static final boolean check(Integer[] array)",
      "right" : "private static final boolean check(Integer[] array)",
      "info" : "MethodDeclaration[30632-30842]:MethodDeclaration[13638-13848]"
    }, {
      "left" : "public static final String print(Integer[] array)",
      "right" : "public static final String print(Integer[] array)",
      "info" : "MethodDeclaration[30848-30951]:MethodDeclaration[13854-13957]"
    }, {
      "left" : "public static final String print(Integer[] array, int start, int length)",
      "right" : "public static final String print(Integer[] array, int start, int length)",
      "info" : "MethodDeclaration[30957-31300]:MethodDeclaration[13963-14306]"
    }, {
      "left" : "public static final String printWithPivot(Integer[] array, int pivotIndex, int start, int length)",
      "right" : "public static final String printWithPivot(Integer[] array, int pivotIndex, int start, int length)",
      "info" : "MethodDeclaration[31306-31776]:MethodDeclaration[14312-14782]"
    }, {
      "left" : "private static final void putOutTheGarbage()",
      "right" : "private static final void putOutTheGarbage()",
      "info" : "MethodDeclaration[31782-31912]:MethodDeclaration[14788-14918]"
    }, {
      "left" : "private static final long fSLEEP_INTERVAL = 100;",
      "right" : "private static final long fSLEEP_INTERVAL = 100;",
      "info" : "FieldDeclaration[31918-31966]:FieldDeclaration[14924-14972]"
    }, {
      "left" : "private static final void collectGarbage()",
      "right" : "private static final void collectGarbage()",
      "info" : "MethodDeclaration[31972-32323]:MethodDeclaration[14978-15329]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[625-631]:Modifier[625-631]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[632-637]:TYPE_DECLARATION_KIND[632-637]"
    }, {
      "left" : "SortsTiming",
      "right" : "SortsTiming",
      "info" : "SimpleName[638-649]:SimpleName[638-649]"
    }, {
      "left" : "20",
      "right" : "100",
      "info" : "NumberLiteral[770-772]:NumberLiteral[770-773]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[832-839]:Modifier[930-937]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[840-846]:Modifier[938-944]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[861-875]:SimpleName[3053-3067]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[986-993]:Modifier[1023-1030]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[994-1000]:Modifier[1031-1037]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1039-1045]:PrimitiveType[1038-1044]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[]",
      "info" : "Dimension[1045-1052]:Dimension[1044-1046]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1098-1105]:Modifier[1112-1119]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1106-1112]:Modifier[1120-1126]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1119-1125]:PrimitiveType[1127-1133]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[1125-1127]:Dimension[1133-1135]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[]",
      "info" : "Dimension[1154-1161]:Dimension[1221-1223]"
    }, {
      "left" : "3",
      "right" : "3",
      "info" : "NumberLiteral[1159-1160]:NumberLiteral[2938-2939]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1206-1213]:Modifier[1200-1207]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1214-1220]:Modifier[1208-1214]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1227-1233]:PrimitiveType[1215-1221]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[1233-1235]:Dimension[1309-1311]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1255-1261]:PrimitiveType[1303-1309]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[]",
      "info" : "Dimension[1261-1268]:Dimension[1396-1398]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[1262-1263]:NumberLiteral[2934-2935]"
    }, {
      "left" : "3",
      "right" : "3",
      "info" : "NumberLiteral[1266-1267]:NumberLiteral[4519-4520]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1274-1281]:Modifier[1288-1295]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1282-1288]:Modifier[1296-1302]"
    }, {
      "left" : "mergeInPlaceCount",
      "right" : "mergeCount",
      "info" : "SimpleName[1293-1310]:SimpleName[1180-1190]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1320-1327]:Modifier[1161-1168]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1328-1334]:Modifier[1169-1175]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[1347-1349]:Dimension[1486-1488]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[1350-1369]:SimpleName[1224-1236]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1376-1382]:PrimitiveType[1390-1396]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[]",
      "info" : "Dimension[1382-1389]:Dimension[1577-1579]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[1383-1384]:NumberLiteral[4515-4516]"
    }, {
      "left" : "3",
      "right" : "3",
      "info" : "NumberLiteral[1387-1388]:NumberLiteral[4356-4357]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1395-1402]:Modifier[1375-1382]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1403-1409]:Modifier[1383-1389]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[1410-1413]:PrimitiveType[2025-2028]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[1437-1438]:NumberLiteral[2033-2034]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1444-1451]:Modifier[1465-1472]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1452-1458]:Modifier[1473-1479]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1465-1471]:PrimitiveType[1480-1486]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[1471-1473]:Dimension[4771-4773]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1503-1509]:PrimitiveType[1571-1577]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[]",
      "info" : "Dimension[1509-1516]:Dimension[1672-1674]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[1510-1511]:NumberLiteral[4352-4353]"
    }, {
      "left" : "3",
      "right" : "3",
      "info" : "NumberLiteral[1514-1515]:NumberLiteral[4188-4189]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1561-1568]:Modifier[1556-1563]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1569-1575]:Modifier[1564-1570]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1582-1588]:PrimitiveType[1666-1672]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[1588-1590]:Dimension[4734-4736]"
    }, {
      "left" : "new double[3 * 3]",
      "right" : "new double[3 * 3]",
      "info" : "ArrayCreation[1606-1623]:ArrayCreation[3672-3689]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1667-1674]:Modifier[1651-1658]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1675-1681]:Modifier[1659-1665]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1688-1694]:PrimitiveType[2927-2933]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[1694-1696]:Dimension[4754-4756]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1715-1721]:PrimitiveType[4022-4028]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[1 * 3]",
      "info" : "Dimension[1721-1728]:Dimension[2933-2940]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[1722-1723]:NumberLiteral[4184-4185]"
    }, {
      "left" : "3",
      "right" : "3",
      "info" : "NumberLiteral[1726-1727]:NumberLiteral[4033-4034]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1776-1783]:Modifier[4675-4682]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1784-1790]:Modifier[1851-1857]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1797-1803]:PrimitiveType[4508-4514]"
    }, {
      "left" : "[]",
      "right" : "[1 * 3]",
      "info" : "Dimension[1803-1805]:Dimension[4514-4521]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1828-1834]:PrimitiveType[3416-3422]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[2 * 3]",
      "info" : "Dimension[1834-1841]:Dimension[3422-3429]"
    }, {
      "left" : "1",
      "right" : "2",
      "info" : "NumberLiteral[1835-1836]:NumberLiteral[3423-3424]"
    }, {
      "left" : "1",
      "right" : "1",
      "info" : "NumberLiteral[1835-1836]:NumberLiteral[4029-4030]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[1886-1893]:Modifier[10006-10013]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[1894-1900]:Modifier[4683-4689]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1907-1913]:PrimitiveType[4345-4351]"
    }, {
      "left" : "[]",
      "right" : "[1 * 3]",
      "info" : "Dimension[1913-1915]:Dimension[4183-4190]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[1935-1941]:PrimitiveType[3260-3266]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[1 * 3]",
      "info" : "Dimension[1941-1948]:Dimension[3266-3273]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2000-2007]:Modifier[9734-9741]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2008-2014]:Modifier[9742-9748]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[2021-2027]:PrimitiveType[4177-4183]"
    }, {
      "left" : "[]",
      "right" : "[1 * 3]",
      "info" : "Dimension[2027-2029]:Dimension[4028-4035]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[2056-2062]:PrimitiveType[3100-3106]"
    }, {
      "left" : "[1 * 3]",
      "right" : "[1 * 3]",
      "info" : "Dimension[2062-2069]:Dimension[3106-3113]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2076-2083]:Modifier[9418-9425]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2084-2090]:Modifier[9426-9432]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2131-2138]:Modifier[9102-9109]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2139-2145]:Modifier[9110-9116]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2183-2190]:Modifier[8789-8796]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2191-2197]:Modifier[8797-8803]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2234-2241]:Modifier[8465-8472]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2242-2248]:Modifier[8473-8479]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2292-2299]:Modifier[8148-8155]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2300-2306]:Modifier[8156-8162]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2353-2360]:Modifier[7864-7871]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2361-2367]:Modifier[7872-7878]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2404-2411]:Modifier[7595-7602]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2412-2418]:Modifier[7603-7609]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2454-2461]:Modifier[7314-7321]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2462-2468]:Modifier[7322-7328]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2508-2515]:Modifier[7039-7046]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2516-2522]:Modifier[7047-7053]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2523-2528]:Modifier[4690-4695]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2559-2566]:Modifier[6746-6753]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2567-2573]:Modifier[6754-6760]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[2574-2579]:Modifier[10353-10358]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2754-2760]:Modifier[1844-1850]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2761-2767]:Modifier[6503-6509]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2768-2772]:PrimitiveType[1858-1862]"
    }, {
      "left" : "main",
      "right" : "main",
      "info" : "SimpleName[2773-2777]:SimpleName[1863-1867]"
    }, {
      "left" : "String[] args",
      "right" : "String[] args",
      "info" : "SingleVariableDeclaration[2778-2791]:SingleVariableDeclaration[1868-1881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2793-27363]:Block[10265-10326]"
    }, {
      "left" : "System.out.println(\"Generating random array.\");",
      "right" : "System.out.println(\"Generating random array.\");",
      "info" : "ExpressionStatement[2803-2850]:ExpressionStatement[1893-1940]"
    }, {
      "left" : "Random random = new Random();",
      "right" : "Random random = new Random();",
      "info" : "VariableDeclarationStatement[2859-2888]:VariableDeclarationStatement[1949-1978]"
    }, {
      "left" : "unsorted = new Integer[SIZE];",
      "right" : "unsorted = new Integer[SIZE];",
      "info" : "ExpressionStatement[2897-2926]:ExpressionStatement[1987-2016]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[2935-2945]:VariableDeclarationStatement[2025-2035]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[2935-2938]:PrimitiveType[4696-4699]"
    }, {
      "left" : "0",
      "right" : "0",
      "info" : "NumberLiteral[2943-2944]:NumberLiteral[11472-11473]"
    }, {
      "left" : "while (i < unsorted.length)",
      "right" : "while (i < unsorted.length)",
      "info" : "WhileStatement[2954-3082]:WhileStatement[2044-2172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2982-3082]:Block[2072-2172]"
    }, {
      "left" : "int j = random.nextInt(unsorted.length * 10);",
      "right" : "int j = random.nextInt(unsorted.length * 10);",
      "info" : "VariableDeclarationStatement[2996-3041]:VariableDeclarationStatement[2086-2131]"
    }, {
      "left" : "unsorted[i++] = j;",
      "right" : "unsorted[i++] = j;",
      "info" : "ExpressionStatement[3054-3072]:ExpressionStatement[2144-2162]"
    }, {
      "left" : "System.out.println(\"Generated random array.\");",
      "right" : "System.out.println(\"Generated random array.\");",
      "info" : "ExpressionStatement[3091-3137]:ExpressionStatement[2181-2227]"
    }, {
      "left" : "System.out.println(\"Generating sorted array.\");",
      "right" : "System.out.println(\"Generating sorted array.\");",
      "info" : "ExpressionStatement[3147-3194]:ExpressionStatement[2237-2284]"
    }, {
      "left" : "sorted = new Integer[SIZE];",
      "right" : "sorted = new Integer[SIZE];",
      "info" : "ExpressionStatement[3203-3230]:ExpressionStatement[2293-2320]"
    }, {
      "left" : "for (i = 0; i < sorted.length; i++)",
      "right" : "for (i = 0; i < sorted.length; i++)",
      "info" : "ForStatement[3239-3313]:ForStatement[2329-2403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3275-3313]:Block[2365-2403]"
    }, {
      "left" : "sorted[i] = i;",
      "right" : "sorted[i] = i;",
      "info" : "ExpressionStatement[3289-3303]:ExpressionStatement[2379-2393]"
    }, {
      "left" : "System.out.println(\"Generated sorted array.\");",
      "right" : "System.out.println(\"Generated sorted array.\");",
      "info" : "ExpressionStatement[3322-3368]:ExpressionStatement[2412-2458]"
    }, {
      "left" : "System.out.println(\"Generating reverse sorted array.\");",
      "right" : "System.out.println(\"Generating reverse sorted array.\");",
      "info" : "ExpressionStatement[3378-3433]:ExpressionStatement[2468-2523]"
    }, {
      "left" : "reverse = new Integer[SIZE];",
      "right" : "reverse = new Integer[SIZE];",
      "info" : "ExpressionStatement[3442-3470]:ExpressionStatement[2532-2560]"
    }, {
      "left" : "for (i = (reverse.length - 1); i >= 0; i--)",
      "right" : "for (i = (reverse.length - 1); i >= 0; i--)",
      "info" : "ForStatement[3479-3575]:ForStatement[2569-2665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3523-3575]:Block[2613-2665]"
    }, {
      "left" : "reverse[i] = (SIZE - 1) - i;",
      "right" : "reverse[i] = (SIZE - 1) - i;",
      "info" : "ExpressionStatement[3537-3565]:ExpressionStatement[2627-2655]"
    }, {
      "left" : "System.out.println(\"Generated reverse sorted array.\");",
      "right" : "System.out.println(\"Generated reverse sorted array.\");",
      "info" : "ExpressionStatement[3584-3638]:ExpressionStatement[2674-2728]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[3647-3668]:ExpressionStatement[2737-2758]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[3647-3657]:METHOD_INVOCATION_RECEIVER[2875-2885]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[3658-3665]:SimpleName[2856-2863]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[3677-3696]:ExpressionStatement[2767-2786]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[3677-3687]:METHOD_INVOCATION_RECEIVER[2845-2855]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[3688-3693]:SimpleName[2886-2891]"
    }, {
      "left" : "System.out.println(\"Starting sorts...\");",
      "right" : "System.out.println(\"Starting sorts...\");",
      "info" : "ExpressionStatement[3706-3746]:ExpressionStatement[2796-2836]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[3755-3765]:METHOD_INVOCATION_RECEIVER[2767-2777]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[3755-3776]:ExpressionStatement[2845-2866]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[3766-3773]:SimpleName[2748-2755]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[3785-3795]:METHOD_INVOCATION_RECEIVER[2737-2747]"
    }, {
      "left" : "System.out.flush()",
      "right" : "System.out.flush()",
      "info" : "MethodInvocation[3785-3803]:MethodInvocation[2875-2893]"
    }, {
      "left" : "System.out.flush();",
      "right" : "insertionResults = new double[1 * 3];",
      "info" : "ExpressionStatement[3785-3804]:ExpressionStatement[2904-2941]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[3796-3801]:SimpleName[2778-2783]"
    }, {
      "left" : "showInsertion",
      "right" : "Insertion",
      "info" : "SimpleName[3817-3830]:SimpleName[2979-2988]"
    }, {
      "left" : "long bInsertion = System.nanoTime();",
      "right" : "long bInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[3876-3912]:VariableDeclarationStatement[4804-4840]"
    }, {
      "left" : "Integer",
      "right" : "Insertion",
      "info" : "SimpleName[3925-3932]:SimpleName[2979-2988]"
    }, {
      "left" : "Integer[]",
      "right" : "double[1 * 3]",
      "info" : "ArrayType[3925-3934]:ArrayType[3100-3113]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[3925-3932]:SimpleType[4727-4734]"
    }, {
      "left" : "[]",
      "right" : "[1 * 3]",
      "info" : "Dimension[3932-3934]:Dimension[4351-4358]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[3935-3941]:SimpleName[3137-3144]"
    }, {
      "left" : "InsertionSort",
      "right" : "InsertionSort",
      "info" : "METHOD_INVOCATION_RECEIVER[3944-3957]:METHOD_INVOCATION_RECEIVER[8100-8113]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[3958-3962]:SimpleName[4877-4881]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[3963-3971]:SimpleName[3577-3585]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[3972-3977]:SimpleName[4891-4896]"
    }, {
      "left" : "System.err.println(\"InsertionSort failed.\");",
      "right" : "bubbleCount = runTest(new Bubble(), unsorted, sorted, bubbleResults, bubbleCount);",
      "info" : "ExpressionStatement[4046-4090]:ExpressionStatement[3123-3205]"
    }, {
      "left" : "System.err.println(\"InsertionSort failed.\")",
      "right" : "runTest(new Bubble(), unsorted, sorted, bubbleResults, bubbleCount)",
      "info" : "MethodInvocation[4046-4089]:MethodInvocation[3137-3204]"
    }, {
      "left" : "long aInsertion = System.nanoTime();",
      "right" : "long aInsertion = System.nanoTime();",
      "info" : "VariableDeclarationStatement[4103-4139]:VariableDeclarationStatement[5016-5052]"
    }, {
      "left" : "double diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "right" : "double diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "info" : "VariableDeclarationStatement[4152-4211]:VariableDeclarationStatement[5061-5120]"
    }, {
      "left" : "System.out.println(\"Random: InsertionSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "shellResults = new double[1 * 3];",
      "info" : "ExpressionStatement[4224-4301]:ExpressionStatement[3241-3274]"
    }, {
      "left" : "\"Random: InsertionSort=\" + FORMAT.format(diff) + \" secs\"",
      "right" : "1 * 3",
      "info" : "InfixExpression[4243-4299]:InfixExpression[3267-3272]"
    }, {
      "left" : "+",
      "right" : "*",
      "info" : "INFIX_EXPRESSION_OPERATOR[4268-4269]:INFIX_EXPRESSION_OPERATOR[3269-3270]"
    }, {
      "left" : "FORMAT.format(diff)",
      "right" : "showComparison()",
      "info" : "MethodInvocation[4270-4289]:MethodInvocation[3214-3230]"
    }, {
      "left" : "showResult",
      "right" : "runTest",
      "info" : "SimpleName[4346-4356]:SimpleName[3296-3303]"
    }, {
      "left" : "showResult(unsorted, result)",
      "right" : "runTest(new Shell(), unsorted, sorted, shellResults, shellCount)",
      "info" : "MethodInvocation[4346-4374]:MethodInvocation[3296-3360]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[4357-4365]:SimpleName[4402-4410]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[4392-4406]:SimpleName[4455-4469]"
    }, {
      "left" : "insertionResults",
      "right" : "insertionResults",
      "info" : "SimpleName[4424-4440]:SimpleName[2904-2920]"
    }, {
      "left" : "insertionResults[insertionCount++] = diff;",
      "right" : "shellCount = runTest(new Shell(), unsorted, sorted, shellResults, shellCount);",
      "info" : "ExpressionStatement[4424-4466]:ExpressionStatement[3283-3361]"
    }, {
      "left" : "insertionCount",
      "right" : "insertionCount",
      "info" : "SimpleName[4441-4455]:SimpleName[3028-3042]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "showComparison",
      "info" : "SimpleName[4479-4495]:SimpleName[3370-3384]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[4479-4498]:ExpressionStatement[3370-3387]"
    }, {
      "left" : "bInsertion = System.nanoTime();",
      "right" : "mergeResults = new double[2 * 3];",
      "info" : "ExpressionStatement[4512-4543]:ExpressionStatement[3397-3430]"
    }, {
      "left" : "bInsertion",
      "right" : "bInsertion",
      "info" : "SimpleName[4512-4522]:SimpleName[6142-6152]"
    }, {
      "left" : "System",
      "right" : "mergeResults",
      "info" : "SimpleName[4525-4531]:SimpleName[3397-3409]"
    }, {
      "left" : "result = InsertionSort.sort(sorted.clone());",
      "right" : "result = InsertionSort.sort(sorted.clone());",
      "info" : "ExpressionStatement[4556-4600]:ExpressionStatement[5392-5436]"
    }, {
      "left" : "checkResults",
      "right" : "mergeCount",
      "info" : "SimpleName[4617-4629]:SimpleName[3439-3449]"
    }, {
      "left" : "check",
      "right" : "runTest",
      "info" : "SimpleName[4634-4639]:SimpleName[3452-3459]"
    }, {
      "left" : "result",
      "right" : "results",
      "info" : "SimpleName[4640-4646]:SimpleName[4774-4781]"
    }, {
      "left" : "println",
      "right" : "MergeNotInPlace",
      "info" : "SimpleName[4676-4683]:SimpleName[3464-3479]"
    }, {
      "left" : "aInsertion = System.nanoTime();",
      "right" : "mergeCount = runTest(new MergeNotInPlace(), unsorted, sorted, mergeResults, mergeCount);",
      "info" : "ExpressionStatement[4722-4753]:ExpressionStatement[3439-3527]"
    }, {
      "left" : "aInsertion",
      "right" : "aInsertion",
      "info" : "SimpleName[4722-4732]:SimpleName[6129-6139]"
    }, {
      "left" : "System",
      "right" : "mergeResults",
      "info" : "SimpleName[4735-4741]:SimpleName[3501-3513]"
    }, {
      "left" : "nanoTime",
      "right" : "mergeCount",
      "info" : "SimpleName[4742-4750]:SimpleName[3515-3525]"
    }, {
      "left" : "diff",
      "right" : "runTest",
      "info" : "SimpleName[4766-4770]:SimpleName[3549-3556]"
    }, {
      "left" : "aInsertion",
      "right" : "aInsertion",
      "info" : "SimpleName[4774-4784]:SimpleName[6081-6091]"
    }, {
      "left" : "bInsertion",
      "right" : "bInsertion",
      "info" : "SimpleName[4787-4797]:SimpleName[5874-5884]"
    }, {
      "left" : "System.out.println(\"Sorted: InsertionSort=\" + FORMAT.format(diff) + \" secs\")",
      "right" : "showComparison()",
      "info" : "MethodInvocation[4831-4907]:MethodInvocation[3630-3646]"
    }, {
      "left" : "System.out.println(\"Sorted: InsertionSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "quickResults = new double[3 * 3];",
      "info" : "ExpressionStatement[4831-4908]:ExpressionStatement[3657-3690]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[4842-4849]:SimpleName[4968-4975]"
    }, {
      "left" : "FORMAT.format(diff)",
      "right" : "runTest(new MergeInPlace(), unsorted, sorted, mergeResults, mergeCount)",
      "info" : "MethodInvocation[4877-4896]:MethodInvocation[3549-3620]"
    }, {
      "left" : "FORMAT",
      "right" : "MergeInPlace",
      "info" : "SimpleName[4877-4883]:SimpleName[3561-3573]"
    }, {
      "left" : "format",
      "right" : "mergeResults",
      "info" : "SimpleName[4884-4890]:SimpleName[3595-3607]"
    }, {
      "left" : "diff",
      "right" : "mergeCount",
      "info" : "SimpleName[4891-4895]:SimpleName[3609-3619]"
    }, {
      "left" : "showResult",
      "right" : "runTest",
      "info" : "SimpleName[4925-4935]:SimpleName[3712-3719]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "quickCount = runTest(new QuickFirst(), unsorted, sorted, quickResults, quickCount);",
      "info" : "ExpressionStatement[4953-4980]:ExpressionStatement[3699-3782]"
    }, {
      "left" : "showResult(sorted, result)",
      "right" : "runTest(new QuickFirst(), unsorted, sorted, quickResults, quickCount)",
      "info" : "MethodInvocation[4953-4979]:MethodInvocation[3712-3781]"
    }, {
      "left" : "showResult",
      "right" : "QuickFirst",
      "info" : "SimpleName[4953-4963]:SimpleName[3724-3734]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[4964-4970]:SimpleName[4589-4595]"
    }, {
      "left" : "result",
      "right" : "result",
      "info" : "SimpleName[4972-4978]:SimpleName[4859-4865]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[4997-5011]:SimpleName[4646-4660]"
    }, {
      "left" : "insertionResults",
      "right" : "insertionResults",
      "info" : "SimpleName[5029-5045]:SimpleName[3010-3026]"
    }, {
      "left" : "insertionCount",
      "right" : "insertionCount",
      "info" : "SimpleName[5046-5060]:SimpleName[2950-2964]"
    }, {
      "left" : "bInsertion = System.nanoTime()",
      "right" : "quickCount = runTest(new QuickMiddle(), unsorted, sorted, quickResults, quickCount)",
      "info" : "Assignment[5117-5147]:Assignment[3791-3874]"
    }, {
      "left" : "bInsertion",
      "right" : "bInsertion",
      "info" : "SimpleName[5117-5127]:SimpleName[5613-5623]"
    }, {
      "left" : "System",
      "right" : "runTest",
      "info" : "SimpleName[5130-5136]:SimpleName[3804-3811]"
    }, {
      "left" : "nanoTime",
      "right" : "QuickMiddle",
      "info" : "SimpleName[5137-5145]:SimpleName[3816-3827]"
    }, {
      "left" : "result = InsertionSort.sort(reverse.clone());",
      "right" : "result = InsertionSort.sort(reverse.clone());",
      "info" : "ExpressionStatement[5161-5206]:ExpressionStatement[5914-5959]"
    }, {
      "left" : "checkResults",
      "right" : "checkResults",
      "info" : "SimpleName[5223-5235]:SimpleName[4913-4925]"
    }, {
      "left" : "check",
      "right" : "check",
      "info" : "SimpleName[5240-5245]:SimpleName[4930-4935]"
    }, {
      "left" : "result",
      "right" : "result",
      "info" : "METHOD_INVOCATION_ARGUMENTS[5246-5252]:METHOD_INVOCATION_ARGUMENTS[4936-4942]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[5271-5281]:METHOD_INVOCATION_RECEIVER[4957-4967]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[5282-5289]:SimpleName[5140-5147]"
    }, {
      "left" : "aInsertion",
      "right" : "aInsertion",
      "info" : "SimpleName[5328-5338]:SimpleName[5600-5610]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[5341-5347]:METHOD_INVOCATION_RECEIVER[5365-5371]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[5348-5356]:SimpleName[5372-5380]"
    }, {
      "left" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "right" : "quickCount = runTest(new QuickMiddle(), unsorted, sorted, quickResults, quickCount);",
      "info" : "ExpressionStatement[5372-5424]:ExpressionStatement[3791-3875]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[5372-5376]:SimpleName[5198-5202]"
    }, {
      "left" : "aInsertion",
      "right" : "aInsertion",
      "info" : "SimpleName[5380-5390]:SimpleName[5552-5562]"
    }, {
      "left" : "bInsertion",
      "right" : "bInsertion",
      "info" : "SimpleName[5393-5403]:SimpleName[5352-5362]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[5437-5447]:METHOD_INVOCATION_RECEIVER[5129-5139]"
    }, {
      "left" : "println",
      "right" : "QuickRandom",
      "info" : "SimpleName[5448-5455]:SimpleName[3909-3920]"
    }, {
      "left" : "FORMAT.format(diff)",
      "right" : "FORMAT.format(diff)",
      "info" : "MethodInvocation[5491-5510]:MethodInvocation[5184-5203]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[5505-5509]:SimpleName[5309-5313]"
    }, {
      "left" : "\" secs\"",
      "right" : "\" secs\"",
      "info" : "StringLiteral[5513-5520]:StringLiteral[5206-5213]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[5539-5549]:SimpleName[5252-5262]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[5567-5577]:SimpleName[5228-5238]"
    }, {
      "left" : "reverse",
      "right" : "reverse",
      "info" : "SimpleName[5578-5585]:SimpleName[6324-6331]"
    }, {
      "left" : "result",
      "right" : "result",
      "info" : "SimpleName[5587-5593]:SimpleName[5273-5279]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[5612-5626]:SimpleName[4299-4313]"
    }, {
      "left" : "insertionResults[insertionCount++] = diff;",
      "right" : "quickCount = runTest(new QuickRandom(), unsorted, sorted, quickResults, quickCount);",
      "info" : "ExpressionStatement[5644-5686]:ExpressionStatement[3884-3968]"
    }, {
      "left" : "insertionResults",
      "right" : "insertionResults",
      "info" : "SimpleName[5644-5660]:SimpleName[10742-10758]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[5681-5685]:SimpleName[5592-5596]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[5699-5715]:SimpleName[5323-5339]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[5743-5750]:SimpleName[5504-5511]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[5766-5776]:METHOD_INVOCATION_RECEIVER[5653-5663]"
    }, {
      "left" : "bBubble",
      "right" : "Bubble",
      "info" : "SimpleName[5867-5874]:SimpleName[3149-3155]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[5877-5883]:METHOD_INVOCATION_RECEIVER[5565-5571]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[5884-5892]:SimpleName[5572-5580]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[5908-5915]:SimpleType[4849-4856]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[5915-5917]:Dimension[4856-4858]"
    }, {
      "left" : "result",
      "right" : "result",
      "info" : "SimpleName[5918-5924]:SimpleName[5472-5478]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[5938-5942]:SimpleName[6712-6716]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "METHOD_INVOCATION_RECEIVER[5943-5951]:METHOD_INVOCATION_RECEIVER[4882-4890]"
    }, {
      "left" : "checkResults",
      "right" : "checkResults",
      "info" : "SimpleName[5978-5990]:SimpleName[5449-5461]"
    }, {
      "left" : "check",
      "right" : "check",
      "info" : "SimpleName[5995-6000]:SimpleName[5466-5471]"
    }, {
      "left" : "result",
      "right" : "result",
      "info" : "SimpleName[6001-6007]:SimpleName[5795-5801]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[6026-6036]:METHOD_INVOCATION_RECEIVER[5493-5503]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[6037-6044]:SimpleName[5664-5671]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[6095-6101]:METHOD_INVOCATION_RECEIVER[5887-5893]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[6102-6110]:SimpleName[5894-5902]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6126-6132]:PrimitiveType[4765-4771]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[6133-6137]:SimpleName[5722-5726]"
    }, {
      "left" : "1000000d",
      "right" : "1000000d",
      "info" : "NumberLiteral[6162-6170]:NumberLiteral[5627-5635]"
    }, {
      "left" : "1000d",
      "right" : "1000d",
      "info" : "NumberLiteral[6173-6178]:NumberLiteral[5638-5643]"
    }, {
      "left" : "System.out.println(\"Random: BubbleSort=\" + FORMAT.format(diff) + \" secs\")",
      "right" : "showComparison()",
      "info" : "MethodInvocation[6192-6265]:MethodInvocation[3977-3993]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[6192-6202]:METHOD_INVOCATION_RECEIVER[6182-6192]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[6203-6210]:SimpleName[6027-6034]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[6235-6241]:METHOD_INVOCATION_RECEIVER[5708-5714]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[6242-6248]:SimpleName[5715-5721]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[6249-6253]:SimpleName[5831-5835]"
    }, {
      "left" : "\" secs\"",
      "right" : "\" secs\"",
      "info" : "StringLiteral[6257-6264]:StringLiteral[5730-5737]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[6283-6293]:SimpleName[5776-5786]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[6311-6340]:ExpressionStatement[3977-3994]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[6311-6321]:SimpleName[5752-5762]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[6322-6330]:SimpleName[5263-5271]"
    }, {
      "left" : "result",
      "right" : "result",
      "info" : "SimpleName[6332-6338]:SimpleName[5995-6001]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[6357-6371]:SimpleName[4128-4142]"
    }, {
      "left" : "bubbleResults",
      "right" : "bubbleResults",
      "info" : "SimpleName[6389-6402]:SimpleName[3080-3093]"
    }, {
      "left" : "bubbleResults[bubbleCount++] = diff;",
      "right" : "heapResults = new double[1 * 3];",
      "info" : "ExpressionStatement[6389-6425]:ExpressionStatement[4004-4036]"
    }, {
      "left" : "bubbleCount",
      "right" : "bubbleCount",
      "info" : "SimpleName[6403-6414]:SimpleName[3192-3203]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[6420-6424]:SimpleName[6121-6125]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[6438-6454]:SimpleName[5845-5861]"
    }, {
      "left" : "System",
      "right" : "System",
      "info" : "METHOD_INVOCATION_RECEIVER[6481-6487]:METHOD_INVOCATION_RECEIVER[6094-6100]"
    }, {
      "left" : "nanoTime",
      "right" : "nanoTime",
      "info" : "SimpleName[6488-6496]:SimpleName[6101-6109]"
    }, {
      "left" : "result = BubbleSort.sort(sorted.clone());",
      "right" : "heapCount = runTest(new Heap(), unsorted, sorted, heapResults, heapCount);",
      "info" : "ExpressionStatement[6512-6553]:ExpressionStatement[4045-4119]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[6512-6518]:SimpleName[4057-4064]"
    }, {
      "left" : "BubbleSort",
      "right" : "Heap",
      "info" : "SimpleName[6521-6531]:SimpleName[4069-4073]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[6532-6536]:SimpleName[7005-7009]"
    }, {
      "left" : "sorted.clone()",
      "right" : "runTest(new Heap(), unsorted, sorted, heapResults, heapCount)",
      "info" : "MethodInvocation[6537-6551]:MethodInvocation[4057-4118]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6537-6543]:SimpleName[5787-5793]"
    }, {
      "left" : "checkResults && !check(result)",
      "right" : "1 * 3",
      "info" : "InfixExpression[6570-6600]:InfixExpression[4184-4189]"
    }, {
      "left" : "checkResults",
      "right" : "checkResults",
      "info" : "SimpleName[6570-6582]:SimpleName[5972-5984]"
    }, {
      "left" : "&&",
      "right" : "*",
      "info" : "INFIX_EXPRESSION_OPERATOR[6583-6585]:INFIX_EXPRESSION_OPERATOR[4186-4187]"
    }, {
      "left" : "check(result)",
      "right" : "showComparison()",
      "info" : "MethodInvocation[6587-6600]:MethodInvocation[4128-4144]"
    }, {
      "left" : "check",
      "right" : "check",
      "info" : "SimpleName[6587-6592]:SimpleName[5989-5994]"
    }, {
      "left" : "result",
      "right" : "result",
      "info" : "SimpleName[6593-6599]:SimpleName[6333-6339]"
    }, {
      "left" : "System.err.println(\"BubbleSort failed.\");",
      "right" : "countingResults = new double[1 * 3];",
      "info" : "ExpressionStatement[6618-6659]:ExpressionStatement[4155-4191]"
    }, {
      "left" : "System.err",
      "right" : "System.err",
      "info" : "METHOD_INVOCATION_RECEIVER[6618-6628]:METHOD_INVOCATION_RECEIVER[6016-6026]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[6629-6636]:SimpleName[6193-6200]"
    }, {
      "left" : "aBubble = System.nanoTime()",
      "right" : "countingCount = runTest(new Counting(), unsorted, sorted, countingResults, countingCount)",
      "info" : "Assignment[6672-6699]:Assignment[4200-4289]"
    }, {
      "left" : "aBubble",
      "right" : "runTest",
      "info" : "SimpleName[6672-6679]:SimpleName[4216-4223]"
    }, {
      "left" : "aBubble = System.nanoTime();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[6672-6700]:ExpressionStatement[4299-4316]"
    }, {
      "left" : "diff = (aBubble - bBubble) / 1000000d / 1000d;",
      "right" : "radixResults = new double[1 * 3];",
      "info" : "ExpressionStatement[6713-6759]:ExpressionStatement[4326-4359]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[6713-6717]:SimpleName[6259-6263]"
    }, {
      "left" : "aBubble - bBubble",
      "right" : "1 * 3",
      "info" : "InfixExpression[6721-6738]:InfixExpression[4352-4357]"
    }, {
      "left" : "-",
      "right" : "*",
      "info" : "INFIX_EXPRESSION_OPERATOR[6729-6730]:INFIX_EXPRESSION_OPERATOR[4354-4355]"
    }, {
      "left" : "1000000d",
      "right" : "1000000d",
      "info" : "NumberLiteral[6742-6750]:NumberLiteral[6156-6164]"
    }, {
      "left" : "1000d",
      "right" : "1000d",
      "info" : "NumberLiteral[6753-6758]:NumberLiteral[6167-6172]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[6772-6782]:METHOD_INVOCATION_RECEIVER[6412-6422]"
    }, {
      "left" : "println",
      "right" : "println",
      "info" : "SimpleName[6783-6790]:SimpleName[6423-6430]"
    }, {
      "left" : "FORMAT.format(diff)",
      "right" : "runTest(new Radix(), unsorted, sorted, radixResults, radixCount)",
      "info" : "MethodInvocation[6815-6834]:MethodInvocation[4381-4445]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[6815-6821]:METHOD_INVOCATION_RECEIVER[6245-6251]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[6822-6828]:SimpleName[6252-6258]"
    }, {
      "left" : "diff",
      "right" : "diff",
      "info" : "SimpleName[6829-6833]:SimpleName[6369-6373]"
    }, {
      "left" : "\" secs\"",
      "right" : "\" secs\"",
      "info" : "StringLiteral[6837-6844]:StringLiteral[6267-6274]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[6863-6873]:SimpleName[6313-6323]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[6891-6901]:SimpleName[6289-6299]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[6902-6908]:SimpleName[4412-4418]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[6935-6949]:SimpleName[3977-3991]"
    }, {
      "left" : "bubbleResults",
      "right" : "bubbleResults",
      "info" : "SimpleName[6967-6980]:SimpleName[3177-3190]"
    }, {
      "left" : "bubbleResults[bubbleCount++] = diff;",
      "right" : "radixCount = runTest(new Radix(), unsorted, sorted, radixResults, radixCount);",
      "info" : "ExpressionStatement[6967-7003]:ExpressionStatement[4368-4446]"
    }, {
      "left" : "bubbleCount",
      "right" : "bubbleCount",
      "info" : "SimpleName[6981-6992]:SimpleName[3123-3134]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "showComparison",
      "info" : "SimpleName[7016-7032]:SimpleName[4455-4469]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[7016-7035]:ExpressionStatement[4455-4472]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[7016-7032]:SimpleName[6383-6399]"
    }, {
      "left" : "bBubble = System.nanoTime();",
      "right" : "americanFlagResults = new double[1 * 3];",
      "info" : "ExpressionStatement[7049-7077]:ExpressionStatement[4482-4522]"
    }, {
      "left" : "result = BubbleSort.sort(reverse.clone())",
      "right" : "americanFlagCount = runTest(new AmericanFlag(), unsorted, sorted, americanFlagResults, americanFlagCount)",
      "info" : "Assignment[7090-7131]:Assignment[4531-4636]"
    }, {
      "left" : "result",
      "right" : "runTest",
      "info" : "SimpleName[7090-7096]:SimpleName[4551-4558]"
    }, {
      "left" : "result = BubbleSort.sort(reverse.clone());",
      "right" : "showComparison();",
      "info" : "ExpressionStatement[7090-7132]:ExpressionStatement[4646-4663]"
    }, {
      "left" : "BubbleSort",
      "right" : "BubbleSort",
      "info" : "METHOD_INVOCATION_RECEIVER[7099-7109]:METHOD_INVOCATION_RECEIVER[7269-7279]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[7110-7114]:SimpleName[6945-6949]"
    }, {
      "left" : "reverse.clone()",
      "right" : "runTest(new AmericanFlag(), unsorted, sorted, americanFlagResults, americanFlagCount)",
      "info" : "MethodInvocation[7115-7130]:MethodInvocation[4551-4636]"
    }, {
      "left" : "reverse",
      "right" : "AmericanFlag",
      "info" : "SimpleName[7115-7122]:SimpleName[4563-4575]"
    }, {
      "left" : "aBubble",
      "right" : "runTest",
      "info" : "SimpleName[7251-7258]:SimpleName[4700-4707]"
    }, {
      "left" : "System",
      "right" : "Testable",
      "info" : "SimpleName[7261-7267]:SimpleName[4708-4716]"
    }, {
      "left" : "nanoTime",
      "right" : "testable",
      "info" : "SimpleName[7268-7276]:SimpleName[4717-4725]"
    }, {
      "left" : "diff",
      "right" : "Integer",
      "info" : "SimpleName[7292-7296]:SimpleName[4747-4754]"
    }, {
      "left" : "bBubble",
      "right" : "Bubble",
      "info" : "SimpleName[7310-7317]:SimpleName[7060-7066]"
    }, {
      "left" : "System.out",
      "right" : "System.out",
      "info" : "METHOD_INVOCATION_RECEIVER[7351-7361]:METHOD_INVOCATION_RECEIVER[6442-6452]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[7523-7537]:SimpleName[3630-3644]"
    }, {
      "left" : "bubbleResults",
      "right" : "bubbleResults",
      "info" : "SimpleName[7555-7568]:SimpleName[10983-10996]"
    }, {
      "left" : "flush",
      "right" : "flush",
      "info" : "SimpleName[7682-7687]:SimpleName[6453-6458]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7725-9656]:Block[4794-6490]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[7739-7742]:PrimitiveType[4783-4786]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[7742-7744]:Dimension[7238-7240]"
    }, {
      "left" : "shells = new int[] { 10, 5, 3, 1 }",
      "right" : "shells = new int[] { 10, 5, 3, 1 }",
      "info" : "VariableDeclarationFragment[7745-7779]:VariableDeclarationFragment[10066-10100]"
    }, {
      "left" : "bShell",
      "right" : "Shell",
      "info" : "SimpleName[7826-7832]:SimpleName[3308-3313]"
    }, {
      "left" : "System",
      "right" : "count",
      "info" : "SimpleName[7835-7841]:SimpleName[4787-4792]"
    }, {
      "left" : "Integer[] result = ShellSort.sort(shells, unsorted.clone());",
      "right" : "Integer[] result = testable.sort(unsorted.clone());",
      "info" : "VariableDeclarationStatement[7866-7926]:VariableDeclarationStatement[4849-4900]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[7866-7873]:SimpleType[7495-7502]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[7873-7875]:Dimension[7502-7504]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[7895-7899]:SimpleName[7280-7284]"
    }, {
      "left" : "shells",
      "right" : "testable",
      "info" : "SimpleName[7900-7906]:SimpleName[4868-4876]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[7908-7916]:SimpleName[4579-4587]"
    }, {
      "left" : "unsorted.clone()",
      "right" : "unsorted.clone()",
      "info" : "MethodInvocation[7908-7924]:MethodInvocation[4882-4898]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[7939-8031]:IfStatement[4909-5007]"
    }, {
      "left" : "System.err.println(\"ShellSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[7991-8031]:ExpressionStatement[4957-5007]"
    }, {
      "left" : "println",
      "right" : "getName",
      "info" : "SimpleName[8002-8009]:SimpleName[4985-4992]"
    }, {
      "left" : "\"ShellSort failed.\"",
      "right" : "\" failed.\"",
      "info" : "StringLiteral[8010-8029]:StringLiteral[4995-5005]"
    }, {
      "left" : "aShell",
      "right" : "testable",
      "info" : "SimpleName[8049-8055]:SimpleName[5159-5167]"
    }, {
      "left" : "System",
      "right" : "testable",
      "info" : "SimpleName[8058-8064]:SimpleName[5159-5167]"
    }, {
      "left" : "System.nanoTime()",
      "right" : "testable.getName()",
      "info" : "MethodInvocation[8058-8075]:MethodInvocation[5159-5177]"
    }, {
      "left" : "System",
      "right" : "getName",
      "info" : "SimpleName[8058-8064]:SimpleName[5168-5175]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[8065-8073]:SimpleName[5168-5175]"
    }, {
      "left" : "System.out.println(\"Random: ShellSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Random: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[8153-8226]:ExpressionStatement[5129-5215]"
    }, {
      "left" : "\"Random: ShellSort=\"",
      "right" : "\"=\"",
      "info" : "StringLiteral[8172-8192]:StringLiteral[5178-5181]"
    }, {
      "left" : "FORMAT.format(diff)",
      "right" : "runTest(new QuickRandom(), unsorted, sorted, quickResults, quickCount)",
      "info" : "MethodInvocation[8195-8214]:MethodInvocation[3897-3967]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[8239-8300]:IfStatement[5224-5281]"
    }, {
      "left" : "showResult(unsorted, result);",
      "right" : "showResult(unsorted, result);",
      "info" : "ExpressionStatement[8271-8300]:ExpressionStatement[5252-5281]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[8282-8290]:SimpleName[4240-4248]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[8317-8331]:SimpleName[3370-3384]"
    }, {
      "left" : "shellResults",
      "right" : "shellResults",
      "info" : "SimpleName[8349-8361]:SimpleName[3335-3347]"
    }, {
      "left" : "shellResults",
      "right" : "results",
      "info" : "SimpleName[8349-8361]:SimpleName[5290-5297]"
    }, {
      "left" : "shellResults[shellCount++] = diff;",
      "right" : "results[count++] = diff;",
      "info" : "ExpressionStatement[8349-8383]:ExpressionStatement[5290-5314]"
    }, {
      "left" : "shellCount",
      "right" : "shellCount",
      "info" : "SimpleName[8362-8372]:SimpleName[3349-3359]"
    }, {
      "left" : "shellCount",
      "right" : "count",
      "info" : "SimpleName[8362-8372]:SimpleName[5298-5303]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[8396-8415]:ExpressionStatement[5323-5342]"
    }, {
      "left" : "bShell",
      "right" : "bInsertion",
      "info" : "SimpleName[8429-8435]:SimpleName[5352-5362]"
    }, {
      "left" : "bShell = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[8429-8456]:ExpressionStatement[5352-5383]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[8488-8492]:SimpleName[7830-7834]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[8501-8507]:SimpleName[3587-3593]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[8530-8622]:IfStatement[5445-5543]"
    }, {
      "left" : "checkResults && !check(result)",
      "right" : "testable.getName()+\" failed.\"",
      "info" : "InfixExpression[8534-8564]:InfixExpression[5512-5541]"
    }, {
      "left" : "&&",
      "right" : "+",
      "info" : "INFIX_EXPRESSION_OPERATOR[8547-8549]:INFIX_EXPRESSION_OPERATOR[5530-5531]"
    }, {
      "left" : "check",
      "right" : "testable",
      "info" : "SimpleName[8551-8556]:SimpleName[5512-5520]"
    }, {
      "left" : "check(result)",
      "right" : "testable.getName()",
      "info" : "MethodInvocation[8551-8564]:MethodInvocation[5512-5530]"
    }, {
      "left" : "result",
      "right" : "getName",
      "info" : "SimpleName[8557-8563]:SimpleName[5521-5528]"
    }, {
      "left" : "System.err.println(\"ShellSort failed.\");",
      "right" : "System.err.println(testable.getName()+\" failed.\");",
      "info" : "ExpressionStatement[8582-8622]:ExpressionStatement[5493-5543]"
    }, {
      "left" : "aShell",
      "right" : "aInsertion",
      "info" : "SimpleName[8635-8641]:SimpleName[5552-5562]"
    }, {
      "left" : "aShell = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[8635-8662]:ExpressionStatement[5552-5583]"
    }, {
      "left" : "diff = (aShell - bShell) / 1000000d / 1000d;",
      "right" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "info" : "ExpressionStatement[8675-8719]:ExpressionStatement[5592-5644]"
    }, {
      "left" : "aShell",
      "right" : "aInsertion",
      "info" : "SimpleName[8683-8689]:SimpleName[5600-5610]"
    }, {
      "left" : "bShell",
      "right" : "bInsertion",
      "info" : "SimpleName[8692-8698]:SimpleName[5613-5623]"
    }, {
      "left" : "System.out.println(\"Sorted: ShellSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[8732-8805]:ExpressionStatement[5653-5739]"
    }, {
      "left" : "\"Sorted: ShellSort=\"",
      "right" : "\"Sorted: \"",
      "info" : "StringLiteral[8751-8771]:StringLiteral[5672-5682]"
    }, {
      "left" : "FORMAT",
      "right" : "testable",
      "info" : "SimpleName[8774-8780]:SimpleName[5683-5691]"
    }, {
      "left" : "format",
      "right" : "getName",
      "info" : "SimpleName[8781-8787]:SimpleName[5692-5699]"
    }, {
      "left" : "\" secs\"",
      "right" : "\"=\"",
      "info" : "StringLiteral[8796-8803]:StringLiteral[5702-5705]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[8818-8877]:IfStatement[5748-5803]"
    }, {
      "left" : "showResult(sorted, result);",
      "right" : "showResult(sorted, result);",
      "info" : "ExpressionStatement[8850-8877]:ExpressionStatement[5776-5803]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[8861-8867]:SimpleName[4250-4256]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[8894-8908]:SimpleName[3214-3228]"
    }, {
      "left" : "shellResults",
      "right" : "shellResults",
      "info" : "SimpleName[8926-8938]:SimpleName[3241-3253]"
    }, {
      "left" : "shellResults",
      "right" : "results",
      "info" : "SimpleName[8926-8938]:SimpleName[5812-5819]"
    }, {
      "left" : "shellResults[shellCount++] = diff;",
      "right" : "results[count++] = diff;",
      "info" : "ExpressionStatement[8926-8960]:ExpressionStatement[5812-5836]"
    }, {
      "left" : "shellCount",
      "right" : "shellCount",
      "info" : "SimpleName[8939-8949]:SimpleName[3283-3293]"
    }, {
      "left" : "shellCount",
      "right" : "count",
      "info" : "SimpleName[8939-8949]:SimpleName[5820-5825]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[8973-8992]:ExpressionStatement[5845-5864]"
    }, {
      "left" : "bShell",
      "right" : "bInsertion",
      "info" : "SimpleName[9006-9012]:SimpleName[5874-5884]"
    }, {
      "left" : "bShell = System.nanoTime();",
      "right" : "bInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[9006-9033]:ExpressionStatement[5874-5905]"
    }, {
      "left" : "ShellSort",
      "right" : "ShellSort",
      "info" : "METHOD_INVOCATION_RECEIVER[9055-9064]:METHOD_INVOCATION_RECEIVER[10286-10295]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[9065-9069]:SimpleName[8400-8404]"
    }, {
      "left" : "shells",
      "right" : "shells",
      "info" : "SimpleName[9070-9076]:SimpleName[10301-10307]"
    }, {
      "left" : "if (checkResults && !check(result))",
      "right" : "if (checkResults && !check(result))",
      "info" : "IfStatement[9108-9200]:IfStatement[5968-6072]"
    }, {
      "left" : "checkResults && !check(result)",
      "right" : "testable.getName()+\"InsertionSort.\"",
      "info" : "InfixExpression[9112-9142]:InfixExpression[6035-6070]"
    }, {
      "left" : "&&",
      "right" : "+",
      "info" : "INFIX_EXPRESSION_OPERATOR[9125-9127]:INFIX_EXPRESSION_OPERATOR[6053-6054]"
    }, {
      "left" : "check",
      "right" : "testable",
      "info" : "SimpleName[9129-9134]:SimpleName[6035-6043]"
    }, {
      "left" : "check(result)",
      "right" : "testable.getName()",
      "info" : "MethodInvocation[9129-9142]:MethodInvocation[6035-6053]"
    }, {
      "left" : "result",
      "right" : "getName",
      "info" : "SimpleName[9135-9141]:SimpleName[6044-6051]"
    }, {
      "left" : "System.err.println(\"ShellSort failed.\");",
      "right" : "System.err.println(testable.getName()+\"InsertionSort.\");",
      "info" : "ExpressionStatement[9160-9200]:ExpressionStatement[6016-6072]"
    }, {
      "left" : "aShell",
      "right" : "aInsertion",
      "info" : "SimpleName[9213-9219]:SimpleName[6081-6091]"
    }, {
      "left" : "aShell = System.nanoTime();",
      "right" : "aInsertion = System.nanoTime();",
      "info" : "ExpressionStatement[9213-9240]:ExpressionStatement[6081-6112]"
    }, {
      "left" : "diff = (aShell - bShell) / 1000000d / 1000d;",
      "right" : "diff = (aInsertion - bInsertion) / 1000000d / 1000d;",
      "info" : "ExpressionStatement[9253-9297]:ExpressionStatement[6121-6173]"
    }, {
      "left" : "aShell",
      "right" : "aInsertion",
      "info" : "SimpleName[9261-9267]:SimpleName[6129-6139]"
    }, {
      "left" : "bShell",
      "right" : "bInsertion",
      "info" : "SimpleName[9270-9276]:SimpleName[6142-6152]"
    }, {
      "left" : "bShell",
      "right" : "Shell",
      "info" : "SimpleName[9270-9276]:SimpleName[10027-10032]"
    }, {
      "left" : "System.out.println(\"Reverse sorted: ShellSort=\" + FORMAT.format(diff) + \" secs\");",
      "right" : "System.out.println(\"Reverse sorted: \"+testable.getName()+\"=\" + FORMAT.format(diff) + \" secs\");",
      "info" : "ExpressionStatement[9310-9391]:ExpressionStatement[6182-6276]"
    }, {
      "left" : "\"Reverse sorted: ShellSort=\"",
      "right" : "\"Reverse sorted: \"",
      "info" : "StringLiteral[9329-9357]:StringLiteral[6201-6219]"
    }, {
      "left" : "FORMAT",
      "right" : "testable",
      "info" : "SimpleName[9360-9366]:SimpleName[6220-6228]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[9367-9373]:SimpleName[11497-11503]"
    }, {
      "left" : "diff",
      "right" : "getName",
      "info" : "SimpleName[9374-9378]:SimpleName[6229-6236]"
    }, {
      "left" : "\" secs\"",
      "right" : "\"=\"",
      "info" : "StringLiteral[9382-9389]:StringLiteral[6239-6242]"
    }, {
      "left" : "if (showResult)",
      "right" : "if (showResult)",
      "info" : "IfStatement[9404-9464]:IfStatement[6285-6341]"
    }, {
      "left" : "showResult(reverse, result);",
      "right" : "showResult(reverse, result);",
      "info" : "ExpressionStatement[9436-9464]:ExpressionStatement[6313-6341]"
    }, {
      "left" : "showComparison",
      "right" : "results",
      "info" : "SimpleName[9481-9495]:SimpleName[6350-6357]"
    }, {
      "left" : "shellResults",
      "right" : "results",
      "info" : "SimpleName[9513-9525]:SimpleName[6350-6357]"
    }, {
      "left" : "shellResults[shellCount++] = diff;",
      "right" : "results[count++] = diff;",
      "info" : "ExpressionStatement[9513-9547]:ExpressionStatement[6350-6374]"
    }, {
      "left" : "shellResults",
      "right" : "shellResults",
      "info" : "SimpleName[9513-9525]:SimpleName[11209-11221]"
    }, {
      "left" : "shellCount",
      "right" : "count",
      "info" : "SimpleName[9526-9536]:SimpleName[6358-6363]"
    }, {
      "left" : "putOutTheGarbage();",
      "right" : "putOutTheGarbage();",
      "info" : "ExpressionStatement[9560-9579]:ExpressionStatement[6383-6402]"
    }, {
      "left" : "System.out.println();",
      "right" : "System.out.println();",
      "info" : "ExpressionStatement[9593-9614]:ExpressionStatement[6412-6433]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[9627-9646]:ExpressionStatement[6442-6461]"
    }, {
      "left" : "showMergeNotInPlace",
      "right" : "Testable",
      "info" : "SimpleName[9670-9689]:SimpleName[6525-6533]"
    }, {
      "left" : "bMerge",
      "right" : "String",
      "info" : "SimpleName[9736-9742]:SimpleName[6544-6550]"
    }, {
      "left" : "System",
      "right" : "input",
      "info" : "SimpleName[9745-9751]:SimpleName[6551-6556]"
    }, {
      "left" : "nanoTime",
      "right" : "String",
      "info" : "SimpleName[9752-9760]:SimpleName[6580-6586]"
    }, {
      "left" : "Integer",
      "right" : "String",
      "info" : "SimpleType[9776-9783]:SimpleType[6580-6586]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[9776-9783]:SimpleType[9307-9314]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[9783-9785]:Dimension[9314-9316]"
    }, {
      "left" : "result",
      "right" : "getInput",
      "info" : "SimpleName[9786-9792]:SimpleName[6587-6595]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[9795-9804]:METHOD_INVOCATION_RECEIVER[8710-8719]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[9805-9809]:SimpleName[9355-9359]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[9845-9853]:SimpleName[3483-3491]"
    }, {
      "left" : "clone",
      "right" : "input",
      "info" : "SimpleName[9854-9859]:SimpleName[6619-6624]"
    }, {
      "left" : "checkResults",
      "right" : "String",
      "info" : "SimpleName[9880-9892]:SimpleName[6660-6666]"
    }, {
      "left" : "check",
      "right" : "getName",
      "info" : "SimpleName[9897-9902]:SimpleName[6667-6674]"
    }, {
      "left" : "result",
      "right" : "Integer",
      "info" : "SimpleName[9903-9909]:SimpleName[6702-6709]"
    }, {
      "left" : "println",
      "right" : "Integer",
      "info" : "SimpleName[9939-9946]:SimpleName[6717-6724]"
    }, {
      "left" : "aMerge",
      "right" : "input",
      "info" : "SimpleName[9986-9992]:SimpleName[6727-6732]"
    }, {
      "left" : "System",
      "right" : "AmericanFlag",
      "info" : "SimpleName[9995-10001]:SimpleName[6767-6779]"
    }, {
      "left" : "nanoTime",
      "right" : "Testable",
      "info" : "SimpleName[10002-10010]:SimpleName[6788-6796]"
    }, {
      "left" : "diff",
      "right" : "Override",
      "info" : "SimpleName[10033-10037]:SimpleName[6808-6816]"
    }, {
      "left" : "aMerge",
      "right" : "String",
      "info" : "SimpleName[10041-10047]:SimpleName[6832-6838]"
    }, {
      "left" : "bMerge",
      "right" : "getName",
      "info" : "SimpleName[10050-10056]:SimpleName[6839-6846]"
    }, {
      "left" : "FORMAT",
      "right" : "Override",
      "info" : "SimpleName[10132-10138]:SimpleName[6911-6919]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[10139-10145]:SimpleName[11612-11618]"
    }, {
      "left" : "diff",
      "right" : "Integer",
      "info" : "SimpleName[10146-10150]:SimpleName[6935-6942]"
    }, {
      "left" : "showResult",
      "right" : "Integer",
      "info" : "SimpleName[10180-10190]:SimpleName[6950-6957]"
    }, {
      "left" : "showResult",
      "right" : "input",
      "info" : "SimpleName[10208-10218]:SimpleName[6960-6965]"
    }, {
      "left" : "showResult(unsorted, result)",
      "right" : "AmericanFlagSort.sort(input)",
      "info" : "MethodInvocation[10208-10236]:MethodInvocation[6988-7016]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[10219-10227]:SimpleName[4077-4085]"
    }, {
      "left" : "result",
      "right" : "input",
      "info" : "SimpleName[10229-10235]:SimpleName[7010-7015]"
    }, {
      "left" : "showComparison",
      "right" : "Override",
      "info" : "SimpleName[10254-10268]:SimpleName[7095-7103]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "String",
      "info" : "SimpleName[10286-10308]:SimpleName[7119-7125]"
    }, {
      "left" : "mergeNotInPlaceCount",
      "right" : "getName",
      "info" : "SimpleName[10309-10329]:SimpleName[7126-7133]"
    }, {
      "left" : "diff",
      "right" : "Override",
      "info" : "SimpleName[10335-10339]:SimpleName[7192-7200]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "Integer",
      "info" : "SimpleName[10353-10369]:SimpleName[7216-7223]"
    }, {
      "left" : "bMerge",
      "right" : "Integer",
      "info" : "SimpleName[10386-10392]:SimpleName[7231-7238]"
    }, {
      "left" : "System",
      "right" : "input",
      "info" : "SimpleName[10395-10401]:SimpleName[7241-7246]"
    }, {
      "left" : "System.nanoTime()",
      "right" : "BubbleSort.sort(input)",
      "info" : "MethodInvocation[10395-10412]:MethodInvocation[7269-7291]"
    }, {
      "left" : "nanoTime",
      "right" : "input",
      "info" : "SimpleName[10402-10410]:SimpleName[7285-7290]"
    }, {
      "left" : "result",
      "right" : "Testable",
      "info" : "SimpleName[10426-10432]:SimpleName[7352-7360]"
    }, {
      "left" : "MergeSort",
      "right" : "MergeSort",
      "info" : "METHOD_INVOCATION_RECEIVER[10435-10444]:METHOD_INVOCATION_RECEIVER[8390-8399]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[10445-10449]:SimpleName[9972-9976]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[10485-10491]:SimpleName[3493-3499]"
    }, {
      "left" : "clone",
      "right" : "Override",
      "info" : "SimpleName[10492-10497]:SimpleName[7372-7380]"
    }, {
      "left" : "checkResults",
      "right" : "String",
      "info" : "SimpleName[10518-10530]:SimpleName[7396-7402]"
    }, {
      "left" : "println",
      "right" : "getName",
      "info" : "SimpleName[10577-10584]:SimpleName[7403-7410]"
    }, {
      "left" : "\"MergeSort failed.\"",
      "right" : "\"Counting sort\"",
      "info" : "StringLiteral[10585-10604]:StringLiteral[7434-7449]"
    }, {
      "left" : "aMerge",
      "right" : "Integer",
      "info" : "SimpleName[10619-10625]:SimpleName[7510-7517]"
    }, {
      "left" : "System",
      "right" : "input",
      "info" : "SimpleName[10628-10634]:SimpleName[7520-7525]"
    }, {
      "left" : "System.nanoTime()",
      "right" : "CountingSort.sort(input)",
      "info" : "MethodInvocation[10628-10645]:MethodInvocation[7548-7572]"
    }, {
      "left" : "nanoTime",
      "right" : "input",
      "info" : "SimpleName[10635-10643]:SimpleName[7566-7571]"
    }, {
      "left" : "diff",
      "right" : "Testable",
      "info" : "SimpleName[10659-10663]:SimpleName[7629-7637]"
    }, {
      "left" : "aMerge",
      "right" : "Override",
      "info" : "SimpleName[10667-10673]:SimpleName[7649-7657]"
    }, {
      "left" : "bMerge",
      "right" : "String",
      "info" : "SimpleName[10676-10682]:SimpleName[7673-7679]"
    }, {
      "left" : "println",
      "right" : "getName",
      "info" : "SimpleName[10727-10734]:SimpleName[7680-7687]"
    }, {
      "left" : "\"Sorted: MergeSort=\"",
      "right" : "\"Heap sort\"",
      "info" : "StringLiteral[10735-10755]:StringLiteral[7711-7722]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[10758-10764]:METHOD_INVOCATION_RECEIVER[11537-11543]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[10765-10771]:SimpleName[11578-11584]"
    }, {
      "left" : "diff",
      "right" : "Override",
      "info" : "SimpleName[10772-10776]:SimpleName[7744-7752]"
    }, {
      "left" : "showResult",
      "right" : "Integer",
      "info" : "SimpleName[10806-10816]:SimpleName[7768-7775]"
    }, {
      "left" : "showResult",
      "right" : "Integer",
      "info" : "SimpleName[10834-10844]:SimpleName[7783-7790]"
    }, {
      "left" : "showResult(sorted, result)",
      "right" : "HeapSort.sort(input)",
      "info" : "MethodInvocation[10834-10860]:MethodInvocation[7821-7841]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[10845-10851]:SimpleName[4087-4093]"
    }, {
      "left" : "result",
      "right" : "input",
      "info" : "SimpleName[10853-10859]:SimpleName[7835-7840]"
    }, {
      "left" : "showComparison",
      "right" : "showComparison",
      "info" : "SimpleName[10878-10892]:SimpleName[10364-10378]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "Insertion",
      "info" : "SimpleName[10910-10932]:SimpleName[7885-7894]"
    }, {
      "left" : "mergeNotInPlaceCount",
      "right" : "Testable",
      "info" : "SimpleName[10933-10953]:SimpleName[7903-7911]"
    }, {
      "left" : "diff",
      "right" : "Override",
      "info" : "SimpleName[10959-10963]:SimpleName[7923-7931]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "String",
      "info" : "SimpleName[10977-10993]:SimpleName[7947-7953]"
    }, {
      "left" : "bMerge",
      "right" : "getName",
      "info" : "SimpleName[11010-11016]:SimpleName[7954-7961]"
    }, {
      "left" : "System",
      "right" : "Override",
      "info" : "SimpleName[11019-11025]:SimpleName[8023-8031]"
    }, {
      "left" : "nanoTime",
      "right" : "Integer",
      "info" : "SimpleName[11026-11034]:SimpleName[8047-8054]"
    }, {
      "left" : "result",
      "right" : "Integer",
      "info" : "SimpleName[11050-11056]:SimpleName[8062-8069]"
    }, {
      "left" : "MergeSort",
      "right" : "input",
      "info" : "SimpleName[11059-11068]:SimpleName[8072-8077]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[11069-11073]:SimpleName[10296-10300]"
    }, {
      "left" : "MergeSort.SPACE_TYPE.NOT_IN_PLACE",
      "right" : "MergeSort.SPACE_TYPE.NOT_IN_PLACE",
      "info" : "QualifiedName[11074-11107]:QualifiedName[8725-8758]"
    }, {
      "left" : "check(result)",
      "right" : "InsertionSort.sort(input)",
      "info" : "MethodInvocation[11160-11173]:MethodInvocation[8100-8125]"
    }, {
      "left" : "result",
      "right" : "input",
      "info" : "SimpleName[11166-11172]:SimpleName[8119-8124]"
    }, {
      "left" : "println",
      "right" : "Testable",
      "info" : "SimpleName[11202-11209]:SimpleName[8190-8198]"
    }, {
      "left" : "aMerge",
      "right" : "Override",
      "info" : "SimpleName[11244-11250]:SimpleName[8210-8218]"
    }, {
      "left" : "System",
      "right" : "String",
      "info" : "SimpleName[11253-11259]:SimpleName[8234-8240]"
    }, {
      "left" : "nanoTime",
      "right" : "getName",
      "info" : "SimpleName[11260-11268]:SimpleName[8241-8248]"
    }, {
      "left" : "diff",
      "right" : "Override",
      "info" : "SimpleName[11284-11288]:SimpleName[8313-8321]"
    }, {
      "left" : "aMerge",
      "right" : "Integer",
      "info" : "SimpleName[11292-11298]:SimpleName[8337-8344]"
    }, {
      "left" : "bMerge",
      "right" : "Integer",
      "info" : "SimpleName[11301-11307]:SimpleName[8352-8359]"
    }, {
      "left" : "println",
      "right" : "input",
      "info" : "SimpleName[11352-11359]:SimpleName[8362-8367]"
    }, {
      "left" : "FORMAT.format(diff)",
      "right" : "MergeSort.sort(MergeSort.SPACE_TYPE.IN_PLACE, input)",
      "info" : "MethodInvocation[11391-11410]:MethodInvocation[8390-8442]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[11391-11397]:METHOD_INVOCATION_RECEIVER[11605-11611]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11398-11404]:SimpleName[11544-11550]"
    }, {
      "left" : "diff",
      "right" : "input",
      "info" : "SimpleName[11405-11409]:SimpleName[8436-8441]"
    }, {
      "left" : "showResult",
      "right" : "Testable",
      "info" : "SimpleName[11439-11449]:SimpleName[8510-8518]"
    }, {
      "left" : "showResult",
      "right" : "Override",
      "info" : "SimpleName[11467-11477]:SimpleName[8530-8538]"
    }, {
      "left" : "reverse",
      "right" : "String",
      "info" : "SimpleName[11478-11485]:SimpleName[8554-8560]"
    }, {
      "left" : "result",
      "right" : "getName",
      "info" : "SimpleName[11487-11493]:SimpleName[8561-8568]"
    }, {
      "left" : "showComparison",
      "right" : "Override",
      "info" : "SimpleName[11512-11526]:SimpleName[8633-8641]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "Integer",
      "info" : "SimpleName[11544-11566]:SimpleName[8657-8664]"
    }, {
      "left" : "mergeNotInPlaceCount",
      "right" : "Integer",
      "info" : "SimpleName[11567-11587]:SimpleName[8672-8679]"
    }, {
      "left" : "diff",
      "right" : "input",
      "info" : "SimpleName[11593-11597]:SimpleName[8682-8687]"
    }, {
      "left" : "putOutTheGarbage()",
      "right" : "MergeSort.sort(MergeSort.SPACE_TYPE.NOT_IN_PLACE, input)",
      "info" : "MethodInvocation[11611-11629]:MethodInvocation[8710-8766]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "input",
      "info" : "SimpleName[11611-11627]:SimpleName[8760-8765]"
    }, {
      "left" : "showMergeInPlace",
      "right" : "QuickFirst",
      "info" : "SimpleName[11721-11737]:SimpleName[8810-8820]"
    }, {
      "left" : "bMerge",
      "right" : "Testable",
      "info" : "SimpleName[11784-11790]:SimpleName[8829-8837]"
    }, {
      "left" : "System",
      "right" : "Override",
      "info" : "SimpleName[11793-11799]:SimpleName[8849-8857]"
    }, {
      "left" : "nanoTime",
      "right" : "String",
      "info" : "SimpleName[11800-11808]:SimpleName[8873-8879]"
    }, {
      "left" : "Integer",
      "right" : "String",
      "info" : "SimpleType[11824-11831]:SimpleType[8873-8879]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[11824-11831]:SimpleType[10248-10255]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[11831-11833]:Dimension[10255-10257]"
    }, {
      "left" : "result",
      "right" : "getName",
      "info" : "SimpleName[11834-11840]:SimpleName[8880-8887]"
    }, {
      "left" : "MergeSort",
      "right" : "Override",
      "info" : "SimpleName[11843-11852]:SimpleName[8953-8961]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[11853-11857]:SimpleName[9671-9675]"
    }, {
      "left" : "MergeSort.SPACE_TYPE.IN_PLACE",
      "right" : "MergeSort.SPACE_TYPE.IN_PLACE",
      "info" : "QualifiedName[11858-11887]:QualifiedName[8405-8434]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[11889-11897]:SimpleName[3317-3325]"
    }, {
      "left" : "clone",
      "right" : "Integer",
      "info" : "SimpleName[11898-11903]:SimpleName[8977-8984]"
    }, {
      "left" : "checkResults",
      "right" : "Integer",
      "info" : "SimpleName[11924-11936]:SimpleName[8992-8999]"
    }, {
      "left" : "check",
      "right" : "input",
      "info" : "SimpleName[11941-11946]:SimpleName[9002-9007]"
    }, {
      "left" : "check(result)",
      "right" : "QuickSort.sort(QuickSort.PIVOT_TYPE.FIRST, input)",
      "info" : "MethodInvocation[11941-11954]:MethodInvocation[9030-9079]"
    }, {
      "left" : "result",
      "right" : "input",
      "info" : "SimpleName[11947-11953]:SimpleName[9073-9078]"
    }, {
      "left" : "println",
      "right" : "QuickMiddle",
      "info" : "SimpleName[11983-11990]:SimpleName[9123-9134]"
    }, {
      "left" : "aMerge",
      "right" : "Testable",
      "info" : "SimpleName[12030-12036]:SimpleName[9143-9151]"
    }, {
      "left" : "System",
      "right" : "Override",
      "info" : "SimpleName[12039-12045]:SimpleName[9163-9171]"
    }, {
      "left" : "nanoTime",
      "right" : "String",
      "info" : "SimpleName[12046-12054]:SimpleName[9187-9193]"
    }, {
      "left" : "diff",
      "right" : "getName",
      "info" : "SimpleName[12077-12081]:SimpleName[9194-9201]"
    }, {
      "left" : "aMerge",
      "right" : "Override",
      "info" : "SimpleName[12085-12091]:SimpleName[9268-9276]"
    }, {
      "left" : "bMerge",
      "right" : "Integer",
      "info" : "SimpleName[12094-12100]:SimpleName[9292-9299]"
    }, {
      "left" : "println",
      "right" : "input",
      "info" : "SimpleName[12145-12152]:SimpleName[9317-9322]"
    }, {
      "left" : "FORMAT.format(diff)",
      "right" : "QuickSort.sort(QuickSort.PIVOT_TYPE.MIDDLE, input)",
      "info" : "MethodInvocation[12176-12195]:MethodInvocation[9345-9395]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[12176-12182]:METHOD_INVOCATION_RECEIVER[11571-11577]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[12183-12189]:SimpleName[11504-11510]"
    }, {
      "left" : "diff",
      "right" : "input",
      "info" : "SimpleName[12190-12194]:SimpleName[9389-9394]"
    }, {
      "left" : "showResult",
      "right" : "QuickRandom",
      "info" : "SimpleName[12224-12234]:SimpleName[9439-9450]"
    }, {
      "left" : "showResult",
      "right" : "Testable",
      "info" : "SimpleName[12252-12262]:SimpleName[9459-9467]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[12263-12271]:SimpleName[3924-3932]"
    }, {
      "left" : "result",
      "right" : "Override",
      "info" : "SimpleName[12273-12279]:SimpleName[9479-9487]"
    }, {
      "left" : "showComparison",
      "right" : "String",
      "info" : "SimpleName[12298-12312]:SimpleName[9503-9509]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "getName",
      "info" : "SimpleName[12330-12349]:SimpleName[9510-9517]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[12483-12487]:SimpleName[9040-9044]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[12519-12525]:SimpleName[3327-3333]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[12792-12798]:METHOD_INVOCATION_RECEIVER[11774-11780]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[12799-12805]:SimpleName[11781-11787]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[12879-12885]:SimpleName[3934-3940]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[13097-13101]:SimpleName[8720-8724]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[13415-13421]:METHOD_INVOCATION_RECEIVER[11740-11746]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[13422-13428]:SimpleName[11747-11753]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[13834-13841]:SimpleType[9924-9931]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[13841-13843]:Dimension[9931-9933]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[13853-13862]:METHOD_INVOCATION_RECEIVER[9661-9670]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[13863-13867]:SimpleName[8114-8118]"
    }, {
      "left" : "QuickSort.PIVOT_TYPE.FIRST",
      "right" : "QuickSort.PIVOT_TYPE.FIRST",
      "info" : "QualifiedName[13868-13894]:QualifiedName[9045-9071]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[13896-13904]:SimpleName[3159-3167]"
    }, {
      "left" : "FORMAT",
      "right" : "FORMAT",
      "info" : "METHOD_INVOCATION_RECEIVER[14203-14209]:METHOD_INVOCATION_RECEIVER[11706-11712]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[14210-14216]:SimpleName[11713-11719]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[14290-14298]:SimpleName[3831-3839]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[14357-14369]:SimpleName[3942-3954]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[14370-14380]:SimpleName[3956-3966]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[14486-14495]:METHOD_INVOCATION_RECEIVER[9345-9354]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[14496-14500]:SimpleName[7561-7565]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[14529-14535]:SimpleName[3169-3175]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[14829-14835]:SimpleName[11669-11675]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[14909-14915]:SimpleName[3841-3847]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[14974-14986]:SimpleName[3849-3861]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[14987-14997]:SimpleName[3863-3873]"
    }, {
      "left" : "QuickSort",
      "right" : "QuickSort",
      "info" : "METHOD_INVOCATION_RECEIVER[15103-15112]:METHOD_INVOCATION_RECEIVER[9030-9039]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[15113-15117]:SimpleName[10243-10247]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[15455-15461]:SimpleName[11662-11668]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[15601-15613]:SimpleName[3756-3768]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[15614-15624]:SimpleName[3770-3780]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[15807-15811]:SimpleName[9919-9923]"
    }, {
      "left" : "QuickSort.PIVOT_TYPE.MIDDLE",
      "right" : "QuickSort.PIVOT_TYPE.MIDDLE",
      "info" : "QualifiedName[15812-15839]:QualifiedName[9360-9387]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[15841-15849]:SimpleName[2992-3000]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[16224-16232]:SimpleName[3738-3746]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[16291-16303]:SimpleName[11831-11843]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[16304-16314]:SimpleName[3884-3894]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[16430-16434]:SimpleName[9618-9622]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[16464-16470]:SimpleName[3002-3008]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[16845-16851]:SimpleName[3748-3754]"
    }, {
      "left" : "quickResults",
      "right" : "quickResults",
      "info" : "SimpleName[16910-16922]:SimpleName[3657-3669]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[16923-16933]:SimpleName[3791-3801]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[17049-17053]:SimpleName[9302-9306]"
    }, {
      "left" : "quickCount",
      "right" : "quickCount",
      "info" : "SimpleName[17552-17562]:SimpleName[3699-3709]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[17745-17749]:SimpleName[8987-8991]"
    }, {
      "left" : "QuickSort.PIVOT_TYPE.RANDOM",
      "right" : "QuickSort.PIVOT_TYPE.RANDOM",
      "info" : "QualifiedName[17750-17777]:QualifiedName[9676-9703]"
    }, {
      "left" : "unsorted",
      "right" : "unsorted",
      "info" : "SimpleName[17779-17787]:SimpleName[4737-4745]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[18365-18369]:SimpleName[8667-8671]"
    }, {
      "left" : "sorted",
      "right" : "sorted",
      "info" : "SimpleName[18399-18405]:SimpleName[4757-4763]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[18981-18985]:SimpleName[8347-8351]"
    }, {
      "left" : "showHeap",
      "right" : "Override",
      "info" : "SimpleName[19625-19633]:SimpleName[9584-9592]"
    }, {
      "left" : "Integer[]",
      "right" : "Integer[]",
      "info" : "ArrayType[19717-19726]:ArrayType[9623-9632]"
    }, {
      "left" : "result",
      "right" : "input",
      "info" : "SimpleName[19727-19733]:SimpleName[9633-9638]"
    }, {
      "left" : "HeapSort",
      "right" : "HeapSort",
      "info" : "METHOD_INVOCATION_RECEIVER[19736-19744]:METHOD_INVOCATION_RECEIVER[7821-7829]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[19745-19749]:SimpleName[8057-8061]"
    }, {
      "left" : "unsorted",
      "right" : "input",
      "info" : "SimpleName[19750-19758]:SimpleName[9705-9710]"
    }, {
      "left" : "checkResults",
      "right" : "Testable",
      "info" : "SimpleName[19785-19797]:SimpleName[9769-9777]"
    }, {
      "left" : "check",
      "right" : "Override",
      "info" : "SimpleName[19802-19807]:SimpleName[9789-9797]"
    }, {
      "left" : "result",
      "right" : "String",
      "info" : "SimpleName[19808-19814]:SimpleName[9813-9819]"
    }, {
      "left" : "println",
      "right" : "getName",
      "info" : "SimpleName[19844-19851]:SimpleName[9820-9827]"
    }, {
      "left" : "\"HeapSort failed.\"",
      "right" : "\"Radix sort\"",
      "info" : "StringLiteral[19852-19870]:StringLiteral[9851-9863]"
    }, {
      "left" : "aHeap",
      "right" : "Override",
      "info" : "SimpleName[19890-19895]:SimpleName[9885-9893]"
    }, {
      "left" : "System",
      "right" : "input",
      "info" : "SimpleName[19898-19904]:SimpleName[9934-9939]"
    }, {
      "left" : "System.nanoTime()",
      "right" : "RadixSort.sort(input)",
      "info" : "MethodInvocation[19898-19915]:MethodInvocation[9962-9983]"
    }, {
      "left" : "nanoTime",
      "right" : "input",
      "info" : "SimpleName[19905-19913]:SimpleName[9977-9982]"
    }, {
      "left" : "heapResults",
      "right" : "heapResults",
      "info" : "SimpleName[20186-20197]:SimpleName[4095-4106]"
    }, {
      "left" : "heapCount",
      "right" : "heapCount",
      "info" : "SimpleName[20198-20207]:SimpleName[4108-4117]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[20321-20325]:SimpleName[7778-7782]"
    }, {
      "left" : "heapResults",
      "right" : "heapResults",
      "info" : "SimpleName[20746-20757]:SimpleName[12419-12430]"
    }, {
      "left" : "heapCount",
      "right" : "heapCount",
      "info" : "SimpleName[20758-20767]:SimpleName[4045-4054]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[20881-20885]:SimpleName[7505-7509]"
    }, {
      "left" : "heapResults",
      "right" : "heapResults",
      "info" : "SimpleName[21316-21327]:SimpleName[4004-4015]"
    }, {
      "left" : "bCounting",
      "right" : "Counting",
      "info" : "SimpleName[21533-21542]:SimpleName[4228-4236]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[21576-21583]:SimpleType[10233-10240]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[21583-21585]:Dimension[10240-10242]"
    }, {
      "left" : "CountingSort",
      "right" : "CountingSort",
      "info" : "METHOD_INVOCATION_RECEIVER[21595-21607]:METHOD_INVOCATION_RECEIVER[7548-7560]"
    }, {
      "left" : "sort",
      "right" : "sort",
      "info" : "SimpleName[21608-21612]:SimpleName[7226-7230]"
    }, {
      "left" : "aCounting",
      "right" : "Counting",
      "info" : "SimpleName[21757-21766]:SimpleName[7335-7343]"
    }, {
      "left" : "countingResults",
      "right" : "countingResults",
      "info" : "SimpleName[22069-22084]:SimpleName[4258-4273]"
    }, {
      "left" : "countingCount",
      "right" : "countingCount",
      "info" : "SimpleName[22085-22098]:SimpleName[4275-4288]"
    }, {
      "left" : "countingResults",
      "right" : "countingResults",
      "info" : "SimpleName[22665-22680]:SimpleName[12635-12650]"
    }, {
      "left" : "countingCount",
      "right" : "countingCount",
      "info" : "SimpleName[22681-22694]:SimpleName[4200-4213]"
    }, {
      "left" : "countingResults",
      "right" : "countingResults",
      "info" : "SimpleName[23271-23286]:SimpleName[4155-4170]"
    }, {
      "left" : "showRadix",
      "right" : "Testable",
      "info" : "SimpleName[23434-23443]:SimpleName[10041-10049]"
    }, {
      "left" : "bRadix",
      "right" : "Radix",
      "info" : "SimpleName[23490-23496]:SimpleName[4393-4398]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[23530-23537]:SimpleType[9909-9916]"
    }, {
      "left" : "Integer",
      "right" : "Testable",
      "info" : "SimpleType[23530-23537]:SimpleType[10041-10049]"
    }, {
      "left" : "Integer[]",
      "right" : "int[]",
      "info" : "ArrayType[23530-23539]:ArrayType[10060-10065]"
    }, {
      "left" : "result",
      "right" : "Override",
      "info" : "SimpleName[23540-23546]:SimpleName[10113-10121]"
    }, {
      "left" : "RadixSort",
      "right" : "RadixSort",
      "info" : "METHOD_INVOCATION_RECEIVER[23549-23558]:METHOD_INVOCATION_RECEIVER[9962-9971]"
    }, {
      "left" : "sort",
      "right" : "String",
      "info" : "SimpleName[23559-23563]:SimpleName[10137-10143]"
    }, {
      "left" : "aRadix",
      "right" : "Radix",
      "info" : "SimpleName[23705-23711]:SimpleName[9755-9760]"
    }, {
      "left" : "radixResults",
      "right" : "radixResults",
      "info" : "SimpleName[24005-24017]:SimpleName[4420-4432]"
    }, {
      "left" : "radixCount",
      "right" : "radixCount",
      "info" : "SimpleName[24018-24028]:SimpleName[4434-4444]"
    }, {
      "left" : "radixResults",
      "right" : "radixResults",
      "info" : "SimpleName[24574-24586]:SimpleName[12871-12883]"
    }, {
      "left" : "radixCount",
      "right" : "radixCount",
      "info" : "SimpleName[24587-24597]:SimpleName[4368-4378]"
    }, {
      "left" : "radixResults",
      "right" : "radixResults",
      "info" : "SimpleName[25153-25165]:SimpleName[4326-4338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25328-27298]:Block[10265-10326]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[25421-25428]:SimpleType[9608-9615]"
    }, {
      "left" : "[]",
      "right" : "[]",
      "info" : "Dimension[25428-25430]:Dimension[9916-9918]"
    }, {
      "left" : "AmericanFlagSort",
      "right" : "AmericanFlagSort",
      "info" : "METHOD_INVOCATION_RECEIVER[25440-25456]:METHOD_INVOCATION_RECEIVER[6988-7004]"
    }, {
      "left" : "println",
      "right" : "getName",
      "info" : "SimpleName[25556-25563]:SimpleName[10144-10151]"
    }, {
      "left" : "\"AmericanFlag sort failed.\"",
      "right" : "\"Shell sort\"",
      "info" : "StringLiteral[25564-25591]:StringLiteral[10175-10187]"
    }, {
      "left" : "aRadix",
      "right" : "Override",
      "info" : "SimpleName[25611-25617]:SimpleName[10209-10217]"
    }, {
      "left" : "System",
      "right" : "input",
      "info" : "SimpleName[25620-25626]:SimpleName[10258-10263]"
    }, {
      "left" : "nanoTime",
      "right" : "input",
      "info" : "SimpleName[25627-25635]:SimpleName[10309-10314]"
    }, {
      "left" : "americanFlagResults",
      "right" : "americanFlagResults",
      "info" : "SimpleName[25919-25938]:SimpleName[4597-4616]"
    }, {
      "left" : "americanFlagCount",
      "right" : "americanFlagCount",
      "info" : "SimpleName[25939-25956]:SimpleName[4618-4635]"
    }, {
      "left" : "americanFlagResults",
      "right" : "americanFlagResults",
      "info" : "SimpleName[26525-26544]:SimpleName[13092-13111]"
    }, {
      "left" : "americanFlagCount",
      "right" : "americanFlagCount",
      "info" : "SimpleName[26545-26562]:SimpleName[4531-4548]"
    }, {
      "left" : "System.nanoTime()",
      "right" : "ShellSort.sort(shells, input)",
      "info" : "MethodInvocation[26842-26859]:MethodInvocation[10286-10315]"
    }, {
      "left" : "americanFlagResults",
      "right" : "americanFlagResults",
      "info" : "SimpleName[27141-27160]:SimpleName[4482-4501]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[27369-27376]:Modifier[10338-10345]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[27377-27383]:Modifier[10346-10352]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27390-27394]:PrimitiveType[10359-10363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27412-30418]:Block[10381-13424]"
    }, {
      "left" : "StringBuilder resultsBuilder = new StringBuilder();",
      "right" : "StringBuilder resultsBuilder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[27422-27473]:VariableDeclarationStatement[10391-10442]"
    }, {
      "left" : "String format = \"%-32s%-15s%-15s%-15s\\n\";",
      "right" : "String format = \"%-32s%-15s%-15s%-15s\\n\";",
      "info" : "VariableDeclarationStatement[27482-27523]:VariableDeclarationStatement[10533-10574]"
    }, {
      "left" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "right" : "Formatter formatter = new Formatter(resultsBuilder, Locale.US);",
      "info" : "VariableDeclarationStatement[27532-27595]:VariableDeclarationStatement[10583-10646]"
    }, {
      "left" : "formatter.format(format, \"Algorithm\",\"Random\",\"Sorted\",\"Reverse Sorted\");",
      "right" : "formatter.format(format, \"Algorithm\",\"Random\",\"Sorted\",\"Reverse Sorted\");",
      "info" : "ExpressionStatement[27605-27678]:ExpressionStatement[10656-10729]"
    }, {
      "left" : "if (showInsertion)",
      "right" : "if (insertionResults!=null)",
      "info" : "IfStatement[27687-27910]:IfStatement[10738-10970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27706-27910]:Block[10766-10970]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[27720-27730]:VariableDeclarationStatement[10780-10790]"
    }, {
      "left" : "formatter.format(format, \"Insertion sort\", FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]));",
      "right" : "formatter.format(format, \"Insertion sort\", FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]), FORMAT.format(insertionResults[i++]));",
      "info" : "ExpressionStatement[27743-27900]:ExpressionStatement[10803-10960]"
    }, {
      "left" : "if (showBubble)",
      "right" : "if (bubbleResults!=null)",
      "info" : "IfStatement[27919-28127]:IfStatement[10979-11196]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27935-28127]:Block[11004-11196]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[27949-27959]:VariableDeclarationStatement[11018-11028]"
    }, {
      "left" : "formatter.format(format, \"Bubble sort\", FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]));",
      "right" : "formatter.format(format, \"Bubble sort\", FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]), FORMAT.format(bubbleResults[i++]));",
      "info" : "ExpressionStatement[27972-28117]:ExpressionStatement[11041-11186]"
    }, {
      "left" : "if (showShell)",
      "right" : "if (shellResults!=null)",
      "info" : "IfStatement[28136-28339]:IfStatement[11205-11417]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28151-28339]:Block[11229-11417]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28165-28175]:VariableDeclarationStatement[11243-11253]"
    }, {
      "left" : "formatter.format(format, \"Shell sort\", FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]));",
      "right" : "formatter.format(format, \"Shell sort\", FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]), FORMAT.format(shellResults[i++]));",
      "info" : "ExpressionStatement[28188-28329]:ExpressionStatement[11266-11407]"
    }, {
      "left" : "showMergeInPlace",
      "right" : "mergeResults",
      "info" : "SimpleName[28352-28368]:SimpleName[11430-11442]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28384-28394]:VariableDeclarationStatement[11464-11474]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28388-28389]:SimpleName[11801-11802]"
    }, {
      "left" : "formatter.format(format, \"Merge (in-place) sort\", FORMAT.format(mergeInPlaceResults[i++]), FORMAT.format(mergeInPlaceResults[i++]), FORMAT.format(mergeInPlaceResults[i++]));",
      "right" : "formatter.format(format, \"Merge (in-place) sort\", FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]));",
      "info" : "ExpressionStatement[28407-28580]:ExpressionStatement[11487-11639]"
    }, {
      "left" : "FORMAT",
      "right" : "mergeResults",
      "info" : "SimpleName[28457-28463]:SimpleName[11551-11563]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28471-28490]:SimpleName[11551-11563]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28491-28492]:SimpleName[11767-11768]"
    }, {
      "left" : "FORMAT",
      "right" : "mergeResults",
      "info" : "SimpleName[28498-28504]:SimpleName[11585-11597]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28512-28531]:SimpleName[11585-11597]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28532-28533]:SimpleName[11733-11734]"
    }, {
      "left" : "FORMAT",
      "right" : "mergeResults",
      "info" : "SimpleName[28539-28545]:SimpleName[11619-11631]"
    }, {
      "left" : "mergeInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28553-28572]:SimpleName[11619-11631]"
    }, {
      "left" : "if (showMergeNotInPlace)",
      "right" : "if (mergeResults!=null)",
      "info" : "IfStatement[28599-28857]:IfStatement[11426-11818]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28624-28857]:Block[11450-11818]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[28638-28641]:PrimitiveType[10060-10063]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28642-28643]:SimpleName[11598-11599]"
    }, {
      "left" : "formatter.format(format, \"Merge (not-in-place) sort\", FORMAT.format(mergeNotInPlaceResults[i++]), FORMAT.format(mergeNotInPlaceResults[i++]), FORMAT.format(mergeNotInPlaceResults[i++]));",
      "right" : "formatter.format(format, \"Merge (not-in-place) sort\", FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]), FORMAT.format(mergeResults[i++]));",
      "info" : "ExpressionStatement[28661-28847]:ExpressionStatement[11652-11808]"
    }, {
      "left" : "FORMAT",
      "right" : "mergeResults",
      "info" : "SimpleName[28715-28721]:SimpleName[11720-11732]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28729-28751]:SimpleName[11720-11732]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28752-28753]:SimpleName[11564-11565]"
    }, {
      "left" : "FORMAT",
      "right" : "mergeResults",
      "info" : "SimpleName[28759-28765]:SimpleName[11754-11766]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28773-28795]:SimpleName[11754-11766]"
    }, {
      "left" : "i",
      "right" : "i",
      "info" : "SimpleName[28796-28797]:SimpleName[11468-11469]"
    }, {
      "left" : "FORMAT",
      "right" : "mergeResults",
      "info" : "SimpleName[28803-28809]:SimpleName[11788-11800]"
    }, {
      "left" : "mergeNotInPlaceResults",
      "right" : "mergeResults",
      "info" : "SimpleName[28817-28839]:SimpleName[11788-11800]"
    }, {
      "left" : "if (showQuick)",
      "right" : "if (quickResults!=null)",
      "info" : "IfStatement[28866-29436]:IfStatement[11827-12406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28881-29436]:Block[11851-12406]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[28895-28905]:VariableDeclarationStatement[11865-11875]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with first as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with first as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[28918-29078]:ExpressionStatement[11888-12048]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with middle as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with middle as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[29091-29252]:ExpressionStatement[12061-12222]"
    }, {
      "left" : "formatter.format(format, \"Quicksort with random as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "right" : "formatter.format(format, \"Quicksort with random as pivot\", FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]), FORMAT.format(quickResults[i++]));",
      "info" : "ExpressionStatement[29265-29426]:ExpressionStatement[12235-12396]"
    }, {
      "left" : "if (showHeap)",
      "right" : "if (heapResults!=null)",
      "info" : "IfStatement[29445-29643]:IfStatement[12415-12622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29459-29643]:Block[12438-12622]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29473-29483]:VariableDeclarationStatement[12452-12462]"
    }, {
      "left" : "formatter.format(format, \"Heap sort\", FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]));",
      "right" : "formatter.format(format, \"Heap sort\", FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]), FORMAT.format(heapResults[i++]));",
      "info" : "ExpressionStatement[29496-29633]:ExpressionStatement[12475-12612]"
    }, {
      "left" : "if (showCounting)",
      "right" : "if (countingResults!=null)",
      "info" : "IfStatement[29652-29870]:IfStatement[12631-12858]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29670-29870]:Block[12658-12858]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29684-29694]:VariableDeclarationStatement[12672-12682]"
    }, {
      "left" : "formatter.format(format, \"Counting sort\", FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]));",
      "right" : "formatter.format(format, \"Counting sort\", FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]), FORMAT.format(countingResults[i++]));",
      "info" : "ExpressionStatement[29707-29860]:ExpressionStatement[12695-12848]"
    }, {
      "left" : "if (showRadix)",
      "right" : "if (radixResults!=null)",
      "info" : "IfStatement[29879-30082]:IfStatement[12867-13079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29894-30082]:Block[12891-13079]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[29908-29918]:VariableDeclarationStatement[12905-12915]"
    }, {
      "left" : "formatter.format(format, \"Radix sort\", FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]));",
      "right" : "formatter.format(format, \"Radix sort\", FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]), FORMAT.format(radixResults[i++]));",
      "info" : "ExpressionStatement[29931-30072]:ExpressionStatement[12928-13069]"
    }, {
      "left" : "if (showAmericanFlag)",
      "right" : "if (americanFlagResults!=null)",
      "info" : "IfStatement[30091-30330]:IfStatement[13088-13336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30113-30330]:Block[13119-13336]"
    }, {
      "left" : "int i = 0;",
      "right" : "int i = 0;",
      "info" : "VariableDeclarationStatement[30127-30137]:VariableDeclarationStatement[13133-13143]"
    }, {
      "left" : "formatter.format(format, \"American Flag sort\", FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]));",
      "right" : "formatter.format(format, \"American Flag sort\", FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]), FORMAT.format(americanFlagResults[i++]));",
      "info" : "ExpressionStatement[30150-30320]:ExpressionStatement[13156-13326]"
    }, {
      "left" : "formatter.close();",
      "right" : "formatter.close();",
      "info" : "ExpressionStatement[30339-30357]:ExpressionStatement[13345-13363]"
    }, {
      "left" : "System.out.println(resultsBuilder.toString());",
      "right" : "System.out.println(resultsBuilder.toString());",
      "info" : "ExpressionStatement[30366-30412]:ExpressionStatement[13372-13418]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30424-30431]:Modifier[13430-13437]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30432-30438]:Modifier[13438-13444]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30439-30444]:Modifier[13445-13450]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30445-30449]:PrimitiveType[13451-13455]"
    }, {
      "left" : "showResult",
      "right" : "showResult",
      "info" : "SimpleName[30450-30460]:SimpleName[13456-13466]"
    }, {
      "left" : "Integer[] u",
      "right" : "Integer[] u",
      "info" : "SingleVariableDeclaration[30461-30472]:SingleVariableDeclaration[13467-13478]"
    }, {
      "left" : "Integer[] r",
      "right" : "Integer[] r",
      "info" : "SingleVariableDeclaration[30474-30485]:SingleVariableDeclaration[13480-13491]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30487-30626]:Block[13493-13632]"
    }, {
      "left" : "System.out.println(\"Unsorted: \" + print(u));",
      "right" : "System.out.println(\"Unsorted: \" + print(u));",
      "info" : "ExpressionStatement[30497-30541]:ExpressionStatement[13503-13547]"
    }, {
      "left" : "System.out.println(\"Sorted: \" + print(r));",
      "right" : "System.out.println(\"Sorted: \" + print(r));",
      "info" : "ExpressionStatement[30550-30592]:ExpressionStatement[13556-13598]"
    }, {
      "left" : "System.out.flush();",
      "right" : "System.out.flush();",
      "info" : "ExpressionStatement[30601-30620]:ExpressionStatement[13607-13626]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[30632-30639]:Modifier[13638-13645]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30640-30646]:Modifier[13646-13652]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30647-30652]:Modifier[13653-13658]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[30653-30660]:PrimitiveType[13659-13666]"
    }, {
      "left" : "check",
      "right" : "check",
      "info" : "SimpleName[30661-30666]:SimpleName[13667-13672]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30667-30682]:SingleVariableDeclaration[13673-13688]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30684-30842]:Block[13690-13848]"
    }, {
      "left" : "for (int i = 1; i < array.length; i++)",
      "right" : "for (int i = 1; i < array.length; i++)",
      "info" : "ForStatement[30694-30815]:ForStatement[13700-13821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30733-30815]:Block[13739-13821]"
    }, {
      "left" : "if (array[i - 1] > array[i])",
      "right" : "if (array[i - 1] > array[i])",
      "info" : "IfStatement[30747-30805]:IfStatement[13753-13811]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[30792-30805]:ReturnStatement[13798-13811]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[30824-30836]:ReturnStatement[13830-13842]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30848-30854]:Modifier[13854-13860]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30855-30861]:Modifier[13861-13867]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30862-30867]:Modifier[13868-13873]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30868-30874]:SimpleType[13874-13880]"
    }, {
      "left" : "print",
      "right" : "print",
      "info" : "SimpleName[30875-30880]:SimpleName[13881-13886]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30881-30896]:SingleVariableDeclaration[13887-13902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30898-30951]:Block[13904-13957]"
    }, {
      "left" : "return print(array, 0, array.length);",
      "right" : "return print(array, 0, array.length);",
      "info" : "ReturnStatement[30908-30945]:ReturnStatement[13914-13951]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[30957-30963]:Modifier[13963-13969]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[30964-30970]:Modifier[13970-13976]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[30971-30976]:Modifier[13977-13982]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30977-30983]:SimpleType[13983-13989]"
    }, {
      "left" : "print",
      "right" : "print",
      "info" : "SimpleName[30984-30989]:SimpleName[13990-13995]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[30990-31005]:SingleVariableDeclaration[13996-14011]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[31007-31016]:SingleVariableDeclaration[14013-14022]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[31018-31028]:SingleVariableDeclaration[14024-14034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31030-31300]:Block[14036-14306]"
    }, {
      "left" : "final Integer[] clone = array.clone();",
      "right" : "final Integer[] clone = array.clone();",
      "info" : "VariableDeclarationStatement[31040-31078]:VariableDeclarationStatement[14046-14084]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31087-31131]:VariableDeclarationStatement[14093-14137]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[31140-31259]:ForStatement[14146-14265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31173-31259]:Block[14179-14265]"
    }, {
      "left" : "int e = clone[start + i];",
      "right" : "int e = clone[start + i];",
      "info" : "VariableDeclarationStatement[31187-31212]:VariableDeclarationStatement[14193-14218]"
    }, {
      "left" : "builder.append(e + \" \");",
      "right" : "builder.append(e + \" \");",
      "info" : "ExpressionStatement[31225-31249]:ExpressionStatement[14231-14255]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[31268-31294]:ReturnStatement[14274-14300]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[31306-31312]:Modifier[14312-14318]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31313-31319]:Modifier[14319-14325]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31320-31325]:Modifier[14326-14331]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[31326-31332]:SimpleType[14332-14338]"
    }, {
      "left" : "printWithPivot",
      "right" : "printWithPivot",
      "info" : "SimpleName[31333-31347]:SimpleName[14339-14353]"
    }, {
      "left" : "Integer[] array",
      "right" : "Integer[] array",
      "info" : "SingleVariableDeclaration[31348-31363]:SingleVariableDeclaration[14354-14369]"
    }, {
      "left" : "int pivotIndex",
      "right" : "int pivotIndex",
      "info" : "SingleVariableDeclaration[31365-31379]:SingleVariableDeclaration[14371-14385]"
    }, {
      "left" : "int start",
      "right" : "int start",
      "info" : "SingleVariableDeclaration[31381-31390]:SingleVariableDeclaration[14387-14396]"
    }, {
      "left" : "int length",
      "right" : "int length",
      "info" : "SingleVariableDeclaration[31392-31402]:SingleVariableDeclaration[14398-14408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31404-31776]:Block[14410-14782]"
    }, {
      "left" : "final Integer[] clone = array.clone();",
      "right" : "final Integer[] clone = array.clone();",
      "info" : "VariableDeclarationStatement[31414-31452]:VariableDeclarationStatement[14420-14458]"
    }, {
      "left" : "StringBuilder builder = new StringBuilder();",
      "right" : "StringBuilder builder = new StringBuilder();",
      "info" : "VariableDeclarationStatement[31461-31505]:VariableDeclarationStatement[14467-14511]"
    }, {
      "left" : "for (int i = 0; i < length; i++)",
      "right" : "for (int i = 0; i < length; i++)",
      "info" : "ForStatement[31514-31735]:ForStatement[14520-14741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31547-31735]:Block[14553-14741]"
    }, {
      "left" : "int e = clone[start + i];",
      "right" : "int e = clone[start + i];",
      "info" : "VariableDeclarationStatement[31561-31586]:VariableDeclarationStatement[14567-14592]"
    }, {
      "left" : "if (i == pivotIndex)",
      "right" : "if (i == pivotIndex)",
      "info" : "IfStatement[31599-31725]:IfStatement[14605-14731]"
    }, {
      "left" : "builder.append(\"`\" + e + \"` \");",
      "right" : "builder.append(\"`\" + e + \"` \");",
      "info" : "ExpressionStatement[31636-31667]:ExpressionStatement[14642-14673]"
    }, {
      "left" : "builder.append(e + \" \");",
      "right" : "builder.append(e + \" \");",
      "info" : "ExpressionStatement[31701-31725]:ExpressionStatement[14707-14731]"
    }, {
      "left" : "return builder.toString();",
      "right" : "return builder.toString();",
      "info" : "ReturnStatement[31744-31770]:ReturnStatement[14750-14776]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[31782-31789]:Modifier[14788-14795]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31790-31796]:Modifier[14796-14802]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31797-31802]:Modifier[14803-14808]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31803-31807]:PrimitiveType[14809-14813]"
    }, {
      "left" : "putOutTheGarbage",
      "right" : "putOutTheGarbage",
      "info" : "SimpleName[31808-31824]:SimpleName[14814-14830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31827-31912]:Block[14833-14918]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31837-31854]:ExpressionStatement[14843-14860]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31863-31880]:ExpressionStatement[14869-14886]"
    }, {
      "left" : "collectGarbage();",
      "right" : "collectGarbage();",
      "info" : "ExpressionStatement[31889-31906]:ExpressionStatement[14895-14912]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[31972-31979]:Modifier[14978-14985]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[31980-31986]:Modifier[14986-14992]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[31987-31992]:Modifier[14993-14998]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[31993-31997]:PrimitiveType[14999-15003]"
    }, {
      "left" : "collectGarbage",
      "right" : "collectGarbage",
      "info" : "SimpleName[31998-32012]:SimpleName[15004-15018]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32015-32323]:Block[15021-15329]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[32025-32317]:TryStatement[15031-15323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32029-32239]:Block[15035-15245]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32043-32055]:ExpressionStatement[15049-15061]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32068-32080]:ExpressionStatement[15074-15086]"
    }, {
      "left" : "System.gc();",
      "right" : "System.gc();",
      "info" : "ExpressionStatement[32093-32105]:ExpressionStatement[15099-15111]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[32118-32148]:ExpressionStatement[15124-15154]"
    }, {
      "left" : "System.runFinalization();",
      "right" : "System.runFinalization();",
      "info" : "ExpressionStatement[32161-32186]:ExpressionStatement[15167-15192]"
    }, {
      "left" : "Thread.sleep(fSLEEP_INTERVAL);",
      "right" : "Thread.sleep(fSLEEP_INTERVAL);",
      "info" : "ExpressionStatement[32199-32229]:ExpressionStatement[15205-15235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32272-32317]:Block[15278-15323]"
    }, {
      "left" : "ex.printStackTrace();",
      "right" : "ex.printStackTrace();",
      "info" : "ExpressionStatement[32286-32307]:ExpressionStatement[15292-15313]"
    } ]
  },
  "interFileMappings" : { }
}