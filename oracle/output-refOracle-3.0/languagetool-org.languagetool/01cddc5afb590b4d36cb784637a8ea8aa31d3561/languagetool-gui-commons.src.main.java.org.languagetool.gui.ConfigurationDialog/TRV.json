{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final String NO_MOTHER_TONGUE = \"---\";",
      "right" : "private static final String NO_MOTHER_TONGUE = \"---\";",
      "info" : "FieldDeclaration[1704-1757]:FieldDeclaration[1746-1799]"
    }, {
      "left" : "private static final int MAX_PORT = 65536;",
      "right" : "private static final int MAX_PORT = 65536;",
      "info" : "FieldDeclaration[1760-1802]:FieldDeclaration[1802-1844]"
    }, {
      "left" : "private final ResourceBundle messages;",
      "right" : "private final ResourceBundle messages;",
      "info" : "FieldDeclaration[1806-1844]:FieldDeclaration[1848-1886]"
    }, {
      "left" : "private final Configuration original;",
      "right" : "private final Configuration original;",
      "info" : "FieldDeclaration[1847-1884]:FieldDeclaration[1889-1926]"
    }, {
      "left" : "private final Configuration config;",
      "right" : "private final Configuration config;",
      "info" : "FieldDeclaration[1887-1922]:FieldDeclaration[1929-1964]"
    }, {
      "left" : "private final Frame owner;",
      "right" : "private final Frame owner;",
      "info" : "FieldDeclaration[1925-1951]:FieldDeclaration[1967-1993]"
    }, {
      "left" : "private final boolean insideOffice;",
      "right" : "private final boolean insideOffice;",
      "info" : "FieldDeclaration[1954-1989]:FieldDeclaration[1996-2031]"
    }, {
      "left" : "private JButton okButton;",
      "right" : "private JButton okButton;",
      "info" : "FieldDeclaration[1993-2018]:FieldDeclaration[2035-2060]"
    }, {
      "left" : "private JButton cancelButton;",
      "right" : "private JButton cancelButton;",
      "info" : "FieldDeclaration[2021-2050]:FieldDeclaration[2063-2092]"
    }, {
      "left" : "private JDialog dialog;",
      "right" : "private JDialog dialog;",
      "info" : "FieldDeclaration[2053-2076]:FieldDeclaration[2095-2118]"
    }, {
      "left" : "private JComboBox<String> motherTongueBox;",
      "right" : "private JComboBox<String> motherTongueBox;",
      "info" : "FieldDeclaration[2079-2121]:FieldDeclaration[2121-2163]"
    }, {
      "left" : "private JCheckBox serverCheckbox;",
      "right" : "private JCheckBox serverCheckbox;",
      "info" : "FieldDeclaration[2124-2157]:FieldDeclaration[2166-2199]"
    }, {
      "left" : "private JTextField serverPortField;",
      "right" : "private JTextField serverPortField;",
      "info" : "FieldDeclaration[2160-2195]:FieldDeclaration[2202-2237]"
    }, {
      "left" : "private JTree configTree;",
      "right" : "private JTree configTree;",
      "info" : "FieldDeclaration[2198-2223]:FieldDeclaration[2240-2265]"
    }, {
      "left" : "private JCheckBox serverSettingsCheckbox;",
      "right" : "private JCheckBox serverSettingsCheckbox;",
      "info" : "FieldDeclaration[2226-2267]:FieldDeclaration[2268-2309]"
    }, {
      "left" : "public ConfigurationDialog(Frame owner, boolean insideOffice, Configuration config)",
      "right" : "public ConfigurationDialog(Frame owner, boolean insideOffice, Configuration config)",
      "info" : "MethodDeclaration[2271-2542]:MethodDeclaration[2313-2584]"
    }, {
      "left" : "private DefaultMutableTreeNode createTree(List<Rule> rules)",
      "right" : "private DefaultMutableTreeNode createTree(List<Rule> rules)",
      "info" : "MethodDeclaration[2546-3518]:MethodDeclaration[2588-3560]"
    }, {
      "left" : "private boolean getState(Rule rule)",
      "right" : "private boolean getState(Rule rule)",
      "info" : "MethodDeclaration[3522-4127]:MethodDeclaration[3564-4169]"
    }, {
      "left" : "public void actionPerformed(@SuppressWarnings(\"unused\") ActionEvent actionEvent)",
      "right" : "public void actionPerformed(@SuppressWarnings(\"unused\") ActionEvent actionEvent)",
      "info" : "MethodDeclaration[4597-4737]:MethodDeclaration[4582-4722]"
    }, {
      "left" : "public void treeNodesChanged(TreeModelEvent e)",
      "right" : "public void treeNodesChanged(TreeModelEvent e)",
      "info" : "MethodDeclaration[5417-6600]:MethodDeclaration[11039-12222]"
    }, {
      "left" : "public void treeNodesInserted(TreeModelEvent e)",
      "right" : "public void treeNodesInserted(TreeModelEvent e)",
      "info" : "MethodDeclaration[6608-6681]:MethodDeclaration[12229-12295]"
    }, {
      "left" : "public void treeNodesRemoved(TreeModelEvent e)",
      "right" : "public void treeNodesRemoved(TreeModelEvent e)",
      "info" : "MethodDeclaration[6689-6761]:MethodDeclaration[12302-12367]"
    }, {
      "left" : "public void treeStructureChanged(TreeModelEvent e)",
      "right" : "public void treeStructureChanged(TreeModelEvent e)",
      "info" : "MethodDeclaration[6769-6845]:MethodDeclaration[12374-12443]"
    }, {
      "left" : "private void handlePopupEvent(MouseEvent e)",
      "right" : "private void handlePopupEvent(MouseEvent e)",
      "info" : "MethodDeclaration[7403-9082]:MethodDeclaration[12573-14328]"
    }, {
      "left" : "public void actionPerformed(ActionEvent actionEvent)",
      "right" : "public void actionPerformed(ActionEvent actionEvent)",
      "info" : "MethodDeclaration[8352-8962]:MethodDeclaration[13566-14198]"
    }, {
      "left" : "public void mousePressed(MouseEvent e)",
      "right" : "public void mousePressed(MouseEvent e)",
      "info" : "MethodDeclaration[9090-9229]:MethodDeclaration[14340-14489]"
    }, {
      "left" : "public void mouseReleased(MouseEvent e)",
      "right" : "public void mouseReleased(MouseEvent e)",
      "info" : "MethodDeclaration[9237-9377]:MethodDeclaration[14501-14651]"
    }, {
      "left" : "public void actionPerformed(ActionEvent e)",
      "right" : "public void actionPerformed(ActionEvent e)",
      "info" : "MethodDeclaration[9749-10164]:MethodDeclaration[15073-15488]"
    }, {
      "left" : "public void actionPerformed(ActionEvent e)",
      "right" : "public void actionPerformed(ActionEvent e)",
      "info" : "MethodDeclaration[10423-10846]:MethodDeclaration[15747-16170]"
    }, {
      "left" : "public void itemStateChanged(ItemEvent e)",
      "right" : "public void itemStateChanged(ItemEvent e)",
      "info" : "MethodDeclaration[11265-11754]:MethodDeclaration[16697-17186]"
    }, {
      "left" : "public void actionPerformed(@SuppressWarnings(\"unused\") ActionEvent e)",
      "right" : "public void actionPerformed(@SuppressWarnings(\"unused\") ActionEvent e)",
      "info" : "MethodDeclaration[12509-12750]:MethodDeclaration[8631-8864]"
    }, {
      "left" : "public void itemStateChanged(ItemEvent e)",
      "right" : "public void itemStateChanged(ItemEvent e)",
      "info" : "MethodDeclaration[12828-12959]:MethodDeclaration[8935-9060]"
    }, {
      "left" : "public void insertUpdate(DocumentEvent e)",
      "right" : "public void insertUpdate(DocumentEvent e)",
      "info" : "MethodDeclaration[13494-13593]:MethodDeclaration[9577-9670]"
    }, {
      "left" : "public void removeUpdate(DocumentEvent e)",
      "right" : "public void removeUpdate(DocumentEvent e)",
      "info" : "MethodDeclaration[13603-13702]:MethodDeclaration[9678-9771]"
    }, {
      "left" : "public void changedUpdate(DocumentEvent e)",
      "right" : "public void changedUpdate(DocumentEvent e)",
      "info" : "MethodDeclaration[13712-14237]:MethodDeclaration[9779-10278]"
    }, {
      "left" : "public void itemStateChanged(ItemEvent e)",
      "right" : "public void itemStateChanged(ItemEvent e)",
      "info" : "MethodDeclaration[14614-14756]:MethodDeclaration[10622-10758]"
    }, {
      "left" : "private String[] getPossibleMotherTongues()",
      "right" : "private String[] getPossibleMotherTongues()",
      "info" : "MethodDeclaration[16754-17084]:MethodDeclaration[17282-17612]"
    }, {
      "left" : "public void actionPerformed(ActionEvent e)",
      "right" : "public void actionPerformed(ActionEvent e)",
      "info" : "MethodDeclaration[17088-17379]:MethodDeclaration[17616-17907]"
    }, {
      "left" : "private Language getLanguageForLocalizedName(final String languageName)",
      "right" : "private Language getLanguageForLocalizedName(final String languageName)",
      "info" : "MethodDeclaration[17383-17919]:MethodDeclaration[17911-18447]"
    }, {
      "left" : "CategoryComparator",
      "right" : "CategoryComparator",
      "info" : "TypeDeclaration[17923-18474]:TypeDeclaration[18451-19002]"
    }, {
      "left" : "public int compare(final Rule r1, final Rule r2)",
      "right" : "public int compare(final Rule r1, final Rule r2)",
      "info" : "MethodDeclaration[17990-18469]:MethodDeclaration[18518-18997]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2271-2277]:Modifier[2313-2319]"
    }, {
      "left" : "ConfigurationDialog",
      "right" : "ConfigurationDialog",
      "info" : "SimpleName[2278-2297]:SimpleName[2320-2339]"
    }, {
      "left" : "Frame owner",
      "right" : "Frame owner",
      "info" : "SingleVariableDeclaration[2298-2309]:SingleVariableDeclaration[2340-2351]"
    }, {
      "left" : "boolean insideOffice",
      "right" : "boolean insideOffice",
      "info" : "SingleVariableDeclaration[2311-2331]:SingleVariableDeclaration[2353-2373]"
    }, {
      "left" : "Configuration config",
      "right" : "Configuration config",
      "info" : "SingleVariableDeclaration[2333-2353]:SingleVariableDeclaration[2375-2395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2355-2542]:Block[2397-2584]"
    }, {
      "left" : "this.owner = owner;",
      "right" : "this.owner = owner;",
      "info" : "ExpressionStatement[2361-2380]:ExpressionStatement[2403-2422]"
    }, {
      "left" : "this.insideOffice = insideOffice;",
      "right" : "this.insideOffice = insideOffice;",
      "info" : "ExpressionStatement[2385-2418]:ExpressionStatement[2427-2460]"
    }, {
      "left" : "this.original = config;",
      "right" : "this.original = config;",
      "info" : "ExpressionStatement[2423-2446]:ExpressionStatement[2465-2488]"
    }, {
      "left" : "this.config = original.copy(original);",
      "right" : "this.config = original.copy(original);",
      "info" : "ExpressionStatement[2451-2489]:ExpressionStatement[2493-2531]"
    }, {
      "left" : "messages = JLanguageTool.getMessageBundle();",
      "right" : "messages = JLanguageTool.getMessageBundle();",
      "info" : "ExpressionStatement[2494-2538]:ExpressionStatement[2536-2580]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2546-2553]:Modifier[2588-2595]"
    }, {
      "left" : "DefaultMutableTreeNode",
      "right" : "DefaultMutableTreeNode",
      "info" : "SimpleType[2554-2576]:SimpleType[2596-2618]"
    }, {
      "left" : "createTree",
      "right" : "createTree",
      "info" : "SimpleName[2577-2587]:SimpleName[2619-2629]"
    }, {
      "left" : "List<Rule> rules",
      "right" : "List<Rule> rules",
      "info" : "SingleVariableDeclaration[2588-2604]:SingleVariableDeclaration[2630-2646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2606-3518]:Block[2648-3560]"
    }, {
      "left" : "DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"Rules\");",
      "right" : "DefaultMutableTreeNode root = new DefaultMutableTreeNode(\"Rules\");",
      "info" : "VariableDeclarationStatement[2612-2678]:VariableDeclarationStatement[2654-2720]"
    }, {
      "left" : "String lastRuleId = null;",
      "right" : "String lastRuleId = null;",
      "info" : "VariableDeclarationStatement[2683-2708]:VariableDeclarationStatement[2725-2750]"
    }, {
      "left" : "Map<String, DefaultMutableTreeNode> parents = new TreeMap<>();",
      "right" : "Map<String, DefaultMutableTreeNode> parents = new TreeMap<>();",
      "info" : "VariableDeclarationStatement[2713-2775]:VariableDeclarationStatement[2755-2817]"
    }, {
      "left" : "for (final Rule rule : rules)",
      "right" : "for (final Rule rule : rules)",
      "info" : "EnhancedForStatement[2780-3497]:EnhancedForStatement[2822-3539]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2810-3497]:Block[2852-3539]"
    }, {
      "left" : "if (!parents.containsKey(rule.getCategory().getName()))",
      "right" : "if (!parents.containsKey(rule.getCategory().getName()))",
      "info" : "IfStatement[2818-3275]:IfStatement[2860-3317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2874-3275]:Block[2916-3317]"
    }, {
      "left" : "boolean enabled = true;",
      "right" : "boolean enabled = true;",
      "info" : "VariableDeclarationStatement[2884-2907]:VariableDeclarationStatement[2926-2949]"
    }, {
      "left" : "if (config.getDisabledCategoryNames() != null && config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "right" : "if (config.getDisabledCategoryNames() != null && config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "info" : "IfStatement[2916-3077]:IfStatement[2958-3119]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3039-3077]:Block[3081-3119]"
    }, {
      "left" : "enabled = false;",
      "right" : "enabled = false;",
      "info" : "ExpressionStatement[3051-3067]:ExpressionStatement[3093-3109]"
    }, {
      "left" : "DefaultMutableTreeNode categoryNode = new CategoryNode(rule.getCategory(), enabled);",
      "right" : "DefaultMutableTreeNode categoryNode = new CategoryNode(rule.getCategory(), enabled);",
      "info" : "VariableDeclarationStatement[3086-3170]:VariableDeclarationStatement[3128-3212]"
    }, {
      "left" : "root.add(categoryNode);",
      "right" : "root.add(categoryNode);",
      "info" : "ExpressionStatement[3179-3202]:ExpressionStatement[3221-3244]"
    }, {
      "left" : "parents.put(rule.getCategory().getName(), categoryNode);",
      "right" : "parents.put(rule.getCategory().getName(), categoryNode);",
      "info" : "ExpressionStatement[3211-3267]:ExpressionStatement[3253-3309]"
    }, {
      "left" : "if (!rule.getId().equals(lastRuleId))",
      "right" : "if (!rule.getId().equals(lastRuleId))",
      "info" : "IfStatement[3282-3458]:IfStatement[3324-3500]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3320-3458]:Block[3362-3500]"
    }, {
      "left" : "RuleNode ruleNode = new RuleNode(rule, getState(rule));",
      "right" : "RuleNode ruleNode = new RuleNode(rule, getState(rule));",
      "info" : "VariableDeclarationStatement[3330-3385]:VariableDeclarationStatement[3372-3427]"
    }, {
      "left" : "parents.get(rule.getCategory().getName()).add(ruleNode);",
      "right" : "parents.get(rule.getCategory().getName()).add(ruleNode);",
      "info" : "ExpressionStatement[3394-3450]:ExpressionStatement[3436-3492]"
    }, {
      "left" : "lastRuleId = rule.getId();",
      "right" : "lastRuleId = rule.getId();",
      "info" : "ExpressionStatement[3465-3491]:ExpressionStatement[3507-3533]"
    }, {
      "left" : "return root;",
      "right" : "return root;",
      "info" : "ReturnStatement[3502-3514]:ReturnStatement[3544-3556]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[3522-3529]:Modifier[3564-3571]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[3530-3537]:PrimitiveType[3572-3579]"
    }, {
      "left" : "getState",
      "right" : "getState",
      "info" : "SimpleName[3538-3546]:SimpleName[3580-3588]"
    }, {
      "left" : "Rule rule",
      "right" : "Rule rule",
      "info" : "SingleVariableDeclaration[3547-3556]:SingleVariableDeclaration[3589-3598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3558-4127]:Block[3600-4169]"
    }, {
      "left" : "boolean ret = true;",
      "right" : "boolean ret = true;",
      "info" : "VariableDeclarationStatement[3564-3583]:VariableDeclarationStatement[3606-3625]"
    }, {
      "left" : "if (config.getDisabledRuleIds().contains(rule.getId()))",
      "right" : "if (config.getDisabledRuleIds().contains(rule.getId()))",
      "info" : "IfStatement[3589-3671]:IfStatement[3631-3713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3645-3671]:Block[3687-3713]"
    }, {
      "left" : "ret = false;",
      "right" : "ret = false;",
      "info" : "ExpressionStatement[3653-3665]:ExpressionStatement[3695-3707]"
    }, {
      "left" : "if (config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "right" : "if (config.getDisabledCategoryNames().contains(rule.getCategory().getName()))",
      "info" : "IfStatement[3676-3780]:IfStatement[3718-3822]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3754-3780]:Block[3796-3822]"
    }, {
      "left" : "ret = false;",
      "right" : "ret = false;",
      "info" : "ExpressionStatement[3762-3774]:ExpressionStatement[3804-3816]"
    }, {
      "left" : "if (rule.isDefaultOff() && !config.getEnabledRuleIds().contains(rule.getId()))",
      "right" : "if (rule.isDefaultOff() && !config.getEnabledRuleIds().contains(rule.getId()))",
      "info" : "IfStatement[3785-3890]:IfStatement[3827-3932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3864-3890]:Block[3906-3932]"
    }, {
      "left" : "ret = false;",
      "right" : "ret = false;",
      "info" : "ExpressionStatement[3872-3884]:ExpressionStatement[3914-3926]"
    }, {
      "left" : "if (rule.isDefaultOff() && rule.getCategory().isDefaultOff()\n            && config.getEnabledRuleIds().contains(rule.getId()))",
      "right" : "if (rule.isDefaultOff() && rule.getCategory().isDefaultOff()\n            && config.getEnabledRuleIds().contains(rule.getId()))",
      "info" : "IfStatement[3895-4107]:IfStatement[3937-4149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4022-4107]:Block[4064-4149]"
    }, {
      "left" : "config.getDisabledCategoryNames().remove(rule.getCategory().getName());",
      "right" : "config.getDisabledCategoryNames().remove(rule.getCategory().getName());",
      "info" : "ExpressionStatement[4030-4101]:ExpressionStatement[4072-4143]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[4112-4123]:ReturnStatement[4154-4165]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4597-4606]:MarkerAnnotation[4582-4591]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4613-4619]:Modifier[4598-4604]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4620-4624]:PrimitiveType[4605-4609]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[4625-4640]:SimpleName[4610-4625]"
    }, {
      "left" : "@SuppressWarnings(\"unused\") ActionEvent actionEvent",
      "right" : "@SuppressWarnings(\"unused\") ActionEvent actionEvent",
      "info" : "SingleVariableDeclaration[4641-4692]:SingleVariableDeclaration[4626-4677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4694-4737]:Block[4679-4722]"
    }, {
      "left" : "dialog.setVisible(false);",
      "right" : "dialog.setVisible(false);",
      "info" : "ExpressionStatement[4704-4729]:ExpressionStatement[4689-4714]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5417-5426]:MarkerAnnotation[11039-11048]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5433-5439]:Modifier[11055-11061]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5440-5444]:PrimitiveType[11062-11066]"
    }, {
      "left" : "treeNodesChanged",
      "right" : "treeNodesChanged",
      "info" : "SimpleName[5445-5461]:SimpleName[11067-11083]"
    }, {
      "left" : "TreeModelEvent e",
      "right" : "TreeModelEvent e",
      "info" : "SingleVariableDeclaration[5462-5478]:SingleVariableDeclaration[11084-11100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5480-6600]:Block[11102-12222]"
    }, {
      "left" : "DefaultMutableTreeNode node = (DefaultMutableTreeNode) e.getTreePath().getLastPathComponent();",
      "right" : "DefaultMutableTreeNode node = (DefaultMutableTreeNode) e.getTreePath().getLastPathComponent();",
      "info" : "VariableDeclarationStatement[5490-5584]:VariableDeclarationStatement[11112-11206]"
    }, {
      "left" : "int index = e.getChildIndices()[0];",
      "right" : "int index = e.getChildIndices()[0];",
      "info" : "VariableDeclarationStatement[5593-5628]:VariableDeclarationStatement[11215-11250]"
    }, {
      "left" : "node = (DefaultMutableTreeNode) node.getChildAt(index);",
      "right" : "node = (DefaultMutableTreeNode) node.getChildAt(index);",
      "info" : "ExpressionStatement[5637-5692]:ExpressionStatement[11259-11314]"
    }, {
      "left" : "if (node instanceof RuleNode)",
      "right" : "if (node instanceof RuleNode)",
      "info" : "IfStatement[5701-6269]:IfStatement[11323-11891]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5731-6269]:Block[11353-11891]"
    }, {
      "left" : "RuleNode o = (RuleNode) node;",
      "right" : "RuleNode o = (RuleNode) node;",
      "info" : "VariableDeclarationStatement[5743-5772]:VariableDeclarationStatement[11365-11394]"
    }, {
      "left" : "if (o.getRule().isDefaultOff())",
      "right" : "if (o.getRule().isDefaultOff())",
      "info" : "IfStatement[5783-6259]:IfStatement[11405-11881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5815-6033]:Block[11437-11655]"
    }, {
      "left" : "if (o.isEnabled())",
      "right" : "if (o.isEnabled())",
      "info" : "IfStatement[5829-6021]:IfStatement[11451-11643]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5848-5930]:Block[11470-11552]"
    }, {
      "left" : "config.getEnabledRuleIds().add(o.getRule().getId());",
      "right" : "config.getEnabledRuleIds().add(o.getRule().getId());",
      "info" : "ExpressionStatement[5864-5916]:ExpressionStatement[11486-11538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5936-6021]:Block[11558-11643]"
    }, {
      "left" : "config.getEnabledRuleIds().remove(o.getRule().getId());",
      "right" : "config.getEnabledRuleIds().remove(o.getRule().getId());",
      "info" : "ExpressionStatement[5952-6007]:ExpressionStatement[11574-11629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6039-6259]:Block[11661-11881]"
    }, {
      "left" : "if (o.isEnabled())",
      "right" : "if (o.isEnabled())",
      "info" : "IfStatement[6053-6247]:IfStatement[11675-11869]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6072-6158]:Block[11694-11780]"
    }, {
      "left" : "config.getDisabledRuleIds().remove(o.getRule().getId());",
      "right" : "config.getDisabledRuleIds().remove(o.getRule().getId());",
      "info" : "ExpressionStatement[6088-6144]:ExpressionStatement[11710-11766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6164-6247]:Block[11786-11869]"
    }, {
      "left" : "config.getDisabledRuleIds().add(o.getRule().getId());",
      "right" : "config.getDisabledRuleIds().add(o.getRule().getId());",
      "info" : "ExpressionStatement[6180-6233]:ExpressionStatement[11802-11855]"
    }, {
      "left" : "if (node instanceof CategoryNode)",
      "right" : "if (node instanceof CategoryNode)",
      "info" : "IfStatement[6278-6592]:IfStatement[11900-12214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6312-6592]:Block[11934-12214]"
    }, {
      "left" : "CategoryNode o = (CategoryNode) node;",
      "right" : "CategoryNode o = (CategoryNode) node;",
      "info" : "VariableDeclarationStatement[6324-6361]:VariableDeclarationStatement[11946-11983]"
    }, {
      "left" : "if (o.isEnabled())",
      "right" : "if (o.isEnabled())",
      "info" : "IfStatement[6372-6582]:IfStatement[11994-12204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6391-6485]:Block[12013-12107]"
    }, {
      "left" : "config.getDisabledCategoryNames().remove(o.getCategory().getName());",
      "right" : "config.getDisabledCategoryNames().remove(o.getCategory().getName());",
      "info" : "ExpressionStatement[6405-6473]:ExpressionStatement[12027-12095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6491-6582]:Block[12113-12204]"
    }, {
      "left" : "config.getDisabledCategoryNames().add(o.getCategory().getName());",
      "right" : "config.getDisabledCategoryNames().add(o.getCategory().getName());",
      "info" : "ExpressionStatement[6505-6570]:ExpressionStatement[12127-12192]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6608-6617]:MarkerAnnotation[12229-12238]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6624-6630]:Modifier[12245-12251]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6631-6635]:PrimitiveType[12252-12256]"
    }, {
      "left" : "treeNodesInserted",
      "right" : "treeNodesInserted",
      "info" : "SimpleName[6636-6653]:SimpleName[12257-12274]"
    }, {
      "left" : "TreeModelEvent e",
      "right" : "TreeModelEvent e",
      "info" : "SingleVariableDeclaration[6654-6670]:SingleVariableDeclaration[12275-12291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6672-6681]:Block[12293-12295]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6689-6698]:MarkerAnnotation[12302-12311]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6705-6711]:Modifier[12318-12324]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6712-6716]:PrimitiveType[12325-12329]"
    }, {
      "left" : "treeNodesRemoved",
      "right" : "treeNodesRemoved",
      "info" : "SimpleName[6717-6733]:SimpleName[12330-12346]"
    }, {
      "left" : "TreeModelEvent e",
      "right" : "TreeModelEvent e",
      "info" : "SingleVariableDeclaration[6734-6750]:SingleVariableDeclaration[12347-12363]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6752-6761]:Block[12365-12367]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6769-6778]:MarkerAnnotation[12374-12383]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6785-6791]:Modifier[12390-12396]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6792-6796]:PrimitiveType[12397-12401]"
    }, {
      "left" : "treeStructureChanged",
      "right" : "treeStructureChanged",
      "info" : "SimpleName[6797-6817]:SimpleName[12402-12422]"
    }, {
      "left" : "TreeModelEvent e",
      "right" : "TreeModelEvent e",
      "info" : "SingleVariableDeclaration[6818-6834]:SingleVariableDeclaration[12423-12439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6836-6845]:Block[12441-12443]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7403-7410]:Modifier[12573-12580]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7411-7415]:PrimitiveType[12581-12585]"
    }, {
      "left" : "handlePopupEvent",
      "right" : "handlePopupEvent",
      "info" : "SimpleName[7416-7432]:SimpleName[12586-12602]"
    }, {
      "left" : "MouseEvent e",
      "right" : "MouseEvent e",
      "info" : "SingleVariableDeclaration[7433-7445]:SingleVariableDeclaration[12603-12615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7447-9082]:Block[12617-14328]"
    }, {
      "left" : "final JTree tree = (JTree) e.getSource();",
      "right" : "final JTree tree = (JTree) e.getSource();",
      "info" : "VariableDeclarationStatement[7457-7498]:VariableDeclarationStatement[12629-12670]"
    }, {
      "left" : "TreePath path = tree.getPathForLocation(e.getX(), e.getY());",
      "right" : "TreePath path = tree.getPathForLocation(e.getX(), e.getY());",
      "info" : "VariableDeclarationStatement[7508-7568]:VariableDeclarationStatement[12681-12741]"
    }, {
      "left" : "if (path == null)",
      "right" : "if (path == null)",
      "info" : "IfStatement[7577-7624]:IfStatement[12752-12803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7595-7624]:Block[12770-12803]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[7607-7614]:ReturnStatement[12784-12791]"
    }, {
      "left" : "DefaultMutableTreeNode node\n                = (DefaultMutableTreeNode) path.getLastPathComponent();",
      "right" : "DefaultMutableTreeNode node\n                  = (DefaultMutableTreeNode) path.getLastPathComponent();",
      "info" : "VariableDeclarationStatement[7634-7733]:VariableDeclarationStatement[12814-12915]"
    }, {
      "left" : "TreePath[] paths = tree.getSelectionPaths();",
      "right" : "TreePath[] paths = tree.getSelectionPaths();",
      "info" : "VariableDeclarationStatement[7743-7787]:VariableDeclarationStatement[12926-12970]"
    }, {
      "left" : "boolean isSelected = false;",
      "right" : "boolean isSelected = false;",
      "info" : "VariableDeclarationStatement[7797-7824]:VariableDeclarationStatement[12981-13008]"
    }, {
      "left" : "if (paths != null)",
      "right" : "if (paths != null)",
      "info" : "IfStatement[7833-8017]:IfStatement[13019-13215]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7852-8017]:Block[13038-13215]"
    }, {
      "left" : "for (TreePath selectionPath : paths)",
      "right" : "for (TreePath selectionPath : paths)",
      "info" : "EnhancedForStatement[7864-8007]:EnhancedForStatement[13052-13203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7901-8007]:Block[13089-13203]"
    }, {
      "left" : "if (selectionPath.equals(path))",
      "right" : "if (selectionPath.equals(path))",
      "info" : "IfStatement[7915-7995]:IfStatement[13105-13189]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7947-7995]:Block[13137-13189]"
    }, {
      "left" : "isSelected = true;",
      "right" : "isSelected = true;",
      "info" : "ExpressionStatement[7963-7981]:ExpressionStatement[13155-13173]"
    }, {
      "left" : "if (!isSelected)",
      "right" : "if (!isSelected)",
      "info" : "IfStatement[8026-8093]:IfStatement[13226-13297]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8043-8093]:Block[13243-13297]"
    }, {
      "left" : "tree.setSelectionPath(path);",
      "right" : "tree.setSelectionPath(path);",
      "info" : "ExpressionStatement[8055-8083]:ExpressionStatement[13257-13285]"
    }, {
      "left" : "if (node.isLeaf())",
      "right" : "if (node.isLeaf())",
      "info" : "IfStatement[8102-9074]:IfStatement[13308-14318]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8121-9074]:Block[13327-14318]"
    }, {
      "left" : "JPopupMenu popup = new JPopupMenu();",
      "right" : "JPopupMenu popup = new JPopupMenu();",
      "info" : "VariableDeclarationStatement[8133-8169]:VariableDeclarationStatement[13341-13377]"
    }, {
      "left" : "final JMenuItem aboutRuleMenuItem = new JMenuItem(messages.getString(\"guiAboutRuleMenu\"));",
      "right" : "final JMenuItem aboutRuleMenuItem = new JMenuItem(messages.getString(\"guiAboutRuleMenu\"));",
      "info" : "VariableDeclarationStatement[8180-8270]:VariableDeclarationStatement[13390-13480]"
    }, {
      "left" : "aboutRuleMenuItem.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent actionEvent) {\n              RuleNode node = (RuleNode) tree.getSelectionPath().getLastPathComponent();\n              Rule rule = node.getRule();\n              Language lang = config.getLanguage();\n              if(lang == null) {\n                lang = Languages.getLanguageForLocale(Locale.getDefault());\n              }\n              Tools.showRuleInfoDialog(tree, messages.getString(\"guiAboutRuleTitle\"),\n                      rule.getDescription(), rule, messages,\n                      lang.getShortNameWithCountryAndVariant());\n            }\n          });",
      "right" : "aboutRuleMenuItem.addActionListener(new ActionListener() {\n              @Override\n              public void actionPerformed(ActionEvent actionEvent) {\n                RuleNode node = (RuleNode) tree.getSelectionPath().getLastPathComponent();\n                Rule rule = node.getRule();\n                Language lang = config.getLanguage();\n                if(lang == null) {\n                  lang = Languages.getLanguageForLocale(Locale.getDefault());\n                }\n                Tools.showRuleInfoDialog(tree, messages.getString(\"guiAboutRuleTitle\"),\n                        rule.getDescription(), rule, messages,\n                        lang.getShortNameWithCountryAndVariant());\n              }\n            });",
      "info" : "ExpressionStatement[8281-8976]:ExpressionStatement[13493-14214]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8352-8361]:MarkerAnnotation[13566-13575]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8374-8380]:Modifier[13590-13596]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8381-8385]:PrimitiveType[13597-13601]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[8386-8401]:SimpleName[13602-13617]"
    }, {
      "left" : "ActionEvent actionEvent",
      "right" : "ActionEvent actionEvent",
      "info" : "SingleVariableDeclaration[8402-8425]:SingleVariableDeclaration[13618-13641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8427-8962]:Block[13643-14198]"
    }, {
      "left" : "RuleNode node = (RuleNode) tree.getSelectionPath().getLastPathComponent();",
      "right" : "RuleNode node = (RuleNode) tree.getSelectionPath().getLastPathComponent();",
      "info" : "VariableDeclarationStatement[8443-8517]:VariableDeclarationStatement[13661-13735]"
    }, {
      "left" : "Rule rule = node.getRule();",
      "right" : "Rule rule = node.getRule();",
      "info" : "VariableDeclarationStatement[8532-8559]:VariableDeclarationStatement[13752-13779]"
    }, {
      "left" : "Language lang = config.getLanguage();",
      "right" : "Language lang = config.getLanguage();",
      "info" : "VariableDeclarationStatement[8574-8611]:VariableDeclarationStatement[13796-13833]"
    }, {
      "left" : "if(lang == null)",
      "right" : "if(lang == null)",
      "info" : "IfStatement[8626-8736]:IfStatement[13850-13964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8643-8736]:Block[13867-13964]"
    }, {
      "left" : "lang = Languages.getLanguageForLocale(Locale.getDefault());",
      "right" : "lang = Languages.getLanguageForLocale(Locale.getDefault());",
      "info" : "ExpressionStatement[8661-8720]:ExpressionStatement[13887-13946]"
    }, {
      "left" : "Tools.showRuleInfoDialog(tree, messages.getString(\"guiAboutRuleTitle\"),\n                      rule.getDescription(), rule, messages,\n                      lang.getShortNameWithCountryAndVariant());",
      "right" : "Tools.showRuleInfoDialog(tree, messages.getString(\"guiAboutRuleTitle\"),\n                        rule.getDescription(), rule, messages,\n                        lang.getShortNameWithCountryAndVariant());",
      "info" : "ExpressionStatement[8751-8948]:ExpressionStatement[13981-14182]"
    }, {
      "left" : "popup.add(aboutRuleMenuItem);",
      "right" : "popup.add(aboutRuleMenuItem);",
      "info" : "ExpressionStatement[8987-9016]:ExpressionStatement[14227-14256]"
    }, {
      "left" : "popup.show(tree, e.getX(), e.getY());",
      "right" : "popup.show(tree, e.getX(), e.getY());",
      "info" : "ExpressionStatement[9027-9064]:ExpressionStatement[14269-14306]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9090-9099]:MarkerAnnotation[14340-14349]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9106-9112]:Modifier[14358-14364]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9113-9117]:PrimitiveType[14365-14369]"
    }, {
      "left" : "mousePressed",
      "right" : "mousePressed",
      "info" : "SimpleName[9118-9130]:SimpleName[14370-14382]"
    }, {
      "left" : "MouseEvent e",
      "right" : "MouseEvent e",
      "info" : "SingleVariableDeclaration[9131-9143]:SingleVariableDeclaration[14383-14395]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9145-9229]:Block[14397-14489]"
    }, {
      "left" : "if (e.isPopupTrigger())",
      "right" : "if (e.isPopupTrigger())",
      "info" : "IfStatement[9155-9221]:IfStatement[14409-14479]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9179-9221]:Block[14433-14479]"
    }, {
      "left" : "handlePopupEvent(e);",
      "right" : "handlePopupEvent(e);",
      "info" : "ExpressionStatement[9191-9211]:ExpressionStatement[14447-14467]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9237-9246]:MarkerAnnotation[14501-14510]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9253-9259]:Modifier[14519-14525]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9260-9264]:PrimitiveType[14526-14530]"
    }, {
      "left" : "mouseReleased",
      "right" : "mouseReleased",
      "info" : "SimpleName[9265-9278]:SimpleName[14531-14544]"
    }, {
      "left" : "MouseEvent e",
      "right" : "MouseEvent e",
      "info" : "SingleVariableDeclaration[9279-9291]:SingleVariableDeclaration[14545-14557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9293-9377]:Block[14559-14651]"
    }, {
      "left" : "if (e.isPopupTrigger())",
      "right" : "if (e.isPopupTrigger())",
      "info" : "IfStatement[9303-9369]:IfStatement[14571-14641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9327-9369]:Block[14595-14641]"
    }, {
      "left" : "handlePopupEvent(e);",
      "right" : "handlePopupEvent(e);",
      "info" : "ExpressionStatement[9339-9359]:ExpressionStatement[14609-14629]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9749-9758]:MarkerAnnotation[15073-15082]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9765-9771]:Modifier[15089-15095]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9772-9776]:PrimitiveType[15096-15100]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[9777-9792]:SimpleName[15101-15116]"
    }, {
      "left" : "ActionEvent e",
      "right" : "ActionEvent e",
      "info" : "SingleVariableDeclaration[9793-9806]:SingleVariableDeclaration[15117-15130]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9808-10164]:Block[15132-15488]"
    }, {
      "left" : "TreeNode root = (TreeNode) configTree.getModel().getRoot();",
      "right" : "TreeNode root = (TreeNode) configTree.getModel().getRoot();",
      "info" : "VariableDeclarationStatement[9818-9877]:VariableDeclarationStatement[15142-15201]"
    }, {
      "left" : "TreePath parent = new TreePath(root);",
      "right" : "TreePath parent = new TreePath(root);",
      "info" : "VariableDeclarationStatement[9886-9923]:VariableDeclarationStatement[15210-15247]"
    }, {
      "left" : "for (Enumeration cat = root.children(); cat.hasMoreElements())",
      "right" : "for (Enumeration cat = root.children(); cat.hasMoreElements())",
      "info" : "ForStatement[9932-10156]:ForStatement[15256-15480]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9996-10156]:Block[15320-15480]"
    }, {
      "left" : "TreeNode n = (TreeNode) cat.nextElement();",
      "right" : "TreeNode n = (TreeNode) cat.nextElement();",
      "info" : "VariableDeclarationStatement[10008-10050]:VariableDeclarationStatement[15332-15374]"
    }, {
      "left" : "TreePath child = parent.pathByAddingChild(n);",
      "right" : "TreePath child = parent.pathByAddingChild(n);",
      "info" : "VariableDeclarationStatement[10061-10106]:VariableDeclarationStatement[15385-15430]"
    }, {
      "left" : "configTree.expandPath(child);",
      "right" : "configTree.expandPath(child);",
      "info" : "ExpressionStatement[10117-10146]:ExpressionStatement[15441-15470]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10423-10432]:MarkerAnnotation[15747-15756]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10439-10445]:Modifier[15763-15769]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10446-10450]:PrimitiveType[15770-15774]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[10451-10466]:SimpleName[15775-15790]"
    }, {
      "left" : "ActionEvent e",
      "right" : "ActionEvent e",
      "info" : "SingleVariableDeclaration[10467-10480]:SingleVariableDeclaration[15791-15804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10482-10846]:Block[15806-16170]"
    }, {
      "left" : "TreeNode root = (TreeNode) configTree.getModel().getRoot();",
      "right" : "TreeNode root = (TreeNode) configTree.getModel().getRoot();",
      "info" : "VariableDeclarationStatement[10492-10551]:VariableDeclarationStatement[15816-15875]"
    }, {
      "left" : "TreePath parent = new TreePath(root);",
      "right" : "TreePath parent = new TreePath(root);",
      "info" : "VariableDeclarationStatement[10560-10597]:VariableDeclarationStatement[15884-15921]"
    }, {
      "left" : "for (Enumeration categ = root.children(); categ.hasMoreElements())",
      "right" : "for (Enumeration categ = root.children(); categ.hasMoreElements())",
      "info" : "ForStatement[10606-10838]:ForStatement[15930-16162]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10674-10838]:Block[15998-16162]"
    }, {
      "left" : "TreeNode n = (TreeNode) categ.nextElement();",
      "right" : "TreeNode n = (TreeNode) categ.nextElement();",
      "info" : "VariableDeclarationStatement[10686-10730]:VariableDeclarationStatement[16010-16054]"
    }, {
      "left" : "TreePath child = parent.pathByAddingChild(n);",
      "right" : "TreePath child = parent.pathByAddingChild(n);",
      "info" : "VariableDeclarationStatement[10741-10786]:VariableDeclarationStatement[16065-16110]"
    }, {
      "left" : "configTree.collapsePath(child);",
      "right" : "configTree.collapsePath(child);",
      "info" : "ExpressionStatement[10797-10828]:ExpressionStatement[16121-16152]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11265-11274]:MarkerAnnotation[16697-16706]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11281-11287]:Modifier[16713-16719]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11288-11292]:PrimitiveType[16720-16724]"
    }, {
      "left" : "itemStateChanged",
      "right" : "itemStateChanged",
      "info" : "SimpleName[11293-11309]:SimpleName[16725-16741]"
    }, {
      "left" : "ItemEvent e",
      "right" : "ItemEvent e",
      "info" : "SingleVariableDeclaration[11310-11321]:SingleVariableDeclaration[16742-16753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11323-11754]:Block[16755-17186]"
    }, {
      "left" : "if (e.getStateChange() == ItemEvent.SELECTED)",
      "right" : "if (e.getStateChange() == ItemEvent.SELECTED)",
      "info" : "IfStatement[11333-11746]:IfStatement[16765-17178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11379-11746]:Block[16811-17178]"
    }, {
      "left" : "Language motherTongue;",
      "right" : "Language motherTongue;",
      "info" : "VariableDeclarationStatement[11391-11413]:VariableDeclarationStatement[16823-16845]"
    }, {
      "left" : "if (motherTongueBox.getSelectedItem() instanceof String)",
      "right" : "if (motherTongueBox.getSelectedItem() instanceof String)",
      "info" : "IfStatement[11424-11688]:IfStatement[16856-17120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11481-11596]:Block[16913-17028]"
    }, {
      "left" : "motherTongue = getLanguageForLocalizedName(motherTongueBox.getSelectedItem().toString());",
      "right" : "motherTongue = getLanguageForLocalizedName(motherTongueBox.getSelectedItem().toString());",
      "info" : "ExpressionStatement[11495-11584]:ExpressionStatement[16927-17016]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11602-11688]:Block[17034-17120]"
    }, {
      "left" : "motherTongue = (Language) motherTongueBox.getSelectedItem();",
      "right" : "motherTongue = (Language) motherTongueBox.getSelectedItem();",
      "info" : "ExpressionStatement[11616-11676]:ExpressionStatement[17048-17108]"
    }, {
      "left" : "config.setMotherTongue(motherTongue);",
      "right" : "config.setMotherTongue(motherTongue);",
      "info" : "ExpressionStatement[11699-11736]:ExpressionStatement[17131-17168]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12509-12518]:MarkerAnnotation[8631-8640]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12527-12533]:Modifier[8647-8653]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12534-12538]:PrimitiveType[8654-8658]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[12539-12554]:SimpleName[8659-8674]"
    }, {
      "left" : "@SuppressWarnings(\"unused\") ActionEvent e",
      "right" : "@SuppressWarnings(\"unused\") ActionEvent e",
      "info" : "SingleVariableDeclaration[12555-12596]:SingleVariableDeclaration[8675-8716]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12598-12750]:Block[8718-8864]"
    }, {
      "left" : "serverPortField.setEnabled(serverCheckbox.isSelected());",
      "right" : "serverPortField.setEnabled(serverCheckbox.isSelected());",
      "info" : "ExpressionStatement[12610-12666]:ExpressionStatement[8728-8784]"
    }, {
      "left" : "serverSettingsCheckbox.setEnabled(serverCheckbox.isSelected());",
      "right" : "serverSettingsCheckbox.setEnabled(serverCheckbox.isSelected());",
      "info" : "ExpressionStatement[12677-12740]:ExpressionStatement[8793-8856]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12828-12837]:MarkerAnnotation[8935-8944]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12846-12852]:Modifier[8951-8957]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12853-12857]:PrimitiveType[8958-8962]"
    }, {
      "left" : "itemStateChanged",
      "right" : "itemStateChanged",
      "info" : "SimpleName[12858-12874]:SimpleName[8963-8979]"
    }, {
      "left" : "ItemEvent e",
      "right" : "ItemEvent e",
      "info" : "SingleVariableDeclaration[12875-12886]:SingleVariableDeclaration[8980-8991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12888-12959]:Block[8993-9060]"
    }, {
      "left" : "config.setRunServer(serverCheckbox.isSelected());",
      "right" : "config.setRunServer(serverCheckbox.isSelected());",
      "info" : "ExpressionStatement[12900-12949]:ExpressionStatement[9003-9052]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13494-13503]:MarkerAnnotation[9577-9586]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13512-13518]:Modifier[9593-9599]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13519-13523]:PrimitiveType[9600-9604]"
    }, {
      "left" : "insertUpdate",
      "right" : "insertUpdate",
      "info" : "SimpleName[13524-13536]:SimpleName[9605-9617]"
    }, {
      "left" : "DocumentEvent e",
      "right" : "DocumentEvent e",
      "info" : "SingleVariableDeclaration[13537-13552]:SingleVariableDeclaration[9618-9633]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13554-13593]:Block[9635-9670]"
    }, {
      "left" : "changedUpdate(e);",
      "right" : "changedUpdate(e);",
      "info" : "ExpressionStatement[13566-13583]:ExpressionStatement[9645-9662]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13603-13612]:MarkerAnnotation[9678-9687]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13621-13627]:Modifier[9694-9700]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13628-13632]:PrimitiveType[9701-9705]"
    }, {
      "left" : "removeUpdate",
      "right" : "removeUpdate",
      "info" : "SimpleName[13633-13645]:SimpleName[9706-9718]"
    }, {
      "left" : "DocumentEvent e",
      "right" : "DocumentEvent e",
      "info" : "SingleVariableDeclaration[13646-13661]:SingleVariableDeclaration[9719-9734]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13663-13702]:Block[9736-9771]"
    }, {
      "left" : "changedUpdate(e);",
      "right" : "changedUpdate(e);",
      "info" : "ExpressionStatement[13675-13692]:ExpressionStatement[9746-9763]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13712-13721]:MarkerAnnotation[9779-9788]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13730-13736]:Modifier[9795-9801]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13737-13741]:PrimitiveType[9802-9806]"
    }, {
      "left" : "changedUpdate",
      "right" : "changedUpdate",
      "info" : "SimpleName[13742-13755]:SimpleName[9807-9820]"
    }, {
      "left" : "DocumentEvent e",
      "right" : "DocumentEvent e",
      "info" : "SingleVariableDeclaration[13756-13771]:SingleVariableDeclaration[9821-9836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13773-14237]:Block[9838-10278]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[13785-14227]:TryStatement[9848-10270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13789-14126]:Block[9852-10173]"
    }, {
      "left" : "int serverPort = Integer.parseInt(serverPortField.getText());",
      "right" : "int serverPort = Integer.parseInt(serverPortField.getText());",
      "info" : "VariableDeclarationStatement[13803-13864]:VariableDeclarationStatement[9864-9925]"
    }, {
      "left" : "if (serverPort > -1 && serverPort < MAX_PORT)",
      "right" : "if (serverPort > -1 && serverPort < MAX_PORT)",
      "info" : "IfStatement[13877-14114]:IfStatement[9936-10163]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13923-14037]:Block[9982-10090]"
    }, {
      "left" : "serverPortField.setForeground(null);",
      "right" : "serverPortField.setForeground(null);",
      "info" : "ExpressionStatement[13939-13975]:ExpressionStatement[9996-10032]"
    }, {
      "left" : "config.setServerPort(serverPort);",
      "right" : "config.setServerPort(serverPort);",
      "info" : "ExpressionStatement[13990-14023]:ExpressionStatement[10045-10078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14043-14114]:Block[10096-10163]"
    }, {
      "left" : "serverPortField.setForeground(Color.RED);",
      "right" : "serverPortField.setForeground(Color.RED);",
      "info" : "ExpressionStatement[14059-14100]:ExpressionStatement[10110-10151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14160-14227]:Block[10207-10270]"
    }, {
      "left" : "serverPortField.setForeground(Color.RED);",
      "right" : "serverPortField.setForeground(Color.RED);",
      "info" : "ExpressionStatement[14174-14215]:ExpressionStatement[10219-10260]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14614-14623]:MarkerAnnotation[10622-10631]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14632-14638]:Modifier[10638-10644]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14639-14643]:PrimitiveType[10645-10649]"
    }, {
      "left" : "itemStateChanged",
      "right" : "itemStateChanged",
      "info" : "SimpleName[14644-14660]:SimpleName[10650-10666]"
    }, {
      "left" : "ItemEvent e",
      "right" : "ItemEvent e",
      "info" : "SingleVariableDeclaration[14661-14672]:SingleVariableDeclaration[10667-10678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14674-14756]:Block[10680-10758]"
    }, {
      "left" : "config.setUseGUIConfig(serverSettingsCheckbox.isSelected());",
      "right" : "config.setUseGUIConfig(serverSettingsCheckbox.isSelected());",
      "info" : "ExpressionStatement[14686-14746]:ExpressionStatement[10690-10750]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[16754-16761]:Modifier[17282-17289]"
    }, {
      "left" : "String[]",
      "right" : "String[]",
      "info" : "ArrayType[16762-16770]:ArrayType[17290-17298]"
    }, {
      "left" : "getPossibleMotherTongues",
      "right" : "getPossibleMotherTongues",
      "info" : "SimpleName[16771-16795]:SimpleName[17299-17323]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16798-17084]:Block[17326-17612]"
    }, {
      "left" : "final List<String> motherTongues = new ArrayList<>();",
      "right" : "final List<String> motherTongues = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[16804-16857]:VariableDeclarationStatement[17332-17385]"
    }, {
      "left" : "motherTongues.add(NO_MOTHER_TONGUE);",
      "right" : "motherTongues.add(NO_MOTHER_TONGUE);",
      "info" : "ExpressionStatement[16862-16898]:ExpressionStatement[17390-17426]"
    }, {
      "left" : "for (final Language lang : Languages.get())",
      "right" : "for (final Language lang : Languages.get())",
      "info" : "EnhancedForStatement[16903-17012]:EnhancedForStatement[17431-17540]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16947-17012]:Block[17475-17540]"
    }, {
      "left" : "motherTongues.add(lang.getTranslatedName(messages));",
      "right" : "motherTongues.add(lang.getTranslatedName(messages));",
      "info" : "ExpressionStatement[16954-17006]:ExpressionStatement[17482-17534]"
    }, {
      "left" : "return motherTongues.toArray(new String[motherTongues.size()]);",
      "right" : "return motherTongues.toArray(new String[motherTongues.size()]);",
      "info" : "ReturnStatement[17017-17080]:ReturnStatement[17545-17608]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17088-17097]:MarkerAnnotation[17616-17625]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17100-17106]:Modifier[17628-17634]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17107-17111]:PrimitiveType[17635-17639]"
    }, {
      "left" : "actionPerformed",
      "right" : "actionPerformed",
      "info" : "SimpleName[17112-17127]:SimpleName[17640-17655]"
    }, {
      "left" : "ActionEvent e",
      "right" : "ActionEvent e",
      "info" : "SingleVariableDeclaration[17128-17141]:SingleVariableDeclaration[17656-17669]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17143-17379]:Block[17671-17907]"
    }, {
      "left" : "if (e.getSource() == okButton)",
      "right" : "if (e.getSource() == okButton)",
      "info" : "IfStatement[17149-17375]:IfStatement[17677-17903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17180-17295]:Block[17708-17823]"
    }, {
      "left" : "if(original != null)",
      "right" : "if(original != null)",
      "info" : "IfStatement[17188-17257]:IfStatement[17716-17785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17209-17257]:Block[17737-17785]"
    }, {
      "left" : "original.restoreState(config);",
      "right" : "original.restoreState(config);",
      "info" : "ExpressionStatement[17219-17249]:ExpressionStatement[17747-17777]"
    }, {
      "left" : "dialog.setVisible(false);",
      "right" : "dialog.setVisible(false);",
      "info" : "ExpressionStatement[17264-17289]:ExpressionStatement[17792-17817]"
    }, {
      "left" : "if (e.getSource() == cancelButton)",
      "right" : "if (e.getSource() == cancelButton)",
      "info" : "IfStatement[17301-17375]:IfStatement[17829-17903]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17336-17375]:Block[17864-17903]"
    }, {
      "left" : "dialog.setVisible(false);",
      "right" : "dialog.setVisible(false);",
      "info" : "ExpressionStatement[17344-17369]:ExpressionStatement[17872-17897]"
    }, {
      "left" : "@Nullable",
      "right" : "@Nullable",
      "info" : "MarkerAnnotation[17652-17661]:MarkerAnnotation[18180-18189]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17664-17671]:Modifier[18192-18199]"
    }, {
      "left" : "Language",
      "right" : "Language",
      "info" : "SimpleType[17672-17680]:SimpleType[18200-18208]"
    }, {
      "left" : "getLanguageForLocalizedName",
      "right" : "getLanguageForLocalizedName",
      "info" : "SimpleName[17681-17708]:SimpleName[18209-18236]"
    }, {
      "left" : "final String languageName",
      "right" : "final String languageName",
      "info" : "SingleVariableDeclaration[17709-17734]:SingleVariableDeclaration[18237-18262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17736-17919]:Block[18264-18447]"
    }, {
      "left" : "for (final Language element : Languages.get())",
      "right" : "for (final Language element : Languages.get())",
      "info" : "EnhancedForStatement[17742-17898]:EnhancedForStatement[18270-18426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17789-17898]:Block[18317-18426]"
    }, {
      "left" : "if (languageName.equals(element.getTranslatedName(messages)))",
      "right" : "if (languageName.equals(element.getTranslatedName(messages)))",
      "info" : "IfStatement[17797-17892]:IfStatement[18325-18420]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17859-17892]:Block[18387-18420]"
    }, {
      "left" : "return element;",
      "right" : "return element;",
      "info" : "ReturnStatement[17869-17884]:ReturnStatement[18397-18412]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17903-17915]:ReturnStatement[18431-18443]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17923-17929]:Modifier[18451-18457]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[17930-17935]:TYPE_DECLARATION_KIND[18458-18463]"
    }, {
      "left" : "CategoryComparator",
      "right" : "CategoryComparator",
      "info" : "SimpleName[17936-17954]:SimpleName[18464-18482]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[17990-17999]:MarkerAnnotation[18518-18527]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18004-18010]:Modifier[18532-18538]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[18011-18014]:PrimitiveType[18539-18542]"
    }, {
      "left" : "compare",
      "right" : "compare",
      "info" : "SimpleName[18015-18022]:SimpleName[18543-18550]"
    }, {
      "left" : "final Rule r1",
      "right" : "final Rule r1",
      "info" : "SingleVariableDeclaration[18023-18036]:SingleVariableDeclaration[18551-18564]"
    }, {
      "left" : "final Rule r2",
      "right" : "final Rule r2",
      "info" : "SingleVariableDeclaration[18038-18051]:SingleVariableDeclaration[18566-18579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18053-18469]:Block[18581-18997]"
    }, {
      "left" : "final boolean hasCat = r1.getCategory() != null && r2.getCategory() != null;",
      "right" : "final boolean hasCat = r1.getCategory() != null && r2.getCategory() != null;",
      "info" : "VariableDeclarationStatement[18061-18137]:VariableDeclarationStatement[18589-18665]"
    }, {
      "left" : "if (hasCat)",
      "right" : "if (hasCat)",
      "info" : "IfStatement[18144-18388]:IfStatement[18672-18916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18156-18388]:Block[18684-18916]"
    }, {
      "left" : "final int res = r1.getCategory().getName().compareTo(r2.getCategory().getName());",
      "right" : "final int res = r1.getCategory().getName().compareTo(r2.getCategory().getName());",
      "info" : "VariableDeclarationStatement[18166-18247]:VariableDeclarationStatement[18694-18775]"
    }, {
      "left" : "if (res == 0)",
      "right" : "if (res == 0)",
      "info" : "IfStatement[18256-18360]:IfStatement[18784-18888]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18270-18360]:Block[18798-18888]"
    }, {
      "left" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "right" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "info" : "ReturnStatement[18282-18350]:ReturnStatement[18810-18878]"
    }, {
      "left" : "return res;",
      "right" : "return res;",
      "info" : "ReturnStatement[18369-18380]:ReturnStatement[18897-18908]"
    }, {
      "left" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "right" : "return r1.getDescription().compareToIgnoreCase(r2.getDescription());",
      "info" : "ReturnStatement[18395-18463]:ReturnStatement[18923-18991]"
    } ]
  },
  "interFileMappings" : { }
}