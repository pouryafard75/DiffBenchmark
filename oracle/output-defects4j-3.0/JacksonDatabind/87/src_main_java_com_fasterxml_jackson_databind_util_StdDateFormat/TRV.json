{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public final static String DATE_FORMAT_STR_ISO8601 = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";",
      "right" : "public final static String DATE_FORMAT_STR_ISO8601 = \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\";",
      "info" : "FieldDeclaration[963-1225]:FieldDeclaration[963-1225]"
    }, {
      "left" : "protected final static String DATE_FORMAT_STR_ISO8601_Z = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\";",
      "right" : "protected final static String DATE_FORMAT_STR_ISO8601_Z = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\";",
      "info" : "FieldDeclaration[1231-1425]:FieldDeclaration[1231-1425]"
    }, {
      "left" : "protected final static String DATE_FORMAT_STR_PLAIN = \"yyyy-MM-dd\";",
      "right" : "protected final static String DATE_FORMAT_STR_PLAIN = \"yyyy-MM-dd\";",
      "info" : "FieldDeclaration[1540-1672]:FieldDeclaration[1635-1767]"
    }, {
      "left" : "protected final static String DATE_FORMAT_STR_RFC1123 = \"EEE, dd MMM yyyy HH:mm:ss zzz\";",
      "right" : "protected final static String DATE_FORMAT_STR_RFC1123 = \"EEE, dd MMM yyyy HH:mm:ss zzz\";",
      "info" : "FieldDeclaration[1678-1867]:FieldDeclaration[1773-1962]"
    }, {
      "left" : "private final static TimeZone DEFAULT_TIMEZONE;",
      "right" : "private final static TimeZone DEFAULT_TIMEZONE;",
      "info" : "FieldDeclaration[2158-2332]:FieldDeclaration[2292-2466]"
    }, {
      "left" : "private final static Locale DEFAULT_LOCALE = Locale.US;",
      "right" : "private final static Locale DEFAULT_LOCALE = Locale.US;",
      "info" : "FieldDeclaration[2426-2481]:FieldDeclaration[2560-2615]"
    }, {
      "left" : "protected final static DateFormat DATE_FORMAT_RFC1123;",
      "right" : "protected final static DateFormat DATE_FORMAT_RFC1123;",
      "info" : "FieldDeclaration[2487-2541]:FieldDeclaration[2621-2675]"
    }, {
      "left" : "protected final static DateFormat DATE_FORMAT_ISO8601;",
      "right" : "protected final static DateFormat DATE_FORMAT_ISO8601;",
      "info" : "FieldDeclaration[2547-2601]:FieldDeclaration[2681-2735]"
    }, {
      "left" : "protected final static DateFormat DATE_FORMAT_ISO8601_Z;",
      "right" : "protected final static DateFormat DATE_FORMAT_ISO8601_Z;",
      "info" : "FieldDeclaration[2606-2662]:FieldDeclaration[2740-2796]"
    }, {
      "left" : "protected final static DateFormat DATE_FORMAT_PLAIN;",
      "right" : "protected final static DateFormat DATE_FORMAT_PLAIN;",
      "info" : "FieldDeclaration[2668-2720]:FieldDeclaration[2883-2935]"
    }, {
      "left" : "public final static StdDateFormat instance = new StdDateFormat();",
      "right" : "public final static StdDateFormat instance = new StdDateFormat();",
      "info" : "FieldDeclaration[3702-3870]:FieldDeclaration[4087-4255]"
    }, {
      "left" : "protected transient TimeZone _timezone;",
      "right" : "protected transient TimeZone _timezone;",
      "info" : "FieldDeclaration[3880-4046]:FieldDeclaration[4265-4431]"
    }, {
      "left" : "protected final Locale _locale;",
      "right" : "protected final Locale _locale;",
      "info" : "FieldDeclaration[4052-4083]:FieldDeclaration[4437-4468]"
    }, {
      "left" : "protected Boolean _lenient;",
      "right" : "protected Boolean _lenient;",
      "info" : "FieldDeclaration[4089-4306]:FieldDeclaration[4474-4691]"
    }, {
      "left" : "protected transient DateFormat _formatRFC1123;",
      "right" : "protected transient DateFormat _formatRFC1123;",
      "info" : "FieldDeclaration[4316-4362]:FieldDeclaration[4701-4747]"
    }, {
      "left" : "protected transient DateFormat _formatISO8601;",
      "right" : "protected transient DateFormat _formatISO8601;",
      "info" : "FieldDeclaration[4367-4413]:FieldDeclaration[4752-4798]"
    }, {
      "left" : "protected transient DateFormat _formatISO8601_z;",
      "right" : "protected transient DateFormat _formatISO8601_z;",
      "info" : "FieldDeclaration[4418-4466]:FieldDeclaration[4803-4851]"
    }, {
      "left" : "protected transient DateFormat _formatPlain;",
      "right" : "protected transient DateFormat _formatPlain;",
      "info" : "FieldDeclaration[4471-4515]:FieldDeclaration[4922-4966]"
    }, {
      "left" : "public StdDateFormat()",
      "right" : "public StdDateFormat()",
      "info" : "MethodDeclaration[4723-4787]:MethodDeclaration[5174-5238]"
    }, {
      "left" : "// since 2.7\n    public StdDateFormat(TimeZone tz, Locale loc)",
      "right" : "// since 2.7\n    public StdDateFormat(TimeZone tz, Locale loc)",
      "info" : "MethodDeclaration[4793-4922]:MethodDeclaration[5244-5373]"
    }, {
      "left" : "protected StdDateFormat(TimeZone tz, Locale loc, Boolean lenient)",
      "right" : "protected StdDateFormat(TimeZone tz, Locale loc, Boolean lenient)",
      "info" : "MethodDeclaration[4928-5076]:MethodDeclaration[5379-5527]"
    }, {
      "left" : "public static TimeZone getDefaultTimeZone()",
      "right" : "public static TimeZone getDefaultTimeZone()",
      "info" : "MethodDeclaration[5086-5170]:MethodDeclaration[5537-5621]"
    }, {
      "left" : "public StdDateFormat withTimeZone(TimeZone tz)",
      "right" : "public StdDateFormat withTimeZone(TimeZone tz)",
      "info" : "MethodDeclaration[5180-5615]:MethodDeclaration[5631-6066]"
    }, {
      "left" : "public StdDateFormat withLocale(Locale loc)",
      "right" : "public StdDateFormat withLocale(Locale loc)",
      "info" : "MethodDeclaration[5621-5802]:MethodDeclaration[6072-6253]"
    }, {
      "left" : "public StdDateFormat clone()",
      "right" : "public StdDateFormat clone()",
      "info" : "MethodDeclaration[5812-6075]:MethodDeclaration[6263-6526]"
    }, {
      "left" : "public static DateFormat getISO8601Format(TimeZone tz)",
      "right" : "public static DateFormat getISO8601Format(TimeZone tz)",
      "info" : "MethodDeclaration[6081-6288]:MethodDeclaration[6532-6739]"
    }, {
      "left" : "public static DateFormat getISO8601Format(TimeZone tz, Locale loc)",
      "right" : "public static DateFormat getISO8601Format(TimeZone tz, Locale loc)",
      "info" : "MethodDeclaration[6294-6656]:MethodDeclaration[6745-7107]"
    }, {
      "left" : "public static DateFormat getRFC1123Format(TimeZone tz, Locale loc)",
      "right" : "public static DateFormat getRFC1123Format(TimeZone tz, Locale loc)",
      "info" : "MethodDeclaration[6662-7032]:MethodDeclaration[7113-7483]"
    }, {
      "left" : "public static DateFormat getRFC1123Format(TimeZone tz)",
      "right" : "public static DateFormat getRFC1123Format(TimeZone tz)",
      "info" : "MethodDeclaration[7038-7245]:MethodDeclaration[7489-7696]"
    }, {
      "left" : "// since 2.6\n    public TimeZone getTimeZone()",
      "right" : "// since 2.6\n    public TimeZone getTimeZone()",
      "info" : "MethodDeclaration[7428-7518]:MethodDeclaration[7879-7969]"
    }, {
      "left" : "public void setTimeZone(TimeZone tz)",
      "right" : "public void setTimeZone(TimeZone tz)",
      "info" : "MethodDeclaration[7524-7832]:MethodDeclaration[7975-8283]"
    }, {
      "left" : "// since 2.7\n    public void setLenient(boolean enabled)",
      "right" : "// since 2.7\n    public void setLenient(boolean enabled)",
      "info" : "MethodDeclaration[7838-8293]:MethodDeclaration[8289-8744]"
    }, {
      "left" : "// since 2.7\n    public boolean isLenient()",
      "right" : "// since 2.7\n    public boolean isLenient()",
      "info" : "MethodDeclaration[8299-8510]:MethodDeclaration[8750-8961]"
    }, {
      "left" : "public Date parse(String dateStr) throws ParseException",
      "right" : "public Date parse(String dateStr) throws ParseException",
      "info" : "MethodDeclaration[8687-10472]:MethodDeclaration[9138-10923]"
    }, {
      "left" : "public Date parse(String dateStr, ParsePosition pos)",
      "right" : "public Date parse(String dateStr, ParsePosition pos)",
      "info" : "MethodDeclaration[10478-11677]:MethodDeclaration[10929-12128]"
    }, {
      "left" : "public StringBuffer format(Date date, StringBuffer toAppendTo,\n            FieldPosition fieldPosition)",
      "right" : "public StringBuffer format(Date date, StringBuffer toAppendTo,\n            FieldPosition fieldPosition)",
      "info" : "MethodDeclaration[11858-12245]:MethodDeclaration[12309-12696]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[12420-12694]:MethodDeclaration[12871-13145]"
    }, {
      "left" : "// since 2.7[.2], as per [databind#1130]\n    public boolean equals(Object o)",
      "right" : "// since 2.7[.2], as per [databind#1130]\n    public boolean equals(Object o)",
      "info" : "MethodDeclaration[12700-12822]:MethodDeclaration[13151-13273]"
    }, {
      "left" : "// since 2.7[.2], as per [databind#1130]\n    public int hashCode()",
      "right" : "// since 2.7[.2], as per [databind#1130]\n    public int hashCode()",
      "info" : "MethodDeclaration[12828-12958]:MethodDeclaration[13279-13409]"
    }, {
      "left" : "protected boolean looksLikeISO8601(String dateStr)",
      "right" : "protected boolean looksLikeISO8601(String dateStr)",
      "info" : "MethodDeclaration[13130-13569]:MethodDeclaration[13581-14020]"
    }, {
      "left" : "protected Date parseAsRFC1123(String dateStr, ParsePosition pos)",
      "right" : "protected Date parseAsRFC1123(String dateStr, ParsePosition pos)",
      "info" : "MethodDeclaration[19265-19579]:MethodDeclaration[19699-20013]"
    }, {
      "left" : "private final static boolean hasTimeZone(String str)",
      "right" : "private final static boolean hasTimeZone(String str)",
      "info" : "MethodDeclaration[19585-20072]:MethodDeclaration[20019-20506]"
    }, {
      "left" : "private final static DateFormat _cloneFormat(DateFormat df, String format,\n            TimeZone tz, Locale loc, Boolean lenient)",
      "right" : "private final static DateFormat _cloneFormat(DateFormat df, String format,\n            TimeZone tz, Locale loc, Boolean lenient)",
      "info" : "MethodDeclaration[20078-20639]:MethodDeclaration[20512-21073]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4723-4729]:Modifier[5174-5180]"
    }, {
      "left" : "StdDateFormat",
      "right" : "StdDateFormat",
      "info" : "SimpleName[4730-4743]:SimpleName[5181-5194]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4746-4787]:Block[5197-5238]"
    }, {
      "left" : "_locale = DEFAULT_LOCALE;",
      "right" : "_locale = DEFAULT_LOCALE;",
      "info" : "ExpressionStatement[4756-4781]:ExpressionStatement[5207-5232]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[4793-4804]:MarkerAnnotation[5244-5255]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4822-4828]:Modifier[5273-5279]"
    }, {
      "left" : "StdDateFormat",
      "right" : "StdDateFormat",
      "info" : "SimpleName[4829-4842]:SimpleName[5280-5293]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[4843-4854]:SingleVariableDeclaration[5294-5305]"
    }, {
      "left" : "Locale loc",
      "right" : "Locale loc",
      "info" : "SingleVariableDeclaration[4856-4866]:SingleVariableDeclaration[5307-5317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4868-4922]:Block[5319-5373]"
    }, {
      "left" : "_timezone = tz;",
      "right" : "_timezone = tz;",
      "info" : "ExpressionStatement[4878-4893]:ExpressionStatement[5329-5344]"
    }, {
      "left" : "_locale = loc;",
      "right" : "_locale = loc;",
      "info" : "ExpressionStatement[4902-4916]:ExpressionStatement[5353-5367]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4928-4937]:Modifier[5379-5388]"
    }, {
      "left" : "StdDateFormat",
      "right" : "StdDateFormat",
      "info" : "SimpleName[4938-4951]:SimpleName[5389-5402]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[4952-4963]:SingleVariableDeclaration[5403-5414]"
    }, {
      "left" : "Locale loc",
      "right" : "Locale loc",
      "info" : "SingleVariableDeclaration[4965-4975]:SingleVariableDeclaration[5416-5426]"
    }, {
      "left" : "Boolean lenient",
      "right" : "Boolean lenient",
      "info" : "SingleVariableDeclaration[4977-4992]:SingleVariableDeclaration[5428-5443]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4994-5076]:Block[5445-5527]"
    }, {
      "left" : "_timezone = tz;",
      "right" : "_timezone = tz;",
      "info" : "ExpressionStatement[5004-5019]:ExpressionStatement[5455-5470]"
    }, {
      "left" : "_locale = loc;",
      "right" : "_locale = loc;",
      "info" : "ExpressionStatement[5028-5042]:ExpressionStatement[5479-5493]"
    }, {
      "left" : "_lenient = lenient;",
      "right" : "_lenient = lenient;",
      "info" : "ExpressionStatement[5051-5070]:ExpressionStatement[5502-5521]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5086-5092]:Modifier[5537-5543]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5093-5099]:Modifier[5544-5550]"
    }, {
      "left" : "TimeZone",
      "right" : "TimeZone",
      "info" : "SimpleType[5100-5108]:SimpleType[5551-5559]"
    }, {
      "left" : "getDefaultTimeZone",
      "right" : "getDefaultTimeZone",
      "info" : "SimpleName[5109-5127]:SimpleName[5560-5578]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5130-5170]:Block[5581-5621]"
    }, {
      "left" : "return DEFAULT_TIMEZONE;",
      "right" : "return DEFAULT_TIMEZONE;",
      "info" : "ReturnStatement[5140-5164]:ReturnStatement[5591-5615]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5341-5347]:Modifier[5792-5798]"
    }, {
      "left" : "StdDateFormat",
      "right" : "StdDateFormat",
      "info" : "SimpleType[5348-5361]:SimpleType[5799-5812]"
    }, {
      "left" : "withTimeZone",
      "right" : "withTimeZone",
      "info" : "SimpleName[5362-5374]:SimpleName[5813-5825]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[5375-5386]:SingleVariableDeclaration[5826-5837]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5388-5615]:Block[5839-6066]"
    }, {
      "left" : "if (tz == null)",
      "right" : "if (tz == null)",
      "info" : "IfStatement[5398-5460]:IfStatement[5849-5911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5414-5460]:Block[5865-5911]"
    }, {
      "left" : "tz = DEFAULT_TIMEZONE;",
      "right" : "tz = DEFAULT_TIMEZONE;",
      "info" : "ExpressionStatement[5428-5450]:ExpressionStatement[5879-5901]"
    }, {
      "left" : "if ((tz == _timezone) || tz.equals(_timezone))",
      "right" : "if ((tz == _timezone) || tz.equals(_timezone))",
      "info" : "IfStatement[5469-5552]:IfStatement[5920-6003]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5516-5552]:Block[5967-6003]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5530-5542]:ReturnStatement[5981-5993]"
    }, {
      "left" : "return new StdDateFormat(tz, _locale, _lenient);",
      "right" : "return new StdDateFormat(tz, _locale, _lenient);",
      "info" : "ReturnStatement[5561-5609]:ReturnStatement[6012-6060]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5621-5627]:Modifier[6072-6078]"
    }, {
      "left" : "StdDateFormat",
      "right" : "StdDateFormat",
      "info" : "SimpleType[5628-5641]:SimpleType[6079-6092]"
    }, {
      "left" : "withLocale",
      "right" : "withLocale",
      "info" : "SimpleName[5642-5652]:SimpleName[6093-6103]"
    }, {
      "left" : "Locale loc",
      "right" : "Locale loc",
      "info" : "SingleVariableDeclaration[5653-5663]:SingleVariableDeclaration[6104-6114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5665-5802]:Block[6116-6253]"
    }, {
      "left" : "if (loc.equals(_locale))",
      "right" : "if (loc.equals(_locale))",
      "info" : "IfStatement[5675-5736]:IfStatement[6126-6187]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5700-5736]:Block[6151-6187]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[5714-5726]:ReturnStatement[6165-6177]"
    }, {
      "left" : "return new StdDateFormat(_timezone, loc, _lenient);",
      "right" : "return new StdDateFormat(_timezone, loc, _lenient);",
      "info" : "ReturnStatement[5745-5796]:ReturnStatement[6196-6247]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5812-5821]:MarkerAnnotation[6263-6272]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5826-5832]:Modifier[6277-6283]"
    }, {
      "left" : "StdDateFormat",
      "right" : "StdDateFormat",
      "info" : "SimpleType[5833-5846]:SimpleType[6284-6297]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[5847-5852]:SimpleName[6298-6303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5855-6075]:Block[6306-6526]"
    }, {
      "left" : "return new StdDateFormat(_timezone, _locale, _lenient);",
      "right" : "return new StdDateFormat(_timezone, _locale, _lenient);",
      "info" : "ReturnStatement[6014-6069]:ReturnStatement[6465-6520]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[6157-6168]:MarkerAnnotation[6608-6619]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6173-6179]:Modifier[6624-6630]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6180-6186]:Modifier[6631-6637]"
    }, {
      "left" : "DateFormat",
      "right" : "DateFormat",
      "info" : "SimpleType[6187-6197]:SimpleType[6638-6648]"
    }, {
      "left" : "getISO8601Format",
      "right" : "getISO8601Format",
      "info" : "SimpleName[6198-6214]:SimpleName[6649-6665]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[6215-6226]:SingleVariableDeclaration[6666-6677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6228-6288]:Block[6679-6739]"
    }, {
      "left" : "return getISO8601Format(tz, DEFAULT_LOCALE);",
      "right" : "return getISO8601Format(tz, DEFAULT_LOCALE);",
      "info" : "ReturnStatement[6238-6282]:ReturnStatement[6689-6733]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6492-6498]:Modifier[6943-6949]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6499-6505]:Modifier[6950-6956]"
    }, {
      "left" : "DateFormat",
      "right" : "DateFormat",
      "info" : "SimpleType[6506-6516]:SimpleType[6957-6967]"
    }, {
      "left" : "getISO8601Format",
      "right" : "getISO8601Format",
      "info" : "SimpleName[6517-6533]:SimpleName[6968-6984]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[6534-6545]:SingleVariableDeclaration[6985-6996]"
    }, {
      "left" : "Locale loc",
      "right" : "Locale loc",
      "info" : "SingleVariableDeclaration[6547-6557]:SingleVariableDeclaration[6998-7008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6559-6656]:Block[7010-7107]"
    }, {
      "left" : "return _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, tz, loc, null);",
      "right" : "return _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, tz, loc, null);",
      "info" : "ReturnStatement[6569-6650]:ReturnStatement[7020-7101]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6852-6858]:Modifier[7303-7309]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6859-6865]:Modifier[7310-7316]"
    }, {
      "left" : "DateFormat",
      "right" : "DateFormat",
      "info" : "SimpleType[6866-6876]:SimpleType[7317-7327]"
    }, {
      "left" : "getRFC1123Format",
      "right" : "getRFC1123Format",
      "info" : "SimpleName[6877-6893]:SimpleName[7328-7344]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[6894-6905]:SingleVariableDeclaration[7345-7356]"
    }, {
      "left" : "Locale loc",
      "right" : "Locale loc",
      "info" : "SingleVariableDeclaration[6907-6917]:SingleVariableDeclaration[7358-7368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6919-7032]:Block[7370-7483]"
    }, {
      "left" : "return _cloneFormat(DATE_FORMAT_RFC1123, DATE_FORMAT_STR_RFC1123,\n                tz, loc, null);",
      "right" : "return _cloneFormat(DATE_FORMAT_RFC1123, DATE_FORMAT_STR_RFC1123,\n                tz, loc, null);",
      "info" : "ReturnStatement[6929-7026]:ReturnStatement[7380-7477]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[7114-7125]:MarkerAnnotation[7565-7576]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7130-7136]:Modifier[7581-7587]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7137-7143]:Modifier[7588-7594]"
    }, {
      "left" : "DateFormat",
      "right" : "DateFormat",
      "info" : "SimpleType[7144-7154]:SimpleType[7595-7605]"
    }, {
      "left" : "getRFC1123Format",
      "right" : "getRFC1123Format",
      "info" : "SimpleName[7155-7171]:SimpleName[7606-7622]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[7172-7183]:SingleVariableDeclaration[7623-7634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7185-7245]:Block[7636-7696]"
    }, {
      "left" : "return getRFC1123Format(tz, DEFAULT_LOCALE);",
      "right" : "return getRFC1123Format(tz, DEFAULT_LOCALE);",
      "info" : "ReturnStatement[7195-7239]:ReturnStatement[7646-7690]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7428-7437]:MarkerAnnotation[7879-7888]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7455-7461]:Modifier[7906-7912]"
    }, {
      "left" : "TimeZone",
      "right" : "TimeZone",
      "info" : "SimpleType[7462-7470]:SimpleType[7913-7921]"
    }, {
      "left" : "getTimeZone",
      "right" : "getTimeZone",
      "info" : "SimpleName[7471-7482]:SimpleName[7922-7933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7485-7518]:Block[7936-7969]"
    }, {
      "left" : "return _timezone;",
      "right" : "return _timezone;",
      "info" : "ReturnStatement[7495-7512]:ReturnStatement[7946-7963]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7524-7533]:MarkerAnnotation[7975-7984]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7538-7544]:Modifier[7989-7995]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7545-7549]:PrimitiveType[7996-8000]"
    }, {
      "left" : "setTimeZone",
      "right" : "setTimeZone",
      "info" : "SimpleName[7550-7561]:SimpleName[8001-8012]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[7562-7573]:SingleVariableDeclaration[8013-8024]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7579-7832]:Block[8030-8283]"
    }, {
      "left" : "if (!tz.equals(_timezone))",
      "right" : "if (!tz.equals(_timezone))",
      "info" : "IfStatement[7731-7826]:IfStatement[8182-8277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7758-7826]:Block[8209-8277]"
    }, {
      "left" : "_clearFormats();",
      "right" : "_clearFormats();",
      "info" : "ExpressionStatement[7772-7788]:ExpressionStatement[8223-8239]"
    }, {
      "left" : "_timezone = tz;",
      "right" : "_timezone = tz;",
      "info" : "ExpressionStatement[7801-7816]:ExpressionStatement[8252-8267]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8012-8021]:MarkerAnnotation[8463-8472]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8039-8045]:Modifier[8490-8496]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8046-8050]:PrimitiveType[8497-8501]"
    }, {
      "left" : "setLenient",
      "right" : "setLenient",
      "info" : "SimpleName[8051-8061]:SimpleName[8502-8512]"
    }, {
      "left" : "boolean enabled",
      "right" : "boolean enabled",
      "info" : "SingleVariableDeclaration[8062-8077]:SingleVariableDeclaration[8513-8528]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8079-8293]:Block[8530-8744]"
    }, {
      "left" : "Boolean newValue = enabled;",
      "right" : "Boolean newValue = enabled;",
      "info" : "VariableDeclarationStatement[8089-8116]:VariableDeclarationStatement[8540-8567]"
    }, {
      "left" : "if (_lenient != newValue)",
      "right" : "if (_lenient != newValue)",
      "info" : "IfStatement[8125-8287]:IfStatement[8576-8738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8151-8287]:Block[8602-8738]"
    }, {
      "left" : "_lenient = newValue;",
      "right" : "_lenient = newValue;",
      "info" : "ExpressionStatement[8165-8185]:ExpressionStatement[8616-8636]"
    }, {
      "left" : "_clearFormats();",
      "right" : "_clearFormats();",
      "info" : "ExpressionStatement[8261-8277]:ExpressionStatement[8712-8728]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8299-8308]:MarkerAnnotation[8750-8759]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8326-8332]:Modifier[8777-8783]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[8333-8340]:PrimitiveType[8784-8791]"
    }, {
      "left" : "isLenient",
      "right" : "isLenient",
      "info" : "SimpleName[8341-8350]:SimpleName[8792-8801]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8353-8510]:Block[8804-8961]"
    }, {
      "left" : "if (_lenient == null)",
      "right" : "if (_lenient == null)",
      "info" : "IfStatement[8363-8464]:IfStatement[8814-8915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8385-8464]:Block[8836-8915]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[8442-8454]:ReturnStatement[8893-8905]"
    }, {
      "left" : "return _lenient.booleanValue();",
      "right" : "return _lenient.booleanValue();",
      "info" : "ReturnStatement[8473-8504]:ReturnStatement[8924-8955]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8687-8696]:MarkerAnnotation[9138-9147]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8701-8707]:Modifier[9152-9158]"
    }, {
      "left" : "Date",
      "right" : "Date",
      "info" : "SimpleType[8708-8712]:SimpleType[9159-9163]"
    }, {
      "left" : "parse",
      "right" : "parse",
      "info" : "SimpleName[8713-8718]:SimpleName[9164-9169]"
    }, {
      "left" : "String dateStr",
      "right" : "String dateStr",
      "info" : "SingleVariableDeclaration[8719-8733]:SingleVariableDeclaration[9170-9184]"
    }, {
      "left" : "ParseException",
      "right" : "ParseException",
      "info" : "SimpleType[8742-8756]:SimpleType[9193-9207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8761-10472]:Block[9212-10923]"
    }, {
      "left" : "dateStr = dateStr.trim();",
      "right" : "dateStr = dateStr.trim();",
      "info" : "ExpressionStatement[8771-8796]:ExpressionStatement[9222-9247]"
    }, {
      "left" : "ParsePosition pos = new ParsePosition(0);",
      "right" : "ParsePosition pos = new ParsePosition(0);",
      "info" : "VariableDeclarationStatement[8805-8846]:VariableDeclarationStatement[9256-9297]"
    }, {
      "left" : "Date dt;",
      "right" : "Date dt;",
      "info" : "VariableDeclarationStatement[8856-8864]:VariableDeclarationStatement[9307-9315]"
    }, {
      "left" : "if (looksLikeISO8601(dateStr))",
      "right" : "if (looksLikeISO8601(dateStr))",
      "info" : "IfStatement[8874-9909]:IfStatement[9325-10360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8905-8994]:Block[9356-9445]"
    }, {
      "left" : "dt = parseAsISO8601(dateStr, pos, true);",
      "right" : "dt = parseAsISO8601(dateStr, pos, true);",
      "info" : "ExpressionStatement[8944-8984]:ExpressionStatement[9395-9435]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9000-9909]:Block[9451-10360]"
    }, {
      "left" : "int i = dateStr.length();",
      "right" : "int i = dateStr.length();",
      "info" : "VariableDeclarationStatement[9075-9100]:VariableDeclarationStatement[9526-9551]"
    }, {
      "left" : "while (--i >= 0)",
      "right" : "while (--i >= 0)",
      "info" : "WhileStatement[9113-9462]:WhileStatement[9564-9913]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9130-9462]:Block[9581-9913]"
    }, {
      "left" : "char ch = dateStr.charAt(i);",
      "right" : "char ch = dateStr.charAt(i);",
      "info" : "VariableDeclarationStatement[9148-9176]:VariableDeclarationStatement[9599-9627]"
    }, {
      "left" : "if (ch < '0' || ch > '9')",
      "right" : "if (ch < '0' || ch > '9')",
      "info" : "IfStatement[9193-9448]:IfStatement[9644-9899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9219-9448]:Block[9670-9899]"
    }, {
      "left" : "if (i > 0 || ch != '-')",
      "right" : "if (i > 0 || ch != '-')",
      "info" : "IfStatement[9352-9430]:IfStatement[9803-9881]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9376-9430]:Block[9827-9881]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9402-9408]:BreakStatement[9853-9859]"
    }, {
      "left" : "if ((i < 0)\n                // let's just assume negative numbers are fine (can't be RFC-1123 anyway); check length for positive\n                    && (dateStr.charAt(0) == '-' || NumberInput.inLongRange(dateStr, false)))",
      "right" : "if ((i < 0)\n                // let's just assume negative numbers are fine (can't be RFC-1123 anyway); check length for positive\n                    && (dateStr.charAt(0) == '-' || NumberInput.inLongRange(dateStr, false)))",
      "info" : "IfStatement[9475-9899]:IfStatement[9926-10350]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9698-9769]:Block[10149-10220]"
    }, {
      "left" : "dt = new Date(Long.parseLong(dateStr));",
      "right" : "dt = new Date(Long.parseLong(dateStr));",
      "info" : "ExpressionStatement[9716-9755]:ExpressionStatement[10167-10206]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9775-9899]:Block[10226-10350]"
    }, {
      "left" : "dt = parseAsRFC1123(dateStr, pos);",
      "right" : "dt = parseAsRFC1123(dateStr, pos);",
      "info" : "ExpressionStatement[9851-9885]:ExpressionStatement[10302-10336]"
    }, {
      "left" : "if (dt != null)",
      "right" : "if (dt != null)",
      "info" : "IfStatement[9918-9968]:IfStatement[10369-10419]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9934-9968]:Block[10385-10419]"
    }, {
      "left" : "return dt;",
      "right" : "return dt;",
      "info" : "ReturnStatement[9948-9958]:ReturnStatement[10399-10409]"
    }, {
      "left" : "StringBuilder sb = new StringBuilder();",
      "right" : "StringBuilder sb = new StringBuilder();",
      "info" : "VariableDeclarationStatement[9978-10017]:VariableDeclarationStatement[10429-10468]"
    }, {
      "left" : "for (String f : ALL_FORMATS)",
      "right" : "for (String f : ALL_FORMATS)",
      "info" : "EnhancedForStatement[10026-10231]:EnhancedForStatement[10477-10682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10055-10231]:Block[10506-10682]"
    }, {
      "left" : "if (sb.length() > 0)",
      "right" : "if (sb.length() > 0)",
      "info" : "IfStatement[10069-10195]:IfStatement[10520-10646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10090-10142]:Block[10541-10593]"
    }, {
      "left" : "sb.append(\"\\\", \\\"\");",
      "right" : "sb.append(\"\\\", \\\"\");",
      "info" : "ExpressionStatement[10108-10128]:ExpressionStatement[10559-10579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10148-10195]:Block[10599-10646]"
    }, {
      "left" : "sb.append('\"');",
      "right" : "sb.append('\"');",
      "info" : "ExpressionStatement[10166-10181]:ExpressionStatement[10617-10632]"
    }, {
      "left" : "sb.append(f);",
      "right" : "sb.append(f);",
      "info" : "ExpressionStatement[10208-10221]:ExpressionStatement[10659-10672]"
    }, {
      "left" : "sb.append('\"');",
      "right" : "sb.append('\"');",
      "info" : "ExpressionStatement[10240-10255]:ExpressionStatement[10691-10706]"
    }, {
      "left" : "throw new ParseException\n            (String.format(\"Can not parse date \\\"%s\\\": not compatible with any of standard forms (%s)\",\n                           dateStr, sb.toString()), pos.getErrorIndex());",
      "right" : "throw new ParseException\n            (String.format(\"Can not parse date \\\"%s\\\": not compatible with any of standard forms (%s)\",\n                           dateStr, sb.toString()), pos.getErrorIndex());",
      "info" : "ThrowStatement[10264-10466]:ThrowStatement[10715-10917]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10478-10487]:MarkerAnnotation[10929-10938]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10492-10498]:Modifier[10943-10949]"
    }, {
      "left" : "Date",
      "right" : "Date",
      "info" : "SimpleType[10499-10503]:SimpleType[10950-10954]"
    }, {
      "left" : "parse",
      "right" : "parse",
      "info" : "SimpleName[10504-10509]:SimpleName[10955-10960]"
    }, {
      "left" : "String dateStr",
      "right" : "String dateStr",
      "info" : "SingleVariableDeclaration[10510-10524]:SingleVariableDeclaration[10961-10975]"
    }, {
      "left" : "ParsePosition pos",
      "right" : "ParsePosition pos",
      "info" : "SingleVariableDeclaration[10526-10543]:SingleVariableDeclaration[10977-10994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10549-11677]:Block[11000-12128]"
    }, {
      "left" : "if (looksLikeISO8601(dateStr))",
      "right" : "if (looksLikeISO8601(dateStr))",
      "info" : "IfStatement[10559-10842]:IfStatement[11010-11293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10590-10842]:Block[11041-11293]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10629-10832]:TryStatement[11080-11283]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10633-10708]:Block[11084-11159]"
    }, {
      "left" : "return parseAsISO8601(dateStr, pos, false);",
      "right" : "return parseAsISO8601(dateStr, pos, false);",
      "info" : "ReturnStatement[10651-10694]:ReturnStatement[11102-11145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10734-10832]:Block[11185-11283]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[10806-10818]:ReturnStatement[11257-11269]"
    }, {
      "left" : "int i = dateStr.length();",
      "right" : "int i = dateStr.length();",
      "info" : "VariableDeclarationStatement[10908-10933]:VariableDeclarationStatement[11359-11384]"
    }, {
      "left" : "while (--i >= 0)",
      "right" : "while (--i >= 0)",
      "info" : "WhileStatement[10942-11259]:WhileStatement[11393-11710]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10959-11259]:Block[11410-11710]"
    }, {
      "left" : "char ch = dateStr.charAt(i);",
      "right" : "char ch = dateStr.charAt(i);",
      "info" : "VariableDeclarationStatement[10973-11001]:VariableDeclarationStatement[11424-11452]"
    }, {
      "left" : "if (ch < '0' || ch > '9')",
      "right" : "if (ch < '0' || ch > '9')",
      "info" : "IfStatement[11014-11249]:IfStatement[11465-11700]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11040-11249]:Block[11491-11700]"
    }, {
      "left" : "if (i > 0 || ch != '-')",
      "right" : "if (i > 0 || ch != '-')",
      "info" : "IfStatement[11165-11235]:IfStatement[11616-11686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11189-11235]:Block[11640-11686]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[11211-11217]:BreakStatement[11662-11668]"
    }, {
      "left" : "if (i < 0)",
      "right" : "if (i < 0)",
      "info" : "IfStatement[11268-11576]:IfStatement[11719-12027]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11279-11576]:Block[11730-12027]"
    }, {
      "left" : "if (dateStr.charAt(0) == '-' || NumberInput.inLongRange(dateStr, false))",
      "right" : "if (dateStr.charAt(0) == '-' || NumberInput.inLongRange(dateStr, false))",
      "info" : "IfStatement[11420-11566]:IfStatement[11871-12017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11493-11566]:Block[11944-12017]"
    }, {
      "left" : "return new Date(Long.parseLong(dateStr));",
      "right" : "return new Date(Long.parseLong(dateStr));",
      "info" : "ReturnStatement[11511-11552]:ReturnStatement[11962-12003]"
    }, {
      "left" : "return parseAsRFC1123(dateStr, pos);",
      "right" : "return parseAsRFC1123(dateStr, pos);",
      "info" : "ReturnStatement[11635-11671]:ReturnStatement[12086-12122]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11858-11867]:MarkerAnnotation[12309-12318]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11872-11878]:Modifier[12323-12329]"
    }, {
      "left" : "StringBuffer",
      "right" : "StringBuffer",
      "info" : "SimpleType[11879-11891]:SimpleType[12330-12342]"
    }, {
      "left" : "format",
      "right" : "format",
      "info" : "SimpleName[11892-11898]:SimpleName[12343-12349]"
    }, {
      "left" : "Date date",
      "right" : "Date date",
      "info" : "SingleVariableDeclaration[11899-11908]:SingleVariableDeclaration[12350-12359]"
    }, {
      "left" : "StringBuffer toAppendTo",
      "right" : "StringBuffer toAppendTo",
      "info" : "SingleVariableDeclaration[11910-11933]:SingleVariableDeclaration[12361-12384]"
    }, {
      "left" : "FieldPosition fieldPosition",
      "right" : "FieldPosition fieldPosition",
      "info" : "SingleVariableDeclaration[11947-11974]:SingleVariableDeclaration[12398-12425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11980-12245]:Block[12431-12696]"
    }, {
      "left" : "if (_formatISO8601 == null)",
      "right" : "if (_formatISO8601 == null)",
      "info" : "IfStatement[11990-12168]:IfStatement[12441-12619]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12018-12168]:Block[12469-12619]"
    }, {
      "left" : "_formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601,\n                    _timezone, _locale, _lenient);",
      "right" : "_formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601,\n                    _timezone, _locale, _lenient);",
      "info" : "ExpressionStatement[12032-12158]:ExpressionStatement[12483-12609]"
    }, {
      "left" : "return _formatISO8601.format(date, toAppendTo, fieldPosition);",
      "right" : "return _formatISO8601.format(date, toAppendTo, fieldPosition);",
      "info" : "ReturnStatement[12177-12239]:ReturnStatement[12628-12690]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12420-12429]:MarkerAnnotation[12871-12880]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12434-12440]:Modifier[12885-12891]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[12441-12447]:SimpleType[12892-12898]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[12448-12456]:SimpleName[12899-12907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12459-12694]:Block[12910-13145]"
    }, {
      "left" : "String str = \"DateFormat \"+getClass().getName();",
      "right" : "String str = \"DateFormat \"+getClass().getName();",
      "info" : "VariableDeclarationStatement[12469-12517]:VariableDeclarationStatement[12920-12968]"
    }, {
      "left" : "TimeZone tz = _timezone;",
      "right" : "TimeZone tz = _timezone;",
      "info" : "VariableDeclarationStatement[12526-12550]:VariableDeclarationStatement[12977-13001]"
    }, {
      "left" : "if (tz != null)",
      "right" : "if (tz != null)",
      "info" : "IfStatement[12559-12628]:IfStatement[13010-13079]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12575-12628]:Block[13026-13079]"
    }, {
      "left" : "str += \" (timezone: \"+tz+\")\";",
      "right" : "str += \" (timezone: \"+tz+\")\";",
      "info" : "ExpressionStatement[12589-12618]:ExpressionStatement[13040-13069]"
    }, {
      "left" : "str += \"(locale: \"+_locale+\")\";",
      "right" : "str += \"(locale: \"+_locale+\")\";",
      "info" : "ExpressionStatement[12637-12668]:ExpressionStatement[13088-13119]"
    }, {
      "left" : "return str;",
      "right" : "return str;",
      "info" : "ReturnStatement[12677-12688]:ReturnStatement[13128-13139]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12700-12709]:MarkerAnnotation[13151-13160]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12755-12761]:Modifier[13206-13212]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[12762-12769]:PrimitiveType[13213-13220]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[12770-12776]:SimpleName[13221-13227]"
    }, {
      "left" : "Object o",
      "right" : "Object o",
      "info" : "SingleVariableDeclaration[12777-12785]:SingleVariableDeclaration[13228-13236]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12787-12822]:Block[13238-13273]"
    }, {
      "left" : "return (o == this);",
      "right" : "return (o == this);",
      "info" : "ReturnStatement[12797-12816]:ReturnStatement[13248-13267]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12828-12837]:MarkerAnnotation[13279-13288]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12883-12889]:Modifier[13334-13340]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12890-12893]:PrimitiveType[13341-13344]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[12894-12902]:SimpleName[13345-13353]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12905-12958]:Block[13356-13409]"
    }, {
      "left" : "return System.identityHashCode(this);",
      "right" : "return System.identityHashCode(this);",
      "info" : "ReturnStatement[12915-12952]:ReturnStatement[13366-13403]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[13256-13265]:Modifier[13707-13716]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[13266-13273]:PrimitiveType[13717-13724]"
    }, {
      "left" : "looksLikeISO8601",
      "right" : "looksLikeISO8601",
      "info" : "SimpleName[13274-13290]:SimpleName[13725-13741]"
    }, {
      "left" : "String dateStr",
      "right" : "String dateStr",
      "info" : "SingleVariableDeclaration[13291-13305]:SingleVariableDeclaration[13742-13756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13311-13569]:Block[13762-14020]"
    }, {
      "left" : "if (dateStr.length() >= 5\n            && Character.isDigit(dateStr.charAt(0))\n            && Character.isDigit(dateStr.charAt(3))\n            && dateStr.charAt(4) == '-')",
      "right" : "if (dateStr.length() >= 5\n            && Character.isDigit(dateStr.charAt(0))\n            && Character.isDigit(dateStr.charAt(3))\n            && dateStr.charAt(4) == '-')",
      "info" : "IfStatement[13321-13541]:IfStatement[13772-13992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13505-13541]:Block[13956-13992]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[13519-13531]:ReturnStatement[13970-13982]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[13550-13563]:ReturnStatement[14001-14014]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19265-19274]:Modifier[19699-19708]"
    }, {
      "left" : "Date",
      "right" : "Date",
      "info" : "SimpleType[19275-19279]:SimpleType[19709-19713]"
    }, {
      "left" : "parseAsRFC1123",
      "right" : "parseAsRFC1123",
      "info" : "SimpleName[19280-19294]:SimpleName[19714-19728]"
    }, {
      "left" : "String dateStr",
      "right" : "String dateStr",
      "info" : "SingleVariableDeclaration[19295-19309]:SingleVariableDeclaration[19729-19743]"
    }, {
      "left" : "ParsePosition pos",
      "right" : "ParsePosition pos",
      "info" : "SingleVariableDeclaration[19311-19328]:SingleVariableDeclaration[19745-19762]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19334-19579]:Block[19768-20013]"
    }, {
      "left" : "if (_formatRFC1123 == null)",
      "right" : "if (_formatRFC1123 == null)",
      "info" : "IfStatement[19344-19522]:IfStatement[19778-19956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19372-19522]:Block[19806-19956]"
    }, {
      "left" : "_formatRFC1123 = _cloneFormat(DATE_FORMAT_RFC1123, DATE_FORMAT_STR_RFC1123,\n                    _timezone, _locale, _lenient);",
      "right" : "_formatRFC1123 = _cloneFormat(DATE_FORMAT_RFC1123, DATE_FORMAT_STR_RFC1123,\n                    _timezone, _locale, _lenient);",
      "info" : "ExpressionStatement[19386-19512]:ExpressionStatement[19820-19946]"
    }, {
      "left" : "return _formatRFC1123.parse(dateStr, pos);",
      "right" : "return _formatRFC1123.parse(dateStr, pos);",
      "info" : "ReturnStatement[19531-19573]:ReturnStatement[19965-20007]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[19585-19592]:Modifier[20019-20026]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[19593-19598]:Modifier[20027-20032]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19599-19605]:Modifier[20033-20039]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[19606-19613]:PrimitiveType[20040-20047]"
    }, {
      "left" : "hasTimeZone",
      "right" : "hasTimeZone",
      "info" : "SimpleName[19614-19625]:SimpleName[20048-20059]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[19626-19636]:SingleVariableDeclaration[20060-20070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19642-20072]:Block[20076-20506]"
    }, {
      "left" : "int len = str.length();",
      "right" : "int len = str.length();",
      "info" : "VariableDeclarationStatement[19724-19747]:VariableDeclarationStatement[20158-20181]"
    }, {
      "left" : "if (len >= 6)",
      "right" : "if (len >= 6)",
      "info" : "IfStatement[19756-20044]:IfStatement[20190-20478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19770-20044]:Block[20204-20478]"
    }, {
      "left" : "char c = str.charAt(len-6);",
      "right" : "char c = str.charAt(len-6);",
      "info" : "VariableDeclarationStatement[19784-19811]:VariableDeclarationStatement[20218-20245]"
    }, {
      "left" : "if (c == '+' || c == '-')",
      "right" : "if (c == '+' || c == '-')",
      "info" : "IfStatement[19824-19862]:IfStatement[20258-20296]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[19850-19862]:ReturnStatement[20284-20296]"
    }, {
      "left" : "c = str.charAt(len-5);",
      "right" : "c = str.charAt(len-5);",
      "info" : "ExpressionStatement[19875-19897]:ExpressionStatement[20309-20331]"
    }, {
      "left" : "if (c == '+' || c == '-')",
      "right" : "if (c == '+' || c == '-')",
      "info" : "IfStatement[19910-19948]:IfStatement[20344-20382]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[19936-19948]:ReturnStatement[20370-20382]"
    }, {
      "left" : "c = str.charAt(len-3);",
      "right" : "c = str.charAt(len-3);",
      "info" : "ExpressionStatement[19961-19983]:ExpressionStatement[20395-20417]"
    }, {
      "left" : "if (c == '+' || c == '-')",
      "right" : "if (c == '+' || c == '-')",
      "info" : "IfStatement[19996-20034]:IfStatement[20430-20468]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[20022-20034]:ReturnStatement[20456-20468]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[20053-20066]:ReturnStatement[20487-20500]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[20078-20085]:Modifier[20512-20519]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[20086-20091]:Modifier[20520-20525]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[20092-20098]:Modifier[20526-20532]"
    }, {
      "left" : "DateFormat",
      "right" : "DateFormat",
      "info" : "SimpleType[20099-20109]:SimpleType[20533-20543]"
    }, {
      "left" : "_cloneFormat",
      "right" : "_cloneFormat",
      "info" : "SimpleName[20110-20122]:SimpleName[20544-20556]"
    }, {
      "left" : "DateFormat df",
      "right" : "DateFormat df",
      "info" : "SingleVariableDeclaration[20123-20136]:SingleVariableDeclaration[20557-20570]"
    }, {
      "left" : "String format",
      "right" : "String format",
      "info" : "SingleVariableDeclaration[20138-20151]:SingleVariableDeclaration[20572-20585]"
    }, {
      "left" : "TimeZone tz",
      "right" : "TimeZone tz",
      "info" : "SingleVariableDeclaration[20165-20176]:SingleVariableDeclaration[20599-20610]"
    }, {
      "left" : "Locale loc",
      "right" : "Locale loc",
      "info" : "SingleVariableDeclaration[20178-20188]:SingleVariableDeclaration[20612-20622]"
    }, {
      "left" : "Boolean lenient",
      "right" : "Boolean lenient",
      "info" : "SingleVariableDeclaration[20190-20205]:SingleVariableDeclaration[20624-20639]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20211-20639]:Block[20645-21073]"
    }, {
      "left" : "if (!loc.equals(DEFAULT_LOCALE))",
      "right" : "if (!loc.equals(DEFAULT_LOCALE))",
      "info" : "IfStatement[20221-20522]:IfStatement[20655-20956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20254-20383]:Block[20688-20817]"
    }, {
      "left" : "df = new SimpleDateFormat(format, loc);",
      "right" : "df = new SimpleDateFormat(format, loc);",
      "info" : "ExpressionStatement[20268-20307]:ExpressionStatement[20702-20741]"
    }, {
      "left" : "df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);",
      "right" : "df.setTimeZone((tz == null) ? DEFAULT_TIMEZONE : tz);",
      "info" : "ExpressionStatement[20320-20373]:ExpressionStatement[20754-20807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20389-20522]:Block[20823-20956]"
    }, {
      "left" : "df = (DateFormat) df.clone();",
      "right" : "df = (DateFormat) df.clone();",
      "info" : "ExpressionStatement[20403-20432]:ExpressionStatement[20837-20866]"
    }, {
      "left" : "if (tz != null)",
      "right" : "if (tz != null)",
      "info" : "IfStatement[20445-20512]:IfStatement[20879-20946]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20461-20512]:Block[20895-20946]"
    }, {
      "left" : "df.setTimeZone(tz);",
      "right" : "df.setTimeZone(tz);",
      "info" : "ExpressionStatement[20479-20498]:ExpressionStatement[20913-20932]"
    }, {
      "left" : "if (lenient != null)",
      "right" : "if (lenient != null)",
      "info" : "IfStatement[20531-20614]:IfStatement[20965-21048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20552-20614]:Block[20986-21048]"
    }, {
      "left" : "df.setLenient(lenient.booleanValue());",
      "right" : "df.setLenient(lenient.booleanValue());",
      "info" : "ExpressionStatement[20566-20604]:ExpressionStatement[21000-21038]"
    }, {
      "left" : "return df;",
      "right" : "return df;",
      "info" : "ReturnStatement[20623-20633]:ReturnStatement[21057-21067]"
    } ]
  },
  "interFileMappings" : { }
}