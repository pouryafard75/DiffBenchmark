{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "DartResolver",
      "right" : "DartResolver",
      "info" : "TypeDeclaration[1223-11138]:TypeDeclaration[1223-11271]"
    }, {
      "left" : "public static final DartResolver INSTANCE = new DartResolver();",
      "right" : "public static final DartResolver INSTANCE = new DartResolver();",
      "info" : "FieldDeclaration[1337-1400]:FieldDeclaration[1337-1400]"
    }, {
      "left" : "public static boolean isServerDrivenResolution()",
      "right" : "public static boolean isServerDrivenResolution()",
      "info" : "MethodDeclaration[1404-1522]:MethodDeclaration[1404-1522]"
    }, {
      "left" : "public List<? extends PsiElement> resolve(@NotNull DartReference reference, boolean incompleteCode)",
      "right" : "public List<? extends PsiElement> resolve(@NotNull DartReference reference, boolean incompleteCode)",
      "info" : "MethodDeclaration[1526-5711]:MethodDeclaration[1526-5711]"
    }, {
      "left" : "public static PluginNavigationRegion findRegion(final PsiFile refPsiFile, final int refOffset, final int refLength)",
      "right" : "public static PluginNavigationRegion findRegion(final PsiFile refPsiFile, final int refOffset, final int refLength)",
      "info" : "MethodDeclaration[5715-6170]:MethodDeclaration[5715-6170]"
    }, {
      "left" : "private static PsiElement getElementForNavigationTarget(Project project, PluginNavigationTarget target)",
      "right" : "private static PsiElement getElementForNavigationTarget(Project project, PluginNavigationTarget target)",
      "info" : "MethodDeclaration[6174-7026]:MethodDeclaration[6174-6852]"
    }, {
      "left" : "private static List<PsiElement> toResult(@Nullable PsiElement element)",
      "right" : "private static List<PsiElement> toResult(@Nullable PsiElement element)",
      "info" : "MethodDeclaration[7030-7235]:MethodDeclaration[7163-7368]"
    }, {
      "left" : "private static DartComponent filterAccess(PsiElement element, List<DartComponent> components)",
      "right" : "private static DartComponent filterAccess(PsiElement element, List<DartComponent> components)",
      "info" : "MethodDeclaration[7239-7852]:MethodDeclaration[7372-7985]"
    }, {
      "left" : "public boolean value(DartComponent component)",
      "right" : "public boolean value(DartComponent component)",
      "info" : "MethodDeclaration[7490-7840]:MethodDeclaration[7623-7973]"
    }, {
      "left" : "private static PluginNavigationRegion findRegion(List<PluginNavigationRegion> regions, int offset, int length)",
      "right" : "private static PluginNavigationRegion findRegion(List<PluginNavigationRegion> regions, int offset, int length)",
      "info" : "MethodDeclaration[7856-8586]:MethodDeclaration[7989-8719]"
    }, {
      "left" : "private static List<? extends PsiElement> resolveSimpleReference(@NotNull DartReference reference)",
      "right" : "private static List<? extends PsiElement> resolveSimpleReference(@NotNull DartReference reference)",
      "info" : "MethodDeclaration[8590-9917]:MethodDeclaration[8723-10050]"
    }, {
      "left" : "public static List<? extends PsiElement> resolveSimpleReference(@NotNull final PsiElement scopeElement, @NotNull final String name)",
      "right" : "public static List<? extends PsiElement> resolveSimpleReference(@NotNull final PsiElement scopeElement, @NotNull final String name)",
      "info" : "MethodDeclaration[9921-11136]:MethodDeclaration[10054-11269]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1453-1522]:Block[1453-1522]"
    }, {
      "left" : "return Registry.is(\"dart.server.driven.resolution\", false);",
      "right" : "return Registry.is(\"dart.server.driven.resolution\", false);",
      "info" : "ReturnStatement[1459-1518]:ReturnStatement[1459-1518]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1650-5711]:Block[1650-5711]"
    }, {
      "left" : "if (isServerDrivenResolution())",
      "right" : "if (isServerDrivenResolution())",
      "info" : "IfStatement[1656-2421]:IfStatement[1656-2421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1688-2421]:Block[1688-2421]"
    }, {
      "left" : "final PsiFile refPsiFile = reference.getContainingFile();",
      "right" : "final PsiFile refPsiFile = reference.getContainingFile();",
      "info" : "VariableDeclarationStatement[1696-1753]:VariableDeclarationStatement[1696-1753]"
    }, {
      "left" : "final int refOffset = reference.getTextOffset();",
      "right" : "final int refOffset = reference.getTextOffset();",
      "info" : "VariableDeclarationStatement[1760-1808]:VariableDeclarationStatement[1760-1808]"
    }, {
      "left" : "final int refLength = reference.getTextLength();",
      "right" : "final int refLength = reference.getTextLength();",
      "info" : "VariableDeclarationStatement[1815-1863]:VariableDeclarationStatement[1815-1863]"
    }, {
      "left" : "final PluginNavigationRegion region = findRegion(refPsiFile, refOffset, refLength);",
      "right" : "final PluginNavigationRegion region = findRegion(refPsiFile, refOffset, refLength);",
      "info" : "VariableDeclarationStatement[1870-1953]:VariableDeclarationStatement[1870-1953]"
    }, {
      "left" : "if (region != null)",
      "right" : "if (region != null)",
      "info" : "IfStatement[1960-2396]:IfStatement[1960-2396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1980-2396]:Block[1980-2396]"
    }, {
      "left" : "final Project project = reference.getProject();",
      "right" : "final Project project = reference.getProject();",
      "info" : "VariableDeclarationStatement[1990-2037]:VariableDeclarationStatement[1990-2037]"
    }, {
      "left" : "final List<PsiElement> result = new SmartList<PsiElement>();",
      "right" : "final List<PsiElement> result = new SmartList<PsiElement>();",
      "info" : "VariableDeclarationStatement[2046-2106]:VariableDeclarationStatement[2046-2106]"
    }, {
      "left" : "for (PluginNavigationTarget target : region.getTargets())",
      "right" : "for (PluginNavigationTarget target : region.getTargets())",
      "info" : "EnhancedForStatement[2115-2365]:EnhancedForStatement[2115-2365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2173-2365]:Block[2173-2365]"
    }, {
      "left" : "final PsiElement targetElement = getElementForNavigationTarget(project, target);",
      "right" : "final PsiElement targetElement = getElementForNavigationTarget(project, target);",
      "info" : "VariableDeclarationStatement[2185-2265]:VariableDeclarationStatement[2185-2265]"
    }, {
      "left" : "if (targetElement != null)",
      "right" : "if (targetElement != null)",
      "info" : "IfStatement[2276-2355]:IfStatement[2276-2355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2303-2355]:Block[2303-2355]"
    }, {
      "left" : "result.add(targetElement);",
      "right" : "result.add(targetElement);",
      "info" : "ExpressionStatement[2317-2343]:ExpressionStatement[2317-2343]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[2374-2388]:ReturnStatement[2374-2388]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[2403-2415]:ReturnStatement[2403-2415]"
    }, {
      "left" : "if (reference instanceof DartThisExpression)",
      "right" : "if (reference instanceof DartThisExpression)",
      "info" : "IfStatement[2427-2559]:IfStatement[2427-2559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2472-2559]:Block[2472-2559]"
    }, {
      "left" : "return toResult(PsiTreeUtil.getParentOfType(reference, DartClass.class));",
      "right" : "return toResult(PsiTreeUtil.getParentOfType(reference, DartClass.class));",
      "info" : "ReturnStatement[2480-2553]:ReturnStatement[2480-2553]"
    }, {
      "left" : "if (reference instanceof DartParameterNameReferenceExpression)",
      "right" : "if (reference instanceof DartParameterNameReferenceExpression)",
      "info" : "IfStatement[2564-3542]:IfStatement[2564-3542]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2627-3542]:Block[2627-3542]"
    }, {
      "left" : "PsiElement target;",
      "right" : "PsiElement target;",
      "info" : "VariableDeclarationStatement[2635-2653]:VariableDeclarationStatement[2635-2653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2660-3053]:Block[2660-3053]"
    }, {
      "left" : "final DartCallExpression callExpression = PsiTreeUtil.getParentOfType(reference, DartCallExpression.class);",
      "right" : "final DartCallExpression callExpression = PsiTreeUtil.getParentOfType(reference, DartCallExpression.class);",
      "info" : "VariableDeclarationStatement[2670-2777]:VariableDeclarationStatement[2670-2777]"
    }, {
      "left" : "final DartExpression expression = callExpression != null ? callExpression.getExpression() : null;",
      "right" : "final DartExpression expression = callExpression != null ? callExpression.getExpression() : null;",
      "info" : "VariableDeclarationStatement[2786-2883]:VariableDeclarationStatement[2786-2883]"
    }, {
      "left" : "target = expression instanceof DartReference ? ((DartReference)expression).resolve() : null;",
      "right" : "target = expression instanceof DartReference ? ((DartReference)expression).resolve() : null;",
      "info" : "ExpressionStatement[2892-2984]:ExpressionStatement[2892-2984]"
    }, {
      "left" : "target = target != null ? target.getParent() : null;",
      "right" : "target = target != null ? target.getParent() : null;",
      "info" : "ExpressionStatement[2993-3045]:ExpressionStatement[2993-3045]"
    }, {
      "left" : "if (target == null)",
      "right" : "if (target == null)",
      "info" : "IfStatement[3060-3327]:IfStatement[3060-3327]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3080-3327]:Block[3080-3327]"
    }, {
      "left" : "final DartNewExpression newExpression = PsiTreeUtil.getParentOfType(reference, DartNewExpression.class);",
      "right" : "final DartNewExpression newExpression = PsiTreeUtil.getParentOfType(reference, DartNewExpression.class);",
      "info" : "VariableDeclarationStatement[3090-3194]:VariableDeclarationStatement[3090-3194]"
    }, {
      "left" : "if (newExpression != null)",
      "right" : "if (newExpression != null)",
      "info" : "IfStatement[3203-3319]:IfStatement[3203-3319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3230-3319]:Block[3230-3319]"
    }, {
      "left" : "target = DartResolveUtil.findConstructorDeclaration(newExpression);",
      "right" : "target = DartResolveUtil.findConstructorDeclaration(newExpression);",
      "info" : "ExpressionStatement[3242-3309]:ExpressionStatement[3242-3309]"
    }, {
      "left" : "final DartFormalParameterList parameters = PsiTreeUtil.getChildOfType(target, DartFormalParameterList.class);",
      "right" : "final DartFormalParameterList parameters = PsiTreeUtil.getChildOfType(target, DartFormalParameterList.class);",
      "info" : "VariableDeclarationStatement[3334-3443]:VariableDeclarationStatement[3334-3443]"
    }, {
      "left" : "return toResult(DartResolveUtil.findParameterByName(parameters, reference.getText()));",
      "right" : "return toResult(DartResolveUtil.findParameterByName(parameters, reference.getText()));",
      "info" : "ReturnStatement[3450-3536]:ReturnStatement[3450-3536]"
    }, {
      "left" : "if (DartResolveUtil.aloneOrFirstInChain(reference))",
      "right" : "if (DartResolveUtil.aloneOrFirstInChain(reference))",
      "info" : "IfStatement[3547-3654]:IfStatement[3547-3654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3599-3654]:Block[3599-3654]"
    }, {
      "left" : "return resolveSimpleReference(reference);",
      "right" : "return resolveSimpleReference(reference);",
      "info" : "ReturnStatement[3607-3648]:ReturnStatement[3607-3648]"
    }, {
      "left" : "final DartReference leftReference = DartResolveUtil.getLeftReference(reference);",
      "right" : "final DartReference leftReference = DartResolveUtil.getLeftReference(reference);",
      "info" : "VariableDeclarationStatement[3659-3739]:VariableDeclarationStatement[3659-3739]"
    }, {
      "left" : "final DartReference[] references = PsiTreeUtil.getChildrenOfType(reference, DartReference.class);",
      "right" : "final DartReference[] references = PsiTreeUtil.getChildrenOfType(reference, DartReference.class);",
      "info" : "VariableDeclarationStatement[3774-3871]:VariableDeclarationStatement[3774-3871]"
    }, {
      "left" : "if (references != null && references.length == 2)",
      "right" : "if (references != null && references.length == 2)",
      "info" : "IfStatement[3876-5689]:IfStatement[3876-5689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3926-4511]:Block[3926-4511]"
    }, {
      "left" : "final List<DartComponentName> result = new SmartList<DartComponentName>();",
      "right" : "final List<DartComponentName> result = new SmartList<DartComponentName>();",
      "info" : "VariableDeclarationStatement[3957-4031]:VariableDeclarationStatement[3957-4031]"
    }, {
      "left" : "final String importPrefix = references[0].getCanonicalText();",
      "right" : "final String importPrefix = references[0].getCanonicalText();",
      "info" : "VariableDeclarationStatement[4038-4099]:VariableDeclarationStatement[4038-4099]"
    }, {
      "left" : "final String componentName = references[1].getCanonicalText();",
      "right" : "final String componentName = references[1].getCanonicalText();",
      "info" : "VariableDeclarationStatement[4106-4168]:VariableDeclarationStatement[4106-4168]"
    }, {
      "left" : "DartResolveUtil\n        .processDeclarationsInImportedFileByImportPrefix(reference, importPrefix, new DartResolveProcessor(result, componentName),\n                                                         componentName);",
      "right" : "DartResolveUtil\n        .processDeclarationsInImportedFileByImportPrefix(reference, importPrefix, new DartResolveProcessor(result, componentName),\n                                                         componentName);",
      "info" : "ExpressionStatement[4175-4394]:ExpressionStatement[4175-4394]"
    }, {
      "left" : "if (!result.isEmpty())",
      "right" : "if (!result.isEmpty())",
      "info" : "IfStatement[4401-4456]:IfStatement[4401-4456]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4424-4456]:Block[4424-4456]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[4434-4448]:ReturnStatement[4434-4448]"
    }, {
      "left" : "return toResult(references[1].resolve());",
      "right" : "return toResult(references[1].resolve());",
      "info" : "ReturnStatement[4464-4505]:ReturnStatement[4464-4505]"
    }, {
      "left" : "if (leftReference != null)",
      "right" : "if (leftReference != null)",
      "info" : "IfStatement[4521-5689]:IfStatement[4521-5689]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4548-5689]:Block[4548-5689]"
    }, {
      "left" : "final DartClassResolveResult classResolveResult = leftReference.resolveDartClass();",
      "right" : "final DartClassResolveResult classResolveResult = leftReference.resolveDartClass();",
      "info" : "VariableDeclarationStatement[4556-4639]:VariableDeclarationStatement[4556-4639]"
    }, {
      "left" : "final DartClass dartClass = classResolveResult.getDartClass();",
      "right" : "final DartClass dartClass = classResolveResult.getDartClass();",
      "info" : "VariableDeclarationStatement[4646-4708]:VariableDeclarationStatement[4646-4708]"
    }, {
      "left" : "if (dartClass != null)",
      "right" : "if (dartClass != null)",
      "info" : "IfStatement[4715-5157]:IfStatement[4715-5157]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4738-5157]:Block[4738-5157]"
    }, {
      "left" : "final String name = reference.getCanonicalText();",
      "right" : "final String name = reference.getCanonicalText();",
      "info" : "VariableDeclarationStatement[4748-4797]:VariableDeclarationStatement[4748-4797]"
    }, {
      "left" : "final DartComponent subComponent = leftReference instanceof DartType\n                                           ? dartClass.findNamedConstructor(name)\n                                           : filterAccess(reference, dartClass.findMembersByName(name));",
      "right" : "final DartComponent subComponent = leftReference instanceof DartType\n                                           ? dartClass.findNamedConstructor(name)\n                                           : filterAccess(reference, dartClass.findMembersByName(name));",
      "info" : "VariableDeclarationStatement[4806-5061]:VariableDeclarationStatement[4806-5061]"
    }, {
      "left" : "return toResult(subComponent == null ? null : subComponent.getComponentName());",
      "right" : "return toResult(subComponent == null ? null : subComponent.getComponentName());",
      "info" : "ReturnStatement[5070-5149]:ReturnStatement[5070-5149]"
    }, {
      "left" : "final List<DartComponentName> result = new SmartList<DartComponentName>();",
      "right" : "final List<DartComponentName> result = new SmartList<DartComponentName>();",
      "info" : "VariableDeclarationStatement[5188-5262]:VariableDeclarationStatement[5188-5262]"
    }, {
      "left" : "final String importPrefix = leftReference.getCanonicalText();",
      "right" : "final String importPrefix = leftReference.getCanonicalText();",
      "info" : "VariableDeclarationStatement[5269-5330]:VariableDeclarationStatement[5269-5330]"
    }, {
      "left" : "final String componentName = reference.getCanonicalText();",
      "right" : "final String componentName = reference.getCanonicalText();",
      "info" : "VariableDeclarationStatement[5337-5395]:VariableDeclarationStatement[5337-5395]"
    }, {
      "left" : "DartResolveUtil\n        .processDeclarationsInImportedFileByImportPrefix(reference, importPrefix, new DartResolveProcessor(result, componentName),\n                                                         componentName);",
      "right" : "DartResolveUtil\n        .processDeclarationsInImportedFileByImportPrefix(reference, importPrefix, new DartResolveProcessor(result, componentName),\n                                                         componentName);",
      "info" : "ExpressionStatement[5402-5621]:ExpressionStatement[5402-5621]"
    }, {
      "left" : "if (!result.isEmpty())",
      "right" : "if (!result.isEmpty())",
      "info" : "IfStatement[5628-5683]:IfStatement[5628-5683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5651-5683]:Block[5651-5683]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[5661-5675]:ReturnStatement[5661-5675]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[5695-5707]:ReturnStatement[5695-5707]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5843-6170]:Block[5843-6170]"
    }, {
      "left" : "final VirtualFile refVirtualFile = DartResolveUtil.getRealVirtualFile(refPsiFile);",
      "right" : "final VirtualFile refVirtualFile = DartResolveUtil.getRealVirtualFile(refPsiFile);",
      "info" : "VariableDeclarationStatement[5849-5931]:VariableDeclarationStatement[5849-5931]"
    }, {
      "left" : "if (refVirtualFile != null)",
      "right" : "if (refVirtualFile != null)",
      "info" : "IfStatement[5936-6149]:IfStatement[5936-6149]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5964-6149]:Block[5964-6149]"
    }, {
      "left" : "final List<PluginNavigationRegion> regions = DartAnalysisServerService.getInstance().getNavigation(refVirtualFile);",
      "right" : "final List<PluginNavigationRegion> regions = DartAnalysisServerService.getInstance().getNavigation(refVirtualFile);",
      "info" : "VariableDeclarationStatement[5972-6087]:VariableDeclarationStatement[5972-6087]"
    }, {
      "left" : "return findRegion(regions, refOffset, refLength);",
      "right" : "return findRegion(regions, refOffset, refLength);",
      "info" : "ReturnStatement[6094-6143]:ReturnStatement[6094-6143]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6154-6166]:ReturnStatement[6154-6166]"
    }, {
      "left" : "String targetPath = target.getFile();",
      "right" : "String targetPath = target.getFile();",
      "info" : "VariableDeclarationStatement[6296-6333]:VariableDeclarationStatement[6296-6333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6451-7005]:Block[6290-6852]"
    }, {
      "left" : "PsiFile file = PsiManager.getInstance(project).findFile(virtualFile);",
      "right" : "PsiFile file = findPsiFile(project, targetPath);",
      "info" : "VariableDeclarationStatement[6459-6528]:VariableDeclarationStatement[6338-6386]"
    }, {
      "left" : "if (file != null)",
      "right" : "if (file != null)",
      "info" : "IfStatement[6535-6999]:IfStatement[6391-6831]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6553-6999]:Block[6409-6831]"
    }, {
      "left" : "int targetOffset = target.getOffset();",
      "right" : "int targetOffset = target.getOffset();",
      "info" : "VariableDeclarationStatement[6563-6601]:VariableDeclarationStatement[6417-6455]"
    }, {
      "left" : "for (int i = 0; i < 2; i++)",
      "right" : "for (int i = 0; i < 2; i++)",
      "info" : "ForStatement[6610-6991]:ForStatement[6462-6825]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6638-6991]:Block[6490-6825]"
    }, {
      "left" : "Class<? extends PsiElement> clazz = DartComponentName.class;",
      "right" : "Class<? extends PsiElement> clazz = DartComponentName.class;",
      "info" : "VariableDeclarationStatement[6650-6710]:VariableDeclarationStatement[6500-6560]"
    }, {
      "left" : "if (i == 1)",
      "right" : "if (i == 1)",
      "info" : "IfStatement[6721-6797]:IfStatement[6569-6641]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6733-6797]:Block[6581-6641]"
    }, {
      "left" : "clazz = DartReferenceExpression.class;",
      "right" : "clazz = DartReferenceExpression.class;",
      "info" : "ExpressionStatement[6747-6785]:ExpressionStatement[6593-6631]"
    }, {
      "left" : "PsiElement elementAt = PsiTreeUtil.findElementOfClassAtOffset(file, targetOffset, clazz, false);",
      "right" : "PsiElement elementAt = PsiTreeUtil.findElementOfClassAtOffset(file, targetOffset, clazz, false);",
      "info" : "VariableDeclarationStatement[6808-6904]:VariableDeclarationStatement[6650-6746]"
    }, {
      "left" : "if (elementAt != null)",
      "right" : "if (elementAt != null)",
      "info" : "IfStatement[6915-6981]:IfStatement[6755-6817]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6938-6981]:Block[6778-6817]"
    }, {
      "left" : "return elementAt;",
      "right" : "return elementAt;",
      "info" : "ReturnStatement[6952-6969]:ReturnStatement[6790-6807]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7112-7235]:Block[7245-7368]"
    }, {
      "left" : "if (element == null)",
      "right" : "if (element == null)",
      "info" : "IfStatement[7118-7184]:IfStatement[7251-7317]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7139-7184]:Block[7272-7317]"
    }, {
      "left" : "return Collections.emptyList();",
      "right" : "return Collections.emptyList();",
      "info" : "ReturnStatement[7147-7178]:ReturnStatement[7280-7311]"
    }, {
      "left" : "return new SmartList<PsiElement>(element);",
      "right" : "return new SmartList<PsiElement>(element);",
      "info" : "ReturnStatement[7189-7231]:ReturnStatement[7322-7364]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7345-7852]:Block[7478-7985]"
    }, {
      "left" : "final boolean lValue = DartResolveUtil.isLValue(element);",
      "right" : "final boolean lValue = DartResolveUtil.isLValue(element);",
      "info" : "VariableDeclarationStatement[7351-7408]:VariableDeclarationStatement[7484-7541]"
    }, {
      "left" : "return ContainerUtil.find(components, new Condition<DartComponent>() {\n      @Override\n      public boolean value(DartComponent component) {\n        if (lValue && component.isSetter()) {\n          return true;\n        }\n        else if (!lValue && component.isGetter()) {\n          return true;\n        }\n        boolean isGetterOrSetter = component.isSetter() || component.isGetter();\n        return !isGetterOrSetter;\n      }\n    });",
      "right" : "return ContainerUtil.find(components, new Condition<DartComponent>() {\n      @Override\n      public boolean value(DartComponent component) {\n        if (lValue && component.isSetter()) {\n          return true;\n        }\n        else if (!lValue && component.isGetter()) {\n          return true;\n        }\n        boolean isGetterOrSetter = component.isSetter() || component.isGetter();\n        return !isGetterOrSetter;\n      }\n    });",
      "info" : "ReturnStatement[7413-7848]:ReturnStatement[7546-7981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7552-7840]:Block[7685-7973]"
    }, {
      "left" : "if (lValue && component.isSetter())",
      "right" : "if (lValue && component.isSetter())",
      "info" : "IfStatement[7562-7717]:IfStatement[7695-7850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7598-7632]:Block[7731-7765]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[7610-7622]:ReturnStatement[7743-7755]"
    }, {
      "left" : "if (!lValue && component.isGetter())",
      "right" : "if (!lValue && component.isGetter())",
      "info" : "IfStatement[7646-7717]:IfStatement[7779-7850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7683-7717]:Block[7816-7850]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[7695-7707]:ReturnStatement[7828-7840]"
    }, {
      "left" : "boolean isGetterOrSetter = component.isSetter() || component.isGetter();",
      "right" : "boolean isGetterOrSetter = component.isSetter() || component.isGetter();",
      "info" : "VariableDeclarationStatement[7726-7798]:VariableDeclarationStatement[7859-7931]"
    }, {
      "left" : "return !isGetterOrSetter;",
      "right" : "return !isGetterOrSetter;",
      "info" : "ReturnStatement[7807-7832]:ReturnStatement[7940-7965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8110-8586]:Block[8243-8719]"
    }, {
      "left" : "int low = 0;",
      "right" : "int low = 0;",
      "info" : "VariableDeclarationStatement[8116-8128]:VariableDeclarationStatement[8249-8261]"
    }, {
      "left" : "int high = regions.size() - 1;",
      "right" : "int high = regions.size() - 1;",
      "info" : "VariableDeclarationStatement[8133-8163]:VariableDeclarationStatement[8266-8296]"
    }, {
      "left" : "while (low <= high)",
      "right" : "while (low <= high)",
      "info" : "WhileStatement[8169-8565]:WhileStatement[8302-8698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8189-8565]:Block[8322-8698]"
    }, {
      "left" : "int mid = (low + high) >>> 1;",
      "right" : "int mid = (low + high) >>> 1;",
      "info" : "VariableDeclarationStatement[8197-8226]:VariableDeclarationStatement[8330-8359]"
    }, {
      "left" : "PluginNavigationRegion midVal = regions.get(mid);",
      "right" : "PluginNavigationRegion midVal = regions.get(mid);",
      "info" : "VariableDeclarationStatement[8233-8282]:VariableDeclarationStatement[8366-8415]"
    }, {
      "left" : "int cmp = midVal.getOffset() - offset;",
      "right" : "int cmp = midVal.getOffset() - offset;",
      "info" : "VariableDeclarationStatement[8289-8327]:VariableDeclarationStatement[8422-8460]"
    }, {
      "left" : "if (cmp < 0)",
      "right" : "if (cmp < 0)",
      "info" : "IfStatement[8335-8559]:IfStatement[8468-8692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8348-8380]:Block[8481-8513]"
    }, {
      "left" : "low = mid + 1;",
      "right" : "low = mid + 1;",
      "info" : "ExpressionStatement[8358-8372]:ExpressionStatement[8491-8505]"
    }, {
      "left" : "if (cmp > 0)",
      "right" : "if (cmp > 0)",
      "info" : "IfStatement[8392-8559]:IfStatement[8525-8692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8405-8438]:Block[8538-8571]"
    }, {
      "left" : "high = mid - 1;",
      "right" : "high = mid - 1;",
      "info" : "ExpressionStatement[8415-8430]:ExpressionStatement[8548-8563]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8450-8559]:Block[8583-8692]"
    }, {
      "left" : "if (midVal.getLength() == length)",
      "right" : "if (midVal.getLength() == length)",
      "info" : "IfStatement[8460-8530]:IfStatement[8593-8663]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8494-8530]:Block[8627-8663]"
    }, {
      "left" : "return midVal;",
      "right" : "return midVal;",
      "info" : "ReturnStatement[8506-8520]:ReturnStatement[8639-8653]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8539-8551]:ReturnStatement[8672-8684]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[8570-8582]:ReturnStatement[8703-8715]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8689-9917]:Block[8822-10050]"
    }, {
      "left" : "final List<? extends PsiElement> result = resolveSimpleReference(reference, reference.getCanonicalText());",
      "right" : "final List<? extends PsiElement> result = resolveSimpleReference(reference, reference.getCanonicalText());",
      "info" : "VariableDeclarationStatement[8695-8801]:VariableDeclarationStatement[8828-8934]"
    }, {
      "left" : "final PsiElement parent = reference.getParent();",
      "right" : "final PsiElement parent = reference.getParent();",
      "info" : "VariableDeclarationStatement[8806-8854]:VariableDeclarationStatement[8939-8987]"
    }, {
      "left" : "final PsiElement superParent = parent.getParent();",
      "right" : "final PsiElement superParent = parent.getParent();",
      "info" : "VariableDeclarationStatement[8859-8909]:VariableDeclarationStatement[8992-9042]"
    }, {
      "left" : "final boolean isSimpleConstructor = parent instanceof DartType &&\n                                        superParent instanceof DartNewExpression &&\n                                        ((DartNewExpression)superParent).getReferenceExpression() == null;",
      "right" : "final boolean isSimpleConstructor = parent instanceof DartType &&\n                                        superParent instanceof DartNewExpression &&\n                                        ((DartNewExpression)superParent).getReferenceExpression() == null;",
      "info" : "VariableDeclarationStatement[8914-9170]:VariableDeclarationStatement[9047-9303]"
    }, {
      "left" : "if (!isSimpleConstructor || result.isEmpty())",
      "right" : "if (!isSimpleConstructor || result.isEmpty())",
      "info" : "IfStatement[9175-9249]:IfStatement[9308-9382]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9221-9249]:Block[9354-9382]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[9229-9243]:ReturnStatement[9362-9376]"
    }, {
      "left" : "final List<PsiElement> filteredResult = new ArrayList<PsiElement>(result.size());",
      "right" : "final List<PsiElement> filteredResult = new ArrayList<PsiElement>(result.size());",
      "info" : "VariableDeclarationStatement[9254-9335]:VariableDeclarationStatement[9387-9468]"
    }, {
      "left" : "for (PsiElement element : result)",
      "right" : "for (PsiElement element : result)",
      "info" : "EnhancedForStatement[9340-9886]:EnhancedForStatement[9473-10019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9374-9886]:Block[9507-10019]"
    }, {
      "left" : "final PsiElement elementParent = element.getParent();",
      "right" : "final PsiElement elementParent = element.getParent();",
      "info" : "VariableDeclarationStatement[9382-9435]:VariableDeclarationStatement[9515-9568]"
    }, {
      "left" : "if (element instanceof DartComponentName && elementParent instanceof DartClass)",
      "right" : "if (element instanceof DartComponentName && elementParent instanceof DartClass)",
      "info" : "IfStatement[9442-9845]:IfStatement[9575-9978]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9522-9845]:Block[9655-9978]"
    }, {
      "left" : "final DartComponent component = ((DartClass)elementParent).findNamedConstructor(reference.getCanonicalText());",
      "right" : "final DartComponent component = ((DartClass)elementParent).findNamedConstructor(reference.getCanonicalText());",
      "info" : "VariableDeclarationStatement[9532-9642]:VariableDeclarationStatement[9665-9775]"
    }, {
      "left" : "if (component != null && DartComponentType.typeOf(component) == DartComponentType.CONSTRUCTOR)",
      "right" : "if (component != null && DartComponentType.typeOf(component) == DartComponentType.CONSTRUCTOR)",
      "info" : "IfStatement[9651-9837]:IfStatement[9784-9970]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9746-9837]:Block[9879-9970]"
    }, {
      "left" : "filteredResult.add(component.getComponentName());",
      "right" : "filteredResult.add(component.getComponentName());",
      "info" : "ExpressionStatement[9758-9807]:ExpressionStatement[9891-9940]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[9818-9827]:ContinueStatement[9951-9960]"
    }, {
      "left" : "filteredResult.add(element);",
      "right" : "filteredResult.add(element);",
      "info" : "ExpressionStatement[9852-9880]:ExpressionStatement[9985-10013]"
    }, {
      "left" : "return filteredResult;",
      "right" : "return filteredResult;",
      "info" : "ReturnStatement[9891-9913]:ReturnStatement[10024-10046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10064-11136]:Block[10197-11269]"
    }, {
      "left" : "final List<DartComponentName> result = new ArrayList<DartComponentName>();",
      "right" : "final List<DartComponentName> result = new ArrayList<DartComponentName>();",
      "info" : "VariableDeclarationStatement[10070-10144]:VariableDeclarationStatement[10203-10277]"
    }, {
      "left" : "final DartResolveProcessor dartResolveProcessor = new DartResolveProcessor(result, name, DartResolveUtil.isLValue(scopeElement));",
      "right" : "final DartResolveProcessor dartResolveProcessor = new DartResolveProcessor(result, name, DartResolveUtil.isLValue(scopeElement));",
      "info" : "VariableDeclarationStatement[10162-10291]:VariableDeclarationStatement[10295-10424]"
    }, {
      "left" : "PsiTreeUtil.treeWalkUp(dartResolveProcessor, scopeElement, null, ResolveState.initial());",
      "right" : "PsiTreeUtil.treeWalkUp(dartResolveProcessor, scopeElement, null, ResolveState.initial());",
      "info" : "ExpressionStatement[10296-10385]:ExpressionStatement[10429-10518]"
    }, {
      "left" : "final DartClass dartClass = PsiTreeUtil.getParentOfType(scopeElement, DartClass.class);",
      "right" : "final DartClass dartClass = PsiTreeUtil.getParentOfType(scopeElement, DartClass.class);",
      "info" : "VariableDeclarationStatement[10405-10492]:VariableDeclarationStatement[10538-10625]"
    }, {
      "left" : "final boolean inClass = PsiTreeUtil.getParentOfType(scopeElement, DartClassBody.class, false) != null;",
      "right" : "final boolean inClass = PsiTreeUtil.getParentOfType(scopeElement, DartClassBody.class, false) != null;",
      "info" : "VariableDeclarationStatement[10497-10599]:VariableDeclarationStatement[10630-10732]"
    }, {
      "left" : "if (result.isEmpty() && dartClass != null && inClass)",
      "right" : "if (result.isEmpty() && dartClass != null && inClass)",
      "info" : "IfStatement[10604-10848]:IfStatement[10737-10981]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10658-10848]:Block[10791-10981]"
    }, {
      "left" : "final DartComponent field = filterAccess(scopeElement, dartClass.findMembersByName(name));",
      "right" : "final DartComponent field = filterAccess(scopeElement, dartClass.findMembersByName(name));",
      "info" : "VariableDeclarationStatement[10666-10756]:VariableDeclarationStatement[10799-10889]"
    }, {
      "left" : "if (field != null)",
      "right" : "if (field != null)",
      "info" : "IfStatement[10763-10842]:IfStatement[10896-10975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10782-10842]:Block[10915-10975]"
    }, {
      "left" : "return toResult(field.getComponentName());",
      "right" : "return toResult(field.getComponentName());",
      "info" : "ReturnStatement[10792-10834]:ReturnStatement[10925-10967]"
    }, {
      "left" : "if (result.isEmpty())",
      "right" : "if (result.isEmpty())",
      "info" : "IfStatement[10868-11112]:IfStatement[11001-11245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10890-11112]:Block[11023-11245]"
    }, {
      "left" : "final List<VirtualFile> libraryFiles = DartResolveUtil.findLibrary(scopeElement.getContainingFile());",
      "right" : "final List<VirtualFile> libraryFiles = DartResolveUtil.findLibrary(scopeElement.getContainingFile());",
      "info" : "VariableDeclarationStatement[10898-10999]:VariableDeclarationStatement[11031-11132]"
    }, {
      "left" : "DartResolveUtil.processTopLevelDeclarations(scopeElement, dartResolveProcessor, libraryFiles, name);",
      "right" : "DartResolveUtil.processTopLevelDeclarations(scopeElement, dartResolveProcessor, libraryFiles, name);",
      "info" : "ExpressionStatement[11006-11106]:ExpressionStatement[11139-11239]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11118-11132]:ReturnStatement[11251-11265]"
    } ]
  },
  "interFileMappings" : { }
}