{
  "matchedElements" : [
 {
    "left" : "",
    "right" : "",
    "info" : "TypeDeclaration[1343-2853]:TypeDeclaration[1445-3406]"
  }, {
    "left" : "/** . */\n  private static final Logger LOG = LoggerFactory.getLogger(FilePublicKeyProvider.class);",
    "right" : "/** . */\n  private static final Logger LOG = LoggerFactory.getLogger(FilePublicKeyProvider.class);",
    "info" : "FieldDeclaration[1660-1758]:FieldDeclaration[1762-1860]"
  }, {
    "left" : "/** . */\n  private String[] files;",
    "right" : "/** . */\n  private String[] files;",
    "info" : "FieldDeclaration[1762-1796]:FieldDeclaration[1864-1898]"
  }, {
    "left" : "FilePublicKeyProvider(String[] files) {\n    this.files = files;\n  }",
    "right" : "FilePublicKeyProvider(String[] files) {\n    this.files = files;\n  }",
    "info" : "MethodDeclaration[1800-1867]:MethodDeclaration[1902-1969]"
  }, {
    "left" : "public ) : Iterable<KeyPair>",
    "right" : "private pemKeyPair PEMKeyPair) : KeyPair",
    "info" : "MethodDeclaration[1871-2851]:MethodDeclaration[3175-3403]"
  } ],
  "mappings" : [
 {
    "left" : "import java.security.KeyPair;",
    "right" : "import org.bouncycastle.openssl.PEMException;",
    "info" : "ImportDeclaration[1229-1258]:ImportDeclaration[1020-1065]"
  }, {
    "left" : "import java.security.PublicKey;",
    "right" : "import org.bouncycastle.openssl.PEMKeyPair;",
    "info" : "ImportDeclaration[1259-1290]:ImportDeclaration[1066-1109]"
  }, {
    "left" : "import java.util.List;",
    "right" : "import org.crsh.ssh.util.KeyPairUtils;",
    "info" : "ImportDeclaration[1319-1341]:ImportDeclaration[1169-1207]"
  }, {
    "left" : "AbstractKeyPairProvider",
    "right" : "AbstractKeyPairProvider",
    "info" : "SimpleType[1631-1654]:SimpleType[1733-1756]"
  }, {
    "left" : "String[] files",
    "right" : "String[] files",
    "info" : "SingleVariableDeclaration[1822-1836]:SingleVariableDeclaration[1924-1938]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1838-1867]:Block[1940-1969]"
  }, {
    "left" : "this.files = files;",
    "right" : "this.files = files;",
    "info" : "ExpressionStatement[1844-1863]:ExpressionStatement[1946-1965]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1871-1877]:Modifier[1973-1979]"
  }, {
    "left" : "Iterable<KeyPair>",
    "right" : "Iterable<KeyPair>",
    "info" : "ParameterizedType[1878-1895]:ParameterizedType[1980-1997]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1907-2851]:Block[2009-3171]"
  }, {
    "left" : "if (!SecurityUtils.isBouncyCastleRegistered())",
    "right" : "if (!SecurityUtils.isBouncyCastleRegistered())",
    "info" : "IfStatement[1913-2059]:IfStatement[2015-2161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1960-2059]:Block[2062-2161]"
  }, {
    "left" : "throw new IllegalStateException(\"BouncyCastle must be registered as a JCE provider\");",
    "right" : "throw new IllegalStateException(\"BouncyCastle must be registered as a JCE provider\");",
    "info" : "ThrowStatement[1968-2053]:ThrowStatement[2070-2155]"
  }, {
    "left" : "List<KeyPair> keys = new ArrayList<KeyPair>();",
    "right" : "List<KeyPair> keys = new ArrayList<KeyPair>();",
    "info" : "VariableDeclarationStatement[2064-2110]:VariableDeclarationStatement[2166-2212]"
  }, {
    "left" : "for (String file : files)",
    "right" : "for (String file : files)",
    "info" : "EnhancedForStatement[2115-2830]:EnhancedForStatement[2217-3150]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2141-2830]:Block[2243-3150]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[2149-2824]:TryStatement[2251-3144]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2153-2732]:Block[2255-3052]"
  }, {
    "left" : "Object o = KeyPairUtils.readKey(new InputStreamReader(new FileInputStream(file)));",
    "right" : "Object o = KeyPairUtils.readKey(new InputStreamReader(new FileInputStream(file)));",
    "info" : "VariableDeclarationStatement[2165-2247]:VariableDeclarationStatement[2267-2349]"
  }, {
    "left" : "if (o instanceof KeyPair)",
    "right" : "if (o instanceof KeyPair)",
    "info" : "IfStatement[2258-2724]:IfStatement[2360-3044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2284-2364]:Block[2386-2466]"
  }, {
    "left" : "keys.add(new KeyPair(((KeyPair)o).getPublic(), null));",
    "right" : "keys.add(new KeyPair(((KeyPair)o).getPublic(), null));",
    "info" : "ExpressionStatement[2298-2352]:ExpressionStatement[2400-2454]"
  }, {
    "left" : "if (o instanceof PublicKey)",
    "right" : "if (o instanceof PublicKey)",
    "info" : "IfStatement[2370-2724]:IfStatement[2472-3044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2398-2466]:Block[2500-2568]"
  }, {
    "left" : "keys.add(new KeyPair((PublicKey)o, null));",
    "right" : "keys.add(new KeyPair((PublicKey)o, null));",
    "info" : "ExpressionStatement[2412-2454]:ExpressionStatement[2514-2556]"
  }, {
    "left" : "if (o instanceof PEMKeyPair)",
    "right" : "if (o instanceof PEMKeyPair)",
    "info" : "IfStatement[2472-2724]:IfStatement[2574-3044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2501-2724]:Block[2909-3044]"
  }, {
    "left" : "PEMKeyPair keyPair = (PEMKeyPair)o;",
    "right" : "PEMKeyPair keyPair = (PEMKeyPair)o;",
    "info" : "VariableDeclarationStatement[2515-2550]:VariableDeclarationStatement[2617-2652]"
  }, {
    "left" : "JcaPEMKeyConverter converter = new JcaPEMKeyConverter();",
    "right" : "JcaPEMKeyConverter converter = new JcaPEMKeyConverter();",
    "info" : "VariableDeclarationStatement[2563-2619]:VariableDeclarationStatement[3258-3314]"
  }, {
    "left" : "keys",
    "right" : "keys",
    "info" : "SimpleName[2632-2636]:SimpleName[2665-2669]"
  }, {
    "left" : "keys.add(new KeyPair(converter.getPublicKey(keyPair.getPublicKeyInfo()), null));",
    "right" : "keys.add(convertPemKeyPair(keyPair));",
    "info" : "ExpressionStatement[2632-2712]:ExpressionStatement[2854-2891]"
  }, {
    "left" : "new KeyPair(converter.getPublicKey(keyPair.getPublicKeyInfo()), null)",
    "right" : "new PEMKeyPair((SubjectPublicKeyInfo) o, null)",
    "info" : "ClassInstanceCreation[2641-2710]:ClassInstanceCreation[2794-2840]"
  }, {
    "left" : "KeyPair",
    "right" : "KeyPair",
    "info" : "SimpleType[2645-2652]:SimpleType[3183-3190]"
  }, {
    "left" : "converter.getPublicKey(keyPair.getPublicKeyInfo())",
    "right" : "keys.add(convertPemKeyPair(keyPair))",
    "info" : "MethodInvocation[2653-2703]:MethodInvocation[2665-2701]"
  }, {
    "left" : "converter",
    "right" : "converter",
    "info" : "SimpleName[2653-2662]:SimpleName[3338-3347]"
  }, {
    "left" : "keyPair.getPublicKeyInfo()",
    "right" : "convertPemKeyPair(keyPair)",
    "info" : "MethodInvocation[2676-2702]:MethodInvocation[2674-2700]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2759-2824]:Block[3079-3144]"
  }, {
    "left" : "LOG.info(\"Unable to read key {}: {}\", file, e);",
    "right" : "LOG.info(\"Unable to read key {}: {}\", file, e);",
    "info" : "ExpressionStatement[2769-2816]:ExpressionStatement[3089-3136]"
  }, {
    "left" : "return keys;",
    "right" : "return keys;",
    "info" : "ReturnStatement[2835-2847]:ReturnStatement[3155-3167]"
  } ]
}