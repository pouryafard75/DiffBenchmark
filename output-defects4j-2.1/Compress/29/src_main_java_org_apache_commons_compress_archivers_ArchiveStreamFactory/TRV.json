{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "public static final String AR = \"ar\";",
      "right" : "public static final String AR = \"ar\";",
      "info" : "FieldDeclaration[3316-3460]:FieldDeclaration[3316-3460]"
    }, {
      "left" : "public static final String ARJ = \"arj\";",
      "right" : "public static final String ARJ = \"arj\";",
      "info" : "FieldDeclaration[3465-3659]:FieldDeclaration[3465-3659]"
    }, {
      "left" : "public static final String CPIO = \"cpio\";",
      "right" : "public static final String CPIO = \"cpio\";",
      "info" : "FieldDeclaration[3664-3814]:FieldDeclaration[3664-3814]"
    }, {
      "left" : "public static final String DUMP = \"dump\";",
      "right" : "public static final String DUMP = \"dump\";",
      "info" : "FieldDeclaration[3819-4021]:FieldDeclaration[3819-4021]"
    }, {
      "left" : "public static final String JAR = \"jar\";",
      "right" : "public static final String JAR = \"jar\";",
      "info" : "FieldDeclaration[4026-4173]:FieldDeclaration[4026-4173]"
    }, {
      "left" : "public static final String TAR = \"tar\";",
      "right" : "public static final String TAR = \"tar\";",
      "info" : "FieldDeclaration[4178-4308]:FieldDeclaration[4178-4308]"
    }, {
      "left" : "public static final String ZIP = \"zip\";",
      "right" : "public static final String ZIP = \"zip\";",
      "info" : "FieldDeclaration[4313-4460]:FieldDeclaration[4313-4460]"
    }, {
      "left" : "public static final String SEVEN_Z = \"7z\";",
      "right" : "public static final String SEVEN_Z = \"7z\";",
      "info" : "FieldDeclaration[4465-4614]:FieldDeclaration[4465-4614]"
    }, {
      "left" : "private final String encoding;",
      "right" : "private final String encoding;",
      "info" : "FieldDeclaration[4620-4720]:FieldDeclaration[4620-4720]"
    }, {
      "left" : "private volatile String entryEncoding = null;",
      "right" : "private volatile String entryEncoding = null;",
      "info" : "FieldDeclaration[4726-4832]:FieldDeclaration[4726-4832]"
    }, {
      "left" : "public ArchiveStreamFactory()",
      "right" : "public ArchiveStreamFactory()",
      "info" : "MethodDeclaration[4838-4974]:MethodDeclaration[4838-4974]"
    }, {
      "left" : "public ArchiveStreamFactory(String encoding)",
      "right" : "public ArchiveStreamFactory(String encoding)",
      "info" : "MethodDeclaration[4980-5341]:MethodDeclaration[4980-5341]"
    }, {
      "left" : "public String getEntryEncoding()",
      "right" : "public String getEntryEncoding()",
      "info" : "MethodDeclaration[5347-5643]:MethodDeclaration[5347-5643]"
    }, {
      "left" : "public void setEntryEncoding(String entryEncoding)",
      "right" : "public void setEntryEncoding(String entryEncoding)",
      "info" : "MethodDeclaration[5649-6483]:MethodDeclaration[5649-6483]"
    }, {
      "left" : "public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException",
      "right" : "public ArchiveInputStream createArchiveInputStream(\n            final String archiverName, final InputStream in)\n            throws ArchiveException",
      "info" : "MethodDeclaration[6489-9373]:MethodDeclaration[6489-9373]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4947-4974]:Block[4947-4974]"
    }, {
      "left" : "this(null);",
      "right" : "this(null);",
      "info" : "ConstructorInvocation[4957-4968]:ConstructorInvocation[4957-4968]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5178-5341]:Block[5178-5341]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[5188-5196]:SuperConstructorInvocation[5188-5196]"
    }, {
      "left" : "this.encoding = encoding;",
      "right" : "this.encoding = encoding;",
      "info" : "ExpressionStatement[5205-5230]:ExpressionStatement[5205-5230]"
    }, {
      "left" : "this.entryEncoding = encoding;",
      "right" : "this.entryEncoding = encoding;",
      "info" : "ExpressionStatement[5305-5335]:ExpressionStatement[5305-5335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5606-5643]:Block[5606-5643]"
    }, {
      "left" : "return entryEncoding;",
      "right" : "return entryEncoding;",
      "info" : "ReturnStatement[5616-5637]:ReturnStatement[5616-5637]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6184-6483]:Block[6184-6483]"
    }, {
      "left" : "if (encoding != null)",
      "right" : "if (encoding != null)",
      "info" : "IfStatement[6305-6433]:IfStatement[6305-6433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6327-6433]:Block[6327-6433]"
    }, {
      "left" : "throw new IllegalStateException(\"Cannot overide encoding set by the constructor\");",
      "right" : "throw new IllegalStateException(\"Cannot overide encoding set by the constructor\");",
      "info" : "ThrowStatement[6341-6423]:ThrowStatement[6341-6423]"
    }, {
      "left" : "this.entryEncoding = entryEncoding;",
      "right" : "this.entryEncoding = entryEncoding;",
      "info" : "ExpressionStatement[6442-6477]:ExpressionStatement[6442-6477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7241-9373]:Block[7241-9373]"
    }, {
      "left" : "if (archiverName == null)",
      "right" : "if (archiverName == null)",
      "info" : "IfStatement[7252-7371]:IfStatement[7252-7371]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7278-7371]:Block[7278-7371]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Archivername must not be null.\");",
      "right" : "throw new IllegalArgumentException(\"Archivername must not be null.\");",
      "info" : "ThrowStatement[7292-7361]:ThrowStatement[7292-7361]"
    }, {
      "left" : "if (in == null)",
      "right" : "if (in == null)",
      "info" : "IfStatement[7381-7489]:IfStatement[7381-7489]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7397-7489]:Block[7397-7489]"
    }, {
      "left" : "throw new IllegalArgumentException(\"InputStream must not be null.\");",
      "right" : "throw new IllegalArgumentException(\"InputStream must not be null.\");",
      "info" : "ThrowStatement[7411-7479]:ThrowStatement[7411-7479]"
    }, {
      "left" : "if (AR.equalsIgnoreCase(archiverName))",
      "right" : "if (AR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[7499-7598]:IfStatement[7499-7598]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7538-7598]:Block[7538-7598]"
    }, {
      "left" : "return new ArArchiveInputStream(in);",
      "right" : "return new ArArchiveInputStream(in);",
      "info" : "ReturnStatement[7552-7588]:ReturnStatement[7552-7588]"
    }, {
      "left" : "if (ARJ.equalsIgnoreCase(archiverName))",
      "right" : "if (ARJ.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[7607-7857]:IfStatement[7607-7857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7647-7857]:Block[7647-7857]"
    }, {
      "left" : "if (entryEncoding != null)",
      "right" : "if (entryEncoding != null)",
      "info" : "IfStatement[7661-7847]:IfStatement[7661-7847]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7688-7772]:Block[7688-7772]"
    }, {
      "left" : "return new ArjArchiveInputStream(in, entryEncoding);",
      "right" : "return new ArjArchiveInputStream(in, entryEncoding);",
      "info" : "ReturnStatement[7706-7758]:ReturnStatement[7706-7758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7778-7847]:Block[7778-7847]"
    }, {
      "left" : "return new ArjArchiveInputStream(in);",
      "right" : "return new ArjArchiveInputStream(in);",
      "info" : "ReturnStatement[7796-7833]:ReturnStatement[7796-7833]"
    }, {
      "left" : "if (ZIP.equalsIgnoreCase(archiverName))",
      "right" : "if (ZIP.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[7866-8116]:IfStatement[7866-8116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7906-8116]:Block[7906-8116]"
    }, {
      "left" : "if (entryEncoding != null)",
      "right" : "if (entryEncoding != null)",
      "info" : "IfStatement[7920-8106]:IfStatement[7920-8106]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7947-8031]:Block[7947-8031]"
    }, {
      "left" : "return new ZipArchiveInputStream(in, entryEncoding);",
      "right" : "return new ZipArchiveInputStream(in, entryEncoding);",
      "info" : "ReturnStatement[7965-8017]:ReturnStatement[7965-8017]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8037-8106]:Block[8037-8106]"
    }, {
      "left" : "return new ZipArchiveInputStream(in);",
      "right" : "return new ZipArchiveInputStream(in);",
      "info" : "ReturnStatement[8055-8092]:ReturnStatement[8055-8092]"
    }, {
      "left" : "if (TAR.equalsIgnoreCase(archiverName))",
      "right" : "if (TAR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[8125-8375]:IfStatement[8125-8375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8165-8375]:Block[8165-8375]"
    }, {
      "left" : "if (entryEncoding != null)",
      "right" : "if (entryEncoding != null)",
      "info" : "IfStatement[8179-8365]:IfStatement[8179-8365]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8206-8290]:Block[8206-8290]"
    }, {
      "left" : "return new TarArchiveInputStream(in, entryEncoding);",
      "right" : "return new TarArchiveInputStream(in, entryEncoding);",
      "info" : "ReturnStatement[8224-8276]:ReturnStatement[8224-8276]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8296-8365]:Block[8296-8365]"
    }, {
      "left" : "return new TarArchiveInputStream(in);",
      "right" : "return new TarArchiveInputStream(in);",
      "info" : "ReturnStatement[8314-8351]:ReturnStatement[8314-8351]"
    }, {
      "left" : "if (JAR.equalsIgnoreCase(archiverName))",
      "right" : "if (JAR.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[8384-8634]:IfStatement[8384-8634]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8424-8634]:Block[8424-8634]"
    }, {
      "left" : "if (entryEncoding != null)",
      "right" : "if (entryEncoding != null)",
      "info" : "IfStatement[8438-8624]:IfStatement[8438-8624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8465-8549]:Block[8465-8549]"
    }, {
      "left" : "return new JarArchiveInputStream(in, entryEncoding);",
      "right" : "return new JarArchiveInputStream(in, entryEncoding);",
      "info" : "ReturnStatement[8483-8535]:ReturnStatement[8483-8535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8555-8624]:Block[8555-8624]"
    }, {
      "left" : "return new JarArchiveInputStream(in);",
      "right" : "return new JarArchiveInputStream(in);",
      "info" : "ReturnStatement[8573-8610]:ReturnStatement[8573-8610]"
    }, {
      "left" : "if (CPIO.equalsIgnoreCase(archiverName))",
      "right" : "if (CPIO.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[8643-8896]:IfStatement[8643-8896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8684-8896]:Block[8684-8896]"
    }, {
      "left" : "if (entryEncoding != null)",
      "right" : "if (entryEncoding != null)",
      "info" : "IfStatement[8698-8886]:IfStatement[8698-8886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8725-8810]:Block[8725-8810]"
    }, {
      "left" : "return new CpioArchiveInputStream(in, entryEncoding);",
      "right" : "return new CpioArchiveInputStream(in, entryEncoding);",
      "info" : "ReturnStatement[8743-8796]:ReturnStatement[8743-8796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8816-8886]:Block[8816-8886]"
    }, {
      "left" : "return new CpioArchiveInputStream(in);",
      "right" : "return new CpioArchiveInputStream(in);",
      "info" : "ReturnStatement[8834-8872]:ReturnStatement[8834-8872]"
    }, {
      "left" : "if (DUMP.equalsIgnoreCase(archiverName))",
      "right" : "if (DUMP.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[8905-9158]:IfStatement[8905-9158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8946-9158]:Block[8946-9158]"
    }, {
      "left" : "if (entryEncoding != null)",
      "right" : "if (entryEncoding != null)",
      "info" : "IfStatement[8960-9148]:IfStatement[8960-9148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8987-9072]:Block[8987-9072]"
    }, {
      "left" : "return new DumpArchiveInputStream(in, entryEncoding);",
      "right" : "return new DumpArchiveInputStream(in, entryEncoding);",
      "info" : "ReturnStatement[9005-9058]:ReturnStatement[9005-9058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9078-9148]:Block[9078-9148]"
    }, {
      "left" : "return new DumpArchiveInputStream(in);",
      "right" : "return new DumpArchiveInputStream(in);",
      "info" : "ReturnStatement[9096-9134]:ReturnStatement[9096-9134]"
    }, {
      "left" : "if (SEVEN_Z.equalsIgnoreCase(archiverName))",
      "right" : "if (SEVEN_Z.equalsIgnoreCase(archiverName))",
      "info" : "IfStatement[9167-9285]:IfStatement[9167-9285]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9211-9285]:Block[9211-9285]"
    }, {
      "left" : "throw new StreamingNotSupportedException(SEVEN_Z);",
      "right" : "throw new StreamingNotSupportedException(SEVEN_Z);",
      "info" : "ThrowStatement[9225-9275]:ThrowStatement[9225-9275]"
    }, {
      "left" : "throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");",
      "right" : "throw new ArchiveException(\"Archiver: \" + archiverName + \" not found.\");",
      "info" : "ThrowStatement[9295-9367]:ThrowStatement[9295-9367]"
    } ]
  },
  "interFileMappings" : { }
}