{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "boolean statementNeedsEnded = false;",
      "right" : "boolean statementNeedsEnded = false;",
      "info" : "FieldDeclaration[861-897]:FieldDeclaration[861-897]"
    }, {
      "left" : "boolean statementStarted = false;",
      "right" : "boolean statementStarted = false;",
      "info" : "FieldDeclaration[900-933]:FieldDeclaration[900-933]"
    }, {
      "left" : "boolean sawFunction = false;",
      "right" : "boolean sawFunction = false;",
      "info" : "FieldDeclaration[936-964]:FieldDeclaration[936-964]"
    }, {
      "left" : "void startSourceMapping(Node node)",
      "right" : "void startSourceMapping(Node node)",
      "info" : "MethodDeclaration[968-1100]:MethodDeclaration[968-1100]"
    }, {
      "left" : "void endSourceMapping(Node node)",
      "right" : "void endSourceMapping(Node node)",
      "info" : "MethodDeclaration[1104-1236]:MethodDeclaration[1104-1236]"
    }, {
      "left" : "boolean continueProcessing()",
      "right" : "boolean continueProcessing()",
      "info" : "MethodDeclaration[1240-1429]:MethodDeclaration[1240-1429]"
    }, {
      "left" : "abstract char getLastChar();",
      "right" : "abstract char getLastChar();",
      "info" : "MethodDeclaration[1433-1541]:MethodDeclaration[1433-1541]"
    }, {
      "left" : "void addIdentifier(String identifier)",
      "right" : "void addIdentifier(String identifier)",
      "info" : "MethodDeclaration[1545-1609]:MethodDeclaration[1545-1609]"
    }, {
      "left" : "abstract void append(String str);",
      "right" : "abstract void append(String str);",
      "info" : "MethodDeclaration[1613-1975]:MethodDeclaration[1613-1975]"
    }, {
      "left" : "void appendBlockStart()",
      "right" : "void appendBlockStart()",
      "info" : "MethodDeclaration[1979-2025]:MethodDeclaration[1979-2025]"
    }, {
      "left" : "void appendBlockEnd()",
      "right" : "void appendBlockEnd()",
      "info" : "MethodDeclaration[2029-2073]:MethodDeclaration[2029-2073]"
    }, {
      "left" : "void startNewLine()",
      "right" : "void startNewLine()",
      "info" : "MethodDeclaration[2077-2102]:MethodDeclaration[2077-2102]"
    }, {
      "left" : "void maybeLineBreak()",
      "right" : "void maybeLineBreak()",
      "info" : "MethodDeclaration[2106-2153]:MethodDeclaration[2106-2153]"
    }, {
      "left" : "void maybeCutLine()",
      "right" : "void maybeCutLine()",
      "info" : "MethodDeclaration[2157-2182]:MethodDeclaration[2157-2182]"
    }, {
      "left" : "void endLine()",
      "right" : "void endLine()",
      "info" : "MethodDeclaration[2186-2206]:MethodDeclaration[2186-2206]"
    }, {
      "left" : "void notePreferredLineBreak()",
      "right" : "void notePreferredLineBreak()",
      "info" : "MethodDeclaration[2210-2245]:MethodDeclaration[2210-2245]"
    }, {
      "left" : "void beginBlock()",
      "right" : "void beginBlock()",
      "info" : "MethodDeclaration[2249-2425]:MethodDeclaration[2249-2425]"
    }, {
      "left" : "void endBlock()",
      "right" : "void endBlock()",
      "info" : "MethodDeclaration[2429-2471]:MethodDeclaration[2429-2471]"
    }, {
      "left" : "void endBlock(boolean shouldEndLine)",
      "right" : "void endBlock(boolean shouldEndLine)",
      "info" : "MethodDeclaration[2475-2620]:MethodDeclaration[2475-2620]"
    }, {
      "left" : "void listSeparator()",
      "right" : "void listSeparator()",
      "info" : "MethodDeclaration[2624-2686]:MethodDeclaration[2624-2686]"
    }, {
      "left" : "void endStatement()",
      "right" : "void endStatement()",
      "info" : "MethodDeclaration[2690-2968]:MethodDeclaration[2690-2968]"
    }, {
      "left" : "void endStatement(boolean needSemiColon)",
      "right" : "void endStatement(boolean needSemiColon)",
      "info" : "MethodDeclaration[2972-3196]:MethodDeclaration[2972-3196]"
    }, {
      "left" : "void maybeEndStatement()",
      "right" : "void maybeEndStatement()",
      "info" : "MethodDeclaration[3200-3545]:MethodDeclaration[3200-3545]"
    }, {
      "left" : "void endFunction()",
      "right" : "void endFunction()",
      "info" : "MethodDeclaration[3549-3597]:MethodDeclaration[3549-3597]"
    }, {
      "left" : "void endFunction(boolean statementContext)",
      "right" : "void endFunction(boolean statementContext)",
      "info" : "MethodDeclaration[3601-3724]:MethodDeclaration[3601-3724]"
    }, {
      "left" : "void beginCaseBody()",
      "right" : "void beginCaseBody()",
      "info" : "MethodDeclaration[3728-3771]:MethodDeclaration[3728-3771]"
    }, {
      "left" : "void endCaseBody()",
      "right" : "void endCaseBody()",
      "info" : "MethodDeclaration[3775-3799]:MethodDeclaration[3775-3799]"
    }, {
      "left" : "void add(String newcode)",
      "right" : "void add(String newcode)",
      "info" : "MethodDeclaration[3803-4167]:MethodDeclaration[3803-4167]"
    }, {
      "left" : "void appendOp(String op, boolean binOp)",
      "right" : "void appendOp(String op, boolean binOp)",
      "info" : "MethodDeclaration[4171-4232]:MethodDeclaration[4171-4232]"
    }, {
      "left" : "void addOp(String op, boolean binOp)",
      "right" : "void addOp(String op, boolean binOp)",
      "info" : "MethodDeclaration[4236-5144]:MethodDeclaration[4236-5144]"
    }, {
      "left" : "static boolean isWordChar(char ch)",
      "right" : "static boolean isWordChar(char ch)",
      "info" : "MethodDeclaration[5842-5976]:MethodDeclaration[5964-6098]"
    }, {
      "left" : "boolean shouldPreserveExtraBlocks()",
      "right" : "boolean shouldPreserveExtraBlocks()",
      "info" : "MethodDeclaration[5980-6396]:MethodDeclaration[6102-6518]"
    }, {
      "left" : "boolean breakAfterBlockFor(Node n, boolean statementContext)",
      "right" : "boolean breakAfterBlockFor(Node n, boolean statementContext)",
      "info" : "MethodDeclaration[6400-6585]:MethodDeclaration[6522-6707]"
    }, {
      "left" : "void endFile()",
      "right" : "void endFile()",
      "info" : "MethodDeclaration[6589-6655]:MethodDeclaration[6711-6777]"
    } ],
    "mappings" : [
 {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1060-1064]:PrimitiveType[1060-1064]"
    }, {
      "left" : "startSourceMapping",
      "right" : "startSourceMapping",
      "info" : "SimpleName[1065-1083]:SimpleName[1065-1083]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[1084-1093]:SingleVariableDeclaration[1084-1093]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1095-1100]:Block[1095-1100]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1198-1202]:PrimitiveType[1198-1202]"
    }, {
      "left" : "endSourceMapping",
      "right" : "endSourceMapping",
      "info" : "SimpleName[1203-1219]:SimpleName[1203-1219]"
    }, {
      "left" : "Node node",
      "right" : "Node node",
      "info" : "SingleVariableDeclaration[1220-1229]:SingleVariableDeclaration[1220-1229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1231-1236]:Block[1231-1236]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[1378-1385]:PrimitiveType[1378-1385]"
    }, {
      "left" : "continueProcessing",
      "right" : "continueProcessing",
      "info" : "SimpleName[1386-1404]:SimpleName[1386-1404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1407-1429]:Block[1407-1429]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[1413-1425]:ReturnStatement[1413-1425]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1513-1521]:Modifier[1513-1521]"
    }, {
      "left" : "char",
      "right" : "char",
      "info" : "PrimitiveType[1522-1526]:PrimitiveType[1522-1526]"
    }, {
      "left" : "getLastChar",
      "right" : "getLastChar",
      "info" : "SimpleName[1527-1538]:SimpleName[1527-1538]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1545-1549]:PrimitiveType[1545-1549]"
    }, {
      "left" : "addIdentifier",
      "right" : "addIdentifier",
      "info" : "SimpleName[1550-1563]:SimpleName[1550-1563]"
    }, {
      "left" : "String identifier",
      "right" : "String identifier",
      "info" : "SingleVariableDeclaration[1564-1581]:SingleVariableDeclaration[1564-1581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1583-1609]:Block[1583-1609]"
    }, {
      "left" : "add(identifier);",
      "right" : "add(identifier);",
      "info" : "ExpressionStatement[1589-1605]:ExpressionStatement[1589-1605]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1942-1950]:Modifier[1942-1950]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1951-1955]:PrimitiveType[1951-1955]"
    }, {
      "left" : "append",
      "right" : "append",
      "info" : "SimpleName[1956-1962]:SimpleName[1956-1962]"
    }, {
      "left" : "String str",
      "right" : "String str",
      "info" : "SingleVariableDeclaration[1963-1973]:SingleVariableDeclaration[1963-1973]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1979-1983]:PrimitiveType[1979-1983]"
    }, {
      "left" : "appendBlockStart",
      "right" : "appendBlockStart",
      "info" : "SimpleName[1984-2000]:SimpleName[1984-2000]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2003-2025]:Block[2003-2025]"
    }, {
      "left" : "append(\"{\");",
      "right" : "append(\"{\");",
      "info" : "ExpressionStatement[2009-2021]:ExpressionStatement[2009-2021]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2029-2033]:PrimitiveType[2029-2033]"
    }, {
      "left" : "appendBlockEnd",
      "right" : "appendBlockEnd",
      "info" : "SimpleName[2034-2048]:SimpleName[2034-2048]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2051-2073]:Block[2051-2073]"
    }, {
      "left" : "append(\"}\");",
      "right" : "append(\"}\");",
      "info" : "ExpressionStatement[2057-2069]:ExpressionStatement[2057-2069]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2077-2081]:PrimitiveType[2077-2081]"
    }, {
      "left" : "startNewLine",
      "right" : "startNewLine",
      "info" : "SimpleName[2082-2094]:SimpleName[2082-2094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2097-2102]:Block[2097-2102]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2106-2110]:PrimitiveType[2106-2110]"
    }, {
      "left" : "maybeLineBreak",
      "right" : "maybeLineBreak",
      "info" : "SimpleName[2111-2125]:SimpleName[2111-2125]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2128-2153]:Block[2128-2153]"
    }, {
      "left" : "maybeCutLine();",
      "right" : "maybeCutLine();",
      "info" : "ExpressionStatement[2134-2149]:ExpressionStatement[2134-2149]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2157-2161]:PrimitiveType[2157-2161]"
    }, {
      "left" : "maybeCutLine",
      "right" : "maybeCutLine",
      "info" : "SimpleName[2162-2174]:SimpleName[2162-2174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2177-2182]:Block[2177-2182]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2186-2190]:PrimitiveType[2186-2190]"
    }, {
      "left" : "endLine",
      "right" : "endLine",
      "info" : "SimpleName[2191-2198]:SimpleName[2191-2198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2201-2206]:Block[2201-2206]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2210-2214]:PrimitiveType[2210-2214]"
    }, {
      "left" : "notePreferredLineBreak",
      "right" : "notePreferredLineBreak",
      "info" : "SimpleName[2215-2237]:SimpleName[2215-2237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2240-2245]:Block[2240-2245]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2249-2253]:PrimitiveType[2249-2253]"
    }, {
      "left" : "beginBlock",
      "right" : "beginBlock",
      "info" : "SimpleName[2254-2264]:SimpleName[2254-2264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2267-2425]:Block[2267-2425]"
    }, {
      "left" : "if (statementNeedsEnded)",
      "right" : "if (statementNeedsEnded)",
      "info" : "IfStatement[2273-2348]:IfStatement[2273-2348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2298-2348]:Block[2298-2348]"
    }, {
      "left" : "append(\";\");",
      "right" : "append(\";\");",
      "info" : "ExpressionStatement[2306-2318]:ExpressionStatement[2306-2318]"
    }, {
      "left" : "maybeLineBreak();",
      "right" : "maybeLineBreak();",
      "info" : "ExpressionStatement[2325-2342]:ExpressionStatement[2325-2342]"
    }, {
      "left" : "appendBlockStart();",
      "right" : "appendBlockStart();",
      "info" : "ExpressionStatement[2353-2372]:ExpressionStatement[2353-2372]"
    }, {
      "left" : "endLine();",
      "right" : "endLine();",
      "info" : "ExpressionStatement[2378-2388]:ExpressionStatement[2378-2388]"
    }, {
      "left" : "statementNeedsEnded = false;",
      "right" : "statementNeedsEnded = false;",
      "info" : "ExpressionStatement[2393-2421]:ExpressionStatement[2393-2421]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2429-2433]:PrimitiveType[2429-2433]"
    }, {
      "left" : "endBlock",
      "right" : "endBlock",
      "info" : "SimpleName[2434-2442]:SimpleName[2434-2442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2445-2471]:Block[2445-2471]"
    }, {
      "left" : "endBlock(false);",
      "right" : "endBlock(false);",
      "info" : "ExpressionStatement[2451-2467]:ExpressionStatement[2451-2467]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2475-2479]:PrimitiveType[2475-2479]"
    }, {
      "left" : "endBlock",
      "right" : "endBlock",
      "info" : "SimpleName[2480-2488]:SimpleName[2480-2488]"
    }, {
      "left" : "boolean shouldEndLine",
      "right" : "boolean shouldEndLine",
      "info" : "SingleVariableDeclaration[2489-2510]:SingleVariableDeclaration[2489-2510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2512-2620]:Block[2512-2620]"
    }, {
      "left" : "appendBlockEnd();",
      "right" : "appendBlockEnd();",
      "info" : "ExpressionStatement[2518-2535]:ExpressionStatement[2518-2535]"
    }, {
      "left" : "if (shouldEndLine)",
      "right" : "if (shouldEndLine)",
      "info" : "IfStatement[2540-2583]:IfStatement[2540-2583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2559-2583]:Block[2559-2583]"
    }, {
      "left" : "endLine();",
      "right" : "endLine();",
      "info" : "ExpressionStatement[2567-2577]:ExpressionStatement[2567-2577]"
    }, {
      "left" : "statementNeedsEnded = false;",
      "right" : "statementNeedsEnded = false;",
      "info" : "ExpressionStatement[2588-2616]:ExpressionStatement[2588-2616]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2624-2628]:PrimitiveType[2624-2628]"
    }, {
      "left" : "listSeparator",
      "right" : "listSeparator",
      "info" : "SimpleName[2629-2642]:SimpleName[2629-2642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2645-2686]:Block[2645-2686]"
    }, {
      "left" : "add(\",\");",
      "right" : "add(\",\");",
      "info" : "ExpressionStatement[2651-2660]:ExpressionStatement[2651-2660]"
    }, {
      "left" : "maybeLineBreak();",
      "right" : "maybeLineBreak();",
      "info" : "ExpressionStatement[2665-2682]:ExpressionStatement[2665-2682]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2918-2922]:PrimitiveType[2918-2922]"
    }, {
      "left" : "endStatement",
      "right" : "endStatement",
      "info" : "SimpleName[2923-2935]:SimpleName[2923-2935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2938-2968]:Block[2938-2968]"
    }, {
      "left" : "endStatement(false);",
      "right" : "endStatement(false);",
      "info" : "ExpressionStatement[2944-2964]:ExpressionStatement[2944-2964]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2972-2976]:PrimitiveType[2972-2976]"
    }, {
      "left" : "endStatement",
      "right" : "endStatement",
      "info" : "SimpleName[2977-2989]:SimpleName[2977-2989]"
    }, {
      "left" : "boolean needSemiColon",
      "right" : "boolean needSemiColon",
      "info" : "SingleVariableDeclaration[2990-3011]:SingleVariableDeclaration[2990-3011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3013-3196]:Block[3013-3196]"
    }, {
      "left" : "if (needSemiColon)",
      "right" : "if (needSemiColon)",
      "info" : "IfStatement[3019-3192]:IfStatement[3019-3192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3038-3123]:Block[3038-3123]"
    }, {
      "left" : "append(\";\");",
      "right" : "append(\";\");",
      "info" : "ExpressionStatement[3046-3058]:ExpressionStatement[3046-3058]"
    }, {
      "left" : "maybeLineBreak();",
      "right" : "maybeLineBreak();",
      "info" : "ExpressionStatement[3065-3082]:ExpressionStatement[3065-3082]"
    }, {
      "left" : "statementNeedsEnded = false;",
      "right" : "statementNeedsEnded = false;",
      "info" : "ExpressionStatement[3089-3117]:ExpressionStatement[3089-3117]"
    }, {
      "left" : "if (statementStarted)",
      "right" : "if (statementStarted)",
      "info" : "IfStatement[3129-3192]:IfStatement[3129-3192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3151-3192]:Block[3151-3192]"
    }, {
      "left" : "statementNeedsEnded = true;",
      "right" : "statementNeedsEnded = true;",
      "info" : "ExpressionStatement[3159-3186]:ExpressionStatement[3159-3186]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3322-3326]:PrimitiveType[3322-3326]"
    }, {
      "left" : "maybeEndStatement",
      "right" : "maybeEndStatement",
      "info" : "SimpleName[3327-3344]:SimpleName[3327-3344]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3347-3545]:Block[3347-3545]"
    }, {
      "left" : "if (statementNeedsEnded)",
      "right" : "if (statementNeedsEnded)",
      "info" : "IfStatement[3385-3512]:IfStatement[3385-3512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3410-3512]:Block[3410-3512]"
    }, {
      "left" : "append(\";\");",
      "right" : "append(\";\");",
      "info" : "ExpressionStatement[3418-3430]:ExpressionStatement[3418-3430]"
    }, {
      "left" : "maybeLineBreak();",
      "right" : "maybeLineBreak();",
      "info" : "ExpressionStatement[3437-3454]:ExpressionStatement[3437-3454]"
    }, {
      "left" : "endLine();",
      "right" : "endLine();",
      "info" : "ExpressionStatement[3461-3471]:ExpressionStatement[3461-3471]"
    }, {
      "left" : "statementNeedsEnded = false;",
      "right" : "statementNeedsEnded = false;",
      "info" : "ExpressionStatement[3478-3506]:ExpressionStatement[3478-3506]"
    }, {
      "left" : "statementStarted = true;",
      "right" : "statementStarted = true;",
      "info" : "ExpressionStatement[3517-3541]:ExpressionStatement[3517-3541]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3549-3553]:PrimitiveType[3549-3553]"
    }, {
      "left" : "endFunction",
      "right" : "endFunction",
      "info" : "SimpleName[3554-3565]:SimpleName[3554-3565]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3568-3597]:Block[3568-3597]"
    }, {
      "left" : "endFunction(false);",
      "right" : "endFunction(false);",
      "info" : "ExpressionStatement[3574-3593]:ExpressionStatement[3574-3593]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3601-3605]:PrimitiveType[3601-3605]"
    }, {
      "left" : "endFunction",
      "right" : "endFunction",
      "info" : "SimpleName[3606-3617]:SimpleName[3606-3617]"
    }, {
      "left" : "boolean statementContext",
      "right" : "boolean statementContext",
      "info" : "SingleVariableDeclaration[3618-3642]:SingleVariableDeclaration[3618-3642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3644-3724]:Block[3644-3724]"
    }, {
      "left" : "sawFunction = true;",
      "right" : "sawFunction = true;",
      "info" : "ExpressionStatement[3650-3669]:ExpressionStatement[3650-3669]"
    }, {
      "left" : "if (statementContext)",
      "right" : "if (statementContext)",
      "info" : "IfStatement[3674-3720]:IfStatement[3674-3720]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3696-3720]:Block[3696-3720]"
    }, {
      "left" : "endLine();",
      "right" : "endLine();",
      "info" : "ExpressionStatement[3704-3714]:ExpressionStatement[3704-3714]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3728-3732]:PrimitiveType[3728-3732]"
    }, {
      "left" : "beginCaseBody",
      "right" : "beginCaseBody",
      "info" : "SimpleName[3733-3746]:SimpleName[3733-3746]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3749-3771]:Block[3749-3771]"
    }, {
      "left" : "append(\":\");",
      "right" : "append(\":\");",
      "info" : "ExpressionStatement[3755-3767]:ExpressionStatement[3755-3767]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3775-3779]:PrimitiveType[3775-3779]"
    }, {
      "left" : "endCaseBody",
      "right" : "endCaseBody",
      "info" : "SimpleName[3780-3791]:SimpleName[3780-3791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3794-3799]:Block[3794-3799]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3803-3807]:PrimitiveType[3803-3807]"
    }, {
      "left" : "add",
      "right" : "add",
      "info" : "SimpleName[3808-3811]:SimpleName[3808-3811]"
    }, {
      "left" : "String newcode",
      "right" : "String newcode",
      "info" : "SingleVariableDeclaration[3812-3826]:SingleVariableDeclaration[3812-3826]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3828-4167]:Block[3828-4167]"
    }, {
      "left" : "maybeEndStatement();",
      "right" : "maybeEndStatement();",
      "info" : "ExpressionStatement[3834-3854]:ExpressionStatement[3834-3854]"
    }, {
      "left" : "if (newcode.length() == 0)",
      "right" : "if (newcode.length() == 0)",
      "info" : "IfStatement[3860-3908]:IfStatement[3860-3908]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3887-3908]:Block[3887-3908]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[3895-3902]:ReturnStatement[3895-3902]"
    }, {
      "left" : "char c = newcode.charAt(0);",
      "right" : "char c = newcode.charAt(0);",
      "info" : "VariableDeclarationStatement[3914-3941]:VariableDeclarationStatement[3914-3941]"
    }, {
      "left" : "if ((isWordChar(c) || c == '\\\\') &&\n        isWordChar(getLastChar()))",
      "right" : "if ((isWordChar(c) || c == '\\\\') &&\n        isWordChar(getLastChar()))",
      "info" : "IfStatement[3946-4141]:IfStatement[3946-4141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4017-4141]:Block[4017-4141]"
    }, {
      "left" : "append(\" \");",
      "right" : "append(\" \");",
      "info" : "ExpressionStatement[4123-4135]:ExpressionStatement[4123-4135]"
    }, {
      "left" : "append(newcode);",
      "right" : "append(newcode);",
      "info" : "ExpressionStatement[4147-4163]:ExpressionStatement[4147-4163]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4171-4175]:PrimitiveType[4171-4175]"
    }, {
      "left" : "appendOp",
      "right" : "appendOp",
      "info" : "SimpleName[4176-4184]:SimpleName[4176-4184]"
    }, {
      "left" : "String op",
      "right" : "String op",
      "info" : "SingleVariableDeclaration[4185-4194]:SingleVariableDeclaration[4185-4194]"
    }, {
      "left" : "boolean binOp",
      "right" : "boolean binOp",
      "info" : "SingleVariableDeclaration[4196-4209]:SingleVariableDeclaration[4196-4209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4211-4232]:Block[4211-4232]"
    }, {
      "left" : "append(op);",
      "right" : "append(op);",
      "info" : "ExpressionStatement[4217-4228]:ExpressionStatement[4217-4228]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4236-4240]:PrimitiveType[4236-4240]"
    }, {
      "left" : "addOp",
      "right" : "addOp",
      "info" : "SimpleName[4241-4246]:SimpleName[4241-4246]"
    }, {
      "left" : "String op",
      "right" : "String op",
      "info" : "SingleVariableDeclaration[4247-4256]:SingleVariableDeclaration[4247-4256]"
    }, {
      "left" : "boolean binOp",
      "right" : "boolean binOp",
      "info" : "SingleVariableDeclaration[4258-4271]:SingleVariableDeclaration[4258-4271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4273-5144]:Block[4273-5144]"
    }, {
      "left" : "maybeEndStatement();",
      "right" : "maybeEndStatement();",
      "info" : "ExpressionStatement[4279-4299]:ExpressionStatement[4279-4299]"
    }, {
      "left" : "char first = op.charAt(0);",
      "right" : "char first = op.charAt(0);",
      "info" : "VariableDeclarationStatement[4305-4331]:VariableDeclarationStatement[4305-4331]"
    }, {
      "left" : "char prev = getLastChar();",
      "right" : "char prev = getLastChar();",
      "info" : "VariableDeclarationStatement[4336-4362]:VariableDeclarationStatement[4336-4362]"
    }, {
      "left" : "if ((first == '+' || first == '-') && prev == first)",
      "right" : "if ((first == '+' || first == '-') && prev == first)",
      "info" : "IfStatement[4368-4836]:IfStatement[4368-4836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4421-4564]:Block[4421-4564]"
    }, {
      "left" : "append(\" \");",
      "right" : "append(\" \");",
      "info" : "ExpressionStatement[4546-4558]:ExpressionStatement[4546-4558]"
    }, {
      "left" : "if (Character.isLetter(first) &&\n               isWordChar(prev))",
      "right" : "if (Character.isLetter(first) &&\n               isWordChar(prev))",
      "info" : "IfStatement[4570-4836]:IfStatement[4570-4836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4636-4729]:Block[4636-4729]"
    }, {
      "left" : "append(\" \");",
      "right" : "append(\" \");",
      "info" : "ExpressionStatement[4711-4723]:ExpressionStatement[4711-4723]"
    }, {
      "left" : "if (prev == '-' && first == '>')",
      "right" : "if (prev == '-' && first == '>')",
      "info" : "IfStatement[4735-4836]:IfStatement[4735-4836]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4768-4836]:Block[4768-4836]"
    }, {
      "left" : "append(\" \");",
      "right" : "append(\" \");",
      "info" : "ExpressionStatement[4818-4830]:ExpressionStatement[4818-4830]"
    }, {
      "left" : "appendOp(op, binOp);",
      "right" : "appendOp(op, binOp);",
      "info" : "ExpressionStatement[4886-4906]:ExpressionStatement[4886-4906]"
    }, {
      "left" : "if (binOp)",
      "right" : "if (binOp)",
      "info" : "IfStatement[5100-5140]:IfStatement[5100-5140]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5111-5140]:Block[5111-5140]"
    }, {
      "left" : "maybeCutLine();",
      "right" : "maybeCutLine();",
      "info" : "ExpressionStatement[5119-5134]:ExpressionStatement[5119-5134]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5842-5848]:Modifier[5964-5970]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5849-5856]:PrimitiveType[5971-5978]"
    }, {
      "left" : "isWordChar",
      "right" : "isWordChar",
      "info" : "SimpleName[5857-5867]:SimpleName[5979-5989]"
    }, {
      "left" : "char ch",
      "right" : "char ch",
      "info" : "SingleVariableDeclaration[5868-5875]:SingleVariableDeclaration[5990-5997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5877-5976]:Block[5999-6098]"
    }, {
      "left" : "return (ch == '_' ||\n            ch == '$' ||\n            Character.isLetterOrDigit(ch));",
      "right" : "return (ch == '_' ||\n            ch == '$' ||\n            Character.isLetterOrDigit(ch));",
      "info" : "ReturnStatement[5883-5972]:ReturnStatement[6005-6094]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6337-6344]:PrimitiveType[6459-6466]"
    }, {
      "left" : "shouldPreserveExtraBlocks",
      "right" : "shouldPreserveExtraBlocks",
      "info" : "SimpleName[6345-6370]:SimpleName[6467-6492]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6373-6396]:Block[6495-6518]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[6379-6392]:ReturnStatement[6501-6514]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[6490-6497]:PrimitiveType[6612-6619]"
    }, {
      "left" : "breakAfterBlockFor",
      "right" : "breakAfterBlockFor",
      "info" : "SimpleName[6498-6516]:SimpleName[6620-6638]"
    }, {
      "left" : "Node n",
      "right" : "Node n",
      "info" : "SingleVariableDeclaration[6517-6523]:SingleVariableDeclaration[6639-6645]"
    }, {
      "left" : "boolean statementContext",
      "right" : "boolean statementContext",
      "info" : "SingleVariableDeclaration[6525-6549]:SingleVariableDeclaration[6647-6671]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6551-6585]:Block[6673-6707]"
    }, {
      "left" : "return statementContext;",
      "right" : "return statementContext;",
      "info" : "ReturnStatement[6557-6581]:ReturnStatement[6679-6703]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[6638-6642]:PrimitiveType[6760-6764]"
    }, {
      "left" : "endFile",
      "right" : "endFile",
      "info" : "SimpleName[6643-6650]:SimpleName[6765-6772]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6653-6655]:Block[6775-6777]"
    } ]
  },
  "interFileMappings" : { }
}