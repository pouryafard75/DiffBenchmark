{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "ConnectionProxy",
      "right" : "ConnectionProxy",
      "info" : "TypeDeclaration[1122-12612]:TypeDeclaration[1122-12805]"
    }, {
      "left" : "private static final Logger LOGGER;",
      "right" : "private static final Logger LOGGER;",
      "info" : "FieldDeclaration[1290-1325]:FieldDeclaration[1290-1325]"
    }, {
      "left" : "private static final Set<String> SQL_ERRORS;",
      "right" : "private static final Set<String> SQL_ERRORS;",
      "info" : "FieldDeclaration[1329-1373]:FieldDeclaration[1329-1373]"
    }, {
      "left" : "protected Connection delegate;",
      "right" : "protected Connection delegate;",
      "info" : "FieldDeclaration[1378-1408]:FieldDeclaration[1378-1408]"
    }, {
      "left" : "private final LeakTask leakTask;",
      "right" : "private final LeakTask leakTask;",
      "info" : "FieldDeclaration[1413-1445]:FieldDeclaration[1413-1445]"
    }, {
      "left" : "private final HikariPool parentPool;",
      "right" : "private final HikariPool parentPool;",
      "info" : "FieldDeclaration[1449-1485]:FieldDeclaration[1449-1485]"
    }, {
      "left" : "private final PoolBagEntry bagEntry;",
      "right" : "private final PoolBagEntry bagEntry;",
      "info" : "FieldDeclaration[1489-1525]:FieldDeclaration[1489-1525]"
    }, {
      "left" : "private final FastList<Statement> openStatements;",
      "right" : "private final FastList<Statement> openStatements;",
      "info" : "FieldDeclaration[1529-1578]:FieldDeclaration[1529-1578]"
    }, {
      "left" : "private long lastAccess;",
      "right" : "private long lastAccess;",
      "info" : "FieldDeclaration[1586-1610]:FieldDeclaration[1586-1610]"
    }, {
      "left" : "private boolean isCommitStateDirty;",
      "right" : "private boolean isCommitStateDirty;",
      "info" : "FieldDeclaration[1614-1649]:FieldDeclaration[1614-1649]"
    }, {
      "left" : "private boolean isConnectionStateDirty;",
      "right" : "private boolean isConnectionStateDirty;",
      "info" : "FieldDeclaration[1653-1692]:FieldDeclaration[1653-1692]"
    }, {
      "left" : "private boolean isAutoCommitDirty;",
      "right" : "private boolean isAutoCommitDirty;",
      "info" : "FieldDeclaration[1696-1730]:FieldDeclaration[1696-1730]"
    }, {
      "left" : "private boolean isCatalogDirty;",
      "right" : "private boolean isCatalogDirty;",
      "info" : "FieldDeclaration[1734-1765]:FieldDeclaration[1734-1765]"
    }, {
      "left" : "private boolean isReadOnlyDirty;",
      "right" : "private boolean isReadOnlyDirty;",
      "info" : "FieldDeclaration[1769-1801]:FieldDeclaration[1769-1801]"
    }, {
      "left" : "private boolean isTransactionIsolationDirty;",
      "right" : "private boolean isTransactionIsolationDirty;",
      "info" : "FieldDeclaration[1805-1849]:FieldDeclaration[1805-1849]"
    }, {
      "left" : "protected ConnectionProxy(final HikariPool pool, final PoolBagEntry bagEntry, final LeakTask leakTask)",
      "right" : "protected ConnectionProxy(final HikariPool pool, final PoolBagEntry bagEntry, final LeakTask leakTask)",
      "info" : "MethodDeclaration[2327-2693]:MethodDeclaration[2327-2693]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[2698-2869]:MethodDeclaration[2698-2869]"
    }, {
      "left" : "public final PoolBagEntry getPoolBagEntry()",
      "right" : "public final PoolBagEntry getPoolBagEntry()",
      "info" : "MethodDeclaration[3089-3202]:MethodDeclaration[3089-3202]"
    }, {
      "left" : "public final SQLException checkException(final SQLException sqle)",
      "right" : "public final SQLException checkException(final SQLException sqle)",
      "info" : "MethodDeclaration[3207-3941]:MethodDeclaration[3207-3941]"
    }, {
      "left" : "public final void untrackStatement(final Statement statement)",
      "right" : "public final void untrackStatement(final Statement statement)",
      "info" : "MethodDeclaration[3946-4094]:MethodDeclaration[3946-4094]"
    }, {
      "left" : "public final void markCommitStateDirty()",
      "right" : "public final void markCommitStateDirty()",
      "info" : "MethodDeclaration[4099-4266]:MethodDeclaration[4099-4266]"
    }, {
      "left" : "private final <T extends Statement> T trackStatement(final T statement)",
      "right" : "private final <T extends Statement> T trackStatement(final T statement)",
      "info" : "MethodDeclaration[4474-4664]:MethodDeclaration[4474-4664]"
    }, {
      "left" : "private final void resetConnectionState() throws SQLException",
      "right" : "private final void resetConnectionState() throws SQLException",
      "info" : "MethodDeclaration[4669-5415]:MethodDeclaration[4669-5415]"
    }, {
      "left" : "public final void close() throws SQLException",
      "right" : "private void closeOpenStatements()",
      "info" : "MethodDeclaration[5640-6977]:MethodDeclaration[6692-7170]"
    }, {
      "left" : "public boolean isClosed() throws SQLException",
      "right" : "public boolean isClosed() throws SQLException",
      "info" : "MethodDeclaration[6982-7137]:MethodDeclaration[7175-7330]"
    }, {
      "left" : "public Statement createStatement() throws SQLException",
      "right" : "public Statement createStatement() throws SQLException",
      "info" : "MethodDeclaration[7142-7338]:MethodDeclaration[7335-7531]"
    }, {
      "left" : "public Statement createStatement(int resultSetType, int concurrency) throws SQLException",
      "right" : "public Statement createStatement(int resultSetType, int concurrency) throws SQLException",
      "info" : "MethodDeclaration[7343-7599]:MethodDeclaration[7536-7792]"
    }, {
      "left" : "public Statement createStatement(int resultSetType, int concurrency, int holdability) throws SQLException",
      "right" : "public Statement createStatement(int resultSetType, int concurrency, int holdability) throws SQLException",
      "info" : "MethodDeclaration[7604-7890]:MethodDeclaration[7797-8083]"
    }, {
      "left" : "public CallableStatement prepareCall(String sql) throws SQLException",
      "right" : "public CallableStatement prepareCall(String sql) throws SQLException",
      "info" : "MethodDeclaration[7895-8112]:MethodDeclaration[8088-8305]"
    }, {
      "left" : "public CallableStatement prepareCall(String sql, int resultSetType, int concurrency) throws SQLException",
      "right" : "public CallableStatement prepareCall(String sql, int resultSetType, int concurrency) throws SQLException",
      "info" : "MethodDeclaration[8117-8398]:MethodDeclaration[8310-8591]"
    }, {
      "left" : "public CallableStatement prepareCall(String sql, int resultSetType, int concurrency, int holdability) throws SQLException",
      "right" : "public CallableStatement prepareCall(String sql, int resultSetType, int concurrency, int holdability) throws SQLException",
      "info" : "MethodDeclaration[8403-8714]:MethodDeclaration[8596-8907]"
    }, {
      "left" : "public PreparedStatement prepareStatement(String sql) throws SQLException",
      "right" : "public PreparedStatement prepareStatement(String sql) throws SQLException",
      "info" : "MethodDeclaration[8719-8946]:MethodDeclaration[8912-9139]"
    }, {
      "left" : "public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException",
      "right" : "public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException",
      "info" : "MethodDeclaration[8951-9220]:MethodDeclaration[9144-9413]"
    }, {
      "left" : "public PreparedStatement prepareStatement(String sql, int resultSetType, int concurrency) throws SQLException",
      "right" : "public PreparedStatement prepareStatement(String sql, int resultSetType, int concurrency) throws SQLException",
      "info" : "MethodDeclaration[9225-9516]:MethodDeclaration[9418-9709]"
    }, {
      "left" : "public PreparedStatement prepareStatement(String sql, int resultSetType, int concurrency, int holdability) throws SQLException",
      "right" : "public PreparedStatement prepareStatement(String sql, int resultSetType, int concurrency, int holdability) throws SQLException",
      "info" : "MethodDeclaration[9521-9842]:MethodDeclaration[9714-10035]"
    }, {
      "left" : "public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException",
      "right" : "public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException",
      "info" : "MethodDeclaration[9847-10110]:MethodDeclaration[10040-10303]"
    }, {
      "left" : "public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException",
      "right" : "public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException",
      "info" : "MethodDeclaration[10115-10377]:MethodDeclaration[10308-10570]"
    }, {
      "left" : "public void commit() throws SQLException",
      "right" : "public void commit() throws SQLException",
      "info" : "MethodDeclaration[10382-10528]:MethodDeclaration[10575-10721]"
    }, {
      "left" : "public void rollback() throws SQLException",
      "right" : "public void rollback() throws SQLException",
      "info" : "MethodDeclaration[10533-10683]:MethodDeclaration[10726-10876]"
    }, {
      "left" : "public void rollback(Savepoint savepoint) throws SQLException",
      "right" : "public void rollback(Savepoint savepoint) throws SQLException",
      "info" : "MethodDeclaration[10688-10866]:MethodDeclaration[10881-11059]"
    }, {
      "left" : "public void setAutoCommit(boolean autoCommit) throws SQLException",
      "right" : "public void setAutoCommit(boolean autoCommit) throws SQLException",
      "info" : "MethodDeclaration[10871-11129]:MethodDeclaration[11064-11322]"
    }, {
      "left" : "public void setReadOnly(boolean readOnly) throws SQLException",
      "right" : "public void setReadOnly(boolean readOnly) throws SQLException",
      "info" : "MethodDeclaration[11134-11378]:MethodDeclaration[11327-11571]"
    }, {
      "left" : "public void setTransactionIsolation(int level) throws SQLException",
      "right" : "public void setTransactionIsolation(int level) throws SQLException",
      "info" : "MethodDeclaration[11383-11660]:MethodDeclaration[11576-11853]"
    }, {
      "left" : "public void setCatalog(String catalog) throws SQLException",
      "right" : "public void setCatalog(String catalog) throws SQLException",
      "info" : "MethodDeclaration[11665-11975]:MethodDeclaration[11858-12168]"
    }, {
      "left" : "public final boolean isWrapperFor(Class<?> iface) throws SQLException",
      "right" : "public final boolean isWrapperFor(Class<?> iface) throws SQLException",
      "info" : "MethodDeclaration[11980-12202]:MethodDeclaration[12173-12395]"
    }, {
      "left" : "public final <T> T unwrap(Class<T> iface) throws SQLException",
      "right" : "public final <T> T unwrap(Class<T> iface) throws SQLException",
      "info" : "MethodDeclaration[12207-12610]:MethodDeclaration[12400-12803]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1213-1219]:Modifier[1213-1219]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[1220-1228]:Modifier[1220-1228]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1229-1234]:TYPE_DECLARATION_KIND[1229-1234]"
    }, {
      "left" : "ConnectionProxy",
      "right" : "ConnectionProxy",
      "info" : "SimpleName[1235-1250]:SimpleName[1235-1250]"
    }, {
      "left" : "IHikariConnectionProxy",
      "right" : "IHikariConnectionProxy",
      "info" : "SimpleType[1262-1284]:SimpleType[1262-1284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1886-2322]:Block[1886-2322]"
    }, {
      "left" : "LOGGER = LoggerFactory.getLogger(ConnectionProxy.class);",
      "right" : "LOGGER = LoggerFactory.getLogger(ConnectionProxy.class);",
      "info" : "ExpressionStatement[1894-1950]:ExpressionStatement[1894-1950]"
    }, {
      "left" : "SQL_ERRORS = new HashSet<String>();",
      "right" : "SQL_ERRORS = new HashSet<String>();",
      "info" : "ExpressionStatement[1958-1993]:ExpressionStatement[1958-1993]"
    }, {
      "left" : "SQL_ERRORS.add(\"57P01\");",
      "right" : "SQL_ERRORS.add(\"57P01\");",
      "info" : "ExpressionStatement[2000-2024]:ExpressionStatement[2000-2024]"
    }, {
      "left" : "SQL_ERRORS.add(\"57P02\");",
      "right" : "SQL_ERRORS.add(\"57P02\");",
      "info" : "ExpressionStatement[2049-2073]:ExpressionStatement[2049-2073]"
    }, {
      "left" : "SQL_ERRORS.add(\"57P03\");",
      "right" : "SQL_ERRORS.add(\"57P03\");",
      "info" : "ExpressionStatement[2098-2122]:ExpressionStatement[2098-2122]"
    }, {
      "left" : "SQL_ERRORS.add(\"01002\");",
      "right" : "SQL_ERRORS.add(\"01002\");",
      "info" : "ExpressionStatement[2151-2175]:ExpressionStatement[2151-2175]"
    }, {
      "left" : "SQL_ERRORS.add(\"JZ0C0\");",
      "right" : "SQL_ERRORS.add(\"JZ0C0\");",
      "info" : "ExpressionStatement[2208-2232]:ExpressionStatement[2208-2232]"
    }, {
      "left" : "SQL_ERRORS.add(\"JZ0C1\");",
      "right" : "SQL_ERRORS.add(\"JZ0C1\");",
      "info" : "ExpressionStatement[2266-2290]:ExpressionStatement[2266-2290]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2327-2336]:Modifier[2327-2336]"
    }, {
      "left" : "ConnectionProxy",
      "right" : "ConnectionProxy",
      "info" : "SimpleName[2337-2352]:SimpleName[2337-2352]"
    }, {
      "left" : "final HikariPool pool",
      "right" : "final HikariPool pool",
      "info" : "SingleVariableDeclaration[2353-2374]:SingleVariableDeclaration[2353-2374]"
    }, {
      "left" : "final PoolBagEntry bagEntry",
      "right" : "final PoolBagEntry bagEntry",
      "info" : "SingleVariableDeclaration[2376-2403]:SingleVariableDeclaration[2376-2403]"
    }, {
      "left" : "final LeakTask leakTask",
      "right" : "final LeakTask leakTask",
      "info" : "SingleVariableDeclaration[2405-2428]:SingleVariableDeclaration[2405-2428]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2430-2693]:Block[2430-2693]"
    }, {
      "left" : "this.parentPool = pool;",
      "right" : "this.parentPool = pool;",
      "info" : "ExpressionStatement[2438-2461]:ExpressionStatement[2438-2461]"
    }, {
      "left" : "this.bagEntry = bagEntry;",
      "right" : "this.bagEntry = bagEntry;",
      "info" : "ExpressionStatement[2468-2493]:ExpressionStatement[2468-2493]"
    }, {
      "left" : "this.delegate = bagEntry.connection;",
      "right" : "this.delegate = bagEntry.connection;",
      "info" : "ExpressionStatement[2500-2536]:ExpressionStatement[2500-2536]"
    }, {
      "left" : "this.leakTask = leakTask;",
      "right" : "this.leakTask = leakTask;",
      "info" : "ExpressionStatement[2543-2568]:ExpressionStatement[2543-2568]"
    }, {
      "left" : "this.lastAccess = bagEntry.lastAccess;",
      "right" : "this.lastAccess = bagEntry.lastAccess;",
      "info" : "ExpressionStatement[2575-2613]:ExpressionStatement[2575-2613]"
    }, {
      "left" : "this.openStatements = new FastList<Statement>(Statement.class, 16);",
      "right" : "this.openStatements = new FastList<Statement>(Statement.class, 16);",
      "info" : "ExpressionStatement[2621-2688]:ExpressionStatement[2621-2688]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2698-2707]:MarkerAnnotation[2698-2707]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2711-2717]:Modifier[2711-2717]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[2718-2724]:SimpleType[2718-2724]"
    }, {
      "left" : "toString",
      "right" : "toString",
      "info" : "SimpleName[2725-2733]:SimpleName[2725-2733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2739-2869]:Block[2739-2869]"
    }, {
      "left" : "return String.format(\"%s(%s) wrapping %s\", this.getClass().getSimpleName(), System.identityHashCode(this), delegate);",
      "right" : "return String.format(\"%s(%s) wrapping %s\", this.getClass().getSimpleName(), System.identityHashCode(this), delegate);",
      "info" : "ReturnStatement[2747-2864]:ReturnStatement[2747-2864]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3113-3122]:MarkerAnnotation[3113-3122]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3126-3132]:Modifier[3126-3132]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[3133-3138]:Modifier[3133-3138]"
    }, {
      "left" : "PoolBagEntry",
      "right" : "PoolBagEntry",
      "info" : "SimpleType[3139-3151]:SimpleType[3139-3151]"
    }, {
      "left" : "getPoolBagEntry",
      "right" : "getPoolBagEntry",
      "info" : "SimpleName[3152-3167]:SimpleName[3152-3167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3173-3202]:Block[3173-3202]"
    }, {
      "left" : "return bagEntry;",
      "right" : "return bagEntry;",
      "info" : "ReturnStatement[3181-3197]:ReturnStatement[3181-3197]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3231-3240]:MarkerAnnotation[3231-3240]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3244-3250]:Modifier[3244-3250]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[3251-3256]:Modifier[3251-3256]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[3257-3269]:SimpleType[3257-3269]"
    }, {
      "left" : "checkException",
      "right" : "checkException",
      "info" : "SimpleName[3270-3284]:SimpleName[3270-3284]"
    }, {
      "left" : "final SQLException sqle",
      "right" : "final SQLException sqle",
      "info" : "SingleVariableDeclaration[3285-3308]:SingleVariableDeclaration[3285-3308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3313-3941]:Block[3313-3941]"
    }, {
      "left" : "String sqlState = sqle.getSQLState();",
      "right" : "String sqlState = sqle.getSQLState();",
      "info" : "VariableDeclarationStatement[3321-3358]:VariableDeclarationStatement[3321-3358]"
    }, {
      "left" : "if (sqlState != null)",
      "right" : "if (sqlState != null)",
      "info" : "IfStatement[3365-3917]:IfStatement[3365-3917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3387-3917]:Block[3387-3917]"
    }, {
      "left" : "boolean isForceClose = sqlState.startsWith(\"08\") | SQL_ERRORS.contains(sqlState);",
      "right" : "boolean isForceClose = sqlState.startsWith(\"08\") | SQL_ERRORS.contains(sqlState);",
      "info" : "VariableDeclarationStatement[3398-3479]:VariableDeclarationStatement[3398-3479]"
    }, {
      "left" : "if (isForceClose)",
      "right" : "if (isForceClose)",
      "info" : "IfStatement[3489-3909]:IfStatement[3489-3909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3507-3757]:Block[3507-3757]"
    }, {
      "left" : "bagEntry.evicted = true;",
      "right" : "bagEntry.evicted = true;",
      "info" : "ExpressionStatement[3521-3545]:ExpressionStatement[3521-3545]"
    }, {
      "left" : "LOGGER.warn(\"Connection {} ({}) marked as broken because of SQLSTATE({}), ErrorCode({}).\", delegate,\n                                      parentPool, sqlState, sqle.getErrorCode(), sqle);",
      "right" : "LOGGER.warn(\"Connection {} ({}) marked as broken because of SQLSTATE({}), ErrorCode({}).\", delegate,\n                                      parentPool, sqlState, sqle.getErrorCode(), sqle);",
      "info" : "ExpressionStatement[3558-3746]:ExpressionStatement[3558-3746]"
    }, {
      "left" : "if (sqle.getNextException() != null && sqle != sqle.getNextException())",
      "right" : "if (sqle.getNextException() != null && sqle != sqle.getNextException())",
      "info" : "IfStatement[3772-3909]:IfStatement[3772-3909]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3844-3909]:Block[3844-3909]"
    }, {
      "left" : "checkException(sqle.getNextException());",
      "right" : "checkException(sqle.getNextException());",
      "info" : "ExpressionStatement[3858-3898]:ExpressionStatement[3858-3898]"
    }, {
      "left" : "return sqle;",
      "right" : "return sqle;",
      "info" : "ReturnStatement[3924-3936]:ReturnStatement[3924-3936]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3970-3979]:MarkerAnnotation[3970-3979]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3983-3989]:Modifier[3983-3989]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[3990-3995]:Modifier[3990-3995]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3996-4000]:PrimitiveType[3996-4000]"
    }, {
      "left" : "untrackStatement",
      "right" : "untrackStatement",
      "info" : "SimpleName[4001-4017]:SimpleName[4001-4017]"
    }, {
      "left" : "final Statement statement",
      "right" : "final Statement statement",
      "info" : "SingleVariableDeclaration[4018-4043]:SingleVariableDeclaration[4018-4043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4048-4094]:Block[4048-4094]"
    }, {
      "left" : "openStatements.remove(statement);",
      "right" : "openStatements.remove(statement);",
      "info" : "ExpressionStatement[4056-4089]:ExpressionStatement[4056-4089]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4123-4132]:MarkerAnnotation[4123-4132]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4136-4142]:Modifier[4136-4142]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[4143-4148]:Modifier[4143-4148]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4149-4153]:PrimitiveType[4149-4153]"
    }, {
      "left" : "markCommitStateDirty",
      "right" : "markCommitStateDirty",
      "info" : "SimpleName[4154-4174]:SimpleName[4154-4174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4180-4266]:Block[4180-4266]"
    }, {
      "left" : "isCommitStateDirty = true;",
      "right" : "isCommitStateDirty = true;",
      "info" : "ExpressionStatement[4188-4214]:ExpressionStatement[4188-4214]"
    }, {
      "left" : "lastAccess = System.currentTimeMillis();",
      "right" : "lastAccess = System.currentTimeMillis();",
      "info" : "ExpressionStatement[4221-4261]:ExpressionStatement[4221-4261]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4474-4481]:Modifier[4474-4481]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[4482-4487]:Modifier[4482-4487]"
    }, {
      "left" : "T extends Statement",
      "right" : "T extends Statement",
      "info" : "TypeParameter[4489-4508]:TypeParameter[4489-4508]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[4510-4511]:SimpleType[4510-4511]"
    }, {
      "left" : "trackStatement",
      "right" : "trackStatement",
      "info" : "SimpleName[4512-4526]:SimpleName[4512-4526]"
    }, {
      "left" : "final T statement",
      "right" : "final T statement",
      "info" : "SingleVariableDeclaration[4527-4544]:SingleVariableDeclaration[4527-4544]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4549-4664]:Block[4549-4664]"
    }, {
      "left" : "lastAccess = System.currentTimeMillis();",
      "right" : "lastAccess = System.currentTimeMillis();",
      "info" : "ExpressionStatement[4557-4597]:ExpressionStatement[4557-4597]"
    }, {
      "left" : "openStatements.add(statement);",
      "right" : "openStatements.add(statement);",
      "info" : "ExpressionStatement[4604-4634]:ExpressionStatement[4604-4634]"
    }, {
      "left" : "return statement;",
      "right" : "return statement;",
      "info" : "ReturnStatement[4642-4659]:ReturnStatement[4642-4659]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[4669-4676]:Modifier[4669-4676]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[4677-4682]:Modifier[4677-4682]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4683-4687]:PrimitiveType[4683-4687]"
    }, {
      "left" : "resetConnectionState",
      "right" : "resetConnectionState",
      "info" : "SimpleName[4688-4708]:SimpleName[4688-4708]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[4718-4730]:SimpleType[4718-4730]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4734-5415]:Block[4734-5415]"
    }, {
      "left" : "LOGGER.debug(\"{} Resetting dirty on {} (readOnlyDirty={},autoCommitDirty={},isolationDirty={},catalogDirty={})\",\n                   parentPool, delegate, isReadOnlyDirty, isAutoCommitDirty, isTransactionIsolationDirty, isCatalogDirty);",
      "right" : "LOGGER.debug(\"{} Resetting dirty on {} (readOnlyDirty={},autoCommitDirty={},isolationDirty={},catalogDirty={})\",\n                   parentPool, delegate, isReadOnlyDirty, isAutoCommitDirty, isTransactionIsolationDirty, isCatalogDirty);",
      "info" : "ExpressionStatement[4742-4977]:ExpressionStatement[4742-4977]"
    }, {
      "left" : "if (isReadOnlyDirty)",
      "right" : "if (isReadOnlyDirty)",
      "info" : "IfStatement[4985-5069]:IfStatement[4985-5069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5006-5069]:Block[5006-5069]"
    }, {
      "left" : "delegate.setReadOnly(parentPool.isReadOnly);",
      "right" : "delegate.setReadOnly(parentPool.isReadOnly);",
      "info" : "ExpressionStatement[5017-5061]:ExpressionStatement[5017-5061]"
    }, {
      "left" : "if (isAutoCommitDirty)",
      "right" : "if (isAutoCommitDirty)",
      "info" : "IfStatement[5077-5167]:IfStatement[5077-5167]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5100-5167]:Block[5100-5167]"
    }, {
      "left" : "delegate.setAutoCommit(parentPool.isAutoCommit);",
      "right" : "delegate.setAutoCommit(parentPool.isAutoCommit);",
      "info" : "ExpressionStatement[5111-5159]:ExpressionStatement[5111-5159]"
    }, {
      "left" : "if (isTransactionIsolationDirty)",
      "right" : "if (isTransactionIsolationDirty)",
      "info" : "IfStatement[5175-5293]:IfStatement[5175-5293]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5208-5293]:Block[5208-5293]"
    }, {
      "left" : "delegate.setTransactionIsolation(parentPool.transactionIsolation);",
      "right" : "delegate.setTransactionIsolation(parentPool.transactionIsolation);",
      "info" : "ExpressionStatement[5219-5285]:ExpressionStatement[5219-5285]"
    }, {
      "left" : "if (isCatalogDirty && parentPool.catalog != null)",
      "right" : "if (isCatalogDirty && parentPool.catalog != null)",
      "info" : "IfStatement[5301-5410]:IfStatement[5301-5410]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5351-5410]:Block[5351-5410]"
    }, {
      "left" : "delegate.setCatalog(parentPool.catalog);",
      "right" : "delegate.setCatalog(parentPool.catalog);",
      "info" : "ExpressionStatement[5362-5402]:ExpressionStatement[5362-5402]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5664-5673]:MarkerAnnotation[5664-5673]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5677-5683]:Modifier[5677-5683]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[5684-5689]:Modifier[5684-5689]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5690-5694]:PrimitiveType[5690-5694]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[5695-5700]:SimpleName[5695-5700]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[5710-5722]:SimpleType[5710-5722]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5726-6977]:Block[5726-6687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5726-6977]:Block[6730-7170]"
    }, {
      "left" : "if (delegate != ClosedConnection.CLOSED_CONNECTION)",
      "right" : "if (delegate != ClosedConnection.CLOSED_CONNECTION)",
      "info" : "IfStatement[5734-6972]:IfStatement[5734-6682]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5786-6972]:Block[5786-6682]"
    }, {
      "left" : "leakTask.cancel();",
      "right" : "leakTask.cancel();",
      "info" : "ExpressionStatement[5797-5815]:ExpressionStatement[5797-5815]"
    }, {
      "left" : "final int size = openStatements.size();",
      "right" : "final int size = openStatements.size();",
      "info" : "VariableDeclarationStatement[5826-5865]:VariableDeclarationStatement[6738-6777]"
    }, {
      "left" : "size > 0",
      "right" : "size > 0",
      "info" : "InfixExpression[5879-5887]:InfixExpression[6788-6796]"
    }, {
      "left" : "int i = 0",
      "right" : "int i = 0",
      "info" : "VariableDeclarationExpression[5908-5917]:VariableDeclarationExpression[6814-6823]"
    }, {
      "left" : "i < size",
      "right" : "i < size",
      "info" : "InfixExpression[5919-5927]:InfixExpression[6825-6833]"
    }, {
      "left" : "i++",
      "right" : "i++",
      "info" : "PostfixExpression[5929-5932]:PostfixExpression[6835-6838]"
    }, {
      "left" : "openStatements.get(i).close();",
      "right" : "closeOpenStatements();",
      "info" : "ExpressionStatement[5975-6005]:ExpressionStatement[5844-5866]"
    }, {
      "left" : "openStatements.get(i)",
      "right" : "openStatements.get(i)",
      "info" : "MethodInvocation[5975-5996]:MethodInvocation[6897-6918]"
    }, {
      "left" : "close",
      "right" : "close",
      "info" : "SimpleName[5997-6002]:SimpleName[6988-6993]"
    }, {
      "left" : "catch (SQLException e) {\n                  checkException(e);\n               }",
      "right" : "catch (SQLException e) {\n               checkException(e);\n            }",
      "info" : "CatchClause[6038-6116]:CatchClause[7040-7112]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6061-6116]:Block[7063-7112]"
    }, {
      "left" : "checkException(e);",
      "right" : "checkException(e);",
      "info" : "ExpressionStatement[6081-6099]:ExpressionStatement[7080-7098]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[6152-6964]:TryStatement[5826-6674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6156-6530]:Block[5830-6240]"
    }, {
      "left" : "if (isCommitStateDirty && !delegate.getAutoCommit())",
      "right" : "if (isCommitStateDirty && !delegate.getAutoCommit())",
      "info" : "IfStatement[6170-6384]:IfStatement[5880-6094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6223-6384]:Block[5933-6094]"
    }, {
      "left" : "LOGGER.debug(\"{} Performing rollback on {} due to dirty commit state.\", parentPool, delegate);",
      "right" : "LOGGER.debug(\"{} Performing rollback on {} due to dirty commit state.\", parentPool, delegate);",
      "info" : "ExpressionStatement[6240-6334]:ExpressionStatement[5950-6044]"
    }, {
      "left" : "delegate.rollback();",
      "right" : "delegate.rollback();",
      "info" : "ExpressionStatement[6350-6370]:ExpressionStatement[6060-6080]"
    }, {
      "left" : "if (isConnectionStateDirty)",
      "right" : "if (isConnectionStateDirty)",
      "info" : "IfStatement[6398-6480]:IfStatement[6108-6190]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6426-6480]:Block[6136-6190]"
    }, {
      "left" : "resetConnectionState();",
      "right" : "resetConnectionState();",
      "info" : "ExpressionStatement[6443-6466]:ExpressionStatement[6153-6176]"
    }, {
      "left" : "delegate.clearWarnings();",
      "right" : "delegate.clearWarnings();",
      "info" : "ExpressionStatement[6494-6519]:ExpressionStatement[6204-6229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6563-6777]:Block[6273-6487]"
    }, {
      "left" : "if (!bagEntry.aborted)",
      "right" : "if (!bagEntry.aborted)",
      "info" : "IfStatement[6688-6766]:IfStatement[6398-6476]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6711-6766]:Block[6421-6476]"
    }, {
      "left" : "throw checkException(e);",
      "right" : "throw checkException(e);",
      "info" : "ThrowStatement[6728-6752]:ThrowStatement[6438-6462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6795-6964]:Block[6505-6674]"
    }, {
      "left" : "delegate = ClosedConnection.CLOSED_CONNECTION;",
      "right" : "delegate = ClosedConnection.CLOSED_CONNECTION;",
      "info" : "ExpressionStatement[6809-6855]:ExpressionStatement[6519-6565]"
    }, {
      "left" : "bagEntry.lastAccess = lastAccess;",
      "right" : "bagEntry.lastAccess = lastAccess;",
      "info" : "ExpressionStatement[6868-6901]:ExpressionStatement[6578-6611]"
    }, {
      "left" : "parentPool.releaseConnection(bagEntry);",
      "right" : "parentPool.releaseConnection(bagEntry);",
      "info" : "ExpressionStatement[6914-6953]:ExpressionStatement[6624-6663]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7006-7015]:MarkerAnnotation[7199-7208]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7019-7025]:Modifier[7212-7218]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7026-7033]:PrimitiveType[7219-7226]"
    }, {
      "left" : "isClosed",
      "right" : "isClosed",
      "info" : "SimpleName[7034-7042]:SimpleName[7227-7235]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[7052-7064]:SimpleType[7245-7257]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7068-7137]:Block[7261-7330]"
    }, {
      "left" : "return (delegate == ClosedConnection.CLOSED_CONNECTION);",
      "right" : "return (delegate == ClosedConnection.CLOSED_CONNECTION);",
      "info" : "ReturnStatement[7076-7132]:ReturnStatement[7269-7325]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7166-7175]:MarkerAnnotation[7359-7368]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7179-7185]:Modifier[7372-7378]"
    }, {
      "left" : "Statement",
      "right" : "Statement",
      "info" : "SimpleType[7186-7195]:SimpleType[7379-7388]"
    }, {
      "left" : "createStatement",
      "right" : "createStatement",
      "info" : "SimpleName[7196-7211]:SimpleName[7389-7404]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[7221-7233]:SimpleType[7414-7426]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7237-7338]:Block[7430-7531]"
    }, {
      "left" : "return ProxyFactory.getProxyStatement(this, trackStatement(delegate.createStatement()));",
      "right" : "return ProxyFactory.getProxyStatement(this, trackStatement(delegate.createStatement()));",
      "info" : "ReturnStatement[7245-7333]:ReturnStatement[7438-7526]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7367-7376]:MarkerAnnotation[7560-7569]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7380-7386]:Modifier[7573-7579]"
    }, {
      "left" : "Statement",
      "right" : "Statement",
      "info" : "SimpleType[7387-7396]:SimpleType[7580-7589]"
    }, {
      "left" : "createStatement",
      "right" : "createStatement",
      "info" : "SimpleName[7397-7412]:SimpleName[7590-7605]"
    }, {
      "left" : "int resultSetType",
      "right" : "int resultSetType",
      "info" : "SingleVariableDeclaration[7413-7430]:SingleVariableDeclaration[7606-7623]"
    }, {
      "left" : "int concurrency",
      "right" : "int concurrency",
      "info" : "SingleVariableDeclaration[7432-7447]:SingleVariableDeclaration[7625-7640]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[7456-7468]:SimpleType[7649-7661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7472-7599]:Block[7665-7792]"
    }, {
      "left" : "return ProxyFactory.getProxyStatement(this, trackStatement(delegate.createStatement(resultSetType, concurrency)));",
      "right" : "return ProxyFactory.getProxyStatement(this, trackStatement(delegate.createStatement(resultSetType, concurrency)));",
      "info" : "ReturnStatement[7480-7594]:ReturnStatement[7673-7787]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7628-7637]:MarkerAnnotation[7821-7830]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7641-7647]:Modifier[7834-7840]"
    }, {
      "left" : "Statement",
      "right" : "Statement",
      "info" : "SimpleType[7648-7657]:SimpleType[7841-7850]"
    }, {
      "left" : "createStatement",
      "right" : "createStatement",
      "info" : "SimpleName[7658-7673]:SimpleName[7851-7866]"
    }, {
      "left" : "int resultSetType",
      "right" : "int resultSetType",
      "info" : "SingleVariableDeclaration[7674-7691]:SingleVariableDeclaration[7867-7884]"
    }, {
      "left" : "int concurrency",
      "right" : "int concurrency",
      "info" : "SingleVariableDeclaration[7693-7708]:SingleVariableDeclaration[7886-7901]"
    }, {
      "left" : "int holdability",
      "right" : "int holdability",
      "info" : "SingleVariableDeclaration[7710-7725]:SingleVariableDeclaration[7903-7918]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[7734-7746]:SimpleType[7927-7939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7750-7890]:Block[7943-8083]"
    }, {
      "left" : "return ProxyFactory.getProxyStatement(this, trackStatement(delegate.createStatement(resultSetType, concurrency, holdability)));",
      "right" : "return ProxyFactory.getProxyStatement(this, trackStatement(delegate.createStatement(resultSetType, concurrency, holdability)));",
      "info" : "ReturnStatement[7758-7885]:ReturnStatement[7951-8078]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7919-7928]:MarkerAnnotation[8112-8121]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7932-7938]:Modifier[8125-8131]"
    }, {
      "left" : "CallableStatement",
      "right" : "CallableStatement",
      "info" : "SimpleType[7939-7956]:SimpleType[8132-8149]"
    }, {
      "left" : "prepareCall",
      "right" : "prepareCall",
      "info" : "SimpleName[7957-7968]:SimpleName[8150-8161]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[7969-7979]:SingleVariableDeclaration[8162-8172]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[7988-8000]:SimpleType[8181-8193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8004-8112]:Block[8197-8305]"
    }, {
      "left" : "return ProxyFactory.getProxyCallableStatement(this, trackStatement(delegate.prepareCall(sql)));",
      "right" : "return ProxyFactory.getProxyCallableStatement(this, trackStatement(delegate.prepareCall(sql)));",
      "info" : "ReturnStatement[8012-8107]:ReturnStatement[8205-8300]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8141-8150]:MarkerAnnotation[8334-8343]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8154-8160]:Modifier[8347-8353]"
    }, {
      "left" : "CallableStatement",
      "right" : "CallableStatement",
      "info" : "SimpleType[8161-8178]:SimpleType[8354-8371]"
    }, {
      "left" : "prepareCall",
      "right" : "prepareCall",
      "info" : "SimpleName[8179-8190]:SimpleName[8372-8383]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[8191-8201]:SingleVariableDeclaration[8384-8394]"
    }, {
      "left" : "int resultSetType",
      "right" : "int resultSetType",
      "info" : "SingleVariableDeclaration[8203-8220]:SingleVariableDeclaration[8396-8413]"
    }, {
      "left" : "int concurrency",
      "right" : "int concurrency",
      "info" : "SingleVariableDeclaration[8222-8237]:SingleVariableDeclaration[8415-8430]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[8246-8258]:SimpleType[8439-8451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8262-8398]:Block[8455-8591]"
    }, {
      "left" : "return ProxyFactory.getProxyCallableStatement(this, trackStatement(delegate.prepareCall(sql, resultSetType, concurrency)));",
      "right" : "return ProxyFactory.getProxyCallableStatement(this, trackStatement(delegate.prepareCall(sql, resultSetType, concurrency)));",
      "info" : "ReturnStatement[8270-8393]:ReturnStatement[8463-8586]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8427-8436]:MarkerAnnotation[8620-8629]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8440-8446]:Modifier[8633-8639]"
    }, {
      "left" : "CallableStatement",
      "right" : "CallableStatement",
      "info" : "SimpleType[8447-8464]:SimpleType[8640-8657]"
    }, {
      "left" : "prepareCall",
      "right" : "prepareCall",
      "info" : "SimpleName[8465-8476]:SimpleName[8658-8669]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[8477-8487]:SingleVariableDeclaration[8670-8680]"
    }, {
      "left" : "int resultSetType",
      "right" : "int resultSetType",
      "info" : "SingleVariableDeclaration[8489-8506]:SingleVariableDeclaration[8682-8699]"
    }, {
      "left" : "int concurrency",
      "right" : "int concurrency",
      "info" : "SingleVariableDeclaration[8508-8523]:SingleVariableDeclaration[8701-8716]"
    }, {
      "left" : "int holdability",
      "right" : "int holdability",
      "info" : "SingleVariableDeclaration[8525-8540]:SingleVariableDeclaration[8718-8733]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[8549-8561]:SimpleType[8742-8754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8565-8714]:Block[8758-8907]"
    }, {
      "left" : "return ProxyFactory.getProxyCallableStatement(this, trackStatement(delegate.prepareCall(sql, resultSetType, concurrency, holdability)));",
      "right" : "return ProxyFactory.getProxyCallableStatement(this, trackStatement(delegate.prepareCall(sql, resultSetType, concurrency, holdability)));",
      "info" : "ReturnStatement[8573-8709]:ReturnStatement[8766-8902]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8743-8752]:MarkerAnnotation[8936-8945]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8756-8762]:Modifier[8949-8955]"
    }, {
      "left" : "PreparedStatement",
      "right" : "PreparedStatement",
      "info" : "SimpleType[8763-8780]:SimpleType[8956-8973]"
    }, {
      "left" : "prepareStatement",
      "right" : "prepareStatement",
      "info" : "SimpleName[8781-8797]:SimpleName[8974-8990]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[8798-8808]:SingleVariableDeclaration[8991-9001]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[8817-8829]:SimpleType[9010-9022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8833-8946]:Block[9026-9139]"
    }, {
      "left" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql)));",
      "right" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql)));",
      "info" : "ReturnStatement[8841-8941]:ReturnStatement[9034-9134]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8975-8984]:MarkerAnnotation[9168-9177]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8988-8994]:Modifier[9181-9187]"
    }, {
      "left" : "PreparedStatement",
      "right" : "PreparedStatement",
      "info" : "SimpleType[8995-9012]:SimpleType[9188-9205]"
    }, {
      "left" : "prepareStatement",
      "right" : "prepareStatement",
      "info" : "SimpleName[9013-9029]:SimpleName[9206-9222]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[9030-9040]:SingleVariableDeclaration[9223-9233]"
    }, {
      "left" : "int autoGeneratedKeys",
      "right" : "int autoGeneratedKeys",
      "info" : "SingleVariableDeclaration[9042-9063]:SingleVariableDeclaration[9235-9256]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[9072-9084]:SimpleType[9265-9277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9088-9220]:Block[9281-9413]"
    }, {
      "left" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, autoGeneratedKeys)));",
      "right" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, autoGeneratedKeys)));",
      "info" : "ReturnStatement[9096-9215]:ReturnStatement[9289-9408]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9249-9258]:MarkerAnnotation[9442-9451]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9262-9268]:Modifier[9455-9461]"
    }, {
      "left" : "PreparedStatement",
      "right" : "PreparedStatement",
      "info" : "SimpleType[9269-9286]:SimpleType[9462-9479]"
    }, {
      "left" : "prepareStatement",
      "right" : "prepareStatement",
      "info" : "SimpleName[9287-9303]:SimpleName[9480-9496]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[9304-9314]:SingleVariableDeclaration[9497-9507]"
    }, {
      "left" : "int resultSetType",
      "right" : "int resultSetType",
      "info" : "SingleVariableDeclaration[9316-9333]:SingleVariableDeclaration[9509-9526]"
    }, {
      "left" : "int concurrency",
      "right" : "int concurrency",
      "info" : "SingleVariableDeclaration[9335-9350]:SingleVariableDeclaration[9528-9543]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[9359-9371]:SimpleType[9552-9564]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9375-9516]:Block[9568-9709]"
    }, {
      "left" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, resultSetType, concurrency)));",
      "right" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, resultSetType, concurrency)));",
      "info" : "ReturnStatement[9383-9511]:ReturnStatement[9576-9704]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9545-9554]:MarkerAnnotation[9738-9747]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9558-9564]:Modifier[9751-9757]"
    }, {
      "left" : "PreparedStatement",
      "right" : "PreparedStatement",
      "info" : "SimpleType[9565-9582]:SimpleType[9758-9775]"
    }, {
      "left" : "prepareStatement",
      "right" : "prepareStatement",
      "info" : "SimpleName[9583-9599]:SimpleName[9776-9792]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[9600-9610]:SingleVariableDeclaration[9793-9803]"
    }, {
      "left" : "int resultSetType",
      "right" : "int resultSetType",
      "info" : "SingleVariableDeclaration[9612-9629]:SingleVariableDeclaration[9805-9822]"
    }, {
      "left" : "int concurrency",
      "right" : "int concurrency",
      "info" : "SingleVariableDeclaration[9631-9646]:SingleVariableDeclaration[9824-9839]"
    }, {
      "left" : "int holdability",
      "right" : "int holdability",
      "info" : "SingleVariableDeclaration[9648-9663]:SingleVariableDeclaration[9841-9856]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[9672-9684]:SimpleType[9865-9877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9688-9842]:Block[9881-10035]"
    }, {
      "left" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, resultSetType, concurrency, holdability)));",
      "right" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, resultSetType, concurrency, holdability)));",
      "info" : "ReturnStatement[9696-9837]:ReturnStatement[9889-10030]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9871-9880]:MarkerAnnotation[10064-10073]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9884-9890]:Modifier[10077-10083]"
    }, {
      "left" : "PreparedStatement",
      "right" : "PreparedStatement",
      "info" : "SimpleType[9891-9908]:SimpleType[10084-10101]"
    }, {
      "left" : "prepareStatement",
      "right" : "prepareStatement",
      "info" : "SimpleName[9909-9925]:SimpleName[10102-10118]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[9926-9936]:SingleVariableDeclaration[10119-10129]"
    }, {
      "left" : "int[] columnIndexes",
      "right" : "int[] columnIndexes",
      "info" : "SingleVariableDeclaration[9938-9957]:SingleVariableDeclaration[10131-10150]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[9966-9978]:SimpleType[10159-10171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9982-10110]:Block[10175-10303]"
    }, {
      "left" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, columnIndexes)));",
      "right" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, columnIndexes)));",
      "info" : "ReturnStatement[9990-10105]:ReturnStatement[10183-10298]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10139-10148]:MarkerAnnotation[10332-10341]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10152-10158]:Modifier[10345-10351]"
    }, {
      "left" : "PreparedStatement",
      "right" : "PreparedStatement",
      "info" : "SimpleType[10159-10176]:SimpleType[10352-10369]"
    }, {
      "left" : "prepareStatement",
      "right" : "prepareStatement",
      "info" : "SimpleName[10177-10193]:SimpleName[10370-10386]"
    }, {
      "left" : "String sql",
      "right" : "String sql",
      "info" : "SingleVariableDeclaration[10194-10204]:SingleVariableDeclaration[10387-10397]"
    }, {
      "left" : "String[] columnNames",
      "right" : "String[] columnNames",
      "info" : "SingleVariableDeclaration[10206-10226]:SingleVariableDeclaration[10399-10419]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[10235-10247]:SimpleType[10428-10440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10251-10377]:Block[10444-10570]"
    }, {
      "left" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, columnNames)));",
      "right" : "return ProxyFactory.getProxyPreparedStatement(this, trackStatement(delegate.prepareStatement(sql, columnNames)));",
      "info" : "ReturnStatement[10259-10372]:ReturnStatement[10452-10565]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10406-10415]:MarkerAnnotation[10599-10608]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10419-10425]:Modifier[10612-10618]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10426-10430]:PrimitiveType[10619-10623]"
    }, {
      "left" : "commit",
      "right" : "commit",
      "info" : "SimpleName[10431-10437]:SimpleName[10624-10630]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[10447-10459]:SimpleType[10640-10652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10463-10528]:Block[10656-10721]"
    }, {
      "left" : "delegate.commit();",
      "right" : "delegate.commit();",
      "info" : "ExpressionStatement[10471-10489]:ExpressionStatement[10664-10682]"
    }, {
      "left" : "isCommitStateDirty = false;",
      "right" : "isCommitStateDirty = false;",
      "info" : "ExpressionStatement[10496-10523]:ExpressionStatement[10689-10716]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10557-10566]:MarkerAnnotation[10750-10759]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10570-10576]:Modifier[10763-10769]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10577-10581]:PrimitiveType[10770-10774]"
    }, {
      "left" : "rollback",
      "right" : "rollback",
      "info" : "SimpleName[10582-10590]:SimpleName[10775-10783]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[10600-10612]:SimpleType[10793-10805]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10616-10683]:Block[10809-10876]"
    }, {
      "left" : "delegate.rollback();",
      "right" : "delegate.rollback();",
      "info" : "ExpressionStatement[10624-10644]:ExpressionStatement[10817-10837]"
    }, {
      "left" : "isCommitStateDirty = false;",
      "right" : "isCommitStateDirty = false;",
      "info" : "ExpressionStatement[10651-10678]:ExpressionStatement[10844-10871]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10712-10721]:MarkerAnnotation[10905-10914]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10725-10731]:Modifier[10918-10924]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10732-10736]:PrimitiveType[10925-10929]"
    }, {
      "left" : "rollback",
      "right" : "rollback",
      "info" : "SimpleName[10737-10745]:SimpleName[10930-10938]"
    }, {
      "left" : "Savepoint savepoint",
      "right" : "Savepoint savepoint",
      "info" : "SingleVariableDeclaration[10746-10765]:SingleVariableDeclaration[10939-10958]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[10774-10786]:SimpleType[10967-10979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10790-10866]:Block[10983-11059]"
    }, {
      "left" : "delegate.rollback(savepoint);",
      "right" : "delegate.rollback(savepoint);",
      "info" : "ExpressionStatement[10798-10827]:ExpressionStatement[10991-11020]"
    }, {
      "left" : "isCommitStateDirty = false;",
      "right" : "isCommitStateDirty = false;",
      "info" : "ExpressionStatement[10834-10861]:ExpressionStatement[11027-11054]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10895-10904]:MarkerAnnotation[11088-11097]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10908-10914]:Modifier[11101-11107]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10915-10919]:PrimitiveType[11108-11112]"
    }, {
      "left" : "setAutoCommit",
      "right" : "setAutoCommit",
      "info" : "SimpleName[10920-10933]:SimpleName[11113-11126]"
    }, {
      "left" : "boolean autoCommit",
      "right" : "boolean autoCommit",
      "info" : "SingleVariableDeclaration[10934-10952]:SingleVariableDeclaration[11127-11145]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[10961-10973]:SimpleType[11154-11166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10977-11129]:Block[11170-11322]"
    }, {
      "left" : "delegate.setAutoCommit(autoCommit);",
      "right" : "delegate.setAutoCommit(autoCommit);",
      "info" : "ExpressionStatement[10985-11020]:ExpressionStatement[11178-11213]"
    }, {
      "left" : "isConnectionStateDirty = true;",
      "right" : "isConnectionStateDirty = true;",
      "info" : "ExpressionStatement[11027-11057]:ExpressionStatement[11220-11250]"
    }, {
      "left" : "isAutoCommitDirty = (autoCommit != parentPool.isAutoCommit);",
      "right" : "isAutoCommitDirty = (autoCommit != parentPool.isAutoCommit);",
      "info" : "ExpressionStatement[11064-11124]:ExpressionStatement[11257-11317]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11158-11167]:MarkerAnnotation[11351-11360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11171-11177]:Modifier[11364-11370]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11178-11182]:PrimitiveType[11371-11375]"
    }, {
      "left" : "setReadOnly",
      "right" : "setReadOnly",
      "info" : "SimpleName[11183-11194]:SimpleName[11376-11387]"
    }, {
      "left" : "boolean readOnly",
      "right" : "boolean readOnly",
      "info" : "SingleVariableDeclaration[11195-11211]:SingleVariableDeclaration[11388-11404]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[11220-11232]:SimpleType[11413-11425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11236-11378]:Block[11429-11571]"
    }, {
      "left" : "delegate.setReadOnly(readOnly);",
      "right" : "delegate.setReadOnly(readOnly);",
      "info" : "ExpressionStatement[11244-11275]:ExpressionStatement[11437-11468]"
    }, {
      "left" : "isConnectionStateDirty = true;",
      "right" : "isConnectionStateDirty = true;",
      "info" : "ExpressionStatement[11282-11312]:ExpressionStatement[11475-11505]"
    }, {
      "left" : "isReadOnlyDirty = (readOnly != parentPool.isReadOnly);",
      "right" : "isReadOnlyDirty = (readOnly != parentPool.isReadOnly);",
      "info" : "ExpressionStatement[11319-11373]:ExpressionStatement[11512-11566]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11407-11416]:MarkerAnnotation[11600-11609]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11420-11426]:Modifier[11613-11619]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11427-11431]:PrimitiveType[11620-11624]"
    }, {
      "left" : "setTransactionIsolation",
      "right" : "setTransactionIsolation",
      "info" : "SimpleName[11432-11455]:SimpleName[11625-11648]"
    }, {
      "left" : "int level",
      "right" : "int level",
      "info" : "SingleVariableDeclaration[11456-11465]:SingleVariableDeclaration[11649-11658]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[11474-11486]:SimpleType[11667-11679]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11490-11660]:Block[11683-11853]"
    }, {
      "left" : "delegate.setTransactionIsolation(level);",
      "right" : "delegate.setTransactionIsolation(level);",
      "info" : "ExpressionStatement[11498-11538]:ExpressionStatement[11691-11731]"
    }, {
      "left" : "isConnectionStateDirty = true;",
      "right" : "isConnectionStateDirty = true;",
      "info" : "ExpressionStatement[11545-11575]:ExpressionStatement[11738-11768]"
    }, {
      "left" : "isTransactionIsolationDirty = (level != parentPool.transactionIsolation);",
      "right" : "isTransactionIsolationDirty = (level != parentPool.transactionIsolation);",
      "info" : "ExpressionStatement[11582-11655]:ExpressionStatement[11775-11848]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11689-11698]:MarkerAnnotation[11882-11891]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11702-11708]:Modifier[11895-11901]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11709-11713]:PrimitiveType[11902-11906]"
    }, {
      "left" : "setCatalog",
      "right" : "setCatalog",
      "info" : "SimpleName[11714-11724]:SimpleName[11907-11917]"
    }, {
      "left" : "String catalog",
      "right" : "String catalog",
      "info" : "SingleVariableDeclaration[11725-11739]:SingleVariableDeclaration[11918-11932]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[11748-11760]:SimpleType[11941-11953]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11764-11975]:Block[11957-12168]"
    }, {
      "left" : "delegate.setCatalog(catalog);",
      "right" : "delegate.setCatalog(catalog);",
      "info" : "ExpressionStatement[11772-11801]:ExpressionStatement[11965-11994]"
    }, {
      "left" : "isConnectionStateDirty = true;",
      "right" : "isConnectionStateDirty = true;",
      "info" : "ExpressionStatement[11808-11838]:ExpressionStatement[12001-12031]"
    }, {
      "left" : "isCatalogDirty = (catalog != null && !catalog.equals(parentPool.catalog)) || (catalog == null && parentPool.catalog != null);",
      "right" : "isCatalogDirty = (catalog != null && !catalog.equals(parentPool.catalog)) || (catalog == null && parentPool.catalog != null);",
      "info" : "ExpressionStatement[11845-11970]:ExpressionStatement[12038-12163]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12004-12013]:MarkerAnnotation[12197-12206]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12017-12023]:Modifier[12210-12216]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[12024-12029]:Modifier[12217-12222]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[12030-12037]:PrimitiveType[12223-12230]"
    }, {
      "left" : "isWrapperFor",
      "right" : "isWrapperFor",
      "info" : "SimpleName[12038-12050]:SimpleName[12231-12243]"
    }, {
      "left" : "Class<?> iface",
      "right" : "Class<?> iface",
      "info" : "SingleVariableDeclaration[12051-12065]:SingleVariableDeclaration[12244-12258]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[12074-12086]:SimpleType[12267-12279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12090-12202]:Block[12283-12395]"
    }, {
      "left" : "return iface.isInstance(delegate) || (delegate instanceof Wrapper && delegate.isWrapperFor(iface));",
      "right" : "return iface.isInstance(delegate) || (delegate instanceof Wrapper && delegate.isWrapperFor(iface));",
      "info" : "ReturnStatement[12098-12197]:ReturnStatement[12291-12390]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12231-12240]:MarkerAnnotation[12424-12433]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[12244-12274]:SingleMemberAnnotation[12437-12467]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12278-12284]:Modifier[12471-12477]"
    }, {
      "left" : "final",
      "right" : "final",
      "info" : "Modifier[12285-12290]:Modifier[12478-12483]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[12292-12293]:TypeParameter[12485-12486]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[12295-12296]:SimpleType[12488-12489]"
    }, {
      "left" : "unwrap",
      "right" : "unwrap",
      "info" : "SimpleName[12297-12303]:SimpleName[12490-12496]"
    }, {
      "left" : "Class<T> iface",
      "right" : "Class<T> iface",
      "info" : "SingleVariableDeclaration[12304-12318]:SingleVariableDeclaration[12497-12511]"
    }, {
      "left" : "SQLException",
      "right" : "SQLException",
      "info" : "SimpleType[12327-12339]:SimpleType[12520-12532]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12343-12610]:Block[12536-12803]"
    }, {
      "left" : "if (iface.isInstance(delegate))",
      "right" : "if (iface.isInstance(delegate))",
      "info" : "IfStatement[12351-12521]:IfStatement[12544-12714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12383-12422]:Block[12576-12615]"
    }, {
      "left" : "return (T) delegate;",
      "right" : "return (T) delegate;",
      "info" : "ReturnStatement[12394-12414]:ReturnStatement[12587-12607]"
    }, {
      "left" : "if (delegate instanceof Wrapper)",
      "right" : "if (delegate instanceof Wrapper)",
      "info" : "IfStatement[12434-12521]:IfStatement[12627-12714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12467-12521]:Block[12660-12714]"
    }, {
      "left" : "return (T) delegate.unwrap(iface);",
      "right" : "return (T) delegate.unwrap(iface);",
      "info" : "ReturnStatement[12479-12513]:ReturnStatement[12672-12706]"
    }, {
      "left" : "throw new SQLException(\"Wrapped connection is not an instance of \" + iface);",
      "right" : "throw new SQLException(\"Wrapped connection is not an instance of \" + iface);",
      "info" : "ThrowStatement[12529-12605]:ThrowStatement[12722-12798]"
    } ]
  },
  "interFileMappings" : { }
}