{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "PoissonDistributionImpl",
      "right" : "PoissonDistributionImpl",
      "info" : "TypeDeclaration[1183-8518]:TypeDeclaration[1201-8496]"
    }, {
      "left" : "public static final int DEFAULT_MAX_ITERATIONS = 10000000;",
      "right" : "public static final int DEFAULT_MAX_ITERATIONS = 10000000;",
      "info" : "FieldDeclaration[1412-1589]:FieldDeclaration[1430-1607]"
    }, {
      "left" : "public static final double DEFAULT_EPSILON = 1E-12;",
      "right" : "public static final double DEFAULT_EPSILON = 1E-12;",
      "info" : "FieldDeclaration[1595-1718]:FieldDeclaration[1613-1736]"
    }, {
      "left" : "private static final long serialVersionUID = -3349935121172596109L;",
      "right" : "private static final long serialVersionUID = -3349935121172596109L;",
      "info" : "FieldDeclaration[1724-1834]:FieldDeclaration[1742-1852]"
    }, {
      "left" : "private NormalDistribution normal;",
      "right" : "private NormalDistribution normal;",
      "info" : "FieldDeclaration[1840-1936]:FieldDeclaration[1858-1954]"
    }, {
      "left" : "private double mean;",
      "right" : "private double mean;",
      "info" : "FieldDeclaration[1942-2030]:FieldDeclaration[1960-2048]"
    }, {
      "left" : "private int maxIterations = DEFAULT_MAX_ITERATIONS;",
      "right" : "private int maxIterations = DEFAULT_MAX_ITERATIONS;",
      "info" : "FieldDeclaration[2036-2360]:FieldDeclaration[2054-2378]"
    }, {
      "left" : "private double epsilon = DEFAULT_EPSILON;",
      "right" : "private double epsilon = DEFAULT_EPSILON;",
      "info" : "FieldDeclaration[2366-2480]:FieldDeclaration[2384-2498]"
    }, {
      "left" : "public PoissonDistributionImpl(double p)",
      "right" : "public PoissonDistributionImpl(double p)",
      "info" : "MethodDeclaration[2486-2859]:MethodDeclaration[2504-2877]"
    }, {
      "left" : "public PoissonDistributionImpl(double p, double epsilon, int maxIterations)",
      "right" : "public PoissonDistributionImpl(double p, double epsilon, int maxIterations)",
      "info" : "MethodDeclaration[2865-3621]:MethodDeclaration[2883-3599]"
    }, {
      "left" : "public PoissonDistributionImpl(double p, double epsilon)",
      "right" : "public PoissonDistributionImpl(double p, double epsilon)",
      "info" : "MethodDeclaration[3627-3978]:MethodDeclaration[3605-3956]"
    }, {
      "left" : "public PoissonDistributionImpl(double p, int maxIterations)",
      "right" : "public PoissonDistributionImpl(double p, int maxIterations)",
      "info" : "MethodDeclaration[3984-4358]:MethodDeclaration[3962-4336]"
    }, {
      "left" : "public double getMean()",
      "right" : "public double getMean()",
      "info" : "MethodDeclaration[4364-4543]:MethodDeclaration[4342-4521]"
    }, {
      "left" : "public double probability(int x)",
      "right" : "public double probability(int x)",
      "info" : "MethodDeclaration[4549-5251]:MethodDeclaration[4527-5229]"
    }, {
      "left" : "public double cumulativeProbability(int x) throws MathException",
      "right" : "public double cumulativeProbability(int x) throws MathException",
      "info" : "MethodDeclaration[5257-5925]:MethodDeclaration[5235-5903]"
    }, {
      "left" : "public double normalApproximateProbability(int x) throws MathException",
      "right" : "public double normalApproximateProbability(int x) throws MathException",
      "info" : "MethodDeclaration[5931-6734]:MethodDeclaration[5909-6712]"
    }, {
      "left" : "public int sample() throws MathException",
      "right" : "public int sample() throws MathException",
      "info" : "MethodDeclaration[6740-7672]:MethodDeclaration[6718-7650]"
    }, {
      "left" : "protected int getDomainLowerBound(double p)",
      "right" : "protected int getDomainLowerBound(double p)",
      "info" : "MethodDeclaration[7678-8086]:MethodDeclaration[7656-8064]"
    }, {
      "left" : "protected int getDomainUpperBound(double p)",
      "right" : "protected int getDomainUpperBound(double p)",
      "info" : "MethodDeclaration[8092-8516]:MethodDeclaration[8070-8494]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2794-2859]:Block[2812-2877]"
    }, {
      "left" : "this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS);",
      "right" : "this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS);",
      "info" : "ConstructorInvocation[2804-2853]:ConstructorInvocation[2822-2871]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3304-3621]:Block[3322-3599]"
    }, {
      "left" : "if (p <= 0)",
      "right" : "if (p <= 0)",
      "info" : "IfStatement[3314-3455]:IfStatement[3332-3433]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3326-3455]:Block[3344-3433]"
    }, {
      "left" : "mean = p;",
      "right" : "mean = p;",
      "info" : "ExpressionStatement[3464-3473]:ExpressionStatement[3442-3451]"
    }, {
      "left" : "normal = new NormalDistributionImpl(p, FastMath.sqrt(p));",
      "right" : "normal = new NormalDistributionImpl(p, FastMath.sqrt(p));",
      "info" : "ExpressionStatement[3482-3539]:ExpressionStatement[3460-3517]"
    }, {
      "left" : "this.epsilon = epsilon;",
      "right" : "this.epsilon = epsilon;",
      "info" : "ExpressionStatement[3548-3571]:ExpressionStatement[3526-3549]"
    }, {
      "left" : "this.maxIterations = maxIterations;",
      "right" : "this.maxIterations = maxIterations;",
      "info" : "ExpressionStatement[3580-3615]:ExpressionStatement[3558-3593]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3921-3978]:Block[3899-3956]"
    }, {
      "left" : "this(p, epsilon, DEFAULT_MAX_ITERATIONS);",
      "right" : "this(p, epsilon, DEFAULT_MAX_ITERATIONS);",
      "info" : "ConstructorInvocation[3931-3972]:ConstructorInvocation[3909-3950]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4302-4358]:Block[4280-4336]"
    }, {
      "left" : "this(p, DEFAULT_EPSILON, maxIterations);",
      "right" : "this(p, DEFAULT_EPSILON, maxIterations);",
      "info" : "ConstructorInvocation[4312-4352]:ConstructorInvocation[4290-4330]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4515-4543]:Block[4493-4521]"
    }, {
      "left" : "return mean;",
      "right" : "return mean;",
      "info" : "ReturnStatement[4525-4537]:ReturnStatement[4503-4515]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4842-5251]:Block[4820-5229]"
    }, {
      "left" : "double ret;",
      "right" : "double ret;",
      "info" : "VariableDeclarationStatement[4852-4863]:VariableDeclarationStatement[4830-4841]"
    }, {
      "left" : "if (x < 0 || x == Integer.MAX_VALUE)",
      "right" : "if (x < 0 || x == Integer.MAX_VALUE)",
      "info" : "IfStatement[4872-5225]:IfStatement[4850-5203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4909-4943]:Block[4887-4921]"
    }, {
      "left" : "ret = 0.0;",
      "right" : "ret = 0.0;",
      "info" : "ExpressionStatement[4923-4933]:ExpressionStatement[4901-4911]"
    }, {
      "left" : "if (x == 0)",
      "right" : "if (x == 0)",
      "info" : "IfStatement[4949-5225]:IfStatement[4927-5203]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4961-5011]:Block[4939-4989]"
    }, {
      "left" : "ret = FastMath.exp(-mean);",
      "right" : "ret = FastMath.exp(-mean);",
      "info" : "ExpressionStatement[4975-5001]:ExpressionStatement[4953-4979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5017-5225]:Block[4995-5203]"
    }, {
      "left" : "ret = FastMath.exp(-SaddlePointExpansion.getStirlingError(x) -\n                  SaddlePointExpansion.getDeviancePart(x, mean)) /\n                  FastMath.sqrt(MathUtils.TWO_PI * x);",
      "right" : "ret = FastMath.exp(-SaddlePointExpansion.getStirlingError(x) -\n                  SaddlePointExpansion.getDeviancePart(x, mean)) /\n                  FastMath.sqrt(MathUtils.TWO_PI * x);",
      "info" : "ExpressionStatement[5031-5215]:ExpressionStatement[5009-5193]"
    }, {
      "left" : "return ret;",
      "right" : "return ret;",
      "info" : "ReturnStatement[5234-5245]:ReturnStatement[5212-5223]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5709-5925]:Block[5687-5903]"
    }, {
      "left" : "if (x < 0)",
      "right" : "if (x < 0)",
      "info" : "IfStatement[5719-5763]:IfStatement[5697-5741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5730-5763]:Block[5708-5741]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[5744-5753]:ReturnStatement[5722-5731]"
    }, {
      "left" : "if (x == Integer.MAX_VALUE)",
      "right" : "if (x == Integer.MAX_VALUE)",
      "info" : "IfStatement[5772-5833]:IfStatement[5750-5811]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5800-5833]:Block[5778-5811]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[5814-5823]:ReturnStatement[5792-5801]"
    }, {
      "left" : "return Gamma.regularizedGammaQ((double) x + 1, mean, epsilon, maxIterations);",
      "right" : "return Gamma.regularizedGammaQ((double) x + 1, mean, epsilon, maxIterations);",
      "info" : "ReturnStatement[5842-5919]:ReturnStatement[5820-5897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6614-6734]:Block[6592-6712]"
    }, {
      "left" : "return normal.cumulativeProbability(x + 0.5);",
      "right" : "return normal.cumulativeProbability(x + 0.5);",
      "info" : "ReturnStatement[6683-6728]:ReturnStatement[6661-6706]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7581-7672]:Block[7559-7650]"
    }, {
      "left" : "return (int) FastMath.min(randomData.nextPoisson(mean), Integer.MAX_VALUE);",
      "right" : "return (int) FastMath.min(randomData.nextPoisson(mean), Integer.MAX_VALUE);",
      "info" : "ReturnStatement[7591-7666]:ReturnStatement[7569-7644]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8061-8086]:Block[8039-8064]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[8071-8080]:ReturnStatement[8049-8058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8475-8516]:Block[8453-8494]"
    }, {
      "left" : "return Integer.MAX_VALUE;",
      "right" : "return Integer.MAX_VALUE;",
      "info" : "ReturnStatement[8485-8510]:ReturnStatement[8463-8488]"
    } ]
  },
  "interFileMappings" : { }
}