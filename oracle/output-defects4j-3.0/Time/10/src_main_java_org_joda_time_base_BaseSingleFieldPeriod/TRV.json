{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "private static final long serialVersionUID = 9386874258972L;",
      "right" : "private static final long serialVersionUID = 9386874258972L;",
      "info" : "FieldDeclaration[1715-1809]:FieldDeclaration[1715-1809]"
    }, {
      "left" : "private volatile int iPeriod;",
      "right" : "private volatile int iPeriod;",
      "info" : "FieldDeclaration[1845-1925]:FieldDeclaration[1916-1996]"
    }, {
      "left" : "protected static int between(ReadableInstant start, ReadableInstant end, DurationFieldType field)",
      "right" : "protected static int between(ReadableInstant start, ReadableInstant end, DurationFieldType field)",
      "info" : "MethodDeclaration[2009-2842]:MethodDeclaration[2080-2913]"
    }, {
      "left" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
      "right" : "protected static int standardPeriodIn(ReadablePeriod period, long millisPerUnit)",
      "info" : "MethodDeclaration[4541-6444]:MethodDeclaration[4628-6531]"
    }, {
      "left" : "protected BaseSingleFieldPeriod(int period)",
      "right" : "protected BaseSingleFieldPeriod(int period)",
      "info" : "MethodDeclaration[6528-6756]:MethodDeclaration[6615-6843]"
    }, {
      "left" : "protected int getValue()",
      "right" : "protected int getValue()",
      "info" : "MethodDeclaration[6840-6990]:MethodDeclaration[6927-7077]"
    }, {
      "left" : "protected void setValue(int value)",
      "right" : "protected void setValue(int value)",
      "info" : "MethodDeclaration[6996-7248]:MethodDeclaration[7083-7335]"
    }, {
      "left" : "public abstract DurationFieldType getFieldType();",
      "right" : "public abstract DurationFieldType getFieldType();",
      "info" : "MethodDeclaration[7332-7497]:MethodDeclaration[7419-7584]"
    }, {
      "left" : "public abstract PeriodType getPeriodType();",
      "right" : "public abstract PeriodType getPeriodType();",
      "info" : "MethodDeclaration[7503-7677]:MethodDeclaration[7590-7764]"
    }, {
      "left" : "public int size()",
      "right" : "public int size()",
      "info" : "MethodDeclaration[7761-7961]:MethodDeclaration[7848-8048]"
    }, {
      "left" : "public DurationFieldType getFieldType(int index)",
      "right" : "public DurationFieldType getFieldType(int index)",
      "info" : "MethodDeclaration[7967-8529]:MethodDeclaration[8054-8616]"
    }, {
      "left" : "public int getValue(int index)",
      "right" : "public int getValue(int index)",
      "info" : "MethodDeclaration[8535-9033]:MethodDeclaration[8622-9120]"
    }, {
      "left" : "public int get(DurationFieldType type)",
      "right" : "public int get(DurationFieldType type)",
      "info" : "MethodDeclaration[9039-9525]:MethodDeclaration[9126-9612]"
    }, {
      "left" : "public boolean isSupported(DurationFieldType type)",
      "right" : "public boolean isSupported(DurationFieldType type)",
      "info" : "MethodDeclaration[9531-9850]:MethodDeclaration[9618-9937]"
    }, {
      "left" : "public Period toPeriod()",
      "right" : "public Period toPeriod()",
      "info" : "MethodDeclaration[9934-10238]:MethodDeclaration[10021-10325]"
    }, {
      "left" : "public MutablePeriod toMutablePeriod()",
      "right" : "public MutablePeriod toMutablePeriod()",
      "info" : "MethodDeclaration[10244-10698]:MethodDeclaration[10331-10785]"
    }, {
      "left" : "public boolean equals(Object period)",
      "right" : "public boolean equals(Object period)",
      "info" : "MethodDeclaration[10782-11566]:MethodDeclaration[10869-11653]"
    }, {
      "left" : "public int hashCode()",
      "right" : "public int hashCode()",
      "info" : "MethodDeclaration[11572-11863]:MethodDeclaration[11659-11950]"
    }, {
      "left" : "public int compareTo(BaseSingleFieldPeriod other)",
      "right" : "public int compareTo(BaseSingleFieldPeriod other)",
      "info" : "MethodDeclaration[11869-12674]:MethodDeclaration[11956-12761]"
    } ],
    "mappings" : [
 {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2402-2411]:Modifier[2473-2482]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2412-2418]:Modifier[2483-2489]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[2419-2422]:PrimitiveType[2490-2493]"
    }, {
      "left" : "between",
      "right" : "between",
      "info" : "SimpleName[2423-2430]:SimpleName[2494-2501]"
    }, {
      "left" : "ReadableInstant start",
      "right" : "ReadableInstant start",
      "info" : "SingleVariableDeclaration[2431-2452]:SingleVariableDeclaration[2502-2523]"
    }, {
      "left" : "ReadableInstant end",
      "right" : "ReadableInstant end",
      "info" : "SingleVariableDeclaration[2454-2473]:SingleVariableDeclaration[2525-2544]"
    }, {
      "left" : "DurationFieldType field",
      "right" : "DurationFieldType field",
      "info" : "SingleVariableDeclaration[2475-2498]:SingleVariableDeclaration[2546-2569]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2500-2842]:Block[2571-2913]"
    }, {
      "left" : "if (start == null || end == null)",
      "right" : "if (start == null || end == null)",
      "info" : "IfStatement[2510-2647]:IfStatement[2581-2718]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2544-2647]:Block[2615-2718]"
    }, {
      "left" : "throw new IllegalArgumentException(\"ReadableInstant objects must not be null\");",
      "right" : "throw new IllegalArgumentException(\"ReadableInstant objects must not be null\");",
      "info" : "ThrowStatement[2558-2637]:ThrowStatement[2629-2708]"
    }, {
      "left" : "Chronology chrono = DateTimeUtils.getInstantChronology(start);",
      "right" : "Chronology chrono = DateTimeUtils.getInstantChronology(start);",
      "info" : "VariableDeclarationStatement[2656-2718]:VariableDeclarationStatement[2727-2789]"
    }, {
      "left" : "int amount = field.getField(chrono).getDifference(end.getMillis(), start.getMillis());",
      "right" : "int amount = field.getField(chrono).getDifference(end.getMillis(), start.getMillis());",
      "info" : "VariableDeclarationStatement[2727-2813]:VariableDeclarationStatement[2798-2884]"
    }, {
      "left" : "return amount;",
      "right" : "return amount;",
      "info" : "ReturnStatement[2822-2836]:ReturnStatement[2893-2907]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[5526-5535]:Modifier[5613-5622]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5536-5542]:Modifier[5623-5629]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[5543-5546]:PrimitiveType[5630-5633]"
    }, {
      "left" : "standardPeriodIn",
      "right" : "standardPeriodIn",
      "info" : "SimpleName[5547-5563]:SimpleName[5634-5650]"
    }, {
      "left" : "ReadablePeriod period",
      "right" : "ReadablePeriod period",
      "info" : "SingleVariableDeclaration[5564-5585]:SingleVariableDeclaration[5651-5672]"
    }, {
      "left" : "long millisPerUnit",
      "right" : "long millisPerUnit",
      "info" : "SingleVariableDeclaration[5587-5605]:SingleVariableDeclaration[5674-5692]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5607-6444]:Block[5694-6531]"
    }, {
      "left" : "if (period == null)",
      "right" : "if (period == null)",
      "info" : "IfStatement[5617-5670]:IfStatement[5704-5757]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5637-5670]:Block[5724-5757]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[5651-5660]:ReturnStatement[5738-5747]"
    }, {
      "left" : "Chronology iso = ISOChronology.getInstanceUTC();",
      "right" : "Chronology iso = ISOChronology.getInstanceUTC();",
      "info" : "VariableDeclarationStatement[5679-5727]:VariableDeclarationStatement[5766-5814]"
    }, {
      "left" : "long duration = 0L;",
      "right" : "long duration = 0L;",
      "info" : "VariableDeclarationStatement[5736-5755]:VariableDeclarationStatement[5823-5842]"
    }, {
      "left" : "for (int i = 0; i < period.size(); i++)",
      "right" : "for (int i = 0; i < period.size(); i++)",
      "info" : "ForStatement[5764-6375]:ForStatement[5851-6462]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5804-6375]:Block[5891-6462]"
    }, {
      "left" : "int value = period.getValue(i);",
      "right" : "int value = period.getValue(i);",
      "info" : "VariableDeclarationStatement[5818-5849]:VariableDeclarationStatement[5905-5936]"
    }, {
      "left" : "if (value != 0)",
      "right" : "if (value != 0)",
      "info" : "IfStatement[5862-6365]:IfStatement[5949-6452]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5878-6365]:Block[5965-6452]"
    }, {
      "left" : "DurationField field = period.getFieldType(i).getField(iso);",
      "right" : "DurationField field = period.getFieldType(i).getField(iso);",
      "info" : "VariableDeclarationStatement[5896-5955]:VariableDeclarationStatement[5983-6042]"
    }, {
      "left" : "if (field.isPrecise() == false)",
      "right" : "if (field.isPrecise() == false)",
      "info" : "IfStatement[5972-6239]:IfStatement[6059-6326]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6004-6239]:Block[6091-6326]"
    }, {
      "left" : "throw new IllegalArgumentException(\n                            \"Cannot convert period to duration as \" + field.getName() +\n                            \" is not precise in the period \" + period);",
      "right" : "throw new IllegalArgumentException(\n                            \"Cannot convert period to duration as \" + field.getName() +\n                            \" is not precise in the period \" + period);",
      "info" : "ThrowStatement[6026-6221]:ThrowStatement[6113-6308]"
    }, {
      "left" : "duration = FieldUtils.safeAdd(duration, FieldUtils.safeMultiply(field.getUnitMillis(), value));",
      "right" : "duration = FieldUtils.safeAdd(duration, FieldUtils.safeMultiply(field.getUnitMillis(), value));",
      "info" : "ExpressionStatement[6256-6351]:ExpressionStatement[6343-6438]"
    }, {
      "left" : "return FieldUtils.safeToInt(duration / millisPerUnit);",
      "right" : "return FieldUtils.safeToInt(duration / millisPerUnit);",
      "info" : "ReturnStatement[6384-6438]:ReturnStatement[6471-6525]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6662-6671]:Modifier[6749-6758]"
    }, {
      "left" : "BaseSingleFieldPeriod",
      "right" : "BaseSingleFieldPeriod",
      "info" : "SimpleName[6672-6693]:SimpleName[6759-6780]"
    }, {
      "left" : "int period",
      "right" : "int period",
      "info" : "SingleVariableDeclaration[6694-6704]:SingleVariableDeclaration[6781-6791]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6706-6756]:Block[6793-6843]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[6716-6724]:SuperConstructorInvocation[6803-6811]"
    }, {
      "left" : "iPeriod = period;",
      "right" : "iPeriod = period;",
      "info" : "ExpressionStatement[6733-6750]:ExpressionStatement[6820-6837]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[6934-6943]:Modifier[7021-7030]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[6944-6947]:PrimitiveType[7031-7034]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[6948-6956]:SimpleName[7035-7043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6959-6990]:Block[7046-7077]"
    }, {
      "left" : "return iPeriod;",
      "right" : "return iPeriod;",
      "info" : "ReturnStatement[6969-6984]:ReturnStatement[7056-7071]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7181-7190]:Modifier[7268-7277]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7191-7195]:PrimitiveType[7278-7282]"
    }, {
      "left" : "setValue",
      "right" : "setValue",
      "info" : "SimpleName[7196-7204]:SimpleName[7283-7291]"
    }, {
      "left" : "int value",
      "right" : "int value",
      "info" : "SingleVariableDeclaration[7205-7214]:SingleVariableDeclaration[7292-7301]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7216-7248]:Block[7303-7335]"
    }, {
      "left" : "iPeriod = value;",
      "right" : "iPeriod = value;",
      "info" : "ExpressionStatement[7226-7242]:ExpressionStatement[7313-7329]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7448-7454]:Modifier[7535-7541]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[7455-7463]:Modifier[7542-7550]"
    }, {
      "left" : "DurationFieldType",
      "right" : "DurationFieldType",
      "info" : "SimpleType[7464-7481]:SimpleType[7551-7568]"
    }, {
      "left" : "getFieldType",
      "right" : "getFieldType",
      "info" : "SimpleName[7482-7494]:SimpleName[7569-7581]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7634-7640]:Modifier[7721-7727]"
    }, {
      "left" : "abstract",
      "right" : "abstract",
      "info" : "Modifier[7641-7649]:Modifier[7728-7736]"
    }, {
      "left" : "PeriodType",
      "right" : "PeriodType",
      "info" : "SimpleType[7650-7660]:SimpleType[7737-7747]"
    }, {
      "left" : "getPeriodType",
      "right" : "getPeriodType",
      "info" : "SimpleName[7661-7674]:SimpleName[7748-7761]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7918-7924]:Modifier[8005-8011]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[7925-7928]:PrimitiveType[8012-8015]"
    }, {
      "left" : "size",
      "right" : "size",
      "info" : "SimpleName[7929-7933]:SimpleName[8016-8020]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7936-7961]:Block[8023-8048]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[7946-7955]:ReturnStatement[8033-8042]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8334-8340]:Modifier[8421-8427]"
    }, {
      "left" : "DurationFieldType",
      "right" : "DurationFieldType",
      "info" : "SimpleType[8341-8358]:SimpleType[8428-8445]"
    }, {
      "left" : "getFieldType",
      "right" : "getFieldType",
      "info" : "SimpleName[8359-8371]:SimpleName[8446-8458]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8372-8381]:SingleVariableDeclaration[8459-8468]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8383-8529]:Block[8470-8616]"
    }, {
      "left" : "if (index != 0)",
      "right" : "if (index != 0)",
      "info" : "IfStatement[8393-8492]:IfStatement[8480-8579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8409-8492]:Block[8496-8579]"
    }, {
      "left" : "throw new IndexOutOfBoundsException(String.valueOf(index));",
      "right" : "throw new IndexOutOfBoundsException(String.valueOf(index));",
      "info" : "ThrowStatement[8423-8482]:ThrowStatement[8510-8569]"
    }, {
      "left" : "return getFieldType();",
      "right" : "return getFieldType();",
      "info" : "ReturnStatement[8501-8523]:ReturnStatement[8588-8610]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8860-8866]:Modifier[8947-8953]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8867-8870]:PrimitiveType[8954-8957]"
    }, {
      "left" : "getValue",
      "right" : "getValue",
      "info" : "SimpleName[8871-8879]:SimpleName[8958-8966]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[8880-8889]:SingleVariableDeclaration[8967-8976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8891-9033]:Block[8978-9120]"
    }, {
      "left" : "if (index != 0)",
      "right" : "if (index != 0)",
      "info" : "IfStatement[8901-9000]:IfStatement[8988-9087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8917-9000]:Block[9004-9087]"
    }, {
      "left" : "throw new IndexOutOfBoundsException(String.valueOf(index));",
      "right" : "throw new IndexOutOfBoundsException(String.valueOf(index));",
      "info" : "ThrowStatement[8931-8990]:ThrowStatement[9018-9077]"
    }, {
      "left" : "return getValue();",
      "right" : "return getValue();",
      "info" : "ReturnStatement[9009-9027]:ReturnStatement[9096-9114]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9382-9388]:Modifier[9469-9475]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9389-9392]:PrimitiveType[9476-9479]"
    }, {
      "left" : "get",
      "right" : "get",
      "info" : "SimpleName[9393-9396]:SimpleName[9480-9483]"
    }, {
      "left" : "DurationFieldType type",
      "right" : "DurationFieldType type",
      "info" : "SingleVariableDeclaration[9397-9419]:SingleVariableDeclaration[9484-9506]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9421-9525]:Block[9508-9612]"
    }, {
      "left" : "if (type == getFieldType())",
      "right" : "if (type == getFieldType())",
      "info" : "IfStatement[9431-9501]:IfStatement[9518-9588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9459-9501]:Block[9546-9588]"
    }, {
      "left" : "return getValue();",
      "right" : "return getValue();",
      "info" : "ReturnStatement[9473-9491]:ReturnStatement[9560-9578]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[9510-9519]:ReturnStatement[9597-9606]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9751-9757]:Modifier[9838-9844]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[9758-9765]:PrimitiveType[9845-9852]"
    }, {
      "left" : "isSupported",
      "right" : "isSupported",
      "info" : "SimpleName[9766-9777]:SimpleName[9853-9864]"
    }, {
      "left" : "DurationFieldType type",
      "right" : "DurationFieldType type",
      "info" : "SingleVariableDeclaration[9778-9800]:SingleVariableDeclaration[9865-9887]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9802-9850]:Block[9889-9937]"
    }, {
      "left" : "return (type == getFieldType());",
      "right" : "return (type == getFieldType());",
      "info" : "ReturnStatement[9812-9844]:ReturnStatement[9899-9931]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10161-10167]:Modifier[10248-10254]"
    }, {
      "left" : "Period",
      "right" : "Period",
      "info" : "SimpleType[10168-10174]:SimpleType[10255-10261]"
    }, {
      "left" : "toPeriod",
      "right" : "toPeriod",
      "info" : "SimpleName[10175-10183]:SimpleName[10262-10270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10186-10238]:Block[10273-10325]"
    }, {
      "left" : "return Period.ZERO.withFields(this);",
      "right" : "return Period.ZERO.withFields(this);",
      "info" : "ReturnStatement[10196-10232]:ReturnStatement[10283-10319]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10551-10557]:Modifier[10638-10644]"
    }, {
      "left" : "MutablePeriod",
      "right" : "MutablePeriod",
      "info" : "SimpleType[10558-10571]:SimpleType[10645-10658]"
    }, {
      "left" : "toMutablePeriod",
      "right" : "toMutablePeriod",
      "info" : "SimpleName[10572-10587]:SimpleName[10659-10674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10590-10698]:Block[10677-10785]"
    }, {
      "left" : "MutablePeriod period = new MutablePeriod();",
      "right" : "MutablePeriod period = new MutablePeriod();",
      "info" : "VariableDeclarationStatement[10600-10643]:VariableDeclarationStatement[10687-10730]"
    }, {
      "left" : "period.add(this);",
      "right" : "period.add(this);",
      "info" : "ExpressionStatement[10652-10669]:ExpressionStatement[10739-10756]"
    }, {
      "left" : "return period;",
      "right" : "return period;",
      "info" : "ReturnStatement[10678-10692]:ReturnStatement[10765-10779]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11214-11220]:Modifier[11301-11307]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[11221-11228]:PrimitiveType[11308-11315]"
    }, {
      "left" : "equals",
      "right" : "equals",
      "info" : "SimpleName[11229-11235]:SimpleName[11316-11322]"
    }, {
      "left" : "Object period",
      "right" : "Object period",
      "info" : "SingleVariableDeclaration[11236-11249]:SingleVariableDeclaration[11323-11336]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11251-11566]:Block[11338-11653]"
    }, {
      "left" : "if (this == period)",
      "right" : "if (this == period)",
      "info" : "IfStatement[11261-11317]:IfStatement[11348-11404]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11281-11317]:Block[11368-11404]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[11295-11307]:ReturnStatement[11382-11394]"
    }, {
      "left" : "if (period instanceof ReadablePeriod == false)",
      "right" : "if (period instanceof ReadablePeriod == false)",
      "info" : "IfStatement[11326-11410]:IfStatement[11413-11497]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11373-11410]:Block[11460-11497]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[11387-11400]:ReturnStatement[11474-11487]"
    }, {
      "left" : "ReadablePeriod other = (ReadablePeriod) period;",
      "right" : "ReadablePeriod other = (ReadablePeriod) period;",
      "info" : "VariableDeclarationStatement[11419-11466]:VariableDeclarationStatement[11506-11553]"
    }, {
      "left" : "return (other.getPeriodType() == getPeriodType() && other.getValue(0) == getValue());",
      "right" : "return (other.getPeriodType() == getPeriodType() && other.getValue(0) == getValue());",
      "info" : "ReturnStatement[11475-11560]:ReturnStatement[11562-11647]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11691-11697]:Modifier[11778-11784]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[11698-11701]:PrimitiveType[11785-11788]"
    }, {
      "left" : "hashCode",
      "right" : "hashCode",
      "info" : "SimpleName[11702-11710]:SimpleName[11789-11797]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11713-11863]:Block[11800-11950]"
    }, {
      "left" : "int total = 17;",
      "right" : "int total = 17;",
      "info" : "VariableDeclarationStatement[11723-11738]:VariableDeclarationStatement[11810-11825]"
    }, {
      "left" : "total = 27 * total + getValue();",
      "right" : "total = 27 * total + getValue();",
      "info" : "ExpressionStatement[11747-11779]:ExpressionStatement[11834-11866]"
    }, {
      "left" : "total = 27 * total + getFieldType().hashCode();",
      "right" : "total = 27 * total + getFieldType().hashCode();",
      "info" : "ExpressionStatement[11788-11835]:ExpressionStatement[11875-11922]"
    }, {
      "left" : "return total;",
      "right" : "return total;",
      "info" : "ReturnStatement[11844-11857]:ReturnStatement[11931-11944]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12222-12228]:Modifier[12309-12315]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12229-12232]:PrimitiveType[12316-12319]"
    }, {
      "left" : "compareTo",
      "right" : "compareTo",
      "info" : "SimpleName[12233-12242]:SimpleName[12320-12329]"
    }, {
      "left" : "BaseSingleFieldPeriod other",
      "right" : "BaseSingleFieldPeriod other",
      "info" : "SingleVariableDeclaration[12243-12270]:SingleVariableDeclaration[12330-12357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12272-12674]:Block[12359-12761]"
    }, {
      "left" : "if (other.getClass() != getClass())",
      "right" : "if (other.getClass() != getClass())",
      "info" : "IfStatement[12282-12430]:IfStatement[12369-12517]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12318-12430]:Block[12405-12517]"
    }, {
      "left" : "throw new ClassCastException(getClass() + \" cannot be compared to \" + other.getClass());",
      "right" : "throw new ClassCastException(getClass() + \" cannot be compared to \" + other.getClass());",
      "info" : "ThrowStatement[12332-12420]:ThrowStatement[12419-12507]"
    }, {
      "left" : "int otherValue = other.getValue();",
      "right" : "int otherValue = other.getValue();",
      "info" : "VariableDeclarationStatement[12439-12473]:VariableDeclarationStatement[12526-12560]"
    }, {
      "left" : "int thisValue = getValue();",
      "right" : "int thisValue = getValue();",
      "info" : "VariableDeclarationStatement[12482-12509]:VariableDeclarationStatement[12569-12596]"
    }, {
      "left" : "if (thisValue > otherValue)",
      "right" : "if (thisValue > otherValue)",
      "info" : "IfStatement[12518-12579]:IfStatement[12605-12666]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12546-12579]:Block[12633-12666]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[12560-12569]:ReturnStatement[12647-12656]"
    }, {
      "left" : "if (thisValue < otherValue)",
      "right" : "if (thisValue < otherValue)",
      "info" : "IfStatement[12588-12650]:IfStatement[12675-12737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12616-12650]:Block[12703-12737]"
    }, {
      "left" : "return -1;",
      "right" : "return -1;",
      "info" : "ReturnStatement[12630-12640]:ReturnStatement[12717-12727]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[12659-12668]:ReturnStatement[12746-12755]"
    } ]
  },
  "interFileMappings" : { }
}