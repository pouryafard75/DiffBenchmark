{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "BeanSerializerFactory",
      "right" : "BeanSerializerFactory",
      "info" : "TypeDeclaration[1096-33638]:TypeDeclaration[1096-33818]"
    }, {
      "left" : "private static final long serialVersionUID = 1;",
      "right" : "private static final long serialVersionUID = 1;",
      "info" : "FieldDeclaration[2663-2710]:FieldDeclaration[2663-2710]"
    }, {
      "left" : "public final static BeanSerializerFactory instance = new BeanSerializerFactory(null);",
      "right" : "public final static BeanSerializerFactory instance = new BeanSerializerFactory(null);",
      "info" : "FieldDeclaration[2716-3000]:FieldDeclaration[2716-3000]"
    }, {
      "left" : "protected BeanSerializerFactory(SerializerFactoryConfig config)",
      "right" : "protected BeanSerializerFactory(SerializerFactoryConfig config)",
      "info" : "MethodDeclaration[3193-3379]:MethodDeclaration[3193-3379]"
    }, {
      "left" : "public SerializerFactory withConfig(SerializerFactoryConfig config)",
      "right" : "public SerializerFactory withConfig(SerializerFactoryConfig config)",
      "info" : "MethodDeclaration[3389-4715]:MethodDeclaration[3389-4715]"
    }, {
      "left" : "protected Iterable<Serializers> customSerializers()",
      "right" : "protected Iterable<Serializers> customSerializers()",
      "info" : "MethodDeclaration[4721-4839]:MethodDeclaration[4721-4839]"
    }, {
      "left" : "public JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType origType)\n        throws JsonMappingException",
      "right" : "public JsonSerializer<Object> createSerializer(SerializerProvider prov,\n            JavaType origType)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[5023-7608]:MethodDeclaration[5023-7608]"
    }, {
      "left" : "protected JsonSerializer<?> _createSerializer2(SerializerProvider prov,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> _createSerializer2(SerializerProvider prov,\n            JavaType type, BeanDescription beanDesc, boolean staticTyping)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[7614-11271]:MethodDeclaration[7614-11271]"
    }, {
      "left" : "public JsonSerializer<Object> findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "public JsonSerializer<Object> findBeanSerializer(SerializerProvider prov, JavaType type, BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[11507-12205]:MethodDeclaration[11507-12205]"
    }, {
      "left" : "public TypeSerializer findPropertyTypeSerializer(JavaType baseType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "right" : "public TypeSerializer findPropertyTypeSerializer(JavaType baseType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[12211-13368]:MethodDeclaration[12211-13368]"
    }, {
      "left" : "public TypeSerializer findPropertyContentTypeSerializer(JavaType containerType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "right" : "public TypeSerializer findPropertyContentTypeSerializer(JavaType containerType,\n            SerializationConfig config, AnnotatedMember accessor)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[13374-14656]:MethodDeclaration[13374-14656]"
    }, {
      "left" : "protected JsonSerializer<Object> constructBeanSerializer(SerializerProvider prov,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<Object> constructBeanSerializer(SerializerProvider prov,\n            BeanDescription beanDesc)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[14856-19622]:MethodDeclaration[14856-19802]"
    }, {
      "left" : "protected ObjectIdWriter constructObjectIdHandler(SerializerProvider prov,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)\n        throws JsonMappingException",
      "right" : "protected ObjectIdWriter constructObjectIdHandler(SerializerProvider prov,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[19628-22038]:MethodDeclaration[19808-22218]"
    }, {
      "left" : "protected BeanPropertyWriter constructFilteredBeanWriter(BeanPropertyWriter writer,\n            Class<?>[] inViews)",
      "right" : "protected BeanPropertyWriter constructFilteredBeanWriter(BeanPropertyWriter writer,\n            Class<?>[] inViews)",
      "info" : "MethodDeclaration[22044-22471]:MethodDeclaration[22224-22651]"
    }, {
      "left" : "protected PropertyBuilder constructPropertyBuilder(SerializationConfig config,\n            BeanDescription beanDesc)",
      "right" : "protected PropertyBuilder constructPropertyBuilder(SerializationConfig config,\n            BeanDescription beanDesc)",
      "info" : "MethodDeclaration[22481-22663]:MethodDeclaration[22661-22843]"
    }, {
      "left" : "protected BeanSerializerBuilder constructBeanSerializerBuilder(BeanDescription beanDesc)",
      "right" : "protected BeanSerializerBuilder constructBeanSerializerBuilder(BeanDescription beanDesc)",
      "info" : "MethodDeclaration[22669-22817]:MethodDeclaration[22849-22997]"
    }, {
      "left" : "protected boolean isPotentialBeanType(Class<?> type)",
      "right" : "protected boolean isPotentialBeanType(Class<?> type)",
      "info" : "MethodDeclaration[23027-23514]:MethodDeclaration[23207-23694]"
    }, {
      "left" : "protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov,\n            BeanDescription beanDesc, BeanSerializerBuilder builder)\n        throws JsonMappingException",
      "right" : "protected List<BeanPropertyWriter> findBeanProperties(SerializerProvider prov,\n            BeanDescription beanDesc, BeanSerializerBuilder builder)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[23520-26100]:MethodDeclaration[23700-26280]"
    }, {
      "left" : "protected List<BeanPropertyWriter> filterBeanProperties(SerializationConfig config,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)",
      "right" : "protected List<BeanPropertyWriter> filterBeanProperties(SerializationConfig config,\n            BeanDescription beanDesc, List<BeanPropertyWriter> props)",
      "info" : "MethodDeclaration[26325-27205]:MethodDeclaration[26505-27385]"
    }, {
      "left" : "protected void processViews(SerializationConfig config, BeanSerializerBuilder builder)",
      "right" : "protected void processViews(SerializationConfig config, BeanSerializerBuilder builder)",
      "info" : "MethodDeclaration[27211-28909]:MethodDeclaration[27391-29089]"
    }, {
      "left" : "protected void removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "right" : "protected void removeIgnorableTypes(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "info" : "MethodDeclaration[28915-30487]:MethodDeclaration[29095-30667]"
    }, {
      "left" : "protected void removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "right" : "protected void removeSetterlessGetters(SerializationConfig config, BeanDescription beanDesc,\n            List<BeanPropertyDefinition> properties)",
      "info" : "MethodDeclaration[30493-31178]:MethodDeclaration[30673-31358]"
    }, {
      "left" : "protected BeanPropertyWriter _constructWriter(SerializerProvider prov,\n            BeanPropertyDefinition propDef, TypeBindings typeContext,\n            PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)\n        throws JsonMappingException",
      "right" : "protected BeanPropertyWriter _constructWriter(SerializerProvider prov,\n            BeanPropertyDefinition propDef, TypeBindings typeContext,\n            PropertyBuilder pb, boolean staticTyping, AnnotatedMember accessor)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[31363-33636]:MethodDeclaration[31543-33816]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2538-2544]:Modifier[2538-2544]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[2545-2550]:TYPE_DECLARATION_KIND[2545-2550]"
    }, {
      "left" : "BeanSerializerFactory",
      "right" : "BeanSerializerFactory",
      "info" : "SimpleName[2551-2572]:SimpleName[2551-2572]"
    }, {
      "left" : "BasicSerializerFactory",
      "right" : "BasicSerializerFactory",
      "info" : "SimpleType[2585-2607]:SimpleType[2585-2607]"
    }, {
      "left" : "java.io.Serializable",
      "right" : "java.io.Serializable",
      "info" : "SimpleType[2623-2643]:SimpleType[2623-2643]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3281-3290]:Modifier[3281-3290]"
    }, {
      "left" : "BeanSerializerFactory",
      "right" : "BeanSerializerFactory",
      "info" : "SimpleName[3291-3312]:SimpleName[3291-3312]"
    }, {
      "left" : "SerializerFactoryConfig config",
      "right" : "SerializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[3313-3343]:SingleVariableDeclaration[3313-3343]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3349-3379]:Block[3349-3379]"
    }, {
      "left" : "super(config);",
      "right" : "super(config);",
      "info" : "SuperConstructorInvocation[3359-3373]:SuperConstructorInvocation[3359-3373]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[3671-3680]:MarkerAnnotation[3671-3680]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3685-3691]:Modifier[3685-3691]"
    }, {
      "left" : "SerializerFactory",
      "right" : "SerializerFactory",
      "info" : "SimpleType[3692-3709]:SimpleType[3692-3709]"
    }, {
      "left" : "withConfig",
      "right" : "withConfig",
      "info" : "SimpleName[3710-3720]:SimpleName[3710-3720]"
    }, {
      "left" : "SerializerFactoryConfig config",
      "right" : "SerializerFactoryConfig config",
      "info" : "SingleVariableDeclaration[3721-3751]:SingleVariableDeclaration[3721-3751]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3757-4715]:Block[3757-4715]"
    }, {
      "left" : "if (_factoryConfig == config)",
      "right" : "if (_factoryConfig == config)",
      "info" : "IfStatement[3767-3833]:IfStatement[3767-3833]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3797-3833]:Block[3797-3833]"
    }, {
      "left" : "return this;",
      "right" : "return this;",
      "info" : "ReturnStatement[3811-3823]:ReturnStatement[3811-3823]"
    }, {
      "left" : "if (getClass() != BeanSerializerFactory.class)",
      "right" : "if (getClass() != BeanSerializerFactory.class)",
      "info" : "IfStatement[4317-4659]:IfStatement[4317-4659]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4364-4659]:Block[4364-4659]"
    }, {
      "left" : "throw new IllegalStateException(\"Subtype of BeanSerializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalSerializers': can not instantiate subtype with \"\n                    +\"additional serializer definitions\");",
      "right" : "throw new IllegalStateException(\"Subtype of BeanSerializerFactory (\"+getClass().getName()\n                    +\") has not properly overridden method 'withAdditionalSerializers': can not instantiate subtype with \"\n                    +\"additional serializer definitions\");",
      "info" : "ThrowStatement[4378-4649]:ThrowStatement[4378-4649]"
    }, {
      "left" : "return new BeanSerializerFactory(config);",
      "right" : "return new BeanSerializerFactory(config);",
      "info" : "ReturnStatement[4668-4709]:ReturnStatement[4668-4709]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[4721-4730]:MarkerAnnotation[4721-4730]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4735-4744]:Modifier[4735-4744]"
    }, {
      "left" : "Iterable<Serializers>",
      "right" : "Iterable<Serializers>",
      "info" : "ParameterizedType[4745-4766]:ParameterizedType[4745-4766]"
    }, {
      "left" : "customSerializers",
      "right" : "customSerializers",
      "info" : "SimpleName[4767-4784]:SimpleName[4767-4784]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4787-4839]:Block[4787-4839]"
    }, {
      "left" : "return _factoryConfig.serializers();",
      "right" : "return _factoryConfig.serializers();",
      "info" : "ReturnStatement[4797-4833]:ReturnStatement[4797-4833]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[5534-5543]:MarkerAnnotation[5534-5543]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[5548-5578]:SingleMemberAnnotation[5548-5578]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5583-5589]:Modifier[5583-5589]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[5590-5612]:ParameterizedType[5590-5612]"
    }, {
      "left" : "createSerializer",
      "right" : "createSerializer",
      "info" : "SimpleName[5613-5629]:SimpleName[5613-5629]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[5630-5653]:SingleVariableDeclaration[5630-5653]"
    }, {
      "left" : "JavaType origType",
      "right" : "JavaType origType",
      "info" : "SingleVariableDeclaration[5667-5684]:SingleVariableDeclaration[5667-5684]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[5701-5721]:SimpleType[5701-5721]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5726-7608]:Block[5726-7608]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[5821-5873]:VariableDeclarationStatement[5821-5873]"
    }, {
      "left" : "BeanDescription beanDesc = config.introspect(origType);",
      "right" : "BeanDescription beanDesc = config.introspect(origType);",
      "info" : "VariableDeclarationStatement[5882-5937]:VariableDeclarationStatement[5882-5937]"
    }, {
      "left" : "JsonSerializer<?> ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "right" : "JsonSerializer<?> ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "info" : "VariableDeclarationStatement[5946-6030]:VariableDeclarationStatement[5946-6030]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[6039-6116]:IfStatement[6039-6116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6056-6116]:Block[6056-6116]"
    }, {
      "left" : "return (JsonSerializer<Object>) ser;",
      "right" : "return (JsonSerializer<Object>) ser;",
      "info" : "ReturnStatement[6070-6106]:ReturnStatement[6070-6106]"
    }, {
      "left" : "boolean staticTyping;",
      "right" : "boolean staticTyping;",
      "info" : "VariableDeclarationStatement[6125-6146]:VariableDeclarationStatement[6125-6146]"
    }, {
      "left" : "JavaType type = modifyTypeByAnnotation(config, beanDesc.getClassInfo(), origType);",
      "right" : "JavaType type = modifyTypeByAnnotation(config, beanDesc.getClassInfo(), origType);",
      "info" : "VariableDeclarationStatement[6232-6314]:VariableDeclarationStatement[6232-6314]"
    }, {
      "left" : "if (type == origType)",
      "right" : "if (type == origType)",
      "info" : "IfStatement[6323-6687]:IfStatement[6323-6687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6345-6431]:Block[6345-6431]"
    }, {
      "left" : "staticTyping = false;",
      "right" : "staticTyping = false;",
      "info" : "ExpressionStatement[6400-6421]:ExpressionStatement[6400-6421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6437-6687]:Block[6437-6687]"
    }, {
      "left" : "staticTyping = true;",
      "right" : "staticTyping = true;",
      "info" : "ExpressionStatement[6530-6550]:ExpressionStatement[6530-6550]"
    }, {
      "left" : "if (!type.hasRawClass(origType.getRawClass()))",
      "right" : "if (!type.hasRawClass(origType.getRawClass()))",
      "info" : "IfStatement[6563-6677]:IfStatement[6563-6677]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6610-6677]:Block[6610-6677]"
    }, {
      "left" : "beanDesc = config.introspect(type);",
      "right" : "beanDesc = config.introspect(type);",
      "info" : "ExpressionStatement[6628-6663]:ExpressionStatement[6628-6663]"
    }, {
      "left" : "Converter<Object,Object> conv = beanDesc.findSerializationConverter();",
      "right" : "Converter<Object,Object> conv = beanDesc.findSerializationConverter();",
      "info" : "VariableDeclarationStatement[6758-6828]:VariableDeclarationStatement[6758-6828]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[6837-6980]:IfStatement[6837-6980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6855-6980]:Block[6855-6980]"
    }, {
      "left" : "return (JsonSerializer<Object>) _createSerializer2(prov, type, beanDesc, staticTyping);",
      "right" : "return (JsonSerializer<Object>) _createSerializer2(prov, type, beanDesc, staticTyping);",
      "info" : "ReturnStatement[6883-6970]:ReturnStatement[6883-6970]"
    }, {
      "left" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getOutputType(prov.getTypeFactory());",
      "info" : "VariableDeclarationStatement[6989-7055]:VariableDeclarationStatement[6989-7055]"
    }, {
      "left" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "right" : "if (!delegateType.hasRawClass(type.getRawClass()))",
      "info" : "IfStatement[7154-7422]:IfStatement[7154-7422]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7205-7422]:Block[7205-7422]"
    }, {
      "left" : "beanDesc = config.introspect(delegateType);",
      "right" : "beanDesc = config.introspect(delegateType);",
      "info" : "ExpressionStatement[7219-7262]:ExpressionStatement[7219-7262]"
    }, {
      "left" : "ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "right" : "ser = findSerializerFromAnnotation(prov, beanDesc.getClassInfo());",
      "info" : "ExpressionStatement[7346-7412]:ExpressionStatement[7346-7412]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[7431-7533]:IfStatement[7431-7533]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7448-7533]:Block[7448-7533]"
    }, {
      "left" : "ser = _createSerializer2(prov, delegateType, beanDesc, true);",
      "right" : "ser = _createSerializer2(prov, delegateType, beanDesc, true);",
      "info" : "ExpressionStatement[7462-7523]:ExpressionStatement[7462-7523]"
    }, {
      "left" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "right" : "return new StdDelegatingSerializer(conv, delegateType, ser);",
      "info" : "ReturnStatement[7542-7602]:ReturnStatement[7542-7602]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[7614-7623]:Modifier[7614-7623]"
    }, {
      "left" : "JsonSerializer<?>",
      "right" : "JsonSerializer<?>",
      "info" : "ParameterizedType[7624-7641]:ParameterizedType[7624-7641]"
    }, {
      "left" : "_createSerializer2",
      "right" : "_createSerializer2",
      "info" : "SimpleName[7642-7660]:SimpleName[7642-7660]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[7661-7684]:SingleVariableDeclaration[7661-7684]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[7698-7711]:SingleVariableDeclaration[7698-7711]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[7713-7737]:SingleVariableDeclaration[7713-7737]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[7739-7759]:SingleVariableDeclaration[7739-7759]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[7776-7796]:SimpleType[7776-7796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7801-11271]:Block[7801-11271]"
    }, {
      "left" : "JsonSerializer<?> ser = findSerializerByAnnotations(prov, type, beanDesc);",
      "right" : "JsonSerializer<?> ser = findSerializerByAnnotations(prov, type, beanDesc);",
      "info" : "VariableDeclarationStatement[7861-7935]:VariableDeclarationStatement[7861-7935]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[7944-7996]:IfStatement[7944-7996]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7961-7996]:Block[7961-7996]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[7975-7986]:ReturnStatement[7975-7986]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[8005-8057]:VariableDeclarationStatement[8005-8057]"
    }, {
      "left" : "if (type.isContainerType())",
      "right" : "if (type.isContainerType())",
      "info" : "IfStatement[8206-9408]:IfStatement[8206-9408]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8234-9095]:Block[8234-9095]"
    }, {
      "left" : "if (!staticTyping)",
      "right" : "if (!staticTyping)",
      "info" : "IfStatement[8248-8766]:IfStatement[8248-8766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8267-8766]:Block[8267-8766]"
    }, {
      "left" : "staticTyping = usesStaticTyping(config, beanDesc, null);",
      "right" : "staticTyping = usesStaticTyping(config, beanDesc, null);",
      "info" : "ExpressionStatement[8285-8341]:ExpressionStatement[8285-8341]"
    }, {
      "left" : "ser =  buildContainerSerializer(prov, type, beanDesc, staticTyping);",
      "right" : "ser =  buildContainerSerializer(prov, type, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[8863-8931]:ExpressionStatement[8863-8931]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[9025-9085]:IfStatement[9025-9085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9042-9085]:Block[9042-9085]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[9060-9071]:ReturnStatement[9060-9071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9101-9408]:Block[9101-9408]"
    }, {
      "left" : "for (Serializers serializers : customSerializers())",
      "right" : "for (Serializers serializers : customSerializers())",
      "info" : "EnhancedForStatement[9177-9398]:EnhancedForStatement[9177-9398]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9229-9398]:Block[9229-9398]"
    }, {
      "left" : "ser = serializers.findSerializer(config, type, beanDesc);",
      "right" : "ser = serializers.findSerializer(config, type, beanDesc);",
      "info" : "ExpressionStatement[9247-9304]:ExpressionStatement[9247-9304]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[9321-9384]:IfStatement[9321-9384]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9338-9384]:Block[9338-9384]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[9360-9366]:BreakStatement[9360-9366]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9627-10906]:IfStatement[9627-10906]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9644-10906]:Block[9644-10906]"
    }, {
      "left" : "ser = findSerializerByLookup(type, config, beanDesc, staticTyping);",
      "right" : "ser = findSerializerByLookup(type, config, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[9658-9725]:ExpressionStatement[9658-9725]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9738-10896]:IfStatement[9738-10896]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9755-10896]:Block[9755-10896]"
    }, {
      "left" : "ser = findSerializerByPrimaryType(prov, type, beanDesc, staticTyping);",
      "right" : "ser = findSerializerByPrimaryType(prov, type, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[9773-9843]:ExpressionStatement[9773-9843]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[9860-10882]:IfStatement[9860-10882]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9877-10882]:Block[9877-10882]"
    }, {
      "left" : "ser = findBeanSerializer(prov, type, beanDesc);",
      "right" : "ser = findBeanSerializer(prov, type, beanDesc);",
      "info" : "ExpressionStatement[10146-10193]:ExpressionStatement[10146-10193]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[10328-10864]:IfStatement[10328-10864]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10345-10864]:Block[10345-10864]"
    }, {
      "left" : "ser = findSerializerByAddonType(config, type, beanDesc, staticTyping);",
      "right" : "ser = findSerializerByAddonType(config, type, beanDesc, staticTyping);",
      "info" : "ExpressionStatement[10371-10441]:ExpressionStatement[10371-10441]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[10708-10842]:IfStatement[10708-10842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10725-10842]:Block[10725-10842]"
    }, {
      "left" : "ser = prov.getUnknownTypeSerializer(beanDesc.getBeanClass());",
      "right" : "ser = prov.getUnknownTypeSerializer(beanDesc.getBeanClass());",
      "info" : "ExpressionStatement[10755-10816]:ExpressionStatement[10755-10816]"
    }, {
      "left" : "if (ser != null)",
      "right" : "if (ser != null)",
      "info" : "IfStatement[10915-11245]:IfStatement[10915-11245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10932-11245]:Block[10932-11245]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[10996-11235]:IfStatement[10996-11235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11041-11235]:Block[11041-11235]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[11059-11221]:EnhancedForStatement[11059-11221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11131-11221]:Block[11131-11221]"
    }, {
      "left" : "ser = mod.modifySerializer(config, beanDesc, ser);",
      "right" : "ser = mod.modifySerializer(config, beanDesc, ser);",
      "info" : "ExpressionStatement[11153-11203]:ExpressionStatement[11153-11203]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[11254-11265]:ReturnStatement[11254-11265]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11654-11660]:Modifier[11654-11660]"
    }, {
      "left" : "JsonSerializer<Object>",
      "right" : "JsonSerializer<Object>",
      "info" : "ParameterizedType[11661-11683]:ParameterizedType[11661-11683]"
    }, {
      "left" : "findBeanSerializer",
      "right" : "findBeanSerializer",
      "info" : "SimpleName[11684-11702]:SimpleName[11684-11702]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[11703-11726]:SingleVariableDeclaration[11703-11726]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[11728-11741]:SingleVariableDeclaration[11728-11741]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[11743-11767]:SingleVariableDeclaration[11743-11767]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[11784-11804]:SimpleType[11784-11804]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11809-12205]:Block[11809-12205]"
    }, {
      "left" : "if (!isPotentialBeanType(type.getRawClass()))",
      "right" : "if (!isPotentialBeanType(type.getRawClass()))",
      "info" : "IfStatement[11886-12143]:IfStatement[11886-12143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11932-12143]:Block[11932-12143]"
    }, {
      "left" : "if (!type.isEnumType())",
      "right" : "if (!type.isEnumType())",
      "info" : "IfStatement[12065-12133]:IfStatement[12065-12133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12089-12133]:Block[12089-12133]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12107-12119]:ReturnStatement[12107-12119]"
    }, {
      "left" : "return constructBeanSerializer(prov, beanDesc);",
      "right" : "return constructBeanSerializer(prov, beanDesc);",
      "info" : "ReturnStatement[12152-12199]:ReturnStatement[12152-12199]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12640-12646]:Modifier[12640-12646]"
    }, {
      "left" : "TypeSerializer",
      "right" : "TypeSerializer",
      "info" : "SimpleType[12647-12661]:SimpleType[12647-12661]"
    }, {
      "left" : "findPropertyTypeSerializer",
      "right" : "findPropertyTypeSerializer",
      "info" : "SimpleName[12662-12688]:SimpleName[12662-12688]"
    }, {
      "left" : "JavaType baseType",
      "right" : "JavaType baseType",
      "info" : "SingleVariableDeclaration[12689-12706]:SingleVariableDeclaration[12689-12706]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[12720-12746]:SingleVariableDeclaration[12720-12746]"
    }, {
      "left" : "AnnotatedMember accessor",
      "right" : "AnnotatedMember accessor",
      "info" : "SingleVariableDeclaration[12748-12772]:SingleVariableDeclaration[12748-12772]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[12789-12809]:SimpleType[12789-12809]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12814-13368]:Block[12814-13368]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[12824-12887]:VariableDeclarationStatement[12824-12887]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findPropertyTypeResolver(config, accessor, baseType);",
      "right" : "TypeResolverBuilder<?> b = ai.findPropertyTypeResolver(config, accessor, baseType);",
      "info" : "VariableDeclarationStatement[12896-12979]:VariableDeclarationStatement[12896-12979]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[13066-13151]:IfStatement[13066-13151]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13081-13151]:Block[13081-13151]"
    }, {
      "left" : "return createTypeSerializer(config, baseType);",
      "right" : "return createTypeSerializer(config, baseType);",
      "info" : "ReturnStatement[13095-13141]:ReturnStatement[13095-13141]"
    }, {
      "left" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypes(\n                accessor, config, ai, baseType);",
      "right" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypes(\n                accessor, config, ai, baseType);",
      "info" : "VariableDeclarationStatement[13160-13296]:VariableDeclarationStatement[13160-13296]"
    }, {
      "left" : "return b.buildTypeSerializer(config, baseType, subtypes);",
      "right" : "return b.buildTypeSerializer(config, baseType, subtypes);",
      "info" : "ReturnStatement[13305-13362]:ReturnStatement[13305-13362]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13833-13839]:Modifier[13833-13839]"
    }, {
      "left" : "TypeSerializer",
      "right" : "TypeSerializer",
      "info" : "SimpleType[13840-13854]:SimpleType[13840-13854]"
    }, {
      "left" : "findPropertyContentTypeSerializer",
      "right" : "findPropertyContentTypeSerializer",
      "info" : "SimpleName[13855-13888]:SimpleName[13855-13888]"
    }, {
      "left" : "JavaType containerType",
      "right" : "JavaType containerType",
      "info" : "SingleVariableDeclaration[13889-13911]:SingleVariableDeclaration[13889-13911]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[13925-13951]:SingleVariableDeclaration[13925-13951]"
    }, {
      "left" : "AnnotatedMember accessor",
      "right" : "AnnotatedMember accessor",
      "info" : "SingleVariableDeclaration[13953-13977]:SingleVariableDeclaration[13953-13977]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[13994-14014]:SimpleType[13994-14014]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14019-14656]:Block[14019-14656]"
    }, {
      "left" : "JavaType contentType = containerType.getContentType();",
      "right" : "JavaType contentType = containerType.getContentType();",
      "info" : "VariableDeclarationStatement[14029-14083]:VariableDeclarationStatement[14029-14083]"
    }, {
      "left" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector ai = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[14092-14155]:VariableDeclarationStatement[14092-14155]"
    }, {
      "left" : "TypeResolverBuilder<?> b = ai.findPropertyContentTypeResolver(config, accessor, containerType);",
      "right" : "TypeResolverBuilder<?> b = ai.findPropertyContentTypeResolver(config, accessor, containerType);",
      "info" : "VariableDeclarationStatement[14164-14259]:VariableDeclarationStatement[14164-14259]"
    }, {
      "left" : "if (b == null)",
      "right" : "if (b == null)",
      "info" : "IfStatement[14346-14434]:IfStatement[14346-14434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14361-14434]:Block[14361-14434]"
    }, {
      "left" : "return createTypeSerializer(config, contentType);",
      "right" : "return createTypeSerializer(config, contentType);",
      "info" : "ReturnStatement[14375-14424]:ReturnStatement[14375-14424]"
    }, {
      "left" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypes(accessor,\n                config, ai, contentType);",
      "right" : "Collection<NamedType> subtypes = config.getSubtypeResolver().collectAndResolveSubtypes(accessor,\n                config, ai, contentType);",
      "info" : "VariableDeclarationStatement[14443-14581]:VariableDeclarationStatement[14443-14581]"
    }, {
      "left" : "return b.buildTypeSerializer(config, contentType, subtypes);",
      "right" : "return b.buildTypeSerializer(config, contentType, subtypes);",
      "info" : "ReturnStatement[14590-14650]:ReturnStatement[14590-14650]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[15015-15024]:Modifier[15015-15024]"
    }, {
      "left" : "constructBeanSerializer",
      "right" : "constructBeanSerializer",
      "info" : "SimpleName[15048-15071]:SimpleName[15048-15071]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15175-19622]:Block[15175-19802]"
    }, {
      "left" : "if (beanDesc.getBeanClass() == Object.class)",
      "right" : "if (beanDesc.getBeanClass() == Object.class)",
      "info" : "IfStatement[15393-15614]:IfStatement[15393-15614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15438-15614]:Block[15438-15614]"
    }, {
      "left" : "return prov.getUnknownTypeSerializer(Object.class);",
      "right" : "return prov.getUnknownTypeSerializer(Object.class);",
      "info" : "ReturnStatement[15452-15503]:ReturnStatement[15452-15503]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[15623-15675]:VariableDeclarationStatement[15623-15675]"
    }, {
      "left" : "BeanSerializerBuilder builder = constructBeanSerializerBuilder(beanDesc);",
      "right" : "BeanSerializerBuilder builder = constructBeanSerializerBuilder(beanDesc);",
      "info" : "VariableDeclarationStatement[15684-15757]:VariableDeclarationStatement[15684-15757]"
    }, {
      "left" : "builder.setConfig(config);",
      "right" : "builder.setConfig(config);",
      "info" : "ExpressionStatement[15766-15792]:ExpressionStatement[15766-15792]"
    }, {
      "left" : "List<BeanPropertyWriter> props = findBeanProperties(prov, beanDesc, builder);",
      "right" : "List<BeanPropertyWriter> props = findBeanProperties(prov, beanDesc, builder);",
      "info" : "VariableDeclarationStatement[15887-15964]:VariableDeclarationStatement[15887-15964]"
    }, {
      "left" : "if (props == null)",
      "right" : "if (props == null)",
      "info" : "IfStatement[15973-16060]:IfStatement[15973-16060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15992-16060]:Block[15992-16060]"
    }, {
      "left" : "props = new ArrayList<BeanPropertyWriter>();",
      "right" : "props = new ArrayList<BeanPropertyWriter>();",
      "info" : "ExpressionStatement[16006-16050]:ExpressionStatement[16006-16050]"
    }, {
      "left" : "prov.getAnnotationIntrospector().findAndAddVirtualProperties(config, beanDesc.getClassInfo(), props);",
      "right" : "prov.getAnnotationIntrospector().findAndAddVirtualProperties(config, beanDesc.getClassInfo(), props);",
      "info" : "ExpressionStatement[16137-16238]:ExpressionStatement[16137-16238]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[16330-16557]:IfStatement[16330-16557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16375-16557]:Block[16375-16557]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[16389-16547]:EnhancedForStatement[16389-16547]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16461-16547]:Block[16461-16547]"
    }, {
      "left" : "props = mod.changeProperties(config, beanDesc, props);",
      "right" : "props = mod.changeProperties(config, beanDesc, props);",
      "info" : "ExpressionStatement[16479-16533]:ExpressionStatement[16479-16533]"
    }, {
      "left" : "props = filterBeanProperties(config, beanDesc, props);",
      "right" : "props = filterBeanProperties(config, beanDesc, props);",
      "info" : "ExpressionStatement[16606-16660]:ExpressionStatement[16606-16660]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[16747-16973]:IfStatement[16747-16973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16792-16973]:Block[16792-16973]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[16806-16963]:EnhancedForStatement[16806-16963]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16878-16963]:Block[16878-16963]"
    }, {
      "left" : "props = mod.orderProperties(config, beanDesc, props);",
      "right" : "props = mod.orderProperties(config, beanDesc, props);",
      "info" : "ExpressionStatement[16896-16949]:ExpressionStatement[16896-16949]"
    }, {
      "left" : "builder.setObjectIdWriter(constructObjectIdHandler(prov, beanDesc, props));",
      "right" : "builder.setObjectIdWriter(constructObjectIdHandler(prov, beanDesc, props));",
      "info" : "ExpressionStatement[17186-17261]:ExpressionStatement[17186-17261]"
    }, {
      "left" : "builder.setProperties(props);",
      "right" : "builder.setProperties(props);",
      "info" : "ExpressionStatement[17279-17308]:ExpressionStatement[17279-17308]"
    }, {
      "left" : "builder.setFilterId(findFilterId(config, beanDesc));",
      "right" : "builder.setFilterId(findFilterId(config, beanDesc));",
      "info" : "ExpressionStatement[17317-17369]:ExpressionStatement[17317-17369]"
    }, {
      "left" : "AnnotatedMember anyGetter = beanDesc.findAnyGetter();",
      "right" : "AnnotatedMember anyGetter = beanDesc.findAnyGetter();",
      "info" : "VariableDeclarationStatement[17387-17440]:VariableDeclarationStatement[17387-17440]"
    }, {
      "left" : "if (anyGetter != null)",
      "right" : "if (anyGetter != null)",
      "info" : "IfStatement[17449-18686]:IfStatement[17449-18866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17472-18686]:Block[17472-18866]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[17486-17581]:IfStatement[17486-17581]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17527-17581]:Block[17527-17581]"
    }, {
      "left" : "anyGetter.fixAccess();",
      "right" : "anyGetter.fixAccess();",
      "info" : "ExpressionStatement[17545-17567]:ExpressionStatement[17545-17567]"
    }, {
      "left" : "JavaType type = anyGetter.getType(beanDesc.bindingsForBeanType());",
      "right" : "JavaType type = anyGetter.getType(beanDesc.bindingsForBeanType());",
      "info" : "VariableDeclarationStatement[17594-17660]:VariableDeclarationStatement[17594-17660]"
    }, {
      "left" : "boolean staticTyping = config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "right" : "boolean staticTyping = config.isEnabled(MapperFeature.USE_STATIC_TYPING);",
      "info" : "VariableDeclarationStatement[17745-17818]:VariableDeclarationStatement[17745-17818]"
    }, {
      "left" : "JavaType valueType = type.getContentType();",
      "right" : "JavaType valueType = type.getContentType();",
      "info" : "VariableDeclarationStatement[17831-17874]:VariableDeclarationStatement[17831-17874]"
    }, {
      "left" : "TypeSerializer typeSer = createTypeSerializer(config, valueType);",
      "right" : "TypeSerializer typeSer = createTypeSerializer(config, valueType);",
      "info" : "VariableDeclarationStatement[17887-17952]:VariableDeclarationStatement[17887-17952]"
    }, {
      "left" : "anySer",
      "right" : "anySer",
      "info" : "SimpleName[18132-18138]:SimpleName[18316-18322]"
    }, {
      "left" : "MapSerializer.construct(null, type, staticTyping, typeSer, null, null, null)",
      "right" : "MapSerializer.construct(/* ignored props*/ null, type, staticTyping,\n                        typeSer, null, null, /*filterId*/ null)",
      "info" : "MethodInvocation[18141-18217]:MethodInvocation[18325-18457]"
    }, {
      "left" : "PropertyName name = new PropertyName(anyGetter.getName());",
      "right" : "PropertyName name = new PropertyName(anyGetter.getName());",
      "info" : "VariableDeclarationStatement[18357-18415]:VariableDeclarationStatement[18537-18595]"
    }, {
      "left" : "BeanProperty.Std anyProp = new BeanProperty.Std(name, valueType, null,\n                    beanDesc.getClassAnnotations(), anyGetter, PropertyMetadata.STD_OPTIONAL);",
      "right" : "BeanProperty.Std anyProp = new BeanProperty.Std(name, valueType, null,\n                    beanDesc.getClassAnnotations(), anyGetter, PropertyMetadata.STD_OPTIONAL);",
      "info" : "VariableDeclarationStatement[18428-18593]:VariableDeclarationStatement[18608-18773]"
    }, {
      "left" : "builder.setAnyGetter(new AnyGetterWriter(anyProp, anyGetter, anySer));",
      "right" : "builder.setAnyGetter(new AnyGetterWriter(anyProp, anyGetter, anySer));",
      "info" : "ExpressionStatement[18606-18676]:ExpressionStatement[18786-18856]"
    }, {
      "left" : "processViews(config, builder);",
      "right" : "processViews(config, builder);",
      "info" : "ExpressionStatement[18753-18783]:ExpressionStatement[18933-18963]"
    }, {
      "left" : "if (_factoryConfig.hasSerializerModifiers())",
      "right" : "if (_factoryConfig.hasSerializerModifiers())",
      "info" : "IfStatement[18869-19097]:IfStatement[19049-19277]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18914-19097]:Block[19094-19277]"
    }, {
      "left" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "right" : "for (BeanSerializerModifier mod : _factoryConfig.serializerModifiers())",
      "info" : "EnhancedForStatement[18928-19087]:EnhancedForStatement[19108-19267]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19000-19087]:Block[19180-19267]"
    }, {
      "left" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "right" : "builder = mod.updateBuilder(config, beanDesc, builder);",
      "info" : "ExpressionStatement[19018-19073]:ExpressionStatement[19198-19253]"
    }, {
      "left" : "JsonSerializer<Object> ser = (JsonSerializer<Object>) builder.build();",
      "right" : "JsonSerializer<Object> ser = (JsonSerializer<Object>) builder.build();",
      "info" : "VariableDeclarationStatement[19115-19185]:VariableDeclarationStatement[19295-19365]"
    }, {
      "left" : "if (ser == null)",
      "right" : "if (ser == null)",
      "info" : "IfStatement[19203-19596]:IfStatement[19383-19776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19220-19596]:Block[19400-19776]"
    }, {
      "left" : "if (beanDesc.hasKnownClassAnnotations())",
      "right" : "if (beanDesc.hasKnownClassAnnotations())",
      "info" : "IfStatement[19484-19586]:IfStatement[19664-19766]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19525-19586]:Block[19705-19766]"
    }, {
      "left" : "return builder.createDummy();",
      "right" : "return builder.createDummy();",
      "info" : "ReturnStatement[19543-19572]:ReturnStatement[19723-19752]"
    }, {
      "left" : "return ser;",
      "right" : "return ser;",
      "info" : "ReturnStatement[19605-19616]:ReturnStatement[19785-19796]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19628-19637]:Modifier[19808-19817]"
    }, {
      "left" : "ObjectIdWriter",
      "right" : "ObjectIdWriter",
      "info" : "SimpleType[19638-19652]:SimpleType[19818-19832]"
    }, {
      "left" : "constructObjectIdHandler",
      "right" : "constructObjectIdHandler",
      "info" : "SimpleName[19653-19677]:SimpleName[19833-19857]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[19678-19701]:SingleVariableDeclaration[19858-19881]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[19715-19739]:SingleVariableDeclaration[19895-19919]"
    }, {
      "left" : "List<BeanPropertyWriter> props",
      "right" : "List<BeanPropertyWriter> props",
      "info" : "SingleVariableDeclaration[19741-19771]:SingleVariableDeclaration[19921-19951]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[19788-19808]:SimpleType[19968-19988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19813-22038]:Block[19993-22218]"
    }, {
      "left" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "right" : "ObjectIdInfo objectIdInfo = beanDesc.getObjectIdInfo();",
      "info" : "VariableDeclarationStatement[19823-19878]:VariableDeclarationStatement[20003-20058]"
    }, {
      "left" : "if (objectIdInfo == null)",
      "right" : "if (objectIdInfo == null)",
      "info" : "IfStatement[19887-19949]:IfStatement[20067-20129]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19913-19949]:Block[20093-20129]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[19927-19939]:ReturnStatement[20107-20119]"
    }, {
      "left" : "ObjectIdGenerator<?> gen;",
      "right" : "ObjectIdGenerator<?> gen;",
      "info" : "VariableDeclarationStatement[19958-19983]:VariableDeclarationStatement[20138-20163]"
    }, {
      "left" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "right" : "Class<?> implClass = objectIdInfo.getGeneratorType();",
      "info" : "VariableDeclarationStatement[19992-20045]:VariableDeclarationStatement[20172-20225]"
    }, {
      "left" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "right" : "if (implClass == ObjectIdGenerators.PropertyGenerator.class)",
      "info" : "IfStatement[20126-21529]:IfStatement[20306-21709]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20187-21529]:Block[20367-21709]"
    }, {
      "left" : "String propName = objectIdInfo.getPropertyName().getSimpleName();",
      "right" : "String propName = objectIdInfo.getPropertyName().getSimpleName();",
      "info" : "VariableDeclarationStatement[20239-20304]:VariableDeclarationStatement[20419-20484]"
    }, {
      "left" : "BeanPropertyWriter idProp = null;",
      "right" : "BeanPropertyWriter idProp = null;",
      "info" : "VariableDeclarationStatement[20317-20350]:VariableDeclarationStatement[20497-20530]"
    }, {
      "left" : "for (int i = 0, len = props.size() ;; ++i)",
      "right" : "for (int i = 0, len = props.size() ;; ++i)",
      "info" : "ForStatement[20364-21175]:ForStatement[20544-21355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20407-21175]:Block[20587-21355]"
    }, {
      "left" : "if (i == len)",
      "right" : "if (i == len)",
      "info" : "IfStatement[20425-20665]:IfStatement[20605-20845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20439-20665]:Block[20619-20845]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"+beanDesc.getBeanClass().getName()\n                            +\": can not find property with name '\"+propName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Invalid Object Id definition for \"+beanDesc.getBeanClass().getName()\n                            +\": can not find property with name '\"+propName+\"'\");",
      "info" : "ThrowStatement[20461-20647]:ThrowStatement[20641-20827]"
    }, {
      "left" : "BeanPropertyWriter prop = props.get(i);",
      "right" : "BeanPropertyWriter prop = props.get(i);",
      "info" : "VariableDeclarationStatement[20682-20721]:VariableDeclarationStatement[20862-20901]"
    }, {
      "left" : "if (propName.equals(prop.getName()))",
      "right" : "if (propName.equals(prop.getName()))",
      "info" : "IfStatement[20738-21161]:IfStatement[20918-21341]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20775-21161]:Block[20955-21341]"
    }, {
      "left" : "idProp = prop;",
      "right" : "idProp = prop;",
      "info" : "ExpressionStatement[20797-20811]:ExpressionStatement[20977-20991]"
    }, {
      "left" : "if (i > 0)",
      "right" : "if (i > 0)",
      "info" : "IfStatement[20995-21116]:IfStatement[21175-21296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21006-21116]:Block[21186-21296]"
    }, {
      "left" : "props.remove(i);",
      "right" : "props.remove(i);",
      "info" : "ExpressionStatement[21032-21048]:ExpressionStatement[21212-21228]"
    }, {
      "left" : "props.add(0, idProp);",
      "right" : "props.add(0, idProp);",
      "info" : "ExpressionStatement[21073-21094]:ExpressionStatement[21253-21274]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[21137-21143]:BreakStatement[21317-21323]"
    }, {
      "left" : "JavaType idType = idProp.getType();",
      "right" : "JavaType idType = idProp.getType();",
      "info" : "VariableDeclarationStatement[21188-21223]:VariableDeclarationStatement[21368-21403]"
    }, {
      "left" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo, idProp);",
      "right" : "gen = new PropertyBasedObjectIdGenerator(objectIdInfo, idProp);",
      "info" : "ExpressionStatement[21236-21299]:ExpressionStatement[21416-21479]"
    }, {
      "left" : "return ObjectIdWriter.construct(idType, (PropertyName) null, gen, objectIdInfo.getAlwaysAsId());",
      "right" : "return ObjectIdWriter.construct(idType, (PropertyName) null, gen, objectIdInfo.getAlwaysAsId());",
      "info" : "ReturnStatement[21410-21506]:ReturnStatement[21590-21686]"
    }, {
      "left" : "JavaType type = prov.constructType(implClass);",
      "right" : "JavaType type = prov.constructType(implClass);",
      "info" : "VariableDeclarationStatement[21574-21620]:VariableDeclarationStatement[21754-21800]"
    }, {
      "left" : "JavaType idType = prov.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "right" : "JavaType idType = prov.getTypeFactory().findTypeParameters(type, ObjectIdGenerator.class)[0];",
      "info" : "VariableDeclarationStatement[21722-21815]:VariableDeclarationStatement[21902-21995]"
    }, {
      "left" : "gen = prov.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "right" : "gen = prov.objectIdGeneratorInstance(beanDesc.getClassInfo(), objectIdInfo);",
      "info" : "ExpressionStatement[21824-21900]:ExpressionStatement[22004-22080]"
    }, {
      "left" : "return ObjectIdWriter.construct(idType, objectIdInfo.getPropertyName(), gen,\n                objectIdInfo.getAlwaysAsId());",
      "right" : "return ObjectIdWriter.construct(idType, objectIdInfo.getPropertyName(), gen,\n                objectIdInfo.getAlwaysAsId());",
      "info" : "ReturnStatement[21909-22032]:ReturnStatement[22089-22212]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[22265-22274]:Modifier[22445-22454]"
    }, {
      "left" : "BeanPropertyWriter",
      "right" : "BeanPropertyWriter",
      "info" : "SimpleType[22275-22293]:SimpleType[22455-22473]"
    }, {
      "left" : "constructFilteredBeanWriter",
      "right" : "constructFilteredBeanWriter",
      "info" : "SimpleName[22294-22321]:SimpleName[22474-22501]"
    }, {
      "left" : "BeanPropertyWriter writer",
      "right" : "BeanPropertyWriter writer",
      "info" : "SingleVariableDeclaration[22322-22347]:SingleVariableDeclaration[22502-22527]"
    }, {
      "left" : "Class<?>[] inViews",
      "right" : "Class<?>[] inViews",
      "info" : "SingleVariableDeclaration[22361-22379]:SingleVariableDeclaration[22541-22559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22385-22471]:Block[22565-22651]"
    }, {
      "left" : "return FilteredBeanPropertyWriter.constructViewBased(writer, inViews);",
      "right" : "return FilteredBeanPropertyWriter.constructViewBased(writer, inViews);",
      "info" : "ReturnStatement[22395-22465]:ReturnStatement[22575-22645]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[22481-22490]:Modifier[22661-22670]"
    }, {
      "left" : "PropertyBuilder",
      "right" : "PropertyBuilder",
      "info" : "SimpleType[22491-22506]:SimpleType[22671-22686]"
    }, {
      "left" : "constructPropertyBuilder",
      "right" : "constructPropertyBuilder",
      "info" : "SimpleName[22507-22531]:SimpleName[22687-22711]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[22532-22558]:SingleVariableDeclaration[22712-22738]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[22572-22596]:SingleVariableDeclaration[22752-22776]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22602-22663]:Block[22782-22843]"
    }, {
      "left" : "return new PropertyBuilder(config, beanDesc);",
      "right" : "return new PropertyBuilder(config, beanDesc);",
      "info" : "ReturnStatement[22612-22657]:ReturnStatement[22792-22837]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[22669-22678]:Modifier[22849-22858]"
    }, {
      "left" : "BeanSerializerBuilder",
      "right" : "BeanSerializerBuilder",
      "info" : "SimpleType[22679-22700]:SimpleType[22859-22880]"
    }, {
      "left" : "constructBeanSerializerBuilder",
      "right" : "constructBeanSerializerBuilder",
      "info" : "SimpleName[22701-22731]:SimpleName[22881-22911]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[22732-22756]:SingleVariableDeclaration[22912-22936]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22758-22817]:Block[22938-22997]"
    }, {
      "left" : "return new BeanSerializerBuilder(beanDesc);",
      "right" : "return new BeanSerializerBuilder(beanDesc);",
      "info" : "ReturnStatement[22768-22811]:ReturnStatement[22948-22991]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[23361-23370]:Modifier[23541-23550]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[23371-23378]:PrimitiveType[23551-23558]"
    }, {
      "left" : "isPotentialBeanType",
      "right" : "isPotentialBeanType",
      "info" : "SimpleName[23379-23398]:SimpleName[23559-23578]"
    }, {
      "left" : "Class<?> type",
      "right" : "Class<?> type",
      "info" : "SingleVariableDeclaration[23399-23412]:SingleVariableDeclaration[23579-23592]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23418-23514]:Block[23598-23694]"
    }, {
      "left" : "return (ClassUtil.canBeABeanType(type) == null) && !ClassUtil.isProxyType(type);",
      "right" : "return (ClassUtil.canBeABeanType(type) == null) && !ClassUtil.isProxyType(type);",
      "info" : "ReturnStatement[23428-23508]:ReturnStatement[23608-23688]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[23666-23675]:Modifier[23846-23855]"
    }, {
      "left" : "List<BeanPropertyWriter>",
      "right" : "List<BeanPropertyWriter>",
      "info" : "ParameterizedType[23676-23700]:ParameterizedType[23856-23880]"
    }, {
      "left" : "findBeanProperties",
      "right" : "findBeanProperties",
      "info" : "SimpleName[23701-23719]:SimpleName[23881-23899]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[23720-23743]:SingleVariableDeclaration[23900-23923]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[23757-23781]:SingleVariableDeclaration[23937-23961]"
    }, {
      "left" : "BeanSerializerBuilder builder",
      "right" : "BeanSerializerBuilder builder",
      "info" : "SingleVariableDeclaration[23783-23812]:SingleVariableDeclaration[23963-23992]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[23829-23849]:SimpleType[24009-24029]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23854-26100]:Block[24034-26280]"
    }, {
      "left" : "List<BeanPropertyDefinition> properties = beanDesc.findProperties();",
      "right" : "List<BeanPropertyDefinition> properties = beanDesc.findProperties();",
      "info" : "VariableDeclarationStatement[23864-23932]:VariableDeclarationStatement[24044-24112]"
    }, {
      "left" : "final SerializationConfig config = prov.getConfig();",
      "right" : "final SerializationConfig config = prov.getConfig();",
      "info" : "VariableDeclarationStatement[23941-23993]:VariableDeclarationStatement[24121-24173]"
    }, {
      "left" : "removeIgnorableTypes(config, beanDesc, properties);",
      "right" : "removeIgnorableTypes(config, beanDesc, properties);",
      "info" : "ExpressionStatement[24052-24103]:ExpressionStatement[24232-24283]"
    }, {
      "left" : "if (config.isEnabled(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS))",
      "right" : "if (config.isEnabled(MapperFeature.REQUIRE_SETTERS_FOR_GETTERS))",
      "info" : "IfStatement[24185-24328]:IfStatement[24365-24508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24250-24328]:Block[24430-24508]"
    }, {
      "left" : "removeSetterlessGetters(config, beanDesc, properties);",
      "right" : "removeSetterlessGetters(config, beanDesc, properties);",
      "info" : "ExpressionStatement[24264-24318]:ExpressionStatement[24444-24498]"
    }, {
      "left" : "if (properties.isEmpty())",
      "right" : "if (properties.isEmpty())",
      "info" : "IfStatement[24423-24485]:IfStatement[24603-24665]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24449-24485]:Block[24629-24665]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[24463-24475]:ReturnStatement[24643-24655]"
    }, {
      "left" : "boolean staticTyping = usesStaticTyping(config, beanDesc, null);",
      "right" : "boolean staticTyping = usesStaticTyping(config, beanDesc, null);",
      "info" : "VariableDeclarationStatement[24602-24666]:VariableDeclarationStatement[24782-24846]"
    }, {
      "left" : "PropertyBuilder pb = constructPropertyBuilder(config, beanDesc);",
      "right" : "PropertyBuilder pb = constructPropertyBuilder(config, beanDesc);",
      "info" : "VariableDeclarationStatement[24675-24739]:VariableDeclarationStatement[24855-24919]"
    }, {
      "left" : "ArrayList<BeanPropertyWriter> result = new ArrayList<BeanPropertyWriter>(properties.size());",
      "right" : "ArrayList<BeanPropertyWriter> result = new ArrayList<BeanPropertyWriter>(properties.size());",
      "info" : "VariableDeclarationStatement[24757-24849]:VariableDeclarationStatement[24937-25029]"
    }, {
      "left" : "TypeBindings typeBind = beanDesc.bindingsForBeanType();",
      "right" : "TypeBindings typeBind = beanDesc.bindingsForBeanType();",
      "info" : "VariableDeclarationStatement[24858-24913]:VariableDeclarationStatement[25038-25093]"
    }, {
      "left" : "for (BeanPropertyDefinition property : properties)",
      "right" : "for (BeanPropertyDefinition property : properties)",
      "info" : "EnhancedForStatement[24922-26071]:EnhancedForStatement[25102-26251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24973-26071]:Block[25153-26251]"
    }, {
      "left" : "final AnnotatedMember accessor = property.getAccessor();",
      "right" : "final AnnotatedMember accessor = property.getAccessor();",
      "info" : "VariableDeclarationStatement[24987-25043]:VariableDeclarationStatement[25167-25223]"
    }, {
      "left" : "if (property.isTypeId())",
      "right" : "if (property.isTypeId())",
      "info" : "IfStatement[25122-25473]:IfStatement[25302-25653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25147-25473]:Block[25327-25653]"
    }, {
      "left" : "if (accessor != null)",
      "right" : "if (accessor != null)",
      "info" : "IfStatement[25165-25433]:IfStatement[25345-25613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25187-25433]:Block[25367-25613]"
    }, {
      "left" : "if (config.canOverrideAccessModifiers())",
      "right" : "if (config.canOverrideAccessModifiers())",
      "info" : "IfStatement[25256-25366]:IfStatement[25436-25546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25297-25366]:Block[25477-25546]"
    }, {
      "left" : "accessor.fixAccess();",
      "right" : "accessor.fixAccess();",
      "info" : "ExpressionStatement[25323-25344]:ExpressionStatement[25503-25524]"
    }, {
      "left" : "builder.setTypeId(accessor);",
      "right" : "builder.setTypeId(accessor);",
      "info" : "ExpressionStatement[25387-25415]:ExpressionStatement[25567-25595]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[25450-25459]:ContinueStatement[25630-25639]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty refType = property.findReferenceType();",
      "right" : "AnnotationIntrospector.ReferenceProperty refType = property.findReferenceType();",
      "info" : "VariableDeclarationStatement[25552-25632]:VariableDeclarationStatement[25732-25812]"
    }, {
      "left" : "if (refType != null && refType.isBackReference())",
      "right" : "if (refType != null && refType.isBackReference())",
      "info" : "IfStatement[25645-25736]:IfStatement[25825-25916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25695-25736]:Block[25875-25916]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[25713-25722]:ContinueStatement[25893-25902]"
    }, {
      "left" : "if (accessor instanceof AnnotatedMethod)",
      "right" : "if (accessor instanceof AnnotatedMethod)",
      "info" : "IfStatement[25749-26061]:IfStatement[25929-26241]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25790-25923]:Block[25970-26103]"
    }, {
      "left" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedMethod) accessor));",
      "right" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedMethod) accessor));",
      "info" : "ExpressionStatement[25808-25909]:ExpressionStatement[25988-26089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25929-26061]:Block[26109-26241]"
    }, {
      "left" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedField) accessor));",
      "right" : "result.add(_constructWriter(prov, property, typeBind, pb, staticTyping, (AnnotatedField) accessor));",
      "info" : "ExpressionStatement[25947-26047]:ExpressionStatement[26127-26227]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[26080-26094]:ReturnStatement[26260-26274]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[26464-26473]:Modifier[26644-26653]"
    }, {
      "left" : "List<BeanPropertyWriter>",
      "right" : "List<BeanPropertyWriter>",
      "info" : "ParameterizedType[26474-26498]:ParameterizedType[26654-26678]"
    }, {
      "left" : "filterBeanProperties",
      "right" : "filterBeanProperties",
      "info" : "SimpleName[26499-26519]:SimpleName[26679-26699]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[26520-26546]:SingleVariableDeclaration[26700-26726]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[26560-26584]:SingleVariableDeclaration[26740-26764]"
    }, {
      "left" : "List<BeanPropertyWriter> props",
      "right" : "List<BeanPropertyWriter> props",
      "info" : "SingleVariableDeclaration[26586-26616]:SingleVariableDeclaration[26766-26796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26622-27205]:Block[26802-27385]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[26632-26697]:VariableDeclarationStatement[26812-26877]"
    }, {
      "left" : "AnnotatedClass ac = beanDesc.getClassInfo();",
      "right" : "AnnotatedClass ac = beanDesc.getClassInfo();",
      "info" : "VariableDeclarationStatement[26706-26750]:VariableDeclarationStatement[26886-26930]"
    }, {
      "left" : "String[] ignored = intr.findPropertiesToIgnore(ac);",
      "right" : "String[] ignored = intr.findPropertiesToIgnore(ac);",
      "info" : "VariableDeclarationStatement[26759-26810]:VariableDeclarationStatement[26939-26990]"
    }, {
      "left" : "if (ignored != null && ignored.length > 0)",
      "right" : "if (ignored != null && ignored.length > 0)",
      "info" : "IfStatement[26819-27177]:IfStatement[26999-27357]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[26862-27177]:Block[27042-27357]"
    }, {
      "left" : "HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(ignored);",
      "right" : "HashSet<String> ignoredSet = ArrayBuilders.arrayToSet(ignored);",
      "info" : "VariableDeclarationStatement[26876-26939]:VariableDeclarationStatement[27056-27119]"
    }, {
      "left" : "Iterator<BeanPropertyWriter> it = props.iterator();",
      "right" : "Iterator<BeanPropertyWriter> it = props.iterator();",
      "info" : "VariableDeclarationStatement[26952-27003]:VariableDeclarationStatement[27132-27183]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[27016-27167]:WhileStatement[27196-27347]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27037-27167]:Block[27217-27347]"
    }, {
      "left" : "if (ignoredSet.contains(it.next().getName()))",
      "right" : "if (ignoredSet.contains(it.next().getName()))",
      "info" : "IfStatement[27055-27153]:IfStatement[27235-27333]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27101-27153]:Block[27281-27333]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[27123-27135]:ExpressionStatement[27303-27315]"
    }, {
      "left" : "return props;",
      "right" : "return props;",
      "info" : "ReturnStatement[27186-27199]:ReturnStatement[27366-27379]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[27608-27617]:Modifier[27788-27797]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[27618-27622]:PrimitiveType[27798-27802]"
    }, {
      "left" : "processViews",
      "right" : "processViews",
      "info" : "SimpleName[27623-27635]:SimpleName[27803-27815]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[27636-27662]:SingleVariableDeclaration[27816-27842]"
    }, {
      "left" : "BeanSerializerBuilder builder",
      "right" : "BeanSerializerBuilder builder",
      "info" : "SingleVariableDeclaration[27664-27693]:SingleVariableDeclaration[27844-27873]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27699-28909]:Block[27879-29089]"
    }, {
      "left" : "List<BeanPropertyWriter> props = builder.getProperties();",
      "right" : "List<BeanPropertyWriter> props = builder.getProperties();",
      "info" : "VariableDeclarationStatement[27811-27868]:VariableDeclarationStatement[27991-28048]"
    }, {
      "left" : "boolean includeByDefault = config.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION);",
      "right" : "boolean includeByDefault = config.isEnabled(MapperFeature.DEFAULT_VIEW_INCLUSION);",
      "info" : "VariableDeclarationStatement[27877-27959]:VariableDeclarationStatement[28057-28139]"
    }, {
      "left" : "final int propCount = props.size();",
      "right" : "final int propCount = props.size();",
      "info" : "VariableDeclarationStatement[27968-28003]:VariableDeclarationStatement[28148-28183]"
    }, {
      "left" : "int viewsFound = 0;",
      "right" : "int viewsFound = 0;",
      "info" : "VariableDeclarationStatement[28012-28031]:VariableDeclarationStatement[28192-28211]"
    }, {
      "left" : "BeanPropertyWriter[] filtered = new BeanPropertyWriter[propCount];",
      "right" : "BeanPropertyWriter[] filtered = new BeanPropertyWriter[propCount];",
      "info" : "VariableDeclarationStatement[28040-28106]:VariableDeclarationStatement[28220-28286]"
    }, {
      "left" : "for (int i = 0; i < propCount; ++i)",
      "right" : "for (int i = 0; i < propCount; ++i)",
      "info" : "ForStatement[28205-28664]:ForStatement[28385-28844]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28241-28664]:Block[28421-28844]"
    }, {
      "left" : "BeanPropertyWriter bpw = props.get(i);",
      "right" : "BeanPropertyWriter bpw = props.get(i);",
      "info" : "VariableDeclarationStatement[28255-28293]:VariableDeclarationStatement[28435-28473]"
    }, {
      "left" : "Class<?>[] views = bpw.getViews();",
      "right" : "Class<?>[] views = bpw.getViews();",
      "info" : "VariableDeclarationStatement[28306-28340]:VariableDeclarationStatement[28486-28520]"
    }, {
      "left" : "if (views == null)",
      "right" : "if (views == null)",
      "info" : "IfStatement[28353-28654]:IfStatement[28533-28834]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28372-28532]:Block[28552-28712]"
    }, {
      "left" : "if (includeByDefault)",
      "right" : "if (includeByDefault)",
      "info" : "IfStatement[28438-28518]:IfStatement[28618-28698]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28460-28518]:Block[28640-28698]"
    }, {
      "left" : "filtered[i] = bpw;",
      "right" : "filtered[i] = bpw;",
      "info" : "ExpressionStatement[28482-28500]:ExpressionStatement[28662-28680]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28538-28654]:Block[28718-28834]"
    }, {
      "left" : "++viewsFound;",
      "right" : "++viewsFound;",
      "info" : "ExpressionStatement[28556-28569]:ExpressionStatement[28736-28749]"
    }, {
      "left" : "filtered[i] = constructFilteredBeanWriter(bpw, views);",
      "right" : "filtered[i] = constructFilteredBeanWriter(bpw, views);",
      "info" : "ExpressionStatement[28586-28640]:ExpressionStatement[28766-28820]"
    }, {
      "left" : "if (includeByDefault && viewsFound == 0)",
      "right" : "if (includeByDefault && viewsFound == 0)",
      "info" : "IfStatement[28782-28854]:IfStatement[28962-29034]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28823-28854]:Block[29003-29034]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[28837-28844]:ReturnStatement[29017-29024]"
    }, {
      "left" : "builder.setFilteredProperties(filtered);",
      "right" : "builder.setFilteredProperties(filtered);",
      "info" : "ExpressionStatement[28863-28903]:ExpressionStatement[29043-29083]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29172-29181]:Modifier[29352-29361]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29182-29186]:PrimitiveType[29362-29366]"
    }, {
      "left" : "removeIgnorableTypes",
      "right" : "removeIgnorableTypes",
      "info" : "SimpleName[29187-29207]:SimpleName[29367-29387]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[29208-29234]:SingleVariableDeclaration[29388-29414]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[29236-29260]:SingleVariableDeclaration[29416-29440]"
    }, {
      "left" : "List<BeanPropertyDefinition> properties",
      "right" : "List<BeanPropertyDefinition> properties",
      "info" : "SingleVariableDeclaration[29274-29313]:SingleVariableDeclaration[29454-29493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29319-30487]:Block[29499-30667]"
    }, {
      "left" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "right" : "AnnotationIntrospector intr = config.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[29329-29394]:VariableDeclarationStatement[29509-29574]"
    }, {
      "left" : "HashMap<Class<?>,Boolean> ignores = new HashMap<Class<?>,Boolean>();",
      "right" : "HashMap<Class<?>,Boolean> ignores = new HashMap<Class<?>,Boolean>();",
      "info" : "VariableDeclarationStatement[29403-29471]:VariableDeclarationStatement[29583-29651]"
    }, {
      "left" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "right" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "info" : "VariableDeclarationStatement[29480-29540]:VariableDeclarationStatement[29660-29720]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[29549-30481]:WhileStatement[29729-30661]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29570-30481]:Block[29750-30661]"
    }, {
      "left" : "BeanPropertyDefinition property = it.next();",
      "right" : "BeanPropertyDefinition property = it.next();",
      "info" : "VariableDeclarationStatement[29584-29628]:VariableDeclarationStatement[29764-29808]"
    }, {
      "left" : "AnnotatedMember accessor = property.getAccessor();",
      "right" : "AnnotatedMember accessor = property.getAccessor();",
      "info" : "VariableDeclarationStatement[29641-29691]:VariableDeclarationStatement[29821-29871]"
    }, {
      "left" : "if (accessor == null)",
      "right" : "if (accessor == null)",
      "info" : "IfStatement[29704-29796]:IfStatement[29884-29976]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29726-29796]:Block[29906-29976]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[29744-29756]:ExpressionStatement[29924-29936]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[29773-29782]:ContinueStatement[29953-29962]"
    }, {
      "left" : "Class<?> type = accessor.getRawType();",
      "right" : "Class<?> type = accessor.getRawType();",
      "info" : "VariableDeclarationStatement[29809-29847]:VariableDeclarationStatement[29989-30027]"
    }, {
      "left" : "Boolean result = ignores.get(type);",
      "right" : "Boolean result = ignores.get(type);",
      "info" : "VariableDeclarationStatement[29860-29895]:VariableDeclarationStatement[30040-30075]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[29908-30325]:IfStatement[30088-30505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29928-30325]:Block[30108-30505]"
    }, {
      "left" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "right" : "BeanDescription desc = config.introspectClassAnnotations(type);",
      "info" : "VariableDeclarationStatement[29946-30009]:VariableDeclarationStatement[30126-30189]"
    }, {
      "left" : "AnnotatedClass ac = desc.getClassInfo();",
      "right" : "AnnotatedClass ac = desc.getClassInfo();",
      "info" : "VariableDeclarationStatement[30026-30066]:VariableDeclarationStatement[30206-30246]"
    }, {
      "left" : "result = intr.isIgnorableType(ac);",
      "right" : "result = intr.isIgnorableType(ac);",
      "info" : "ExpressionStatement[30083-30117]:ExpressionStatement[30263-30297]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[30185-30268]:IfStatement[30365-30448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30205-30268]:Block[30385-30448]"
    }, {
      "left" : "result = Boolean.FALSE;",
      "right" : "result = Boolean.FALSE;",
      "info" : "ExpressionStatement[30227-30250]:ExpressionStatement[30407-30430]"
    }, {
      "left" : "ignores.put(type, result);",
      "right" : "ignores.put(type, result);",
      "info" : "ExpressionStatement[30285-30311]:ExpressionStatement[30465-30491]"
    }, {
      "left" : "if (result.booleanValue())",
      "right" : "if (result.booleanValue())",
      "info" : "IfStatement[30400-30471]:IfStatement[30580-30651]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30427-30471]:Block[30607-30651]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[30445-30457]:ExpressionStatement[30625-30637]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30590-30599]:Modifier[30770-30779]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[30600-30604]:PrimitiveType[30780-30784]"
    }, {
      "left" : "removeSetterlessGetters",
      "right" : "removeSetterlessGetters",
      "info" : "SimpleName[30605-30628]:SimpleName[30785-30808]"
    }, {
      "left" : "SerializationConfig config",
      "right" : "SerializationConfig config",
      "info" : "SingleVariableDeclaration[30629-30655]:SingleVariableDeclaration[30809-30835]"
    }, {
      "left" : "BeanDescription beanDesc",
      "right" : "BeanDescription beanDesc",
      "info" : "SingleVariableDeclaration[30657-30681]:SingleVariableDeclaration[30837-30861]"
    }, {
      "left" : "List<BeanPropertyDefinition> properties",
      "right" : "List<BeanPropertyDefinition> properties",
      "info" : "SingleVariableDeclaration[30695-30734]:SingleVariableDeclaration[30875-30914]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30740-31178]:Block[30920-31358]"
    }, {
      "left" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "right" : "Iterator<BeanPropertyDefinition> it = properties.iterator();",
      "info" : "VariableDeclarationStatement[30750-30810]:VariableDeclarationStatement[30930-30990]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[30819-31172]:WhileStatement[30999-31352]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30840-31172]:Block[31020-31352]"
    }, {
      "left" : "BeanPropertyDefinition property = it.next();",
      "right" : "BeanPropertyDefinition property = it.next();",
      "info" : "VariableDeclarationStatement[30854-30898]:VariableDeclarationStatement[31034-31078]"
    }, {
      "left" : "if (!property.couldDeserialize() && !property.isExplicitlyIncluded())",
      "right" : "if (!property.couldDeserialize() && !property.isExplicitlyIncluded())",
      "info" : "IfStatement[31048-31162]:IfStatement[31228-31342]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31118-31162]:Block[31298-31342]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[31136-31148]:ExpressionStatement[31316-31328]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[31497-31506]:Modifier[31677-31686]"
    }, {
      "left" : "BeanPropertyWriter",
      "right" : "BeanPropertyWriter",
      "info" : "SimpleType[31507-31525]:SimpleType[31687-31705]"
    }, {
      "left" : "_constructWriter",
      "right" : "_constructWriter",
      "info" : "SimpleName[31526-31542]:SimpleName[31706-31722]"
    }, {
      "left" : "SerializerProvider prov",
      "right" : "SerializerProvider prov",
      "info" : "SingleVariableDeclaration[31543-31566]:SingleVariableDeclaration[31723-31746]"
    }, {
      "left" : "BeanPropertyDefinition propDef",
      "right" : "BeanPropertyDefinition propDef",
      "info" : "SingleVariableDeclaration[31580-31610]:SingleVariableDeclaration[31760-31790]"
    }, {
      "left" : "TypeBindings typeContext",
      "right" : "TypeBindings typeContext",
      "info" : "SingleVariableDeclaration[31612-31636]:SingleVariableDeclaration[31792-31816]"
    }, {
      "left" : "PropertyBuilder pb",
      "right" : "PropertyBuilder pb",
      "info" : "SingleVariableDeclaration[31650-31668]:SingleVariableDeclaration[31830-31848]"
    }, {
      "left" : "boolean staticTyping",
      "right" : "boolean staticTyping",
      "info" : "SingleVariableDeclaration[31670-31690]:SingleVariableDeclaration[31850-31870]"
    }, {
      "left" : "AnnotatedMember accessor",
      "right" : "AnnotatedMember accessor",
      "info" : "SingleVariableDeclaration[31692-31716]:SingleVariableDeclaration[31872-31896]"
    }, {
      "left" : "JsonMappingException",
      "right" : "JsonMappingException",
      "info" : "SimpleType[31733-31753]:SimpleType[31913-31933]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31758-33636]:Block[31938-33816]"
    }, {
      "left" : "final PropertyName name = propDef.getFullName();",
      "right" : "final PropertyName name = propDef.getFullName();",
      "info" : "VariableDeclarationStatement[31768-31816]:VariableDeclarationStatement[31948-31996]"
    }, {
      "left" : "if (prov.canOverrideAccessModifiers())",
      "right" : "if (prov.canOverrideAccessModifiers())",
      "info" : "IfStatement[31825-31909]:IfStatement[32005-32089]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31864-31909]:Block[32044-32089]"
    }, {
      "left" : "accessor.fixAccess();",
      "right" : "accessor.fixAccess();",
      "info" : "ExpressionStatement[31878-31899]:ExpressionStatement[32058-32079]"
    }, {
      "left" : "JavaType type = accessor.getType(typeContext);",
      "right" : "JavaType type = accessor.getType(typeContext);",
      "info" : "VariableDeclarationStatement[31918-31964]:VariableDeclarationStatement[32098-32144]"
    }, {
      "left" : "BeanProperty.Std property = new BeanProperty.Std(name, type, propDef.getWrapperName(),\n                pb.getClassAnnotations(), accessor, propDef.getMetadata());",
      "right" : "BeanProperty.Std property = new BeanProperty.Std(name, type, propDef.getWrapperName(),\n                pb.getClassAnnotations(), accessor, propDef.getMetadata());",
      "info" : "VariableDeclarationStatement[31973-32135]:VariableDeclarationStatement[32153-32315]"
    }, {
      "left" : "JsonSerializer<?> annotatedSerializer = findSerializerFromAnnotation(prov,\n                accessor);",
      "right" : "JsonSerializer<?> annotatedSerializer = findSerializerFromAnnotation(prov,\n                accessor);",
      "info" : "VariableDeclarationStatement[32211-32312]:VariableDeclarationStatement[32391-32492]"
    }, {
      "left" : "if (annotatedSerializer instanceof ResolvableSerializer)",
      "right" : "if (annotatedSerializer instanceof ResolvableSerializer)",
      "info" : "IfStatement[32492-32632]:IfStatement[32672-32812]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32549-32632]:Block[32729-32812]"
    }, {
      "left" : "((ResolvableSerializer) annotatedSerializer).resolve(prov);",
      "right" : "((ResolvableSerializer) annotatedSerializer).resolve(prov);",
      "info" : "ExpressionStatement[32563-32622]:ExpressionStatement[32743-32802]"
    }, {
      "left" : "annotatedSerializer = prov.handlePrimaryContextualization(annotatedSerializer, property);",
      "right" : "annotatedSerializer = prov.handlePrimaryContextualization(annotatedSerializer, property);",
      "info" : "ExpressionStatement[32713-32802]:ExpressionStatement[32893-32982]"
    }, {
      "left" : "TypeSerializer contentTypeSer = null;",
      "right" : "TypeSerializer contentTypeSer = null;",
      "info" : "VariableDeclarationStatement[32904-32941]:VariableDeclarationStatement[33084-33121]"
    }, {
      "left" : "if (ClassUtil.isCollectionMapOrArray(type.getRawClass()) || type.isCollectionLikeType() || type.isMapLikeType())",
      "right" : "if (ClassUtil.isCollectionMapOrArray(type.getRawClass()) || type.isCollectionLikeType() || type.isMapLikeType())",
      "info" : "IfStatement[33042-33264]:IfStatement[33222-33444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33155-33264]:Block[33335-33444]"
    }, {
      "left" : "contentTypeSer = findPropertyContentTypeSerializer(type, prov.getConfig(), accessor);",
      "right" : "contentTypeSer = findPropertyContentTypeSerializer(type, prov.getConfig(), accessor);",
      "info" : "ExpressionStatement[33169-33254]:ExpressionStatement[33349-33434]"
    }, {
      "left" : "TypeSerializer typeSer = findPropertyTypeSerializer(type, prov.getConfig(), accessor);",
      "right" : "TypeSerializer typeSer = findPropertyTypeSerializer(type, prov.getConfig(), accessor);",
      "info" : "VariableDeclarationStatement[33360-33446]:VariableDeclarationStatement[33540-33626]"
    }, {
      "left" : "BeanPropertyWriter pbw = pb.buildWriter(prov, propDef, type, annotatedSerializer,\n                        typeSer, contentTypeSer, accessor, staticTyping);",
      "right" : "BeanPropertyWriter pbw = pb.buildWriter(prov, propDef, type, annotatedSerializer,\n                        typeSer, contentTypeSer, accessor, staticTyping);",
      "info" : "VariableDeclarationStatement[33455-33610]:VariableDeclarationStatement[33635-33790]"
    }, {
      "left" : "return pbw;",
      "right" : "return pbw;",
      "info" : "ReturnStatement[33619-33630]:ReturnStatement[33799-33810]"
    } ]
  },
  "interFileMappings" : { }
}