{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "JsonMojo",
      "right" : "JsonMojo",
      "info" : "TypeDeclaration[2809-55417]:TypeDeclaration[2809-55617]"
    }, {
      "left" : "public static final String FABRIC8_PORT_HOST_PREFIX = \"docker.port.host.\";",
      "right" : "public static final String FABRIC8_PORT_HOST_PREFIX = \"docker.port.host.\";",
      "info" : "FieldDeclaration[3105-3179]:FieldDeclaration[3105-3179]"
    }, {
      "left" : "public static final String FABRIC8_PORT_CONTAINER_PREFIX = \"docker.port.container.\";",
      "right" : "public static final String FABRIC8_PORT_CONTAINER_PREFIX = \"docker.port.container.\";",
      "info" : "FieldDeclaration[3184-3268]:FieldDeclaration[3184-3268]"
    }, {
      "left" : "public static final String FABRIC8_PORT_SERVICE = \"fabric8.service.port\";",
      "right" : "public static final String FABRIC8_PORT_SERVICE = \"fabric8.service.port\";",
      "info" : "FieldDeclaration[3273-3346]:FieldDeclaration[3273-3346]"
    }, {
      "left" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE = \"fabric8.service.containerPort\";",
      "right" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE = \"fabric8.service.containerPort\";",
      "info" : "FieldDeclaration[3351-3443]:FieldDeclaration[3351-3443]"
    }, {
      "left" : "public static final String FABRIC8_PROTOCOL_SERVICE = \"fabric8.service.protocol\";",
      "right" : "public static final String FABRIC8_PROTOCOL_SERVICE = \"fabric8.service.protocol\";",
      "info" : "FieldDeclaration[3448-3529]:FieldDeclaration[3448-3529]"
    }, {
      "left" : "public static final String FABRIC8_PORT_SERVICE_PREFIX = FABRIC8_PORT_SERVICE + \".\";",
      "right" : "public static final String FABRIC8_PORT_SERVICE_PREFIX = FABRIC8_PORT_SERVICE + \".\";",
      "info" : "FieldDeclaration[3534-3618]:FieldDeclaration[3534-3618]"
    }, {
      "left" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE_PREFIX = FABRIC8_CONTAINER_PORT_SERVICE + \".\";",
      "right" : "public static final String FABRIC8_CONTAINER_PORT_SERVICE_PREFIX = FABRIC8_CONTAINER_PORT_SERVICE + \".\";",
      "info" : "FieldDeclaration[3623-3727]:FieldDeclaration[3623-3727]"
    }, {
      "left" : "public static final String FABRIC8_PROTOCOL_SERVICE_PREFIX = FABRIC8_PROTOCOL_SERVICE + \".\";",
      "right" : "public static final String FABRIC8_PROTOCOL_SERVICE_PREFIX = FABRIC8_PROTOCOL_SERVICE + \".\";",
      "info" : "FieldDeclaration[3732-3824]:FieldDeclaration[3732-3824]"
    }, {
      "left" : "private static final String NAME = \"name\";",
      "right" : "private static final String NAME = \"name\";",
      "info" : "FieldDeclaration[3831-3873]:FieldDeclaration[3831-3873]"
    }, {
      "left" : "private static final String ATTRIBUTE_TYPE = \"attributeType\";",
      "right" : "private static final String ATTRIBUTE_TYPE = \"attributeType\";",
      "info" : "FieldDeclaration[3878-3939]:FieldDeclaration[3878-3939]"
    }, {
      "left" : "private static final String VOLUME_MOUNT_PATH = \"mountPath\";",
      "right" : "private static final String VOLUME_MOUNT_PATH = \"mountPath\";",
      "info" : "FieldDeclaration[3945-4005]:FieldDeclaration[3945-4005]"
    }, {
      "left" : "private static final String VOLUME_REGEX = \"fabric8.volume.(?<name>[^. ]*).(?<attributeType>[^. ]*)\";",
      "right" : "private static final String VOLUME_REGEX = \"fabric8.volume.(?<name>[^. ]*).(?<attributeType>[^. ]*)\";",
      "info" : "FieldDeclaration[4010-4111]:FieldDeclaration[4010-4111]"
    }, {
      "left" : "private static final Pattern VOLUME_PATTERN = Pattern.compile(VOLUME_REGEX);",
      "right" : "private static final Pattern VOLUME_PATTERN = Pattern.compile(VOLUME_REGEX);",
      "info" : "FieldDeclaration[4116-4192]:FieldDeclaration[4116-4192]"
    }, {
      "left" : "private static final String PARAM_REGEX = \"fabric8.parameter.(?<name>[^. ]*)(.)?(?<attributeType>[^ ]*)\";",
      "right" : "private static final String PARAM_REGEX = \"fabric8.parameter.(?<name>[^. ]*)(.)?(?<attributeType>[^ ]*)\";",
      "info" : "FieldDeclaration[4198-4303]:FieldDeclaration[4198-4303]"
    }, {
      "left" : "private static final Pattern PARAM_PATTERN = Pattern.compile(PARAM_REGEX);",
      "right" : "private static final Pattern PARAM_PATTERN = Pattern.compile(PARAM_REGEX);",
      "info" : "FieldDeclaration[4308-4382]:FieldDeclaration[4308-4382]"
    }, {
      "left" : "private static final String TEMPLATE_NAME = \"fabric8.template\";",
      "right" : "private static final String TEMPLATE_NAME = \"fabric8.template\";",
      "info" : "FieldDeclaration[4388-4451]:FieldDeclaration[4388-4451]"
    }, {
      "left" : "private static final String PARAMETER_PREFIX = \"fabric8.parameter\";",
      "right" : "private static final String PARAMETER_PREFIX = \"fabric8.parameter\";",
      "info" : "FieldDeclaration[4456-4523]:FieldDeclaration[4456-4523]"
    }, {
      "left" : "private static final String PARAMETER_NAME_PREFIX = PARAMETER_PREFIX + \".%s\";",
      "right" : "private static final String PARAMETER_NAME_PREFIX = PARAMETER_PREFIX + \".%s\";",
      "info" : "FieldDeclaration[4528-4605]:FieldDeclaration[4528-4605]"
    }, {
      "left" : "private static final String PARAMETER_PROPERTY = PARAMETER_NAME_PREFIX + \".%s\";",
      "right" : "private static final String PARAMETER_PROPERTY = PARAMETER_NAME_PREFIX + \".%s\";",
      "info" : "FieldDeclaration[4610-4689]:FieldDeclaration[4610-4689]"
    }, {
      "left" : "private static final String GENERATE = \"generate\";",
      "right" : "private static final String GENERATE = \"generate\";",
      "info" : "FieldDeclaration[4695-4745]:FieldDeclaration[4695-4745]"
    }, {
      "left" : "private static final String FROM = \"from\";",
      "right" : "private static final String FROM = \"from\";",
      "info" : "FieldDeclaration[4750-4792]:FieldDeclaration[4750-4792]"
    }, {
      "left" : "private static final String VALUE = \"value\";",
      "right" : "private static final String VALUE = \"value\";",
      "info" : "FieldDeclaration[4797-4841]:FieldDeclaration[4797-4841]"
    }, {
      "left" : "private static final String DESCRIPTION = \"description\";",
      "right" : "private static final String DESCRIPTION = \"description\";",
      "info" : "FieldDeclaration[4846-4902]:FieldDeclaration[4846-4902]"
    }, {
      "left" : "@Component\n    private MavenProjectHelper projectHelper;",
      "right" : "@Component\n    private MavenProjectHelper projectHelper;",
      "info" : "FieldDeclaration[4908-4964]:FieldDeclaration[4908-4964]"
    }, {
      "left" : "@Parameter(property = \"fabric8.kubernetes.artifactType\", defaultValue = \"json\")\n    private String artifactType = \"json\";",
      "right" : "@Parameter(property = \"fabric8.kubernetes.artifactType\", defaultValue = \"json\")\n    private String artifactType = \"json\";",
      "info" : "FieldDeclaration[4970-5196]:FieldDeclaration[4970-5196]"
    }, {
      "left" : "@Parameter(property = \"fabric8.kubernetes.artifactClassifier\", defaultValue = \"kubernetes\")\n    private String artifactClassifier = \"kubernetes\";",
      "right" : "@Parameter(property = \"fabric8.kubernetes.artifactClassifier\", defaultValue = \"kubernetes\")\n    private String artifactClassifier = \"kubernetes\";",
      "info" : "FieldDeclaration[5202-5458]:FieldDeclaration[5202-5458]"
    }, {
      "left" : "@Parameter(property = \"fabric8.generateJson\", defaultValue = \"true\")\n    private boolean generateJson;",
      "right" : "@Parameter(property = \"fabric8.generateJson\", defaultValue = \"true\")\n    private boolean generateJson;",
      "info" : "FieldDeclaration[5464-5770]:FieldDeclaration[5464-5770]"
    }, {
      "left" : "@Parameter(property = \"fabric8.combineDependencies\", defaultValue = \"false\")\n    private boolean combineDependencies;",
      "right" : "@Parameter(property = \"fabric8.combineDependencies\", defaultValue = \"false\")\n    private boolean combineDependencies;",
      "info" : "FieldDeclaration[5776-6012]:FieldDeclaration[5776-6012]"
    }, {
      "left" : "@Parameter(property = \"fabric8.failOnMissingJsonFiles\", defaultValue = \"true\")\n    private boolean failOnMissingJsonFiles;",
      "right" : "@Parameter(property = \"fabric8.failOnMissingJsonFiles\", defaultValue = \"true\")\n    private boolean failOnMissingJsonFiles;",
      "info" : "FieldDeclaration[6018-6220]:FieldDeclaration[6018-6220]"
    }, {
      "left" : "@Parameter(property = \"fabric8.includeNamespaceEnvVar\", defaultValue = \"true\")\n    private boolean includeNamespaceEnvVar;",
      "right" : "@Parameter(property = \"fabric8.includeNamespaceEnvVar\", defaultValue = \"true\")\n    private boolean includeNamespaceEnvVar;",
      "info" : "FieldDeclaration[6226-6439]:FieldDeclaration[6226-6439]"
    }, {
      "left" : "@Parameter(property = \"fabric8.namespaceEnvVar\", defaultValue = \"KUBERNETES_NAMESPACE\")\n    private String kubernetesNamespaceEnvVar;",
      "right" : "@Parameter(property = \"fabric8.namespaceEnvVar\", defaultValue = \"KUBERNETES_NAMESPACE\")\n    private String kubernetesNamespaceEnvVar;",
      "info" : "FieldDeclaration[6445-6685]:FieldDeclaration[6445-6685]"
    }, {
      "left" : "@Parameter(property = \"fabric8.provider\", defaultValue = \"fabric8\")\n    private String provider;",
      "right" : "@Parameter(property = \"fabric8.provider\", defaultValue = \"fabric8\")\n    private String provider;",
      "info" : "FieldDeclaration[6691-6871]:FieldDeclaration[6691-6871]"
    }, {
      "left" : "@Parameter()\n    private Map<String, String> labels;",
      "right" : "@Parameter()\n    private Map<String, String> labels;",
      "info" : "FieldDeclaration[6877-7155]:FieldDeclaration[6877-7155]"
    }, {
      "left" : "@Parameter()\n    private List<EnvVar> environmentVariables;",
      "right" : "@Parameter()\n    private List<EnvVar> environmentVariables;",
      "info" : "FieldDeclaration[7161-7459]:FieldDeclaration[7161-7459]"
    }, {
      "left" : "@Parameter()\n    private List<ContainerPort> containerPorts;",
      "right" : "@Parameter()\n    private List<ContainerPort> containerPorts;",
      "info" : "FieldDeclaration[7465-7620]:FieldDeclaration[7465-7620]"
    }, {
      "left" : "@Parameter()\n    private Map<String, Integer> defaultContainerPortMap;",
      "right" : "@Parameter()\n    private Map<String, Integer> defaultContainerPortMap;",
      "info" : "FieldDeclaration[7626-7777]:FieldDeclaration[7626-7777]"
    }, {
      "left" : "@Parameter()\n    private List<ServicePort> servicePorts;",
      "right" : "@Parameter()\n    private List<ServicePort> servicePorts;",
      "info" : "FieldDeclaration[7783-7932]:FieldDeclaration[7783-7932]"
    }, {
      "left" : "@Parameter(property = \"fabric8.replicas\", defaultValue = \"1\")\n    private Integer replicaCount;",
      "right" : "@Parameter(property = \"fabric8.replicas\", defaultValue = \"1\")\n    private Integer replicaCount;",
      "info" : "FieldDeclaration[7938-8117]:FieldDeclaration[7938-8117]"
    }, {
      "left" : "// TODO lets disable by default until its working :)\n    @Parameter(property = \"fabric8.useDeploymentConfig\", defaultValue = \"false\")\n    private boolean useDeploymentConfig;",
      "right" : "// TODO lets disable by default until its working :)\n    @Parameter(property = \"fabric8.useDeploymentConfig\", defaultValue = \"false\")\n    private boolean useDeploymentConfig;",
      "info" : "FieldDeclaration[8123-8401]:FieldDeclaration[8123-8401]"
    }, {
      "left" : "@Parameter(property = \"fabric8.lastTriggeredImageTag\", defaultValue = \"latest\")\n    private String lastTriggeredImageTag;",
      "right" : "@Parameter(property = \"fabric8.lastTriggeredImageTag\", defaultValue = \"latest\")\n    private String lastTriggeredImageTag;",
      "info" : "FieldDeclaration[8407-8613]:FieldDeclaration[8407-8613]"
    }, {
      "left" : "@Parameter(property = \"fabric8.deploymentStrategy\", defaultValue = \"Recreate\")\n    private String deploymentStrategy;",
      "right" : "@Parameter(property = \"fabric8.deploymentStrategy\", defaultValue = \"Recreate\")\n    private String deploymentStrategy;",
      "info" : "FieldDeclaration[8619-8802]:FieldDeclaration[8619-8802]"
    }, {
      "left" : "@Parameter(property = \"fabric8.extra.json\", defaultValue = \"${basedir}/target/classes/kubernetes-extra.json\")\n    private File kubernetesExtraJson;",
      "right" : "@Parameter(property = \"fabric8.extra.json\", defaultValue = \"${basedir}/target/classes/kubernetes-extra.json\")\n    private File kubernetesExtraJson;",
      "info" : "FieldDeclaration[8808-9045]:FieldDeclaration[8808-9045]"
    }, {
      "left" : "@Parameter(property = \"fabric8.templateTempDir\", defaultValue = \"${basedir}/target/fabric8/template-workdir\")\n    private File templateTempDir;",
      "right" : "@Parameter(property = \"fabric8.templateTempDir\", defaultValue = \"${basedir}/target/fabric8/template-workdir\")\n    private File templateTempDir;",
      "info" : "FieldDeclaration[9051-9280]:FieldDeclaration[9051-9280]"
    }, {
      "left" : "@Parameter(property = \"fabric8.iconUrl\")\n    private String iconUrl;",
      "right" : "@Parameter(property = \"fabric8.iconUrl\")\n    private String iconUrl;",
      "info" : "FieldDeclaration[9286-9438]:FieldDeclaration[9286-9438]"
    }, {
      "left" : "@Parameter(property = \"fabric8.iconUrlPrefix\")\n    private String iconUrlPrefix;",
      "right" : "@Parameter(property = \"fabric8.iconUrlPrefix\")\n    private String iconUrlPrefix;",
      "info" : "FieldDeclaration[9444-9606]:FieldDeclaration[9444-9606]"
    }, {
      "left" : "@Parameter(property = \"fabric8.iconBranch\", defaultValue = \"master\")\n    private String iconBranch;",
      "right" : "@Parameter(property = \"fabric8.iconBranch\", defaultValue = \"master\")\n    private String iconBranch;",
      "info" : "FieldDeclaration[9612-9791]:FieldDeclaration[9612-9791]"
    }, {
      "left" : "@Parameter(property = \"fabric8.replicationController.name\", defaultValue = \"${project.artifactId}\")\n    private String replicationControllerName;",
      "right" : "@Parameter(property = \"fabric8.replicationController.name\", defaultValue = \"${project.artifactId}\")\n    private String replicationControllerName;",
      "info" : "FieldDeclaration[9797-10044]:FieldDeclaration[9797-10044]"
    }, {
      "left" : "@Parameter(property = \"fabric8.kubernetes.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesName;",
      "right" : "@Parameter(property = \"fabric8.kubernetes.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesName;",
      "info" : "FieldDeclaration[10050-10258]:FieldDeclaration[10050-10258]"
    }, {
      "left" : "@Parameter(property = \"fabric8.container.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesContainerName;",
      "right" : "@Parameter(property = \"fabric8.container.name\", defaultValue = \"${project.artifactId}\")\n    private String kubernetesContainerName;",
      "info" : "FieldDeclaration[10264-10480]:FieldDeclaration[10264-10480]"
    }, {
      "left" : "@Parameter(property = \"fabric8.service.name\", defaultValue = \"${project.artifactId}\")\n    private String serviceName;",
      "right" : "@Parameter(property = \"fabric8.service.name\", defaultValue = \"${project.artifactId}\")\n    private String serviceName;",
      "info" : "FieldDeclaration[10486-10643]:FieldDeclaration[10486-10643]"
    }, {
      "left" : "// TODO for now lets default to not creating headless services as it barfs when used with kubernetes...\n    //@Parameter(property = \"fabric8.service.headless\", defaultValue = \"true\")\n    @Parameter(property = \"fabric8.service.headless\", defaultValue = \"false\")\n    private boolean headlessServices;",
      "right" : "// TODO for now lets default to not creating headless services as it barfs when used with kubernetes...\n    //@Parameter(property = \"fabric8.service.headless\", defaultValue = \"true\")\n    @Parameter(property = \"fabric8.service.headless\", defaultValue = \"false\")\n    private boolean headlessServices;",
      "info" : "FieldDeclaration[10649-11032]:FieldDeclaration[10649-11032]"
    }, {
      "left" : "@Parameter(property = FABRIC8_PORT_SERVICE)\n    private Integer servicePort;",
      "right" : "@Parameter(property = FABRIC8_PORT_SERVICE)\n    private Integer servicePort;",
      "info" : "FieldDeclaration[11038-11154]:FieldDeclaration[11038-11154]"
    }, {
      "left" : "@Parameter(property = FABRIC8_CONTAINER_PORT_SERVICE)\n    private String serviceContainerPort;",
      "right" : "@Parameter(property = FABRIC8_CONTAINER_PORT_SERVICE)\n    private String serviceContainerPort;",
      "info" : "FieldDeclaration[11160-11304]:FieldDeclaration[11160-11304]"
    }, {
      "left" : "@Parameter(property = FABRIC8_PROTOCOL_SERVICE, defaultValue = \"TCP\")\n    private String serviceProtocol;",
      "right" : "@Parameter(property = FABRIC8_PROTOCOL_SERVICE, defaultValue = \"TCP\")\n    private String serviceProtocol;",
      "info" : "FieldDeclaration[11310-11459]:FieldDeclaration[11310-11459]"
    }, {
      "left" : "@Parameter(property = \"fabric8.imagePullPolicy\")\n    private String imagePullPolicy;",
      "right" : "@Parameter(property = \"fabric8.imagePullPolicy\")\n    private String imagePullPolicy;",
      "info" : "FieldDeclaration[11465-11619]:FieldDeclaration[11465-11619]"
    }, {
      "left" : "@Parameter(property = \"fabric8.imagePullPolicySnapshot\")\n    private String imagePullPolicySnapshot;",
      "right" : "@Parameter(property = \"fabric8.imagePullPolicySnapshot\")\n    private String imagePullPolicySnapshot;",
      "info" : "FieldDeclaration[11625-11826]:FieldDeclaration[11625-11826]"
    }, {
      "left" : "@Parameter(property = \"fabric8.includeAllEnvironmentVariables\", defaultValue = \"true\")\n    private boolean includeAllEnvironmentVariables;",
      "right" : "@Parameter(property = \"fabric8.includeAllEnvironmentVariables\", defaultValue = \"true\")\n    private boolean includeAllEnvironmentVariables;",
      "info" : "FieldDeclaration[11832-12144]:FieldDeclaration[11832-12144]"
    }, {
      "left" : "@Parameter(property = \"fabric8.containerPrivileged\")\n    protected Boolean containerPrivileged;",
      "right" : "@Parameter(property = \"fabric8.containerPrivileged\")\n    protected Boolean containerPrivileged;",
      "info" : "FieldDeclaration[12150-12245]:FieldDeclaration[12150-12245]"
    }, {
      "left" : "@Parameter(property = \"fabric8.serviceAccount\")\n    protected String serviceAccount;",
      "right" : "@Parameter(property = \"fabric8.serviceAccount\")\n    protected String serviceAccount;",
      "info" : "FieldDeclaration[12251-12335]:FieldDeclaration[12251-12335]"
    }, {
      "left" : "@Parameter(property = \"fabric8.templateParametersFile\", defaultValue = \"${basedir}/src/main/fabric8/templateParameters.properties\")\n    protected File templateParametersPropertiesFile;",
      "right" : "@Parameter(property = \"fabric8.templateParametersFile\", defaultValue = \"${basedir}/src/main/fabric8/templateParameters.properties\")\n    protected File templateParametersPropertiesFile;",
      "info" : "FieldDeclaration[12341-12843]:FieldDeclaration[12341-12843]"
    }, {
      "left" : "@Parameter(property = \"fabric8.maximumDataUrlSizeK\", defaultValue = \"2\")\n    private int maximumDataUrlSizeK;",
      "right" : "@Parameter(property = \"fabric8.maximumDataUrlSizeK\", defaultValue = \"2\")\n    private int maximumDataUrlSizeK;",
      "info" : "FieldDeclaration[12849-13121]:FieldDeclaration[12849-13121]"
    }, {
      "left" : "@Component\n    protected ArtifactResolver resolver;",
      "right" : "@Component\n    protected ArtifactResolver resolver;",
      "info" : "FieldDeclaration[13127-13178]:FieldDeclaration[13127-13178]"
    }, {
      "left" : "@Parameter(property = \"localRepository\", readonly = true, required = true)\n    protected ArtifactRepository localRepository;",
      "right" : "@Parameter(property = \"localRepository\", readonly = true, required = true)\n    protected ArtifactRepository localRepository;",
      "info" : "FieldDeclaration[13184-13308]:FieldDeclaration[13184-13308]"
    }, {
      "left" : "@Parameter(property = \"project.remoteArtifactRepositories\")\n    protected List remoteRepositories;",
      "right" : "@Parameter(property = \"project.remoteArtifactRepositories\")\n    protected List remoteRepositories;",
      "info" : "FieldDeclaration[13314-13412]:FieldDeclaration[13314-13412]"
    }, {
      "left" : "public void execute() throws MojoExecutionException, MojoFailureException",
      "right" : "public void execute() throws MojoExecutionException, MojoFailureException",
      "info" : "MethodDeclaration[13418-14448]:MethodDeclaration[13418-14448]"
    }, {
      "left" : "protected boolean shouldGenerateForThisProject()",
      "right" : "protected boolean shouldGenerateForThisProject()",
      "info" : "MethodDeclaration[14454-14600]:MethodDeclaration[14454-14600]"
    }, {
      "left" : "protected void combineDependentJsonFiles(File json) throws MojoExecutionException",
      "right" : "protected void combineDependentJsonFiles(File json) throws MojoExecutionException",
      "info" : "MethodDeclaration[14606-17460]:MethodDeclaration[14606-17460]"
    }, {
      "left" : "private void addKubernetesJsonFileToList(List<Object> list, File file)",
      "right" : "private void addKubernetesJsonFileToList(List<Object> list, File file)",
      "info" : "MethodDeclaration[17466-18091]:MethodDeclaration[17466-18091]"
    }, {
      "left" : "protected static boolean isKubernetesJsonArtifact(String classifier, String type)",
      "right" : "protected static boolean isKubernetesJsonArtifact(String classifier, String type)",
      "info" : "MethodDeclaration[18097-18273]:MethodDeclaration[18097-18273]"
    }, {
      "left" : "protected Set<Artifact> resolveArtifacts(Artifact artifact)",
      "right" : "protected Set<Artifact> resolveArtifacts(Artifact artifact)",
      "info" : "MethodDeclaration[18279-18684]:MethodDeclaration[18279-18684]"
    }, {
      "left" : "protected void combineJsonFiles(File json, File kubernetesExtraJson) throws MojoExecutionException",
      "right" : "protected void combineJsonFiles(File json, File kubernetesExtraJson) throws MojoExecutionException",
      "info" : "MethodDeclaration[18690-19467]:MethodDeclaration[18690-19467]"
    }, {
      "left" : "protected void wrapInDeploymentConfigs(File json) throws MojoExecutionException",
      "right" : "protected void wrapInDeploymentConfigs(File json) throws MojoExecutionException",
      "info" : "MethodDeclaration[19473-20805]:MethodDeclaration[19473-20805]"
    }, {
      "left" : "protected List<HasMetadata> wrapInDeploymentConfigs(List<HasMetadata> items)",
      "right" : "protected List<HasMetadata> wrapInDeploymentConfigs(List<HasMetadata> items)",
      "info" : "MethodDeclaration[20811-21313]:MethodDeclaration[20811-21313]"
    }, {
      "left" : "protected void wrapInDeploymentConfigs(List<HasMetadata> list, ReplicationController replicationController)",
      "right" : "protected void wrapInDeploymentConfigs(List<HasMetadata> list, ReplicationController replicationController)",
      "info" : "MethodDeclaration[21319-24077]:MethodDeclaration[21319-24077]"
    }, {
      "left" : "protected ImageStream getOrAddImageStream(List<HasMetadata> list, String imageStreamName, Map<String, String> labels)",
      "right" : "protected ImageStream getOrAddImageStream(List<HasMetadata> list, String imageStreamName, Map<String, String> labels)",
      "info" : "MethodDeclaration[24083-24704]:MethodDeclaration[24083-24704]"
    }, {
      "left" : "protected static Object loadJsonFile(File file) throws MojoExecutionException",
      "right" : "protected static Object loadJsonFile(File file) throws MojoExecutionException",
      "info" : "MethodDeclaration[24710-24997]:MethodDeclaration[24710-24997]"
    }, {
      "left" : "protected void generateKubernetesJson(File kubernetesJson) throws MojoExecutionException",
      "right" : "protected void generateKubernetesJson(File kubernetesJson) throws MojoExecutionException",
      "info" : "MethodDeclaration[25003-29105]:MethodDeclaration[25003-29162]"
    }, {
      "left" : "protected String getTemplateKey(Template template, String key)",
      "right" : "protected String getTemplateKey(Template template, String key)",
      "info" : "MethodDeclaration[29111-29381]:MethodDeclaration[29168-29438]"
    }, {
      "left" : "protected void addDocumentationAnnotations(Template template, Map<String, String> annotations)",
      "right" : "protected void addDocumentationAnnotations(Template template, Map<String, String> annotations)",
      "info" : "MethodDeclaration[29387-30550]:MethodDeclaration[29444-30607]"
    }, {
      "left" : "protected String getIconUrl()",
      "right" : "protected String getIconUrl()",
      "info" : "MethodDeclaration[30556-32112]:MethodDeclaration[30613-32169]"
    }, {
      "left" : "protected String convertIconFileToURL(File iconFile) throws IOException",
      "right" : "protected String convertIconFileToURL(File iconFile) throws IOException",
      "info" : "MethodDeclaration[32118-34989]:MethodDeclaration[32175-35046]"
    }, {
      "left" : "protected Probe getLivenessProbe()",
      "right" : "protected Probe getProbe(String prefix)",
      "info" : "MethodDeclaration[34995-36410]:MethodDeclaration[35250-36610]"
    }, {
      "left" : "public Boolean getContainerPrivileged()",
      "right" : "public Boolean getContainerPrivileged()",
      "info" : "MethodDeclaration[36416-36499]:MethodDeclaration[36616-36699]"
    }, {
      "left" : "public String getImagePullPolicy()",
      "right" : "public String getImagePullPolicy()",
      "info" : "MethodDeclaration[36505-37025]:MethodDeclaration[36705-37225]"
    }, {
      "left" : "public String getKubernetesContainerName()",
      "right" : "public String getKubernetesContainerName()",
      "info" : "MethodDeclaration[37031-38038]:MethodDeclaration[37231-38238]"
    }, {
      "left" : "public void setKubernetesContainerName(String kubernetesContainerName)",
      "right" : "public void setKubernetesContainerName(String kubernetesContainerName)",
      "info" : "MethodDeclaration[38044-38186]:MethodDeclaration[38244-38386]"
    }, {
      "left" : "public String getKubernetesName()",
      "right" : "public String getKubernetesName()",
      "info" : "MethodDeclaration[38192-38264]:MethodDeclaration[38392-38464]"
    }, {
      "left" : "public void setKubernetesName(String kubernetesName)",
      "right" : "public void setKubernetesName(String kubernetesName)",
      "info" : "MethodDeclaration[38270-38376]:MethodDeclaration[38470-38576]"
    }, {
      "left" : "public Map<String, Integer> getDefaultContainerPortMap()",
      "right" : "public Map<String, Integer> getDefaultContainerPortMap()",
      "info" : "MethodDeclaration[38382-38813]:MethodDeclaration[38582-39013]"
    }, {
      "left" : "public void setDefaultContainerPortMap(Map<String, Integer> defaultContainerPortMap)",
      "right" : "public void setDefaultContainerPortMap(Map<String, Integer> defaultContainerPortMap)",
      "info" : "MethodDeclaration[38819-38975]:MethodDeclaration[39019-39175]"
    }, {
      "left" : "public List<ContainerPort> getContainerPorts()",
      "right" : "public List<ContainerPort> getContainerPorts()",
      "info" : "MethodDeclaration[38981-41140]:MethodDeclaration[39181-41340]"
    }, {
      "left" : "protected static ContainerPort getOrCreatePort(Map<String, ContainerPort> portMap, String name)",
      "right" : "protected static ContainerPort getOrCreatePort(Map<String, ContainerPort> portMap, String name)",
      "info" : "MethodDeclaration[41146-41478]:MethodDeclaration[41346-41678]"
    }, {
      "left" : "public List<ServicePort> getServicePorts() throws MojoExecutionException",
      "right" : "public List<ServicePort> getServicePorts() throws MojoExecutionException",
      "info" : "MethodDeclaration[41484-45018]:MethodDeclaration[41684-45218]"
    }, {
      "left" : "protected static EnvVar getOrCreateEnv(Map<String, EnvVar> envMap, String name)",
      "right" : "protected static EnvVar getOrCreateEnv(Map<String, EnvVar> envMap, String name)",
      "info" : "MethodDeclaration[45024-45289]:MethodDeclaration[45224-45489]"
    }, {
      "left" : "protected Integer parsePort(String portText, String propertyName)",
      "right" : "protected Integer parsePort(String portText, String propertyName)",
      "info" : "MethodDeclaration[45295-45703]:MethodDeclaration[45495-45903]"
    }, {
      "left" : "public void setContainerPorts(List<ContainerPort> ports)",
      "right" : "public void setContainerPorts(List<ContainerPort> ports)",
      "info" : "MethodDeclaration[45709-45810]:MethodDeclaration[45909-46010]"
    }, {
      "left" : "public void setServicePorts(List<ServicePort> ports)",
      "right" : "public void setServicePorts(List<ServicePort> ports)",
      "info" : "MethodDeclaration[45816-45911]:MethodDeclaration[46016-46111]"
    }, {
      "left" : "public Map<String, String> getLabels()",
      "right" : "public Map<String, String> getLabels()",
      "info" : "MethodDeclaration[45917-46232]:MethodDeclaration[46117-46432]"
    }, {
      "left" : "public List<EnvVar> getEnvironmentVariables() throws MojoExecutionException",
      "right" : "public List<EnvVar> getEnvironmentVariables() throws MojoExecutionException",
      "info" : "MethodDeclaration[46238-47679]:MethodDeclaration[46438-47879]"
    }, {
      "left" : "public Map<String, String> getExportedEnvironmentVariables() throws MojoExecutionException",
      "right" : "public Map<String, String> getExportedEnvironmentVariables() throws MojoExecutionException",
      "info" : "MethodDeclaration[47685-48932]:MethodDeclaration[47885-49132]"
    }, {
      "left" : "public List<VolumeMount> getVolumeMounts()",
      "right" : "public List<VolumeMount> getVolumeMounts()",
      "info" : "MethodDeclaration[48938-49949]:MethodDeclaration[49138-50149]"
    }, {
      "left" : "public List<Volume> getVolumes()",
      "right" : "public List<Volume> getVolumes()",
      "info" : "MethodDeclaration[49955-50827]:MethodDeclaration[50155-51027]"
    }, {
      "left" : "public Template getTemplate() throws MojoExecutionException",
      "right" : "public Template getTemplate() throws MojoExecutionException",
      "info" : "MethodDeclaration[50833-52782]:MethodDeclaration[51033-52982]"
    }, {
      "left" : "protected void loadParametersFromProperties(Properties properties, List<io.fabric8.openshift.api.model.template.Parameter> parameters, Set<String> paramNames)",
      "right" : "protected void loadParametersFromProperties(Properties properties, List<io.fabric8.openshift.api.model.template.Parameter> parameters, Set<String> paramNames)",
      "info" : "MethodDeclaration[52788-54908]:MethodDeclaration[52988-55108]"
    }, {
      "left" : "private String labelValueOrBlank(String label, String value)",
      "right" : "private String labelValueOrBlank(String label, String value)",
      "info" : "MethodDeclaration[54914-55120]:MethodDeclaration[55114-55320]"
    }, {
      "left" : "public void setLabels(Map<String, String> labels)",
      "right" : "public void setLabels(Map<String, String> labels)",
      "info" : "MethodDeclaration[55126-55213]:MethodDeclaration[55326-55413]"
    }, {
      "left" : "protected static void addIfNotDefined(Map<String, Object> variables, String key, String value)",
      "right" : "protected static void addIfNotDefined(Map<String, Object> variables, String key, String value)",
      "info" : "MethodDeclaration[55219-55413]:MethodDeclaration[55419-55613]"
    } ],
    "mappings" : [
 {
      "left" : "@Mojo(name = \"json\", defaultPhase = LifecyclePhase.GENERATE_RESOURCES)",
      "right" : "@Mojo(name = \"json\", defaultPhase = LifecyclePhase.GENERATE_RESOURCES)",
      "info" : "NormalAnnotation[2977-3047]:NormalAnnotation[2977-3047]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3048-3054]:Modifier[3048-3054]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3055-3060]:TYPE_DECLARATION_KIND[3055-3060]"
    }, {
      "left" : "JsonMojo",
      "right" : "JsonMojo",
      "info" : "SimpleName[3061-3069]:SimpleName[3061-3069]"
    }, {
      "left" : "AbstractFabric8Mojo",
      "right" : "AbstractFabric8Mojo",
      "info" : "SimpleType[3078-3097]:SimpleType[3078-3097]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13418-13427]:MarkerAnnotation[13418-13427]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13432-13438]:Modifier[13432-13438]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[13439-13443]:PrimitiveType[13439-13443]"
    }, {
      "left" : "execute",
      "right" : "execute",
      "info" : "SimpleName[13444-13451]:SimpleName[13444-13451]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[13461-13483]:SimpleType[13461-13483]"
    }, {
      "left" : "MojoFailureException",
      "right" : "MojoFailureException",
      "info" : "SimpleType[13485-13505]:SimpleType[13485-13505]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13506-14448]:Block[13506-14448]"
    }, {
      "left" : "File json = getKubernetesJson();",
      "right" : "File json = getKubernetesJson();",
      "info" : "VariableDeclarationStatement[13516-13548]:VariableDeclarationStatement[13516-13548]"
    }, {
      "left" : "getLog().info(\"Configured with file: \" + json);",
      "right" : "getLog().info(\"Configured with file: \" + json);",
      "info" : "ExpressionStatement[13557-13604]:ExpressionStatement[13557-13604]"
    }, {
      "left" : "if (json == null)",
      "right" : "if (json == null)",
      "info" : "IfStatement[13613-13729]:IfStatement[13613-13729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13631-13729]:Block[13631-13729]"
    }, {
      "left" : "throw new MojoExecutionException(\"No kubernetes json file is specified!\");",
      "right" : "throw new MojoExecutionException(\"No kubernetes json file is specified!\");",
      "info" : "ThrowStatement[13645-13719]:ThrowStatement[13645-13719]"
    }, {
      "left" : "if (shouldGenerateForThisProject())",
      "right" : "if (shouldGenerateForThisProject())",
      "info" : "IfStatement[13738-14442]:IfStatement[13738-14442]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13774-14442]:Block[13774-14442]"
    }, {
      "left" : "if (!isIgnoreProject() || combineDependencies)",
      "right" : "if (!isIgnoreProject() || combineDependencies)",
      "info" : "IfStatement[13788-14432]:IfStatement[13788-14432]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13835-14432]:Block[13835-14432]"
    }, {
      "left" : "if (combineDependencies)",
      "right" : "if (combineDependencies)",
      "info" : "IfStatement[13853-14222]:IfStatement[13853-14222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13878-13950]:Block[13878-13950]"
    }, {
      "left" : "combineDependentJsonFiles(json);",
      "right" : "combineDependentJsonFiles(json);",
      "info" : "ExpressionStatement[13900-13932]:ExpressionStatement[13900-13932]"
    }, {
      "left" : "if (generateJson)",
      "right" : "if (generateJson)",
      "info" : "IfStatement[13956-14222]:IfStatement[13956-14222]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13974-14222]:Block[13974-14222]"
    }, {
      "left" : "generateKubernetesJson(json);",
      "right" : "generateKubernetesJson(json);",
      "info" : "ExpressionStatement[13996-14025]:ExpressionStatement[13996-14025]"
    }, {
      "left" : "if (kubernetesExtraJson != null && kubernetesExtraJson.exists())",
      "right" : "if (kubernetesExtraJson != null && kubernetesExtraJson.exists())",
      "info" : "IfStatement[14047-14204]:IfStatement[14047-14204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14112-14204]:Block[14112-14204]"
    }, {
      "left" : "combineJsonFiles(json, kubernetesExtraJson);",
      "right" : "combineJsonFiles(json, kubernetesExtraJson);",
      "info" : "ExpressionStatement[14138-14182]:ExpressionStatement[14138-14182]"
    }, {
      "left" : "if (json.exists() && json.isFile())",
      "right" : "if (json.exists() && json.isFile())",
      "info" : "IfStatement[14239-14418]:IfStatement[14239-14418]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14275-14418]:Block[14275-14418]"
    }, {
      "left" : "if (useDeploymentConfig)",
      "right" : "if (useDeploymentConfig)",
      "info" : "IfStatement[14297-14400]:IfStatement[14297-14400]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14322-14400]:Block[14322-14400]"
    }, {
      "left" : "wrapInDeploymentConfigs(json);",
      "right" : "wrapInDeploymentConfigs(json);",
      "info" : "ExpressionStatement[14348-14378]:ExpressionStatement[14348-14378]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14454-14463]:MarkerAnnotation[14454-14463]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14468-14477]:Modifier[14468-14477]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[14478-14485]:PrimitiveType[14478-14485]"
    }, {
      "left" : "shouldGenerateForThisProject",
      "right" : "shouldGenerateForThisProject",
      "info" : "SimpleName[14486-14514]:SimpleName[14486-14514]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14517-14600]:Block[14517-14600]"
    }, {
      "left" : "return super.shouldGenerateForThisProject() || combineDependencies;",
      "right" : "return super.shouldGenerateForThisProject() || combineDependencies;",
      "info" : "ReturnStatement[14527-14594]:ReturnStatement[14527-14594]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[14606-14615]:Modifier[14606-14615]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[14616-14620]:PrimitiveType[14616-14620]"
    }, {
      "left" : "combineDependentJsonFiles",
      "right" : "combineDependentJsonFiles",
      "info" : "SimpleName[14621-14646]:SimpleName[14621-14646]"
    }, {
      "left" : "File json",
      "right" : "File json",
      "info" : "SingleVariableDeclaration[14647-14656]:SingleVariableDeclaration[14647-14656]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[14665-14687]:SimpleType[14665-14687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14688-17460]:Block[14688-17460]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[14698-17454]:TryStatement[14698-17454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14702-17268]:Block[14702-17268]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[14716-14752]:VariableDeclarationStatement[14716-14752]"
    }, {
      "left" : "Set<File> jsonFiles = new LinkedHashSet<>();",
      "right" : "Set<File> jsonFiles = new LinkedHashSet<>();",
      "info" : "VariableDeclarationStatement[14765-14809]:VariableDeclarationStatement[14765-14809]"
    }, {
      "left" : "Set<Artifact> dependencyArtifacts = project.getDependencyArtifacts();",
      "right" : "Set<Artifact> dependencyArtifacts = project.getDependencyArtifacts();",
      "info" : "VariableDeclarationStatement[14822-14891]:VariableDeclarationStatement[14822-14891]"
    }, {
      "left" : "for (Artifact artifact : dependencyArtifacts)",
      "right" : "for (Artifact artifact : dependencyArtifacts)",
      "info" : "EnhancedForStatement[14904-16095]:EnhancedForStatement[14904-16095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14950-16095]:Block[14950-16095]"
    }, {
      "left" : "String classifier = artifact.getClassifier();",
      "right" : "String classifier = artifact.getClassifier();",
      "info" : "VariableDeclarationStatement[14968-15013]:VariableDeclarationStatement[14968-15013]"
    }, {
      "left" : "String type = artifact.getType();",
      "right" : "String type = artifact.getType();",
      "info" : "VariableDeclarationStatement[15030-15063]:VariableDeclarationStatement[15030-15063]"
    }, {
      "left" : "File file = artifact.getFile();",
      "right" : "File file = artifact.getFile();",
      "info" : "VariableDeclarationStatement[15080-15111]:VariableDeclarationStatement[15080-15111]"
    }, {
      "left" : "if (isKubernetesJsonArtifact(classifier, type))",
      "right" : "if (isKubernetesJsonArtifact(classifier, type))",
      "info" : "IfStatement[15129-16081]:IfStatement[15129-16081]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15177-16081]:Block[15177-16081]"
    }, {
      "left" : "if (file != null)",
      "right" : "if (file != null)",
      "info" : "IfStatement[15199-16063]:IfStatement[15199-16063]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15217-15378]:Block[15217-15378]"
    }, {
      "left" : "System.out.println(\"Found kubernetes JSON dependency: \" + artifact);",
      "right" : "System.out.println(\"Found kubernetes JSON dependency: \" + artifact);",
      "info" : "ExpressionStatement[15243-15311]:ExpressionStatement[15243-15311]"
    }, {
      "left" : "jsonFiles.add(file);",
      "right" : "jsonFiles.add(file);",
      "info" : "ExpressionStatement[15336-15356]:ExpressionStatement[15336-15356]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15384-16063]:Block[15384-16063]"
    }, {
      "left" : "Set<Artifact> artifacts = resolveArtifacts(artifact);",
      "right" : "Set<Artifact> artifacts = resolveArtifacts(artifact);",
      "info" : "VariableDeclarationStatement[15410-15463]:VariableDeclarationStatement[15410-15463]"
    }, {
      "left" : "for (Artifact resolvedArtifact : artifacts)",
      "right" : "for (Artifact resolvedArtifact : artifacts)",
      "info" : "EnhancedForStatement[15488-16041]:EnhancedForStatement[15488-16041]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15532-16041]:Block[15532-16041]"
    }, {
      "left" : "classifier = resolvedArtifact.getClassifier();",
      "right" : "classifier = resolvedArtifact.getClassifier();",
      "info" : "ExpressionStatement[15562-15608]:ExpressionStatement[15562-15608]"
    }, {
      "left" : "type = resolvedArtifact.getType();",
      "right" : "type = resolvedArtifact.getType();",
      "info" : "ExpressionStatement[15637-15671]:ExpressionStatement[15637-15671]"
    }, {
      "left" : "file = resolvedArtifact.getFile();",
      "right" : "file = resolvedArtifact.getFile();",
      "info" : "ExpressionStatement[15700-15734]:ExpressionStatement[15700-15734]"
    }, {
      "left" : "if (isKubernetesJsonArtifact(classifier, type) && file != null)",
      "right" : "if (isKubernetesJsonArtifact(classifier, type) && file != null)",
      "info" : "IfStatement[15763-16015]:IfStatement[15763-16015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15827-16015]:Block[15827-16015]"
    }, {
      "left" : "System.out.println(\"Resolved kubernetes JSON dependency: \" + artifact);",
      "right" : "System.out.println(\"Resolved kubernetes JSON dependency: \" + artifact);",
      "info" : "ExpressionStatement[15861-15932]:ExpressionStatement[15861-15932]"
    }, {
      "left" : "jsonFiles.add(file);",
      "right" : "jsonFiles.add(file);",
      "info" : "ExpressionStatement[15965-15985]:ExpressionStatement[15965-15985]"
    }, {
      "left" : "List<Object> jsonObjectList = new ArrayList<>();",
      "right" : "List<Object> jsonObjectList = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[16108-16156]:VariableDeclarationStatement[16108-16156]"
    }, {
      "left" : "for (File file : jsonFiles)",
      "right" : "for (File file : jsonFiles)",
      "info" : "EnhancedForStatement[16169-16279]:EnhancedForStatement[16169-16279]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16197-16279]:Block[16197-16279]"
    }, {
      "left" : "addKubernetesJsonFileToList(jsonObjectList, file);",
      "right" : "addKubernetesJsonFileToList(jsonObjectList, file);",
      "info" : "ExpressionStatement[16215-16265]:ExpressionStatement[16215-16265]"
    }, {
      "left" : "if (jsonObjectList.isEmpty())",
      "right" : "if (jsonObjectList.isEmpty())",
      "info" : "IfStatement[16292-16652]:IfStatement[16292-16652]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16322-16652]:Block[16322-16652]"
    }, {
      "left" : "if (failOnMissingJsonFiles)",
      "right" : "if (failOnMissingJsonFiles)",
      "info" : "IfStatement[16340-16638]:IfStatement[16340-16638]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16368-16496]:Block[16368-16496]"
    }, {
      "left" : "throw new MojoExecutionException(\"Could not find any dependent kubernetes JSON files!\");",
      "right" : "throw new MojoExecutionException(\"Could not find any dependent kubernetes JSON files!\");",
      "info" : "ThrowStatement[16390-16478]:ThrowStatement[16390-16478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16502-16638]:Block[16502-16638]"
    }, {
      "left" : "getLog().warn(\"Could not find any dependent kubernetes JSON files\");",
      "right" : "getLog().warn(\"Could not find any dependent kubernetes JSON files\");",
      "info" : "ExpressionStatement[16524-16592]:ExpressionStatement[16524-16592]"
    }, {
      "left" : "return;",
      "right" : "return;",
      "info" : "ReturnStatement[16613-16620]:ReturnStatement[16613-16620]"
    }, {
      "left" : "Object combinedJson;",
      "right" : "Object combinedJson;",
      "info" : "VariableDeclarationStatement[16665-16685]:VariableDeclarationStatement[16665-16685]"
    }, {
      "left" : "if (jsonObjectList.size() == 1)",
      "right" : "if (jsonObjectList.size() == 1)",
      "info" : "IfStatement[16698-16907]:IfStatement[16698-16907]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16730-16799]:Block[16730-16799]"
    }, {
      "left" : "combinedJson = jsonObjectList.get(0);",
      "right" : "combinedJson = jsonObjectList.get(0);",
      "info" : "ExpressionStatement[16748-16785]:ExpressionStatement[16748-16785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16805-16907]:Block[16805-16907]"
    }, {
      "left" : "combinedJson = KubernetesHelper.combineJson(jsonObjectList.toArray());",
      "right" : "combinedJson = KubernetesHelper.combineJson(jsonObjectList.toArray());",
      "info" : "ExpressionStatement[16823-16893]:ExpressionStatement[16823-16893]"
    }, {
      "left" : "if (combinedJson instanceof Template)",
      "right" : "if (combinedJson instanceof Template)",
      "info" : "IfStatement[16920-17090]:IfStatement[16920-17090]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16958-17090]:Block[16958-17090]"
    }, {
      "left" : "Template template = (Template) combinedJson;",
      "right" : "Template template = (Template) combinedJson;",
      "info" : "VariableDeclarationStatement[16976-17020]:VariableDeclarationStatement[16976-17020]"
    }, {
      "left" : "setName(template, getKubernetesName());",
      "right" : "setName(template, getKubernetesName());",
      "info" : "ExpressionStatement[17037-17076]:ExpressionStatement[17037-17076]"
    }, {
      "left" : "json.getParentFile().mkdirs();",
      "right" : "json.getParentFile().mkdirs();",
      "info" : "ExpressionStatement[17103-17133]:ExpressionStatement[17103-17133]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, combinedJson);",
      "right" : "KubernetesHelper.saveJson(json, combinedJson);",
      "info" : "ExpressionStatement[17146-17192]:ExpressionStatement[17146-17192]"
    }, {
      "left" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "right" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "info" : "ExpressionStatement[17205-17258]:ExpressionStatement[17205-17258]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17289-17454]:Block[17289-17454]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "info" : "ThrowStatement[17303-17444]:ThrowStatement[17303-17444]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[17466-17473]:Modifier[17466-17473]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[17474-17478]:PrimitiveType[17474-17478]"
    }, {
      "left" : "addKubernetesJsonFileToList",
      "right" : "addKubernetesJsonFileToList",
      "info" : "SimpleName[17479-17506]:SimpleName[17479-17506]"
    }, {
      "left" : "List<Object> list",
      "right" : "List<Object> list",
      "info" : "SingleVariableDeclaration[17507-17524]:SingleVariableDeclaration[17507-17524]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[17526-17535]:SingleVariableDeclaration[17526-17535]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17537-18091]:Block[17537-18091]"
    }, {
      "left" : "if (file.exists() && file.isFile())",
      "right" : "if (file.exists() && file.isFile())",
      "info" : "IfStatement[17547-18085]:IfStatement[17547-18085]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17583-18008]:Block[17583-18008]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[17597-17997]:TryStatement[17597-17997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17601-17871]:Block[17601-17871]"
    }, {
      "left" : "Object jsonObject = loadJsonFile(file);",
      "right" : "Object jsonObject = loadJsonFile(file);",
      "info" : "VariableDeclarationStatement[17619-17658]:VariableDeclarationStatement[17619-17658]"
    }, {
      "left" : "if (jsonObject != null)",
      "right" : "if (jsonObject != null)",
      "info" : "IfStatement[17675-17857]:IfStatement[17675-17857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17699-17760]:Block[17699-17760]"
    }, {
      "left" : "list.add(jsonObject);",
      "right" : "list.add(jsonObject);",
      "info" : "ExpressionStatement[17721-17742]:ExpressionStatement[17721-17742]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17766-17857]:Block[17766-17857]"
    }, {
      "left" : "getLog().warn(\"No object found for file: \" + file);",
      "right" : "getLog().warn(\"No object found for file: \" + file);",
      "info" : "ExpressionStatement[17788-17839]:ExpressionStatement[17788-17839]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17905-17997]:Block[17905-17997]"
    }, {
      "left" : "getLog().warn(\"Failed to parse file \" + file + \". \" + e, e);",
      "right" : "getLog().warn(\"Failed to parse file \" + file + \". \" + e, e);",
      "info" : "ExpressionStatement[17923-17983]:ExpressionStatement[17923-17983]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18014-18085]:Block[18014-18085]"
    }, {
      "left" : "getLog().warn(\"Ignoring missing file \" + file);",
      "right" : "getLog().warn(\"Ignoring missing file \" + file);",
      "info" : "ExpressionStatement[18028-18075]:ExpressionStatement[18028-18075]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18097-18106]:Modifier[18097-18106]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18107-18113]:Modifier[18107-18113]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[18114-18121]:PrimitiveType[18114-18121]"
    }, {
      "left" : "isKubernetesJsonArtifact",
      "right" : "isKubernetesJsonArtifact",
      "info" : "SimpleName[18122-18146]:SimpleName[18122-18146]"
    }, {
      "left" : "String classifier",
      "right" : "String classifier",
      "info" : "SingleVariableDeclaration[18147-18164]:SingleVariableDeclaration[18147-18164]"
    }, {
      "left" : "String type",
      "right" : "String type",
      "info" : "SingleVariableDeclaration[18166-18177]:SingleVariableDeclaration[18166-18177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18179-18273]:Block[18179-18273]"
    }, {
      "left" : "return Objects.equal(\"json\", type) && Objects.equal(\"kubernetes\", classifier);",
      "right" : "return Objects.equal(\"json\", type) && Objects.equal(\"kubernetes\", classifier);",
      "info" : "ReturnStatement[18189-18267]:ReturnStatement[18189-18267]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18279-18288]:Modifier[18279-18288]"
    }, {
      "left" : "Set<Artifact>",
      "right" : "Set<Artifact>",
      "info" : "ParameterizedType[18289-18302]:ParameterizedType[18289-18302]"
    }, {
      "left" : "resolveArtifacts",
      "right" : "resolveArtifacts",
      "info" : "SimpleName[18303-18319]:SimpleName[18303-18319]"
    }, {
      "left" : "Artifact artifact",
      "right" : "Artifact artifact",
      "info" : "SingleVariableDeclaration[18320-18337]:SingleVariableDeclaration[18320-18337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18339-18684]:Block[18339-18684]"
    }, {
      "left" : "ArtifactResolutionRequest request = new ArtifactResolutionRequest();",
      "right" : "ArtifactResolutionRequest request = new ArtifactResolutionRequest();",
      "info" : "VariableDeclarationStatement[18349-18417]:VariableDeclarationStatement[18349-18417]"
    }, {
      "left" : "request.setArtifact(artifact);",
      "right" : "request.setArtifact(artifact);",
      "info" : "ExpressionStatement[18426-18456]:ExpressionStatement[18426-18456]"
    }, {
      "left" : "request.setRemoteRepositories(remoteRepositories);",
      "right" : "request.setRemoteRepositories(remoteRepositories);",
      "info" : "ExpressionStatement[18465-18515]:ExpressionStatement[18465-18515]"
    }, {
      "left" : "request.setLocalRepository(localRepository);",
      "right" : "request.setLocalRepository(localRepository);",
      "info" : "ExpressionStatement[18524-18568]:ExpressionStatement[18524-18568]"
    }, {
      "left" : "ArtifactResolutionResult resolve = resolver.resolve(request);",
      "right" : "ArtifactResolutionResult resolve = resolver.resolve(request);",
      "info" : "VariableDeclarationStatement[18578-18639]:VariableDeclarationStatement[18578-18639]"
    }, {
      "left" : "return resolve.getArtifacts();",
      "right" : "return resolve.getArtifacts();",
      "info" : "ReturnStatement[18648-18678]:ReturnStatement[18648-18678]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[18690-18699]:Modifier[18690-18699]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[18700-18704]:PrimitiveType[18700-18704]"
    }, {
      "left" : "combineJsonFiles",
      "right" : "combineJsonFiles",
      "info" : "SimpleName[18705-18721]:SimpleName[18705-18721]"
    }, {
      "left" : "File json",
      "right" : "File json",
      "info" : "SingleVariableDeclaration[18722-18731]:SingleVariableDeclaration[18722-18731]"
    }, {
      "left" : "File kubernetesExtraJson",
      "right" : "File kubernetesExtraJson",
      "info" : "SingleVariableDeclaration[18733-18757]:SingleVariableDeclaration[18733-18757]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[18766-18788]:SimpleType[18766-18788]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18789-19467]:Block[18789-19467]"
    }, {
      "left" : "getLog().info(\"Combining generated json \" + json + \" with extra json \" + kubernetesExtraJson);",
      "right" : "getLog().info(\"Combining generated json \" + json + \" with extra json \" + kubernetesExtraJson);",
      "info" : "ExpressionStatement[18843-18937]:ExpressionStatement[18843-18937]"
    }, {
      "left" : "Object extra = loadJsonFile(kubernetesExtraJson);",
      "right" : "Object extra = loadJsonFile(kubernetesExtraJson);",
      "info" : "VariableDeclarationStatement[18946-18995]:VariableDeclarationStatement[18946-18995]"
    }, {
      "left" : "Object generated = loadJsonFile(json);",
      "right" : "Object generated = loadJsonFile(json);",
      "info" : "VariableDeclarationStatement[19004-19042]:VariableDeclarationStatement[19004-19042]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[19051-19461]:TryStatement[19051-19461]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19055-19273]:Block[19055-19273]"
    }, {
      "left" : "Object combinedJson = KubernetesHelper.combineJson(generated, extra);",
      "right" : "Object combinedJson = KubernetesHelper.combineJson(generated, extra);",
      "info" : "VariableDeclarationStatement[19069-19138]:VariableDeclarationStatement[19069-19138]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, combinedJson);",
      "right" : "KubernetesHelper.saveJson(json, combinedJson);",
      "info" : "ExpressionStatement[19151-19197]:ExpressionStatement[19151-19197]"
    }, {
      "left" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "right" : "getLog().info(\"Saved as :\" + json.getAbsolutePath());",
      "info" : "ExpressionStatement[19210-19263]:ExpressionStatement[19210-19263]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19296-19461]:Block[19296-19461]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "info" : "ThrowStatement[19310-19451]:ThrowStatement[19310-19451]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19473-19482]:Modifier[19473-19482]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[19483-19487]:PrimitiveType[19483-19487]"
    }, {
      "left" : "wrapInDeploymentConfigs",
      "right" : "wrapInDeploymentConfigs",
      "info" : "SimpleName[19488-19511]:SimpleName[19488-19511]"
    }, {
      "left" : "File json",
      "right" : "File json",
      "info" : "SingleVariableDeclaration[19512-19521]:SingleVariableDeclaration[19512-19521]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[19530-19552]:SimpleType[19530-19552]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19553-20805]:Block[19553-20805]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[19563-20799]:TryStatement[19563-20799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19567-20611]:Block[19567-20611]"
    }, {
      "left" : "Object dto = loadJsonFile(json);",
      "right" : "Object dto = loadJsonFile(json);",
      "info" : "VariableDeclarationStatement[19581-19613]:VariableDeclarationStatement[19581-19613]"
    }, {
      "left" : "if (dto instanceof KubernetesList)",
      "right" : "if (dto instanceof KubernetesList)",
      "info" : "IfStatement[19626-20601]:IfStatement[19626-20601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19661-20065]:Block[19661-20065]"
    }, {
      "left" : "KubernetesList container = (KubernetesList) dto;",
      "right" : "KubernetesList container = (KubernetesList) dto;",
      "info" : "VariableDeclarationStatement[19679-19727]:VariableDeclarationStatement[19679-19727]"
    }, {
      "left" : "List<HasMetadata> items = container.getItems();",
      "right" : "List<HasMetadata> items = container.getItems();",
      "info" : "VariableDeclarationStatement[19744-19791]:VariableDeclarationStatement[19744-19791]"
    }, {
      "left" : "items = wrapInDeploymentConfigs(items);",
      "right" : "items = wrapInDeploymentConfigs(items);",
      "info" : "ExpressionStatement[19808-19847]:ExpressionStatement[19808-19847]"
    }, {
      "left" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "right" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "info" : "ExpressionStatement[19864-19911]:ExpressionStatement[19864-19911]"
    }, {
      "left" : "printSummary(items);",
      "right" : "printSummary(items);",
      "info" : "ExpressionStatement[19928-19948]:ExpressionStatement[19928-19948]"
    }, {
      "left" : "container.setItems(items);",
      "right" : "container.setItems(items);",
      "info" : "ExpressionStatement[19965-19991]:ExpressionStatement[19965-19991]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, container);",
      "right" : "KubernetesHelper.saveJson(json, container);",
      "info" : "ExpressionStatement[20008-20051]:ExpressionStatement[20008-20051]"
    }, {
      "left" : "if (dto instanceof Template)",
      "right" : "if (dto instanceof Template)",
      "info" : "IfStatement[20071-20601]:IfStatement[20071-20601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20100-20601]:Block[20100-20601]"
    }, {
      "left" : "Template container = (Template) dto;",
      "right" : "Template container = (Template) dto;",
      "info" : "VariableDeclarationStatement[20118-20154]:VariableDeclarationStatement[20118-20154]"
    }, {
      "left" : "List<HasMetadata> items = container.getObjects();",
      "right" : "List<HasMetadata> items = container.getObjects();",
      "info" : "VariableDeclarationStatement[20171-20220]:VariableDeclarationStatement[20171-20220]"
    }, {
      "left" : "items = wrapInDeploymentConfigs(items);",
      "right" : "items = wrapInDeploymentConfigs(items);",
      "info" : "ExpressionStatement[20237-20276]:ExpressionStatement[20237-20276]"
    }, {
      "left" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "right" : "getLog().info(\"Wrapped in DeploymentConfigs:\");",
      "info" : "ExpressionStatement[20293-20340]:ExpressionStatement[20293-20340]"
    }, {
      "left" : "printSummary(items);",
      "right" : "printSummary(items);",
      "info" : "ExpressionStatement[20357-20377]:ExpressionStatement[20357-20377]"
    }, {
      "left" : "container.setObjects(items);",
      "right" : "container.setObjects(items);",
      "info" : "ExpressionStatement[20394-20422]:ExpressionStatement[20394-20422]"
    }, {
      "left" : "getLog().info(\"Template is now:\");",
      "right" : "getLog().info(\"Template is now:\");",
      "info" : "ExpressionStatement[20439-20473]:ExpressionStatement[20439-20473]"
    }, {
      "left" : "printSummary(container.getObjects());",
      "right" : "printSummary(container.getObjects());",
      "info" : "ExpressionStatement[20490-20527]:ExpressionStatement[20490-20527]"
    }, {
      "left" : "KubernetesHelper.saveJson(json, container);",
      "right" : "KubernetesHelper.saveJson(json, container);",
      "info" : "ExpressionStatement[20544-20587]:ExpressionStatement[20544-20587]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20634-20799]:Block[20634-20799]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to save combined JSON files \" + json + \" and \" + kubernetesExtraJson + \" as \" + json + \". \" + e, e);",
      "info" : "ThrowStatement[20648-20789]:ThrowStatement[20648-20789]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[20811-20820]:Modifier[20811-20820]"
    }, {
      "left" : "List<HasMetadata>",
      "right" : "List<HasMetadata>",
      "info" : "ParameterizedType[20821-20838]:ParameterizedType[20821-20838]"
    }, {
      "left" : "wrapInDeploymentConfigs",
      "right" : "wrapInDeploymentConfigs",
      "info" : "SimpleName[20839-20862]:SimpleName[20839-20862]"
    }, {
      "left" : "List<HasMetadata> items",
      "right" : "List<HasMetadata> items",
      "info" : "SingleVariableDeclaration[20863-20886]:SingleVariableDeclaration[20863-20886]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20888-21313]:Block[20888-21313]"
    }, {
      "left" : "List<HasMetadata> answer = new ArrayList<>();",
      "right" : "List<HasMetadata> answer = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[20898-20943]:VariableDeclarationStatement[20898-20943]"
    }, {
      "left" : "for (HasMetadata item : items)",
      "right" : "for (HasMetadata item : items)",
      "info" : "EnhancedForStatement[20952-21284]:EnhancedForStatement[20952-21284]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20983-21284]:Block[20983-21284]"
    }, {
      "left" : "if (item instanceof ReplicationController)",
      "right" : "if (item instanceof ReplicationController)",
      "info" : "IfStatement[20997-21274]:IfStatement[20997-21274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21040-21219]:Block[21040-21219]"
    }, {
      "left" : "ReplicationController replicationController = (ReplicationController) item;",
      "right" : "ReplicationController replicationController = (ReplicationController) item;",
      "info" : "VariableDeclarationStatement[21058-21133]:VariableDeclarationStatement[21058-21133]"
    }, {
      "left" : "wrapInDeploymentConfigs(answer, replicationController);",
      "right" : "wrapInDeploymentConfigs(answer, replicationController);",
      "info" : "ExpressionStatement[21150-21205]:ExpressionStatement[21150-21205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21225-21274]:Block[21225-21274]"
    }, {
      "left" : "answer.add(item);",
      "right" : "answer.add(item);",
      "info" : "ExpressionStatement[21243-21260]:ExpressionStatement[21243-21260]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[21293-21307]:ReturnStatement[21293-21307]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[21494-21503]:Modifier[21494-21503]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[21504-21508]:PrimitiveType[21504-21508]"
    }, {
      "left" : "wrapInDeploymentConfigs",
      "right" : "wrapInDeploymentConfigs",
      "info" : "SimpleName[21509-21532]:SimpleName[21509-21532]"
    }, {
      "left" : "List<HasMetadata> list",
      "right" : "List<HasMetadata> list",
      "info" : "SingleVariableDeclaration[21533-21555]:SingleVariableDeclaration[21533-21555]"
    }, {
      "left" : "ReplicationController replicationController",
      "right" : "ReplicationController replicationController",
      "info" : "SingleVariableDeclaration[21557-21600]:SingleVariableDeclaration[21557-21600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21602-24077]:Block[21602-24077]"
    }, {
      "left" : "DeploymentConfigBuilder builder = new DeploymentConfigBuilder();",
      "right" : "DeploymentConfigBuilder builder = new DeploymentConfigBuilder();",
      "info" : "VariableDeclarationStatement[21612-21676]:VariableDeclarationStatement[21612-21676]"
    }, {
      "left" : "String name = getName(replicationController);",
      "right" : "String name = getName(replicationController);",
      "info" : "VariableDeclarationStatement[21686-21731]:VariableDeclarationStatement[21686-21731]"
    }, {
      "left" : "if (Strings.isNotBlank(name))",
      "right" : "if (Strings.isNotBlank(name))",
      "info" : "IfStatement[21740-21842]:IfStatement[21740-21842]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21770-21842]:Block[21770-21842]"
    }, {
      "left" : "name = Strings.stripSuffix(name, \"-controller\");",
      "right" : "name = Strings.stripSuffix(name, \"-controller\");",
      "info" : "ExpressionStatement[21784-21832]:ExpressionStatement[21784-21832]"
    }, {
      "left" : "if (Strings.isNullOrBlank(name))",
      "right" : "if (Strings.isNullOrBlank(name))",
      "info" : "IfStatement[21851-21944]:IfStatement[21851-21944]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21884-21944]:Block[21884-21944]"
    }, {
      "left" : "name = getProject().getArtifactId();",
      "right" : "name = getProject().getArtifactId();",
      "info" : "ExpressionStatement[21898-21934]:ExpressionStatement[21898-21934]"
    }, {
      "left" : "String deploymentName = name;",
      "right" : "String deploymentName = name;",
      "info" : "VariableDeclarationStatement[21953-21982]:VariableDeclarationStatement[21953-21982]"
    }, {
      "left" : "String imageStream = name;",
      "right" : "String imageStream = name;",
      "info" : "VariableDeclarationStatement[21991-22017]:VariableDeclarationStatement[21991-22017]"
    }, {
      "left" : "Map<String, String> labels = KubernetesHelper.getLabels(replicationController);",
      "right" : "Map<String, String> labels = KubernetesHelper.getLabels(replicationController);",
      "info" : "VariableDeclarationStatement[22028-22107]:VariableDeclarationStatement[22028-22107]"
    }, {
      "left" : "builder = builder.withNewMetadata().withName(deploymentName).withLabels(labels).endMetadata();",
      "right" : "builder = builder.withNewMetadata().withName(deploymentName).withLabels(labels).endMetadata();",
      "info" : "ExpressionStatement[22116-22210]:ExpressionStatement[22116-22210]"
    }, {
      "left" : "ReplicationControllerSpec spec = replicationController.getSpec();",
      "right" : "ReplicationControllerSpec spec = replicationController.getSpec();",
      "info" : "VariableDeclarationStatement[22220-22285]:VariableDeclarationStatement[22220-22285]"
    }, {
      "left" : "if (spec != null)",
      "right" : "if (spec != null)",
      "info" : "IfStatement[22294-23994]:IfStatement[22294-23994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22312-23994]:Block[22312-23994]"
    }, {
      "left" : "List<String> containerNames = new ArrayList<>();",
      "right" : "List<String> containerNames = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[22326-22374]:VariableDeclarationStatement[22326-22374]"
    }, {
      "left" : "PodTemplateSpec podTemplateSpec = spec.getTemplate();",
      "right" : "PodTemplateSpec podTemplateSpec = spec.getTemplate();",
      "info" : "VariableDeclarationStatement[22387-22440]:VariableDeclarationStatement[22387-22440]"
    }, {
      "left" : "if (podTemplateSpec != null)",
      "right" : "if (podTemplateSpec != null)",
      "info" : "IfStatement[22453-23086]:IfStatement[22453-23086]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22482-23086]:Block[22482-23086]"
    }, {
      "left" : "PodSpec podSpec = podTemplateSpec.getSpec();",
      "right" : "PodSpec podSpec = podTemplateSpec.getSpec();",
      "info" : "VariableDeclarationStatement[22500-22544]:VariableDeclarationStatement[22500-22544]"
    }, {
      "left" : "if (podSpec != null)",
      "right" : "if (podSpec != null)",
      "info" : "IfStatement[22561-23072]:IfStatement[22561-23072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22582-23072]:Block[22582-23072]"
    }, {
      "left" : "List<Container> containers = podSpec.getContainers();",
      "right" : "List<Container> containers = podSpec.getContainers();",
      "info" : "VariableDeclarationStatement[22604-22657]:VariableDeclarationStatement[22604-22657]"
    }, {
      "left" : "if (containers != null)",
      "right" : "if (containers != null)",
      "info" : "IfStatement[22678-23054]:IfStatement[22678-23054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22702-23054]:Block[22702-23054]"
    }, {
      "left" : "for (Container container : containers)",
      "right" : "for (Container container : containers)",
      "info" : "EnhancedForStatement[22728-23032]:EnhancedForStatement[22728-23032]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22767-23032]:Block[22767-23032]"
    }, {
      "left" : "String containerName = container.getName();",
      "right" : "String containerName = container.getName();",
      "info" : "VariableDeclarationStatement[22797-22840]:VariableDeclarationStatement[22797-22840]"
    }, {
      "left" : "if (Strings.isNotBlank(containerName))",
      "right" : "if (Strings.isNotBlank(containerName))",
      "info" : "IfStatement[22869-23006]:IfStatement[22869-23006]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22908-23006]:Block[22908-23006]"
    }, {
      "left" : "containerNames.add(containerName);",
      "right" : "containerNames.add(containerName);",
      "info" : "ExpressionStatement[22942-22976]:ExpressionStatement[22942-22976]"
    }, {
      "left" : "getOrAddImageStream(list, imageStream, labels);",
      "right" : "getOrAddImageStream(list, imageStream, labels);",
      "info" : "ExpressionStatement[23099-23146]:ExpressionStatement[23099-23146]"
    }, {
      "left" : "builder = builder.withNewSpec().\n                    withTemplate(podTemplateSpec).withReplicas(spec.getReplicas()).withSelector(spec.getSelector()).\n                    withNewStrategy().\n                        withType(deploymentStrategy).\n                        endStrategy().\n                    addNewTrigger().\n                        withType(\"ImageChange\").\n                        withNewImageChangeParams().\n                            withAutomatic(true).\n                            withContainerNames(containerNames).\n                            withNewFrom().withName(imageStream + \":\" + lastTriggeredImageTag).endFrom().\n                            withLastTriggeredImage(lastTriggeredImageTag).\n                        endImageChangeParams().\n                    endTrigger().\n                    endSpec();",
      "right" : "builder = builder.withNewSpec().\n                    withTemplate(podTemplateSpec).withReplicas(spec.getReplicas()).withSelector(spec.getSelector()).\n                    withNewStrategy().\n                        withType(deploymentStrategy).\n                        endStrategy().\n                    addNewTrigger().\n                        withType(\"ImageChange\").\n                        withNewImageChangeParams().\n                            withAutomatic(true).\n                            withContainerNames(containerNames).\n                            withNewFrom().withName(imageStream + \":\" + lastTriggeredImageTag).endFrom().\n                            withLastTriggeredImage(lastTriggeredImageTag).\n                        endImageChangeParams().\n                    endTrigger().\n                    endSpec();",
      "info" : "ExpressionStatement[23159-23984]:ExpressionStatement[23159-23984]"
    }, {
      "left" : "DeploymentConfig config = builder.build();",
      "right" : "DeploymentConfig config = builder.build();",
      "info" : "VariableDeclarationStatement[24003-24045]:VariableDeclarationStatement[24003-24045]"
    }, {
      "left" : "list.add(config);",
      "right" : "list.add(config);",
      "info" : "ExpressionStatement[24054-24071]:ExpressionStatement[24054-24071]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24083-24092]:Modifier[24083-24092]"
    }, {
      "left" : "ImageStream",
      "right" : "ImageStream",
      "info" : "SimpleType[24093-24104]:SimpleType[24093-24104]"
    }, {
      "left" : "getOrAddImageStream",
      "right" : "getOrAddImageStream",
      "info" : "SimpleName[24105-24124]:SimpleName[24105-24124]"
    }, {
      "left" : "List<HasMetadata> list",
      "right" : "List<HasMetadata> list",
      "info" : "SingleVariableDeclaration[24125-24147]:SingleVariableDeclaration[24125-24147]"
    }, {
      "left" : "String imageStreamName",
      "right" : "String imageStreamName",
      "info" : "SingleVariableDeclaration[24149-24171]:SingleVariableDeclaration[24149-24171]"
    }, {
      "left" : "Map<String, String> labels",
      "right" : "Map<String, String> labels",
      "info" : "SingleVariableDeclaration[24173-24199]:SingleVariableDeclaration[24173-24199]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24201-24704]:Block[24201-24704]"
    }, {
      "left" : "for (HasMetadata item : list)",
      "right" : "for (HasMetadata item : list)",
      "info" : "EnhancedForStatement[24211-24494]:EnhancedForStatement[24211-24494]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24241-24494]:Block[24241-24494]"
    }, {
      "left" : "if (item instanceof ImageStream)",
      "right" : "if (item instanceof ImageStream)",
      "info" : "IfStatement[24255-24484]:IfStatement[24255-24484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24288-24484]:Block[24288-24484]"
    }, {
      "left" : "ImageStream stream = (ImageStream) item;",
      "right" : "ImageStream stream = (ImageStream) item;",
      "info" : "VariableDeclarationStatement[24306-24346]:VariableDeclarationStatement[24306-24346]"
    }, {
      "left" : "if (Objects.equal(imageStreamName, getName(stream)))",
      "right" : "if (Objects.equal(imageStreamName, getName(stream)))",
      "info" : "IfStatement[24363-24470]:IfStatement[24363-24470]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24416-24470]:Block[24416-24470]"
    }, {
      "left" : "return stream;",
      "right" : "return stream;",
      "info" : "ReturnStatement[24438-24452]:ReturnStatement[24438-24452]"
    }, {
      "left" : "ImageStream imageStream = new ImageStreamBuilder().withNewMetadata().withName(imageStreamName).withLabels(labels).endMetadata().build();",
      "right" : "ImageStream imageStream = new ImageStreamBuilder().withNewMetadata().withName(imageStreamName).withLabels(labels).endMetadata().build();",
      "info" : "VariableDeclarationStatement[24503-24639]:VariableDeclarationStatement[24503-24639]"
    }, {
      "left" : "list.add(imageStream);",
      "right" : "list.add(imageStream);",
      "info" : "ExpressionStatement[24648-24670]:ExpressionStatement[24648-24670]"
    }, {
      "left" : "return imageStream;",
      "right" : "return imageStream;",
      "info" : "ReturnStatement[24679-24698]:ReturnStatement[24679-24698]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[24710-24719]:Modifier[24710-24719]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[24720-24726]:Modifier[24720-24726]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[24727-24733]:SimpleType[24727-24733]"
    }, {
      "left" : "loadJsonFile",
      "right" : "loadJsonFile",
      "info" : "SimpleName[24734-24746]:SimpleName[24734-24746]"
    }, {
      "left" : "File file",
      "right" : "File file",
      "info" : "SingleVariableDeclaration[24747-24756]:SingleVariableDeclaration[24747-24756]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[24765-24787]:SimpleType[24765-24787]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24788-24997]:Block[24788-24997]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[24798-24991]:TryStatement[24798-24991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24802-24865]:Block[24802-24865]"
    }, {
      "left" : "return KubernetesHelper.loadJson(file);",
      "right" : "return KubernetesHelper.loadJson(file);",
      "info" : "ReturnStatement[24816-24855]:ReturnStatement[24816-24855]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24888-24991]:Block[24888-24991]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to parse JSON \" + file + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to parse JSON \" + file + \". \" + e, e);",
      "info" : "ThrowStatement[24902-24981]:ThrowStatement[24902-24981]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[25003-25012]:Modifier[25003-25012]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[25013-25017]:PrimitiveType[25013-25017]"
    }, {
      "left" : "generateKubernetesJson",
      "right" : "generateKubernetesJson",
      "info" : "SimpleName[25018-25040]:SimpleName[25018-25040]"
    }, {
      "left" : "File kubernetesJson",
      "right" : "File kubernetesJson",
      "info" : "SingleVariableDeclaration[25041-25060]:SingleVariableDeclaration[25041-25060]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[25069-25091]:SimpleType[25069-25091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25092-29105]:Block[25092-29162]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[25152-25188]:VariableDeclarationStatement[25152-25188]"
    }, {
      "left" : "Map<String, String> labelMap = getLabels();",
      "right" : "Map<String, String> labelMap = getLabels();",
      "info" : "VariableDeclarationStatement[25197-25240]:VariableDeclarationStatement[25197-25240]"
    }, {
      "left" : "String name = getKubernetesName();",
      "right" : "String name = getKubernetesName();",
      "info" : "VariableDeclarationStatement[25249-25283]:VariableDeclarationStatement[25249-25283]"
    }, {
      "left" : "if (labelMap.isEmpty() && Strings.isNotBlank(name))",
      "right" : "if (labelMap.isEmpty() && Strings.isNotBlank(name))",
      "info" : "IfStatement[25292-25440]:IfStatement[25292-25440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25344-25440]:Block[25344-25440]"
    }, {
      "left" : "labelMap.put(\"component\", name);",
      "right" : "labelMap.put(\"component\", name);",
      "info" : "ExpressionStatement[25398-25430]:ExpressionStatement[25398-25430]"
    }, {
      "left" : "if (!labelMap.containsKey(\"provider\") && Strings.isNotBlank(provider))",
      "right" : "if (!labelMap.containsKey(\"provider\") && Strings.isNotBlank(provider))",
      "info" : "IfStatement[25449-25579]:IfStatement[25449-25579]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[25520-25579]:Block[25520-25579]"
    }, {
      "left" : "labelMap.put(\"provider\", provider);",
      "right" : "labelMap.put(\"provider\", provider);",
      "info" : "ExpressionStatement[25534-25569]:ExpressionStatement[25534-25569]"
    }, {
      "left" : "KubernetesListBuilder builder = new KubernetesListBuilder()\n                .addNewReplicationControllerItem()\n                .withNewMetadata()\n                .withName(KubernetesHelper.validateKubernetesId(replicationControllerName, \"fabric8.replicationController.name\"))\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withReplicas(replicaCount)\n                .withSelector(labelMap)\n                .withNewTemplate()\n                .withNewMetadata()\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withServiceAccount(serviceAccount)\n                .addNewContainer()\n                .withName(getKubernetesContainerName())\n                .withImage(getDockerImage())\n                .withImagePullPolicy(getImagePullPolicy())\n                .withEnv(getEnvironmentVariables())\n                .withPrivileged(getContainerPrivileged())\n                .withPorts(getContainerPorts())\n                .withVolumeMounts(getVolumeMounts())\n                .withLivenessProbe(getLivenessProbe())\n                .endContainer()\n                .withVolumes(getVolumes())\n                .endSpec()\n                .endTemplate()\n                .endSpec()\n                .endReplicationControllerItem();",
      "right" : "KubernetesListBuilder builder = new KubernetesListBuilder()\n                .addNewReplicationControllerItem()\n                .withNewMetadata()\n                .withName(KubernetesHelper.validateKubernetesId(replicationControllerName, \"fabric8.replicationController.name\"))\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withReplicas(replicaCount)\n                .withSelector(labelMap)\n                .withNewTemplate()\n                .withNewMetadata()\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withServiceAccount(serviceAccount)\n                .addNewContainer()\n                .withName(getKubernetesContainerName())\n                .withImage(getDockerImage())\n                .withImagePullPolicy(getImagePullPolicy())\n                .withEnv(getEnvironmentVariables())\n                .withPrivileged(getContainerPrivileged())\n                .withPorts(getContainerPorts())\n                .withVolumeMounts(getVolumeMounts())\n                .withLivenessProbe(getLivenessProbe())\n                .withReadinessProbe(getReadinessProbe())\n                .endContainer()\n                .withVolumes(getVolumes())\n                .endSpec()\n                .endTemplate()\n                .endSpec()\n                .endReplicationControllerItem();",
      "info" : "VariableDeclarationStatement[25589-26940]:VariableDeclarationStatement[25589-26997]"
    }, {
      "left" : "new KubernetesListBuilder()\n                .addNewReplicationControllerItem()\n                .withNewMetadata()\n                .withName(KubernetesHelper.validateKubernetesId(replicationControllerName, \"fabric8.replicationController.name\"))\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withReplicas(replicaCount)\n                .withSelector(labelMap)\n                .withNewTemplate()\n                .withNewMetadata()\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withServiceAccount(serviceAccount)\n                .addNewContainer()\n                .withName(getKubernetesContainerName())\n                .withImage(getDockerImage())\n                .withImagePullPolicy(getImagePullPolicy())\n                .withEnv(getEnvironmentVariables())\n                .withPrivileged(getContainerPrivileged())\n                .withPorts(getContainerPorts())\n                .withVolumeMounts(getVolumeMounts())\n                .withLivenessProbe(getLivenessProbe())\n                .endContainer()\n                .withVolumes(getVolumes())\n                .endSpec()\n                .endTemplate()\n                .endSpec()\n                .endReplicationControllerItem()",
      "right" : "new KubernetesListBuilder()\n                .addNewReplicationControllerItem()\n                .withNewMetadata()\n                .withName(KubernetesHelper.validateKubernetesId(replicationControllerName, \"fabric8.replicationController.name\"))\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withReplicas(replicaCount)\n                .withSelector(labelMap)\n                .withNewTemplate()\n                .withNewMetadata()\n                .withLabels(labelMap)\n                .endMetadata()\n                .withNewSpec()\n                .withServiceAccount(serviceAccount)\n                .addNewContainer()\n                .withName(getKubernetesContainerName())\n                .withImage(getDockerImage())\n                .withImagePullPolicy(getImagePullPolicy())\n                .withEnv(getEnvironmentVariables())\n                .withPrivileged(getContainerPrivileged())\n                .withPorts(getContainerPorts())\n                .withVolumeMounts(getVolumeMounts())\n                .withLivenessProbe(getLivenessProbe())\n                .withReadinessProbe(getReadinessProbe())\n                .endContainer()\n                .withVolumes(getVolumes())\n                .endSpec()\n                .endTemplate()\n                .endSpec()",
      "info" : "MethodInvocation[25621-26939]:MethodInvocation[25621-26948]"
    }, {
      "left" : "endContainer",
      "right" : "withReadinessProbe",
      "info" : "SimpleName[26749-26761]:SimpleName[26749-26767]"
    }, {
      "left" : "withVolumes",
      "right" : "endContainer",
      "info" : "SimpleName[26781-26792]:SimpleName[26806-26818]"
    }, {
      "left" : "getVolumes()",
      "right" : "getVolumes()",
      "info" : "METHOD_INVOCATION_ARGUMENTS[26793-26805]:METHOD_INVOCATION_ARGUMENTS[26850-26862]"
    }, {
      "left" : "endSpec",
      "right" : "withVolumes",
      "info" : "SimpleName[26824-26831]:SimpleName[26838-26849]"
    }, {
      "left" : "endTemplate",
      "right" : "endSpec",
      "info" : "SimpleName[26851-26862]:SimpleName[26881-26888]"
    }, {
      "left" : "endSpec",
      "right" : "endTemplate",
      "info" : "SimpleName[26882-26889]:SimpleName[26908-26919]"
    }, {
      "left" : "endReplicationControllerItem",
      "right" : "endSpec",
      "info" : "SimpleName[26909-26937]:SimpleName[26939-26946]"
    }, {
      "left" : "if (serviceName != null)",
      "right" : "if (serviceName != null)",
      "info" : "IfStatement[27013-27992]:IfStatement[27070-28049]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27038-27992]:Block[27095-28049]"
    }, {
      "left" : "ServiceBuilder serviceBuilder = new ServiceBuilder()\n                    .withNewMetadata()\n                    .withName(serviceName)\n                    .withLabels(labelMap)\n                    .endMetadata();",
      "right" : "ServiceBuilder serviceBuilder = new ServiceBuilder()\n                    .withNewMetadata()\n                    .withName(serviceName)\n                    .withLabels(labelMap)\n                    .endMetadata();",
      "info" : "VariableDeclarationStatement[27052-27264]:VariableDeclarationStatement[27109-27321]"
    }, {
      "left" : "ServiceFluent<ServiceBuilder>.SpecNested<ServiceBuilder> serviceSpecBuilder = serviceBuilder.withNewSpec().withSelector(labelMap);",
      "right" : "ServiceFluent<ServiceBuilder>.SpecNested<ServiceBuilder> serviceSpecBuilder = serviceBuilder.withNewSpec().withSelector(labelMap);",
      "info" : "VariableDeclarationStatement[27278-27408]:VariableDeclarationStatement[27335-27465]"
    }, {
      "left" : "List<ServicePort> servicePorts = getServicePorts();",
      "right" : "List<ServicePort> servicePorts = getServicePorts();",
      "info" : "VariableDeclarationStatement[27422-27473]:VariableDeclarationStatement[27479-27530]"
    }, {
      "left" : "System.out.println(\"Generated ports: \" + servicePorts);",
      "right" : "System.out.println(\"Generated ports: \" + servicePorts);",
      "info" : "ExpressionStatement[27486-27541]:ExpressionStatement[27543-27598]"
    }, {
      "left" : "boolean hasPorts = servicePorts != null & !servicePorts.isEmpty();",
      "right" : "boolean hasPorts = servicePorts != null & !servicePorts.isEmpty();",
      "info" : "VariableDeclarationStatement[27554-27620]:VariableDeclarationStatement[27611-27677]"
    }, {
      "left" : "if (hasPorts)",
      "right" : "if (hasPorts)",
      "info" : "IfStatement[27633-27800]:IfStatement[27690-27857]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27647-27722]:Block[27704-27779]"
    }, {
      "left" : "serviceSpecBuilder.withPorts(servicePorts);",
      "right" : "serviceSpecBuilder.withPorts(servicePorts);",
      "info" : "ExpressionStatement[27665-27708]:ExpressionStatement[27722-27765]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27728-27800]:Block[27785-27857]"
    }, {
      "left" : "serviceSpecBuilder.withPortalIP(\"None\");",
      "right" : "serviceSpecBuilder.withPortalIP(\"None\");",
      "info" : "ExpressionStatement[27746-27786]:ExpressionStatement[27803-27843]"
    }, {
      "left" : "serviceSpecBuilder.endSpec();",
      "right" : "serviceSpecBuilder.endSpec();",
      "info" : "ExpressionStatement[27813-27842]:ExpressionStatement[27870-27899]"
    }, {
      "left" : "if (headlessServices || hasPorts)",
      "right" : "if (headlessServices || hasPorts)",
      "info" : "IfStatement[27856-27982]:IfStatement[27913-28039]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[27890-27982]:Block[27947-28039]"
    }, {
      "left" : "builder = builder.addToServiceItems(serviceBuilder.build());",
      "right" : "builder = builder.addToServiceItems(serviceBuilder.build());",
      "info" : "ExpressionStatement[27908-27968]:ExpressionStatement[27965-28025]"
    }, {
      "left" : "Template template = getTemplate();",
      "right" : "Template template = getTemplate();",
      "info" : "VariableDeclarationStatement[28002-28036]:VariableDeclarationStatement[28059-28093]"
    }, {
      "left" : "String iconUrl = getIconUrl();",
      "right" : "String iconUrl = getIconUrl();",
      "info" : "VariableDeclarationStatement[28045-28075]:VariableDeclarationStatement[28102-28132]"
    }, {
      "left" : "boolean hasUrl = Strings.isNotBlank(iconUrl);",
      "right" : "boolean hasUrl = Strings.isNotBlank(iconUrl);",
      "info" : "VariableDeclarationStatement[28084-28129]:VariableDeclarationStatement[28141-28186]"
    }, {
      "left" : "if (!template.getParameters().isEmpty() || hasUrl)",
      "right" : "if (!template.getParameters().isEmpty() || hasUrl)",
      "info" : "IfStatement[28138-28555]:IfStatement[28195-28612]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28189-28555]:Block[28246-28612]"
    }, {
      "left" : "Map<String, String> annotations = KubernetesHelper.getOrCreateAnnotations(template);",
      "right" : "Map<String, String> annotations = KubernetesHelper.getOrCreateAnnotations(template);",
      "info" : "VariableDeclarationStatement[28203-28287]:VariableDeclarationStatement[28260-28344]"
    }, {
      "left" : "addDocumentationAnnotations(template, annotations);",
      "right" : "addDocumentationAnnotations(template, annotations);",
      "info" : "ExpressionStatement[28300-28351]:ExpressionStatement[28357-28408]"
    }, {
      "left" : "if (hasUrl)",
      "right" : "if (hasUrl)",
      "info" : "IfStatement[28364-28484]:IfStatement[28421-28541]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28376-28484]:Block[28433-28541]"
    }, {
      "left" : "annotations.put(getTemplateKey(template, AnnotationKeys.ICON_URL), iconUrl);",
      "right" : "annotations.put(getTemplateKey(template, AnnotationKeys.ICON_URL), iconUrl);",
      "info" : "ExpressionStatement[28394-28470]:ExpressionStatement[28451-28527]"
    }, {
      "left" : "builder = builder.addToTemplateItems(template);",
      "right" : "builder = builder.addToTemplateItems(template);",
      "info" : "ExpressionStatement[28498-28545]:ExpressionStatement[28555-28602]"
    }, {
      "left" : "KubernetesList kubernetesList = builder.build();",
      "right" : "KubernetesList kubernetesList = builder.build();",
      "info" : "VariableDeclarationStatement[28565-28613]:VariableDeclarationStatement[28622-28670]"
    }, {
      "left" : "Object result = Templates.combineTemplates(kubernetesList);",
      "right" : "Object result = Templates.combineTemplates(kubernetesList);",
      "info" : "VariableDeclarationStatement[28623-28682]:VariableDeclarationStatement[28680-28739]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[28692-29099]:TryStatement[28749-29156]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28696-28975]:Block[28753-29032]"
    }, {
      "left" : "ObjectMapper mapper = new ObjectMapper()\n                    .enable(SerializationFeature.INDENT_OUTPUT);",
      "right" : "ObjectMapper mapper = new ObjectMapper()\n                    .enable(SerializationFeature.INDENT_OUTPUT);",
      "info" : "VariableDeclarationStatement[28710-28815]:VariableDeclarationStatement[28767-28872]"
    }, {
      "left" : "String generated = mapper.writeValueAsString(result);",
      "right" : "String generated = mapper.writeValueAsString(result);",
      "info" : "VariableDeclarationStatement[28828-28881]:VariableDeclarationStatement[28885-28938]"
    }, {
      "left" : "Files.writeToFile(kubernetesJson, generated, Charset.defaultCharset());",
      "right" : "Files.writeToFile(kubernetesJson, generated, Charset.defaultCharset());",
      "info" : "ExpressionStatement[28894-28965]:ExpressionStatement[28951-29022]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[28998-29099]:Block[29055-29156]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to generate Kubernetes JSON.\", e);",
      "right" : "throw new IllegalArgumentException(\"Failed to generate Kubernetes JSON.\", e);",
      "info" : "ThrowStatement[29012-29089]:ThrowStatement[29069-29146]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29111-29120]:Modifier[29168-29177]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[29121-29127]:SimpleType[29178-29184]"
    }, {
      "left" : "getTemplateKey",
      "right" : "getTemplateKey",
      "info" : "SimpleName[29128-29142]:SimpleName[29185-29199]"
    }, {
      "left" : "Template template",
      "right" : "Template template",
      "info" : "SingleVariableDeclaration[29143-29160]:SingleVariableDeclaration[29200-29217]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[29162-29172]:SingleVariableDeclaration[29219-29229]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29174-29381]:Block[29231-29438]"
    }, {
      "left" : "String name = getName(template);",
      "right" : "String name = getName(template);",
      "info" : "VariableDeclarationStatement[29184-29216]:VariableDeclarationStatement[29241-29273]"
    }, {
      "left" : "if (Strings.isNullOrBlank(name))",
      "right" : "if (Strings.isNullOrBlank(name))",
      "info" : "IfStatement[29225-29318]:IfStatement[29282-29375]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29258-29318]:Block[29315-29375]"
    }, {
      "left" : "name = getProject().getArtifactId();",
      "right" : "name = getProject().getArtifactId();",
      "info" : "ExpressionStatement[29272-29308]:ExpressionStatement[29329-29365]"
    }, {
      "left" : "return AnnotationKeys.PREFIX + name + \"/\" + key;",
      "right" : "return AnnotationKeys.PREFIX + name + \"/\" + key;",
      "info" : "ReturnStatement[29327-29375]:ReturnStatement[29384-29432]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[29387-29396]:Modifier[29444-29453]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[29397-29401]:PrimitiveType[29454-29458]"
    }, {
      "left" : "addDocumentationAnnotations",
      "right" : "addDocumentationAnnotations",
      "info" : "SimpleName[29402-29429]:SimpleName[29459-29486]"
    }, {
      "left" : "Template template",
      "right" : "Template template",
      "info" : "SingleVariableDeclaration[29430-29447]:SingleVariableDeclaration[29487-29504]"
    }, {
      "left" : "Map<String, String> annotations",
      "right" : "Map<String, String> annotations",
      "info" : "SingleVariableDeclaration[29449-29480]:SingleVariableDeclaration[29506-29537]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29482-30550]:Block[29539-30607]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[29538-29742]:TryStatement[29595-29799]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29542-29640]:Block[29599-29697]"
    }, {
      "left" : "copySummaryText(templateTempDir);",
      "right" : "copySummaryText(templateTempDir);",
      "info" : "ExpressionStatement[29556-29589]:ExpressionStatement[29613-29646]"
    }, {
      "left" : "copyReadMe(templateTempDir);",
      "right" : "copyReadMe(templateTempDir);",
      "info" : "ExpressionStatement[29602-29630]:ExpressionStatement[29659-29687]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29663-29742]:Block[29720-29799]"
    }, {
      "left" : "getLog().warn(\"Failed to copy documentation: \" + e, e);",
      "right" : "getLog().warn(\"Failed to copy documentation: \" + e, e);",
      "info" : "ExpressionStatement[29677-29732]:ExpressionStatement[29734-29789]"
    }, {
      "left" : "File summary = new File(templateTempDir, \"Summary.md\");",
      "right" : "File summary = new File(templateTempDir, \"Summary.md\");",
      "info" : "VariableDeclarationStatement[29752-29807]:VariableDeclarationStatement[29809-29864]"
    }, {
      "left" : "if (summary.exists() && summary.isFile())",
      "right" : "if (summary.exists() && summary.isFile())",
      "info" : "IfStatement[29816-30157]:IfStatement[29873-30214]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29858-30157]:Block[29915-30214]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[29872-30147]:TryStatement[29929-30204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[29876-30035]:Block[29933-30092]"
    }, {
      "left" : "String text = Files.toString(summary);",
      "right" : "String text = Files.toString(summary);",
      "info" : "VariableDeclarationStatement[29894-29932]:VariableDeclarationStatement[29951-29989]"
    }, {
      "left" : "annotations.put(getTemplateKey(template, AnnotationKeys.SUMMARY), text);",
      "right" : "annotations.put(getTemplateKey(template, AnnotationKeys.SUMMARY), text);",
      "info" : "ExpressionStatement[29949-30021]:ExpressionStatement[30006-30078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30058-30147]:Block[30115-30204]"
    }, {
      "left" : "getLog().warn(\"Failed to load \" + summary + \". \" + e, e);",
      "right" : "getLog().warn(\"Failed to load \" + summary + \". \" + e, e);",
      "info" : "ExpressionStatement[30076-30133]:ExpressionStatement[30133-30190]"
    }, {
      "left" : "File readme = new File(templateTempDir, \"ReadMe.md\");",
      "right" : "File readme = new File(templateTempDir, \"ReadMe.md\");",
      "info" : "VariableDeclarationStatement[30167-30220]:VariableDeclarationStatement[30224-30277]"
    }, {
      "left" : "if (readme.exists() && readme.isFile())",
      "right" : "if (readme.exists() && readme.isFile())",
      "info" : "IfStatement[30229-30544]:IfStatement[30286-30601]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30269-30544]:Block[30326-30601]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[30283-30534]:TryStatement[30340-30591]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30287-30423]:Block[30344-30480]"
    }, {
      "left" : "String text = Files.toString(readme);",
      "right" : "String text = Files.toString(readme);",
      "info" : "VariableDeclarationStatement[30305-30342]:VariableDeclarationStatement[30362-30399]"
    }, {
      "left" : "annotations.put(AnnotationKeys.DESCRIPTION, text);",
      "right" : "annotations.put(AnnotationKeys.DESCRIPTION, text);",
      "info" : "ExpressionStatement[30359-30409]:ExpressionStatement[30416-30466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30446-30534]:Block[30503-30591]"
    }, {
      "left" : "getLog().warn(\"Failed to load \" + readme + \". \" + e, e);",
      "right" : "getLog().warn(\"Failed to load \" + readme + \". \" + e, e);",
      "info" : "ExpressionStatement[30464-30520]:ExpressionStatement[30521-30577]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[30776-30785]:Modifier[30833-30842]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[30786-30792]:SimpleType[30843-30849]"
    }, {
      "left" : "getIconUrl",
      "right" : "getIconUrl",
      "info" : "SimpleName[30793-30803]:SimpleName[30850-30860]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30806-32112]:Block[30863-32169]"
    }, {
      "left" : "String answer = iconUrl;",
      "right" : "String answer = iconUrl;",
      "info" : "VariableDeclarationStatement[30816-30840]:VariableDeclarationStatement[30873-30897]"
    }, {
      "left" : "if (Strings.isNullOrBlank(answer))",
      "right" : "if (Strings.isNullOrBlank(answer))",
      "info" : "IfStatement[30849-31892]:IfStatement[30906-31949]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30884-31892]:Block[30941-31949]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[30898-31882]:TryStatement[30955-31939]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30902-31778]:Block[30959-31835]"
    }, {
      "left" : "if (templateTempDir != null)",
      "right" : "if (templateTempDir != null)",
      "info" : "IfStatement[30920-31764]:IfStatement[30977-31821]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[30949-31764]:Block[31006-31821]"
    }, {
      "left" : "templateTempDir.mkdirs();",
      "right" : "templateTempDir.mkdirs();",
      "info" : "ExpressionStatement[30971-30996]:ExpressionStatement[31028-31053]"
    }, {
      "left" : "File iconFile = copyIconToFolder(templateTempDir);",
      "right" : "File iconFile = copyIconToFolder(templateTempDir);",
      "info" : "VariableDeclarationStatement[31017-31067]:VariableDeclarationStatement[31074-31124]"
    }, {
      "left" : "if (iconFile == null)",
      "right" : "if (iconFile == null)",
      "info" : "IfStatement[31088-31615]:IfStatement[31145-31672]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31110-31615]:Block[31167-31672]"
    }, {
      "left" : "copyAppConfigFiles(templateTempDir, appConfigDir);",
      "right" : "copyAppConfigFiles(templateTempDir, appConfigDir);",
      "info" : "ExpressionStatement[31136-31186]:ExpressionStatement[31193-31243]"
    }, {
      "left" : "for (String ext : ICON_EXTENSIONS)",
      "right" : "for (String ext : ICON_EXTENSIONS)",
      "info" : "EnhancedForStatement[31266-31593]:EnhancedForStatement[31323-31650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31301-31593]:Block[31358-31650]"
    }, {
      "left" : "File file = new File(templateTempDir, \"icon\" + ext);",
      "right" : "File file = new File(templateTempDir, \"icon\" + ext);",
      "info" : "VariableDeclarationStatement[31331-31383]:VariableDeclarationStatement[31388-31440]"
    }, {
      "left" : "if (file.exists() && file.isFile())",
      "right" : "if (file.exists() && file.isFile())",
      "info" : "IfStatement[31412-31567]:IfStatement[31469-31624]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31448-31567]:Block[31505-31624]"
    }, {
      "left" : "iconFile = file;",
      "right" : "iconFile = file;",
      "info" : "ExpressionStatement[31482-31498]:ExpressionStatement[31539-31555]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[31531-31537]:BreakStatement[31588-31594]"
    }, {
      "left" : "if (iconFile != null)",
      "right" : "if (iconFile != null)",
      "info" : "IfStatement[31636-31746]:IfStatement[31693-31803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31658-31746]:Block[31715-31803]"
    }, {
      "left" : "answer = convertIconFileToURL(iconFile);",
      "right" : "answer = convertIconFileToURL(iconFile);",
      "info" : "ExpressionStatement[31684-31724]:ExpressionStatement[31741-31781]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31799-31882]:Block[31856-31939]"
    }, {
      "left" : "getLog().warn(\"Failed to load icon file: \" + e, e);",
      "right" : "getLog().warn(\"Failed to load icon file: \" + e, e);",
      "info" : "ExpressionStatement[31817-31868]:ExpressionStatement[31874-31925]"
    }, {
      "left" : "if (Strings.isNullOrBlank(answer))",
      "right" : "if (Strings.isNullOrBlank(answer))",
      "info" : "IfStatement[31901-32082]:IfStatement[31958-32139]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[31936-32014]:Block[31993-32071]"
    }, {
      "left" : "getLog().warn(\"No icon file found for this project!\");",
      "right" : "getLog().warn(\"No icon file found for this project!\");",
      "info" : "ExpressionStatement[31950-32004]:ExpressionStatement[32007-32061]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32020-32082]:Block[32077-32139]"
    }, {
      "left" : "getLog().debug(\"Icon URL: \" + answer);",
      "right" : "getLog().debug(\"Icon URL: \" + answer);",
      "info" : "ExpressionStatement[32034-32072]:ExpressionStatement[32091-32129]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[32092-32106]:ReturnStatement[32149-32163]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[32118-32127]:Modifier[32175-32184]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[32128-32134]:SimpleType[32185-32191]"
    }, {
      "left" : "convertIconFileToURL",
      "right" : "convertIconFileToURL",
      "info" : "SimpleName[32135-32155]:SimpleName[32192-32212]"
    }, {
      "left" : "File iconFile",
      "right" : "File iconFile",
      "info" : "SingleVariableDeclaration[32156-32169]:SingleVariableDeclaration[32213-32226]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[32178-32189]:SimpleType[32235-32246]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32190-34989]:Block[32247-35046]"
    }, {
      "left" : "long length = iconFile.length();",
      "right" : "long length = iconFile.length();",
      "info" : "VariableDeclarationStatement[32200-32232]:VariableDeclarationStatement[32257-32289]"
    }, {
      "left" : "int sizeK = Math.round(length / 1024);",
      "right" : "int sizeK = Math.round(length / 1024);",
      "info" : "VariableDeclarationStatement[32242-32280]:VariableDeclarationStatement[32299-32337]"
    }, {
      "left" : "byte[] bytes = Files.readBytes(iconFile);",
      "right" : "byte[] bytes = Files.readBytes(iconFile);",
      "info" : "VariableDeclarationStatement[32290-32331]:VariableDeclarationStatement[32347-32388]"
    }, {
      "left" : "byte[] encoded = Base64Encoder.encode(bytes);",
      "right" : "byte[] encoded = Base64Encoder.encode(bytes);",
      "info" : "VariableDeclarationStatement[32340-32385]:VariableDeclarationStatement[32397-32442]"
    }, {
      "left" : "int base64SizeK = Math.round(encoded.length / 1024);",
      "right" : "int base64SizeK = Math.round(encoded.length / 1024);",
      "info" : "VariableDeclarationStatement[32395-32447]:VariableDeclarationStatement[32452-32504]"
    }, {
      "left" : "getLog().info(\"found icon file: \" + iconFile +\n                \" which is \" + sizeK + \"K\" +\n                \" base64 encoded \" + base64SizeK + \"K\");",
      "right" : "getLog().info(\"found icon file: \" + iconFile +\n                \" which is \" + sizeK + \"K\" +\n                \" base64 encoded \" + base64SizeK + \"K\");",
      "info" : "ExpressionStatement[32457-32605]:ExpressionStatement[32514-32662]"
    }, {
      "left" : "if (base64SizeK < maximumDataUrlSizeK)",
      "right" : "if (base64SizeK < maximumDataUrlSizeK)",
      "info" : "IfStatement[32615-34962]:IfStatement[32672-35019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32654-32809]:Block[32711-32866]"
    }, {
      "left" : "String mimeType = guessMediaType(iconFile);",
      "right" : "String mimeType = guessMediaType(iconFile);",
      "info" : "VariableDeclarationStatement[32668-32711]:VariableDeclarationStatement[32725-32768]"
    }, {
      "left" : "return \"data:\" + mimeType + \";charset=UTF-8;base64,\" + new String(encoded);",
      "right" : "return \"data:\" + mimeType + \";charset=UTF-8;base64,\" + new String(encoded);",
      "info" : "ReturnStatement[32724-32799]:ReturnStatement[32781-32856]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32815-34962]:Block[32872-35019]"
    }, {
      "left" : "File iconSourceFile = new File(appConfigDir, iconFile.getName());",
      "right" : "File iconSourceFile = new File(appConfigDir, iconFile.getName());",
      "info" : "VariableDeclarationStatement[32829-32894]:VariableDeclarationStatement[32886-32951]"
    }, {
      "left" : "if (iconSourceFile.exists())",
      "right" : "if (iconSourceFile.exists())",
      "info" : "IfStatement[32907-34872]:IfStatement[32964-34929]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32936-34872]:Block[32993-34929]"
    }, {
      "left" : "File rootProjectFolder = getRootProjectFolder();",
      "right" : "File rootProjectFolder = getRootProjectFolder();",
      "info" : "VariableDeclarationStatement[32954-33002]:VariableDeclarationStatement[33011-33059]"
    }, {
      "left" : "if (rootProjectFolder != null)",
      "right" : "if (rootProjectFolder != null)",
      "info" : "IfStatement[33019-34858]:IfStatement[33076-34915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33050-34858]:Block[33107-34915]"
    }, {
      "left" : "String relativePath = Files.getRelativePath(rootProjectFolder, iconSourceFile);",
      "right" : "String relativePath = Files.getRelativePath(rootProjectFolder, iconSourceFile);",
      "info" : "VariableDeclarationStatement[33072-33151]:VariableDeclarationStatement[33129-33208]"
    }, {
      "left" : "String relativeParentPath = Files.getRelativePath(rootProjectFolder, getProject().getBasedir());",
      "right" : "String relativeParentPath = Files.getRelativePath(rootProjectFolder, getProject().getBasedir());",
      "info" : "VariableDeclarationStatement[33172-33268]:VariableDeclarationStatement[33229-33325]"
    }, {
      "left" : "String urlPrefix = iconUrlPrefix;",
      "right" : "String urlPrefix = iconUrlPrefix;",
      "info" : "VariableDeclarationStatement[33289-33322]:VariableDeclarationStatement[33346-33379]"
    }, {
      "left" : "if (Strings.isNullOrBlank(urlPrefix))",
      "right" : "if (Strings.isNullOrBlank(urlPrefix))",
      "info" : "IfStatement[33343-34394]:IfStatement[33400-34451]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33381-34394]:Block[33438-34451]"
    }, {
      "left" : "Scm scm = getProject().getScm();",
      "right" : "Scm scm = getProject().getScm();",
      "info" : "VariableDeclarationStatement[33407-33439]:VariableDeclarationStatement[33464-33496]"
    }, {
      "left" : "if (scm != null)",
      "right" : "if (scm != null)",
      "info" : "IfStatement[33464-34372]:IfStatement[33521-34429]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33481-34372]:Block[33538-34429]"
    }, {
      "left" : "String url = scm.getUrl();",
      "right" : "String url = scm.getUrl();",
      "info" : "VariableDeclarationStatement[33511-33537]:VariableDeclarationStatement[33568-33594]"
    }, {
      "left" : "if (url != null)",
      "right" : "if (url != null)",
      "info" : "IfStatement[33566-34346]:IfStatement[33623-34403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33583-34346]:Block[33640-34403]"
    }, {
      "left" : "String[] prefixes = {\"http://github.com/\", \"https://github.com/\"};",
      "right" : "String[] prefixes = {\"http://github.com/\", \"https://github.com/\"};",
      "info" : "VariableDeclarationStatement[33617-33683]:VariableDeclarationStatement[33674-33740]"
    }, {
      "left" : "for (String prefix : prefixes)",
      "right" : "for (String prefix : prefixes)",
      "info" : "EnhancedForStatement[33716-34057]:EnhancedForStatement[33773-34114]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33747-34057]:Block[33804-34114]"
    }, {
      "left" : "if (url.startsWith(prefix))",
      "right" : "if (url.startsWith(prefix))",
      "info" : "IfStatement[33785-34023]:IfStatement[33842-34080]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[33813-34023]:Block[33870-34080]"
    }, {
      "left" : "url = URLUtils.pathJoin(\"https://cdn.rawgit.com/\", url.substring(prefix.length()));",
      "right" : "url = URLUtils.pathJoin(\"https://cdn.rawgit.com/\", url.substring(prefix.length()));",
      "info" : "ExpressionStatement[33855-33938]:ExpressionStatement[33912-33995]"
    }, {
      "left" : "break;",
      "right" : "break;",
      "info" : "BreakStatement[33979-33985]:BreakStatement[34036-34042]"
    }, {
      "left" : "if (url.endsWith(relativeParentPath))",
      "right" : "if (url.endsWith(relativeParentPath))",
      "info" : "IfStatement[34090-34267]:IfStatement[34147-34324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34128-34267]:Block[34185-34324]"
    }, {
      "left" : "url = url.substring(0, url.length() - relativeParentPath.length());",
      "right" : "url = url.substring(0, url.length() - relativeParentPath.length());",
      "info" : "ExpressionStatement[34166-34233]:ExpressionStatement[34223-34290]"
    }, {
      "left" : "urlPrefix = url;",
      "right" : "urlPrefix = url;",
      "info" : "ExpressionStatement[34300-34316]:ExpressionStatement[34357-34373]"
    }, {
      "left" : "if (Strings.isNullOrBlank(urlPrefix))",
      "right" : "if (Strings.isNullOrBlank(urlPrefix))",
      "info" : "IfStatement[34415-34840]:IfStatement[34472-34897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34453-34611]:Block[34510-34668]"
    }, {
      "left" : "getLog().warn(\"No iconUrlPrefix defined or could be found via SCM in the pom.xml so cannot add an icon URL!\");",
      "right" : "getLog().warn(\"No iconUrlPrefix defined or could be found via SCM in the pom.xml so cannot add an icon URL!\");",
      "info" : "ExpressionStatement[34479-34589]:ExpressionStatement[34536-34646]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[34617-34840]:Block[34674-34897]"
    }, {
      "left" : "String answer = URLUtils.pathJoin(urlPrefix, iconBranch, relativePath);",
      "right" : "String answer = URLUtils.pathJoin(urlPrefix, iconBranch, relativePath);",
      "info" : "VariableDeclarationStatement[34643-34714]:VariableDeclarationStatement[34700-34771]"
    }, {
      "left" : "getLog().info(\"icon url is: \" + answer);",
      "right" : "getLog().info(\"icon url is: \" + answer);",
      "info" : "ExpressionStatement[34739-34779]:ExpressionStatement[34796-34836]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[34804-34818]:ReturnStatement[34861-34875]"
    }, {
      "left" : "getLog().warn(\"TODO need to convert this file into a remote URL!\");",
      "right" : "getLog().warn(\"TODO need to convert this file into a remote URL!\");",
      "info" : "ExpressionStatement[34885-34952]:ExpressionStatement[34942-35009]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[34971-34983]:ReturnStatement[35028-35040]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[34995-35004]:Modifier[35250-35259]"
    }, {
      "left" : "Probe",
      "right" : "Probe",
      "info" : "SimpleType[35005-35010]:SimpleType[35260-35265]"
    }, {
      "left" : "getLivenessProbe",
      "right" : "getProbe",
      "info" : "SimpleName[35011-35027]:SimpleName[35266-35274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35030-36410]:Block[35290-36610]"
    }, {
      "left" : "Probe answer = new Probe();",
      "right" : "Probe answer = new Probe();",
      "info" : "VariableDeclarationStatement[35040-35067]:VariableDeclarationStatement[35300-35327]"
    }, {
      "left" : "boolean added = false;",
      "right" : "boolean added = false;",
      "info" : "VariableDeclarationStatement[35076-35098]:VariableDeclarationStatement[35336-35358]"
    }, {
      "left" : "Properties properties = getProject().getProperties();",
      "right" : "Properties properties = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[35107-35160]:VariableDeclarationStatement[35367-35420]"
    }, {
      "left" : "String httpGetPath = properties.getProperty(\"fabric8.livenessProbe.httpGet.path\");",
      "right" : "String httpGetPath = properties.getProperty(prefix + \".httpGet.path\");",
      "info" : "VariableDeclarationStatement[35169-35251]:VariableDeclarationStatement[35429-35499]"
    }, {
      "left" : "String httpGetPort = properties.getProperty(\"fabric8.livenessProbe.httpGet.port\");",
      "right" : "String httpGetPort = properties.getProperty(prefix + \".httpGet.port\");",
      "info" : "VariableDeclarationStatement[35260-35342]:VariableDeclarationStatement[35508-35578]"
    }, {
      "left" : "String httpGetHost = properties.getProperty(\"fabric8.livenessProbe.httpGet.host\");",
      "right" : "String httpGetHost = properties.getProperty(prefix + \".httpGet.host\");",
      "info" : "VariableDeclarationStatement[35351-35433]:VariableDeclarationStatement[35587-35657]"
    }, {
      "left" : "if (Strings.isNotBlank(httpGetPath))",
      "right" : "if (Strings.isNotBlank(httpGetPath))",
      "info" : "IfStatement[35442-35921]:IfStatement[35666-36145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35479-35921]:Block[35703-36145]"
    }, {
      "left" : "added = true;",
      "right" : "added = true;",
      "info" : "ExpressionStatement[35493-35506]:ExpressionStatement[35717-35730]"
    }, {
      "left" : "HTTPGetAction httpGet = new HTTPGetAction();",
      "right" : "HTTPGetAction httpGet = new HTTPGetAction();",
      "info" : "VariableDeclarationStatement[35519-35563]:VariableDeclarationStatement[35743-35787]"
    }, {
      "left" : "httpGet.setPath(httpGetPath);",
      "right" : "httpGet.setPath(httpGetPath);",
      "info" : "ExpressionStatement[35576-35605]:ExpressionStatement[35800-35829]"
    }, {
      "left" : "httpGet.setHost(httpGetHost);",
      "right" : "httpGet.setHost(httpGetHost);",
      "info" : "ExpressionStatement[35618-35647]:ExpressionStatement[35842-35871]"
    }, {
      "left" : "if (Strings.isNotBlank(httpGetPort))",
      "right" : "if (Strings.isNotBlank(httpGetPort))",
      "info" : "IfStatement[35660-35871]:IfStatement[35884-36095]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[35697-35871]:Block[35921-36095]"
    }, {
      "left" : "IntOrString httpGetPortIntOrString = KubernetesHelper.createIntOrString(httpGetPort);",
      "right" : "IntOrString httpGetPortIntOrString = KubernetesHelper.createIntOrString(httpGetPort);",
      "info" : "VariableDeclarationStatement[35715-35800]:VariableDeclarationStatement[35939-36024]"
    }, {
      "left" : "httpGet.setPort(httpGetPortIntOrString);",
      "right" : "httpGet.setPort(httpGetPortIntOrString);",
      "info" : "ExpressionStatement[35817-35857]:ExpressionStatement[36041-36081]"
    }, {
      "left" : "answer.setHttpGet(httpGet);",
      "right" : "answer.setHttpGet(httpGet);",
      "info" : "ExpressionStatement[35884-35911]:ExpressionStatement[36108-36135]"
    }, {
      "left" : "Long initialDelaySeconds = PropertiesHelper.getLong(properties, \"fabric8.livenessProbe.initialDelaySeconds\");",
      "right" : "Long initialDelaySeconds = PropertiesHelper.getLong(properties, prefix + \".initialDelaySeconds\");",
      "info" : "VariableDeclarationStatement[35930-36039]:VariableDeclarationStatement[36154-36251]"
    }, {
      "left" : "if (initialDelaySeconds != null)",
      "right" : "if (initialDelaySeconds != null)",
      "info" : "IfStatement[36048-36156]:IfStatement[36260-36368]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36081-36156]:Block[36293-36368]"
    }, {
      "left" : "answer.setInitialDelaySeconds(initialDelaySeconds);",
      "right" : "answer.setInitialDelaySeconds(initialDelaySeconds);",
      "info" : "ExpressionStatement[36095-36146]:ExpressionStatement[36307-36358]"
    }, {
      "left" : "Long timeoutSeconds = PropertiesHelper.getLong(properties, \"fabric8.livenessProbe.timeoutSeconds\");",
      "right" : "Long timeoutSeconds = PropertiesHelper.getLong(properties, prefix + \".timeoutSeconds\");",
      "info" : "VariableDeclarationStatement[36165-36264]:VariableDeclarationStatement[36377-36464]"
    }, {
      "left" : "if (timeoutSeconds != null)",
      "right" : "if (timeoutSeconds != null)",
      "info" : "IfStatement[36273-36366]:IfStatement[36473-36566]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36301-36366]:Block[36501-36566]"
    }, {
      "left" : "answer.setTimeoutSeconds(timeoutSeconds);",
      "right" : "answer.setTimeoutSeconds(timeoutSeconds);",
      "info" : "ExpressionStatement[36315-36356]:ExpressionStatement[36515-36556]"
    }, {
      "left" : "return added ? answer : null;",
      "right" : "return added ? answer : null;",
      "info" : "ReturnStatement[36375-36404]:ReturnStatement[36575-36604]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36416-36422]:Modifier[36616-36622]"
    }, {
      "left" : "Boolean",
      "right" : "Boolean",
      "info" : "SimpleType[36423-36430]:SimpleType[36623-36630]"
    }, {
      "left" : "getContainerPrivileged",
      "right" : "getContainerPrivileged",
      "info" : "SimpleName[36431-36453]:SimpleName[36631-36653]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36456-36499]:Block[36656-36699]"
    }, {
      "left" : "return containerPrivileged;",
      "right" : "return containerPrivileged;",
      "info" : "ReturnStatement[36466-36493]:ReturnStatement[36666-36693]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[36505-36511]:Modifier[36705-36711]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[36512-36518]:SimpleType[36712-36718]"
    }, {
      "left" : "getImagePullPolicy",
      "right" : "getImagePullPolicy",
      "info" : "SimpleName[36519-36537]:SimpleName[36719-36737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36540-37025]:Block[36740-37225]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[36550-36586]:VariableDeclarationStatement[36750-36786]"
    }, {
      "left" : "String pullPolicy = imagePullPolicy;",
      "right" : "String pullPolicy = imagePullPolicy;",
      "info" : "VariableDeclarationStatement[36595-36631]:VariableDeclarationStatement[36795-36831]"
    }, {
      "left" : "if (project != null)",
      "right" : "if (project != null)",
      "info" : "IfStatement[36640-36992]:IfStatement[36840-37192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36661-36992]:Block[36861-37192]"
    }, {
      "left" : "String version = project.getVersion();",
      "right" : "String version = project.getVersion();",
      "info" : "VariableDeclarationStatement[36675-36713]:VariableDeclarationStatement[36875-36913]"
    }, {
      "left" : "if (Strings.isNullOrBlank(pullPolicy))",
      "right" : "if (Strings.isNullOrBlank(pullPolicy))",
      "info" : "IfStatement[36726-36982]:IfStatement[36926-37182]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36765-36982]:Block[36965-37182]"
    }, {
      "left" : "if (version != null && version.endsWith(\"SNAPSHOT\"))",
      "right" : "if (version != null && version.endsWith(\"SNAPSHOT\"))",
      "info" : "IfStatement[36783-36968]:IfStatement[36983-37168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[36836-36968]:Block[37036-37168]"
    }, {
      "left" : "pullPolicy = imagePullPolicySnapshot;",
      "right" : "pullPolicy = imagePullPolicySnapshot;",
      "info" : "ExpressionStatement[36913-36950]:ExpressionStatement[37113-37150]"
    }, {
      "left" : "return pullPolicy;",
      "right" : "return pullPolicy;",
      "info" : "ReturnStatement[37001-37019]:ReturnStatement[37201-37219]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[37031-37037]:Modifier[37231-37237]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[37038-37044]:SimpleType[37238-37244]"
    }, {
      "left" : "getKubernetesContainerName",
      "right" : "getKubernetesContainerName",
      "info" : "SimpleName[37045-37071]:SimpleName[37245-37271]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37074-38038]:Block[37274-38238]"
    }, {
      "left" : "if (Strings.isNullOrBlank(kubernetesContainerName))",
      "right" : "if (Strings.isNullOrBlank(kubernetesContainerName))",
      "info" : "IfStatement[37084-37992]:IfStatement[37284-38192]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37136-37992]:Block[37336-38192]"
    }, {
      "left" : "String groupPrefix = null;",
      "right" : "String groupPrefix = null;",
      "info" : "VariableDeclarationStatement[37232-37258]:VariableDeclarationStatement[37432-37458]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[37271-37307]:VariableDeclarationStatement[37471-37507]"
    }, {
      "left" : "String imageName = project.getProperties().getProperty(\"docker.image\");",
      "right" : "String imageName = project.getProperties().getProperty(\"docker.image\");",
      "info" : "VariableDeclarationStatement[37320-37391]:VariableDeclarationStatement[37520-37591]"
    }, {
      "left" : "if (Strings.isNotBlank(imageName))",
      "right" : "if (Strings.isNotBlank(imageName))",
      "info" : "IfStatement[37404-37779]:IfStatement[37604-37979]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37439-37779]:Block[37639-37979]"
    }, {
      "left" : "String[] paths = imageName.split(\"/\");",
      "right" : "String[] paths = imageName.split(\"/\");",
      "info" : "VariableDeclarationStatement[37457-37495]:VariableDeclarationStatement[37657-37695]"
    }, {
      "left" : "if (paths != null)",
      "right" : "if (paths != null)",
      "info" : "IfStatement[37512-37765]:IfStatement[37712-37965]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37531-37765]:Block[37731-37965]"
    }, {
      "left" : "if (paths.length == 2)",
      "right" : "if (paths.length == 2)",
      "info" : "IfStatement[37553-37747]:IfStatement[37753-37947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37576-37647]:Block[37776-37847]"
    }, {
      "left" : "groupPrefix = paths[0];",
      "right" : "groupPrefix = paths[0];",
      "info" : "ExpressionStatement[37602-37625]:ExpressionStatement[37802-37825]"
    }, {
      "left" : "if (paths.length == 3)",
      "right" : "if (paths.length == 3)",
      "info" : "IfStatement[37653-37747]:IfStatement[37853-37947]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37676-37747]:Block[37876-37947]"
    }, {
      "left" : "groupPrefix = paths[1];",
      "right" : "groupPrefix = paths[1];",
      "info" : "ExpressionStatement[37702-37725]:ExpressionStatement[37902-37925]"
    }, {
      "left" : "if (Strings.isNullOrBlank(groupPrefix))",
      "right" : "if (Strings.isNullOrBlank(groupPrefix))",
      "info" : "IfStatement[37792-37899]:IfStatement[37992-38099]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[37832-37899]:Block[38032-38099]"
    }, {
      "left" : "groupPrefix = project.getGroupId();",
      "right" : "groupPrefix = project.getGroupId();",
      "info" : "ExpressionStatement[37850-37885]:ExpressionStatement[38050-38085]"
    }, {
      "left" : "kubernetesContainerName = groupPrefix + \"-\" + project.getArtifactId();",
      "right" : "kubernetesContainerName = groupPrefix + \"-\" + project.getArtifactId();",
      "info" : "ExpressionStatement[37912-37982]:ExpressionStatement[38112-38182]"
    }, {
      "left" : "return kubernetesContainerName;",
      "right" : "return kubernetesContainerName;",
      "info" : "ReturnStatement[38001-38032]:ReturnStatement[38201-38232]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38044-38050]:Modifier[38244-38250]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38051-38055]:PrimitiveType[38251-38255]"
    }, {
      "left" : "setKubernetesContainerName",
      "right" : "setKubernetesContainerName",
      "info" : "SimpleName[38056-38082]:SimpleName[38256-38282]"
    }, {
      "left" : "String kubernetesContainerName",
      "right" : "String kubernetesContainerName",
      "info" : "SingleVariableDeclaration[38083-38113]:SingleVariableDeclaration[38283-38313]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38115-38186]:Block[38315-38386]"
    }, {
      "left" : "this.kubernetesContainerName = kubernetesContainerName;",
      "right" : "this.kubernetesContainerName = kubernetesContainerName;",
      "info" : "ExpressionStatement[38125-38180]:ExpressionStatement[38325-38380]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38192-38198]:Modifier[38392-38398]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[38199-38205]:SimpleType[38399-38405]"
    }, {
      "left" : "getKubernetesName",
      "right" : "getKubernetesName",
      "info" : "SimpleName[38206-38223]:SimpleName[38406-38423]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38226-38264]:Block[38426-38464]"
    }, {
      "left" : "return kubernetesName;",
      "right" : "return kubernetesName;",
      "info" : "ReturnStatement[38236-38258]:ReturnStatement[38436-38458]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38270-38276]:Modifier[38470-38476]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38277-38281]:PrimitiveType[38477-38481]"
    }, {
      "left" : "setKubernetesName",
      "right" : "setKubernetesName",
      "info" : "SimpleName[38282-38299]:SimpleName[38482-38499]"
    }, {
      "left" : "String kubernetesName",
      "right" : "String kubernetesName",
      "info" : "SingleVariableDeclaration[38300-38321]:SingleVariableDeclaration[38500-38521]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38323-38376]:Block[38523-38576]"
    }, {
      "left" : "this.kubernetesName = kubernetesName;",
      "right" : "this.kubernetesName = kubernetesName;",
      "info" : "ExpressionStatement[38333-38370]:ExpressionStatement[38533-38570]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38382-38388]:Modifier[38582-38588]"
    }, {
      "left" : "Map<String, Integer>",
      "right" : "Map<String, Integer>",
      "info" : "ParameterizedType[38389-38409]:ParameterizedType[38589-38609]"
    }, {
      "left" : "getDefaultContainerPortMap",
      "right" : "getDefaultContainerPortMap",
      "info" : "SimpleName[38410-38436]:SimpleName[38610-38636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38439-38813]:Block[38639-39013]"
    }, {
      "left" : "if (defaultContainerPortMap == null)",
      "right" : "if (defaultContainerPortMap == null)",
      "info" : "IfStatement[38449-38552]:IfStatement[38649-38752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38486-38552]:Block[38686-38752]"
    }, {
      "left" : "defaultContainerPortMap = new HashMap<>();",
      "right" : "defaultContainerPortMap = new HashMap<>();",
      "info" : "ExpressionStatement[38500-38542]:ExpressionStatement[38700-38742]"
    }, {
      "left" : "if (defaultContainerPortMap.isEmpty())",
      "right" : "if (defaultContainerPortMap.isEmpty())",
      "info" : "IfStatement[38561-38767]:IfStatement[38761-38967]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38600-38767]:Block[38800-38967]"
    }, {
      "left" : "defaultContainerPortMap.put(\"jolokia\", 8778);",
      "right" : "defaultContainerPortMap.put(\"jolokia\", 8778);",
      "info" : "ExpressionStatement[38658-38703]:ExpressionStatement[38858-38903]"
    }, {
      "left" : "defaultContainerPortMap.put(\"web\", 8080);",
      "right" : "defaultContainerPortMap.put(\"web\", 8080);",
      "info" : "ExpressionStatement[38716-38757]:ExpressionStatement[38916-38957]"
    }, {
      "left" : "return defaultContainerPortMap;",
      "right" : "return defaultContainerPortMap;",
      "info" : "ReturnStatement[38776-38807]:ReturnStatement[38976-39007]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38819-38825]:Modifier[39019-39025]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[38826-38830]:PrimitiveType[39026-39030]"
    }, {
      "left" : "setDefaultContainerPortMap",
      "right" : "setDefaultContainerPortMap",
      "info" : "SimpleName[38831-38857]:SimpleName[39031-39057]"
    }, {
      "left" : "Map<String, Integer> defaultContainerPortMap",
      "right" : "Map<String, Integer> defaultContainerPortMap",
      "info" : "SingleVariableDeclaration[38858-38902]:SingleVariableDeclaration[39058-39102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[38904-38975]:Block[39104-39175]"
    }, {
      "left" : "this.defaultContainerPortMap = defaultContainerPortMap;",
      "right" : "this.defaultContainerPortMap = defaultContainerPortMap;",
      "info" : "ExpressionStatement[38914-38969]:ExpressionStatement[39114-39169]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[38981-38987]:Modifier[39181-39187]"
    }, {
      "left" : "List<ContainerPort>",
      "right" : "List<ContainerPort>",
      "info" : "ParameterizedType[38988-39007]:ParameterizedType[39188-39207]"
    }, {
      "left" : "getContainerPorts",
      "right" : "getContainerPorts",
      "info" : "SimpleName[39008-39025]:SimpleName[39208-39225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39028-41140]:Block[39228-41340]"
    }, {
      "left" : "if (containerPorts == null)",
      "right" : "if (containerPorts == null)",
      "info" : "IfStatement[39038-39125]:IfStatement[39238-39325]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39066-39125]:Block[39266-39325]"
    }, {
      "left" : "containerPorts = new ArrayList<>();",
      "right" : "containerPorts = new ArrayList<>();",
      "info" : "ExpressionStatement[39080-39115]:ExpressionStatement[39280-39315]"
    }, {
      "left" : "if (containerPorts.isEmpty())",
      "right" : "if (containerPorts.isEmpty())",
      "info" : "IfStatement[39134-41103]:IfStatement[39334-41303]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39164-41103]:Block[39364-41303]"
    }, {
      "left" : "Map<String, ContainerPort> portMap = new HashMap<>();",
      "right" : "Map<String, ContainerPort> portMap = new HashMap<>();",
      "info" : "VariableDeclarationStatement[39178-39231]:VariableDeclarationStatement[39378-39431]"
    }, {
      "left" : "Properties properties1 = getProject().getProperties();",
      "right" : "Properties properties1 = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[39244-39298]:VariableDeclarationStatement[39444-39498]"
    }, {
      "left" : "Map<String, String> hostPorts = findPropertiesWithPrefix(properties1, FABRIC8_PORT_HOST_PREFIX);",
      "right" : "Map<String, String> hostPorts = findPropertiesWithPrefix(properties1, FABRIC8_PORT_HOST_PREFIX);",
      "info" : "VariableDeclarationStatement[39311-39407]:VariableDeclarationStatement[39511-39607]"
    }, {
      "left" : "Properties properties = getProject().getProperties();",
      "right" : "Properties properties = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[39420-39473]:VariableDeclarationStatement[39620-39673]"
    }, {
      "left" : "Map<String, String> containerPortsMap = findPropertiesWithPrefix(properties, FABRIC8_PORT_CONTAINER_PREFIX);",
      "right" : "Map<String, String> containerPortsMap = findPropertiesWithPrefix(properties, FABRIC8_PORT_CONTAINER_PREFIX);",
      "info" : "VariableDeclarationStatement[39486-39594]:VariableDeclarationStatement[39686-39794]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : containerPortsMap.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : containerPortsMap.entrySet())",
      "info" : "EnhancedForStatement[39608-40114]:EnhancedForStatement[39808-40314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39677-40114]:Block[39877-40314]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[39695-39724]:VariableDeclarationStatement[39895-39924]"
    }, {
      "left" : "String portText = entry.getValue();",
      "right" : "String portText = entry.getValue();",
      "info" : "VariableDeclarationStatement[39741-39776]:VariableDeclarationStatement[39941-39976]"
    }, {
      "left" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_CONTAINER_PREFIX + name);",
      "right" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_CONTAINER_PREFIX + name);",
      "info" : "VariableDeclarationStatement[39793-39872]:VariableDeclarationStatement[39993-40072]"
    }, {
      "left" : "if (portNumber != null)",
      "right" : "if (portNumber != null)",
      "info" : "IfStatement[39889-40100]:IfStatement[40089-40300]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39913-40100]:Block[40113-40300]"
    }, {
      "left" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "right" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "info" : "VariableDeclarationStatement[39935-39987]:VariableDeclarationStatement[40135-40187]"
    }, {
      "left" : "port.setContainerPort(portNumber);",
      "right" : "port.setContainerPort(portNumber);",
      "info" : "ExpressionStatement[40008-40042]:ExpressionStatement[40208-40242]"
    }, {
      "left" : "port.setName(name);",
      "right" : "port.setName(name);",
      "info" : "ExpressionStatement[40063-40082]:ExpressionStatement[40263-40282]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : hostPorts.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : hostPorts.entrySet())",
      "info" : "EnhancedForStatement[40127-40837]:EnhancedForStatement[40327-41037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40188-40837]:Block[40388-41037]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[40206-40235]:VariableDeclarationStatement[40406-40435]"
    }, {
      "left" : "String portText = entry.getValue();",
      "right" : "String portText = entry.getValue();",
      "info" : "VariableDeclarationStatement[40252-40287]:VariableDeclarationStatement[40452-40487]"
    }, {
      "left" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_HOST_PREFIX + name);",
      "right" : "Integer portNumber = parsePort(portText, FABRIC8_PORT_HOST_PREFIX + name);",
      "info" : "VariableDeclarationStatement[40304-40378]:VariableDeclarationStatement[40504-40578]"
    }, {
      "left" : "if (portNumber != null)",
      "right" : "if (portNumber != null)",
      "info" : "IfStatement[40395-40823]:IfStatement[40595-41023]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40419-40823]:Block[40619-41023]"
    }, {
      "left" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "right" : "ContainerPort port = getOrCreatePort(portMap, name);",
      "info" : "VariableDeclarationStatement[40441-40493]:VariableDeclarationStatement[40641-40693]"
    }, {
      "left" : "port.setHostPort(portNumber);",
      "right" : "port.setHostPort(portNumber);",
      "info" : "ExpressionStatement[40514-40543]:ExpressionStatement[40714-40743]"
    }, {
      "left" : "if (port.getContainerPort() == null)",
      "right" : "if (port.getContainerPort() == null)",
      "info" : "IfStatement[40658-40805]:IfStatement[40858-41005]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40695-40805]:Block[40895-41005]"
    }, {
      "left" : "port.setContainerPort(getDefaultContainerPortMap().get(name));",
      "right" : "port.setContainerPort(getDefaultContainerPortMap().get(name));",
      "info" : "ExpressionStatement[40721-40783]:ExpressionStatement[40921-40983]"
    }, {
      "left" : "getLog().info(\"Generated port mappings: \" + portMap);",
      "right" : "getLog().info(\"Generated port mappings: \" + portMap);",
      "info" : "ExpressionStatement[40850-40903]:ExpressionStatement[41050-41103]"
    }, {
      "left" : "getLog().debug(\"from host ports: \" + hostPorts);",
      "right" : "getLog().debug(\"from host ports: \" + hostPorts);",
      "info" : "ExpressionStatement[40916-40964]:ExpressionStatement[41116-41164]"
    }, {
      "left" : "getLog().debug(\"from containerPorts ports: \" + containerPorts);",
      "right" : "getLog().debug(\"from containerPorts ports: \" + containerPorts);",
      "info" : "ExpressionStatement[40977-41040]:ExpressionStatement[41177-41240]"
    }, {
      "left" : "containerPorts.addAll(portMap.values());",
      "right" : "containerPorts.addAll(portMap.values());",
      "info" : "ExpressionStatement[41053-41093]:ExpressionStatement[41253-41293]"
    }, {
      "left" : "return containerPorts;",
      "right" : "return containerPorts;",
      "info" : "ReturnStatement[41112-41134]:ReturnStatement[41312-41334]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[41146-41155]:Modifier[41346-41355]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[41156-41162]:Modifier[41356-41362]"
    }, {
      "left" : "ContainerPort",
      "right" : "ContainerPort",
      "info" : "SimpleType[41163-41176]:SimpleType[41363-41376]"
    }, {
      "left" : "getOrCreatePort",
      "right" : "getOrCreatePort",
      "info" : "SimpleName[41177-41192]:SimpleName[41377-41392]"
    }, {
      "left" : "Map<String, ContainerPort> portMap",
      "right" : "Map<String, ContainerPort> portMap",
      "info" : "SingleVariableDeclaration[41193-41227]:SingleVariableDeclaration[41393-41427]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[41229-41240]:SingleVariableDeclaration[41429-41440]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41242-41478]:Block[41442-41678]"
    }, {
      "left" : "ContainerPort answer = portMap.get(name);",
      "right" : "ContainerPort answer = portMap.get(name);",
      "info" : "VariableDeclarationStatement[41252-41293]:VariableDeclarationStatement[41452-41493]"
    }, {
      "left" : "if (answer == null)",
      "right" : "if (answer == null)",
      "info" : "IfStatement[41302-41449]:IfStatement[41502-41649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41322-41449]:Block[41522-41649]"
    }, {
      "left" : "answer = new ContainerPort();",
      "right" : "answer = new ContainerPort();",
      "info" : "ExpressionStatement[41336-41365]:ExpressionStatement[41536-41565]"
    }, {
      "left" : "portMap.put(name, answer);",
      "right" : "portMap.put(name, answer);",
      "info" : "ExpressionStatement[41378-41404]:ExpressionStatement[41578-41604]"
    }, {
      "left" : "answer.setName(name);",
      "right" : "answer.setName(name);",
      "info" : "ExpressionStatement[41418-41439]:ExpressionStatement[41618-41639]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[41458-41472]:ReturnStatement[41658-41672]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[41484-41490]:Modifier[41684-41690]"
    }, {
      "left" : "List<ServicePort>",
      "right" : "List<ServicePort>",
      "info" : "ParameterizedType[41491-41508]:ParameterizedType[41691-41708]"
    }, {
      "left" : "getServicePorts",
      "right" : "getServicePorts",
      "info" : "SimpleName[41509-41524]:SimpleName[41709-41724]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[41534-41556]:SimpleType[41734-41756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41557-45018]:Block[41757-45218]"
    }, {
      "left" : "if (servicePorts == null)",
      "right" : "if (servicePorts == null)",
      "info" : "IfStatement[41567-41650]:IfStatement[41767-41850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41593-41650]:Block[41793-41850]"
    }, {
      "left" : "servicePorts = new ArrayList<>();",
      "right" : "servicePorts = new ArrayList<>();",
      "info" : "ExpressionStatement[41607-41640]:ExpressionStatement[41807-41840]"
    }, {
      "left" : "if (servicePorts.isEmpty())",
      "right" : "if (servicePorts.isEmpty())",
      "info" : "IfStatement[41659-44983]:IfStatement[41859-45183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[41687-44983]:Block[41887-45183]"
    }, {
      "left" : "Properties properties1 = getProject().getProperties();",
      "right" : "Properties properties1 = getProject().getProperties();",
      "info" : "VariableDeclarationStatement[41701-41755]:VariableDeclarationStatement[41901-41955]"
    }, {
      "left" : "Map<String, String> servicePortProperties = findPropertiesWithPrefix(properties1, FABRIC8_PORT_SERVICE_PREFIX);",
      "right" : "Map<String, String> servicePortProperties = findPropertiesWithPrefix(properties1, FABRIC8_PORT_SERVICE_PREFIX);",
      "info" : "VariableDeclarationStatement[41768-41879]:VariableDeclarationStatement[41968-42079]"
    }, {
      "left" : "Map<String, String> serviceContainerPortProperties = findPropertiesWithPrefix(properties1, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX);",
      "right" : "Map<String, String> serviceContainerPortProperties = findPropertiesWithPrefix(properties1, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX);",
      "info" : "VariableDeclarationStatement[41892-42022]:VariableDeclarationStatement[42092-42222]"
    }, {
      "left" : "Map<String, String> serviceProtocolProperties = findPropertiesWithPrefix(properties1, FABRIC8_PROTOCOL_SERVICE_PREFIX);",
      "right" : "Map<String, String> serviceProtocolProperties = findPropertiesWithPrefix(properties1, FABRIC8_PROTOCOL_SERVICE_PREFIX);",
      "info" : "VariableDeclarationStatement[42035-42154]:VariableDeclarationStatement[42235-42354]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : servicePortProperties.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : servicePortProperties.entrySet())",
      "info" : "EnhancedForStatement[42168-43902]:EnhancedForStatement[42368-44102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42241-43902]:Block[42441-44102]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[42259-42288]:VariableDeclarationStatement[42459-42488]"
    }, {
      "left" : "String servicePortText = entry.getValue();",
      "right" : "String servicePortText = entry.getValue();",
      "info" : "VariableDeclarationStatement[42305-42347]:VariableDeclarationStatement[42505-42547]"
    }, {
      "left" : "Integer servicePortNumber = parsePort(servicePortText, FABRIC8_PORT_SERVICE_PREFIX + name);",
      "right" : "Integer servicePortNumber = parsePort(servicePortText, FABRIC8_PORT_SERVICE_PREFIX + name);",
      "info" : "VariableDeclarationStatement[42364-42455]:VariableDeclarationStatement[42564-42655]"
    }, {
      "left" : "if (servicePortNumber != null)",
      "right" : "if (servicePortNumber != null)",
      "info" : "IfStatement[42472-43888]:IfStatement[42672-44088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42503-43888]:Block[42703-44088]"
    }, {
      "left" : "String containerPort = serviceContainerPortProperties.get(name);",
      "right" : "String containerPort = serviceContainerPortProperties.get(name);",
      "info" : "VariableDeclarationStatement[42525-42589]:VariableDeclarationStatement[42725-42789]"
    }, {
      "left" : "if (Strings.isNullOrBlank(containerPort))",
      "right" : "if (Strings.isNullOrBlank(containerPort))",
      "info" : "IfStatement[42610-43870]:IfStatement[42810-44070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42652-42832]:Block[42852-43032]"
    }, {
      "left" : "getLog().warn(\"Missing container port for service - need to specify \" + FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name + \" property\");",
      "right" : "getLog().warn(\"Missing container port for service - need to specify \" + FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name + \" property\");",
      "info" : "ExpressionStatement[42678-42810]:ExpressionStatement[42878-43010]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[42838-43870]:Block[43038-44070]"
    }, {
      "left" : "ServicePort servicePort = new ServicePort();",
      "right" : "ServicePort servicePort = new ServicePort();",
      "info" : "VariableDeclarationStatement[42864-42908]:VariableDeclarationStatement[43064-43108]"
    }, {
      "left" : "servicePort.setName(name);",
      "right" : "servicePort.setName(name);",
      "info" : "ExpressionStatement[42933-42959]:ExpressionStatement[43133-43159]"
    }, {
      "left" : "servicePort.setPort(servicePortNumber);",
      "right" : "servicePort.setPort(servicePortNumber);",
      "info" : "ExpressionStatement[42984-43023]:ExpressionStatement[43184-43223]"
    }, {
      "left" : "IntOrString containerPortSpec = new IntOrString();",
      "right" : "IntOrString containerPortSpec = new IntOrString();",
      "info" : "VariableDeclarationStatement[43049-43099]:VariableDeclarationStatement[43249-43299]"
    }, {
      "left" : "Integer containerPortNumber = parsePort(containerPort, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name);",
      "right" : "Integer containerPortNumber = parsePort(containerPort, FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name);",
      "info" : "VariableDeclarationStatement[43124-43225]:VariableDeclarationStatement[43324-43425]"
    }, {
      "left" : "if (containerPortNumber != null)",
      "right" : "if (containerPortNumber != null)",
      "info" : "IfStatement[43250-43493]:IfStatement[43450-43693]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43283-43388]:Block[43483-43588]"
    }, {
      "left" : "containerPortSpec.setIntVal(containerPortNumber);",
      "right" : "containerPortSpec.setIntVal(containerPortNumber);",
      "info" : "ExpressionStatement[43313-43362]:ExpressionStatement[43513-43562]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43394-43493]:Block[43594-43693]"
    }, {
      "left" : "containerPortSpec.setStrVal(containerPort);",
      "right" : "containerPortSpec.setStrVal(containerPort);",
      "info" : "ExpressionStatement[43424-43467]:ExpressionStatement[43624-43667]"
    }, {
      "left" : "servicePort.setTargetPort(containerPortSpec);",
      "right" : "servicePort.setTargetPort(containerPortSpec);",
      "info" : "ExpressionStatement[43518-43563]:ExpressionStatement[43718-43763]"
    }, {
      "left" : "String portProtocol = serviceProtocolProperties.get(name);",
      "right" : "String portProtocol = serviceProtocolProperties.get(name);",
      "info" : "VariableDeclarationStatement[43589-43647]:VariableDeclarationStatement[43789-43847]"
    }, {
      "left" : "if (portProtocol != null)",
      "right" : "if (portProtocol != null)",
      "info" : "IfStatement[43672-43792]:IfStatement[43872-43992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43698-43792]:Block[43898-43992]"
    }, {
      "left" : "servicePort.setProtocol(portProtocol);",
      "right" : "servicePort.setProtocol(portProtocol);",
      "info" : "ExpressionStatement[43728-43766]:ExpressionStatement[43928-43966]"
    }, {
      "left" : "servicePorts.add(servicePort);",
      "right" : "servicePorts.add(servicePort);",
      "info" : "ExpressionStatement[43818-43848]:ExpressionStatement[44018-44048]"
    }, {
      "left" : "if (serviceContainerPort != null && servicePort != null)",
      "right" : "if (serviceContainerPort != null && servicePort != null)",
      "info" : "IfStatement[43916-44972]:IfStatement[44116-45172]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[43973-44972]:Block[44173-45172]"
    }, {
      "left" : "if (servicePorts.size() > 0)",
      "right" : "if (servicePorts.size() > 0)",
      "info" : "IfStatement[43992-44179]:IfStatement[44192-44379]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44021-44179]:Block[44221-44379]"
    }, {
      "left" : "throw new MojoExecutionException(\"Multi-port services must use the \" + FABRIC8_PORT_SERVICE_PREFIX + \"<name> format\");",
      "right" : "throw new MojoExecutionException(\"Multi-port services must use the \" + FABRIC8_PORT_SERVICE_PREFIX + \"<name> format\");",
      "info" : "ThrowStatement[44043-44161]:ThrowStatement[44243-44361]"
    }, {
      "left" : "ServicePort actualServicePort = new ServicePort();",
      "right" : "ServicePort actualServicePort = new ServicePort();",
      "info" : "VariableDeclarationStatement[44197-44247]:VariableDeclarationStatement[44397-44447]"
    }, {
      "left" : "Integer containerPortNumber = parsePort(serviceContainerPort, FABRIC8_CONTAINER_PORT_SERVICE);",
      "right" : "Integer containerPortNumber = parsePort(serviceContainerPort, FABRIC8_CONTAINER_PORT_SERVICE);",
      "info" : "VariableDeclarationStatement[44264-44358]:VariableDeclarationStatement[44464-44558]"
    }, {
      "left" : "IntOrString containerPort = new IntOrString();",
      "right" : "IntOrString containerPort = new IntOrString();",
      "info" : "VariableDeclarationStatement[44375-44421]:VariableDeclarationStatement[44575-44621]"
    }, {
      "left" : "if (containerPortNumber != null)",
      "right" : "if (containerPortNumber != null)",
      "info" : "IfStatement[44438-44648]:IfStatement[44638-44848]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44471-44556]:Block[44671-44756]"
    }, {
      "left" : "containerPort.setIntVal(containerPortNumber);",
      "right" : "containerPort.setIntVal(containerPortNumber);",
      "info" : "ExpressionStatement[44493-44538]:ExpressionStatement[44693-44738]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44562-44648]:Block[44762-44848]"
    }, {
      "left" : "containerPort.setStrVal(serviceContainerPort);",
      "right" : "containerPort.setStrVal(serviceContainerPort);",
      "info" : "ExpressionStatement[44584-44630]:ExpressionStatement[44784-44830]"
    }, {
      "left" : "actualServicePort.setTargetPort(containerPort);",
      "right" : "actualServicePort.setTargetPort(containerPort);",
      "info" : "ExpressionStatement[44665-44712]:ExpressionStatement[44865-44912]"
    }, {
      "left" : "actualServicePort.setPort(servicePort);",
      "right" : "actualServicePort.setPort(servicePort);",
      "info" : "ExpressionStatement[44729-44768]:ExpressionStatement[44929-44968]"
    }, {
      "left" : "if (serviceProtocol != null)",
      "right" : "if (serviceProtocol != null)",
      "info" : "IfStatement[44785-44958]:IfStatement[44985-45158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[44814-44958]:Block[45014-45158]"
    }, {
      "left" : "actualServicePort.setProtocol(serviceProtocol);",
      "right" : "actualServicePort.setProtocol(serviceProtocol);",
      "info" : "ExpressionStatement[44836-44883]:ExpressionStatement[45036-45083]"
    }, {
      "left" : "servicePorts.add(actualServicePort);",
      "right" : "servicePorts.add(actualServicePort);",
      "info" : "ExpressionStatement[44904-44940]:ExpressionStatement[45104-45140]"
    }, {
      "left" : "return servicePorts;",
      "right" : "return servicePorts;",
      "info" : "ReturnStatement[44992-45012]:ReturnStatement[45192-45212]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[45024-45033]:Modifier[45224-45233]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[45034-45040]:Modifier[45234-45240]"
    }, {
      "left" : "EnvVar",
      "right" : "EnvVar",
      "info" : "SimpleType[45041-45047]:SimpleType[45241-45247]"
    }, {
      "left" : "getOrCreateEnv",
      "right" : "getOrCreateEnv",
      "info" : "SimpleName[45048-45062]:SimpleName[45248-45262]"
    }, {
      "left" : "Map<String, EnvVar> envMap",
      "right" : "Map<String, EnvVar> envMap",
      "info" : "SingleVariableDeclaration[45063-45089]:SingleVariableDeclaration[45263-45289]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[45091-45102]:SingleVariableDeclaration[45291-45302]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45104-45289]:Block[45304-45489]"
    }, {
      "left" : "EnvVar answer = envMap.get(name);",
      "right" : "EnvVar answer = envMap.get(name);",
      "info" : "VariableDeclarationStatement[45114-45147]:VariableDeclarationStatement[45314-45347]"
    }, {
      "left" : "if (answer == null)",
      "right" : "if (answer == null)",
      "info" : "IfStatement[45156-45260]:IfStatement[45356-45460]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45176-45260]:Block[45376-45460]"
    }, {
      "left" : "answer = new EnvVar();",
      "right" : "answer = new EnvVar();",
      "info" : "ExpressionStatement[45190-45212]:ExpressionStatement[45390-45412]"
    }, {
      "left" : "envMap.put(name, answer);",
      "right" : "envMap.put(name, answer);",
      "info" : "ExpressionStatement[45225-45250]:ExpressionStatement[45425-45450]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[45269-45283]:ReturnStatement[45469-45483]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[45295-45304]:Modifier[45495-45504]"
    }, {
      "left" : "Integer",
      "right" : "Integer",
      "info" : "SimpleType[45305-45312]:SimpleType[45505-45512]"
    }, {
      "left" : "parsePort",
      "right" : "parsePort",
      "info" : "SimpleName[45313-45322]:SimpleName[45513-45522]"
    }, {
      "left" : "String portText",
      "right" : "String portText",
      "info" : "SingleVariableDeclaration[45323-45338]:SingleVariableDeclaration[45523-45538]"
    }, {
      "left" : "String propertyName",
      "right" : "String propertyName",
      "info" : "SingleVariableDeclaration[45340-45359]:SingleVariableDeclaration[45540-45559]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45361-45703]:Block[45561-45903]"
    }, {
      "left" : "if (Strings.isNotBlank(portText))",
      "right" : "if (Strings.isNotBlank(portText))",
      "info" : "IfStatement[45371-45676]:IfStatement[45571-45876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45405-45676]:Block[45605-45876]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[45419-45666]:TryStatement[45619-45866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45423-45489]:Block[45623-45689]"
    }, {
      "left" : "return Integer.parseInt(portText);",
      "right" : "return Integer.parseInt(portText);",
      "info" : "ReturnStatement[45441-45475]:ReturnStatement[45641-45675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45522-45666]:Block[45722-45866]"
    }, {
      "left" : "getLog().debug(\"Failed to parse port text: \" + portText + \" from maven property \" + propertyName + \". \" + e, e);",
      "right" : "getLog().debug(\"Failed to parse port text: \" + portText + \" from maven property \" + propertyName + \". \" + e, e);",
      "info" : "ExpressionStatement[45540-45652]:ExpressionStatement[45740-45852]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[45685-45697]:ReturnStatement[45885-45897]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45709-45715]:Modifier[45909-45915]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[45716-45720]:PrimitiveType[45916-45920]"
    }, {
      "left" : "setContainerPorts",
      "right" : "setContainerPorts",
      "info" : "SimpleName[45721-45738]:SimpleName[45921-45938]"
    }, {
      "left" : "List<ContainerPort> ports",
      "right" : "List<ContainerPort> ports",
      "info" : "SingleVariableDeclaration[45739-45764]:SingleVariableDeclaration[45939-45964]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45766-45810]:Block[45966-46010]"
    }, {
      "left" : "this.containerPorts = ports;",
      "right" : "this.containerPorts = ports;",
      "info" : "ExpressionStatement[45776-45804]:ExpressionStatement[45976-46004]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45816-45822]:Modifier[46016-46022]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[45823-45827]:PrimitiveType[46023-46027]"
    }, {
      "left" : "setServicePorts",
      "right" : "setServicePorts",
      "info" : "SimpleName[45828-45843]:SimpleName[46028-46043]"
    }, {
      "left" : "List<ServicePort> ports",
      "right" : "List<ServicePort> ports",
      "info" : "SingleVariableDeclaration[45844-45867]:SingleVariableDeclaration[46044-46067]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45869-45911]:Block[46069-46111]"
    }, {
      "left" : "this.servicePorts = ports;",
      "right" : "this.servicePorts = ports;",
      "info" : "ExpressionStatement[45879-45905]:ExpressionStatement[46079-46105]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[45917-45923]:Modifier[46117-46123]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[45924-45943]:ParameterizedType[46124-46143]"
    }, {
      "left" : "getLabels",
      "right" : "getLabels",
      "info" : "SimpleName[45944-45953]:SimpleName[46144-46153]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45956-46232]:Block[46156-46432]"
    }, {
      "left" : "if (labels == null)",
      "right" : "if (labels == null)",
      "info" : "IfStatement[45966-46035]:IfStatement[46166-46235]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[45986-46035]:Block[46186-46235]"
    }, {
      "left" : "labels = new HashMap<>();",
      "right" : "labels = new HashMap<>();",
      "info" : "ExpressionStatement[46000-46025]:ExpressionStatement[46200-46225]"
    }, {
      "left" : "if (labels.isEmpty())",
      "right" : "if (labels.isEmpty())",
      "info" : "IfStatement[46044-46203]:IfStatement[46244-46403]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46066-46203]:Block[46266-46403]"
    }, {
      "left" : "labels = findPropertiesWithPrefix(getProject().getProperties(), \"fabric8.label.\", Strings.toLowerCaseFunction());",
      "right" : "labels = findPropertiesWithPrefix(getProject().getProperties(), \"fabric8.label.\", Strings.toLowerCaseFunction());",
      "info" : "ExpressionStatement[46080-46193]:ExpressionStatement[46280-46393]"
    }, {
      "left" : "return labels;",
      "right" : "return labels;",
      "info" : "ReturnStatement[46212-46226]:ReturnStatement[46412-46426]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[46238-46244]:Modifier[46438-46444]"
    }, {
      "left" : "List<EnvVar>",
      "right" : "List<EnvVar>",
      "info" : "ParameterizedType[46245-46257]:ParameterizedType[46445-46457]"
    }, {
      "left" : "getEnvironmentVariables",
      "right" : "getEnvironmentVariables",
      "info" : "SimpleName[46258-46281]:SimpleName[46458-46481]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[46291-46313]:SimpleType[46491-46513]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46314-47679]:Block[46514-47879]"
    }, {
      "left" : "if (environmentVariables == null)",
      "right" : "if (environmentVariables == null)",
      "info" : "IfStatement[46324-46429]:IfStatement[46524-46629]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46358-46429]:Block[46558-46629]"
    }, {
      "left" : "environmentVariables = new ArrayList<EnvVar>();",
      "right" : "environmentVariables = new ArrayList<EnvVar>();",
      "info" : "ExpressionStatement[46372-46419]:ExpressionStatement[46572-46619]"
    }, {
      "left" : "if (environmentVariables.isEmpty())",
      "right" : "if (environmentVariables.isEmpty())",
      "info" : "IfStatement[46438-47244]:IfStatement[46638-47444]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46474-47244]:Block[46674-47444]"
    }, {
      "left" : "Map<String, EnvVar> envMap = new HashMap<>();",
      "right" : "Map<String, EnvVar> envMap = new HashMap<>();",
      "info" : "VariableDeclarationStatement[46488-46533]:VariableDeclarationStatement[46688-46733]"
    }, {
      "left" : "Map<String, String> envs = getExportedEnvironmentVariables();",
      "right" : "Map<String, String> envs = getExportedEnvironmentVariables();",
      "info" : "VariableDeclarationStatement[46546-46607]:VariableDeclarationStatement[46746-46807]"
    }, {
      "left" : "for (Map.Entry<String, String> entry : envs.entrySet())",
      "right" : "for (Map.Entry<String, String> entry : envs.entrySet())",
      "info" : "EnhancedForStatement[46621-47062]:EnhancedForStatement[46821-47262]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46677-47062]:Block[46877-47262]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[46695-46724]:VariableDeclarationStatement[46895-46924]"
    }, {
      "left" : "String value = entry.getValue();",
      "right" : "String value = entry.getValue();",
      "info" : "VariableDeclarationStatement[46741-46773]:VariableDeclarationStatement[46941-46973]"
    }, {
      "left" : "if (name != null)",
      "right" : "if (name != null)",
      "info" : "IfStatement[46791-47048]:IfStatement[46991-47248]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46809-47048]:Block[47009-47248]"
    }, {
      "left" : "EnvVar env = getOrCreateEnv(envMap, name);",
      "right" : "EnvVar env = getOrCreateEnv(envMap, name);",
      "info" : "VariableDeclarationStatement[46831-46873]:VariableDeclarationStatement[47031-47073]"
    }, {
      "left" : "env.setName(name);",
      "right" : "env.setName(name);",
      "info" : "ExpressionStatement[46894-46912]:ExpressionStatement[47094-47112]"
    }, {
      "left" : "if (env.getValue() == null)",
      "right" : "if (env.getValue() == null)",
      "info" : "IfStatement[46934-47030]:IfStatement[47134-47230]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[46962-47030]:Block[47162-47230]"
    }, {
      "left" : "env.setValue(value);",
      "right" : "env.setValue(value);",
      "info" : "ExpressionStatement[46988-47008]:ExpressionStatement[47188-47208]"
    }, {
      "left" : "getLog().info(\"Generated env mappings: \" + envMap);",
      "right" : "getLog().info(\"Generated env mappings: \" + envMap);",
      "info" : "ExpressionStatement[47075-47126]:ExpressionStatement[47275-47326]"
    }, {
      "left" : "getLog().debug(\"from envs: \" + envs);",
      "right" : "getLog().debug(\"from envs: \" + envs);",
      "info" : "ExpressionStatement[47139-47176]:ExpressionStatement[47339-47376]"
    }, {
      "left" : "environmentVariables.addAll(envMap.values());",
      "right" : "environmentVariables.addAll(envMap.values());",
      "info" : "ExpressionStatement[47189-47234]:ExpressionStatement[47389-47434]"
    }, {
      "left" : "if (includeNamespaceEnvVar)",
      "right" : "if (includeNamespaceEnvVar)",
      "info" : "IfStatement[47254-47635]:IfStatement[47454-47835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47282-47635]:Block[47482-47835]"
    }, {
      "left" : "environmentVariables.add(\n                    new EnvVarBuilder().withName(kubernetesNamespaceEnvVar).\n                            withNewValueFrom().withNewFieldRef().\n                            withFieldPath(\"metadata.namespace\").endFieldRef().\n                            endValueFrom().\n                            build());",
      "right" : "environmentVariables.add(\n                    new EnvVarBuilder().withName(kubernetesNamespaceEnvVar).\n                            withNewValueFrom().withNewFieldRef().\n                            withFieldPath(\"metadata.namespace\").endFieldRef().\n                            endValueFrom().\n                            build());",
      "info" : "ExpressionStatement[47296-47625]:ExpressionStatement[47496-47825]"
    }, {
      "left" : "return environmentVariables;",
      "right" : "return environmentVariables;",
      "info" : "ReturnStatement[47645-47673]:ReturnStatement[47845-47873]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[47685-47691]:Modifier[47885-47891]"
    }, {
      "left" : "Map<String, String>",
      "right" : "Map<String, String>",
      "info" : "ParameterizedType[47692-47711]:ParameterizedType[47892-47911]"
    }, {
      "left" : "getExportedEnvironmentVariables",
      "right" : "getExportedEnvironmentVariables",
      "info" : "SimpleName[47712-47743]:SimpleName[47912-47943]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[47753-47775]:SimpleType[47953-47975]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47776-48932]:Block[47976-49132]"
    }, {
      "left" : "if (includeAllEnvironmentVariables)",
      "right" : "if (includeAllEnvironmentVariables)",
      "info" : "IfStatement[47786-48926]:IfStatement[47986-49126]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47822-48854]:Block[48022-49054]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[47836-48844]:TryStatement[48036-49044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[47840-48690]:Block[48040-48890]"
    }, {
      "left" : "JsonSchema schema = getEnvironmentVariableJsonSchema();",
      "right" : "JsonSchema schema = getEnvironmentVariableJsonSchema();",
      "info" : "VariableDeclarationStatement[47858-47913]:VariableDeclarationStatement[48058-48113]"
    }, {
      "left" : "Map<String, String> answer = new TreeMap<>();",
      "right" : "Map<String, String> answer = new TreeMap<>();",
      "info" : "VariableDeclarationStatement[47930-47975]:VariableDeclarationStatement[48130-48175]"
    }, {
      "left" : "Map<String, JsonSchemaProperty> properties = schema.getProperties();",
      "right" : "Map<String, JsonSchemaProperty> properties = schema.getProperties();",
      "info" : "VariableDeclarationStatement[47992-48060]:VariableDeclarationStatement[48192-48260]"
    }, {
      "left" : "Set<Map.Entry<String, JsonSchemaProperty>> entries = properties.entrySet();",
      "right" : "Set<Map.Entry<String, JsonSchemaProperty>> entries = properties.entrySet();",
      "info" : "VariableDeclarationStatement[48077-48152]:VariableDeclarationStatement[48277-48352]"
    }, {
      "left" : "for (Map.Entry<String, JsonSchemaProperty> entry : entries)",
      "right" : "for (Map.Entry<String, JsonSchemaProperty> entry : entries)",
      "info" : "EnhancedForStatement[48169-48513]:EnhancedForStatement[48369-48713]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48229-48513]:Block[48429-48713]"
    }, {
      "left" : "String name = entry.getKey();",
      "right" : "String name = entry.getKey();",
      "info" : "VariableDeclarationStatement[48251-48280]:VariableDeclarationStatement[48451-48480]"
    }, {
      "left" : "String value = entry.getValue().getDefaultValue();",
      "right" : "String value = entry.getValue().getDefaultValue();",
      "info" : "VariableDeclarationStatement[48301-48351]:VariableDeclarationStatement[48501-48551]"
    }, {
      "left" : "if (value == null)",
      "right" : "if (value == null)",
      "info" : "IfStatement[48372-48450]:IfStatement[48572-48650]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48391-48450]:Block[48591-48650]"
    }, {
      "left" : "value = \"\";",
      "right" : "value = \"\";",
      "info" : "ExpressionStatement[48417-48428]:ExpressionStatement[48617-48628]"
    }, {
      "left" : "answer.put(name, value);",
      "right" : "answer.put(name, value);",
      "info" : "ExpressionStatement[48471-48495]:ExpressionStatement[48671-48695]"
    }, {
      "left" : "Map<String, String> mavenEnvVars = getEnvironmentVariableProperties();",
      "right" : "Map<String, String> mavenEnvVars = getEnvironmentVariableProperties();",
      "info" : "VariableDeclarationStatement[48530-48600]:VariableDeclarationStatement[48730-48800]"
    }, {
      "left" : "answer.putAll(mavenEnvVars);",
      "right" : "answer.putAll(mavenEnvVars);",
      "info" : "ExpressionStatement[48617-48645]:ExpressionStatement[48817-48845]"
    }, {
      "left" : "return answer;",
      "right" : "return answer;",
      "info" : "ReturnStatement[48662-48676]:ReturnStatement[48862-48876]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48713-48844]:Block[48913-49044]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to load environment variable json schema files: \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to load environment variable json schema files: \" + e, e);",
      "info" : "ThrowStatement[48731-48830]:ThrowStatement[48931-49030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48860-48926]:Block[49060-49126]"
    }, {
      "left" : "return getEnvironmentVariableProperties();",
      "right" : "return getEnvironmentVariableProperties();",
      "info" : "ReturnStatement[48874-48916]:ReturnStatement[49074-49116]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[48938-48944]:Modifier[49138-49144]"
    }, {
      "left" : "List<VolumeMount>",
      "right" : "List<VolumeMount>",
      "info" : "ParameterizedType[48945-48962]:ParameterizedType[49145-49162]"
    }, {
      "left" : "getVolumeMounts",
      "right" : "getVolumeMounts",
      "info" : "SimpleName[48963-48978]:SimpleName[49163-49178]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[48981-49949]:Block[49181-50149]"
    }, {
      "left" : "List<VolumeMount> volumeMount = new ArrayList<>();",
      "right" : "List<VolumeMount> volumeMount = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[48991-49041]:VariableDeclarationStatement[49191-49241]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[49050-49086]:VariableDeclarationStatement[49250-49286]"
    }, {
      "left" : "for (Map.Entry<Object, Object> entry : project.getProperties().entrySet())",
      "right" : "for (Map.Entry<Object, Object> entry : project.getProperties().entrySet())",
      "info" : "EnhancedForStatement[49095-49915]:EnhancedForStatement[49295-50115]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49170-49915]:Block[49370-50115]"
    }, {
      "left" : "Object key = entry.getKey();",
      "right" : "Object key = entry.getKey();",
      "info" : "VariableDeclarationStatement[49184-49212]:VariableDeclarationStatement[49384-49412]"
    }, {
      "left" : "if (key instanceof String)",
      "right" : "if (key instanceof String)",
      "info" : "IfStatement[49225-49905]:IfStatement[49425-50105]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49252-49905]:Block[49452-50105]"
    }, {
      "left" : "String s = (String) key;",
      "right" : "String s = (String) key;",
      "info" : "VariableDeclarationStatement[49270-49294]:VariableDeclarationStatement[49470-49494]"
    }, {
      "left" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "right" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "info" : "VariableDeclarationStatement[49311-49349]:VariableDeclarationStatement[49511-49549]"
    }, {
      "left" : "if (m.matches())",
      "right" : "if (m.matches())",
      "info" : "IfStatement[49366-49891]:IfStatement[49566-50091]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49383-49891]:Block[49583-50091]"
    }, {
      "left" : "String name = m.group(NAME);",
      "right" : "String name = m.group(NAME);",
      "info" : "VariableDeclarationStatement[49405-49433]:VariableDeclarationStatement[49605-49633]"
    }, {
      "left" : "String type = m.group(ATTRIBUTE_TYPE);",
      "right" : "String type = m.group(ATTRIBUTE_TYPE);",
      "info" : "VariableDeclarationStatement[49454-49492]:VariableDeclarationStatement[49654-49692]"
    }, {
      "left" : "if (type.equals(VOLUME_MOUNT_PATH))",
      "right" : "if (type.equals(VOLUME_MOUNT_PATH))",
      "info" : "IfStatement[49513-49873]:IfStatement[49713-50073]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49549-49873]:Block[49749-50073]"
    }, {
      "left" : "String path = String.valueOf(entry.getValue());",
      "right" : "String path = String.valueOf(entry.getValue());",
      "info" : "VariableDeclarationStatement[49575-49622]:VariableDeclarationStatement[49775-49822]"
    }, {
      "left" : "volumeMount.add(new VolumeMountBuilder()\n                                .withName(name)\n                                .withMountPath(path)\n                                .withReadOnly(false).build());",
      "right" : "volumeMount.add(new VolumeMountBuilder()\n                                .withName(name)\n                                .withMountPath(path)\n                                .withReadOnly(false).build());",
      "info" : "ExpressionStatement[49647-49851]:ExpressionStatement[49847-50051]"
    }, {
      "left" : "return volumeMount;",
      "right" : "return volumeMount;",
      "info" : "ReturnStatement[49924-49943]:ReturnStatement[50124-50143]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[49955-49961]:Modifier[50155-50161]"
    }, {
      "left" : "List<Volume>",
      "right" : "List<Volume>",
      "info" : "ParameterizedType[49962-49974]:ParameterizedType[50162-50174]"
    }, {
      "left" : "getVolumes",
      "right" : "getVolumes",
      "info" : "SimpleName[49975-49985]:SimpleName[50175-50185]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[49988-50827]:Block[50188-51027]"
    }, {
      "left" : "List<Volume> volumes = new ArrayList<>();",
      "right" : "List<Volume> volumes = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[49998-50039]:VariableDeclarationStatement[50198-50239]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[50048-50084]:VariableDeclarationStatement[50248-50284]"
    }, {
      "left" : "Properties properties = project.getProperties();",
      "right" : "Properties properties = project.getProperties();",
      "info" : "VariableDeclarationStatement[50093-50141]:VariableDeclarationStatement[50293-50341]"
    }, {
      "left" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "right" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "info" : "EnhancedForStatement[50151-50797]:EnhancedForStatement[50351-50997]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50213-50797]:Block[50413-50997]"
    }, {
      "left" : "Object key = entry.getKey();",
      "right" : "Object key = entry.getKey();",
      "info" : "VariableDeclarationStatement[50227-50255]:VariableDeclarationStatement[50427-50455]"
    }, {
      "left" : "if (key instanceof String)",
      "right" : "if (key instanceof String)",
      "info" : "IfStatement[50268-50787]:IfStatement[50468-50987]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50295-50787]:Block[50495-50987]"
    }, {
      "left" : "String s = (String) key;",
      "right" : "String s = (String) key;",
      "info" : "VariableDeclarationStatement[50313-50337]:VariableDeclarationStatement[50513-50537]"
    }, {
      "left" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "right" : "Matcher m = VOLUME_PATTERN.matcher(s);",
      "info" : "VariableDeclarationStatement[50354-50392]:VariableDeclarationStatement[50554-50592]"
    }, {
      "left" : "if (m.matches())",
      "right" : "if (m.matches())",
      "info" : "IfStatement[50409-50773]:IfStatement[50609-50973]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50426-50773]:Block[50626-50973]"
    }, {
      "left" : "String name = m.group(NAME);",
      "right" : "String name = m.group(NAME);",
      "info" : "VariableDeclarationStatement[50448-50476]:VariableDeclarationStatement[50648-50676]"
    }, {
      "left" : "String type = m.group(ATTRIBUTE_TYPE);",
      "right" : "String type = m.group(ATTRIBUTE_TYPE);",
      "info" : "VariableDeclarationStatement[50497-50535]:VariableDeclarationStatement[50697-50735]"
    }, {
      "left" : "VolumeType volumeType = VolumeType.typeFor(type);",
      "right" : "VolumeType volumeType = VolumeType.typeFor(type);",
      "info" : "VariableDeclarationStatement[50556-50605]:VariableDeclarationStatement[50756-50805]"
    }, {
      "left" : "if (volumeType != null)",
      "right" : "if (volumeType != null)",
      "info" : "IfStatement[50626-50755]:IfStatement[50826-50955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50650-50755]:Block[50850-50955]"
    }, {
      "left" : "volumes.add(volumeType.fromProperties(name, properties));",
      "right" : "volumes.add(volumeType.fromProperties(name, properties));",
      "info" : "ExpressionStatement[50676-50733]:ExpressionStatement[50876-50933]"
    }, {
      "left" : "return volumes;",
      "right" : "return volumes;",
      "info" : "ReturnStatement[50806-50821]:ReturnStatement[51006-51021]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[50833-50839]:Modifier[51033-51039]"
    }, {
      "left" : "Template",
      "right" : "Template",
      "info" : "SimpleType[50840-50848]:SimpleType[51040-51048]"
    }, {
      "left" : "getTemplate",
      "right" : "getTemplate",
      "info" : "SimpleName[50849-50860]:SimpleName[51049-51060]"
    }, {
      "left" : "MojoExecutionException",
      "right" : "MojoExecutionException",
      "info" : "SimpleType[50870-50892]:SimpleType[51070-51092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[50893-52782]:Block[51093-52982]"
    }, {
      "left" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters = new ArrayList<>();",
      "right" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters = new ArrayList<>();",
      "info" : "VariableDeclarationStatement[50903-50990]:VariableDeclarationStatement[51103-51190]"
    }, {
      "left" : "MavenProject project = getProject();",
      "right" : "MavenProject project = getProject();",
      "info" : "VariableDeclarationStatement[50999-51035]:VariableDeclarationStatement[51199-51235]"
    }, {
      "left" : "Properties projectProperties = project.getProperties();",
      "right" : "Properties projectProperties = project.getProperties();",
      "info" : "VariableDeclarationStatement[51044-51099]:VariableDeclarationStatement[51244-51299]"
    }, {
      "left" : "Set<String> paramNames = new HashSet<>();",
      "right" : "Set<String> paramNames = new HashSet<>();",
      "info" : "VariableDeclarationStatement[51108-51149]:VariableDeclarationStatement[51308-51349]"
    }, {
      "left" : "if (templateParametersPropertiesFile != null && templateParametersPropertiesFile.isFile() && templateParametersPropertiesFile.exists())",
      "right" : "if (templateParametersPropertiesFile != null && templateParametersPropertiesFile.isFile() && templateParametersPropertiesFile.exists())",
      "info" : "IfStatement[51158-52370]:IfStatement[51358-52570]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51294-52370]:Block[51494-52570]"
    }, {
      "left" : "final String valuePostfix = \".value\";",
      "right" : "final String valuePostfix = \".value\";",
      "info" : "VariableDeclarationStatement[51308-51345]:VariableDeclarationStatement[51508-51545]"
    }, {
      "left" : "final String descriptionPostfix = \".description\";",
      "right" : "final String descriptionPostfix = \".description\";",
      "info" : "VariableDeclarationStatement[51358-51407]:VariableDeclarationStatement[51558-51607]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[51420-52360]:TryStatement[51620-52560]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51424-52169]:Block[51624-52369]"
    }, {
      "left" : "Properties properties = new Properties();",
      "right" : "Properties properties = new Properties();",
      "info" : "VariableDeclarationStatement[51442-51483]:VariableDeclarationStatement[51642-51683]"
    }, {
      "left" : "properties.load(new FileInputStream(templateParametersPropertiesFile));",
      "right" : "properties.load(new FileInputStream(templateParametersPropertiesFile));",
      "info" : "ExpressionStatement[51500-51571]:ExpressionStatement[51700-51771]"
    }, {
      "left" : "Set<Object> keys = properties.keySet();",
      "right" : "Set<Object> keys = properties.keySet();",
      "info" : "VariableDeclarationStatement[51630-51669]:VariableDeclarationStatement[51830-51869]"
    }, {
      "left" : "Properties prefixedProperties = new Properties();",
      "right" : "Properties prefixedProperties = new Properties();",
      "info" : "VariableDeclarationStatement[51686-51735]:VariableDeclarationStatement[51886-51935]"
    }, {
      "left" : "for (Object key : keys)",
      "right" : "for (Object key : keys)",
      "info" : "EnhancedForStatement[51752-52065]:EnhancedForStatement[51952-52265]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51776-52065]:Block[51976-52265]"
    }, {
      "left" : "if (key != null)",
      "right" : "if (key != null)",
      "info" : "IfStatement[51798-52047]:IfStatement[51998-52247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[51815-52047]:Block[52015-52247]"
    }, {
      "left" : "String name = key.toString();",
      "right" : "String name = key.toString();",
      "info" : "VariableDeclarationStatement[51841-51870]:VariableDeclarationStatement[52041-52070]"
    }, {
      "left" : "String value = properties.getProperty(name);",
      "right" : "String value = properties.getProperty(name);",
      "info" : "VariableDeclarationStatement[51895-51939]:VariableDeclarationStatement[52095-52139]"
    }, {
      "left" : "prefixedProperties.put(PARAMETER_PREFIX + \".\" + name, value);",
      "right" : "prefixedProperties.put(PARAMETER_PREFIX + \".\" + name, value);",
      "info" : "ExpressionStatement[51964-52025]:ExpressionStatement[52164-52225]"
    }, {
      "left" : "loadParametersFromProperties(prefixedProperties, parameters, paramNames);",
      "right" : "loadParametersFromProperties(prefixedProperties, parameters, paramNames);",
      "info" : "ExpressionStatement[52082-52155]:ExpressionStatement[52282-52355]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52192-52360]:Block[52392-52560]"
    }, {
      "left" : "throw new MojoExecutionException(\"Failed to load templateParameters properties file \" + templateParametersPropertiesFile + \". \" + e, e);",
      "right" : "throw new MojoExecutionException(\"Failed to load templateParameters properties file \" + templateParametersPropertiesFile + \". \" + e, e);",
      "info" : "ThrowStatement[52210-52346]:ThrowStatement[52410-52546]"
    }, {
      "left" : "loadParametersFromProperties(projectProperties, parameters, paramNames);",
      "right" : "loadParametersFromProperties(projectProperties, parameters, paramNames);",
      "info" : "ExpressionStatement[52379-52451]:ExpressionStatement[52579-52651]"
    }, {
      "left" : "String templateName = projectProperties.containsKey(TEMPLATE_NAME) ?\n                String.valueOf(projectProperties.getProperty(TEMPLATE_NAME)) :\n                project.getArtifactId();",
      "right" : "String templateName = projectProperties.containsKey(TEMPLATE_NAME) ?\n                String.valueOf(projectProperties.getProperty(TEMPLATE_NAME)) :\n                project.getArtifactId();",
      "info" : "VariableDeclarationStatement[52460-52648]:VariableDeclarationStatement[52660-52848]"
    }, {
      "left" : "return new TemplateBuilder().withNewMetadata().withName(templateName).endMetadata().withParameters(parameters).build();",
      "right" : "return new TemplateBuilder().withNewMetadata().withName(templateName).endMetadata().withParameters(parameters).build();",
      "info" : "ReturnStatement[52657-52776]:ReturnStatement[52857-52976]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[52788-52797]:Modifier[52988-52997]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[52798-52802]:PrimitiveType[52998-53002]"
    }, {
      "left" : "loadParametersFromProperties",
      "right" : "loadParametersFromProperties",
      "info" : "SimpleName[52803-52831]:SimpleName[53003-53031]"
    }, {
      "left" : "Properties properties",
      "right" : "Properties properties",
      "info" : "SingleVariableDeclaration[52832-52853]:SingleVariableDeclaration[53032-53053]"
    }, {
      "left" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters",
      "right" : "List<io.fabric8.openshift.api.model.template.Parameter> parameters",
      "info" : "SingleVariableDeclaration[52855-52921]:SingleVariableDeclaration[53055-53121]"
    }, {
      "left" : "Set<String> paramNames",
      "right" : "Set<String> paramNames",
      "info" : "SingleVariableDeclaration[52923-52945]:SingleVariableDeclaration[53123-53145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[52947-54908]:Block[53147-55108]"
    }, {
      "left" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "right" : "for (Map.Entry<Object, Object> entry : properties.entrySet())",
      "info" : "EnhancedForStatement[52957-54902]:EnhancedForStatement[53157-55102]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53019-54902]:Block[53219-55102]"
    }, {
      "left" : "Object key = entry.getKey();",
      "right" : "Object key = entry.getKey();",
      "info" : "VariableDeclarationStatement[53033-53061]:VariableDeclarationStatement[53233-53261]"
    }, {
      "left" : "if (key instanceof String)",
      "right" : "if (key instanceof String)",
      "info" : "IfStatement[53074-54892]:IfStatement[53274-55092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53101-54892]:Block[53301-55092]"
    }, {
      "left" : "String s = (String) key;",
      "right" : "String s = (String) key;",
      "info" : "VariableDeclarationStatement[53119-53143]:VariableDeclarationStatement[53319-53343]"
    }, {
      "left" : "Matcher m = PARAM_PATTERN.matcher(s);",
      "right" : "Matcher m = PARAM_PATTERN.matcher(s);",
      "info" : "VariableDeclarationStatement[53160-53197]:VariableDeclarationStatement[53360-53397]"
    }, {
      "left" : "if (m.matches())",
      "right" : "if (m.matches())",
      "info" : "IfStatement[53214-54878]:IfStatement[53414-55078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53231-54878]:Block[53431-55078]"
    }, {
      "left" : "String name = m.group(NAME);",
      "right" : "String name = m.group(NAME);",
      "info" : "VariableDeclarationStatement[53253-53281]:VariableDeclarationStatement[53453-53481]"
    }, {
      "left" : "if (paramNames.add(name))",
      "right" : "if (paramNames.add(name))",
      "info" : "IfStatement[53302-54860]:IfStatement[53502-55060]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53328-54860]:Block[53528-55060]"
    }, {
      "left" : "String value = properties.getProperty(String.format(PARAMETER_PROPERTY, name, VALUE));",
      "right" : "String value = properties.getProperty(String.format(PARAMETER_PROPERTY, name, VALUE));",
      "info" : "VariableDeclarationStatement[53354-53440]:VariableDeclarationStatement[53554-53640]"
    }, {
      "left" : "String from = properties.getProperty(String.format(PARAMETER_PROPERTY, name, FROM));",
      "right" : "String from = properties.getProperty(String.format(PARAMETER_PROPERTY, name, FROM));",
      "info" : "VariableDeclarationStatement[53465-53549]:VariableDeclarationStatement[53665-53749]"
    }, {
      "left" : "String description = properties.getProperty(String.format(PARAMETER_PROPERTY, name, DESCRIPTION));",
      "right" : "String description = properties.getProperty(String.format(PARAMETER_PROPERTY, name, DESCRIPTION));",
      "info" : "VariableDeclarationStatement[53574-53672]:VariableDeclarationStatement[53774-53872]"
    }, {
      "left" : "String generate = properties.getProperty(String.format(PARAMETER_PROPERTY, name, GENERATE));",
      "right" : "String generate = properties.getProperty(String.format(PARAMETER_PROPERTY, name, GENERATE));",
      "info" : "VariableDeclarationStatement[53697-53789]:VariableDeclarationStatement[53897-53989]"
    }, {
      "left" : "if (Strings.isNullOrBlank(value) && Strings.isNullOrBlank(from))",
      "right" : "if (Strings.isNullOrBlank(value) && Strings.isNullOrBlank(from))",
      "info" : "IfStatement[53908-54104]:IfStatement[54108-54304]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[53973-54104]:Block[54173-54304]"
    }, {
      "left" : "value = properties.getProperty(String.format(PARAMETER_NAME_PREFIX, name));",
      "right" : "value = properties.getProperty(String.format(PARAMETER_NAME_PREFIX, name));",
      "info" : "ExpressionStatement[54003-54078]:ExpressionStatement[54203-54278]"
    }, {
      "left" : "getLog().info(\"Found Template parameter: \" + name +\n                                labelValueOrBlank(\"value\", value) +\n                                labelValueOrBlank(\"from\", from) +\n                                labelValueOrBlank(\"generate\", generate) +\n                                labelValueOrBlank(\"description\", description));",
      "right" : "getLog().info(\"Found Template parameter: \" + name +\n                                labelValueOrBlank(\"value\", value) +\n                                labelValueOrBlank(\"from\", from) +\n                                labelValueOrBlank(\"generate\", generate) +\n                                labelValueOrBlank(\"description\", description));",
      "info" : "ExpressionStatement[54129-54468]:ExpressionStatement[54329-54668]"
    }, {
      "left" : "parameters.add(new ParameterBuilder()\n                                .withName(name)\n                                .withFrom(from)\n                                .withValue(value)\n                                .withGenerate(generate)\n                                .withDescription(description)\n                                .build());",
      "right" : "parameters.add(new ParameterBuilder()\n                                .withName(name)\n                                .withFrom(from)\n                                .withValue(value)\n                                .withGenerate(generate)\n                                .withDescription(description)\n                                .build());",
      "info" : "ExpressionStatement[54494-54838]:ExpressionStatement[54694-55038]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[54914-54921]:Modifier[55114-55121]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[54922-54928]:SimpleType[55122-55128]"
    }, {
      "left" : "labelValueOrBlank",
      "right" : "labelValueOrBlank",
      "info" : "SimpleName[54929-54946]:SimpleName[55129-55146]"
    }, {
      "left" : "String label",
      "right" : "String label",
      "info" : "SingleVariableDeclaration[54947-54959]:SingleVariableDeclaration[55147-55159]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[54961-54973]:SingleVariableDeclaration[55161-55173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[54975-55120]:Block[55175-55320]"
    }, {
      "left" : "if (Strings.isNotBlank(value))",
      "right" : "if (Strings.isNotBlank(value))",
      "info" : "IfStatement[54985-55114]:IfStatement[55185-55314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55016-55074]:Block[55216-55274]"
    }, {
      "left" : "return \" \" + label + \": \" + value;",
      "right" : "return \" \" + label + \": \" + value;",
      "info" : "ReturnStatement[55030-55064]:ReturnStatement[55230-55264]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55080-55114]:Block[55280-55314]"
    }, {
      "left" : "return \"\";",
      "right" : "return \"\";",
      "info" : "ReturnStatement[55094-55104]:ReturnStatement[55294-55304]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[55126-55132]:Modifier[55326-55332]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55133-55137]:PrimitiveType[55333-55337]"
    }, {
      "left" : "setLabels",
      "right" : "setLabels",
      "info" : "SimpleName[55138-55147]:SimpleName[55338-55347]"
    }, {
      "left" : "Map<String, String> labels",
      "right" : "Map<String, String> labels",
      "info" : "SingleVariableDeclaration[55148-55174]:SingleVariableDeclaration[55348-55374]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55176-55213]:Block[55376-55413]"
    }, {
      "left" : "this.labels = labels;",
      "right" : "this.labels = labels;",
      "info" : "ExpressionStatement[55186-55207]:ExpressionStatement[55386-55407]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[55219-55228]:Modifier[55419-55428]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[55229-55235]:Modifier[55429-55435]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[55236-55240]:PrimitiveType[55436-55440]"
    }, {
      "left" : "addIfNotDefined",
      "right" : "addIfNotDefined",
      "info" : "SimpleName[55241-55256]:SimpleName[55441-55456]"
    }, {
      "left" : "Map<String, Object> variables",
      "right" : "Map<String, Object> variables",
      "info" : "SingleVariableDeclaration[55257-55286]:SingleVariableDeclaration[55457-55486]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[55288-55298]:SingleVariableDeclaration[55488-55498]"
    }, {
      "left" : "String value",
      "right" : "String value",
      "info" : "SingleVariableDeclaration[55300-55312]:SingleVariableDeclaration[55500-55512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55314-55413]:Block[55514-55613]"
    }, {
      "left" : "if (!variables.containsKey(key))",
      "right" : "if (!variables.containsKey(key))",
      "info" : "IfStatement[55324-55407]:IfStatement[55524-55607]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[55357-55407]:Block[55557-55607]"
    }, {
      "left" : "variables.put(key, value);",
      "right" : "variables.put(key, value);",
      "info" : "ExpressionStatement[55371-55397]:ExpressionStatement[55571-55597]"
    } ]
  },
  "interFileMappings" : { }
}