{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "StdSerializer",
      "right" : "StdSerializer",
      "info" : "TypeDeclaration[933-10933]:TypeDeclaration[933-10976]"
    }, {
      "left" : "private static final long serialVersionUID = 1L;",
      "right" : "private static final long serialVersionUID = 1L;",
      "info" : "FieldDeclaration[1307-1355]:FieldDeclaration[1307-1355]"
    }, {
      "left" : "protected final Class<T> _handledType;",
      "right" : "protected final Class<T> _handledType;",
      "info" : "FieldDeclaration[1361-1517]:FieldDeclaration[1361-1517]"
    }, {
      "left" : "protected StdSerializer(Class<T> t)",
      "right" : "protected StdSerializer(Class<T> t)",
      "info" : "MethodDeclaration[1689-1758]:MethodDeclaration[1689-1758]"
    }, {
      "left" : "protected StdSerializer(JavaType type)",
      "right" : "protected StdSerializer(JavaType type)",
      "info" : "MethodDeclaration[1764-1899]:MethodDeclaration[1764-1899]"
    }, {
      "left" : "protected StdSerializer(Class<?> t, boolean dummy)",
      "right" : "protected StdSerializer(Class<?> t, boolean dummy)",
      "info" : "MethodDeclaration[1909-2160]:MethodDeclaration[1909-2160]"
    }, {
      "left" : "public Class<T> handledType()",
      "right" : "public Class<T> handledType()",
      "info" : "MethodDeclaration[2330-2398]:MethodDeclaration[2330-2398]"
    }, {
      "left" : "public abstract void serialize(T value, JsonGenerator jgen, SerializerProvider provider)\n        throws IOException, JsonGenerationException;",
      "right" : "public abstract void serialize(T value, JsonGenerator jgen, SerializerProvider provider)\n        throws IOException, JsonGenerationException;",
      "info" : "MethodDeclaration[2573-2728]:MethodDeclaration[2573-2728]"
    }, {
      "left" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)\n        throws JsonMappingException",
      "right" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[2931-3231]:MethodDeclaration[2931-3231]"
    }, {
      "left" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint, boolean isOptional)\n        throws JsonMappingException",
      "right" : "public JsonNode getSchema(SerializerProvider provider, Type typeHint, boolean isOptional)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[3241-3684]:MethodDeclaration[3241-3684]"
    }, {
      "left" : "protected ObjectNode createObjectNode()",
      "right" : "protected ObjectNode createObjectNode()",
      "info" : "MethodDeclaration[3694-3795]:MethodDeclaration[3694-3795]"
    }, {
      "left" : "protected ObjectNode createSchemaNode(String type)",
      "right" : "protected ObjectNode createSchemaNode(String type)",
      "info" : "MethodDeclaration[3805-3972]:MethodDeclaration[3805-3972]"
    }, {
      "left" : "protected ObjectNode createSchemaNode(String type, boolean isOptional)",
      "right" : "protected ObjectNode createSchemaNode(String type, boolean isOptional)",
      "info" : "MethodDeclaration[3982-4297]:MethodDeclaration[3982-4297]"
    }, {
      "left" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint)\n        throws JsonMappingException",
      "right" : "public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[4307-4632]:MethodDeclaration[4307-4632]"
    }, {
      "left" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, String fieldName)\n        throws IOException",
      "right" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, String fieldName)\n        throws IOException",
      "info" : "MethodDeclaration[4843-6662]:MethodDeclaration[4843-6662]"
    }, {
      "left" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, int index)\n        throws IOException",
      "right" : "public void wrapAndThrow(SerializerProvider provider,\n            Throwable t, Object bean, int index)\n        throws IOException",
      "info" : "MethodDeclaration[6668-7711]:MethodDeclaration[6668-7711]"
    }, {
      "left" : "protected boolean isDefaultSerializer(JsonSerializer<?> serializer)",
      "right" : "protected boolean isDefaultSerializer(JsonSerializer<?> serializer)",
      "info" : "MethodDeclaration[7894-8330]:MethodDeclaration[7894-8330]"
    }, {
      "left" : "protected JsonSerializer<?> findConvertingContentSerializer(SerializerProvider provider,\n            BeanProperty prop, JsonSerializer<?> existingSerializer)\n        throws JsonMappingException",
      "right" : "protected JsonSerializer<?> findConvertingContentSerializer(SerializerProvider provider,\n            BeanProperty prop, JsonSerializer<?> existingSerializer)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[8336-10066]:MethodDeclaration[8336-10109]"
    }, {
      "left" : "protected PropertyFilter findPropertyFilter(SerializerProvider provider,\n            Object filterId, Object valueToFilter)\n        throws JsonMappingException",
      "right" : "protected PropertyFilter findPropertyFilter(SerializerProvider provider,\n            Object filterId, Object valueToFilter)\n        throws JsonMappingException",
      "info" : "MethodDeclaration[10072-10931]:MethodDeclaration[10115-10974]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1725-1758]:Block[1725-1758]"
    }, {
      "left" : "_handledType = t;",
      "right" : "_handledType = t;",
      "info" : "ExpressionStatement[1735-1752]:ExpressionStatement[1735-1752]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1838-1899]:Block[1838-1899]"
    }, {
      "left" : "_handledType = (Class<T>) type.getRawClass();",
      "right" : "_handledType = (Class<T>) type.getRawClass();",
      "info" : "ExpressionStatement[1848-1893]:ExpressionStatement[1848-1893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2116-2160]:Block[2116-2160]"
    }, {
      "left" : "_handledType = (Class<T>) t;",
      "right" : "_handledType = (Class<T>) t;",
      "info" : "ExpressionStatement[2126-2154]:ExpressionStatement[2126-2154]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2374-2398]:Block[2374-2398]"
    }, {
      "left" : "return _handledType;",
      "right" : "return _handledType;",
      "info" : "ReturnStatement[2376-2396]:ReturnStatement[2376-2396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3181-3231]:Block[3181-3231]"
    }, {
      "left" : "return createSchemaNode(\"string\");",
      "right" : "return createSchemaNode(\"string\");",
      "info" : "ReturnStatement[3191-3225]:ReturnStatement[3191-3225]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3511-3684]:Block[3511-3684]"
    }, {
      "left" : "ObjectNode schema = (ObjectNode) getSchema(provider, typeHint);",
      "right" : "ObjectNode schema = (ObjectNode) getSchema(provider, typeHint);",
      "info" : "VariableDeclarationStatement[3518-3581]:VariableDeclarationStatement[3518-3581]"
    }, {
      "left" : "if (!isOptional)",
      "right" : "if (!isOptional)",
      "info" : "IfStatement[3587-3655]:IfStatement[3587-3655]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3604-3655]:Block[3604-3655]"
    }, {
      "left" : "schema.put(\"required\", !isOptional);",
      "right" : "schema.put(\"required\", !isOptional);",
      "info" : "ExpressionStatement[3612-3648]:ExpressionStatement[3612-3648]"
    }, {
      "left" : "return schema;",
      "right" : "return schema;",
      "info" : "ReturnStatement[3664-3678]:ReturnStatement[3664-3678]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3734-3795]:Block[3734-3795]"
    }, {
      "left" : "return JsonNodeFactory.instance.objectNode();",
      "right" : "return JsonNodeFactory.instance.objectNode();",
      "info" : "ReturnStatement[3744-3789]:ReturnStatement[3744-3789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3860-3972]:Block[3860-3972]"
    }, {
      "left" : "ObjectNode schema = createObjectNode();",
      "right" : "ObjectNode schema = createObjectNode();",
      "info" : "VariableDeclarationStatement[3870-3909]:VariableDeclarationStatement[3870-3909]"
    }, {
      "left" : "schema.put(\"type\", type);",
      "right" : "schema.put(\"type\", type);",
      "info" : "ExpressionStatement[3918-3943]:ExpressionStatement[3918-3943]"
    }, {
      "left" : "return schema;",
      "right" : "return schema;",
      "info" : "ReturnStatement[3952-3966]:ReturnStatement[3952-3966]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4057-4297]:Block[4057-4297]"
    }, {
      "left" : "ObjectNode schema = createSchemaNode(type);",
      "right" : "ObjectNode schema = createSchemaNode(type);",
      "info" : "VariableDeclarationStatement[4067-4110]:VariableDeclarationStatement[4067-4110]"
    }, {
      "left" : "if (!isOptional)",
      "right" : "if (!isOptional)",
      "info" : "IfStatement[4191-4268]:IfStatement[4191-4268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4208-4268]:Block[4208-4268]"
    }, {
      "left" : "schema.put(\"required\", !isOptional);",
      "right" : "schema.put(\"required\", !isOptional);",
      "info" : "ExpressionStatement[4222-4258]:ExpressionStatement[4222-4258]"
    }, {
      "left" : "return schema;",
      "right" : "return schema;",
      "info" : "ReturnStatement[4277-4291]:ReturnStatement[4277-4291]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4582-4632]:Block[4582-4632]"
    }, {
      "left" : "visitor.expectAnyFormat(typeHint);",
      "right" : "visitor.expectAnyFormat(typeHint);",
      "info" : "ExpressionStatement[4592-4626]:ExpressionStatement[4592-4626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5513-6662]:Block[5513-6662]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[5738-5850]:WhileStatement[5738-5850]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5809-5850]:Block[5809-5850]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[5823-5840]:ExpressionStatement[5823-5840]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[5921-5985]:IfStatement[5921-5985]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5945-5985]:Block[5945-5985]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[5959-5975]:ThrowStatement[5959-5975]"
    }, {
      "left" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "right" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "info" : "VariableDeclarationStatement[6062-6156]:VariableDeclarationStatement[6062-6156]"
    }, {
      "left" : "if (t instanceof IOException)",
      "right" : "if (t instanceof IOException)",
      "info" : "IfStatement[6165-6529]:IfStatement[6165-6529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6195-6324]:Block[6195-6324]"
    }, {
      "left" : "if (!wrap || !(t instanceof JsonMappingException))",
      "right" : "if (!wrap || !(t instanceof JsonMappingException))",
      "info" : "IfStatement[6209-6314]:IfStatement[6209-6314]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6260-6314]:Block[6260-6314]"
    }, {
      "left" : "throw (IOException) t;",
      "right" : "throw (IOException) t;",
      "info" : "ThrowStatement[6278-6300]:ThrowStatement[6278-6300]"
    }, {
      "left" : "if (!wrap)",
      "right" : "if (!wrap)",
      "info" : "IfStatement[6330-6529]:IfStatement[6330-6529]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6341-6529]:Block[6341-6529]"
    }, {
      "left" : "if (t instanceof RuntimeException)",
      "right" : "if (t instanceof RuntimeException)",
      "info" : "IfStatement[6425-6519]:IfStatement[6425-6519]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6460-6519]:Block[6460-6519]"
    }, {
      "left" : "throw (RuntimeException) t;",
      "right" : "throw (RuntimeException) t;",
      "info" : "ThrowStatement[6478-6505]:ThrowStatement[6478-6505]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, bean, fieldName);",
      "right" : "throw JsonMappingException.wrapWithPath(t, bean, fieldName);",
      "info" : "ThrowStatement[6596-6656]:ThrowStatement[6596-6656]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6802-7711]:Block[6802-7711]"
    }, {
      "left" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "right" : "while (t instanceof InvocationTargetException && t.getCause() != null)",
      "info" : "WhileStatement[6812-6924]:WhileStatement[6812-6924]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6883-6924]:Block[6883-6924]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[6897-6914]:ExpressionStatement[6897-6914]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[6974-7038]:IfStatement[6974-7038]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6998-7038]:Block[6998-7038]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[7012-7028]:ThrowStatement[7012-7028]"
    }, {
      "left" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "right" : "boolean wrap = (provider == null) || provider.isEnabled(SerializationFeature.WRAP_EXCEPTIONS);",
      "info" : "VariableDeclarationStatement[7115-7209]:VariableDeclarationStatement[7115-7209]"
    }, {
      "left" : "if (t instanceof IOException)",
      "right" : "if (t instanceof IOException)",
      "info" : "IfStatement[7218-7582]:IfStatement[7218-7582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7248-7377]:Block[7248-7377]"
    }, {
      "left" : "if (!wrap || !(t instanceof JsonMappingException))",
      "right" : "if (!wrap || !(t instanceof JsonMappingException))",
      "info" : "IfStatement[7262-7367]:IfStatement[7262-7367]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7313-7367]:Block[7313-7367]"
    }, {
      "left" : "throw (IOException) t;",
      "right" : "throw (IOException) t;",
      "info" : "ThrowStatement[7331-7353]:ThrowStatement[7331-7353]"
    }, {
      "left" : "if (!wrap)",
      "right" : "if (!wrap)",
      "info" : "IfStatement[7383-7582]:IfStatement[7383-7582]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7394-7582]:Block[7394-7582]"
    }, {
      "left" : "if (t instanceof RuntimeException)",
      "right" : "if (t instanceof RuntimeException)",
      "info" : "IfStatement[7478-7572]:IfStatement[7478-7572]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7513-7572]:Block[7513-7572]"
    }, {
      "left" : "throw (RuntimeException) t;",
      "right" : "throw (RuntimeException) t;",
      "info" : "ThrowStatement[7531-7558]:ThrowStatement[7531-7558]"
    }, {
      "left" : "throw JsonMappingException.wrapWithPath(t, bean, index);",
      "right" : "throw JsonMappingException.wrapWithPath(t, bean, index);",
      "info" : "ThrowStatement[7649-7705]:ThrowStatement[7649-7705]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8268-8330]:Block[8268-8330]"
    }, {
      "left" : "return ClassUtil.isJacksonStdImpl(serializer);",
      "right" : "return ClassUtil.isJacksonStdImpl(serializer);",
      "info" : "ReturnStatement[8278-8324]:ReturnStatement[8278-8324]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8904-10066]:Block[8904-10109]"
    }, {
      "left" : "final AnnotationIntrospector intr = provider.getAnnotationIntrospector();",
      "right" : "final AnnotationIntrospector intr = provider.getAnnotationIntrospector();",
      "info" : "VariableDeclarationStatement[9132-9205]:VariableDeclarationStatement[9132-9205]"
    }, {
      "left" : "if (intr != null && prop != null)",
      "right" : "if (intr != null && prop != null)",
      "info" : "IfStatement[9214-10025]:IfStatement[9214-10068]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9248-10025]:Block[9248-10068]"
    }, {
      "left" : "AnnotatedMember m = prop.getMember();",
      "right" : "AnnotatedMember m = prop.getMember();",
      "info" : "VariableDeclarationStatement[9262-9299]:VariableDeclarationStatement[9262-9299]"
    }, {
      "left" : "if (m != null)",
      "right" : "if (m != null)",
      "info" : "IfStatement[9312-10015]:IfStatement[9312-10058]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9327-10015]:Block[9327-10058]"
    }, {
      "left" : "Object convDef = intr.findSerializationContentConverter(m);",
      "right" : "Object convDef = intr.findSerializationContentConverter(m);",
      "info" : "VariableDeclarationStatement[9345-9404]:VariableDeclarationStatement[9345-9404]"
    }, {
      "left" : "if (convDef != null)",
      "right" : "if (convDef != null)",
      "info" : "IfStatement[9421-10001]:IfStatement[9421-10044]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9442-10001]:Block[9442-10044]"
    }, {
      "left" : "Converter<Object,Object> conv = provider.converterInstance(prop.getMember(), convDef);",
      "right" : "Converter<Object,Object> conv = provider.converterInstance(prop.getMember(), convDef);",
      "info" : "VariableDeclarationStatement[9464-9550]:VariableDeclarationStatement[9464-9550]"
    }, {
      "left" : "JavaType delegateType = conv.getOutputType(provider.getTypeFactory());",
      "right" : "JavaType delegateType = conv.getOutputType(provider.getTypeFactory());",
      "info" : "VariableDeclarationStatement[9571-9641]:VariableDeclarationStatement[9571-9641]"
    }, {
      "left" : "if (existingSerializer == null)",
      "right" : "if (existingSerializer == null && !delegateType.hasRawClass(Object.class))",
      "info" : "IfStatement[9743-9887]:IfStatement[9743-9930]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9775-9887]:Block[9818-9930]"
    }, {
      "left" : "existingSerializer = provider.findValueSerializer(delegateType);",
      "right" : "existingSerializer = provider.findValueSerializer(delegateType);",
      "info" : "ExpressionStatement[9801-9865]:ExpressionStatement[9844-9908]"
    }, {
      "left" : "return new StdDelegatingSerializer(conv, delegateType, existingSerializer);",
      "right" : "return new StdDelegatingSerializer(conv, delegateType, existingSerializer);",
      "info" : "ReturnStatement[9908-9983]:ReturnStatement[9951-10026]"
    }, {
      "left" : "return existingSerializer;",
      "right" : "return existingSerializer;",
      "info" : "ReturnStatement[10034-10060]:ReturnStatement[10077-10103]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10401-10931]:Block[10444-10974]"
    }, {
      "left" : "FilterProvider filters = provider.getFilterProvider();",
      "right" : "FilterProvider filters = provider.getFilterProvider();",
      "info" : "VariableDeclarationStatement[10411-10465]:VariableDeclarationStatement[10454-10508]"
    }, {
      "left" : "if (filters == null)",
      "right" : "if (filters == null)",
      "info" : "IfStatement[10552-10715]:IfStatement[10595-10758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10573-10715]:Block[10616-10758]"
    }, {
      "left" : "throw new JsonMappingException(\"Can not resolve PropertyFilter with id '\"+filterId+\"'; no FilterProvider configured\");",
      "right" : "throw new JsonMappingException(\"Can not resolve PropertyFilter with id '\"+filterId+\"'; no FilterProvider configured\");",
      "info" : "ThrowStatement[10587-10705]:ThrowStatement[10630-10748]"
    }, {
      "left" : "PropertyFilter filter = filters.findPropertyFilter(filterId, valueToFilter);",
      "right" : "PropertyFilter filter = filters.findPropertyFilter(filterId, valueToFilter);",
      "info" : "VariableDeclarationStatement[10724-10800]:VariableDeclarationStatement[10767-10843]"
    }, {
      "left" : "return filter;",
      "right" : "return filter;",
      "info" : "ReturnStatement[10911-10925]:ReturnStatement[10954-10968]"
    } ]
  },
  "interFileMappings" : { }
}