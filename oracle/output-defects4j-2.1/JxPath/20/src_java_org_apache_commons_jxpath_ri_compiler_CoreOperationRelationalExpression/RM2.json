{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "CoreOperationRelationalExpression",
      "right" : "CoreOperationRelationalExpression",
      "info" : "TypeDeclaration[1143-4941]:TypeDeclaration[1143-5199]"
    }, {
      "left" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "right" : "protected CoreOperationRelationalExpression(Expression[] args)",
      "info" : "MethodDeclaration[1403-1594]:MethodDeclaration[1403-1594]"
    }, {
      "left" : "public final Object computeValue(EvalContext context)",
      "right" : "public final Object computeValue(EvalContext context)",
      "info" : "MethodDeclaration[1600-1784]:MethodDeclaration[1600-1784]"
    }, {
      "left" : "protected final int getPrecedence()",
      "right" : "protected final int getPrecedence()",
      "info" : "MethodDeclaration[1790-1876]:MethodDeclaration[1790-1876]"
    }, {
      "left" : "protected final boolean isSymmetric()",
      "right" : "protected final boolean isSymmetric()",
      "info" : "MethodDeclaration[1882-1949]:MethodDeclaration[1882-1949]"
    }, {
      "left" : "protected abstract boolean evaluateCompare(int compare);",
      "right" : "protected abstract boolean evaluateCompare(int compare);",
      "info" : "MethodDeclaration[1955-2210]:MethodDeclaration[1955-2210]"
    }, {
      "left" : "private boolean compute(Object left, Object right)",
      "right" : "private boolean compute(Object left, Object right)",
      "info" : "MethodDeclaration[2216-3357]:MethodDeclaration[2216-3357]"
    }, {
      "left" : "private Object reduce(Object o)",
      "right" : "private Object reduce(Object o)",
      "info" : "MethodDeclaration[3363-3743]:MethodDeclaration[3363-3743]"
    }, {
      "left" : "private boolean containsMatch(Iterator it, Object value)",
      "right" : "private boolean containsMatch(Iterator it, Object value)",
      "info" : "MethodDeclaration[3749-4199]:MethodDeclaration[3749-4199]"
    }, {
      "left" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "right" : "private boolean findMatch(Iterator lit, Iterator rit)",
      "info" : "MethodDeclaration[4403-4938]:MethodDeclaration[4661-5196]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1566-1594]:Block[1566-1594]"
    }, {
      "left" : "super(args);",
      "right" : "super(args);",
      "info" : "SuperConstructorInvocation[1576-1588]:SuperConstructorInvocation[1576-1588]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1654-1784]:Block[1654-1784]"
    }, {
      "left" : "return compute(args[0].compute(context), args[1].compute(context))\n                ? Boolean.TRUE : Boolean.FALSE;",
      "right" : "return compute(args[0].compute(context), args[1].compute(context))\n                ? Boolean.TRUE : Boolean.FALSE;",
      "info" : "ReturnStatement[1664-1778]:ReturnStatement[1664-1778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1826-1876]:Block[1826-1876]"
    }, {
      "left" : "return RELATIONAL_EXPR_PRECEDENCE;",
      "right" : "return RELATIONAL_EXPR_PRECEDENCE;",
      "info" : "ReturnStatement[1836-1870]:ReturnStatement[1836-1870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1920-1949]:Block[1920-1949]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[1930-1943]:ReturnStatement[1930-1943]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2420-3357]:Block[2420-3357]"
    }, {
      "left" : "left = reduce(left);",
      "right" : "left = reduce(left);",
      "info" : "ExpressionStatement[2430-2450]:ExpressionStatement[2430-2450]"
    }, {
      "left" : "right = reduce(right);",
      "right" : "right = reduce(right);",
      "info" : "ExpressionStatement[2459-2481]:ExpressionStatement[2459-2481]"
    }, {
      "left" : "if (left instanceof InitialContext)",
      "right" : "if (left instanceof InitialContext)",
      "info" : "IfStatement[2491-2583]:IfStatement[2491-2583]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2527-2583]:Block[2527-2583]"
    }, {
      "left" : "((InitialContext) left).reset();",
      "right" : "((InitialContext) left).reset();",
      "info" : "ExpressionStatement[2541-2573]:ExpressionStatement[2541-2573]"
    }, {
      "left" : "if (right instanceof InitialContext)",
      "right" : "if (right instanceof InitialContext)",
      "info" : "IfStatement[2592-2686]:IfStatement[2592-2686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2629-2686]:Block[2629-2686]"
    }, {
      "left" : "((InitialContext) right).reset();",
      "right" : "((InitialContext) right).reset();",
      "info" : "ExpressionStatement[2643-2676]:ExpressionStatement[2643-2676]"
    }, {
      "left" : "if (left instanceof Iterator && right instanceof Iterator)",
      "right" : "if (left instanceof Iterator && right instanceof Iterator)",
      "info" : "IfStatement[2695-2830]:IfStatement[2695-2830]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2754-2830]:Block[2754-2830]"
    }, {
      "left" : "return findMatch((Iterator) left, (Iterator) right);",
      "right" : "return findMatch((Iterator) left, (Iterator) right);",
      "info" : "ReturnStatement[2768-2820]:ReturnStatement[2768-2820]"
    }, {
      "left" : "if (left instanceof Iterator)",
      "right" : "if (left instanceof Iterator)",
      "info" : "IfStatement[2839-2938]:IfStatement[2839-2938]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2869-2938]:Block[2869-2938]"
    }, {
      "left" : "return containsMatch((Iterator) left, right);",
      "right" : "return containsMatch((Iterator) left, right);",
      "info" : "ReturnStatement[2883-2928]:ReturnStatement[2883-2928]"
    }, {
      "left" : "if (right instanceof Iterator)",
      "right" : "if (right instanceof Iterator)",
      "info" : "IfStatement[2947-3047]:IfStatement[2947-3047]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2978-3047]:Block[2978-3047]"
    }, {
      "left" : "double ld = InfoSetUtil.doubleValue(left);",
      "right" : "double ld = InfoSetUtil.doubleValue(left);",
      "info" : "VariableDeclarationStatement[3056-3098]:VariableDeclarationStatement[3056-3098]"
    }, {
      "left" : "if (Double.isNaN(ld))",
      "right" : "if (Double.isNaN(ld))",
      "info" : "IfStatement[3107-3166]:IfStatement[3107-3166]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3129-3166]:Block[3129-3166]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3143-3156]:ReturnStatement[3143-3156]"
    }, {
      "left" : "double rd = InfoSetUtil.doubleValue(right);",
      "right" : "double rd = InfoSetUtil.doubleValue(right);",
      "info" : "VariableDeclarationStatement[3175-3218]:VariableDeclarationStatement[3175-3218]"
    }, {
      "left" : "if (Double.isNaN(rd))",
      "right" : "if (Double.isNaN(rd))",
      "info" : "IfStatement[3227-3286]:IfStatement[3227-3286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3249-3286]:Block[3249-3286]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[3263-3276]:ReturnStatement[3263-3276]"
    }, {
      "left" : "return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);",
      "right" : "return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);",
      "info" : "ReturnStatement[3295-3351]:ReturnStatement[3295-3351]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3516-3743]:Block[3516-3743]"
    }, {
      "left" : "if (o instanceof SelfContext)",
      "right" : "if (o instanceof SelfContext)",
      "info" : "IfStatement[3526-3625]:IfStatement[3526-3625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3556-3625]:Block[3556-3625]"
    }, {
      "left" : "o = ((EvalContext) o).getSingleNodePointer();",
      "right" : "o = ((EvalContext) o).getSingleNodePointer();",
      "info" : "ExpressionStatement[3570-3615]:ExpressionStatement[3570-3615]"
    }, {
      "left" : "if (o instanceof Collection)",
      "right" : "if (o instanceof Collection)",
      "info" : "IfStatement[3634-3719]:IfStatement[3634-3719]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3663-3719]:Block[3663-3719]"
    }, {
      "left" : "o = ((Collection) o).iterator();",
      "right" : "o = ((Collection) o).iterator();",
      "info" : "ExpressionStatement[3677-3709]:ExpressionStatement[3677-3709]"
    }, {
      "left" : "return o;",
      "right" : "return o;",
      "info" : "ReturnStatement[3728-3737]:ReturnStatement[3728-3737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4003-4199]:Block[4003-4199]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[4013-4171]:WhileStatement[4013-4171]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4034-4171]:Block[4034-4171]"
    }, {
      "left" : "Object element = it.next();",
      "right" : "Object element = it.next();",
      "info" : "VariableDeclarationStatement[4048-4075]:VariableDeclarationStatement[4048-4075]"
    }, {
      "left" : "if (compute(element, value))",
      "right" : "if (compute(element, value))",
      "info" : "IfStatement[4088-4161]:IfStatement[4088-4161]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4117-4161]:Block[4117-4161]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[4135-4147]:ReturnStatement[4135-4147]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4180-4193]:ReturnStatement[4180-4193]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4648-4938]:Block[4906-5196]"
    }, {
      "left" : "HashSet left = new HashSet();",
      "right" : "HashSet left = new HashSet();",
      "info" : "VariableDeclarationStatement[4658-4687]:VariableDeclarationStatement[4916-4945]"
    }, {
      "left" : "while (lit.hasNext())",
      "right" : "while (lit.hasNext())",
      "info" : "WhileStatement[4696-4763]:WhileStatement[4954-5021]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4718-4763]:Block[4976-5021]"
    }, {
      "left" : "left.add(lit.next());",
      "right" : "left.add(lit.next());",
      "info" : "ExpressionStatement[4732-4753]:ExpressionStatement[4990-5011]"
    }, {
      "left" : "while (rit.hasNext())",
      "right" : "while (rit.hasNext())",
      "info" : "WhileStatement[4772-4910]:WhileStatement[5030-5168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4794-4910]:Block[5052-5168]"
    }, {
      "left" : "if (containsMatch(left.iterator(), rit.next()))",
      "right" : "if (containsMatch(left.iterator(), rit.next()))",
      "info" : "IfStatement[4808-4900]:IfStatement[5066-5158]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4856-4900]:Block[5114-5158]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[4874-4886]:ReturnStatement[5132-5144]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[4919-4932]:ReturnStatement[5177-5190]"
    } ]
  },
  "interFileMappings" : { }
}