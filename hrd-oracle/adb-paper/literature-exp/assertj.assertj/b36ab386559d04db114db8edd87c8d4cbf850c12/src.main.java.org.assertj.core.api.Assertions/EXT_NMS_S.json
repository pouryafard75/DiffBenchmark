{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Assertions",
      "right" : "Assertions",
      "info" : "TypeDeclaration[2269-60053]:TypeDeclaration[739-7252]"
    }, {
      "left" : "public static AbstractBigDecimalAssert<?> assertThat(BigDecimal actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[4485-4770]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractUriAssert<?> assertThat(URI actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[4774-5031]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractUrlAssert<?> assertThat(URL actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[5035-5292]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractBooleanAssert<?> assertThat(boolean actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[5296-5569]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractBooleanAssert<?> assertThat(Boolean actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[5573-5846]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractBooleanArrayAssert<?> assertThat(boolean[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[5850-6140]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractByteAssert<?> assertThat(byte actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[6144-6405]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractByteAssert<?> assertThat(Byte actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[6409-6670]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractByteArrayAssert<?> assertThat(byte[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[6674-6952]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractCharacterAssert<?> assertThat(char actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[6956-7232]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractCharArrayAssert<?> assertThat(char[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[7236-7514]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractCharacterAssert<?> assertThat(Character actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[7518-7799]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractClassAssert<?> assertThat(Class<?> actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[7803-8070]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static <T extends Comparable<? super T>> AbstractComparableAssert<?, T> assertThat(T actual)",
      "right" : "public static <T extends Comparable<? super T>> AbstractComparableAssert<?, T> assertThat(T actual)",
      "info" : "MethodDeclaration[8074-8443]:MethodDeclaration[4825-5194]"
    }, {
      "left" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterable<? extends T> actual)",
      "right" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterable<? extends T> actual)",
      "info" : "MethodDeclaration[8447-8779]:MethodDeclaration[2857-3189]"
    }, {
      "left" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterator<? extends T> actual)",
      "right" : "public static <T> AbstractIterableAssert<?, ? extends Iterable<? extends T>, T> assertThat(Iterator<? extends T> actual)",
      "info" : "MethodDeclaration[8783-9427]:MethodDeclaration[3193-3837]"
    }, {
      "left" : "public static AbstractDoubleAssert<?> assertThat(double actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[9431-9700]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractDoubleAssert<?> assertThat(Double actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[9704-9973]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractDoubleArrayAssert<?> assertThat(double[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[9977-10263]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractFileAssert<?> assertThat(File actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[10267-10528]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractPathAssert<?> assertThat(Path actual)",
      "right" : "public static AbstractPathAssert<?> assertThat(Path actual)",
      "info" : "MethodDeclaration[10532-10777]:MethodDeclaration[4157-4402]"
    }, {
      "left" : "public static AbstractInputStreamAssert<?, ? extends InputStream> assertThat(InputStream actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[10781-11093]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractFloatAssert<?> assertThat(float actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[11097-11362]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractFloatAssert<?> assertThat(Float actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[11366-11631]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractFloatArrayAssert<?> assertThat(float[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[11635-11917]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractIntegerAssert<?> assertThat(int actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[11921-12190]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractIntArrayAssert<?> assertThat(int[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[12194-12468]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractIntegerAssert<?> assertThat(Integer actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[12472-12745]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> assertThat(List<? extends T> actual)",
      "right" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> assertThat(List<? extends T> actual)",
      "info" : "MethodDeclaration[12749-13061]:MethodDeclaration[3841-4153]"
    }, {
      "left" : "public static AbstractLongAssert<?> assertThat(long actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[13065-13326]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractLongAssert<?> assertThat(Long actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[13330-13591]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractLongArrayAssert<?> assertThat(long[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[13595-13873]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static <T> AbstractObjectAssert<?, T> assertThat(T actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[13877-14150]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static <T extends AssertDelegateTarget> T assertThat(T assertion)",
      "right" : "public static <T extends AssertDelegateTarget> T assertThat(T assertion)",
      "info" : "MethodDeclaration[14154-16206]:MethodDeclaration[5198-7250]"
    }, {
      "left" : "public static <T> T assertThat(final AssertProvider<T> component)",
      "right" : "public static <T> T assertThat(final AssertProvider<T> component)",
      "info" : "MethodDeclaration[16210-16698]:MethodDeclaration[1950-2438]"
    }, {
      "left" : "public static <T> AbstractObjectArrayAssert<?, T> assertThat(T[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[16702-16992]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static <K, V> MapAssert<K, V> assertThat(Map<K, V> actual)",
      "right" : "public static <K, V> MapAssert<K, V> assertThat(Map<K, V> actual)",
      "info" : "MethodDeclaration[16996-17411]:MethodDeclaration[4406-4821]"
    }, {
      "left" : "public static AbstractShortAssert<?> assertThat(short actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[17415-17680]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractShortAssert<?> assertThat(Short actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[17684-17949]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractShortArrayAssert<?> assertThat(short[] actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[17953-18235]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[18239-18556]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractCharSequenceAssert<?, String> assertThat(String actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[18560-18843]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractDateAssert<?> assertThat(Date actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[18847-19108]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractZonedDateTimeAssert<?> assertThat(ZonedDateTime date)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[19112-19405]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractLocalDateTimeAssert<?> assertThat(LocalDateTime localDateTime)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[19409-19720]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractOffsetDateTimeAssert<?> assertThat(OffsetDateTime actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[19724-20029]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractOffsetTimeAssert<?> assertThat(OffsetTime offsetTime)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[20033-20312]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractLocalTimeAssert<?> assertThat(LocalTime actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[20316-20597]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static AbstractThrowableAssert<?, ? extends Throwable> assertThat(Throwable actual)",
      "right" : "public static AbstractCharSequenceAssert<?, ? extends CharSequence> assertThat(CharSequence actual)",
      "info" : "MethodDeclaration[20895-21204]:MethodDeclaration[2536-2853]"
    }, {
      "left" : "public static <K, V> MapEntry<K, V> entry(K key, V value)",
      "right" : "public static <K, V> MapAssert<K, V> assertThat(Map<K, V> actual)",
      "info" : "MethodDeclaration[31943-32606]:MethodDeclaration[4406-4821]"
    }, {
      "left" : "public static <T> DoesNotHave<T> doesNotHave(Condition<? super T> condition)",
      "right" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> assertThat(List<? extends T> actual)",
      "info" : "MethodDeclaration[39638-39926]:MethodDeclaration[3841-4153]"
    }, {
      "left" : "public static <T> Not<T> not(Condition<? super T> condition)",
      "right" : "public static <T> AbstractListAssert<?, ? extends List<? extends T>, T> assertThat(List<? extends T> actual)",
      "info" : "MethodDeclaration[39930-40178]:MethodDeclaration[3841-4153]"
    }, {
      "left" : "protected Assertions()",
      "right" : "protected Assertions()",
      "info" : "MethodDeclaration[59961-60051]:MethodDeclaration[2442-2532]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3203-3209]:Modifier[1896-1902]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[3210-3215]:TYPE_DECLARATION_KIND[1903-1908]"
    }, {
      "left" : "Assertions",
      "right" : "Assertions",
      "info" : "SimpleName[3216-3226]:SimpleName[1909-1919]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[3488-3489]:TypeParameter[2347-2348]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[3506-3507]:SimpleType[3099-3100]"
    }, {
      "left" : "Optional<T> optional",
      "right" : "final AssertProvider<T> component",
      "info" : "SingleVariableDeclaration[3520-3540]:SingleVariableDeclaration[2363-2396]"
    }, {
      "left" : "Optional",
      "right" : "AssertProvider",
      "info" : "SimpleName[3520-3528]:SimpleName[2369-2383]"
    }, {
      "left" : "optional",
      "right" : "component",
      "info" : "SimpleName[3532-3540]:SimpleName[2387-2396]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4652-4658]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4659-4665]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractBigDecimalAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[4666-4690]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractBigDecimalAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[4666-4693]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[4694-4704]:SimpleName[2773-2783]"
    }, {
      "left" : "BigDecimal",
      "right" : "CharSequence",
      "info" : "SimpleName[4705-4715]:SimpleName[2784-2796]"
    }, {
      "left" : "BigDecimal actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[4705-4722]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4724-4770]:Block[2805-2853]"
    }, {
      "left" : "return new BigDecimalAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[4730-4766]:ReturnStatement[2811-2849]"
    }, {
      "left" : "BigDecimalAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[4741-4757]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4934-4940]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4941-4947]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractUriAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[4948-4965]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractUriAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[4948-4968]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[4969-4979]:SimpleName[2773-2783]"
    }, {
      "left" : "URI",
      "right" : "CharSequence",
      "info" : "SimpleName[4980-4983]:SimpleName[2784-2796]"
    }, {
      "left" : "URI actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[4980-4990]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4992-5031]:Block[2805-2853]"
    }, {
      "left" : "return new UriAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[4998-5027]:ReturnStatement[2811-2849]"
    }, {
      "left" : "UriAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[5009-5018]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5195-5201]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5202-5208]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractUrlAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[5209-5226]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractUrlAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[5209-5229]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[5230-5240]:SimpleName[2773-2783]"
    }, {
      "left" : "URL",
      "right" : "CharSequence",
      "info" : "SimpleName[5241-5244]:SimpleName[2784-2796]"
    }, {
      "left" : "URL actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[5241-5251]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5253-5292]:Block[2805-2853]"
    }, {
      "left" : "return new UrlAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[5259-5288]:ReturnStatement[2811-2849]"
    }, {
      "left" : "UrlAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[5270-5279]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5460-5466]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5467-5473]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractBooleanAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[5474-5495]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractBooleanAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[5474-5498]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[5499-5509]:SimpleName[2773-2783]"
    }, {
      "left" : "boolean actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[5510-5524]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5526-5569]:Block[2805-2853]"
    }, {
      "left" : "return new BooleanAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[5532-5565]:ReturnStatement[2811-2849]"
    }, {
      "left" : "BooleanAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[5543-5556]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5737-5743]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5744-5750]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractBooleanAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[5751-5772]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractBooleanAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[5751-5775]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[5776-5786]:SimpleName[2773-2783]"
    }, {
      "left" : "Boolean",
      "right" : "CharSequence",
      "info" : "SimpleName[5787-5794]:SimpleName[2784-2796]"
    }, {
      "left" : "Boolean actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[5787-5801]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5803-5846]:Block[2805-2853]"
    }, {
      "left" : "return new BooleanAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[5809-5842]:ReturnStatement[2811-2849]"
    }, {
      "left" : "BooleanAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[5820-5833]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6019-6025]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6026-6032]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractBooleanArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[6033-6059]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractBooleanArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[6033-6062]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[6063-6073]:SimpleName[2773-2783]"
    }, {
      "left" : "boolean[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[6074-6090]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6092-6140]:Block[2805-2853]"
    }, {
      "left" : "return new BooleanArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[6098-6136]:ReturnStatement[2811-2849]"
    }, {
      "left" : "BooleanArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[6109-6127]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6305-6311]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6312-6318]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractByteAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[6319-6337]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractByteAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[6319-6340]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[6341-6351]:SimpleName[2773-2783]"
    }, {
      "left" : "byte actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[6352-6363]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6365-6405]:Block[2805-2853]"
    }, {
      "left" : "return new ByteAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[6371-6401]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ByteAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[6382-6392]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6570-6576]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6577-6583]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractByteAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[6584-6602]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractByteAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[6584-6605]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[6606-6616]:SimpleName[2773-2783]"
    }, {
      "left" : "Byte",
      "right" : "CharSequence",
      "info" : "SimpleName[6617-6621]:SimpleName[2784-2796]"
    }, {
      "left" : "Byte actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[6617-6628]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6630-6670]:Block[2805-2853]"
    }, {
      "left" : "return new ByteAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[6636-6666]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ByteAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[6647-6657]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6840-6846]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6847-6853]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractByteArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[6854-6877]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractByteArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[6854-6880]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[6881-6891]:SimpleName[2773-2783]"
    }, {
      "left" : "byte[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[6892-6905]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6907-6952]:Block[2805-2853]"
    }, {
      "left" : "return new ByteArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[6913-6948]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ByteArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[6924-6939]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7122-7128]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7129-7135]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractCharacterAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[7136-7159]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractCharacterAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[7136-7162]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[7163-7173]:SimpleName[2773-2783]"
    }, {
      "left" : "char actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[7174-7185]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7187-7232]:Block[2805-2853]"
    }, {
      "left" : "return new CharacterAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[7193-7228]:ReturnStatement[2811-2849]"
    }, {
      "left" : "CharacterAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[7204-7219]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7402-7408]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7409-7415]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractCharArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[7416-7439]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractCharArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[7416-7442]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[7443-7453]:SimpleName[2773-2783]"
    }, {
      "left" : "char[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[7454-7467]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7469-7514]:Block[2805-2853]"
    }, {
      "left" : "return new CharArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[7475-7510]:ReturnStatement[2811-2849]"
    }, {
      "left" : "CharArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[7486-7501]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7684-7690]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7691-7697]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractCharacterAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[7698-7721]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractCharacterAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[7698-7724]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[7725-7735]:SimpleName[2773-2783]"
    }, {
      "left" : "Character",
      "right" : "CharSequence",
      "info" : "SimpleName[7736-7745]:SimpleName[2784-2796]"
    }, {
      "left" : "Character actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[7736-7752]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7754-7799]:Block[2805-2853]"
    }, {
      "left" : "return new CharacterAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[7760-7795]:ReturnStatement[2811-2849]"
    }, {
      "left" : "CharacterAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[7771-7786]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7964-7970]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7971-7977]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractClassAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[7978-7997]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractClassAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[7978-8000]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[8001-8011]:SimpleName[2773-2783]"
    }, {
      "left" : "Class<?> actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[8012-8027]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8029-8070]:Block[2805-2853]"
    }, {
      "left" : "return new ClassAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[8035-8066]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ClassAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[8046-8057]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8288-8294]:Modifier[5039-5045]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8295-8301]:Modifier[5046-5052]"
    }, {
      "left" : "T extends Comparable<? super T>",
      "right" : "T extends Comparable<? super T>",
      "info" : "TypeParameter[8303-8334]:TypeParameter[5054-5085]"
    }, {
      "left" : "AbstractComparableAssert<?, T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[8336-8366]:ParameterizedType[5087-5117]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[8367-8377]:SimpleName[5118-5128]"
    }, {
      "left" : "T actual",
      "right" : "T actual",
      "info" : "SingleVariableDeclaration[8378-8386]:SingleVariableDeclaration[5129-5137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8388-8443]:Block[5139-5194]"
    }, {
      "left" : "return new GenericComparableAssert<>(actual);",
      "right" : "return new GenericComparableAssert<>(actual);",
      "info" : "ReturnStatement[8394-8439]:ReturnStatement[5145-5190]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8612-8618]:Modifier[3022-3028]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8619-8625]:Modifier[3029-3035]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[8627-8628]:TypeParameter[3037-3038]"
    }, {
      "left" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "right" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "info" : "ParameterizedType[8630-8691]:ParameterizedType[3040-3101]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[8692-8702]:SimpleName[3102-3112]"
    }, {
      "left" : "Iterable<? extends T> actual",
      "right" : "Iterable<? extends T> actual",
      "info" : "SingleVariableDeclaration[8703-8731]:SingleVariableDeclaration[3113-3141]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8733-8779]:Block[3143-3189]"
    }, {
      "left" : "return new IterableAssert<>(actual);",
      "right" : "return new IterableAssert<>(actual);",
      "info" : "ReturnStatement[8739-8775]:ReturnStatement[3149-3185]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9260-9266]:Modifier[3670-3676]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9267-9273]:Modifier[3677-3683]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[9275-9276]:TypeParameter[3685-3686]"
    }, {
      "left" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "right" : "AbstractIterableAssert<?, ? extends Iterable<? extends T>, T>",
      "info" : "ParameterizedType[9278-9339]:ParameterizedType[3688-3749]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[9340-9350]:SimpleName[3750-3760]"
    }, {
      "left" : "Iterator<? extends T> actual",
      "right" : "Iterator<? extends T> actual",
      "info" : "SingleVariableDeclaration[9351-9379]:SingleVariableDeclaration[3761-3789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9381-9427]:Block[3791-3837]"
    }, {
      "left" : "return new IterableAssert<>(actual);",
      "right" : "return new IterableAssert<>(actual);",
      "info" : "ReturnStatement[9387-9423]:ReturnStatement[3797-3833]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9594-9600]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9601-9607]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractDoubleAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[9608-9628]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractDoubleAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[9608-9631]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[9632-9642]:SimpleName[2773-2783]"
    }, {
      "left" : "double actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[9643-9656]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9658-9700]:Block[2805-2853]"
    }, {
      "left" : "return new DoubleAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[9664-9696]:ReturnStatement[2811-2849]"
    }, {
      "left" : "DoubleAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[9675-9687]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9867-9873]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9874-9880]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractDoubleAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[9881-9901]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractDoubleAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[9881-9904]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[9905-9915]:SimpleName[2773-2783]"
    }, {
      "left" : "Double",
      "right" : "CharSequence",
      "info" : "SimpleName[9916-9922]:SimpleName[2784-2796]"
    }, {
      "left" : "Double actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[9916-9929]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9931-9973]:Block[2805-2853]"
    }, {
      "left" : "return new DoubleAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[9937-9969]:ReturnStatement[2811-2849]"
    }, {
      "left" : "DoubleAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[9948-9960]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10145-10151]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10152-10158]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractDoubleArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[10159-10184]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractDoubleArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[10159-10187]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[10188-10198]:SimpleName[2773-2783]"
    }, {
      "left" : "double[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[10199-10214]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10216-10263]:Block[2805-2853]"
    }, {
      "left" : "return new DoubleArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[10222-10259]:ReturnStatement[2811-2849]"
    }, {
      "left" : "DoubleArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[10233-10250]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10428-10434]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10435-10441]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractFileAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[10442-10460]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractFileAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[10442-10463]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[10464-10474]:SimpleName[2773-2783]"
    }, {
      "left" : "File",
      "right" : "CharSequence",
      "info" : "SimpleName[10475-10479]:SimpleName[2784-2796]"
    }, {
      "left" : "File actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[10475-10486]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10488-10528]:Block[2805-2853]"
    }, {
      "left" : "return new FileAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[10494-10524]:ReturnStatement[2811-2849]"
    }, {
      "left" : "FileAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[10505-10515]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10677-10683]:Modifier[4302-4308]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10684-10690]:Modifier[4309-4315]"
    }, {
      "left" : "AbstractPathAssert<?>",
      "right" : "AbstractPathAssert<?>",
      "info" : "ParameterizedType[10691-10712]:ParameterizedType[4316-4337]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[10713-10723]:SimpleName[4338-4348]"
    }, {
      "left" : "Path actual",
      "right" : "Path actual",
      "info" : "SingleVariableDeclaration[10724-10735]:SingleVariableDeclaration[4349-4360]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10737-10777]:Block[4362-4402]"
    }, {
      "left" : "return new PathAssert(actual);",
      "right" : "return new PathAssert(actual);",
      "info" : "ReturnStatement[10743-10773]:ReturnStatement[4368-4398]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10949-10955]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[10956-10962]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractInputStreamAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[10963-10988]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractInputStreamAssert<?, ? extends InputStream>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[10963-11014]:ParameterizedType[2719-2772]"
    }, {
      "left" : "InputStream",
      "right" : "CharSequence",
      "info" : "SimpleName[11002-11013]:SimpleName[2759-2771]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[11015-11025]:SimpleName[2773-2783]"
    }, {
      "left" : "InputStream",
      "right" : "CharSequence",
      "info" : "SimpleName[11026-11037]:SimpleName[2784-2796]"
    }, {
      "left" : "InputStream actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[11026-11044]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11046-11093]:Block[2805-2853]"
    }, {
      "left" : "return new InputStreamAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[11052-11089]:ReturnStatement[2811-2849]"
    }, {
      "left" : "InputStreamAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[11063-11080]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11259-11265]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11266-11272]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractFloatAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[11273-11292]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractFloatAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[11273-11295]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[11296-11306]:SimpleName[2773-2783]"
    }, {
      "left" : "float actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[11307-11319]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11321-11362]:Block[2805-2853]"
    }, {
      "left" : "return new FloatAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[11327-11358]:ReturnStatement[2811-2849]"
    }, {
      "left" : "FloatAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[11338-11349]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11528-11534]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11535-11541]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractFloatAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[11542-11561]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractFloatAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[11542-11564]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[11565-11575]:SimpleName[2773-2783]"
    }, {
      "left" : "Float",
      "right" : "CharSequence",
      "info" : "SimpleName[11576-11581]:SimpleName[2784-2796]"
    }, {
      "left" : "Float actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[11576-11588]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11590-11631]:Block[2805-2853]"
    }, {
      "left" : "return new FloatAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[11596-11627]:ReturnStatement[2811-2849]"
    }, {
      "left" : "FloatAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[11607-11618]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11802-11808]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[11809-11815]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractFloatArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[11816-11840]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractFloatArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[11816-11843]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[11844-11854]:SimpleName[2773-2783]"
    }, {
      "left" : "float[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[11855-11869]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11871-11917]:Block[2805-2853]"
    }, {
      "left" : "return new FloatArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[11877-11913]:ReturnStatement[2811-2849]"
    }, {
      "left" : "FloatArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[11888-11904]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12085-12091]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12092-12098]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractIntegerAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[12099-12120]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractIntegerAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[12099-12123]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[12124-12134]:SimpleName[2773-2783]"
    }, {
      "left" : "int actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[12135-12145]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12147-12190]:Block[2805-2853]"
    }, {
      "left" : "return new IntegerAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[12153-12186]:ReturnStatement[2811-2849]"
    }, {
      "left" : "IntegerAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[12164-12177]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12359-12365]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12366-12372]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractIntArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[12373-12395]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractIntArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[12373-12398]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[12399-12409]:SimpleName[2773-2783]"
    }, {
      "left" : "int[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[12410-12422]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12424-12468]:Block[2805-2853]"
    }, {
      "left" : "return new IntArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[12430-12464]:ReturnStatement[2811-2849]"
    }, {
      "left" : "IntArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[12441-12455]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12636-12642]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12643-12649]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractIntegerAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[12650-12671]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractIntegerAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[12650-12674]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[12675-12685]:SimpleName[2773-2783]"
    }, {
      "left" : "Integer",
      "right" : "CharSequence",
      "info" : "SimpleName[12686-12693]:SimpleName[2784-2796]"
    }, {
      "left" : "Integer actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[12686-12700]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12702-12745]:Block[2805-2853]"
    }, {
      "left" : "return new IntegerAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[12708-12741]:ReturnStatement[2811-2849]"
    }, {
      "left" : "IntegerAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[12719-12732]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12910-12916]:Modifier[4002-4008]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[12917-12923]:Modifier[4009-4015]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[12925-12926]:TypeParameter[4017-4018]"
    }, {
      "left" : "AbstractListAssert<?, ? extends List<? extends T>, T>",
      "right" : "AbstractListAssert<?, ? extends List<? extends T>, T>",
      "info" : "ParameterizedType[12928-12981]:ParameterizedType[4020-4073]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[12982-12992]:SimpleName[4074-4084]"
    }, {
      "left" : "List<? extends T> actual",
      "right" : "List<? extends T> actual",
      "info" : "SingleVariableDeclaration[12993-13017]:SingleVariableDeclaration[4085-4109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13019-13061]:Block[4111-4153]"
    }, {
      "left" : "return new ListAssert<>(actual);",
      "right" : "return new ListAssert<>(actual);",
      "info" : "ReturnStatement[13025-13057]:ReturnStatement[4117-4149]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13226-13232]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13233-13239]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractLongAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[13240-13258]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractLongAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[13240-13261]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[13262-13272]:SimpleName[2773-2783]"
    }, {
      "left" : "long actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[13273-13284]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13286-13326]:Block[2805-2853]"
    }, {
      "left" : "return new LongAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[13292-13322]:ReturnStatement[2811-2849]"
    }, {
      "left" : "LongAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[13303-13313]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13491-13497]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13498-13504]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractLongAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[13505-13523]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractLongAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[13505-13526]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[13527-13537]:SimpleName[2773-2783]"
    }, {
      "left" : "Long",
      "right" : "CharSequence",
      "info" : "SimpleName[13538-13542]:SimpleName[2784-2796]"
    }, {
      "left" : "Long actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[13538-13549]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13551-13591]:Block[2805-2853]"
    }, {
      "left" : "return new LongAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[13557-13587]:ReturnStatement[2811-2849]"
    }, {
      "left" : "LongAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[13568-13578]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13761-13767]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[13768-13774]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractLongArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[13775-13798]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractLongArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[13775-13801]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[13802-13812]:SimpleName[2773-2783]"
    }, {
      "left" : "long[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[13813-13826]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13828-13873]:Block[2805-2853]"
    }, {
      "left" : "return new LongArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[13834-13869]:ReturnStatement[2811-2849]"
    }, {
      "left" : "LongArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[13845-13860]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14040-14046]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[14047-14053]:Modifier[2712-2718]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[14055-14056]:TypeParameter[2347-2348]"
    }, {
      "left" : "AbstractObjectAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[14058-14078]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractObjectAssert<?, T>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[14058-14084]:ParameterizedType[2719-2772]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[14082-14083]:SimpleType[3099-3100]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[14085-14095]:SimpleName[2773-2783]"
    }, {
      "left" : "T actual",
      "right" : "T actual",
      "info" : "SingleVariableDeclaration[14096-14104]:SingleVariableDeclaration[5129-5137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14106-14150]:Block[2805-2853]"
    }, {
      "left" : "return new ObjectAssert<>(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[14112-14146]:ReturnStatement[2811-2849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16106-16112]:Modifier[7150-7156]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16113-16119]:Modifier[7157-7163]"
    }, {
      "left" : "T extends AssertDelegateTarget",
      "right" : "T extends AssertDelegateTarget",
      "info" : "TypeParameter[16121-16151]:TypeParameter[7165-7195]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[16153-16154]:SimpleType[7197-7198]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[16155-16165]:SimpleName[7199-7209]"
    }, {
      "left" : "T assertion",
      "right" : "T assertion",
      "info" : "SingleVariableDeclaration[16166-16177]:SingleVariableDeclaration[7210-7221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16179-16206]:Block[7223-7250]"
    }, {
      "left" : "return assertion;",
      "right" : "return assertion;",
      "info" : "ReturnStatement[16185-16202]:ReturnStatement[7229-7246]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16592-16598]:Modifier[2332-2338]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16599-16605]:Modifier[2339-2345]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[16607-16608]:TypeParameter[2347-2348]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[16610-16611]:SimpleType[2350-2351]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[16612-16622]:SimpleName[2352-2362]"
    }, {
      "left" : "final AssertProvider<T> component",
      "right" : "final AssertProvider<T> component",
      "info" : "SingleVariableDeclaration[16623-16656]:SingleVariableDeclaration[2363-2396]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16658-16698]:Block[2398-2438]"
    }, {
      "left" : "return component.assertThat();",
      "right" : "return component.assertThat();",
      "info" : "ReturnStatement[16664-16694]:ReturnStatement[2404-2434]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16870-16876]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[16877-16883]:Modifier[2712-2718]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[16885-16886]:TypeParameter[2347-2348]"
    }, {
      "left" : "AbstractObjectArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[16888-16913]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractObjectArrayAssert<?, T>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[16888-16919]:ParameterizedType[2719-2772]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[16917-16918]:SimpleType[3099-3100]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[16920-16930]:SimpleName[2773-2783]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[16931-16932]:SimpleType[5129-5130]"
    }, {
      "left" : "T[] actual",
      "right" : "T actual",
      "info" : "SingleVariableDeclaration[16931-16941]:SingleVariableDeclaration[5129-5137]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16943-16992]:Block[2805-2853]"
    }, {
      "left" : "return new ObjectArrayAssert<>(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[16949-16988]:ReturnStatement[2811-2849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17304-17310]:Modifier[4714-4720]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17311-17317]:Modifier[4721-4727]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[17319-17320]:TypeParameter[4729-4730]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[17322-17323]:TypeParameter[4732-4733]"
    }, {
      "left" : "MapAssert<K, V>",
      "right" : "MapAssert<K, V>",
      "info" : "ParameterizedType[17325-17340]:ParameterizedType[4735-4750]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[17341-17351]:SimpleName[4751-4761]"
    }, {
      "left" : "Map<K, V> actual",
      "right" : "Map<K, V> actual",
      "info" : "SingleVariableDeclaration[17352-17368]:SingleVariableDeclaration[4762-4778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17370-17411]:Block[4780-4821]"
    }, {
      "left" : "return new MapAssert<>(actual);",
      "right" : "return new MapAssert<>(actual);",
      "info" : "ReturnStatement[17376-17407]:ReturnStatement[4786-4817]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17577-17583]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17584-17590]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractShortAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[17591-17610]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractShortAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[17591-17613]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[17614-17624]:SimpleName[2773-2783]"
    }, {
      "left" : "short actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[17625-17637]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17639-17680]:Block[2805-2853]"
    }, {
      "left" : "return new ShortAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[17645-17676]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ShortAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[17656-17667]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[17846-17852]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[17853-17859]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractShortAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[17860-17879]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractShortAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[17860-17882]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[17883-17893]:SimpleName[2773-2783]"
    }, {
      "left" : "Short",
      "right" : "CharSequence",
      "info" : "SimpleName[17894-17899]:SimpleName[2784-2796]"
    }, {
      "left" : "Short actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[17894-17906]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17908-17949]:Block[2805-2853]"
    }, {
      "left" : "return new ShortAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[17914-17945]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ShortAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[17925-17936]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18120-18126]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18127-18133]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractShortArrayAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[18134-18158]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractShortArrayAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[18134-18161]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[18162-18172]:SimpleName[2773-2783]"
    }, {
      "left" : "short[] actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[18173-18187]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18189-18235]:Block[2805-2853]"
    }, {
      "left" : "return new ShortArrayAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[18195-18231]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ShortArrayAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[18206-18222]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18408-18414]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18415-18421]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[18422-18475]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[18476-18486]:SimpleName[2773-2783]"
    }, {
      "left" : "CharSequence actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[18487-18506]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18508-18556]:Block[2805-2853]"
    }, {
      "left" : "return new CharSequenceAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[18514-18552]:ReturnStatement[2811-2849]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[18723-18729]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[18730-18736]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractCharSequenceAssert<?, String>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[18737-18774]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[18775-18785]:SimpleName[2773-2783]"
    }, {
      "left" : "String",
      "right" : "CharSequence",
      "info" : "SimpleName[18786-18792]:SimpleName[2784-2796]"
    }, {
      "left" : "String actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[18786-18799]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[18801-18843]:Block[2805-2853]"
    }, {
      "left" : "return new StringAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[18807-18839]:ReturnStatement[2811-2849]"
    }, {
      "left" : "StringAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[18818-18830]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19008-19014]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19015-19021]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractDateAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[19022-19040]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractDateAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[19022-19043]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[19044-19054]:SimpleName[2773-2783]"
    }, {
      "left" : "Date",
      "right" : "CharSequence",
      "info" : "SimpleName[19055-19059]:SimpleName[2784-2796]"
    }, {
      "left" : "Date actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[19055-19066]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19068-19108]:Block[2805-2853]"
    }, {
      "left" : "return new DateAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[19074-19104]:ReturnStatement[2811-2849]"
    }, {
      "left" : "DateAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[19085-19095]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19282-19288]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19289-19295]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractZonedDateTimeAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[19296-19323]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractZonedDateTimeAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[19296-19326]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[19327-19337]:SimpleName[2773-2783]"
    }, {
      "left" : "ZonedDateTime",
      "right" : "CharSequence",
      "info" : "SimpleName[19338-19351]:SimpleName[2784-2796]"
    }, {
      "left" : "ZonedDateTime date",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[19338-19356]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "date",
      "right" : "actual",
      "info" : "SimpleName[19352-19356]:SimpleName[2797-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19358-19405]:Block[2805-2853]"
    }, {
      "left" : "return new ZonedDateTimeAssert(date);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[19364-19401]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ZonedDateTimeAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[19375-19394]:SimpleName[2822-2840]"
    }, {
      "left" : "date",
      "right" : "actual",
      "info" : "SimpleName[19395-19399]:SimpleName[2841-2847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19579-19585]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19586-19592]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractLocalDateTimeAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[19593-19620]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractLocalDateTimeAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[19593-19623]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[19624-19634]:SimpleName[2773-2783]"
    }, {
      "left" : "LocalDateTime",
      "right" : "CharSequence",
      "info" : "SimpleName[19635-19648]:SimpleName[2784-2796]"
    }, {
      "left" : "LocalDateTime localDateTime",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[19635-19662]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "localDateTime",
      "right" : "actual",
      "info" : "SimpleName[19649-19662]:SimpleName[2797-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19664-19720]:Block[2805-2853]"
    }, {
      "left" : "return new LocalDateTimeAssert(localDateTime);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[19670-19716]:ReturnStatement[2811-2849]"
    }, {
      "left" : "LocalDateTimeAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[19681-19700]:SimpleName[2822-2840]"
    }, {
      "left" : "localDateTime",
      "right" : "actual",
      "info" : "SimpleName[19701-19714]:SimpleName[2841-2847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[19899-19905]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[19906-19912]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractOffsetDateTimeAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[19913-19941]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractOffsetDateTimeAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[19913-19944]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[19945-19955]:SimpleName[2773-2783]"
    }, {
      "left" : "OffsetDateTime",
      "right" : "CharSequence",
      "info" : "SimpleName[19956-19970]:SimpleName[2784-2796]"
    }, {
      "left" : "OffsetDateTime actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[19956-19977]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19979-20029]:Block[2805-2853]"
    }, {
      "left" : "return new OffsetDateTimeAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[19985-20025]:ReturnStatement[2811-2849]"
    }, {
      "left" : "OffsetDateTimeAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[19996-20016]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20186-20192]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[20193-20199]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractOffsetTimeAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[20200-20224]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractOffsetTimeAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[20200-20227]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[20228-20238]:SimpleName[2773-2783]"
    }, {
      "left" : "OffsetTime",
      "right" : "CharSequence",
      "info" : "SimpleName[20239-20249]:SimpleName[2784-2796]"
    }, {
      "left" : "OffsetTime offsetTime",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[20239-20260]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "offsetTime",
      "right" : "actual",
      "info" : "SimpleName[20250-20260]:SimpleName[2797-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20262-20312]:Block[2805-2853]"
    }, {
      "left" : "return new OffsetTimeAssert(offsetTime);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[20268-20308]:ReturnStatement[2811-2849]"
    }, {
      "left" : "OffsetTimeAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[20279-20295]:SimpleName[2822-2840]"
    }, {
      "left" : "offsetTime",
      "right" : "actual",
      "info" : "SimpleName[20296-20306]:SimpleName[2841-2847]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20482-20488]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[20489-20495]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractLocalTimeAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[20496-20519]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractLocalTimeAssert<?>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[20496-20522]:ParameterizedType[2719-2772]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[20523-20533]:SimpleName[2773-2783]"
    }, {
      "left" : "LocalTime",
      "right" : "CharSequence",
      "info" : "SimpleName[20534-20543]:SimpleName[2784-2796]"
    }, {
      "left" : "LocalTime actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[20534-20550]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20552-20597]:Block[2805-2853]"
    }, {
      "left" : "return new LocalTimeAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[20558-20593]:ReturnStatement[2811-2849]"
    }, {
      "left" : "LocalTimeAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[20569-20584]:SimpleName[2822-2840]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21068-21074]:Modifier[2705-2711]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[21075-21081]:Modifier[2712-2718]"
    }, {
      "left" : "AbstractThrowableAssert",
      "right" : "AbstractCharSequenceAssert",
      "info" : "SimpleName[21082-21105]:SimpleName[2719-2745]"
    }, {
      "left" : "AbstractThrowableAssert<?, ? extends Throwable>",
      "right" : "AbstractCharSequenceAssert<?, ? extends CharSequence>",
      "info" : "ParameterizedType[21082-21129]:ParameterizedType[2719-2772]"
    }, {
      "left" : "Throwable",
      "right" : "CharSequence",
      "info" : "SimpleName[21119-21128]:SimpleName[2759-2771]"
    }, {
      "left" : "assertThat",
      "right" : "assertThat",
      "info" : "SimpleName[21130-21140]:SimpleName[2773-2783]"
    }, {
      "left" : "Throwable",
      "right" : "CharSequence",
      "info" : "SimpleName[21141-21150]:SimpleName[2784-2796]"
    }, {
      "left" : "Throwable actual",
      "right" : "CharSequence actual",
      "info" : "SingleVariableDeclaration[21141-21157]:SingleVariableDeclaration[2784-2803]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21159-21204]:Block[2805-2853]"
    }, {
      "left" : "return new ThrowableAssert(actual);",
      "right" : "return new CharSequenceAssert(actual);",
      "info" : "ReturnStatement[21165-21200]:ReturnStatement[2811-2849]"
    }, {
      "left" : "ThrowableAssert",
      "right" : "CharSequenceAssert",
      "info" : "SimpleName[21176-21191]:SimpleName[2822-2840]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[27979-27980]:TypeParameter[3037-3038]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[27993-27994]:SimpleType[3099-3100]"
    }, {
      "left" : "Class<T> propertyType",
      "right" : "final AssertProvider<T> component",
      "info" : "SingleVariableDeclaration[28033-28054]:SingleVariableDeclaration[2363-2396]"
    }, {
      "left" : "Class",
      "right" : "AssertProvider",
      "info" : "SimpleName[28033-28038]:SimpleName[2369-2383]"
    }, {
      "left" : "propertyType",
      "right" : "component",
      "info" : "SimpleName[28042-28054]:SimpleName[2387-2396]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[32504-32510]:Modifier[4714-4720]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[32511-32517]:Modifier[4721-4727]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "TypeParameter[32519-32520]:TypeParameter[4729-4730]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "TypeParameter[32522-32523]:TypeParameter[4732-4733]"
    }, {
      "left" : "MapEntry",
      "right" : "MapAssert",
      "info" : "SimpleName[32525-32533]:SimpleName[4735-4744]"
    }, {
      "left" : "MapEntry<K, V>",
      "right" : "MapAssert<K, V>",
      "info" : "ParameterizedType[32525-32539]:ParameterizedType[4735-4750]"
    }, {
      "left" : "entry",
      "right" : "assertThat",
      "info" : "SimpleName[32540-32545]:SimpleName[4751-4761]"
    }, {
      "left" : "K",
      "right" : "K",
      "info" : "SimpleType[32546-32547]:SimpleType[4766-4767]"
    }, {
      "left" : "V",
      "right" : "V",
      "info" : "SimpleType[32553-32554]:SimpleType[4769-4770]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[32562-32606]:Block[4780-4821]"
    }, {
      "left" : "return MapEntry.entry(key, value);",
      "right" : "return new MapAssert<>(actual);",
      "info" : "ReturnStatement[32568-32602]:ReturnStatement[4786-4817]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[37945-37946]:TypeParameter[4017-4018]"
    }, {
      "left" : "Condition",
      "right" : "AbstractComparableAssert",
      "info" : "SimpleName[37948-37957]:SimpleName[5087-5111]"
    }, {
      "left" : "Condition<T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[37948-37960]:ParameterizedType[5087-5117]"
    }, {
      "left" : "Condition",
      "right" : "Iterable",
      "info" : "SimpleName[37967-37976]:SimpleName[3113-3121]"
    }, {
      "left" : "Condition<? super T>",
      "right" : "Iterable<? extends T>",
      "info" : "ParameterizedType[37967-37987]:ParameterizedType[3113-3134]"
    }, {
      "left" : "Condition<? super T>... conditions",
      "right" : "Iterable<? extends T> actual",
      "info" : "SingleVariableDeclaration[37967-38001]:SingleVariableDeclaration[3113-3141]"
    }, {
      "left" : "conditions",
      "right" : "actual",
      "info" : "SimpleName[37991-38001]:SimpleName[3135-3141]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[38449-38450]:TypeParameter[4017-4018]"
    }, {
      "left" : "Condition",
      "right" : "AbstractComparableAssert",
      "info" : "SimpleName[38452-38461]:SimpleName[5087-5111]"
    }, {
      "left" : "Condition<T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[38452-38464]:ParameterizedType[5087-5117]"
    }, {
      "left" : "Iterable",
      "right" : "Iterable",
      "info" : "SimpleType[38471-38479]:SimpleType[3113-3121]"
    }, {
      "left" : "Iterable<? extends Condition<? super T>>",
      "right" : "AbstractListAssert<?, ? extends List<? extends T>, T>",
      "info" : "ParameterizedType[38471-38511]:ParameterizedType[4020-4073]"
    }, {
      "left" : "Condition",
      "right" : "List",
      "info" : "SimpleName[38490-38499]:SimpleName[4052-4056]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[39014-39015]:TypeParameter[4017-4018]"
    }, {
      "left" : "Condition",
      "right" : "AbstractComparableAssert",
      "info" : "SimpleName[39017-39026]:SimpleName[5087-5111]"
    }, {
      "left" : "Condition<T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[39017-39029]:ParameterizedType[5087-5117]"
    }, {
      "left" : "Condition",
      "right" : "Iterable",
      "info" : "SimpleName[39036-39045]:SimpleName[3113-3121]"
    }, {
      "left" : "Condition<? super T>",
      "right" : "Iterable<? extends T>",
      "info" : "ParameterizedType[39036-39056]:ParameterizedType[3113-3134]"
    }, {
      "left" : "Condition<? super T>... conditions",
      "right" : "Iterable<? extends T> actual",
      "info" : "SingleVariableDeclaration[39036-39070]:SingleVariableDeclaration[3113-3141]"
    }, {
      "left" : "conditions",
      "right" : "actual",
      "info" : "SimpleName[39060-39070]:SimpleName[3135-3141]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[39518-39519]:TypeParameter[4017-4018]"
    }, {
      "left" : "Condition",
      "right" : "AbstractComparableAssert",
      "info" : "SimpleName[39521-39530]:SimpleName[5087-5111]"
    }, {
      "left" : "Condition<T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[39521-39533]:ParameterizedType[5087-5117]"
    }, {
      "left" : "Iterable",
      "right" : "Iterable",
      "info" : "SimpleType[39540-39548]:SimpleType[3113-3121]"
    }, {
      "left" : "Iterable<? extends Condition<? super T>>",
      "right" : "AbstractListAssert<?, ? extends List<? extends T>, T>",
      "info" : "ParameterizedType[39540-39580]:ParameterizedType[4020-4073]"
    }, {
      "left" : "Condition",
      "right" : "List",
      "info" : "SimpleName[39559-39568]:SimpleName[4052-4056]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[39797-39803]:Modifier[4002-4008]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[39804-39810]:Modifier[4009-4015]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[39812-39813]:TypeParameter[4017-4018]"
    }, {
      "left" : "DoesNotHave",
      "right" : "AbstractComparableAssert",
      "info" : "SimpleName[39815-39826]:SimpleName[5087-5111]"
    }, {
      "left" : "DoesNotHave<T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[39815-39829]:ParameterizedType[5087-5117]"
    }, {
      "left" : "doesNotHave",
      "right" : "assertThat",
      "info" : "SimpleName[39830-39841]:SimpleName[4074-4084]"
    }, {
      "left" : "Condition",
      "right" : "List",
      "info" : "SimpleName[39842-39851]:SimpleName[4085-4089]"
    }, {
      "left" : "Condition<? super T> condition",
      "right" : "List<? extends T> actual",
      "info" : "SingleVariableDeclaration[39842-39872]:SingleVariableDeclaration[4085-4109]"
    }, {
      "left" : "condition",
      "right" : "actual",
      "info" : "SimpleName[39863-39872]:SimpleName[4103-4109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[39874-39926]:Block[4111-4153]"
    }, {
      "left" : "return DoesNotHave.doesNotHave(condition);",
      "right" : "return new ListAssert<>(actual);",
      "info" : "ReturnStatement[39880-39922]:ReturnStatement[4117-4149]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[40081-40087]:Modifier[4002-4008]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[40088-40094]:Modifier[4009-4015]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "TypeParameter[40096-40097]:TypeParameter[4017-4018]"
    }, {
      "left" : "Not",
      "right" : "AbstractComparableAssert",
      "info" : "SimpleName[40099-40102]:SimpleName[5087-5111]"
    }, {
      "left" : "Not<T>",
      "right" : "AbstractComparableAssert<?, T>",
      "info" : "ParameterizedType[40099-40105]:ParameterizedType[5087-5117]"
    }, {
      "left" : "not",
      "right" : "assertThat",
      "info" : "SimpleName[40106-40109]:SimpleName[4074-4084]"
    }, {
      "left" : "Condition",
      "right" : "List",
      "info" : "SimpleName[40110-40119]:SimpleName[4085-4089]"
    }, {
      "left" : "Condition<? super T> condition",
      "right" : "List<? extends T> actual",
      "info" : "SingleVariableDeclaration[40110-40140]:SingleVariableDeclaration[4085-4109]"
    }, {
      "left" : "condition",
      "right" : "actual",
      "info" : "SimpleName[40131-40140]:SimpleName[4103-4109]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[40142-40178]:Block[4111-4153]"
    }, {
      "left" : "return Not.not(condition);",
      "right" : "return new ListAssert<>(actual);",
      "info" : "ReturnStatement[40148-40174]:ReturnStatement[4117-4149]"
    }, {
      "left" : "Iterable<E> iterableToFilter",
      "right" : "Iterable<? extends T> actual",
      "info" : "SingleVariableDeclaration[42279-42307]:SingleVariableDeclaration[3113-3141]"
    }, {
      "left" : "iterableToFilter",
      "right" : "actual",
      "info" : "SimpleName[42291-42307]:SimpleName[3135-3141]"
    }, {
      "left" : "List<String>",
      "right" : "List<? extends T>",
      "info" : "ParameterizedType[48146-48158]:ParameterizedType[4085-4102]"
    }, {
      "left" : "List<String>",
      "right" : "List<? extends T>",
      "info" : "ParameterizedType[48667-48679]:ParameterizedType[4085-4102]"
    }, {
      "left" : "List<String>",
      "right" : "List<? extends T>",
      "info" : "ParameterizedType[49204-49216]:ParameterizedType[4085-4102]"
    }, {
      "left" : "List<String>",
      "right" : "List<? extends T>",
      "info" : "ParameterizedType[51629-51641]:ParameterizedType[4085-4102]"
    }, {
      "left" : "List<String>",
      "right" : "List<? extends T>",
      "info" : "ParameterizedType[52143-52155]:ParameterizedType[4085-4102]"
    }, {
      "left" : "List<String>",
      "right" : "List<? extends T>",
      "info" : "ParameterizedType[52673-52685]:ParameterizedType[4085-4102]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[60026-60035]:Modifier[2507-2516]"
    }, {
      "left" : "Assertions",
      "right" : "Assertions",
      "info" : "SimpleName[60036-60046]:SimpleName[2517-2527]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[60049-60051]:Block[2530-2532]"
    } ]
  },
  "interFileMappings" : { }
}