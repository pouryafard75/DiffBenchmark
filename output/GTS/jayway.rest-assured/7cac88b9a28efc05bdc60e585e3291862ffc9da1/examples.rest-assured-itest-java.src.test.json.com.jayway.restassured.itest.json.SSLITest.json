{
  "matchedElements" : [
 {
    "left" : "class : SSLITest",
    "right" : "class : SSLITest",
    "info" : "TypeDeclaration[1590-10002]:TypeDeclaration[1653-10739]"
  }, {
    "left" : "exception",
    "right" : "exception",
    "info" : "FieldDeclaration[1626-1698]:FieldDeclaration[1711-1783]"
  }, {
    "left" : "public eurosportSpec() : ",
    "right" : "public eurosportSpec() : ",
    "info" : "MethodDeclaration[1704-1989]:MethodDeclaration[1789-2074]"
  }, {
    "left" : "public throwsSSLExceptionWhenHostnameInCertDoesntMatch() : void",
    "right" : "public throwsSSLExceptionWhenHostnameInCertDoesntMatch() : void",
    "info" : "MethodDeclaration[1995-2164]:MethodDeclaration[2080-2249]"
  }, {
    "left" : "public givenKeystoreDefinedStaticallyWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL() : void",
    "right" : "public givenKeystoreDefinedStaticallyWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL() : void",
    "info" : "MethodDeclaration[2170-2535]:MethodDeclaration[2255-2620]"
  }, {
    "left" : "public whenEnablingAllowAllHostNamesVerifierWithoutActivatingAKeyStoreTheCallTo() : void",
    "right" : "public whenEnablingAllowAllHostNamesVerifierWithoutActivatingAKeyStoreTheCallTo() : void",
    "info" : "MethodDeclaration[2541-2896]:MethodDeclaration[2626-2981]"
  }, {
    "left" : "public usingStaticallyConfiguredCertificateAuthenticationWorks() : void",
    "right" : "public usingStaticallyConfiguredCertificateAuthenticationWorks() : void",
    "info" : "MethodDeclaration[2902-3288]:MethodDeclaration[2987-3373]"
  }, {
    "left" : "public usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertDoesntWork() : void",
    "right" : "public usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertDoesntWork() : void",
    "info" : "MethodDeclaration[3294-3713]:MethodDeclaration[3379-3798]"
  }, {
    "left" : "public usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertWorksWhenSSLConfigIsConfiguredToAllowAllHostNames() : void",
    "right" : "public usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertWorksWhenSSLConfigIsConfiguredToAllowAllHostNames() : void",
    "info" : "MethodDeclaration[3719-4219]:MethodDeclaration[3804-4304]"
  }, {
    "left" : "public givenKeystoreDefinedUsingGivenWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL() : void",
    "right" : "public givenKeystoreDefinedUsingGivenWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL() : void",
    "info" : "MethodDeclaration[4225-4504]:MethodDeclaration[4310-4589]"
  }, {
    "left" : "public throwsIOExceptionWhenPasswordIsIncorrect() : void",
    "right" : "public throwsIOExceptionWhenPasswordIsIncorrect() : void",
    "info" : "MethodDeclaration[4510-4961]:MethodDeclaration[4595-5046]"
  }, {
    "left" : "public certificateAuthenticationWorks() : void",
    "right" : "public certificateAuthenticationWorks() : void",
    "info" : "MethodDeclaration[4967-5300]:MethodDeclaration[5052-5385]"
  }, {
    "left" : "public allows_specifying_trust_store_in_dsl() : void",
    "right" : "public allows_specifying_trust_store_in_dsl() : void",
    "info" : "MethodDeclaration[5306-5828]:MethodDeclaration[5391-5913]"
  }, {
    "left" : "public allows_specifying_trust_store_statically() : void",
    "right" : "public allows_specifying_trust_store_statically() : void",
    "info" : "MethodDeclaration[5834-6449]:MethodDeclaration[5919-6534]"
  }, {
    "left" : "public allows_specifying_trust_store_and_allow_all_host_names_in_config_using_dsl() : void",
    "right" : "public allows_specifying_trust_store_and_allow_all_host_names_in_config_using_dsl() : void",
    "info" : "MethodDeclaration[6455-7027]:MethodDeclaration[6540-7112]"
  }, {
    "left" : "public relaxed_https_validation_works_using_instance_config() : void",
    "right" : "public relaxed_https_validation_works_using_instance_config() : void",
    "info" : "MethodDeclaration[7033-7268]:MethodDeclaration[7118-7353]"
  }, {
    "left" : "public relaxed_https_validation_works_using_instance_dsl() : void",
    "right" : "public relaxed_https_validation_works_using_instance_dsl() : void",
    "info" : "MethodDeclaration[7274-7467]:MethodDeclaration[7359-7552]"
  }, {
    "left" : "public relaxed_https_validation_works_when_defined_statically() : void",
    "right" : "public relaxed_https_validation_works_when_defined_statically() : void",
    "info" : "MethodDeclaration[7473-7762]:MethodDeclaration[7558-7847]"
  }, {
    "left" : "public relaxed_https_validation_works_when_defined_statically_with_base_uri() : void",
    "right" : "public relaxed_https_validation_works_when_defined_statically_with_base_uri() : void",
    "info" : "MethodDeclaration[7768-8105]:MethodDeclaration[7853-8190]"
  }, {
    "left" : "public keystore_works_with_static_base_uri() : void",
    "right" : "public keystore_works_with_static_base_uri() : void",
    "info" : "MethodDeclaration[8111-8428]:MethodDeclaration[8196-8513]"
  }, {
    "left" : "public truststrore_works_with_static_base_uri() : void",
    "right" : "public truststrore_works_with_static_base_uri() : void",
    "info" : "MethodDeclaration[8434-9074]:MethodDeclaration[8519-9159]"
  }, {
    "left" : "public can_make_request_to_sites_that_with_valid_ssl_cert() : void",
    "right" : "public can_make_request_to_sites_that_with_valid_ssl_cert() : void",
    "info" : "MethodDeclaration[9081-9226]:MethodDeclaration[9166-9311]"
  }, {
    "left" : "public allows_specifying_trust_store_statically_with_request_builder() : void",
    "right" : "public allows_specifying_trust_store_statically_with_request_builder() : void",
    "info" : "MethodDeclaration[9232-9999]:MethodDeclaration[9317-10084]"
  } ],
  "mappings" : [
 {
    "left" : "@Ignore",
    "right" : "@Ignore",
    "info" : "MarkerAnnotation[1590-1597]:MarkerAnnotation[1653-1660]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1598-1604]:Modifier[1661-1667]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1605-1610]:TYPE_DECLARATION_KIND[1668-1673]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1704-1710]:Modifier[1789-1795]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1711-1717]:Modifier[1796-1802]"
  }, {
    "left" : "ResponseSpecification",
    "right" : "ResponseSpecification",
    "info" : "SimpleType[1718-1739]:SimpleType[1803-1824]"
  }, {
    "left" : "eurosportSpec",
    "right" : "eurosportSpec",
    "info" : "SimpleName[1740-1753]:SimpleName[1825-1838]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1756-1989]:Block[1841-2074]"
  }, {
    "left" : "return new ResponseSpecBuilder().\n                expectBody(containsString(\"An error occurred while processing your request.\")).\n                expectContentType(HTML).\n                expectStatusCode(500).build();",
    "right" : "return new ResponseSpecBuilder().\n                expectBody(containsString(\"An error occurred while processing your request.\")).\n                expectContentType(HTML).\n                expectStatusCode(500).build();",
    "info" : "ReturnStatement[1766-1983]:ReturnStatement[1851-2068]"
  }, {
    "left" : "@Test(expected = SSLException.class)",
    "right" : "@Test(expected = SSLException.class)",
    "info" : "NormalAnnotation[1995-2031]:NormalAnnotation[2080-2116]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2036-2042]:Modifier[2121-2127]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2043-2047]:PrimitiveType[2128-2132]"
  }, {
    "left" : "throwsSSLExceptionWhenHostnameInCertDoesntMatch",
    "right" : "throwsSSLExceptionWhenHostnameInCertDoesntMatch",
    "info" : "SimpleName[2048-2095]:SimpleName[2133-2180]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[2105-2114]:SimpleType[2190-2199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2115-2164]:Block[2200-2249]"
  }, {
    "left" : "get(\"https://tv.eurosport.com/\");",
    "right" : "get(\"https://tv.eurosport.com/\");",
    "info" : "ExpressionStatement[2125-2158]:ExpressionStatement[2210-2243]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[2170-2175]:MarkerAnnotation[2255-2260]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2180-2186]:Modifier[2265-2271]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2187-2191]:PrimitiveType[2272-2276]"
  }, {
    "left" : "givenKeystoreDefinedStaticallyWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL",
    "right" : "givenKeystoreDefinedStaticallyWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL",
    "info" : "SimpleName[2192-2284]:SimpleName[2277-2369]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[2294-2303]:SimpleType[2379-2388]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2304-2535]:Block[2389-2620]"
  }, {
    "left" : "RestAssured.keystore(\"truststore_eurosport.jks\", \"test4321\");",
    "right" : "RestAssured.keystore(\"truststore_eurosport.jks\", \"test4321\");",
    "info" : "ExpressionStatement[2314-2375]:ExpressionStatement[2399-2460]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[2384-2529]:TryStatement[2469-2614]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2388-2476]:Block[2473-2561]"
  }, {
    "left" : "expect().spec(eurosportSpec()).get(\"https://tv.eurosport.com/\");",
    "right" : "expect().spec(eurosportSpec()).get(\"https://tv.eurosport.com/\");",
    "info" : "ExpressionStatement[2402-2466]:ExpressionStatement[2487-2551]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2485-2529]:Block[2570-2614]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[2499-2519]:ExpressionStatement[2584-2604]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[2541-2546]:MarkerAnnotation[2626-2631]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2551-2557]:Modifier[2636-2642]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2558-2562]:PrimitiveType[2643-2647]"
  }, {
    "left" : "whenEnablingAllowAllHostNamesVerifierWithoutActivatingAKeyStoreTheCallTo",
    "right" : "whenEnablingAllowAllHostNamesVerifierWithoutActivatingAKeyStoreTheCallTo",
    "info" : "SimpleName[2563-2635]:SimpleName[2648-2720]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[2645-2654]:SimpleType[2730-2739]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2655-2896]:Block[2740-2981]"
  }, {
    "left" : "RestAssured.config = config().sslConfig(sslConfig().allowAllHostnames());",
    "right" : "RestAssured.config = config().sslConfig(sslConfig().allowAllHostnames());",
    "info" : "ExpressionStatement[2665-2738]:ExpressionStatement[2750-2823]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[2747-2890]:TryStatement[2832-2975]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2751-2837]:Block[2836-2922]"
  }, {
    "left" : "get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "right" : "get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "info" : "ExpressionStatement[2765-2827]:ExpressionStatement[2850-2912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2846-2890]:Block[2931-2975]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[2860-2880]:ExpressionStatement[2945-2965]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[2902-2907]:MarkerAnnotation[2987-2992]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2912-2918]:Modifier[2997-3003]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2919-2923]:PrimitiveType[3004-3008]"
  }, {
    "left" : "usingStaticallyConfiguredCertificateAuthenticationWorks",
    "right" : "usingStaticallyConfiguredCertificateAuthenticationWorks",
    "info" : "SimpleName[2924-2979]:SimpleName[3009-3064]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[2989-2998]:SimpleType[3074-3083]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2999-3288]:Block[3084-3373]"
  }, {
    "left" : "RestAssured.authentication = certificate(\"truststore_eurosport.jks\", \"test4321\", certAuthSettings().allowAllHostnames());",
    "right" : "RestAssured.authentication = certificate(\"truststore_eurosport.jks\", \"test4321\", certAuthSettings().allowAllHostnames());",
    "info" : "ExpressionStatement[3009-3130]:ExpressionStatement[3094-3215]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[3139-3282]:TryStatement[3224-3367]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3143-3229]:Block[3228-3314]"
  }, {
    "left" : "get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "right" : "get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "info" : "ExpressionStatement[3157-3219]:ExpressionStatement[3242-3304]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3238-3282]:Block[3323-3367]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[3252-3272]:ExpressionStatement[3337-3357]"
  }, {
    "left" : "@Test(expected = SSLException.class)",
    "right" : "@Test(expected = SSLException.class)",
    "info" : "NormalAnnotation[3294-3330]:NormalAnnotation[3379-3415]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3335-3341]:Modifier[3420-3426]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3342-3346]:PrimitiveType[3427-3431]"
  }, {
    "left" : "usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertDoesntWork",
    "right" : "usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertDoesntWork",
    "info" : "SimpleName[3347-3432]:SimpleName[3432-3517]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[3442-3451]:SimpleType[3527-3536]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3452-3713]:Block[3537-3798]"
  }, {
    "left" : "RestAssured.authentication = certificate(\"truststore_mjvmobile.jks\", \"test4321\");",
    "right" : "RestAssured.authentication = certificate(\"truststore_mjvmobile.jks\", \"test4321\");",
    "info" : "ExpressionStatement[3462-3543]:ExpressionStatement[3547-3628]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[3552-3707]:TryStatement[3637-3792]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3556-3654]:Block[3641-3739]"
  }, {
    "left" : "get(\"https://tv.eurosport.com/\").then().body(containsString(\"eurosport\"));",
    "right" : "get(\"https://tv.eurosport.com/\").then().body(containsString(\"eurosport\"));",
    "info" : "ExpressionStatement[3570-3644]:ExpressionStatement[3655-3729]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3663-3707]:Block[3748-3792]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[3677-3697]:ExpressionStatement[3762-3782]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[3719-3724]:MarkerAnnotation[3804-3809]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3729-3735]:Modifier[3814-3820]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3736-3740]:PrimitiveType[3821-3825]"
  }, {
    "left" : "usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertWorksWhenSSLConfigIsConfiguredToAllowAllHostNames",
    "right" : "usingStaticallyConfiguredCertificateAuthenticationWithIllegalHostNameInCertWorksWhenSSLConfigIsConfiguredToAllowAllHostNames",
    "info" : "SimpleName[3741-3865]:SimpleName[3826-3950]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[3875-3884]:SimpleType[3960-3969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3885-4219]:Block[3970-4304]"
  }, {
    "left" : "RestAssured.config = newConfig().sslConfig(sslConfig().allowAllHostnames());",
    "right" : "RestAssured.config = newConfig().sslConfig(sslConfig().allowAllHostnames());",
    "info" : "ExpressionStatement[3895-3971]:ExpressionStatement[3980-4056]"
  }, {
    "left" : "RestAssured.authentication = certificate(\"truststore_eurosport.jks\", \"test4321\");",
    "right" : "RestAssured.authentication = certificate(\"truststore_eurosport.jks\", \"test4321\");",
    "info" : "ExpressionStatement[3980-4061]:ExpressionStatement[4065-4146]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[4070-4213]:TryStatement[4155-4298]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4074-4160]:Block[4159-4245]"
  }, {
    "left" : "get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "right" : "get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "info" : "ExpressionStatement[4088-4150]:ExpressionStatement[4173-4235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4169-4213]:Block[4254-4298]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[4183-4203]:ExpressionStatement[4268-4288]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[4225-4230]:MarkerAnnotation[4310-4315]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4235-4241]:Modifier[4320-4326]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4242-4246]:PrimitiveType[4327-4331]"
  }, {
    "left" : "givenKeystoreDefinedUsingGivenWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL",
    "right" : "givenKeystoreDefinedUsingGivenWhenSpecifyingJksKeyStoreFileWithCorrectPasswordAllowsToUseSSL",
    "info" : "SimpleName[4247-4339]:SimpleName[4332-4424]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[4349-4358]:SimpleType[4434-4443]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4359-4504]:Block[4444-4589]"
  }, {
    "left" : "given().keystore(\"/truststore_eurosport.jks\", \"test4321\").then().expect().spec(eurosportSpec()).get(\"https://tv.eurosport.com/\");",
    "right" : "given().keystore(\"/truststore_eurosport.jks\", \"test4321\").then().expect().spec(eurosportSpec()).get(\"https://tv.eurosport.com/\");",
    "info" : "ExpressionStatement[4369-4498]:ExpressionStatement[4454-4583]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[4510-4515]:MarkerAnnotation[4595-4600]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4520-4526]:Modifier[4605-4611]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4527-4531]:PrimitiveType[4612-4616]"
  }, {
    "left" : "throwsIOExceptionWhenPasswordIsIncorrect",
    "right" : "throwsIOExceptionWhenPasswordIsIncorrect",
    "info" : "SimpleName[4532-4572]:SimpleName[4617-4657]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[4582-4591]:SimpleType[4667-4676]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4592-4961]:Block[4677-5046]"
  }, {
    "left" : "exception.expect(IOException.class);",
    "right" : "exception.expect(IOException.class);",
    "info" : "ExpressionStatement[4602-4638]:ExpressionStatement[4687-4723]"
  }, {
    "left" : "exception.expectMessage(\"Keystore was tampered with, or password was incorrect\");",
    "right" : "exception.expectMessage(\"Keystore was tampered with, or password was incorrect\");",
    "info" : "ExpressionStatement[4647-4728]:ExpressionStatement[4732-4813]"
  }, {
    "left" : "given().\n                auth().certificate(\"truststore_eurosport.jks\", \"test4333\").\n        when().\n                get(\"https://tv.eurosport.com/\").\n        then().\n                body(containsString(\"eurosport\"));",
    "right" : "given().\n                auth().certificate(\"truststore_eurosport.jks\", \"test4333\").\n        when().\n                get(\"https://tv.eurosport.com/\").\n        then().\n                body(containsString(\"eurosport\"));",
    "info" : "ExpressionStatement[4738-4955]:ExpressionStatement[4823-5040]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[4967-4972]:MarkerAnnotation[5052-5057]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4977-4983]:Modifier[5062-5068]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4984-4988]:PrimitiveType[5069-5073]"
  }, {
    "left" : "certificateAuthenticationWorks",
    "right" : "certificateAuthenticationWorks",
    "info" : "SimpleName[4989-5019]:SimpleName[5074-5104]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[5029-5038]:SimpleType[5114-5123]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5039-5300]:Block[5124-5385]"
  }, {
    "left" : "given().\n                auth().certificate(\"truststore_eurosport.jks\", \"test4321\", certAuthSettings().allowAllHostnames()).\n        when().\n                get(\"https://tv.eurosport.com/\").\n        then().\n                spec(eurosportSpec());",
    "right" : "given().\n                auth().certificate(\"truststore_eurosport.jks\", \"test4321\", certAuthSettings().allowAllHostnames()).\n        when().\n                get(\"https://tv.eurosport.com/\").\n        then().\n                spec(eurosportSpec());",
    "info" : "ExpressionStatement[5049-5294]:ExpressionStatement[5134-5379]"
  }, {
    "left" : "@Ignore(\"Temporary ignored since site has changed\")",
    "right" : "@Ignore(\"Temporary ignored since site has changed\")",
    "info" : "SingleMemberAnnotation[5306-5357]:SingleMemberAnnotation[5391-5442]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[5358-5363]:MarkerAnnotation[5443-5448]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5364-5370]:Modifier[5449-5455]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5371-5375]:PrimitiveType[5456-5460]"
  }, {
    "left" : "allows_specifying_trust_store_in_dsl",
    "right" : "allows_specifying_trust_store_in_dsl",
    "info" : "SimpleName[5380-5416]:SimpleName[5465-5501]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[5426-5435]:SimpleType[5511-5520]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5436-5828]:Block[5521-5913]"
  }, {
    "left" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_cloudamqp.jks\");",
    "right" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_cloudamqp.jks\");",
    "info" : "VariableDeclarationStatement[5446-5570]:VariableDeclarationStatement[5531-5655]"
  }, {
    "left" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "right" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "info" : "VariableDeclarationStatement[5579-5647]:VariableDeclarationStatement[5664-5732]"
  }, {
    "left" : "keyStore.load(keyStoreStream, \"cloud1234\".toCharArray());",
    "right" : "keyStore.load(keyStoreStream, \"cloud1234\".toCharArray());",
    "info" : "ExpressionStatement[5656-5713]:ExpressionStatement[5741-5798]"
  }, {
    "left" : "given().trustStore(keyStore).then().get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "right" : "given().trustStore(keyStore).then().get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "info" : "ExpressionStatement[5723-5822]:ExpressionStatement[5808-5907]"
  }, {
    "left" : "@Ignore(\"Temporary ignored since site has changed\")",
    "right" : "@Ignore(\"Temporary ignored since site has changed\")",
    "info" : "SingleMemberAnnotation[5834-5885]:SingleMemberAnnotation[5919-5970]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[5886-5891]:MarkerAnnotation[5971-5976]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5892-5898]:Modifier[5977-5983]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5899-5903]:PrimitiveType[5984-5988]"
  }, {
    "left" : "allows_specifying_trust_store_statically",
    "right" : "allows_specifying_trust_store_statically",
    "info" : "SimpleName[5908-5948]:SimpleName[5993-6033]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[5958-5967]:SimpleType[6043-6052]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5968-6449]:Block[6053-6534]"
  }, {
    "left" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_cloudamqp.jks\");",
    "right" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_cloudamqp.jks\");",
    "info" : "VariableDeclarationStatement[5979-6103]:VariableDeclarationStatement[6064-6188]"
  }, {
    "left" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "right" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "info" : "VariableDeclarationStatement[6112-6180]:VariableDeclarationStatement[6197-6265]"
  }, {
    "left" : "keyStore.load(keyStoreStream, \"cloud1234\".toCharArray());",
    "right" : "keyStore.load(keyStoreStream, \"cloud1234\".toCharArray());",
    "info" : "ExpressionStatement[6189-6246]:ExpressionStatement[6274-6331]"
  }, {
    "left" : "RestAssured.trustStore(keyStore);",
    "right" : "RestAssured.trustStore(keyStore);",
    "info" : "ExpressionStatement[6256-6289]:ExpressionStatement[6341-6374]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[6299-6443]:TryStatement[6384-6528]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6303-6390]:Block[6388-6475]"
  }, {
    "left" : "get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "right" : "get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "info" : "ExpressionStatement[6317-6380]:ExpressionStatement[6402-6465]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6399-6443]:Block[6484-6528]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[6413-6433]:ExpressionStatement[6498-6518]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[6455-6460]:MarkerAnnotation[6540-6545]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6461-6467]:Modifier[6546-6552]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6468-6472]:PrimitiveType[6553-6557]"
  }, {
    "left" : "allows_specifying_trust_store_and_allow_all_host_names_in_config_using_dsl",
    "right" : "allows_specifying_trust_store_and_allow_all_host_names_in_config_using_dsl",
    "info" : "SimpleName[6477-6551]:SimpleName[6562-6636]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[6561-6570]:SimpleType[6646-6655]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6571-7027]:Block[6656-7112]"
  }, {
    "left" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_eurosport.jks\");",
    "right" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_eurosport.jks\");",
    "info" : "VariableDeclarationStatement[6581-6705]:VariableDeclarationStatement[6666-6790]"
  }, {
    "left" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "right" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "info" : "VariableDeclarationStatement[6714-6782]:VariableDeclarationStatement[6799-6867]"
  }, {
    "left" : "keyStore.load(keyStoreStream, \"test4321\".toCharArray());",
    "right" : "keyStore.load(keyStoreStream, \"test4321\".toCharArray());",
    "info" : "ExpressionStatement[6791-6847]:ExpressionStatement[6876-6932]"
  }, {
    "left" : "given().config(config().sslConfig(sslConfig().trustStore(keyStore).and().allowAllHostnames())).then().get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "right" : "given().config(config().sslConfig(sslConfig().trustStore(keyStore).and().allowAllHostnames())).then().get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "info" : "ExpressionStatement[6857-7021]:ExpressionStatement[6942-7106]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[7033-7038]:MarkerAnnotation[7118-7123]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7039-7045]:Modifier[7124-7130]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7046-7050]:PrimitiveType[7131-7135]"
  }, {
    "left" : "relaxed_https_validation_works_using_instance_config",
    "right" : "relaxed_https_validation_works_using_instance_config",
    "info" : "SimpleName[7055-7107]:SimpleName[7140-7192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7110-7268]:Block[7195-7353]"
  }, {
    "left" : "given().config(config().sslConfig(sslConfig().relaxedHTTPSValidation())).then().get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "right" : "given().config(config().sslConfig(sslConfig().relaxedHTTPSValidation())).then().get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "info" : "ExpressionStatement[7120-7262]:ExpressionStatement[7205-7347]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[7274-7279]:MarkerAnnotation[7359-7364]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7280-7286]:Modifier[7365-7371]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7287-7291]:PrimitiveType[7372-7376]"
  }, {
    "left" : "relaxed_https_validation_works_using_instance_dsl",
    "right" : "relaxed_https_validation_works_using_instance_dsl",
    "info" : "SimpleName[7296-7345]:SimpleName[7381-7430]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7348-7467]:Block[7433-7552]"
  }, {
    "left" : "given().relaxedHTTPSValidation().then().get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "right" : "given().relaxedHTTPSValidation().then().get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "info" : "ExpressionStatement[7358-7461]:ExpressionStatement[7443-7546]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[7473-7478]:MarkerAnnotation[7558-7563]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7479-7485]:Modifier[7564-7570]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7486-7490]:PrimitiveType[7571-7575]"
  }, {
    "left" : "relaxed_https_validation_works_when_defined_statically",
    "right" : "relaxed_https_validation_works_when_defined_statically",
    "info" : "SimpleName[7495-7549]:SimpleName[7580-7634]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7552-7762]:Block[7637-7847]"
  }, {
    "left" : "RestAssured.useRelaxedHTTPSValidation();",
    "right" : "RestAssured.useRelaxedHTTPSValidation();",
    "info" : "ExpressionStatement[7562-7602]:ExpressionStatement[7647-7687]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[7612-7756]:TryStatement[7697-7841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7616-7703]:Block[7701-7788]"
  }, {
    "left" : "get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "right" : "get(\"https://bunny.cloudamqp.com/api/\").then().statusCode(200);",
    "info" : "ExpressionStatement[7630-7693]:ExpressionStatement[7715-7778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7712-7756]:Block[7797-7841]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[7726-7746]:ExpressionStatement[7811-7831]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[7768-7773]:MarkerAnnotation[7853-7858]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7774-7780]:Modifier[7859-7865]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[7781-7785]:PrimitiveType[7866-7870]"
  }, {
    "left" : "relaxed_https_validation_works_when_defined_statically_with_base_uri",
    "right" : "relaxed_https_validation_works_when_defined_statically_with_base_uri",
    "info" : "SimpleName[7790-7858]:SimpleName[7875-7943]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7861-8105]:Block[7946-8190]"
  }, {
    "left" : "RestAssured.useRelaxedHTTPSValidation();",
    "right" : "RestAssured.useRelaxedHTTPSValidation();",
    "info" : "ExpressionStatement[7871-7911]:ExpressionStatement[7956-7996]"
  }, {
    "left" : "RestAssured.baseURI = \"https://bunny.cloudamqp.com\";",
    "right" : "RestAssured.baseURI = \"https://bunny.cloudamqp.com\";",
    "info" : "ExpressionStatement[7920-7972]:ExpressionStatement[8005-8057]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[7982-8099]:TryStatement[8067-8184]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7986-8046]:Block[8071-8131]"
  }, {
    "left" : "get(\"/api/\").then().statusCode(200);",
    "right" : "get(\"/api/\").then().statusCode(200);",
    "info" : "ExpressionStatement[8000-8036]:ExpressionStatement[8085-8121]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8055-8099]:Block[8140-8184]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[8069-8089]:ExpressionStatement[8154-8174]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[8111-8116]:MarkerAnnotation[8196-8201]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8117-8123]:Modifier[8202-8208]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8124-8128]:PrimitiveType[8209-8213]"
  }, {
    "left" : "keystore_works_with_static_base_uri",
    "right" : "keystore_works_with_static_base_uri",
    "info" : "SimpleName[8133-8168]:SimpleName[8218-8253]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8171-8428]:Block[8256-8513]"
  }, {
    "left" : "RestAssured.baseURI = \"https://tv.eurosport.com/\";",
    "right" : "RestAssured.baseURI = \"https://tv.eurosport.com/\";",
    "info" : "ExpressionStatement[8181-8231]:ExpressionStatement[8266-8316]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[8241-8422]:TryStatement[8326-8507]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8245-8369]:Block[8330-8454]"
  }, {
    "left" : "given().keystore(\"/truststore_eurosport.jks\", \"test4321\").when().get().then().spec(eurosportSpec());",
    "right" : "given().keystore(\"/truststore_eurosport.jks\", \"test4321\").when().get().then().spec(eurosportSpec());",
    "info" : "ExpressionStatement[8259-8359]:ExpressionStatement[8344-8444]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8378-8422]:Block[8463-8507]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[8392-8412]:ExpressionStatement[8477-8497]"
  }, {
    "left" : "@Ignore(\"Temporary ignored since site has changed\")",
    "right" : "@Ignore(\"Temporary ignored since site has changed\")",
    "info" : "SingleMemberAnnotation[8434-8485]:SingleMemberAnnotation[8519-8570]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[8486-8491]:MarkerAnnotation[8571-8576]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8492-8498]:Modifier[8577-8583]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8499-8503]:PrimitiveType[8584-8588]"
  }, {
    "left" : "truststrore_works_with_static_base_uri",
    "right" : "truststrore_works_with_static_base_uri",
    "info" : "SimpleName[8508-8546]:SimpleName[8593-8631]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[8556-8565]:SimpleType[8641-8650]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8565-9074]:Block[8650-9159]"
  }, {
    "left" : "RestAssured.baseURI = \"https://bunny.cloudamqp.com/\";",
    "right" : "RestAssured.baseURI = \"https://bunny.cloudamqp.com/\";",
    "info" : "ExpressionStatement[8575-8628]:ExpressionStatement[8660-8713]"
  }, {
    "left" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_cloudamqp.jks\");",
    "right" : "InputStream keyStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_cloudamqp.jks\");",
    "info" : "VariableDeclarationStatement[8638-8762]:VariableDeclarationStatement[8723-8847]"
  }, {
    "left" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "right" : "KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "info" : "VariableDeclarationStatement[8771-8839]:VariableDeclarationStatement[8856-8924]"
  }, {
    "left" : "keyStore.load(keyStoreStream, \"cloud1234\".toCharArray());",
    "right" : "keyStore.load(keyStoreStream, \"cloud1234\".toCharArray());",
    "info" : "ExpressionStatement[8848-8905]:ExpressionStatement[8933-8990]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[8915-9068]:TryStatement[9000-9153]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8919-9015]:Block[9004-9100]"
  }, {
    "left" : "given().trustStore(keyStore).when().get(\"/api/\").then().statusCode(200);",
    "right" : "given().trustStore(keyStore).when().get(\"/api/\").then().statusCode(200);",
    "info" : "ExpressionStatement[8933-9005]:ExpressionStatement[9018-9090]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9024-9068]:Block[9109-9153]"
  }, {
    "left" : "RestAssured.reset();",
    "right" : "RestAssured.reset();",
    "info" : "ExpressionStatement[9038-9058]:ExpressionStatement[9123-9143]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[9081-9086]:MarkerAnnotation[9166-9171]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9087-9093]:Modifier[9172-9178]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9094-9098]:PrimitiveType[9179-9183]"
  }, {
    "left" : "can_make_request_to_sites_that_with_valid_ssl_cert",
    "right" : "can_make_request_to_sites_that_with_valid_ssl_cert",
    "info" : "SimpleName[9103-9153]:SimpleName[9188-9238]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9156-9226]:Block[9241-9311]"
  }, {
    "left" : "get(\"https://duckduckgo.com/\").then().statusCode(200);",
    "right" : "get(\"https://duckduckgo.com/\").then().statusCode(200);",
    "info" : "ExpressionStatement[9166-9220]:ExpressionStatement[9251-9305]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[9232-9237]:MarkerAnnotation[9317-9322]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[9238-9244]:Modifier[9323-9329]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[9245-9249]:PrimitiveType[9330-9334]"
  }, {
    "left" : "allows_specifying_trust_store_statically_with_request_builder",
    "right" : "allows_specifying_trust_store_statically_with_request_builder",
    "info" : "SimpleName[9254-9315]:SimpleName[9339-9400]"
  }, {
    "left" : "Exception",
    "right" : "Exception",
    "info" : "SimpleType[9325-9334]:SimpleType[9410-9419]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9335-9999]:Block[9420-10084]"
  }, {
    "left" : "InputStream trustStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_eurosport.jks\");",
    "right" : "InputStream trustStoreStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"truststore_eurosport.jks\");",
    "info" : "VariableDeclarationStatement[9377-9503]:VariableDeclarationStatement[9462-9588]"
  }, {
    "left" : "KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "right" : "KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());",
    "info" : "VariableDeclarationStatement[9512-9582]:VariableDeclarationStatement[9597-9667]"
  }, {
    "left" : "trustStore.load(trustStoreStream, \"test4321\".toCharArray());",
    "right" : "trustStore.load(trustStoreStream, \"test4321\".toCharArray());",
    "info" : "ExpressionStatement[9591-9651]:ExpressionStatement[9676-9736]"
  }, {
    "left" : "RestAssured.config = RestAssured.config().sslConfig(sslConfig().trustStore(trustStore).and().allowAllHostnames());",
    "right" : "RestAssured.config = RestAssured.config().sslConfig(sslConfig().trustStore(trustStore).and().allowAllHostnames());",
    "info" : "ExpressionStatement[9712-9826]:ExpressionStatement[9797-9911]"
  }, {
    "left" : "final RequestSpecification spec = new RequestSpecBuilder().build();",
    "right" : "final RequestSpecification spec = new RequestSpecBuilder().build();",
    "info" : "VariableDeclarationStatement[9836-9903]:VariableDeclarationStatement[9921-9988]"
  }, {
    "left" : "given().spec(spec).get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "right" : "given().spec(spec).get(\"https://tv.eurosport.com/\").then().spec(eurosportSpec());",
    "info" : "ExpressionStatement[9912-9993]:ExpressionStatement[9997-10078]"
  } ]
}