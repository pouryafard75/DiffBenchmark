{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "final protected POJOPropertiesCollector _propCollector;",
      "right" : "final protected POJOPropertiesCollector _propCollector;",
      "info" : "FieldDeclaration[1252-1509]:FieldDeclaration[1252-1509]"
    }, {
      "left" : "final protected MapperConfig<?> _config;",
      "right" : "final protected MapperConfig<?> _config;",
      "info" : "FieldDeclaration[1519-1559]:FieldDeclaration[1519-1559]"
    }, {
      "left" : "final protected AnnotationIntrospector _annotationIntrospector;",
      "right" : "final protected AnnotationIntrospector _annotationIntrospector;",
      "info" : "FieldDeclaration[1565-1628]:FieldDeclaration[1565-1628]"
    }, {
      "left" : "final protected AnnotatedClass _classInfo;",
      "right" : "final protected AnnotatedClass _classInfo;",
      "info" : "FieldDeclaration[1638-1755]:FieldDeclaration[1638-1755]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> _properties;",
      "right" : "protected List<BeanPropertyDefinition> _properties;",
      "info" : "FieldDeclaration[1931-2063]:FieldDeclaration[1931-2063]"
    }, {
      "left" : "protected ObjectIdInfo _objectIdInfo;",
      "right" : "protected ObjectIdInfo _objectIdInfo;",
      "info" : "FieldDeclaration[2069-2169]:FieldDeclaration[2069-2169]"
    }, {
      "left" : "protected BasicBeanDescription(POJOPropertiesCollector coll,\n            JavaType type, AnnotatedClass classDef)",
      "right" : "protected BasicBeanDescription(POJOPropertiesCollector coll,\n            JavaType type, AnnotatedClass classDef)",
      "info" : "MethodDeclaration[2337-2822]:MethodDeclaration[2337-2822]"
    }, {
      "left" : "protected BasicBeanDescription(MapperConfig<?> config,\n            JavaType type, AnnotatedClass classDef, List<BeanPropertyDefinition> props)",
      "right" : "protected BasicBeanDescription(MapperConfig<?> config,\n            JavaType type, AnnotatedClass classDef, List<BeanPropertyDefinition> props)",
      "info" : "MethodDeclaration[2828-3487]:MethodDeclaration[2828-3487]"
    }, {
      "left" : "protected BasicBeanDescription(POJOPropertiesCollector coll)",
      "right" : "protected BasicBeanDescription(POJOPropertiesCollector coll)",
      "info" : "MethodDeclaration[3497-3673]:MethodDeclaration[3497-3673]"
    }, {
      "left" : "public static BasicBeanDescription forDeserialization(POJOPropertiesCollector coll)",
      "right" : "public static BasicBeanDescription forDeserialization(POJOPropertiesCollector coll)",
      "info" : "MethodDeclaration[3679-3933]:MethodDeclaration[3679-3933]"
    }, {
      "left" : "public static BasicBeanDescription forSerialization(POJOPropertiesCollector coll)",
      "right" : "public static BasicBeanDescription forSerialization(POJOPropertiesCollector coll)",
      "info" : "MethodDeclaration[3939-4189]:MethodDeclaration[3939-4189]"
    }, {
      "left" : "public static BasicBeanDescription forOtherUse(MapperConfig<?> config,\n            JavaType type, AnnotatedClass ac)",
      "right" : "public static BasicBeanDescription forOtherUse(MapperConfig<?> config,\n            JavaType type, AnnotatedClass ac)",
      "info" : "MethodDeclaration[4195-4661]:MethodDeclaration[4195-4661]"
    }, {
      "left" : "protected List<BeanPropertyDefinition> _properties()",
      "right" : "protected List<BeanPropertyDefinition> _properties()",
      "info" : "MethodDeclaration[4667-4858]:MethodDeclaration[4667-4858]"
    }, {
      "left" : "public boolean removeProperty(String propName)",
      "right" : "public boolean removeProperty(String propName)",
      "info" : "MethodDeclaration[5068-5643]:MethodDeclaration[5068-5643]"
    }, {
      "left" : "public boolean addProperty(BeanPropertyDefinition def)",
      "right" : "public boolean addProperty(BeanPropertyDefinition def)",
      "info" : "MethodDeclaration[5649-5904]:MethodDeclaration[5649-5904]"
    }, {
      "left" : "public boolean hasProperty(PropertyName name)",
      "right" : "public boolean hasProperty(PropertyName name)",
      "info" : "MethodDeclaration[5914-6044]:MethodDeclaration[5914-6044]"
    }, {
      "left" : "public BeanPropertyDefinition findProperty(PropertyName name)",
      "right" : "public BeanPropertyDefinition findProperty(PropertyName name)",
      "info" : "MethodDeclaration[6054-6333]:MethodDeclaration[6054-6333]"
    }, {
      "left" : "public AnnotatedClass getClassInfo()",
      "right" : "public AnnotatedClass getClassInfo()",
      "info" : "MethodDeclaration[6532-6605]:MethodDeclaration[6532-6605]"
    }, {
      "left" : "public ObjectIdInfo getObjectIdInfo()",
      "right" : "public ObjectIdInfo getObjectIdInfo()",
      "info" : "MethodDeclaration[6611-6689]:MethodDeclaration[6611-6689]"
    }, {
      "left" : "public List<BeanPropertyDefinition> findProperties()",
      "right" : "public List<BeanPropertyDefinition> findProperties()",
      "info" : "MethodDeclaration[6695-6799]:MethodDeclaration[6695-6799]"
    }, {
      "left" : "public AnnotatedMethod findJsonValueMethod()",
      "right" : "public AnnotatedMethod findJsonValueMethod()",
      "info" : "MethodDeclaration[6805-6973]:MethodDeclaration[6805-6973]"
    }, {
      "left" : "public Set<String> getIgnoredPropertyNames()",
      "right" : "public Set<String> getIgnoredPropertyNames()",
      "info" : "MethodDeclaration[6979-7263]:MethodDeclaration[6979-7263]"
    }, {
      "left" : "public boolean hasKnownClassAnnotations()",
      "right" : "public boolean hasKnownClassAnnotations()",
      "info" : "MethodDeclaration[7269-7376]:MethodDeclaration[7269-7376]"
    }, {
      "left" : "public Annotations getClassAnnotations()",
      "right" : "public Annotations getClassAnnotations()",
      "info" : "MethodDeclaration[7382-7488]:MethodDeclaration[7382-7488]"
    }, {
      "left" : "// since 2.7\n    public TypeBindings bindingsForBeanType()",
      "right" : "// since 2.7\n    public TypeBindings bindingsForBeanType()",
      "info" : "MethodDeclaration[7494-7622]:MethodDeclaration[7494-7622]"
    }, {
      "left" : "// since 2.8\n    public JavaType resolveType(java.lang.reflect.Type jdkType)",
      "right" : "// since 2.8\n    public JavaType resolveType(java.lang.reflect.Type jdkType)",
      "info" : "MethodDeclaration[7628-7889]:MethodDeclaration[7628-7889]"
    }, {
      "left" : "public AnnotatedConstructor findDefaultConstructor()",
      "right" : "public AnnotatedConstructor findDefaultConstructor()",
      "info" : "MethodDeclaration[7895-8020]:MethodDeclaration[7895-8020]"
    }, {
      "left" : "public AnnotatedMethod findAnySetter() throws IllegalArgumentException",
      "right" : "public AnnotatedMethod findAnySetter() throws IllegalArgumentException",
      "info" : "MethodDeclaration[8026-9001]:MethodDeclaration[8026-9001]"
    }, {
      "left" : "public Map<Object, AnnotatedMember> findInjectables()",
      "right" : "public Map<Object, AnnotatedMember> findInjectables()",
      "info" : "MethodDeclaration[9007-9221]:MethodDeclaration[9007-9221]"
    }, {
      "left" : "public List<AnnotatedConstructor> getConstructors()",
      "right" : "public List<AnnotatedConstructor> getConstructors()",
      "info" : "MethodDeclaration[9227-9345]:MethodDeclaration[9227-9345]"
    }, {
      "left" : "public Object instantiateBean(boolean fixAccess)",
      "right" : "public Object instantiateBean(boolean fixAccess)",
      "info" : "MethodDeclaration[9351-10211]:MethodDeclaration[9351-10211]"
    }, {
      "left" : "public AnnotatedMethod findMethod(String name, Class<?>[] paramTypes)",
      "right" : "public AnnotatedMethod findMethod(String name, Class<?>[] paramTypes)",
      "info" : "MethodDeclaration[10395-10542]:MethodDeclaration[10395-10542]"
    }, {
      "left" : "public JsonFormat.Value findExpectedFormat(JsonFormat.Value defValue)",
      "right" : "public JsonFormat.Value findExpectedFormat(JsonFormat.Value defValue)",
      "info" : "MethodDeclaration[10742-11654]:MethodDeclaration[10742-11654]"
    }, {
      "left" : "public Converter<Object,Object> findSerializationConverter()",
      "right" : "public Converter<Object,Object> findSerializationConverter()",
      "info" : "MethodDeclaration[11847-12112]:MethodDeclaration[11847-12112]"
    }, {
      "left" : "public JsonInclude.Value findPropertyInclusion(JsonInclude.Value defValue)",
      "right" : "public JsonInclude.Value findPropertyInclusion(JsonInclude.Value defValue)",
      "info" : "MethodDeclaration[12118-12780]:MethodDeclaration[12118-12780]"
    }, {
      "left" : "public AnnotatedMember findAnyGetter() throws IllegalArgumentException",
      "right" : "public AnnotatedMember findAnyGetter() throws IllegalArgumentException",
      "info" : "MethodDeclaration[12786-13773]:MethodDeclaration[12786-13773]"
    }, {
      "left" : "public AnnotatedMember findAnySetterField() throws IllegalArgumentException",
      "right" : "public AnnotatedMember findAnySetterField() throws IllegalArgumentException",
      "info" : "MethodDeclaration[13779-14417]:MethodDeclaration[13779-14417]"
    }, {
      "left" : "public Map<String,AnnotatedMember> findBackReferenceProperties()",
      "right" : "public Map<String,AnnotatedMember> findBackReferenceProperties()",
      "info" : "MethodDeclaration[14423-15971]:MethodDeclaration[14423-15971]"
    }, {
      "left" : "public List<AnnotatedMethod> getFactoryMethods()",
      "right" : "public List<AnnotatedMethod> getFactoryMethods()",
      "info" : "MethodDeclaration[16173-16715]:MethodDeclaration[16173-16715]"
    }, {
      "left" : "public Constructor<?> findSingleArgConstructor(Class<?>... argTypes)",
      "right" : "public Constructor<?> findSingleArgConstructor(Class<?>... argTypes)",
      "info" : "MethodDeclaration[16721-17442]:MethodDeclaration[16721-17442]"
    }, {
      "left" : "// since 2.8, not used at least since 2.7\n    protected PropertyName _findCreatorPropertyName(AnnotatedParameter param)",
      "right" : "// since 2.8, not used at least since 2.7\n    protected PropertyName _findCreatorPropertyName(AnnotatedParameter param)",
      "info" : "MethodDeclaration[19529-20078]:MethodDeclaration[19621-20170]"
    }, {
      "left" : "public Class<?> findPOJOBuilder()",
      "right" : "public Class<?> findPOJOBuilder()",
      "info" : "MethodDeclaration[20276-20449]:MethodDeclaration[20368-20541]"
    }, {
      "left" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig()",
      "right" : "public JsonPOJOBuilder.Value findPOJOBuilderConfig()",
      "info" : "MethodDeclaration[20455-20666]:MethodDeclaration[20547-20758]"
    }, {
      "left" : "public Converter<Object,Object> findDeserializationConverter()",
      "right" : "public Converter<Object,Object> findDeserializationConverter()",
      "info" : "MethodDeclaration[20672-20941]:MethodDeclaration[20764-21033]"
    }, {
      "left" : "public String findClassDescription()",
      "right" : "public String findClassDescription()",
      "info" : "MethodDeclaration[20947-21137]:MethodDeclaration[21039-21229]"
    }, {
      "left" : "public LinkedHashMap<String,AnnotatedField> _findPropertyFields(\n            Collection<String> ignoredProperties, boolean forSerialization)",
      "right" : "public LinkedHashMap<String,AnnotatedField> _findPropertyFields(\n            Collection<String> ignoredProperties, boolean forSerialization)",
      "info" : "MethodDeclaration[21333-22538]:MethodDeclaration[21425-22630]"
    }, {
      "left" : "public Converter<Object,Object> _createConverter(Object converterDef)",
      "right" : "public Converter<Object,Object> _createConverter(Object converterDef)",
      "info" : "MethodDeclaration[22721-24206]:MethodDeclaration[22813-24298]"
    } ],
    "mappings" : [
 {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2337-2346]:Modifier[2337-2346]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleName[2347-2367]:SimpleName[2347-2367]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[2368-2396]:SingleVariableDeclaration[2368-2396]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[2410-2423]:SingleVariableDeclaration[2410-2423]"
    }, {
      "left" : "AnnotatedClass classDef",
      "right" : "AnnotatedClass classDef",
      "info" : "SingleVariableDeclaration[2425-2448]:SingleVariableDeclaration[2425-2448]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2454-2822]:Block[2454-2822]"
    }, {
      "left" : "super(type);",
      "right" : "super(type);",
      "info" : "SuperConstructorInvocation[2464-2476]:SuperConstructorInvocation[2464-2476]"
    }, {
      "left" : "_propCollector = coll;",
      "right" : "_propCollector = coll;",
      "info" : "ExpressionStatement[2485-2507]:ExpressionStatement[2485-2507]"
    }, {
      "left" : "_config = coll.getConfig();",
      "right" : "_config = coll.getConfig();",
      "info" : "ExpressionStatement[2516-2543]:ExpressionStatement[2516-2543]"
    }, {
      "left" : "if (_config == null)",
      "right" : "if (_config == null)",
      "info" : "IfStatement[2617-2785]:IfStatement[2617-2785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2638-2693]:Block[2638-2693]"
    }, {
      "left" : "_annotationIntrospector = null;",
      "right" : "_annotationIntrospector = null;",
      "info" : "ExpressionStatement[2652-2683]:ExpressionStatement[2652-2683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2699-2785]:Block[2699-2785]"
    }, {
      "left" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "right" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "info" : "ExpressionStatement[2713-2775]:ExpressionStatement[2713-2775]"
    }, {
      "left" : "_classInfo = classDef;",
      "right" : "_classInfo = classDef;",
      "info" : "ExpressionStatement[2794-2816]:ExpressionStatement[2794-2816]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[2953-2962]:Modifier[2953-2962]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleName[2963-2983]:SimpleName[2963-2983]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[2984-3006]:SingleVariableDeclaration[2984-3006]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[3020-3033]:SingleVariableDeclaration[3020-3033]"
    }, {
      "left" : "AnnotatedClass classDef",
      "right" : "AnnotatedClass classDef",
      "info" : "SingleVariableDeclaration[3035-3058]:SingleVariableDeclaration[3035-3058]"
    }, {
      "left" : "List<BeanPropertyDefinition> props",
      "right" : "List<BeanPropertyDefinition> props",
      "info" : "SingleVariableDeclaration[3060-3094]:SingleVariableDeclaration[3060-3094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3100-3487]:Block[3100-3487]"
    }, {
      "left" : "super(type);",
      "right" : "super(type);",
      "info" : "SuperConstructorInvocation[3110-3122]:SuperConstructorInvocation[3110-3122]"
    }, {
      "left" : "_propCollector = null;",
      "right" : "_propCollector = null;",
      "info" : "ExpressionStatement[3131-3153]:ExpressionStatement[3131-3153]"
    }, {
      "left" : "_config = config;",
      "right" : "_config = config;",
      "info" : "ExpressionStatement[3162-3179]:ExpressionStatement[3162-3179]"
    }, {
      "left" : "if (_config == null)",
      "right" : "if (_config == null)",
      "info" : "IfStatement[3253-3421]:IfStatement[3253-3421]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3274-3329]:Block[3274-3329]"
    }, {
      "left" : "_annotationIntrospector = null;",
      "right" : "_annotationIntrospector = null;",
      "info" : "ExpressionStatement[3288-3319]:ExpressionStatement[3288-3319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3335-3421]:Block[3335-3421]"
    }, {
      "left" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "right" : "_annotationIntrospector = _config.getAnnotationIntrospector();",
      "info" : "ExpressionStatement[3349-3411]:ExpressionStatement[3349-3411]"
    }, {
      "left" : "_classInfo = classDef;",
      "right" : "_classInfo = classDef;",
      "info" : "ExpressionStatement[3430-3452]:ExpressionStatement[3430-3452]"
    }, {
      "left" : "_properties = props;",
      "right" : "_properties = props;",
      "info" : "ExpressionStatement[3461-3481]:ExpressionStatement[3461-3481]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[3497-3506]:Modifier[3497-3506]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleName[3507-3527]:SimpleName[3507-3527]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[3528-3556]:SingleVariableDeclaration[3528-3556]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3562-3673]:Block[3562-3673]"
    }, {
      "left" : "this(coll, coll.getType(), coll.getClassDef());",
      "right" : "this(coll, coll.getType(), coll.getClassDef());",
      "info" : "ConstructorInvocation[3572-3619]:ConstructorInvocation[3572-3619]"
    }, {
      "left" : "_objectIdInfo = coll.getObjectIdInfo();",
      "right" : "_objectIdInfo = coll.getObjectIdInfo();",
      "info" : "ExpressionStatement[3628-3667]:ExpressionStatement[3628-3667]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3795-3801]:Modifier[3795-3801]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[3802-3808]:Modifier[3802-3808]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleType[3809-3829]:SimpleType[3809-3829]"
    }, {
      "left" : "forDeserialization",
      "right" : "forDeserialization",
      "info" : "SimpleName[3830-3848]:SimpleName[3830-3848]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[3849-3877]:SingleVariableDeclaration[3849-3877]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3879-3933]:Block[3879-3933]"
    }, {
      "left" : "return new BasicBeanDescription(coll);",
      "right" : "return new BasicBeanDescription(coll);",
      "info" : "ReturnStatement[3889-3927]:ReturnStatement[3889-3927]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4053-4059]:Modifier[4053-4059]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4060-4066]:Modifier[4060-4066]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleType[4067-4087]:SimpleType[4067-4087]"
    }, {
      "left" : "forSerialization",
      "right" : "forSerialization",
      "info" : "SimpleName[4088-4104]:SimpleName[4088-4104]"
    }, {
      "left" : "POJOPropertiesCollector coll",
      "right" : "POJOPropertiesCollector coll",
      "info" : "SingleVariableDeclaration[4105-4133]:SingleVariableDeclaration[4105-4133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4135-4189]:Block[4135-4189]"
    }, {
      "left" : "return new BasicBeanDescription(coll);",
      "right" : "return new BasicBeanDescription(coll);",
      "info" : "ReturnStatement[4145-4183]:ReturnStatement[4145-4183]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4409-4415]:Modifier[4409-4415]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[4416-4422]:Modifier[4416-4422]"
    }, {
      "left" : "BasicBeanDescription",
      "right" : "BasicBeanDescription",
      "info" : "SimpleType[4423-4443]:SimpleType[4423-4443]"
    }, {
      "left" : "forOtherUse",
      "right" : "forOtherUse",
      "info" : "SimpleName[4444-4455]:SimpleName[4444-4455]"
    }, {
      "left" : "MapperConfig<?> config",
      "right" : "MapperConfig<?> config",
      "info" : "SingleVariableDeclaration[4456-4478]:SingleVariableDeclaration[4456-4478]"
    }, {
      "left" : "JavaType type",
      "right" : "JavaType type",
      "info" : "SingleVariableDeclaration[4492-4505]:SingleVariableDeclaration[4492-4505]"
    }, {
      "left" : "AnnotatedClass ac",
      "right" : "AnnotatedClass ac",
      "info" : "SingleVariableDeclaration[4507-4524]:SingleVariableDeclaration[4507-4524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4530-4661]:Block[4530-4661]"
    }, {
      "left" : "return new BasicBeanDescription(config, type,\n                ac, Collections.<BeanPropertyDefinition>emptyList());",
      "right" : "return new BasicBeanDescription(config, type,\n                ac, Collections.<BeanPropertyDefinition>emptyList());",
      "info" : "ReturnStatement[4540-4655]:ReturnStatement[4540-4655]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[4667-4676]:Modifier[4667-4676]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[4677-4705]:ParameterizedType[4677-4705]"
    }, {
      "left" : "_properties",
      "right" : "_properties",
      "info" : "SimpleName[4706-4717]:SimpleName[4706-4717]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4720-4858]:Block[4720-4858]"
    }, {
      "left" : "if (_properties == null)",
      "right" : "if (_properties == null)",
      "info" : "IfStatement[4730-4824]:IfStatement[4730-4824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4755-4824]:Block[4755-4824]"
    }, {
      "left" : "_properties = _propCollector.getProperties();",
      "right" : "_properties = _propCollector.getProperties();",
      "info" : "ExpressionStatement[4769-4814]:ExpressionStatement[4769-4814]"
    }, {
      "left" : "return _properties;",
      "right" : "return _properties;",
      "info" : "ReturnStatement[4833-4852]:ReturnStatement[4833-4852]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5274-5280]:Modifier[5274-5280]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5281-5288]:PrimitiveType[5281-5288]"
    }, {
      "left" : "removeProperty",
      "right" : "removeProperty",
      "info" : "SimpleName[5289-5303]:SimpleName[5289-5303]"
    }, {
      "left" : "String propName",
      "right" : "String propName",
      "info" : "SingleVariableDeclaration[5304-5319]:SingleVariableDeclaration[5304-5319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5325-5643]:Block[5325-5643]"
    }, {
      "left" : "Iterator<BeanPropertyDefinition> it = _properties().iterator();",
      "right" : "Iterator<BeanPropertyDefinition> it = _properties().iterator();",
      "info" : "VariableDeclarationStatement[5335-5398]:VariableDeclarationStatement[5335-5398]"
    }, {
      "left" : "while (it.hasNext())",
      "right" : "while (it.hasNext())",
      "info" : "WhileStatement[5407-5615]:WhileStatement[5407-5615]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5428-5615]:Block[5428-5615]"
    }, {
      "left" : "BeanPropertyDefinition prop = it.next();",
      "right" : "BeanPropertyDefinition prop = it.next();",
      "info" : "VariableDeclarationStatement[5442-5482]:VariableDeclarationStatement[5442-5482]"
    }, {
      "left" : "if (prop.getName().equals(propName))",
      "right" : "if (prop.getName().equals(propName))",
      "info" : "IfStatement[5495-5605]:IfStatement[5495-5605]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5532-5605]:Block[5532-5605]"
    }, {
      "left" : "it.remove();",
      "right" : "it.remove();",
      "info" : "ExpressionStatement[5550-5562]:ExpressionStatement[5550-5562]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5579-5591]:ReturnStatement[5579-5591]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5624-5637]:ReturnStatement[5624-5637]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5649-5655]:Modifier[5649-5655]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5656-5663]:PrimitiveType[5656-5663]"
    }, {
      "left" : "addProperty",
      "right" : "addProperty",
      "info" : "SimpleName[5664-5675]:SimpleName[5664-5675]"
    }, {
      "left" : "BeanPropertyDefinition def",
      "right" : "BeanPropertyDefinition def",
      "info" : "SingleVariableDeclaration[5676-5702]:SingleVariableDeclaration[5676-5702]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5708-5904]:Block[5708-5904]"
    }, {
      "left" : "if (hasProperty(def.getFullName()))",
      "right" : "if (hasProperty(def.getFullName()))",
      "info" : "IfStatement[5772-5845]:IfStatement[5772-5845]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5808-5845]:Block[5808-5845]"
    }, {
      "left" : "return false;",
      "right" : "return false;",
      "info" : "ReturnStatement[5822-5835]:ReturnStatement[5822-5835]"
    }, {
      "left" : "_properties().add(def);",
      "right" : "_properties().add(def);",
      "info" : "ExpressionStatement[5854-5877]:ExpressionStatement[5854-5877]"
    }, {
      "left" : "return true;",
      "right" : "return true;",
      "info" : "ReturnStatement[5886-5898]:ReturnStatement[5886-5898]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5948-5954]:Modifier[5948-5954]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5955-5962]:PrimitiveType[5955-5962]"
    }, {
      "left" : "hasProperty",
      "right" : "hasProperty",
      "info" : "SimpleName[5963-5974]:SimpleName[5963-5974]"
    }, {
      "left" : "PropertyName name",
      "right" : "PropertyName name",
      "info" : "SingleVariableDeclaration[5975-5992]:SingleVariableDeclaration[5975-5992]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5994-6044]:Block[5994-6044]"
    }, {
      "left" : "return findProperty(name) != null;",
      "right" : "return findProperty(name) != null;",
      "info" : "ReturnStatement[6004-6038]:ReturnStatement[6004-6038]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6088-6094]:Modifier[6088-6094]"
    }, {
      "left" : "BeanPropertyDefinition",
      "right" : "BeanPropertyDefinition",
      "info" : "SimpleType[6095-6117]:SimpleType[6095-6117]"
    }, {
      "left" : "findProperty",
      "right" : "findProperty",
      "info" : "SimpleName[6118-6130]:SimpleName[6118-6130]"
    }, {
      "left" : "PropertyName name",
      "right" : "PropertyName name",
      "info" : "SingleVariableDeclaration[6131-6148]:SingleVariableDeclaration[6131-6148]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6154-6333]:Block[6154-6333]"
    }, {
      "left" : "for (BeanPropertyDefinition prop : _properties())",
      "right" : "for (BeanPropertyDefinition prop : _properties())",
      "info" : "EnhancedForStatement[6164-6306]:EnhancedForStatement[6164-6306]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6214-6306]:Block[6214-6306]"
    }, {
      "left" : "if (prop.hasName(name))",
      "right" : "if (prop.hasName(name))",
      "info" : "IfStatement[6228-6296]:IfStatement[6228-6296]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6252-6296]:Block[6252-6296]"
    }, {
      "left" : "return prop;",
      "right" : "return prop;",
      "info" : "ReturnStatement[6270-6282]:ReturnStatement[6270-6282]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[6315-6327]:ReturnStatement[6315-6327]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6532-6541]:MarkerAnnotation[6532-6541]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6546-6552]:Modifier[6546-6552]"
    }, {
      "left" : "AnnotatedClass",
      "right" : "AnnotatedClass",
      "info" : "SimpleType[6553-6567]:SimpleType[6553-6567]"
    }, {
      "left" : "getClassInfo",
      "right" : "getClassInfo",
      "info" : "SimpleName[6568-6580]:SimpleName[6568-6580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6583-6605]:Block[6583-6605]"
    }, {
      "left" : "return _classInfo;",
      "right" : "return _classInfo;",
      "info" : "ReturnStatement[6585-6603]:ReturnStatement[6585-6603]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6611-6620]:MarkerAnnotation[6611-6620]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6625-6631]:Modifier[6625-6631]"
    }, {
      "left" : "ObjectIdInfo",
      "right" : "ObjectIdInfo",
      "info" : "SimpleType[6632-6644]:SimpleType[6632-6644]"
    }, {
      "left" : "getObjectIdInfo",
      "right" : "getObjectIdInfo",
      "info" : "SimpleName[6645-6660]:SimpleName[6645-6660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6663-6689]:Block[6663-6689]"
    }, {
      "left" : "return  _objectIdInfo;",
      "right" : "return  _objectIdInfo;",
      "info" : "ReturnStatement[6665-6687]:ReturnStatement[6665-6687]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6695-6704]:MarkerAnnotation[6695-6704]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6709-6715]:Modifier[6709-6715]"
    }, {
      "left" : "List<BeanPropertyDefinition>",
      "right" : "List<BeanPropertyDefinition>",
      "info" : "ParameterizedType[6716-6744]:ParameterizedType[6716-6744]"
    }, {
      "left" : "findProperties",
      "right" : "findProperties",
      "info" : "SimpleName[6745-6759]:SimpleName[6745-6759]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6762-6799]:Block[6762-6799]"
    }, {
      "left" : "return _properties();",
      "right" : "return _properties();",
      "info" : "ReturnStatement[6772-6793]:ReturnStatement[6772-6793]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6805-6814]:MarkerAnnotation[6805-6814]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6819-6825]:Modifier[6819-6825]"
    }, {
      "left" : "AnnotatedMethod",
      "right" : "AnnotatedMethod",
      "info" : "SimpleType[6826-6841]:SimpleType[6826-6841]"
    }, {
      "left" : "findJsonValueMethod",
      "right" : "findJsonValueMethod",
      "info" : "SimpleName[6842-6861]:SimpleName[6842-6861]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6864-6973]:Block[6864-6973]"
    }, {
      "left" : "return (_propCollector == null) ? null\n                : _propCollector.getJsonValueMethod();",
      "right" : "return (_propCollector == null) ? null\n                : _propCollector.getJsonValueMethod();",
      "info" : "ReturnStatement[6874-6967]:ReturnStatement[6874-6967]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[6979-6988]:MarkerAnnotation[6979-6988]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6993-6999]:Modifier[6993-6999]"
    }, {
      "left" : "Set<String>",
      "right" : "Set<String>",
      "info" : "ParameterizedType[7000-7011]:ParameterizedType[7000-7011]"
    }, {
      "left" : "getIgnoredPropertyNames",
      "right" : "getIgnoredPropertyNames",
      "info" : "SimpleName[7012-7035]:SimpleName[7012-7035]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7038-7263]:Block[7038-7263]"
    }, {
      "left" : "Set<String> ign = (_propCollector == null) ? null\n                : _propCollector.getIgnoredPropertyNames();",
      "right" : "Set<String> ign = (_propCollector == null) ? null\n                : _propCollector.getIgnoredPropertyNames();",
      "info" : "VariableDeclarationStatement[7048-7157]:VariableDeclarationStatement[7048-7157]"
    }, {
      "left" : "if (ign == null)",
      "right" : "if (ign == null)",
      "info" : "IfStatement[7166-7237]:IfStatement[7166-7237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7183-7237]:Block[7183-7237]"
    }, {
      "left" : "return Collections.emptySet();",
      "right" : "return Collections.emptySet();",
      "info" : "ReturnStatement[7197-7227]:ReturnStatement[7197-7227]"
    }, {
      "left" : "return ign;",
      "right" : "return ign;",
      "info" : "ReturnStatement[7246-7257]:ReturnStatement[7246-7257]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7269-7278]:MarkerAnnotation[7269-7278]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7283-7289]:Modifier[7283-7289]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[7290-7297]:PrimitiveType[7290-7297]"
    }, {
      "left" : "hasKnownClassAnnotations",
      "right" : "hasKnownClassAnnotations",
      "info" : "SimpleName[7298-7322]:SimpleName[7298-7322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7325-7376]:Block[7325-7376]"
    }, {
      "left" : "return _classInfo.hasAnnotations();",
      "right" : "return _classInfo.hasAnnotations();",
      "info" : "ReturnStatement[7335-7370]:ReturnStatement[7335-7370]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7382-7391]:MarkerAnnotation[7382-7391]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7396-7402]:Modifier[7396-7402]"
    }, {
      "left" : "Annotations",
      "right" : "Annotations",
      "info" : "SimpleType[7403-7414]:SimpleType[7403-7414]"
    }, {
      "left" : "getClassAnnotations",
      "right" : "getClassAnnotations",
      "info" : "SimpleName[7415-7434]:SimpleName[7415-7434]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7437-7488]:Block[7437-7488]"
    }, {
      "left" : "return _classInfo.getAnnotations();",
      "right" : "return _classInfo.getAnnotations();",
      "info" : "ReturnStatement[7447-7482]:ReturnStatement[7447-7482]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7494-7503]:MarkerAnnotation[7494-7503]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[7508-7519]:MarkerAnnotation[7508-7519]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7537-7543]:Modifier[7537-7543]"
    }, {
      "left" : "TypeBindings",
      "right" : "TypeBindings",
      "info" : "SimpleType[7544-7556]:SimpleType[7544-7556]"
    }, {
      "left" : "bindingsForBeanType",
      "right" : "bindingsForBeanType",
      "info" : "SimpleName[7557-7576]:SimpleName[7557-7576]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7579-7622]:Block[7579-7622]"
    }, {
      "left" : "return _type.getBindings();",
      "right" : "return _type.getBindings();",
      "info" : "ReturnStatement[7589-7616]:ReturnStatement[7589-7616]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7628-7637]:MarkerAnnotation[7628-7637]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[7642-7653]:MarkerAnnotation[7642-7653]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7671-7677]:Modifier[7671-7677]"
    }, {
      "left" : "JavaType",
      "right" : "JavaType",
      "info" : "SimpleType[7678-7686]:SimpleType[7678-7686]"
    }, {
      "left" : "resolveType",
      "right" : "resolveType",
      "info" : "SimpleName[7687-7698]:SimpleName[7687-7698]"
    }, {
      "left" : "java.lang.reflect.Type jdkType",
      "right" : "java.lang.reflect.Type jdkType",
      "info" : "SingleVariableDeclaration[7699-7729]:SingleVariableDeclaration[7699-7729]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7731-7889]:Block[7731-7889]"
    }, {
      "left" : "if (jdkType == null)",
      "right" : "if (jdkType == null)",
      "info" : "IfStatement[7741-7798]:IfStatement[7741-7798]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7762-7798]:Block[7762-7798]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[7776-7788]:ReturnStatement[7776-7788]"
    }, {
      "left" : "return _config.getTypeFactory().constructType(jdkType, _type.getBindings());",
      "right" : "return _config.getTypeFactory().constructType(jdkType, _type.getBindings());",
      "info" : "ReturnStatement[7807-7883]:ReturnStatement[7807-7883]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7895-7904]:MarkerAnnotation[7895-7904]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7909-7915]:Modifier[7909-7915]"
    }, {
      "left" : "AnnotatedConstructor",
      "right" : "AnnotatedConstructor",
      "info" : "SimpleType[7916-7936]:SimpleType[7916-7936]"
    }, {
      "left" : "findDefaultConstructor",
      "right" : "findDefaultConstructor",
      "info" : "SimpleName[7937-7959]:SimpleName[7937-7959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7962-8020]:Block[7962-8020]"
    }, {
      "left" : "return _classInfo.getDefaultConstructor();",
      "right" : "return _classInfo.getDefaultConstructor();",
      "info" : "ReturnStatement[7972-8014]:ReturnStatement[7972-8014]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8026-8035]:MarkerAnnotation[8026-8035]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8040-8046]:Modifier[8040-8046]"
    }, {
      "left" : "AnnotatedMethod",
      "right" : "AnnotatedMethod",
      "info" : "SimpleType[8047-8062]:SimpleType[8047-8062]"
    }, {
      "left" : "findAnySetter",
      "right" : "findAnySetter",
      "info" : "SimpleName[8063-8076]:SimpleName[8063-8076]"
    }, {
      "left" : "IllegalArgumentException",
      "right" : "IllegalArgumentException",
      "info" : "SimpleType[8086-8110]:SimpleType[8086-8110]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8115-9001]:Block[8115-9001]"
    }, {
      "left" : "AnnotatedMethod anySetter = (_propCollector == null) ? null\n                : _propCollector.getAnySetterMethod();",
      "right" : "AnnotatedMethod anySetter = (_propCollector == null) ? null\n                : _propCollector.getAnySetterMethod();",
      "info" : "VariableDeclarationStatement[8125-8239]:VariableDeclarationStatement[8125-8239]"
    }, {
      "left" : "if (anySetter != null)",
      "right" : "if (anySetter != null)",
      "info" : "IfStatement[8248-8969]:IfStatement[8248-8969]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8271-8969]:Block[8271-8969]"
    }, {
      "left" : "Class<?> type = anySetter.getRawParameterType(0);",
      "right" : "Class<?> type = anySetter.getRawParameterType(0);",
      "info" : "VariableDeclarationStatement[8643-8692]:VariableDeclarationStatement[8643-8692]"
    }, {
      "left" : "if (type != String.class && type != Object.class)",
      "right" : "if (type != String.class && type != Object.class)",
      "info" : "IfStatement[8705-8959]:IfStatement[8705-8959]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8755-8959]:Block[8755-8959]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid 'any-setter' annotation on method \"+anySetter.getName()+\"(): first argument not of type String or Object, but \"+type.getName());",
      "right" : "throw new IllegalArgumentException(\"Invalid 'any-setter' annotation on method \"+anySetter.getName()+\"(): first argument not of type String or Object, but \"+type.getName());",
      "info" : "ThrowStatement[8773-8945]:ThrowStatement[8773-8945]"
    }, {
      "left" : "return anySetter;",
      "right" : "return anySetter;",
      "info" : "ReturnStatement[8978-8995]:ReturnStatement[8978-8995]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9007-9016]:MarkerAnnotation[9007-9016]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9021-9027]:Modifier[9021-9027]"
    }, {
      "left" : "Map<Object, AnnotatedMember>",
      "right" : "Map<Object, AnnotatedMember>",
      "info" : "ParameterizedType[9028-9056]:ParameterizedType[9028-9056]"
    }, {
      "left" : "findInjectables",
      "right" : "findInjectables",
      "info" : "SimpleName[9057-9072]:SimpleName[9057-9072]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9075-9221]:Block[9075-9221]"
    }, {
      "left" : "if (_propCollector != null)",
      "right" : "if (_propCollector != null)",
      "info" : "IfStatement[9085-9176]:IfStatement[9085-9176]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9113-9176]:Block[9113-9176]"
    }, {
      "left" : "return _propCollector.getInjectables();",
      "right" : "return _propCollector.getInjectables();",
      "info" : "ReturnStatement[9127-9166]:ReturnStatement[9127-9166]"
    }, {
      "left" : "return Collections.emptyMap();",
      "right" : "return Collections.emptyMap();",
      "info" : "ReturnStatement[9185-9215]:ReturnStatement[9185-9215]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9227-9236]:MarkerAnnotation[9227-9236]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9241-9247]:Modifier[9241-9247]"
    }, {
      "left" : "List<AnnotatedConstructor>",
      "right" : "List<AnnotatedConstructor>",
      "info" : "ParameterizedType[9248-9274]:ParameterizedType[9248-9274]"
    }, {
      "left" : "getConstructors",
      "right" : "getConstructors",
      "info" : "SimpleName[9275-9290]:SimpleName[9275-9290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9293-9345]:Block[9293-9345]"
    }, {
      "left" : "return _classInfo.getConstructors();",
      "right" : "return _classInfo.getConstructors();",
      "info" : "ReturnStatement[9303-9339]:ReturnStatement[9303-9339]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9351-9360]:MarkerAnnotation[9351-9360]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9365-9371]:Modifier[9365-9371]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[9372-9378]:SimpleType[9372-9378]"
    }, {
      "left" : "instantiateBean",
      "right" : "instantiateBean",
      "info" : "SimpleName[9379-9394]:SimpleName[9379-9394]"
    }, {
      "left" : "boolean fixAccess",
      "right" : "boolean fixAccess",
      "info" : "SingleVariableDeclaration[9395-9412]:SingleVariableDeclaration[9395-9412]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9414-10211]:Block[9414-10211]"
    }, {
      "left" : "AnnotatedConstructor ac = _classInfo.getDefaultConstructor();",
      "right" : "AnnotatedConstructor ac = _classInfo.getDefaultConstructor();",
      "info" : "VariableDeclarationStatement[9424-9485]:VariableDeclarationStatement[9424-9485]"
    }, {
      "left" : "if (ac == null)",
      "right" : "if (ac == null)",
      "info" : "IfStatement[9494-9546]:IfStatement[9494-9546]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9510-9546]:Block[9510-9546]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[9524-9536]:ReturnStatement[9524-9536]"
    }, {
      "left" : "if (fixAccess)",
      "right" : "if (fixAccess)",
      "info" : "IfStatement[9555-9674]:IfStatement[9555-9674]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9570-9674]:Block[9570-9674]"
    }, {
      "left" : "ac.fixAccess(_config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "right" : "ac.fixAccess(_config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));",
      "info" : "ExpressionStatement[9584-9664]:ExpressionStatement[9584-9664]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[9683-10205]:TryStatement[9683-10205]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9687-9750]:Block[9687-9750]"
    }, {
      "left" : "return ac.getAnnotated().newInstance();",
      "right" : "return ac.getAnnotated().newInstance();",
      "info" : "ReturnStatement[9701-9740]:ReturnStatement[9701-9740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9771-10205]:Block[9771-10205]"
    }, {
      "left" : "Throwable t = e;",
      "right" : "Throwable t = e;",
      "info" : "VariableDeclarationStatement[9785-9801]:VariableDeclarationStatement[9785-9801]"
    }, {
      "left" : "while (t.getCause() != null)",
      "right" : "while (t.getCause() != null)",
      "info" : "WhileStatement[9814-9892]:WhileStatement[9814-9892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9843-9892]:Block[9843-9892]"
    }, {
      "left" : "t = t.getCause();",
      "right" : "t = t.getCause();",
      "info" : "ExpressionStatement[9861-9878]:ExpressionStatement[9861-9878]"
    }, {
      "left" : "if (t instanceof Error)",
      "right" : "if (t instanceof Error)",
      "info" : "IfStatement[9905-9945]:IfStatement[9905-9945]"
    }, {
      "left" : "throw (Error) t;",
      "right" : "throw (Error) t;",
      "info" : "ThrowStatement[9929-9945]:ThrowStatement[9929-9945]"
    }, {
      "left" : "if (t instanceof RuntimeException)",
      "right" : "if (t instanceof RuntimeException)",
      "info" : "IfStatement[9958-10020]:IfStatement[9958-10020]"
    }, {
      "left" : "throw (RuntimeException) t;",
      "right" : "throw (RuntimeException) t;",
      "info" : "ThrowStatement[9993-10020]:ThrowStatement[9993-10020]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Failed to instantiate bean of type \"+_classInfo.getAnnotated().getName()+\": (\"+t.getClass().getName()+\") \"+t.getMessage(), t);",
      "right" : "throw new IllegalArgumentException(\"Failed to instantiate bean of type \"+_classInfo.getAnnotated().getName()+\": (\"+t.getClass().getName()+\") \"+t.getMessage(), t);",
      "info" : "ThrowStatement[10033-10195]:ThrowStatement[10033-10195]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10395-10404]:MarkerAnnotation[10395-10404]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10409-10415]:Modifier[10409-10415]"
    }, {
      "left" : "AnnotatedMethod",
      "right" : "AnnotatedMethod",
      "info" : "SimpleType[10416-10431]:SimpleType[10416-10431]"
    }, {
      "left" : "findMethod",
      "right" : "findMethod",
      "info" : "SimpleName[10432-10442]:SimpleName[10432-10442]"
    }, {
      "left" : "String name",
      "right" : "String name",
      "info" : "SingleVariableDeclaration[10443-10454]:SingleVariableDeclaration[10443-10454]"
    }, {
      "left" : "Class<?>[] paramTypes",
      "right" : "Class<?>[] paramTypes",
      "info" : "SingleVariableDeclaration[10456-10477]:SingleVariableDeclaration[10456-10477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10479-10542]:Block[10479-10542]"
    }, {
      "left" : "return _classInfo.findMethod(name, paramTypes);",
      "right" : "return _classInfo.findMethod(name, paramTypes);",
      "info" : "ReturnStatement[10489-10536]:ReturnStatement[10489-10536]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10742-10751]:MarkerAnnotation[10742-10751]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10756-10762]:Modifier[10756-10762]"
    }, {
      "left" : "JsonFormat.Value",
      "right" : "JsonFormat.Value",
      "info" : "SimpleType[10763-10779]:SimpleType[10763-10779]"
    }, {
      "left" : "findExpectedFormat",
      "right" : "findExpectedFormat",
      "info" : "SimpleName[10780-10798]:SimpleName[10780-10798]"
    }, {
      "left" : "JsonFormat.Value defValue",
      "right" : "JsonFormat.Value defValue",
      "info" : "SingleVariableDeclaration[10799-10824]:SingleVariableDeclaration[10799-10824]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10830-11654]:Block[10830-11654]"
    }, {
      "left" : "if (_annotationIntrospector != null)",
      "right" : "if (_annotationIntrospector != null)",
      "info" : "IfStatement[10998-11345]:IfStatement[10998-11345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11035-11345]:Block[11035-11345]"
    }, {
      "left" : "JsonFormat.Value v = _annotationIntrospector.findFormat(_classInfo);",
      "right" : "JsonFormat.Value v = _annotationIntrospector.findFormat(_classInfo);",
      "info" : "VariableDeclarationStatement[11049-11117]:VariableDeclarationStatement[11049-11117]"
    }, {
      "left" : "if (v != null)",
      "right" : "if (v != null)",
      "info" : "IfStatement[11130-11335]:IfStatement[11130-11335]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11145-11335]:Block[11145-11335]"
    }, {
      "left" : "if (defValue == null)",
      "right" : "if (defValue == null)",
      "info" : "IfStatement[11163-11321]:IfStatement[11163-11321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11185-11238]:Block[11185-11238]"
    }, {
      "left" : "defValue = v;",
      "right" : "defValue = v;",
      "info" : "ExpressionStatement[11207-11220]:ExpressionStatement[11207-11220]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11244-11321]:Block[11244-11321]"
    }, {
      "left" : "defValue = defValue.withOverrides(v);",
      "right" : "defValue = defValue.withOverrides(v);",
      "info" : "ExpressionStatement[11266-11303]:ExpressionStatement[11266-11303]"
    }, {
      "left" : "JsonFormat.Value v = _config.getDefaultPropertyFormat(_classInfo.getRawType());",
      "right" : "JsonFormat.Value v = _config.getDefaultPropertyFormat(_classInfo.getRawType());",
      "info" : "VariableDeclarationStatement[11354-11433]:VariableDeclarationStatement[11354-11433]"
    }, {
      "left" : "if (v != null)",
      "right" : "if (v != null)",
      "info" : "IfStatement[11442-11623]:IfStatement[11442-11623]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11457-11623]:Block[11457-11623]"
    }, {
      "left" : "if (defValue == null)",
      "right" : "if (defValue == null)",
      "info" : "IfStatement[11471-11613]:IfStatement[11471-11613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11493-11538]:Block[11493-11538]"
    }, {
      "left" : "defValue = v;",
      "right" : "defValue = v;",
      "info" : "ExpressionStatement[11511-11524]:ExpressionStatement[11511-11524]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11544-11613]:Block[11544-11613]"
    }, {
      "left" : "defValue = defValue.withOverrides(v);",
      "right" : "defValue = defValue.withOverrides(v);",
      "info" : "ExpressionStatement[11562-11599]:ExpressionStatement[11562-11599]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[11632-11648]:ReturnStatement[11632-11648]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11847-11856]:MarkerAnnotation[11847-11856]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11861-11867]:Modifier[11861-11867]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[11868-11892]:ParameterizedType[11868-11892]"
    }, {
      "left" : "findSerializationConverter",
      "right" : "findSerializationConverter",
      "info" : "SimpleName[11893-11919]:SimpleName[11893-11919]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11926-12112]:Block[11926-12112]"
    }, {
      "left" : "if (_annotationIntrospector == null)",
      "right" : "if (_annotationIntrospector == null)",
      "info" : "IfStatement[11936-12009]:IfStatement[11936-12009]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11973-12009]:Block[11973-12009]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[11987-11999]:ReturnStatement[11987-11999]"
    }, {
      "left" : "return _createConverter(_annotationIntrospector.findSerializationConverter(_classInfo));",
      "right" : "return _createConverter(_annotationIntrospector.findSerializationConverter(_classInfo));",
      "info" : "ReturnStatement[12018-12106]:ReturnStatement[12018-12106]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12379-12388]:MarkerAnnotation[12379-12388]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12393-12399]:Modifier[12393-12399]"
    }, {
      "left" : "JsonInclude.Value",
      "right" : "JsonInclude.Value",
      "info" : "SimpleType[12400-12417]:SimpleType[12400-12417]"
    }, {
      "left" : "findPropertyInclusion",
      "right" : "findPropertyInclusion",
      "info" : "SimpleName[12418-12439]:SimpleName[12418-12439]"
    }, {
      "left" : "JsonInclude.Value defValue",
      "right" : "JsonInclude.Value defValue",
      "info" : "SingleVariableDeclaration[12440-12466]:SingleVariableDeclaration[12440-12466]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12468-12780]:Block[12468-12780]"
    }, {
      "left" : "if (_annotationIntrospector != null)",
      "right" : "if (_annotationIntrospector != null)",
      "info" : "IfStatement[12478-12749]:IfStatement[12478-12749]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12515-12749]:Block[12515-12749]"
    }, {
      "left" : "JsonInclude.Value incl = _annotationIntrospector.findPropertyInclusion(_classInfo);",
      "right" : "JsonInclude.Value incl = _annotationIntrospector.findPropertyInclusion(_classInfo);",
      "info" : "VariableDeclarationStatement[12529-12612]:VariableDeclarationStatement[12529-12612]"
    }, {
      "left" : "if (incl != null)",
      "right" : "if (incl != null)",
      "info" : "IfStatement[12625-12739]:IfStatement[12625-12739]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12643-12739]:Block[12643-12739]"
    }, {
      "left" : "return (defValue == null) ? incl : defValue.withOverrides(incl);",
      "right" : "return (defValue == null) ? incl : defValue.withOverrides(incl);",
      "info" : "ReturnStatement[12661-12725]:ReturnStatement[12661-12725]"
    }, {
      "left" : "return defValue;",
      "right" : "return defValue;",
      "info" : "ReturnStatement[12758-12774]:ReturnStatement[12758-12774]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13052-13061]:MarkerAnnotation[13052-13061]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13066-13072]:Modifier[13066-13072]"
    }, {
      "left" : "AnnotatedMember",
      "right" : "AnnotatedMember",
      "info" : "SimpleType[13073-13088]:SimpleType[13073-13088]"
    }, {
      "left" : "findAnyGetter",
      "right" : "findAnyGetter",
      "info" : "SimpleName[13089-13102]:SimpleName[13089-13102]"
    }, {
      "left" : "IllegalArgumentException",
      "right" : "IllegalArgumentException",
      "info" : "SimpleType[13112-13136]:SimpleType[13112-13136]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13141-13773]:Block[13141-13773]"
    }, {
      "left" : "AnnotatedMember anyGetter = (_propCollector == null) ? null\n                : _propCollector.getAnyGetter();",
      "right" : "AnnotatedMember anyGetter = (_propCollector == null) ? null\n                : _propCollector.getAnyGetter();",
      "info" : "VariableDeclarationStatement[13151-13259]:VariableDeclarationStatement[13151-13259]"
    }, {
      "left" : "if (anyGetter != null)",
      "right" : "if (anyGetter != null)",
      "info" : "IfStatement[13268-13741]:IfStatement[13268-13741]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13291-13741]:Block[13291-13741]"
    }, {
      "left" : "Class<?> type = anyGetter.getRawType();",
      "right" : "Class<?> type = anyGetter.getRawType();",
      "info" : "VariableDeclarationStatement[13456-13495]:VariableDeclarationStatement[13456-13495]"
    }, {
      "left" : "if (!Map.class.isAssignableFrom(type))",
      "right" : "if (!Map.class.isAssignableFrom(type))",
      "info" : "IfStatement[13508-13731]:IfStatement[13508-13731]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13547-13731]:Block[13547-13731]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid 'any-getter' annotation on method \"+anyGetter.getName()+\"(): return type is not instance of java.util.Map\");",
      "right" : "throw new IllegalArgumentException(\"Invalid 'any-getter' annotation on method \"+anyGetter.getName()+\"(): return type is not instance of java.util.Map\");",
      "info" : "ThrowStatement[13565-13717]:ThrowStatement[13565-13717]"
    }, {
      "left" : "return anyGetter;",
      "right" : "return anyGetter;",
      "info" : "ReturnStatement[13750-13767]:ReturnStatement[13750-13767]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[13779-13788]:MarkerAnnotation[13779-13788]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[13793-13799]:Modifier[13793-13799]"
    }, {
      "left" : "AnnotatedMember",
      "right" : "AnnotatedMember",
      "info" : "SimpleType[13800-13815]:SimpleType[13800-13815]"
    }, {
      "left" : "findAnySetterField",
      "right" : "findAnySetterField",
      "info" : "SimpleName[13816-13834]:SimpleName[13816-13834]"
    }, {
      "left" : "IllegalArgumentException",
      "right" : "IllegalArgumentException",
      "info" : "SimpleType[13844-13868]:SimpleType[13844-13868]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13869-14417]:Block[13869-14417]"
    }, {
      "left" : "AnnotatedMember anySetter = (_propCollector == null) ? null : _propCollector.getAnySetterField();",
      "right" : "AnnotatedMember anySetter = (_propCollector == null) ? null : _propCollector.getAnySetterField();",
      "info" : "VariableDeclarationStatement[13879-13976]:VariableDeclarationStatement[13879-13976]"
    }, {
      "left" : "if (anySetter != null)",
      "right" : "if (anySetter != null)",
      "info" : "IfStatement[13979-14394]:IfStatement[13979-14394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14002-14394]:Block[14002-14394]"
    }, {
      "left" : "Class<?> type = anySetter.getRawType();",
      "right" : "Class<?> type = anySetter.getRawType();",
      "info" : "VariableDeclarationStatement[14137-14176]:VariableDeclarationStatement[14137-14176]"
    }, {
      "left" : "if (!Map.class.isAssignableFrom(type))",
      "right" : "if (!Map.class.isAssignableFrom(type))",
      "info" : "IfStatement[14180-14390]:IfStatement[14180-14390]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14219-14390]:Block[14219-14390]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Invalid 'any-setter' annotation on field \" + anySetter.getName()\n\t\t\t\t        + \"(): type is not instance of java.util.Map\");",
      "right" : "throw new IllegalArgumentException(\"Invalid 'any-setter' annotation on field \" + anySetter.getName()\n\t\t\t\t        + \"(): type is not instance of java.util.Map\");",
      "info" : "ThrowStatement[14225-14385]:ThrowStatement[14225-14385]"
    }, {
      "left" : "return anySetter;",
      "right" : "return anySetter;",
      "info" : "ReturnStatement[14397-14414]:ReturnStatement[14397-14414]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[14423-14432]:MarkerAnnotation[14423-14432]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[14437-14443]:Modifier[14437-14443]"
    }, {
      "left" : "Map<String,AnnotatedMember>",
      "right" : "Map<String,AnnotatedMember>",
      "info" : "ParameterizedType[14444-14471]:ParameterizedType[14444-14471]"
    }, {
      "left" : "findBackReferenceProperties",
      "right" : "findBackReferenceProperties",
      "info" : "SimpleName[14472-14499]:SimpleName[14472-14499]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14506-15971]:Block[14506-15971]"
    }, {
      "left" : "HashMap<String,AnnotatedMember> result = null;",
      "right" : "HashMap<String,AnnotatedMember> result = null;",
      "info" : "VariableDeclarationStatement[14516-14562]:VariableDeclarationStatement[14516-14562]"
    }, {
      "left" : "for (BeanPropertyDefinition property : _properties())",
      "right" : "for (BeanPropertyDefinition property : _properties())",
      "info" : "EnhancedForStatement[14636-15942]:EnhancedForStatement[14636-15942]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14690-15942]:Block[14690-15942]"
    }, {
      "left" : "AnnotatedMember am = property.getMutator();",
      "right" : "AnnotatedMember am = property.getMutator();",
      "info" : "VariableDeclarationStatement[15268-15311]:VariableDeclarationStatement[15268-15311]"
    }, {
      "left" : "if (am == null)",
      "right" : "if (am == null)",
      "info" : "IfStatement[15324-15381]:IfStatement[15324-15381]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15340-15381]:Block[15340-15381]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[15358-15367]:ContinueStatement[15358-15367]"
    }, {
      "left" : "AnnotationIntrospector.ReferenceProperty refDef = _annotationIntrospector.findReferenceType(am);",
      "right" : "AnnotationIntrospector.ReferenceProperty refDef = _annotationIntrospector.findReferenceType(am);",
      "info" : "VariableDeclarationStatement[15394-15490]:VariableDeclarationStatement[15394-15490]"
    }, {
      "left" : "if (refDef != null && refDef.isBackReference())",
      "right" : "if (refDef != null && refDef.isBackReference())",
      "info" : "IfStatement[15503-15932]:IfStatement[15503-15932]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15551-15932]:Block[15551-15932]"
    }, {
      "left" : "if (result == null)",
      "right" : "if (result == null)",
      "info" : "IfStatement[15569-15676]:IfStatement[15569-15676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15589-15676]:Block[15589-15676]"
    }, {
      "left" : "result = new HashMap<String,AnnotatedMember>();",
      "right" : "result = new HashMap<String,AnnotatedMember>();",
      "info" : "ExpressionStatement[15611-15658]:ExpressionStatement[15611-15658]"
    }, {
      "left" : "String refName = refDef.getName();",
      "right" : "String refName = refDef.getName();",
      "info" : "VariableDeclarationStatement[15693-15727]:VariableDeclarationStatement[15693-15727]"
    }, {
      "left" : "if (result.put(refName, am) != null)",
      "right" : "if (result.put(refName, am) != null)",
      "info" : "IfStatement[15744-15918]:IfStatement[15744-15918]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15781-15918]:Block[15781-15918]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Multiple back-reference properties with name '\"+refName+\"'\");",
      "right" : "throw new IllegalArgumentException(\"Multiple back-reference properties with name '\"+refName+\"'\");",
      "info" : "ThrowStatement[15803-15900]:ThrowStatement[15803-15900]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[15951-15965]:ReturnStatement[15951-15965]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16173-16182]:MarkerAnnotation[16173-16182]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16187-16193]:Modifier[16187-16193]"
    }, {
      "left" : "List<AnnotatedMethod>",
      "right" : "List<AnnotatedMethod>",
      "info" : "ParameterizedType[16194-16215]:ParameterizedType[16194-16215]"
    }, {
      "left" : "getFactoryMethods",
      "right" : "getFactoryMethods",
      "info" : "SimpleName[16216-16233]:SimpleName[16216-16233]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16240-16715]:Block[16240-16715]"
    }, {
      "left" : "List<AnnotatedMethod> candidates = _classInfo.getStaticMethods();",
      "right" : "List<AnnotatedMethod> candidates = _classInfo.getStaticMethods();",
      "info" : "VariableDeclarationStatement[16323-16388]:VariableDeclarationStatement[16323-16388]"
    }, {
      "left" : "if (candidates.isEmpty())",
      "right" : "if (candidates.isEmpty())",
      "info" : "IfStatement[16397-16465]:IfStatement[16397-16465]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16423-16465]:Block[16423-16465]"
    }, {
      "left" : "return candidates;",
      "right" : "return candidates;",
      "info" : "ReturnStatement[16437-16455]:ReturnStatement[16437-16455]"
    }, {
      "left" : "ArrayList<AnnotatedMethod> result = new ArrayList<AnnotatedMethod>();",
      "right" : "ArrayList<AnnotatedMethod> result = new ArrayList<AnnotatedMethod>();",
      "info" : "VariableDeclarationStatement[16474-16543]:VariableDeclarationStatement[16474-16543]"
    }, {
      "left" : "for (AnnotatedMethod am : candidates)",
      "right" : "for (AnnotatedMethod am : candidates)",
      "info" : "EnhancedForStatement[16552-16686]:EnhancedForStatement[16552-16686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16590-16686]:Block[16590-16686]"
    }, {
      "left" : "if (isFactoryMethod(am))",
      "right" : "if (isFactoryMethod(am))",
      "info" : "IfStatement[16604-16676]:IfStatement[16604-16676]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16629-16676]:Block[16629-16676]"
    }, {
      "left" : "result.add(am);",
      "right" : "result.add(am);",
      "info" : "ExpressionStatement[16647-16662]:ExpressionStatement[16647-16662]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[16695-16709]:ReturnStatement[16695-16709]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[16721-16730]:MarkerAnnotation[16721-16730]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[16735-16741]:Modifier[16735-16741]"
    }, {
      "left" : "Constructor<?>",
      "right" : "Constructor<?>",
      "info" : "ParameterizedType[16742-16756]:ParameterizedType[16742-16756]"
    }, {
      "left" : "findSingleArgConstructor",
      "right" : "findSingleArgConstructor",
      "info" : "SimpleName[16757-16781]:SimpleName[16757-16781]"
    }, {
      "left" : "Class<?>... argTypes",
      "right" : "Class<?>... argTypes",
      "info" : "SingleVariableDeclaration[16782-16802]:SingleVariableDeclaration[16782-16802]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16808-17442]:Block[16808-17442]"
    }, {
      "left" : "for (AnnotatedConstructor ac : _classInfo.getConstructors())",
      "right" : "for (AnnotatedConstructor ac : _classInfo.getConstructors())",
      "info" : "EnhancedForStatement[16818-17415]:EnhancedForStatement[16818-17415]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[16879-17415]:Block[16879-17415]"
    }, {
      "left" : "if (ac.getParameterCount() == 1)",
      "right" : "if (ac.getParameterCount() == 1)",
      "info" : "IfStatement[17111-17405]:IfStatement[17111-17405]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17144-17405]:Block[17144-17405]"
    }, {
      "left" : "Class<?> actArg = ac.getRawParameterType(0);",
      "right" : "Class<?> actArg = ac.getRawParameterType(0);",
      "info" : "VariableDeclarationStatement[17162-17206]:VariableDeclarationStatement[17162-17206]"
    }, {
      "left" : "for (Class<?> expArg : argTypes)",
      "right" : "for (Class<?> expArg : argTypes)",
      "info" : "EnhancedForStatement[17223-17391]:EnhancedForStatement[17223-17391]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17256-17391]:Block[17256-17391]"
    }, {
      "left" : "if (expArg == actArg)",
      "right" : "if (expArg == actArg)",
      "info" : "IfStatement[17278-17373]:IfStatement[17278-17373]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[17300-17373]:Block[17300-17373]"
    }, {
      "left" : "return ac.getAnnotated();",
      "right" : "return ac.getAnnotated();",
      "info" : "ReturnStatement[17326-17351]:ReturnStatement[17326-17351]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[17424-17436]:ReturnStatement[17424-17436]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[19574-19585]:MarkerAnnotation[19666-19677]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[19632-19641]:Modifier[19724-19733]"
    }, {
      "left" : "PropertyName",
      "right" : "PropertyName",
      "info" : "SimpleType[19642-19654]:SimpleType[19734-19746]"
    }, {
      "left" : "_findCreatorPropertyName",
      "right" : "_findCreatorPropertyName",
      "info" : "SimpleName[19655-19679]:SimpleName[19747-19771]"
    }, {
      "left" : "AnnotatedParameter param",
      "right" : "AnnotatedParameter param",
      "info" : "SingleVariableDeclaration[19680-19704]:SingleVariableDeclaration[19772-19796]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19710-20078]:Block[19802-20170]"
    }, {
      "left" : "PropertyName name = _annotationIntrospector.findNameForDeserialization(param);",
      "right" : "PropertyName name = _annotationIntrospector.findNameForDeserialization(param);",
      "info" : "VariableDeclarationStatement[19720-19798]:VariableDeclarationStatement[19812-19890]"
    }, {
      "left" : "if (name == null || name.isEmpty())",
      "right" : "if (name == null || name.isEmpty())",
      "info" : "IfStatement[19807-20051]:IfStatement[19899-20143]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19843-20051]:Block[19935-20143]"
    }, {
      "left" : "String str = _annotationIntrospector.findImplicitPropertyName(param);",
      "right" : "String str = _annotationIntrospector.findImplicitPropertyName(param);",
      "info" : "VariableDeclarationStatement[19857-19926]:VariableDeclarationStatement[19949-20018]"
    }, {
      "left" : "if (str != null && !str.isEmpty())",
      "right" : "if (str != null && !str.isEmpty())",
      "info" : "IfStatement[19939-20041]:IfStatement[20031-20133]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[19974-20041]:Block[20066-20133]"
    }, {
      "left" : "name = PropertyName.construct(str);",
      "right" : "name = PropertyName.construct(str);",
      "info" : "ExpressionStatement[19992-20027]:ExpressionStatement[20084-20119]"
    }, {
      "left" : "return name;",
      "right" : "return name;",
      "info" : "ReturnStatement[20060-20072]:ReturnStatement[20152-20164]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20276-20285]:MarkerAnnotation[20368-20377]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20290-20296]:Modifier[20382-20388]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[20297-20305]:ParameterizedType[20389-20397]"
    }, {
      "left" : "findPOJOBuilder",
      "right" : "findPOJOBuilder",
      "info" : "SimpleName[20306-20321]:SimpleName[20398-20413]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20324-20449]:Block[20416-20541]"
    }, {
      "left" : "return (_annotationIntrospector == null) ?\n    \t\t\tnull : _annotationIntrospector.findPOJOBuilder(_classInfo);",
      "right" : "return (_annotationIntrospector == null) ?\n    \t\t\tnull : _annotationIntrospector.findPOJOBuilder(_classInfo);",
      "info" : "ReturnStatement[20334-20443]:ReturnStatement[20426-20535]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20455-20464]:MarkerAnnotation[20547-20556]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20469-20475]:Modifier[20561-20567]"
    }, {
      "left" : "JsonPOJOBuilder.Value",
      "right" : "JsonPOJOBuilder.Value",
      "info" : "SimpleType[20476-20497]:SimpleType[20568-20589]"
    }, {
      "left" : "findPOJOBuilderConfig",
      "right" : "findPOJOBuilderConfig",
      "info" : "SimpleName[20498-20519]:SimpleName[20590-20611]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20526-20666]:Block[20618-20758]"
    }, {
      "left" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findPOJOBuilderConfig(_classInfo);",
      "right" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findPOJOBuilderConfig(_classInfo);",
      "info" : "ReturnStatement[20536-20660]:ReturnStatement[20628-20752]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20672-20681]:MarkerAnnotation[20764-20773]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20686-20692]:Modifier[20778-20784]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[20693-20717]:ParameterizedType[20785-20809]"
    }, {
      "left" : "findDeserializationConverter",
      "right" : "findDeserializationConverter",
      "info" : "SimpleName[20718-20746]:SimpleName[20810-20838]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20753-20941]:Block[20845-21033]"
    }, {
      "left" : "if (_annotationIntrospector == null)",
      "right" : "if (_annotationIntrospector == null)",
      "info" : "IfStatement[20763-20836]:IfStatement[20855-20928]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20800-20836]:Block[20892-20928]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[20814-20826]:ReturnStatement[20906-20918]"
    }, {
      "left" : "return _createConverter(_annotationIntrospector.findDeserializationConverter(_classInfo));",
      "right" : "return _createConverter(_annotationIntrospector.findDeserializationConverter(_classInfo));",
      "info" : "ReturnStatement[20845-20935]:ReturnStatement[20937-21027]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[20947-20956]:MarkerAnnotation[21039-21048]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[20961-20967]:Modifier[21053-21059]"
    }, {
      "left" : "String",
      "right" : "String",
      "info" : "SimpleType[20968-20974]:SimpleType[21060-21066]"
    }, {
      "left" : "findClassDescription",
      "right" : "findClassDescription",
      "info" : "SimpleName[20975-20995]:SimpleName[21067-21087]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[20998-21137]:Block[21090-21229]"
    }, {
      "left" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findClassDescription(_classInfo);",
      "right" : "return (_annotationIntrospector == null) ?\n                null : _annotationIntrospector.findClassDescription(_classInfo);",
      "info" : "ReturnStatement[21008-21131]:ReturnStatement[21100-21223]"
    }, {
      "left" : "@Deprecated",
      "right" : "@Deprecated",
      "info" : "MarkerAnnotation[21807-21818]:MarkerAnnotation[21899-21910]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[21823-21829]:Modifier[21915-21921]"
    }, {
      "left" : "LinkedHashMap<String,AnnotatedField>",
      "right" : "LinkedHashMap<String,AnnotatedField>",
      "info" : "ParameterizedType[21830-21866]:ParameterizedType[21922-21958]"
    }, {
      "left" : "_findPropertyFields",
      "right" : "_findPropertyFields",
      "info" : "SimpleName[21867-21886]:SimpleName[21959-21978]"
    }, {
      "left" : "Collection<String> ignoredProperties",
      "right" : "Collection<String> ignoredProperties",
      "info" : "SingleVariableDeclaration[21900-21936]:SingleVariableDeclaration[21992-22028]"
    }, {
      "left" : "boolean forSerialization",
      "right" : "boolean forSerialization",
      "info" : "SingleVariableDeclaration[21938-21962]:SingleVariableDeclaration[22030-22054]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[21968-22538]:Block[22060-22630]"
    }, {
      "left" : "LinkedHashMap<String,AnnotatedField> results = new LinkedHashMap<String,AnnotatedField>();",
      "right" : "LinkedHashMap<String,AnnotatedField> results = new LinkedHashMap<String,AnnotatedField>();",
      "info" : "VariableDeclarationStatement[21978-22068]:VariableDeclarationStatement[22070-22160]"
    }, {
      "left" : "for (BeanPropertyDefinition property : _properties())",
      "right" : "for (BeanPropertyDefinition property : _properties())",
      "info" : "EnhancedForStatement[22077-22508]:EnhancedForStatement[22169-22600]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22131-22508]:Block[22223-22600]"
    }, {
      "left" : "AnnotatedField f = property.getField();",
      "right" : "AnnotatedField f = property.getField();",
      "info" : "VariableDeclarationStatement[22145-22184]:VariableDeclarationStatement[22237-22276]"
    }, {
      "left" : "if (f != null)",
      "right" : "if (f != null)",
      "info" : "IfStatement[22197-22498]:IfStatement[22289-22590]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22212-22498]:Block[22304-22590]"
    }, {
      "left" : "String name = property.getName();",
      "right" : "String name = property.getName();",
      "info" : "VariableDeclarationStatement[22230-22263]:VariableDeclarationStatement[22322-22355]"
    }, {
      "left" : "if (ignoredProperties != null)",
      "right" : "if (ignoredProperties != null)",
      "info" : "IfStatement[22280-22446]:IfStatement[22372-22538]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22311-22446]:Block[22403-22538]"
    }, {
      "left" : "if (ignoredProperties.contains(name))",
      "right" : "if (ignoredProperties.contains(name))",
      "info" : "IfStatement[22333-22428]:IfStatement[22425-22520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22371-22428]:Block[22463-22520]"
    }, {
      "left" : "continue;",
      "right" : "continue;",
      "info" : "ContinueStatement[22397-22406]:ContinueStatement[22489-22498]"
    }, {
      "left" : "results.put(name, f);",
      "right" : "results.put(name, f);",
      "info" : "ExpressionStatement[22463-22484]:ExpressionStatement[22555-22576]"
    }, {
      "left" : "return results;",
      "right" : "return results;",
      "info" : "ReturnStatement[22517-22532]:ReturnStatement[22609-22624]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\")",
      "right" : "@SuppressWarnings(\"unchecked\")",
      "info" : "SingleMemberAnnotation[22721-22751]:SingleMemberAnnotation[22813-22843]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[22756-22762]:Modifier[22848-22854]"
    }, {
      "left" : "Converter<Object,Object>",
      "right" : "Converter<Object,Object>",
      "info" : "ParameterizedType[22763-22787]:ParameterizedType[22855-22879]"
    }, {
      "left" : "_createConverter",
      "right" : "_createConverter",
      "info" : "SimpleName[22788-22804]:SimpleName[22880-22896]"
    }, {
      "left" : "Object converterDef",
      "right" : "Object converterDef",
      "info" : "SingleVariableDeclaration[22805-22824]:SingleVariableDeclaration[22897-22916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22830-24206]:Block[22922-24298]"
    }, {
      "left" : "if (converterDef == null)",
      "right" : "if (converterDef == null)",
      "info" : "IfStatement[22840-22902]:IfStatement[22932-22994]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22866-22902]:Block[22958-22994]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[22880-22892]:ReturnStatement[22972-22984]"
    }, {
      "left" : "if (converterDef instanceof Converter<?,?>)",
      "right" : "if (converterDef instanceof Converter<?,?>)",
      "info" : "IfStatement[22911-23026]:IfStatement[23003-23118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[22955-23026]:Block[23047-23118]"
    }, {
      "left" : "return (Converter<Object,Object>) converterDef;",
      "right" : "return (Converter<Object,Object>) converterDef;",
      "info" : "ReturnStatement[22969-23016]:ReturnStatement[23061-23108]"
    }, {
      "left" : "if (!(converterDef instanceof Class))",
      "right" : "if (!(converterDef instanceof Class))",
      "info" : "IfStatement[23035-23305]:IfStatement[23127-23397]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23073-23305]:Block[23165-23397]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Converter definition of type \"\n                    +converterDef.getClass().getName()+\"; expected type Converter or Class<Converter> instead\");",
      "info" : "ThrowStatement[23087-23295]:ThrowStatement[23179-23387]"
    }, {
      "left" : "Class<?> converterClass = (Class<?>)converterDef;",
      "right" : "Class<?> converterClass = (Class<?>)converterDef;",
      "info" : "VariableDeclarationStatement[23314-23363]:VariableDeclarationStatement[23406-23455]"
    }, {
      "left" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "right" : "if (converterClass == Converter.None.class || ClassUtil.isBogusClass(converterClass))",
      "info" : "IfStatement[23440-23562]:IfStatement[23532-23654]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23526-23562]:Block[23618-23654]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[23540-23552]:ReturnStatement[23632-23644]"
    }, {
      "left" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "right" : "if (!Converter.class.isAssignableFrom(converterClass))",
      "info" : "IfStatement[23571-23800]:IfStatement[23663-23892]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[23626-23800]:Block[23718-23892]"
    }, {
      "left" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "right" : "throw new IllegalStateException(\"AnnotationIntrospector returned Class \"\n                    +converterClass.getName()+\"; expected Class<Converter>\");",
      "info" : "ThrowStatement[23640-23790]:ThrowStatement[23732-23882]"
    }, {
      "left" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "right" : "HandlerInstantiator hi = _config.getHandlerInstantiator();",
      "info" : "VariableDeclarationStatement[23809-23867]:VariableDeclarationStatement[23901-23959]"
    }, {
      "left" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(_config, _classInfo, converterClass);",
      "right" : "Converter<?,?> conv = (hi == null) ? null : hi.converterInstance(_config, _classInfo, converterClass);",
      "info" : "VariableDeclarationStatement[23876-23978]:VariableDeclarationStatement[23968-24070]"
    }, {
      "left" : "if (conv == null)",
      "right" : "if (conv == null)",
      "info" : "IfStatement[23987-24152]:IfStatement[24079-24244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[24005-24152]:Block[24097-24244]"
    }, {
      "left" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    _config.canOverrideAccessModifiers());",
      "right" : "conv = (Converter<?,?>) ClassUtil.createInstance(converterClass,\n                    _config.canOverrideAccessModifiers());",
      "info" : "ExpressionStatement[24019-24142]:ExpressionStatement[24111-24234]"
    }, {
      "left" : "return (Converter<Object,Object>) conv;",
      "right" : "return (Converter<Object,Object>) conv;",
      "info" : "ReturnStatement[24161-24200]:ReturnStatement[24253-24292]"
    } ]
  },
  "interFileMappings" : { }
}