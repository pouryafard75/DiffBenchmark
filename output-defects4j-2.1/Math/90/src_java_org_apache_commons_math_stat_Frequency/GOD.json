{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Frequency",
      "right" : "Frequency",
      "info" : "TypeDeclaration[985-15445]:TypeDeclaration[985-15530]"
    }, {
      "left" : "private static final long serialVersionUID = -3845586908418844111L;",
      "right" : "private static final long serialVersionUID = -3845586908418844111L;",
      "info" : "FieldDeclaration[1961-2071]:FieldDeclaration[1961-2071]"
    }, {
      "left" : "private final TreeMap freqTable;",
      "right" : "private final TreeMap freqTable;",
      "info" : "FieldDeclaration[2077-2142]:FieldDeclaration[2077-2142]"
    }, {
      "left" : "public Frequency()",
      "right" : "public Frequency()",
      "info" : "MethodDeclaration[2148-2253]:MethodDeclaration[2148-2253]"
    }, {
      "left" : "public Frequency(Comparator comparator)",
      "right" : "public Frequency(Comparator comparator)",
      "info" : "MethodDeclaration[2263-2499]:MethodDeclaration[2263-2499]"
    }, {
      "left" : "public String toString()",
      "right" : "public String toString()",
      "info" : "MethodDeclaration[2505-3391]:MethodDeclaration[2505-3391]"
    }, {
      "left" : "public void addValue(Object v)",
      "right" : "public void addValue(Object v)",
      "info" : "MethodDeclaration[3397-4911]:MethodDeclaration[3397-3976]"
    }, {
      "left" : "public void addValue(int v)",
      "right" : "public void addValue(int v)",
      "info" : "MethodDeclaration[4917-5089]:MethodDeclaration[5002-5174]"
    }, {
      "left" : "public void addValue(Integer v)",
      "right" : "public void addValue(Integer v)",
      "info" : "MethodDeclaration[5099-5287]:MethodDeclaration[5184-5372]"
    }, {
      "left" : "public void addValue(long v)",
      "right" : "public void addValue(long v)",
      "info" : "MethodDeclaration[5293-5466]:MethodDeclaration[5378-5551]"
    }, {
      "left" : "public void addValue(char v)",
      "right" : "public void addValue(char v)",
      "info" : "MethodDeclaration[5476-5654]:MethodDeclaration[5561-5739]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[5664-5756]:MethodDeclaration[5749-5841]"
    }, {
      "left" : "public Iterator valuesIterator()",
      "right" : "public Iterator valuesIterator()",
      "info" : "MethodDeclaration[5766-6207]:MethodDeclaration[5851-6292]"
    }, {
      "left" : "public long getSumFreq()",
      "right" : "public long getSumFreq()",
      "info" : "MethodDeclaration[6302-6658]:MethodDeclaration[6387-6743]"
    }, {
      "left" : "public long getCount(Object v)",
      "right" : "public long getCount(Object v)",
      "info" : "MethodDeclaration[6664-7346]:MethodDeclaration[6749-7431]"
    }, {
      "left" : "public long getCount(int v)",
      "right" : "public long getCount(int v)",
      "info" : "MethodDeclaration[7352-7566]:MethodDeclaration[7437-7651]"
    }, {
      "left" : "public long getCount(long v)",
      "right" : "public long getCount(long v)",
      "info" : "MethodDeclaration[7576-7791]:MethodDeclaration[7661-7876]"
    }, {
      "left" : "public long getCount(char v)",
      "right" : "public long getCount(char v)",
      "info" : "MethodDeclaration[7801-8021]:MethodDeclaration[7886-8106]"
    }, {
      "left" : "public double getPct(Object v)",
      "right" : "public double getPct(Object v)",
      "info" : "MethodDeclaration[8100-8612]:MethodDeclaration[8185-8697]"
    }, {
      "left" : "public double getPct(int v)",
      "right" : "public double getPct(int v)",
      "info" : "MethodDeclaration[8622-8917]:MethodDeclaration[8707-9002]"
    }, {
      "left" : "public double getPct(long v)",
      "right" : "public double getPct(long v)",
      "info" : "MethodDeclaration[8927-9225]:MethodDeclaration[9012-9310]"
    }, {
      "left" : "public double getPct(char v)",
      "right" : "public double getPct(char v)",
      "info" : "MethodDeclaration[9235-9538]:MethodDeclaration[9320-9623]"
    }, {
      "left" : "public long getCumFreq(Object v)",
      "right" : "public long getCumFreq(Object v)",
      "info" : "MethodDeclaration[9649-11165]:MethodDeclaration[9734-11250]"
    }, {
      "left" : "public long getCumFreq(int v)",
      "right" : "public long getCumFreq(int v)",
      "info" : "MethodDeclaration[11176-11524]:MethodDeclaration[11261-11609]"
    }, {
      "left" : "public long getCumFreq(long v)",
      "right" : "public long getCumFreq(long v)",
      "info" : "MethodDeclaration[11535-11886]:MethodDeclaration[11620-11971]"
    }, {
      "left" : "public long getCumFreq(char v)",
      "right" : "public long getCumFreq(char v)",
      "info" : "MethodDeclaration[11896-12252]:MethodDeclaration[11981-12337]"
    }, {
      "left" : "public double getCumPct(Object v)",
      "right" : "public double getCumPct(Object v)",
      "info" : "MethodDeclaration[12368-13017]:MethodDeclaration[12453-13102]"
    }, {
      "left" : "public double getCumPct(int v)",
      "right" : "public double getCumPct(int v)",
      "info" : "MethodDeclaration[13027-13430]:MethodDeclaration[13112-13515]"
    }, {
      "left" : "public double getCumPct(long v)",
      "right" : "public double getCumPct(long v)",
      "info" : "MethodDeclaration[13440-13846]:MethodDeclaration[13525-13931]"
    }, {
      "left" : "public double getCumPct(char v)",
      "right" : "public double getCumPct(char v)",
      "info" : "MethodDeclaration[13856-14267]:MethodDeclaration[13941-14352]"
    }, {
      "left" : "NaturalComparator",
      "right" : "NaturalComparator",
      "info" : "TypeDeclaration[14277-15443]:TypeDeclaration[14362-15528]"
    }, {
      "left" : "private static final long serialVersionUID = -3852193713161395148L;",
      "right" : "private static final long serialVersionUID = -3852193713161395148L;",
      "info" : "FieldDeclaration[14519-14633]:FieldDeclaration[14604-14718]"
    }, {
      "left" : "public int compare(Object o1, Object o2)",
      "right" : "public int compare(Object o1, Object o2)",
      "info" : "MethodDeclaration[14643-15437]:MethodDeclaration[14728-15522]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2211-2253]:Block[2211-2253]"
    }, {
      "left" : "freqTable = new TreeMap();",
      "right" : "freqTable = new TreeMap();",
      "info" : "ExpressionStatement[2221-2247]:ExpressionStatement[2221-2247]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2447-2499]:Block[2447-2499]"
    }, {
      "left" : "freqTable = new TreeMap(comparator);",
      "right" : "freqTable = new TreeMap(comparator);",
      "info" : "ExpressionStatement[2457-2493]:ExpressionStatement[2457-2493]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2685-3391]:Block[2685-3391]"
    }, {
      "left" : "NumberFormat nf = NumberFormat.getPercentInstance();",
      "right" : "NumberFormat nf = NumberFormat.getPercentInstance();",
      "info" : "VariableDeclarationStatement[2695-2747]:VariableDeclarationStatement[2695-2747]"
    }, {
      "left" : "StringBuffer outBuffer = new StringBuffer();",
      "right" : "StringBuffer outBuffer = new StringBuffer();",
      "info" : "VariableDeclarationStatement[2756-2800]:VariableDeclarationStatement[2756-2800]"
    }, {
      "left" : "outBuffer.append(\"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");",
      "right" : "outBuffer.append(\"Value \\t Freq. \\t Pct. \\t Cum Pct. \\n\");",
      "info" : "ExpressionStatement[2809-2867]:ExpressionStatement[2809-2867]"
    }, {
      "left" : "Iterator iter = freqTable.keySet().iterator();",
      "right" : "Iterator iter = freqTable.keySet().iterator();",
      "info" : "VariableDeclarationStatement[2876-2922]:VariableDeclarationStatement[2876-2922]"
    }, {
      "left" : "while (iter.hasNext())",
      "right" : "while (iter.hasNext())",
      "info" : "WhileStatement[2931-3348]:WhileStatement[2931-3348]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2954-3348]:Block[2954-3348]"
    }, {
      "left" : "Object value = iter.next();",
      "right" : "Object value = iter.next();",
      "info" : "VariableDeclarationStatement[2968-2995]:VariableDeclarationStatement[2968-2995]"
    }, {
      "left" : "outBuffer.append(value);",
      "right" : "outBuffer.append(value);",
      "info" : "ExpressionStatement[3008-3032]:ExpressionStatement[3008-3032]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3045-3068]:ExpressionStatement[3045-3068]"
    }, {
      "left" : "outBuffer.append(getCount(value));",
      "right" : "outBuffer.append(getCount(value));",
      "info" : "ExpressionStatement[3081-3115]:ExpressionStatement[3081-3115]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3128-3151]:ExpressionStatement[3128-3151]"
    }, {
      "left" : "outBuffer.append(nf.format(getPct(value)));",
      "right" : "outBuffer.append(nf.format(getPct(value)));",
      "info" : "ExpressionStatement[3164-3207]:ExpressionStatement[3164-3207]"
    }, {
      "left" : "outBuffer.append('\\t');",
      "right" : "outBuffer.append('\\t');",
      "info" : "ExpressionStatement[3220-3243]:ExpressionStatement[3220-3243]"
    }, {
      "left" : "outBuffer.append(nf.format(getCumPct(value)));",
      "right" : "outBuffer.append(nf.format(getCumPct(value)));",
      "info" : "ExpressionStatement[3256-3302]:ExpressionStatement[3256-3302]"
    }, {
      "left" : "outBuffer.append('\\n');",
      "right" : "outBuffer.append('\\n');",
      "info" : "ExpressionStatement[3315-3338]:ExpressionStatement[3315-3338]"
    }, {
      "left" : "return outBuffer.toString();",
      "right" : "return outBuffer.toString();",
      "info" : "ReturnStatement[3357-3385]:ReturnStatement[3357-3385]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3932-4911]:Block[3932-3976]"
    }, {
      "left" : "Object obj = v;",
      "right" : "Object obj = v;",
      "info" : "VariableDeclarationStatement[4304-4319]:VariableDeclarationStatement[4389-4404]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[4328-4423]:IfStatement[4413-4508]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4354-4423]:Block[4439-4508]"
    }, {
      "left" : "obj = Long.valueOf(((Integer) v).longValue());",
      "right" : "obj = Long.valueOf(((Integer) v).longValue());",
      "info" : "ExpressionStatement[4367-4413]:ExpressionStatement[4452-4498]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[4432-4905]:TryStatement[4517-4990]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4436-4693]:Block[4521-4778]"
    }, {
      "left" : "Long count = (Long) freqTable.get(obj);",
      "right" : "Long count = (Long) freqTable.get(obj);",
      "info" : "VariableDeclarationStatement[4450-4489]:VariableDeclarationStatement[4535-4574]"
    }, {
      "left" : "if (count == null)",
      "right" : "if (count == null)",
      "info" : "IfStatement[4502-4683]:IfStatement[4587-4768]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4521-4589]:Block[4606-4674]"
    }, {
      "left" : "freqTable.put(obj, Long.valueOf(1));",
      "right" : "freqTable.put(obj, Long.valueOf(1));",
      "info" : "ExpressionStatement[4539-4575]:ExpressionStatement[4624-4660]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4595-4683]:Block[4680-4768]"
    }, {
      "left" : "freqTable.put(obj, Long.valueOf(count.longValue() + 1));",
      "right" : "freqTable.put(obj, Long.valueOf(count.longValue() + 1));",
      "info" : "ExpressionStatement[4613-4669]:ExpressionStatement[4698-4754]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4724-4905]:Block[4809-4990]"
    }, {
      "left" : "throw new IllegalArgumentException(\"Value not comparable to existing values.\");",
      "right" : "throw new IllegalArgumentException(\"Value not comparable to existing values.\");",
      "info" : "ThrowStatement[4816-4895]:ThrowStatement[4901-4980]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5047-5089]:Block[5132-5174]"
    }, {
      "left" : "addValue(Long.valueOf(v));",
      "right" : "addValue(Long.valueOf(v));",
      "info" : "ExpressionStatement[5057-5083]:ExpressionStatement[5142-5168]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5233-5287]:Block[5318-5372]"
    }, {
      "left" : "addValue(Long.valueOf(v.longValue()));",
      "right" : "addValue(Long.valueOf(v.longValue()));",
      "info" : "ExpressionStatement[5243-5281]:ExpressionStatement[5328-5366]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5424-5466]:Block[5509-5551]"
    }, {
      "left" : "addValue(Long.valueOf(v));",
      "right" : "addValue(Long.valueOf(v));",
      "info" : "ExpressionStatement[5434-5460]:ExpressionStatement[5519-5545]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5607-5654]:Block[5692-5739]"
    }, {
      "left" : "addValue(Character.valueOf(v));",
      "right" : "addValue(Character.valueOf(v));",
      "info" : "ExpressionStatement[5617-5648]:ExpressionStatement[5702-5733]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5722-5756]:Block[5807-5841]"
    }, {
      "left" : "freqTable.clear();",
      "right" : "freqTable.clear();",
      "info" : "ExpressionStatement[5732-5750]:ExpressionStatement[5817-5835]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6154-6207]:Block[6239-6292]"
    }, {
      "left" : "return freqTable.keySet().iterator();",
      "right" : "return freqTable.keySet().iterator();",
      "info" : "ReturnStatement[6164-6201]:ReturnStatement[6249-6286]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6436-6658]:Block[6521-6743]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[6446-6462]:VariableDeclarationStatement[6531-6547]"
    }, {
      "left" : "Iterator iterator = freqTable.values().iterator();",
      "right" : "Iterator iterator = freqTable.values().iterator();",
      "info" : "VariableDeclarationStatement[6471-6521]:VariableDeclarationStatement[6556-6606]"
    }, {
      "left" : "while (iterator.hasNext())",
      "right" : "while (iterator.hasNext())",
      "info" : "WhileStatement[6530-6629]:WhileStatement[6615-6714]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6558-6629]:Block[6643-6714]"
    }, {
      "left" : "result += ((Long) iterator.next()).longValue();",
      "right" : "result += ((Long) iterator.next()).longValue();",
      "info" : "ExpressionStatement[6572-6619]:ExpressionStatement[6657-6704]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[6638-6652]:ReturnStatement[6723-6737]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6881-7346]:Block[6966-7431]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[6891-6984]:IfStatement[6976-7069]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6917-6984]:Block[7002-7069]"
    }, {
      "left" : "return getCount(((Integer) v).longValue());",
      "right" : "return getCount(((Integer) v).longValue());",
      "info" : "ReturnStatement[6931-6974]:ReturnStatement[7016-7059]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[6993-7009]:VariableDeclarationStatement[7078-7094]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7018-7317]:TryStatement[7103-7402]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7022-7176]:Block[7107-7261]"
    }, {
      "left" : "Long count =  (Long) freqTable.get(v);",
      "right" : "Long count =  (Long) freqTable.get(v);",
      "info" : "VariableDeclarationStatement[7037-7075]:VariableDeclarationStatement[7122-7160]"
    }, {
      "left" : "if (count != null)",
      "right" : "if (count != null)",
      "info" : "IfStatement[7088-7166]:IfStatement[7173-7251]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7107-7166]:Block[7192-7251]"
    }, {
      "left" : "result = count.longValue();",
      "right" : "result = count.longValue();",
      "info" : "ExpressionStatement[7125-7152]:ExpressionStatement[7210-7237]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7207-7317]:Block[7292-7402]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[7326-7340]:ReturnStatement[7411-7425]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7517-7566]:Block[7602-7651]"
    }, {
      "left" : "return getCount(Long.valueOf(v));",
      "right" : "return getCount(Long.valueOf(v));",
      "info" : "ReturnStatement[7527-7560]:ReturnStatement[7612-7645]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7742-7791]:Block[7827-7876]"
    }, {
      "left" : "return getCount(Long.valueOf(v));",
      "right" : "return getCount(Long.valueOf(v));",
      "info" : "ReturnStatement[7752-7785]:ReturnStatement[7837-7870]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7967-8021]:Block[8052-8106]"
    }, {
      "left" : "return getCount(Character.valueOf(v));",
      "right" : "return getCount(Character.valueOf(v));",
      "info" : "ReturnStatement[7977-8015]:ReturnStatement[8062-8100]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8429-8612]:Block[8514-8697]"
    }, {
      "left" : "final long sumFreq = getSumFreq();",
      "right" : "final long sumFreq = getSumFreq();",
      "info" : "VariableDeclarationStatement[8439-8473]:VariableDeclarationStatement[8524-8558]"
    }, {
      "left" : "if (sumFreq == 0)",
      "right" : "if (sumFreq == 0)",
      "info" : "IfStatement[8482-8542]:IfStatement[8567-8627]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8500-8542]:Block[8585-8627]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[8514-8532]:ReturnStatement[8599-8617]"
    }, {
      "left" : "return (double) getCount(v) / (double) sumFreq;",
      "right" : "return (double) getCount(v) / (double) sumFreq;",
      "info" : "ReturnStatement[8551-8598]:ReturnStatement[8636-8683]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8863-8917]:Block[8948-9002]"
    }, {
      "left" : "return getPct(Long.valueOf(v));",
      "right" : "return getPct(Long.valueOf(v));",
      "info" : "ReturnStatement[8873-8904]:ReturnStatement[8958-8989]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9169-9225]:Block[9254-9310]"
    }, {
      "left" : "return getPct(Long.valueOf(v));",
      "right" : "return getPct(Long.valueOf(v));",
      "info" : "ReturnStatement[9179-9210]:ReturnStatement[9264-9295]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9477-9538]:Block[9562-9623]"
    }, {
      "left" : "return getPct(Character.valueOf(v));",
      "right" : "return getPct(Character.valueOf(v));",
      "info" : "ReturnStatement[9487-9523]:ReturnStatement[9572-9608]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9943-11165]:Block[10028-11250]"
    }, {
      "left" : "if (getSumFreq() == 0)",
      "right" : "if (getSumFreq() == 0)",
      "info" : "IfStatement[9953-10009]:IfStatement[10038-10094]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9976-10009]:Block[10061-10094]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[9990-9999]:ReturnStatement[10075-10084]"
    }, {
      "left" : "if (v instanceof Integer)",
      "right" : "if (v instanceof Integer)",
      "info" : "IfStatement[10018-10113]:IfStatement[10103-10198]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10044-10113]:Block[10129-10198]"
    }, {
      "left" : "return getCumFreq(((Integer) v).longValue());",
      "right" : "return getCumFreq(((Integer) v).longValue());",
      "info" : "ReturnStatement[10058-10103]:ReturnStatement[10143-10188]"
    }, {
      "left" : "Comparator c = freqTable.comparator();",
      "right" : "Comparator c = freqTable.comparator();",
      "info" : "VariableDeclarationStatement[10122-10160]:VariableDeclarationStatement[10207-10245]"
    }, {
      "left" : "if (c == null)",
      "right" : "if (c == null)",
      "info" : "IfStatement[10169-10236]:IfStatement[10254-10321]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10184-10236]:Block[10269-10321]"
    }, {
      "left" : "c = new NaturalComparator();",
      "right" : "c = new NaturalComparator();",
      "info" : "ExpressionStatement[10198-10226]:ExpressionStatement[10283-10311]"
    }, {
      "left" : "long result = 0;",
      "right" : "long result = 0;",
      "info" : "VariableDeclarationStatement[10245-10261]:VariableDeclarationStatement[10330-10346]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10279-10529]:TryStatement[10364-10614]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10283-10435]:Block[10368-10520]"
    }, {
      "left" : "Long value = (Long) freqTable.get(v);",
      "right" : "Long value = (Long) freqTable.get(v);",
      "info" : "VariableDeclarationStatement[10297-10334]:VariableDeclarationStatement[10382-10419]"
    }, {
      "left" : "if (value != null)",
      "right" : "if (value != null)",
      "info" : "IfStatement[10347-10425]:IfStatement[10432-10510]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10366-10425]:Block[10451-10510]"
    }, {
      "left" : "result = value.longValue();",
      "right" : "result = value.longValue();",
      "info" : "ExpressionStatement[10384-10411]:ExpressionStatement[10469-10496]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10466-10529]:Block[10551-10614]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[10480-10494]:ReturnStatement[10565-10579]"
    }, {
      "left" : "if (c.compare(v, freqTable.firstKey()) < 0)",
      "right" : "if (c.compare(v, freqTable.firstKey()) < 0)",
      "info" : "IfStatement[10547-10671]:IfStatement[10632-10756]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10591-10671]:Block[10676-10756]"
    }, {
      "left" : "return 0;",
      "right" : "return 0;",
      "info" : "ReturnStatement[10605-10614]:ReturnStatement[10690-10699]"
    }, {
      "left" : "if (c.compare(v, freqTable.lastKey()) >= 0)",
      "right" : "if (c.compare(v, freqTable.lastKey()) >= 0)",
      "info" : "IfStatement[10689-10832]:IfStatement[10774-10917]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10733-10832]:Block[10818-10917]"
    }, {
      "left" : "return getSumFreq();",
      "right" : "return getSumFreq();",
      "info" : "ReturnStatement[10747-10767]:ReturnStatement[10832-10852]"
    }, {
      "left" : "Iterator values = valuesIterator();",
      "right" : "Iterator values = valuesIterator();",
      "info" : "VariableDeclarationStatement[10850-10885]:VariableDeclarationStatement[10935-10970]"
    }, {
      "left" : "while (values.hasNext())",
      "right" : "while (values.hasNext())",
      "info" : "WhileStatement[10894-11136]:WhileStatement[10979-11221]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10919-11136]:Block[11004-11221]"
    }, {
      "left" : "Object nextValue = values.next();",
      "right" : "Object nextValue = values.next();",
      "info" : "VariableDeclarationStatement[10933-10966]:VariableDeclarationStatement[11018-11051]"
    }, {
      "left" : "if (c.compare(v, nextValue) > 0)",
      "right" : "if (c.compare(v, nextValue) > 0)",
      "info" : "IfStatement[10979-11126]:IfStatement[11064-11211]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11012-11074]:Block[11097-11159]"
    }, {
      "left" : "result += getCount(nextValue);",
      "right" : "result += getCount(nextValue);",
      "info" : "ExpressionStatement[11030-11060]:ExpressionStatement[11115-11145]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11080-11126]:Block[11165-11211]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11098-11112]:ReturnStatement[11183-11197]"
    }, {
      "left" : "return result;",
      "right" : "return result;",
      "info" : "ReturnStatement[11145-11159]:ReturnStatement[11230-11244]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11466-11524]:Block[11551-11609]"
    }, {
      "left" : "return getCumFreq(Long.valueOf(v));",
      "right" : "return getCumFreq(Long.valueOf(v));",
      "info" : "ReturnStatement[11476-11511]:ReturnStatement[11561-11596]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11826-11886]:Block[11911-11971]"
    }, {
      "left" : "return getCumFreq(Long.valueOf(v));",
      "right" : "return getCumFreq(Long.valueOf(v));",
      "info" : "ReturnStatement[11836-11871]:ReturnStatement[11921-11956]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12187-12252]:Block[12272-12337]"
    }, {
      "left" : "return getCumFreq(Character.valueOf(v));",
      "right" : "return getCumFreq(Character.valueOf(v));",
      "info" : "ReturnStatement[12197-12237]:ReturnStatement[12282-12322]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12832-13017]:Block[12917-13102]"
    }, {
      "left" : "final long sumFreq = getSumFreq();",
      "right" : "final long sumFreq = getSumFreq();",
      "info" : "VariableDeclarationStatement[12842-12876]:VariableDeclarationStatement[12927-12961]"
    }, {
      "left" : "if (sumFreq == 0)",
      "right" : "if (sumFreq == 0)",
      "info" : "IfStatement[12885-12945]:IfStatement[12970-13030]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12903-12945]:Block[12988-13030]"
    }, {
      "left" : "return Double.NaN;",
      "right" : "return Double.NaN;",
      "info" : "ReturnStatement[12917-12935]:ReturnStatement[13002-13020]"
    }, {
      "left" : "return (double) getCumFreq(v) / (double) sumFreq;",
      "right" : "return (double) getCumFreq(v) / (double) sumFreq;",
      "info" : "ReturnStatement[12954-13003]:ReturnStatement[13039-13088]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13373-13430]:Block[13458-13515]"
    }, {
      "left" : "return getCumPct(Long.valueOf(v));",
      "right" : "return getCumPct(Long.valueOf(v));",
      "info" : "ReturnStatement[13383-13417]:ReturnStatement[13468-13502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[13787-13846]:Block[13872-13931]"
    }, {
      "left" : "return getCumPct(Long.valueOf(v));",
      "right" : "return getCumPct(Long.valueOf(v));",
      "info" : "ReturnStatement[13797-13831]:ReturnStatement[13882-13916]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[14203-14267]:Block[14288-14352]"
    }, {
      "left" : "return getCumPct(Character.valueOf(v));",
      "right" : "return getCumPct(Character.valueOf(v));",
      "info" : "ReturnStatement[14213-14252]:ReturnStatement[14298-14337]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[15375-15437]:Block[15460-15522]"
    }, {
      "left" : "return ((Comparable)o1).compareTo(o2);",
      "right" : "return ((Comparable)o1).compareTo(o2);",
      "info" : "ReturnStatement[15389-15427]:ReturnStatement[15474-15512]"
    } ]
  },
  "interFileMappings" : { }
}