{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Line",
      "right" : "Line",
      "info" : "TypeDeclaration[1416-8389]:TypeDeclaration[1416-8421]"
    }, {
      "left" : "private Vector3D direction;",
      "right" : "private Vector3D direction;",
      "info" : "FieldDeclaration[1945-1999]:FieldDeclaration[1945-1999]"
    }, {
      "left" : "private Vector3D zero;",
      "right" : "private Vector3D zero;",
      "info" : "FieldDeclaration[2005-2072]:FieldDeclaration[2005-2072]"
    }, {
      "left" : "public Line(final Vector3D p1, final Vector3D p2) throws MathIllegalArgumentException",
      "right" : "public Line(final Vector3D p1, final Vector3D p2) throws MathIllegalArgumentException",
      "info" : "MethodDeclaration[2078-2481]:MethodDeclaration[2078-2481]"
    }, {
      "left" : "public Line(final Line line)",
      "right" : "public Line(final Line line)",
      "info" : "MethodDeclaration[2487-2781]:MethodDeclaration[2487-2781]"
    }, {
      "left" : "public void reset(final Vector3D p1, final Vector3D p2) throws MathIllegalArgumentException",
      "right" : "public void reset(final Vector3D p1, final Vector3D p2) throws MathIllegalArgumentException",
      "info" : "MethodDeclaration[2787-3555]:MethodDeclaration[2787-3555]"
    }, {
      "left" : "public Line revert()",
      "right" : "public Line revert()",
      "info" : "MethodDeclaration[3561-3793]:MethodDeclaration[3561-3825]"
    }, {
      "left" : "public Vector3D getDirection()",
      "right" : "public Vector3D getDirection()",
      "info" : "MethodDeclaration[3799-3959]:MethodDeclaration[3831-3991]"
    }, {
      "left" : "public Vector3D getOrigin()",
      "right" : "public Vector3D getOrigin()",
      "info" : "MethodDeclaration[3965-4127]:MethodDeclaration[3997-4159]"
    }, {
      "left" : "public double getAbscissa(final Vector3D point)",
      "right" : "public double getAbscissa(final Vector3D point)",
      "info" : "MethodDeclaration[4133-4537]:MethodDeclaration[4165-4569]"
    }, {
      "left" : "public Vector3D pointAt(final double abscissa)",
      "right" : "public Vector3D pointAt(final double abscissa)",
      "info" : "MethodDeclaration[4543-4827]:MethodDeclaration[4575-4859]"
    }, {
      "left" : "public Vector1D toSubSpace(final Vector<Euclidean3D> point)",
      "right" : "public Vector1D toSubSpace(final Vector<Euclidean3D> point)",
      "info" : "MethodDeclaration[4833-5025]:MethodDeclaration[4865-5057]"
    }, {
      "left" : "public Vector3D toSpace(final Vector<Euclidean1D> point)",
      "right" : "public Vector3D toSpace(final Vector<Euclidean1D> point)",
      "info" : "MethodDeclaration[5031-5205]:MethodDeclaration[5063-5237]"
    }, {
      "left" : "public boolean isSimilarTo(final Line line)",
      "right" : "public boolean isSimilarTo(final Line line)",
      "info" : "MethodDeclaration[5211-5767]:MethodDeclaration[5243-5799]"
    }, {
      "left" : "public boolean contains(final Vector3D p)",
      "right" : "public boolean contains(final Vector3D p)",
      "info" : "MethodDeclaration[5773-5992]:MethodDeclaration[5805-6024]"
    }, {
      "left" : "public double distance(final Vector3D p)",
      "right" : "public double distance(final Vector3D p)",
      "info" : "MethodDeclaration[5998-6360]:MethodDeclaration[6030-6392]"
    }, {
      "left" : "public double distance(final Line line)",
      "right" : "public double distance(final Line line)",
      "info" : "MethodDeclaration[6366-7066]:MethodDeclaration[6398-7098]"
    }, {
      "left" : "public Vector3D closestPoint(final Line line)",
      "right" : "public Vector3D closestPoint(final Line line)",
      "info" : "MethodDeclaration[7072-7789]:MethodDeclaration[7104-7821]"
    }, {
      "left" : "public Vector3D intersection(final Line line)",
      "right" : "public Vector3D intersection(final Line line)",
      "info" : "MethodDeclaration[7795-8184]:MethodDeclaration[7827-8216]"
    }, {
      "left" : "public SubLine wholeLine()",
      "right" : "public SubLine wholeLine()",
      "info" : "MethodDeclaration[8190-8386]:MethodDeclaration[8222-8418]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1873-1879]:Modifier[1873-1879]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1880-1885]:TYPE_DECLARATION_KIND[1880-1885]"
    }, {
      "left" : "Line",
      "right" : "Line",
      "info" : "SimpleName[1886-1890]:SimpleName[1886-1890]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2365-2371]:Modifier[2365-2371]"
    }, {
      "left" : "Line",
      "right" : "Line",
      "info" : "SimpleName[2372-2376]:SimpleName[2372-2376]"
    }, {
      "left" : "final Vector3D p1",
      "right" : "final Vector3D p1",
      "info" : "SingleVariableDeclaration[2377-2394]:SingleVariableDeclaration[2377-2394]"
    }, {
      "left" : "final Vector3D p2",
      "right" : "final Vector3D p2",
      "info" : "SingleVariableDeclaration[2396-2413]:SingleVariableDeclaration[2396-2413]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[2422-2450]:SimpleType[2422-2450]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2451-2481]:Block[2451-2481]"
    }, {
      "left" : "reset(p1, p2);",
      "right" : "reset(p1, p2);",
      "info" : "ExpressionStatement[2461-2475]:ExpressionStatement[2461-2475]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2668-2674]:Modifier[2668-2674]"
    }, {
      "left" : "Line",
      "right" : "Line",
      "info" : "SimpleName[2675-2679]:SimpleName[2675-2679]"
    }, {
      "left" : "final Line line",
      "right" : "final Line line",
      "info" : "SingleVariableDeclaration[2680-2695]:SingleVariableDeclaration[2680-2695]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2697-2781]:Block[2697-2781]"
    }, {
      "left" : "this.direction = line.direction;",
      "right" : "this.direction = line.direction;",
      "info" : "ExpressionStatement[2707-2739]:ExpressionStatement[2707-2739]"
    }, {
      "left" : "this.zero      = line.zero;",
      "right" : "this.zero      = line.zero;",
      "info" : "ExpressionStatement[2748-2775]:ExpressionStatement[2748-2775]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3092-3098]:Modifier[3092-3098]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3099-3103]:PrimitiveType[3099-3103]"
    }, {
      "left" : "reset",
      "right" : "reset",
      "info" : "SimpleName[3104-3109]:SimpleName[3104-3109]"
    }, {
      "left" : "final Vector3D p1",
      "right" : "final Vector3D p1",
      "info" : "SingleVariableDeclaration[3110-3127]:SingleVariableDeclaration[3110-3127]"
    }, {
      "left" : "final Vector3D p2",
      "right" : "final Vector3D p2",
      "info" : "SingleVariableDeclaration[3129-3146]:SingleVariableDeclaration[3129-3146]"
    }, {
      "left" : "MathIllegalArgumentException",
      "right" : "MathIllegalArgumentException",
      "info" : "SimpleType[3155-3183]:SimpleType[3155-3183]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3184-3555]:Block[3184-3555]"
    }, {
      "left" : "final Vector3D delta = p2.subtract(p1);",
      "right" : "final Vector3D delta = p2.subtract(p1);",
      "info" : "VariableDeclarationStatement[3194-3233]:VariableDeclarationStatement[3194-3233]"
    }, {
      "left" : "final double norm2 = delta.getNormSq();",
      "right" : "final double norm2 = delta.getNormSq();",
      "info" : "VariableDeclarationStatement[3242-3281]:VariableDeclarationStatement[3242-3281]"
    }, {
      "left" : "if (norm2 == 0.0)",
      "right" : "if (norm2 == 0.0)",
      "info" : "IfStatement[3290-3399]:IfStatement[3290-3399]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3308-3399]:Block[3308-3399]"
    }, {
      "left" : "throw new MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);",
      "right" : "throw new MathIllegalArgumentException(LocalizedFormats.ZERO_NORM);",
      "info" : "ThrowStatement[3322-3389]:ThrowStatement[3322-3389]"
    }, {
      "left" : "this.direction = new Vector3D(1.0 / FastMath.sqrt(norm2), delta);",
      "right" : "this.direction = new Vector3D(1.0 / FastMath.sqrt(norm2), delta);",
      "info" : "ExpressionStatement[3408-3473]:ExpressionStatement[3408-3473]"
    }, {
      "left" : "zero = new Vector3D(1.0, p1, -p1.dotProduct(delta) / norm2, delta);",
      "right" : "zero = new Vector3D(1.0, p1, -p1.dotProduct(delta) / norm2, delta);",
      "info" : "ExpressionStatement[3482-3549]:ExpressionStatement[3482-3549]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3668-3674]:Modifier[3668-3674]"
    }, {
      "left" : "revert",
      "right" : "revert",
      "info" : "SimpleName[3680-3686]:SimpleName[3680-3686]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3689-3793]:Block[3689-3825]"
    }, {
      "left" : "return reverted;",
      "right" : "return reverted;",
      "info" : "ReturnStatement[3771-3787]:ReturnStatement[3803-3819]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3895-3901]:Modifier[3927-3933]"
    }, {
      "left" : "Vector3D",
      "right" : "Vector3D",
      "info" : "SimpleType[3902-3910]:SimpleType[3934-3942]"
    }, {
      "left" : "getDirection",
      "right" : "getDirection",
      "info" : "SimpleName[3911-3923]:SimpleName[3943-3955]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3926-3959]:Block[3958-3991]"
    }, {
      "left" : "return direction;",
      "right" : "return direction;",
      "info" : "ReturnStatement[3936-3953]:ReturnStatement[3968-3985]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4071-4077]:Modifier[4103-4109]"
    }, {
      "left" : "Vector3D",
      "right" : "Vector3D",
      "info" : "SimpleType[4078-4086]:SimpleType[4110-4118]"
    }, {
      "left" : "getOrigin",
      "right" : "getOrigin",
      "info" : "SimpleName[4087-4096]:SimpleName[4119-4128]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4099-4127]:Block[4131-4159]"
    }, {
      "left" : "return zero;",
      "right" : "return zero;",
      "info" : "ReturnStatement[4109-4121]:ReturnStatement[4141-4153]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4423-4429]:Modifier[4455-4461]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[4430-4436]:PrimitiveType[4462-4468]"
    }, {
      "left" : "getAbscissa",
      "right" : "getAbscissa",
      "info" : "SimpleName[4437-4448]:SimpleName[4469-4480]"
    }, {
      "left" : "final Vector3D point",
      "right" : "final Vector3D point",
      "info" : "SingleVariableDeclaration[4449-4469]:SingleVariableDeclaration[4481-4501]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4471-4537]:Block[4503-4569]"
    }, {
      "left" : "return point.subtract(zero).dotProduct(direction);",
      "right" : "return point.subtract(zero).dotProduct(direction);",
      "info" : "ReturnStatement[4481-4531]:ReturnStatement[4513-4563]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4712-4718]:Modifier[4744-4750]"
    }, {
      "left" : "Vector3D",
      "right" : "Vector3D",
      "info" : "SimpleType[4719-4727]:SimpleType[4751-4759]"
    }, {
      "left" : "pointAt",
      "right" : "pointAt",
      "info" : "SimpleName[4728-4735]:SimpleName[4760-4767]"
    }, {
      "left" : "final double abscissa",
      "right" : "final double abscissa",
      "info" : "SingleVariableDeclaration[4736-4757]:SingleVariableDeclaration[4768-4789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4759-4827]:Block[4791-4859]"
    }, {
      "left" : "return new Vector3D(1.0, zero, abscissa, direction);",
      "right" : "return new Vector3D(1.0, zero, abscissa, direction);",
      "info" : "ReturnStatement[4769-4821]:ReturnStatement[4801-4853]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4898-4904]:Modifier[4930-4936]"
    }, {
      "left" : "Vector1D",
      "right" : "Vector1D",
      "info" : "SimpleType[4905-4913]:SimpleType[4937-4945]"
    }, {
      "left" : "toSubSpace",
      "right" : "toSubSpace",
      "info" : "SimpleName[4914-4924]:SimpleName[4946-4956]"
    }, {
      "left" : "final Vector<Euclidean3D> point",
      "right" : "final Vector<Euclidean3D> point",
      "info" : "SingleVariableDeclaration[4925-4956]:SingleVariableDeclaration[4957-4988]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4958-5025]:Block[4990-5057]"
    }, {
      "left" : "return new Vector1D(getAbscissa((Vector3D) point));",
      "right" : "return new Vector1D(getAbscissa((Vector3D) point));",
      "info" : "ReturnStatement[4968-5019]:ReturnStatement[5000-5051]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5090-5096]:Modifier[5122-5128]"
    }, {
      "left" : "Vector3D",
      "right" : "Vector3D",
      "info" : "SimpleType[5097-5105]:SimpleType[5129-5137]"
    }, {
      "left" : "toSpace",
      "right" : "toSpace",
      "info" : "SimpleName[5106-5113]:SimpleName[5138-5145]"
    }, {
      "left" : "final Vector<Euclidean1D> point",
      "right" : "final Vector<Euclidean1D> point",
      "info" : "SingleVariableDeclaration[5114-5145]:SingleVariableDeclaration[5146-5177]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5147-5205]:Block[5179-5237]"
    }, {
      "left" : "return pointAt(((Vector1D) point).getX());",
      "right" : "return pointAt(((Vector1D) point).getX());",
      "info" : "ReturnStatement[5157-5199]:ReturnStatement[5189-5231]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5548-5554]:Modifier[5580-5586]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5555-5562]:PrimitiveType[5587-5594]"
    }, {
      "left" : "isSimilarTo",
      "right" : "isSimilarTo",
      "info" : "SimpleName[5563-5574]:SimpleName[5595-5606]"
    }, {
      "left" : "final Line line",
      "right" : "final Line line",
      "info" : "SingleVariableDeclaration[5575-5590]:SingleVariableDeclaration[5607-5622]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5592-5767]:Block[5624-5799]"
    }, {
      "left" : "final double angle = Vector3D.angle(direction, line.direction);",
      "right" : "final double angle = Vector3D.angle(direction, line.direction);",
      "info" : "VariableDeclarationStatement[5602-5665]:VariableDeclarationStatement[5634-5697]"
    }, {
      "left" : "return ((angle < 1.0e-10) || (angle > (FastMath.PI - 1.0e-10))) && contains(line.zero);",
      "right" : "return ((angle < 1.0e-10) || (angle > (FastMath.PI - 1.0e-10))) && contains(line.zero);",
      "info" : "ReturnStatement[5674-5761]:ReturnStatement[5706-5793]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5905-5911]:Modifier[5937-5943]"
    }, {
      "left" : "boolean",
      "right" : "boolean",
      "info" : "PrimitiveType[5912-5919]:PrimitiveType[5944-5951]"
    }, {
      "left" : "contains",
      "right" : "contains",
      "info" : "SimpleName[5920-5928]:SimpleName[5952-5960]"
    }, {
      "left" : "final Vector3D p",
      "right" : "final Vector3D p",
      "info" : "SingleVariableDeclaration[5929-5945]:SingleVariableDeclaration[5961-5977]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5947-5992]:Block[5979-6024]"
    }, {
      "left" : "return distance(p) < 1.0e-10;",
      "right" : "return distance(p) < 1.0e-10;",
      "info" : "ReturnStatement[5957-5986]:ReturnStatement[5989-6018]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6153-6159]:Modifier[6185-6191]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6160-6166]:PrimitiveType[6192-6198]"
    }, {
      "left" : "distance",
      "right" : "distance",
      "info" : "SimpleName[6167-6175]:SimpleName[6199-6207]"
    }, {
      "left" : "final Vector3D p",
      "right" : "final Vector3D p",
      "info" : "SingleVariableDeclaration[6176-6192]:SingleVariableDeclaration[6208-6224]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6194-6360]:Block[6226-6392]"
    }, {
      "left" : "final Vector3D d = p.subtract(zero);",
      "right" : "final Vector3D d = p.subtract(zero);",
      "info" : "VariableDeclarationStatement[6204-6240]:VariableDeclarationStatement[6236-6272]"
    }, {
      "left" : "final Vector3D n = new Vector3D(1.0, d, -d.dotProduct(direction), direction);",
      "right" : "final Vector3D n = new Vector3D(1.0, d, -d.dotProduct(direction), direction);",
      "info" : "VariableDeclarationStatement[6249-6326]:VariableDeclarationStatement[6281-6358]"
    }, {
      "left" : "return n.getNorm();",
      "right" : "return n.getNorm();",
      "info" : "ReturnStatement[6335-6354]:ReturnStatement[6367-6386]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6572-6578]:Modifier[6604-6610]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[6579-6585]:PrimitiveType[6611-6617]"
    }, {
      "left" : "distance",
      "right" : "distance",
      "info" : "SimpleName[6586-6594]:SimpleName[6618-6626]"
    }, {
      "left" : "final Line line",
      "right" : "final Line line",
      "info" : "SingleVariableDeclaration[6595-6610]:SingleVariableDeclaration[6627-6642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6612-7066]:Block[6644-7098]"
    }, {
      "left" : "final Vector3D normal = Vector3D.crossProduct(direction, line.direction);",
      "right" : "final Vector3D normal = Vector3D.crossProduct(direction, line.direction);",
      "info" : "VariableDeclarationStatement[6623-6696]:VariableDeclarationStatement[6655-6728]"
    }, {
      "left" : "final double n = normal.getNorm();",
      "right" : "final double n = normal.getNorm();",
      "info" : "VariableDeclarationStatement[6705-6739]:VariableDeclarationStatement[6737-6771]"
    }, {
      "left" : "if (n < Precision.SAFE_MIN)",
      "right" : "if (n < Precision.SAFE_MIN)",
      "info" : "IfStatement[6748-6861]:IfStatement[6780-6893]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6776-6861]:Block[6808-6893]"
    }, {
      "left" : "return distance(line.zero);",
      "right" : "return distance(line.zero);",
      "info" : "ReturnStatement[6824-6851]:ReturnStatement[6856-6883]"
    }, {
      "left" : "final double offset = line.zero.subtract(zero).dotProduct(normal) / n;",
      "right" : "final double offset = line.zero.subtract(zero).dotProduct(normal) / n;",
      "info" : "VariableDeclarationStatement[6951-7021]:VariableDeclarationStatement[6983-7053]"
    }, {
      "left" : "return FastMath.abs(offset);",
      "right" : "return FastMath.abs(offset);",
      "info" : "ReturnStatement[7031-7059]:ReturnStatement[7063-7091]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7262-7268]:Modifier[7294-7300]"
    }, {
      "left" : "Vector3D",
      "right" : "Vector3D",
      "info" : "SimpleType[7269-7277]:SimpleType[7301-7309]"
    }, {
      "left" : "closestPoint",
      "right" : "closestPoint",
      "info" : "SimpleName[7278-7290]:SimpleName[7310-7322]"
    }, {
      "left" : "final Line line",
      "right" : "final Line line",
      "info" : "SingleVariableDeclaration[7291-7306]:SingleVariableDeclaration[7323-7338]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7308-7789]:Block[7340-7821]"
    }, {
      "left" : "final double cos = direction.dotProduct(line.direction);",
      "right" : "final double cos = direction.dotProduct(line.direction);",
      "info" : "VariableDeclarationStatement[7319-7375]:VariableDeclarationStatement[7351-7407]"
    }, {
      "left" : "final double n = 1 - cos * cos;",
      "right" : "final double n = 1 - cos * cos;",
      "info" : "VariableDeclarationStatement[7384-7415]:VariableDeclarationStatement[7416-7447]"
    }, {
      "left" : "if (n < Precision.EPSILON)",
      "right" : "if (n < Precision.EPSILON)",
      "info" : "IfStatement[7424-7525]:IfStatement[7456-7557]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7451-7525]:Block[7483-7557]"
    }, {
      "left" : "return zero;",
      "right" : "return zero;",
      "info" : "ReturnStatement[7503-7515]:ReturnStatement[7535-7547]"
    }, {
      "left" : "final Vector3D delta0 = line.zero.subtract(zero);",
      "right" : "final Vector3D delta0 = line.zero.subtract(zero);",
      "info" : "VariableDeclarationStatement[7535-7584]:VariableDeclarationStatement[7567-7616]"
    }, {
      "left" : "final double a        = delta0.dotProduct(direction);",
      "right" : "final double a        = delta0.dotProduct(direction);",
      "info" : "VariableDeclarationStatement[7593-7646]:VariableDeclarationStatement[7625-7678]"
    }, {
      "left" : "final double b        = delta0.dotProduct(line.direction);",
      "right" : "final double b        = delta0.dotProduct(line.direction);",
      "info" : "VariableDeclarationStatement[7655-7713]:VariableDeclarationStatement[7687-7745]"
    }, {
      "left" : "return new Vector3D(1, zero, (a - b * cos) / n, direction);",
      "right" : "return new Vector3D(1, zero, (a - b * cos) / n, direction);",
      "info" : "ReturnStatement[7723-7782]:ReturnStatement[7755-7814]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8022-8028]:Modifier[8054-8060]"
    }, {
      "left" : "Vector3D",
      "right" : "Vector3D",
      "info" : "SimpleType[8029-8037]:SimpleType[8061-8069]"
    }, {
      "left" : "intersection",
      "right" : "intersection",
      "info" : "SimpleName[8038-8050]:SimpleName[8070-8082]"
    }, {
      "left" : "final Line line",
      "right" : "final Line line",
      "info" : "SingleVariableDeclaration[8051-8066]:SingleVariableDeclaration[8083-8098]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8068-8184]:Block[8100-8216]"
    }, {
      "left" : "final Vector3D closest = closestPoint(line);",
      "right" : "final Vector3D closest = closestPoint(line);",
      "info" : "VariableDeclarationStatement[8078-8122]:VariableDeclarationStatement[8110-8154]"
    }, {
      "left" : "return line.contains(closest) ? closest : null;",
      "right" : "return line.contains(closest) ? closest : null;",
      "info" : "ReturnStatement[8131-8178]:ReturnStatement[8163-8210]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8298-8304]:Modifier[8330-8336]"
    }, {
      "left" : "SubLine",
      "right" : "SubLine",
      "info" : "SimpleType[8305-8312]:SimpleType[8337-8344]"
    }, {
      "left" : "wholeLine",
      "right" : "wholeLine",
      "info" : "SimpleName[8313-8322]:SimpleName[8345-8354]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8325-8386]:Block[8357-8418]"
    }, {
      "left" : "return new SubLine(this, new IntervalsSet());",
      "right" : "return new SubLine(this, new IntervalsSet());",
      "info" : "ReturnStatement[8335-8380]:ReturnStatement[8367-8412]"
    } ]
  },
  "interFileMappings" : { }
}