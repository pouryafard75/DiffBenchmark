{
  "matchedElements" : [
 {
    "left" : "class : WFSURIHandlerTest",
    "right" : "class : WFSURIHandlerTest",
    "info" : "TypeDeclaration[1120-6372]:TypeDeclaration[1160-6412]"
  }, {
    "left" : "aliases",
    "right" : "aliases",
    "info" : "FieldDeclaration[1162-1281]:FieldDeclaration[1202-1321]"
  }, {
    "left" : "strategy",
    "right" : "strategy",
    "info" : "FieldDeclaration[1291-1313]:FieldDeclaration[1331-1353]"
  }, {
    "left" : "gs",
    "right" : "gs",
    "info" : "FieldDeclaration[1319-1340]:FieldDeclaration[1359-1380]"
  }, {
    "left" : "config",
    "right" : "config",
    "info" : "FieldDeclaration[1346-1375]:FieldDeclaration[1386-1415]"
  }, {
    "left" : "public setUp() : void",
    "right" : "public setUp() : void",
    "info" : "MethodDeclaration[1385-2108]:MethodDeclaration[1425-2148]"
  }, {
    "left" : "public getNetworkInterfaces() : ",
    "right" : "public getNetworkInterfaces() : ",
    "info" : "MethodDeclaration[1707-1828]:MethodDeclaration[1747-1868]"
  }, {
    "left" : "public tearDown() : void",
    "right" : "public tearDown() : void",
    "info" : "MethodDeclaration[2118-2187]:MethodDeclaration[2158-2227]"
  }, {
    "left" : "public testFromNetworkInterfaces() : void",
    "right" : "public testFromNetworkInterfaces() : void",
    "info" : "MethodDeclaration[2197-2314]:MethodDeclaration[2237-2354]"
  }, {
    "left" : "public testDefaultAliases() : void",
    "right" : "public testDefaultAliases() : void",
    "info" : "MethodDeclaration[2324-2572]:MethodDeclaration[2364-2612]"
  }, {
    "left" : "public testOverrideAliasesComma() : void",
    "right" : "public testOverrideAliasesComma() : void",
    "info" : "MethodDeclaration[2578-2911]:MethodDeclaration[2618-2951]"
  }, {
    "left" : "public testOverrideAliasesSpace() : void",
    "right" : "public testOverrideAliasesSpace() : void",
    "info" : "MethodDeclaration[2917-3241]:MethodDeclaration[2957-3281]"
  }, {
    "left" : "protected setProxyBase(url ) : void",
    "right" : "protected setProxyBase(url ) : void",
    "info" : "MethodDeclaration[3251-3450]:MethodDeclaration[3291-3490]"
  }, {
    "left" : "public testRecognizeReflexiveSimple() : void",
    "right" : "public testRecognizeReflexiveSimple() : void",
    "info" : "MethodDeclaration[3460-4211]:MethodDeclaration[3500-4251]"
  }, {
    "left" : "public testRecognizeReflexiveUserAliases() : void",
    "right" : "public testRecognizeReflexiveUserAliases() : void",
    "info" : "MethodDeclaration[4217-5569]:MethodDeclaration[4257-5609]"
  }, {
    "left" : "public testRecognizeReflexiveProxy() : void",
    "right" : "public testRecognizeReflexiveProxy() : void",
    "info" : "MethodDeclaration[5575-6369]:MethodDeclaration[5615-6409]"
  } ],
  "mappings" : [
 {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1120-1126]:Modifier[1160-1166]"
  }, {
    "left" : "class",
    "right" : "class",
    "info" : "TYPE_DECLARATION_KIND[1127-1132]:TYPE_DECLARATION_KIND[1167-1172]"
  }, {
    "left" : "@SuppressWarnings(\"deprecation\")",
    "right" : "@SuppressWarnings(\"deprecation\")",
    "info" : "SingleMemberAnnotation[1385-1417]:SingleMemberAnnotation[1425-1457]"
  }, {
    "left" : "@Before",
    "right" : "@Before",
    "info" : "MarkerAnnotation[1422-1429]:MarkerAnnotation[1462-1469]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1434-1440]:Modifier[1474-1480]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[1441-1445]:PrimitiveType[1481-1485]"
  }, {
    "left" : "setUp",
    "right" : "setUp",
    "info" : "SimpleName[1446-1451]:SimpleName[1486-1491]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1454-2108]:Block[1494-2148]"
  }, {
    "left" : "WFSURIHandler.ADDITIONAL_HOSTNAMES.clear();",
    "right" : "WFSURIHandler.ADDITIONAL_HOSTNAMES.clear();",
    "info" : "ExpressionStatement[1464-1507]:ExpressionStatement[1504-1547]"
  }, {
    "left" : "WFSURIHandler.ADDRESSES.clear();",
    "right" : "WFSURIHandler.ADDRESSES.clear();",
    "info" : "ExpressionStatement[1516-1548]:ExpressionStatement[1556-1588]"
  }, {
    "left" : "strategy = new InitStrategy() {\n            public Collection<NetworkInterface> getNetworkInterfaces(){\n                return Collections.emptyList();\n            }\n        };",
    "right" : "strategy = new InitStrategy() {\n            public Collection<NetworkInterface> getNetworkInterfaces(){\n                return Collections.emptyList();\n            }\n        };",
    "info" : "ExpressionStatement[1663-1839]:ExpressionStatement[1703-1879]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1707-1713]:Modifier[1747-1753]"
  }, {
    "left" : "Collection<NetworkInterface>",
    "right" : "Collection<NetworkInterface>",
    "info" : "ParameterizedType[1714-1742]:ParameterizedType[1754-1782]"
  }, {
    "left" : "getNetworkInterfaces",
    "right" : "getNetworkInterfaces",
    "info" : "SimpleName[1743-1763]:SimpleName[1783-1803]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1765-1828]:Block[1805-1868]"
  }, {
    "left" : "return Collections.emptyList();",
    "right" : "return Collections.emptyList();",
    "info" : "ReturnStatement[1783-1814]:ReturnStatement[1823-1854]"
  }, {
    "left" : "gs = EasyMock.createMock(GeoServer.class);",
    "right" : "gs = EasyMock.createMock(GeoServer.class);",
    "info" : "ExpressionStatement[1857-1899]:ExpressionStatement[1897-1939]"
  }, {
    "left" : "config = EasyMock.createMock(GeoServerInfo.class);",
    "right" : "config = EasyMock.createMock(GeoServerInfo.class);",
    "info" : "ExpressionStatement[1908-1958]:ExpressionStatement[1948-1998]"
  }, {
    "left" : "expect(gs.getGlobal()).andStubReturn(config);",
    "right" : "expect(gs.getGlobal()).andStubReturn(config);",
    "info" : "ExpressionStatement[1967-2012]:ExpressionStatement[2007-2052]"
  }, {
    "left" : "expect(config.getProxyBaseUrl()).andStubReturn(null);",
    "right" : "expect(config.getProxyBaseUrl()).andStubReturn(null);",
    "info" : "ExpressionStatement[2021-2074]:ExpressionStatement[2061-2114]"
  }, {
    "left" : "replay(gs, config);",
    "right" : "replay(gs, config);",
    "info" : "ExpressionStatement[2083-2102]:ExpressionStatement[2123-2142]"
  }, {
    "left" : "@After",
    "right" : "@After",
    "info" : "MarkerAnnotation[2118-2124]:MarkerAnnotation[2158-2164]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2129-2135]:Modifier[2169-2175]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2136-2140]:PrimitiveType[2176-2180]"
  }, {
    "left" : "tearDown",
    "right" : "tearDown",
    "info" : "SimpleName[2141-2149]:SimpleName[2181-2189]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2152-2187]:Block[2192-2227]"
  }, {
    "left" : "verify(gs, config);",
    "right" : "verify(gs, config);",
    "info" : "ExpressionStatement[2162-2181]:ExpressionStatement[2202-2221]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[2197-2202]:MarkerAnnotation[2237-2242]"
  }, {
    "left" : "@Ignore",
    "right" : "@Ignore",
    "info" : "MarkerAnnotation[2207-2214]:MarkerAnnotation[2247-2254]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2219-2225]:Modifier[2259-2265]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2226-2230]:PrimitiveType[2266-2270]"
  }, {
    "left" : "testFromNetworkInterfaces",
    "right" : "testFromNetworkInterfaces",
    "info" : "SimpleName[2231-2256]:SimpleName[2271-2296]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2259-2314]:Block[2299-2354]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[2324-2329]:MarkerAnnotation[2364-2369]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2334-2340]:Modifier[2374-2380]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2341-2345]:PrimitiveType[2381-2385]"
  }, {
    "left" : "testDefaultAliases",
    "right" : "testDefaultAliases",
    "info" : "SimpleName[2346-2364]:SimpleName[2386-2404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2367-2572]:Block[2407-2612]"
  }, {
    "left" : "WFSURIHandler.init(strategy);",
    "right" : "WFSURIHandler.init(strategy);",
    "info" : "ExpressionStatement[2386-2415]:ExpressionStatement[2426-2455]"
  }, {
    "left" : "assertThat(WFSURIHandler.ADDRESSES, empty());",
    "right" : "assertThat(WFSURIHandler.ADDRESSES, empty());",
    "info" : "ExpressionStatement[2433-2478]:ExpressionStatement[2473-2518]"
  }, {
    "left" : "assertThat(WFSURIHandler.ADDITIONAL_HOSTNAMES, contains(\"localhost\"));",
    "right" : "assertThat(WFSURIHandler.ADDITIONAL_HOSTNAMES, contains(\"localhost\"));",
    "info" : "ExpressionStatement[2487-2557]:ExpressionStatement[2527-2597]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[2578-2583]:MarkerAnnotation[2618-2623]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2588-2594]:Modifier[2628-2634]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2595-2599]:PrimitiveType[2635-2639]"
  }, {
    "left" : "testOverrideAliasesComma",
    "right" : "testOverrideAliasesComma",
    "info" : "SimpleName[2600-2624]:SimpleName[2640-2664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2627-2911]:Block[2667-2951]"
  }, {
    "left" : "aliases.setValue(\"foo,bar , baz\");",
    "right" : "aliases.setValue(\"foo,bar , baz\");",
    "info" : "ExpressionStatement[2655-2689]:ExpressionStatement[2695-2729]"
  }, {
    "left" : "WFSURIHandler.init(strategy);",
    "right" : "WFSURIHandler.init(strategy);",
    "info" : "ExpressionStatement[2707-2736]:ExpressionStatement[2747-2776]"
  }, {
    "left" : "assertThat(WFSURIHandler.ADDRESSES, empty());",
    "right" : "assertThat(WFSURIHandler.ADDRESSES, empty());",
    "info" : "ExpressionStatement[2754-2799]:ExpressionStatement[2794-2839]"
  }, {
    "left" : "assertThat(WFSURIHandler.ADDITIONAL_HOSTNAMES, containsInAnyOrder(\"foo\", \"bar\", \"baz\"));",
    "right" : "assertThat(WFSURIHandler.ADDITIONAL_HOSTNAMES, containsInAnyOrder(\"foo\", \"bar\", \"baz\"));",
    "info" : "ExpressionStatement[2808-2896]:ExpressionStatement[2848-2936]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[2917-2922]:MarkerAnnotation[2957-2962]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2927-2933]:Modifier[2967-2973]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[2934-2938]:PrimitiveType[2974-2978]"
  }, {
    "left" : "testOverrideAliasesSpace",
    "right" : "testOverrideAliasesSpace",
    "info" : "SimpleName[2939-2963]:SimpleName[2979-3003]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2966-3241]:Block[3006-3281]"
  }, {
    "left" : "aliases.setValue(\"foo bar  baz \");",
    "right" : "aliases.setValue(\"foo bar  baz \");",
    "info" : "ExpressionStatement[2985-3019]:ExpressionStatement[3025-3059]"
  }, {
    "left" : "WFSURIHandler.init(strategy);",
    "right" : "WFSURIHandler.init(strategy);",
    "info" : "ExpressionStatement[3037-3066]:ExpressionStatement[3077-3106]"
  }, {
    "left" : "assertThat(WFSURIHandler.ADDRESSES, empty());",
    "right" : "assertThat(WFSURIHandler.ADDRESSES, empty());",
    "info" : "ExpressionStatement[3084-3129]:ExpressionStatement[3124-3169]"
  }, {
    "left" : "assertThat(WFSURIHandler.ADDITIONAL_HOSTNAMES, containsInAnyOrder(\"foo\", \"bar\", \"baz\"));",
    "right" : "assertThat(WFSURIHandler.ADDITIONAL_HOSTNAMES, containsInAnyOrder(\"foo\", \"bar\", \"baz\"));",
    "info" : "ExpressionStatement[3138-3226]:ExpressionStatement[3178-3266]"
  }, {
    "left" : "@SuppressWarnings(\"deprecation\")",
    "right" : "@SuppressWarnings(\"deprecation\")",
    "info" : "SingleMemberAnnotation[3251-3283]:SingleMemberAnnotation[3291-3323]"
  }, {
    "left" : "protected",
    "right" : "protected",
    "info" : "Modifier[3288-3297]:Modifier[3328-3337]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3298-3302]:PrimitiveType[3338-3342]"
  }, {
    "left" : "setProxyBase",
    "right" : "setProxyBase",
    "info" : "SimpleName[3303-3315]:SimpleName[3343-3355]"
  }, {
    "left" : "String url",
    "right" : "String url",
    "info" : "SingleVariableDeclaration[3316-3326]:SingleVariableDeclaration[3356-3366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3328-3450]:Block[3368-3490]"
  }, {
    "left" : "reset(config);",
    "right" : "reset(config);",
    "info" : "ExpressionStatement[3338-3352]:ExpressionStatement[3378-3392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3353-3429]:Block[3393-3469]"
  }, {
    "left" : "expect(config.getProxyBaseUrl()).andStubReturn(url);",
    "right" : "expect(config.getProxyBaseUrl()).andStubReturn(url);",
    "info" : "ExpressionStatement[3367-3419]:ExpressionStatement[3407-3459]"
  }, {
    "left" : "replay(config);",
    "right" : "replay(config);",
    "info" : "ExpressionStatement[3429-3444]:ExpressionStatement[3469-3484]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[3460-3465]:MarkerAnnotation[3500-3505]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3470-3476]:Modifier[3510-3516]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[3477-3481]:PrimitiveType[3517-3521]"
  }, {
    "left" : "testRecognizeReflexiveSimple",
    "right" : "testRecognizeReflexiveSimple",
    "info" : "SimpleName[3482-3510]:SimpleName[3522-3550]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3513-4211]:Block[3553-4251]"
  }, {
    "left" : "WFSURIHandler.init(strategy);",
    "right" : "WFSURIHandler.init(strategy);",
    "info" : "ExpressionStatement[3532-3561]:ExpressionStatement[3572-3601]"
  }, {
    "left" : "WFSURIHandler handler = new WFSURIHandler(gs);",
    "right" : "WFSURIHandler handler = new WFSURIHandler(gs);",
    "info" : "VariableDeclarationStatement[3579-3625]:VariableDeclarationStatement[3619-3665]"
  }, {
    "left" : "final URI wrongHost = URI.createURI(\"http://example.com/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI wrongHost = URI.createURI(\"http://example.com/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[3643-3769]:VariableDeclarationStatement[3683-3809]"
  }, {
    "left" : "final URI notDFT = URI.createURI(\"http://localhost/geoserver/wfs?service=wfs&version=2.0.0&request=GetCapabilities\");",
    "right" : "final URI notDFT = URI.createURI(\"http://localhost/geoserver/wfs?service=wfs&version=2.0.0&request=GetCapabilities\");",
    "info" : "VariableDeclarationStatement[3778-3895]:VariableDeclarationStatement[3818-3935]"
  }, {
    "left" : "final URI localDFT = URI.createURI(\"http://localhost/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI localDFT = URI.createURI(\"http://localhost/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[3904-4027]:VariableDeclarationStatement[3944-4067]"
  }, {
    "left" : "assertThat(handler.canHandle(wrongHost), is(false));",
    "right" : "assertThat(handler.canHandle(wrongHost), is(false));",
    "info" : "ExpressionStatement[4036-4088]:ExpressionStatement[4076-4128]"
  }, {
    "left" : "assertThat(handler.canHandle(notDFT), is(false));",
    "right" : "assertThat(handler.canHandle(notDFT), is(false));",
    "info" : "ExpressionStatement[4097-4146]:ExpressionStatement[4137-4186]"
  }, {
    "left" : "assertThat(handler.canHandle(localDFT), is(true));",
    "right" : "assertThat(handler.canHandle(localDFT), is(true));",
    "info" : "ExpressionStatement[4155-4205]:ExpressionStatement[4195-4245]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[4217-4222]:MarkerAnnotation[4257-4262]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4227-4233]:Modifier[4267-4273]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[4234-4238]:PrimitiveType[4274-4278]"
  }, {
    "left" : "testRecognizeReflexiveUserAliases",
    "right" : "testRecognizeReflexiveUserAliases",
    "info" : "SimpleName[4239-4272]:SimpleName[4279-4312]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4275-5569]:Block[4315-5609]"
  }, {
    "left" : "aliases.setValue(\"foo bar baz\");",
    "right" : "aliases.setValue(\"foo bar baz\");",
    "info" : "ExpressionStatement[4294-4326]:ExpressionStatement[4334-4366]"
  }, {
    "left" : "WFSURIHandler.init(strategy);",
    "right" : "WFSURIHandler.init(strategy);",
    "info" : "ExpressionStatement[4344-4373]:ExpressionStatement[4384-4413]"
  }, {
    "left" : "WFSURIHandler handler = new WFSURIHandler(gs);",
    "right" : "WFSURIHandler handler = new WFSURIHandler(gs);",
    "info" : "VariableDeclarationStatement[4391-4437]:VariableDeclarationStatement[4431-4477]"
  }, {
    "left" : "final URI wrongHost = URI.createURI(\"http://example.com/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI wrongHost = URI.createURI(\"http://example.com/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[4455-4581]:VariableDeclarationStatement[4495-4621]"
  }, {
    "left" : "final URI notDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=GetCapabilities\");",
    "right" : "final URI notDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=GetCapabilities\");",
    "info" : "VariableDeclarationStatement[4590-4701]:VariableDeclarationStatement[4630-4741]"
  }, {
    "left" : "final URI fooDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI fooDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[4710-4825]:VariableDeclarationStatement[4750-4865]"
  }, {
    "left" : "final URI barDFT = URI.createURI(\"http://bar/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI barDFT = URI.createURI(\"http://bar/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[4834-4949]:VariableDeclarationStatement[4874-4989]"
  }, {
    "left" : "final URI bazDFT = URI.createURI(\"http://baz/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI bazDFT = URI.createURI(\"http://baz/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[4958-5073]:VariableDeclarationStatement[4998-5113]"
  }, {
    "left" : "final URI localhostDFT = URI.createURI(\"http://localhost/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI localhostDFT = URI.createURI(\"http://localhost/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[5082-5209]:VariableDeclarationStatement[5122-5249]"
  }, {
    "left" : "assertThat(handler.canHandle(wrongHost), is(false));",
    "right" : "assertThat(handler.canHandle(wrongHost), is(false));",
    "info" : "ExpressionStatement[5218-5270]:ExpressionStatement[5258-5310]"
  }, {
    "left" : "assertThat(handler.canHandle(notDFT), is(false));",
    "right" : "assertThat(handler.canHandle(notDFT), is(false));",
    "info" : "ExpressionStatement[5279-5328]:ExpressionStatement[5319-5368]"
  }, {
    "left" : "assertThat(handler.canHandle(fooDFT), is(true));",
    "right" : "assertThat(handler.canHandle(fooDFT), is(true));",
    "info" : "ExpressionStatement[5337-5385]:ExpressionStatement[5377-5425]"
  }, {
    "left" : "assertThat(handler.canHandle(barDFT), is(true));",
    "right" : "assertThat(handler.canHandle(barDFT), is(true));",
    "info" : "ExpressionStatement[5394-5442]:ExpressionStatement[5434-5482]"
  }, {
    "left" : "assertThat(handler.canHandle(bazDFT), is(true));",
    "right" : "assertThat(handler.canHandle(bazDFT), is(true));",
    "info" : "ExpressionStatement[5451-5499]:ExpressionStatement[5491-5539]"
  }, {
    "left" : "assertThat(handler.canHandle(localhostDFT), is(false));",
    "right" : "assertThat(handler.canHandle(localhostDFT), is(false));",
    "info" : "ExpressionStatement[5508-5563]:ExpressionStatement[5548-5603]"
  }, {
    "left" : "@Test",
    "right" : "@Test",
    "info" : "MarkerAnnotation[5575-5580]:MarkerAnnotation[5615-5620]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5585-5591]:Modifier[5625-5631]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[5592-5596]:PrimitiveType[5632-5636]"
  }, {
    "left" : "testRecognizeReflexiveProxy",
    "right" : "testRecognizeReflexiveProxy",
    "info" : "SimpleName[5597-5624]:SimpleName[5637-5664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5627-6369]:Block[5667-6409]"
  }, {
    "left" : "this.setProxyBase(\"http://foo/geoserver\");",
    "right" : "this.setProxyBase(\"http://foo/geoserver\");",
    "info" : "ExpressionStatement[5646-5688]:ExpressionStatement[5686-5728]"
  }, {
    "left" : "WFSURIHandler.init(strategy);",
    "right" : "WFSURIHandler.init(strategy);",
    "info" : "ExpressionStatement[5706-5735]:ExpressionStatement[5746-5775]"
  }, {
    "left" : "WFSURIHandler handler = new WFSURIHandler(gs);",
    "right" : "WFSURIHandler handler = new WFSURIHandler(gs);",
    "info" : "VariableDeclarationStatement[5753-5799]:VariableDeclarationStatement[5793-5839]"
  }, {
    "left" : "final URI wrongHost = URI.createURI(\"http://example.com/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI wrongHost = URI.createURI(\"http://example.com/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[5817-5943]:VariableDeclarationStatement[5857-5983]"
  }, {
    "left" : "final URI notDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=GetCapabilities\");",
    "right" : "final URI notDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=GetCapabilities\");",
    "info" : "VariableDeclarationStatement[5952-6063]:VariableDeclarationStatement[5992-6103]"
  }, {
    "left" : "final URI fooDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "right" : "final URI fooDFT = URI.createURI(\"http://foo/geoserver/wfs?service=wfs&version=2.0.0&request=DescribeFeatureType\");",
    "info" : "VariableDeclarationStatement[6072-6187]:VariableDeclarationStatement[6112-6227]"
  }, {
    "left" : "assertThat(handler.canHandle(wrongHost), is(false));",
    "right" : "assertThat(handler.canHandle(wrongHost), is(false));",
    "info" : "ExpressionStatement[6196-6248]:ExpressionStatement[6236-6288]"
  }, {
    "left" : "assertThat(handler.canHandle(notDFT), is(false));",
    "right" : "assertThat(handler.canHandle(notDFT), is(false));",
    "info" : "ExpressionStatement[6257-6306]:ExpressionStatement[6297-6346]"
  }, {
    "left" : "assertThat(handler.canHandle(fooDFT), is(true));",
    "right" : "assertThat(handler.canHandle(fooDFT), is(true));",
    "info" : "ExpressionStatement[6315-6363]:ExpressionStatement[6355-6403]"
  } ]
}