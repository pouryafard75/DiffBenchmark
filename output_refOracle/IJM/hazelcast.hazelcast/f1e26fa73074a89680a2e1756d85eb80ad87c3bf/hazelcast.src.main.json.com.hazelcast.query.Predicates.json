{
  "matchedElements" : [
 {
    "left" : "",
    "right" : "",
    "info" : "TypeDeclaration[1449-29088]:TypeDeclaration[1371-3560]"
  }, {
    "left" : "private )",
    "right" : "private )",
    "info" : "MethodDeclaration[1624-1652]:MethodDeclaration[1546-1574]"
  }, {
    "left" : "public static Predicate instanceOf(final Class klass) {\n        return new InstanceOfPredicate(klass);\n    }",
    "right" : "public static Predicate instanceOf(final Class klass) {\n        return new InstanceOfPredicate(klass);\n    }",
    "info" : "MethodDeclaration[1658-1766]:MethodDeclaration[1580-1688]"
  }, {
    "left" : "public static Predicate and(Predicate... predicates) {\n        return new AndPredicate(predicates);\n    }",
    "right" : "public static Predicate and(Predicate... predicates) {\n        return new AndPredicate(predicates);\n    }",
    "info" : "MethodDeclaration[2087-2192]:MethodDeclaration[1694-1799]"
  }, {
    "left" : "public static Predicate not(Predicate predicate) {\n        return new NotPredicate(predicate);\n    }",
    "right" : "public static Predicate not(Predicate predicate) {\n        return new NotPredicate(predicate);\n    }",
    "info" : "MethodDeclaration[2198-2298]:MethodDeclaration[1805-1905]"
  }, {
    "left" : "/**\n     * Or predicate\n     *\n     * @param predicates\n     * @return\n     */\n    public static Predicate or(Predicate... predicates) {\n        return new OrPredicate(predicates);\n    }",
    "right" : "/**\n     * Or predicate\n     *\n     * @param predicates\n     * @return\n     */\n    public static Predicate or(Predicate... predicates) {\n        return new OrPredicate(predicates);\n    }",
    "info" : "MethodDeclaration[2304-2490]:MethodDeclaration[1911-2097]"
  }, {
    "left" : "public static Predicate notEqual(String attribute, Comparable y) {\n        return new NotEqualPredicate(attribute, y);\n    }",
    "right" : "public static Predicate notEqual(String attribute, Comparable y) {\n        return new NotEqualPredicate(attribute, y);\n    }",
    "info" : "MethodDeclaration[2496-2620]:MethodDeclaration[2103-2227]"
  }, {
    "left" : "public static Predicate equal(String attribute, Comparable y) {\n        return new EqualPredicate(attribute, y);\n    }",
    "right" : "public static Predicate equal(String attribute, Comparable y) {\n        return new EqualPredicate(attribute, y);\n    }",
    "info" : "MethodDeclaration[2626-2744]:MethodDeclaration[2233-2351]"
  }, {
    "left" : "public static Predicate like(String attribute, String pattern) {\n        return new LikePredicate(attribute, pattern);\n    }",
    "right" : "public static Predicate like(String attribute, String pattern) {\n        return new LikePredicate(attribute, pattern);\n    }",
    "info" : "MethodDeclaration[2750-2874]:MethodDeclaration[2357-2481]"
  }, {
    "left" : "public static Predicate ilike(String attribute, String pattern) {\n        return new ILikePredicate(attribute, pattern);\n    }",
    "right" : "public static Predicate ilike(String attribute, String pattern) {\n        return new ILikePredicate(attribute, pattern);\n    }",
    "info" : "MethodDeclaration[2880-3006]:MethodDeclaration[2487-2613]"
  }, {
    "left" : "public static Predicate regex(String attribute, String pattern) {\n        return new RegexPredicate(attribute, pattern);\n    }",
    "right" : "public static Predicate regex(String attribute, String pattern) {\n        return new RegexPredicate(attribute, pattern);\n    }",
    "info" : "MethodDeclaration[3012-3138]:MethodDeclaration[2619-2745]"
  }, {
    "left" : "public static Predicate greaterThan(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, false, false);\n    }",
    "right" : "public static Predicate greaterThan(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, false, false);\n    }",
    "info" : "MethodDeclaration[3144-3272]:MethodDeclaration[2751-2879]"
  }, {
    "left" : "public static Predicate greaterEqual(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, true, false);\n    }",
    "right" : "public static Predicate greaterEqual(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, true, false);\n    }",
    "info" : "MethodDeclaration[3278-3406]:MethodDeclaration[2885-3013]"
  }, {
    "left" : "public static Predicate lessThan(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, false, true);\n    }",
    "right" : "public static Predicate lessThan(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, false, true);\n    }",
    "info" : "MethodDeclaration[3412-3536]:MethodDeclaration[3019-3143]"
  }, {
    "left" : "public static Predicate lessEqual(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, true, true);\n    }",
    "right" : "public static Predicate lessEqual(String x, Comparable y) {\n        return new GreaterLessPredicate(x, y, true, true);\n    }",
    "info" : "MethodDeclaration[3542-3666]:MethodDeclaration[3149-3273]"
  }, {
    "left" : "public static Predicate between(String attribute, Comparable from, Comparable to) {\n        return new BetweenPredicate(attribute, from, to);\n    }",
    "right" : "public static Predicate between(String attribute, Comparable from, Comparable to) {\n        return new BetweenPredicate(attribute, from, to);\n    }",
    "info" : "MethodDeclaration[3672-3819]:MethodDeclaration[3279-3426]"
  }, {
    "left" : "public attribute String, values Comparable...) : Predicate",
    "right" : "public attribute String, values Comparable...) : Predicate",
    "info" : "MethodDeclaration[3825-3950]:MethodDeclaration[3432-3557]"
  } ],
  "mappings" : [
 {
    "left" : "import com.hazelcast.nio.ObjectDataInput;",
    "right" : "import com.hazelcast.query.impl.predicates.AndPredicate;",
    "info" : "ImportDeclaration[657-698]:ImportDeclaration[657-713]"
  }, {
    "left" : "import com.hazelcast.nio.ObjectDataOutput;",
    "right" : "import com.hazelcast.query.impl.predicates.BetweenPredicate;",
    "info" : "ImportDeclaration[699-741]:ImportDeclaration[714-774]"
  }, {
    "left" : "import com.hazelcast.nio.serialization.DataSerializable;",
    "right" : "import com.hazelcast.query.impl.predicates.EqualPredicate;",
    "info" : "ImportDeclaration[742-798]:ImportDeclaration[775-833]"
  }, {
    "left" : "import com.hazelcast.nio.serialization.HazelcastSerializationException;",
    "right" : "import com.hazelcast.query.impl.predicates.GreaterLessPredicate;",
    "info" : "ImportDeclaration[799-870]:ImportDeclaration[834-898]"
  }, {
    "left" : "import com.hazelcast.query.impl.AndResultSet;",
    "right" : "import com.hazelcast.query.impl.predicates.ILikePredicate;",
    "info" : "ImportDeclaration[871-916]:ImportDeclaration[899-957]"
  }, {
    "left" : "import com.hazelcast.query.impl.AttributeType;",
    "right" : "import com.hazelcast.query.impl.predicates.InPredicate;",
    "info" : "ImportDeclaration[917-963]:ImportDeclaration[958-1013]"
  }, {
    "left" : "import com.hazelcast.query.impl.ComparisonType;",
    "right" : "import com.hazelcast.query.impl.predicates.InstanceOfPredicate;",
    "info" : "ImportDeclaration[964-1011]:ImportDeclaration[1014-1077]"
  }, {
    "left" : "import com.hazelcast.query.impl.Index;",
    "right" : "import com.hazelcast.query.impl.predicates.LikePredicate;",
    "info" : "ImportDeclaration[1012-1050]:ImportDeclaration[1078-1135]"
  }, {
    "left" : "import com.hazelcast.query.impl.IndexImpl;",
    "right" : "import com.hazelcast.query.impl.predicates.NotEqualPredicate;",
    "info" : "ImportDeclaration[1051-1093]:ImportDeclaration[1136-1197]"
  }, {
    "left" : "import com.hazelcast.query.impl.OrResultSet;",
    "right" : "import com.hazelcast.query.impl.predicates.NotPredicate;",
    "info" : "ImportDeclaration[1094-1138]:ImportDeclaration[1198-1254]"
  }, {
    "left" : "import com.hazelcast.query.impl.QueryContext;",
    "right" : "import com.hazelcast.query.impl.predicates.OrPredicate;",
    "info" : "ImportDeclaration[1139-1184]:ImportDeclaration[1255-1310]"
  }, {
    "left" : "import com.hazelcast.query.impl.QueryableEntry;",
    "right" : "import com.hazelcast.query.impl.predicates.RegexPredicate;",
    "info" : "ImportDeclaration[1185-1232]:ImportDeclaration[1311-1369]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1535-1541]:Modifier[1457-1463]"
  }, {
    "left" : "final",
    "right" : "final",
    "info" : "Modifier[1542-1547]:Modifier[1464-1469]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[1624-1631]:Modifier[1546-1553]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1645-1652]:Block[1567-1574]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[1658-1664]:Modifier[1580-1586]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[1665-1671]:Modifier[1587-1593]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[1672-1681]:SimpleType[1594-1603]"
  }, {
    "left" : "final Class klass",
    "right" : "final Class klass",
    "info" : "SingleVariableDeclaration[1693-1710]:SingleVariableDeclaration[1615-1632]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[1712-1766]:Block[1634-1688]"
  }, {
    "left" : "return new InstanceOfPredicate(klass);",
    "right" : "return new InstanceOfPredicate(klass);",
    "info" : "ReturnStatement[1722-1760]:ReturnStatement[1644-1682]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2087-2093]:Modifier[1694-1700]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2094-2100]:Modifier[1701-1707]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[2101-2110]:SimpleType[1708-1717]"
  }, {
    "left" : "Predicate... predicates",
    "right" : "Predicate... predicates",
    "info" : "SingleVariableDeclaration[2115-2138]:SingleVariableDeclaration[1722-1745]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2140-2192]:Block[1747-1799]"
  }, {
    "left" : "return new AndPredicate(predicates);",
    "right" : "return new AndPredicate(predicates);",
    "info" : "ReturnStatement[2150-2186]:ReturnStatement[1757-1793]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2198-2204]:Modifier[1805-1811]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2205-2211]:Modifier[1812-1818]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[2212-2221]:SimpleType[1819-1828]"
  }, {
    "left" : "Predicate predicate",
    "right" : "Predicate predicate",
    "info" : "SingleVariableDeclaration[2226-2245]:SingleVariableDeclaration[1833-1852]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2247-2298]:Block[1854-1905]"
  }, {
    "left" : "return new NotPredicate(predicate);",
    "right" : "return new NotPredicate(predicate);",
    "info" : "ReturnStatement[2257-2292]:ReturnStatement[1864-1899]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2387-2393]:Modifier[1994-2000]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2394-2400]:Modifier[2001-2007]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[2401-2410]:SimpleType[2008-2017]"
  }, {
    "left" : "Predicate... predicates",
    "right" : "Predicate... predicates",
    "info" : "SingleVariableDeclaration[2414-2437]:SingleVariableDeclaration[2021-2044]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2439-2490]:Block[2046-2097]"
  }, {
    "left" : "return new OrPredicate(predicates);",
    "right" : "return new OrPredicate(predicates);",
    "info" : "ReturnStatement[2449-2484]:ReturnStatement[2056-2091]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2496-2502]:Modifier[2103-2109]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2503-2509]:Modifier[2110-2116]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[2510-2519]:SimpleType[2117-2126]"
  }, {
    "left" : "String attribute",
    "right" : "String attribute",
    "info" : "SingleVariableDeclaration[2529-2545]:SingleVariableDeclaration[2136-2152]"
  }, {
    "left" : "Comparable y",
    "right" : "Comparable y",
    "info" : "SingleVariableDeclaration[2547-2559]:SingleVariableDeclaration[2154-2166]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2561-2620]:Block[2168-2227]"
  }, {
    "left" : "return new NotEqualPredicate(attribute, y);",
    "right" : "return new NotEqualPredicate(attribute, y);",
    "info" : "ReturnStatement[2571-2614]:ReturnStatement[2178-2221]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2626-2632]:Modifier[2233-2239]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2633-2639]:Modifier[2240-2246]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[2640-2649]:SimpleType[2247-2256]"
  }, {
    "left" : "String attribute",
    "right" : "String attribute",
    "info" : "SingleVariableDeclaration[2656-2672]:SingleVariableDeclaration[2263-2279]"
  }, {
    "left" : "Comparable y",
    "right" : "Comparable y",
    "info" : "SingleVariableDeclaration[2674-2686]:SingleVariableDeclaration[2281-2293]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2688-2744]:Block[2295-2351]"
  }, {
    "left" : "return new EqualPredicate(attribute, y);",
    "right" : "return new EqualPredicate(attribute, y);",
    "info" : "ReturnStatement[2698-2738]:ReturnStatement[2305-2345]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2750-2756]:Modifier[2357-2363]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2757-2763]:Modifier[2364-2370]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[2764-2773]:SimpleType[2371-2380]"
  }, {
    "left" : "String attribute",
    "right" : "String attribute",
    "info" : "SingleVariableDeclaration[2779-2795]:SingleVariableDeclaration[2386-2402]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[2797-2811]:SingleVariableDeclaration[2404-2418]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2813-2874]:Block[2420-2481]"
  }, {
    "left" : "return new LikePredicate(attribute, pattern);",
    "right" : "return new LikePredicate(attribute, pattern);",
    "info" : "ReturnStatement[2823-2868]:ReturnStatement[2430-2475]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[2880-2886]:Modifier[2487-2493]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[2887-2893]:Modifier[2494-2500]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[2894-2903]:SimpleType[2501-2510]"
  }, {
    "left" : "String attribute",
    "right" : "String attribute",
    "info" : "SingleVariableDeclaration[2910-2926]:SingleVariableDeclaration[2517-2533]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[2928-2942]:SingleVariableDeclaration[2535-2549]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[2944-3006]:Block[2551-2613]"
  }, {
    "left" : "return new ILikePredicate(attribute, pattern);",
    "right" : "return new ILikePredicate(attribute, pattern);",
    "info" : "ReturnStatement[2954-3000]:ReturnStatement[2561-2607]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3012-3018]:Modifier[2619-2625]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3019-3025]:Modifier[2626-2632]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[3026-3035]:SimpleType[2633-2642]"
  }, {
    "left" : "String attribute",
    "right" : "String attribute",
    "info" : "SingleVariableDeclaration[3042-3058]:SingleVariableDeclaration[2649-2665]"
  }, {
    "left" : "String pattern",
    "right" : "String pattern",
    "info" : "SingleVariableDeclaration[3060-3074]:SingleVariableDeclaration[2667-2681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3076-3138]:Block[2683-2745]"
  }, {
    "left" : "return new RegexPredicate(attribute, pattern);",
    "right" : "return new RegexPredicate(attribute, pattern);",
    "info" : "ReturnStatement[3086-3132]:ReturnStatement[2693-2739]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3144-3150]:Modifier[2751-2757]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3151-3157]:Modifier[2758-2764]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[3158-3167]:SimpleType[2765-2774]"
  }, {
    "left" : "String x",
    "right" : "String x",
    "info" : "SingleVariableDeclaration[3180-3188]:SingleVariableDeclaration[2787-2795]"
  }, {
    "left" : "Comparable y",
    "right" : "Comparable y",
    "info" : "SingleVariableDeclaration[3190-3202]:SingleVariableDeclaration[2797-2809]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3204-3272]:Block[2811-2879]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, false, false);",
    "right" : "return new GreaterLessPredicate(x, y, false, false);",
    "info" : "ReturnStatement[3214-3266]:ReturnStatement[2821-2873]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3278-3284]:Modifier[2885-2891]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3285-3291]:Modifier[2892-2898]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[3292-3301]:SimpleType[2899-2908]"
  }, {
    "left" : "String x",
    "right" : "String x",
    "info" : "SingleVariableDeclaration[3315-3323]:SingleVariableDeclaration[2922-2930]"
  }, {
    "left" : "Comparable y",
    "right" : "Comparable y",
    "info" : "SingleVariableDeclaration[3325-3337]:SingleVariableDeclaration[2932-2944]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3339-3406]:Block[2946-3013]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, true, false);",
    "right" : "return new GreaterLessPredicate(x, y, true, false);",
    "info" : "ReturnStatement[3349-3400]:ReturnStatement[2956-3007]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3412-3418]:Modifier[3019-3025]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3419-3425]:Modifier[3026-3032]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[3426-3435]:SimpleType[3033-3042]"
  }, {
    "left" : "String x",
    "right" : "String x",
    "info" : "SingleVariableDeclaration[3445-3453]:SingleVariableDeclaration[3052-3060]"
  }, {
    "left" : "Comparable y",
    "right" : "Comparable y",
    "info" : "SingleVariableDeclaration[3455-3467]:SingleVariableDeclaration[3062-3074]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3469-3536]:Block[3076-3143]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, false, true);",
    "right" : "return new GreaterLessPredicate(x, y, false, true);",
    "info" : "ReturnStatement[3479-3530]:ReturnStatement[3086-3137]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3542-3548]:Modifier[3149-3155]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3549-3555]:Modifier[3156-3162]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[3556-3565]:SimpleType[3163-3172]"
  }, {
    "left" : "String x",
    "right" : "String x",
    "info" : "SingleVariableDeclaration[3576-3584]:SingleVariableDeclaration[3183-3191]"
  }, {
    "left" : "Comparable y",
    "right" : "Comparable y",
    "info" : "SingleVariableDeclaration[3586-3598]:SingleVariableDeclaration[3193-3205]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3600-3666]:Block[3207-3273]"
  }, {
    "left" : "return new GreaterLessPredicate(x, y, true, true);",
    "right" : "return new GreaterLessPredicate(x, y, true, true);",
    "info" : "ReturnStatement[3610-3660]:ReturnStatement[3217-3267]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3672-3678]:Modifier[3279-3285]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3679-3685]:Modifier[3286-3292]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[3686-3695]:SimpleType[3293-3302]"
  }, {
    "left" : "String attribute",
    "right" : "String attribute",
    "info" : "SingleVariableDeclaration[3704-3720]:SingleVariableDeclaration[3311-3327]"
  }, {
    "left" : "Comparable from",
    "right" : "Comparable from",
    "info" : "SingleVariableDeclaration[3722-3737]:SingleVariableDeclaration[3329-3344]"
  }, {
    "left" : "Comparable to",
    "right" : "Comparable to",
    "info" : "SingleVariableDeclaration[3739-3752]:SingleVariableDeclaration[3346-3359]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3754-3819]:Block[3361-3426]"
  }, {
    "left" : "return new BetweenPredicate(attribute, from, to);",
    "right" : "return new BetweenPredicate(attribute, from, to);",
    "info" : "ReturnStatement[3764-3813]:ReturnStatement[3371-3420]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[3825-3831]:Modifier[3432-3438]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[3832-3838]:Modifier[3439-3445]"
  }, {
    "left" : "Predicate",
    "right" : "Predicate",
    "info" : "SimpleType[3839-3848]:SimpleType[3446-3455]"
  }, {
    "left" : "String attribute",
    "right" : "String attribute",
    "info" : "SingleVariableDeclaration[3852-3868]:SingleVariableDeclaration[3459-3475]"
  }, {
    "left" : "Comparable... values",
    "right" : "Comparable... values",
    "info" : "SingleVariableDeclaration[3870-3890]:SingleVariableDeclaration[3477-3497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[3892-3950]:Block[3499-3557]"
  }, {
    "left" : "return new InPredicate(attribute, values);",
    "right" : "return new InPredicate(attribute, values);",
    "info" : "ReturnStatement[3902-3944]:ReturnStatement[3509-3551]"
  } ]
}