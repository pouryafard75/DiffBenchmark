{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "TestOptimizers",
      "right" : "TestOptimizers",
      "info" : "TypeDeclaration[1678-12439]:TypeDeclaration[1703-15128]"
    }, {
      "left" : "public void testOptimizersBasicMLPBackprop(",
      "right" : "public void testOptimizersBasicMLPBackprop(",
      "info" : "MethodDeclaration[1711-2099]:MethodDeclaration[1736-2124]"
    }, {
      "left" : "private static MultiLayerConfiguration getMLPConfigIris( OptimizationAlgorithm oa",
      "right" : "private static MultiLayerConfiguration getMLPConfigIris( OptimizationAlgorithm oa",
      "info" : "MethodDeclaration[2103-3128]:MethodDeclaration[2128-3153]"
    }, {
      "left" : "public void overrideLayer(int i, NeuralNetConfiguration.Builder builder)",
      "right" : "public void overrideLayer(int i, NeuralNetConfiguration.Builder builder)",
      "info" : "MethodDeclaration[2826-3098]:MethodDeclaration[2851-3123]"
    }, {
      "left" : "public void testSphereFnOptStochGradDescent(",
      "right" : "public void testSphereFnOptStochGradDescent(",
      "info" : "MethodDeclaration[3132-3434]:MethodDeclaration[3157-3459]"
    }, {
      "left" : "public void testSphereFnOptLineGradDescent(",
      "right" : "public void testSphereFnOptLineGradDescent(",
      "info" : "MethodDeclaration[3438-3870]:MethodDeclaration[3463-3997]"
    }, {
      "left" : "public void testSphereFnOptCG(",
      "right" : "public void testSphereFnOptCG(",
      "info" : "MethodDeclaration[3874-4286]:MethodDeclaration[4001-4515]"
    }, {
      "left" : "public void testSphereFnOptLBFGS(",
      "right" : "public void testSphereFnOptLBFGS(",
      "info" : "MethodDeclaration[4290-4666]:MethodDeclaration[4519-4997]"
    }, {
      "left" : "private static final boolean PRINT_OPT_RESULTS = true;",
      "right" : "private static final boolean PRINT_OPT_RESULTS = true;",
      "info" : "FieldDeclaration[4688-4742]:FieldDeclaration[5019-5073]"
    }, {
      "left" : "public void testSphereFnOptHelper( OptimizationAlgorithm oa, int numLineSearchIter, int nDimensions",
      "right" : "public void testSphereFnOptHelper( OptimizationAlgorithm oa, int numLineSearchIter, int nDimensions",
      "info" : "MethodDeclaration[4744-6965]:MethodDeclaration[5075-6772]"
    }, {
      "left" : "SphereFunctionModel",
      "right" : "SphereFunctionModel",
      "info" : "TypeDeclaration[6975-12437]:TypeDeclaration[9664-15126]"
    }, {
      "left" : "private static final long serialVersionUID = 239156313657395826L;",
      "right" : "private static final long serialVersionUID = 239156313657395826L;",
      "info" : "FieldDeclaration[7256-7321]:FieldDeclaration[9945-10010]"
    }, {
      "left" : "private INDArray parameters;",
      "right" : "private INDArray parameters;",
      "info" : "FieldDeclaration[7324-7352]:FieldDeclaration[10013-10041]"
    }, {
      "left" : "private final NeuralNetConfiguration conf;",
      "right" : "private final NeuralNetConfiguration conf;",
      "info" : "FieldDeclaration[7355-7397]:FieldDeclaration[10044-10086]"
    }, {
      "left" : "private SphereFunctionModel( INDArray parameterInit, NeuralNetConfiguration conf",
      "right" : "private SphereFunctionModel( INDArray parameterInit, NeuralNetConfiguration conf",
      "info" : "MethodDeclaration[7403-7670]:MethodDeclaration[10092-10359]"
    }, {
      "left" : "private SphereFunctionModel( int nParams, org.nd4j.linalg.api.rng.distribution.Distribution distribution,\n\t\t\t\tNeuralNetConfiguration conf",
      "right" : "private SphereFunctionModel( int nParams, org.nd4j.linalg.api.rng.distribution.Distribution distribution,\n\t\t\t\tNeuralNetConfiguration conf",
      "info" : "MethodDeclaration[7676-7905]:MethodDeclaration[10365-10594]"
    }, {
      "left" : "public void fit()",
      "right" : "public void fit()",
      "info" : "MethodDeclaration[7909-7985]:MethodDeclaration[10598-10674]"
    }, {
      "left" : "public void update(INDArray gradient, String paramType)",
      "right" : "public void update(INDArray gradient, String paramType)",
      "info" : "MethodDeclaration[7989-8165]:MethodDeclaration[10678-10854]"
    }, {
      "left" : "public double score()",
      "right" : "public double score()",
      "info" : "MethodDeclaration[8169-8283]:MethodDeclaration[10858-10972]"
    }, {
      "left" : "public void setScore()",
      "right" : "public void setScore()",
      "info" : "MethodDeclaration[8287-8325]:MethodDeclaration[10976-11014]"
    }, {
      "left" : "public void accumulateScore(double accum)",
      "right" : "public void accumulateScore(double accum)",
      "info" : "MethodDeclaration[8329-8429]:MethodDeclaration[11018-11118]"
    }, {
      "left" : "public INDArray transform(INDArray data)",
      "right" : "public INDArray transform(INDArray data)",
      "info" : "MethodDeclaration[8433-8532]:MethodDeclaration[11122-11221]"
    }, {
      "left" : "public INDArray params()",
      "right" : "public INDArray params()",
      "info" : "MethodDeclaration[8536-8594]:MethodDeclaration[11225-11283]"
    }, {
      "left" : "public int numParams()",
      "right" : "public int numParams()",
      "info" : "MethodDeclaration[8598-8664]:MethodDeclaration[11287-11353]"
    }, {
      "left" : "public void setParams(INDArray params)",
      "right" : "public void setParams(INDArray params)",
      "info" : "MethodDeclaration[8668-8748]:MethodDeclaration[11357-11437]"
    }, {
      "left" : "public void fit(INDArray data)",
      "right" : "public void fit(INDArray data)",
      "info" : "MethodDeclaration[8752-8841]:MethodDeclaration[11441-11530]"
    }, {
      "left" : "public void iterate(INDArray input)",
      "right" : "public void iterate(INDArray input)",
      "info" : "MethodDeclaration[8845-8939]:MethodDeclaration[11534-11628]"
    }, {
      "left" : "public Gradient gradient()",
      "right" : "public Gradient gradient()",
      "info" : "MethodDeclaration[8943-9160]:MethodDeclaration[11632-11849]"
    }, {
      "left" : "public Pair<Gradient, Double> gradientAndScore()",
      "right" : "public Pair<Gradient, Double> gradientAndScore()",
      "info" : "MethodDeclaration[9164-9287]:MethodDeclaration[11853-11976]"
    }, {
      "left" : "public int batchSize()",
      "right" : "public int batchSize()",
      "info" : "MethodDeclaration[9291-9339]:MethodDeclaration[11980-12028]"
    }, {
      "left" : "public NeuralNetConfiguration conf()",
      "right" : "public NeuralNetConfiguration conf()",
      "info" : "MethodDeclaration[9343-9408]:MethodDeclaration[12032-12097]"
    }, {
      "left" : "public void setConf(NeuralNetConfiguration conf)",
      "right" : "public void setConf(NeuralNetConfiguration conf)",
      "info" : "MethodDeclaration[9412-9519]:MethodDeclaration[12101-12208]"
    }, {
      "left" : "public INDArray input()",
      "right" : "public INDArray input()",
      "info" : "MethodDeclaration[9523-9724]:MethodDeclaration[12212-12413]"
    }, {
      "left" : "public void validateInput()",
      "right" : "public void validateInput()",
      "info" : "MethodDeclaration[9728-9771]:MethodDeclaration[12417-12460]"
    }, {
      "left" : "public ConvexOptimizer getOptimizer()",
      "right" : "public ConvexOptimizer getOptimizer()",
      "info" : "MethodDeclaration[9775-9871]:MethodDeclaration[12464-12560]"
    }, {
      "left" : "public INDArray getParam(String param)",
      "right" : "public INDArray getParam(String param)",
      "info" : "MethodDeclaration[9875-9948]:MethodDeclaration[12564-12637]"
    }, {
      "left" : "public void initParams()",
      "right" : "public void initParams()",
      "info" : "MethodDeclaration[9952-10035]:MethodDeclaration[12641-12724]"
    }, {
      "left" : "public Map<String, INDArray> paramTable()",
      "right" : "public Map<String, INDArray> paramTable()",
      "info" : "MethodDeclaration[10039-10139]:MethodDeclaration[12728-12828]"
    }, {
      "left" : "public void setParamTable(Map<String, INDArray> paramTable)",
      "right" : "public void setParamTable(Map<String, INDArray> paramTable)",
      "info" : "MethodDeclaration[10143-10261]:MethodDeclaration[12832-12950]"
    }, {
      "left" : "public void setParam(String key, INDArray val)",
      "right" : "public void setParam(String key, INDArray val)",
      "info" : "MethodDeclaration[10265-10370]:MethodDeclaration[12954-13059]"
    }, {
      "left" : "public void clear()",
      "right" : "public void clear()",
      "info" : "MethodDeclaration[10374-10452]:MethodDeclaration[13063-13141]"
    }, {
      "left" : "public Type type()",
      "right" : "public Type type()",
      "info" : "MethodDeclaration[10456-10533]:MethodDeclaration[13145-13222]"
    }, {
      "left" : "public Gradient error(INDArray input)",
      "right" : "public Gradient error(INDArray input)",
      "info" : "MethodDeclaration[10537-10633]:MethodDeclaration[13226-13322]"
    }, {
      "left" : "public INDArray derivativeActivation(INDArray input)",
      "right" : "public INDArray derivativeActivation(INDArray input)",
      "info" : "MethodDeclaration[10637-10748]:MethodDeclaration[13326-13437]"
    }, {
      "left" : "public Gradient calcGradient(Gradient layerError, INDArray indArray)",
      "right" : "public Gradient calcGradient(Gradient layerError, INDArray indArray)",
      "info" : "MethodDeclaration[10752-10879]:MethodDeclaration[13441-13568]"
    }, {
      "left" : "public Gradient errorSignal(Gradient error, INDArray input",
      "right" : "public Gradient errorSignal(Gradient error, INDArray input",
      "info" : "MethodDeclaration[10883-11000]:MethodDeclaration[13572-13689]"
    }, {
      "left" : "public Gradient backwardGradient(INDArray z, Layer nextLayer,\n\t\t\t\tGradient nextGradient, INDArray activation)",
      "right" : "public Gradient backwardGradient(INDArray z, Layer nextLayer,\n\t\t\t\tGradient nextGradient, INDArray activation)",
      "info" : "MethodDeclaration[11004-11172]:MethodDeclaration[13693-13861]"
    }, {
      "left" : "public void merge(Layer layer, int batchSize)",
      "right" : "public void merge(Layer layer, int batchSize)",
      "info" : "MethodDeclaration[11176-11280]:MethodDeclaration[13865-13969]"
    }, {
      "left" : "public INDArray activationMean()",
      "right" : "public INDArray activationMean()",
      "info" : "MethodDeclaration[11284-11375]:MethodDeclaration[13973-14064]"
    }, {
      "left" : "public INDArray preOutput(INDArray x)",
      "right" : "public INDArray preOutput(INDArray x)",
      "info" : "MethodDeclaration[11379-11475]:MethodDeclaration[14068-14164]"
    }, {
      "left" : "public INDArray activate()",
      "right" : "public INDArray activate()",
      "info" : "MethodDeclaration[11479-11564]:MethodDeclaration[14168-14253]"
    }, {
      "left" : "public INDArray activate(INDArray input)",
      "right" : "public INDArray activate(INDArray input)",
      "info" : "MethodDeclaration[11568-11667]:MethodDeclaration[14257-14356]"
    }, {
      "left" : "public Layer transpose()",
      "right" : "public Layer transpose()",
      "info" : "MethodDeclaration[11671-11754]:MethodDeclaration[14360-14443]"
    }, {
      "left" : "public Layer clone()",
      "right" : "public Layer clone()",
      "info" : "MethodDeclaration[11758-11837]:MethodDeclaration[14447-14526]"
    }, {
      "left" : "public Pair<Gradient, Gradient> backWard(Gradient errors,\n\t\t\t\tGradient deltas, INDArray activation, String previousActivation)",
      "right" : "public Pair<Gradient, Gradient> backWard(Gradient errors,\n\t\t\t\tGradient deltas, INDArray activation, String previousActivation)",
      "info" : "MethodDeclaration[11841-12026]:MethodDeclaration[14530-14715]"
    }, {
      "left" : "public Collection<IterationListener> getIterationListeners()",
      "right" : "public Collection<IterationListener> getIterationListeners()",
      "info" : "MethodDeclaration[12030-12119]:MethodDeclaration[14719-14808]"
    }, {
      "left" : "public void setIterationListeners(Collection<IterationListener> listeners)",
      "right" : "public void setIterationListeners(Collection<IterationListener> listeners)",
      "info" : "MethodDeclaration[12123-12256]:MethodDeclaration[14812-14945]"
    }, {
      "left" : "public void setIndex(int index)",
      "right" : "public void setIndex(int index)",
      "info" : "MethodDeclaration[12260-12350]:MethodDeclaration[14949-15039]"
    }, {
      "left" : "public int getIndex()",
      "right" : "public int getIndex()",
      "info" : "MethodDeclaration[12354-12434]:MethodDeclaration[15043-15123]"
    } ],
    "mappings" : [
 {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[1711-1716]:MarkerAnnotation[1736-1741]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1718-1724]:Modifier[1743-1749]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[1725-1729]:PrimitiveType[1750-1754]"
    }, {
      "left" : "testOptimizersBasicMLPBackprop",
      "right" : "testOptimizersBasicMLPBackprop",
      "info" : "SimpleName[1730-1760]:SimpleName[1755-1785]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1762-2099]:Block[1787-2124]"
    }, {
      "left" : "DataSetIterator iter = new IrisDataSetIterator(5,50);",
      "right" : "DataSetIterator iter = new IrisDataSetIterator(5,50);",
      "info" : "VariableDeclarationStatement[1830-1883]:VariableDeclarationStatement[1855-1908]"
    }, {
      "left" : "for( OptimizationAlgorithm oa : OptimizationAlgorithm.values())",
      "right" : "for( OptimizationAlgorithm oa : OptimizationAlgorithm.values())",
      "info" : "EnhancedForStatement[1889-2096]:EnhancedForStatement[1914-2121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[1953-2096]:Block[1978-2121]"
    }, {
      "left" : "MultiLayerNetwork network = new MultiLayerNetwork(getMLPConfigIris(oa));",
      "right" : "MultiLayerNetwork network = new MultiLayerNetwork(getMLPConfigIris(oa));",
      "info" : "VariableDeclarationStatement[1958-2030]:VariableDeclarationStatement[1983-2055]"
    }, {
      "left" : "network.init();",
      "right" : "network.init();",
      "info" : "ExpressionStatement[2034-2049]:ExpressionStatement[2059-2074]"
    }, {
      "left" : "iter.reset();",
      "right" : "iter.reset();",
      "info" : "ExpressionStatement[2057-2070]:ExpressionStatement[2082-2095]"
    }, {
      "left" : "network.fit(iter);",
      "right" : "network.fit(iter);",
      "info" : "ExpressionStatement[2074-2092]:ExpressionStatement[2099-2117]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[2103-2110]:Modifier[2128-2135]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2111-2117]:Modifier[2136-2142]"
    }, {
      "left" : "MultiLayerConfiguration",
      "right" : "MultiLayerConfiguration",
      "info" : "SimpleType[2118-2141]:SimpleType[2143-2166]"
    }, {
      "left" : "getMLPConfigIris",
      "right" : "getMLPConfigIris",
      "info" : "SimpleName[2142-2158]:SimpleName[2167-2183]"
    }, {
      "left" : "OptimizationAlgorithm oa",
      "right" : "OptimizationAlgorithm oa",
      "info" : "SingleVariableDeclaration[2160-2184]:SingleVariableDeclaration[2185-2209]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2186-3128]:Block[2211-3153]"
    }, {
      "left" : "MultiLayerConfiguration c = new NeuralNetConfiguration.Builder()\n\t\t.nIn(4).nOut(3)\n\t\t.weightInit(WeightInit.DISTRIBUTION)\n\t\t.dist(new NormalDistribution(0, 0.1))\n\n\t\t.activationFunction(\"sigmoid\")\n\t\t.lossFunction(LossFunction.MCXENT)\n\t\t.optimizationAlgo(oa)\n\t\t.iterations(1)\n\t\t.batchSize(5)\n\t\t.constrainGradientToUnitNorm(false)\n\t\t.corruptionLevel(0.0)\n\t\t.layer(new RBM())\n\t\t.learningRate(0.1).useAdaGrad(false)\n\t\t.regularization(true)\n\t\t.l2(0.01)\n\t\t.applySparsity(false).sparsity(0.0)\n\t\t.seed(12345L)\n\t\t.list(4).hiddenLayerSizes(8,10,5)\n\t\t.backward(true).pretrain(false)\n\t\t.useDropConnect(false)\n\n\t\t.override(3, new ConfOverride() {\n\t\t\t@Override\n\t\t\tpublic void overrideLayer(int i, NeuralNetConfiguration.Builder builder) {\n\t\t\t\tbuilder.activationFunction(\"softmax\");\n\t\t\t\tbuilder.layer(new OutputLayer());\n\t\t\t\tbuilder.weightInit(WeightInit.DISTRIBUTION);\n\t\t\t\tbuilder.dist(new NormalDistribution(0, 0.1));\n\t\t\t}\n\t\t}).build();",
      "right" : "MultiLayerConfiguration c = new NeuralNetConfiguration.Builder()\n\t\t.nIn(4).nOut(3)\n\t\t.weightInit(WeightInit.DISTRIBUTION)\n\t\t.dist(new NormalDistribution(0, 0.1))\n\n\t\t.activationFunction(\"sigmoid\")\n\t\t.lossFunction(LossFunction.MCXENT)\n\t\t.optimizationAlgo(oa)\n\t\t.iterations(1)\n\t\t.batchSize(5)\n\t\t.constrainGradientToUnitNorm(false)\n\t\t.corruptionLevel(0.0)\n\t\t.layer(new RBM())\n\t\t.learningRate(0.1).useAdaGrad(false)\n\t\t.regularization(true)\n\t\t.l2(0.01)\n\t\t.applySparsity(false).sparsity(0.0)\n\t\t.seed(12345L)\n\t\t.list(4).hiddenLayerSizes(8,10,5)\n\t\t.backward(true).pretrain(false)\n\t\t.useDropConnect(false)\n\n\t\t.override(3, new ConfOverride() {\n\t\t\t@Override\n\t\t\tpublic void overrideLayer(int i, NeuralNetConfiguration.Builder builder) {\n\t\t\t\tbuilder.activationFunction(\"softmax\");\n\t\t\t\tbuilder.layer(new OutputLayer());\n\t\t\t\tbuilder.weightInit(WeightInit.DISTRIBUTION);\n\t\t\t\tbuilder.dist(new NormalDistribution(0, 0.1));\n\t\t\t}\n\t\t}).build();",
      "info" : "VariableDeclarationStatement[2190-3112]:VariableDeclarationStatement[2215-3137]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[2826-2835]:MarkerAnnotation[2851-2860]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2839-2845]:Modifier[2864-2870]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[2846-2850]:PrimitiveType[2871-2875]"
    }, {
      "left" : "overrideLayer",
      "right" : "overrideLayer",
      "info" : "SimpleName[2851-2864]:SimpleName[2876-2889]"
    }, {
      "left" : "int i",
      "right" : "int i",
      "info" : "SingleVariableDeclaration[2865-2870]:SingleVariableDeclaration[2890-2895]"
    }, {
      "left" : "NeuralNetConfiguration.Builder builder",
      "right" : "NeuralNetConfiguration.Builder builder",
      "info" : "SingleVariableDeclaration[2872-2910]:SingleVariableDeclaration[2897-2935]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2912-3098]:Block[2937-3123]"
    }, {
      "left" : "builder.activationFunction(\"softmax\");",
      "right" : "builder.activationFunction(\"softmax\");",
      "info" : "ExpressionStatement[2918-2956]:ExpressionStatement[2943-2981]"
    }, {
      "left" : "builder.layer(new OutputLayer());",
      "right" : "builder.layer(new OutputLayer());",
      "info" : "ExpressionStatement[2961-2994]:ExpressionStatement[2986-3019]"
    }, {
      "left" : "builder.weightInit(WeightInit.DISTRIBUTION);",
      "right" : "builder.weightInit(WeightInit.DISTRIBUTION);",
      "info" : "ExpressionStatement[2999-3043]:ExpressionStatement[3024-3068]"
    }, {
      "left" : "builder.dist(new NormalDistribution(0, 0.1));",
      "right" : "builder.dist(new NormalDistribution(0, 0.1));",
      "info" : "ExpressionStatement[3048-3093]:ExpressionStatement[3073-3118]"
    }, {
      "left" : "return c;",
      "right" : "return c;",
      "info" : "ReturnStatement[3116-3125]:ReturnStatement[3141-3150]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[3132-3137]:MarkerAnnotation[3157-3162]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3139-3145]:Modifier[3164-3170]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3146-3150]:PrimitiveType[3171-3175]"
    }, {
      "left" : "testSphereFnOptStochGradDescent",
      "right" : "testSphereFnOptStochGradDescent",
      "info" : "SimpleName[3151-3182]:SimpleName[3176-3207]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3184-3434]:Block[3209-3459]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT,-1,2);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT,-1,2);",
      "info" : "ExpressionStatement[3188-3266]:ExpressionStatement[3213-3291]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT,-1,10);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT,-1,10);",
      "info" : "ExpressionStatement[3269-3348]:ExpressionStatement[3294-3373]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT,-1,100);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.STOCHASTIC_GRADIENT_DESCENT,-1,100);",
      "info" : "ExpressionStatement[3351-3431]:ExpressionStatement[3376-3456]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[3438-3443]:MarkerAnnotation[3463-3468]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3445-3451]:Modifier[3470-3476]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3452-3456]:PrimitiveType[3477-3481]"
    }, {
      "left" : "testSphereFnOptLineGradDescent",
      "right" : "testSphereFnOptLineGradDescent",
      "info" : "SimpleName[3457-3487]:SimpleName[3482-3512]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3489-3870]:Block[3514-3997]"
    }, {
      "left" : "int[] numLineSearchIter = {1,2,5,10};",
      "right" : "int[] numLineSearchIter = {1,2,5,10};",
      "info" : "VariableDeclarationStatement[3493-3530]:VariableDeclarationStatement[3620-3657]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,2);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,2);",
      "info" : "EnhancedForStatement[3533-3640]:EnhancedForStatement[3660-3767]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,2);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,2);",
      "info" : "ExpressionStatement[3569-3640]:ExpressionStatement[3696-3767]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,10);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,10);",
      "info" : "EnhancedForStatement[3646-3754]:EnhancedForStatement[3773-3881]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,10);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,10);",
      "info" : "ExpressionStatement[3682-3754]:ExpressionStatement[3809-3881]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,100);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,100);",
      "info" : "EnhancedForStatement[3758-3867]:EnhancedForStatement[3885-3994]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,100);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.LINE_GRADIENT_DESCENT,n,100);",
      "info" : "ExpressionStatement[3794-3867]:ExpressionStatement[3921-3994]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[3874-3879]:MarkerAnnotation[4001-4006]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[3881-3887]:Modifier[4008-4014]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[3888-3892]:PrimitiveType[4015-4019]"
    }, {
      "left" : "testSphereFnOptCG",
      "right" : "testSphereFnOptCG",
      "info" : "SimpleName[3893-3910]:SimpleName[4020-4037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3912-4286]:Block[4039-4515]"
    }, {
      "left" : "int[] numLineSearchIter = {1,2,5,10};",
      "right" : "int[] numLineSearchIter = {1,2,5,10};",
      "info" : "VariableDeclarationStatement[3916-3953]:VariableDeclarationStatement[4145-4182]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,2);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,2);",
      "info" : "EnhancedForStatement[3956-4060]:EnhancedForStatement[4185-4289]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,2);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,2);",
      "info" : "ExpressionStatement[3992-4060]:ExpressionStatement[4221-4289]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,10);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,10);",
      "info" : "EnhancedForStatement[4066-4171]:EnhancedForStatement[4295-4400]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,10);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,10);",
      "info" : "ExpressionStatement[4102-4171]:ExpressionStatement[4331-4400]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,100);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,100);",
      "info" : "EnhancedForStatement[4177-4283]:EnhancedForStatement[4406-4512]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,100);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.CONJUGATE_GRADIENT,n,100);",
      "info" : "ExpressionStatement[4213-4283]:ExpressionStatement[4442-4512]"
    }, {
      "left" : "@Test",
      "right" : "@Test",
      "info" : "MarkerAnnotation[4290-4295]:MarkerAnnotation[4519-4524]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4297-4303]:Modifier[4526-4532]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4304-4308]:PrimitiveType[4533-4537]"
    }, {
      "left" : "testSphereFnOptLBFGS",
      "right" : "testSphereFnOptLBFGS",
      "info" : "SimpleName[4309-4329]:SimpleName[4538-4558]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4331-4666]:Block[4560-4997]"
    }, {
      "left" : "int[] numLineSearchIter = {1,2,5,10};",
      "right" : "int[] numLineSearchIter = {1,2,5,10};",
      "info" : "VariableDeclarationStatement[4335-4372]:VariableDeclarationStatement[4666-4703]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,2);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,2);",
      "info" : "EnhancedForStatement[4375-4466]:EnhancedForStatement[4706-4797]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,2);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,2);",
      "info" : "ExpressionStatement[4411-4466]:ExpressionStatement[4742-4797]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,10);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,10);",
      "info" : "EnhancedForStatement[4472-4564]:EnhancedForStatement[4803-4895]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,10);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,10);",
      "info" : "ExpressionStatement[4508-4564]:ExpressionStatement[4839-4895]"
    }, {
      "left" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,100);",
      "right" : "for( int n : numLineSearchIter )\n\t\t\ttestSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,100);",
      "info" : "EnhancedForStatement[4570-4663]:EnhancedForStatement[4901-4994]"
    }, {
      "left" : "testSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,100);",
      "right" : "testSphereFnOptHelper(OptimizationAlgorithm.LBFGS,n,100);",
      "info" : "ExpressionStatement[4606-4663]:ExpressionStatement[4937-4994]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[4744-4750]:Modifier[5075-5081]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[4751-4755]:PrimitiveType[5082-5086]"
    }, {
      "left" : "testSphereFnOptHelper",
      "right" : "testSphereFnOptHelper",
      "info" : "SimpleName[4756-4777]:SimpleName[5087-5108]"
    }, {
      "left" : "OptimizationAlgorithm oa",
      "right" : "OptimizationAlgorithm oa",
      "info" : "SingleVariableDeclaration[4779-4803]:SingleVariableDeclaration[5110-5134]"
    }, {
      "left" : "int numLineSearchIter",
      "right" : "int numLineSearchIter",
      "info" : "SingleVariableDeclaration[4805-4826]:SingleVariableDeclaration[5136-5157]"
    }, {
      "left" : "int nDimensions",
      "right" : "int nDimensions",
      "info" : "SingleVariableDeclaration[4828-4843]:SingleVariableDeclaration[5159-5174]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4845-6965]:Block[5176-6772]"
    }, {
      "left" : "if( PRINT_OPT_RESULTS)",
      "right" : "if( PRINT_OPT_RESULTS)",
      "info" : "IfStatement[4852-4991]:IfStatement[5183-5322]"
    }, {
      "left" : "System.out.println(\"---------\\n Alg=\" + oa\n\t\t\t\t+ \", nIter=\" + numLineSearchIter + \", nDimensions=\" + nDimensions );",
      "right" : "System.out.println(\"---------\\n Alg=\" + oa\n\t\t\t\t+ \", nIter=\" + numLineSearchIter + \", nDimensions=\" + nDimensions );",
      "info" : "ExpressionStatement[4876-4991]:ExpressionStatement[5207-5322]"
    }, {
      "left" : "NeuralNetConfiguration conf = new NeuralNetConfiguration.Builder()\n\t\t.numLineSearchIterations(numLineSearchIter)\n\t\t.iterations(1000)\n\t\t.learningRate(0.01)\n\t\t.layer(new RBM()).batchSize(1).build();",
      "right" : "NeuralNetConfiguration conf = new NeuralNetConfiguration.Builder()\n\t\t.numLineSearchIterations(numLineSearchIter)\n\t\t.iterations(1000)\n\t\t.learningRate(0.01)\n\t\t.layer(new RBM()).batchSize(1).build();",
      "info" : "VariableDeclarationStatement[4997-5193]:VariableDeclarationStatement[5328-5524]"
    }, {
      "left" : "conf.addVariable(\"x\");",
      "right" : "conf.addVariable(\"x\");",
      "info" : "ExpressionStatement[5196-5218]:ExpressionStatement[5527-5549]"
    }, {
      "left" : "Random rng = new DefaultRandom(12345L);",
      "right" : "Random rng = new DefaultRandom(12345L);",
      "info" : "VariableDeclarationStatement[5298-5337]:VariableDeclarationStatement[5629-5668]"
    }, {
      "left" : "org.nd4j.linalg.api.rng.distribution.Distribution dist\n\t\t\t= new org.nd4j.linalg.api.rng.distribution.impl.UniformDistribution(rng,-10, 10);",
      "right" : "org.nd4j.linalg.api.rng.distribution.Distribution dist\n\t\t\t= new org.nd4j.linalg.api.rng.distribution.impl.UniformDistribution(rng,-10, 10);",
      "info" : "VariableDeclarationStatement[5340-5479]:VariableDeclarationStatement[5671-5810]"
    }, {
      "left" : "Model m = new SphereFunctionModel(nDimensions,dist,conf);",
      "right" : "Model m = new SphereFunctionModel(nDimensions,dist,conf);",
      "info" : "VariableDeclarationStatement[5482-5539]:VariableDeclarationStatement[5813-5870]"
    }, {
      "left" : "double scoreBefore = m.score();",
      "right" : "double scoreBefore = m.score();",
      "info" : "VariableDeclarationStatement[5545-5576]:VariableDeclarationStatement[5876-5907]"
    }, {
      "left" : "assertTrue(!Double.isNaN(scoreBefore) && !Double.isInfinite(scoreBefore));",
      "right" : "assertTrue(!Double.isNaN(scoreBefore) && !Double.isInfinite(scoreBefore));",
      "info" : "ExpressionStatement[5579-5653]:ExpressionStatement[5910-5984]"
    }, {
      "left" : "if( PRINT_OPT_RESULTS)",
      "right" : "if( PRINT_OPT_RESULTS)",
      "info" : "IfStatement[5656-5789]:IfStatement[5987-6120]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5679-5789]:Block[6010-6120]"
    }, {
      "left" : "System.out.println(\"Before:\");",
      "right" : "System.out.println(\"Before:\");",
      "info" : "ExpressionStatement[5684-5714]:ExpressionStatement[6015-6045]"
    }, {
      "left" : "System.out.println(scoreBefore);",
      "right" : "System.out.println(scoreBefore);",
      "info" : "ExpressionStatement[5718-5750]:ExpressionStatement[6049-6081]"
    }, {
      "left" : "System.out.println(m.params());",
      "right" : "System.out.println(m.params());",
      "info" : "ExpressionStatement[5754-5785]:ExpressionStatement[6085-6116]"
    }, {
      "left" : "ConvexOptimizer",
      "right" : "ConvexOptimizer",
      "info" : "SimpleType[5795-5810]:SimpleType[9044-9059]"
    }, {
      "left" : "switch(oa){\n\t\tcase STOCHASTIC_GRADIENT_DESCENT:\n\t\t\topt = new StochasticGradientDescent(conf,new DefaultStepFunction(),null,m);\n\t\t\tbreak;\n\t\tcase LINE_GRADIENT_DESCENT:\n\t\t\topt = new LineGradientDescent(conf,new DefaultStepFunction(),null,m);\n\t\t\tbreak;\n\t\tcase CONJUGATE_GRADIENT:\n\t\t\topt = new ConjugateGradient(conf,new DefaultStepFunction(),null,m);\n\t\t\tbreak;\n\t\tcase LBFGS:\n\t\t\topt = new LBFGS(conf,new DefaultStepFunction(),null,m);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tfail(\"Not supported: \" + oa);\t//Hessian free is NN-specific.\n\t\t\topt = null;\n\t\t\tbreak;\n\t\t}",
      "right" : "switch(oa){\n\t\tcase STOCHASTIC_GRADIENT_DESCENT:\n\t\t\treturn new StochasticGradientDescent(conf,new DefaultStepFunction(),null,m);\n\t\tcase LINE_GRADIENT_DESCENT:\n\t\t\treturn new LineGradientDescent(conf,new DefaultStepFunction(),null,m);\n\t\tcase CONJUGATE_GRADIENT:\n\t\t\treturn new ConjugateGradient(conf,new DefaultStepFunction(),null,m);\n\t\tcase LBFGS:\n\t\t\treturn new LBFGS(conf,new DefaultStepFunction(),null,m);\n\t\tdefault:\n\t\t\tthrow new UnsupportedOperationException();\n\t\t}",
      "info" : "SwitchStatement[5818-6362]:SwitchStatement[6889-7354]"
    }, {
      "left" : "case STOCHASTIC_GRADIENT_DESCENT:",
      "right" : "case STOCHASTIC_GRADIENT_DESCENT:",
      "info" : "SwitchCase[5832-5865]:SwitchCase[6903-6936]"
    }, {
      "left" : "new StochasticGradientDescent(conf,new DefaultStepFunction(),null,m)",
      "right" : "new StochasticGradientDescent(conf,new DefaultStepFunction(),null,m)",
      "info" : "ClassInstanceCreation[5875-5943]:ClassInstanceCreation[6947-7015]"
    }, {
      "left" : "case LINE_GRADIENT_DESCENT:",
      "right" : "case LINE_GRADIENT_DESCENT:",
      "info" : "SwitchCase[5957-5984]:SwitchCase[7019-7046]"
    }, {
      "left" : "new LineGradientDescent(conf,new DefaultStepFunction(),null,m)",
      "right" : "new LineGradientDescent(conf,new DefaultStepFunction(),null,m)",
      "info" : "ClassInstanceCreation[5994-6056]:ClassInstanceCreation[7057-7119]"
    }, {
      "left" : "case CONJUGATE_GRADIENT:",
      "right" : "case CONJUGATE_GRADIENT:",
      "info" : "SwitchCase[6070-6094]:SwitchCase[7123-7147]"
    }, {
      "left" : "new ConjugateGradient(conf,new DefaultStepFunction(),null,m)",
      "right" : "new ConjugateGradient(conf,new DefaultStepFunction(),null,m)",
      "info" : "ClassInstanceCreation[6104-6164]:ClassInstanceCreation[7158-7218]"
    }, {
      "left" : "case LBFGS:",
      "right" : "case LBFGS:",
      "info" : "SwitchCase[6178-6189]:SwitchCase[7222-7233]"
    }, {
      "left" : "new LBFGS(conf,new DefaultStepFunction(),null,m)",
      "right" : "new LBFGS(conf,new DefaultStepFunction(),null,m)",
      "info" : "ClassInstanceCreation[6199-6247]:ClassInstanceCreation[7244-7292]"
    }, {
      "left" : "default:",
      "right" : "default:",
      "info" : "SwitchCase[6261-6269]:SwitchCase[7296-7304]"
    }, {
      "left" : "fail",
      "right" : "getOptimizer",
      "info" : "SimpleName[6273-6277]:SimpleName[6148-6160]"
    }, {
      "left" : "fail(\"Not supported: \" + oa)",
      "right" : "getOptimizer(oa,conf,m)",
      "info" : "MethodInvocation[6273-6301]:MethodInvocation[6148-6171]"
    }, {
      "left" : "opt.setupSearchState(m.gradientAndScore());",
      "right" : "opt.setupSearchState(m.gradientAndScore());",
      "info" : "ExpressionStatement[6368-6411]:ExpressionStatement[6178-6221]"
    }, {
      "left" : "opt.optimize();",
      "right" : "opt.optimize();",
      "info" : "ExpressionStatement[6414-6429]:ExpressionStatement[6224-6239]"
    }, {
      "left" : "double scoreAfter = m.score();",
      "right" : "double scoreAfter = m.score();",
      "info" : "VariableDeclarationStatement[6435-6465]:VariableDeclarationStatement[6245-6275]"
    }, {
      "left" : "assertTrue(!Double.isNaN(scoreAfter) && !Double.isInfinite(scoreAfter));",
      "right" : "assertTrue(!Double.isNaN(scoreAfter) && !Double.isInfinite(scoreAfter));",
      "info" : "ExpressionStatement[6468-6540]:ExpressionStatement[6278-6350]"
    }, {
      "left" : "if( PRINT_OPT_RESULTS)",
      "right" : "if( PRINT_OPT_RESULTS)",
      "info" : "IfStatement[6543-6674]:IfStatement[6353-6484]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6566-6674]:Block[6376-6484]"
    }, {
      "left" : "System.out.println(\"After:\");",
      "right" : "System.out.println(\"After:\");",
      "info" : "ExpressionStatement[6571-6600]:ExpressionStatement[6381-6410]"
    }, {
      "left" : "System.out.println(scoreAfter);",
      "right" : "System.out.println(scoreAfter);",
      "info" : "ExpressionStatement[6604-6635]:ExpressionStatement[6414-6445]"
    }, {
      "left" : "System.out.println(m.params());",
      "right" : "System.out.println(m.params());",
      "info" : "ExpressionStatement[6639-6670]:ExpressionStatement[6449-6480]"
    }, {
      "left" : "assertTrue(\"Score did not improve after optimization (b=\"+scoreBefore+\",a=\"+scoreAfter+\")\",scoreAfter < scoreBefore);",
      "right" : "assertTrue(\"Score did not improve after optimization (b=\"+scoreBefore+\",a=\"+scoreAfter+\")\",scoreAfter < scoreBefore);",
      "info" : "ExpressionStatement[6842-6959]:ExpressionStatement[6652-6769]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7187-7194]:Modifier[9876-9883]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7195-7201]:Modifier[9884-9890]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[7202-7207]:TYPE_DECLARATION_KIND[9891-9896]"
    }, {
      "left" : "SphereFunctionModel",
      "right" : "SphereFunctionModel",
      "info" : "SimpleName[7208-7227]:SimpleName[9897-9916]"
    }, {
      "left" : "Model",
      "right" : "Model",
      "info" : "SimpleType[7239-7244]:SimpleType[9928-9933]"
    }, {
      "left" : "Layer",
      "right" : "Layer",
      "info" : "SimpleType[7246-7251]:SimpleType[9935-9940]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7520-7527]:Modifier[10209-10216]"
    }, {
      "left" : "SphereFunctionModel",
      "right" : "SphereFunctionModel",
      "info" : "SimpleName[7528-7547]:SimpleName[10217-10236]"
    }, {
      "left" : "INDArray parameterInit",
      "right" : "INDArray parameterInit",
      "info" : "SingleVariableDeclaration[7549-7571]:SingleVariableDeclaration[10238-10260]"
    }, {
      "left" : "NeuralNetConfiguration conf",
      "right" : "NeuralNetConfiguration conf",
      "info" : "SingleVariableDeclaration[7573-7600]:SingleVariableDeclaration[10262-10289]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7602-7670]:Block[10291-10359]"
    }, {
      "left" : "this.parameters = parameterInit.dup();",
      "right" : "this.parameters = parameterInit.dup();",
      "info" : "ExpressionStatement[7607-7645]:ExpressionStatement[10296-10334]"
    }, {
      "left" : "this.conf = conf;",
      "right" : "this.conf = conf;",
      "info" : "ExpressionStatement[7649-7666]:ExpressionStatement[10338-10355]"
    }, {
      "left" : "private",
      "right" : "private",
      "info" : "Modifier[7676-7683]:Modifier[10365-10372]"
    }, {
      "left" : "SphereFunctionModel",
      "right" : "SphereFunctionModel",
      "info" : "SimpleName[7684-7703]:SimpleName[10373-10392]"
    }, {
      "left" : "int nParams",
      "right" : "int nParams",
      "info" : "SingleVariableDeclaration[7705-7716]:SingleVariableDeclaration[10394-10405]"
    }, {
      "left" : "org.nd4j.linalg.api.rng.distribution.Distribution distribution",
      "right" : "org.nd4j.linalg.api.rng.distribution.Distribution distribution",
      "info" : "SingleVariableDeclaration[7718-7780]:SingleVariableDeclaration[10407-10469]"
    }, {
      "left" : "NeuralNetConfiguration conf",
      "right" : "NeuralNetConfiguration conf",
      "info" : "SingleVariableDeclaration[7786-7813]:SingleVariableDeclaration[10475-10502]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7815-7905]:Block[10504-10594]"
    }, {
      "left" : "this.parameters = distribution.sample(new int[]{1,nParams});",
      "right" : "this.parameters = distribution.sample(new int[]{1,nParams});",
      "info" : "ExpressionStatement[7820-7880]:ExpressionStatement[10509-10569]"
    }, {
      "left" : "this.conf = conf;",
      "right" : "this.conf = conf;",
      "info" : "ExpressionStatement[7884-7901]:ExpressionStatement[10573-10590]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7909-7918]:MarkerAnnotation[10598-10607]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7921-7927]:Modifier[10610-10616]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[7928-7932]:PrimitiveType[10617-10621]"
    }, {
      "left" : "fit",
      "right" : "fit",
      "info" : "SimpleName[7933-7936]:SimpleName[10622-10625]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7939-7985]:Block[10628-10674]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[7941-7983]:ThrowStatement[10630-10672]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[7989-7998]:MarkerAnnotation[10678-10687]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8001-8007]:Modifier[10690-10696]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8008-8012]:PrimitiveType[10697-10701]"
    }, {
      "left" : "update",
      "right" : "update",
      "info" : "SimpleName[8013-8019]:SimpleName[10702-10708]"
    }, {
      "left" : "INDArray gradient",
      "right" : "INDArray gradient",
      "info" : "SingleVariableDeclaration[8020-8037]:SingleVariableDeclaration[10709-10726]"
    }, {
      "left" : "String paramType",
      "right" : "String paramType",
      "info" : "SingleVariableDeclaration[8039-8055]:SingleVariableDeclaration[10728-10744]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8057-8165]:Block[10746-10854]"
    }, {
      "left" : "if(!\"x\".equals(paramType))",
      "right" : "if(!\"x\".equals(paramType))",
      "info" : "IfStatement[8062-8131]:IfStatement[10751-10820]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8089-8131]:ThrowStatement[10778-10820]"
    }, {
      "left" : "parameters.subi(gradient);",
      "right" : "parameters.subi(gradient);",
      "info" : "ExpressionStatement[8135-8161]:ExpressionStatement[10824-10850]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8169-8178]:MarkerAnnotation[10858-10867]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8181-8187]:Modifier[10870-10876]"
    }, {
      "left" : "double",
      "right" : "double",
      "info" : "PrimitiveType[8188-8194]:PrimitiveType[10877-10883]"
    }, {
      "left" : "score",
      "right" : "score",
      "info" : "SimpleName[8195-8200]:SimpleName[10884-10889]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8203-8283]:Block[10892-10972]"
    }, {
      "left" : "return Nd4j.getBlasWrapper().dot(parameters, parameters);",
      "right" : "return Nd4j.getBlasWrapper().dot(parameters, parameters);",
      "info" : "ReturnStatement[8208-8265]:ReturnStatement[10897-10954]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8287-8296]:MarkerAnnotation[10976-10985]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8299-8305]:Modifier[10988-10994]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8306-8310]:PrimitiveType[10995-10999]"
    }, {
      "left" : "setScore",
      "right" : "setScore",
      "info" : "SimpleName[8311-8319]:SimpleName[11000-11008]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8322-8325]:Block[11011-11014]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8329-8338]:MarkerAnnotation[11018-11027]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8341-8347]:Modifier[11030-11036]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8348-8352]:PrimitiveType[11037-11041]"
    }, {
      "left" : "accumulateScore",
      "right" : "accumulateScore",
      "info" : "SimpleName[8353-8368]:SimpleName[11042-11057]"
    }, {
      "left" : "double accum",
      "right" : "double accum",
      "info" : "SingleVariableDeclaration[8369-8381]:SingleVariableDeclaration[11058-11070]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8383-8429]:Block[11072-11118]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8385-8427]:ThrowStatement[11074-11116]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8433-8442]:MarkerAnnotation[11122-11131]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8445-8451]:Modifier[11134-11140]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[8452-8460]:SimpleType[11141-11149]"
    }, {
      "left" : "transform",
      "right" : "transform",
      "info" : "SimpleName[8461-8470]:SimpleName[11150-11159]"
    }, {
      "left" : "INDArray data",
      "right" : "INDArray data",
      "info" : "SingleVariableDeclaration[8471-8484]:SingleVariableDeclaration[11160-11173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8486-8532]:Block[11175-11221]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8488-8530]:ThrowStatement[11177-11219]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8536-8545]:MarkerAnnotation[11225-11234]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8548-8554]:Modifier[11237-11243]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[8555-8563]:SimpleType[11244-11252]"
    }, {
      "left" : "params",
      "right" : "params",
      "info" : "SimpleName[8564-8570]:SimpleName[11253-11259]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8573-8594]:Block[11262-11283]"
    }, {
      "left" : "return parameters;",
      "right" : "return parameters;",
      "info" : "ReturnStatement[8574-8592]:ReturnStatement[11263-11281]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8598-8607]:MarkerAnnotation[11287-11296]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8610-8616]:Modifier[11299-11305]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[8617-8620]:PrimitiveType[11306-11309]"
    }, {
      "left" : "numParams",
      "right" : "numParams",
      "info" : "SimpleName[8621-8630]:SimpleName[11310-11319]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8633-8664]:Block[11322-11353]"
    }, {
      "left" : "return parameters.length();",
      "right" : "return parameters.length();",
      "info" : "ReturnStatement[8635-8662]:ReturnStatement[11324-11351]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8668-8677]:MarkerAnnotation[11357-11366]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8680-8686]:Modifier[11369-11375]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8687-8691]:PrimitiveType[11376-11380]"
    }, {
      "left" : "setParams",
      "right" : "setParams",
      "info" : "SimpleName[8692-8701]:SimpleName[11381-11390]"
    }, {
      "left" : "INDArray params",
      "right" : "INDArray params",
      "info" : "SingleVariableDeclaration[8702-8717]:SingleVariableDeclaration[11391-11406]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8719-8748]:Block[11408-11437]"
    }, {
      "left" : "this.parameters = params;",
      "right" : "this.parameters = params;",
      "info" : "ExpressionStatement[8721-8746]:ExpressionStatement[11410-11435]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8752-8761]:MarkerAnnotation[11441-11450]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8764-8770]:Modifier[11453-11459]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8771-8775]:PrimitiveType[11460-11464]"
    }, {
      "left" : "fit",
      "right" : "fit",
      "info" : "SimpleName[8776-8779]:SimpleName[11465-11468]"
    }, {
      "left" : "INDArray data",
      "right" : "INDArray data",
      "info" : "SingleVariableDeclaration[8780-8793]:SingleVariableDeclaration[11469-11482]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8795-8841]:Block[11484-11530]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8797-8839]:ThrowStatement[11486-11528]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8845-8854]:MarkerAnnotation[11534-11543]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8857-8863]:Modifier[11546-11552]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[8864-8868]:PrimitiveType[11553-11557]"
    }, {
      "left" : "iterate",
      "right" : "iterate",
      "info" : "SimpleName[8869-8876]:SimpleName[11558-11565]"
    }, {
      "left" : "INDArray input",
      "right" : "INDArray input",
      "info" : "SingleVariableDeclaration[8877-8891]:SingleVariableDeclaration[11566-11580]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8893-8939]:Block[11582-11628]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[8895-8937]:ThrowStatement[11584-11626]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[8943-8952]:MarkerAnnotation[11632-11641]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8955-8961]:Modifier[11644-11650]"
    }, {
      "left" : "Gradient",
      "right" : "Gradient",
      "info" : "SimpleType[8962-8970]:SimpleType[11651-11659]"
    }, {
      "left" : "gradient",
      "right" : "gradient",
      "info" : "SimpleName[8971-8979]:SimpleName[11660-11668]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8982-9160]:Block[11671-11849]"
    }, {
      "left" : "INDArray gradient = parameters.mul(2);",
      "right" : "INDArray gradient = parameters.mul(2);",
      "info" : "VariableDeclarationStatement[9019-9057]:VariableDeclarationStatement[11708-11746]"
    }, {
      "left" : "Gradient g = new DefaultGradient();",
      "right" : "Gradient g = new DefaultGradient();",
      "info" : "VariableDeclarationStatement[9061-9096]:VariableDeclarationStatement[11750-11785]"
    }, {
      "left" : "g.gradientForVariable().put(\"x\", gradient);",
      "right" : "g.gradientForVariable().put(\"x\", gradient);",
      "info" : "ExpressionStatement[9100-9143]:ExpressionStatement[11789-11832]"
    }, {
      "left" : "return g;",
      "right" : "return g;",
      "info" : "ReturnStatement[9147-9156]:ReturnStatement[11836-11845]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9164-9173]:MarkerAnnotation[11853-11862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9176-9182]:Modifier[11865-11871]"
    }, {
      "left" : "Pair<Gradient, Double>",
      "right" : "Pair<Gradient, Double>",
      "info" : "ParameterizedType[9183-9205]:ParameterizedType[11872-11894]"
    }, {
      "left" : "gradientAndScore",
      "right" : "gradientAndScore",
      "info" : "SimpleName[9206-9222]:SimpleName[11895-11911]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9225-9287]:Block[11914-11976]"
    }, {
      "left" : "return new Pair<Gradient,Double>(gradient(),score());",
      "right" : "return new Pair<Gradient,Double>(gradient(),score());",
      "info" : "ReturnStatement[9230-9283]:ReturnStatement[11919-11972]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9291-9300]:MarkerAnnotation[11980-11989]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9303-9309]:Modifier[11992-11998]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[9310-9313]:PrimitiveType[11999-12002]"
    }, {
      "left" : "batchSize",
      "right" : "batchSize",
      "info" : "SimpleName[9314-9323]:SimpleName[12003-12012]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9326-9339]:Block[12015-12028]"
    }, {
      "left" : "return 1;",
      "right" : "return 1;",
      "info" : "ReturnStatement[9328-9337]:ReturnStatement[12017-12026]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9343-9352]:MarkerAnnotation[12032-12041]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9355-9361]:Modifier[12044-12050]"
    }, {
      "left" : "NeuralNetConfiguration",
      "right" : "NeuralNetConfiguration",
      "info" : "SimpleType[9362-9384]:SimpleType[12051-12073]"
    }, {
      "left" : "conf",
      "right" : "conf",
      "info" : "SimpleName[9385-9389]:SimpleName[12074-12078]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9392-9408]:Block[12081-12097]"
    }, {
      "left" : "return conf;",
      "right" : "return conf;",
      "info" : "ReturnStatement[9394-9406]:ReturnStatement[12083-12095]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9412-9421]:MarkerAnnotation[12101-12110]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9424-9430]:Modifier[12113-12119]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9431-9435]:PrimitiveType[12120-12124]"
    }, {
      "left" : "setConf",
      "right" : "setConf",
      "info" : "SimpleName[9436-9443]:SimpleName[12125-12132]"
    }, {
      "left" : "NeuralNetConfiguration conf",
      "right" : "NeuralNetConfiguration conf",
      "info" : "SingleVariableDeclaration[9444-9471]:SingleVariableDeclaration[12133-12160]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9473-9519]:Block[12162-12208]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[9475-9517]:ThrowStatement[12164-12206]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9523-9532]:MarkerAnnotation[12212-12221]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9535-9541]:Modifier[12224-12230]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[9542-9550]:SimpleType[12231-12239]"
    }, {
      "left" : "input",
      "right" : "input",
      "info" : "SimpleName[9551-9556]:SimpleName[12240-12245]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9559-9724]:Block[12248-12413]"
    }, {
      "left" : "return Nd4j.zeros(1);",
      "right" : "return Nd4j.zeros(1);",
      "info" : "ReturnStatement[9699-9720]:ReturnStatement[12388-12409]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9728-9737]:MarkerAnnotation[12417-12426]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9740-9746]:Modifier[12429-12435]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9747-9751]:PrimitiveType[12436-12440]"
    }, {
      "left" : "validateInput",
      "right" : "validateInput",
      "info" : "SimpleName[9752-9765]:SimpleName[12441-12454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9768-9771]:Block[12457-12460]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9775-9784]:MarkerAnnotation[12464-12473]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9787-9793]:Modifier[12476-12482]"
    }, {
      "left" : "ConvexOptimizer",
      "right" : "ConvexOptimizer",
      "info" : "SimpleType[9794-9809]:SimpleType[12483-12498]"
    }, {
      "left" : "getOptimizer",
      "right" : "getOptimizer",
      "info" : "SimpleName[9810-9822]:SimpleName[12499-12511]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9825-9871]:Block[12514-12560]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[9827-9869]:ThrowStatement[12516-12558]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9875-9884]:MarkerAnnotation[12564-12573]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9887-9893]:Modifier[12576-12582]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[9894-9902]:SimpleType[12583-12591]"
    }, {
      "left" : "getParam",
      "right" : "getParam",
      "info" : "SimpleName[9903-9911]:SimpleName[12592-12600]"
    }, {
      "left" : "String param",
      "right" : "String param",
      "info" : "SingleVariableDeclaration[9912-9924]:SingleVariableDeclaration[12601-12613]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9926-9948]:Block[12615-12637]"
    }, {
      "left" : "return parameters;",
      "right" : "return parameters;",
      "info" : "ReturnStatement[9928-9946]:ReturnStatement[12617-12635]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[9952-9961]:MarkerAnnotation[12641-12650]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9964-9970]:Modifier[12653-12659]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[9971-9975]:PrimitiveType[12660-12664]"
    }, {
      "left" : "initParams",
      "right" : "initParams",
      "info" : "SimpleName[9976-9986]:SimpleName[12665-12675]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9989-10035]:Block[12678-12724]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[9991-10033]:ThrowStatement[12680-12722]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10039-10048]:MarkerAnnotation[12728-12737]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10051-10057]:Modifier[12740-12746]"
    }, {
      "left" : "Map<String, INDArray>",
      "right" : "Map<String, INDArray>",
      "info" : "ParameterizedType[10058-10079]:ParameterizedType[12747-12768]"
    }, {
      "left" : "paramTable",
      "right" : "paramTable",
      "info" : "SimpleName[10080-10090]:SimpleName[12769-12779]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10093-10139]:Block[12782-12828]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10095-10137]:ThrowStatement[12784-12826]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10143-10152]:MarkerAnnotation[12832-12841]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10155-10161]:Modifier[12844-12850]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10162-10166]:PrimitiveType[12851-12855]"
    }, {
      "left" : "setParamTable",
      "right" : "setParamTable",
      "info" : "SimpleName[10167-10180]:SimpleName[12856-12869]"
    }, {
      "left" : "Map<String, INDArray> paramTable",
      "right" : "Map<String, INDArray> paramTable",
      "info" : "SingleVariableDeclaration[10181-10213]:SingleVariableDeclaration[12870-12902]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10215-10261]:Block[12904-12950]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10217-10259]:ThrowStatement[12906-12948]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10265-10274]:MarkerAnnotation[12954-12963]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10277-10283]:Modifier[12966-12972]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10284-10288]:PrimitiveType[12973-12977]"
    }, {
      "left" : "setParam",
      "right" : "setParam",
      "info" : "SimpleName[10289-10297]:SimpleName[12978-12986]"
    }, {
      "left" : "String key",
      "right" : "String key",
      "info" : "SingleVariableDeclaration[10298-10308]:SingleVariableDeclaration[12987-12997]"
    }, {
      "left" : "INDArray val",
      "right" : "INDArray val",
      "info" : "SingleVariableDeclaration[10310-10322]:SingleVariableDeclaration[12999-13011]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10324-10370]:Block[13013-13059]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10326-10368]:ThrowStatement[13015-13057]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10374-10383]:MarkerAnnotation[13063-13072]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10386-10392]:Modifier[13075-13081]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[10393-10397]:PrimitiveType[13082-13086]"
    }, {
      "left" : "clear",
      "right" : "clear",
      "info" : "SimpleName[10398-10403]:SimpleName[13087-13092]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10406-10452]:Block[13095-13141]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10408-10450]:ThrowStatement[13097-13139]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10456-10465]:MarkerAnnotation[13145-13154]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10468-10474]:Modifier[13157-13163]"
    }, {
      "left" : "Type",
      "right" : "Type",
      "info" : "SimpleType[10475-10479]:SimpleType[13164-13168]"
    }, {
      "left" : "type",
      "right" : "type",
      "info" : "SimpleName[10480-10484]:SimpleName[13169-13173]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10487-10533]:Block[13176-13222]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10489-10531]:ThrowStatement[13178-13220]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10537-10546]:MarkerAnnotation[13226-13235]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10549-10555]:Modifier[13238-13244]"
    }, {
      "left" : "Gradient",
      "right" : "Gradient",
      "info" : "SimpleType[10556-10564]:SimpleType[13245-13253]"
    }, {
      "left" : "error",
      "right" : "error",
      "info" : "SimpleName[10565-10570]:SimpleName[13254-13259]"
    }, {
      "left" : "INDArray input",
      "right" : "INDArray input",
      "info" : "SingleVariableDeclaration[10571-10585]:SingleVariableDeclaration[13260-13274]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10587-10633]:Block[13276-13322]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10589-10631]:ThrowStatement[13278-13320]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10637-10646]:MarkerAnnotation[13326-13335]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10649-10655]:Modifier[13338-13344]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[10656-10664]:SimpleType[13345-13353]"
    }, {
      "left" : "derivativeActivation",
      "right" : "derivativeActivation",
      "info" : "SimpleName[10665-10685]:SimpleName[13354-13374]"
    }, {
      "left" : "INDArray input",
      "right" : "INDArray input",
      "info" : "SingleVariableDeclaration[10686-10700]:SingleVariableDeclaration[13375-13389]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10702-10748]:Block[13391-13437]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10704-10746]:ThrowStatement[13393-13435]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10752-10761]:MarkerAnnotation[13441-13450]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10764-10770]:Modifier[13453-13459]"
    }, {
      "left" : "Gradient",
      "right" : "Gradient",
      "info" : "SimpleType[10771-10779]:SimpleType[13460-13468]"
    }, {
      "left" : "calcGradient",
      "right" : "calcGradient",
      "info" : "SimpleName[10780-10792]:SimpleName[13469-13481]"
    }, {
      "left" : "Gradient layerError",
      "right" : "Gradient layerError",
      "info" : "SingleVariableDeclaration[10793-10812]:SingleVariableDeclaration[13482-13501]"
    }, {
      "left" : "INDArray indArray",
      "right" : "INDArray indArray",
      "info" : "SingleVariableDeclaration[10814-10831]:SingleVariableDeclaration[13503-13520]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10833-10879]:Block[13522-13568]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10835-10877]:ThrowStatement[13524-13566]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10883-10892]:MarkerAnnotation[13572-13581]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[10895-10901]:Modifier[13584-13590]"
    }, {
      "left" : "Gradient",
      "right" : "Gradient",
      "info" : "SimpleType[10902-10910]:SimpleType[13591-13599]"
    }, {
      "left" : "errorSignal",
      "right" : "errorSignal",
      "info" : "SimpleName[10911-10922]:SimpleName[13600-13611]"
    }, {
      "left" : "Gradient error",
      "right" : "Gradient error",
      "info" : "SingleVariableDeclaration[10923-10937]:SingleVariableDeclaration[13612-13626]"
    }, {
      "left" : "INDArray input",
      "right" : "INDArray input",
      "info" : "SingleVariableDeclaration[10939-10953]:SingleVariableDeclaration[13628-13642]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10954-11000]:Block[13643-13689]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[10956-10998]:ThrowStatement[13645-13687]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11004-11013]:MarkerAnnotation[13693-13702]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11016-11022]:Modifier[13705-13711]"
    }, {
      "left" : "Gradient",
      "right" : "Gradient",
      "info" : "SimpleType[11023-11031]:SimpleType[13712-13720]"
    }, {
      "left" : "backwardGradient",
      "right" : "backwardGradient",
      "info" : "SimpleName[11032-11048]:SimpleName[13721-13737]"
    }, {
      "left" : "INDArray z",
      "right" : "INDArray z",
      "info" : "SingleVariableDeclaration[11049-11059]:SingleVariableDeclaration[13738-13748]"
    }, {
      "left" : "Layer nextLayer",
      "right" : "Layer nextLayer",
      "info" : "SingleVariableDeclaration[11061-11076]:SingleVariableDeclaration[13750-13765]"
    }, {
      "left" : "Gradient nextGradient",
      "right" : "Gradient nextGradient",
      "info" : "SingleVariableDeclaration[11082-11103]:SingleVariableDeclaration[13771-13792]"
    }, {
      "left" : "INDArray activation",
      "right" : "INDArray activation",
      "info" : "SingleVariableDeclaration[11105-11124]:SingleVariableDeclaration[13794-13813]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11126-11172]:Block[13815-13861]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11128-11170]:ThrowStatement[13817-13859]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11176-11185]:MarkerAnnotation[13865-13874]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11188-11194]:Modifier[13877-13883]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[11195-11199]:PrimitiveType[13884-13888]"
    }, {
      "left" : "merge",
      "right" : "merge",
      "info" : "SimpleName[11200-11205]:SimpleName[13889-13894]"
    }, {
      "left" : "Layer layer",
      "right" : "Layer layer",
      "info" : "SingleVariableDeclaration[11206-11217]:SingleVariableDeclaration[13895-13906]"
    }, {
      "left" : "int batchSize",
      "right" : "int batchSize",
      "info" : "SingleVariableDeclaration[11219-11232]:SingleVariableDeclaration[13908-13921]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11234-11280]:Block[13923-13969]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11236-11278]:ThrowStatement[13925-13967]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11284-11293]:MarkerAnnotation[13973-13982]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11296-11302]:Modifier[13985-13991]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[11303-11311]:SimpleType[13992-14000]"
    }, {
      "left" : "activationMean",
      "right" : "activationMean",
      "info" : "SimpleName[11312-11326]:SimpleName[14001-14015]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11329-11375]:Block[14018-14064]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11331-11373]:ThrowStatement[14020-14062]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11379-11388]:MarkerAnnotation[14068-14077]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11391-11397]:Modifier[14080-14086]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[11398-11406]:SimpleType[14087-14095]"
    }, {
      "left" : "preOutput",
      "right" : "preOutput",
      "info" : "SimpleName[11407-11416]:SimpleName[14096-14105]"
    }, {
      "left" : "INDArray x",
      "right" : "INDArray x",
      "info" : "SingleVariableDeclaration[11417-11427]:SingleVariableDeclaration[14106-14116]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11429-11475]:Block[14118-14164]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11431-11473]:ThrowStatement[14120-14162]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11479-11488]:MarkerAnnotation[14168-14177]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11491-11497]:Modifier[14180-14186]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[11498-11506]:SimpleType[14187-14195]"
    }, {
      "left" : "activate",
      "right" : "activate",
      "info" : "SimpleName[11507-11515]:SimpleName[14196-14204]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11518-11564]:Block[14207-14253]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11520-11562]:ThrowStatement[14209-14251]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11568-11577]:MarkerAnnotation[14257-14266]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11580-11586]:Modifier[14269-14275]"
    }, {
      "left" : "INDArray",
      "right" : "INDArray",
      "info" : "SimpleType[11587-11595]:SimpleType[14276-14284]"
    }, {
      "left" : "activate",
      "right" : "activate",
      "info" : "SimpleName[11596-11604]:SimpleName[14285-14293]"
    }, {
      "left" : "INDArray input",
      "right" : "INDArray input",
      "info" : "SingleVariableDeclaration[11605-11619]:SingleVariableDeclaration[14294-14308]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11621-11667]:Block[14310-14356]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11623-11665]:ThrowStatement[14312-14354]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11671-11680]:MarkerAnnotation[14360-14369]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11683-11689]:Modifier[14372-14378]"
    }, {
      "left" : "Layer",
      "right" : "Layer",
      "info" : "SimpleType[11690-11695]:SimpleType[14379-14384]"
    }, {
      "left" : "transpose",
      "right" : "transpose",
      "info" : "SimpleName[11696-11705]:SimpleName[14385-14394]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11708-11754]:Block[14397-14443]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11710-11752]:ThrowStatement[14399-14441]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11758-11767]:MarkerAnnotation[14447-14456]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11770-11776]:Modifier[14459-14465]"
    }, {
      "left" : "Layer",
      "right" : "Layer",
      "info" : "SimpleType[11777-11782]:SimpleType[14466-14471]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[11783-11788]:SimpleName[14472-14477]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11791-11837]:Block[14480-14526]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11793-11835]:ThrowStatement[14482-14524]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[11841-11850]:MarkerAnnotation[14530-14539]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[11853-11859]:Modifier[14542-14548]"
    }, {
      "left" : "Pair<Gradient, Gradient>",
      "right" : "Pair<Gradient, Gradient>",
      "info" : "ParameterizedType[11860-11884]:ParameterizedType[14549-14573]"
    }, {
      "left" : "backWard",
      "right" : "backWard",
      "info" : "SimpleName[11885-11893]:SimpleName[14574-14582]"
    }, {
      "left" : "Gradient errors",
      "right" : "Gradient errors",
      "info" : "SingleVariableDeclaration[11894-11909]:SingleVariableDeclaration[14583-14598]"
    }, {
      "left" : "Gradient deltas",
      "right" : "Gradient deltas",
      "info" : "SingleVariableDeclaration[11915-11930]:SingleVariableDeclaration[14604-14619]"
    }, {
      "left" : "INDArray activation",
      "right" : "INDArray activation",
      "info" : "SingleVariableDeclaration[11932-11951]:SingleVariableDeclaration[14621-14640]"
    }, {
      "left" : "String previousActivation",
      "right" : "String previousActivation",
      "info" : "SingleVariableDeclaration[11953-11978]:SingleVariableDeclaration[14642-14667]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[11980-12026]:Block[14669-14715]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[11982-12024]:ThrowStatement[14671-14713]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12030-12039]:MarkerAnnotation[14719-14728]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12042-12048]:Modifier[14731-14737]"
    }, {
      "left" : "Collection<IterationListener>",
      "right" : "Collection<IterationListener>",
      "info" : "ParameterizedType[12049-12078]:ParameterizedType[14738-14767]"
    }, {
      "left" : "getIterationListeners",
      "right" : "getIterationListeners",
      "info" : "SimpleName[12079-12100]:SimpleName[14768-14789]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12103-12119]:Block[14792-14808]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[12105-12117]:ReturnStatement[14794-14806]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12123-12132]:MarkerAnnotation[14812-14821]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12135-12141]:Modifier[14824-14830]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12142-12146]:PrimitiveType[14831-14835]"
    }, {
      "left" : "setIterationListeners",
      "right" : "setIterationListeners",
      "info" : "SimpleName[12147-12168]:SimpleName[14836-14857]"
    }, {
      "left" : "Collection<IterationListener> listeners",
      "right" : "Collection<IterationListener> listeners",
      "info" : "SingleVariableDeclaration[12169-12208]:SingleVariableDeclaration[14858-14897]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12210-12256]:Block[14899-14945]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[12212-12254]:ThrowStatement[14901-14943]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12260-12269]:MarkerAnnotation[14949-14958]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12272-12278]:Modifier[14961-14967]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[12279-12283]:PrimitiveType[14968-14972]"
    }, {
      "left" : "setIndex",
      "right" : "setIndex",
      "info" : "SimpleName[12284-12292]:SimpleName[14973-14981]"
    }, {
      "left" : "int index",
      "right" : "int index",
      "info" : "SingleVariableDeclaration[12293-12302]:SingleVariableDeclaration[14982-14991]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12304-12350]:Block[14993-15039]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[12306-12348]:ThrowStatement[14995-15037]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[12354-12363]:MarkerAnnotation[15043-15052]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[12366-12372]:Modifier[15055-15061]"
    }, {
      "left" : "int",
      "right" : "int",
      "info" : "PrimitiveType[12373-12376]:PrimitiveType[15062-15065]"
    }, {
      "left" : "getIndex",
      "right" : "getIndex",
      "info" : "SimpleName[12377-12385]:SimpleName[15066-15074]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[12388-12434]:Block[15077-15123]"
    }, {
      "left" : "throw new UnsupportedOperationException();",
      "right" : "throw new UnsupportedOperationException();",
      "info" : "ThrowStatement[12390-12432]:ThrowStatement[15079-15121]"
    } ]
  },
  "interFileMappings" : { }
}