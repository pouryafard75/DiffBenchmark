{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "SerializationUtils",
      "right" : "SerializationUtils",
      "info" : "TypeDeclaration[1179-10828]:TypeDeclaration[1179-11717]"
    }, {
      "left" : "public SerializationUtils()",
      "right" : "public SerializationUtils()",
      "info" : "MethodDeclaration[1691-2073]:MethodDeclaration[1691-2073]"
    }, {
      "left" : "public static <T extends Serializable> T clone(T object)",
      "right" : "public static <T extends Serializable> T clone(T object)",
      "info" : "MethodDeclaration[2170-4218]:MethodDeclaration[2170-4218]"
    }, {
      "left" : "public static void serialize(Serializable obj, OutputStream outputStream)",
      "right" : "public static void serialize(Serializable obj, OutputStream outputStream)",
      "info" : "MethodDeclaration[4319-5769]:MethodDeclaration[4319-5769]"
    }, {
      "left" : "public static byte[] serialize(Serializable obj)",
      "right" : "public static byte[] serialize(Serializable obj)",
      "info" : "MethodDeclaration[5775-6264]:MethodDeclaration[5775-6264]"
    }, {
      "left" : "public static Object deserialize(InputStream inputStream)",
      "right" : "public static Object deserialize(InputStream inputStream)",
      "info" : "MethodDeclaration[6367-7878]:MethodDeclaration[6367-7878]"
    }, {
      "left" : "public static Object deserialize(byte[] objectData)",
      "right" : "public static Object deserialize(byte[] objectData)",
      "info" : "MethodDeclaration[7884-8530]:MethodDeclaration[7884-8530]"
    }, {
      "left" : "ClassLoaderAwareObjectInputStream",
      "right" : "ClassLoaderAwareObjectInputStream",
      "info" : "TypeDeclaration[8536-10825]:TypeDeclaration[8536-11714]"
    }, {
      "left" : "private ClassLoader classLoader;",
      "right" : "private ClassLoader classLoader;",
      "info" : "FieldDeclaration[9358-9390]:FieldDeclaration[9476-9508]"
    }, {
      "left" : "public ClassLoaderAwareObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException",
      "right" : "public ClassLoaderAwareObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException",
      "info" : "MethodDeclaration[9408-9861]:MethodDeclaration[9526-10459]"
    }, {
      "left" : "protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException",
      "right" : "protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException",
      "info" : "MethodDeclaration[9871-10818]:MethodDeclaration[10469-11707]"
    } ],
    "mappings" : [
 {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[1652-1658]:Modifier[1652-1658]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[1659-1664]:TYPE_DECLARATION_KIND[1659-1664]"
    }, {
      "left" : "SerializationUtils",
      "right" : "SerializationUtils",
      "info" : "SimpleName[1665-1683]:SimpleName[1665-1683]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2021-2027]:Modifier[2021-2027]"
    }, {
      "left" : "SerializationUtils",
      "right" : "SerializationUtils",
      "info" : "SimpleName[2028-2046]:SimpleName[2028-2046]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2049-2073]:Block[2049-2073]"
    }, {
      "left" : "super();",
      "right" : "super();",
      "info" : "SuperConstructorInvocation[2059-2067]:SuperConstructorInvocation[2059-2067]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[2811-2817]:Modifier[2811-2817]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[2818-2824]:Modifier[2818-2824]"
    }, {
      "left" : "T extends Serializable",
      "right" : "T extends Serializable",
      "info" : "TypeParameter[2826-2848]:TypeParameter[2826-2848]"
    }, {
      "left" : "T",
      "right" : "T",
      "info" : "SimpleType[2850-2851]:SimpleType[2850-2851]"
    }, {
      "left" : "clone",
      "right" : "clone",
      "info" : "SimpleName[2852-2857]:SimpleName[2852-2857]"
    }, {
      "left" : "T object",
      "right" : "T object",
      "info" : "SingleVariableDeclaration[2858-2866]:SingleVariableDeclaration[2858-2866]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2868-4218]:Block[2868-4218]"
    }, {
      "left" : "if (object == null)",
      "right" : "if (object == null)",
      "info" : "IfStatement[2878-2934]:IfStatement[2878-2934]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2898-2934]:Block[2898-2934]"
    }, {
      "left" : "return null;",
      "right" : "return null;",
      "info" : "ReturnStatement[2912-2924]:ReturnStatement[2912-2924]"
    }, {
      "left" : "byte[] objectData = serialize(object);",
      "right" : "byte[] objectData = serialize(object);",
      "info" : "VariableDeclarationStatement[2943-2981]:VariableDeclarationStatement[2943-2981]"
    }, {
      "left" : "ByteArrayInputStream bais = new ByteArrayInputStream(objectData);",
      "right" : "ByteArrayInputStream bais = new ByteArrayInputStream(objectData);",
      "info" : "VariableDeclarationStatement[2990-3055]:VariableDeclarationStatement[2990-3055]"
    }, {
      "left" : "ClassLoaderAwareObjectInputStream in = null;",
      "right" : "ClassLoaderAwareObjectInputStream in = null;",
      "info" : "VariableDeclarationStatement[3065-3109]:VariableDeclarationStatement[3065-3109]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3118-4212]:TryStatement[3118-4212]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3122-3637]:Block[3122-3637]"
    }, {
      "left" : "in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",
      "right" : "in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());",
      "info" : "ExpressionStatement[3180-3265]:ExpressionStatement[3180-3265]"
    }, {
      "left" : "@SuppressWarnings(\"unchecked\") // see above\n            T readObject = (T) in.readObject();",
      "right" : "@SuppressWarnings(\"unchecked\") // see above\n            T readObject = (T) in.readObject();",
      "info" : "VariableDeclarationStatement[3504-3595]:VariableDeclarationStatement[3504-3595]"
    }, {
      "left" : "return readObject;",
      "right" : "return readObject;",
      "info" : "ReturnStatement[3608-3626]:ReturnStatement[3608-3626]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3672-3792]:Block[3672-3792]"
    }, {
      "left" : "throw new SerializationException(\"ClassNotFoundException while reading cloned object data\", ex);",
      "right" : "throw new SerializationException(\"ClassNotFoundException while reading cloned object data\", ex);",
      "info" : "ThrowStatement[3686-3782]:ThrowStatement[3686-3782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3816-3925]:Block[3816-3925]"
    }, {
      "left" : "throw new SerializationException(\"IOException while reading cloned object data\", ex);",
      "right" : "throw new SerializationException(\"IOException while reading cloned object data\", ex);",
      "info" : "ThrowStatement[3830-3915]:ThrowStatement[3830-3915]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3934-4212]:Block[3934-4212]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[3948-4202]:TryStatement[3948-4202]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3952-4051]:Block[3952-4051]"
    }, {
      "left" : "if (in != null)",
      "right" : "if (in != null)",
      "info" : "IfStatement[3970-4037]:IfStatement[3970-4037]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3986-4037]:Block[3986-4037]"
    }, {
      "left" : "in.close();",
      "right" : "in.close();",
      "info" : "ExpressionStatement[4008-4019]:ExpressionStatement[4008-4019]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4075-4202]:Block[4075-4202]"
    }, {
      "left" : "throw new SerializationException(\"IOException on closing cloned object data InputStream.\", ex);",
      "right" : "throw new SerializationException(\"IOException on closing cloned object data InputStream.\", ex);",
      "info" : "ThrowStatement[4093-4188]:ThrowStatement[4093-4188]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[5046-5052]:Modifier[5046-5052]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[5053-5059]:Modifier[5053-5059]"
    }, {
      "left" : "void",
      "right" : "void",
      "info" : "PrimitiveType[5060-5064]:PrimitiveType[5060-5064]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[5065-5074]:SimpleName[5065-5074]"
    }, {
      "left" : "Serializable obj",
      "right" : "Serializable obj",
      "info" : "SingleVariableDeclaration[5075-5091]:SingleVariableDeclaration[5075-5091]"
    }, {
      "left" : "OutputStream outputStream",
      "right" : "OutputStream outputStream",
      "info" : "SingleVariableDeclaration[5093-5118]:SingleVariableDeclaration[5093-5118]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5120-5769]:Block[5120-5769]"
    }, {
      "left" : "if (outputStream == null)",
      "right" : "if (outputStream == null)",
      "info" : "IfStatement[5130-5252]:IfStatement[5130-5252]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5156-5252]:Block[5156-5252]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The OutputStream must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The OutputStream must not be null\");",
      "info" : "ThrowStatement[5170-5242]:ThrowStatement[5170-5242]"
    }, {
      "left" : "ObjectOutputStream out = null;",
      "right" : "ObjectOutputStream out = null;",
      "info" : "VariableDeclarationStatement[5261-5291]:VariableDeclarationStatement[5261-5291]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5300-5763]:TryStatement[5300-5763]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5304-5450]:Block[5304-5450]"
    }, {
      "left" : "out = new ObjectOutputStream(outputStream);",
      "right" : "out = new ObjectOutputStream(outputStream);",
      "info" : "ExpressionStatement[5362-5405]:ExpressionStatement[5362-5405]"
    }, {
      "left" : "out.writeObject(obj);",
      "right" : "out.writeObject(obj);",
      "info" : "ExpressionStatement[5418-5439]:ExpressionStatement[5418-5439]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5474-5535]:Block[5474-5535]"
    }, {
      "left" : "throw new SerializationException(ex);",
      "right" : "throw new SerializationException(ex);",
      "info" : "ThrowStatement[5488-5525]:ThrowStatement[5488-5525]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5544-5763]:Block[5544-5763]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[5558-5753]:TryStatement[5558-5753]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5562-5663]:Block[5562-5663]"
    }, {
      "left" : "if (out != null)",
      "right" : "if (out != null)",
      "info" : "IfStatement[5580-5649]:IfStatement[5580-5649]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5597-5649]:Block[5597-5649]"
    }, {
      "left" : "out.close();",
      "right" : "out.close();",
      "info" : "ExpressionStatement[5619-5631]:ExpressionStatement[5619-5631]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5687-5753]:Block[5687-5753]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[6074-6080]:Modifier[6074-6080]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[6081-6087]:Modifier[6081-6087]"
    }, {
      "left" : "byte[]",
      "right" : "byte[]",
      "info" : "ArrayType[6088-6094]:ArrayType[6088-6094]"
    }, {
      "left" : "serialize",
      "right" : "serialize",
      "info" : "SimpleName[6095-6104]:SimpleName[6095-6104]"
    }, {
      "left" : "Serializable obj",
      "right" : "Serializable obj",
      "info" : "SingleVariableDeclaration[6105-6121]:SingleVariableDeclaration[6105-6121]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[6123-6264]:Block[6123-6264]"
    }, {
      "left" : "ByteArrayOutputStream baos = new ByteArrayOutputStream(512);",
      "right" : "ByteArrayOutputStream baos = new ByteArrayOutputStream(512);",
      "info" : "VariableDeclarationStatement[6133-6193]:VariableDeclarationStatement[6133-6193]"
    }, {
      "left" : "serialize(obj, baos);",
      "right" : "serialize(obj, baos);",
      "info" : "ExpressionStatement[6202-6223]:ExpressionStatement[6202-6223]"
    }, {
      "left" : "return baos.toByteArray();",
      "right" : "return baos.toByteArray();",
      "info" : "ReturnStatement[6232-6258]:ReturnStatement[6232-6258]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[7082-7088]:Modifier[7082-7088]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[7089-7095]:Modifier[7089-7095]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[7096-7102]:SimpleType[7096-7102]"
    }, {
      "left" : "deserialize",
      "right" : "deserialize",
      "info" : "SimpleName[7103-7114]:SimpleName[7103-7114]"
    }, {
      "left" : "InputStream inputStream",
      "right" : "InputStream inputStream",
      "info" : "SingleVariableDeclaration[7115-7138]:SingleVariableDeclaration[7115-7138]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7140-7878]:Block[7140-7878]"
    }, {
      "left" : "if (inputStream == null)",
      "right" : "if (inputStream == null)",
      "info" : "IfStatement[7150-7270]:IfStatement[7150-7270]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7175-7270]:Block[7175-7270]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The InputStream must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The InputStream must not be null\");",
      "info" : "ThrowStatement[7189-7260]:ThrowStatement[7189-7260]"
    }, {
      "left" : "ObjectInputStream in = null;",
      "right" : "ObjectInputStream in = null;",
      "info" : "VariableDeclarationStatement[7279-7307]:VariableDeclarationStatement[7279-7307]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7316-7872]:TryStatement[7316-7872]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7320-7465]:Block[7320-7465]"
    }, {
      "left" : "in = new ObjectInputStream(inputStream);",
      "right" : "in = new ObjectInputStream(inputStream);",
      "info" : "ExpressionStatement[7378-7418]:ExpressionStatement[7378-7418]"
    }, {
      "left" : "return in.readObject();",
      "right" : "return in.readObject();",
      "info" : "ReturnStatement[7431-7454]:ReturnStatement[7431-7454]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7500-7561]:Block[7500-7561]"
    }, {
      "left" : "throw new SerializationException(ex);",
      "right" : "throw new SerializationException(ex);",
      "info" : "ThrowStatement[7514-7551]:ThrowStatement[7514-7551]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7585-7646]:Block[7585-7646]"
    }, {
      "left" : "throw new SerializationException(ex);",
      "right" : "throw new SerializationException(ex);",
      "info" : "ThrowStatement[7599-7636]:ThrowStatement[7599-7636]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7655-7872]:Block[7655-7872]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[7669-7862]:TryStatement[7669-7862]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7673-7772]:Block[7673-7772]"
    }, {
      "left" : "if (in != null)",
      "right" : "if (in != null)",
      "info" : "IfStatement[7691-7758]:IfStatement[7691-7758]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7707-7758]:Block[7707-7758]"
    }, {
      "left" : "in.close();",
      "right" : "in.close();",
      "info" : "ExpressionStatement[7729-7740]:ExpressionStatement[7729-7740]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[7796-7862]:Block[7796-7862]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[8240-8246]:Modifier[8240-8246]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[8247-8253]:Modifier[8247-8253]"
    }, {
      "left" : "Object",
      "right" : "Object",
      "info" : "SimpleType[8254-8260]:SimpleType[8254-8260]"
    }, {
      "left" : "deserialize",
      "right" : "deserialize",
      "info" : "SimpleName[8261-8272]:SimpleName[8261-8272]"
    }, {
      "left" : "byte[] objectData",
      "right" : "byte[] objectData",
      "info" : "SingleVariableDeclaration[8273-8290]:SingleVariableDeclaration[8273-8290]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8292-8530]:Block[8292-8530]"
    }, {
      "left" : "if (objectData == null)",
      "right" : "if (objectData == null)",
      "info" : "IfStatement[8302-8416]:IfStatement[8302-8416]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[8326-8416]:Block[8326-8416]"
    }, {
      "left" : "throw new IllegalArgumentException(\"The byte[] must not be null\");",
      "right" : "throw new IllegalArgumentException(\"The byte[] must not be null\");",
      "info" : "ThrowStatement[8340-8406]:ThrowStatement[8340-8406]"
    }, {
      "left" : "ByteArrayInputStream bais = new ByteArrayInputStream(objectData);",
      "right" : "ByteArrayInputStream bais = new ByteArrayInputStream(objectData);",
      "info" : "VariableDeclarationStatement[8425-8490]:VariableDeclarationStatement[8425-8490]"
    }, {
      "left" : "return deserialize(bais);",
      "right" : "return deserialize(bais);",
      "info" : "ReturnStatement[8499-8524]:ReturnStatement[8499-8524]"
    }, {
      "left" : "static",
      "right" : "static",
      "info" : "Modifier[9275-9281]:Modifier[9275-9281]"
    }, {
      "left" : "class",
      "right" : "class",
      "info" : "TYPE_DECLARATION_KIND[9282-9287]:TYPE_DECLARATION_KIND[9282-9287]"
    }, {
      "left" : "ClassLoaderAwareObjectInputStream",
      "right" : "ClassLoaderAwareObjectInputStream",
      "info" : "SimpleName[9288-9321]:SimpleName[9288-9321]"
    }, {
      "left" : "ObjectInputStream",
      "right" : "ObjectInputStream",
      "info" : "SimpleType[9330-9347]:SimpleType[9330-9347]"
    }, {
      "left" : "public",
      "right" : "public",
      "info" : "Modifier[9681-9687]:Modifier[9799-9805]"
    }, {
      "left" : "ClassLoaderAwareObjectInputStream",
      "right" : "ClassLoaderAwareObjectInputStream",
      "info" : "SimpleName[9688-9721]:SimpleName[9806-9839]"
    }, {
      "left" : "InputStream in",
      "right" : "InputStream in",
      "info" : "SingleVariableDeclaration[9722-9736]:SingleVariableDeclaration[9840-9854]"
    }, {
      "left" : "ClassLoader classLoader",
      "right" : "ClassLoader classLoader",
      "info" : "SingleVariableDeclaration[9738-9761]:SingleVariableDeclaration[9856-9879]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[9770-9781]:SimpleType[9888-9899]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[9782-9861]:Block[9900-10459]"
    }, {
      "left" : "super(in);",
      "right" : "super(in);",
      "info" : "SuperConstructorInvocation[9796-9806]:SuperConstructorInvocation[9914-9924]"
    }, {
      "left" : "this.classLoader = classLoader;",
      "right" : "this.classLoader = classLoader;",
      "info" : "ExpressionStatement[9819-9850]:ExpressionStatement[9937-9968]"
    }, {
      "left" : "@Override",
      "right" : "@Override",
      "info" : "MarkerAnnotation[10399-10408]:MarkerAnnotation[10997-11006]"
    }, {
      "left" : "protected",
      "right" : "protected",
      "info" : "Modifier[10417-10426]:Modifier[11015-11024]"
    }, {
      "left" : "Class<?>",
      "right" : "Class<?>",
      "info" : "ParameterizedType[10427-10435]:ParameterizedType[11025-11033]"
    }, {
      "left" : "resolveClass",
      "right" : "resolveClass",
      "info" : "SimpleName[10436-10448]:SimpleName[11034-11046]"
    }, {
      "left" : "ObjectStreamClass desc",
      "right" : "ObjectStreamClass desc",
      "info" : "SingleVariableDeclaration[10449-10471]:SingleVariableDeclaration[11047-11069]"
    }, {
      "left" : "IOException",
      "right" : "IOException",
      "info" : "SimpleType[10480-10491]:SimpleType[11078-11089]"
    }, {
      "left" : "ClassNotFoundException",
      "right" : "ClassNotFoundException",
      "info" : "SimpleType[10493-10515]:SimpleType[11091-11113]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10516-10818]:Block[11114-11707]"
    }, {
      "left" : "String name = desc.getName();",
      "right" : "String name = desc.getName();",
      "info" : "VariableDeclarationStatement[10530-10559]:VariableDeclarationStatement[11128-11157]"
    }, {
      "left" : "try{...}",
      "right" : "try{...}",
      "info" : "TryStatement[10572-10808]:TryStatement[11170-11697]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10576-10655]:Block[11174-11253]"
    }, {
      "left" : "return Class.forName(name, false, classLoader);",
      "right" : "return Class.forName(name, false, classLoader);",
      "info" : "ReturnStatement[10594-10641]:ReturnStatement[11192-11239]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[10690-10808]:Block[11310-11432]"
    }, {
      "left" : "return Class.forName(name, false, Thread.currentThread().getContextClassLoader());",
      "right" : "return Class.forName(name, false, Thread.currentThread().getContextClassLoader());",
      "info" : "ReturnStatement[10712-10794]:ReturnStatement[11332-11414]"
    } ]
  },
  "interFileMappings" : { }
}