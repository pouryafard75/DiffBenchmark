{
  "intraFileMappings" : {
    "matchedElements" : [
 {
      "left" : "Script",
      "right" : "Script",
      "info" : "TypeDeclaration[2088-5181]:TypeDeclaration[2442-12594]"
    }, {
      "left" : "static private final Logger logger = LoggerFactory.getLogger(Script.class);",
      "right" : "static private final Logger logger = LoggerFactory.getLogger(Script.class);",
      "info" : "FieldDeclaration[2336-2411]:FieldDeclaration[2716-2791]"
    }, {
      "left" : "ArrayList<Rule> rules = new ArrayList<Rule>();",
      "right" : "ArrayList<Rule> rules = new ArrayList<Rule>();",
      "info" : "FieldDeclaration[2413-2459]:FieldDeclaration[2793-2839]"
    }, {
      "left" : "private ScriptManager scriptManager;",
      "right" : "private ScriptManager scriptManager;",
      "info" : "FieldDeclaration[2461-2497]:FieldDeclaration[2841-2877]"
    }, {
      "left" : "private ScriptEngine engine;",
      "right" : "private ScriptEngine engine = null;",
      "info" : "FieldDeclaration[2499-2527]:FieldDeclaration[2879-2914]"
    }, {
      "left" : "private String fileName;",
      "right" : "private String fileName;",
      "info" : "FieldDeclaration[2529-2553]:FieldDeclaration[2916-2940]"
    }, {
      "left" : "public Script(ScriptManager scriptManager, File file) throws FileNotFoundException, ScriptException, NoSuchMethodException",
      "right" : "public Script(ScriptManager scriptManager, File file) throws FileNotFoundException, ScriptException, NoSuchMethodException",
      "info" : "MethodDeclaration[2556-2775]:MethodDeclaration[2943-3162]"
    }, {
      "left" : "public void loadScript(File file) throws FileNotFoundException, ScriptException, NoSuchMethodException",
      "right" : "public void loadScript(File file) throws FileNotFoundException, ScriptException, NoSuchMethodException",
      "info" : "MethodDeclaration[2778-3330]:MethodDeclaration[3167-3785]"
    }, {
      "left" : "private void initializeSciptGlobals()",
      "right" : "private void initializeGeneralGlobals()",
      "info" : "MethodDeclaration[3333-4690]:MethodDeclaration[10063-12046]"
    }, {
      "left" : "private String getFileExtension(File file)",
      "right" : "private String getFileExtension(File file)",
      "info" : "MethodDeclaration[4693-4935]:MethodDeclaration[12049-12291]"
    }, {
      "left" : "public List<Rule> getRules()",
      "right" : "public List<Rule> getRules()",
      "info" : "MethodDeclaration[4938-4992]:MethodDeclaration[12294-12348]"
    }, {
      "left" : "public void executeRule(Rule rule, Event event)",
      "right" : "public void executeRule(Rule rule, Event event)",
      "info" : "MethodDeclaration[4995-5125]:MethodDeclaration[12351-12481]"
    }, {
      "left" : "public String getFileName()",
      "right" : "public String getFileName()",
      "info" : "MethodDeclaration[5128-5179]:MethodDeclaration[12484-12535]"
    } ],
    "mappings" : [
 {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2679-2775]:Block[3066-3162]"
    }, {
      "left" : "this.scriptManager = scriptManager;",
      "right" : "this.scriptManager = scriptManager;",
      "info" : "ExpressionStatement[2683-2718]:ExpressionStatement[3070-3105]"
    }, {
      "left" : "this.fileName = file.getName();",
      "right" : "this.fileName = file.getName();",
      "info" : "ExpressionStatement[2721-2752]:ExpressionStatement[3108-3139]"
    }, {
      "left" : "loadScript(file);",
      "right" : "loadScript(file);",
      "info" : "ExpressionStatement[2755-2772]:ExpressionStatement[3142-3159]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[2881-3330]:Block[3270-3785]"
    }, {
      "left" : "logger.info(\"Loading Script \" + file.getName());",
      "right" : "logger.info(\"Loading Script \" + file.getName());",
      "info" : "ExpressionStatement[2885-2933]:ExpressionStatement[3274-3322]"
    }, {
      "left" : "String extension = getFileExtension(file);",
      "right" : "String extension = getFileExtension(file);",
      "info" : "VariableDeclarationStatement[2936-2978]:VariableDeclarationStatement[3325-3367]"
    }, {
      "left" : "ScriptEngineManager factory = new ScriptEngineManager();",
      "right" : "ScriptEngineManager factory = new ScriptEngineManager();",
      "info" : "VariableDeclarationStatement[2982-3038]:VariableDeclarationStatement[3370-3426]"
    }, {
      "left" : "engine = factory.getEngineByExtension(extension);",
      "right" : "engine = factory.getEngineByExtension(extension);",
      "info" : "ExpressionStatement[3042-3091]:ExpressionStatement[3429-3478]"
    }, {
      "left" : "if (engine != null)",
      "right" : "if (engine != null)",
      "info" : "IfStatement[3094-3327]:IfStatement[3481-3782]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3114-3327]:Block[3501-3782]"
    }, {
      "left" : "initializeSciptGlobals();",
      "right" : "initializeSciptGlobals();",
      "info" : "ExpressionStatement[3119-3144]:ExpressionStatement[3576-3601]"
    }, {
      "left" : "engine.eval(new FileReader(file));",
      "right" : "engine.eval(new FileReader(file));",
      "info" : "ExpressionStatement[3148-3182]:ExpressionStatement[3605-3639]"
    }, {
      "left" : "Invocable inv = (Invocable) engine;",
      "right" : "Invocable inv = (Invocable) engine;",
      "info" : "VariableDeclarationStatement[3187-3222]:VariableDeclarationStatement[3643-3678]"
    }, {
      "left" : "RuleSet ruleSet = (RuleSet) inv.invokeFunction(\"getRules\");",
      "right" : "RuleSet ruleSet = (RuleSet) inv.invokeFunction(\"getRules\");",
      "info" : "VariableDeclarationStatement[3226-3285]:VariableDeclarationStatement[3682-3741]"
    }, {
      "left" : "rules.addAll(ruleSet.getRules());",
      "right" : "rules.addAll(ruleSet.getRules());",
      "info" : "ExpressionStatement[3290-3323]:ExpressionStatement[3745-3778]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[3371-4690]:Block[10103-12046]"
    }, {
      "left" : "engine.put(\"RuleSet\", RuleSet.class);",
      "right" : "engine.put(\"RuleSet\", \t\t\t\tRuleSet.class);",
      "info" : "ExpressionStatement[3375-3412]:ExpressionStatement[10107-10148]"
    }, {
      "left" : "engine.put(\"Rule\", Rule.class);",
      "right" : "engine.put(\"Rule\", \t\t\t\t\tRule.class);",
      "info" : "ExpressionStatement[3415-3446]:ExpressionStatement[10151-10187]"
    }, {
      "left" : "engine.put(\"State\", State.class);",
      "right" : "engine.put(\"State\", \t\t\t\tState.class);",
      "info" : "ExpressionStatement[3449-3482]:ExpressionStatement[10880-10917]"
    }, {
      "left" : "engine.put(\"Command\", Command.class);",
      "right" : "engine.put(\"Command\", \t\t\t\tCommand.class);",
      "info" : "ExpressionStatement[3485-3522]:ExpressionStatement[10920-10961]"
    }, {
      "left" : "engine.put(\"ChangedEventTrigger\", ChangedEventTrigger.class);",
      "right" : "engine.put(\"ChangedEventTrigger\", \tChangedEventTrigger.class);",
      "info" : "ExpressionStatement[3525-3586]:ExpressionStatement[10190-10252]"
    }, {
      "left" : "engine.put(\"CommandEventTrigger\", CommandEventTrigger.class);",
      "right" : "engine.put(\"CommandEventTrigger\", \tCommandEventTrigger.class);",
      "info" : "ExpressionStatement[3589-3650]:ExpressionStatement[10255-10317]"
    }, {
      "left" : "engine.put(\"Event\", Event.class);",
      "right" : "engine.put(\"Event\", \t\t\t\tEvent.class);",
      "info" : "ExpressionStatement[3653-3686]:ExpressionStatement[10320-10357]"
    }, {
      "left" : "engine.put(\"EventTrigger\", EventTrigger.class);",
      "right" : "engine.put(\"EventTrigger\", \t\t\tEventTrigger.class);",
      "info" : "ExpressionStatement[3689-3736]:ExpressionStatement[10360-10410]"
    }, {
      "left" : "engine.put(\"ShutdownTrigger\", ShutdownTrigger.class);",
      "right" : "engine.put(\"ShutdownTrigger\", \t\tShutdownTrigger.class);",
      "info" : "ExpressionStatement[3739-3792]:ExpressionStatement[10413-10468]"
    }, {
      "left" : "engine.put(\"StartupTrigger\", StartupTrigger.class);",
      "right" : "engine.put(\"StartupTrigger\", \t\tStartupTrigger.class);",
      "info" : "ExpressionStatement[3795-3846]:ExpressionStatement[10471-10524]"
    }, {
      "left" : "engine.put(\"TimerTrigger\", TimerTrigger.class);",
      "right" : "engine.put(\"TimerTrigger\", \t\t\tTimerTrigger.class);",
      "info" : "ExpressionStatement[3849-3896]:ExpressionStatement[10527-10577]"
    }, {
      "left" : "engine.put(\"TriggerType\", TriggerType.class);",
      "right" : "engine.put(\"TriggerType\", \t\t\tTriggerType.class);",
      "info" : "ExpressionStatement[3899-3944]:ExpressionStatement[10580-10628]"
    }, {
      "left" : "engine.put(\"ItemRegistry\", scriptManager.getItemRegistry());",
      "right" : "engine.put(\"ItemRegistry\", \t\t\tscriptManager.getItemRegistry());",
      "info" : "ExpressionStatement[3947-4007]:ExpressionStatement[10964-11027]"
    }, {
      "left" : "engine.put(\"oh\", Openhab.class);",
      "right" : "engine.put(\"oh\", \t\t\t\t\tOpenhab.class);",
      "info" : "ExpressionStatement[4066-4098]:ExpressionStatement[10840-10877]"
    }, {
      "left" : "engine.put(\"DateTimeType\", DateTimeType.class);",
      "right" : "engine.put(\"DateTimeType\", \t\t\tDateTimeType.class);",
      "info" : "ExpressionStatement[4154-4201]:ExpressionStatement[11479-11529]"
    }, {
      "left" : "engine.put(\"DecimalType\", DecimalType.class);",
      "right" : "engine.put(\"DecimalType\", \t\t\tDecimalType.class);",
      "info" : "ExpressionStatement[4204-4249]:ExpressionStatement[11532-11580]"
    }, {
      "left" : "engine.put(\"HSBType\", HSBType.class);",
      "right" : "engine.put(\"HSBType\", \t\t\t\tHSBType.class);",
      "info" : "ExpressionStatement[4252-4289]:ExpressionStatement[11583-11624]"
    }, {
      "left" : "engine.put(\"IncreaseDecreaseType\", IncreaseDecreaseType.class);",
      "right" : "engine.put(\"IncreaseDecreaseType\", \tIncreaseDecreaseType.class);",
      "info" : "ExpressionStatement[4292-4355]:ExpressionStatement[11627-11691]"
    }, {
      "left" : "engine.put(\"OnOffType\", OnOffType.class);",
      "right" : "engine.put(\"OnOffType\", \t\t\tOnOffType.class);",
      "info" : "ExpressionStatement[4358-4399]:ExpressionStatement[11694-11738]"
    }, {
      "left" : "engine.put(\"OpenClosedType\", OpenClosedType.class);",
      "right" : "engine.put(\"OpenClosedType\", \t\tOpenClosedType.class);",
      "info" : "ExpressionStatement[4402-4453]:ExpressionStatement[11741-11794]"
    }, {
      "left" : "engine.put(\"PercentType\", PercentType.class);",
      "right" : "engine.put(\"PercentType\", \t\t\tPercentType.class);",
      "info" : "ExpressionStatement[4456-4501]:ExpressionStatement[11797-11845]"
    }, {
      "left" : "engine.put(\"PointType\", PointType.class);",
      "right" : "engine.put(\"PointType\", \t\t\tPointType.class);",
      "info" : "ExpressionStatement[4504-4545]:ExpressionStatement[11848-11892]"
    }, {
      "left" : "engine.put(\"StopMoveType\", StopMoveType.class);",
      "right" : "engine.put(\"StopMoveType\", \t\t\tStopMoveType.class);",
      "info" : "ExpressionStatement[4548-4595]:ExpressionStatement[11895-11945]"
    }, {
      "left" : "engine.put(\"UpDownType\", UpDownType.class);",
      "right" : "engine.put(\"UpDownType\", \t\t\tUpDownType.class);",
      "info" : "ExpressionStatement[4598-4641]:ExpressionStatement[11948-11994]"
    }, {
      "left" : "engine.put(\"StringType\", StringType.class);",
      "right" : "engine.put(\"StringType\", \t\t\tStringType.class);",
      "info" : "ExpressionStatement[4644-4687]:ExpressionStatement[11997-12043]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4736-4935]:Block[12092-12291]"
    }, {
      "left" : "String extension = null;",
      "right" : "String extension = null;",
      "info" : "VariableDeclarationStatement[4740-4764]:VariableDeclarationStatement[12096-12120]"
    }, {
      "left" : "if (file.getName().contains(\".\"))",
      "right" : "if (file.getName().contains(\".\"))",
      "info" : "IfStatement[4767-4912]:IfStatement[12123-12268]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4801-4912]:Block[12157-12268]"
    }, {
      "left" : "String name = file.getName();",
      "right" : "String name = file.getName();",
      "info" : "VariableDeclarationStatement[4806-4835]:VariableDeclarationStatement[12162-12191]"
    }, {
      "left" : "extension = name.substring(name.lastIndexOf('.') + 1, name.length());",
      "right" : "extension = name.substring(name.lastIndexOf('.') + 1, name.length());",
      "info" : "ExpressionStatement[4839-4908]:ExpressionStatement[12195-12264]"
    }, {
      "left" : "return extension;",
      "right" : "return extension;",
      "info" : "ReturnStatement[4915-4932]:ReturnStatement[12271-12288]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[4967-4992]:Block[12323-12348]"
    }, {
      "left" : "return this.rules;",
      "right" : "return this.rules;",
      "info" : "ReturnStatement[4971-4989]:ReturnStatement[12327-12345]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5043-5125]:Block[12399-12481]"
    }, {
      "left" : "Thread t = new Thread(new RuleExecutionRunnable(rule, event));",
      "right" : "Thread t = new Thread(new RuleExecutionRunnable(rule, event));",
      "info" : "VariableDeclarationStatement[5047-5109]:VariableDeclarationStatement[12403-12465]"
    }, {
      "left" : "t.start();",
      "right" : "t.start();",
      "info" : "ExpressionStatement[5112-5122]:ExpressionStatement[12468-12478]"
    }, {
      "left" : "{}",
      "right" : "{}",
      "info" : "Block[5156-5179]:Block[12512-12535]"
    }, {
      "left" : "return fileName;",
      "right" : "return fileName;",
      "info" : "ReturnStatement[5160-5176]:ReturnStatement[12516-12532]"
    } ]
  },
  "interFileMappings" : { }
}