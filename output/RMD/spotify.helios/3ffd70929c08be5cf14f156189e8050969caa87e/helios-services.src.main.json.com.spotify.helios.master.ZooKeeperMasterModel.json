{
  "matchedElements" : [ {
    "left" : "class : ZooKeeperMasterModel",
    "right" : "class : ZooKeeperMasterModel",
    "info" : "TypeDeclaration[4659-62820]:TypeDeclaration[4659-63740]"
  }, {
    "left" : "EVENT_COMPARATOR",
    "right" : "EVENT_COMPARATOR",
    "info" : "FieldDeclaration[4772-5215]:FieldDeclaration[4772-5215]"
  }, {
    "left" : "public compare(arg0 , arg1 ) : int",
    "right" : "public compare(arg0 , arg1 ) : int",
    "info" : "MethodDeclaration[4890-5206]:MethodDeclaration[4890-5206]"
  }, {
    "left" : "log",
    "right" : "log",
    "info" : "FieldDeclaration[5219-5305]:FieldDeclaration[5219-5305]"
  }, {
    "left" : "EMPTY_STATUSES",
    "right" : "EMPTY_STATUSES",
    "info" : "FieldDeclaration[5309-5380]:FieldDeclaration[5309-5380]"
  }, {
    "left" : "HOST_INFO_TYPE",
    "right" : "HOST_INFO_TYPE",
    "info" : "FieldDeclaration[5383-5489]:FieldDeclaration[5383-5489]"
  }, {
    "left" : "AGENT_INFO_TYPE",
    "right" : "AGENT_INFO_TYPE",
    "info" : "FieldDeclaration[5492-5601]:FieldDeclaration[5492-5601]"
  }, {
    "left" : "STRING_MAP_TYPE",
    "right" : "STRING_MAP_TYPE",
    "info" : "FieldDeclaration[5604-5733]:FieldDeclaration[5604-5733]"
  }, {
    "left" : "STRING_LIST_TYPE",
    "right" : "STRING_LIST_TYPE",
    "info" : "FieldDeclaration[5736-5852]:FieldDeclaration[5736-5852]"
  }, {
    "left" : "provider",
    "right" : "provider",
    "info" : "FieldDeclaration[5856-5903]:FieldDeclaration[5856-5903]"
  }, {
    "left" : "name",
    "right" : "name",
    "info" : "FieldDeclaration[5906-5932]:FieldDeclaration[5906-5932]"
  }, {
    "left" : "public ZooKeeperMasterModel(provider )",
    "right" : "public ZooKeeperMasterModel(provider )",
    "info" : "MethodDeclaration[5936-6036]:MethodDeclaration[5936-6036]"
  }, {
    "left" : "public ZooKeeperMasterModel(provider , name )",
    "right" : "public ZooKeeperMasterModel(provider , name )",
    "info" : "MethodDeclaration[6040-6194]:MethodDeclaration[6040-6194]"
  }, {
    "left" : "public registerHost(host , id ) : void",
    "right" : "public registerHost(host , id ) : void",
    "info" : "MethodDeclaration[6198-7462]:MethodDeclaration[6198-7462]"
  }, {
    "left" : "public listHosts() : ",
    "right" : "public listHosts() : ",
    "info" : "MethodDeclaration[7466-7956]:MethodDeclaration[7466-7956]"
  }, {
    "left" : "public getRunningMasters() : ",
    "right" : "public getRunningMasters() : ",
    "info" : "MethodDeclaration[7960-8640]:MethodDeclaration[7960-8640]"
  }, {
    "left" : "public deregisterHost(host ) : void",
    "right" : "public deregisterHost(host ) : void",
    "info" : "MethodDeclaration[8644-11570]:MethodDeclaration[8644-11570]"
  }, {
    "left" : "private safeGetChildren(client , path ) : ",
    "right" : "private safeGetChildren(client , path ) : ",
    "info" : "MethodDeclaration[11574-11792]:MethodDeclaration[11574-11792]"
  }, {
    "left" : "private safeListRecursive(client , path ) : ",
    "right" : "private safeListRecursive(client , path ) : ",
    "info" : "MethodDeclaration[11796-12042]:MethodDeclaration[11796-12042]"
  }, {
    "left" : "public addJob(job ) : void",
    "right" : "public addJob(job ) : void",
    "info" : "MethodDeclaration[12046-13574]:MethodDeclaration[12046-13574]"
  }, {
    "left" : "public getJobHistory(jobId ) : ",
    "right" : "public getJobHistory(jobId ) : ",
    "info" : "MethodDeclaration[13578-15116]:MethodDeclaration[13578-15116]"
  }, {
    "left" : "public addDeploymentGroup(deploymentGroup ) : void",
    "right" : "public addDeploymentGroup(deploymentGroup ) : void",
    "info" : "MethodDeclaration[15120-16093]:MethodDeclaration[15120-16093]"
  }, {
    "left" : "public getDeploymentGroup(name ) : ",
    "right" : "public getDeploymentGroup(name ) : ",
    "info" : "MethodDeclaration[16097-16394]:MethodDeclaration[16097-16394]"
  }, {
    "left" : "private getDeploymentGroup(client , name ) : ",
    "right" : "private getDeploymentGroup(client , name ) : ",
    "info" : "MethodDeclaration[16398-16924]:MethodDeclaration[16398-16924]"
  }, {
    "left" : "public removeDeploymentGroup(name ) : void",
    "right" : "public removeDeploymentGroup(name ) : void",
    "info" : "MethodDeclaration[16928-17817]:MethodDeclaration[16928-17817]"
  }, {
    "left" : "public updateDeploymentGroupHosts(name , hosts ) : void",
    "right" : "public updateDeploymentGroupHosts(name , hosts ) : void",
    "info" : "MethodDeclaration[17821-18432]:MethodDeclaration[17821-18432]"
  }, {
    "left" : "public rollingUpdate(deploymentGroup , jobId , options ) : void",
    "right" : "public rollingUpdate(deploymentGroup , jobId , options ) : void",
    "info" : "MethodDeclaration[18436-20151]:MethodDeclaration[18436-20151]"
  }, {
    "left" : "public rollingUpdateStep(deploymentGroup , rolloutPlanner ) : void",
    "right" : "public rollingUpdateStep(deploymentGroup , rolloutPlanner ) : void",
    "info" : "MethodDeclaration[20155-22801]:MethodDeclaration[20155-22801]"
  }, {
    "left" : "private getRolloutOperations(deploymentGroup , status ...) : ",
    "right" : "private getRolloutOperations(deploymentGroup , status ...) : ",
    "info" : "MethodDeclaration[22805-25315]:MethodDeclaration[22805-25315]"
  }, {
    "left" : "private rollingUpdateAwaitRunning(deploymentGroup , host ) : ",
    "right" : "private rollingUpdateAwaitRunning(deploymentGroup , host ) : ",
    "info" : "MethodDeclaration[25319-27691]:MethodDeclaration[25319-27833]"
  }, {
    "left" : "private rollingUpdateDeploy(deploymentGroup , host ) : ",
    "right" : "private rollingUpdateDeploy(deploymentGroup , host ) : ",
    "info" : "MethodDeclaration[27695-28658]:MethodDeclaration[28615-29578]"
  }, {
    "left" : "private rollingUpdateUndeploy(deploymentGroup , host ) : ",
    "right" : "private rollingUpdateUndeploy(deploymentGroup , host ) : ",
    "info" : "MethodDeclaration[28662-30067]:MethodDeclaration[29582-30987]"
  }, {
    "left" : "public stopDeploymentGroup(deploymentGroupName ) : void",
    "right" : "public stopDeploymentGroup(deploymentGroupName ) : void",
    "info" : "MethodDeclaration[30071-31137]:MethodDeclaration[30991-32057]"
  }, {
    "left" : "public getDeploymentGroups() : ",
    "right" : "public getDeploymentGroups() : ",
    "info" : "MethodDeclaration[31141-32466]:MethodDeclaration[32061-33386]"
  }, {
    "left" : "public getDeploymentGroupStatus(name ) : ",
    "right" : "public getDeploymentGroupStatus(name ) : ",
    "info" : "MethodDeclaration[32470-33476]:MethodDeclaration[33390-34396]"
  }, {
    "left" : "public getDeploymentGroupHosts(name ) : ",
    "right" : "public getDeploymentGroupHosts(name ) : ",
    "info" : "MethodDeclaration[33480-34331]:MethodDeclaration[34400-35251]"
  }, {
    "left" : "public getJob(id ) : ",
    "right" : "public getJob(id ) : ",
    "info" : "MethodDeclaration[34335-34629]:MethodDeclaration[35255-35549]"
  }, {
    "left" : "private getJob(client , id ) : ",
    "right" : "private getJob(client , id ) : ",
    "info" : "MethodDeclaration[34634-35092]:MethodDeclaration[35554-36012]"
  }, {
    "left" : "public getJobs() : ",
    "right" : "public getJobs() : ",
    "info" : "MethodDeclaration[35096-36275]:MethodDeclaration[36016-37195]"
  }, {
    "left" : "public getJobStatus(jobId ) : ",
    "right" : "public getJobStatus(jobId ) : ",
    "info" : "MethodDeclaration[36279-37493]:MethodDeclaration[37199-38413]"
  }, {
    "left" : "private listJobHosts(client , jobId ) : ",
    "right" : "private listJobHosts(client , jobId ) : ",
    "info" : "MethodDeclaration[37497-37952]:MethodDeclaration[38417-38872]"
  }, {
    "left" : "public removeJob(jobId ) : ",
    "right" : "public removeJob(jobId ) : ",
    "info" : "MethodDeclaration[37956-38212]:MethodDeclaration[38876-39132]"
  }, {
    "left" : "public removeJob(id , token ) : ",
    "right" : "public removeJob(id , token ) : ",
    "info" : "MethodDeclaration[38216-39905]:MethodDeclaration[39136-40825]"
  }, {
    "left" : "private getJobCreation(client , id ) : ",
    "right" : "private getJobCreation(client , id ) : ",
    "info" : "MethodDeclaration[39909-40336]:MethodDeclaration[40829-41256]"
  }, {
    "left" : "public deployJob(host , job ) : void",
    "right" : "public deployJob(host , job ) : void",
    "info" : "MethodDeclaration[40340-40690]:MethodDeclaration[41260-41610]"
  }, {
    "left" : "public deployJob(host , deployment , token ) : void",
    "right" : "public deployJob(host , deployment , token ) : void",
    "info" : "MethodDeclaration[40694-41285]:MethodDeclaration[41614-42205]"
  }, {
    "left" : "private deployJobRetry(client , host , deployment , count int, token ) : void",
    "right" : "private deployJobRetry(client , host , deployment , count int, token ) : void",
    "info" : "MethodDeclaration[41289-45706]:MethodDeclaration[42209-46626]"
  }, {
    "left" : "private assertJobExists(client , id ) : void",
    "right" : "private assertJobExists(client , id ) : void",
    "info" : "MethodDeclaration[45710-46096]:MethodDeclaration[46630-47016]"
  }, {
    "left" : "private staticPorts(job ) : ",
    "right" : "private staticPorts(job ) : ",
    "info" : "MethodDeclaration[46100-46427]:MethodDeclaration[47020-47347]"
  }, {
    "left" : "public updateDeployment(host , deployment ) : void",
    "right" : "public updateDeployment(host , deployment ) : void",
    "info" : "MethodDeclaration[46431-46724]:MethodDeclaration[47351-47644]"
  }, {
    "left" : "public updateDeployment(host , deployment , token ) : void",
    "right" : "public updateDeployment(host , deployment , token ) : void",
    "info" : "MethodDeclaration[46728-47908]:MethodDeclaration[47648-48828]"
  }, {
    "left" : "private assertHostExists(client , host ) : void",
    "right" : "private assertHostExists(client , host ) : void",
    "info" : "MethodDeclaration[47912-48248]:MethodDeclaration[48832-49168]"
  }, {
    "left" : "private assertTaskExists(client , host , jobId ) : void",
    "right" : "private assertTaskExists(client , host , jobId ) : void",
    "info" : "MethodDeclaration[48252-48625]:MethodDeclaration[49172-49545]"
  }, {
    "left" : "public getDeployment(host , jobId ) : ",
    "right" : "public getDeployment(host , jobId ) : ",
    "info" : "MethodDeclaration[48629-49389]:MethodDeclaration[49549-50309]"
  }, {
    "left" : "public getHostStatus(host ) : ",
    "right" : "public getHostStatus(host ) : ",
    "info" : "MethodDeclaration[49393-50607]:MethodDeclaration[50313-51527]"
  }, {
    "left" : "private tryGetEntity(client , path , type , name ) : ",
    "right" : "private tryGetEntity(client , path , type , name ) : ",
    "info" : "MethodDeclaration[50611-51031]:MethodDeclaration[51531-51951]"
  }, {
    "left" : "private getEnvironment(client , host ) : ",
    "right" : "private getEnvironment(client , host ) : ",
    "info" : "MethodDeclaration[51035-51228]:MethodDeclaration[51955-52148]"
  }, {
    "left" : "private getLabels(client , host ) : ",
    "right" : "private getLabels(client , host ) : ",
    "info" : "MethodDeclaration[51232-51414]:MethodDeclaration[52152-52334]"
  }, {
    "left" : "private getAgentInfo(client , host ) : ",
    "right" : "private getAgentInfo(client , host ) : ",
    "info" : "MethodDeclaration[51418-51600]:MethodDeclaration[52338-52520]"
  }, {
    "left" : "private getHostInfo(client , host ) : ",
    "right" : "private getHostInfo(client , host ) : ",
    "info" : "MethodDeclaration[51604-51777]:MethodDeclaration[52524-52697]"
  }, {
    "left" : "private checkHostUp(client , host ) : boolean",
    "right" : "private checkHostUp(client , host ) : boolean",
    "info" : "MethodDeclaration[51781-52094]:MethodDeclaration[52701-53014]"
  }, {
    "left" : "private getTaskStatuses(client , host ) : ",
    "right" : "private getTaskStatuses(client , host ) : ",
    "info" : "MethodDeclaration[52098-52837]:MethodDeclaration[53018-53757]"
  }, {
    "left" : "private listHostJobs(client , host ) : ",
    "right" : "private listHostJobs(client , host ) : ",
    "info" : "MethodDeclaration[52841-53470]:MethodDeclaration[53761-54390]"
  }, {
    "left" : "private getTaskStatus(client , host , jobId ) : ",
    "right" : "private getTaskStatus(client , host , jobId ) : ",
    "info" : "MethodDeclaration[53474-54071]:MethodDeclaration[54394-54991]"
  }, {
    "left" : "private getTasks(client , host ) : ",
    "right" : "private getTasks(client , host ) : ",
    "info" : "MethodDeclaration[54075-55263]:MethodDeclaration[54995-56183]"
  }, {
    "left" : "public undeployJob(host , jobId ) : ",
    "right" : "public undeployJob(host , jobId ) : ",
    "info" : "MethodDeclaration[55267-55554]:MethodDeclaration[56187-56474]"
  }, {
    "left" : "public undeployJob(host , jobId , token ) : ",
    "right" : "public undeployJob(host , jobId , token ) : ",
    "info" : "MethodDeclaration[55558-57211]:MethodDeclaration[56478-58131]"
  }, {
    "left" : "private getUndeployOperations(client , host , jobId , token ) : ",
    "right" : "private getUndeployOperations(client , host , jobId , token ) : ",
    "info" : "MethodDeclaration[57215-58822]:MethodDeclaration[58135-59742]"
  }, {
    "left" : "private getDeployOperations(client , host , deployment , token ) : ",
    "right" : "private getDeployOperations(client , host , deployment , token ) : ",
    "info" : "MethodDeclaration[58826-60883]:MethodDeclaration[59746-61803]"
  }, {
    "left" : "private verifyToken(token , job ) : void",
    "right" : "private verifyToken(token , job ) : void",
    "info" : "MethodDeclaration[60887-61137]:MethodDeclaration[61807-62057]"
  }, {
    "left" : "class : RollingUpdateTaskResult",
    "right" : "class : RollingUpdateTaskResult",
    "info" : "TypeDeclaration[61141-62818]:TypeDeclaration[62061-63738]"
  }, {
    "left" : "operations",
    "right" : "operations",
    "info" : "FieldDeclaration[61192-61242]:FieldDeclaration[62112-62162]"
  }, {
    "left" : "error",
    "right" : "error",
    "info" : "FieldDeclaration[61247-61277]:FieldDeclaration[62167-62197]"
  }, {
    "left" : "TASK_IN_PROGRESS",
    "right" : "TASK_IN_PROGRESS",
    "info" : "FieldDeclaration[61283-61355]:FieldDeclaration[62203-62275]"
  }, {
    "left" : "TASK_COMPLETE",
    "right" : "TASK_COMPLETE",
    "info" : "FieldDeclaration[61361-61478]:FieldDeclaration[62281-62398]"
  }, {
    "left" : "public equals(o ) : boolean",
    "right" : "public equals(o ) : boolean",
    "info" : "MethodDeclaration[61484-61947]:MethodDeclaration[62404-62867]"
  }, {
    "left" : "public hashCode() : int",
    "right" : "public hashCode() : int",
    "info" : "MethodDeclaration[61953-62153]:MethodDeclaration[62873-63073]"
  }, {
    "left" : "private RollingUpdateTaskResult(operations , error )",
    "right" : "private RollingUpdateTaskResult(operations , error )",
    "info" : "MethodDeclaration[62159-62362]:MethodDeclaration[63079-63282]"
  }, {
    "left" : "public of(operations ...) : ",
    "right" : "public of(operations ...) : ",
    "info" : "MethodDeclaration[62368-62519]:MethodDeclaration[63288-63439]"
  }, {
    "left" : "public error(error ) : ",
    "right" : "public error(error ) : ",
    "info" : "MethodDeclaration[62525-62654]:MethodDeclaration[63445-63574]"
  }, {
    "left" : "public error(error ) : ",
    "right" : "public error(error ) : ",
    "info" : "MethodDeclaration[62660-62814]:MethodDeclaration[63580-63734]"
  } ],
  "mappings" : [ {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[4890-4899]:MarkerAnnotation[4890-4899]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[4908-4914]:Modifier[4908-4914]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[4915-4918]:PrimitiveType[4915-4918]"
  }, {
    "left" : "compare",
    "right" : "compare",
    "info" : "SimpleName[4919-4926]:SimpleName[4919-4926]"
  }, {
    "left" : "TaskStatusEvent arg0",
    "right" : "TaskStatusEvent arg0",
    "info" : "SingleVariableDeclaration[4927-4947]:SingleVariableDeclaration[4927-4947]"
  }, {
    "left" : "TaskStatusEvent arg1",
    "right" : "TaskStatusEvent arg1",
    "info" : "SingleVariableDeclaration[4949-4969]:SingleVariableDeclaration[4949-4969]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[4971-5206]:Block[4971-5206]"
  }, {
    "left" : "if (arg1.getTimestamp() > arg0.getTimestamp())",
    "right" : "if (arg1.getTimestamp() > arg0.getTimestamp())",
    "info" : "IfStatement[4983-5196]:IfStatement[4983-5196]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5030-5066]:Block[5030-5066]"
  }, {
    "left" : "return -1;",
    "right" : "return -1;",
    "info" : "ReturnStatement[5044-5054]:ReturnStatement[5044-5054]"
  }, {
    "left" : "if (arg1.getTimestamp() == arg0.getTimestamp())",
    "right" : "if (arg1.getTimestamp() == arg0.getTimestamp())",
    "info" : "IfStatement[5072-5196]:IfStatement[5072-5196]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5120-5155]:Block[5120-5155]"
  }, {
    "left" : "return 0;",
    "right" : "return 0;",
    "info" : "ReturnStatement[5134-5143]:ReturnStatement[5134-5143]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[5161-5196]:Block[5161-5196]"
  }, {
    "left" : "return 1;",
    "right" : "return 1;",
    "info" : "ReturnStatement[5175-5184]:ReturnStatement[5175-5184]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[5936-5942]:Modifier[5936-5942]"
  }, {
    "left" : "ZooKeeperMasterModel",
    "right" : "ZooKeeperMasterModel",
    "info" : "SimpleName[5944-5964]:SimpleName[5944-5964]"
  }, {
    "left" : "final ZooKeeperClientProvider provider",
    "right" : "final ZooKeeperClientProvider provider",
    "info" : "SingleVariableDeclaration[5965-6003]:SingleVariableDeclaration[5965-6003]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6005-6036]:Block[6005-6036]"
  }, {
    "left" : "this(provider, null);",
    "right" : "this(provider, null);",
    "info" : "ConstructorInvocation[6011-6032]:ConstructorInvocation[6011-6032]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6040-6046]:Modifier[6040-6046]"
  }, {
    "left" : "ZooKeeperMasterModel",
    "right" : "ZooKeeperMasterModel",
    "info" : "SimpleName[6047-6067]:SimpleName[6047-6067]"
  }, {
    "left" : "final ZooKeeperClientProvider provider",
    "right" : "final ZooKeeperClientProvider provider",
    "info" : "SingleVariableDeclaration[6068-6106]:SingleVariableDeclaration[6068-6106]"
  }, {
    "left" : "@Nullable final String name",
    "right" : "@Nullable final String name",
    "info" : "SingleVariableDeclaration[6108-6135]:SingleVariableDeclaration[6108-6135]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6137-6194]:Block[6137-6194]"
  }, {
    "left" : "this.provider = provider;",
    "right" : "this.provider = provider;",
    "info" : "ExpressionStatement[6143-6168]:ExpressionStatement[6143-6168]"
  }, {
    "left" : "this.name = name;",
    "right" : "this.name = name;",
    "info" : "ExpressionStatement[6173-6190]:ExpressionStatement[6173-6190]"
  }, {
    "left" : "/**\n   * Registers a host into ZooKeeper.  The {@code id} is initially generated randomly by the Agent\n   * and persisted on disk.  This way, in the event that you have two agents attempting to register\n   * with the same value of @{code host}, the first one will win.\n   */",
    "right" : "/**\n   * Registers a host into ZooKeeper.  The {@code id} is initially generated randomly by the Agent\n   * and persisted on disk.  This way, in the event that you have two agents attempting to register\n   * with the same value of @{code host}, the first one will win.\n   */",
    "info" : "Javadoc[6198-6472]:Javadoc[6198-6472]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[6475-6484]:MarkerAnnotation[6475-6484]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[6487-6493]:Modifier[6487-6493]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[6494-6498]:PrimitiveType[6494-6498]"
  }, {
    "left" : "registerHost",
    "right" : "registerHost",
    "info" : "SimpleName[6499-6511]:SimpleName[6499-6511]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[6512-6529]:SingleVariableDeclaration[6512-6529]"
  }, {
    "left" : "final String id",
    "right" : "final String id",
    "info" : "SingleVariableDeclaration[6531-6546]:SingleVariableDeclaration[6531-6546]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6548-7462]:Block[6548-7462]"
  }, {
    "left" : "log.info(\"registering host: {}\", host);",
    "right" : "log.info(\"registering host: {}\", host);",
    "info" : "ExpressionStatement[6554-6593]:ExpressionStatement[6554-6593]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"registerHost\");",
    "right" : "final ZooKeeperClient client = provider.get(\"registerHost\");",
    "info" : "VariableDeclarationStatement[6598-6658]:VariableDeclarationStatement[6598-6658]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[6663-7458]:TryStatement[6663-7458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[6667-7347]:Block[6667-7347]"
  }, {
    "left" : "client.ensurePath(Paths.configHost(host));",
    "right" : "client.ensurePath(Paths.configHost(host));",
    "info" : "ExpressionStatement[6954-6996]:ExpressionStatement[6954-6996]"
  }, {
    "left" : "client.ensurePath(Paths.configHostJobs(host));",
    "right" : "client.ensurePath(Paths.configHostJobs(host));",
    "info" : "ExpressionStatement[7003-7049]:ExpressionStatement[7003-7049]"
  }, {
    "left" : "client.ensurePath(Paths.configHostPorts(host));",
    "right" : "client.ensurePath(Paths.configHostPorts(host));",
    "info" : "ExpressionStatement[7056-7103]:ExpressionStatement[7056-7103]"
  }, {
    "left" : "client.ensurePath(Paths.statusHost(host));",
    "right" : "client.ensurePath(Paths.statusHost(host));",
    "info" : "ExpressionStatement[7110-7152]:ExpressionStatement[7110-7152]"
  }, {
    "left" : "client.ensurePath(Paths.statusHostJobs(host));",
    "right" : "client.ensurePath(Paths.statusHostJobs(host));",
    "info" : "ExpressionStatement[7159-7205]:ExpressionStatement[7159-7205]"
  }, {
    "left" : "client.createAndSetData(Paths.configHostId(host), id.getBytes(UTF_8));",
    "right" : "client.createAndSetData(Paths.configHostId(host), id.getBytes(UTF_8));",
    "info" : "ExpressionStatement[7271-7341]:ExpressionStatement[7271-7341]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7368-7458]:Block[7368-7458]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"registering host \" + host + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"registering host \" + host + \" failed\", e);",
    "info" : "ThrowStatement[7376-7452]:ThrowStatement[7376-7452]"
  }, {
    "left" : "/**\n   * Returns a list of the hosts/agents that have been registered.\n   */",
    "right" : "/**\n   * Returns a list of the hosts/agents that have been registered.\n   */",
    "info" : "Javadoc[7466-7542]:Javadoc[7466-7542]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[7545-7554]:MarkerAnnotation[7545-7554]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[7557-7563]:Modifier[7557-7563]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[7564-7576]:ParameterizedType[7564-7576]"
  }, {
    "left" : "listHosts",
    "right" : "listHosts",
    "info" : "SimpleName[7577-7586]:SimpleName[7577-7586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7589-7956]:Block[7589-7956]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[7595-7952]:TryStatement[7595-7952]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7599-7775]:Block[7599-7775]"
  }, {
    "left" : "return provider.get(\"listHosts\").getChildren(Paths.configHosts());",
    "right" : "return provider.get(\"listHosts\").getChildren(Paths.configHosts());",
    "info" : "ReturnStatement[7703-7769]:ReturnStatement[7703-7769]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7818-7851]:Block[7818-7851]"
  }, {
    "left" : "return emptyList();",
    "right" : "return emptyList();",
    "info" : "ReturnStatement[7826-7845]:ReturnStatement[7826-7845]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[7878-7952]:Block[7878-7952]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"listing hosts failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"listing hosts failed\", e);",
    "info" : "ThrowStatement[7886-7946]:ThrowStatement[7886-7946]"
  }, {
    "left" : "/**\n   * Returns a list of the host names of the currently running masters.\n   */",
    "right" : "/**\n   * Returns a list of the host names of the currently running masters.\n   */",
    "info" : "Javadoc[7960-8041]:Javadoc[7960-8041]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8044-8053]:MarkerAnnotation[8044-8053]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8056-8062]:Modifier[8056-8062]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[8063-8075]:ParameterizedType[8063-8075]"
  }, {
    "left" : "getRunningMasters",
    "right" : "getRunningMasters",
    "info" : "SimpleName[8076-8093]:SimpleName[8076-8093]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8096-8640]:Block[8096-8640]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getRunningMasters\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getRunningMasters\");",
    "info" : "VariableDeclarationStatement[8102-8167]:VariableDeclarationStatement[8102-8167]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[8172-8636]:TryStatement[8172-8636]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8176-8533]:Block[8176-8533]"
  }, {
    "left" : "final List<String> masters = client.getChildren(Paths.statusMaster());",
    "right" : "final List<String> masters = client.getChildren(Paths.statusMaster());",
    "info" : "VariableDeclarationStatement[8184-8254]:VariableDeclarationStatement[8184-8254]"
  }, {
    "left" : "final ImmutableList.Builder<String> upMasters = ImmutableList.builder();",
    "right" : "final ImmutableList.Builder<String> upMasters = ImmutableList.builder();",
    "info" : "VariableDeclarationStatement[8261-8333]:VariableDeclarationStatement[8261-8333]"
  }, {
    "left" : "for (final String master : masters)",
    "right" : "for (final String master : masters)",
    "info" : "EnhancedForStatement[8340-8495]:EnhancedForStatement[8340-8495]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8376-8495]:Block[8376-8495]"
  }, {
    "left" : "if (client.exists(Paths.statusMasterUp(master)) != null)",
    "right" : "if (client.exists(Paths.statusMasterUp(master)) != null)",
    "info" : "IfStatement[8386-8487]:IfStatement[8386-8487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8443-8487]:Block[8443-8487]"
  }, {
    "left" : "upMasters.add(master);",
    "right" : "upMasters.add(master);",
    "info" : "ExpressionStatement[8455-8477]:ExpressionStatement[8455-8477]"
  }, {
    "left" : "return upMasters.build();",
    "right" : "return upMasters.build();",
    "info" : "ReturnStatement[8502-8527]:ReturnStatement[8502-8527]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8560-8636]:Block[8560-8636]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"listing masters failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"listing masters failed\", e);",
    "info" : "ThrowStatement[8568-8630]:ThrowStatement[8568-8630]"
  }, {
    "left" : "/**\n   * Undoes the effect of {@link ZooKeeperMasterModel#registerHost(String, String)}.  Cleans up\n   * any leftover host-related things.\n   */",
    "right" : "/**\n   * Undoes the effect of {@link ZooKeeperMasterModel#registerHost(String, String)}.  Cleans up\n   * any leftover host-related things.\n   */",
    "info" : "Javadoc[8644-8788]:Javadoc[8644-8788]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[8791-8800]:MarkerAnnotation[8791-8800]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[8803-8809]:Modifier[8803-8809]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[8810-8814]:PrimitiveType[8810-8814]"
  }, {
    "left" : "deregisterHost",
    "right" : "deregisterHost",
    "info" : "SimpleName[8815-8829]:SimpleName[8815-8829]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[8830-8847]:SingleVariableDeclaration[8830-8847]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[8862-8883]:SimpleType[8862-8883]"
  }, {
    "left" : "HostStillInUseException",
    "right" : "HostStillInUseException",
    "info" : "SimpleType[8885-8908]:SimpleType[8885-8908]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[8909-11570]:Block[8909-11570]"
  }, {
    "left" : "log.info(\"deregistering host: {}\", host);",
    "right" : "log.info(\"deregistering host: {}\", host);",
    "info" : "ExpressionStatement[8915-8956]:ExpressionStatement[8915-8956]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"deregisterHost\");",
    "right" : "final ZooKeeperClient client = provider.get(\"deregisterHost\");",
    "info" : "VariableDeclarationStatement[8961-9023]:VariableDeclarationStatement[8961-9023]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[9070-11566]:TryStatement[9070-11566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9074-11064]:Block[9074-11064]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "right" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[9082-9147]:VariableDeclarationStatement[9082-9147]"
  }, {
    "left" : "final List<JobId> jobs = listHostJobs(client, host);",
    "right" : "final List<JobId> jobs = listHostJobs(client, host);",
    "info" : "VariableDeclarationStatement[9202-9254]:VariableDeclarationStatement[9202-9254]"
  }, {
    "left" : "if (jobs == null)",
    "right" : "if (jobs == null)",
    "info" : "IfStatement[9262-9441]:IfStatement[9262-9441]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9280-9441]:Block[9280-9441]"
  }, {
    "left" : "if (client.exists(Paths.configHost(host)) == null)",
    "right" : "if (client.exists(Paths.configHost(host)) == null)",
    "info" : "IfStatement[9290-9433]:IfStatement[9290-9433]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9341-9433]:Block[9341-9433]"
  }, {
    "left" : "throw new HostNotFoundException(\"host [\" + host + \"] does not exist\");",
    "right" : "throw new HostNotFoundException(\"host [\" + host + \"] does not exist\");",
    "info" : "ThrowStatement[9353-9423]:ThrowStatement[9353-9423]"
  }, {
    "left" : "if (jobs != null)",
    "right" : "if (jobs != null)",
    "info" : "IfStatement[9449-10180]:IfStatement[9449-10180]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9467-10180]:Block[9467-10180]"
  }, {
    "left" : "for (final JobId job : jobs)",
    "right" : "for (final JobId job : jobs)",
    "info" : "EnhancedForStatement[9477-10172]:EnhancedForStatement[9477-10172]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9506-10172]:Block[9506-10172]"
  }, {
    "left" : "final String hostJobPath = Paths.configHostJob(host, job);",
    "right" : "final String hostJobPath = Paths.configHostJob(host, job);",
    "info" : "VariableDeclarationStatement[9518-9576]:VariableDeclarationStatement[9518-9576]"
  }, {
    "left" : "final List<String> nodes = safeListRecursive(client, hostJobPath);",
    "right" : "final List<String> nodes = safeListRecursive(client, hostJobPath);",
    "info" : "VariableDeclarationStatement[9588-9654]:VariableDeclarationStatement[9588-9654]"
  }, {
    "left" : "for (final String node : reverse(nodes))",
    "right" : "for (final String node : reverse(nodes))",
    "info" : "EnhancedForStatement[9665-9761]:EnhancedForStatement[9665-9761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9706-9761]:Block[9706-9761]"
  }, {
    "left" : "operations.add(delete(node));",
    "right" : "operations.add(delete(node));",
    "info" : "ExpressionStatement[9720-9749]:ExpressionStatement[9720-9749]"
  }, {
    "left" : "if (client.exists(Paths.configJobHost(job, host)) != null)",
    "right" : "if (client.exists(Paths.configJobHost(job, host)) != null)",
    "info" : "IfStatement[9772-9912]:IfStatement[9772-9912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[9831-9912]:Block[9831-9912]"
  }, {
    "left" : "operations.add(delete(Paths.configJobHost(job, host)));",
    "right" : "operations.add(delete(Paths.configJobHost(job, host)));",
    "info" : "ExpressionStatement[9845-9900]:ExpressionStatement[9845-9900]"
  }, {
    "left" : "final List<String> history = safeListRecursive(client, Paths.historyJobHost(job, host));",
    "right" : "final List<String> history = safeListRecursive(client, Paths.historyJobHost(job, host));",
    "info" : "VariableDeclarationStatement[9971-10059]:VariableDeclarationStatement[9971-10059]"
  }, {
    "left" : "for (final String s : reverse(history))",
    "right" : "for (final String s : reverse(history))",
    "info" : "EnhancedForStatement[10070-10162]:EnhancedForStatement[10070-10162]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10110-10162]:Block[10110-10162]"
  }, {
    "left" : "operations.add(delete(s));",
    "right" : "operations.add(delete(s));",
    "info" : "ExpressionStatement[10124-10150]:ExpressionStatement[10124-10150]"
  }, {
    "left" : "operations.add(delete(Paths.configHostJobs(host)));",
    "right" : "operations.add(delete(Paths.configHostJobs(host)));",
    "info" : "ExpressionStatement[10187-10238]:ExpressionStatement[10187-10238]"
  }, {
    "left" : "final List<String> nodes = safeListRecursive(client, Paths.statusHost(host));",
    "right" : "final List<String> nodes = safeListRecursive(client, Paths.statusHost(host));",
    "info" : "VariableDeclarationStatement[10278-10355]:VariableDeclarationStatement[10278-10355]"
  }, {
    "left" : "for (final String node : reverse(nodes))",
    "right" : "for (final String node : reverse(nodes))",
    "info" : "EnhancedForStatement[10362-10450]:EnhancedForStatement[10362-10450]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10403-10450]:Block[10403-10450]"
  }, {
    "left" : "operations.add(delete(node));",
    "right" : "operations.add(delete(node));",
    "info" : "ExpressionStatement[10413-10442]:ExpressionStatement[10413-10442]"
  }, {
    "left" : "final List<String> ports = safeGetChildren(client, Paths.configHostPorts(host));",
    "right" : "final List<String> ports = safeGetChildren(client, Paths.configHostPorts(host));",
    "info" : "VariableDeclarationStatement[10491-10571]:VariableDeclarationStatement[10491-10571]"
  }, {
    "left" : "for (final String port : ports)",
    "right" : "for (final String port : ports)",
    "info" : "EnhancedForStatement[10578-10702]:EnhancedForStatement[10578-10702]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10610-10702]:Block[10610-10702]"
  }, {
    "left" : "operations.add(delete(Paths.configHostPort(host, Integer.valueOf(port))));",
    "right" : "operations.add(delete(Paths.configHostPort(host, Integer.valueOf(port))));",
    "info" : "ExpressionStatement[10620-10694]:ExpressionStatement[10620-10694]"
  }, {
    "left" : "operations.add(delete(Paths.configHostPorts(host)));",
    "right" : "operations.add(delete(Paths.configHostPorts(host)));",
    "info" : "ExpressionStatement[10709-10761]:ExpressionStatement[10709-10761]"
  }, {
    "left" : "final String idPath = Paths.configHostId(host);",
    "right" : "final String idPath = Paths.configHostId(host);",
    "info" : "VariableDeclarationStatement[10793-10840]:VariableDeclarationStatement[10793-10840]"
  }, {
    "left" : "if (client.exists(idPath) != null)",
    "right" : "if (client.exists(idPath) != null)",
    "info" : "IfStatement[10847-10931]:IfStatement[10847-10931]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[10882-10931]:Block[10882-10931]"
  }, {
    "left" : "operations.add(delete(idPath));",
    "right" : "operations.add(delete(idPath));",
    "info" : "ExpressionStatement[10892-10923]:ExpressionStatement[10892-10923]"
  }, {
    "left" : "operations.add(delete(Paths.configHost(host)));",
    "right" : "operations.add(delete(Paths.configHost(host)));",
    "info" : "ExpressionStatement[10972-11019]:ExpressionStatement[10972-11019]"
  }, {
    "left" : "client.transaction(operations);",
    "right" : "client.transaction(operations);",
    "info" : "ExpressionStatement[11027-11058]:ExpressionStatement[11027-11058]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11093-11410]:Block[11093-11410]"
  }, {
    "left" : "final HostStatus hostStatus = getHostStatus(host);",
    "right" : "final HostStatus hostStatus = getHostStatus(host);",
    "info" : "VariableDeclarationStatement[11101-11151]:VariableDeclarationStatement[11101-11151]"
  }, {
    "left" : "final List<JobId> jobs = hostStatus != null\n                               ? ImmutableList.copyOf(hostStatus.getJobs().keySet())\n                               : Collections.<JobId>emptyList();",
    "right" : "final List<JobId> jobs = hostStatus != null\n                               ? ImmutableList.copyOf(hostStatus.getJobs().keySet())\n                               : Collections.<JobId>emptyList();",
    "info" : "VariableDeclarationStatement[11158-11351]:VariableDeclarationStatement[11158-11351]"
  }, {
    "left" : "throw new HostStillInUseException(host, jobs);",
    "right" : "throw new HostStillInUseException(host, jobs);",
    "info" : "ThrowStatement[11358-11404]:ThrowStatement[11358-11404]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11437-11489]:Block[11437-11489]"
  }, {
    "left" : "throw new HostNotFoundException(host);",
    "right" : "throw new HostNotFoundException(host);",
    "info" : "ThrowStatement[11445-11483]:ThrowStatement[11445-11483]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11516-11566]:Block[11516-11566]"
  }, {
    "left" : "throw new HeliosRuntimeException(e);",
    "right" : "throw new HeliosRuntimeException(e);",
    "info" : "ThrowStatement[11524-11560]:ThrowStatement[11524-11560]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11574-11581]:Modifier[11574-11581]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[11582-11594]:ParameterizedType[11582-11594]"
  }, {
    "left" : "safeGetChildren",
    "right" : "safeGetChildren",
    "info" : "SimpleName[11595-11610]:SimpleName[11595-11610]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[11611-11639]:SingleVariableDeclaration[11611-11639]"
  }, {
    "left" : "final String path",
    "right" : "final String path",
    "info" : "SingleVariableDeclaration[11641-11658]:SingleVariableDeclaration[11641-11658]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11660-11792]:Block[11660-11792]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11666-11788]:TryStatement[11666-11788]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11670-11716]:Block[11670-11716]"
  }, {
    "left" : "return client.getChildren(path);",
    "right" : "return client.getChildren(path);",
    "info" : "ReturnStatement[11678-11710]:ReturnStatement[11678-11710]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11748-11788]:Block[11748-11788]"
  }, {
    "left" : "return ImmutableList.of();",
    "right" : "return ImmutableList.of();",
    "info" : "ReturnStatement[11756-11782]:ReturnStatement[11756-11782]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[11796-11803]:Modifier[11796-11803]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[11804-11816]:ParameterizedType[11804-11816]"
  }, {
    "left" : "safeListRecursive",
    "right" : "safeListRecursive",
    "info" : "SimpleName[11817-11834]:SimpleName[11817-11834]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[11835-11863]:SingleVariableDeclaration[11835-11863]"
  }, {
    "left" : "final String path",
    "right" : "final String path",
    "info" : "SingleVariableDeclaration[11865-11882]:SingleVariableDeclaration[11865-11882]"
  }, {
    "left" : "KeeperException",
    "right" : "KeeperException",
    "info" : "SimpleType[11897-11912]:SimpleType[11897-11912]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11913-12042]:Block[11913-12042]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[11919-12038]:TryStatement[11919-12038]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11923-11971]:Block[11923-11971]"
  }, {
    "left" : "return client.listRecursive(path);",
    "right" : "return client.listRecursive(path);",
    "info" : "ReturnStatement[11931-11965]:ReturnStatement[11931-11965]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[11998-12038]:Block[11998-12038]"
  }, {
    "left" : "return ImmutableList.of();",
    "right" : "return ImmutableList.of();",
    "info" : "ReturnStatement[12006-12032]:ReturnStatement[12006-12032]"
  }, {
    "left" : "/**\n   * Adds a job into the configuration.\n   */",
    "right" : "/**\n   * Adds a job into the configuration.\n   */",
    "info" : "Javadoc[12046-12095]:Javadoc[12046-12095]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[12098-12107]:MarkerAnnotation[12098-12107]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[12110-12116]:Modifier[12110-12116]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[12117-12121]:PrimitiveType[12117-12121]"
  }, {
    "left" : "addJob",
    "right" : "addJob",
    "info" : "SimpleName[12122-12128]:SimpleName[12122-12128]"
  }, {
    "left" : "final Job job",
    "right" : "final Job job",
    "info" : "SingleVariableDeclaration[12129-12142]:SingleVariableDeclaration[12129-12142]"
  }, {
    "left" : "JobExistsException",
    "right" : "JobExistsException",
    "info" : "SimpleType[12151-12169]:SimpleType[12151-12169]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12170-13574]:Block[12170-13574]"
  }, {
    "left" : "log.info(\"adding job: {}\", job);",
    "right" : "log.info(\"adding job: {}\", job);",
    "info" : "ExpressionStatement[12176-12208]:ExpressionStatement[12176-12208]"
  }, {
    "left" : "final JobId id = job.getId();",
    "right" : "final JobId id = job.getId();",
    "info" : "VariableDeclarationStatement[12213-12242]:VariableDeclarationStatement[12213-12242]"
  }, {
    "left" : "final UUID operationId = UUID.randomUUID();",
    "right" : "final UUID operationId = UUID.randomUUID();",
    "info" : "VariableDeclarationStatement[12247-12290]:VariableDeclarationStatement[12247-12290]"
  }, {
    "left" : "final String creationPath = Paths.configJobCreation(id, operationId);",
    "right" : "final String creationPath = Paths.configJobCreation(id, operationId);",
    "info" : "VariableDeclarationStatement[12295-12364]:VariableDeclarationStatement[12295-12364]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"addJob\");",
    "right" : "final ZooKeeperClient client = provider.get(\"addJob\");",
    "info" : "VariableDeclarationStatement[12369-12423]:VariableDeclarationStatement[12369-12423]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[12428-13570]:TryStatement[12428-13570]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12432-13266]:Block[12432-13266]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[12440-13260]:TryStatement[12440-13260]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[12444-13032]:Block[12444-13032]"
  }, {
    "left" : "client.ensurePath(Paths.historyJob(id));",
    "right" : "client.ensurePath(Paths.historyJob(id));",
    "info" : "ExpressionStatement[12454-12494]:ExpressionStatement[12454-12494]"
  }, {
    "left" : "client.transaction(create(Paths.configJob(id), job),\n                           create(Paths.configJobRefShort(id), id),\n                           create(Paths.configJobHosts(id)),\n                           create(creationPath),\n                           // Touch the jobs root node so that its version is bumped on every job\n                           // change down the tree. Effectively, make it that version == cVersion.\n                           set(Paths.configJobs(), UUID.randomUUID().toString().getBytes()));",
    "right" : "client.transaction(create(Paths.configJob(id), job),\n                           create(Paths.configJobRefShort(id), id),\n                           create(Paths.configJobHosts(id)),\n                           create(creationPath),\n                           // Touch the jobs root node so that its version is bumped on every job\n                           // change down the tree. Effectively, make it that version == cVersion.\n                           set(Paths.configJobs(), UUID.randomUUID().toString().getBytes()));",
    "info" : "ExpressionStatement[12503-13024]:ExpressionStatement[12503-13024]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13069-13260]:Block[13069-13260]"
  }, {
    "left" : "if (client.exists(creationPath) != null)",
    "right" : "if (client.exists(creationPath) != null)",
    "info" : "IfStatement[13079-13199]:IfStatement[13079-13199]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13120-13199]:Block[13120-13199]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[13182-13189]:ReturnStatement[13182-13189]"
  }, {
    "left" : "throw new JobExistsException(id.toString());",
    "right" : "throw new JobExistsException(id.toString());",
    "info" : "ThrowStatement[13208-13252]:ThrowStatement[13208-13252]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13293-13454]:Block[13293-13454]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"adding job \" + job + \" failed due to missing ZK path: \" +\n                                       e.getPath(), e);",
    "right" : "throw new HeliosRuntimeException(\"adding job \" + job + \" failed due to missing ZK path: \" +\n                                       e.getPath(), e);",
    "info" : "ThrowStatement[13301-13448]:ThrowStatement[13301-13448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13487-13570]:Block[13487-13570]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"adding job \" + job + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"adding job \" + job + \" failed\", e);",
    "info" : "ThrowStatement[13495-13564]:ThrowStatement[13495-13564]"
  }, {
    "left" : "/**\n   * Given a jobId, returns the N most recent events in it's history in the cluster.\n   */",
    "right" : "/**\n   * Given a jobId, returns the N most recent events in it's history in the cluster.\n   */",
    "info" : "Javadoc[13578-13672]:Javadoc[13578-13672]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[13675-13684]:MarkerAnnotation[13675-13684]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[13687-13693]:Modifier[13687-13693]"
  }, {
    "left" : "List<TaskStatusEvent>",
    "right" : "List<TaskStatusEvent>",
    "info" : "ParameterizedType[13694-13715]:ParameterizedType[13694-13715]"
  }, {
    "left" : "getJobHistory",
    "right" : "getJobHistory",
    "info" : "SimpleName[13716-13729]:SimpleName[13716-13729]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[13730-13747]:SingleVariableDeclaration[13730-13747]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[13756-13780]:SimpleType[13756-13780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13781-15116]:Block[13781-15116]"
  }, {
    "left" : "final Job descriptor = getJob(jobId);",
    "right" : "final Job descriptor = getJob(jobId);",
    "info" : "VariableDeclarationStatement[13787-13824]:VariableDeclarationStatement[13787-13824]"
  }, {
    "left" : "if (descriptor == null)",
    "right" : "if (descriptor == null)",
    "info" : "IfStatement[13829-13909]:IfStatement[13829-13909]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[13853-13909]:Block[13853-13909]"
  }, {
    "left" : "throw new JobDoesNotExistException(jobId);",
    "right" : "throw new JobDoesNotExistException(jobId);",
    "info" : "ThrowStatement[13861-13903]:ThrowStatement[13861-13903]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getJobHistory\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getJobHistory\");",
    "info" : "VariableDeclarationStatement[13914-13975]:VariableDeclarationStatement[13914-13975]"
  }, {
    "left" : "final List<String> hosts;",
    "right" : "final List<String> hosts;",
    "info" : "VariableDeclarationStatement[13980-14005]:VariableDeclarationStatement[13980-14005]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[14010-14216]:TryStatement[14010-14216]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14014-14085]:Block[14014-14085]"
  }, {
    "left" : "hosts = client.getChildren(Paths.historyJobHosts(jobId));",
    "right" : "hosts = client.getChildren(Paths.historyJobHosts(jobId));",
    "info" : "ExpressionStatement[14022-14079]:ExpressionStatement[14022-14079]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14112-14145]:Block[14112-14145]"
  }, {
    "left" : "return emptyList();",
    "right" : "return emptyList();",
    "info" : "ReturnStatement[14120-14139]:ReturnStatement[14120-14139]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14172-14216]:Block[14172-14216]"
  }, {
    "left" : "throw Throwables.propagate(e);",
    "right" : "throw Throwables.propagate(e);",
    "info" : "ThrowStatement[14180-14210]:ThrowStatement[14180-14210]"
  }, {
    "left" : "final List<TaskStatusEvent> jsEvents = Lists.newArrayList();",
    "right" : "final List<TaskStatusEvent> jsEvents = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[14222-14282]:VariableDeclarationStatement[14222-14282]"
  }, {
    "left" : "for (String host : hosts)",
    "right" : "for (String host : hosts)",
    "info" : "EnhancedForStatement[14288-15046]:EnhancedForStatement[14288-15046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14314-15046]:Block[14314-15046]"
  }, {
    "left" : "final List<String> events;",
    "right" : "final List<String> events;",
    "info" : "VariableDeclarationStatement[14322-14348]:VariableDeclarationStatement[14322-14348]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[14355-14521]:TryStatement[14355-14521]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14359-14446]:Block[14359-14446]"
  }, {
    "left" : "events = client.getChildren(Paths.historyJobHostEvents(jobId, host));",
    "right" : "events = client.getChildren(Paths.historyJobHostEvents(jobId, host));",
    "info" : "ExpressionStatement[14369-14438]:ExpressionStatement[14369-14438]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14473-14521]:Block[14473-14521]"
  }, {
    "left" : "throw Throwables.propagate(e);",
    "right" : "throw Throwables.propagate(e);",
    "info" : "ThrowStatement[14483-14513]:ThrowStatement[14483-14513]"
  }, {
    "left" : "for (String event : events)",
    "right" : "for (String event : events)",
    "info" : "EnhancedForStatement[14529-15040]:EnhancedForStatement[14529-15040]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14557-15040]:Block[14557-15040]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[14567-15032]:TryStatement[14567-15032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14571-14859]:Block[14571-14859]"
  }, {
    "left" : "byte[] data = client.getData(Paths.historyJobHostEventsTimestamp(\n              jobId, host, Long.valueOf(event)));",
    "right" : "byte[] data = client.getData(Paths.historyJobHostEventsTimestamp(\n              jobId, host, Long.valueOf(event)));",
    "info" : "VariableDeclarationStatement[14583-14698]:VariableDeclarationStatement[14583-14698]"
  }, {
    "left" : "final TaskStatus status = Json.read(data, TaskStatus.class);",
    "right" : "final TaskStatus status = Json.read(data, TaskStatus.class);",
    "info" : "VariableDeclarationStatement[14709-14769]:VariableDeclarationStatement[14709-14769]"
  }, {
    "left" : "jsEvents.add(new TaskStatusEvent(status, Long.valueOf(event), host));",
    "right" : "jsEvents.add(new TaskStatusEvent(status, Long.valueOf(event), host));",
    "info" : "ExpressionStatement[14780-14849]:ExpressionStatement[14780-14849]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14886-14939]:Block[14886-14939]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[14980-15032]:Block[14980-15032]"
  }, {
    "left" : "throw Throwables.propagate(e);",
    "right" : "throw Throwables.propagate(e);",
    "info" : "ThrowStatement[14992-15022]:ThrowStatement[14992-15022]"
  }, {
    "left" : "return Ordering.from(EVENT_COMPARATOR).sortedCopy(jsEvents);",
    "right" : "return Ordering.from(EVENT_COMPARATOR).sortedCopy(jsEvents);",
    "info" : "ReturnStatement[15052-15112]:ReturnStatement[15052-15112]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[15120-15129]:MarkerAnnotation[15120-15129]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[15132-15138]:Modifier[15132-15138]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[15139-15143]:PrimitiveType[15139-15143]"
  }, {
    "left" : "addDeploymentGroup",
    "right" : "addDeploymentGroup",
    "info" : "SimpleName[15144-15162]:SimpleName[15144-15162]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup",
    "right" : "final DeploymentGroup deploymentGroup",
    "info" : "SingleVariableDeclaration[15163-15200]:SingleVariableDeclaration[15163-15200]"
  }, {
    "left" : "DeploymentGroupExistsException",
    "right" : "DeploymentGroupExistsException",
    "info" : "SimpleType[15215-15245]:SimpleType[15215-15245]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15246-16093]:Block[15246-16093]"
  }, {
    "left" : "log.info(\"adding deployment-group: {}\", deploymentGroup);",
    "right" : "log.info(\"adding deployment-group: {}\", deploymentGroup);",
    "info" : "ExpressionStatement[15252-15309]:ExpressionStatement[15252-15309]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"addDeploymentGroup\");",
    "right" : "final ZooKeeperClient client = provider.get(\"addDeploymentGroup\");",
    "info" : "VariableDeclarationStatement[15314-15380]:VariableDeclarationStatement[15314-15380]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[15386-16089]:TryStatement[15386-16089]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15390-15948]:Block[15390-15948]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[15398-15942]:TryStatement[15398-15942]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15402-15819]:Block[15402-15819]"
  }, {
    "left" : "client.ensurePath(Paths.configDeploymentGroups());",
    "right" : "client.ensurePath(Paths.configDeploymentGroups());",
    "info" : "ExpressionStatement[15412-15462]:ExpressionStatement[15412-15462]"
  }, {
    "left" : "client.ensurePath(Paths.statusDeploymentGroups());",
    "right" : "client.ensurePath(Paths.statusDeploymentGroups());",
    "info" : "ExpressionStatement[15471-15521]:ExpressionStatement[15471-15521]"
  }, {
    "left" : "client.transaction(\n            create(Paths.configDeploymentGroup(deploymentGroup.getName()), deploymentGroup),\n            create(Paths.statusDeploymentGroup(deploymentGroup.getName())),\n            create(Paths.statusDeploymentGroupHosts(deploymentGroup.getName()))\n          );",
    "right" : "client.transaction(\n            create(Paths.configDeploymentGroup(deploymentGroup.getName()), deploymentGroup),\n            create(Paths.statusDeploymentGroup(deploymentGroup.getName())),\n            create(Paths.statusDeploymentGroupHosts(deploymentGroup.getName()))\n          );",
    "info" : "ExpressionStatement[15530-15811]:ExpressionStatement[15530-15811]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15856-15942]:Block[15856-15942]"
  }, {
    "left" : "throw new DeploymentGroupExistsException(deploymentGroup.getName());",
    "right" : "throw new DeploymentGroupExistsException(deploymentGroup.getName());",
    "info" : "ThrowStatement[15866-15934]:ThrowStatement[15866-15934]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[15981-16089]:Block[15981-16089]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"adding deployment-group \" + deploymentGroup + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"adding deployment-group \" + deploymentGroup + \" failed\", e);",
    "info" : "ThrowStatement[15989-16083]:ThrowStatement[15989-16083]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16097-16106]:MarkerAnnotation[16097-16106]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16109-16115]:Modifier[16109-16115]"
  }, {
    "left" : "DeploymentGroup",
    "right" : "DeploymentGroup",
    "info" : "SimpleType[16116-16131]:SimpleType[16116-16131]"
  }, {
    "left" : "getDeploymentGroup",
    "right" : "getDeploymentGroup",
    "info" : "SimpleName[16132-16150]:SimpleName[16132-16150]"
  }, {
    "left" : "final String name",
    "right" : "final String name",
    "info" : "SingleVariableDeclaration[16151-16168]:SingleVariableDeclaration[16151-16168]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[16183-16219]:SimpleType[16183-16219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16220-16394]:Block[16220-16394]"
  }, {
    "left" : "log.debug(\"getting deployment-group: {}\", name);",
    "right" : "log.debug(\"getting deployment-group: {}\", name);",
    "info" : "ExpressionStatement[16226-16274]:ExpressionStatement[16226-16274]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroup\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroup\");",
    "info" : "VariableDeclarationStatement[16279-16345]:VariableDeclarationStatement[16279-16345]"
  }, {
    "left" : "return getDeploymentGroup(client, name);",
    "right" : "return getDeploymentGroup(client, name);",
    "info" : "ReturnStatement[16350-16390]:ReturnStatement[16350-16390]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[16398-16405]:Modifier[16398-16405]"
  }, {
    "left" : "DeploymentGroup",
    "right" : "DeploymentGroup",
    "info" : "SimpleType[16406-16421]:SimpleType[16406-16421]"
  }, {
    "left" : "getDeploymentGroup",
    "right" : "getDeploymentGroup",
    "info" : "SimpleName[16422-16440]:SimpleName[16422-16440]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[16441-16469]:SingleVariableDeclaration[16441-16469]"
  }, {
    "left" : "final String name",
    "right" : "final String name",
    "info" : "SingleVariableDeclaration[16471-16488]:SingleVariableDeclaration[16471-16488]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[16503-16539]:SimpleType[16503-16539]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16540-16924]:Block[16540-16924]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[16546-16920]:TryStatement[16546-16920]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16550-16687]:Block[16550-16687]"
  }, {
    "left" : "final byte[] data = client.getData(Paths.configDeploymentGroup(name));",
    "right" : "final byte[] data = client.getData(Paths.configDeploymentGroup(name));",
    "info" : "VariableDeclarationStatement[16558-16628]:VariableDeclarationStatement[16558-16628]"
  }, {
    "left" : "return Json.read(data, DeploymentGroup.class);",
    "right" : "return Json.read(data, DeploymentGroup.class);",
    "info" : "ReturnStatement[16635-16681]:ReturnStatement[16635-16681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16714-16781]:Block[16714-16781]"
  }, {
    "left" : "throw new DeploymentGroupDoesNotExistException(name);",
    "right" : "throw new DeploymentGroupDoesNotExistException(name);",
    "info" : "ThrowStatement[16722-16775]:ThrowStatement[16722-16775]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[16822-16920]:Block[16822-16920]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting deployment-group \" + name + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting deployment-group \" + name + \" failed\", e);",
    "info" : "ThrowStatement[16830-16914]:ThrowStatement[16830-16914]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[16928-16937]:MarkerAnnotation[16928-16937]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[16940-16946]:Modifier[16940-16946]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[16947-16951]:PrimitiveType[16947-16951]"
  }, {
    "left" : "removeDeploymentGroup",
    "right" : "removeDeploymentGroup",
    "info" : "SimpleName[16952-16973]:SimpleName[16952-16973]"
  }, {
    "left" : "final String name",
    "right" : "final String name",
    "info" : "SingleVariableDeclaration[16974-16991]:SingleVariableDeclaration[16974-16991]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[17000-17036]:SimpleType[17000-17036]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17037-17817]:Block[17037-17817]"
  }, {
    "left" : "log.info(\"removing deployment-group: name={}\", name);",
    "right" : "log.info(\"removing deployment-group: name={}\", name);",
    "info" : "ExpressionStatement[17043-17096]:ExpressionStatement[17043-17096]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"removeDeploymentGroup\");",
    "right" : "final ZooKeeperClient client = provider.get(\"removeDeploymentGroup\");",
    "info" : "VariableDeclarationStatement[17101-17170]:VariableDeclarationStatement[17101-17170]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[17175-17813]:TryStatement[17175-17813]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17179-17581]:Block[17179-17581]"
  }, {
    "left" : "client.ensurePath(Paths.configDeploymentGroups());",
    "right" : "client.ensurePath(Paths.configDeploymentGroups());",
    "info" : "ExpressionStatement[17187-17237]:ExpressionStatement[17187-17237]"
  }, {
    "left" : "client.delete(Paths.configDeploymentGroup(name));",
    "right" : "client.delete(Paths.configDeploymentGroup(name));",
    "info" : "ExpressionStatement[17244-17293]:ExpressionStatement[17244-17293]"
  }, {
    "left" : "if (client.exists(Paths.statusDeploymentGroupHosts(name)) != null)",
    "right" : "if (client.exists(Paths.statusDeploymentGroupHosts(name)) != null)",
    "info" : "IfStatement[17300-17439]:IfStatement[17300-17439]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17367-17439]:Block[17367-17439]"
  }, {
    "left" : "client.delete(Paths.statusDeploymentGroupHosts(name));",
    "right" : "client.delete(Paths.statusDeploymentGroupHosts(name));",
    "info" : "ExpressionStatement[17377-17431]:ExpressionStatement[17377-17431]"
  }, {
    "left" : "if (client.exists(Paths.statusDeploymentGroup(name)) != null)",
    "right" : "if (client.exists(Paths.statusDeploymentGroup(name)) != null)",
    "info" : "IfStatement[17446-17575]:IfStatement[17446-17575]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17508-17575]:Block[17508-17575]"
  }, {
    "left" : "client.delete(Paths.statusDeploymentGroup(name));",
    "right" : "client.delete(Paths.statusDeploymentGroup(name));",
    "info" : "ExpressionStatement[17518-17567]:ExpressionStatement[17518-17567]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17614-17681]:Block[17614-17681]"
  }, {
    "left" : "throw new DeploymentGroupDoesNotExistException(name);",
    "right" : "throw new DeploymentGroupDoesNotExistException(name);",
    "info" : "ThrowStatement[17622-17675]:ThrowStatement[17622-17675]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17714-17813]:Block[17714-17813]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"removing deployment-group \" + name + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"removing deployment-group \" + name + \" failed\", e);",
    "info" : "ThrowStatement[17722-17807]:ThrowStatement[17722-17807]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[17821-17830]:MarkerAnnotation[17821-17830]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[17833-17839]:Modifier[17833-17839]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[17840-17844]:PrimitiveType[17840-17844]"
  }, {
    "left" : "updateDeploymentGroupHosts",
    "right" : "updateDeploymentGroupHosts",
    "info" : "SimpleName[17845-17871]:SimpleName[17845-17871]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[17872-17883]:SingleVariableDeclaration[17872-17883]"
  }, {
    "left" : "List<String> hosts",
    "right" : "List<String> hosts",
    "info" : "SingleVariableDeclaration[17885-17903]:SingleVariableDeclaration[17885-17903]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[17918-17954]:SimpleType[17918-17954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[17955-18432]:Block[17955-18432]"
  }, {
    "left" : "log.info(\"updating deployment-group hosts: name={}\", name);",
    "right" : "log.info(\"updating deployment-group hosts: name={}\", name);",
    "info" : "ExpressionStatement[17961-18020]:ExpressionStatement[17961-18020]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"updateDeploymentGroupHosts\");",
    "right" : "final ZooKeeperClient client = provider.get(\"updateDeploymentGroupHosts\");",
    "info" : "VariableDeclarationStatement[18025-18099]:VariableDeclarationStatement[18025-18099]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[18104-18428]:TryStatement[18104-18428]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18108-18198]:Block[18108-18198]"
  }, {
    "left" : "client.setData(Paths.statusDeploymentGroupHosts(name), Json.asBytes(hosts));",
    "right" : "client.setData(Paths.statusDeploymentGroupHosts(name), Json.asBytes(hosts));",
    "info" : "ExpressionStatement[18116-18192]:ExpressionStatement[18116-18192]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18225-18295]:Block[18225-18295]"
  }, {
    "left" : "throw new DeploymentGroupDoesNotExistException(name, e);",
    "right" : "throw new DeploymentGroupDoesNotExistException(name, e);",
    "info" : "ThrowStatement[18233-18289]:ThrowStatement[18233-18289]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18336-18428]:Block[18336-18428]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"updating deployment group hosts failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"updating deployment group hosts failed\", e);",
    "info" : "ThrowStatement[18344-18422]:ThrowStatement[18344-18422]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[18436-18445]:MarkerAnnotation[18436-18445]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[18448-18454]:Modifier[18448-18454]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[18455-18459]:PrimitiveType[18455-18459]"
  }, {
    "left" : "rollingUpdate",
    "right" : "rollingUpdate",
    "info" : "SimpleName[18460-18473]:SimpleName[18460-18473]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup",
    "right" : "final DeploymentGroup deploymentGroup",
    "info" : "SingleVariableDeclaration[18474-18511]:SingleVariableDeclaration[18474-18511]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[18513-18530]:SingleVariableDeclaration[18513-18530]"
  }, {
    "left" : "final RolloutOptions options",
    "right" : "final RolloutOptions options",
    "info" : "SingleVariableDeclaration[18560-18588]:SingleVariableDeclaration[18560-18588]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[18603-18639]:SimpleType[18603-18639]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[18641-18665]:SimpleType[18641-18665]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18666-20151]:Block[18666-20151]"
  }, {
    "left" : "checkNotNull(deploymentGroup, \"deploymentGroup\");",
    "right" : "checkNotNull(deploymentGroup, \"deploymentGroup\");",
    "info" : "ExpressionStatement[18672-18721]:ExpressionStatement[18672-18721]"
  }, {
    "left" : "log.info(\"rolling-update on deployment-group: name={}\", deploymentGroup.getName());",
    "right" : "log.info(\"rolling-update on deployment-group: name={}\", deploymentGroup.getName());",
    "info" : "ExpressionStatement[18727-18810]:ExpressionStatement[18727-18810]"
  }, {
    "left" : "final DeploymentGroup updated = deploymentGroup.toBuilder()\n        .setJobId(jobId)\n        .setRolloutOptions(options)\n        .build();",
    "right" : "final DeploymentGroup updated = deploymentGroup.toBuilder()\n        .setJobId(jobId)\n        .setRolloutOptions(options)\n        .build();",
    "info" : "VariableDeclarationStatement[18816-18954]:VariableDeclarationStatement[18816-18954]"
  }, {
    "left" : "if (updated.equals(deploymentGroup))",
    "right" : "if (updated.equals(deploymentGroup))",
    "info" : "IfStatement[18960-19098]:IfStatement[18960-19098]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[18997-19098]:Block[18997-19098]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[19085-19092]:ReturnStatement[19085-19092]"
  }, {
    "left" : "final Job job = getJob(jobId);",
    "right" : "final Job job = getJob(jobId);",
    "info" : "VariableDeclarationStatement[19104-19134]:VariableDeclarationStatement[19104-19134]"
  }, {
    "left" : "if (job == null)",
    "right" : "if (job == null)",
    "info" : "IfStatement[19139-19212]:IfStatement[19139-19212]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19156-19212]:Block[19156-19212]"
  }, {
    "left" : "throw new JobDoesNotExistException(jobId);",
    "right" : "throw new JobDoesNotExistException(jobId);",
    "info" : "ThrowStatement[19164-19206]:ThrowStatement[19164-19206]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "right" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[19218-19283]:VariableDeclarationStatement[19218-19283]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"rollingUpdate\");",
    "right" : "final ZooKeeperClient client = provider.get(\"rollingUpdate\");",
    "info" : "VariableDeclarationStatement[19288-19349]:VariableDeclarationStatement[19288-19349]"
  }, {
    "left" : "operations.add(set(Paths.configDeploymentGroup(deploymentGroup.getName()), updated));",
    "right" : "operations.add(set(Paths.configDeploymentGroup(deploymentGroup.getName()), updated));",
    "info" : "ExpressionStatement[19355-19440]:ExpressionStatement[19355-19440]"
  }, {
    "left" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "right" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "info" : "VariableDeclarationStatement[19446-19527]:VariableDeclarationStatement[19446-19527]"
  }, {
    "left" : "final DeploymentGroupStatus initialStatus = DeploymentGroupStatus.newBuilder()\n        .setDeploymentGroup(deploymentGroup)\n        .setState(PLANNING_ROLLOUT)\n        .build();",
    "right" : "final DeploymentGroupStatus initialStatus = DeploymentGroupStatus.newBuilder()\n        .setDeploymentGroup(deploymentGroup)\n        .setState(PLANNING_ROLLOUT)\n        .build();",
    "info" : "VariableDeclarationStatement[19532-19709]:VariableDeclarationStatement[19532-19709]"
  }, {
    "left" : "operations.add(set(statusPath, initialStatus));",
    "right" : "operations.add(set(statusPath, initialStatus));",
    "info" : "ExpressionStatement[19714-19761]:ExpressionStatement[19714-19761]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[19767-20147]:TryStatement[19767-20147]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19771-19853]:Block[19771-19853]"
  }, {
    "left" : "client.ensurePath(statusPath);",
    "right" : "client.ensurePath(statusPath);",
    "info" : "ExpressionStatement[19779-19809]:ExpressionStatement[19779-19809]"
  }, {
    "left" : "client.transaction(operations);",
    "right" : "client.transaction(operations);",
    "info" : "ExpressionStatement[19816-19847]:ExpressionStatement[19816-19847]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[19886-19974]:Block[19886-19974]"
  }, {
    "left" : "throw new DeploymentGroupDoesNotExistException(deploymentGroup.getName());",
    "right" : "throw new DeploymentGroupDoesNotExistException(deploymentGroup.getName());",
    "info" : "ThrowStatement[19894-19968]:ThrowStatement[19894-19968]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20007-20147]:Block[20007-20147]"
  }, {
    "left" : "throw new HeliosRuntimeException(\n          \"rolling-update on deployment-group \" + deploymentGroup.getName() + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\n          \"rolling-update on deployment-group \" + deploymentGroup.getName() + \" failed\", e);",
    "info" : "ThrowStatement[20015-20141]:ThrowStatement[20015-20141]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[20155-20164]:MarkerAnnotation[20155-20164]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[20167-20173]:Modifier[20167-20173]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[20174-20178]:PrimitiveType[20174-20178]"
  }, {
    "left" : "rollingUpdateStep",
    "right" : "rollingUpdateStep",
    "info" : "SimpleName[20179-20196]:SimpleName[20179-20196]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup",
    "right" : "final DeploymentGroup deploymentGroup",
    "info" : "SingleVariableDeclaration[20197-20234]:SingleVariableDeclaration[20197-20234]"
  }, {
    "left" : "final RolloutPlanner rolloutPlanner",
    "right" : "final RolloutPlanner rolloutPlanner",
    "info" : "SingleVariableDeclaration[20268-20303]:SingleVariableDeclaration[20268-20303]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[20318-20354]:SimpleType[20318-20354]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20355-22801]:Block[20355-22801]"
  }, {
    "left" : "checkNotNull(deploymentGroup, \"deploymentGroup\");",
    "right" : "checkNotNull(deploymentGroup, \"deploymentGroup\");",
    "info" : "ExpressionStatement[20361-20410]:ExpressionStatement[20361-20410]"
  }, {
    "left" : "log.info(\"rolling-update step on deployment-group: name={}\", deploymentGroup.getName());",
    "right" : "log.info(\"rolling-update step on deployment-group: name={}\", deploymentGroup.getName());",
    "info" : "ExpressionStatement[20416-20504]:ExpressionStatement[20416-20504]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"rollingUpdateStep\");",
    "right" : "final ZooKeeperClient client = provider.get(\"rollingUpdateStep\");",
    "info" : "VariableDeclarationStatement[20510-20575]:VariableDeclarationStatement[20510-20575]"
  }, {
    "left" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "right" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "info" : "VariableDeclarationStatement[20580-20661]:VariableDeclarationStatement[20580-20661]"
  }, {
    "left" : "final DeploymentGroupStatus status = getDeploymentGroupStatus(deploymentGroup.getName());",
    "right" : "final DeploymentGroupStatus status = getDeploymentGroupStatus(deploymentGroup.getName());",
    "info" : "VariableDeclarationStatement[20666-20755]:VariableDeclarationStatement[20666-20755]"
  }, {
    "left" : "if (status == null)",
    "right" : "if (status == null)",
    "info" : "IfStatement[20761-20970]:IfStatement[20761-20970]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[20781-20970]:Block[20781-20970]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[20957-20964]:ReturnStatement[20957-20964]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "right" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[20976-21041]:VariableDeclarationStatement[20976-21041]"
  }, {
    "left" : "if (status.getState().equals(PLANNING_ROLLOUT))",
    "right" : "if (status.getState().equals(PLANNING_ROLLOUT))",
    "info" : "IfStatement[21047-22451]:IfStatement[21047-22451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21095-22037]:Block[21095-22037]"
  }, {
    "left" : "final Map<String, HostStatus> hostsAndStatuses = Maps.newHashMap();",
    "right" : "final Map<String, HostStatus> hostsAndStatuses = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[21165-21232]:VariableDeclarationStatement[21165-21232]"
  }, {
    "left" : "for (final String host: getDeploymentGroupHosts(deploymentGroup.getName()))",
    "right" : "for (final String host: getDeploymentGroupHosts(deploymentGroup.getName()))",
    "info" : "EnhancedForStatement[21239-21381]:EnhancedForStatement[21239-21381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21315-21381]:Block[21315-21381]"
  }, {
    "left" : "hostsAndStatuses.put(host, getHostStatus(host));",
    "right" : "hostsAndStatuses.put(host, getHostStatus(host));",
    "info" : "ExpressionStatement[21325-21373]:ExpressionStatement[21325-21373]"
  }, {
    "left" : "final List<RolloutTask> oldPlan = status.getRolloutTasks();",
    "right" : "final List<RolloutTask> oldPlan = status.getRolloutTasks();",
    "info" : "VariableDeclarationStatement[21389-21448]:VariableDeclarationStatement[21389-21448]"
  }, {
    "left" : "final List<RolloutTask> newPlan = rolloutPlanner.plan(hostsAndStatuses);",
    "right" : "final List<RolloutTask> newPlan = rolloutPlanner.plan(hostsAndStatuses);",
    "info" : "VariableDeclarationStatement[21455-21527]:VariableDeclarationStatement[21455-21527]"
  }, {
    "left" : "final DeploymentGroupStatus.Builder newStatus = status.toBuilder()\n          .setState(ROLLING_OUT)\n          .setRolloutTasks(newPlan)\n          .setTaskIndex(0);",
    "right" : "final DeploymentGroupStatus.Builder newStatus = status.toBuilder()\n          .setState(ROLLING_OUT)\n          .setRolloutTasks(newPlan)\n          .setTaskIndex(0);",
    "info" : "VariableDeclarationStatement[21535-21698]:VariableDeclarationStatement[21535-21698]"
  }, {
    "left" : "if (!Objects.equals(oldPlan, newPlan))",
    "right" : "if (!Objects.equals(oldPlan, newPlan))",
    "info" : "IfStatement[21706-21972]:IfStatement[21706-21972]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[21745-21972]:Block[21745-21972]"
  }, {
    "left" : "newStatus.setSuccessfulIterations(0);",
    "right" : "newStatus.setSuccessfulIterations(0);",
    "info" : "ExpressionStatement[21927-21964]:ExpressionStatement[21927-21964]"
  }, {
    "left" : "operations.add(set(statusPath, newStatus.build()));",
    "right" : "operations.add(set(statusPath, newStatus.build()));",
    "info" : "ExpressionStatement[21980-22031]:ExpressionStatement[21980-22031]"
  }, {
    "left" : "if (status.getState().equals(ROLLING_OUT))",
    "right" : "if (status.getState().equals(ROLLING_OUT))",
    "info" : "IfStatement[22043-22451]:IfStatement[22043-22451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22086-22237]:Block[22086-22237]"
  }, {
    "left" : "operations.addAll(getRolloutOperations(deploymentGroup, status));",
    "right" : "operations.addAll(getRolloutOperations(deploymentGroup, status));",
    "info" : "ExpressionStatement[22166-22231]:ExpressionStatement[22166-22231]"
  }, {
    "left" : "if (status.getState().equals(DONE))",
    "right" : "if (status.getState().equals(DONE))",
    "info" : "IfStatement[22243-22451]:IfStatement[22243-22451]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22279-22451]:Block[22279-22451]"
  }, {
    "left" : "operations.add(set(statusPath, status.toBuilder()\n          .setState(PLANNING_ROLLOUT)\n          .build()));",
    "right" : "operations.add(set(statusPath, status.toBuilder()\n          .setState(PLANNING_ROLLOUT)\n          .build()));",
    "info" : "ExpressionStatement[22336-22445]:ExpressionStatement[22336-22445]"
  }, {
    "left" : "if (operations.isEmpty())",
    "right" : "if (operations.isEmpty())",
    "info" : "IfStatement[22457-22504]:IfStatement[22457-22504]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22483-22504]:Block[22483-22504]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[22491-22498]:ReturnStatement[22491-22498]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[22510-22797]:TryStatement[22510-22797]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22514-22624]:Block[22514-22624]"
  }, {
    "left" : "operations.add(0, check(statusPath, status.getVersion()));",
    "right" : "operations.add(0, check(statusPath, status.getVersion()));",
    "info" : "ExpressionStatement[22522-22580]:ExpressionStatement[22522-22580]"
  }, {
    "left" : "client.transaction(operations);",
    "right" : "client.transaction(operations);",
    "info" : "ExpressionStatement[22587-22618]:ExpressionStatement[22587-22618]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22657-22797]:Block[22657-22797]"
  }, {
    "left" : "throw new HeliosRuntimeException(\n          \"rolling-update on deployment-group \" + deploymentGroup.getName() + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\n          \"rolling-update on deployment-group \" + deploymentGroup.getName() + \" failed\", e);",
    "info" : "ThrowStatement[22665-22791]:ThrowStatement[22665-22791]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[22805-22812]:Modifier[22805-22812]"
  }, {
    "left" : "List<ZooKeeperOperation>",
    "right" : "List<ZooKeeperOperation>",
    "info" : "ParameterizedType[22813-22837]:ParameterizedType[22813-22837]"
  }, {
    "left" : "getRolloutOperations",
    "right" : "getRolloutOperations",
    "info" : "SimpleName[22838-22858]:SimpleName[22838-22858]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup",
    "right" : "final DeploymentGroup deploymentGroup",
    "info" : "SingleVariableDeclaration[22859-22896]:SingleVariableDeclaration[22859-22896]"
  }, {
    "left" : "final DeploymentGroupStatus status",
    "right" : "final DeploymentGroupStatus status",
    "info" : "SingleVariableDeclaration[22954-22988]:SingleVariableDeclaration[22954-22988]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[22990-25315]:Block[22990-25315]"
  }, {
    "left" : "final int taskIndex = status.getTaskIndex();",
    "right" : "final int taskIndex = status.getTaskIndex();",
    "info" : "VariableDeclarationStatement[22996-23040]:VariableDeclarationStatement[22996-23040]"
  }, {
    "left" : "final RolloutTask currentTask = Iterables.get(status.getRolloutTasks(), taskIndex, null);",
    "right" : "final RolloutTask currentTask = Iterables.get(status.getRolloutTasks(), taskIndex, null);",
    "info" : "VariableDeclarationStatement[23045-23134]:VariableDeclarationStatement[23045-23134]"
  }, {
    "left" : "final RollingUpdateTaskResult result;",
    "right" : "final RollingUpdateTaskResult result;",
    "info" : "VariableDeclarationStatement[23140-23177]:VariableDeclarationStatement[23140-23177]"
  }, {
    "left" : "if (status.getRolloutTasks().isEmpty())",
    "right" : "if (status.getRolloutTasks().isEmpty())",
    "info" : "IfStatement[23182-24255]:IfStatement[23182-24255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23222-23441]:Block[23222-23441]"
  }, {
    "left" : "result = RollingUpdateTaskResult.TASK_COMPLETE;",
    "right" : "result = RollingUpdateTaskResult.TASK_COMPLETE;",
    "info" : "ExpressionStatement[23388-23435]:ExpressionStatement[23388-23435]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23447-24255]:Block[23447-24255]"
  }, {
    "left" : "final String host = currentTask.getTarget();",
    "right" : "final String host = currentTask.getTarget();",
    "info" : "VariableDeclarationStatement[23455-23499]:VariableDeclarationStatement[23455-23499]"
  }, {
    "left" : "if (currentTask.getAction().equals(Action.UNDEPLOY_OLD_JOBS))",
    "right" : "if (currentTask.getAction().equals(Action.UNDEPLOY_OLD_JOBS))",
    "info" : "IfStatement[23507-24249]:IfStatement[23507-24249]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23569-23723]:Block[23569-23723]"
  }, {
    "left" : "result = rollingUpdateUndeploy(deploymentGroup, host);",
    "right" : "result = rollingUpdateUndeploy(deploymentGroup, host);",
    "info" : "ExpressionStatement[23661-23715]:ExpressionStatement[23661-23715]"
  }, {
    "left" : "if (currentTask.getAction().equals(Action.DEPLOY_NEW_JOB))",
    "right" : "if (currentTask.getAction().equals(Action.DEPLOY_NEW_JOB))",
    "info" : "IfStatement[23729-24249]:IfStatement[23729-24249]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23788-23900]:Block[23788-23900]"
  }, {
    "left" : "result = rollingUpdateDeploy(deploymentGroup, host);",
    "right" : "result = rollingUpdateDeploy(deploymentGroup, host);",
    "info" : "ExpressionStatement[23840-23892]:ExpressionStatement[23840-23892]"
  }, {
    "left" : "if (currentTask.getAction().equals(Action.AWAIT_RUNNING))",
    "right" : "if (currentTask.getAction().equals(Action.AWAIT_RUNNING))",
    "info" : "IfStatement[23906-24249]:IfStatement[23906-24249]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[23964-24040]:Block[23964-24040]"
  }, {
    "left" : "result = rollingUpdateAwaitRunning(deploymentGroup, host);",
    "right" : "result = rollingUpdateAwaitRunning(deploymentGroup, host);",
    "info" : "ExpressionStatement[23974-24032]:ExpressionStatement[23974-24032]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24046-24249]:Block[24046-24249]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"unknown rollout task type \" + currentTask.getAction() +\n                                         \" for deployment group \" + deploymentGroup.getName());",
    "right" : "throw new HeliosRuntimeException(\"unknown rollout task type \" + currentTask.getAction() +\n                                         \" for deployment group \" + deploymentGroup.getName());",
    "info" : "ThrowStatement[24056-24241]:ThrowStatement[24056-24241]"
  }, {
    "left" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "right" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "info" : "VariableDeclarationStatement[24261-24342]:VariableDeclarationStatement[24261-24342]"
  }, {
    "left" : "if (result.equals(RollingUpdateTaskResult.TASK_IN_PROGRESS))",
    "right" : "if (result.equals(RollingUpdateTaskResult.TASK_IN_PROGRESS))",
    "info" : "IfStatement[24347-25311]:IfStatement[24347-25311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24408-24482]:Block[24408-24482]"
  }, {
    "left" : "return emptyList();",
    "right" : "return emptyList();",
    "info" : "ReturnStatement[24457-24476]:ReturnStatement[24457-24476]"
  }, {
    "left" : "if (result.error != null)",
    "right" : "if (result.error != null)",
    "info" : "IfStatement[24488-25311]:IfStatement[24488-25311]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24514-24747]:Block[24514-24747]"
  }, {
    "left" : "return Lists.newArrayList(set(statusPath, status.toBuilder()\n          .setState(FAILED)\n          .setError(result.error.toString())\n          .build()));",
    "right" : "return Lists.newArrayList(set(statusPath, status.toBuilder()\n          .setState(FAILED)\n          .setError(result.error.toString())\n          .build()));",
    "info" : "ReturnStatement[24586-24741]:ReturnStatement[24586-24741]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24753-25311]:Block[24753-25311]"
  }, {
    "left" : "List<ZooKeeperOperation> operations = Lists.newArrayList(result.operations);",
    "right" : "List<ZooKeeperOperation> operations = Lists.newArrayList(result.operations);",
    "info" : "VariableDeclarationStatement[24761-24837]:VariableDeclarationStatement[24761-24837]"
  }, {
    "left" : "if (taskIndex + 1 >= status.getRolloutTasks().size())",
    "right" : "if (taskIndex + 1 >= status.getRolloutTasks().size())",
    "info" : "IfStatement[24845-25279]:IfStatement[24845-25279]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[24899-25141]:Block[24899-25141]"
  }, {
    "left" : "operations.add(set(statusPath, status.toBuilder()\n            .setSuccessfulIterations(status.getSuccessfulIterations() + 1)\n            .setState(DONE)\n            .build()));",
    "right" : "operations.add(set(statusPath, status.toBuilder()\n            .setSuccessfulIterations(status.getSuccessfulIterations() + 1)\n            .setState(DONE)\n            .build()));",
    "info" : "ExpressionStatement[24957-25133]:ExpressionStatement[24957-25133]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25147-25279]:Block[25147-25279]"
  }, {
    "left" : "operations.add(set(statusPath, status.toBuilder()\n            .setTaskIndex(taskIndex + 1)\n            .build()));",
    "right" : "operations.add(set(statusPath, status.toBuilder()\n            .setTaskIndex(taskIndex + 1)\n            .build()));",
    "info" : "ExpressionStatement[25157-25271]:ExpressionStatement[25157-25271]"
  }, {
    "left" : "return operations;",
    "right" : "return operations;",
    "info" : "ReturnStatement[25287-25305]:ReturnStatement[25287-25305]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[25319-25326]:Modifier[25319-25326]"
  }, {
    "left" : "RollingUpdateTaskResult",
    "right" : "RollingUpdateTaskResult",
    "info" : "SimpleType[25327-25350]:SimpleType[25327-25350]"
  }, {
    "left" : "rollingUpdateAwaitRunning",
    "right" : "rollingUpdateAwaitRunning",
    "info" : "SimpleName[25351-25376]:SimpleName[25351-25376]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup",
    "right" : "final DeploymentGroup deploymentGroup",
    "info" : "SingleVariableDeclaration[25377-25414]:SingleVariableDeclaration[25377-25414]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[25460-25477]:SingleVariableDeclaration[25460-25477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25479-27691]:Block[25479-27833]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"rollingUpdateAwaitRunning\");",
    "right" : "final ZooKeeperClient client = provider.get(\"rollingUpdateAwaitRunning\");",
    "info" : "VariableDeclarationStatement[25485-25558]:VariableDeclarationStatement[25485-25558]"
  }, {
    "left" : "final Map<JobId, TaskStatus> taskStatuses = getTaskStatuses(client, host);",
    "right" : "final Map<JobId, TaskStatus> taskStatuses = getTaskStatuses(client, host);",
    "info" : "VariableDeclarationStatement[25563-25637]:VariableDeclarationStatement[25563-25637]"
  }, {
    "left" : "if (!taskStatuses.containsKey(deploymentGroup.getJobId()))",
    "right" : "if (!taskStatuses.containsKey(deploymentGroup.getJobId()))",
    "info" : "IfStatement[25643-27687]:IfStatement[25643-27829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25702-25827]:Block[25702-26550]"
  }, {
    "left" : "return RollingUpdateTaskResult.TASK_IN_PROGRESS;",
    "right" : "return RollingUpdateTaskResult.TASK_IN_PROGRESS;",
    "info" : "ReturnStatement[25773-25821]:ReturnStatement[26496-26544]"
  }, {
    "left" : "if (!taskStatuses.get(deploymentGroup.getJobId()).getState()\n        .equals(TaskStatus.State.RUNNING))",
    "right" : "if (!taskStatuses.get(deploymentGroup.getJobId()).getState()\n        .equals(TaskStatus.State.RUNNING))",
    "info" : "IfStatement[25833-27687]:IfStatement[26556-27829]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25937-26884]:Block[26660-27024]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[25977-26822]:TryStatement[27982-28607]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[25981-26541]:Block[27986-28316]"
  }, {
    "left" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "right" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroup.getName());",
    "info" : "VariableDeclarationStatement[25991-26072]:VariableDeclarationStatement[27994-28075]"
  }, {
    "left" : "final long secondsSinceDeploy = MILLISECONDS.toSeconds(\n            System.currentTimeMillis() - client.getNode(statusPath).getStat().getMtime());",
    "right" : "final long secondsSinceDeploy = MILLISECONDS.toSeconds(\n          System.currentTimeMillis() - client.getNode(statusPath).getStat().getMtime());",
    "info" : "VariableDeclarationStatement[26081-26227]:VariableDeclarationStatement[28082-28226]"
  }, {
    "left" : "if (secondsSinceDeploy > deploymentGroup.getRolloutOptions().getTimeout())",
    "right" : "if (isRolloutTimedOut(deploymentGroup, client))",
    "info" : "IfStatement[26236-26533]:IfStatement[26700-26962]"
  }, {
    "left" : "secondsSinceDeploy > deploymentGroup.getRolloutOptions().getTimeout()",
    "right" : "secondsSinceDeploy > deploymentGroup.getRolloutOptions().getTimeout()",
    "info" : "InfixExpression[26240-26309]:InfixExpression[28240-28309]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26311-26533]:Block[26748-26962]"
  }, {
    "left" : "return RollingUpdateTaskResult.error(\"timed out waiting for job to reach RUNNING\");",
    "right" : "return RollingUpdateTaskResult.error(\"timed out waiting for job to reach RUNNING\");",
    "info" : "ReturnStatement[26440-26523]:ReturnStatement[26871-26954]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26568-26822]:Block[28343-28607]"
  }, {
    "left" : "log.warn(\"error determining deployment group modification time: {} - {}\",\n                 deploymentGroup.getName(), e);",
    "right" : "log.warn(\"error determining deployment group modification time: {} - {}\",\n               deploymentGroup.getName(), e);",
    "info" : "ExpressionStatement[26693-26814]:ExpressionStatement[28462-28581]"
  }, {
    "left" : "return RollingUpdateTaskResult.TASK_IN_PROGRESS;",
    "right" : "return RollingUpdateTaskResult.TASK_IN_PROGRESS;",
    "info" : "ReturnStatement[26830-26878]:ReturnStatement[26970-27018]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[26890-27687]:Block[27030-27829]"
  }, {
    "left" : "final Deployment deployment = getDeployment(host, deploymentGroup.getJobId());",
    "right" : "final Deployment deployment = getDeployment(host, deploymentGroup.getJobId());",
    "info" : "VariableDeclarationStatement[27140-27218]:VariableDeclarationStatement[27280-27358]"
  }, {
    "left" : "if (deployment == null)",
    "right" : "if (deployment == null)",
    "info" : "IfStatement[27225-27628]:IfStatement[27365-27770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27249-27352]:Block[27389-27494]"
  }, {
    "left" : "return RollingUpdateTaskResult.error(\"deployment for this job is very broken in ZK\");",
    "right" : "return RollingUpdateTaskResult.error(\"deployment for this job not found in zookeeper\");",
    "info" : "ReturnStatement[27259-27344]:ReturnStatement[27399-27486]"
  }, {
    "left" : "\"deployment for this job is very broken in ZK\"",
    "right" : "\"deployment for this job not found in zookeeper\"",
    "info" : "StringLiteral[27296-27342]:StringLiteral[27436-27484]"
  }, {
    "left" : "if (!Objects.equals(deployment.getDeploymentGroupName(), deploymentGroup.getName()))",
    "right" : "if (!Objects.equals(deployment.getDeploymentGroupName(), deploymentGroup.getName()))",
    "info" : "IfStatement[27358-27628]:IfStatement[27500-27770]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27443-27628]:Block[27585-27770]"
  }, {
    "left" : "return RollingUpdateTaskResult.error(\"job was already deployed, either manually or by a \" +\n                                             \"different deployment group\");",
    "right" : "return RollingUpdateTaskResult.error(\"job was already deployed, either manually or by a \" +\n                                             \"different deployment group\");",
    "info" : "ReturnStatement[27453-27620]:ReturnStatement[27595-27762]"
  }, {
    "left" : "return RollingUpdateTaskResult.TASK_COMPLETE;",
    "right" : "return RollingUpdateTaskResult.TASK_COMPLETE;",
    "info" : "ReturnStatement[27636-27681]:ReturnStatement[27778-27823]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[27695-27702]:Modifier[28615-28622]"
  }, {
    "left" : "RollingUpdateTaskResult",
    "right" : "RollingUpdateTaskResult",
    "info" : "SimpleType[27703-27726]:SimpleType[28623-28646]"
  }, {
    "left" : "rollingUpdateDeploy",
    "right" : "rollingUpdateDeploy",
    "info" : "SimpleName[27727-27746]:SimpleName[28647-28666]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup",
    "right" : "final DeploymentGroup deploymentGroup",
    "info" : "SingleVariableDeclaration[27747-27784]:SingleVariableDeclaration[28667-28704]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[27840-27857]:SingleVariableDeclaration[28760-28777]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[27859-28658]:Block[28779-29578]"
  }, {
    "left" : "final Deployment deployment = Deployment.of(deploymentGroup.getJobId(), Goal.START,\n                                                Deployment.EMTPY_DEPLOYER_USER, this.name,\n                                                deploymentGroup.getName());",
    "right" : "final Deployment deployment = Deployment.of(deploymentGroup.getJobId(), Goal.START,\n                                                Deployment.EMTPY_DEPLOYER_USER, this.name,\n                                                deploymentGroup.getName());",
    "info" : "VariableDeclarationStatement[27865-28115]:VariableDeclarationStatement[28785-29035]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"rollingUpdateDeploy\");",
    "right" : "final ZooKeeperClient client = provider.get(\"rollingUpdateDeploy\");",
    "info" : "VariableDeclarationStatement[28120-28187]:VariableDeclarationStatement[29040-29107]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[28193-28654]:TryStatement[29113-29574]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28197-28369]:Block[29117-29289]"
  }, {
    "left" : "return RollingUpdateTaskResult.of(getDeployOperations(client, host, deployment,\n                                                            Job.EMPTY_TOKEN));",
    "right" : "return RollingUpdateTaskResult.of(getDeployOperations(client, host, deployment,\n                                                            Job.EMPTY_TOKEN));",
    "info" : "ReturnStatement[28205-28363]:ReturnStatement[29125-29283]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28503-28557]:Block[29423-29477]"
  }, {
    "left" : "return RollingUpdateTaskResult.error(e);",
    "right" : "return RollingUpdateTaskResult.error(e);",
    "info" : "ReturnStatement[28511-28551]:ReturnStatement[29431-29471]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28596-28654]:Block[29516-29574]"
  }, {
    "left" : "return RollingUpdateTaskResult.TASK_COMPLETE;",
    "right" : "return RollingUpdateTaskResult.TASK_COMPLETE;",
    "info" : "ReturnStatement[28603-28648]:ReturnStatement[29523-29568]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[28662-28669]:Modifier[29582-29589]"
  }, {
    "left" : "RollingUpdateTaskResult",
    "right" : "RollingUpdateTaskResult",
    "info" : "SimpleType[28670-28693]:SimpleType[29590-29613]"
  }, {
    "left" : "rollingUpdateUndeploy",
    "right" : "rollingUpdateUndeploy",
    "info" : "SimpleName[28694-28715]:SimpleName[29614-29635]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup",
    "right" : "final DeploymentGroup deploymentGroup",
    "info" : "SingleVariableDeclaration[28716-28753]:SingleVariableDeclaration[29636-29673]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[28811-28828]:SingleVariableDeclaration[29731-29748]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[28830-30067]:Block[29750-30987]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"rollingUpdateUndeploy\");",
    "right" : "final ZooKeeperClient client = provider.get(\"rollingUpdateUndeploy\");",
    "info" : "VariableDeclarationStatement[28836-28905]:VariableDeclarationStatement[29756-29825]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "right" : "final List<ZooKeeperOperation> operations = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[28910-28975]:VariableDeclarationStatement[29830-29895]"
  }, {
    "left" : "for (final Deployment deployment : getTasks(client, host).values())",
    "right" : "for (final Deployment deployment : getTasks(client, host).values())",
    "info" : "EnhancedForStatement[28981-30011]:EnhancedForStatement[29901-30931]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29049-30011]:Block[29969-30931]"
  }, {
    "left" : "final boolean isOwnedByDeploymentGroup = Objects.equals(\n          deployment.getDeploymentGroupName(), deploymentGroup.getName());",
    "right" : "final boolean isOwnedByDeploymentGroup = Objects.equals(\n          deployment.getDeploymentGroupName(), deploymentGroup.getName());",
    "info" : "VariableDeclarationStatement[29057-29188]:VariableDeclarationStatement[29977-30108]"
  }, {
    "left" : "final boolean isSameJob = deployment.getJobId().equals(deploymentGroup.getJobId());",
    "right" : "final boolean isSameJob = deployment.getJobId().equals(deploymentGroup.getJobId());",
    "info" : "VariableDeclarationStatement[29195-29278]:VariableDeclarationStatement[30115-30198]"
  }, {
    "left" : "if (isOwnedByDeploymentGroup || (\n          isSameJob && deploymentGroup.getRolloutOptions().getMigrate()))",
    "right" : "if (isOwnedByDeploymentGroup || (\n          isSameJob && deploymentGroup.getRolloutOptions().getMigrate()))",
    "info" : "IfStatement[29286-30005]:IfStatement[30206-30925]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29394-30005]:Block[30314-30925]"
  }, {
    "left" : "if (isSameJob && isOwnedByDeploymentGroup)",
    "right" : "if (isSameJob && isOwnedByDeploymentGroup)",
    "info" : "IfStatement[29404-29565]:IfStatement[30324-30485]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29447-29565]:Block[30367-30485]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[29546-29555]:ContinueStatement[30466-30475]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[29575-29997]:TryStatement[30495-30917]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29579-29746]:Block[30499-30666]"
  }, {
    "left" : "operations.addAll(getUndeployOperations(client, host, deployment.getJobId(),\n                                                  Job.EMPTY_TOKEN));",
    "right" : "operations.addAll(getUndeployOperations(client, host, deployment.getJobId(),\n                                                  Job.EMPTY_TOKEN));",
    "info" : "ExpressionStatement[29591-29736]:ExpressionStatement[30511-30656]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29808-29870]:Block[30728-30790]"
  }, {
    "left" : "return RollingUpdateTaskResult.error(e);",
    "right" : "return RollingUpdateTaskResult.error(e);",
    "info" : "ReturnStatement[29820-29860]:ReturnStatement[30740-30780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[29905-29997]:Block[30825-30917]"
  }, {
    "left" : "return RollingUpdateTaskResult.of(operations);",
    "right" : "return RollingUpdateTaskResult.of(operations);",
    "info" : "ReturnStatement[30017-30063]:ReturnStatement[30937-30983]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[30071-30080]:MarkerAnnotation[30991-31000]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[30083-30089]:Modifier[31003-31009]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[30090-30094]:PrimitiveType[31010-31014]"
  }, {
    "left" : "stopDeploymentGroup",
    "right" : "stopDeploymentGroup",
    "info" : "SimpleName[30095-30114]:SimpleName[31015-31034]"
  }, {
    "left" : "final String deploymentGroupName",
    "right" : "final String deploymentGroupName",
    "info" : "SingleVariableDeclaration[30115-30147]:SingleVariableDeclaration[31035-31067]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[30162-30198]:SimpleType[31082-31118]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30199-31137]:Block[31119-32057]"
  }, {
    "left" : "checkNotNull(deploymentGroupName, \"name\");",
    "right" : "checkNotNull(deploymentGroupName, \"name\");",
    "info" : "ExpressionStatement[30205-30247]:ExpressionStatement[31125-31167]"
  }, {
    "left" : "log.info(\"stop deployment-group: name={}\", deploymentGroupName);",
    "right" : "log.info(\"stop deployment-group: name={}\", deploymentGroupName);",
    "info" : "ExpressionStatement[30253-30317]:ExpressionStatement[31173-31237]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"stopDeploymentGroup\");",
    "right" : "final ZooKeeperClient client = provider.get(\"stopDeploymentGroup\");",
    "info" : "VariableDeclarationStatement[30323-30390]:VariableDeclarationStatement[31243-31310]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup = getDeploymentGroup(deploymentGroupName);",
    "right" : "final DeploymentGroup deploymentGroup = getDeploymentGroup(deploymentGroupName);",
    "info" : "VariableDeclarationStatement[30396-30476]:VariableDeclarationStatement[31316-31396]"
  }, {
    "left" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroupName);",
    "right" : "final String statusPath = Paths.statusDeploymentGroup(deploymentGroupName);",
    "info" : "VariableDeclarationStatement[30482-30557]:VariableDeclarationStatement[31402-31477]"
  }, {
    "left" : "final DeploymentGroupStatus status = DeploymentGroupStatus.newBuilder()\n        .setDeploymentGroup(deploymentGroup)\n        .setState(FAILED)\n        .setError(\"Stopped by user\")\n        .build();",
    "right" : "final DeploymentGroupStatus status = DeploymentGroupStatus.newBuilder()\n        .setDeploymentGroup(deploymentGroup)\n        .setState(FAILED)\n        .setError(\"Stopped by user\")\n        .build();",
    "info" : "VariableDeclarationStatement[30562-30759]:VariableDeclarationStatement[31482-31679]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[30765-31133]:TryStatement[31685-32053]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30769-30864]:Block[31689-31784]"
  }, {
    "left" : "client.ensurePath(statusPath);",
    "right" : "client.ensurePath(statusPath);",
    "info" : "ExpressionStatement[30777-30807]:ExpressionStatement[31697-31727]"
  }, {
    "left" : "client.transaction(set(statusPath, status));",
    "right" : "client.transaction(set(statusPath, status));",
    "info" : "ExpressionStatement[30814-30858]:ExpressionStatement[31734-31778]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[30897-30979]:Block[31817-31899]"
  }, {
    "left" : "throw new DeploymentGroupDoesNotExistException(deploymentGroupName);",
    "right" : "throw new DeploymentGroupDoesNotExistException(deploymentGroupName);",
    "info" : "ThrowStatement[30905-30973]:ThrowStatement[31825-31893]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31012-31133]:Block[31932-32053]"
  }, {
    "left" : "throw new HeliosRuntimeException(\n          \"stop deployment-group \" + deploymentGroupName + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\n          \"stop deployment-group \" + deploymentGroupName + \" failed\", e);",
    "info" : "ThrowStatement[31020-31127]:ThrowStatement[31940-32047]"
  }, {
    "left" : "/**\n   * Returns a {@link Map} of deployment group name to {@link DeploymentGroup} objects for all of\n   * the deployment groups known.\n   */",
    "right" : "/**\n   * Returns a {@link Map} of deployment group name to {@link DeploymentGroup} objects for all of\n   * the deployment groups known.\n   */",
    "info" : "Javadoc[31141-31282]:Javadoc[32061-32202]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[31285-31294]:MarkerAnnotation[32205-32214]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[31297-31303]:Modifier[32217-32223]"
  }, {
    "left" : "Map<String, DeploymentGroup>",
    "right" : "Map<String, DeploymentGroup>",
    "info" : "ParameterizedType[31304-31332]:ParameterizedType[32224-32252]"
  }, {
    "left" : "getDeploymentGroups",
    "right" : "getDeploymentGroups",
    "info" : "SimpleName[31333-31352]:SimpleName[32253-32272]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31355-32466]:Block[32275-33386]"
  }, {
    "left" : "log.debug(\"getting deployment groups\");",
    "right" : "log.debug(\"getting deployment groups\");",
    "info" : "ExpressionStatement[31361-31400]:ExpressionStatement[32281-32320]"
  }, {
    "left" : "final String folder = Paths.configDeploymentGroups();",
    "right" : "final String folder = Paths.configDeploymentGroups();",
    "info" : "VariableDeclarationStatement[31405-31458]:VariableDeclarationStatement[32325-32378]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroups\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroups\");",
    "info" : "VariableDeclarationStatement[31463-31530]:VariableDeclarationStatement[32383-32450]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[31535-32462]:TryStatement[32455-33382]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31539-32335]:Block[32459-33255]"
  }, {
    "left" : "final List<String> names;",
    "right" : "final List<String> names;",
    "info" : "VariableDeclarationStatement[31547-31572]:VariableDeclarationStatement[32467-32492]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[31579-31706]:TryStatement[32499-32626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31583-31636]:Block[32503-32556]"
  }, {
    "left" : "names = client.getChildren(folder);",
    "right" : "names = client.getChildren(folder);",
    "info" : "ExpressionStatement[31593-31628]:ExpressionStatement[32513-32548]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31663-31706]:Block[32583-32626]"
  }, {
    "left" : "return Maps.newHashMap();",
    "right" : "return Maps.newHashMap();",
    "info" : "ReturnStatement[31673-31698]:ReturnStatement[32593-32618]"
  }, {
    "left" : "final Map<String, DeploymentGroup> descriptors = Maps.newHashMap();",
    "right" : "final Map<String, DeploymentGroup> descriptors = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[31713-31780]:VariableDeclarationStatement[32633-32700]"
  }, {
    "left" : "for (final String name : names)",
    "right" : "for (final String name : names)",
    "info" : "EnhancedForStatement[31787-32303]:EnhancedForStatement[32707-33223]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31819-32303]:Block[32739-33223]"
  }, {
    "left" : "final String path = Paths.configDeploymentGroup(name);",
    "right" : "final String path = Paths.configDeploymentGroup(name);",
    "info" : "VariableDeclarationStatement[31829-31883]:VariableDeclarationStatement[32749-32803]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[31892-32295]:TryStatement[32812-33215]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[31896-32101]:Block[32816-33021]"
  }, {
    "left" : "final byte[] data = client.getData(path);",
    "right" : "final byte[] data = client.getData(path);",
    "info" : "VariableDeclarationStatement[31908-31949]:VariableDeclarationStatement[32828-32869]"
  }, {
    "left" : "final DeploymentGroup descriptor = parse(data, DeploymentGroup.class);",
    "right" : "final DeploymentGroup descriptor = parse(data, DeploymentGroup.class);",
    "info" : "VariableDeclarationStatement[31960-32030]:VariableDeclarationStatement[32880-32950]"
  }, {
    "left" : "descriptors.put(descriptor.getName(), descriptor);",
    "right" : "descriptors.put(descriptor.getName(), descriptor);",
    "info" : "ExpressionStatement[32041-32091]:ExpressionStatement[32961-33011]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32128-32295]:Block[33048-33215]"
  }, {
    "left" : "log.debug(\"Ignoring deleted deployment group {}\", name);",
    "right" : "log.debug(\"Ignoring deleted deployment group {}\", name);",
    "info" : "ExpressionStatement[32229-32285]:ExpressionStatement[33149-33205]"
  }, {
    "left" : "return descriptors;",
    "right" : "return descriptors;",
    "info" : "ReturnStatement[32310-32329]:ReturnStatement[33230-33249]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32376-32462]:Block[33296-33382]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting deployment groups failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting deployment groups failed\", e);",
    "info" : "ThrowStatement[32384-32456]:ThrowStatement[33304-33376]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[32470-32479]:MarkerAnnotation[33390-33399]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[32482-32488]:Modifier[33402-33408]"
  }, {
    "left" : "DeploymentGroupStatus",
    "right" : "DeploymentGroupStatus",
    "info" : "SimpleType[32489-32510]:SimpleType[33409-33430]"
  }, {
    "left" : "getDeploymentGroupStatus",
    "right" : "getDeploymentGroupStatus",
    "info" : "SimpleName[32511-32535]:SimpleName[33431-33455]"
  }, {
    "left" : "final String name",
    "right" : "final String name",
    "info" : "SingleVariableDeclaration[32536-32553]:SingleVariableDeclaration[33456-33473]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[32568-32604]:SimpleType[33488-33524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32605-33476]:Block[33525-34396]"
  }, {
    "left" : "log.debug(\"getting deployment group status: {}\", name);",
    "right" : "log.debug(\"getting deployment group status: {}\", name);",
    "info" : "ExpressionStatement[32611-32666]:ExpressionStatement[33531-33586]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroupStatus\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroupStatus\");",
    "info" : "VariableDeclarationStatement[32671-32743]:VariableDeclarationStatement[33591-33663]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup = getDeploymentGroup(client, name);",
    "right" : "final DeploymentGroup deploymentGroup = getDeploymentGroup(client, name);",
    "info" : "VariableDeclarationStatement[32749-32822]:VariableDeclarationStatement[33669-33742]"
  }, {
    "left" : "if (deploymentGroup == null)",
    "right" : "if (deploymentGroup == null)",
    "info" : "IfStatement[32827-32882]:IfStatement[33747-33802]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32856-32882]:Block[33776-33802]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[32864-32876]:ReturnStatement[33784-33796]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[32888-33472]:TryStatement[33808-34392]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[32892-33273]:Block[33812-34193]"
  }, {
    "left" : "final Node node = client.getNode(Paths.statusDeploymentGroup(name));",
    "right" : "final Node node = client.getNode(Paths.statusDeploymentGroup(name));",
    "info" : "VariableDeclarationStatement[32900-32968]:VariableDeclarationStatement[33820-33888]"
  }, {
    "left" : "final byte[] bytes = node.getBytes();",
    "right" : "final byte[] bytes = node.getBytes();",
    "info" : "VariableDeclarationStatement[32976-33013]:VariableDeclarationStatement[33896-33933]"
  }, {
    "left" : "if (bytes.length == 0)",
    "right" : "if (bytes.length == 0)",
    "info" : "IfStatement[33020-33073]:IfStatement[33940-33993]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33043-33073]:Block[33963-33993]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[33053-33065]:ReturnStatement[33973-33985]"
  }, {
    "left" : "final DeploymentGroupStatus status = Json.read(bytes, DeploymentGroupStatus.class);",
    "right" : "final DeploymentGroupStatus status = Json.read(bytes, DeploymentGroupStatus.class);",
    "info" : "VariableDeclarationStatement[33081-33164]:VariableDeclarationStatement[34001-34084]"
  }, {
    "left" : "return status.toBuilder()\n          .setVersion(node.getStat().getVersion())\n          .build();",
    "right" : "return status.toBuilder()\n          .setVersion(node.getStat().getVersion())\n          .build();",
    "info" : "ReturnStatement[33171-33267]:ReturnStatement[34091-34187]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33300-33326]:Block[34220-34246]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[33308-33320]:ReturnStatement[34228-34240]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33367-33472]:Block[34287-34392]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting deployment group status \" + name + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting deployment group status \" + name + \" failed\", e);",
    "info" : "ThrowStatement[33375-33466]:ThrowStatement[34295-34386]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[33480-33489]:MarkerAnnotation[34400-34409]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[33492-33498]:Modifier[34412-34418]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[33499-33511]:ParameterizedType[34419-34431]"
  }, {
    "left" : "getDeploymentGroupHosts",
    "right" : "getDeploymentGroupHosts",
    "info" : "SimpleName[33512-33535]:SimpleName[34432-34455]"
  }, {
    "left" : "final String name",
    "right" : "final String name",
    "info" : "SingleVariableDeclaration[33536-33553]:SingleVariableDeclaration[34456-34473]"
  }, {
    "left" : "DeploymentGroupDoesNotExistException",
    "right" : "DeploymentGroupDoesNotExistException",
    "info" : "SimpleType[33568-33604]:SimpleType[34488-34524]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33605-34331]:Block[34525-35251]"
  }, {
    "left" : "log.debug(\"getting deployment group hosts: {}\", name);",
    "right" : "log.debug(\"getting deployment group hosts: {}\", name);",
    "info" : "ExpressionStatement[33611-33665]:ExpressionStatement[34531-34585]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroupHosts\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getDeploymentGroupHosts\");",
    "info" : "VariableDeclarationStatement[33670-33741]:VariableDeclarationStatement[34590-34661]"
  }, {
    "left" : "final DeploymentGroup deploymentGroup = getDeploymentGroup(client, name);",
    "right" : "final DeploymentGroup deploymentGroup = getDeploymentGroup(client, name);",
    "info" : "VariableDeclarationStatement[33747-33820]:VariableDeclarationStatement[34667-34740]"
  }, {
    "left" : "if (deploymentGroup == null)",
    "right" : "if (deploymentGroup == null)",
    "info" : "IfStatement[33825-33921]:IfStatement[34745-34841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33854-33921]:Block[34774-34841]"
  }, {
    "left" : "throw new DeploymentGroupDoesNotExistException(name);",
    "right" : "throw new DeploymentGroupDoesNotExistException(name);",
    "info" : "ThrowStatement[33862-33915]:ThrowStatement[34782-34835]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[33927-34302]:TryStatement[34847-35222]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[33931-34108]:Block[34851-35028]"
  }, {
    "left" : "final byte[] data = client.getData(Paths.statusDeploymentGroupHosts(name));",
    "right" : "final byte[] data = client.getData(Paths.statusDeploymentGroupHosts(name));",
    "info" : "VariableDeclarationStatement[33939-34014]:VariableDeclarationStatement[34859-34934]"
  }, {
    "left" : "if (data.length > 0)",
    "right" : "if (data.length > 0)",
    "info" : "IfStatement[34022-34102]:IfStatement[34942-35022]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34043-34102]:Block[34963-35022]"
  }, {
    "left" : "return Json.read(data, STRING_LIST_TYPE);",
    "right" : "return Json.read(data, STRING_LIST_TYPE);",
    "info" : "ReturnStatement[34053-34094]:ReturnStatement[34973-35014]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34135-34161]:Block[35055-35081]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34202-34302]:Block[35122-35222]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"reading deployment group hosts failed: \" + name, e);",
    "right" : "throw new HeliosRuntimeException(\"reading deployment group hosts failed: \" + name, e);",
    "info" : "ThrowStatement[34210-34296]:ThrowStatement[35130-35216]"
  }, {
    "left" : "return emptyList();",
    "right" : "return emptyList();",
    "info" : "ReturnStatement[34308-34327]:ReturnStatement[35228-35247]"
  }, {
    "left" : "/**\n   * Returns the job configuration for the job specified by {@code id} as a\n   * {@link Job} object.\n   */",
    "right" : "/**\n   * Returns the job configuration for the job specified by {@code id} as a\n   * {@link Job} object.\n   */",
    "info" : "Javadoc[34335-34445]:Javadoc[35255-35365]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[34448-34457]:MarkerAnnotation[35368-35377]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[34460-34466]:Modifier[35380-35386]"
  }, {
    "left" : "Job",
    "right" : "Job",
    "info" : "SimpleType[34467-34470]:SimpleType[35387-35390]"
  }, {
    "left" : "getJob",
    "right" : "getJob",
    "info" : "SimpleName[34471-34477]:SimpleName[35391-35397]"
  }, {
    "left" : "final JobId id",
    "right" : "final JobId id",
    "info" : "SingleVariableDeclaration[34478-34492]:SingleVariableDeclaration[35398-35412]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34494-34629]:Block[35414-35549]"
  }, {
    "left" : "log.debug(\"getting job: {}\", id);",
    "right" : "log.debug(\"getting job: {}\", id);",
    "info" : "ExpressionStatement[34500-34533]:ExpressionStatement[35420-35453]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getJobId\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getJobId\");",
    "info" : "VariableDeclarationStatement[34538-34594]:VariableDeclarationStatement[35458-35514]"
  }, {
    "left" : "return getJob(client, id);",
    "right" : "return getJob(client, id);",
    "info" : "ReturnStatement[34599-34625]:ReturnStatement[35519-35545]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[34634-34641]:Modifier[35554-35561]"
  }, {
    "left" : "Job",
    "right" : "Job",
    "info" : "SimpleType[34642-34645]:SimpleType[35562-35565]"
  }, {
    "left" : "getJob",
    "right" : "getJob",
    "info" : "SimpleName[34646-34652]:SimpleName[35566-35572]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[34653-34681]:SingleVariableDeclaration[35573-35601]"
  }, {
    "left" : "final JobId id",
    "right" : "final JobId id",
    "info" : "SingleVariableDeclaration[34683-34697]:SingleVariableDeclaration[35603-35617]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34699-35092]:Block[35619-36012]"
  }, {
    "left" : "final String path = Paths.configJob(id);",
    "right" : "final String path = Paths.configJob(id);",
    "info" : "VariableDeclarationStatement[34705-34745]:VariableDeclarationStatement[35625-35665]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[34750-35088]:TryStatement[35670-36008]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34754-34850]:Block[35674-35770]"
  }, {
    "left" : "final byte[] data = client.getData(path);",
    "right" : "final byte[] data = client.getData(path);",
    "info" : "VariableDeclarationStatement[34762-34803]:VariableDeclarationStatement[35682-35723]"
  }, {
    "left" : "return Json.read(data, Job.class);",
    "right" : "return Json.read(data, Job.class);",
    "info" : "ReturnStatement[34810-34844]:ReturnStatement[35730-35764]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[34877-34964]:Block[35797-35884]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[34946-34958]:ReturnStatement[35866-35878]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35005-35088]:Block[35925-36008]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting job \" + id + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting job \" + id + \" failed\", e);",
    "info" : "ThrowStatement[35013-35082]:ThrowStatement[35933-36002]"
  }, {
    "left" : "/**\n   * Returns a {@link Map} of {@link JobId} to {@link Job} objects for all of the jobs known.\n   */",
    "right" : "/**\n   * Returns a {@link Map} of {@link JobId} to {@link Job} objects for all of the jobs known.\n   */",
    "info" : "Javadoc[35096-35199]:Javadoc[36016-36119]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[35202-35211]:MarkerAnnotation[36122-36131]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[35214-35220]:Modifier[36134-36140]"
  }, {
    "left" : "Map<JobId, Job>",
    "right" : "Map<JobId, Job>",
    "info" : "ParameterizedType[35221-35236]:ParameterizedType[36141-36156]"
  }, {
    "left" : "getJobs",
    "right" : "getJobs",
    "info" : "SimpleName[35237-35244]:SimpleName[36157-36164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35247-36275]:Block[36167-37195]"
  }, {
    "left" : "log.debug(\"getting jobs\");",
    "right" : "log.debug(\"getting jobs\");",
    "info" : "ExpressionStatement[35253-35279]:ExpressionStatement[36173-36199]"
  }, {
    "left" : "final String folder = Paths.configJobs();",
    "right" : "final String folder = Paths.configJobs();",
    "info" : "VariableDeclarationStatement[35284-35325]:VariableDeclarationStatement[36204-36245]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getJobs\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getJobs\");",
    "info" : "VariableDeclarationStatement[35330-35385]:VariableDeclarationStatement[36250-36305]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[35390-36271]:TryStatement[36310-37191]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35394-36157]:Block[36314-37077]"
  }, {
    "left" : "final List<String> ids;",
    "right" : "final List<String> ids;",
    "info" : "VariableDeclarationStatement[35402-35425]:VariableDeclarationStatement[36322-36345]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[35432-35557]:TryStatement[36352-36477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35436-35487]:Block[36356-36407]"
  }, {
    "left" : "ids = client.getChildren(folder);",
    "right" : "ids = client.getChildren(folder);",
    "info" : "ExpressionStatement[35446-35479]:ExpressionStatement[36366-36399]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35514-35557]:Block[36434-36477]"
  }, {
    "left" : "return Maps.newHashMap();",
    "right" : "return Maps.newHashMap();",
    "info" : "ReturnStatement[35524-35549]:ReturnStatement[36444-36469]"
  }, {
    "left" : "final Map<JobId, Job> descriptors = Maps.newHashMap();",
    "right" : "final Map<JobId, Job> descriptors = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[35564-35618]:VariableDeclarationStatement[36484-36538]"
  }, {
    "left" : "for (final String id : ids)",
    "right" : "for (final String id : ids)",
    "info" : "EnhancedForStatement[35625-36125]:EnhancedForStatement[36545-37045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35653-36125]:Block[36573-37045]"
  }, {
    "left" : "final JobId jobId = JobId.fromString(id);",
    "right" : "final JobId jobId = JobId.fromString(id);",
    "info" : "VariableDeclarationStatement[35663-35704]:VariableDeclarationStatement[36583-36624]"
  }, {
    "left" : "final String path = Paths.configJob(jobId);",
    "right" : "final String path = Paths.configJob(jobId);",
    "info" : "VariableDeclarationStatement[35713-35756]:VariableDeclarationStatement[36633-36676]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[35765-36117]:TryStatement[36685-37037]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35769-35948]:Block[36689-36868]"
  }, {
    "left" : "final byte[] data = client.getData(path);",
    "right" : "final byte[] data = client.getData(path);",
    "info" : "VariableDeclarationStatement[35781-35822]:VariableDeclarationStatement[36701-36742]"
  }, {
    "left" : "final Job descriptor = parse(data, Job.class);",
    "right" : "final Job descriptor = parse(data, Job.class);",
    "info" : "VariableDeclarationStatement[35833-35879]:VariableDeclarationStatement[36753-36799]"
  }, {
    "left" : "descriptors.put(descriptor.getId(), descriptor);",
    "right" : "descriptors.put(descriptor.getId(), descriptor);",
    "info" : "ExpressionStatement[35890-35938]:ExpressionStatement[36810-36858]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[35975-36117]:Block[36895-37037]"
  }, {
    "left" : "log.debug(\"Ignoring deleted job {}\", jobId);",
    "right" : "log.debug(\"Ignoring deleted job {}\", jobId);",
    "info" : "ExpressionStatement[36063-36107]:ExpressionStatement[36983-37027]"
  }, {
    "left" : "return descriptors;",
    "right" : "return descriptors;",
    "info" : "ReturnStatement[36132-36151]:ReturnStatement[37052-37071]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36198-36271]:Block[37118-37191]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting jobs failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting jobs failed\", e);",
    "info" : "ThrowStatement[36206-36265]:ThrowStatement[37126-37185]"
  }, {
    "left" : "/**\n   * Returns the current job status as a {@link JobStatus} object.\n   */",
    "right" : "/**\n   * Returns the current job status as a {@link JobStatus} object.\n   */",
    "info" : "Javadoc[36279-36355]:Javadoc[37199-37275]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[36358-36367]:MarkerAnnotation[37278-37287]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[36370-36376]:Modifier[37290-37296]"
  }, {
    "left" : "JobStatus",
    "right" : "JobStatus",
    "info" : "SimpleType[36377-36386]:SimpleType[37297-37306]"
  }, {
    "left" : "getJobStatus",
    "right" : "getJobStatus",
    "info" : "SimpleName[36387-36399]:SimpleName[37307-37319]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[36400-36417]:SingleVariableDeclaration[37320-37337]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36419-37493]:Block[37339-38413]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getJobStatus\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getJobStatus\");",
    "info" : "VariableDeclarationStatement[36425-36485]:VariableDeclarationStatement[37345-37405]"
  }, {
    "left" : "final Job job = getJob(client, jobId);",
    "right" : "final Job job = getJob(client, jobId);",
    "info" : "VariableDeclarationStatement[36491-36529]:VariableDeclarationStatement[37411-37449]"
  }, {
    "left" : "if (job == null)",
    "right" : "if (job == null)",
    "info" : "IfStatement[36534-36577]:IfStatement[37454-37497]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36551-36577]:Block[37471-37497]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[36559-36571]:ReturnStatement[37479-37491]"
  }, {
    "left" : "final List<String> hosts;",
    "right" : "final List<String> hosts;",
    "info" : "VariableDeclarationStatement[36583-36608]:VariableDeclarationStatement[37503-37528]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[36613-36729]:TryStatement[37533-37649]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36617-36667]:Block[37537-37587]"
  }, {
    "left" : "hosts = listJobHosts(client, jobId);",
    "right" : "hosts = listJobHosts(client, jobId);",
    "info" : "ExpressionStatement[36625-36661]:ExpressionStatement[37545-37581]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36703-36729]:Block[37623-37649]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[36711-36723]:ReturnStatement[37631-37643]"
  }, {
    "left" : "final ImmutableMap.Builder<String, Deployment> deployments = ImmutableMap.builder();",
    "right" : "final ImmutableMap.Builder<String, Deployment> deployments = ImmutableMap.builder();",
    "info" : "VariableDeclarationStatement[36735-36819]:VariableDeclarationStatement[37655-37739]"
  }, {
    "left" : "final ImmutableMap.Builder<String, TaskStatus> taskStatuses = ImmutableMap.builder();",
    "right" : "final ImmutableMap.Builder<String, TaskStatus> taskStatuses = ImmutableMap.builder();",
    "info" : "VariableDeclarationStatement[36824-36909]:VariableDeclarationStatement[37744-37829]"
  }, {
    "left" : "for (final String host : hosts)",
    "right" : "for (final String host : hosts)",
    "info" : "EnhancedForStatement[36914-37256]:EnhancedForStatement[37834-38176]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[36946-37256]:Block[37866-38176]"
  }, {
    "left" : "final TaskStatus taskStatus = getTaskStatus(client, host, jobId);",
    "right" : "final TaskStatus taskStatus = getTaskStatus(client, host, jobId);",
    "info" : "VariableDeclarationStatement[36954-37019]:VariableDeclarationStatement[37874-37939]"
  }, {
    "left" : "if (taskStatus != null)",
    "right" : "if (taskStatus != null)",
    "info" : "IfStatement[37026-37103]:IfStatement[37946-38023]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37050-37103]:Block[37970-38023]"
  }, {
    "left" : "taskStatuses.put(host, taskStatus);",
    "right" : "taskStatuses.put(host, taskStatus);",
    "info" : "ExpressionStatement[37060-37095]:ExpressionStatement[37980-38015]"
  }, {
    "left" : "final Deployment deployment = getDeployment(host, jobId);",
    "right" : "final Deployment deployment = getDeployment(host, jobId);",
    "info" : "VariableDeclarationStatement[37110-37167]:VariableDeclarationStatement[38030-38087]"
  }, {
    "left" : "if (deployment != null)",
    "right" : "if (deployment != null)",
    "info" : "IfStatement[37174-37250]:IfStatement[38094-38170]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37198-37250]:Block[38118-38170]"
  }, {
    "left" : "deployments.put(host, deployment);",
    "right" : "deployments.put(host, deployment);",
    "info" : "ExpressionStatement[37208-37242]:ExpressionStatement[38128-38162]"
  }, {
    "left" : "final Map<String, Deployment> deploymentsMap = deployments.build();",
    "right" : "final Map<String, Deployment> deploymentsMap = deployments.build();",
    "info" : "VariableDeclarationStatement[37262-37329]:VariableDeclarationStatement[38182-38249]"
  }, {
    "left" : "return JobStatus.newBuilder()\n        .setJob(job)\n        .setDeployments(deploymentsMap)\n        .setTaskStatuses(taskStatuses.build())\n        .build();",
    "right" : "return JobStatus.newBuilder()\n        .setJob(job)\n        .setDeployments(deploymentsMap)\n        .setTaskStatuses(taskStatuses.build())\n        .build();",
    "info" : "ReturnStatement[37334-37489]:ReturnStatement[38254-38409]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[37497-37504]:Modifier[38417-38424]"
  }, {
    "left" : "List<String>",
    "right" : "List<String>",
    "info" : "ParameterizedType[37505-37517]:ParameterizedType[38425-38437]"
  }, {
    "left" : "listJobHosts",
    "right" : "listJobHosts",
    "info" : "SimpleName[37518-37530]:SimpleName[38438-38450]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[37531-37559]:SingleVariableDeclaration[38451-38479]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[37561-37578]:SingleVariableDeclaration[38481-38498]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[37593-37617]:SimpleType[38513-38537]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37618-37952]:Block[38538-38872]"
  }, {
    "left" : "final List<String> hosts;",
    "right" : "final List<String> hosts;",
    "info" : "VariableDeclarationStatement[37624-37649]:VariableDeclarationStatement[38544-38569]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[37654-37930]:TryStatement[38574-38850]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37658-37728]:Block[38578-38648]"
  }, {
    "left" : "hosts = client.getChildren(Paths.configJobHosts(jobId));",
    "right" : "hosts = client.getChildren(Paths.configJobHosts(jobId));",
    "info" : "ExpressionStatement[37666-37722]:ExpressionStatement[38586-38642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37755-37811]:Block[38675-38731]"
  }, {
    "left" : "throw new JobDoesNotExistException(jobId);",
    "right" : "throw new JobDoesNotExistException(jobId);",
    "info" : "ThrowStatement[37763-37805]:ThrowStatement[38683-38725]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[37838-37930]:Block[38758-38850]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"failed to list hosts for job: \" + jobId, e);",
    "right" : "throw new HeliosRuntimeException(\"failed to list hosts for job: \" + jobId, e);",
    "info" : "ThrowStatement[37846-37924]:ThrowStatement[38766-38844]"
  }, {
    "left" : "return hosts;",
    "right" : "return hosts;",
    "info" : "ReturnStatement[37935-37948]:ReturnStatement[38855-38868]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[37956-37965]:MarkerAnnotation[38876-38885]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[37968-37974]:Modifier[38888-38894]"
  }, {
    "left" : "Job",
    "right" : "Job",
    "info" : "SimpleType[37975-37978]:SimpleType[38895-38898]"
  }, {
    "left" : "removeJob",
    "right" : "removeJob",
    "info" : "SimpleName[37979-37988]:SimpleName[38899-38908]"
  }, {
    "left" : "JobId jobId",
    "right" : "JobId jobId",
    "info" : "SingleVariableDeclaration[37989-38000]:SingleVariableDeclaration[38909-38920]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[38009-38033]:SimpleType[38929-38953]"
  }, {
    "left" : "JobStillDeployedException",
    "right" : "JobStillDeployedException",
    "info" : "SimpleType[38035-38060]:SimpleType[38955-38980]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38061-38212]:Block[38981-39132]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[38067-38208]:TryStatement[38987-39128]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38071-38126]:Block[38991-39046]"
  }, {
    "left" : "return removeJob(jobId, Job.EMPTY_TOKEN);",
    "right" : "return removeJob(jobId, Job.EMPTY_TOKEN);",
    "info" : "ReturnStatement[38079-38120]:ReturnStatement[38999-39040]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38164-38208]:Block[39084-39128]"
  }, {
    "left" : "throw Throwables.propagate(e);",
    "right" : "throw Throwables.propagate(e);",
    "info" : "ThrowStatement[38172-38202]:ThrowStatement[39092-39122]"
  }, {
    "left" : "/**\n   * Deletes a job from ZooKeeper.  Ensures that job is not currently running anywhere.\n   */",
    "right" : "/**\n   * Deletes a job from ZooKeeper.  Ensures that job is not currently running anywhere.\n   */",
    "info" : "Javadoc[38216-38313]:Javadoc[39136-39233]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[38316-38325]:MarkerAnnotation[39236-39245]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[38328-38334]:Modifier[39248-39254]"
  }, {
    "left" : "Job",
    "right" : "Job",
    "info" : "SimpleType[38335-38338]:SimpleType[39255-39258]"
  }, {
    "left" : "removeJob",
    "right" : "removeJob",
    "info" : "SimpleName[38339-38348]:SimpleName[39259-39268]"
  }, {
    "left" : "final JobId id",
    "right" : "final JobId id",
    "info" : "SingleVariableDeclaration[38349-38363]:SingleVariableDeclaration[39269-39283]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[38365-38383]:SingleVariableDeclaration[39285-39303]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[38398-38422]:SimpleType[39318-39342]"
  }, {
    "left" : "JobStillDeployedException",
    "right" : "JobStillDeployedException",
    "info" : "SimpleType[38424-38449]:SimpleType[39344-39369]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[38451-38477]:SimpleType[39371-39397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38478-39905]:Block[39398-40825]"
  }, {
    "left" : "log.info(\"removing job: id={}\", id);",
    "right" : "log.info(\"removing job: id={}\", id);",
    "info" : "ExpressionStatement[38484-38520]:ExpressionStatement[39404-39440]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"removeJob\");",
    "right" : "final ZooKeeperClient client = provider.get(\"removeJob\");",
    "info" : "VariableDeclarationStatement[38525-38582]:VariableDeclarationStatement[39445-39502]"
  }, {
    "left" : "final Job job = getJob(client, id);",
    "right" : "final Job job = getJob(client, id);",
    "info" : "VariableDeclarationStatement[38587-38622]:VariableDeclarationStatement[39507-39542]"
  }, {
    "left" : "if (job == null)",
    "right" : "if (job == null)",
    "info" : "IfStatement[38627-38697]:IfStatement[39547-39617]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38644-38697]:Block[39564-39617]"
  }, {
    "left" : "throw new JobDoesNotExistException(id);",
    "right" : "throw new JobDoesNotExistException(id);",
    "info" : "ThrowStatement[38652-38691]:ThrowStatement[39572-39611]"
  }, {
    "left" : "verifyToken(token, job);",
    "right" : "verifyToken(token, job);",
    "info" : "ExpressionStatement[38702-38726]:ExpressionStatement[39622-39646]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[38774-39884]:TryStatement[39694-40804]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38778-39566]:Block[39698-40486]"
  }, {
    "left" : "final ImmutableList.Builder<ZooKeeperOperation> operations = ImmutableList.builder();",
    "right" : "final ImmutableList.Builder<ZooKeeperOperation> operations = ImmutableList.builder();",
    "info" : "VariableDeclarationStatement[38786-38871]:VariableDeclarationStatement[39706-39791]"
  }, {
    "left" : "final UUID jobCreationOperationId = getJobCreation(client, id);",
    "right" : "final UUID jobCreationOperationId = getJobCreation(client, id);",
    "info" : "VariableDeclarationStatement[38878-38941]:VariableDeclarationStatement[39798-39861]"
  }, {
    "left" : "if (jobCreationOperationId != null)",
    "right" : "if (jobCreationOperationId != null)",
    "info" : "IfStatement[38948-39078]:IfStatement[39868-39998]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[38984-39078]:Block[39904-39998]"
  }, {
    "left" : "operations.add(delete(Paths.configJobCreation(id, jobCreationOperationId)));",
    "right" : "operations.add(delete(Paths.configJobCreation(id, jobCreationOperationId)));",
    "info" : "ExpressionStatement[38994-39070]:ExpressionStatement[39914-39990]"
  }, {
    "left" : "operations.add(delete(Paths.configJobHosts(id)),\n                     delete(Paths.configJobRefShort(id)),\n                     delete(Paths.configJob(id)),\n                     // Touch the jobs root node so that its version is bumped on every job\n                     // change down the tree. Effectively, make it that version == cVersion.\n                     set(Paths.configJobs(), UUID.randomUUID().toString().getBytes()));",
    "right" : "operations.add(delete(Paths.configJobHosts(id)),\n                     delete(Paths.configJobRefShort(id)),\n                     delete(Paths.configJob(id)),\n                     // Touch the jobs root node so that its version is bumped on every job\n                     // change down the tree. Effectively, make it that version == cVersion.\n                     set(Paths.configJobs(), UUID.randomUUID().toString().getBytes()));",
    "info" : "ExpressionStatement[39085-39514]:ExpressionStatement[40005-40434]"
  }, {
    "left" : "client.transaction(operations.build());",
    "right" : "client.transaction(operations.build());",
    "info" : "ExpressionStatement[39521-39560]:ExpressionStatement[40441-40480]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39599-39652]:Block[40519-40572]"
  }, {
    "left" : "throw new JobDoesNotExistException(id);",
    "right" : "throw new JobDoesNotExistException(id);",
    "info" : "ThrowStatement[39607-39646]:ThrowStatement[40527-40566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39687-39767]:Block[40607-40687]"
  }, {
    "left" : "throw new JobStillDeployedException(id, listJobHosts(client, id));",
    "right" : "throw new JobStillDeployedException(id, listJobHosts(client, id));",
    "info" : "ThrowStatement[39695-39761]:ThrowStatement[40615-40681]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[39800-39884]:Block[40720-40804]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"removing job \" + id + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"removing job \" + id + \" failed\", e);",
    "info" : "ThrowStatement[39808-39878]:ThrowStatement[40728-40798]"
  }, {
    "left" : "return job;",
    "right" : "return job;",
    "info" : "ReturnStatement[39890-39901]:ReturnStatement[40810-40821]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[39909-39916]:Modifier[40829-40836]"
  }, {
    "left" : "UUID",
    "right" : "UUID",
    "info" : "SimpleType[39917-39921]:SimpleType[40837-40841]"
  }, {
    "left" : "getJobCreation",
    "right" : "getJobCreation",
    "info" : "SimpleName[39922-39936]:SimpleName[40842-40856]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[39937-39965]:SingleVariableDeclaration[40857-40885]"
  }, {
    "left" : "final JobId id",
    "right" : "final JobId id",
    "info" : "SingleVariableDeclaration[39967-39981]:SingleVariableDeclaration[40887-40901]"
  }, {
    "left" : "KeeperException",
    "right" : "KeeperException",
    "info" : "SimpleType[39996-40011]:SimpleType[40916-40931]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40012-40336]:Block[40932-41256]"
  }, {
    "left" : "final String parent = Paths.configHostJobCreationParent(id);",
    "right" : "final String parent = Paths.configHostJobCreationParent(id);",
    "info" : "VariableDeclarationStatement[40018-40078]:VariableDeclarationStatement[40938-40998]"
  }, {
    "left" : "final List<String> children = client.getChildren(parent);",
    "right" : "final List<String> children = client.getChildren(parent);",
    "info" : "VariableDeclarationStatement[40083-40140]:VariableDeclarationStatement[41003-41060]"
  }, {
    "left" : "for (final String child : children)",
    "right" : "for (final String child : children)",
    "info" : "EnhancedForStatement[40145-40315]:EnhancedForStatement[41065-41235]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40181-40315]:Block[41101-41235]"
  }, {
    "left" : "if (Paths.isConfigJobCreation(id, parent, child))",
    "right" : "if (Paths.isConfigJobCreation(id, parent, child))",
    "info" : "IfStatement[40189-40309]:IfStatement[41109-41229]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40239-40309]:Block[41159-41229]"
  }, {
    "left" : "return Paths.configJobCreationId(id, parent, child);",
    "right" : "return Paths.configJobCreationId(id, parent, child);",
    "info" : "ReturnStatement[40249-40301]:ReturnStatement[41169-41221]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[40320-40332]:ReturnStatement[41240-41252]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[40340-40349]:MarkerAnnotation[41260-41269]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40352-40358]:Modifier[41272-41278]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40359-40363]:PrimitiveType[41279-41283]"
  }, {
    "left" : "deployJob",
    "right" : "deployJob",
    "info" : "SimpleName[40364-40373]:SimpleName[41284-41293]"
  }, {
    "left" : "String host",
    "right" : "String host",
    "info" : "SingleVariableDeclaration[40374-40385]:SingleVariableDeclaration[41294-41305]"
  }, {
    "left" : "Deployment job",
    "right" : "Deployment job",
    "info" : "SingleVariableDeclaration[40387-40401]:SingleVariableDeclaration[41307-41321]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[40416-40437]:SimpleType[41336-41357]"
  }, {
    "left" : "JobAlreadyDeployedException",
    "right" : "JobAlreadyDeployedException",
    "info" : "SimpleType[40439-40466]:SimpleType[41359-41386]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[40468-40492]:SimpleType[41388-41412]"
  }, {
    "left" : "JobPortAllocationConflictException",
    "right" : "JobPortAllocationConflictException",
    "info" : "SimpleType[40507-40541]:SimpleType[41427-41461]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40542-40690]:Block[41462-41610]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[40548-40686]:TryStatement[41468-41606]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40552-40604]:Block[41472-41524]"
  }, {
    "left" : "deployJob(host, job, Job.EMPTY_TOKEN);",
    "right" : "deployJob(host, job, Job.EMPTY_TOKEN);",
    "info" : "ExpressionStatement[40560-40598]:ExpressionStatement[41480-41518]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[40642-40686]:Block[41562-41606]"
  }, {
    "left" : "throw Throwables.propagate(e);",
    "right" : "throw Throwables.propagate(e);",
    "info" : "ThrowStatement[40650-40680]:ThrowStatement[41570-41600]"
  }, {
    "left" : "/**\n   * Creates a config entry within the specified agent to un/deploy a job, or more generally, change\n   * the deployment status according to the {@code Goal} value in {@link Deployment}.\n   */",
    "right" : "/**\n   * Creates a config entry within the specified agent to un/deploy a job, or more generally, change\n   * the deployment status according to the {@code Goal} value in {@link Deployment}.\n   */",
    "info" : "Javadoc[40694-40890]:Javadoc[41614-41810]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[40893-40902]:MarkerAnnotation[41813-41822]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[40905-40911]:Modifier[41825-41831]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[40912-40916]:PrimitiveType[41832-41836]"
  }, {
    "left" : "deployJob",
    "right" : "deployJob",
    "info" : "SimpleName[40917-40926]:SimpleName[41837-41846]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[40927-40944]:SingleVariableDeclaration[41847-41864]"
  }, {
    "left" : "final Deployment deployment",
    "right" : "final Deployment deployment",
    "info" : "SingleVariableDeclaration[40946-40973]:SingleVariableDeclaration[41866-41893]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[40975-40993]:SingleVariableDeclaration[41895-41913]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[41008-41032]:SimpleType[41928-41952]"
  }, {
    "left" : "JobAlreadyDeployedException",
    "right" : "JobAlreadyDeployedException",
    "info" : "SimpleType[41034-41061]:SimpleType[41954-41981]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[41063-41084]:SimpleType[41983-42004]"
  }, {
    "left" : "JobPortAllocationConflictException",
    "right" : "JobPortAllocationConflictException",
    "info" : "SimpleType[41099-41133]:SimpleType[42019-42053]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[41135-41161]:SimpleType[42055-42081]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41162-41285]:Block[42082-42205]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"deployJob\");",
    "right" : "final ZooKeeperClient client = provider.get(\"deployJob\");",
    "info" : "VariableDeclarationStatement[41168-41225]:VariableDeclarationStatement[42088-42145]"
  }, {
    "left" : "deployJobRetry(client, host, deployment, 0, token);",
    "right" : "deployJobRetry(client, host, deployment, 0, token);",
    "info" : "ExpressionStatement[41230-41281]:ExpressionStatement[42150-42201]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[41289-41296]:Modifier[42209-42216]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[41297-41301]:PrimitiveType[42217-42221]"
  }, {
    "left" : "deployJobRetry",
    "right" : "deployJobRetry",
    "info" : "SimpleName[41302-41316]:SimpleName[42222-42236]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[41317-41345]:SingleVariableDeclaration[42237-42265]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[41347-41364]:SingleVariableDeclaration[42267-42284]"
  }, {
    "left" : "final Deployment deployment",
    "right" : "final Deployment deployment",
    "info" : "SingleVariableDeclaration[41396-41423]:SingleVariableDeclaration[42316-42343]"
  }, {
    "left" : "int count",
    "right" : "int count",
    "info" : "SingleVariableDeclaration[41425-41434]:SingleVariableDeclaration[42345-42354]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[41436-41454]:SingleVariableDeclaration[42356-42374]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[41469-41493]:SimpleType[42389-42413]"
  }, {
    "left" : "JobAlreadyDeployedException",
    "right" : "JobAlreadyDeployedException",
    "info" : "SimpleType[41495-41522]:SimpleType[42415-42442]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[41524-41545]:SimpleType[42444-42465]"
  }, {
    "left" : "JobPortAllocationConflictException",
    "right" : "JobPortAllocationConflictException",
    "info" : "SimpleType[41560-41594]:SimpleType[42480-42514]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[41596-41622]:SimpleType[42516-42542]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41623-45706]:Block[42543-46626]"
  }, {
    "left" : "if (count == 3)",
    "right" : "if (count == 3)",
    "info" : "IfStatement[41629-41814]:IfStatement[42549-42734]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41645-41814]:Block[42565-42734]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"3 failures (possibly concurrent modifications) while \" +\n                                       \"deploying. Giving up.\");",
    "right" : "throw new HeliosRuntimeException(\"3 failures (possibly concurrent modifications) while \" +\n                                       \"deploying. Giving up.\");",
    "info" : "ThrowStatement[41653-41808]:ThrowStatement[42573-42728]"
  }, {
    "left" : "log.info(\"deploying {}: {} (retry={})\", deployment, host, count);",
    "right" : "log.info(\"deploying {}: {} (retry={})\", deployment, host, count);",
    "info" : "ExpressionStatement[41819-41884]:ExpressionStatement[42739-42804]"
  }, {
    "left" : "final JobId id = deployment.getJobId();",
    "right" : "final JobId id = deployment.getJobId();",
    "info" : "VariableDeclarationStatement[41890-41929]:VariableDeclarationStatement[42810-42849]"
  }, {
    "left" : "final Job job = getJob(id);",
    "right" : "final Job job = getJob(id);",
    "info" : "VariableDeclarationStatement[41934-41961]:VariableDeclarationStatement[42854-42881]"
  }, {
    "left" : "if (job == null)",
    "right" : "if (job == null)",
    "info" : "IfStatement[41967-42037]:IfStatement[42887-42957]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[41984-42037]:Block[42904-42957]"
  }, {
    "left" : "throw new JobDoesNotExistException(id);",
    "right" : "throw new JobDoesNotExistException(id);",
    "info" : "ThrowStatement[41992-42031]:ThrowStatement[42912-42951]"
  }, {
    "left" : "verifyToken(token, job);",
    "right" : "verifyToken(token, job);",
    "info" : "ExpressionStatement[42042-42066]:ExpressionStatement[42962-42986]"
  }, {
    "left" : "final UUID operationId = UUID.randomUUID();",
    "right" : "final UUID operationId = UUID.randomUUID();",
    "info" : "VariableDeclarationStatement[42072-42115]:VariableDeclarationStatement[42992-43035]"
  }, {
    "left" : "final String jobPath = Paths.configJob(id);",
    "right" : "final String jobPath = Paths.configJob(id);",
    "info" : "VariableDeclarationStatement[42120-42163]:VariableDeclarationStatement[43040-43083]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[42169-42344]:TryStatement[43089-43264]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42173-42217]:Block[43093-43137]"
  }, {
    "left" : "Paths.configHostJob(host, id);",
    "right" : "Paths.configHostJob(host, id);",
    "info" : "ExpressionStatement[42181-42211]:ExpressionStatement[43101-43131]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42253-42344]:Block[43173-43264]"
  }, {
    "left" : "throw new HostNotFoundException(\"Could not find Helios host '\" + host + \"'\");",
    "right" : "throw new HostNotFoundException(\"Could not find Helios host '\" + host + \"'\");",
    "info" : "ThrowStatement[42261-42338]:ThrowStatement[43181-43258]"
  }, {
    "left" : "final String taskPath = Paths.configHostJob(host, id);",
    "right" : "final String taskPath = Paths.configHostJob(host, id);",
    "info" : "VariableDeclarationStatement[42350-42404]:VariableDeclarationStatement[43270-43324]"
  }, {
    "left" : "final String taskCreationPath = Paths.configHostJobCreation(host, id, operationId);",
    "right" : "final String taskCreationPath = Paths.configHostJobCreation(host, id, operationId);",
    "info" : "VariableDeclarationStatement[42409-42492]:VariableDeclarationStatement[43329-43412]"
  }, {
    "left" : "final List<Integer> staticPorts = staticPorts(job);",
    "right" : "final List<Integer> staticPorts = staticPorts(job);",
    "info" : "VariableDeclarationStatement[42498-42549]:VariableDeclarationStatement[43418-43469]"
  }, {
    "left" : "final Map<String, byte[]> portNodes = Maps.newHashMap();",
    "right" : "final Map<String, byte[]> portNodes = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[42554-42610]:VariableDeclarationStatement[43474-43530]"
  }, {
    "left" : "final byte[] idJson = id.toJsonBytes();",
    "right" : "final byte[] idJson = id.toJsonBytes();",
    "info" : "VariableDeclarationStatement[42615-42654]:VariableDeclarationStatement[43535-43574]"
  }, {
    "left" : "for (final int port : staticPorts)",
    "right" : "for (final int port : staticPorts)",
    "info" : "EnhancedForStatement[42659-42796]:EnhancedForStatement[43579-43716]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[42694-42796]:Block[43614-43716]"
  }, {
    "left" : "final String path = Paths.configHostPort(host, port);",
    "right" : "final String path = Paths.configHostPort(host, port);",
    "info" : "VariableDeclarationStatement[42702-42755]:VariableDeclarationStatement[43622-43675]"
  }, {
    "left" : "portNodes.put(path, idJson);",
    "right" : "portNodes.put(path, idJson);",
    "info" : "ExpressionStatement[42762-42790]:ExpressionStatement[43682-43710]"
  }, {
    "left" : "final Task task = new Task(job, deployment.getGoal(), deployment.getDeployerUser(),\n                               deployment.getDeployerMaster(), deployment.getDeploymentGroupName());",
    "right" : "final Task task = new Task(job, deployment.getGoal(), deployment.getDeployerUser(),\n                               deployment.getDeployerMaster(), deployment.getDeploymentGroupName());",
    "info" : "VariableDeclarationStatement[42802-42986]:VariableDeclarationStatement[43722-43906]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations = Lists.newArrayList(\n        check(jobPath),\n        create(portNodes),\n        create(Paths.configJobHost(id, host)));",
    "right" : "final List<ZooKeeperOperation> operations = Lists.newArrayList(\n        check(jobPath),\n        create(portNodes),\n        create(Paths.configJobHost(id, host)));",
    "info" : "VariableDeclarationStatement[42991-43153]:VariableDeclarationStatement[43911-44073]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[43195-43590]:TryStatement[44115-44510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43199-43341]:Block[44119-44261]"
  }, {
    "left" : "client.getNode(taskPath);",
    "right" : "client.getNode(taskPath);",
    "info" : "ExpressionStatement[43207-43232]:ExpressionStatement[44127-44152]"
  }, {
    "left" : "throw new JobAlreadyDeployedException(host, id);",
    "right" : "throw new JobAlreadyDeployedException(host, id);",
    "info" : "ThrowStatement[43287-43335]:ThrowStatement[44207-44255]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43368-43469]:Block[44288-44389]"
  }, {
    "left" : "operations.add(create(taskPath, task));",
    "right" : "operations.add(create(taskPath, task));",
    "info" : "ExpressionStatement[43376-43415]:ExpressionStatement[44296-44335]"
  }, {
    "left" : "operations.add(create(taskCreationPath));",
    "right" : "operations.add(create(taskCreationPath));",
    "info" : "ExpressionStatement[43422-43463]:ExpressionStatement[44342-44383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43496-43590]:Block[44416-44510]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"reading existing task description failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"reading existing task description failed\", e);",
    "info" : "ThrowStatement[43504-43584]:ThrowStatement[44424-44504]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[43674-45702]:TryStatement[44594-46622]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43678-43794]:Block[44598-44714]"
  }, {
    "left" : "client.transaction(operations);",
    "right" : "client.transaction(operations);",
    "info" : "ExpressionStatement[43686-43717]:ExpressionStatement[44606-44637]"
  }, {
    "left" : "log.info(\"deployed {}: {} (retry={})\", deployment, host, count);",
    "right" : "log.info(\"deployed {}: {} (retry={})\", deployment, host, count);",
    "info" : "ExpressionStatement[43724-43788]:ExpressionStatement[44644-44708]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[43821-44217]:Block[44741-45137]"
  }, {
    "left" : "assertJobExists(client, id);",
    "right" : "assertJobExists(client, id);",
    "info" : "ExpressionStatement[43885-43913]:ExpressionStatement[44805-44833]"
  }, {
    "left" : "assertHostExists(client, host);",
    "right" : "assertHostExists(client, host);",
    "info" : "ExpressionStatement[43920-43951]:ExpressionStatement[44840-44871]"
  }, {
    "left" : "deployJobRetry(client, host, deployment, count + 1, token);",
    "right" : "deployJobRetry(client, host, deployment, count + 1, token);",
    "info" : "ExpressionStatement[44152-44211]:ExpressionStatement[45072-45131]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44248-45601]:Block[45168-46521]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[44309-44588]:TryStatement[45229-45508]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44313-44471]:Block[45233-45391]"
  }, {
    "left" : "if (client.exists(taskCreationPath) != null)",
    "right" : "if (client.exists(taskCreationPath) != null)",
    "info" : "IfStatement[44323-44463]:IfStatement[45243-45383]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44368-44463]:Block[45288-45383]"
  }, {
    "left" : "return;",
    "right" : "return;",
    "info" : "ReturnStatement[44446-44453]:ReturnStatement[45366-45373]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44499-44588]:Block[45419-45508]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"checking job deployment failed\", ex);",
    "right" : "throw new HeliosRuntimeException(\"checking job deployment failed\", ex);",
    "info" : "ThrowStatement[44509-44580]:ThrowStatement[45429-45500]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[44595-44887]:TryStatement[45515-45807]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44599-44771]:Block[45519-45691]"
  }, {
    "left" : "if (client.stat(taskPath) != null)",
    "right" : "if (client.stat(taskPath) != null)",
    "info" : "IfStatement[44658-44763]:IfStatement[45578-45683]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44693-44763]:Block[45613-45683]"
  }, {
    "left" : "throw new JobAlreadyDeployedException(host, id);",
    "right" : "throw new JobAlreadyDeployedException(host, id);",
    "info" : "ThrowStatement[44705-44753]:ThrowStatement[45625-45673]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44799-44887]:Block[45719-45807]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"checking job deployment failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"checking job deployment failed\", e);",
    "info" : "ThrowStatement[44809-44879]:ThrowStatement[45729-45799]"
  }, {
    "left" : "for (final int port : staticPorts)",
    "right" : "for (final int port : staticPorts)",
    "info" : "EnhancedForStatement[44937-45477]:EnhancedForStatement[45857-46397]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[44972-45477]:Block[45892-46397]"
  }, {
    "left" : "final String path = Paths.configHostPort(host, port);",
    "right" : "final String path = Paths.configHostPort(host, port);",
    "info" : "VariableDeclarationStatement[44982-45035]:VariableDeclarationStatement[45902-45955]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[45044-45469]:TryStatement[45964-46389]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45048-45333]:Block[45968-46253]"
  }, {
    "left" : "if (client.stat(path) == null)",
    "right" : "if (client.stat(path) == null)",
    "info" : "IfStatement[45060-45126]:IfStatement[45980-46046]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45091-45126]:Block[46011-46046]"
  }, {
    "left" : "continue;",
    "right" : "continue;",
    "info" : "ContinueStatement[45105-45114]:ContinueStatement[46025-46034]"
  }, {
    "left" : "final byte[] b = client.getData(path);",
    "right" : "final byte[] b = client.getData(path);",
    "info" : "VariableDeclarationStatement[45137-45175]:VariableDeclarationStatement[46057-46095]"
  }, {
    "left" : "final JobId existingJobId = parse(b, JobId.class);",
    "right" : "final JobId existingJobId = parse(b, JobId.class);",
    "info" : "VariableDeclarationStatement[45186-45236]:VariableDeclarationStatement[46106-46156]"
  }, {
    "left" : "throw new JobPortAllocationConflictException(id, existingJobId, host, port);",
    "right" : "throw new JobPortAllocationConflictException(id, existingJobId, host, port);",
    "info" : "ThrowStatement[45247-45323]:ThrowStatement[46167-46243]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45375-45469]:Block[46295-46389]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"checking port allocations failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"checking port allocations failed\", e);",
    "info" : "ThrowStatement[45387-45459]:ThrowStatement[46307-46379]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"deploying job failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"deploying job failed\", e);",
    "info" : "ThrowStatement[45535-45595]:ThrowStatement[46455-46515]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45628-45702]:Block[46548-46622]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"deploying job failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"deploying job failed\", e);",
    "info" : "ThrowStatement[45636-45696]:ThrowStatement[46556-46616]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[45710-45717]:Modifier[46630-46637]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[45718-45722]:PrimitiveType[46638-46642]"
  }, {
    "left" : "assertJobExists",
    "right" : "assertJobExists",
    "info" : "SimpleName[45723-45738]:SimpleName[46643-46658]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[45739-45767]:SingleVariableDeclaration[46659-46687]"
  }, {
    "left" : "final JobId id",
    "right" : "final JobId id",
    "info" : "SingleVariableDeclaration[45769-45783]:SingleVariableDeclaration[46689-46703]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[45798-45822]:SimpleType[46718-46742]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45823-46096]:Block[46743-47016]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[45829-46092]:TryStatement[46749-47012]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45833-45982]:Block[46753-46902]"
  }, {
    "left" : "final String path = Paths.configJob(id);",
    "right" : "final String path = Paths.configJob(id);",
    "info" : "VariableDeclarationStatement[45841-45881]:VariableDeclarationStatement[46761-46801]"
  }, {
    "left" : "if (client.stat(path) == null)",
    "right" : "if (client.stat(path) == null)",
    "info" : "IfStatement[45888-45976]:IfStatement[46808-46896]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[45919-45976]:Block[46839-46896]"
  }, {
    "left" : "throw new JobDoesNotExistException(id);",
    "right" : "throw new JobDoesNotExistException(id);",
    "info" : "ThrowStatement[45929-45968]:ThrowStatement[46849-46888]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46009-46092]:Block[46929-47012]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"checking job existence failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"checking job existence failed\", e);",
    "info" : "ThrowStatement[46017-46086]:ThrowStatement[46937-47006]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[46100-46107]:Modifier[47020-47027]"
  }, {
    "left" : "List<Integer>",
    "right" : "List<Integer>",
    "info" : "ParameterizedType[46108-46121]:ParameterizedType[47028-47041]"
  }, {
    "left" : "staticPorts",
    "right" : "staticPorts",
    "info" : "SimpleName[46122-46133]:SimpleName[47042-47053]"
  }, {
    "left" : "final Job job",
    "right" : "final Job job",
    "info" : "SingleVariableDeclaration[46134-46147]:SingleVariableDeclaration[47054-47067]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46149-46427]:Block[47069-47347]"
  }, {
    "left" : "final List<Integer> staticPorts = Lists.newArrayList();",
    "right" : "final List<Integer> staticPorts = Lists.newArrayList();",
    "info" : "VariableDeclarationStatement[46155-46210]:VariableDeclarationStatement[47075-47130]"
  }, {
    "left" : "for (final PortMapping portMapping : job.getPorts().values())",
    "right" : "for (final PortMapping portMapping : job.getPorts().values())",
    "info" : "EnhancedForStatement[46215-46399]:EnhancedForStatement[47135-47319]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46277-46399]:Block[47197-47319]"
  }, {
    "left" : "if (portMapping.getExternalPort() != null)",
    "right" : "if (portMapping.getExternalPort() != null)",
    "info" : "IfStatement[46285-46393]:IfStatement[47205-47313]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46328-46393]:Block[47248-47313]"
  }, {
    "left" : "staticPorts.add(portMapping.getExternalPort());",
    "right" : "staticPorts.add(portMapping.getExternalPort());",
    "info" : "ExpressionStatement[46338-46385]:ExpressionStatement[47258-47305]"
  }, {
    "left" : "return staticPorts;",
    "right" : "return staticPorts;",
    "info" : "ReturnStatement[46404-46423]:ReturnStatement[47324-47343]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[46431-46440]:MarkerAnnotation[47351-47360]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46443-46449]:Modifier[47363-47369]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[46450-46454]:PrimitiveType[47370-47374]"
  }, {
    "left" : "updateDeployment",
    "right" : "updateDeployment",
    "info" : "SimpleName[46455-46471]:SimpleName[47375-47391]"
  }, {
    "left" : "String host",
    "right" : "String host",
    "info" : "SingleVariableDeclaration[46472-46483]:SingleVariableDeclaration[47392-47403]"
  }, {
    "left" : "Deployment deployment",
    "right" : "Deployment deployment",
    "info" : "SingleVariableDeclaration[46485-46506]:SingleVariableDeclaration[47405-47426]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[46521-46542]:SimpleType[47441-47462]"
  }, {
    "left" : "JobNotDeployedException",
    "right" : "JobNotDeployedException",
    "info" : "SimpleType[46544-46567]:SimpleType[47464-47487]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46568-46724]:Block[47488-47644]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[46574-46720]:TryStatement[47494-47640]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46578-46644]:Block[47498-47564]"
  }, {
    "left" : "updateDeployment(host, deployment, Job.EMPTY_TOKEN);",
    "right" : "updateDeployment(host, deployment, Job.EMPTY_TOKEN);",
    "info" : "ExpressionStatement[46586-46638]:ExpressionStatement[47506-47558]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46682-46720]:Block[47602-47640]"
  }, {
    "left" : "Throwables.propagate(e);",
    "right" : "Throwables.propagate(e);",
    "info" : "ExpressionStatement[46690-46714]:ExpressionStatement[47610-47634]"
  }, {
    "left" : "/**\n   * Used to update the existing deployment of a job.\n   */",
    "right" : "/**\n   * Used to update the existing deployment of a job.\n   */",
    "info" : "Javadoc[46728-46791]:Javadoc[47648-47711]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[46794-46803]:MarkerAnnotation[47714-47723]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[46806-46812]:Modifier[47726-47732]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[46813-46817]:PrimitiveType[47733-47737]"
  }, {
    "left" : "updateDeployment",
    "right" : "updateDeployment",
    "info" : "SimpleName[46818-46834]:SimpleName[47738-47754]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[46835-46852]:SingleVariableDeclaration[47755-47772]"
  }, {
    "left" : "final Deployment deployment",
    "right" : "final Deployment deployment",
    "info" : "SingleVariableDeclaration[46854-46881]:SingleVariableDeclaration[47774-47801]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[46883-46901]:SingleVariableDeclaration[47803-47821]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[46916-46937]:SimpleType[47836-47857]"
  }, {
    "left" : "JobNotDeployedException",
    "right" : "JobNotDeployedException",
    "info" : "SimpleType[46939-46962]:SimpleType[47859-47882]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[46964-46990]:SimpleType[47884-47910]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[46991-47908]:Block[47911-48828]"
  }, {
    "left" : "log.info(\"updating deployment {}: {}\", deployment, host);",
    "right" : "log.info(\"updating deployment {}: {}\", deployment, host);",
    "info" : "ExpressionStatement[46997-47054]:ExpressionStatement[47917-47974]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"updateDeployment\");",
    "right" : "final ZooKeeperClient client = provider.get(\"updateDeployment\");",
    "info" : "VariableDeclarationStatement[47060-47124]:VariableDeclarationStatement[47980-48044]"
  }, {
    "left" : "final JobId jobId = deployment.getJobId();",
    "right" : "final JobId jobId = deployment.getJobId();",
    "info" : "VariableDeclarationStatement[47130-47172]:VariableDeclarationStatement[48050-48092]"
  }, {
    "left" : "final Job job = getJob(client, jobId);",
    "right" : "final Job job = getJob(client, jobId);",
    "info" : "VariableDeclarationStatement[47177-47215]:VariableDeclarationStatement[48097-48135]"
  }, {
    "left" : "if (job == null)",
    "right" : "if (job == null)",
    "info" : "IfStatement[47221-47299]:IfStatement[48141-48219]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47238-47299]:Block[48158-48219]"
  }, {
    "left" : "throw new JobNotDeployedException(host, jobId);",
    "right" : "throw new JobNotDeployedException(host, jobId);",
    "info" : "ThrowStatement[47246-47293]:ThrowStatement[48166-48213]"
  }, {
    "left" : "verifyToken(token, job);",
    "right" : "verifyToken(token, job);",
    "info" : "ExpressionStatement[47304-47328]:ExpressionStatement[48224-48248]"
  }, {
    "left" : "assertHostExists(client, host);",
    "right" : "assertHostExists(client, host);",
    "info" : "ExpressionStatement[47334-47365]:ExpressionStatement[48254-48285]"
  }, {
    "left" : "assertTaskExists(client, host, deployment.getJobId());",
    "right" : "assertTaskExists(client, host, deployment.getJobId());",
    "info" : "ExpressionStatement[47370-47424]:ExpressionStatement[48290-48344]"
  }, {
    "left" : "final String path = Paths.configHostJob(host, jobId);",
    "right" : "final String path = Paths.configHostJob(host, jobId);",
    "info" : "VariableDeclarationStatement[47430-47483]:VariableDeclarationStatement[48350-48403]"
  }, {
    "left" : "final Task task = new Task(job, deployment.getGoal(), Task.EMPTY_DEPLOYER_USER,\n                               Task.EMPTY_DEPLOYER_MASTER, Task.EMPTY_DEPOYMENT_GROUP_NAME);",
    "right" : "final Task task = new Task(job, deployment.getGoal(), Task.EMPTY_DEPLOYER_USER,\n                               Task.EMPTY_DEPLOYER_MASTER, Task.EMPTY_DEPOYMENT_GROUP_NAME);",
    "info" : "VariableDeclarationStatement[47488-47660]:VariableDeclarationStatement[48408-48580]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[47665-47904]:TryStatement[48585-48824]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47669-47724]:Block[48589-48644]"
  }, {
    "left" : "client.setData(path, task.toJsonBytes());",
    "right" : "client.setData(path, task.toJsonBytes());",
    "info" : "ExpressionStatement[47677-47718]:ExpressionStatement[48597-48638]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[47745-47904]:Block[48665-48824]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"updating deployment \" + deployment +\n                                       \" on host \" + host + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"updating deployment \" + deployment +\n                                       \" on host \" + host + \" failed\", e);",
    "info" : "ThrowStatement[47753-47898]:ThrowStatement[48673-48818]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[47912-47919]:Modifier[48832-48839]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[47920-47924]:PrimitiveType[48840-48844]"
  }, {
    "left" : "assertHostExists",
    "right" : "assertHostExists",
    "info" : "SimpleName[47925-47941]:SimpleName[48845-48861]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[47942-47970]:SingleVariableDeclaration[48862-48890]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[47972-47989]:SingleVariableDeclaration[48892-48909]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[48000-48021]:SimpleType[48920-48941]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48022-48248]:Block[48942-49168]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[48028-48244]:TryStatement[48948-49164]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48032-48085]:Block[48952-49005]"
  }, {
    "left" : "client.getData(Paths.configHost(host));",
    "right" : "client.getData(Paths.configHost(host));",
    "info" : "ExpressionStatement[48040-48079]:ExpressionStatement[48960-48999]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48112-48167]:Block[49032-49087]"
  }, {
    "left" : "throw new HostNotFoundException(host, e);",
    "right" : "throw new HostNotFoundException(host, e);",
    "info" : "ThrowStatement[48120-48161]:ThrowStatement[49040-49081]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48194-48244]:Block[49114-49164]"
  }, {
    "left" : "throw new HeliosRuntimeException(e);",
    "right" : "throw new HeliosRuntimeException(e);",
    "info" : "ThrowStatement[48202-48238]:ThrowStatement[49122-49158]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[48252-48259]:Modifier[49172-49179]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[48260-48264]:PrimitiveType[49180-49184]"
  }, {
    "left" : "assertTaskExists",
    "right" : "assertTaskExists",
    "info" : "SimpleName[48265-48281]:SimpleName[49185-49201]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[48282-48310]:SingleVariableDeclaration[49202-49230]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[48312-48329]:SingleVariableDeclaration[49232-49249]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[48331-48348]:SingleVariableDeclaration[49251-49268]"
  }, {
    "left" : "JobNotDeployedException",
    "right" : "JobNotDeployedException",
    "info" : "SimpleType[48359-48382]:SimpleType[49279-49302]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48383-48625]:Block[49303-49545]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[48389-48621]:TryStatement[49309-49541]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48393-48456]:Block[49313-49376]"
  }, {
    "left" : "client.getData(Paths.configHostJob(host, jobId));",
    "right" : "client.getData(Paths.configHostJob(host, jobId));",
    "info" : "ExpressionStatement[48401-48450]:ExpressionStatement[49321-49370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48483-48544]:Block[49403-49464]"
  }, {
    "left" : "throw new JobNotDeployedException(host, jobId);",
    "right" : "throw new JobNotDeployedException(host, jobId);",
    "info" : "ThrowStatement[48491-48538]:ThrowStatement[49411-49458]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48571-48621]:Block[49491-49541]"
  }, {
    "left" : "throw new HeliosRuntimeException(e);",
    "right" : "throw new HeliosRuntimeException(e);",
    "info" : "ThrowStatement[48579-48615]:ThrowStatement[49499-49535]"
  }, {
    "left" : "/**\n   * Returns the current deployment state of {@code jobId} on {@code host}.\n   */",
    "right" : "/**\n   * Returns the current deployment state of {@code jobId} on {@code host}.\n   */",
    "info" : "Javadoc[48629-48714]:Javadoc[49549-49634]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[48717-48726]:MarkerAnnotation[49637-49646]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[48729-48735]:Modifier[49649-49655]"
  }, {
    "left" : "Deployment",
    "right" : "Deployment",
    "info" : "SimpleType[48736-48746]:SimpleType[49656-49666]"
  }, {
    "left" : "getDeployment",
    "right" : "getDeployment",
    "info" : "SimpleName[48747-48760]:SimpleName[49667-49680]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[48761-48778]:SingleVariableDeclaration[49681-49698]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[48780-48797]:SingleVariableDeclaration[49700-49717]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48799-49389]:Block[49719-50309]"
  }, {
    "left" : "final String path = Paths.configHostJob(host, jobId);",
    "right" : "final String path = Paths.configHostJob(host, jobId);",
    "info" : "VariableDeclarationStatement[48805-48858]:VariableDeclarationStatement[49725-49778]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getDeployment\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getDeployment\");",
    "info" : "VariableDeclarationStatement[48863-48924]:VariableDeclarationStatement[49783-49844]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[48929-49385]:TryStatement[49849-50305]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[48933-49196]:Block[49853-50116]"
  }, {
    "left" : "final byte[] data = client.getData(path);",
    "right" : "final byte[] data = client.getData(path);",
    "info" : "VariableDeclarationStatement[48941-48982]:VariableDeclarationStatement[49861-49902]"
  }, {
    "left" : "final Task task = parse(data, Task.class);",
    "right" : "final Task task = parse(data, Task.class);",
    "info" : "VariableDeclarationStatement[48989-49031]:VariableDeclarationStatement[49909-49951]"
  }, {
    "left" : "return Deployment.of(jobId, task.getGoal(), task.getDeployerUser(), task.getDeployerMaster(),\n                           task.getDeploymentGroupName());",
    "right" : "return Deployment.of(jobId, task.getGoal(), task.getDeployerUser(), task.getDeployerMaster(),\n                           task.getDeploymentGroupName());",
    "info" : "ReturnStatement[49038-49190]:ReturnStatement[49958-50110]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49239-49265]:Block[50159-50185]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[49247-49259]:ReturnStatement[50167-50179]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49306-49385]:Block[50226-50305]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting deployment failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting deployment failed\", e);",
    "info" : "ThrowStatement[49314-49379]:ThrowStatement[50234-50299]"
  }, {
    "left" : "/**\n   * Returns the current status of the host named by {@code host}.\n   */",
    "right" : "/**\n   * Returns the current status of the host named by {@code host}.\n   */",
    "info" : "Javadoc[49393-49469]:Javadoc[50313-50389]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[49472-49481]:MarkerAnnotation[50392-50401]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[49484-49490]:Modifier[50404-50410]"
  }, {
    "left" : "HostStatus",
    "right" : "HostStatus",
    "info" : "SimpleType[49491-49501]:SimpleType[50411-50421]"
  }, {
    "left" : "getHostStatus",
    "right" : "getHostStatus",
    "info" : "SimpleName[49502-49515]:SimpleName[50422-50435]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[49516-49533]:SingleVariableDeclaration[50436-50453]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49535-50607]:Block[50455-51527]"
  }, {
    "left" : "final Stat stat;",
    "right" : "final Stat stat;",
    "info" : "VariableDeclarationStatement[49541-49557]:VariableDeclarationStatement[50461-50477]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"getHostStatus\");",
    "right" : "final ZooKeeperClient client = provider.get(\"getHostStatus\");",
    "info" : "VariableDeclarationStatement[49562-49623]:VariableDeclarationStatement[50482-50543]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[49629-49802]:TryStatement[50549-50722]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49633-49694]:Block[50553-50614]"
  }, {
    "left" : "stat = client.exists(Paths.configHostId(host));",
    "right" : "stat = client.exists(Paths.configHostId(host));",
    "info" : "ExpressionStatement[49641-49688]:ExpressionStatement[50561-50608]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49721-49802]:Block[50641-50722]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"Failed to check host status\", e);",
    "right" : "throw new HeliosRuntimeException(\"Failed to check host status\", e);",
    "info" : "ThrowStatement[49729-49796]:ThrowStatement[50649-50716]"
  }, {
    "left" : "if (stat == null)",
    "right" : "if (stat == null)",
    "info" : "IfStatement[49808-49852]:IfStatement[50728-50772]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[49826-49852]:Block[50746-50772]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[49834-49846]:ReturnStatement[50754-50766]"
  }, {
    "left" : "final boolean up = checkHostUp(client, host);",
    "right" : "final boolean up = checkHostUp(client, host);",
    "info" : "VariableDeclarationStatement[49858-49903]:VariableDeclarationStatement[50778-50823]"
  }, {
    "left" : "final HostInfo hostInfo = getHostInfo(client, host);",
    "right" : "final HostInfo hostInfo = getHostInfo(client, host);",
    "info" : "VariableDeclarationStatement[49908-49960]:VariableDeclarationStatement[50828-50880]"
  }, {
    "left" : "final AgentInfo agentInfo = getAgentInfo(client, host);",
    "right" : "final AgentInfo agentInfo = getAgentInfo(client, host);",
    "info" : "VariableDeclarationStatement[49965-50020]:VariableDeclarationStatement[50885-50940]"
  }, {
    "left" : "final Map<JobId, Deployment> tasks = getTasks(client, host);",
    "right" : "final Map<JobId, Deployment> tasks = getTasks(client, host);",
    "info" : "VariableDeclarationStatement[50025-50085]:VariableDeclarationStatement[50945-51005]"
  }, {
    "left" : "final Map<JobId, TaskStatus> statuses = getTaskStatuses(client, host);",
    "right" : "final Map<JobId, TaskStatus> statuses = getTaskStatuses(client, host);",
    "info" : "VariableDeclarationStatement[50090-50160]:VariableDeclarationStatement[51010-51080]"
  }, {
    "left" : "final Map<String, String> environment = getEnvironment(client, host);",
    "right" : "final Map<String, String> environment = getEnvironment(client, host);",
    "info" : "VariableDeclarationStatement[50165-50234]:VariableDeclarationStatement[51085-51154]"
  }, {
    "left" : "final Map<String, String> labels = getLabels(client, host);",
    "right" : "final Map<String, String> labels = getLabels(client, host);",
    "info" : "VariableDeclarationStatement[50239-50298]:VariableDeclarationStatement[51159-51218]"
  }, {
    "left" : "return HostStatus.newBuilder()\n        .setJobs(tasks)\n        .setStatuses(fromNullable(statuses).or(EMPTY_STATUSES))\n        .setHostInfo(hostInfo)\n        .setAgentInfo(agentInfo)\n        .setStatus(up ? UP : DOWN)\n        .setEnvironment(environment)\n        .setLabels(labels)\n        .build();",
    "right" : "return HostStatus.newBuilder()\n        .setJobs(tasks)\n        .setStatuses(fromNullable(statuses).or(EMPTY_STATUSES))\n        .setHostInfo(hostInfo)\n        .setAgentInfo(agentInfo)\n        .setStatus(up ? UP : DOWN)\n        .setEnvironment(environment)\n        .setLabels(labels)\n        .build();",
    "info" : "ReturnStatement[50304-50603]:ReturnStatement[51224-51523]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[50611-50618]:Modifier[51531-51538]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "TypeParameter[50620-50621]:TypeParameter[51540-51541]"
  }, {
    "left" : "T",
    "right" : "T",
    "info" : "SimpleType[50623-50624]:SimpleType[51543-51544]"
  }, {
    "left" : "tryGetEntity",
    "right" : "tryGetEntity",
    "info" : "SimpleName[50625-50637]:SimpleName[51545-51557]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[50638-50666]:SingleVariableDeclaration[51558-51586]"
  }, {
    "left" : "String path",
    "right" : "String path",
    "info" : "SingleVariableDeclaration[50668-50679]:SingleVariableDeclaration[51588-51599]"
  }, {
    "left" : "TypeReference<T> type",
    "right" : "TypeReference<T> type",
    "info" : "SingleVariableDeclaration[50681-50702]:SingleVariableDeclaration[51601-51622]"
  }, {
    "left" : "String name",
    "right" : "String name",
    "info" : "SingleVariableDeclaration[50733-50744]:SingleVariableDeclaration[51653-51664]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50746-51031]:Block[51666-51951]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[50752-51027]:TryStatement[51672-51947]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50756-50847]:Block[51676-51767]"
  }, {
    "left" : "final byte[] data = client.getData(path);",
    "right" : "final byte[] data = client.getData(path);",
    "info" : "VariableDeclarationStatement[50764-50805]:VariableDeclarationStatement[51684-51725]"
  }, {
    "left" : "return Json.read(data, type);",
    "right" : "return Json.read(data, type);",
    "info" : "ReturnStatement[50812-50841]:ReturnStatement[51732-51761]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50874-50900]:Block[51794-51820]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[50882-50894]:ReturnStatement[51802-51814]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[50941-51027]:Block[51861-51947]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"reading \" + name + \" info failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"reading \" + name + \" info failed\", e);",
    "info" : "ThrowStatement[50949-51021]:ThrowStatement[51869-51941]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[51035-51042]:Modifier[51955-51962]"
  }, {
    "left" : "Map<String, String>",
    "right" : "Map<String, String>",
    "info" : "ParameterizedType[51043-51062]:ParameterizedType[51963-51982]"
  }, {
    "left" : "getEnvironment",
    "right" : "getEnvironment",
    "info" : "SimpleName[51063-51077]:SimpleName[51983-51997]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[51078-51106]:SingleVariableDeclaration[51998-52026]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[51108-51125]:SingleVariableDeclaration[52028-52045]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51127-51228]:Block[52047-52148]"
  }, {
    "left" : "return tryGetEntity(client, Paths.statusHostEnvVars(host), STRING_MAP_TYPE, \"environment\");",
    "right" : "return tryGetEntity(client, Paths.statusHostEnvVars(host), STRING_MAP_TYPE, \"environment\");",
    "info" : "ReturnStatement[51133-51224]:ReturnStatement[52053-52144]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[51232-51239]:Modifier[52152-52159]"
  }, {
    "left" : "Map<String, String>",
    "right" : "Map<String, String>",
    "info" : "ParameterizedType[51240-51259]:ParameterizedType[52160-52179]"
  }, {
    "left" : "getLabels",
    "right" : "getLabels",
    "info" : "SimpleName[51260-51269]:SimpleName[52180-52189]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[51270-51298]:SingleVariableDeclaration[52190-52218]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[51300-51317]:SingleVariableDeclaration[52220-52237]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51319-51414]:Block[52239-52334]"
  }, {
    "left" : "return tryGetEntity(client, Paths.statusHostLabels(host), STRING_MAP_TYPE, \"labels\");",
    "right" : "return tryGetEntity(client, Paths.statusHostLabels(host), STRING_MAP_TYPE, \"labels\");",
    "info" : "ReturnStatement[51325-51410]:ReturnStatement[52245-52330]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[51418-51425]:Modifier[52338-52345]"
  }, {
    "left" : "AgentInfo",
    "right" : "AgentInfo",
    "info" : "SimpleType[51426-51435]:SimpleType[52346-52355]"
  }, {
    "left" : "getAgentInfo",
    "right" : "getAgentInfo",
    "info" : "SimpleName[51436-51448]:SimpleName[52356-52368]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[51449-51477]:SingleVariableDeclaration[52369-52397]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[51479-51496]:SingleVariableDeclaration[52399-52416]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51498-51600]:Block[52418-52520]"
  }, {
    "left" : "return tryGetEntity(client, Paths.statusHostAgentInfo(host), AGENT_INFO_TYPE, \"agent info\");",
    "right" : "return tryGetEntity(client, Paths.statusHostAgentInfo(host), AGENT_INFO_TYPE, \"agent info\");",
    "info" : "ReturnStatement[51504-51596]:ReturnStatement[52424-52516]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[51604-51611]:Modifier[52524-52531]"
  }, {
    "left" : "HostInfo",
    "right" : "HostInfo",
    "info" : "SimpleType[51612-51620]:SimpleType[52532-52540]"
  }, {
    "left" : "getHostInfo",
    "right" : "getHostInfo",
    "info" : "SimpleName[51621-51632]:SimpleName[52541-52552]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[51633-51661]:SingleVariableDeclaration[52553-52581]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[51663-51680]:SingleVariableDeclaration[52583-52600]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51682-51777]:Block[52602-52697]"
  }, {
    "left" : "return tryGetEntity(client, Paths.statusHostInfo(host), HOST_INFO_TYPE, \"host info\");",
    "right" : "return tryGetEntity(client, Paths.statusHostInfo(host), HOST_INFO_TYPE, \"host info\");",
    "info" : "ReturnStatement[51688-51773]:ReturnStatement[52608-52693]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[51781-51788]:Modifier[52701-52708]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[51789-51796]:PrimitiveType[52709-52716]"
  }, {
    "left" : "checkHostUp",
    "right" : "checkHostUp",
    "info" : "SimpleName[51797-51808]:SimpleName[52717-52728]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[51809-51837]:SingleVariableDeclaration[52729-52757]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[51839-51856]:SingleVariableDeclaration[52759-52776]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51858-52094]:Block[52778-53014]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[51864-52090]:TryStatement[52784-53010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51868-51967]:Block[52788-52887]"
  }, {
    "left" : "final Stat stat = client.exists(Paths.statusHostUp(host));",
    "right" : "final Stat stat = client.exists(Paths.statusHostUp(host));",
    "info" : "VariableDeclarationStatement[51876-51934]:VariableDeclarationStatement[52796-52854]"
  }, {
    "left" : "return stat != null;",
    "right" : "return stat != null;",
    "info" : "ReturnStatement[51941-51961]:ReturnStatement[52861-52881]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[51994-52090]:Block[52914-53010]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting host \" + host + \" up status failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting host \" + host + \" up status failed\", e);",
    "info" : "ThrowStatement[52002-52084]:ThrowStatement[52922-53004]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[52098-52105]:Modifier[53018-53025]"
  }, {
    "left" : "Map<JobId, TaskStatus>",
    "right" : "Map<JobId, TaskStatus>",
    "info" : "ParameterizedType[52106-52128]:ParameterizedType[53026-53048]"
  }, {
    "left" : "getTaskStatuses",
    "right" : "getTaskStatuses",
    "info" : "SimpleName[52129-52144]:SimpleName[53049-53064]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[52145-52173]:SingleVariableDeclaration[53065-53093]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[52175-52192]:SingleVariableDeclaration[53095-53112]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52194-52837]:Block[53114-53757]"
  }, {
    "left" : "final Map<JobId, TaskStatus> statuses = Maps.newHashMap();",
    "right" : "final Map<JobId, TaskStatus> statuses = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[52200-52258]:VariableDeclarationStatement[53120-53178]"
  }, {
    "left" : "final List<JobId> jobIds = listHostJobs(client, host);",
    "right" : "final List<JobId> jobIds = listHostJobs(client, host);",
    "info" : "VariableDeclarationStatement[52263-52317]:VariableDeclarationStatement[53183-53237]"
  }, {
    "left" : "for (final JobId jobId : jobIds)",
    "right" : "for (final JobId jobId : jobIds)",
    "info" : "EnhancedForStatement[52322-52811]:EnhancedForStatement[53242-53731]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52355-52811]:Block[53275-53731]"
  }, {
    "left" : "TaskStatus status;",
    "right" : "TaskStatus status;",
    "info" : "VariableDeclarationStatement[52363-52381]:VariableDeclarationStatement[53283-53301]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[52388-52646]:TryStatement[53308-53566]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52392-52454]:Block[53312-53374]"
  }, {
    "left" : "status = getTaskStatus(client, host, jobId);",
    "right" : "status = getTaskStatus(client, host, jobId);",
    "info" : "ExpressionStatement[52402-52446]:ExpressionStatement[53322-53366]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52488-52646]:Block[53408-53566]"
  }, {
    "left" : "status = null;",
    "right" : "status = null;",
    "info" : "ExpressionStatement[52624-52638]:ExpressionStatement[53544-53558]"
  }, {
    "left" : "if (status != null)",
    "right" : "if (status != null)",
    "info" : "IfStatement[52654-52805]:IfStatement[53574-53725]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52674-52720]:Block[53594-53640]"
  }, {
    "left" : "statuses.put(jobId, status);",
    "right" : "statuses.put(jobId, status);",
    "info" : "ExpressionStatement[52684-52712]:ExpressionStatement[53604-53632]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52726-52805]:Block[53646-53725]"
  }, {
    "left" : "log.debug(\"Task {} status missing for host {}\", jobId, host);",
    "right" : "log.debug(\"Task {} status missing for host {}\", jobId, host);",
    "info" : "ExpressionStatement[52736-52797]:ExpressionStatement[53656-53717]"
  }, {
    "left" : "return statuses;",
    "right" : "return statuses;",
    "info" : "ReturnStatement[52817-52833]:ReturnStatement[53737-53753]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[52841-52848]:Modifier[53761-53768]"
  }, {
    "left" : "List<JobId>",
    "right" : "List<JobId>",
    "info" : "ParameterizedType[52849-52860]:ParameterizedType[53769-53780]"
  }, {
    "left" : "listHostJobs",
    "right" : "listHostJobs",
    "info" : "SimpleName[52861-52873]:SimpleName[53781-53793]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[52874-52902]:SingleVariableDeclaration[53794-53822]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[52904-52921]:SingleVariableDeclaration[53824-53841]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[52923-53470]:Block[53843-54390]"
  }, {
    "left" : "final List<String> jobIdStrings;",
    "right" : "final List<String> jobIdStrings;",
    "info" : "VariableDeclarationStatement[52929-52961]:VariableDeclarationStatement[53849-53881]"
  }, {
    "left" : "final String folder = Paths.statusHostJobs(host);",
    "right" : "final String folder = Paths.statusHostJobs(host);",
    "info" : "VariableDeclarationStatement[52966-53015]:VariableDeclarationStatement[53886-53935]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[53020-53265]:TryStatement[53940-54185]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53024-53080]:Block[53944-54000]"
  }, {
    "left" : "jobIdStrings = client.getChildren(folder);",
    "right" : "jobIdStrings = client.getChildren(folder);",
    "info" : "ExpressionStatement[53032-53074]:ExpressionStatement[53952-53994]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53123-53149]:Block[54043-54069]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[53131-53143]:ReturnStatement[54051-54063]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53176-53265]:Block[54096-54185]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"List tasks for host failed: \" + host, e);",
    "right" : "throw new HeliosRuntimeException(\"List tasks for host failed: \" + host, e);",
    "info" : "ThrowStatement[53184-53259]:ThrowStatement[54104-54179]"
  }, {
    "left" : "final ImmutableList.Builder<JobId> jobIds = ImmutableList.builder();",
    "right" : "final ImmutableList.Builder<JobId> jobIds = ImmutableList.builder();",
    "info" : "VariableDeclarationStatement[53270-53338]:VariableDeclarationStatement[54190-54258]"
  }, {
    "left" : "for (String jobIdString : jobIdStrings)",
    "right" : "for (String jobIdString : jobIdStrings)",
    "info" : "EnhancedForStatement[53343-53439]:EnhancedForStatement[54263-54359]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53383-53439]:Block[54303-54359]"
  }, {
    "left" : "jobIds.add(JobId.fromString(jobIdString));",
    "right" : "jobIds.add(JobId.fromString(jobIdString));",
    "info" : "ExpressionStatement[53391-53433]:ExpressionStatement[54311-54353]"
  }, {
    "left" : "return jobIds.build();",
    "right" : "return jobIds.build();",
    "info" : "ReturnStatement[53444-53466]:ReturnStatement[54364-54386]"
  }, {
    "left" : "@Nullable",
    "right" : "@Nullable",
    "info" : "MarkerAnnotation[53474-53483]:MarkerAnnotation[54394-54403]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[53486-53493]:Modifier[54406-54413]"
  }, {
    "left" : "TaskStatus",
    "right" : "TaskStatus",
    "info" : "SimpleType[53494-53504]:SimpleType[54414-54424]"
  }, {
    "left" : "getTaskStatus",
    "right" : "getTaskStatus",
    "info" : "SimpleName[53505-53518]:SimpleName[54425-54438]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[53519-53547]:SingleVariableDeclaration[54439-54467]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[53549-53566]:SingleVariableDeclaration[54469-54486]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[53603-53620]:SingleVariableDeclaration[54523-54540]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53622-54071]:Block[54542-54991]"
  }, {
    "left" : "final String containerPath = Paths.statusHostJob(host, jobId);",
    "right" : "final String containerPath = Paths.statusHostJob(host, jobId);",
    "info" : "VariableDeclarationStatement[53628-53690]:VariableDeclarationStatement[54548-54610]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[53695-54067]:TryStatement[54615-54987]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53699-53807]:Block[54619-54727]"
  }, {
    "left" : "final byte[] data = client.getData(containerPath);",
    "right" : "final byte[] data = client.getData(containerPath);",
    "info" : "VariableDeclarationStatement[53707-53757]:VariableDeclarationStatement[54627-54677]"
  }, {
    "left" : "return parse(data, TaskStatus.class);",
    "right" : "return parse(data, TaskStatus.class);",
    "info" : "ReturnStatement[53764-53801]:ReturnStatement[54684-54721]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53840-53866]:Block[54760-54786]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[53848-53860]:ReturnStatement[54768-54780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[53907-54067]:Block[54827-54987]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"Getting task \" + jobId + \" status \" +\n                                       \"for host \" + host + \" failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"Getting task \" + jobId + \" status \" +\n                                       \"for host \" + host + \" failed\", e);",
    "info" : "ThrowStatement[53915-54061]:ThrowStatement[54835-54981]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[54075-54082]:Modifier[54995-55002]"
  }, {
    "left" : "Map<JobId, Deployment>",
    "right" : "Map<JobId, Deployment>",
    "info" : "ParameterizedType[54083-54105]:ParameterizedType[55003-55025]"
  }, {
    "left" : "getTasks",
    "right" : "getTasks",
    "info" : "SimpleName[54106-54114]:SimpleName[55026-55034]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[54115-54143]:SingleVariableDeclaration[55035-55063]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[54145-54162]:SingleVariableDeclaration[55065-55082]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54164-55263]:Block[55084-56183]"
  }, {
    "left" : "final Map<JobId, Deployment> jobs = Maps.newHashMap();",
    "right" : "final Map<JobId, Deployment> jobs = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[54170-54224]:VariableDeclarationStatement[55090-55144]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[54229-55241]:TryStatement[55149-56161]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54233-55114]:Block[55153-56034]"
  }, {
    "left" : "final String folder = Paths.configHostJobs(host);",
    "right" : "final String folder = Paths.configHostJobs(host);",
    "info" : "VariableDeclarationStatement[54241-54290]:VariableDeclarationStatement[55161-55210]"
  }, {
    "left" : "final List<String> jobIds;",
    "right" : "final List<String> jobIds;",
    "info" : "VariableDeclarationStatement[54297-54323]:VariableDeclarationStatement[55217-55243]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[54330-54461]:TryStatement[55250-55381]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54334-54388]:Block[55254-55308]"
  }, {
    "left" : "jobIds = client.getChildren(folder);",
    "right" : "jobIds = client.getChildren(folder);",
    "info" : "ExpressionStatement[54344-54380]:ExpressionStatement[55264-55300]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54431-54461]:Block[55351-55381]"
  }, {
    "left" : "return null;",
    "right" : "return null;",
    "info" : "ReturnStatement[54441-54453]:ReturnStatement[55361-55373]"
  }, {
    "left" : "for (final String jobIdString : jobIds)",
    "right" : "for (final String jobIdString : jobIds)",
    "info" : "EnhancedForStatement[54469-55108]:EnhancedForStatement[55389-56028]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54509-55108]:Block[55429-56028]"
  }, {
    "left" : "final JobId jobId = JobId.fromString(jobIdString);",
    "right" : "final JobId jobId = JobId.fromString(jobIdString);",
    "info" : "VariableDeclarationStatement[54519-54569]:VariableDeclarationStatement[55439-55489]"
  }, {
    "left" : "final String containerPath = Paths.configHostJob(host, jobId);",
    "right" : "final String containerPath = Paths.configHostJob(host, jobId);",
    "info" : "VariableDeclarationStatement[54578-54640]:VariableDeclarationStatement[55498-55560]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[54649-55100]:TryStatement[55569-56020]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[54653-54964]:Block[55573-55884]"
  }, {
    "left" : "final byte[] data = client.getData(containerPath);",
    "right" : "final byte[] data = client.getData(containerPath);",
    "info" : "VariableDeclarationStatement[54665-54715]:VariableDeclarationStatement[55585-55635]"
  }, {
    "left" : "final Task task = parse(data, Task.class);",
    "right" : "final Task task = parse(data, Task.class);",
    "info" : "VariableDeclarationStatement[54726-54768]:VariableDeclarationStatement[55646-55688]"
  }, {
    "left" : "jobs.put(jobId, Deployment.of(jobId, task.getGoal(), task.getDeployerUser(),\n                                        task.getDeployerMaster(), task.getDeploymentGroupName()));",
    "right" : "jobs.put(jobId, Deployment.of(jobId, task.getGoal(), task.getDeployerUser(),\n                                        task.getDeployerMaster(), task.getDeploymentGroupName()));",
    "info" : "ExpressionStatement[54779-54954]:ExpressionStatement[55699-55874]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55013-55100]:Block[55933-56020]"
  }, {
    "left" : "log.debug(\"deployment config node disappeared: {}\", jobIdString);",
    "right" : "log.debug(\"deployment config node disappeared: {}\", jobIdString);",
    "info" : "ExpressionStatement[55025-55090]:ExpressionStatement[55945-56010]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55155-55241]:Block[56075-56161]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"getting deployment config failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"getting deployment config failed\", e);",
    "info" : "ThrowStatement[55163-55235]:ThrowStatement[56083-56155]"
  }, {
    "left" : "return jobs;",
    "right" : "return jobs;",
    "info" : "ReturnStatement[55247-55259]:ReturnStatement[56167-56179]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[55267-55276]:MarkerAnnotation[56187-56196]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55279-55285]:Modifier[56199-56205]"
  }, {
    "left" : "Deployment",
    "right" : "Deployment",
    "info" : "SimpleType[55286-55296]:SimpleType[56206-56216]"
  }, {
    "left" : "undeployJob",
    "right" : "undeployJob",
    "info" : "SimpleName[55297-55308]:SimpleName[56217-56228]"
  }, {
    "left" : "String host",
    "right" : "String host",
    "info" : "SingleVariableDeclaration[55309-55320]:SingleVariableDeclaration[56229-56240]"
  }, {
    "left" : "JobId jobId",
    "right" : "JobId jobId",
    "info" : "SingleVariableDeclaration[55322-55333]:SingleVariableDeclaration[56242-56253]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[55348-55369]:SimpleType[56268-56289]"
  }, {
    "left" : "JobNotDeployedException",
    "right" : "JobNotDeployedException",
    "info" : "SimpleType[55371-55394]:SimpleType[56291-56314]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55395-55554]:Block[56315-56474]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[55401-55550]:TryStatement[56321-56470]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55405-55468]:Block[56325-56388]"
  }, {
    "left" : "return undeployJob(host, jobId, Job.EMPTY_TOKEN);",
    "right" : "return undeployJob(host, jobId, Job.EMPTY_TOKEN);",
    "info" : "ReturnStatement[55413-55462]:ReturnStatement[56333-56382]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55506-55550]:Block[56426-56470]"
  }, {
    "left" : "throw Throwables.propagate(e);",
    "right" : "throw Throwables.propagate(e);",
    "info" : "ThrowStatement[55514-55544]:ThrowStatement[56434-56464]"
  }, {
    "left" : "/**\n   * Undeploys the job specified by {@code jobId} on {@code host}.\n   */",
    "right" : "/**\n   * Undeploys the job specified by {@code jobId} on {@code host}.\n   */",
    "info" : "Javadoc[55558-55634]:Javadoc[56478-56554]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[55637-55646]:MarkerAnnotation[56557-56566]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[55649-55655]:Modifier[56569-56575]"
  }, {
    "left" : "Deployment",
    "right" : "Deployment",
    "info" : "SimpleType[55656-55666]:SimpleType[56576-56586]"
  }, {
    "left" : "undeployJob",
    "right" : "undeployJob",
    "info" : "SimpleName[55667-55678]:SimpleName[56587-56598]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[55679-55696]:SingleVariableDeclaration[56599-56616]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[55698-55715]:SingleVariableDeclaration[56618-56635]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[55717-55735]:SingleVariableDeclaration[56637-56655]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[55750-55771]:SimpleType[56670-56691]"
  }, {
    "left" : "JobNotDeployedException",
    "right" : "JobNotDeployedException",
    "info" : "SimpleType[55773-55796]:SimpleType[56693-56716]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[55798-55824]:SimpleType[56718-56744]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[55825-57211]:Block[56745-58131]"
  }, {
    "left" : "log.info(\"undeploying {}: {}\", jobId, host);",
    "right" : "log.info(\"undeploying {}: {}\", jobId, host);",
    "info" : "ExpressionStatement[55831-55875]:ExpressionStatement[56751-56795]"
  }, {
    "left" : "final ZooKeeperClient client = provider.get(\"undeployJob\");",
    "right" : "final ZooKeeperClient client = provider.get(\"undeployJob\");",
    "info" : "VariableDeclarationStatement[55880-55939]:VariableDeclarationStatement[56800-56859]"
  }, {
    "left" : "assertHostExists(client, host);",
    "right" : "assertHostExists(client, host);",
    "info" : "ExpressionStatement[55945-55976]:ExpressionStatement[56865-56896]"
  }, {
    "left" : "final Deployment deployment = getDeployment(host, jobId);",
    "right" : "final Deployment deployment = getDeployment(host, jobId);",
    "info" : "VariableDeclarationStatement[55982-56039]:VariableDeclarationStatement[56902-56959]"
  }, {
    "left" : "if (deployment == null)",
    "right" : "if (deployment == null)",
    "info" : "IfStatement[56044-56129]:IfStatement[56964-57049]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56068-56129]:Block[56988-57049]"
  }, {
    "left" : "throw new JobNotDeployedException(host, jobId);",
    "right" : "throw new JobNotDeployedException(host, jobId);",
    "info" : "ThrowStatement[56076-56123]:ThrowStatement[56996-57043]"
  }, {
    "left" : "final Job job = getJob(client, jobId);",
    "right" : "final Job job = getJob(client, jobId);",
    "info" : "VariableDeclarationStatement[56135-56173]:VariableDeclarationStatement[57055-57093]"
  }, {
    "left" : "verifyToken(token, job);",
    "right" : "verifyToken(token, job);",
    "info" : "ExpressionStatement[56178-56202]:ExpressionStatement[57098-57122]"
  }, {
    "left" : "final String configHostJobPath = Paths.configHostJob(host, jobId);",
    "right" : "final String configHostJobPath = Paths.configHostJob(host, jobId);",
    "info" : "VariableDeclarationStatement[56207-56273]:VariableDeclarationStatement[57127-57193]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[56279-57184]:TryStatement[57199-58104]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56283-56719]:Block[57203-57639]"
  }, {
    "left" : "final List<String> nodes = newArrayList(reverse(client.listRecursive(configHostJobPath)));",
    "right" : "final List<String> nodes = newArrayList(reverse(client.listRecursive(configHostJobPath)));",
    "info" : "VariableDeclarationStatement[56370-56460]:VariableDeclarationStatement[57290-57380]"
  }, {
    "left" : "nodes.add(Paths.configJobHost(jobId, host));",
    "right" : "nodes.add(Paths.configJobHost(jobId, host));",
    "info" : "ExpressionStatement[56467-56511]:ExpressionStatement[57387-57431]"
  }, {
    "left" : "final List<Integer> staticPorts = staticPorts(job);",
    "right" : "final List<Integer> staticPorts = staticPorts(job);",
    "info" : "VariableDeclarationStatement[56519-56570]:VariableDeclarationStatement[57439-57490]"
  }, {
    "left" : "for (int port : staticPorts)",
    "right" : "for (int port : staticPorts)",
    "info" : "EnhancedForStatement[56577-56670]:EnhancedForStatement[57497-57590]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56606-56670]:Block[57526-57590]"
  }, {
    "left" : "nodes.add(Paths.configHostPort(host, port));",
    "right" : "nodes.add(Paths.configHostPort(host, port));",
    "info" : "ExpressionStatement[56618-56662]:ExpressionStatement[57538-57582]"
  }, {
    "left" : "client.transaction(delete(nodes));",
    "right" : "client.transaction(delete(nodes));",
    "info" : "ExpressionStatement[56678-56712]:ExpressionStatement[57598-57632]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[56746-57077]:Block[57666-57997]"
  }, {
    "left" : "throw new JobNotDeployedException(host, jobId);",
    "right" : "throw new JobNotDeployedException(host, jobId);",
    "info" : "ThrowStatement[57024-57071]:ThrowStatement[57944-57991]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57104-57184]:Block[58024-58104]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"Removing deployment failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"Removing deployment failed\", e);",
    "info" : "ThrowStatement[57112-57178]:ThrowStatement[58032-58098]"
  }, {
    "left" : "return deployment;",
    "right" : "return deployment;",
    "info" : "ReturnStatement[57189-57207]:ReturnStatement[58109-58127]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[57215-57222]:Modifier[58135-58142]"
  }, {
    "left" : "List<ZooKeeperOperation>",
    "right" : "List<ZooKeeperOperation>",
    "info" : "ParameterizedType[57223-57247]:ParameterizedType[58143-58167]"
  }, {
    "left" : "getUndeployOperations",
    "right" : "getUndeployOperations",
    "info" : "SimpleName[57248-57269]:SimpleName[58168-58189]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[57270-57298]:SingleVariableDeclaration[58190-58218]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[57356-57373]:SingleVariableDeclaration[58276-58293]"
  }, {
    "left" : "final JobId jobId",
    "right" : "final JobId jobId",
    "info" : "SingleVariableDeclaration[57375-57392]:SingleVariableDeclaration[58295-58312]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[57450-57468]:SingleVariableDeclaration[58370-58388]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[57483-57504]:SimpleType[58403-58424]"
  }, {
    "left" : "JobNotDeployedException",
    "right" : "JobNotDeployedException",
    "info" : "SimpleType[57506-57529]:SimpleType[58426-58449]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[57531-57557]:SimpleType[58451-58477]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57558-58822]:Block[58478-59742]"
  }, {
    "left" : "assertHostExists(client, host);",
    "right" : "assertHostExists(client, host);",
    "info" : "ExpressionStatement[57564-57595]:ExpressionStatement[58484-58515]"
  }, {
    "left" : "final Deployment deployment = getDeployment(host, jobId);",
    "right" : "final Deployment deployment = getDeployment(host, jobId);",
    "info" : "VariableDeclarationStatement[57601-57658]:VariableDeclarationStatement[58521-58578]"
  }, {
    "left" : "if (deployment == null)",
    "right" : "if (deployment == null)",
    "info" : "IfStatement[57663-57748]:IfStatement[58583-58668]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57687-57748]:Block[58607-58668]"
  }, {
    "left" : "throw new JobNotDeployedException(host, jobId);",
    "right" : "throw new JobNotDeployedException(host, jobId);",
    "info" : "ThrowStatement[57695-57742]:ThrowStatement[58615-58662]"
  }, {
    "left" : "final Job job = getJob(client, jobId);",
    "right" : "final Job job = getJob(client, jobId);",
    "info" : "VariableDeclarationStatement[57754-57792]:VariableDeclarationStatement[58674-58712]"
  }, {
    "left" : "verifyToken(token, job);",
    "right" : "verifyToken(token, job);",
    "info" : "ExpressionStatement[57797-57821]:ExpressionStatement[58717-58741]"
  }, {
    "left" : "final String configHostJobPath = Paths.configHostJob(host, jobId);",
    "right" : "final String configHostJobPath = Paths.configHostJob(host, jobId);",
    "info" : "VariableDeclarationStatement[57826-57892]:VariableDeclarationStatement[58746-58812]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[57898-58818]:TryStatement[58818-59738]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[57902-58341]:Block[58822-59261]"
  }, {
    "left" : "final List<String> nodes = newArrayList(reverse(client.listRecursive(configHostJobPath)));",
    "right" : "final List<String> nodes = newArrayList(reverse(client.listRecursive(configHostJobPath)));",
    "info" : "VariableDeclarationStatement[57989-58079]:VariableDeclarationStatement[58909-58999]"
  }, {
    "left" : "nodes.add(Paths.configJobHost(jobId, host));",
    "right" : "nodes.add(Paths.configJobHost(jobId, host));",
    "info" : "ExpressionStatement[58086-58130]:ExpressionStatement[59006-59050]"
  }, {
    "left" : "final List<Integer> staticPorts = staticPorts(job);",
    "right" : "final List<Integer> staticPorts = staticPorts(job);",
    "info" : "VariableDeclarationStatement[58138-58189]:VariableDeclarationStatement[59058-59109]"
  }, {
    "left" : "for (int port : staticPorts)",
    "right" : "for (int port : staticPorts)",
    "info" : "EnhancedForStatement[58196-58287]:EnhancedForStatement[59116-59207]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58225-58287]:Block[59145-59207]"
  }, {
    "left" : "nodes.add(Paths.configHostPort(host, port));",
    "right" : "nodes.add(Paths.configHostPort(host, port));",
    "info" : "ExpressionStatement[58235-58279]:ExpressionStatement[59155-59199]"
  }, {
    "left" : "return ImmutableList.of(delete(nodes));",
    "right" : "return ImmutableList.of(delete(nodes));",
    "info" : "ReturnStatement[58295-58334]:ReturnStatement[59215-59254]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58368-58699]:Block[59288-59619]"
  }, {
    "left" : "throw new JobNotDeployedException(host, jobId);",
    "right" : "throw new JobNotDeployedException(host, jobId);",
    "info" : "ThrowStatement[58646-58693]:ThrowStatement[59566-59613]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[58726-58818]:Block[59646-59738]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"calculating undeploy operations failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"calculating undeploy operations failed\", e);",
    "info" : "ThrowStatement[58734-58812]:ThrowStatement[59654-59732]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[58826-58833]:Modifier[59746-59753]"
  }, {
    "left" : "List<ZooKeeperOperation>",
    "right" : "List<ZooKeeperOperation>",
    "info" : "ParameterizedType[58834-58858]:ParameterizedType[59754-59778]"
  }, {
    "left" : "getDeployOperations",
    "right" : "getDeployOperations",
    "info" : "SimpleName[58859-58878]:SimpleName[59779-59798]"
  }, {
    "left" : "final ZooKeeperClient client",
    "right" : "final ZooKeeperClient client",
    "info" : "SingleVariableDeclaration[58879-58907]:SingleVariableDeclaration[59799-59827]"
  }, {
    "left" : "final String host",
    "right" : "final String host",
    "info" : "SingleVariableDeclaration[58964-58981]:SingleVariableDeclaration[59884-59901]"
  }, {
    "left" : "final Deployment deployment",
    "right" : "final Deployment deployment",
    "info" : "SingleVariableDeclaration[59038-59065]:SingleVariableDeclaration[59958-59985]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[59122-59140]:SingleVariableDeclaration[60042-60060]"
  }, {
    "left" : "JobDoesNotExistException",
    "right" : "JobDoesNotExistException",
    "info" : "SimpleType[59155-59179]:SimpleType[60075-60099]"
  }, {
    "left" : "JobAlreadyDeployedException",
    "right" : "JobAlreadyDeployedException",
    "info" : "SimpleType[59181-59208]:SimpleType[60101-60128]"
  }, {
    "left" : "HostNotFoundException",
    "right" : "HostNotFoundException",
    "info" : "SimpleType[59210-59231]:SimpleType[60130-60151]"
  }, {
    "left" : "JobPortAllocationConflictException",
    "right" : "JobPortAllocationConflictException",
    "info" : "SimpleType[59246-59280]:SimpleType[60166-60200]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[59282-59308]:SimpleType[60202-60228]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59309-60883]:Block[60229-61803]"
  }, {
    "left" : "final JobId id = deployment.getJobId();",
    "right" : "final JobId id = deployment.getJobId();",
    "info" : "VariableDeclarationStatement[59315-59354]:VariableDeclarationStatement[60235-60274]"
  }, {
    "left" : "final Job job = getJob(id);",
    "right" : "final Job job = getJob(id);",
    "info" : "VariableDeclarationStatement[59359-59386]:VariableDeclarationStatement[60279-60306]"
  }, {
    "left" : "if (job == null)",
    "right" : "if (job == null)",
    "info" : "IfStatement[59392-59462]:IfStatement[60312-60382]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59409-59462]:Block[60329-60382]"
  }, {
    "left" : "throw new JobDoesNotExistException(id);",
    "right" : "throw new JobDoesNotExistException(id);",
    "info" : "ThrowStatement[59417-59456]:ThrowStatement[60337-60376]"
  }, {
    "left" : "verifyToken(token, job);",
    "right" : "verifyToken(token, job);",
    "info" : "ExpressionStatement[59467-59491]:ExpressionStatement[60387-60411]"
  }, {
    "left" : "final UUID operationId = UUID.randomUUID();",
    "right" : "final UUID operationId = UUID.randomUUID();",
    "info" : "VariableDeclarationStatement[59497-59540]:VariableDeclarationStatement[60417-60460]"
  }, {
    "left" : "final String jobPath = Paths.configJob(id);",
    "right" : "final String jobPath = Paths.configJob(id);",
    "info" : "VariableDeclarationStatement[59545-59588]:VariableDeclarationStatement[60465-60508]"
  }, {
    "left" : "final String taskPath = Paths.configHostJob(host, id);",
    "right" : "final String taskPath = Paths.configHostJob(host, id);",
    "info" : "VariableDeclarationStatement[59593-59647]:VariableDeclarationStatement[60513-60567]"
  }, {
    "left" : "final String taskCreationPath = Paths.configHostJobCreation(host, id, operationId);",
    "right" : "final String taskCreationPath = Paths.configHostJobCreation(host, id, operationId);",
    "info" : "VariableDeclarationStatement[59652-59735]:VariableDeclarationStatement[60572-60655]"
  }, {
    "left" : "final List<Integer> staticPorts = staticPorts(job);",
    "right" : "final List<Integer> staticPorts = staticPorts(job);",
    "info" : "VariableDeclarationStatement[59741-59792]:VariableDeclarationStatement[60661-60712]"
  }, {
    "left" : "final Map<String, byte[]> portNodes = Maps.newHashMap();",
    "right" : "final Map<String, byte[]> portNodes = Maps.newHashMap();",
    "info" : "VariableDeclarationStatement[59797-59853]:VariableDeclarationStatement[60717-60773]"
  }, {
    "left" : "final byte[] idJson = id.toJsonBytes();",
    "right" : "final byte[] idJson = id.toJsonBytes();",
    "info" : "VariableDeclarationStatement[59858-59897]:VariableDeclarationStatement[60778-60817]"
  }, {
    "left" : "for (final int port : staticPorts)",
    "right" : "for (final int port : staticPorts)",
    "info" : "EnhancedForStatement[59902-60039]:EnhancedForStatement[60822-60959]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[59937-60039]:Block[60857-60959]"
  }, {
    "left" : "final String path = Paths.configHostPort(host, port);",
    "right" : "final String path = Paths.configHostPort(host, port);",
    "info" : "VariableDeclarationStatement[59945-59998]:VariableDeclarationStatement[60865-60918]"
  }, {
    "left" : "portNodes.put(path, idJson);",
    "right" : "portNodes.put(path, idJson);",
    "info" : "ExpressionStatement[60005-60033]:ExpressionStatement[60925-60953]"
  }, {
    "left" : "final Task task = new Task(job, deployment.getGoal(), deployment.getDeployerUser(),\n                               deployment.getDeployerMaster(), deployment.getDeploymentGroupName());",
    "right" : "final Task task = new Task(job, deployment.getGoal(), deployment.getDeployerUser(),\n                               deployment.getDeployerMaster(), deployment.getDeploymentGroupName());",
    "info" : "VariableDeclarationStatement[60045-60229]:VariableDeclarationStatement[60965-61149]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations = Lists.newArrayList(\n        check(jobPath),\n        create(portNodes),\n        create(Paths.configJobHost(id, host)));",
    "right" : "final List<ZooKeeperOperation> operations = Lists.newArrayList(\n        check(jobPath),\n        create(portNodes),\n        create(Paths.configJobHost(id, host)));",
    "info" : "VariableDeclarationStatement[60234-60396]:VariableDeclarationStatement[61154-61316]"
  }, {
    "left" : "try{...}",
    "right" : "try{...}",
    "info" : "TryStatement[60438-60833]:TryStatement[61358-61753]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60442-60584]:Block[61362-61504]"
  }, {
    "left" : "client.getNode(taskPath);",
    "right" : "client.getNode(taskPath);",
    "info" : "ExpressionStatement[60450-60475]:ExpressionStatement[61370-61395]"
  }, {
    "left" : "throw new JobAlreadyDeployedException(host, id);",
    "right" : "throw new JobAlreadyDeployedException(host, id);",
    "info" : "ThrowStatement[60530-60578]:ThrowStatement[61450-61498]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60611-60712]:Block[61531-61632]"
  }, {
    "left" : "operations.add(create(taskPath, task));",
    "right" : "operations.add(create(taskPath, task));",
    "info" : "ExpressionStatement[60619-60658]:ExpressionStatement[61539-61578]"
  }, {
    "left" : "operations.add(create(taskCreationPath));",
    "right" : "operations.add(create(taskCreationPath));",
    "info" : "ExpressionStatement[60665-60706]:ExpressionStatement[61585-61626]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60739-60833]:Block[61659-61753]"
  }, {
    "left" : "throw new HeliosRuntimeException(\"reading existing task description failed\", e);",
    "right" : "throw new HeliosRuntimeException(\"reading existing task description failed\", e);",
    "info" : "ThrowStatement[60747-60827]:ThrowStatement[61667-61747]"
  }, {
    "left" : "return ImmutableList.copyOf(operations);",
    "right" : "return ImmutableList.copyOf(operations);",
    "info" : "ReturnStatement[60839-60879]:ReturnStatement[61759-61799]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[60887-60894]:Modifier[61807-61814]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[60895-60901]:Modifier[61815-61821]"
  }, {
    "left" : "void",
    "right" : "void",
    "info" : "PrimitiveType[60902-60906]:PrimitiveType[61822-61826]"
  }, {
    "left" : "verifyToken",
    "right" : "verifyToken",
    "info" : "SimpleName[60907-60918]:SimpleName[61827-61838]"
  }, {
    "left" : "final String token",
    "right" : "final String token",
    "info" : "SingleVariableDeclaration[60919-60937]:SingleVariableDeclaration[61839-61857]"
  }, {
    "left" : "final Job job",
    "right" : "final Job job",
    "info" : "SingleVariableDeclaration[60939-60952]:SingleVariableDeclaration[61859-61872]"
  }, {
    "left" : "TokenVerificationException",
    "right" : "TokenVerificationException",
    "info" : "SimpleType[60967-60993]:SimpleType[61887-61913]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[60994-61137]:Block[61914-62057]"
  }, {
    "left" : "checkNotNull(token, \"token\");",
    "right" : "checkNotNull(token, \"token\");",
    "info" : "ExpressionStatement[61000-61029]:ExpressionStatement[61920-61949]"
  }, {
    "left" : "if (!token.equals(job.getToken()))",
    "right" : "if (!token.equals(job.getToken()))",
    "info" : "IfStatement[61034-61133]:IfStatement[61954-62053]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61069-61133]:Block[61989-62053]"
  }, {
    "left" : "throw new TokenVerificationException(job.getId());",
    "right" : "throw new TokenVerificationException(job.getId());",
    "info" : "ThrowStatement[61077-61127]:ThrowStatement[61997-62047]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[61484-61493]:MarkerAnnotation[62404-62413]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61498-61504]:Modifier[62418-62424]"
  }, {
    "left" : "boolean",
    "right" : "boolean",
    "info" : "PrimitiveType[61505-61512]:PrimitiveType[62425-62432]"
  }, {
    "left" : "equals",
    "right" : "equals",
    "info" : "SimpleName[61513-61519]:SimpleName[62433-62439]"
  }, {
    "left" : "Object o",
    "right" : "Object o",
    "info" : "SingleVariableDeclaration[61520-61528]:SingleVariableDeclaration[62440-62448]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61530-61947]:Block[62450-62867]"
  }, {
    "left" : "if (this == o)",
    "right" : "if (this == o)",
    "info" : "IfStatement[61538-61583]:IfStatement[62458-62503]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61553-61583]:Block[62473-62503]"
  }, {
    "left" : "return true;",
    "right" : "return true;",
    "info" : "ReturnStatement[61563-61575]:ReturnStatement[62483-62495]"
  }, {
    "left" : "if (o == null || getClass() != o.getClass())",
    "right" : "if (o == null || getClass() != o.getClass())",
    "info" : "IfStatement[61590-61666]:IfStatement[62510-62586]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61635-61666]:Block[62555-62586]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[61645-61658]:ReturnStatement[62565-62578]"
  }, {
    "left" : "RollingUpdateTaskResult that = (RollingUpdateTaskResult) o;",
    "right" : "RollingUpdateTaskResult that = (RollingUpdateTaskResult) o;",
    "info" : "VariableDeclarationStatement[61674-61733]:VariableDeclarationStatement[62594-62653]"
  }, {
    "left" : "if (operations != null ? !operations.equals(that.operations) : that.operations != null)",
    "right" : "if (operations != null ? !operations.equals(that.operations) : that.operations != null)",
    "info" : "IfStatement[61741-61860]:IfStatement[62661-62780]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61829-61860]:Block[62749-62780]"
  }, {
    "left" : "return false;",
    "right" : "return false;",
    "info" : "ReturnStatement[61839-61852]:ReturnStatement[62759-62772]"
  }, {
    "left" : "return !(error != null ? !error.equals(that.error) : that.error != null);",
    "right" : "return !(error != null ? !error.equals(that.error) : that.error != null);",
    "info" : "ReturnStatement[61867-61940]:ReturnStatement[62787-62860]"
  }, {
    "left" : "@Override",
    "right" : "@Override",
    "info" : "MarkerAnnotation[61953-61962]:MarkerAnnotation[62873-62882]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[61967-61973]:Modifier[62887-62893]"
  }, {
    "left" : "int",
    "right" : "int",
    "info" : "PrimitiveType[61974-61977]:PrimitiveType[62894-62897]"
  }, {
    "left" : "hashCode",
    "right" : "hashCode",
    "info" : "SimpleName[61978-61986]:SimpleName[62898-62906]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[61989-62153]:Block[62909-63073]"
  }, {
    "left" : "int result = operations != null ? operations.hashCode() : 0;",
    "right" : "int result = operations != null ? operations.hashCode() : 0;",
    "info" : "VariableDeclarationStatement[61997-62057]:VariableDeclarationStatement[62917-62977]"
  }, {
    "left" : "result = 31 * result + (error != null ? error.hashCode() : 0);",
    "right" : "result = 31 * result + (error != null ? error.hashCode() : 0);",
    "info" : "ExpressionStatement[62064-62126]:ExpressionStatement[62984-63046]"
  }, {
    "left" : "return result;",
    "right" : "return result;",
    "info" : "ReturnStatement[62133-62147]:ReturnStatement[63053-63067]"
  }, {
    "left" : "private",
    "right" : "private",
    "info" : "Modifier[62159-62166]:Modifier[63079-63086]"
  }, {
    "left" : "RollingUpdateTaskResult",
    "right" : "RollingUpdateTaskResult",
    "info" : "SimpleName[62167-62190]:SimpleName[63087-63110]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations",
    "right" : "final List<ZooKeeperOperation> operations",
    "info" : "SingleVariableDeclaration[62191-62232]:SingleVariableDeclaration[63111-63152]"
  }, {
    "left" : "final Exception error",
    "right" : "final Exception error",
    "info" : "SingleVariableDeclaration[62270-62291]:SingleVariableDeclaration[63190-63211]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62293-62362]:Block[63213-63282]"
  }, {
    "left" : "this.operations = operations;",
    "right" : "this.operations = operations;",
    "info" : "ExpressionStatement[62301-62330]:ExpressionStatement[63221-63250]"
  }, {
    "left" : "this.error = error;",
    "right" : "this.error = error;",
    "info" : "ExpressionStatement[62337-62356]:ExpressionStatement[63257-63276]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62368-62374]:Modifier[63288-63294]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[62375-62381]:Modifier[63295-63301]"
  }, {
    "left" : "RollingUpdateTaskResult",
    "right" : "RollingUpdateTaskResult",
    "info" : "SimpleType[62382-62405]:SimpleType[63302-63325]"
  }, {
    "left" : "of",
    "right" : "of",
    "info" : "SimpleName[62406-62408]:SimpleName[63326-63328]"
  }, {
    "left" : "final List<ZooKeeperOperation> operations",
    "right" : "final List<ZooKeeperOperation> operations",
    "info" : "SingleVariableDeclaration[62409-62450]:SingleVariableDeclaration[63329-63370]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62452-62519]:Block[63372-63439]"
  }, {
    "left" : "return new RollingUpdateTaskResult(operations, null);",
    "right" : "return new RollingUpdateTaskResult(operations, null);",
    "info" : "ReturnStatement[62460-62513]:ReturnStatement[63380-63433]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62525-62531]:Modifier[63445-63451]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[62532-62538]:Modifier[63452-63458]"
  }, {
    "left" : "RollingUpdateTaskResult",
    "right" : "RollingUpdateTaskResult",
    "info" : "SimpleType[62539-62562]:SimpleType[63459-63482]"
  }, {
    "left" : "error",
    "right" : "error",
    "info" : "SimpleName[62563-62568]:SimpleName[63483-63488]"
  }, {
    "left" : "final Exception error",
    "right" : "final Exception error",
    "info" : "SingleVariableDeclaration[62569-62590]:SingleVariableDeclaration[63489-63510]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62592-62654]:Block[63512-63574]"
  }, {
    "left" : "return new RollingUpdateTaskResult(null, error);",
    "right" : "return new RollingUpdateTaskResult(null, error);",
    "info" : "ReturnStatement[62600-62648]:ReturnStatement[63520-63568]"
  }, {
    "left" : "public",
    "right" : "public",
    "info" : "Modifier[62660-62666]:Modifier[63580-63586]"
  }, {
    "left" : "static",
    "right" : "static",
    "info" : "Modifier[62667-62673]:Modifier[63587-63593]"
  }, {
    "left" : "RollingUpdateTaskResult",
    "right" : "RollingUpdateTaskResult",
    "info" : "SimpleType[62674-62697]:SimpleType[63594-63617]"
  }, {
    "left" : "error",
    "right" : "error",
    "info" : "SimpleName[62698-62703]:SimpleName[63618-63623]"
  }, {
    "left" : "final String error",
    "right" : "final String error",
    "info" : "SingleVariableDeclaration[62704-62722]:SingleVariableDeclaration[63624-63642]"
  }, {
    "left" : "{}",
    "right" : "{}",
    "info" : "Block[62724-62814]:Block[63644-63734]"
  }, {
    "left" : "return new RollingUpdateTaskResult(null, new HeliosRuntimeException(error));",
    "right" : "return new RollingUpdateTaskResult(null, new HeliosRuntimeException(error));",
    "info" : "ReturnStatement[62732-62808]:ReturnStatement[63652-63728]"
  } ]
}